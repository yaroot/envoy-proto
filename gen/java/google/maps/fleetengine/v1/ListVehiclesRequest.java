// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: google/maps/fleetengine/v1/vehicle_api.proto

package google.maps.fleetengine.v1;

/**
 * <pre>
 * `ListVehicles` request message.
 * </pre>
 *
 * Protobuf type {@code maps.fleetengine.v1.ListVehiclesRequest}
 */
public final class ListVehiclesRequest extends
    com.google.protobuf.GeneratedMessageV3 implements
    // @@protoc_insertion_point(message_implements:maps.fleetengine.v1.ListVehiclesRequest)
    ListVehiclesRequestOrBuilder {
private static final long serialVersionUID = 0L;
  // Use ListVehiclesRequest.newBuilder() to construct.
  private ListVehiclesRequest(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
    super(builder);
  }
  private ListVehiclesRequest() {
    parent_ = "";
    pageToken_ = "";
    tripTypes_ = java.util.Collections.emptyList();
    vehicleTypeCategories_ = java.util.Collections.emptyList();
    requiredAttributes_ = com.google.protobuf.LazyStringArrayList.EMPTY;
    requiredOneOfAttributes_ = com.google.protobuf.LazyStringArrayList.EMPTY;
    requiredOneOfAttributeSets_ = com.google.protobuf.LazyStringArrayList.EMPTY;
    vehicleState_ = 0;
  }

  @java.lang.Override
  @SuppressWarnings({"unused"})
  protected java.lang.Object newInstance(
      UnusedPrivateParameter unused) {
    return new ListVehiclesRequest();
  }

  @java.lang.Override
  public final com.google.protobuf.UnknownFieldSet
  getUnknownFields() {
    return this.unknownFields;
  }
  public static final com.google.protobuf.Descriptors.Descriptor
      getDescriptor() {
    return google.maps.fleetengine.v1.VehicleApi.internal_static_maps_fleetengine_v1_ListVehiclesRequest_descriptor;
  }

  @java.lang.Override
  protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internalGetFieldAccessorTable() {
    return google.maps.fleetengine.v1.VehicleApi.internal_static_maps_fleetengine_v1_ListVehiclesRequest_fieldAccessorTable
        .ensureFieldAccessorsInitialized(
            google.maps.fleetengine.v1.ListVehiclesRequest.class, google.maps.fleetengine.v1.ListVehiclesRequest.Builder.class);
  }

  public static final int HEADER_FIELD_NUMBER = 12;
  private google.maps.fleetengine.v1.RequestHeader header_;
  /**
   * <pre>
   * The standard Fleet Engine request header.
   * </pre>
   *
   * <code>.maps.fleetengine.v1.RequestHeader header = 12;</code>
   * @return Whether the header field is set.
   */
  @java.lang.Override
  public boolean hasHeader() {
    return header_ != null;
  }
  /**
   * <pre>
   * The standard Fleet Engine request header.
   * </pre>
   *
   * <code>.maps.fleetengine.v1.RequestHeader header = 12;</code>
   * @return The header.
   */
  @java.lang.Override
  public google.maps.fleetengine.v1.RequestHeader getHeader() {
    return header_ == null ? google.maps.fleetengine.v1.RequestHeader.getDefaultInstance() : header_;
  }
  /**
   * <pre>
   * The standard Fleet Engine request header.
   * </pre>
   *
   * <code>.maps.fleetengine.v1.RequestHeader header = 12;</code>
   */
  @java.lang.Override
  public google.maps.fleetengine.v1.RequestHeaderOrBuilder getHeaderOrBuilder() {
    return header_ == null ? google.maps.fleetengine.v1.RequestHeader.getDefaultInstance() : header_;
  }

  public static final int PARENT_FIELD_NUMBER = 1;
  @SuppressWarnings("serial")
  private volatile java.lang.Object parent_ = "";
  /**
   * <pre>
   * Required. Must be in the format `providers/{provider}`.
   * The provider must be the Project ID (for example, `sample-cloud-project`)
   * of the Google Cloud Project of which the service account making
   * this call is a member.
   * </pre>
   *
   * <code>string parent = 1 [(.google.api.field_behavior) = REQUIRED];</code>
   * @return The parent.
   */
  @java.lang.Override
  public java.lang.String getParent() {
    java.lang.Object ref = parent_;
    if (ref instanceof java.lang.String) {
      return (java.lang.String) ref;
    } else {
      com.google.protobuf.ByteString bs = 
          (com.google.protobuf.ByteString) ref;
      java.lang.String s = bs.toStringUtf8();
      parent_ = s;
      return s;
    }
  }
  /**
   * <pre>
   * Required. Must be in the format `providers/{provider}`.
   * The provider must be the Project ID (for example, `sample-cloud-project`)
   * of the Google Cloud Project of which the service account making
   * this call is a member.
   * </pre>
   *
   * <code>string parent = 1 [(.google.api.field_behavior) = REQUIRED];</code>
   * @return The bytes for parent.
   */
  @java.lang.Override
  public com.google.protobuf.ByteString
      getParentBytes() {
    java.lang.Object ref = parent_;
    if (ref instanceof java.lang.String) {
      com.google.protobuf.ByteString b = 
          com.google.protobuf.ByteString.copyFromUtf8(
              (java.lang.String) ref);
      parent_ = b;
      return b;
    } else {
      return (com.google.protobuf.ByteString) ref;
    }
  }

  public static final int PAGE_SIZE_FIELD_NUMBER = 3;
  private int pageSize_ = 0;
  /**
   * <pre>
   * The maximum number of vehicles to return.
   * Default value: 100.
   * </pre>
   *
   * <code>int32 page_size = 3;</code>
   * @return The pageSize.
   */
  @java.lang.Override
  public int getPageSize() {
    return pageSize_;
  }

  public static final int PAGE_TOKEN_FIELD_NUMBER = 4;
  @SuppressWarnings("serial")
  private volatile java.lang.Object pageToken_ = "";
  /**
   * <pre>
   * The value of the `next_page_token` provided by a previous call to
   * `ListVehicles` so that you can paginate through groups of vehicles. The
   * value is undefined if the filter criteria of the request is not the same as
   * the filter criteria for the previous call to `ListVehicles`.
   * </pre>
   *
   * <code>string page_token = 4;</code>
   * @return The pageToken.
   */
  @java.lang.Override
  public java.lang.String getPageToken() {
    java.lang.Object ref = pageToken_;
    if (ref instanceof java.lang.String) {
      return (java.lang.String) ref;
    } else {
      com.google.protobuf.ByteString bs = 
          (com.google.protobuf.ByteString) ref;
      java.lang.String s = bs.toStringUtf8();
      pageToken_ = s;
      return s;
    }
  }
  /**
   * <pre>
   * The value of the `next_page_token` provided by a previous call to
   * `ListVehicles` so that you can paginate through groups of vehicles. The
   * value is undefined if the filter criteria of the request is not the same as
   * the filter criteria for the previous call to `ListVehicles`.
   * </pre>
   *
   * <code>string page_token = 4;</code>
   * @return The bytes for pageToken.
   */
  @java.lang.Override
  public com.google.protobuf.ByteString
      getPageTokenBytes() {
    java.lang.Object ref = pageToken_;
    if (ref instanceof java.lang.String) {
      com.google.protobuf.ByteString b = 
          com.google.protobuf.ByteString.copyFromUtf8(
              (java.lang.String) ref);
      pageToken_ = b;
      return b;
    } else {
      return (com.google.protobuf.ByteString) ref;
    }
  }

  public static final int MINIMUM_CAPACITY_FIELD_NUMBER = 6;
  private com.google.protobuf.Int32Value minimumCapacity_;
  /**
   * <pre>
   * Specifies the required minimum capacity of the vehicle. All vehicles
   * returned will have a `maximum_capacity` greater than or equal to this
   * value. If set, must be greater or equal to 0.
   * </pre>
   *
   * <code>.google.protobuf.Int32Value minimum_capacity = 6;</code>
   * @return Whether the minimumCapacity field is set.
   */
  @java.lang.Override
  public boolean hasMinimumCapacity() {
    return minimumCapacity_ != null;
  }
  /**
   * <pre>
   * Specifies the required minimum capacity of the vehicle. All vehicles
   * returned will have a `maximum_capacity` greater than or equal to this
   * value. If set, must be greater or equal to 0.
   * </pre>
   *
   * <code>.google.protobuf.Int32Value minimum_capacity = 6;</code>
   * @return The minimumCapacity.
   */
  @java.lang.Override
  public com.google.protobuf.Int32Value getMinimumCapacity() {
    return minimumCapacity_ == null ? com.google.protobuf.Int32Value.getDefaultInstance() : minimumCapacity_;
  }
  /**
   * <pre>
   * Specifies the required minimum capacity of the vehicle. All vehicles
   * returned will have a `maximum_capacity` greater than or equal to this
   * value. If set, must be greater or equal to 0.
   * </pre>
   *
   * <code>.google.protobuf.Int32Value minimum_capacity = 6;</code>
   */
  @java.lang.Override
  public com.google.protobuf.Int32ValueOrBuilder getMinimumCapacityOrBuilder() {
    return minimumCapacity_ == null ? com.google.protobuf.Int32Value.getDefaultInstance() : minimumCapacity_;
  }

  public static final int TRIP_TYPES_FIELD_NUMBER = 7;
  @SuppressWarnings("serial")
  private java.util.List<java.lang.Integer> tripTypes_;
  private static final com.google.protobuf.Internal.ListAdapter.Converter<
      java.lang.Integer, google.maps.fleetengine.v1.TripType> tripTypes_converter_ =
          new com.google.protobuf.Internal.ListAdapter.Converter<
              java.lang.Integer, google.maps.fleetengine.v1.TripType>() {
            public google.maps.fleetengine.v1.TripType convert(java.lang.Integer from) {
              google.maps.fleetengine.v1.TripType result = google.maps.fleetengine.v1.TripType.forNumber(from);
              return result == null ? google.maps.fleetengine.v1.TripType.UNRECOGNIZED : result;
            }
          };
  /**
   * <pre>
   * Restricts the response to vehicles that support at least one of the
   * specified trip types.
   * </pre>
   *
   * <code>repeated .maps.fleetengine.v1.TripType trip_types = 7;</code>
   * @return A list containing the tripTypes.
   */
  @java.lang.Override
  public java.util.List<google.maps.fleetengine.v1.TripType> getTripTypesList() {
    return new com.google.protobuf.Internal.ListAdapter<
        java.lang.Integer, google.maps.fleetengine.v1.TripType>(tripTypes_, tripTypes_converter_);
  }
  /**
   * <pre>
   * Restricts the response to vehicles that support at least one of the
   * specified trip types.
   * </pre>
   *
   * <code>repeated .maps.fleetengine.v1.TripType trip_types = 7;</code>
   * @return The count of tripTypes.
   */
  @java.lang.Override
  public int getTripTypesCount() {
    return tripTypes_.size();
  }
  /**
   * <pre>
   * Restricts the response to vehicles that support at least one of the
   * specified trip types.
   * </pre>
   *
   * <code>repeated .maps.fleetengine.v1.TripType trip_types = 7;</code>
   * @param index The index of the element to return.
   * @return The tripTypes at the given index.
   */
  @java.lang.Override
  public google.maps.fleetengine.v1.TripType getTripTypes(int index) {
    return tripTypes_converter_.convert(tripTypes_.get(index));
  }
  /**
   * <pre>
   * Restricts the response to vehicles that support at least one of the
   * specified trip types.
   * </pre>
   *
   * <code>repeated .maps.fleetengine.v1.TripType trip_types = 7;</code>
   * @return A list containing the enum numeric values on the wire for tripTypes.
   */
  @java.lang.Override
  public java.util.List<java.lang.Integer>
  getTripTypesValueList() {
    return tripTypes_;
  }
  /**
   * <pre>
   * Restricts the response to vehicles that support at least one of the
   * specified trip types.
   * </pre>
   *
   * <code>repeated .maps.fleetengine.v1.TripType trip_types = 7;</code>
   * @param index The index of the value to return.
   * @return The enum numeric value on the wire of tripTypes at the given index.
   */
  @java.lang.Override
  public int getTripTypesValue(int index) {
    return tripTypes_.get(index);
  }
  private int tripTypesMemoizedSerializedSize;

  public static final int MAXIMUM_STALENESS_FIELD_NUMBER = 8;
  private com.google.protobuf.Duration maximumStaleness_;
  /**
   * <pre>
   * Restricts the response to vehicles that have updated their locations within
   * the specified duration at the time of the call. If present, must be a valid
   * positive duration.
   * </pre>
   *
   * <code>.google.protobuf.Duration maximum_staleness = 8;</code>
   * @return Whether the maximumStaleness field is set.
   */
  @java.lang.Override
  public boolean hasMaximumStaleness() {
    return maximumStaleness_ != null;
  }
  /**
   * <pre>
   * Restricts the response to vehicles that have updated their locations within
   * the specified duration at the time of the call. If present, must be a valid
   * positive duration.
   * </pre>
   *
   * <code>.google.protobuf.Duration maximum_staleness = 8;</code>
   * @return The maximumStaleness.
   */
  @java.lang.Override
  public com.google.protobuf.Duration getMaximumStaleness() {
    return maximumStaleness_ == null ? com.google.protobuf.Duration.getDefaultInstance() : maximumStaleness_;
  }
  /**
   * <pre>
   * Restricts the response to vehicles that have updated their locations within
   * the specified duration at the time of the call. If present, must be a valid
   * positive duration.
   * </pre>
   *
   * <code>.google.protobuf.Duration maximum_staleness = 8;</code>
   */
  @java.lang.Override
  public com.google.protobuf.DurationOrBuilder getMaximumStalenessOrBuilder() {
    return maximumStaleness_ == null ? com.google.protobuf.Duration.getDefaultInstance() : maximumStaleness_;
  }

  public static final int VEHICLE_TYPE_CATEGORIES_FIELD_NUMBER = 9;
  @SuppressWarnings("serial")
  private java.util.List<java.lang.Integer> vehicleTypeCategories_;
  private static final com.google.protobuf.Internal.ListAdapter.Converter<
      java.lang.Integer, google.maps.fleetengine.v1.Vehicle.VehicleType.Category> vehicleTypeCategories_converter_ =
          new com.google.protobuf.Internal.ListAdapter.Converter<
              java.lang.Integer, google.maps.fleetengine.v1.Vehicle.VehicleType.Category>() {
            public google.maps.fleetengine.v1.Vehicle.VehicleType.Category convert(java.lang.Integer from) {
              google.maps.fleetengine.v1.Vehicle.VehicleType.Category result = google.maps.fleetengine.v1.Vehicle.VehicleType.Category.forNumber(from);
              return result == null ? google.maps.fleetengine.v1.Vehicle.VehicleType.Category.UNRECOGNIZED : result;
            }
          };
  /**
   * <pre>
   * Required. Restricts the response to vehicles with one of the specified type
   * categories.
   * </pre>
   *
   * <code>repeated .maps.fleetengine.v1.Vehicle.VehicleType.Category vehicle_type_categories = 9 [(.google.api.field_behavior) = REQUIRED];</code>
   * @return A list containing the vehicleTypeCategories.
   */
  @java.lang.Override
  public java.util.List<google.maps.fleetengine.v1.Vehicle.VehicleType.Category> getVehicleTypeCategoriesList() {
    return new com.google.protobuf.Internal.ListAdapter<
        java.lang.Integer, google.maps.fleetengine.v1.Vehicle.VehicleType.Category>(vehicleTypeCategories_, vehicleTypeCategories_converter_);
  }
  /**
   * <pre>
   * Required. Restricts the response to vehicles with one of the specified type
   * categories.
   * </pre>
   *
   * <code>repeated .maps.fleetengine.v1.Vehicle.VehicleType.Category vehicle_type_categories = 9 [(.google.api.field_behavior) = REQUIRED];</code>
   * @return The count of vehicleTypeCategories.
   */
  @java.lang.Override
  public int getVehicleTypeCategoriesCount() {
    return vehicleTypeCategories_.size();
  }
  /**
   * <pre>
   * Required. Restricts the response to vehicles with one of the specified type
   * categories.
   * </pre>
   *
   * <code>repeated .maps.fleetengine.v1.Vehicle.VehicleType.Category vehicle_type_categories = 9 [(.google.api.field_behavior) = REQUIRED];</code>
   * @param index The index of the element to return.
   * @return The vehicleTypeCategories at the given index.
   */
  @java.lang.Override
  public google.maps.fleetengine.v1.Vehicle.VehicleType.Category getVehicleTypeCategories(int index) {
    return vehicleTypeCategories_converter_.convert(vehicleTypeCategories_.get(index));
  }
  /**
   * <pre>
   * Required. Restricts the response to vehicles with one of the specified type
   * categories.
   * </pre>
   *
   * <code>repeated .maps.fleetengine.v1.Vehicle.VehicleType.Category vehicle_type_categories = 9 [(.google.api.field_behavior) = REQUIRED];</code>
   * @return A list containing the enum numeric values on the wire for vehicleTypeCategories.
   */
  @java.lang.Override
  public java.util.List<java.lang.Integer>
  getVehicleTypeCategoriesValueList() {
    return vehicleTypeCategories_;
  }
  /**
   * <pre>
   * Required. Restricts the response to vehicles with one of the specified type
   * categories.
   * </pre>
   *
   * <code>repeated .maps.fleetengine.v1.Vehicle.VehicleType.Category vehicle_type_categories = 9 [(.google.api.field_behavior) = REQUIRED];</code>
   * @param index The index of the value to return.
   * @return The enum numeric value on the wire of vehicleTypeCategories at the given index.
   */
  @java.lang.Override
  public int getVehicleTypeCategoriesValue(int index) {
    return vehicleTypeCategories_.get(index);
  }
  private int vehicleTypeCategoriesMemoizedSerializedSize;

  public static final int REQUIRED_ATTRIBUTES_FIELD_NUMBER = 10;
  @SuppressWarnings("serial")
  private com.google.protobuf.LazyStringList requiredAttributes_;
  /**
   * <pre>
   * Callers can form complex logical operations using any combination of the
   * `required_attributes`, `required_one_of_attributes`, and
   * `required_one_of_attribute_sets` fields.
   * `required_attributes` is a list; `required_one_of_attributes` uses a
   * message which allows a list of lists. In combination, the two fields allow
   * the composition of this expression:
   * ```
   * (required_attributes[0] AND required_attributes[1] AND ...)
   * AND
   * (required_one_of_attributes[0][0] OR required_one_of_attributes[0][1] OR
   * ...)
   * AND
   * (required_one_of_attributes[1][0] OR required_one_of_attributes[1][1] OR
   * ...)
   * ```
   * Restricts the response to vehicles with the specified attributes. This
   * field is a conjunction/AND operation. Your app can specify up to 100
   * attributes; however, the combined key:value string length cannot exceed
   * 1024 characters.
   * </pre>
   *
   * <code>repeated string required_attributes = 10;</code>
   * @return A list containing the requiredAttributes.
   */
  public com.google.protobuf.ProtocolStringList
      getRequiredAttributesList() {
    return requiredAttributes_;
  }
  /**
   * <pre>
   * Callers can form complex logical operations using any combination of the
   * `required_attributes`, `required_one_of_attributes`, and
   * `required_one_of_attribute_sets` fields.
   * `required_attributes` is a list; `required_one_of_attributes` uses a
   * message which allows a list of lists. In combination, the two fields allow
   * the composition of this expression:
   * ```
   * (required_attributes[0] AND required_attributes[1] AND ...)
   * AND
   * (required_one_of_attributes[0][0] OR required_one_of_attributes[0][1] OR
   * ...)
   * AND
   * (required_one_of_attributes[1][0] OR required_one_of_attributes[1][1] OR
   * ...)
   * ```
   * Restricts the response to vehicles with the specified attributes. This
   * field is a conjunction/AND operation. Your app can specify up to 100
   * attributes; however, the combined key:value string length cannot exceed
   * 1024 characters.
   * </pre>
   *
   * <code>repeated string required_attributes = 10;</code>
   * @return The count of requiredAttributes.
   */
  public int getRequiredAttributesCount() {
    return requiredAttributes_.size();
  }
  /**
   * <pre>
   * Callers can form complex logical operations using any combination of the
   * `required_attributes`, `required_one_of_attributes`, and
   * `required_one_of_attribute_sets` fields.
   * `required_attributes` is a list; `required_one_of_attributes` uses a
   * message which allows a list of lists. In combination, the two fields allow
   * the composition of this expression:
   * ```
   * (required_attributes[0] AND required_attributes[1] AND ...)
   * AND
   * (required_one_of_attributes[0][0] OR required_one_of_attributes[0][1] OR
   * ...)
   * AND
   * (required_one_of_attributes[1][0] OR required_one_of_attributes[1][1] OR
   * ...)
   * ```
   * Restricts the response to vehicles with the specified attributes. This
   * field is a conjunction/AND operation. Your app can specify up to 100
   * attributes; however, the combined key:value string length cannot exceed
   * 1024 characters.
   * </pre>
   *
   * <code>repeated string required_attributes = 10;</code>
   * @param index The index of the element to return.
   * @return The requiredAttributes at the given index.
   */
  public java.lang.String getRequiredAttributes(int index) {
    return requiredAttributes_.get(index);
  }
  /**
   * <pre>
   * Callers can form complex logical operations using any combination of the
   * `required_attributes`, `required_one_of_attributes`, and
   * `required_one_of_attribute_sets` fields.
   * `required_attributes` is a list; `required_one_of_attributes` uses a
   * message which allows a list of lists. In combination, the two fields allow
   * the composition of this expression:
   * ```
   * (required_attributes[0] AND required_attributes[1] AND ...)
   * AND
   * (required_one_of_attributes[0][0] OR required_one_of_attributes[0][1] OR
   * ...)
   * AND
   * (required_one_of_attributes[1][0] OR required_one_of_attributes[1][1] OR
   * ...)
   * ```
   * Restricts the response to vehicles with the specified attributes. This
   * field is a conjunction/AND operation. Your app can specify up to 100
   * attributes; however, the combined key:value string length cannot exceed
   * 1024 characters.
   * </pre>
   *
   * <code>repeated string required_attributes = 10;</code>
   * @param index The index of the value to return.
   * @return The bytes of the requiredAttributes at the given index.
   */
  public com.google.protobuf.ByteString
      getRequiredAttributesBytes(int index) {
    return requiredAttributes_.getByteString(index);
  }

  public static final int REQUIRED_ONE_OF_ATTRIBUTES_FIELD_NUMBER = 13;
  @SuppressWarnings("serial")
  private com.google.protobuf.LazyStringList requiredOneOfAttributes_;
  /**
   * <pre>
   * Restricts the response to vehicles with at least one of the specified
   * attributes in each `VehicleAttributeList`. Within each list, a vehicle must
   * match at least one of the attributes. This field is an inclusive
   * disjunction/OR operation in each `VehicleAttributeList` and a
   * conjunction/AND operation across the collection of `VehicleAttributeList`.
   * Format: key1:value1|key2:value2|key3:value3...
   * </pre>
   *
   * <code>repeated string required_one_of_attributes = 13;</code>
   * @return A list containing the requiredOneOfAttributes.
   */
  public com.google.protobuf.ProtocolStringList
      getRequiredOneOfAttributesList() {
    return requiredOneOfAttributes_;
  }
  /**
   * <pre>
   * Restricts the response to vehicles with at least one of the specified
   * attributes in each `VehicleAttributeList`. Within each list, a vehicle must
   * match at least one of the attributes. This field is an inclusive
   * disjunction/OR operation in each `VehicleAttributeList` and a
   * conjunction/AND operation across the collection of `VehicleAttributeList`.
   * Format: key1:value1|key2:value2|key3:value3...
   * </pre>
   *
   * <code>repeated string required_one_of_attributes = 13;</code>
   * @return The count of requiredOneOfAttributes.
   */
  public int getRequiredOneOfAttributesCount() {
    return requiredOneOfAttributes_.size();
  }
  /**
   * <pre>
   * Restricts the response to vehicles with at least one of the specified
   * attributes in each `VehicleAttributeList`. Within each list, a vehicle must
   * match at least one of the attributes. This field is an inclusive
   * disjunction/OR operation in each `VehicleAttributeList` and a
   * conjunction/AND operation across the collection of `VehicleAttributeList`.
   * Format: key1:value1|key2:value2|key3:value3...
   * </pre>
   *
   * <code>repeated string required_one_of_attributes = 13;</code>
   * @param index The index of the element to return.
   * @return The requiredOneOfAttributes at the given index.
   */
  public java.lang.String getRequiredOneOfAttributes(int index) {
    return requiredOneOfAttributes_.get(index);
  }
  /**
   * <pre>
   * Restricts the response to vehicles with at least one of the specified
   * attributes in each `VehicleAttributeList`. Within each list, a vehicle must
   * match at least one of the attributes. This field is an inclusive
   * disjunction/OR operation in each `VehicleAttributeList` and a
   * conjunction/AND operation across the collection of `VehicleAttributeList`.
   * Format: key1:value1|key2:value2|key3:value3...
   * </pre>
   *
   * <code>repeated string required_one_of_attributes = 13;</code>
   * @param index The index of the value to return.
   * @return The bytes of the requiredOneOfAttributes at the given index.
   */
  public com.google.protobuf.ByteString
      getRequiredOneOfAttributesBytes(int index) {
    return requiredOneOfAttributes_.getByteString(index);
  }

  public static final int REQUIRED_ONE_OF_ATTRIBUTE_SETS_FIELD_NUMBER = 15;
  @SuppressWarnings("serial")
  private com.google.protobuf.LazyStringList requiredOneOfAttributeSets_;
  /**
   * <pre>
   * `required_one_of_attribute_sets` provides additional functionality.
   * Similar to `required_one_of_attributes`, `required_one_of_attribute_sets`
   * uses a message which allows a list of lists, allowing expressions such as
   * this one:
   * ```
   * (required_attributes[0] AND required_attributes[1] AND ...)
   * AND
   * (required_one_of_attributes[0][0] AND required_one_of_attributes[0][1] AND
   * ...)
   * OR
   * (required_one_of_attributes[1][0] AND required_one_of_attributes[1][1] AND
   * ...)
   * ```
   * Restricts the response to vehicles that match all the attributes in a
   * `VehicleAttributeList`. Within each list, a vehicle must match all of the
   * attributes. This field is a conjunction/AND operation in each
   * `VehicleAttributeList` and inclusive disjunction/OR operation across the
   * collection of `VehicleAttributeList`. Each repeated string should be of the
   * format "key1:value1|key2:value2|key3:value3".
   * </pre>
   *
   * <code>repeated string required_one_of_attribute_sets = 15;</code>
   * @return A list containing the requiredOneOfAttributeSets.
   */
  public com.google.protobuf.ProtocolStringList
      getRequiredOneOfAttributeSetsList() {
    return requiredOneOfAttributeSets_;
  }
  /**
   * <pre>
   * `required_one_of_attribute_sets` provides additional functionality.
   * Similar to `required_one_of_attributes`, `required_one_of_attribute_sets`
   * uses a message which allows a list of lists, allowing expressions such as
   * this one:
   * ```
   * (required_attributes[0] AND required_attributes[1] AND ...)
   * AND
   * (required_one_of_attributes[0][0] AND required_one_of_attributes[0][1] AND
   * ...)
   * OR
   * (required_one_of_attributes[1][0] AND required_one_of_attributes[1][1] AND
   * ...)
   * ```
   * Restricts the response to vehicles that match all the attributes in a
   * `VehicleAttributeList`. Within each list, a vehicle must match all of the
   * attributes. This field is a conjunction/AND operation in each
   * `VehicleAttributeList` and inclusive disjunction/OR operation across the
   * collection of `VehicleAttributeList`. Each repeated string should be of the
   * format "key1:value1|key2:value2|key3:value3".
   * </pre>
   *
   * <code>repeated string required_one_of_attribute_sets = 15;</code>
   * @return The count of requiredOneOfAttributeSets.
   */
  public int getRequiredOneOfAttributeSetsCount() {
    return requiredOneOfAttributeSets_.size();
  }
  /**
   * <pre>
   * `required_one_of_attribute_sets` provides additional functionality.
   * Similar to `required_one_of_attributes`, `required_one_of_attribute_sets`
   * uses a message which allows a list of lists, allowing expressions such as
   * this one:
   * ```
   * (required_attributes[0] AND required_attributes[1] AND ...)
   * AND
   * (required_one_of_attributes[0][0] AND required_one_of_attributes[0][1] AND
   * ...)
   * OR
   * (required_one_of_attributes[1][0] AND required_one_of_attributes[1][1] AND
   * ...)
   * ```
   * Restricts the response to vehicles that match all the attributes in a
   * `VehicleAttributeList`. Within each list, a vehicle must match all of the
   * attributes. This field is a conjunction/AND operation in each
   * `VehicleAttributeList` and inclusive disjunction/OR operation across the
   * collection of `VehicleAttributeList`. Each repeated string should be of the
   * format "key1:value1|key2:value2|key3:value3".
   * </pre>
   *
   * <code>repeated string required_one_of_attribute_sets = 15;</code>
   * @param index The index of the element to return.
   * @return The requiredOneOfAttributeSets at the given index.
   */
  public java.lang.String getRequiredOneOfAttributeSets(int index) {
    return requiredOneOfAttributeSets_.get(index);
  }
  /**
   * <pre>
   * `required_one_of_attribute_sets` provides additional functionality.
   * Similar to `required_one_of_attributes`, `required_one_of_attribute_sets`
   * uses a message which allows a list of lists, allowing expressions such as
   * this one:
   * ```
   * (required_attributes[0] AND required_attributes[1] AND ...)
   * AND
   * (required_one_of_attributes[0][0] AND required_one_of_attributes[0][1] AND
   * ...)
   * OR
   * (required_one_of_attributes[1][0] AND required_one_of_attributes[1][1] AND
   * ...)
   * ```
   * Restricts the response to vehicles that match all the attributes in a
   * `VehicleAttributeList`. Within each list, a vehicle must match all of the
   * attributes. This field is a conjunction/AND operation in each
   * `VehicleAttributeList` and inclusive disjunction/OR operation across the
   * collection of `VehicleAttributeList`. Each repeated string should be of the
   * format "key1:value1|key2:value2|key3:value3".
   * </pre>
   *
   * <code>repeated string required_one_of_attribute_sets = 15;</code>
   * @param index The index of the value to return.
   * @return The bytes of the requiredOneOfAttributeSets at the given index.
   */
  public com.google.protobuf.ByteString
      getRequiredOneOfAttributeSetsBytes(int index) {
    return requiredOneOfAttributeSets_.getByteString(index);
  }

  public static final int VEHICLE_STATE_FIELD_NUMBER = 11;
  private int vehicleState_ = 0;
  /**
   * <pre>
   * Restricts the response to vehicles that have this vehicle state.
   * </pre>
   *
   * <code>.maps.fleetengine.v1.VehicleState vehicle_state = 11;</code>
   * @return The enum numeric value on the wire for vehicleState.
   */
  @java.lang.Override public int getVehicleStateValue() {
    return vehicleState_;
  }
  /**
   * <pre>
   * Restricts the response to vehicles that have this vehicle state.
   * </pre>
   *
   * <code>.maps.fleetengine.v1.VehicleState vehicle_state = 11;</code>
   * @return The vehicleState.
   */
  @java.lang.Override public google.maps.fleetengine.v1.VehicleState getVehicleState() {
    google.maps.fleetengine.v1.VehicleState result = google.maps.fleetengine.v1.VehicleState.forNumber(vehicleState_);
    return result == null ? google.maps.fleetengine.v1.VehicleState.UNRECOGNIZED : result;
  }

  public static final int ON_TRIP_ONLY_FIELD_NUMBER = 14;
  private boolean onTripOnly_ = false;
  /**
   * <pre>
   * Only return the vehicles with current trip(s).
   * </pre>
   *
   * <code>bool on_trip_only = 14;</code>
   * @return The onTripOnly.
   */
  @java.lang.Override
  public boolean getOnTripOnly() {
    return onTripOnly_;
  }

  private byte memoizedIsInitialized = -1;
  @java.lang.Override
  public final boolean isInitialized() {
    byte isInitialized = memoizedIsInitialized;
    if (isInitialized == 1) return true;
    if (isInitialized == 0) return false;

    memoizedIsInitialized = 1;
    return true;
  }

  @java.lang.Override
  public void writeTo(com.google.protobuf.CodedOutputStream output)
                      throws java.io.IOException {
    getSerializedSize();
    if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(parent_)) {
      com.google.protobuf.GeneratedMessageV3.writeString(output, 1, parent_);
    }
    if (pageSize_ != 0) {
      output.writeInt32(3, pageSize_);
    }
    if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(pageToken_)) {
      com.google.protobuf.GeneratedMessageV3.writeString(output, 4, pageToken_);
    }
    if (minimumCapacity_ != null) {
      output.writeMessage(6, getMinimumCapacity());
    }
    if (getTripTypesList().size() > 0) {
      output.writeUInt32NoTag(58);
      output.writeUInt32NoTag(tripTypesMemoizedSerializedSize);
    }
    for (int i = 0; i < tripTypes_.size(); i++) {
      output.writeEnumNoTag(tripTypes_.get(i));
    }
    if (maximumStaleness_ != null) {
      output.writeMessage(8, getMaximumStaleness());
    }
    if (getVehicleTypeCategoriesList().size() > 0) {
      output.writeUInt32NoTag(74);
      output.writeUInt32NoTag(vehicleTypeCategoriesMemoizedSerializedSize);
    }
    for (int i = 0; i < vehicleTypeCategories_.size(); i++) {
      output.writeEnumNoTag(vehicleTypeCategories_.get(i));
    }
    for (int i = 0; i < requiredAttributes_.size(); i++) {
      com.google.protobuf.GeneratedMessageV3.writeString(output, 10, requiredAttributes_.getRaw(i));
    }
    if (vehicleState_ != google.maps.fleetengine.v1.VehicleState.UNKNOWN_VEHICLE_STATE.getNumber()) {
      output.writeEnum(11, vehicleState_);
    }
    if (header_ != null) {
      output.writeMessage(12, getHeader());
    }
    for (int i = 0; i < requiredOneOfAttributes_.size(); i++) {
      com.google.protobuf.GeneratedMessageV3.writeString(output, 13, requiredOneOfAttributes_.getRaw(i));
    }
    if (onTripOnly_ != false) {
      output.writeBool(14, onTripOnly_);
    }
    for (int i = 0; i < requiredOneOfAttributeSets_.size(); i++) {
      com.google.protobuf.GeneratedMessageV3.writeString(output, 15, requiredOneOfAttributeSets_.getRaw(i));
    }
    getUnknownFields().writeTo(output);
  }

  @java.lang.Override
  public int getSerializedSize() {
    int size = memoizedSize;
    if (size != -1) return size;

    size = 0;
    if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(parent_)) {
      size += com.google.protobuf.GeneratedMessageV3.computeStringSize(1, parent_);
    }
    if (pageSize_ != 0) {
      size += com.google.protobuf.CodedOutputStream
        .computeInt32Size(3, pageSize_);
    }
    if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(pageToken_)) {
      size += com.google.protobuf.GeneratedMessageV3.computeStringSize(4, pageToken_);
    }
    if (minimumCapacity_ != null) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(6, getMinimumCapacity());
    }
    {
      int dataSize = 0;
      for (int i = 0; i < tripTypes_.size(); i++) {
        dataSize += com.google.protobuf.CodedOutputStream
          .computeEnumSizeNoTag(tripTypes_.get(i));
      }
      size += dataSize;
      if (!getTripTypesList().isEmpty()) {  size += 1;
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32SizeNoTag(dataSize);
      }tripTypesMemoizedSerializedSize = dataSize;
    }
    if (maximumStaleness_ != null) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(8, getMaximumStaleness());
    }
    {
      int dataSize = 0;
      for (int i = 0; i < vehicleTypeCategories_.size(); i++) {
        dataSize += com.google.protobuf.CodedOutputStream
          .computeEnumSizeNoTag(vehicleTypeCategories_.get(i));
      }
      size += dataSize;
      if (!getVehicleTypeCategoriesList().isEmpty()) {  size += 1;
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32SizeNoTag(dataSize);
      }vehicleTypeCategoriesMemoizedSerializedSize = dataSize;
    }
    {
      int dataSize = 0;
      for (int i = 0; i < requiredAttributes_.size(); i++) {
        dataSize += computeStringSizeNoTag(requiredAttributes_.getRaw(i));
      }
      size += dataSize;
      size += 1 * getRequiredAttributesList().size();
    }
    if (vehicleState_ != google.maps.fleetengine.v1.VehicleState.UNKNOWN_VEHICLE_STATE.getNumber()) {
      size += com.google.protobuf.CodedOutputStream
        .computeEnumSize(11, vehicleState_);
    }
    if (header_ != null) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(12, getHeader());
    }
    {
      int dataSize = 0;
      for (int i = 0; i < requiredOneOfAttributes_.size(); i++) {
        dataSize += computeStringSizeNoTag(requiredOneOfAttributes_.getRaw(i));
      }
      size += dataSize;
      size += 1 * getRequiredOneOfAttributesList().size();
    }
    if (onTripOnly_ != false) {
      size += com.google.protobuf.CodedOutputStream
        .computeBoolSize(14, onTripOnly_);
    }
    {
      int dataSize = 0;
      for (int i = 0; i < requiredOneOfAttributeSets_.size(); i++) {
        dataSize += computeStringSizeNoTag(requiredOneOfAttributeSets_.getRaw(i));
      }
      size += dataSize;
      size += 1 * getRequiredOneOfAttributeSetsList().size();
    }
    size += getUnknownFields().getSerializedSize();
    memoizedSize = size;
    return size;
  }

  @java.lang.Override
  public boolean equals(final java.lang.Object obj) {
    if (obj == this) {
     return true;
    }
    if (!(obj instanceof google.maps.fleetengine.v1.ListVehiclesRequest)) {
      return super.equals(obj);
    }
    google.maps.fleetengine.v1.ListVehiclesRequest other = (google.maps.fleetengine.v1.ListVehiclesRequest) obj;

    if (hasHeader() != other.hasHeader()) return false;
    if (hasHeader()) {
      if (!getHeader()
          .equals(other.getHeader())) return false;
    }
    if (!getParent()
        .equals(other.getParent())) return false;
    if (getPageSize()
        != other.getPageSize()) return false;
    if (!getPageToken()
        .equals(other.getPageToken())) return false;
    if (hasMinimumCapacity() != other.hasMinimumCapacity()) return false;
    if (hasMinimumCapacity()) {
      if (!getMinimumCapacity()
          .equals(other.getMinimumCapacity())) return false;
    }
    if (!tripTypes_.equals(other.tripTypes_)) return false;
    if (hasMaximumStaleness() != other.hasMaximumStaleness()) return false;
    if (hasMaximumStaleness()) {
      if (!getMaximumStaleness()
          .equals(other.getMaximumStaleness())) return false;
    }
    if (!vehicleTypeCategories_.equals(other.vehicleTypeCategories_)) return false;
    if (!getRequiredAttributesList()
        .equals(other.getRequiredAttributesList())) return false;
    if (!getRequiredOneOfAttributesList()
        .equals(other.getRequiredOneOfAttributesList())) return false;
    if (!getRequiredOneOfAttributeSetsList()
        .equals(other.getRequiredOneOfAttributeSetsList())) return false;
    if (vehicleState_ != other.vehicleState_) return false;
    if (getOnTripOnly()
        != other.getOnTripOnly()) return false;
    if (!getUnknownFields().equals(other.getUnknownFields())) return false;
    return true;
  }

  @java.lang.Override
  public int hashCode() {
    if (memoizedHashCode != 0) {
      return memoizedHashCode;
    }
    int hash = 41;
    hash = (19 * hash) + getDescriptor().hashCode();
    if (hasHeader()) {
      hash = (37 * hash) + HEADER_FIELD_NUMBER;
      hash = (53 * hash) + getHeader().hashCode();
    }
    hash = (37 * hash) + PARENT_FIELD_NUMBER;
    hash = (53 * hash) + getParent().hashCode();
    hash = (37 * hash) + PAGE_SIZE_FIELD_NUMBER;
    hash = (53 * hash) + getPageSize();
    hash = (37 * hash) + PAGE_TOKEN_FIELD_NUMBER;
    hash = (53 * hash) + getPageToken().hashCode();
    if (hasMinimumCapacity()) {
      hash = (37 * hash) + MINIMUM_CAPACITY_FIELD_NUMBER;
      hash = (53 * hash) + getMinimumCapacity().hashCode();
    }
    if (getTripTypesCount() > 0) {
      hash = (37 * hash) + TRIP_TYPES_FIELD_NUMBER;
      hash = (53 * hash) + tripTypes_.hashCode();
    }
    if (hasMaximumStaleness()) {
      hash = (37 * hash) + MAXIMUM_STALENESS_FIELD_NUMBER;
      hash = (53 * hash) + getMaximumStaleness().hashCode();
    }
    if (getVehicleTypeCategoriesCount() > 0) {
      hash = (37 * hash) + VEHICLE_TYPE_CATEGORIES_FIELD_NUMBER;
      hash = (53 * hash) + vehicleTypeCategories_.hashCode();
    }
    if (getRequiredAttributesCount() > 0) {
      hash = (37 * hash) + REQUIRED_ATTRIBUTES_FIELD_NUMBER;
      hash = (53 * hash) + getRequiredAttributesList().hashCode();
    }
    if (getRequiredOneOfAttributesCount() > 0) {
      hash = (37 * hash) + REQUIRED_ONE_OF_ATTRIBUTES_FIELD_NUMBER;
      hash = (53 * hash) + getRequiredOneOfAttributesList().hashCode();
    }
    if (getRequiredOneOfAttributeSetsCount() > 0) {
      hash = (37 * hash) + REQUIRED_ONE_OF_ATTRIBUTE_SETS_FIELD_NUMBER;
      hash = (53 * hash) + getRequiredOneOfAttributeSetsList().hashCode();
    }
    hash = (37 * hash) + VEHICLE_STATE_FIELD_NUMBER;
    hash = (53 * hash) + vehicleState_;
    hash = (37 * hash) + ON_TRIP_ONLY_FIELD_NUMBER;
    hash = (53 * hash) + com.google.protobuf.Internal.hashBoolean(
        getOnTripOnly());
    hash = (29 * hash) + getUnknownFields().hashCode();
    memoizedHashCode = hash;
    return hash;
  }

  public static google.maps.fleetengine.v1.ListVehiclesRequest parseFrom(
      java.nio.ByteBuffer data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static google.maps.fleetengine.v1.ListVehiclesRequest parseFrom(
      java.nio.ByteBuffer data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static google.maps.fleetengine.v1.ListVehiclesRequest parseFrom(
      com.google.protobuf.ByteString data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static google.maps.fleetengine.v1.ListVehiclesRequest parseFrom(
      com.google.protobuf.ByteString data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static google.maps.fleetengine.v1.ListVehiclesRequest parseFrom(byte[] data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static google.maps.fleetengine.v1.ListVehiclesRequest parseFrom(
      byte[] data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static google.maps.fleetengine.v1.ListVehiclesRequest parseFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input);
  }
  public static google.maps.fleetengine.v1.ListVehiclesRequest parseFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input, extensionRegistry);
  }
  public static google.maps.fleetengine.v1.ListVehiclesRequest parseDelimitedFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseDelimitedWithIOException(PARSER, input);
  }
  public static google.maps.fleetengine.v1.ListVehiclesRequest parseDelimitedFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
  }
  public static google.maps.fleetengine.v1.ListVehiclesRequest parseFrom(
      com.google.protobuf.CodedInputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input);
  }
  public static google.maps.fleetengine.v1.ListVehiclesRequest parseFrom(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input, extensionRegistry);
  }

  @java.lang.Override
  public Builder newBuilderForType() { return newBuilder(); }
  public static Builder newBuilder() {
    return DEFAULT_INSTANCE.toBuilder();
  }
  public static Builder newBuilder(google.maps.fleetengine.v1.ListVehiclesRequest prototype) {
    return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
  }
  @java.lang.Override
  public Builder toBuilder() {
    return this == DEFAULT_INSTANCE
        ? new Builder() : new Builder().mergeFrom(this);
  }

  @java.lang.Override
  protected Builder newBuilderForType(
      com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
    Builder builder = new Builder(parent);
    return builder;
  }
  /**
   * <pre>
   * `ListVehicles` request message.
   * </pre>
   *
   * Protobuf type {@code maps.fleetengine.v1.ListVehiclesRequest}
   */
  public static final class Builder extends
      com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
      // @@protoc_insertion_point(builder_implements:maps.fleetengine.v1.ListVehiclesRequest)
      google.maps.fleetengine.v1.ListVehiclesRequestOrBuilder {
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return google.maps.fleetengine.v1.VehicleApi.internal_static_maps_fleetengine_v1_ListVehiclesRequest_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return google.maps.fleetengine.v1.VehicleApi.internal_static_maps_fleetengine_v1_ListVehiclesRequest_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              google.maps.fleetengine.v1.ListVehiclesRequest.class, google.maps.fleetengine.v1.ListVehiclesRequest.Builder.class);
    }

    // Construct using google.maps.fleetengine.v1.ListVehiclesRequest.newBuilder()
    private Builder() {

    }

    private Builder(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      super(parent);

    }
    @java.lang.Override
    public Builder clear() {
      super.clear();
      bitField0_ = 0;
      header_ = null;
      if (headerBuilder_ != null) {
        headerBuilder_.dispose();
        headerBuilder_ = null;
      }
      parent_ = "";
      pageSize_ = 0;
      pageToken_ = "";
      minimumCapacity_ = null;
      if (minimumCapacityBuilder_ != null) {
        minimumCapacityBuilder_.dispose();
        minimumCapacityBuilder_ = null;
      }
      tripTypes_ = java.util.Collections.emptyList();
      bitField0_ = (bitField0_ & ~0x00000020);
      maximumStaleness_ = null;
      if (maximumStalenessBuilder_ != null) {
        maximumStalenessBuilder_.dispose();
        maximumStalenessBuilder_ = null;
      }
      vehicleTypeCategories_ = java.util.Collections.emptyList();
      bitField0_ = (bitField0_ & ~0x00000080);
      requiredAttributes_ = com.google.protobuf.LazyStringArrayList.EMPTY;
      bitField0_ = (bitField0_ & ~0x00000100);
      requiredOneOfAttributes_ = com.google.protobuf.LazyStringArrayList.EMPTY;
      bitField0_ = (bitField0_ & ~0x00000200);
      requiredOneOfAttributeSets_ = com.google.protobuf.LazyStringArrayList.EMPTY;
      bitField0_ = (bitField0_ & ~0x00000400);
      vehicleState_ = 0;
      onTripOnly_ = false;
      return this;
    }

    @java.lang.Override
    public com.google.protobuf.Descriptors.Descriptor
        getDescriptorForType() {
      return google.maps.fleetengine.v1.VehicleApi.internal_static_maps_fleetengine_v1_ListVehiclesRequest_descriptor;
    }

    @java.lang.Override
    public google.maps.fleetengine.v1.ListVehiclesRequest getDefaultInstanceForType() {
      return google.maps.fleetengine.v1.ListVehiclesRequest.getDefaultInstance();
    }

    @java.lang.Override
    public google.maps.fleetengine.v1.ListVehiclesRequest build() {
      google.maps.fleetengine.v1.ListVehiclesRequest result = buildPartial();
      if (!result.isInitialized()) {
        throw newUninitializedMessageException(result);
      }
      return result;
    }

    @java.lang.Override
    public google.maps.fleetengine.v1.ListVehiclesRequest buildPartial() {
      google.maps.fleetengine.v1.ListVehiclesRequest result = new google.maps.fleetengine.v1.ListVehiclesRequest(this);
      buildPartialRepeatedFields(result);
      if (bitField0_ != 0) { buildPartial0(result); }
      onBuilt();
      return result;
    }

    private void buildPartialRepeatedFields(google.maps.fleetengine.v1.ListVehiclesRequest result) {
      if (((bitField0_ & 0x00000020) != 0)) {
        tripTypes_ = java.util.Collections.unmodifiableList(tripTypes_);
        bitField0_ = (bitField0_ & ~0x00000020);
      }
      result.tripTypes_ = tripTypes_;
      if (((bitField0_ & 0x00000080) != 0)) {
        vehicleTypeCategories_ = java.util.Collections.unmodifiableList(vehicleTypeCategories_);
        bitField0_ = (bitField0_ & ~0x00000080);
      }
      result.vehicleTypeCategories_ = vehicleTypeCategories_;
      if (((bitField0_ & 0x00000100) != 0)) {
        requiredAttributes_ = requiredAttributes_.getUnmodifiableView();
        bitField0_ = (bitField0_ & ~0x00000100);
      }
      result.requiredAttributes_ = requiredAttributes_;
      if (((bitField0_ & 0x00000200) != 0)) {
        requiredOneOfAttributes_ = requiredOneOfAttributes_.getUnmodifiableView();
        bitField0_ = (bitField0_ & ~0x00000200);
      }
      result.requiredOneOfAttributes_ = requiredOneOfAttributes_;
      if (((bitField0_ & 0x00000400) != 0)) {
        requiredOneOfAttributeSets_ = requiredOneOfAttributeSets_.getUnmodifiableView();
        bitField0_ = (bitField0_ & ~0x00000400);
      }
      result.requiredOneOfAttributeSets_ = requiredOneOfAttributeSets_;
    }

    private void buildPartial0(google.maps.fleetengine.v1.ListVehiclesRequest result) {
      int from_bitField0_ = bitField0_;
      if (((from_bitField0_ & 0x00000001) != 0)) {
        result.header_ = headerBuilder_ == null
            ? header_
            : headerBuilder_.build();
      }
      if (((from_bitField0_ & 0x00000002) != 0)) {
        result.parent_ = parent_;
      }
      if (((from_bitField0_ & 0x00000004) != 0)) {
        result.pageSize_ = pageSize_;
      }
      if (((from_bitField0_ & 0x00000008) != 0)) {
        result.pageToken_ = pageToken_;
      }
      if (((from_bitField0_ & 0x00000010) != 0)) {
        result.minimumCapacity_ = minimumCapacityBuilder_ == null
            ? minimumCapacity_
            : minimumCapacityBuilder_.build();
      }
      if (((from_bitField0_ & 0x00000040) != 0)) {
        result.maximumStaleness_ = maximumStalenessBuilder_ == null
            ? maximumStaleness_
            : maximumStalenessBuilder_.build();
      }
      if (((from_bitField0_ & 0x00000800) != 0)) {
        result.vehicleState_ = vehicleState_;
      }
      if (((from_bitField0_ & 0x00001000) != 0)) {
        result.onTripOnly_ = onTripOnly_;
      }
    }

    @java.lang.Override
    public Builder clone() {
      return super.clone();
    }
    @java.lang.Override
    public Builder setField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        java.lang.Object value) {
      return super.setField(field, value);
    }
    @java.lang.Override
    public Builder clearField(
        com.google.protobuf.Descriptors.FieldDescriptor field) {
      return super.clearField(field);
    }
    @java.lang.Override
    public Builder clearOneof(
        com.google.protobuf.Descriptors.OneofDescriptor oneof) {
      return super.clearOneof(oneof);
    }
    @java.lang.Override
    public Builder setRepeatedField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        int index, java.lang.Object value) {
      return super.setRepeatedField(field, index, value);
    }
    @java.lang.Override
    public Builder addRepeatedField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        java.lang.Object value) {
      return super.addRepeatedField(field, value);
    }
    @java.lang.Override
    public Builder mergeFrom(com.google.protobuf.Message other) {
      if (other instanceof google.maps.fleetengine.v1.ListVehiclesRequest) {
        return mergeFrom((google.maps.fleetengine.v1.ListVehiclesRequest)other);
      } else {
        super.mergeFrom(other);
        return this;
      }
    }

    public Builder mergeFrom(google.maps.fleetengine.v1.ListVehiclesRequest other) {
      if (other == google.maps.fleetengine.v1.ListVehiclesRequest.getDefaultInstance()) return this;
      if (other.hasHeader()) {
        mergeHeader(other.getHeader());
      }
      if (!other.getParent().isEmpty()) {
        parent_ = other.parent_;
        bitField0_ |= 0x00000002;
        onChanged();
      }
      if (other.getPageSize() != 0) {
        setPageSize(other.getPageSize());
      }
      if (!other.getPageToken().isEmpty()) {
        pageToken_ = other.pageToken_;
        bitField0_ |= 0x00000008;
        onChanged();
      }
      if (other.hasMinimumCapacity()) {
        mergeMinimumCapacity(other.getMinimumCapacity());
      }
      if (!other.tripTypes_.isEmpty()) {
        if (tripTypes_.isEmpty()) {
          tripTypes_ = other.tripTypes_;
          bitField0_ = (bitField0_ & ~0x00000020);
        } else {
          ensureTripTypesIsMutable();
          tripTypes_.addAll(other.tripTypes_);
        }
        onChanged();
      }
      if (other.hasMaximumStaleness()) {
        mergeMaximumStaleness(other.getMaximumStaleness());
      }
      if (!other.vehicleTypeCategories_.isEmpty()) {
        if (vehicleTypeCategories_.isEmpty()) {
          vehicleTypeCategories_ = other.vehicleTypeCategories_;
          bitField0_ = (bitField0_ & ~0x00000080);
        } else {
          ensureVehicleTypeCategoriesIsMutable();
          vehicleTypeCategories_.addAll(other.vehicleTypeCategories_);
        }
        onChanged();
      }
      if (!other.requiredAttributes_.isEmpty()) {
        if (requiredAttributes_.isEmpty()) {
          requiredAttributes_ = other.requiredAttributes_;
          bitField0_ = (bitField0_ & ~0x00000100);
        } else {
          ensureRequiredAttributesIsMutable();
          requiredAttributes_.addAll(other.requiredAttributes_);
        }
        onChanged();
      }
      if (!other.requiredOneOfAttributes_.isEmpty()) {
        if (requiredOneOfAttributes_.isEmpty()) {
          requiredOneOfAttributes_ = other.requiredOneOfAttributes_;
          bitField0_ = (bitField0_ & ~0x00000200);
        } else {
          ensureRequiredOneOfAttributesIsMutable();
          requiredOneOfAttributes_.addAll(other.requiredOneOfAttributes_);
        }
        onChanged();
      }
      if (!other.requiredOneOfAttributeSets_.isEmpty()) {
        if (requiredOneOfAttributeSets_.isEmpty()) {
          requiredOneOfAttributeSets_ = other.requiredOneOfAttributeSets_;
          bitField0_ = (bitField0_ & ~0x00000400);
        } else {
          ensureRequiredOneOfAttributeSetsIsMutable();
          requiredOneOfAttributeSets_.addAll(other.requiredOneOfAttributeSets_);
        }
        onChanged();
      }
      if (other.vehicleState_ != 0) {
        setVehicleStateValue(other.getVehicleStateValue());
      }
      if (other.getOnTripOnly() != false) {
        setOnTripOnly(other.getOnTripOnly());
      }
      this.mergeUnknownFields(other.getUnknownFields());
      onChanged();
      return this;
    }

    @java.lang.Override
    public final boolean isInitialized() {
      return true;
    }

    @java.lang.Override
    public Builder mergeFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 10: {
              parent_ = input.readStringRequireUtf8();
              bitField0_ |= 0x00000002;
              break;
            } // case 10
            case 24: {
              pageSize_ = input.readInt32();
              bitField0_ |= 0x00000004;
              break;
            } // case 24
            case 34: {
              pageToken_ = input.readStringRequireUtf8();
              bitField0_ |= 0x00000008;
              break;
            } // case 34
            case 50: {
              input.readMessage(
                  getMinimumCapacityFieldBuilder().getBuilder(),
                  extensionRegistry);
              bitField0_ |= 0x00000010;
              break;
            } // case 50
            case 56: {
              int tmpRaw = input.readEnum();
              ensureTripTypesIsMutable();
              tripTypes_.add(tmpRaw);
              break;
            } // case 56
            case 58: {
              int length = input.readRawVarint32();
              int oldLimit = input.pushLimit(length);
              while(input.getBytesUntilLimit() > 0) {
                int tmpRaw = input.readEnum();
                ensureTripTypesIsMutable();
                tripTypes_.add(tmpRaw);
              }
              input.popLimit(oldLimit);
              break;
            } // case 58
            case 66: {
              input.readMessage(
                  getMaximumStalenessFieldBuilder().getBuilder(),
                  extensionRegistry);
              bitField0_ |= 0x00000040;
              break;
            } // case 66
            case 72: {
              int tmpRaw = input.readEnum();
              ensureVehicleTypeCategoriesIsMutable();
              vehicleTypeCategories_.add(tmpRaw);
              break;
            } // case 72
            case 74: {
              int length = input.readRawVarint32();
              int oldLimit = input.pushLimit(length);
              while(input.getBytesUntilLimit() > 0) {
                int tmpRaw = input.readEnum();
                ensureVehicleTypeCategoriesIsMutable();
                vehicleTypeCategories_.add(tmpRaw);
              }
              input.popLimit(oldLimit);
              break;
            } // case 74
            case 82: {
              java.lang.String s = input.readStringRequireUtf8();
              ensureRequiredAttributesIsMutable();
              requiredAttributes_.add(s);
              break;
            } // case 82
            case 88: {
              vehicleState_ = input.readEnum();
              bitField0_ |= 0x00000800;
              break;
            } // case 88
            case 98: {
              input.readMessage(
                  getHeaderFieldBuilder().getBuilder(),
                  extensionRegistry);
              bitField0_ |= 0x00000001;
              break;
            } // case 98
            case 106: {
              java.lang.String s = input.readStringRequireUtf8();
              ensureRequiredOneOfAttributesIsMutable();
              requiredOneOfAttributes_.add(s);
              break;
            } // case 106
            case 112: {
              onTripOnly_ = input.readBool();
              bitField0_ |= 0x00001000;
              break;
            } // case 112
            case 122: {
              java.lang.String s = input.readStringRequireUtf8();
              ensureRequiredOneOfAttributeSetsIsMutable();
              requiredOneOfAttributeSets_.add(s);
              break;
            } // case 122
            default: {
              if (!super.parseUnknownField(input, extensionRegistry, tag)) {
                done = true; // was an endgroup tag
              }
              break;
            } // default:
          } // switch (tag)
        } // while (!done)
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.unwrapIOException();
      } finally {
        onChanged();
      } // finally
      return this;
    }
    private int bitField0_;

    private google.maps.fleetengine.v1.RequestHeader header_;
    private com.google.protobuf.SingleFieldBuilderV3<
        google.maps.fleetengine.v1.RequestHeader, google.maps.fleetengine.v1.RequestHeader.Builder, google.maps.fleetengine.v1.RequestHeaderOrBuilder> headerBuilder_;
    /**
     * <pre>
     * The standard Fleet Engine request header.
     * </pre>
     *
     * <code>.maps.fleetengine.v1.RequestHeader header = 12;</code>
     * @return Whether the header field is set.
     */
    public boolean hasHeader() {
      return ((bitField0_ & 0x00000001) != 0);
    }
    /**
     * <pre>
     * The standard Fleet Engine request header.
     * </pre>
     *
     * <code>.maps.fleetengine.v1.RequestHeader header = 12;</code>
     * @return The header.
     */
    public google.maps.fleetengine.v1.RequestHeader getHeader() {
      if (headerBuilder_ == null) {
        return header_ == null ? google.maps.fleetengine.v1.RequestHeader.getDefaultInstance() : header_;
      } else {
        return headerBuilder_.getMessage();
      }
    }
    /**
     * <pre>
     * The standard Fleet Engine request header.
     * </pre>
     *
     * <code>.maps.fleetengine.v1.RequestHeader header = 12;</code>
     */
    public Builder setHeader(google.maps.fleetengine.v1.RequestHeader value) {
      if (headerBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        header_ = value;
      } else {
        headerBuilder_.setMessage(value);
      }
      bitField0_ |= 0x00000001;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * The standard Fleet Engine request header.
     * </pre>
     *
     * <code>.maps.fleetengine.v1.RequestHeader header = 12;</code>
     */
    public Builder setHeader(
        google.maps.fleetengine.v1.RequestHeader.Builder builderForValue) {
      if (headerBuilder_ == null) {
        header_ = builderForValue.build();
      } else {
        headerBuilder_.setMessage(builderForValue.build());
      }
      bitField0_ |= 0x00000001;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * The standard Fleet Engine request header.
     * </pre>
     *
     * <code>.maps.fleetengine.v1.RequestHeader header = 12;</code>
     */
    public Builder mergeHeader(google.maps.fleetengine.v1.RequestHeader value) {
      if (headerBuilder_ == null) {
        if (((bitField0_ & 0x00000001) != 0) &&
          header_ != null &&
          header_ != google.maps.fleetengine.v1.RequestHeader.getDefaultInstance()) {
          getHeaderBuilder().mergeFrom(value);
        } else {
          header_ = value;
        }
      } else {
        headerBuilder_.mergeFrom(value);
      }
      bitField0_ |= 0x00000001;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * The standard Fleet Engine request header.
     * </pre>
     *
     * <code>.maps.fleetengine.v1.RequestHeader header = 12;</code>
     */
    public Builder clearHeader() {
      bitField0_ = (bitField0_ & ~0x00000001);
      header_ = null;
      if (headerBuilder_ != null) {
        headerBuilder_.dispose();
        headerBuilder_ = null;
      }
      onChanged();
      return this;
    }
    /**
     * <pre>
     * The standard Fleet Engine request header.
     * </pre>
     *
     * <code>.maps.fleetengine.v1.RequestHeader header = 12;</code>
     */
    public google.maps.fleetengine.v1.RequestHeader.Builder getHeaderBuilder() {
      bitField0_ |= 0x00000001;
      onChanged();
      return getHeaderFieldBuilder().getBuilder();
    }
    /**
     * <pre>
     * The standard Fleet Engine request header.
     * </pre>
     *
     * <code>.maps.fleetengine.v1.RequestHeader header = 12;</code>
     */
    public google.maps.fleetengine.v1.RequestHeaderOrBuilder getHeaderOrBuilder() {
      if (headerBuilder_ != null) {
        return headerBuilder_.getMessageOrBuilder();
      } else {
        return header_ == null ?
            google.maps.fleetengine.v1.RequestHeader.getDefaultInstance() : header_;
      }
    }
    /**
     * <pre>
     * The standard Fleet Engine request header.
     * </pre>
     *
     * <code>.maps.fleetengine.v1.RequestHeader header = 12;</code>
     */
    private com.google.protobuf.SingleFieldBuilderV3<
        google.maps.fleetengine.v1.RequestHeader, google.maps.fleetengine.v1.RequestHeader.Builder, google.maps.fleetengine.v1.RequestHeaderOrBuilder> 
        getHeaderFieldBuilder() {
      if (headerBuilder_ == null) {
        headerBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
            google.maps.fleetengine.v1.RequestHeader, google.maps.fleetengine.v1.RequestHeader.Builder, google.maps.fleetengine.v1.RequestHeaderOrBuilder>(
                getHeader(),
                getParentForChildren(),
                isClean());
        header_ = null;
      }
      return headerBuilder_;
    }

    private java.lang.Object parent_ = "";
    /**
     * <pre>
     * Required. Must be in the format `providers/{provider}`.
     * The provider must be the Project ID (for example, `sample-cloud-project`)
     * of the Google Cloud Project of which the service account making
     * this call is a member.
     * </pre>
     *
     * <code>string parent = 1 [(.google.api.field_behavior) = REQUIRED];</code>
     * @return The parent.
     */
    public java.lang.String getParent() {
      java.lang.Object ref = parent_;
      if (!(ref instanceof java.lang.String)) {
        com.google.protobuf.ByteString bs =
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        parent_ = s;
        return s;
      } else {
        return (java.lang.String) ref;
      }
    }
    /**
     * <pre>
     * Required. Must be in the format `providers/{provider}`.
     * The provider must be the Project ID (for example, `sample-cloud-project`)
     * of the Google Cloud Project of which the service account making
     * this call is a member.
     * </pre>
     *
     * <code>string parent = 1 [(.google.api.field_behavior) = REQUIRED];</code>
     * @return The bytes for parent.
     */
    public com.google.protobuf.ByteString
        getParentBytes() {
      java.lang.Object ref = parent_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        parent_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }
    /**
     * <pre>
     * Required. Must be in the format `providers/{provider}`.
     * The provider must be the Project ID (for example, `sample-cloud-project`)
     * of the Google Cloud Project of which the service account making
     * this call is a member.
     * </pre>
     *
     * <code>string parent = 1 [(.google.api.field_behavior) = REQUIRED];</code>
     * @param value The parent to set.
     * @return This builder for chaining.
     */
    public Builder setParent(
        java.lang.String value) {
      if (value == null) { throw new NullPointerException(); }
      parent_ = value;
      bitField0_ |= 0x00000002;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * Required. Must be in the format `providers/{provider}`.
     * The provider must be the Project ID (for example, `sample-cloud-project`)
     * of the Google Cloud Project of which the service account making
     * this call is a member.
     * </pre>
     *
     * <code>string parent = 1 [(.google.api.field_behavior) = REQUIRED];</code>
     * @return This builder for chaining.
     */
    public Builder clearParent() {
      parent_ = getDefaultInstance().getParent();
      bitField0_ = (bitField0_ & ~0x00000002);
      onChanged();
      return this;
    }
    /**
     * <pre>
     * Required. Must be in the format `providers/{provider}`.
     * The provider must be the Project ID (for example, `sample-cloud-project`)
     * of the Google Cloud Project of which the service account making
     * this call is a member.
     * </pre>
     *
     * <code>string parent = 1 [(.google.api.field_behavior) = REQUIRED];</code>
     * @param value The bytes for parent to set.
     * @return This builder for chaining.
     */
    public Builder setParentBytes(
        com.google.protobuf.ByteString value) {
      if (value == null) { throw new NullPointerException(); }
      checkByteStringIsUtf8(value);
      parent_ = value;
      bitField0_ |= 0x00000002;
      onChanged();
      return this;
    }

    private int pageSize_ ;
    /**
     * <pre>
     * The maximum number of vehicles to return.
     * Default value: 100.
     * </pre>
     *
     * <code>int32 page_size = 3;</code>
     * @return The pageSize.
     */
    @java.lang.Override
    public int getPageSize() {
      return pageSize_;
    }
    /**
     * <pre>
     * The maximum number of vehicles to return.
     * Default value: 100.
     * </pre>
     *
     * <code>int32 page_size = 3;</code>
     * @param value The pageSize to set.
     * @return This builder for chaining.
     */
    public Builder setPageSize(int value) {
      
      pageSize_ = value;
      bitField0_ |= 0x00000004;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * The maximum number of vehicles to return.
     * Default value: 100.
     * </pre>
     *
     * <code>int32 page_size = 3;</code>
     * @return This builder for chaining.
     */
    public Builder clearPageSize() {
      bitField0_ = (bitField0_ & ~0x00000004);
      pageSize_ = 0;
      onChanged();
      return this;
    }

    private java.lang.Object pageToken_ = "";
    /**
     * <pre>
     * The value of the `next_page_token` provided by a previous call to
     * `ListVehicles` so that you can paginate through groups of vehicles. The
     * value is undefined if the filter criteria of the request is not the same as
     * the filter criteria for the previous call to `ListVehicles`.
     * </pre>
     *
     * <code>string page_token = 4;</code>
     * @return The pageToken.
     */
    public java.lang.String getPageToken() {
      java.lang.Object ref = pageToken_;
      if (!(ref instanceof java.lang.String)) {
        com.google.protobuf.ByteString bs =
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        pageToken_ = s;
        return s;
      } else {
        return (java.lang.String) ref;
      }
    }
    /**
     * <pre>
     * The value of the `next_page_token` provided by a previous call to
     * `ListVehicles` so that you can paginate through groups of vehicles. The
     * value is undefined if the filter criteria of the request is not the same as
     * the filter criteria for the previous call to `ListVehicles`.
     * </pre>
     *
     * <code>string page_token = 4;</code>
     * @return The bytes for pageToken.
     */
    public com.google.protobuf.ByteString
        getPageTokenBytes() {
      java.lang.Object ref = pageToken_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        pageToken_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }
    /**
     * <pre>
     * The value of the `next_page_token` provided by a previous call to
     * `ListVehicles` so that you can paginate through groups of vehicles. The
     * value is undefined if the filter criteria of the request is not the same as
     * the filter criteria for the previous call to `ListVehicles`.
     * </pre>
     *
     * <code>string page_token = 4;</code>
     * @param value The pageToken to set.
     * @return This builder for chaining.
     */
    public Builder setPageToken(
        java.lang.String value) {
      if (value == null) { throw new NullPointerException(); }
      pageToken_ = value;
      bitField0_ |= 0x00000008;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * The value of the `next_page_token` provided by a previous call to
     * `ListVehicles` so that you can paginate through groups of vehicles. The
     * value is undefined if the filter criteria of the request is not the same as
     * the filter criteria for the previous call to `ListVehicles`.
     * </pre>
     *
     * <code>string page_token = 4;</code>
     * @return This builder for chaining.
     */
    public Builder clearPageToken() {
      pageToken_ = getDefaultInstance().getPageToken();
      bitField0_ = (bitField0_ & ~0x00000008);
      onChanged();
      return this;
    }
    /**
     * <pre>
     * The value of the `next_page_token` provided by a previous call to
     * `ListVehicles` so that you can paginate through groups of vehicles. The
     * value is undefined if the filter criteria of the request is not the same as
     * the filter criteria for the previous call to `ListVehicles`.
     * </pre>
     *
     * <code>string page_token = 4;</code>
     * @param value The bytes for pageToken to set.
     * @return This builder for chaining.
     */
    public Builder setPageTokenBytes(
        com.google.protobuf.ByteString value) {
      if (value == null) { throw new NullPointerException(); }
      checkByteStringIsUtf8(value);
      pageToken_ = value;
      bitField0_ |= 0x00000008;
      onChanged();
      return this;
    }

    private com.google.protobuf.Int32Value minimumCapacity_;
    private com.google.protobuf.SingleFieldBuilderV3<
        com.google.protobuf.Int32Value, com.google.protobuf.Int32Value.Builder, com.google.protobuf.Int32ValueOrBuilder> minimumCapacityBuilder_;
    /**
     * <pre>
     * Specifies the required minimum capacity of the vehicle. All vehicles
     * returned will have a `maximum_capacity` greater than or equal to this
     * value. If set, must be greater or equal to 0.
     * </pre>
     *
     * <code>.google.protobuf.Int32Value minimum_capacity = 6;</code>
     * @return Whether the minimumCapacity field is set.
     */
    public boolean hasMinimumCapacity() {
      return ((bitField0_ & 0x00000010) != 0);
    }
    /**
     * <pre>
     * Specifies the required minimum capacity of the vehicle. All vehicles
     * returned will have a `maximum_capacity` greater than or equal to this
     * value. If set, must be greater or equal to 0.
     * </pre>
     *
     * <code>.google.protobuf.Int32Value minimum_capacity = 6;</code>
     * @return The minimumCapacity.
     */
    public com.google.protobuf.Int32Value getMinimumCapacity() {
      if (minimumCapacityBuilder_ == null) {
        return minimumCapacity_ == null ? com.google.protobuf.Int32Value.getDefaultInstance() : minimumCapacity_;
      } else {
        return minimumCapacityBuilder_.getMessage();
      }
    }
    /**
     * <pre>
     * Specifies the required minimum capacity of the vehicle. All vehicles
     * returned will have a `maximum_capacity` greater than or equal to this
     * value. If set, must be greater or equal to 0.
     * </pre>
     *
     * <code>.google.protobuf.Int32Value minimum_capacity = 6;</code>
     */
    public Builder setMinimumCapacity(com.google.protobuf.Int32Value value) {
      if (minimumCapacityBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        minimumCapacity_ = value;
      } else {
        minimumCapacityBuilder_.setMessage(value);
      }
      bitField0_ |= 0x00000010;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * Specifies the required minimum capacity of the vehicle. All vehicles
     * returned will have a `maximum_capacity` greater than or equal to this
     * value. If set, must be greater or equal to 0.
     * </pre>
     *
     * <code>.google.protobuf.Int32Value minimum_capacity = 6;</code>
     */
    public Builder setMinimumCapacity(
        com.google.protobuf.Int32Value.Builder builderForValue) {
      if (minimumCapacityBuilder_ == null) {
        minimumCapacity_ = builderForValue.build();
      } else {
        minimumCapacityBuilder_.setMessage(builderForValue.build());
      }
      bitField0_ |= 0x00000010;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * Specifies the required minimum capacity of the vehicle. All vehicles
     * returned will have a `maximum_capacity` greater than or equal to this
     * value. If set, must be greater or equal to 0.
     * </pre>
     *
     * <code>.google.protobuf.Int32Value minimum_capacity = 6;</code>
     */
    public Builder mergeMinimumCapacity(com.google.protobuf.Int32Value value) {
      if (minimumCapacityBuilder_ == null) {
        if (((bitField0_ & 0x00000010) != 0) &&
          minimumCapacity_ != null &&
          minimumCapacity_ != com.google.protobuf.Int32Value.getDefaultInstance()) {
          getMinimumCapacityBuilder().mergeFrom(value);
        } else {
          minimumCapacity_ = value;
        }
      } else {
        minimumCapacityBuilder_.mergeFrom(value);
      }
      bitField0_ |= 0x00000010;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * Specifies the required minimum capacity of the vehicle. All vehicles
     * returned will have a `maximum_capacity` greater than or equal to this
     * value. If set, must be greater or equal to 0.
     * </pre>
     *
     * <code>.google.protobuf.Int32Value minimum_capacity = 6;</code>
     */
    public Builder clearMinimumCapacity() {
      bitField0_ = (bitField0_ & ~0x00000010);
      minimumCapacity_ = null;
      if (minimumCapacityBuilder_ != null) {
        minimumCapacityBuilder_.dispose();
        minimumCapacityBuilder_ = null;
      }
      onChanged();
      return this;
    }
    /**
     * <pre>
     * Specifies the required minimum capacity of the vehicle. All vehicles
     * returned will have a `maximum_capacity` greater than or equal to this
     * value. If set, must be greater or equal to 0.
     * </pre>
     *
     * <code>.google.protobuf.Int32Value minimum_capacity = 6;</code>
     */
    public com.google.protobuf.Int32Value.Builder getMinimumCapacityBuilder() {
      bitField0_ |= 0x00000010;
      onChanged();
      return getMinimumCapacityFieldBuilder().getBuilder();
    }
    /**
     * <pre>
     * Specifies the required minimum capacity of the vehicle. All vehicles
     * returned will have a `maximum_capacity` greater than or equal to this
     * value. If set, must be greater or equal to 0.
     * </pre>
     *
     * <code>.google.protobuf.Int32Value minimum_capacity = 6;</code>
     */
    public com.google.protobuf.Int32ValueOrBuilder getMinimumCapacityOrBuilder() {
      if (minimumCapacityBuilder_ != null) {
        return minimumCapacityBuilder_.getMessageOrBuilder();
      } else {
        return minimumCapacity_ == null ?
            com.google.protobuf.Int32Value.getDefaultInstance() : minimumCapacity_;
      }
    }
    /**
     * <pre>
     * Specifies the required minimum capacity of the vehicle. All vehicles
     * returned will have a `maximum_capacity` greater than or equal to this
     * value. If set, must be greater or equal to 0.
     * </pre>
     *
     * <code>.google.protobuf.Int32Value minimum_capacity = 6;</code>
     */
    private com.google.protobuf.SingleFieldBuilderV3<
        com.google.protobuf.Int32Value, com.google.protobuf.Int32Value.Builder, com.google.protobuf.Int32ValueOrBuilder> 
        getMinimumCapacityFieldBuilder() {
      if (minimumCapacityBuilder_ == null) {
        minimumCapacityBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
            com.google.protobuf.Int32Value, com.google.protobuf.Int32Value.Builder, com.google.protobuf.Int32ValueOrBuilder>(
                getMinimumCapacity(),
                getParentForChildren(),
                isClean());
        minimumCapacity_ = null;
      }
      return minimumCapacityBuilder_;
    }

    private java.util.List<java.lang.Integer> tripTypes_ =
      java.util.Collections.emptyList();
    private void ensureTripTypesIsMutable() {
      if (!((bitField0_ & 0x00000020) != 0)) {
        tripTypes_ = new java.util.ArrayList<java.lang.Integer>(tripTypes_);
        bitField0_ |= 0x00000020;
      }
    }
    /**
     * <pre>
     * Restricts the response to vehicles that support at least one of the
     * specified trip types.
     * </pre>
     *
     * <code>repeated .maps.fleetengine.v1.TripType trip_types = 7;</code>
     * @return A list containing the tripTypes.
     */
    public java.util.List<google.maps.fleetengine.v1.TripType> getTripTypesList() {
      return new com.google.protobuf.Internal.ListAdapter<
          java.lang.Integer, google.maps.fleetengine.v1.TripType>(tripTypes_, tripTypes_converter_);
    }
    /**
     * <pre>
     * Restricts the response to vehicles that support at least one of the
     * specified trip types.
     * </pre>
     *
     * <code>repeated .maps.fleetengine.v1.TripType trip_types = 7;</code>
     * @return The count of tripTypes.
     */
    public int getTripTypesCount() {
      return tripTypes_.size();
    }
    /**
     * <pre>
     * Restricts the response to vehicles that support at least one of the
     * specified trip types.
     * </pre>
     *
     * <code>repeated .maps.fleetengine.v1.TripType trip_types = 7;</code>
     * @param index The index of the element to return.
     * @return The tripTypes at the given index.
     */
    public google.maps.fleetengine.v1.TripType getTripTypes(int index) {
      return tripTypes_converter_.convert(tripTypes_.get(index));
    }
    /**
     * <pre>
     * Restricts the response to vehicles that support at least one of the
     * specified trip types.
     * </pre>
     *
     * <code>repeated .maps.fleetengine.v1.TripType trip_types = 7;</code>
     * @param index The index to set the value at.
     * @param value The tripTypes to set.
     * @return This builder for chaining.
     */
    public Builder setTripTypes(
        int index, google.maps.fleetengine.v1.TripType value) {
      if (value == null) {
        throw new NullPointerException();
      }
      ensureTripTypesIsMutable();
      tripTypes_.set(index, value.getNumber());
      onChanged();
      return this;
    }
    /**
     * <pre>
     * Restricts the response to vehicles that support at least one of the
     * specified trip types.
     * </pre>
     *
     * <code>repeated .maps.fleetengine.v1.TripType trip_types = 7;</code>
     * @param value The tripTypes to add.
     * @return This builder for chaining.
     */
    public Builder addTripTypes(google.maps.fleetengine.v1.TripType value) {
      if (value == null) {
        throw new NullPointerException();
      }
      ensureTripTypesIsMutable();
      tripTypes_.add(value.getNumber());
      onChanged();
      return this;
    }
    /**
     * <pre>
     * Restricts the response to vehicles that support at least one of the
     * specified trip types.
     * </pre>
     *
     * <code>repeated .maps.fleetengine.v1.TripType trip_types = 7;</code>
     * @param values The tripTypes to add.
     * @return This builder for chaining.
     */
    public Builder addAllTripTypes(
        java.lang.Iterable<? extends google.maps.fleetengine.v1.TripType> values) {
      ensureTripTypesIsMutable();
      for (google.maps.fleetengine.v1.TripType value : values) {
        tripTypes_.add(value.getNumber());
      }
      onChanged();
      return this;
    }
    /**
     * <pre>
     * Restricts the response to vehicles that support at least one of the
     * specified trip types.
     * </pre>
     *
     * <code>repeated .maps.fleetengine.v1.TripType trip_types = 7;</code>
     * @return This builder for chaining.
     */
    public Builder clearTripTypes() {
      tripTypes_ = java.util.Collections.emptyList();
      bitField0_ = (bitField0_ & ~0x00000020);
      onChanged();
      return this;
    }
    /**
     * <pre>
     * Restricts the response to vehicles that support at least one of the
     * specified trip types.
     * </pre>
     *
     * <code>repeated .maps.fleetengine.v1.TripType trip_types = 7;</code>
     * @return A list containing the enum numeric values on the wire for tripTypes.
     */
    public java.util.List<java.lang.Integer>
    getTripTypesValueList() {
      return java.util.Collections.unmodifiableList(tripTypes_);
    }
    /**
     * <pre>
     * Restricts the response to vehicles that support at least one of the
     * specified trip types.
     * </pre>
     *
     * <code>repeated .maps.fleetengine.v1.TripType trip_types = 7;</code>
     * @param index The index of the value to return.
     * @return The enum numeric value on the wire of tripTypes at the given index.
     */
    public int getTripTypesValue(int index) {
      return tripTypes_.get(index);
    }
    /**
     * <pre>
     * Restricts the response to vehicles that support at least one of the
     * specified trip types.
     * </pre>
     *
     * <code>repeated .maps.fleetengine.v1.TripType trip_types = 7;</code>
     * @param index The index to set the value at.
     * @param value The enum numeric value on the wire for tripTypes to set.
     * @return This builder for chaining.
     */
    public Builder setTripTypesValue(
        int index, int value) {
      ensureTripTypesIsMutable();
      tripTypes_.set(index, value);
      onChanged();
      return this;
    }
    /**
     * <pre>
     * Restricts the response to vehicles that support at least one of the
     * specified trip types.
     * </pre>
     *
     * <code>repeated .maps.fleetengine.v1.TripType trip_types = 7;</code>
     * @param value The enum numeric value on the wire for tripTypes to add.
     * @return This builder for chaining.
     */
    public Builder addTripTypesValue(int value) {
      ensureTripTypesIsMutable();
      tripTypes_.add(value);
      onChanged();
      return this;
    }
    /**
     * <pre>
     * Restricts the response to vehicles that support at least one of the
     * specified trip types.
     * </pre>
     *
     * <code>repeated .maps.fleetengine.v1.TripType trip_types = 7;</code>
     * @param values The enum numeric values on the wire for tripTypes to add.
     * @return This builder for chaining.
     */
    public Builder addAllTripTypesValue(
        java.lang.Iterable<java.lang.Integer> values) {
      ensureTripTypesIsMutable();
      for (int value : values) {
        tripTypes_.add(value);
      }
      onChanged();
      return this;
    }

    private com.google.protobuf.Duration maximumStaleness_;
    private com.google.protobuf.SingleFieldBuilderV3<
        com.google.protobuf.Duration, com.google.protobuf.Duration.Builder, com.google.protobuf.DurationOrBuilder> maximumStalenessBuilder_;
    /**
     * <pre>
     * Restricts the response to vehicles that have updated their locations within
     * the specified duration at the time of the call. If present, must be a valid
     * positive duration.
     * </pre>
     *
     * <code>.google.protobuf.Duration maximum_staleness = 8;</code>
     * @return Whether the maximumStaleness field is set.
     */
    public boolean hasMaximumStaleness() {
      return ((bitField0_ & 0x00000040) != 0);
    }
    /**
     * <pre>
     * Restricts the response to vehicles that have updated their locations within
     * the specified duration at the time of the call. If present, must be a valid
     * positive duration.
     * </pre>
     *
     * <code>.google.protobuf.Duration maximum_staleness = 8;</code>
     * @return The maximumStaleness.
     */
    public com.google.protobuf.Duration getMaximumStaleness() {
      if (maximumStalenessBuilder_ == null) {
        return maximumStaleness_ == null ? com.google.protobuf.Duration.getDefaultInstance() : maximumStaleness_;
      } else {
        return maximumStalenessBuilder_.getMessage();
      }
    }
    /**
     * <pre>
     * Restricts the response to vehicles that have updated their locations within
     * the specified duration at the time of the call. If present, must be a valid
     * positive duration.
     * </pre>
     *
     * <code>.google.protobuf.Duration maximum_staleness = 8;</code>
     */
    public Builder setMaximumStaleness(com.google.protobuf.Duration value) {
      if (maximumStalenessBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        maximumStaleness_ = value;
      } else {
        maximumStalenessBuilder_.setMessage(value);
      }
      bitField0_ |= 0x00000040;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * Restricts the response to vehicles that have updated their locations within
     * the specified duration at the time of the call. If present, must be a valid
     * positive duration.
     * </pre>
     *
     * <code>.google.protobuf.Duration maximum_staleness = 8;</code>
     */
    public Builder setMaximumStaleness(
        com.google.protobuf.Duration.Builder builderForValue) {
      if (maximumStalenessBuilder_ == null) {
        maximumStaleness_ = builderForValue.build();
      } else {
        maximumStalenessBuilder_.setMessage(builderForValue.build());
      }
      bitField0_ |= 0x00000040;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * Restricts the response to vehicles that have updated their locations within
     * the specified duration at the time of the call. If present, must be a valid
     * positive duration.
     * </pre>
     *
     * <code>.google.protobuf.Duration maximum_staleness = 8;</code>
     */
    public Builder mergeMaximumStaleness(com.google.protobuf.Duration value) {
      if (maximumStalenessBuilder_ == null) {
        if (((bitField0_ & 0x00000040) != 0) &&
          maximumStaleness_ != null &&
          maximumStaleness_ != com.google.protobuf.Duration.getDefaultInstance()) {
          getMaximumStalenessBuilder().mergeFrom(value);
        } else {
          maximumStaleness_ = value;
        }
      } else {
        maximumStalenessBuilder_.mergeFrom(value);
      }
      bitField0_ |= 0x00000040;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * Restricts the response to vehicles that have updated their locations within
     * the specified duration at the time of the call. If present, must be a valid
     * positive duration.
     * </pre>
     *
     * <code>.google.protobuf.Duration maximum_staleness = 8;</code>
     */
    public Builder clearMaximumStaleness() {
      bitField0_ = (bitField0_ & ~0x00000040);
      maximumStaleness_ = null;
      if (maximumStalenessBuilder_ != null) {
        maximumStalenessBuilder_.dispose();
        maximumStalenessBuilder_ = null;
      }
      onChanged();
      return this;
    }
    /**
     * <pre>
     * Restricts the response to vehicles that have updated their locations within
     * the specified duration at the time of the call. If present, must be a valid
     * positive duration.
     * </pre>
     *
     * <code>.google.protobuf.Duration maximum_staleness = 8;</code>
     */
    public com.google.protobuf.Duration.Builder getMaximumStalenessBuilder() {
      bitField0_ |= 0x00000040;
      onChanged();
      return getMaximumStalenessFieldBuilder().getBuilder();
    }
    /**
     * <pre>
     * Restricts the response to vehicles that have updated their locations within
     * the specified duration at the time of the call. If present, must be a valid
     * positive duration.
     * </pre>
     *
     * <code>.google.protobuf.Duration maximum_staleness = 8;</code>
     */
    public com.google.protobuf.DurationOrBuilder getMaximumStalenessOrBuilder() {
      if (maximumStalenessBuilder_ != null) {
        return maximumStalenessBuilder_.getMessageOrBuilder();
      } else {
        return maximumStaleness_ == null ?
            com.google.protobuf.Duration.getDefaultInstance() : maximumStaleness_;
      }
    }
    /**
     * <pre>
     * Restricts the response to vehicles that have updated their locations within
     * the specified duration at the time of the call. If present, must be a valid
     * positive duration.
     * </pre>
     *
     * <code>.google.protobuf.Duration maximum_staleness = 8;</code>
     */
    private com.google.protobuf.SingleFieldBuilderV3<
        com.google.protobuf.Duration, com.google.protobuf.Duration.Builder, com.google.protobuf.DurationOrBuilder> 
        getMaximumStalenessFieldBuilder() {
      if (maximumStalenessBuilder_ == null) {
        maximumStalenessBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
            com.google.protobuf.Duration, com.google.protobuf.Duration.Builder, com.google.protobuf.DurationOrBuilder>(
                getMaximumStaleness(),
                getParentForChildren(),
                isClean());
        maximumStaleness_ = null;
      }
      return maximumStalenessBuilder_;
    }

    private java.util.List<java.lang.Integer> vehicleTypeCategories_ =
      java.util.Collections.emptyList();
    private void ensureVehicleTypeCategoriesIsMutable() {
      if (!((bitField0_ & 0x00000080) != 0)) {
        vehicleTypeCategories_ = new java.util.ArrayList<java.lang.Integer>(vehicleTypeCategories_);
        bitField0_ |= 0x00000080;
      }
    }
    /**
     * <pre>
     * Required. Restricts the response to vehicles with one of the specified type
     * categories.
     * </pre>
     *
     * <code>repeated .maps.fleetengine.v1.Vehicle.VehicleType.Category vehicle_type_categories = 9 [(.google.api.field_behavior) = REQUIRED];</code>
     * @return A list containing the vehicleTypeCategories.
     */
    public java.util.List<google.maps.fleetengine.v1.Vehicle.VehicleType.Category> getVehicleTypeCategoriesList() {
      return new com.google.protobuf.Internal.ListAdapter<
          java.lang.Integer, google.maps.fleetengine.v1.Vehicle.VehicleType.Category>(vehicleTypeCategories_, vehicleTypeCategories_converter_);
    }
    /**
     * <pre>
     * Required. Restricts the response to vehicles with one of the specified type
     * categories.
     * </pre>
     *
     * <code>repeated .maps.fleetengine.v1.Vehicle.VehicleType.Category vehicle_type_categories = 9 [(.google.api.field_behavior) = REQUIRED];</code>
     * @return The count of vehicleTypeCategories.
     */
    public int getVehicleTypeCategoriesCount() {
      return vehicleTypeCategories_.size();
    }
    /**
     * <pre>
     * Required. Restricts the response to vehicles with one of the specified type
     * categories.
     * </pre>
     *
     * <code>repeated .maps.fleetengine.v1.Vehicle.VehicleType.Category vehicle_type_categories = 9 [(.google.api.field_behavior) = REQUIRED];</code>
     * @param index The index of the element to return.
     * @return The vehicleTypeCategories at the given index.
     */
    public google.maps.fleetengine.v1.Vehicle.VehicleType.Category getVehicleTypeCategories(int index) {
      return vehicleTypeCategories_converter_.convert(vehicleTypeCategories_.get(index));
    }
    /**
     * <pre>
     * Required. Restricts the response to vehicles with one of the specified type
     * categories.
     * </pre>
     *
     * <code>repeated .maps.fleetengine.v1.Vehicle.VehicleType.Category vehicle_type_categories = 9 [(.google.api.field_behavior) = REQUIRED];</code>
     * @param index The index to set the value at.
     * @param value The vehicleTypeCategories to set.
     * @return This builder for chaining.
     */
    public Builder setVehicleTypeCategories(
        int index, google.maps.fleetengine.v1.Vehicle.VehicleType.Category value) {
      if (value == null) {
        throw new NullPointerException();
      }
      ensureVehicleTypeCategoriesIsMutable();
      vehicleTypeCategories_.set(index, value.getNumber());
      onChanged();
      return this;
    }
    /**
     * <pre>
     * Required. Restricts the response to vehicles with one of the specified type
     * categories.
     * </pre>
     *
     * <code>repeated .maps.fleetengine.v1.Vehicle.VehicleType.Category vehicle_type_categories = 9 [(.google.api.field_behavior) = REQUIRED];</code>
     * @param value The vehicleTypeCategories to add.
     * @return This builder for chaining.
     */
    public Builder addVehicleTypeCategories(google.maps.fleetengine.v1.Vehicle.VehicleType.Category value) {
      if (value == null) {
        throw new NullPointerException();
      }
      ensureVehicleTypeCategoriesIsMutable();
      vehicleTypeCategories_.add(value.getNumber());
      onChanged();
      return this;
    }
    /**
     * <pre>
     * Required. Restricts the response to vehicles with one of the specified type
     * categories.
     * </pre>
     *
     * <code>repeated .maps.fleetengine.v1.Vehicle.VehicleType.Category vehicle_type_categories = 9 [(.google.api.field_behavior) = REQUIRED];</code>
     * @param values The vehicleTypeCategories to add.
     * @return This builder for chaining.
     */
    public Builder addAllVehicleTypeCategories(
        java.lang.Iterable<? extends google.maps.fleetengine.v1.Vehicle.VehicleType.Category> values) {
      ensureVehicleTypeCategoriesIsMutable();
      for (google.maps.fleetengine.v1.Vehicle.VehicleType.Category value : values) {
        vehicleTypeCategories_.add(value.getNumber());
      }
      onChanged();
      return this;
    }
    /**
     * <pre>
     * Required. Restricts the response to vehicles with one of the specified type
     * categories.
     * </pre>
     *
     * <code>repeated .maps.fleetengine.v1.Vehicle.VehicleType.Category vehicle_type_categories = 9 [(.google.api.field_behavior) = REQUIRED];</code>
     * @return This builder for chaining.
     */
    public Builder clearVehicleTypeCategories() {
      vehicleTypeCategories_ = java.util.Collections.emptyList();
      bitField0_ = (bitField0_ & ~0x00000080);
      onChanged();
      return this;
    }
    /**
     * <pre>
     * Required. Restricts the response to vehicles with one of the specified type
     * categories.
     * </pre>
     *
     * <code>repeated .maps.fleetengine.v1.Vehicle.VehicleType.Category vehicle_type_categories = 9 [(.google.api.field_behavior) = REQUIRED];</code>
     * @return A list containing the enum numeric values on the wire for vehicleTypeCategories.
     */
    public java.util.List<java.lang.Integer>
    getVehicleTypeCategoriesValueList() {
      return java.util.Collections.unmodifiableList(vehicleTypeCategories_);
    }
    /**
     * <pre>
     * Required. Restricts the response to vehicles with one of the specified type
     * categories.
     * </pre>
     *
     * <code>repeated .maps.fleetengine.v1.Vehicle.VehicleType.Category vehicle_type_categories = 9 [(.google.api.field_behavior) = REQUIRED];</code>
     * @param index The index of the value to return.
     * @return The enum numeric value on the wire of vehicleTypeCategories at the given index.
     */
    public int getVehicleTypeCategoriesValue(int index) {
      return vehicleTypeCategories_.get(index);
    }
    /**
     * <pre>
     * Required. Restricts the response to vehicles with one of the specified type
     * categories.
     * </pre>
     *
     * <code>repeated .maps.fleetengine.v1.Vehicle.VehicleType.Category vehicle_type_categories = 9 [(.google.api.field_behavior) = REQUIRED];</code>
     * @param index The index to set the value at.
     * @param value The enum numeric value on the wire for vehicleTypeCategories to set.
     * @return This builder for chaining.
     */
    public Builder setVehicleTypeCategoriesValue(
        int index, int value) {
      ensureVehicleTypeCategoriesIsMutable();
      vehicleTypeCategories_.set(index, value);
      onChanged();
      return this;
    }
    /**
     * <pre>
     * Required. Restricts the response to vehicles with one of the specified type
     * categories.
     * </pre>
     *
     * <code>repeated .maps.fleetengine.v1.Vehicle.VehicleType.Category vehicle_type_categories = 9 [(.google.api.field_behavior) = REQUIRED];</code>
     * @param value The enum numeric value on the wire for vehicleTypeCategories to add.
     * @return This builder for chaining.
     */
    public Builder addVehicleTypeCategoriesValue(int value) {
      ensureVehicleTypeCategoriesIsMutable();
      vehicleTypeCategories_.add(value);
      onChanged();
      return this;
    }
    /**
     * <pre>
     * Required. Restricts the response to vehicles with one of the specified type
     * categories.
     * </pre>
     *
     * <code>repeated .maps.fleetengine.v1.Vehicle.VehicleType.Category vehicle_type_categories = 9 [(.google.api.field_behavior) = REQUIRED];</code>
     * @param values The enum numeric values on the wire for vehicleTypeCategories to add.
     * @return This builder for chaining.
     */
    public Builder addAllVehicleTypeCategoriesValue(
        java.lang.Iterable<java.lang.Integer> values) {
      ensureVehicleTypeCategoriesIsMutable();
      for (int value : values) {
        vehicleTypeCategories_.add(value);
      }
      onChanged();
      return this;
    }

    private com.google.protobuf.LazyStringList requiredAttributes_ = com.google.protobuf.LazyStringArrayList.EMPTY;
    private void ensureRequiredAttributesIsMutable() {
      if (!((bitField0_ & 0x00000100) != 0)) {
        requiredAttributes_ = new com.google.protobuf.LazyStringArrayList(requiredAttributes_);
        bitField0_ |= 0x00000100;
       }
    }
    /**
     * <pre>
     * Callers can form complex logical operations using any combination of the
     * `required_attributes`, `required_one_of_attributes`, and
     * `required_one_of_attribute_sets` fields.
     * `required_attributes` is a list; `required_one_of_attributes` uses a
     * message which allows a list of lists. In combination, the two fields allow
     * the composition of this expression:
     * ```
     * (required_attributes[0] AND required_attributes[1] AND ...)
     * AND
     * (required_one_of_attributes[0][0] OR required_one_of_attributes[0][1] OR
     * ...)
     * AND
     * (required_one_of_attributes[1][0] OR required_one_of_attributes[1][1] OR
     * ...)
     * ```
     * Restricts the response to vehicles with the specified attributes. This
     * field is a conjunction/AND operation. Your app can specify up to 100
     * attributes; however, the combined key:value string length cannot exceed
     * 1024 characters.
     * </pre>
     *
     * <code>repeated string required_attributes = 10;</code>
     * @return A list containing the requiredAttributes.
     */
    public com.google.protobuf.ProtocolStringList
        getRequiredAttributesList() {
      return requiredAttributes_.getUnmodifiableView();
    }
    /**
     * <pre>
     * Callers can form complex logical operations using any combination of the
     * `required_attributes`, `required_one_of_attributes`, and
     * `required_one_of_attribute_sets` fields.
     * `required_attributes` is a list; `required_one_of_attributes` uses a
     * message which allows a list of lists. In combination, the two fields allow
     * the composition of this expression:
     * ```
     * (required_attributes[0] AND required_attributes[1] AND ...)
     * AND
     * (required_one_of_attributes[0][0] OR required_one_of_attributes[0][1] OR
     * ...)
     * AND
     * (required_one_of_attributes[1][0] OR required_one_of_attributes[1][1] OR
     * ...)
     * ```
     * Restricts the response to vehicles with the specified attributes. This
     * field is a conjunction/AND operation. Your app can specify up to 100
     * attributes; however, the combined key:value string length cannot exceed
     * 1024 characters.
     * </pre>
     *
     * <code>repeated string required_attributes = 10;</code>
     * @return The count of requiredAttributes.
     */
    public int getRequiredAttributesCount() {
      return requiredAttributes_.size();
    }
    /**
     * <pre>
     * Callers can form complex logical operations using any combination of the
     * `required_attributes`, `required_one_of_attributes`, and
     * `required_one_of_attribute_sets` fields.
     * `required_attributes` is a list; `required_one_of_attributes` uses a
     * message which allows a list of lists. In combination, the two fields allow
     * the composition of this expression:
     * ```
     * (required_attributes[0] AND required_attributes[1] AND ...)
     * AND
     * (required_one_of_attributes[0][0] OR required_one_of_attributes[0][1] OR
     * ...)
     * AND
     * (required_one_of_attributes[1][0] OR required_one_of_attributes[1][1] OR
     * ...)
     * ```
     * Restricts the response to vehicles with the specified attributes. This
     * field is a conjunction/AND operation. Your app can specify up to 100
     * attributes; however, the combined key:value string length cannot exceed
     * 1024 characters.
     * </pre>
     *
     * <code>repeated string required_attributes = 10;</code>
     * @param index The index of the element to return.
     * @return The requiredAttributes at the given index.
     */
    public java.lang.String getRequiredAttributes(int index) {
      return requiredAttributes_.get(index);
    }
    /**
     * <pre>
     * Callers can form complex logical operations using any combination of the
     * `required_attributes`, `required_one_of_attributes`, and
     * `required_one_of_attribute_sets` fields.
     * `required_attributes` is a list; `required_one_of_attributes` uses a
     * message which allows a list of lists. In combination, the two fields allow
     * the composition of this expression:
     * ```
     * (required_attributes[0] AND required_attributes[1] AND ...)
     * AND
     * (required_one_of_attributes[0][0] OR required_one_of_attributes[0][1] OR
     * ...)
     * AND
     * (required_one_of_attributes[1][0] OR required_one_of_attributes[1][1] OR
     * ...)
     * ```
     * Restricts the response to vehicles with the specified attributes. This
     * field is a conjunction/AND operation. Your app can specify up to 100
     * attributes; however, the combined key:value string length cannot exceed
     * 1024 characters.
     * </pre>
     *
     * <code>repeated string required_attributes = 10;</code>
     * @param index The index of the value to return.
     * @return The bytes of the requiredAttributes at the given index.
     */
    public com.google.protobuf.ByteString
        getRequiredAttributesBytes(int index) {
      return requiredAttributes_.getByteString(index);
    }
    /**
     * <pre>
     * Callers can form complex logical operations using any combination of the
     * `required_attributes`, `required_one_of_attributes`, and
     * `required_one_of_attribute_sets` fields.
     * `required_attributes` is a list; `required_one_of_attributes` uses a
     * message which allows a list of lists. In combination, the two fields allow
     * the composition of this expression:
     * ```
     * (required_attributes[0] AND required_attributes[1] AND ...)
     * AND
     * (required_one_of_attributes[0][0] OR required_one_of_attributes[0][1] OR
     * ...)
     * AND
     * (required_one_of_attributes[1][0] OR required_one_of_attributes[1][1] OR
     * ...)
     * ```
     * Restricts the response to vehicles with the specified attributes. This
     * field is a conjunction/AND operation. Your app can specify up to 100
     * attributes; however, the combined key:value string length cannot exceed
     * 1024 characters.
     * </pre>
     *
     * <code>repeated string required_attributes = 10;</code>
     * @param index The index to set the value at.
     * @param value The requiredAttributes to set.
     * @return This builder for chaining.
     */
    public Builder setRequiredAttributes(
        int index, java.lang.String value) {
      if (value == null) { throw new NullPointerException(); }
      ensureRequiredAttributesIsMutable();
      requiredAttributes_.set(index, value);
      onChanged();
      return this;
    }
    /**
     * <pre>
     * Callers can form complex logical operations using any combination of the
     * `required_attributes`, `required_one_of_attributes`, and
     * `required_one_of_attribute_sets` fields.
     * `required_attributes` is a list; `required_one_of_attributes` uses a
     * message which allows a list of lists. In combination, the two fields allow
     * the composition of this expression:
     * ```
     * (required_attributes[0] AND required_attributes[1] AND ...)
     * AND
     * (required_one_of_attributes[0][0] OR required_one_of_attributes[0][1] OR
     * ...)
     * AND
     * (required_one_of_attributes[1][0] OR required_one_of_attributes[1][1] OR
     * ...)
     * ```
     * Restricts the response to vehicles with the specified attributes. This
     * field is a conjunction/AND operation. Your app can specify up to 100
     * attributes; however, the combined key:value string length cannot exceed
     * 1024 characters.
     * </pre>
     *
     * <code>repeated string required_attributes = 10;</code>
     * @param value The requiredAttributes to add.
     * @return This builder for chaining.
     */
    public Builder addRequiredAttributes(
        java.lang.String value) {
      if (value == null) { throw new NullPointerException(); }
      ensureRequiredAttributesIsMutable();
      requiredAttributes_.add(value);
      onChanged();
      return this;
    }
    /**
     * <pre>
     * Callers can form complex logical operations using any combination of the
     * `required_attributes`, `required_one_of_attributes`, and
     * `required_one_of_attribute_sets` fields.
     * `required_attributes` is a list; `required_one_of_attributes` uses a
     * message which allows a list of lists. In combination, the two fields allow
     * the composition of this expression:
     * ```
     * (required_attributes[0] AND required_attributes[1] AND ...)
     * AND
     * (required_one_of_attributes[0][0] OR required_one_of_attributes[0][1] OR
     * ...)
     * AND
     * (required_one_of_attributes[1][0] OR required_one_of_attributes[1][1] OR
     * ...)
     * ```
     * Restricts the response to vehicles with the specified attributes. This
     * field is a conjunction/AND operation. Your app can specify up to 100
     * attributes; however, the combined key:value string length cannot exceed
     * 1024 characters.
     * </pre>
     *
     * <code>repeated string required_attributes = 10;</code>
     * @param values The requiredAttributes to add.
     * @return This builder for chaining.
     */
    public Builder addAllRequiredAttributes(
        java.lang.Iterable<java.lang.String> values) {
      ensureRequiredAttributesIsMutable();
      com.google.protobuf.AbstractMessageLite.Builder.addAll(
          values, requiredAttributes_);
      onChanged();
      return this;
    }
    /**
     * <pre>
     * Callers can form complex logical operations using any combination of the
     * `required_attributes`, `required_one_of_attributes`, and
     * `required_one_of_attribute_sets` fields.
     * `required_attributes` is a list; `required_one_of_attributes` uses a
     * message which allows a list of lists. In combination, the two fields allow
     * the composition of this expression:
     * ```
     * (required_attributes[0] AND required_attributes[1] AND ...)
     * AND
     * (required_one_of_attributes[0][0] OR required_one_of_attributes[0][1] OR
     * ...)
     * AND
     * (required_one_of_attributes[1][0] OR required_one_of_attributes[1][1] OR
     * ...)
     * ```
     * Restricts the response to vehicles with the specified attributes. This
     * field is a conjunction/AND operation. Your app can specify up to 100
     * attributes; however, the combined key:value string length cannot exceed
     * 1024 characters.
     * </pre>
     *
     * <code>repeated string required_attributes = 10;</code>
     * @return This builder for chaining.
     */
    public Builder clearRequiredAttributes() {
      requiredAttributes_ = com.google.protobuf.LazyStringArrayList.EMPTY;
      bitField0_ = (bitField0_ & ~0x00000100);
      onChanged();
      return this;
    }
    /**
     * <pre>
     * Callers can form complex logical operations using any combination of the
     * `required_attributes`, `required_one_of_attributes`, and
     * `required_one_of_attribute_sets` fields.
     * `required_attributes` is a list; `required_one_of_attributes` uses a
     * message which allows a list of lists. In combination, the two fields allow
     * the composition of this expression:
     * ```
     * (required_attributes[0] AND required_attributes[1] AND ...)
     * AND
     * (required_one_of_attributes[0][0] OR required_one_of_attributes[0][1] OR
     * ...)
     * AND
     * (required_one_of_attributes[1][0] OR required_one_of_attributes[1][1] OR
     * ...)
     * ```
     * Restricts the response to vehicles with the specified attributes. This
     * field is a conjunction/AND operation. Your app can specify up to 100
     * attributes; however, the combined key:value string length cannot exceed
     * 1024 characters.
     * </pre>
     *
     * <code>repeated string required_attributes = 10;</code>
     * @param value The bytes of the requiredAttributes to add.
     * @return This builder for chaining.
     */
    public Builder addRequiredAttributesBytes(
        com.google.protobuf.ByteString value) {
      if (value == null) { throw new NullPointerException(); }
      checkByteStringIsUtf8(value);
      ensureRequiredAttributesIsMutable();
      requiredAttributes_.add(value);
      onChanged();
      return this;
    }

    private com.google.protobuf.LazyStringList requiredOneOfAttributes_ = com.google.protobuf.LazyStringArrayList.EMPTY;
    private void ensureRequiredOneOfAttributesIsMutable() {
      if (!((bitField0_ & 0x00000200) != 0)) {
        requiredOneOfAttributes_ = new com.google.protobuf.LazyStringArrayList(requiredOneOfAttributes_);
        bitField0_ |= 0x00000200;
       }
    }
    /**
     * <pre>
     * Restricts the response to vehicles with at least one of the specified
     * attributes in each `VehicleAttributeList`. Within each list, a vehicle must
     * match at least one of the attributes. This field is an inclusive
     * disjunction/OR operation in each `VehicleAttributeList` and a
     * conjunction/AND operation across the collection of `VehicleAttributeList`.
     * Format: key1:value1|key2:value2|key3:value3...
     * </pre>
     *
     * <code>repeated string required_one_of_attributes = 13;</code>
     * @return A list containing the requiredOneOfAttributes.
     */
    public com.google.protobuf.ProtocolStringList
        getRequiredOneOfAttributesList() {
      return requiredOneOfAttributes_.getUnmodifiableView();
    }
    /**
     * <pre>
     * Restricts the response to vehicles with at least one of the specified
     * attributes in each `VehicleAttributeList`. Within each list, a vehicle must
     * match at least one of the attributes. This field is an inclusive
     * disjunction/OR operation in each `VehicleAttributeList` and a
     * conjunction/AND operation across the collection of `VehicleAttributeList`.
     * Format: key1:value1|key2:value2|key3:value3...
     * </pre>
     *
     * <code>repeated string required_one_of_attributes = 13;</code>
     * @return The count of requiredOneOfAttributes.
     */
    public int getRequiredOneOfAttributesCount() {
      return requiredOneOfAttributes_.size();
    }
    /**
     * <pre>
     * Restricts the response to vehicles with at least one of the specified
     * attributes in each `VehicleAttributeList`. Within each list, a vehicle must
     * match at least one of the attributes. This field is an inclusive
     * disjunction/OR operation in each `VehicleAttributeList` and a
     * conjunction/AND operation across the collection of `VehicleAttributeList`.
     * Format: key1:value1|key2:value2|key3:value3...
     * </pre>
     *
     * <code>repeated string required_one_of_attributes = 13;</code>
     * @param index The index of the element to return.
     * @return The requiredOneOfAttributes at the given index.
     */
    public java.lang.String getRequiredOneOfAttributes(int index) {
      return requiredOneOfAttributes_.get(index);
    }
    /**
     * <pre>
     * Restricts the response to vehicles with at least one of the specified
     * attributes in each `VehicleAttributeList`. Within each list, a vehicle must
     * match at least one of the attributes. This field is an inclusive
     * disjunction/OR operation in each `VehicleAttributeList` and a
     * conjunction/AND operation across the collection of `VehicleAttributeList`.
     * Format: key1:value1|key2:value2|key3:value3...
     * </pre>
     *
     * <code>repeated string required_one_of_attributes = 13;</code>
     * @param index The index of the value to return.
     * @return The bytes of the requiredOneOfAttributes at the given index.
     */
    public com.google.protobuf.ByteString
        getRequiredOneOfAttributesBytes(int index) {
      return requiredOneOfAttributes_.getByteString(index);
    }
    /**
     * <pre>
     * Restricts the response to vehicles with at least one of the specified
     * attributes in each `VehicleAttributeList`. Within each list, a vehicle must
     * match at least one of the attributes. This field is an inclusive
     * disjunction/OR operation in each `VehicleAttributeList` and a
     * conjunction/AND operation across the collection of `VehicleAttributeList`.
     * Format: key1:value1|key2:value2|key3:value3...
     * </pre>
     *
     * <code>repeated string required_one_of_attributes = 13;</code>
     * @param index The index to set the value at.
     * @param value The requiredOneOfAttributes to set.
     * @return This builder for chaining.
     */
    public Builder setRequiredOneOfAttributes(
        int index, java.lang.String value) {
      if (value == null) { throw new NullPointerException(); }
      ensureRequiredOneOfAttributesIsMutable();
      requiredOneOfAttributes_.set(index, value);
      onChanged();
      return this;
    }
    /**
     * <pre>
     * Restricts the response to vehicles with at least one of the specified
     * attributes in each `VehicleAttributeList`. Within each list, a vehicle must
     * match at least one of the attributes. This field is an inclusive
     * disjunction/OR operation in each `VehicleAttributeList` and a
     * conjunction/AND operation across the collection of `VehicleAttributeList`.
     * Format: key1:value1|key2:value2|key3:value3...
     * </pre>
     *
     * <code>repeated string required_one_of_attributes = 13;</code>
     * @param value The requiredOneOfAttributes to add.
     * @return This builder for chaining.
     */
    public Builder addRequiredOneOfAttributes(
        java.lang.String value) {
      if (value == null) { throw new NullPointerException(); }
      ensureRequiredOneOfAttributesIsMutable();
      requiredOneOfAttributes_.add(value);
      onChanged();
      return this;
    }
    /**
     * <pre>
     * Restricts the response to vehicles with at least one of the specified
     * attributes in each `VehicleAttributeList`. Within each list, a vehicle must
     * match at least one of the attributes. This field is an inclusive
     * disjunction/OR operation in each `VehicleAttributeList` and a
     * conjunction/AND operation across the collection of `VehicleAttributeList`.
     * Format: key1:value1|key2:value2|key3:value3...
     * </pre>
     *
     * <code>repeated string required_one_of_attributes = 13;</code>
     * @param values The requiredOneOfAttributes to add.
     * @return This builder for chaining.
     */
    public Builder addAllRequiredOneOfAttributes(
        java.lang.Iterable<java.lang.String> values) {
      ensureRequiredOneOfAttributesIsMutable();
      com.google.protobuf.AbstractMessageLite.Builder.addAll(
          values, requiredOneOfAttributes_);
      onChanged();
      return this;
    }
    /**
     * <pre>
     * Restricts the response to vehicles with at least one of the specified
     * attributes in each `VehicleAttributeList`. Within each list, a vehicle must
     * match at least one of the attributes. This field is an inclusive
     * disjunction/OR operation in each `VehicleAttributeList` and a
     * conjunction/AND operation across the collection of `VehicleAttributeList`.
     * Format: key1:value1|key2:value2|key3:value3...
     * </pre>
     *
     * <code>repeated string required_one_of_attributes = 13;</code>
     * @return This builder for chaining.
     */
    public Builder clearRequiredOneOfAttributes() {
      requiredOneOfAttributes_ = com.google.protobuf.LazyStringArrayList.EMPTY;
      bitField0_ = (bitField0_ & ~0x00000200);
      onChanged();
      return this;
    }
    /**
     * <pre>
     * Restricts the response to vehicles with at least one of the specified
     * attributes in each `VehicleAttributeList`. Within each list, a vehicle must
     * match at least one of the attributes. This field is an inclusive
     * disjunction/OR operation in each `VehicleAttributeList` and a
     * conjunction/AND operation across the collection of `VehicleAttributeList`.
     * Format: key1:value1|key2:value2|key3:value3...
     * </pre>
     *
     * <code>repeated string required_one_of_attributes = 13;</code>
     * @param value The bytes of the requiredOneOfAttributes to add.
     * @return This builder for chaining.
     */
    public Builder addRequiredOneOfAttributesBytes(
        com.google.protobuf.ByteString value) {
      if (value == null) { throw new NullPointerException(); }
      checkByteStringIsUtf8(value);
      ensureRequiredOneOfAttributesIsMutable();
      requiredOneOfAttributes_.add(value);
      onChanged();
      return this;
    }

    private com.google.protobuf.LazyStringList requiredOneOfAttributeSets_ = com.google.protobuf.LazyStringArrayList.EMPTY;
    private void ensureRequiredOneOfAttributeSetsIsMutable() {
      if (!((bitField0_ & 0x00000400) != 0)) {
        requiredOneOfAttributeSets_ = new com.google.protobuf.LazyStringArrayList(requiredOneOfAttributeSets_);
        bitField0_ |= 0x00000400;
       }
    }
    /**
     * <pre>
     * `required_one_of_attribute_sets` provides additional functionality.
     * Similar to `required_one_of_attributes`, `required_one_of_attribute_sets`
     * uses a message which allows a list of lists, allowing expressions such as
     * this one:
     * ```
     * (required_attributes[0] AND required_attributes[1] AND ...)
     * AND
     * (required_one_of_attributes[0][0] AND required_one_of_attributes[0][1] AND
     * ...)
     * OR
     * (required_one_of_attributes[1][0] AND required_one_of_attributes[1][1] AND
     * ...)
     * ```
     * Restricts the response to vehicles that match all the attributes in a
     * `VehicleAttributeList`. Within each list, a vehicle must match all of the
     * attributes. This field is a conjunction/AND operation in each
     * `VehicleAttributeList` and inclusive disjunction/OR operation across the
     * collection of `VehicleAttributeList`. Each repeated string should be of the
     * format "key1:value1|key2:value2|key3:value3".
     * </pre>
     *
     * <code>repeated string required_one_of_attribute_sets = 15;</code>
     * @return A list containing the requiredOneOfAttributeSets.
     */
    public com.google.protobuf.ProtocolStringList
        getRequiredOneOfAttributeSetsList() {
      return requiredOneOfAttributeSets_.getUnmodifiableView();
    }
    /**
     * <pre>
     * `required_one_of_attribute_sets` provides additional functionality.
     * Similar to `required_one_of_attributes`, `required_one_of_attribute_sets`
     * uses a message which allows a list of lists, allowing expressions such as
     * this one:
     * ```
     * (required_attributes[0] AND required_attributes[1] AND ...)
     * AND
     * (required_one_of_attributes[0][0] AND required_one_of_attributes[0][1] AND
     * ...)
     * OR
     * (required_one_of_attributes[1][0] AND required_one_of_attributes[1][1] AND
     * ...)
     * ```
     * Restricts the response to vehicles that match all the attributes in a
     * `VehicleAttributeList`. Within each list, a vehicle must match all of the
     * attributes. This field is a conjunction/AND operation in each
     * `VehicleAttributeList` and inclusive disjunction/OR operation across the
     * collection of `VehicleAttributeList`. Each repeated string should be of the
     * format "key1:value1|key2:value2|key3:value3".
     * </pre>
     *
     * <code>repeated string required_one_of_attribute_sets = 15;</code>
     * @return The count of requiredOneOfAttributeSets.
     */
    public int getRequiredOneOfAttributeSetsCount() {
      return requiredOneOfAttributeSets_.size();
    }
    /**
     * <pre>
     * `required_one_of_attribute_sets` provides additional functionality.
     * Similar to `required_one_of_attributes`, `required_one_of_attribute_sets`
     * uses a message which allows a list of lists, allowing expressions such as
     * this one:
     * ```
     * (required_attributes[0] AND required_attributes[1] AND ...)
     * AND
     * (required_one_of_attributes[0][0] AND required_one_of_attributes[0][1] AND
     * ...)
     * OR
     * (required_one_of_attributes[1][0] AND required_one_of_attributes[1][1] AND
     * ...)
     * ```
     * Restricts the response to vehicles that match all the attributes in a
     * `VehicleAttributeList`. Within each list, a vehicle must match all of the
     * attributes. This field is a conjunction/AND operation in each
     * `VehicleAttributeList` and inclusive disjunction/OR operation across the
     * collection of `VehicleAttributeList`. Each repeated string should be of the
     * format "key1:value1|key2:value2|key3:value3".
     * </pre>
     *
     * <code>repeated string required_one_of_attribute_sets = 15;</code>
     * @param index The index of the element to return.
     * @return The requiredOneOfAttributeSets at the given index.
     */
    public java.lang.String getRequiredOneOfAttributeSets(int index) {
      return requiredOneOfAttributeSets_.get(index);
    }
    /**
     * <pre>
     * `required_one_of_attribute_sets` provides additional functionality.
     * Similar to `required_one_of_attributes`, `required_one_of_attribute_sets`
     * uses a message which allows a list of lists, allowing expressions such as
     * this one:
     * ```
     * (required_attributes[0] AND required_attributes[1] AND ...)
     * AND
     * (required_one_of_attributes[0][0] AND required_one_of_attributes[0][1] AND
     * ...)
     * OR
     * (required_one_of_attributes[1][0] AND required_one_of_attributes[1][1] AND
     * ...)
     * ```
     * Restricts the response to vehicles that match all the attributes in a
     * `VehicleAttributeList`. Within each list, a vehicle must match all of the
     * attributes. This field is a conjunction/AND operation in each
     * `VehicleAttributeList` and inclusive disjunction/OR operation across the
     * collection of `VehicleAttributeList`. Each repeated string should be of the
     * format "key1:value1|key2:value2|key3:value3".
     * </pre>
     *
     * <code>repeated string required_one_of_attribute_sets = 15;</code>
     * @param index The index of the value to return.
     * @return The bytes of the requiredOneOfAttributeSets at the given index.
     */
    public com.google.protobuf.ByteString
        getRequiredOneOfAttributeSetsBytes(int index) {
      return requiredOneOfAttributeSets_.getByteString(index);
    }
    /**
     * <pre>
     * `required_one_of_attribute_sets` provides additional functionality.
     * Similar to `required_one_of_attributes`, `required_one_of_attribute_sets`
     * uses a message which allows a list of lists, allowing expressions such as
     * this one:
     * ```
     * (required_attributes[0] AND required_attributes[1] AND ...)
     * AND
     * (required_one_of_attributes[0][0] AND required_one_of_attributes[0][1] AND
     * ...)
     * OR
     * (required_one_of_attributes[1][0] AND required_one_of_attributes[1][1] AND
     * ...)
     * ```
     * Restricts the response to vehicles that match all the attributes in a
     * `VehicleAttributeList`. Within each list, a vehicle must match all of the
     * attributes. This field is a conjunction/AND operation in each
     * `VehicleAttributeList` and inclusive disjunction/OR operation across the
     * collection of `VehicleAttributeList`. Each repeated string should be of the
     * format "key1:value1|key2:value2|key3:value3".
     * </pre>
     *
     * <code>repeated string required_one_of_attribute_sets = 15;</code>
     * @param index The index to set the value at.
     * @param value The requiredOneOfAttributeSets to set.
     * @return This builder for chaining.
     */
    public Builder setRequiredOneOfAttributeSets(
        int index, java.lang.String value) {
      if (value == null) { throw new NullPointerException(); }
      ensureRequiredOneOfAttributeSetsIsMutable();
      requiredOneOfAttributeSets_.set(index, value);
      onChanged();
      return this;
    }
    /**
     * <pre>
     * `required_one_of_attribute_sets` provides additional functionality.
     * Similar to `required_one_of_attributes`, `required_one_of_attribute_sets`
     * uses a message which allows a list of lists, allowing expressions such as
     * this one:
     * ```
     * (required_attributes[0] AND required_attributes[1] AND ...)
     * AND
     * (required_one_of_attributes[0][0] AND required_one_of_attributes[0][1] AND
     * ...)
     * OR
     * (required_one_of_attributes[1][0] AND required_one_of_attributes[1][1] AND
     * ...)
     * ```
     * Restricts the response to vehicles that match all the attributes in a
     * `VehicleAttributeList`. Within each list, a vehicle must match all of the
     * attributes. This field is a conjunction/AND operation in each
     * `VehicleAttributeList` and inclusive disjunction/OR operation across the
     * collection of `VehicleAttributeList`. Each repeated string should be of the
     * format "key1:value1|key2:value2|key3:value3".
     * </pre>
     *
     * <code>repeated string required_one_of_attribute_sets = 15;</code>
     * @param value The requiredOneOfAttributeSets to add.
     * @return This builder for chaining.
     */
    public Builder addRequiredOneOfAttributeSets(
        java.lang.String value) {
      if (value == null) { throw new NullPointerException(); }
      ensureRequiredOneOfAttributeSetsIsMutable();
      requiredOneOfAttributeSets_.add(value);
      onChanged();
      return this;
    }
    /**
     * <pre>
     * `required_one_of_attribute_sets` provides additional functionality.
     * Similar to `required_one_of_attributes`, `required_one_of_attribute_sets`
     * uses a message which allows a list of lists, allowing expressions such as
     * this one:
     * ```
     * (required_attributes[0] AND required_attributes[1] AND ...)
     * AND
     * (required_one_of_attributes[0][0] AND required_one_of_attributes[0][1] AND
     * ...)
     * OR
     * (required_one_of_attributes[1][0] AND required_one_of_attributes[1][1] AND
     * ...)
     * ```
     * Restricts the response to vehicles that match all the attributes in a
     * `VehicleAttributeList`. Within each list, a vehicle must match all of the
     * attributes. This field is a conjunction/AND operation in each
     * `VehicleAttributeList` and inclusive disjunction/OR operation across the
     * collection of `VehicleAttributeList`. Each repeated string should be of the
     * format "key1:value1|key2:value2|key3:value3".
     * </pre>
     *
     * <code>repeated string required_one_of_attribute_sets = 15;</code>
     * @param values The requiredOneOfAttributeSets to add.
     * @return This builder for chaining.
     */
    public Builder addAllRequiredOneOfAttributeSets(
        java.lang.Iterable<java.lang.String> values) {
      ensureRequiredOneOfAttributeSetsIsMutable();
      com.google.protobuf.AbstractMessageLite.Builder.addAll(
          values, requiredOneOfAttributeSets_);
      onChanged();
      return this;
    }
    /**
     * <pre>
     * `required_one_of_attribute_sets` provides additional functionality.
     * Similar to `required_one_of_attributes`, `required_one_of_attribute_sets`
     * uses a message which allows a list of lists, allowing expressions such as
     * this one:
     * ```
     * (required_attributes[0] AND required_attributes[1] AND ...)
     * AND
     * (required_one_of_attributes[0][0] AND required_one_of_attributes[0][1] AND
     * ...)
     * OR
     * (required_one_of_attributes[1][0] AND required_one_of_attributes[1][1] AND
     * ...)
     * ```
     * Restricts the response to vehicles that match all the attributes in a
     * `VehicleAttributeList`. Within each list, a vehicle must match all of the
     * attributes. This field is a conjunction/AND operation in each
     * `VehicleAttributeList` and inclusive disjunction/OR operation across the
     * collection of `VehicleAttributeList`. Each repeated string should be of the
     * format "key1:value1|key2:value2|key3:value3".
     * </pre>
     *
     * <code>repeated string required_one_of_attribute_sets = 15;</code>
     * @return This builder for chaining.
     */
    public Builder clearRequiredOneOfAttributeSets() {
      requiredOneOfAttributeSets_ = com.google.protobuf.LazyStringArrayList.EMPTY;
      bitField0_ = (bitField0_ & ~0x00000400);
      onChanged();
      return this;
    }
    /**
     * <pre>
     * `required_one_of_attribute_sets` provides additional functionality.
     * Similar to `required_one_of_attributes`, `required_one_of_attribute_sets`
     * uses a message which allows a list of lists, allowing expressions such as
     * this one:
     * ```
     * (required_attributes[0] AND required_attributes[1] AND ...)
     * AND
     * (required_one_of_attributes[0][0] AND required_one_of_attributes[0][1] AND
     * ...)
     * OR
     * (required_one_of_attributes[1][0] AND required_one_of_attributes[1][1] AND
     * ...)
     * ```
     * Restricts the response to vehicles that match all the attributes in a
     * `VehicleAttributeList`. Within each list, a vehicle must match all of the
     * attributes. This field is a conjunction/AND operation in each
     * `VehicleAttributeList` and inclusive disjunction/OR operation across the
     * collection of `VehicleAttributeList`. Each repeated string should be of the
     * format "key1:value1|key2:value2|key3:value3".
     * </pre>
     *
     * <code>repeated string required_one_of_attribute_sets = 15;</code>
     * @param value The bytes of the requiredOneOfAttributeSets to add.
     * @return This builder for chaining.
     */
    public Builder addRequiredOneOfAttributeSetsBytes(
        com.google.protobuf.ByteString value) {
      if (value == null) { throw new NullPointerException(); }
      checkByteStringIsUtf8(value);
      ensureRequiredOneOfAttributeSetsIsMutable();
      requiredOneOfAttributeSets_.add(value);
      onChanged();
      return this;
    }

    private int vehicleState_ = 0;
    /**
     * <pre>
     * Restricts the response to vehicles that have this vehicle state.
     * </pre>
     *
     * <code>.maps.fleetengine.v1.VehicleState vehicle_state = 11;</code>
     * @return The enum numeric value on the wire for vehicleState.
     */
    @java.lang.Override public int getVehicleStateValue() {
      return vehicleState_;
    }
    /**
     * <pre>
     * Restricts the response to vehicles that have this vehicle state.
     * </pre>
     *
     * <code>.maps.fleetengine.v1.VehicleState vehicle_state = 11;</code>
     * @param value The enum numeric value on the wire for vehicleState to set.
     * @return This builder for chaining.
     */
    public Builder setVehicleStateValue(int value) {
      vehicleState_ = value;
      bitField0_ |= 0x00000800;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * Restricts the response to vehicles that have this vehicle state.
     * </pre>
     *
     * <code>.maps.fleetengine.v1.VehicleState vehicle_state = 11;</code>
     * @return The vehicleState.
     */
    @java.lang.Override
    public google.maps.fleetengine.v1.VehicleState getVehicleState() {
      google.maps.fleetengine.v1.VehicleState result = google.maps.fleetengine.v1.VehicleState.forNumber(vehicleState_);
      return result == null ? google.maps.fleetengine.v1.VehicleState.UNRECOGNIZED : result;
    }
    /**
     * <pre>
     * Restricts the response to vehicles that have this vehicle state.
     * </pre>
     *
     * <code>.maps.fleetengine.v1.VehicleState vehicle_state = 11;</code>
     * @param value The vehicleState to set.
     * @return This builder for chaining.
     */
    public Builder setVehicleState(google.maps.fleetengine.v1.VehicleState value) {
      if (value == null) {
        throw new NullPointerException();
      }
      bitField0_ |= 0x00000800;
      vehicleState_ = value.getNumber();
      onChanged();
      return this;
    }
    /**
     * <pre>
     * Restricts the response to vehicles that have this vehicle state.
     * </pre>
     *
     * <code>.maps.fleetengine.v1.VehicleState vehicle_state = 11;</code>
     * @return This builder for chaining.
     */
    public Builder clearVehicleState() {
      bitField0_ = (bitField0_ & ~0x00000800);
      vehicleState_ = 0;
      onChanged();
      return this;
    }

    private boolean onTripOnly_ ;
    /**
     * <pre>
     * Only return the vehicles with current trip(s).
     * </pre>
     *
     * <code>bool on_trip_only = 14;</code>
     * @return The onTripOnly.
     */
    @java.lang.Override
    public boolean getOnTripOnly() {
      return onTripOnly_;
    }
    /**
     * <pre>
     * Only return the vehicles with current trip(s).
     * </pre>
     *
     * <code>bool on_trip_only = 14;</code>
     * @param value The onTripOnly to set.
     * @return This builder for chaining.
     */
    public Builder setOnTripOnly(boolean value) {
      
      onTripOnly_ = value;
      bitField0_ |= 0x00001000;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * Only return the vehicles with current trip(s).
     * </pre>
     *
     * <code>bool on_trip_only = 14;</code>
     * @return This builder for chaining.
     */
    public Builder clearOnTripOnly() {
      bitField0_ = (bitField0_ & ~0x00001000);
      onTripOnly_ = false;
      onChanged();
      return this;
    }
    @java.lang.Override
    public final Builder setUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return super.setUnknownFields(unknownFields);
    }

    @java.lang.Override
    public final Builder mergeUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return super.mergeUnknownFields(unknownFields);
    }


    // @@protoc_insertion_point(builder_scope:maps.fleetengine.v1.ListVehiclesRequest)
  }

  // @@protoc_insertion_point(class_scope:maps.fleetengine.v1.ListVehiclesRequest)
  private static final google.maps.fleetengine.v1.ListVehiclesRequest DEFAULT_INSTANCE;
  static {
    DEFAULT_INSTANCE = new google.maps.fleetengine.v1.ListVehiclesRequest();
  }

  public static google.maps.fleetengine.v1.ListVehiclesRequest getDefaultInstance() {
    return DEFAULT_INSTANCE;
  }

  private static final com.google.protobuf.Parser<ListVehiclesRequest>
      PARSER = new com.google.protobuf.AbstractParser<ListVehiclesRequest>() {
    @java.lang.Override
    public ListVehiclesRequest parsePartialFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      Builder builder = newBuilder();
      try {
        builder.mergeFrom(input, extensionRegistry);
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(builder.buildPartial());
      } catch (com.google.protobuf.UninitializedMessageException e) {
        throw e.asInvalidProtocolBufferException().setUnfinishedMessage(builder.buildPartial());
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(e)
            .setUnfinishedMessage(builder.buildPartial());
      }
      return builder.buildPartial();
    }
  };

  public static com.google.protobuf.Parser<ListVehiclesRequest> parser() {
    return PARSER;
  }

  @java.lang.Override
  public com.google.protobuf.Parser<ListVehiclesRequest> getParserForType() {
    return PARSER;
  }

  @java.lang.Override
  public google.maps.fleetengine.v1.ListVehiclesRequest getDefaultInstanceForType() {
    return DEFAULT_INSTANCE;
  }

}

