// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: google/maps/fleetengine/v1/vehicles.proto

package google.maps.fleetengine.v1;

public interface VisualTrafficReportPolylineRenderingOrBuilder extends
    // @@protoc_insertion_point(interface_extends:maps.fleetengine.v1.VisualTrafficReportPolylineRendering)
    com.google.protobuf.MessageOrBuilder {

  /**
   * <pre>
   * Optional. Road stretches that should be rendered along the polyline. Stretches
   * &lt;ul&gt;
   * &lt;li&gt;are
   * guaranteed to not overlap, and&lt;/li&gt;
   * &lt;li&gt;do not necessarily
   * span the full route.&lt;/li&gt;
   * &lt;/ul&gt;
   * &lt;p&gt;In the absence of a road stretch to style, the client should apply the
   * default for the route.
   * </pre>
   *
   * <code>repeated .maps.fleetengine.v1.VisualTrafficReportPolylineRendering.RoadStretch road_stretch = 1 [(.google.api.field_behavior) = OPTIONAL];</code>
   */
  java.util.List<google.maps.fleetengine.v1.VisualTrafficReportPolylineRendering.RoadStretch> 
      getRoadStretchList();
  /**
   * <pre>
   * Optional. Road stretches that should be rendered along the polyline. Stretches
   * &lt;ul&gt;
   * &lt;li&gt;are
   * guaranteed to not overlap, and&lt;/li&gt;
   * &lt;li&gt;do not necessarily
   * span the full route.&lt;/li&gt;
   * &lt;/ul&gt;
   * &lt;p&gt;In the absence of a road stretch to style, the client should apply the
   * default for the route.
   * </pre>
   *
   * <code>repeated .maps.fleetengine.v1.VisualTrafficReportPolylineRendering.RoadStretch road_stretch = 1 [(.google.api.field_behavior) = OPTIONAL];</code>
   */
  google.maps.fleetengine.v1.VisualTrafficReportPolylineRendering.RoadStretch getRoadStretch(int index);
  /**
   * <pre>
   * Optional. Road stretches that should be rendered along the polyline. Stretches
   * &lt;ul&gt;
   * &lt;li&gt;are
   * guaranteed to not overlap, and&lt;/li&gt;
   * &lt;li&gt;do not necessarily
   * span the full route.&lt;/li&gt;
   * &lt;/ul&gt;
   * &lt;p&gt;In the absence of a road stretch to style, the client should apply the
   * default for the route.
   * </pre>
   *
   * <code>repeated .maps.fleetengine.v1.VisualTrafficReportPolylineRendering.RoadStretch road_stretch = 1 [(.google.api.field_behavior) = OPTIONAL];</code>
   */
  int getRoadStretchCount();
  /**
   * <pre>
   * Optional. Road stretches that should be rendered along the polyline. Stretches
   * &lt;ul&gt;
   * &lt;li&gt;are
   * guaranteed to not overlap, and&lt;/li&gt;
   * &lt;li&gt;do not necessarily
   * span the full route.&lt;/li&gt;
   * &lt;/ul&gt;
   * &lt;p&gt;In the absence of a road stretch to style, the client should apply the
   * default for the route.
   * </pre>
   *
   * <code>repeated .maps.fleetengine.v1.VisualTrafficReportPolylineRendering.RoadStretch road_stretch = 1 [(.google.api.field_behavior) = OPTIONAL];</code>
   */
  java.util.List<? extends google.maps.fleetengine.v1.VisualTrafficReportPolylineRendering.RoadStretchOrBuilder> 
      getRoadStretchOrBuilderList();
  /**
   * <pre>
   * Optional. Road stretches that should be rendered along the polyline. Stretches
   * &lt;ul&gt;
   * &lt;li&gt;are
   * guaranteed to not overlap, and&lt;/li&gt;
   * &lt;li&gt;do not necessarily
   * span the full route.&lt;/li&gt;
   * &lt;/ul&gt;
   * &lt;p&gt;In the absence of a road stretch to style, the client should apply the
   * default for the route.
   * </pre>
   *
   * <code>repeated .maps.fleetengine.v1.VisualTrafficReportPolylineRendering.RoadStretch road_stretch = 1 [(.google.api.field_behavior) = OPTIONAL];</code>
   */
  google.maps.fleetengine.v1.VisualTrafficReportPolylineRendering.RoadStretchOrBuilder getRoadStretchOrBuilder(
      int index);
}
