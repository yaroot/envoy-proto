// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: google/maps/fleetengine/v1/trips.proto

package google.maps.fleetengine.v1;

/**
 * <pre>
 * Selector for different sets of Trip fields in a `GetTrip` response.  See
 * [AIP-157](https://google.aip.dev/157) for context. Additional views are
 * likely to be added.
 * </pre>
 *
 * Protobuf enum {@code maps.fleetengine.v1.TripView}
 */
public enum TripView
    implements com.google.protobuf.ProtocolMessageEnum {
  /**
   * <pre>
   * The default value. For backwards-compatibility, the API will default to an
   * SDK view. To ensure stability and support, customers are
   * advised to select a `TripView` other than `SDK`.
   * </pre>
   *
   * <code>TRIP_VIEW_UNSPECIFIED = 0;</code>
   */
  TRIP_VIEW_UNSPECIFIED(0),
  /**
   * <pre>
   * Includes fields that may not be interpretable or supportable using
   * publicly available libraries.
   * </pre>
   *
   * <code>SDK = 1;</code>
   */
  SDK(1),
  /**
   * <pre>
   * Trip fields are populated for the Journey Sharing use case. This view is
   * intended for server-to-server communications.
   * </pre>
   *
   * <code>JOURNEY_SHARING_V1S = 2;</code>
   */
  JOURNEY_SHARING_V1S(2),
  UNRECOGNIZED(-1),
  ;

  /**
   * <pre>
   * The default value. For backwards-compatibility, the API will default to an
   * SDK view. To ensure stability and support, customers are
   * advised to select a `TripView` other than `SDK`.
   * </pre>
   *
   * <code>TRIP_VIEW_UNSPECIFIED = 0;</code>
   */
  public static final int TRIP_VIEW_UNSPECIFIED_VALUE = 0;
  /**
   * <pre>
   * Includes fields that may not be interpretable or supportable using
   * publicly available libraries.
   * </pre>
   *
   * <code>SDK = 1;</code>
   */
  public static final int SDK_VALUE = 1;
  /**
   * <pre>
   * Trip fields are populated for the Journey Sharing use case. This view is
   * intended for server-to-server communications.
   * </pre>
   *
   * <code>JOURNEY_SHARING_V1S = 2;</code>
   */
  public static final int JOURNEY_SHARING_V1S_VALUE = 2;


  public final int getNumber() {
    if (this == UNRECOGNIZED) {
      throw new java.lang.IllegalArgumentException(
          "Can't get the number of an unknown enum value.");
    }
    return value;
  }

  /**
   * @param value The numeric wire value of the corresponding enum entry.
   * @return The enum associated with the given numeric wire value.
   * @deprecated Use {@link #forNumber(int)} instead.
   */
  @java.lang.Deprecated
  public static TripView valueOf(int value) {
    return forNumber(value);
  }

  /**
   * @param value The numeric wire value of the corresponding enum entry.
   * @return The enum associated with the given numeric wire value.
   */
  public static TripView forNumber(int value) {
    switch (value) {
      case 0: return TRIP_VIEW_UNSPECIFIED;
      case 1: return SDK;
      case 2: return JOURNEY_SHARING_V1S;
      default: return null;
    }
  }

  public static com.google.protobuf.Internal.EnumLiteMap<TripView>
      internalGetValueMap() {
    return internalValueMap;
  }
  private static final com.google.protobuf.Internal.EnumLiteMap<
      TripView> internalValueMap =
        new com.google.protobuf.Internal.EnumLiteMap<TripView>() {
          public TripView findValueByNumber(int number) {
            return TripView.forNumber(number);
          }
        };

  public final com.google.protobuf.Descriptors.EnumValueDescriptor
      getValueDescriptor() {
    if (this == UNRECOGNIZED) {
      throw new java.lang.IllegalStateException(
          "Can't get the descriptor of an unrecognized enum value.");
    }
    return getDescriptor().getValues().get(ordinal());
  }
  public final com.google.protobuf.Descriptors.EnumDescriptor
      getDescriptorForType() {
    return getDescriptor();
  }
  public static final com.google.protobuf.Descriptors.EnumDescriptor
      getDescriptor() {
    return google.maps.fleetengine.v1.Trips.getDescriptor().getEnumTypes().get(2);
  }

  private static final TripView[] VALUES = values();

  public static TripView valueOf(
      com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
    if (desc.getType() != getDescriptor()) {
      throw new java.lang.IllegalArgumentException(
        "EnumValueDescriptor is not for this type.");
    }
    if (desc.getIndex() == -1) {
      return UNRECOGNIZED;
    }
    return VALUES[desc.getIndex()];
  }

  private final int value;

  private TripView(int value) {
    this.value = value;
  }

  // @@protoc_insertion_point(enum_scope:maps.fleetengine.v1.TripView)
}

