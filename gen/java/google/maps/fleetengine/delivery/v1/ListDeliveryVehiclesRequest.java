// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: google/maps/fleetengine/delivery/v1/delivery_api.proto

package google.maps.fleetengine.delivery.v1;

/**
 * <pre>
 * The `ListDeliveryVehicles` request message.
 * </pre>
 *
 * Protobuf type {@code maps.fleetengine.delivery.v1.ListDeliveryVehiclesRequest}
 */
public final class ListDeliveryVehiclesRequest extends
    com.google.protobuf.GeneratedMessageV3 implements
    // @@protoc_insertion_point(message_implements:maps.fleetengine.delivery.v1.ListDeliveryVehiclesRequest)
    ListDeliveryVehiclesRequestOrBuilder {
private static final long serialVersionUID = 0L;
  // Use ListDeliveryVehiclesRequest.newBuilder() to construct.
  private ListDeliveryVehiclesRequest(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
    super(builder);
  }
  private ListDeliveryVehiclesRequest() {
    parent_ = "";
    pageToken_ = "";
    filter_ = "";
  }

  @java.lang.Override
  @SuppressWarnings({"unused"})
  protected java.lang.Object newInstance(
      UnusedPrivateParameter unused) {
    return new ListDeliveryVehiclesRequest();
  }

  @java.lang.Override
  public final com.google.protobuf.UnknownFieldSet
  getUnknownFields() {
    return this.unknownFields;
  }
  private ListDeliveryVehiclesRequest(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    this();
    if (extensionRegistry == null) {
      throw new java.lang.NullPointerException();
    }
    com.google.protobuf.UnknownFieldSet.Builder unknownFields =
        com.google.protobuf.UnknownFieldSet.newBuilder();
    try {
      boolean done = false;
      while (!done) {
        int tag = input.readTag();
        switch (tag) {
          case 0:
            done = true;
            break;
          case 10: {
            google.maps.fleetengine.delivery.v1.DeliveryRequestHeader.Builder subBuilder = null;
            if (header_ != null) {
              subBuilder = header_.toBuilder();
            }
            header_ = input.readMessage(google.maps.fleetengine.delivery.v1.DeliveryRequestHeader.parser(), extensionRegistry);
            if (subBuilder != null) {
              subBuilder.mergeFrom(header_);
              header_ = subBuilder.buildPartial();
            }

            break;
          }
          case 26: {
            java.lang.String s = input.readStringRequireUtf8();

            parent_ = s;
            break;
          }
          case 32: {

            pageSize_ = input.readInt32();
            break;
          }
          case 42: {
            java.lang.String s = input.readStringRequireUtf8();

            pageToken_ = s;
            break;
          }
          case 50: {
            java.lang.String s = input.readStringRequireUtf8();

            filter_ = s;
            break;
          }
          case 58: {
            com.google.geo.type.Viewport.Builder subBuilder = null;
            if (viewport_ != null) {
              subBuilder = viewport_.toBuilder();
            }
            viewport_ = input.readMessage(com.google.geo.type.Viewport.parser(), extensionRegistry);
            if (subBuilder != null) {
              subBuilder.mergeFrom(viewport_);
              viewport_ = subBuilder.buildPartial();
            }

            break;
          }
          default: {
            if (!parseUnknownField(
                input, unknownFields, extensionRegistry, tag)) {
              done = true;
            }
            break;
          }
        }
      }
    } catch (com.google.protobuf.InvalidProtocolBufferException e) {
      throw e.setUnfinishedMessage(this);
    } catch (com.google.protobuf.UninitializedMessageException e) {
      throw e.asInvalidProtocolBufferException().setUnfinishedMessage(this);
    } catch (java.io.IOException e) {
      throw new com.google.protobuf.InvalidProtocolBufferException(
          e).setUnfinishedMessage(this);
    } finally {
      this.unknownFields = unknownFields.build();
      makeExtensionsImmutable();
    }
  }
  public static final com.google.protobuf.Descriptors.Descriptor
      getDescriptor() {
    return google.maps.fleetengine.delivery.v1.DeliveryApi.internal_static_maps_fleetengine_delivery_v1_ListDeliveryVehiclesRequest_descriptor;
  }

  @java.lang.Override
  protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internalGetFieldAccessorTable() {
    return google.maps.fleetengine.delivery.v1.DeliveryApi.internal_static_maps_fleetengine_delivery_v1_ListDeliveryVehiclesRequest_fieldAccessorTable
        .ensureFieldAccessorsInitialized(
            google.maps.fleetengine.delivery.v1.ListDeliveryVehiclesRequest.class, google.maps.fleetengine.delivery.v1.ListDeliveryVehiclesRequest.Builder.class);
  }

  public static final int HEADER_FIELD_NUMBER = 1;
  private google.maps.fleetengine.delivery.v1.DeliveryRequestHeader header_;
  /**
   * <pre>
   * Optional. The standard Delivery API request header.
   * </pre>
   *
   * <code>.maps.fleetengine.delivery.v1.DeliveryRequestHeader header = 1 [(.google.api.field_behavior) = OPTIONAL];</code>
   * @return Whether the header field is set.
   */
  @java.lang.Override
  public boolean hasHeader() {
    return header_ != null;
  }
  /**
   * <pre>
   * Optional. The standard Delivery API request header.
   * </pre>
   *
   * <code>.maps.fleetengine.delivery.v1.DeliveryRequestHeader header = 1 [(.google.api.field_behavior) = OPTIONAL];</code>
   * @return The header.
   */
  @java.lang.Override
  public google.maps.fleetengine.delivery.v1.DeliveryRequestHeader getHeader() {
    return header_ == null ? google.maps.fleetengine.delivery.v1.DeliveryRequestHeader.getDefaultInstance() : header_;
  }
  /**
   * <pre>
   * Optional. The standard Delivery API request header.
   * </pre>
   *
   * <code>.maps.fleetengine.delivery.v1.DeliveryRequestHeader header = 1 [(.google.api.field_behavior) = OPTIONAL];</code>
   */
  @java.lang.Override
  public google.maps.fleetengine.delivery.v1.DeliveryRequestHeaderOrBuilder getHeaderOrBuilder() {
    return getHeader();
  }

  public static final int PARENT_FIELD_NUMBER = 3;
  private volatile java.lang.Object parent_;
  /**
   * <pre>
   * Required. Must be in the format `providers/{provider}`.
   * The `provider` must be the Google Cloud Project ID.
   * For example, `sample-cloud-project`.
   * </pre>
   *
   * <code>string parent = 3 [(.google.api.field_behavior) = REQUIRED, (.google.api.resource_reference) = { ... }</code>
   * @return The parent.
   */
  @java.lang.Override
  public java.lang.String getParent() {
    java.lang.Object ref = parent_;
    if (ref instanceof java.lang.String) {
      return (java.lang.String) ref;
    } else {
      com.google.protobuf.ByteString bs = 
          (com.google.protobuf.ByteString) ref;
      java.lang.String s = bs.toStringUtf8();
      parent_ = s;
      return s;
    }
  }
  /**
   * <pre>
   * Required. Must be in the format `providers/{provider}`.
   * The `provider` must be the Google Cloud Project ID.
   * For example, `sample-cloud-project`.
   * </pre>
   *
   * <code>string parent = 3 [(.google.api.field_behavior) = REQUIRED, (.google.api.resource_reference) = { ... }</code>
   * @return The bytes for parent.
   */
  @java.lang.Override
  public com.google.protobuf.ByteString
      getParentBytes() {
    java.lang.Object ref = parent_;
    if (ref instanceof java.lang.String) {
      com.google.protobuf.ByteString b = 
          com.google.protobuf.ByteString.copyFromUtf8(
              (java.lang.String) ref);
      parent_ = b;
      return b;
    } else {
      return (com.google.protobuf.ByteString) ref;
    }
  }

  public static final int PAGE_SIZE_FIELD_NUMBER = 4;
  private int pageSize_;
  /**
   * <pre>
   * Optional. The maximum number of vehicles to return. The service may return fewer than
   * this number. If you don't specify this number, then the server determines
   * the number of results to return.
   * </pre>
   *
   * <code>int32 page_size = 4 [(.google.api.field_behavior) = OPTIONAL];</code>
   * @return The pageSize.
   */
  @java.lang.Override
  public int getPageSize() {
    return pageSize_;
  }

  public static final int PAGE_TOKEN_FIELD_NUMBER = 5;
  private volatile java.lang.Object pageToken_;
  /**
   * <pre>
   * Optional. A page token, received from a previous `ListDeliveryVehicles` call. You
   * must provide this in order to retrieve the subsequent page.
   * When paginating, all other parameters provided to `ListDeliveryVehicles`
   * must match the call that provided the page token.
   * </pre>
   *
   * <code>string page_token = 5 [(.google.api.field_behavior) = OPTIONAL];</code>
   * @return The pageToken.
   */
  @java.lang.Override
  public java.lang.String getPageToken() {
    java.lang.Object ref = pageToken_;
    if (ref instanceof java.lang.String) {
      return (java.lang.String) ref;
    } else {
      com.google.protobuf.ByteString bs = 
          (com.google.protobuf.ByteString) ref;
      java.lang.String s = bs.toStringUtf8();
      pageToken_ = s;
      return s;
    }
  }
  /**
   * <pre>
   * Optional. A page token, received from a previous `ListDeliveryVehicles` call. You
   * must provide this in order to retrieve the subsequent page.
   * When paginating, all other parameters provided to `ListDeliveryVehicles`
   * must match the call that provided the page token.
   * </pre>
   *
   * <code>string page_token = 5 [(.google.api.field_behavior) = OPTIONAL];</code>
   * @return The bytes for pageToken.
   */
  @java.lang.Override
  public com.google.protobuf.ByteString
      getPageTokenBytes() {
    java.lang.Object ref = pageToken_;
    if (ref instanceof java.lang.String) {
      com.google.protobuf.ByteString b = 
          com.google.protobuf.ByteString.copyFromUtf8(
              (java.lang.String) ref);
      pageToken_ = b;
      return b;
    } else {
      return (com.google.protobuf.ByteString) ref;
    }
  }

  public static final int FILTER_FIELD_NUMBER = 6;
  private volatile java.lang.Object filter_;
  /**
   * <pre>
   * Optional. A filter query to apply when listing delivery vehicles. See
   * http://aip.dev/160 for examples of the filter syntax. If you don't specify
   * a value, or if you specify an empty string for the filter, then all
   * delivery vehicles are returned.
   * Note that the only queries supported for `ListDeliveryVehicles` are
   * equality comparisons on vehicle attributes (`attributes.&lt;key&gt; = &lt;value&gt;`).
   * Comparison operators besides `=` (like `!=`, `&gt;`, `&lt;`, etc.) aren't
   * supported. Queries that include them are rejected. You can combine
   * attribute equality queries with **AND**, but not with any other boolean
   * operator.
   * </pre>
   *
   * <code>string filter = 6 [(.google.api.field_behavior) = OPTIONAL];</code>
   * @return The filter.
   */
  @java.lang.Override
  public java.lang.String getFilter() {
    java.lang.Object ref = filter_;
    if (ref instanceof java.lang.String) {
      return (java.lang.String) ref;
    } else {
      com.google.protobuf.ByteString bs = 
          (com.google.protobuf.ByteString) ref;
      java.lang.String s = bs.toStringUtf8();
      filter_ = s;
      return s;
    }
  }
  /**
   * <pre>
   * Optional. A filter query to apply when listing delivery vehicles. See
   * http://aip.dev/160 for examples of the filter syntax. If you don't specify
   * a value, or if you specify an empty string for the filter, then all
   * delivery vehicles are returned.
   * Note that the only queries supported for `ListDeliveryVehicles` are
   * equality comparisons on vehicle attributes (`attributes.&lt;key&gt; = &lt;value&gt;`).
   * Comparison operators besides `=` (like `!=`, `&gt;`, `&lt;`, etc.) aren't
   * supported. Queries that include them are rejected. You can combine
   * attribute equality queries with **AND**, but not with any other boolean
   * operator.
   * </pre>
   *
   * <code>string filter = 6 [(.google.api.field_behavior) = OPTIONAL];</code>
   * @return The bytes for filter.
   */
  @java.lang.Override
  public com.google.protobuf.ByteString
      getFilterBytes() {
    java.lang.Object ref = filter_;
    if (ref instanceof java.lang.String) {
      com.google.protobuf.ByteString b = 
          com.google.protobuf.ByteString.copyFromUtf8(
              (java.lang.String) ref);
      filter_ = b;
      return b;
    } else {
      return (com.google.protobuf.ByteString) ref;
    }
  }

  public static final int VIEWPORT_FIELD_NUMBER = 7;
  private com.google.geo.type.Viewport viewport_;
  /**
   * <pre>
   * Optional. A filter that limits the search area to a rectangle defined by the
   * northeast and southwest corner points.
   * When defined, only vehicles located within the search area are returned.
   * </pre>
   *
   * <code>.google.geo.type.Viewport viewport = 7 [(.google.api.field_behavior) = OPTIONAL];</code>
   * @return Whether the viewport field is set.
   */
  @java.lang.Override
  public boolean hasViewport() {
    return viewport_ != null;
  }
  /**
   * <pre>
   * Optional. A filter that limits the search area to a rectangle defined by the
   * northeast and southwest corner points.
   * When defined, only vehicles located within the search area are returned.
   * </pre>
   *
   * <code>.google.geo.type.Viewport viewport = 7 [(.google.api.field_behavior) = OPTIONAL];</code>
   * @return The viewport.
   */
  @java.lang.Override
  public com.google.geo.type.Viewport getViewport() {
    return viewport_ == null ? com.google.geo.type.Viewport.getDefaultInstance() : viewport_;
  }
  /**
   * <pre>
   * Optional. A filter that limits the search area to a rectangle defined by the
   * northeast and southwest corner points.
   * When defined, only vehicles located within the search area are returned.
   * </pre>
   *
   * <code>.google.geo.type.Viewport viewport = 7 [(.google.api.field_behavior) = OPTIONAL];</code>
   */
  @java.lang.Override
  public com.google.geo.type.ViewportOrBuilder getViewportOrBuilder() {
    return getViewport();
  }

  private byte memoizedIsInitialized = -1;
  @java.lang.Override
  public final boolean isInitialized() {
    byte isInitialized = memoizedIsInitialized;
    if (isInitialized == 1) return true;
    if (isInitialized == 0) return false;

    memoizedIsInitialized = 1;
    return true;
  }

  @java.lang.Override
  public void writeTo(com.google.protobuf.CodedOutputStream output)
                      throws java.io.IOException {
    if (header_ != null) {
      output.writeMessage(1, getHeader());
    }
    if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(parent_)) {
      com.google.protobuf.GeneratedMessageV3.writeString(output, 3, parent_);
    }
    if (pageSize_ != 0) {
      output.writeInt32(4, pageSize_);
    }
    if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(pageToken_)) {
      com.google.protobuf.GeneratedMessageV3.writeString(output, 5, pageToken_);
    }
    if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(filter_)) {
      com.google.protobuf.GeneratedMessageV3.writeString(output, 6, filter_);
    }
    if (viewport_ != null) {
      output.writeMessage(7, getViewport());
    }
    unknownFields.writeTo(output);
  }

  @java.lang.Override
  public int getSerializedSize() {
    int size = memoizedSize;
    if (size != -1) return size;

    size = 0;
    if (header_ != null) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(1, getHeader());
    }
    if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(parent_)) {
      size += com.google.protobuf.GeneratedMessageV3.computeStringSize(3, parent_);
    }
    if (pageSize_ != 0) {
      size += com.google.protobuf.CodedOutputStream
        .computeInt32Size(4, pageSize_);
    }
    if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(pageToken_)) {
      size += com.google.protobuf.GeneratedMessageV3.computeStringSize(5, pageToken_);
    }
    if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(filter_)) {
      size += com.google.protobuf.GeneratedMessageV3.computeStringSize(6, filter_);
    }
    if (viewport_ != null) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(7, getViewport());
    }
    size += unknownFields.getSerializedSize();
    memoizedSize = size;
    return size;
  }

  @java.lang.Override
  public boolean equals(final java.lang.Object obj) {
    if (obj == this) {
     return true;
    }
    if (!(obj instanceof google.maps.fleetengine.delivery.v1.ListDeliveryVehiclesRequest)) {
      return super.equals(obj);
    }
    google.maps.fleetengine.delivery.v1.ListDeliveryVehiclesRequest other = (google.maps.fleetengine.delivery.v1.ListDeliveryVehiclesRequest) obj;

    if (hasHeader() != other.hasHeader()) return false;
    if (hasHeader()) {
      if (!getHeader()
          .equals(other.getHeader())) return false;
    }
    if (!getParent()
        .equals(other.getParent())) return false;
    if (getPageSize()
        != other.getPageSize()) return false;
    if (!getPageToken()
        .equals(other.getPageToken())) return false;
    if (!getFilter()
        .equals(other.getFilter())) return false;
    if (hasViewport() != other.hasViewport()) return false;
    if (hasViewport()) {
      if (!getViewport()
          .equals(other.getViewport())) return false;
    }
    if (!unknownFields.equals(other.unknownFields)) return false;
    return true;
  }

  @java.lang.Override
  public int hashCode() {
    if (memoizedHashCode != 0) {
      return memoizedHashCode;
    }
    int hash = 41;
    hash = (19 * hash) + getDescriptor().hashCode();
    if (hasHeader()) {
      hash = (37 * hash) + HEADER_FIELD_NUMBER;
      hash = (53 * hash) + getHeader().hashCode();
    }
    hash = (37 * hash) + PARENT_FIELD_NUMBER;
    hash = (53 * hash) + getParent().hashCode();
    hash = (37 * hash) + PAGE_SIZE_FIELD_NUMBER;
    hash = (53 * hash) + getPageSize();
    hash = (37 * hash) + PAGE_TOKEN_FIELD_NUMBER;
    hash = (53 * hash) + getPageToken().hashCode();
    hash = (37 * hash) + FILTER_FIELD_NUMBER;
    hash = (53 * hash) + getFilter().hashCode();
    if (hasViewport()) {
      hash = (37 * hash) + VIEWPORT_FIELD_NUMBER;
      hash = (53 * hash) + getViewport().hashCode();
    }
    hash = (29 * hash) + unknownFields.hashCode();
    memoizedHashCode = hash;
    return hash;
  }

  public static google.maps.fleetengine.delivery.v1.ListDeliveryVehiclesRequest parseFrom(
      java.nio.ByteBuffer data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static google.maps.fleetengine.delivery.v1.ListDeliveryVehiclesRequest parseFrom(
      java.nio.ByteBuffer data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static google.maps.fleetengine.delivery.v1.ListDeliveryVehiclesRequest parseFrom(
      com.google.protobuf.ByteString data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static google.maps.fleetengine.delivery.v1.ListDeliveryVehiclesRequest parseFrom(
      com.google.protobuf.ByteString data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static google.maps.fleetengine.delivery.v1.ListDeliveryVehiclesRequest parseFrom(byte[] data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static google.maps.fleetengine.delivery.v1.ListDeliveryVehiclesRequest parseFrom(
      byte[] data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static google.maps.fleetengine.delivery.v1.ListDeliveryVehiclesRequest parseFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input);
  }
  public static google.maps.fleetengine.delivery.v1.ListDeliveryVehiclesRequest parseFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input, extensionRegistry);
  }
  public static google.maps.fleetengine.delivery.v1.ListDeliveryVehiclesRequest parseDelimitedFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseDelimitedWithIOException(PARSER, input);
  }
  public static google.maps.fleetengine.delivery.v1.ListDeliveryVehiclesRequest parseDelimitedFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
  }
  public static google.maps.fleetengine.delivery.v1.ListDeliveryVehiclesRequest parseFrom(
      com.google.protobuf.CodedInputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input);
  }
  public static google.maps.fleetengine.delivery.v1.ListDeliveryVehiclesRequest parseFrom(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input, extensionRegistry);
  }

  @java.lang.Override
  public Builder newBuilderForType() { return newBuilder(); }
  public static Builder newBuilder() {
    return DEFAULT_INSTANCE.toBuilder();
  }
  public static Builder newBuilder(google.maps.fleetengine.delivery.v1.ListDeliveryVehiclesRequest prototype) {
    return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
  }
  @java.lang.Override
  public Builder toBuilder() {
    return this == DEFAULT_INSTANCE
        ? new Builder() : new Builder().mergeFrom(this);
  }

  @java.lang.Override
  protected Builder newBuilderForType(
      com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
    Builder builder = new Builder(parent);
    return builder;
  }
  /**
   * <pre>
   * The `ListDeliveryVehicles` request message.
   * </pre>
   *
   * Protobuf type {@code maps.fleetengine.delivery.v1.ListDeliveryVehiclesRequest}
   */
  public static final class Builder extends
      com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
      // @@protoc_insertion_point(builder_implements:maps.fleetengine.delivery.v1.ListDeliveryVehiclesRequest)
      google.maps.fleetengine.delivery.v1.ListDeliveryVehiclesRequestOrBuilder {
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return google.maps.fleetengine.delivery.v1.DeliveryApi.internal_static_maps_fleetengine_delivery_v1_ListDeliveryVehiclesRequest_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return google.maps.fleetengine.delivery.v1.DeliveryApi.internal_static_maps_fleetengine_delivery_v1_ListDeliveryVehiclesRequest_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              google.maps.fleetengine.delivery.v1.ListDeliveryVehiclesRequest.class, google.maps.fleetengine.delivery.v1.ListDeliveryVehiclesRequest.Builder.class);
    }

    // Construct using google.maps.fleetengine.delivery.v1.ListDeliveryVehiclesRequest.newBuilder()
    private Builder() {
      maybeForceBuilderInitialization();
    }

    private Builder(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      super(parent);
      maybeForceBuilderInitialization();
    }
    private void maybeForceBuilderInitialization() {
      if (com.google.protobuf.GeneratedMessageV3
              .alwaysUseFieldBuilders) {
      }
    }
    @java.lang.Override
    public Builder clear() {
      super.clear();
      if (headerBuilder_ == null) {
        header_ = null;
      } else {
        header_ = null;
        headerBuilder_ = null;
      }
      parent_ = "";

      pageSize_ = 0;

      pageToken_ = "";

      filter_ = "";

      if (viewportBuilder_ == null) {
        viewport_ = null;
      } else {
        viewport_ = null;
        viewportBuilder_ = null;
      }
      return this;
    }

    @java.lang.Override
    public com.google.protobuf.Descriptors.Descriptor
        getDescriptorForType() {
      return google.maps.fleetengine.delivery.v1.DeliveryApi.internal_static_maps_fleetengine_delivery_v1_ListDeliveryVehiclesRequest_descriptor;
    }

    @java.lang.Override
    public google.maps.fleetengine.delivery.v1.ListDeliveryVehiclesRequest getDefaultInstanceForType() {
      return google.maps.fleetengine.delivery.v1.ListDeliveryVehiclesRequest.getDefaultInstance();
    }

    @java.lang.Override
    public google.maps.fleetengine.delivery.v1.ListDeliveryVehiclesRequest build() {
      google.maps.fleetengine.delivery.v1.ListDeliveryVehiclesRequest result = buildPartial();
      if (!result.isInitialized()) {
        throw newUninitializedMessageException(result);
      }
      return result;
    }

    @java.lang.Override
    public google.maps.fleetengine.delivery.v1.ListDeliveryVehiclesRequest buildPartial() {
      google.maps.fleetengine.delivery.v1.ListDeliveryVehiclesRequest result = new google.maps.fleetengine.delivery.v1.ListDeliveryVehiclesRequest(this);
      if (headerBuilder_ == null) {
        result.header_ = header_;
      } else {
        result.header_ = headerBuilder_.build();
      }
      result.parent_ = parent_;
      result.pageSize_ = pageSize_;
      result.pageToken_ = pageToken_;
      result.filter_ = filter_;
      if (viewportBuilder_ == null) {
        result.viewport_ = viewport_;
      } else {
        result.viewport_ = viewportBuilder_.build();
      }
      onBuilt();
      return result;
    }

    @java.lang.Override
    public Builder clone() {
      return super.clone();
    }
    @java.lang.Override
    public Builder setField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        java.lang.Object value) {
      return super.setField(field, value);
    }
    @java.lang.Override
    public Builder clearField(
        com.google.protobuf.Descriptors.FieldDescriptor field) {
      return super.clearField(field);
    }
    @java.lang.Override
    public Builder clearOneof(
        com.google.protobuf.Descriptors.OneofDescriptor oneof) {
      return super.clearOneof(oneof);
    }
    @java.lang.Override
    public Builder setRepeatedField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        int index, java.lang.Object value) {
      return super.setRepeatedField(field, index, value);
    }
    @java.lang.Override
    public Builder addRepeatedField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        java.lang.Object value) {
      return super.addRepeatedField(field, value);
    }
    @java.lang.Override
    public Builder mergeFrom(com.google.protobuf.Message other) {
      if (other instanceof google.maps.fleetengine.delivery.v1.ListDeliveryVehiclesRequest) {
        return mergeFrom((google.maps.fleetengine.delivery.v1.ListDeliveryVehiclesRequest)other);
      } else {
        super.mergeFrom(other);
        return this;
      }
    }

    public Builder mergeFrom(google.maps.fleetengine.delivery.v1.ListDeliveryVehiclesRequest other) {
      if (other == google.maps.fleetengine.delivery.v1.ListDeliveryVehiclesRequest.getDefaultInstance()) return this;
      if (other.hasHeader()) {
        mergeHeader(other.getHeader());
      }
      if (!other.getParent().isEmpty()) {
        parent_ = other.parent_;
        onChanged();
      }
      if (other.getPageSize() != 0) {
        setPageSize(other.getPageSize());
      }
      if (!other.getPageToken().isEmpty()) {
        pageToken_ = other.pageToken_;
        onChanged();
      }
      if (!other.getFilter().isEmpty()) {
        filter_ = other.filter_;
        onChanged();
      }
      if (other.hasViewport()) {
        mergeViewport(other.getViewport());
      }
      this.mergeUnknownFields(other.unknownFields);
      onChanged();
      return this;
    }

    @java.lang.Override
    public final boolean isInitialized() {
      return true;
    }

    @java.lang.Override
    public Builder mergeFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      google.maps.fleetengine.delivery.v1.ListDeliveryVehiclesRequest parsedMessage = null;
      try {
        parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        parsedMessage = (google.maps.fleetengine.delivery.v1.ListDeliveryVehiclesRequest) e.getUnfinishedMessage();
        throw e.unwrapIOException();
      } finally {
        if (parsedMessage != null) {
          mergeFrom(parsedMessage);
        }
      }
      return this;
    }

    private google.maps.fleetengine.delivery.v1.DeliveryRequestHeader header_;
    private com.google.protobuf.SingleFieldBuilderV3<
        google.maps.fleetengine.delivery.v1.DeliveryRequestHeader, google.maps.fleetengine.delivery.v1.DeliveryRequestHeader.Builder, google.maps.fleetengine.delivery.v1.DeliveryRequestHeaderOrBuilder> headerBuilder_;
    /**
     * <pre>
     * Optional. The standard Delivery API request header.
     * </pre>
     *
     * <code>.maps.fleetengine.delivery.v1.DeliveryRequestHeader header = 1 [(.google.api.field_behavior) = OPTIONAL];</code>
     * @return Whether the header field is set.
     */
    public boolean hasHeader() {
      return headerBuilder_ != null || header_ != null;
    }
    /**
     * <pre>
     * Optional. The standard Delivery API request header.
     * </pre>
     *
     * <code>.maps.fleetengine.delivery.v1.DeliveryRequestHeader header = 1 [(.google.api.field_behavior) = OPTIONAL];</code>
     * @return The header.
     */
    public google.maps.fleetengine.delivery.v1.DeliveryRequestHeader getHeader() {
      if (headerBuilder_ == null) {
        return header_ == null ? google.maps.fleetengine.delivery.v1.DeliveryRequestHeader.getDefaultInstance() : header_;
      } else {
        return headerBuilder_.getMessage();
      }
    }
    /**
     * <pre>
     * Optional. The standard Delivery API request header.
     * </pre>
     *
     * <code>.maps.fleetengine.delivery.v1.DeliveryRequestHeader header = 1 [(.google.api.field_behavior) = OPTIONAL];</code>
     */
    public Builder setHeader(google.maps.fleetengine.delivery.v1.DeliveryRequestHeader value) {
      if (headerBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        header_ = value;
        onChanged();
      } else {
        headerBuilder_.setMessage(value);
      }

      return this;
    }
    /**
     * <pre>
     * Optional. The standard Delivery API request header.
     * </pre>
     *
     * <code>.maps.fleetengine.delivery.v1.DeliveryRequestHeader header = 1 [(.google.api.field_behavior) = OPTIONAL];</code>
     */
    public Builder setHeader(
        google.maps.fleetengine.delivery.v1.DeliveryRequestHeader.Builder builderForValue) {
      if (headerBuilder_ == null) {
        header_ = builderForValue.build();
        onChanged();
      } else {
        headerBuilder_.setMessage(builderForValue.build());
      }

      return this;
    }
    /**
     * <pre>
     * Optional. The standard Delivery API request header.
     * </pre>
     *
     * <code>.maps.fleetengine.delivery.v1.DeliveryRequestHeader header = 1 [(.google.api.field_behavior) = OPTIONAL];</code>
     */
    public Builder mergeHeader(google.maps.fleetengine.delivery.v1.DeliveryRequestHeader value) {
      if (headerBuilder_ == null) {
        if (header_ != null) {
          header_ =
            google.maps.fleetengine.delivery.v1.DeliveryRequestHeader.newBuilder(header_).mergeFrom(value).buildPartial();
        } else {
          header_ = value;
        }
        onChanged();
      } else {
        headerBuilder_.mergeFrom(value);
      }

      return this;
    }
    /**
     * <pre>
     * Optional. The standard Delivery API request header.
     * </pre>
     *
     * <code>.maps.fleetengine.delivery.v1.DeliveryRequestHeader header = 1 [(.google.api.field_behavior) = OPTIONAL];</code>
     */
    public Builder clearHeader() {
      if (headerBuilder_ == null) {
        header_ = null;
        onChanged();
      } else {
        header_ = null;
        headerBuilder_ = null;
      }

      return this;
    }
    /**
     * <pre>
     * Optional. The standard Delivery API request header.
     * </pre>
     *
     * <code>.maps.fleetengine.delivery.v1.DeliveryRequestHeader header = 1 [(.google.api.field_behavior) = OPTIONAL];</code>
     */
    public google.maps.fleetengine.delivery.v1.DeliveryRequestHeader.Builder getHeaderBuilder() {
      
      onChanged();
      return getHeaderFieldBuilder().getBuilder();
    }
    /**
     * <pre>
     * Optional. The standard Delivery API request header.
     * </pre>
     *
     * <code>.maps.fleetengine.delivery.v1.DeliveryRequestHeader header = 1 [(.google.api.field_behavior) = OPTIONAL];</code>
     */
    public google.maps.fleetengine.delivery.v1.DeliveryRequestHeaderOrBuilder getHeaderOrBuilder() {
      if (headerBuilder_ != null) {
        return headerBuilder_.getMessageOrBuilder();
      } else {
        return header_ == null ?
            google.maps.fleetengine.delivery.v1.DeliveryRequestHeader.getDefaultInstance() : header_;
      }
    }
    /**
     * <pre>
     * Optional. The standard Delivery API request header.
     * </pre>
     *
     * <code>.maps.fleetengine.delivery.v1.DeliveryRequestHeader header = 1 [(.google.api.field_behavior) = OPTIONAL];</code>
     */
    private com.google.protobuf.SingleFieldBuilderV3<
        google.maps.fleetengine.delivery.v1.DeliveryRequestHeader, google.maps.fleetengine.delivery.v1.DeliveryRequestHeader.Builder, google.maps.fleetengine.delivery.v1.DeliveryRequestHeaderOrBuilder> 
        getHeaderFieldBuilder() {
      if (headerBuilder_ == null) {
        headerBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
            google.maps.fleetengine.delivery.v1.DeliveryRequestHeader, google.maps.fleetengine.delivery.v1.DeliveryRequestHeader.Builder, google.maps.fleetengine.delivery.v1.DeliveryRequestHeaderOrBuilder>(
                getHeader(),
                getParentForChildren(),
                isClean());
        header_ = null;
      }
      return headerBuilder_;
    }

    private java.lang.Object parent_ = "";
    /**
     * <pre>
     * Required. Must be in the format `providers/{provider}`.
     * The `provider` must be the Google Cloud Project ID.
     * For example, `sample-cloud-project`.
     * </pre>
     *
     * <code>string parent = 3 [(.google.api.field_behavior) = REQUIRED, (.google.api.resource_reference) = { ... }</code>
     * @return The parent.
     */
    public java.lang.String getParent() {
      java.lang.Object ref = parent_;
      if (!(ref instanceof java.lang.String)) {
        com.google.protobuf.ByteString bs =
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        parent_ = s;
        return s;
      } else {
        return (java.lang.String) ref;
      }
    }
    /**
     * <pre>
     * Required. Must be in the format `providers/{provider}`.
     * The `provider` must be the Google Cloud Project ID.
     * For example, `sample-cloud-project`.
     * </pre>
     *
     * <code>string parent = 3 [(.google.api.field_behavior) = REQUIRED, (.google.api.resource_reference) = { ... }</code>
     * @return The bytes for parent.
     */
    public com.google.protobuf.ByteString
        getParentBytes() {
      java.lang.Object ref = parent_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        parent_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }
    /**
     * <pre>
     * Required. Must be in the format `providers/{provider}`.
     * The `provider` must be the Google Cloud Project ID.
     * For example, `sample-cloud-project`.
     * </pre>
     *
     * <code>string parent = 3 [(.google.api.field_behavior) = REQUIRED, (.google.api.resource_reference) = { ... }</code>
     * @param value The parent to set.
     * @return This builder for chaining.
     */
    public Builder setParent(
        java.lang.String value) {
      if (value == null) {
    throw new NullPointerException();
  }
  
      parent_ = value;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * Required. Must be in the format `providers/{provider}`.
     * The `provider` must be the Google Cloud Project ID.
     * For example, `sample-cloud-project`.
     * </pre>
     *
     * <code>string parent = 3 [(.google.api.field_behavior) = REQUIRED, (.google.api.resource_reference) = { ... }</code>
     * @return This builder for chaining.
     */
    public Builder clearParent() {
      
      parent_ = getDefaultInstance().getParent();
      onChanged();
      return this;
    }
    /**
     * <pre>
     * Required. Must be in the format `providers/{provider}`.
     * The `provider` must be the Google Cloud Project ID.
     * For example, `sample-cloud-project`.
     * </pre>
     *
     * <code>string parent = 3 [(.google.api.field_behavior) = REQUIRED, (.google.api.resource_reference) = { ... }</code>
     * @param value The bytes for parent to set.
     * @return This builder for chaining.
     */
    public Builder setParentBytes(
        com.google.protobuf.ByteString value) {
      if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
      
      parent_ = value;
      onChanged();
      return this;
    }

    private int pageSize_ ;
    /**
     * <pre>
     * Optional. The maximum number of vehicles to return. The service may return fewer than
     * this number. If you don't specify this number, then the server determines
     * the number of results to return.
     * </pre>
     *
     * <code>int32 page_size = 4 [(.google.api.field_behavior) = OPTIONAL];</code>
     * @return The pageSize.
     */
    @java.lang.Override
    public int getPageSize() {
      return pageSize_;
    }
    /**
     * <pre>
     * Optional. The maximum number of vehicles to return. The service may return fewer than
     * this number. If you don't specify this number, then the server determines
     * the number of results to return.
     * </pre>
     *
     * <code>int32 page_size = 4 [(.google.api.field_behavior) = OPTIONAL];</code>
     * @param value The pageSize to set.
     * @return This builder for chaining.
     */
    public Builder setPageSize(int value) {
      
      pageSize_ = value;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * Optional. The maximum number of vehicles to return. The service may return fewer than
     * this number. If you don't specify this number, then the server determines
     * the number of results to return.
     * </pre>
     *
     * <code>int32 page_size = 4 [(.google.api.field_behavior) = OPTIONAL];</code>
     * @return This builder for chaining.
     */
    public Builder clearPageSize() {
      
      pageSize_ = 0;
      onChanged();
      return this;
    }

    private java.lang.Object pageToken_ = "";
    /**
     * <pre>
     * Optional. A page token, received from a previous `ListDeliveryVehicles` call. You
     * must provide this in order to retrieve the subsequent page.
     * When paginating, all other parameters provided to `ListDeliveryVehicles`
     * must match the call that provided the page token.
     * </pre>
     *
     * <code>string page_token = 5 [(.google.api.field_behavior) = OPTIONAL];</code>
     * @return The pageToken.
     */
    public java.lang.String getPageToken() {
      java.lang.Object ref = pageToken_;
      if (!(ref instanceof java.lang.String)) {
        com.google.protobuf.ByteString bs =
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        pageToken_ = s;
        return s;
      } else {
        return (java.lang.String) ref;
      }
    }
    /**
     * <pre>
     * Optional. A page token, received from a previous `ListDeliveryVehicles` call. You
     * must provide this in order to retrieve the subsequent page.
     * When paginating, all other parameters provided to `ListDeliveryVehicles`
     * must match the call that provided the page token.
     * </pre>
     *
     * <code>string page_token = 5 [(.google.api.field_behavior) = OPTIONAL];</code>
     * @return The bytes for pageToken.
     */
    public com.google.protobuf.ByteString
        getPageTokenBytes() {
      java.lang.Object ref = pageToken_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        pageToken_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }
    /**
     * <pre>
     * Optional. A page token, received from a previous `ListDeliveryVehicles` call. You
     * must provide this in order to retrieve the subsequent page.
     * When paginating, all other parameters provided to `ListDeliveryVehicles`
     * must match the call that provided the page token.
     * </pre>
     *
     * <code>string page_token = 5 [(.google.api.field_behavior) = OPTIONAL];</code>
     * @param value The pageToken to set.
     * @return This builder for chaining.
     */
    public Builder setPageToken(
        java.lang.String value) {
      if (value == null) {
    throw new NullPointerException();
  }
  
      pageToken_ = value;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * Optional. A page token, received from a previous `ListDeliveryVehicles` call. You
     * must provide this in order to retrieve the subsequent page.
     * When paginating, all other parameters provided to `ListDeliveryVehicles`
     * must match the call that provided the page token.
     * </pre>
     *
     * <code>string page_token = 5 [(.google.api.field_behavior) = OPTIONAL];</code>
     * @return This builder for chaining.
     */
    public Builder clearPageToken() {
      
      pageToken_ = getDefaultInstance().getPageToken();
      onChanged();
      return this;
    }
    /**
     * <pre>
     * Optional. A page token, received from a previous `ListDeliveryVehicles` call. You
     * must provide this in order to retrieve the subsequent page.
     * When paginating, all other parameters provided to `ListDeliveryVehicles`
     * must match the call that provided the page token.
     * </pre>
     *
     * <code>string page_token = 5 [(.google.api.field_behavior) = OPTIONAL];</code>
     * @param value The bytes for pageToken to set.
     * @return This builder for chaining.
     */
    public Builder setPageTokenBytes(
        com.google.protobuf.ByteString value) {
      if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
      
      pageToken_ = value;
      onChanged();
      return this;
    }

    private java.lang.Object filter_ = "";
    /**
     * <pre>
     * Optional. A filter query to apply when listing delivery vehicles. See
     * http://aip.dev/160 for examples of the filter syntax. If you don't specify
     * a value, or if you specify an empty string for the filter, then all
     * delivery vehicles are returned.
     * Note that the only queries supported for `ListDeliveryVehicles` are
     * equality comparisons on vehicle attributes (`attributes.&lt;key&gt; = &lt;value&gt;`).
     * Comparison operators besides `=` (like `!=`, `&gt;`, `&lt;`, etc.) aren't
     * supported. Queries that include them are rejected. You can combine
     * attribute equality queries with **AND**, but not with any other boolean
     * operator.
     * </pre>
     *
     * <code>string filter = 6 [(.google.api.field_behavior) = OPTIONAL];</code>
     * @return The filter.
     */
    public java.lang.String getFilter() {
      java.lang.Object ref = filter_;
      if (!(ref instanceof java.lang.String)) {
        com.google.protobuf.ByteString bs =
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        filter_ = s;
        return s;
      } else {
        return (java.lang.String) ref;
      }
    }
    /**
     * <pre>
     * Optional. A filter query to apply when listing delivery vehicles. See
     * http://aip.dev/160 for examples of the filter syntax. If you don't specify
     * a value, or if you specify an empty string for the filter, then all
     * delivery vehicles are returned.
     * Note that the only queries supported for `ListDeliveryVehicles` are
     * equality comparisons on vehicle attributes (`attributes.&lt;key&gt; = &lt;value&gt;`).
     * Comparison operators besides `=` (like `!=`, `&gt;`, `&lt;`, etc.) aren't
     * supported. Queries that include them are rejected. You can combine
     * attribute equality queries with **AND**, but not with any other boolean
     * operator.
     * </pre>
     *
     * <code>string filter = 6 [(.google.api.field_behavior) = OPTIONAL];</code>
     * @return The bytes for filter.
     */
    public com.google.protobuf.ByteString
        getFilterBytes() {
      java.lang.Object ref = filter_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        filter_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }
    /**
     * <pre>
     * Optional. A filter query to apply when listing delivery vehicles. See
     * http://aip.dev/160 for examples of the filter syntax. If you don't specify
     * a value, or if you specify an empty string for the filter, then all
     * delivery vehicles are returned.
     * Note that the only queries supported for `ListDeliveryVehicles` are
     * equality comparisons on vehicle attributes (`attributes.&lt;key&gt; = &lt;value&gt;`).
     * Comparison operators besides `=` (like `!=`, `&gt;`, `&lt;`, etc.) aren't
     * supported. Queries that include them are rejected. You can combine
     * attribute equality queries with **AND**, but not with any other boolean
     * operator.
     * </pre>
     *
     * <code>string filter = 6 [(.google.api.field_behavior) = OPTIONAL];</code>
     * @param value The filter to set.
     * @return This builder for chaining.
     */
    public Builder setFilter(
        java.lang.String value) {
      if (value == null) {
    throw new NullPointerException();
  }
  
      filter_ = value;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * Optional. A filter query to apply when listing delivery vehicles. See
     * http://aip.dev/160 for examples of the filter syntax. If you don't specify
     * a value, or if you specify an empty string for the filter, then all
     * delivery vehicles are returned.
     * Note that the only queries supported for `ListDeliveryVehicles` are
     * equality comparisons on vehicle attributes (`attributes.&lt;key&gt; = &lt;value&gt;`).
     * Comparison operators besides `=` (like `!=`, `&gt;`, `&lt;`, etc.) aren't
     * supported. Queries that include them are rejected. You can combine
     * attribute equality queries with **AND**, but not with any other boolean
     * operator.
     * </pre>
     *
     * <code>string filter = 6 [(.google.api.field_behavior) = OPTIONAL];</code>
     * @return This builder for chaining.
     */
    public Builder clearFilter() {
      
      filter_ = getDefaultInstance().getFilter();
      onChanged();
      return this;
    }
    /**
     * <pre>
     * Optional. A filter query to apply when listing delivery vehicles. See
     * http://aip.dev/160 for examples of the filter syntax. If you don't specify
     * a value, or if you specify an empty string for the filter, then all
     * delivery vehicles are returned.
     * Note that the only queries supported for `ListDeliveryVehicles` are
     * equality comparisons on vehicle attributes (`attributes.&lt;key&gt; = &lt;value&gt;`).
     * Comparison operators besides `=` (like `!=`, `&gt;`, `&lt;`, etc.) aren't
     * supported. Queries that include them are rejected. You can combine
     * attribute equality queries with **AND**, but not with any other boolean
     * operator.
     * </pre>
     *
     * <code>string filter = 6 [(.google.api.field_behavior) = OPTIONAL];</code>
     * @param value The bytes for filter to set.
     * @return This builder for chaining.
     */
    public Builder setFilterBytes(
        com.google.protobuf.ByteString value) {
      if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
      
      filter_ = value;
      onChanged();
      return this;
    }

    private com.google.geo.type.Viewport viewport_;
    private com.google.protobuf.SingleFieldBuilderV3<
        com.google.geo.type.Viewport, com.google.geo.type.Viewport.Builder, com.google.geo.type.ViewportOrBuilder> viewportBuilder_;
    /**
     * <pre>
     * Optional. A filter that limits the search area to a rectangle defined by the
     * northeast and southwest corner points.
     * When defined, only vehicles located within the search area are returned.
     * </pre>
     *
     * <code>.google.geo.type.Viewport viewport = 7 [(.google.api.field_behavior) = OPTIONAL];</code>
     * @return Whether the viewport field is set.
     */
    public boolean hasViewport() {
      return viewportBuilder_ != null || viewport_ != null;
    }
    /**
     * <pre>
     * Optional. A filter that limits the search area to a rectangle defined by the
     * northeast and southwest corner points.
     * When defined, only vehicles located within the search area are returned.
     * </pre>
     *
     * <code>.google.geo.type.Viewport viewport = 7 [(.google.api.field_behavior) = OPTIONAL];</code>
     * @return The viewport.
     */
    public com.google.geo.type.Viewport getViewport() {
      if (viewportBuilder_ == null) {
        return viewport_ == null ? com.google.geo.type.Viewport.getDefaultInstance() : viewport_;
      } else {
        return viewportBuilder_.getMessage();
      }
    }
    /**
     * <pre>
     * Optional. A filter that limits the search area to a rectangle defined by the
     * northeast and southwest corner points.
     * When defined, only vehicles located within the search area are returned.
     * </pre>
     *
     * <code>.google.geo.type.Viewport viewport = 7 [(.google.api.field_behavior) = OPTIONAL];</code>
     */
    public Builder setViewport(com.google.geo.type.Viewport value) {
      if (viewportBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        viewport_ = value;
        onChanged();
      } else {
        viewportBuilder_.setMessage(value);
      }

      return this;
    }
    /**
     * <pre>
     * Optional. A filter that limits the search area to a rectangle defined by the
     * northeast and southwest corner points.
     * When defined, only vehicles located within the search area are returned.
     * </pre>
     *
     * <code>.google.geo.type.Viewport viewport = 7 [(.google.api.field_behavior) = OPTIONAL];</code>
     */
    public Builder setViewport(
        com.google.geo.type.Viewport.Builder builderForValue) {
      if (viewportBuilder_ == null) {
        viewport_ = builderForValue.build();
        onChanged();
      } else {
        viewportBuilder_.setMessage(builderForValue.build());
      }

      return this;
    }
    /**
     * <pre>
     * Optional. A filter that limits the search area to a rectangle defined by the
     * northeast and southwest corner points.
     * When defined, only vehicles located within the search area are returned.
     * </pre>
     *
     * <code>.google.geo.type.Viewport viewport = 7 [(.google.api.field_behavior) = OPTIONAL];</code>
     */
    public Builder mergeViewport(com.google.geo.type.Viewport value) {
      if (viewportBuilder_ == null) {
        if (viewport_ != null) {
          viewport_ =
            com.google.geo.type.Viewport.newBuilder(viewport_).mergeFrom(value).buildPartial();
        } else {
          viewport_ = value;
        }
        onChanged();
      } else {
        viewportBuilder_.mergeFrom(value);
      }

      return this;
    }
    /**
     * <pre>
     * Optional. A filter that limits the search area to a rectangle defined by the
     * northeast and southwest corner points.
     * When defined, only vehicles located within the search area are returned.
     * </pre>
     *
     * <code>.google.geo.type.Viewport viewport = 7 [(.google.api.field_behavior) = OPTIONAL];</code>
     */
    public Builder clearViewport() {
      if (viewportBuilder_ == null) {
        viewport_ = null;
        onChanged();
      } else {
        viewport_ = null;
        viewportBuilder_ = null;
      }

      return this;
    }
    /**
     * <pre>
     * Optional. A filter that limits the search area to a rectangle defined by the
     * northeast and southwest corner points.
     * When defined, only vehicles located within the search area are returned.
     * </pre>
     *
     * <code>.google.geo.type.Viewport viewport = 7 [(.google.api.field_behavior) = OPTIONAL];</code>
     */
    public com.google.geo.type.Viewport.Builder getViewportBuilder() {
      
      onChanged();
      return getViewportFieldBuilder().getBuilder();
    }
    /**
     * <pre>
     * Optional. A filter that limits the search area to a rectangle defined by the
     * northeast and southwest corner points.
     * When defined, only vehicles located within the search area are returned.
     * </pre>
     *
     * <code>.google.geo.type.Viewport viewport = 7 [(.google.api.field_behavior) = OPTIONAL];</code>
     */
    public com.google.geo.type.ViewportOrBuilder getViewportOrBuilder() {
      if (viewportBuilder_ != null) {
        return viewportBuilder_.getMessageOrBuilder();
      } else {
        return viewport_ == null ?
            com.google.geo.type.Viewport.getDefaultInstance() : viewport_;
      }
    }
    /**
     * <pre>
     * Optional. A filter that limits the search area to a rectangle defined by the
     * northeast and southwest corner points.
     * When defined, only vehicles located within the search area are returned.
     * </pre>
     *
     * <code>.google.geo.type.Viewport viewport = 7 [(.google.api.field_behavior) = OPTIONAL];</code>
     */
    private com.google.protobuf.SingleFieldBuilderV3<
        com.google.geo.type.Viewport, com.google.geo.type.Viewport.Builder, com.google.geo.type.ViewportOrBuilder> 
        getViewportFieldBuilder() {
      if (viewportBuilder_ == null) {
        viewportBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
            com.google.geo.type.Viewport, com.google.geo.type.Viewport.Builder, com.google.geo.type.ViewportOrBuilder>(
                getViewport(),
                getParentForChildren(),
                isClean());
        viewport_ = null;
      }
      return viewportBuilder_;
    }
    @java.lang.Override
    public final Builder setUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return super.setUnknownFields(unknownFields);
    }

    @java.lang.Override
    public final Builder mergeUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return super.mergeUnknownFields(unknownFields);
    }


    // @@protoc_insertion_point(builder_scope:maps.fleetengine.delivery.v1.ListDeliveryVehiclesRequest)
  }

  // @@protoc_insertion_point(class_scope:maps.fleetengine.delivery.v1.ListDeliveryVehiclesRequest)
  private static final google.maps.fleetengine.delivery.v1.ListDeliveryVehiclesRequest DEFAULT_INSTANCE;
  static {
    DEFAULT_INSTANCE = new google.maps.fleetengine.delivery.v1.ListDeliveryVehiclesRequest();
  }

  public static google.maps.fleetengine.delivery.v1.ListDeliveryVehiclesRequest getDefaultInstance() {
    return DEFAULT_INSTANCE;
  }

  private static final com.google.protobuf.Parser<ListDeliveryVehiclesRequest>
      PARSER = new com.google.protobuf.AbstractParser<ListDeliveryVehiclesRequest>() {
    @java.lang.Override
    public ListDeliveryVehiclesRequest parsePartialFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return new ListDeliveryVehiclesRequest(input, extensionRegistry);
    }
  };

  public static com.google.protobuf.Parser<ListDeliveryVehiclesRequest> parser() {
    return PARSER;
  }

  @java.lang.Override
  public com.google.protobuf.Parser<ListDeliveryVehiclesRequest> getParserForType() {
    return PARSER;
  }

  @java.lang.Override
  public google.maps.fleetengine.delivery.v1.ListDeliveryVehiclesRequest getDefaultInstanceForType() {
    return DEFAULT_INSTANCE;
  }

}

