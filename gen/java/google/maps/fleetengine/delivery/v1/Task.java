// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: google/maps/fleetengine/delivery/v1/tasks.proto

package google.maps.fleetengine.delivery.v1;

/**
 * <pre>
 * A Task in the Delivery API represents a single action to track. In general,
 * there is a distinction between shipment-related Tasks and break Tasks. A
 * shipment can have multiple Tasks associated with it. For example, there could
 * be one Task for the pickup, and one for the drop-off or transfer. Also,
 * different Tasks for a given shipment can be handled by different vehicles.
 * For example, one vehicle could handle the pickup, driving the shipment to the
 * hub, while another vehicle drives the same shipment from the hub to the
 * drop-off location.
 * Note: gRPC and REST APIs use different field naming conventions. For example,
 * the `Task.journey_sharing_info` field in the gRPC API and the
 * `DeliveryVehicle.journeySharingInfo` field in the REST API refer to the same
 * field.
 * </pre>
 *
 * Protobuf type {@code maps.fleetengine.delivery.v1.Task}
 */
public final class Task extends
    com.google.protobuf.GeneratedMessageV3 implements
    // @@protoc_insertion_point(message_implements:maps.fleetengine.delivery.v1.Task)
    TaskOrBuilder {
private static final long serialVersionUID = 0L;
  // Use Task.newBuilder() to construct.
  private Task(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
    super(builder);
  }
  private Task() {
    name_ = "";
    type_ = 0;
    state_ = 0;
    taskOutcome_ = 0;
    taskOutcomeLocationSource_ = 0;
    trackingId_ = "";
    deliveryVehicleId_ = "";
  }

  @java.lang.Override
  @SuppressWarnings({"unused"})
  protected java.lang.Object newInstance(
      UnusedPrivateParameter unused) {
    return new Task();
  }

  @java.lang.Override
  public final com.google.protobuf.UnknownFieldSet
  getUnknownFields() {
    return this.unknownFields;
  }
  private Task(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    this();
    if (extensionRegistry == null) {
      throw new java.lang.NullPointerException();
    }
    com.google.protobuf.UnknownFieldSet.Builder unknownFields =
        com.google.protobuf.UnknownFieldSet.newBuilder();
    try {
      boolean done = false;
      while (!done) {
        int tag = input.readTag();
        switch (tag) {
          case 0:
            done = true;
            break;
          case 10: {
            java.lang.String s = input.readStringRequireUtf8();

            name_ = s;
            break;
          }
          case 16: {
            int rawValue = input.readEnum();

            type_ = rawValue;
            break;
          }
          case 24: {
            int rawValue = input.readEnum();

            state_ = rawValue;
            break;
          }
          case 34: {
            java.lang.String s = input.readStringRequireUtf8();

            trackingId_ = s;
            break;
          }
          case 42: {
            java.lang.String s = input.readStringRequireUtf8();

            deliveryVehicleId_ = s;
            break;
          }
          case 50: {
            google.maps.fleetengine.delivery.v1.LocationInfo.Builder subBuilder = null;
            if (plannedLocation_ != null) {
              subBuilder = plannedLocation_.toBuilder();
            }
            plannedLocation_ = input.readMessage(google.maps.fleetengine.delivery.v1.LocationInfo.parser(), extensionRegistry);
            if (subBuilder != null) {
              subBuilder.mergeFrom(plannedLocation_);
              plannedLocation_ = subBuilder.buildPartial();
            }

            break;
          }
          case 58: {
            com.google.protobuf.Duration.Builder subBuilder = null;
            if (taskDuration_ != null) {
              subBuilder = taskDuration_.toBuilder();
            }
            taskDuration_ = input.readMessage(com.google.protobuf.Duration.parser(), extensionRegistry);
            if (subBuilder != null) {
              subBuilder.mergeFrom(taskDuration_);
              taskDuration_ = subBuilder.buildPartial();
            }

            break;
          }
          case 66: {
            google.maps.fleetengine.delivery.v1.Task.JourneySharingInfo.Builder subBuilder = null;
            if (journeySharingInfo_ != null) {
              subBuilder = journeySharingInfo_.toBuilder();
            }
            journeySharingInfo_ = input.readMessage(google.maps.fleetengine.delivery.v1.Task.JourneySharingInfo.parser(), extensionRegistry);
            if (subBuilder != null) {
              subBuilder.mergeFrom(journeySharingInfo_);
              journeySharingInfo_ = subBuilder.buildPartial();
            }

            break;
          }
          case 72: {
            int rawValue = input.readEnum();

            taskOutcome_ = rawValue;
            break;
          }
          case 82: {
            com.google.protobuf.Timestamp.Builder subBuilder = null;
            if (taskOutcomeTime_ != null) {
              subBuilder = taskOutcomeTime_.toBuilder();
            }
            taskOutcomeTime_ = input.readMessage(com.google.protobuf.Timestamp.parser(), extensionRegistry);
            if (subBuilder != null) {
              subBuilder.mergeFrom(taskOutcomeTime_);
              taskOutcomeTime_ = subBuilder.buildPartial();
            }

            break;
          }
          case 90: {
            google.maps.fleetengine.delivery.v1.LocationInfo.Builder subBuilder = null;
            if (taskOutcomeLocation_ != null) {
              subBuilder = taskOutcomeLocation_.toBuilder();
            }
            taskOutcomeLocation_ = input.readMessage(google.maps.fleetengine.delivery.v1.LocationInfo.parser(), extensionRegistry);
            if (subBuilder != null) {
              subBuilder.mergeFrom(taskOutcomeLocation_);
              taskOutcomeLocation_ = subBuilder.buildPartial();
            }

            break;
          }
          case 96: {
            int rawValue = input.readEnum();

            taskOutcomeLocationSource_ = rawValue;
            break;
          }
          default: {
            if (!parseUnknownField(
                input, unknownFields, extensionRegistry, tag)) {
              done = true;
            }
            break;
          }
        }
      }
    } catch (com.google.protobuf.InvalidProtocolBufferException e) {
      throw e.setUnfinishedMessage(this);
    } catch (com.google.protobuf.UninitializedMessageException e) {
      throw e.asInvalidProtocolBufferException().setUnfinishedMessage(this);
    } catch (java.io.IOException e) {
      throw new com.google.protobuf.InvalidProtocolBufferException(
          e).setUnfinishedMessage(this);
    } finally {
      this.unknownFields = unknownFields.build();
      makeExtensionsImmutable();
    }
  }
  public static final com.google.protobuf.Descriptors.Descriptor
      getDescriptor() {
    return google.maps.fleetengine.delivery.v1.Tasks.internal_static_maps_fleetengine_delivery_v1_Task_descriptor;
  }

  @java.lang.Override
  protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internalGetFieldAccessorTable() {
    return google.maps.fleetengine.delivery.v1.Tasks.internal_static_maps_fleetengine_delivery_v1_Task_fieldAccessorTable
        .ensureFieldAccessorsInitialized(
            google.maps.fleetengine.delivery.v1.Task.class, google.maps.fleetengine.delivery.v1.Task.Builder.class);
  }

  /**
   * <pre>
   * The type of Task.
   * </pre>
   *
   * Protobuf enum {@code maps.fleetengine.delivery.v1.Task.Type}
   */
  public enum Type
      implements com.google.protobuf.ProtocolMessageEnum {
    /**
     * <pre>
     * Default, the Task type is unknown.
     * </pre>
     *
     * <code>TYPE_UNSPECIFIED = 0;</code>
     */
    TYPE_UNSPECIFIED(0),
    /**
     * <pre>
     * A pickup Task is the action taken for picking up a shipment from a
     * customer. Depot or feeder vehicle pickups should use the `SCHEDULED_STOP`
     * type.
     * </pre>
     *
     * <code>PICKUP = 1;</code>
     */
    PICKUP(1),
    /**
     * <pre>
     * A delivery Task is the action taken for delivering a shipment to an end
     * customer. Depot or feeder vehicle dropoffs should use the
     * `SCHEDULED_STOP` type.
     * </pre>
     *
     * <code>DELIVERY = 2;</code>
     */
    DELIVERY(2),
    /**
     * <pre>
     * A scheduled stop Task is used for planning purposes. For example, it
     * could represent picking up or dropping off shipments from feeder vehicles
     * or depots. It shouldn't be used for any shipments that are picked up or
     * dropped off from an end customer.
     * </pre>
     *
     * <code>SCHEDULED_STOP = 3;</code>
     */
    SCHEDULED_STOP(3),
    /**
     * <pre>
     * A Task that means the Vehicle is not available for service. For example,
     * this can happen when the driver takes a break, or when the vehicle
     * is being refueled.
     * </pre>
     *
     * <code>UNAVAILABLE = 4;</code>
     */
    UNAVAILABLE(4),
    UNRECOGNIZED(-1),
    ;

    /**
     * <pre>
     * Default, the Task type is unknown.
     * </pre>
     *
     * <code>TYPE_UNSPECIFIED = 0;</code>
     */
    public static final int TYPE_UNSPECIFIED_VALUE = 0;
    /**
     * <pre>
     * A pickup Task is the action taken for picking up a shipment from a
     * customer. Depot or feeder vehicle pickups should use the `SCHEDULED_STOP`
     * type.
     * </pre>
     *
     * <code>PICKUP = 1;</code>
     */
    public static final int PICKUP_VALUE = 1;
    /**
     * <pre>
     * A delivery Task is the action taken for delivering a shipment to an end
     * customer. Depot or feeder vehicle dropoffs should use the
     * `SCHEDULED_STOP` type.
     * </pre>
     *
     * <code>DELIVERY = 2;</code>
     */
    public static final int DELIVERY_VALUE = 2;
    /**
     * <pre>
     * A scheduled stop Task is used for planning purposes. For example, it
     * could represent picking up or dropping off shipments from feeder vehicles
     * or depots. It shouldn't be used for any shipments that are picked up or
     * dropped off from an end customer.
     * </pre>
     *
     * <code>SCHEDULED_STOP = 3;</code>
     */
    public static final int SCHEDULED_STOP_VALUE = 3;
    /**
     * <pre>
     * A Task that means the Vehicle is not available for service. For example,
     * this can happen when the driver takes a break, or when the vehicle
     * is being refueled.
     * </pre>
     *
     * <code>UNAVAILABLE = 4;</code>
     */
    public static final int UNAVAILABLE_VALUE = 4;


    public final int getNumber() {
      if (this == UNRECOGNIZED) {
        throw new java.lang.IllegalArgumentException(
            "Can't get the number of an unknown enum value.");
      }
      return value;
    }

    /**
     * @param value The numeric wire value of the corresponding enum entry.
     * @return The enum associated with the given numeric wire value.
     * @deprecated Use {@link #forNumber(int)} instead.
     */
    @java.lang.Deprecated
    public static Type valueOf(int value) {
      return forNumber(value);
    }

    /**
     * @param value The numeric wire value of the corresponding enum entry.
     * @return The enum associated with the given numeric wire value.
     */
    public static Type forNumber(int value) {
      switch (value) {
        case 0: return TYPE_UNSPECIFIED;
        case 1: return PICKUP;
        case 2: return DELIVERY;
        case 3: return SCHEDULED_STOP;
        case 4: return UNAVAILABLE;
        default: return null;
      }
    }

    public static com.google.protobuf.Internal.EnumLiteMap<Type>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static final com.google.protobuf.Internal.EnumLiteMap<
        Type> internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<Type>() {
            public Type findValueByNumber(int number) {
              return Type.forNumber(number);
            }
          };

    public final com.google.protobuf.Descriptors.EnumValueDescriptor
        getValueDescriptor() {
      if (this == UNRECOGNIZED) {
        throw new java.lang.IllegalStateException(
            "Can't get the descriptor of an unrecognized enum value.");
      }
      return getDescriptor().getValues().get(ordinal());
    }
    public final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptorForType() {
      return getDescriptor();
    }
    public static final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptor() {
      return google.maps.fleetengine.delivery.v1.Task.getDescriptor().getEnumTypes().get(0);
    }

    private static final Type[] VALUES = values();

    public static Type valueOf(
        com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
      if (desc.getType() != getDescriptor()) {
        throw new java.lang.IllegalArgumentException(
          "EnumValueDescriptor is not for this type.");
      }
      if (desc.getIndex() == -1) {
        return UNRECOGNIZED;
      }
      return VALUES[desc.getIndex()];
    }

    private final int value;

    private Type(int value) {
      this.value = value;
    }

    // @@protoc_insertion_point(enum_scope:maps.fleetengine.delivery.v1.Task.Type)
  }

  /**
   * <pre>
   * The state of a Task. This indicates the Tasks's progress.
   * </pre>
   *
   * Protobuf enum {@code maps.fleetengine.delivery.v1.Task.State}
   */
  public enum State
      implements com.google.protobuf.ProtocolMessageEnum {
    /**
     * <pre>
     * Default. Used for an unspecified or unrecognized Task state.
     * </pre>
     *
     * <code>STATE_UNSPECIFIED = 0;</code>
     */
    STATE_UNSPECIFIED(0),
    /**
     * <pre>
     * Either the Task has not yet been assigned to a delivery vehicle, or the
     * delivery vehicle has not yet passed the Task's assigned vehicle stop.
     * </pre>
     *
     * <code>OPEN = 1;</code>
     */
    OPEN(1),
    /**
     * <pre>
     * When the vehicle passes the vehicle stop for this Task.
     * </pre>
     *
     * <code>CLOSED = 2;</code>
     */
    CLOSED(2),
    UNRECOGNIZED(-1),
    ;

    /**
     * <pre>
     * Default. Used for an unspecified or unrecognized Task state.
     * </pre>
     *
     * <code>STATE_UNSPECIFIED = 0;</code>
     */
    public static final int STATE_UNSPECIFIED_VALUE = 0;
    /**
     * <pre>
     * Either the Task has not yet been assigned to a delivery vehicle, or the
     * delivery vehicle has not yet passed the Task's assigned vehicle stop.
     * </pre>
     *
     * <code>OPEN = 1;</code>
     */
    public static final int OPEN_VALUE = 1;
    /**
     * <pre>
     * When the vehicle passes the vehicle stop for this Task.
     * </pre>
     *
     * <code>CLOSED = 2;</code>
     */
    public static final int CLOSED_VALUE = 2;


    public final int getNumber() {
      if (this == UNRECOGNIZED) {
        throw new java.lang.IllegalArgumentException(
            "Can't get the number of an unknown enum value.");
      }
      return value;
    }

    /**
     * @param value The numeric wire value of the corresponding enum entry.
     * @return The enum associated with the given numeric wire value.
     * @deprecated Use {@link #forNumber(int)} instead.
     */
    @java.lang.Deprecated
    public static State valueOf(int value) {
      return forNumber(value);
    }

    /**
     * @param value The numeric wire value of the corresponding enum entry.
     * @return The enum associated with the given numeric wire value.
     */
    public static State forNumber(int value) {
      switch (value) {
        case 0: return STATE_UNSPECIFIED;
        case 1: return OPEN;
        case 2: return CLOSED;
        default: return null;
      }
    }

    public static com.google.protobuf.Internal.EnumLiteMap<State>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static final com.google.protobuf.Internal.EnumLiteMap<
        State> internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<State>() {
            public State findValueByNumber(int number) {
              return State.forNumber(number);
            }
          };

    public final com.google.protobuf.Descriptors.EnumValueDescriptor
        getValueDescriptor() {
      if (this == UNRECOGNIZED) {
        throw new java.lang.IllegalStateException(
            "Can't get the descriptor of an unrecognized enum value.");
      }
      return getDescriptor().getValues().get(ordinal());
    }
    public final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptorForType() {
      return getDescriptor();
    }
    public static final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptor() {
      return google.maps.fleetengine.delivery.v1.Task.getDescriptor().getEnumTypes().get(1);
    }

    private static final State[] VALUES = values();

    public static State valueOf(
        com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
      if (desc.getType() != getDescriptor()) {
        throw new java.lang.IllegalArgumentException(
          "EnumValueDescriptor is not for this type.");
      }
      if (desc.getIndex() == -1) {
        return UNRECOGNIZED;
      }
      return VALUES[desc.getIndex()];
    }

    private final int value;

    private State(int value) {
      this.value = value;
    }

    // @@protoc_insertion_point(enum_scope:maps.fleetengine.delivery.v1.Task.State)
  }

  /**
   * <pre>
   * The outcome of attempting to execute a Task. When `TaskState` is closed,
   * `TaskOutcome` indicates whether it was completed successfully.
   * </pre>
   *
   * Protobuf enum {@code maps.fleetengine.delivery.v1.Task.TaskOutcome}
   */
  public enum TaskOutcome
      implements com.google.protobuf.ProtocolMessageEnum {
    /**
     * <pre>
     * The Task outcome before its value is set.
     * </pre>
     *
     * <code>TASK_OUTCOME_UNSPECIFIED = 0;</code>
     */
    TASK_OUTCOME_UNSPECIFIED(0),
    /**
     * <pre>
     * The Task completed successfully.
     * </pre>
     *
     * <code>SUCCEEDED = 1;</code>
     */
    SUCCEEDED(1),
    /**
     * <pre>
     * Either the Task couldn't be completed, or it was cancelled.
     * </pre>
     *
     * <code>FAILED = 2;</code>
     */
    FAILED(2),
    UNRECOGNIZED(-1),
    ;

    /**
     * <pre>
     * The Task outcome before its value is set.
     * </pre>
     *
     * <code>TASK_OUTCOME_UNSPECIFIED = 0;</code>
     */
    public static final int TASK_OUTCOME_UNSPECIFIED_VALUE = 0;
    /**
     * <pre>
     * The Task completed successfully.
     * </pre>
     *
     * <code>SUCCEEDED = 1;</code>
     */
    public static final int SUCCEEDED_VALUE = 1;
    /**
     * <pre>
     * Either the Task couldn't be completed, or it was cancelled.
     * </pre>
     *
     * <code>FAILED = 2;</code>
     */
    public static final int FAILED_VALUE = 2;


    public final int getNumber() {
      if (this == UNRECOGNIZED) {
        throw new java.lang.IllegalArgumentException(
            "Can't get the number of an unknown enum value.");
      }
      return value;
    }

    /**
     * @param value The numeric wire value of the corresponding enum entry.
     * @return The enum associated with the given numeric wire value.
     * @deprecated Use {@link #forNumber(int)} instead.
     */
    @java.lang.Deprecated
    public static TaskOutcome valueOf(int value) {
      return forNumber(value);
    }

    /**
     * @param value The numeric wire value of the corresponding enum entry.
     * @return The enum associated with the given numeric wire value.
     */
    public static TaskOutcome forNumber(int value) {
      switch (value) {
        case 0: return TASK_OUTCOME_UNSPECIFIED;
        case 1: return SUCCEEDED;
        case 2: return FAILED;
        default: return null;
      }
    }

    public static com.google.protobuf.Internal.EnumLiteMap<TaskOutcome>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static final com.google.protobuf.Internal.EnumLiteMap<
        TaskOutcome> internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<TaskOutcome>() {
            public TaskOutcome findValueByNumber(int number) {
              return TaskOutcome.forNumber(number);
            }
          };

    public final com.google.protobuf.Descriptors.EnumValueDescriptor
        getValueDescriptor() {
      if (this == UNRECOGNIZED) {
        throw new java.lang.IllegalStateException(
            "Can't get the descriptor of an unrecognized enum value.");
      }
      return getDescriptor().getValues().get(ordinal());
    }
    public final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptorForType() {
      return getDescriptor();
    }
    public static final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptor() {
      return google.maps.fleetengine.delivery.v1.Task.getDescriptor().getEnumTypes().get(2);
    }

    private static final TaskOutcome[] VALUES = values();

    public static TaskOutcome valueOf(
        com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
      if (desc.getType() != getDescriptor()) {
        throw new java.lang.IllegalArgumentException(
          "EnumValueDescriptor is not for this type.");
      }
      if (desc.getIndex() == -1) {
        return UNRECOGNIZED;
      }
      return VALUES[desc.getIndex()];
    }

    private final int value;

    private TaskOutcome(int value) {
      this.value = value;
    }

    // @@protoc_insertion_point(enum_scope:maps.fleetengine.delivery.v1.Task.TaskOutcome)
  }

  /**
   * <pre>
   * The identity of the source that populated the `task_outcome_location`.
   * </pre>
   *
   * Protobuf enum {@code maps.fleetengine.delivery.v1.Task.TaskOutcomeLocationSource}
   */
  public enum TaskOutcomeLocationSource
      implements com.google.protobuf.ProtocolMessageEnum {
    /**
     * <pre>
     * The Task outcome before it is set.
     * </pre>
     *
     * <code>TASK_OUTCOME_LOCATION_SOURCE_UNSPECIFIED = 0;</code>
     */
    TASK_OUTCOME_LOCATION_SOURCE_UNSPECIFIED(0),
    /**
     * <pre>
     * The provider-specified the `task_outcome_location`.
     * </pre>
     *
     * <code>PROVIDER = 2;</code>
     */
    PROVIDER(2),
    /**
     * <pre>
     * The provider didn't specify the `task_outcome_location`, so Fleet Engine
     * used the last known vehicle location.
     * </pre>
     *
     * <code>LAST_VEHICLE_LOCATION = 3;</code>
     */
    LAST_VEHICLE_LOCATION(3),
    UNRECOGNIZED(-1),
    ;

    /**
     * <pre>
     * The Task outcome before it is set.
     * </pre>
     *
     * <code>TASK_OUTCOME_LOCATION_SOURCE_UNSPECIFIED = 0;</code>
     */
    public static final int TASK_OUTCOME_LOCATION_SOURCE_UNSPECIFIED_VALUE = 0;
    /**
     * <pre>
     * The provider-specified the `task_outcome_location`.
     * </pre>
     *
     * <code>PROVIDER = 2;</code>
     */
    public static final int PROVIDER_VALUE = 2;
    /**
     * <pre>
     * The provider didn't specify the `task_outcome_location`, so Fleet Engine
     * used the last known vehicle location.
     * </pre>
     *
     * <code>LAST_VEHICLE_LOCATION = 3;</code>
     */
    public static final int LAST_VEHICLE_LOCATION_VALUE = 3;


    public final int getNumber() {
      if (this == UNRECOGNIZED) {
        throw new java.lang.IllegalArgumentException(
            "Can't get the number of an unknown enum value.");
      }
      return value;
    }

    /**
     * @param value The numeric wire value of the corresponding enum entry.
     * @return The enum associated with the given numeric wire value.
     * @deprecated Use {@link #forNumber(int)} instead.
     */
    @java.lang.Deprecated
    public static TaskOutcomeLocationSource valueOf(int value) {
      return forNumber(value);
    }

    /**
     * @param value The numeric wire value of the corresponding enum entry.
     * @return The enum associated with the given numeric wire value.
     */
    public static TaskOutcomeLocationSource forNumber(int value) {
      switch (value) {
        case 0: return TASK_OUTCOME_LOCATION_SOURCE_UNSPECIFIED;
        case 2: return PROVIDER;
        case 3: return LAST_VEHICLE_LOCATION;
        default: return null;
      }
    }

    public static com.google.protobuf.Internal.EnumLiteMap<TaskOutcomeLocationSource>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static final com.google.protobuf.Internal.EnumLiteMap<
        TaskOutcomeLocationSource> internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<TaskOutcomeLocationSource>() {
            public TaskOutcomeLocationSource findValueByNumber(int number) {
              return TaskOutcomeLocationSource.forNumber(number);
            }
          };

    public final com.google.protobuf.Descriptors.EnumValueDescriptor
        getValueDescriptor() {
      if (this == UNRECOGNIZED) {
        throw new java.lang.IllegalStateException(
            "Can't get the descriptor of an unrecognized enum value.");
      }
      return getDescriptor().getValues().get(ordinal());
    }
    public final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptorForType() {
      return getDescriptor();
    }
    public static final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptor() {
      return google.maps.fleetengine.delivery.v1.Task.getDescriptor().getEnumTypes().get(3);
    }

    private static final TaskOutcomeLocationSource[] VALUES = values();

    public static TaskOutcomeLocationSource valueOf(
        com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
      if (desc.getType() != getDescriptor()) {
        throw new java.lang.IllegalArgumentException(
          "EnumValueDescriptor is not for this type.");
      }
      if (desc.getIndex() == -1) {
        return UNRECOGNIZED;
      }
      return VALUES[desc.getIndex()];
    }

    private final int value;

    private TaskOutcomeLocationSource(int value) {
      this.value = value;
    }

    // @@protoc_insertion_point(enum_scope:maps.fleetengine.delivery.v1.Task.TaskOutcomeLocationSource)
  }

  public interface JourneySharingInfoOrBuilder extends
      // @@protoc_insertion_point(interface_extends:maps.fleetengine.delivery.v1.Task.JourneySharingInfo)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <pre>
     * Tracking information for the stops that the assigned vehicle will make
     * before it completes this Task. Note that this list can contain stops
     * from other tasks.
     * The first segment,
     * `Task.journey_sharing_info.remaining_vehicle_journey_segments[0]` (gRPC)
     * or `Task.journeySharingInfo.remainingVehicleJourneySegments[0]` (REST),
     * contains route information from the driver's last known location to the
     * upcoming `VehicleStop`. Current route information usually comes from the
     * driver app, except for some cases noted in the documentation for
     * [DeliveryVehicle.current_route_segment][maps.fleetengine.delivery.v1.DeliveryVehicle.current_route_segment]. The other segments in
     * `Task.journey_sharing_info.remaining_vehicle_journey_segments` (gRPC) or
     * `Task.journeySharingInfo.remainingVehicleJourneySegments` (REST) are
     * populated by Fleet Engine. They provide route information between the
     * remaining `VehicleStops`.
     * </pre>
     *
     * <code>repeated .maps.fleetengine.delivery.v1.VehicleJourneySegment remaining_vehicle_journey_segments = 1;</code>
     */
    java.util.List<google.maps.fleetengine.delivery.v1.VehicleJourneySegment> 
        getRemainingVehicleJourneySegmentsList();
    /**
     * <pre>
     * Tracking information for the stops that the assigned vehicle will make
     * before it completes this Task. Note that this list can contain stops
     * from other tasks.
     * The first segment,
     * `Task.journey_sharing_info.remaining_vehicle_journey_segments[0]` (gRPC)
     * or `Task.journeySharingInfo.remainingVehicleJourneySegments[0]` (REST),
     * contains route information from the driver's last known location to the
     * upcoming `VehicleStop`. Current route information usually comes from the
     * driver app, except for some cases noted in the documentation for
     * [DeliveryVehicle.current_route_segment][maps.fleetengine.delivery.v1.DeliveryVehicle.current_route_segment]. The other segments in
     * `Task.journey_sharing_info.remaining_vehicle_journey_segments` (gRPC) or
     * `Task.journeySharingInfo.remainingVehicleJourneySegments` (REST) are
     * populated by Fleet Engine. They provide route information between the
     * remaining `VehicleStops`.
     * </pre>
     *
     * <code>repeated .maps.fleetengine.delivery.v1.VehicleJourneySegment remaining_vehicle_journey_segments = 1;</code>
     */
    google.maps.fleetengine.delivery.v1.VehicleJourneySegment getRemainingVehicleJourneySegments(int index);
    /**
     * <pre>
     * Tracking information for the stops that the assigned vehicle will make
     * before it completes this Task. Note that this list can contain stops
     * from other tasks.
     * The first segment,
     * `Task.journey_sharing_info.remaining_vehicle_journey_segments[0]` (gRPC)
     * or `Task.journeySharingInfo.remainingVehicleJourneySegments[0]` (REST),
     * contains route information from the driver's last known location to the
     * upcoming `VehicleStop`. Current route information usually comes from the
     * driver app, except for some cases noted in the documentation for
     * [DeliveryVehicle.current_route_segment][maps.fleetengine.delivery.v1.DeliveryVehicle.current_route_segment]. The other segments in
     * `Task.journey_sharing_info.remaining_vehicle_journey_segments` (gRPC) or
     * `Task.journeySharingInfo.remainingVehicleJourneySegments` (REST) are
     * populated by Fleet Engine. They provide route information between the
     * remaining `VehicleStops`.
     * </pre>
     *
     * <code>repeated .maps.fleetengine.delivery.v1.VehicleJourneySegment remaining_vehicle_journey_segments = 1;</code>
     */
    int getRemainingVehicleJourneySegmentsCount();
    /**
     * <pre>
     * Tracking information for the stops that the assigned vehicle will make
     * before it completes this Task. Note that this list can contain stops
     * from other tasks.
     * The first segment,
     * `Task.journey_sharing_info.remaining_vehicle_journey_segments[0]` (gRPC)
     * or `Task.journeySharingInfo.remainingVehicleJourneySegments[0]` (REST),
     * contains route information from the driver's last known location to the
     * upcoming `VehicleStop`. Current route information usually comes from the
     * driver app, except for some cases noted in the documentation for
     * [DeliveryVehicle.current_route_segment][maps.fleetengine.delivery.v1.DeliveryVehicle.current_route_segment]. The other segments in
     * `Task.journey_sharing_info.remaining_vehicle_journey_segments` (gRPC) or
     * `Task.journeySharingInfo.remainingVehicleJourneySegments` (REST) are
     * populated by Fleet Engine. They provide route information between the
     * remaining `VehicleStops`.
     * </pre>
     *
     * <code>repeated .maps.fleetengine.delivery.v1.VehicleJourneySegment remaining_vehicle_journey_segments = 1;</code>
     */
    java.util.List<? extends google.maps.fleetengine.delivery.v1.VehicleJourneySegmentOrBuilder> 
        getRemainingVehicleJourneySegmentsOrBuilderList();
    /**
     * <pre>
     * Tracking information for the stops that the assigned vehicle will make
     * before it completes this Task. Note that this list can contain stops
     * from other tasks.
     * The first segment,
     * `Task.journey_sharing_info.remaining_vehicle_journey_segments[0]` (gRPC)
     * or `Task.journeySharingInfo.remainingVehicleJourneySegments[0]` (REST),
     * contains route information from the driver's last known location to the
     * upcoming `VehicleStop`. Current route information usually comes from the
     * driver app, except for some cases noted in the documentation for
     * [DeliveryVehicle.current_route_segment][maps.fleetengine.delivery.v1.DeliveryVehicle.current_route_segment]. The other segments in
     * `Task.journey_sharing_info.remaining_vehicle_journey_segments` (gRPC) or
     * `Task.journeySharingInfo.remainingVehicleJourneySegments` (REST) are
     * populated by Fleet Engine. They provide route information between the
     * remaining `VehicleStops`.
     * </pre>
     *
     * <code>repeated .maps.fleetengine.delivery.v1.VehicleJourneySegment remaining_vehicle_journey_segments = 1;</code>
     */
    google.maps.fleetengine.delivery.v1.VehicleJourneySegmentOrBuilder getRemainingVehicleJourneySegmentsOrBuilder(
        int index);

    /**
     * <pre>
     * Indicates the vehicle's last reported location of the assigned vehicle.
     * </pre>
     *
     * <code>.maps.fleetengine.delivery.v1.DeliveryVehicleLocation last_location = 2;</code>
     * @return Whether the lastLocation field is set.
     */
    boolean hasLastLocation();
    /**
     * <pre>
     * Indicates the vehicle's last reported location of the assigned vehicle.
     * </pre>
     *
     * <code>.maps.fleetengine.delivery.v1.DeliveryVehicleLocation last_location = 2;</code>
     * @return The lastLocation.
     */
    google.maps.fleetengine.delivery.v1.DeliveryVehicleLocation getLastLocation();
    /**
     * <pre>
     * Indicates the vehicle's last reported location of the assigned vehicle.
     * </pre>
     *
     * <code>.maps.fleetengine.delivery.v1.DeliveryVehicleLocation last_location = 2;</code>
     */
    google.maps.fleetengine.delivery.v1.DeliveryVehicleLocationOrBuilder getLastLocationOrBuilder();

    /**
     * <pre>
     * Indicates whether the vehicle's lastLocation can be snapped to
     * the `current_route_segment`. This value is False if either
     * `last_location` or `current_route_segment` don't exist. This value is
     * computed by Fleet Engine. Updates from clients are ignored.
     * </pre>
     *
     * <code>bool last_location_snappable = 3;</code>
     * @return The lastLocationSnappable.
     */
    boolean getLastLocationSnappable();
  }
  /**
   * <pre>
   * Journey sharing specific fields.
   * </pre>
   *
   * Protobuf type {@code maps.fleetengine.delivery.v1.Task.JourneySharingInfo}
   */
  public static final class JourneySharingInfo extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:maps.fleetengine.delivery.v1.Task.JourneySharingInfo)
      JourneySharingInfoOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use JourneySharingInfo.newBuilder() to construct.
    private JourneySharingInfo(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private JourneySharingInfo() {
      remainingVehicleJourneySegments_ = java.util.Collections.emptyList();
    }

    @java.lang.Override
    @SuppressWarnings({"unused"})
    protected java.lang.Object newInstance(
        UnusedPrivateParameter unused) {
      return new JourneySharingInfo();
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private JourneySharingInfo(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 10: {
              if (!((mutable_bitField0_ & 0x00000001) != 0)) {
                remainingVehicleJourneySegments_ = new java.util.ArrayList<google.maps.fleetengine.delivery.v1.VehicleJourneySegment>();
                mutable_bitField0_ |= 0x00000001;
              }
              remainingVehicleJourneySegments_.add(
                  input.readMessage(google.maps.fleetengine.delivery.v1.VehicleJourneySegment.parser(), extensionRegistry));
              break;
            }
            case 18: {
              google.maps.fleetengine.delivery.v1.DeliveryVehicleLocation.Builder subBuilder = null;
              if (lastLocation_ != null) {
                subBuilder = lastLocation_.toBuilder();
              }
              lastLocation_ = input.readMessage(google.maps.fleetengine.delivery.v1.DeliveryVehicleLocation.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(lastLocation_);
                lastLocation_ = subBuilder.buildPartial();
              }

              break;
            }
            case 24: {

              lastLocationSnappable_ = input.readBool();
              break;
            }
            default: {
              if (!parseUnknownField(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (com.google.protobuf.UninitializedMessageException e) {
        throw e.asInvalidProtocolBufferException().setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000001) != 0)) {
          remainingVehicleJourneySegments_ = java.util.Collections.unmodifiableList(remainingVehicleJourneySegments_);
        }
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return google.maps.fleetengine.delivery.v1.Tasks.internal_static_maps_fleetengine_delivery_v1_Task_JourneySharingInfo_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return google.maps.fleetengine.delivery.v1.Tasks.internal_static_maps_fleetengine_delivery_v1_Task_JourneySharingInfo_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              google.maps.fleetengine.delivery.v1.Task.JourneySharingInfo.class, google.maps.fleetengine.delivery.v1.Task.JourneySharingInfo.Builder.class);
    }

    public static final int REMAINING_VEHICLE_JOURNEY_SEGMENTS_FIELD_NUMBER = 1;
    private java.util.List<google.maps.fleetengine.delivery.v1.VehicleJourneySegment> remainingVehicleJourneySegments_;
    /**
     * <pre>
     * Tracking information for the stops that the assigned vehicle will make
     * before it completes this Task. Note that this list can contain stops
     * from other tasks.
     * The first segment,
     * `Task.journey_sharing_info.remaining_vehicle_journey_segments[0]` (gRPC)
     * or `Task.journeySharingInfo.remainingVehicleJourneySegments[0]` (REST),
     * contains route information from the driver's last known location to the
     * upcoming `VehicleStop`. Current route information usually comes from the
     * driver app, except for some cases noted in the documentation for
     * [DeliveryVehicle.current_route_segment][maps.fleetengine.delivery.v1.DeliveryVehicle.current_route_segment]. The other segments in
     * `Task.journey_sharing_info.remaining_vehicle_journey_segments` (gRPC) or
     * `Task.journeySharingInfo.remainingVehicleJourneySegments` (REST) are
     * populated by Fleet Engine. They provide route information between the
     * remaining `VehicleStops`.
     * </pre>
     *
     * <code>repeated .maps.fleetengine.delivery.v1.VehicleJourneySegment remaining_vehicle_journey_segments = 1;</code>
     */
    @java.lang.Override
    public java.util.List<google.maps.fleetengine.delivery.v1.VehicleJourneySegment> getRemainingVehicleJourneySegmentsList() {
      return remainingVehicleJourneySegments_;
    }
    /**
     * <pre>
     * Tracking information for the stops that the assigned vehicle will make
     * before it completes this Task. Note that this list can contain stops
     * from other tasks.
     * The first segment,
     * `Task.journey_sharing_info.remaining_vehicle_journey_segments[0]` (gRPC)
     * or `Task.journeySharingInfo.remainingVehicleJourneySegments[0]` (REST),
     * contains route information from the driver's last known location to the
     * upcoming `VehicleStop`. Current route information usually comes from the
     * driver app, except for some cases noted in the documentation for
     * [DeliveryVehicle.current_route_segment][maps.fleetengine.delivery.v1.DeliveryVehicle.current_route_segment]. The other segments in
     * `Task.journey_sharing_info.remaining_vehicle_journey_segments` (gRPC) or
     * `Task.journeySharingInfo.remainingVehicleJourneySegments` (REST) are
     * populated by Fleet Engine. They provide route information between the
     * remaining `VehicleStops`.
     * </pre>
     *
     * <code>repeated .maps.fleetengine.delivery.v1.VehicleJourneySegment remaining_vehicle_journey_segments = 1;</code>
     */
    @java.lang.Override
    public java.util.List<? extends google.maps.fleetengine.delivery.v1.VehicleJourneySegmentOrBuilder> 
        getRemainingVehicleJourneySegmentsOrBuilderList() {
      return remainingVehicleJourneySegments_;
    }
    /**
     * <pre>
     * Tracking information for the stops that the assigned vehicle will make
     * before it completes this Task. Note that this list can contain stops
     * from other tasks.
     * The first segment,
     * `Task.journey_sharing_info.remaining_vehicle_journey_segments[0]` (gRPC)
     * or `Task.journeySharingInfo.remainingVehicleJourneySegments[0]` (REST),
     * contains route information from the driver's last known location to the
     * upcoming `VehicleStop`. Current route information usually comes from the
     * driver app, except for some cases noted in the documentation for
     * [DeliveryVehicle.current_route_segment][maps.fleetengine.delivery.v1.DeliveryVehicle.current_route_segment]. The other segments in
     * `Task.journey_sharing_info.remaining_vehicle_journey_segments` (gRPC) or
     * `Task.journeySharingInfo.remainingVehicleJourneySegments` (REST) are
     * populated by Fleet Engine. They provide route information between the
     * remaining `VehicleStops`.
     * </pre>
     *
     * <code>repeated .maps.fleetengine.delivery.v1.VehicleJourneySegment remaining_vehicle_journey_segments = 1;</code>
     */
    @java.lang.Override
    public int getRemainingVehicleJourneySegmentsCount() {
      return remainingVehicleJourneySegments_.size();
    }
    /**
     * <pre>
     * Tracking information for the stops that the assigned vehicle will make
     * before it completes this Task. Note that this list can contain stops
     * from other tasks.
     * The first segment,
     * `Task.journey_sharing_info.remaining_vehicle_journey_segments[0]` (gRPC)
     * or `Task.journeySharingInfo.remainingVehicleJourneySegments[0]` (REST),
     * contains route information from the driver's last known location to the
     * upcoming `VehicleStop`. Current route information usually comes from the
     * driver app, except for some cases noted in the documentation for
     * [DeliveryVehicle.current_route_segment][maps.fleetengine.delivery.v1.DeliveryVehicle.current_route_segment]. The other segments in
     * `Task.journey_sharing_info.remaining_vehicle_journey_segments` (gRPC) or
     * `Task.journeySharingInfo.remainingVehicleJourneySegments` (REST) are
     * populated by Fleet Engine. They provide route information between the
     * remaining `VehicleStops`.
     * </pre>
     *
     * <code>repeated .maps.fleetengine.delivery.v1.VehicleJourneySegment remaining_vehicle_journey_segments = 1;</code>
     */
    @java.lang.Override
    public google.maps.fleetengine.delivery.v1.VehicleJourneySegment getRemainingVehicleJourneySegments(int index) {
      return remainingVehicleJourneySegments_.get(index);
    }
    /**
     * <pre>
     * Tracking information for the stops that the assigned vehicle will make
     * before it completes this Task. Note that this list can contain stops
     * from other tasks.
     * The first segment,
     * `Task.journey_sharing_info.remaining_vehicle_journey_segments[0]` (gRPC)
     * or `Task.journeySharingInfo.remainingVehicleJourneySegments[0]` (REST),
     * contains route information from the driver's last known location to the
     * upcoming `VehicleStop`. Current route information usually comes from the
     * driver app, except for some cases noted in the documentation for
     * [DeliveryVehicle.current_route_segment][maps.fleetengine.delivery.v1.DeliveryVehicle.current_route_segment]. The other segments in
     * `Task.journey_sharing_info.remaining_vehicle_journey_segments` (gRPC) or
     * `Task.journeySharingInfo.remainingVehicleJourneySegments` (REST) are
     * populated by Fleet Engine. They provide route information between the
     * remaining `VehicleStops`.
     * </pre>
     *
     * <code>repeated .maps.fleetengine.delivery.v1.VehicleJourneySegment remaining_vehicle_journey_segments = 1;</code>
     */
    @java.lang.Override
    public google.maps.fleetengine.delivery.v1.VehicleJourneySegmentOrBuilder getRemainingVehicleJourneySegmentsOrBuilder(
        int index) {
      return remainingVehicleJourneySegments_.get(index);
    }

    public static final int LAST_LOCATION_FIELD_NUMBER = 2;
    private google.maps.fleetengine.delivery.v1.DeliveryVehicleLocation lastLocation_;
    /**
     * <pre>
     * Indicates the vehicle's last reported location of the assigned vehicle.
     * </pre>
     *
     * <code>.maps.fleetengine.delivery.v1.DeliveryVehicleLocation last_location = 2;</code>
     * @return Whether the lastLocation field is set.
     */
    @java.lang.Override
    public boolean hasLastLocation() {
      return lastLocation_ != null;
    }
    /**
     * <pre>
     * Indicates the vehicle's last reported location of the assigned vehicle.
     * </pre>
     *
     * <code>.maps.fleetengine.delivery.v1.DeliveryVehicleLocation last_location = 2;</code>
     * @return The lastLocation.
     */
    @java.lang.Override
    public google.maps.fleetengine.delivery.v1.DeliveryVehicleLocation getLastLocation() {
      return lastLocation_ == null ? google.maps.fleetengine.delivery.v1.DeliveryVehicleLocation.getDefaultInstance() : lastLocation_;
    }
    /**
     * <pre>
     * Indicates the vehicle's last reported location of the assigned vehicle.
     * </pre>
     *
     * <code>.maps.fleetengine.delivery.v1.DeliveryVehicleLocation last_location = 2;</code>
     */
    @java.lang.Override
    public google.maps.fleetengine.delivery.v1.DeliveryVehicleLocationOrBuilder getLastLocationOrBuilder() {
      return getLastLocation();
    }

    public static final int LAST_LOCATION_SNAPPABLE_FIELD_NUMBER = 3;
    private boolean lastLocationSnappable_;
    /**
     * <pre>
     * Indicates whether the vehicle's lastLocation can be snapped to
     * the `current_route_segment`. This value is False if either
     * `last_location` or `current_route_segment` don't exist. This value is
     * computed by Fleet Engine. Updates from clients are ignored.
     * </pre>
     *
     * <code>bool last_location_snappable = 3;</code>
     * @return The lastLocationSnappable.
     */
    @java.lang.Override
    public boolean getLastLocationSnappable() {
      return lastLocationSnappable_;
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      for (int i = 0; i < remainingVehicleJourneySegments_.size(); i++) {
        output.writeMessage(1, remainingVehicleJourneySegments_.get(i));
      }
      if (lastLocation_ != null) {
        output.writeMessage(2, getLastLocation());
      }
      if (lastLocationSnappable_ != false) {
        output.writeBool(3, lastLocationSnappable_);
      }
      unknownFields.writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      for (int i = 0; i < remainingVehicleJourneySegments_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, remainingVehicleJourneySegments_.get(i));
      }
      if (lastLocation_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(2, getLastLocation());
      }
      if (lastLocationSnappable_ != false) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(3, lastLocationSnappable_);
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof google.maps.fleetengine.delivery.v1.Task.JourneySharingInfo)) {
        return super.equals(obj);
      }
      google.maps.fleetengine.delivery.v1.Task.JourneySharingInfo other = (google.maps.fleetengine.delivery.v1.Task.JourneySharingInfo) obj;

      if (!getRemainingVehicleJourneySegmentsList()
          .equals(other.getRemainingVehicleJourneySegmentsList())) return false;
      if (hasLastLocation() != other.hasLastLocation()) return false;
      if (hasLastLocation()) {
        if (!getLastLocation()
            .equals(other.getLastLocation())) return false;
      }
      if (getLastLocationSnappable()
          != other.getLastLocationSnappable()) return false;
      if (!unknownFields.equals(other.unknownFields)) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      if (getRemainingVehicleJourneySegmentsCount() > 0) {
        hash = (37 * hash) + REMAINING_VEHICLE_JOURNEY_SEGMENTS_FIELD_NUMBER;
        hash = (53 * hash) + getRemainingVehicleJourneySegmentsList().hashCode();
      }
      if (hasLastLocation()) {
        hash = (37 * hash) + LAST_LOCATION_FIELD_NUMBER;
        hash = (53 * hash) + getLastLocation().hashCode();
      }
      hash = (37 * hash) + LAST_LOCATION_SNAPPABLE_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashBoolean(
          getLastLocationSnappable());
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static google.maps.fleetengine.delivery.v1.Task.JourneySharingInfo parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static google.maps.fleetengine.delivery.v1.Task.JourneySharingInfo parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static google.maps.fleetengine.delivery.v1.Task.JourneySharingInfo parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static google.maps.fleetengine.delivery.v1.Task.JourneySharingInfo parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static google.maps.fleetengine.delivery.v1.Task.JourneySharingInfo parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static google.maps.fleetengine.delivery.v1.Task.JourneySharingInfo parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static google.maps.fleetengine.delivery.v1.Task.JourneySharingInfo parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static google.maps.fleetengine.delivery.v1.Task.JourneySharingInfo parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static google.maps.fleetengine.delivery.v1.Task.JourneySharingInfo parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static google.maps.fleetengine.delivery.v1.Task.JourneySharingInfo parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static google.maps.fleetengine.delivery.v1.Task.JourneySharingInfo parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static google.maps.fleetengine.delivery.v1.Task.JourneySharingInfo parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(google.maps.fleetengine.delivery.v1.Task.JourneySharingInfo prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * <pre>
     * Journey sharing specific fields.
     * </pre>
     *
     * Protobuf type {@code maps.fleetengine.delivery.v1.Task.JourneySharingInfo}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:maps.fleetengine.delivery.v1.Task.JourneySharingInfo)
        google.maps.fleetengine.delivery.v1.Task.JourneySharingInfoOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return google.maps.fleetengine.delivery.v1.Tasks.internal_static_maps_fleetengine_delivery_v1_Task_JourneySharingInfo_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return google.maps.fleetengine.delivery.v1.Tasks.internal_static_maps_fleetengine_delivery_v1_Task_JourneySharingInfo_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                google.maps.fleetengine.delivery.v1.Task.JourneySharingInfo.class, google.maps.fleetengine.delivery.v1.Task.JourneySharingInfo.Builder.class);
      }

      // Construct using google.maps.fleetengine.delivery.v1.Task.JourneySharingInfo.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
          getRemainingVehicleJourneySegmentsFieldBuilder();
        }
      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        if (remainingVehicleJourneySegmentsBuilder_ == null) {
          remainingVehicleJourneySegments_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000001);
        } else {
          remainingVehicleJourneySegmentsBuilder_.clear();
        }
        if (lastLocationBuilder_ == null) {
          lastLocation_ = null;
        } else {
          lastLocation_ = null;
          lastLocationBuilder_ = null;
        }
        lastLocationSnappable_ = false;

        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return google.maps.fleetengine.delivery.v1.Tasks.internal_static_maps_fleetengine_delivery_v1_Task_JourneySharingInfo_descriptor;
      }

      @java.lang.Override
      public google.maps.fleetengine.delivery.v1.Task.JourneySharingInfo getDefaultInstanceForType() {
        return google.maps.fleetengine.delivery.v1.Task.JourneySharingInfo.getDefaultInstance();
      }

      @java.lang.Override
      public google.maps.fleetengine.delivery.v1.Task.JourneySharingInfo build() {
        google.maps.fleetengine.delivery.v1.Task.JourneySharingInfo result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public google.maps.fleetengine.delivery.v1.Task.JourneySharingInfo buildPartial() {
        google.maps.fleetengine.delivery.v1.Task.JourneySharingInfo result = new google.maps.fleetengine.delivery.v1.Task.JourneySharingInfo(this);
        int from_bitField0_ = bitField0_;
        if (remainingVehicleJourneySegmentsBuilder_ == null) {
          if (((bitField0_ & 0x00000001) != 0)) {
            remainingVehicleJourneySegments_ = java.util.Collections.unmodifiableList(remainingVehicleJourneySegments_);
            bitField0_ = (bitField0_ & ~0x00000001);
          }
          result.remainingVehicleJourneySegments_ = remainingVehicleJourneySegments_;
        } else {
          result.remainingVehicleJourneySegments_ = remainingVehicleJourneySegmentsBuilder_.build();
        }
        if (lastLocationBuilder_ == null) {
          result.lastLocation_ = lastLocation_;
        } else {
          result.lastLocation_ = lastLocationBuilder_.build();
        }
        result.lastLocationSnappable_ = lastLocationSnappable_;
        onBuilt();
        return result;
      }

      @java.lang.Override
      public Builder clone() {
        return super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof google.maps.fleetengine.delivery.v1.Task.JourneySharingInfo) {
          return mergeFrom((google.maps.fleetengine.delivery.v1.Task.JourneySharingInfo)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(google.maps.fleetengine.delivery.v1.Task.JourneySharingInfo other) {
        if (other == google.maps.fleetengine.delivery.v1.Task.JourneySharingInfo.getDefaultInstance()) return this;
        if (remainingVehicleJourneySegmentsBuilder_ == null) {
          if (!other.remainingVehicleJourneySegments_.isEmpty()) {
            if (remainingVehicleJourneySegments_.isEmpty()) {
              remainingVehicleJourneySegments_ = other.remainingVehicleJourneySegments_;
              bitField0_ = (bitField0_ & ~0x00000001);
            } else {
              ensureRemainingVehicleJourneySegmentsIsMutable();
              remainingVehicleJourneySegments_.addAll(other.remainingVehicleJourneySegments_);
            }
            onChanged();
          }
        } else {
          if (!other.remainingVehicleJourneySegments_.isEmpty()) {
            if (remainingVehicleJourneySegmentsBuilder_.isEmpty()) {
              remainingVehicleJourneySegmentsBuilder_.dispose();
              remainingVehicleJourneySegmentsBuilder_ = null;
              remainingVehicleJourneySegments_ = other.remainingVehicleJourneySegments_;
              bitField0_ = (bitField0_ & ~0x00000001);
              remainingVehicleJourneySegmentsBuilder_ = 
                com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?
                   getRemainingVehicleJourneySegmentsFieldBuilder() : null;
            } else {
              remainingVehicleJourneySegmentsBuilder_.addAllMessages(other.remainingVehicleJourneySegments_);
            }
          }
        }
        if (other.hasLastLocation()) {
          mergeLastLocation(other.getLastLocation());
        }
        if (other.getLastLocationSnappable() != false) {
          setLastLocationSnappable(other.getLastLocationSnappable());
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        google.maps.fleetengine.delivery.v1.Task.JourneySharingInfo parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (google.maps.fleetengine.delivery.v1.Task.JourneySharingInfo) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private java.util.List<google.maps.fleetengine.delivery.v1.VehicleJourneySegment> remainingVehicleJourneySegments_ =
        java.util.Collections.emptyList();
      private void ensureRemainingVehicleJourneySegmentsIsMutable() {
        if (!((bitField0_ & 0x00000001) != 0)) {
          remainingVehicleJourneySegments_ = new java.util.ArrayList<google.maps.fleetengine.delivery.v1.VehicleJourneySegment>(remainingVehicleJourneySegments_);
          bitField0_ |= 0x00000001;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilderV3<
          google.maps.fleetengine.delivery.v1.VehicleJourneySegment, google.maps.fleetengine.delivery.v1.VehicleJourneySegment.Builder, google.maps.fleetengine.delivery.v1.VehicleJourneySegmentOrBuilder> remainingVehicleJourneySegmentsBuilder_;

      /**
       * <pre>
       * Tracking information for the stops that the assigned vehicle will make
       * before it completes this Task. Note that this list can contain stops
       * from other tasks.
       * The first segment,
       * `Task.journey_sharing_info.remaining_vehicle_journey_segments[0]` (gRPC)
       * or `Task.journeySharingInfo.remainingVehicleJourneySegments[0]` (REST),
       * contains route information from the driver's last known location to the
       * upcoming `VehicleStop`. Current route information usually comes from the
       * driver app, except for some cases noted in the documentation for
       * [DeliveryVehicle.current_route_segment][maps.fleetengine.delivery.v1.DeliveryVehicle.current_route_segment]. The other segments in
       * `Task.journey_sharing_info.remaining_vehicle_journey_segments` (gRPC) or
       * `Task.journeySharingInfo.remainingVehicleJourneySegments` (REST) are
       * populated by Fleet Engine. They provide route information between the
       * remaining `VehicleStops`.
       * </pre>
       *
       * <code>repeated .maps.fleetengine.delivery.v1.VehicleJourneySegment remaining_vehicle_journey_segments = 1;</code>
       */
      public java.util.List<google.maps.fleetengine.delivery.v1.VehicleJourneySegment> getRemainingVehicleJourneySegmentsList() {
        if (remainingVehicleJourneySegmentsBuilder_ == null) {
          return java.util.Collections.unmodifiableList(remainingVehicleJourneySegments_);
        } else {
          return remainingVehicleJourneySegmentsBuilder_.getMessageList();
        }
      }
      /**
       * <pre>
       * Tracking information for the stops that the assigned vehicle will make
       * before it completes this Task. Note that this list can contain stops
       * from other tasks.
       * The first segment,
       * `Task.journey_sharing_info.remaining_vehicle_journey_segments[0]` (gRPC)
       * or `Task.journeySharingInfo.remainingVehicleJourneySegments[0]` (REST),
       * contains route information from the driver's last known location to the
       * upcoming `VehicleStop`. Current route information usually comes from the
       * driver app, except for some cases noted in the documentation for
       * [DeliveryVehicle.current_route_segment][maps.fleetengine.delivery.v1.DeliveryVehicle.current_route_segment]. The other segments in
       * `Task.journey_sharing_info.remaining_vehicle_journey_segments` (gRPC) or
       * `Task.journeySharingInfo.remainingVehicleJourneySegments` (REST) are
       * populated by Fleet Engine. They provide route information between the
       * remaining `VehicleStops`.
       * </pre>
       *
       * <code>repeated .maps.fleetengine.delivery.v1.VehicleJourneySegment remaining_vehicle_journey_segments = 1;</code>
       */
      public int getRemainingVehicleJourneySegmentsCount() {
        if (remainingVehicleJourneySegmentsBuilder_ == null) {
          return remainingVehicleJourneySegments_.size();
        } else {
          return remainingVehicleJourneySegmentsBuilder_.getCount();
        }
      }
      /**
       * <pre>
       * Tracking information for the stops that the assigned vehicle will make
       * before it completes this Task. Note that this list can contain stops
       * from other tasks.
       * The first segment,
       * `Task.journey_sharing_info.remaining_vehicle_journey_segments[0]` (gRPC)
       * or `Task.journeySharingInfo.remainingVehicleJourneySegments[0]` (REST),
       * contains route information from the driver's last known location to the
       * upcoming `VehicleStop`. Current route information usually comes from the
       * driver app, except for some cases noted in the documentation for
       * [DeliveryVehicle.current_route_segment][maps.fleetengine.delivery.v1.DeliveryVehicle.current_route_segment]. The other segments in
       * `Task.journey_sharing_info.remaining_vehicle_journey_segments` (gRPC) or
       * `Task.journeySharingInfo.remainingVehicleJourneySegments` (REST) are
       * populated by Fleet Engine. They provide route information between the
       * remaining `VehicleStops`.
       * </pre>
       *
       * <code>repeated .maps.fleetengine.delivery.v1.VehicleJourneySegment remaining_vehicle_journey_segments = 1;</code>
       */
      public google.maps.fleetengine.delivery.v1.VehicleJourneySegment getRemainingVehicleJourneySegments(int index) {
        if (remainingVehicleJourneySegmentsBuilder_ == null) {
          return remainingVehicleJourneySegments_.get(index);
        } else {
          return remainingVehicleJourneySegmentsBuilder_.getMessage(index);
        }
      }
      /**
       * <pre>
       * Tracking information for the stops that the assigned vehicle will make
       * before it completes this Task. Note that this list can contain stops
       * from other tasks.
       * The first segment,
       * `Task.journey_sharing_info.remaining_vehicle_journey_segments[0]` (gRPC)
       * or `Task.journeySharingInfo.remainingVehicleJourneySegments[0]` (REST),
       * contains route information from the driver's last known location to the
       * upcoming `VehicleStop`. Current route information usually comes from the
       * driver app, except for some cases noted in the documentation for
       * [DeliveryVehicle.current_route_segment][maps.fleetengine.delivery.v1.DeliveryVehicle.current_route_segment]. The other segments in
       * `Task.journey_sharing_info.remaining_vehicle_journey_segments` (gRPC) or
       * `Task.journeySharingInfo.remainingVehicleJourneySegments` (REST) are
       * populated by Fleet Engine. They provide route information between the
       * remaining `VehicleStops`.
       * </pre>
       *
       * <code>repeated .maps.fleetengine.delivery.v1.VehicleJourneySegment remaining_vehicle_journey_segments = 1;</code>
       */
      public Builder setRemainingVehicleJourneySegments(
          int index, google.maps.fleetengine.delivery.v1.VehicleJourneySegment value) {
        if (remainingVehicleJourneySegmentsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureRemainingVehicleJourneySegmentsIsMutable();
          remainingVehicleJourneySegments_.set(index, value);
          onChanged();
        } else {
          remainingVehicleJourneySegmentsBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <pre>
       * Tracking information for the stops that the assigned vehicle will make
       * before it completes this Task. Note that this list can contain stops
       * from other tasks.
       * The first segment,
       * `Task.journey_sharing_info.remaining_vehicle_journey_segments[0]` (gRPC)
       * or `Task.journeySharingInfo.remainingVehicleJourneySegments[0]` (REST),
       * contains route information from the driver's last known location to the
       * upcoming `VehicleStop`. Current route information usually comes from the
       * driver app, except for some cases noted in the documentation for
       * [DeliveryVehicle.current_route_segment][maps.fleetengine.delivery.v1.DeliveryVehicle.current_route_segment]. The other segments in
       * `Task.journey_sharing_info.remaining_vehicle_journey_segments` (gRPC) or
       * `Task.journeySharingInfo.remainingVehicleJourneySegments` (REST) are
       * populated by Fleet Engine. They provide route information between the
       * remaining `VehicleStops`.
       * </pre>
       *
       * <code>repeated .maps.fleetengine.delivery.v1.VehicleJourneySegment remaining_vehicle_journey_segments = 1;</code>
       */
      public Builder setRemainingVehicleJourneySegments(
          int index, google.maps.fleetengine.delivery.v1.VehicleJourneySegment.Builder builderForValue) {
        if (remainingVehicleJourneySegmentsBuilder_ == null) {
          ensureRemainingVehicleJourneySegmentsIsMutable();
          remainingVehicleJourneySegments_.set(index, builderForValue.build());
          onChanged();
        } else {
          remainingVehicleJourneySegmentsBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       * Tracking information for the stops that the assigned vehicle will make
       * before it completes this Task. Note that this list can contain stops
       * from other tasks.
       * The first segment,
       * `Task.journey_sharing_info.remaining_vehicle_journey_segments[0]` (gRPC)
       * or `Task.journeySharingInfo.remainingVehicleJourneySegments[0]` (REST),
       * contains route information from the driver's last known location to the
       * upcoming `VehicleStop`. Current route information usually comes from the
       * driver app, except for some cases noted in the documentation for
       * [DeliveryVehicle.current_route_segment][maps.fleetengine.delivery.v1.DeliveryVehicle.current_route_segment]. The other segments in
       * `Task.journey_sharing_info.remaining_vehicle_journey_segments` (gRPC) or
       * `Task.journeySharingInfo.remainingVehicleJourneySegments` (REST) are
       * populated by Fleet Engine. They provide route information between the
       * remaining `VehicleStops`.
       * </pre>
       *
       * <code>repeated .maps.fleetengine.delivery.v1.VehicleJourneySegment remaining_vehicle_journey_segments = 1;</code>
       */
      public Builder addRemainingVehicleJourneySegments(google.maps.fleetengine.delivery.v1.VehicleJourneySegment value) {
        if (remainingVehicleJourneySegmentsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureRemainingVehicleJourneySegmentsIsMutable();
          remainingVehicleJourneySegments_.add(value);
          onChanged();
        } else {
          remainingVehicleJourneySegmentsBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <pre>
       * Tracking information for the stops that the assigned vehicle will make
       * before it completes this Task. Note that this list can contain stops
       * from other tasks.
       * The first segment,
       * `Task.journey_sharing_info.remaining_vehicle_journey_segments[0]` (gRPC)
       * or `Task.journeySharingInfo.remainingVehicleJourneySegments[0]` (REST),
       * contains route information from the driver's last known location to the
       * upcoming `VehicleStop`. Current route information usually comes from the
       * driver app, except for some cases noted in the documentation for
       * [DeliveryVehicle.current_route_segment][maps.fleetengine.delivery.v1.DeliveryVehicle.current_route_segment]. The other segments in
       * `Task.journey_sharing_info.remaining_vehicle_journey_segments` (gRPC) or
       * `Task.journeySharingInfo.remainingVehicleJourneySegments` (REST) are
       * populated by Fleet Engine. They provide route information between the
       * remaining `VehicleStops`.
       * </pre>
       *
       * <code>repeated .maps.fleetengine.delivery.v1.VehicleJourneySegment remaining_vehicle_journey_segments = 1;</code>
       */
      public Builder addRemainingVehicleJourneySegments(
          int index, google.maps.fleetengine.delivery.v1.VehicleJourneySegment value) {
        if (remainingVehicleJourneySegmentsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureRemainingVehicleJourneySegmentsIsMutable();
          remainingVehicleJourneySegments_.add(index, value);
          onChanged();
        } else {
          remainingVehicleJourneySegmentsBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <pre>
       * Tracking information for the stops that the assigned vehicle will make
       * before it completes this Task. Note that this list can contain stops
       * from other tasks.
       * The first segment,
       * `Task.journey_sharing_info.remaining_vehicle_journey_segments[0]` (gRPC)
       * or `Task.journeySharingInfo.remainingVehicleJourneySegments[0]` (REST),
       * contains route information from the driver's last known location to the
       * upcoming `VehicleStop`. Current route information usually comes from the
       * driver app, except for some cases noted in the documentation for
       * [DeliveryVehicle.current_route_segment][maps.fleetengine.delivery.v1.DeliveryVehicle.current_route_segment]. The other segments in
       * `Task.journey_sharing_info.remaining_vehicle_journey_segments` (gRPC) or
       * `Task.journeySharingInfo.remainingVehicleJourneySegments` (REST) are
       * populated by Fleet Engine. They provide route information between the
       * remaining `VehicleStops`.
       * </pre>
       *
       * <code>repeated .maps.fleetengine.delivery.v1.VehicleJourneySegment remaining_vehicle_journey_segments = 1;</code>
       */
      public Builder addRemainingVehicleJourneySegments(
          google.maps.fleetengine.delivery.v1.VehicleJourneySegment.Builder builderForValue) {
        if (remainingVehicleJourneySegmentsBuilder_ == null) {
          ensureRemainingVehicleJourneySegmentsIsMutable();
          remainingVehicleJourneySegments_.add(builderForValue.build());
          onChanged();
        } else {
          remainingVehicleJourneySegmentsBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       * Tracking information for the stops that the assigned vehicle will make
       * before it completes this Task. Note that this list can contain stops
       * from other tasks.
       * The first segment,
       * `Task.journey_sharing_info.remaining_vehicle_journey_segments[0]` (gRPC)
       * or `Task.journeySharingInfo.remainingVehicleJourneySegments[0]` (REST),
       * contains route information from the driver's last known location to the
       * upcoming `VehicleStop`. Current route information usually comes from the
       * driver app, except for some cases noted in the documentation for
       * [DeliveryVehicle.current_route_segment][maps.fleetengine.delivery.v1.DeliveryVehicle.current_route_segment]. The other segments in
       * `Task.journey_sharing_info.remaining_vehicle_journey_segments` (gRPC) or
       * `Task.journeySharingInfo.remainingVehicleJourneySegments` (REST) are
       * populated by Fleet Engine. They provide route information between the
       * remaining `VehicleStops`.
       * </pre>
       *
       * <code>repeated .maps.fleetengine.delivery.v1.VehicleJourneySegment remaining_vehicle_journey_segments = 1;</code>
       */
      public Builder addRemainingVehicleJourneySegments(
          int index, google.maps.fleetengine.delivery.v1.VehicleJourneySegment.Builder builderForValue) {
        if (remainingVehicleJourneySegmentsBuilder_ == null) {
          ensureRemainingVehicleJourneySegmentsIsMutable();
          remainingVehicleJourneySegments_.add(index, builderForValue.build());
          onChanged();
        } else {
          remainingVehicleJourneySegmentsBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       * Tracking information for the stops that the assigned vehicle will make
       * before it completes this Task. Note that this list can contain stops
       * from other tasks.
       * The first segment,
       * `Task.journey_sharing_info.remaining_vehicle_journey_segments[0]` (gRPC)
       * or `Task.journeySharingInfo.remainingVehicleJourneySegments[0]` (REST),
       * contains route information from the driver's last known location to the
       * upcoming `VehicleStop`. Current route information usually comes from the
       * driver app, except for some cases noted in the documentation for
       * [DeliveryVehicle.current_route_segment][maps.fleetengine.delivery.v1.DeliveryVehicle.current_route_segment]. The other segments in
       * `Task.journey_sharing_info.remaining_vehicle_journey_segments` (gRPC) or
       * `Task.journeySharingInfo.remainingVehicleJourneySegments` (REST) are
       * populated by Fleet Engine. They provide route information between the
       * remaining `VehicleStops`.
       * </pre>
       *
       * <code>repeated .maps.fleetengine.delivery.v1.VehicleJourneySegment remaining_vehicle_journey_segments = 1;</code>
       */
      public Builder addAllRemainingVehicleJourneySegments(
          java.lang.Iterable<? extends google.maps.fleetengine.delivery.v1.VehicleJourneySegment> values) {
        if (remainingVehicleJourneySegmentsBuilder_ == null) {
          ensureRemainingVehicleJourneySegmentsIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
              values, remainingVehicleJourneySegments_);
          onChanged();
        } else {
          remainingVehicleJourneySegmentsBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <pre>
       * Tracking information for the stops that the assigned vehicle will make
       * before it completes this Task. Note that this list can contain stops
       * from other tasks.
       * The first segment,
       * `Task.journey_sharing_info.remaining_vehicle_journey_segments[0]` (gRPC)
       * or `Task.journeySharingInfo.remainingVehicleJourneySegments[0]` (REST),
       * contains route information from the driver's last known location to the
       * upcoming `VehicleStop`. Current route information usually comes from the
       * driver app, except for some cases noted in the documentation for
       * [DeliveryVehicle.current_route_segment][maps.fleetengine.delivery.v1.DeliveryVehicle.current_route_segment]. The other segments in
       * `Task.journey_sharing_info.remaining_vehicle_journey_segments` (gRPC) or
       * `Task.journeySharingInfo.remainingVehicleJourneySegments` (REST) are
       * populated by Fleet Engine. They provide route information between the
       * remaining `VehicleStops`.
       * </pre>
       *
       * <code>repeated .maps.fleetengine.delivery.v1.VehicleJourneySegment remaining_vehicle_journey_segments = 1;</code>
       */
      public Builder clearRemainingVehicleJourneySegments() {
        if (remainingVehicleJourneySegmentsBuilder_ == null) {
          remainingVehicleJourneySegments_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000001);
          onChanged();
        } else {
          remainingVehicleJourneySegmentsBuilder_.clear();
        }
        return this;
      }
      /**
       * <pre>
       * Tracking information for the stops that the assigned vehicle will make
       * before it completes this Task. Note that this list can contain stops
       * from other tasks.
       * The first segment,
       * `Task.journey_sharing_info.remaining_vehicle_journey_segments[0]` (gRPC)
       * or `Task.journeySharingInfo.remainingVehicleJourneySegments[0]` (REST),
       * contains route information from the driver's last known location to the
       * upcoming `VehicleStop`. Current route information usually comes from the
       * driver app, except for some cases noted in the documentation for
       * [DeliveryVehicle.current_route_segment][maps.fleetengine.delivery.v1.DeliveryVehicle.current_route_segment]. The other segments in
       * `Task.journey_sharing_info.remaining_vehicle_journey_segments` (gRPC) or
       * `Task.journeySharingInfo.remainingVehicleJourneySegments` (REST) are
       * populated by Fleet Engine. They provide route information between the
       * remaining `VehicleStops`.
       * </pre>
       *
       * <code>repeated .maps.fleetengine.delivery.v1.VehicleJourneySegment remaining_vehicle_journey_segments = 1;</code>
       */
      public Builder removeRemainingVehicleJourneySegments(int index) {
        if (remainingVehicleJourneySegmentsBuilder_ == null) {
          ensureRemainingVehicleJourneySegmentsIsMutable();
          remainingVehicleJourneySegments_.remove(index);
          onChanged();
        } else {
          remainingVehicleJourneySegmentsBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <pre>
       * Tracking information for the stops that the assigned vehicle will make
       * before it completes this Task. Note that this list can contain stops
       * from other tasks.
       * The first segment,
       * `Task.journey_sharing_info.remaining_vehicle_journey_segments[0]` (gRPC)
       * or `Task.journeySharingInfo.remainingVehicleJourneySegments[0]` (REST),
       * contains route information from the driver's last known location to the
       * upcoming `VehicleStop`. Current route information usually comes from the
       * driver app, except for some cases noted in the documentation for
       * [DeliveryVehicle.current_route_segment][maps.fleetengine.delivery.v1.DeliveryVehicle.current_route_segment]. The other segments in
       * `Task.journey_sharing_info.remaining_vehicle_journey_segments` (gRPC) or
       * `Task.journeySharingInfo.remainingVehicleJourneySegments` (REST) are
       * populated by Fleet Engine. They provide route information between the
       * remaining `VehicleStops`.
       * </pre>
       *
       * <code>repeated .maps.fleetengine.delivery.v1.VehicleJourneySegment remaining_vehicle_journey_segments = 1;</code>
       */
      public google.maps.fleetengine.delivery.v1.VehicleJourneySegment.Builder getRemainingVehicleJourneySegmentsBuilder(
          int index) {
        return getRemainingVehicleJourneySegmentsFieldBuilder().getBuilder(index);
      }
      /**
       * <pre>
       * Tracking information for the stops that the assigned vehicle will make
       * before it completes this Task. Note that this list can contain stops
       * from other tasks.
       * The first segment,
       * `Task.journey_sharing_info.remaining_vehicle_journey_segments[0]` (gRPC)
       * or `Task.journeySharingInfo.remainingVehicleJourneySegments[0]` (REST),
       * contains route information from the driver's last known location to the
       * upcoming `VehicleStop`. Current route information usually comes from the
       * driver app, except for some cases noted in the documentation for
       * [DeliveryVehicle.current_route_segment][maps.fleetengine.delivery.v1.DeliveryVehicle.current_route_segment]. The other segments in
       * `Task.journey_sharing_info.remaining_vehicle_journey_segments` (gRPC) or
       * `Task.journeySharingInfo.remainingVehicleJourneySegments` (REST) are
       * populated by Fleet Engine. They provide route information between the
       * remaining `VehicleStops`.
       * </pre>
       *
       * <code>repeated .maps.fleetengine.delivery.v1.VehicleJourneySegment remaining_vehicle_journey_segments = 1;</code>
       */
      public google.maps.fleetengine.delivery.v1.VehicleJourneySegmentOrBuilder getRemainingVehicleJourneySegmentsOrBuilder(
          int index) {
        if (remainingVehicleJourneySegmentsBuilder_ == null) {
          return remainingVehicleJourneySegments_.get(index);  } else {
          return remainingVehicleJourneySegmentsBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <pre>
       * Tracking information for the stops that the assigned vehicle will make
       * before it completes this Task. Note that this list can contain stops
       * from other tasks.
       * The first segment,
       * `Task.journey_sharing_info.remaining_vehicle_journey_segments[0]` (gRPC)
       * or `Task.journeySharingInfo.remainingVehicleJourneySegments[0]` (REST),
       * contains route information from the driver's last known location to the
       * upcoming `VehicleStop`. Current route information usually comes from the
       * driver app, except for some cases noted in the documentation for
       * [DeliveryVehicle.current_route_segment][maps.fleetengine.delivery.v1.DeliveryVehicle.current_route_segment]. The other segments in
       * `Task.journey_sharing_info.remaining_vehicle_journey_segments` (gRPC) or
       * `Task.journeySharingInfo.remainingVehicleJourneySegments` (REST) are
       * populated by Fleet Engine. They provide route information between the
       * remaining `VehicleStops`.
       * </pre>
       *
       * <code>repeated .maps.fleetengine.delivery.v1.VehicleJourneySegment remaining_vehicle_journey_segments = 1;</code>
       */
      public java.util.List<? extends google.maps.fleetengine.delivery.v1.VehicleJourneySegmentOrBuilder> 
           getRemainingVehicleJourneySegmentsOrBuilderList() {
        if (remainingVehicleJourneySegmentsBuilder_ != null) {
          return remainingVehicleJourneySegmentsBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(remainingVehicleJourneySegments_);
        }
      }
      /**
       * <pre>
       * Tracking information for the stops that the assigned vehicle will make
       * before it completes this Task. Note that this list can contain stops
       * from other tasks.
       * The first segment,
       * `Task.journey_sharing_info.remaining_vehicle_journey_segments[0]` (gRPC)
       * or `Task.journeySharingInfo.remainingVehicleJourneySegments[0]` (REST),
       * contains route information from the driver's last known location to the
       * upcoming `VehicleStop`. Current route information usually comes from the
       * driver app, except for some cases noted in the documentation for
       * [DeliveryVehicle.current_route_segment][maps.fleetengine.delivery.v1.DeliveryVehicle.current_route_segment]. The other segments in
       * `Task.journey_sharing_info.remaining_vehicle_journey_segments` (gRPC) or
       * `Task.journeySharingInfo.remainingVehicleJourneySegments` (REST) are
       * populated by Fleet Engine. They provide route information between the
       * remaining `VehicleStops`.
       * </pre>
       *
       * <code>repeated .maps.fleetengine.delivery.v1.VehicleJourneySegment remaining_vehicle_journey_segments = 1;</code>
       */
      public google.maps.fleetengine.delivery.v1.VehicleJourneySegment.Builder addRemainingVehicleJourneySegmentsBuilder() {
        return getRemainingVehicleJourneySegmentsFieldBuilder().addBuilder(
            google.maps.fleetengine.delivery.v1.VehicleJourneySegment.getDefaultInstance());
      }
      /**
       * <pre>
       * Tracking information for the stops that the assigned vehicle will make
       * before it completes this Task. Note that this list can contain stops
       * from other tasks.
       * The first segment,
       * `Task.journey_sharing_info.remaining_vehicle_journey_segments[0]` (gRPC)
       * or `Task.journeySharingInfo.remainingVehicleJourneySegments[0]` (REST),
       * contains route information from the driver's last known location to the
       * upcoming `VehicleStop`. Current route information usually comes from the
       * driver app, except for some cases noted in the documentation for
       * [DeliveryVehicle.current_route_segment][maps.fleetengine.delivery.v1.DeliveryVehicle.current_route_segment]. The other segments in
       * `Task.journey_sharing_info.remaining_vehicle_journey_segments` (gRPC) or
       * `Task.journeySharingInfo.remainingVehicleJourneySegments` (REST) are
       * populated by Fleet Engine. They provide route information between the
       * remaining `VehicleStops`.
       * </pre>
       *
       * <code>repeated .maps.fleetengine.delivery.v1.VehicleJourneySegment remaining_vehicle_journey_segments = 1;</code>
       */
      public google.maps.fleetengine.delivery.v1.VehicleJourneySegment.Builder addRemainingVehicleJourneySegmentsBuilder(
          int index) {
        return getRemainingVehicleJourneySegmentsFieldBuilder().addBuilder(
            index, google.maps.fleetengine.delivery.v1.VehicleJourneySegment.getDefaultInstance());
      }
      /**
       * <pre>
       * Tracking information for the stops that the assigned vehicle will make
       * before it completes this Task. Note that this list can contain stops
       * from other tasks.
       * The first segment,
       * `Task.journey_sharing_info.remaining_vehicle_journey_segments[0]` (gRPC)
       * or `Task.journeySharingInfo.remainingVehicleJourneySegments[0]` (REST),
       * contains route information from the driver's last known location to the
       * upcoming `VehicleStop`. Current route information usually comes from the
       * driver app, except for some cases noted in the documentation for
       * [DeliveryVehicle.current_route_segment][maps.fleetengine.delivery.v1.DeliveryVehicle.current_route_segment]. The other segments in
       * `Task.journey_sharing_info.remaining_vehicle_journey_segments` (gRPC) or
       * `Task.journeySharingInfo.remainingVehicleJourneySegments` (REST) are
       * populated by Fleet Engine. They provide route information between the
       * remaining `VehicleStops`.
       * </pre>
       *
       * <code>repeated .maps.fleetengine.delivery.v1.VehicleJourneySegment remaining_vehicle_journey_segments = 1;</code>
       */
      public java.util.List<google.maps.fleetengine.delivery.v1.VehicleJourneySegment.Builder> 
           getRemainingVehicleJourneySegmentsBuilderList() {
        return getRemainingVehicleJourneySegmentsFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilderV3<
          google.maps.fleetengine.delivery.v1.VehicleJourneySegment, google.maps.fleetengine.delivery.v1.VehicleJourneySegment.Builder, google.maps.fleetengine.delivery.v1.VehicleJourneySegmentOrBuilder> 
          getRemainingVehicleJourneySegmentsFieldBuilder() {
        if (remainingVehicleJourneySegmentsBuilder_ == null) {
          remainingVehicleJourneySegmentsBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<
              google.maps.fleetengine.delivery.v1.VehicleJourneySegment, google.maps.fleetengine.delivery.v1.VehicleJourneySegment.Builder, google.maps.fleetengine.delivery.v1.VehicleJourneySegmentOrBuilder>(
                  remainingVehicleJourneySegments_,
                  ((bitField0_ & 0x00000001) != 0),
                  getParentForChildren(),
                  isClean());
          remainingVehicleJourneySegments_ = null;
        }
        return remainingVehicleJourneySegmentsBuilder_;
      }

      private google.maps.fleetengine.delivery.v1.DeliveryVehicleLocation lastLocation_;
      private com.google.protobuf.SingleFieldBuilderV3<
          google.maps.fleetengine.delivery.v1.DeliveryVehicleLocation, google.maps.fleetengine.delivery.v1.DeliveryVehicleLocation.Builder, google.maps.fleetengine.delivery.v1.DeliveryVehicleLocationOrBuilder> lastLocationBuilder_;
      /**
       * <pre>
       * Indicates the vehicle's last reported location of the assigned vehicle.
       * </pre>
       *
       * <code>.maps.fleetengine.delivery.v1.DeliveryVehicleLocation last_location = 2;</code>
       * @return Whether the lastLocation field is set.
       */
      public boolean hasLastLocation() {
        return lastLocationBuilder_ != null || lastLocation_ != null;
      }
      /**
       * <pre>
       * Indicates the vehicle's last reported location of the assigned vehicle.
       * </pre>
       *
       * <code>.maps.fleetengine.delivery.v1.DeliveryVehicleLocation last_location = 2;</code>
       * @return The lastLocation.
       */
      public google.maps.fleetengine.delivery.v1.DeliveryVehicleLocation getLastLocation() {
        if (lastLocationBuilder_ == null) {
          return lastLocation_ == null ? google.maps.fleetengine.delivery.v1.DeliveryVehicleLocation.getDefaultInstance() : lastLocation_;
        } else {
          return lastLocationBuilder_.getMessage();
        }
      }
      /**
       * <pre>
       * Indicates the vehicle's last reported location of the assigned vehicle.
       * </pre>
       *
       * <code>.maps.fleetengine.delivery.v1.DeliveryVehicleLocation last_location = 2;</code>
       */
      public Builder setLastLocation(google.maps.fleetengine.delivery.v1.DeliveryVehicleLocation value) {
        if (lastLocationBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          lastLocation_ = value;
          onChanged();
        } else {
          lastLocationBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <pre>
       * Indicates the vehicle's last reported location of the assigned vehicle.
       * </pre>
       *
       * <code>.maps.fleetengine.delivery.v1.DeliveryVehicleLocation last_location = 2;</code>
       */
      public Builder setLastLocation(
          google.maps.fleetengine.delivery.v1.DeliveryVehicleLocation.Builder builderForValue) {
        if (lastLocationBuilder_ == null) {
          lastLocation_ = builderForValue.build();
          onChanged();
        } else {
          lastLocationBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <pre>
       * Indicates the vehicle's last reported location of the assigned vehicle.
       * </pre>
       *
       * <code>.maps.fleetengine.delivery.v1.DeliveryVehicleLocation last_location = 2;</code>
       */
      public Builder mergeLastLocation(google.maps.fleetengine.delivery.v1.DeliveryVehicleLocation value) {
        if (lastLocationBuilder_ == null) {
          if (lastLocation_ != null) {
            lastLocation_ =
              google.maps.fleetengine.delivery.v1.DeliveryVehicleLocation.newBuilder(lastLocation_).mergeFrom(value).buildPartial();
          } else {
            lastLocation_ = value;
          }
          onChanged();
        } else {
          lastLocationBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <pre>
       * Indicates the vehicle's last reported location of the assigned vehicle.
       * </pre>
       *
       * <code>.maps.fleetengine.delivery.v1.DeliveryVehicleLocation last_location = 2;</code>
       */
      public Builder clearLastLocation() {
        if (lastLocationBuilder_ == null) {
          lastLocation_ = null;
          onChanged();
        } else {
          lastLocation_ = null;
          lastLocationBuilder_ = null;
        }

        return this;
      }
      /**
       * <pre>
       * Indicates the vehicle's last reported location of the assigned vehicle.
       * </pre>
       *
       * <code>.maps.fleetengine.delivery.v1.DeliveryVehicleLocation last_location = 2;</code>
       */
      public google.maps.fleetengine.delivery.v1.DeliveryVehicleLocation.Builder getLastLocationBuilder() {
        
        onChanged();
        return getLastLocationFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       * Indicates the vehicle's last reported location of the assigned vehicle.
       * </pre>
       *
       * <code>.maps.fleetengine.delivery.v1.DeliveryVehicleLocation last_location = 2;</code>
       */
      public google.maps.fleetengine.delivery.v1.DeliveryVehicleLocationOrBuilder getLastLocationOrBuilder() {
        if (lastLocationBuilder_ != null) {
          return lastLocationBuilder_.getMessageOrBuilder();
        } else {
          return lastLocation_ == null ?
              google.maps.fleetengine.delivery.v1.DeliveryVehicleLocation.getDefaultInstance() : lastLocation_;
        }
      }
      /**
       * <pre>
       * Indicates the vehicle's last reported location of the assigned vehicle.
       * </pre>
       *
       * <code>.maps.fleetengine.delivery.v1.DeliveryVehicleLocation last_location = 2;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          google.maps.fleetengine.delivery.v1.DeliveryVehicleLocation, google.maps.fleetengine.delivery.v1.DeliveryVehicleLocation.Builder, google.maps.fleetengine.delivery.v1.DeliveryVehicleLocationOrBuilder> 
          getLastLocationFieldBuilder() {
        if (lastLocationBuilder_ == null) {
          lastLocationBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              google.maps.fleetengine.delivery.v1.DeliveryVehicleLocation, google.maps.fleetengine.delivery.v1.DeliveryVehicleLocation.Builder, google.maps.fleetengine.delivery.v1.DeliveryVehicleLocationOrBuilder>(
                  getLastLocation(),
                  getParentForChildren(),
                  isClean());
          lastLocation_ = null;
        }
        return lastLocationBuilder_;
      }

      private boolean lastLocationSnappable_ ;
      /**
       * <pre>
       * Indicates whether the vehicle's lastLocation can be snapped to
       * the `current_route_segment`. This value is False if either
       * `last_location` or `current_route_segment` don't exist. This value is
       * computed by Fleet Engine. Updates from clients are ignored.
       * </pre>
       *
       * <code>bool last_location_snappable = 3;</code>
       * @return The lastLocationSnappable.
       */
      @java.lang.Override
      public boolean getLastLocationSnappable() {
        return lastLocationSnappable_;
      }
      /**
       * <pre>
       * Indicates whether the vehicle's lastLocation can be snapped to
       * the `current_route_segment`. This value is False if either
       * `last_location` or `current_route_segment` don't exist. This value is
       * computed by Fleet Engine. Updates from clients are ignored.
       * </pre>
       *
       * <code>bool last_location_snappable = 3;</code>
       * @param value The lastLocationSnappable to set.
       * @return This builder for chaining.
       */
      public Builder setLastLocationSnappable(boolean value) {
        
        lastLocationSnappable_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Indicates whether the vehicle's lastLocation can be snapped to
       * the `current_route_segment`. This value is False if either
       * `last_location` or `current_route_segment` don't exist. This value is
       * computed by Fleet Engine. Updates from clients are ignored.
       * </pre>
       *
       * <code>bool last_location_snappable = 3;</code>
       * @return This builder for chaining.
       */
      public Builder clearLastLocationSnappable() {
        
        lastLocationSnappable_ = false;
        onChanged();
        return this;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:maps.fleetengine.delivery.v1.Task.JourneySharingInfo)
    }

    // @@protoc_insertion_point(class_scope:maps.fleetengine.delivery.v1.Task.JourneySharingInfo)
    private static final google.maps.fleetengine.delivery.v1.Task.JourneySharingInfo DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new google.maps.fleetengine.delivery.v1.Task.JourneySharingInfo();
    }

    public static google.maps.fleetengine.delivery.v1.Task.JourneySharingInfo getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<JourneySharingInfo>
        PARSER = new com.google.protobuf.AbstractParser<JourneySharingInfo>() {
      @java.lang.Override
      public JourneySharingInfo parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new JourneySharingInfo(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<JourneySharingInfo> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<JourneySharingInfo> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public google.maps.fleetengine.delivery.v1.Task.JourneySharingInfo getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public static final int NAME_FIELD_NUMBER = 1;
  private volatile java.lang.Object name_;
  /**
   * <pre>
   * Must be in the format `providers/{provider}/tasks/{task}`.
   * </pre>
   *
   * <code>string name = 1;</code>
   * @return The name.
   */
  @java.lang.Override
  public java.lang.String getName() {
    java.lang.Object ref = name_;
    if (ref instanceof java.lang.String) {
      return (java.lang.String) ref;
    } else {
      com.google.protobuf.ByteString bs = 
          (com.google.protobuf.ByteString) ref;
      java.lang.String s = bs.toStringUtf8();
      name_ = s;
      return s;
    }
  }
  /**
   * <pre>
   * Must be in the format `providers/{provider}/tasks/{task}`.
   * </pre>
   *
   * <code>string name = 1;</code>
   * @return The bytes for name.
   */
  @java.lang.Override
  public com.google.protobuf.ByteString
      getNameBytes() {
    java.lang.Object ref = name_;
    if (ref instanceof java.lang.String) {
      com.google.protobuf.ByteString b = 
          com.google.protobuf.ByteString.copyFromUtf8(
              (java.lang.String) ref);
      name_ = b;
      return b;
    } else {
      return (com.google.protobuf.ByteString) ref;
    }
  }

  public static final int TYPE_FIELD_NUMBER = 2;
  private int type_;
  /**
   * <pre>
   * Required. Immutable. Defines the type of the Task. For example, a break or shipment.
   * </pre>
   *
   * <code>.maps.fleetengine.delivery.v1.Task.Type type = 2 [(.google.api.field_behavior) = REQUIRED, (.google.api.field_behavior) = IMMUTABLE];</code>
   * @return The enum numeric value on the wire for type.
   */
  @java.lang.Override public int getTypeValue() {
    return type_;
  }
  /**
   * <pre>
   * Required. Immutable. Defines the type of the Task. For example, a break or shipment.
   * </pre>
   *
   * <code>.maps.fleetengine.delivery.v1.Task.Type type = 2 [(.google.api.field_behavior) = REQUIRED, (.google.api.field_behavior) = IMMUTABLE];</code>
   * @return The type.
   */
  @java.lang.Override public google.maps.fleetengine.delivery.v1.Task.Type getType() {
    @SuppressWarnings("deprecation")
    google.maps.fleetengine.delivery.v1.Task.Type result = google.maps.fleetengine.delivery.v1.Task.Type.valueOf(type_);
    return result == null ? google.maps.fleetengine.delivery.v1.Task.Type.UNRECOGNIZED : result;
  }

  public static final int STATE_FIELD_NUMBER = 3;
  private int state_;
  /**
   * <pre>
   * Required. The current execution state of the Task.
   * </pre>
   *
   * <code>.maps.fleetengine.delivery.v1.Task.State state = 3 [(.google.api.field_behavior) = REQUIRED];</code>
   * @return The enum numeric value on the wire for state.
   */
  @java.lang.Override public int getStateValue() {
    return state_;
  }
  /**
   * <pre>
   * Required. The current execution state of the Task.
   * </pre>
   *
   * <code>.maps.fleetengine.delivery.v1.Task.State state = 3 [(.google.api.field_behavior) = REQUIRED];</code>
   * @return The state.
   */
  @java.lang.Override public google.maps.fleetengine.delivery.v1.Task.State getState() {
    @SuppressWarnings("deprecation")
    google.maps.fleetengine.delivery.v1.Task.State result = google.maps.fleetengine.delivery.v1.Task.State.valueOf(state_);
    return result == null ? google.maps.fleetengine.delivery.v1.Task.State.UNRECOGNIZED : result;
  }

  public static final int TASK_OUTCOME_FIELD_NUMBER = 9;
  private int taskOutcome_;
  /**
   * <pre>
   * The outcome of the Task.
   * </pre>
   *
   * <code>.maps.fleetengine.delivery.v1.Task.TaskOutcome task_outcome = 9;</code>
   * @return The enum numeric value on the wire for taskOutcome.
   */
  @java.lang.Override public int getTaskOutcomeValue() {
    return taskOutcome_;
  }
  /**
   * <pre>
   * The outcome of the Task.
   * </pre>
   *
   * <code>.maps.fleetengine.delivery.v1.Task.TaskOutcome task_outcome = 9;</code>
   * @return The taskOutcome.
   */
  @java.lang.Override public google.maps.fleetengine.delivery.v1.Task.TaskOutcome getTaskOutcome() {
    @SuppressWarnings("deprecation")
    google.maps.fleetengine.delivery.v1.Task.TaskOutcome result = google.maps.fleetengine.delivery.v1.Task.TaskOutcome.valueOf(taskOutcome_);
    return result == null ? google.maps.fleetengine.delivery.v1.Task.TaskOutcome.UNRECOGNIZED : result;
  }

  public static final int TASK_OUTCOME_TIME_FIELD_NUMBER = 10;
  private com.google.protobuf.Timestamp taskOutcomeTime_;
  /**
   * <pre>
   * The timestamp that indicates when the Task's outcome was set by the
   * provider.
   * </pre>
   *
   * <code>.google.protobuf.Timestamp task_outcome_time = 10;</code>
   * @return Whether the taskOutcomeTime field is set.
   */
  @java.lang.Override
  public boolean hasTaskOutcomeTime() {
    return taskOutcomeTime_ != null;
  }
  /**
   * <pre>
   * The timestamp that indicates when the Task's outcome was set by the
   * provider.
   * </pre>
   *
   * <code>.google.protobuf.Timestamp task_outcome_time = 10;</code>
   * @return The taskOutcomeTime.
   */
  @java.lang.Override
  public com.google.protobuf.Timestamp getTaskOutcomeTime() {
    return taskOutcomeTime_ == null ? com.google.protobuf.Timestamp.getDefaultInstance() : taskOutcomeTime_;
  }
  /**
   * <pre>
   * The timestamp that indicates when the Task's outcome was set by the
   * provider.
   * </pre>
   *
   * <code>.google.protobuf.Timestamp task_outcome_time = 10;</code>
   */
  @java.lang.Override
  public com.google.protobuf.TimestampOrBuilder getTaskOutcomeTimeOrBuilder() {
    return getTaskOutcomeTime();
  }

  public static final int TASK_OUTCOME_LOCATION_FIELD_NUMBER = 11;
  private google.maps.fleetengine.delivery.v1.LocationInfo taskOutcomeLocation_;
  /**
   * <pre>
   * The location where the Task's outcome was set. This value is updated as
   * part of `UpdateTask`. If this value isn't explicitly updated by the
   * provider, then Fleet Engine populates it by default with the last known
   * vehicle location (the *raw* location).
   * </pre>
   *
   * <code>.maps.fleetengine.delivery.v1.LocationInfo task_outcome_location = 11;</code>
   * @return Whether the taskOutcomeLocation field is set.
   */
  @java.lang.Override
  public boolean hasTaskOutcomeLocation() {
    return taskOutcomeLocation_ != null;
  }
  /**
   * <pre>
   * The location where the Task's outcome was set. This value is updated as
   * part of `UpdateTask`. If this value isn't explicitly updated by the
   * provider, then Fleet Engine populates it by default with the last known
   * vehicle location (the *raw* location).
   * </pre>
   *
   * <code>.maps.fleetengine.delivery.v1.LocationInfo task_outcome_location = 11;</code>
   * @return The taskOutcomeLocation.
   */
  @java.lang.Override
  public google.maps.fleetengine.delivery.v1.LocationInfo getTaskOutcomeLocation() {
    return taskOutcomeLocation_ == null ? google.maps.fleetengine.delivery.v1.LocationInfo.getDefaultInstance() : taskOutcomeLocation_;
  }
  /**
   * <pre>
   * The location where the Task's outcome was set. This value is updated as
   * part of `UpdateTask`. If this value isn't explicitly updated by the
   * provider, then Fleet Engine populates it by default with the last known
   * vehicle location (the *raw* location).
   * </pre>
   *
   * <code>.maps.fleetengine.delivery.v1.LocationInfo task_outcome_location = 11;</code>
   */
  @java.lang.Override
  public google.maps.fleetengine.delivery.v1.LocationInfoOrBuilder getTaskOutcomeLocationOrBuilder() {
    return getTaskOutcomeLocation();
  }

  public static final int TASK_OUTCOME_LOCATION_SOURCE_FIELD_NUMBER = 12;
  private int taskOutcomeLocationSource_;
  /**
   * <pre>
   * Indicates where the value of the `task_outcome_location` came from.
   * </pre>
   *
   * <code>.maps.fleetengine.delivery.v1.Task.TaskOutcomeLocationSource task_outcome_location_source = 12;</code>
   * @return The enum numeric value on the wire for taskOutcomeLocationSource.
   */
  @java.lang.Override public int getTaskOutcomeLocationSourceValue() {
    return taskOutcomeLocationSource_;
  }
  /**
   * <pre>
   * Indicates where the value of the `task_outcome_location` came from.
   * </pre>
   *
   * <code>.maps.fleetengine.delivery.v1.Task.TaskOutcomeLocationSource task_outcome_location_source = 12;</code>
   * @return The taskOutcomeLocationSource.
   */
  @java.lang.Override public google.maps.fleetengine.delivery.v1.Task.TaskOutcomeLocationSource getTaskOutcomeLocationSource() {
    @SuppressWarnings("deprecation")
    google.maps.fleetengine.delivery.v1.Task.TaskOutcomeLocationSource result = google.maps.fleetengine.delivery.v1.Task.TaskOutcomeLocationSource.valueOf(taskOutcomeLocationSource_);
    return result == null ? google.maps.fleetengine.delivery.v1.Task.TaskOutcomeLocationSource.UNRECOGNIZED : result;
  }

  public static final int TRACKING_ID_FIELD_NUMBER = 4;
  private volatile java.lang.Object trackingId_;
  /**
   * <pre>
   * Immutable. This field facilitates the storing of an ID so you can avoid using a
   * complicated mapping. You cannot set `tracking_id` for Tasks of type
   * `UNAVAILABLE` and `SCHEDULED_STOP`. These IDs are subject to the
   * following restrictions:
   * * Must be a valid Unicode string.
   * * Limited to a maximum length of 64 characters.
   * * Normalized according to Unicode Normalization Form C
   * (http://www.unicode.org/reports/tr15/).
   * * May not contain any of the following ASCII characters: '/', ':', '?',
   * ',', or '#'.
   * </pre>
   *
   * <code>string tracking_id = 4 [(.google.api.field_behavior) = IMMUTABLE];</code>
   * @return The trackingId.
   */
  @java.lang.Override
  public java.lang.String getTrackingId() {
    java.lang.Object ref = trackingId_;
    if (ref instanceof java.lang.String) {
      return (java.lang.String) ref;
    } else {
      com.google.protobuf.ByteString bs = 
          (com.google.protobuf.ByteString) ref;
      java.lang.String s = bs.toStringUtf8();
      trackingId_ = s;
      return s;
    }
  }
  /**
   * <pre>
   * Immutable. This field facilitates the storing of an ID so you can avoid using a
   * complicated mapping. You cannot set `tracking_id` for Tasks of type
   * `UNAVAILABLE` and `SCHEDULED_STOP`. These IDs are subject to the
   * following restrictions:
   * * Must be a valid Unicode string.
   * * Limited to a maximum length of 64 characters.
   * * Normalized according to Unicode Normalization Form C
   * (http://www.unicode.org/reports/tr15/).
   * * May not contain any of the following ASCII characters: '/', ':', '?',
   * ',', or '#'.
   * </pre>
   *
   * <code>string tracking_id = 4 [(.google.api.field_behavior) = IMMUTABLE];</code>
   * @return The bytes for trackingId.
   */
  @java.lang.Override
  public com.google.protobuf.ByteString
      getTrackingIdBytes() {
    java.lang.Object ref = trackingId_;
    if (ref instanceof java.lang.String) {
      com.google.protobuf.ByteString b = 
          com.google.protobuf.ByteString.copyFromUtf8(
              (java.lang.String) ref);
      trackingId_ = b;
      return b;
    } else {
      return (com.google.protobuf.ByteString) ref;
    }
  }

  public static final int DELIVERY_VEHICLE_ID_FIELD_NUMBER = 5;
  private volatile java.lang.Object deliveryVehicleId_;
  /**
   * <pre>
   * Output only. The ID of the vehicle that is executing this Task. Delivery Vehicle IDs are
   * subject to the following restrictions:
   * * Must be a valid Unicode string.
   * * Limited to a maximum length of 64 characters.
   * * Normalized according to Unicode Normalization Form C
   * (http://www.unicode.org/reports/tr15/).
   * * May not contain any of the following ASCII characters: '/', ':', '?',
   * ',', or '#'.
   * </pre>
   *
   * <code>string delivery_vehicle_id = 5 [(.google.api.field_behavior) = OUTPUT_ONLY];</code>
   * @return The deliveryVehicleId.
   */
  @java.lang.Override
  public java.lang.String getDeliveryVehicleId() {
    java.lang.Object ref = deliveryVehicleId_;
    if (ref instanceof java.lang.String) {
      return (java.lang.String) ref;
    } else {
      com.google.protobuf.ByteString bs = 
          (com.google.protobuf.ByteString) ref;
      java.lang.String s = bs.toStringUtf8();
      deliveryVehicleId_ = s;
      return s;
    }
  }
  /**
   * <pre>
   * Output only. The ID of the vehicle that is executing this Task. Delivery Vehicle IDs are
   * subject to the following restrictions:
   * * Must be a valid Unicode string.
   * * Limited to a maximum length of 64 characters.
   * * Normalized according to Unicode Normalization Form C
   * (http://www.unicode.org/reports/tr15/).
   * * May not contain any of the following ASCII characters: '/', ':', '?',
   * ',', or '#'.
   * </pre>
   *
   * <code>string delivery_vehicle_id = 5 [(.google.api.field_behavior) = OUTPUT_ONLY];</code>
   * @return The bytes for deliveryVehicleId.
   */
  @java.lang.Override
  public com.google.protobuf.ByteString
      getDeliveryVehicleIdBytes() {
    java.lang.Object ref = deliveryVehicleId_;
    if (ref instanceof java.lang.String) {
      com.google.protobuf.ByteString b = 
          com.google.protobuf.ByteString.copyFromUtf8(
              (java.lang.String) ref);
      deliveryVehicleId_ = b;
      return b;
    } else {
      return (com.google.protobuf.ByteString) ref;
    }
  }

  public static final int PLANNED_LOCATION_FIELD_NUMBER = 6;
  private google.maps.fleetengine.delivery.v1.LocationInfo plannedLocation_;
  /**
   * <pre>
   * Immutable. The location where the Task will be completed.
   * Optional for `UNAVAILABLE` Tasks, but required for all other Tasks.
   * </pre>
   *
   * <code>.maps.fleetengine.delivery.v1.LocationInfo planned_location = 6 [(.google.api.field_behavior) = IMMUTABLE];</code>
   * @return Whether the plannedLocation field is set.
   */
  @java.lang.Override
  public boolean hasPlannedLocation() {
    return plannedLocation_ != null;
  }
  /**
   * <pre>
   * Immutable. The location where the Task will be completed.
   * Optional for `UNAVAILABLE` Tasks, but required for all other Tasks.
   * </pre>
   *
   * <code>.maps.fleetengine.delivery.v1.LocationInfo planned_location = 6 [(.google.api.field_behavior) = IMMUTABLE];</code>
   * @return The plannedLocation.
   */
  @java.lang.Override
  public google.maps.fleetengine.delivery.v1.LocationInfo getPlannedLocation() {
    return plannedLocation_ == null ? google.maps.fleetengine.delivery.v1.LocationInfo.getDefaultInstance() : plannedLocation_;
  }
  /**
   * <pre>
   * Immutable. The location where the Task will be completed.
   * Optional for `UNAVAILABLE` Tasks, but required for all other Tasks.
   * </pre>
   *
   * <code>.maps.fleetengine.delivery.v1.LocationInfo planned_location = 6 [(.google.api.field_behavior) = IMMUTABLE];</code>
   */
  @java.lang.Override
  public google.maps.fleetengine.delivery.v1.LocationInfoOrBuilder getPlannedLocationOrBuilder() {
    return getPlannedLocation();
  }

  public static final int TASK_DURATION_FIELD_NUMBER = 7;
  private com.google.protobuf.Duration taskDuration_;
  /**
   * <pre>
   * Required. Immutable. The time needed to execute a Task at this location.
   * </pre>
   *
   * <code>.google.protobuf.Duration task_duration = 7 [(.google.api.field_behavior) = REQUIRED, (.google.api.field_behavior) = IMMUTABLE];</code>
   * @return Whether the taskDuration field is set.
   */
  @java.lang.Override
  public boolean hasTaskDuration() {
    return taskDuration_ != null;
  }
  /**
   * <pre>
   * Required. Immutable. The time needed to execute a Task at this location.
   * </pre>
   *
   * <code>.google.protobuf.Duration task_duration = 7 [(.google.api.field_behavior) = REQUIRED, (.google.api.field_behavior) = IMMUTABLE];</code>
   * @return The taskDuration.
   */
  @java.lang.Override
  public com.google.protobuf.Duration getTaskDuration() {
    return taskDuration_ == null ? com.google.protobuf.Duration.getDefaultInstance() : taskDuration_;
  }
  /**
   * <pre>
   * Required. Immutable. The time needed to execute a Task at this location.
   * </pre>
   *
   * <code>.google.protobuf.Duration task_duration = 7 [(.google.api.field_behavior) = REQUIRED, (.google.api.field_behavior) = IMMUTABLE];</code>
   */
  @java.lang.Override
  public com.google.protobuf.DurationOrBuilder getTaskDurationOrBuilder() {
    return getTaskDuration();
  }

  public static final int JOURNEY_SHARING_INFO_FIELD_NUMBER = 8;
  private google.maps.fleetengine.delivery.v1.Task.JourneySharingInfo journeySharingInfo_;
  /**
   * <pre>
   * Output only. Journey sharing-specific fields. Not populated when state is `CLOSED`.
   * </pre>
   *
   * <code>.maps.fleetengine.delivery.v1.Task.JourneySharingInfo journey_sharing_info = 8 [(.google.api.field_behavior) = OUTPUT_ONLY];</code>
   * @return Whether the journeySharingInfo field is set.
   */
  @java.lang.Override
  public boolean hasJourneySharingInfo() {
    return journeySharingInfo_ != null;
  }
  /**
   * <pre>
   * Output only. Journey sharing-specific fields. Not populated when state is `CLOSED`.
   * </pre>
   *
   * <code>.maps.fleetengine.delivery.v1.Task.JourneySharingInfo journey_sharing_info = 8 [(.google.api.field_behavior) = OUTPUT_ONLY];</code>
   * @return The journeySharingInfo.
   */
  @java.lang.Override
  public google.maps.fleetengine.delivery.v1.Task.JourneySharingInfo getJourneySharingInfo() {
    return journeySharingInfo_ == null ? google.maps.fleetengine.delivery.v1.Task.JourneySharingInfo.getDefaultInstance() : journeySharingInfo_;
  }
  /**
   * <pre>
   * Output only. Journey sharing-specific fields. Not populated when state is `CLOSED`.
   * </pre>
   *
   * <code>.maps.fleetengine.delivery.v1.Task.JourneySharingInfo journey_sharing_info = 8 [(.google.api.field_behavior) = OUTPUT_ONLY];</code>
   */
  @java.lang.Override
  public google.maps.fleetengine.delivery.v1.Task.JourneySharingInfoOrBuilder getJourneySharingInfoOrBuilder() {
    return getJourneySharingInfo();
  }

  private byte memoizedIsInitialized = -1;
  @java.lang.Override
  public final boolean isInitialized() {
    byte isInitialized = memoizedIsInitialized;
    if (isInitialized == 1) return true;
    if (isInitialized == 0) return false;

    memoizedIsInitialized = 1;
    return true;
  }

  @java.lang.Override
  public void writeTo(com.google.protobuf.CodedOutputStream output)
                      throws java.io.IOException {
    if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(name_)) {
      com.google.protobuf.GeneratedMessageV3.writeString(output, 1, name_);
    }
    if (type_ != google.maps.fleetengine.delivery.v1.Task.Type.TYPE_UNSPECIFIED.getNumber()) {
      output.writeEnum(2, type_);
    }
    if (state_ != google.maps.fleetengine.delivery.v1.Task.State.STATE_UNSPECIFIED.getNumber()) {
      output.writeEnum(3, state_);
    }
    if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(trackingId_)) {
      com.google.protobuf.GeneratedMessageV3.writeString(output, 4, trackingId_);
    }
    if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(deliveryVehicleId_)) {
      com.google.protobuf.GeneratedMessageV3.writeString(output, 5, deliveryVehicleId_);
    }
    if (plannedLocation_ != null) {
      output.writeMessage(6, getPlannedLocation());
    }
    if (taskDuration_ != null) {
      output.writeMessage(7, getTaskDuration());
    }
    if (journeySharingInfo_ != null) {
      output.writeMessage(8, getJourneySharingInfo());
    }
    if (taskOutcome_ != google.maps.fleetengine.delivery.v1.Task.TaskOutcome.TASK_OUTCOME_UNSPECIFIED.getNumber()) {
      output.writeEnum(9, taskOutcome_);
    }
    if (taskOutcomeTime_ != null) {
      output.writeMessage(10, getTaskOutcomeTime());
    }
    if (taskOutcomeLocation_ != null) {
      output.writeMessage(11, getTaskOutcomeLocation());
    }
    if (taskOutcomeLocationSource_ != google.maps.fleetengine.delivery.v1.Task.TaskOutcomeLocationSource.TASK_OUTCOME_LOCATION_SOURCE_UNSPECIFIED.getNumber()) {
      output.writeEnum(12, taskOutcomeLocationSource_);
    }
    unknownFields.writeTo(output);
  }

  @java.lang.Override
  public int getSerializedSize() {
    int size = memoizedSize;
    if (size != -1) return size;

    size = 0;
    if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(name_)) {
      size += com.google.protobuf.GeneratedMessageV3.computeStringSize(1, name_);
    }
    if (type_ != google.maps.fleetengine.delivery.v1.Task.Type.TYPE_UNSPECIFIED.getNumber()) {
      size += com.google.protobuf.CodedOutputStream
        .computeEnumSize(2, type_);
    }
    if (state_ != google.maps.fleetengine.delivery.v1.Task.State.STATE_UNSPECIFIED.getNumber()) {
      size += com.google.protobuf.CodedOutputStream
        .computeEnumSize(3, state_);
    }
    if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(trackingId_)) {
      size += com.google.protobuf.GeneratedMessageV3.computeStringSize(4, trackingId_);
    }
    if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(deliveryVehicleId_)) {
      size += com.google.protobuf.GeneratedMessageV3.computeStringSize(5, deliveryVehicleId_);
    }
    if (plannedLocation_ != null) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(6, getPlannedLocation());
    }
    if (taskDuration_ != null) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(7, getTaskDuration());
    }
    if (journeySharingInfo_ != null) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(8, getJourneySharingInfo());
    }
    if (taskOutcome_ != google.maps.fleetengine.delivery.v1.Task.TaskOutcome.TASK_OUTCOME_UNSPECIFIED.getNumber()) {
      size += com.google.protobuf.CodedOutputStream
        .computeEnumSize(9, taskOutcome_);
    }
    if (taskOutcomeTime_ != null) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(10, getTaskOutcomeTime());
    }
    if (taskOutcomeLocation_ != null) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(11, getTaskOutcomeLocation());
    }
    if (taskOutcomeLocationSource_ != google.maps.fleetengine.delivery.v1.Task.TaskOutcomeLocationSource.TASK_OUTCOME_LOCATION_SOURCE_UNSPECIFIED.getNumber()) {
      size += com.google.protobuf.CodedOutputStream
        .computeEnumSize(12, taskOutcomeLocationSource_);
    }
    size += unknownFields.getSerializedSize();
    memoizedSize = size;
    return size;
  }

  @java.lang.Override
  public boolean equals(final java.lang.Object obj) {
    if (obj == this) {
     return true;
    }
    if (!(obj instanceof google.maps.fleetengine.delivery.v1.Task)) {
      return super.equals(obj);
    }
    google.maps.fleetengine.delivery.v1.Task other = (google.maps.fleetengine.delivery.v1.Task) obj;

    if (!getName()
        .equals(other.getName())) return false;
    if (type_ != other.type_) return false;
    if (state_ != other.state_) return false;
    if (taskOutcome_ != other.taskOutcome_) return false;
    if (hasTaskOutcomeTime() != other.hasTaskOutcomeTime()) return false;
    if (hasTaskOutcomeTime()) {
      if (!getTaskOutcomeTime()
          .equals(other.getTaskOutcomeTime())) return false;
    }
    if (hasTaskOutcomeLocation() != other.hasTaskOutcomeLocation()) return false;
    if (hasTaskOutcomeLocation()) {
      if (!getTaskOutcomeLocation()
          .equals(other.getTaskOutcomeLocation())) return false;
    }
    if (taskOutcomeLocationSource_ != other.taskOutcomeLocationSource_) return false;
    if (!getTrackingId()
        .equals(other.getTrackingId())) return false;
    if (!getDeliveryVehicleId()
        .equals(other.getDeliveryVehicleId())) return false;
    if (hasPlannedLocation() != other.hasPlannedLocation()) return false;
    if (hasPlannedLocation()) {
      if (!getPlannedLocation()
          .equals(other.getPlannedLocation())) return false;
    }
    if (hasTaskDuration() != other.hasTaskDuration()) return false;
    if (hasTaskDuration()) {
      if (!getTaskDuration()
          .equals(other.getTaskDuration())) return false;
    }
    if (hasJourneySharingInfo() != other.hasJourneySharingInfo()) return false;
    if (hasJourneySharingInfo()) {
      if (!getJourneySharingInfo()
          .equals(other.getJourneySharingInfo())) return false;
    }
    if (!unknownFields.equals(other.unknownFields)) return false;
    return true;
  }

  @java.lang.Override
  public int hashCode() {
    if (memoizedHashCode != 0) {
      return memoizedHashCode;
    }
    int hash = 41;
    hash = (19 * hash) + getDescriptor().hashCode();
    hash = (37 * hash) + NAME_FIELD_NUMBER;
    hash = (53 * hash) + getName().hashCode();
    hash = (37 * hash) + TYPE_FIELD_NUMBER;
    hash = (53 * hash) + type_;
    hash = (37 * hash) + STATE_FIELD_NUMBER;
    hash = (53 * hash) + state_;
    hash = (37 * hash) + TASK_OUTCOME_FIELD_NUMBER;
    hash = (53 * hash) + taskOutcome_;
    if (hasTaskOutcomeTime()) {
      hash = (37 * hash) + TASK_OUTCOME_TIME_FIELD_NUMBER;
      hash = (53 * hash) + getTaskOutcomeTime().hashCode();
    }
    if (hasTaskOutcomeLocation()) {
      hash = (37 * hash) + TASK_OUTCOME_LOCATION_FIELD_NUMBER;
      hash = (53 * hash) + getTaskOutcomeLocation().hashCode();
    }
    hash = (37 * hash) + TASK_OUTCOME_LOCATION_SOURCE_FIELD_NUMBER;
    hash = (53 * hash) + taskOutcomeLocationSource_;
    hash = (37 * hash) + TRACKING_ID_FIELD_NUMBER;
    hash = (53 * hash) + getTrackingId().hashCode();
    hash = (37 * hash) + DELIVERY_VEHICLE_ID_FIELD_NUMBER;
    hash = (53 * hash) + getDeliveryVehicleId().hashCode();
    if (hasPlannedLocation()) {
      hash = (37 * hash) + PLANNED_LOCATION_FIELD_NUMBER;
      hash = (53 * hash) + getPlannedLocation().hashCode();
    }
    if (hasTaskDuration()) {
      hash = (37 * hash) + TASK_DURATION_FIELD_NUMBER;
      hash = (53 * hash) + getTaskDuration().hashCode();
    }
    if (hasJourneySharingInfo()) {
      hash = (37 * hash) + JOURNEY_SHARING_INFO_FIELD_NUMBER;
      hash = (53 * hash) + getJourneySharingInfo().hashCode();
    }
    hash = (29 * hash) + unknownFields.hashCode();
    memoizedHashCode = hash;
    return hash;
  }

  public static google.maps.fleetengine.delivery.v1.Task parseFrom(
      java.nio.ByteBuffer data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static google.maps.fleetengine.delivery.v1.Task parseFrom(
      java.nio.ByteBuffer data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static google.maps.fleetengine.delivery.v1.Task parseFrom(
      com.google.protobuf.ByteString data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static google.maps.fleetengine.delivery.v1.Task parseFrom(
      com.google.protobuf.ByteString data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static google.maps.fleetengine.delivery.v1.Task parseFrom(byte[] data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static google.maps.fleetengine.delivery.v1.Task parseFrom(
      byte[] data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static google.maps.fleetengine.delivery.v1.Task parseFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input);
  }
  public static google.maps.fleetengine.delivery.v1.Task parseFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input, extensionRegistry);
  }
  public static google.maps.fleetengine.delivery.v1.Task parseDelimitedFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseDelimitedWithIOException(PARSER, input);
  }
  public static google.maps.fleetengine.delivery.v1.Task parseDelimitedFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
  }
  public static google.maps.fleetengine.delivery.v1.Task parseFrom(
      com.google.protobuf.CodedInputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input);
  }
  public static google.maps.fleetengine.delivery.v1.Task parseFrom(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input, extensionRegistry);
  }

  @java.lang.Override
  public Builder newBuilderForType() { return newBuilder(); }
  public static Builder newBuilder() {
    return DEFAULT_INSTANCE.toBuilder();
  }
  public static Builder newBuilder(google.maps.fleetengine.delivery.v1.Task prototype) {
    return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
  }
  @java.lang.Override
  public Builder toBuilder() {
    return this == DEFAULT_INSTANCE
        ? new Builder() : new Builder().mergeFrom(this);
  }

  @java.lang.Override
  protected Builder newBuilderForType(
      com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
    Builder builder = new Builder(parent);
    return builder;
  }
  /**
   * <pre>
   * A Task in the Delivery API represents a single action to track. In general,
   * there is a distinction between shipment-related Tasks and break Tasks. A
   * shipment can have multiple Tasks associated with it. For example, there could
   * be one Task for the pickup, and one for the drop-off or transfer. Also,
   * different Tasks for a given shipment can be handled by different vehicles.
   * For example, one vehicle could handle the pickup, driving the shipment to the
   * hub, while another vehicle drives the same shipment from the hub to the
   * drop-off location.
   * Note: gRPC and REST APIs use different field naming conventions. For example,
   * the `Task.journey_sharing_info` field in the gRPC API and the
   * `DeliveryVehicle.journeySharingInfo` field in the REST API refer to the same
   * field.
   * </pre>
   *
   * Protobuf type {@code maps.fleetengine.delivery.v1.Task}
   */
  public static final class Builder extends
      com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
      // @@protoc_insertion_point(builder_implements:maps.fleetengine.delivery.v1.Task)
      google.maps.fleetengine.delivery.v1.TaskOrBuilder {
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return google.maps.fleetengine.delivery.v1.Tasks.internal_static_maps_fleetengine_delivery_v1_Task_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return google.maps.fleetengine.delivery.v1.Tasks.internal_static_maps_fleetengine_delivery_v1_Task_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              google.maps.fleetengine.delivery.v1.Task.class, google.maps.fleetengine.delivery.v1.Task.Builder.class);
    }

    // Construct using google.maps.fleetengine.delivery.v1.Task.newBuilder()
    private Builder() {
      maybeForceBuilderInitialization();
    }

    private Builder(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      super(parent);
      maybeForceBuilderInitialization();
    }
    private void maybeForceBuilderInitialization() {
      if (com.google.protobuf.GeneratedMessageV3
              .alwaysUseFieldBuilders) {
      }
    }
    @java.lang.Override
    public Builder clear() {
      super.clear();
      name_ = "";

      type_ = 0;

      state_ = 0;

      taskOutcome_ = 0;

      if (taskOutcomeTimeBuilder_ == null) {
        taskOutcomeTime_ = null;
      } else {
        taskOutcomeTime_ = null;
        taskOutcomeTimeBuilder_ = null;
      }
      if (taskOutcomeLocationBuilder_ == null) {
        taskOutcomeLocation_ = null;
      } else {
        taskOutcomeLocation_ = null;
        taskOutcomeLocationBuilder_ = null;
      }
      taskOutcomeLocationSource_ = 0;

      trackingId_ = "";

      deliveryVehicleId_ = "";

      if (plannedLocationBuilder_ == null) {
        plannedLocation_ = null;
      } else {
        plannedLocation_ = null;
        plannedLocationBuilder_ = null;
      }
      if (taskDurationBuilder_ == null) {
        taskDuration_ = null;
      } else {
        taskDuration_ = null;
        taskDurationBuilder_ = null;
      }
      if (journeySharingInfoBuilder_ == null) {
        journeySharingInfo_ = null;
      } else {
        journeySharingInfo_ = null;
        journeySharingInfoBuilder_ = null;
      }
      return this;
    }

    @java.lang.Override
    public com.google.protobuf.Descriptors.Descriptor
        getDescriptorForType() {
      return google.maps.fleetengine.delivery.v1.Tasks.internal_static_maps_fleetengine_delivery_v1_Task_descriptor;
    }

    @java.lang.Override
    public google.maps.fleetengine.delivery.v1.Task getDefaultInstanceForType() {
      return google.maps.fleetengine.delivery.v1.Task.getDefaultInstance();
    }

    @java.lang.Override
    public google.maps.fleetengine.delivery.v1.Task build() {
      google.maps.fleetengine.delivery.v1.Task result = buildPartial();
      if (!result.isInitialized()) {
        throw newUninitializedMessageException(result);
      }
      return result;
    }

    @java.lang.Override
    public google.maps.fleetengine.delivery.v1.Task buildPartial() {
      google.maps.fleetengine.delivery.v1.Task result = new google.maps.fleetengine.delivery.v1.Task(this);
      result.name_ = name_;
      result.type_ = type_;
      result.state_ = state_;
      result.taskOutcome_ = taskOutcome_;
      if (taskOutcomeTimeBuilder_ == null) {
        result.taskOutcomeTime_ = taskOutcomeTime_;
      } else {
        result.taskOutcomeTime_ = taskOutcomeTimeBuilder_.build();
      }
      if (taskOutcomeLocationBuilder_ == null) {
        result.taskOutcomeLocation_ = taskOutcomeLocation_;
      } else {
        result.taskOutcomeLocation_ = taskOutcomeLocationBuilder_.build();
      }
      result.taskOutcomeLocationSource_ = taskOutcomeLocationSource_;
      result.trackingId_ = trackingId_;
      result.deliveryVehicleId_ = deliveryVehicleId_;
      if (plannedLocationBuilder_ == null) {
        result.plannedLocation_ = plannedLocation_;
      } else {
        result.plannedLocation_ = plannedLocationBuilder_.build();
      }
      if (taskDurationBuilder_ == null) {
        result.taskDuration_ = taskDuration_;
      } else {
        result.taskDuration_ = taskDurationBuilder_.build();
      }
      if (journeySharingInfoBuilder_ == null) {
        result.journeySharingInfo_ = journeySharingInfo_;
      } else {
        result.journeySharingInfo_ = journeySharingInfoBuilder_.build();
      }
      onBuilt();
      return result;
    }

    @java.lang.Override
    public Builder clone() {
      return super.clone();
    }
    @java.lang.Override
    public Builder setField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        java.lang.Object value) {
      return super.setField(field, value);
    }
    @java.lang.Override
    public Builder clearField(
        com.google.protobuf.Descriptors.FieldDescriptor field) {
      return super.clearField(field);
    }
    @java.lang.Override
    public Builder clearOneof(
        com.google.protobuf.Descriptors.OneofDescriptor oneof) {
      return super.clearOneof(oneof);
    }
    @java.lang.Override
    public Builder setRepeatedField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        int index, java.lang.Object value) {
      return super.setRepeatedField(field, index, value);
    }
    @java.lang.Override
    public Builder addRepeatedField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        java.lang.Object value) {
      return super.addRepeatedField(field, value);
    }
    @java.lang.Override
    public Builder mergeFrom(com.google.protobuf.Message other) {
      if (other instanceof google.maps.fleetengine.delivery.v1.Task) {
        return mergeFrom((google.maps.fleetengine.delivery.v1.Task)other);
      } else {
        super.mergeFrom(other);
        return this;
      }
    }

    public Builder mergeFrom(google.maps.fleetengine.delivery.v1.Task other) {
      if (other == google.maps.fleetengine.delivery.v1.Task.getDefaultInstance()) return this;
      if (!other.getName().isEmpty()) {
        name_ = other.name_;
        onChanged();
      }
      if (other.type_ != 0) {
        setTypeValue(other.getTypeValue());
      }
      if (other.state_ != 0) {
        setStateValue(other.getStateValue());
      }
      if (other.taskOutcome_ != 0) {
        setTaskOutcomeValue(other.getTaskOutcomeValue());
      }
      if (other.hasTaskOutcomeTime()) {
        mergeTaskOutcomeTime(other.getTaskOutcomeTime());
      }
      if (other.hasTaskOutcomeLocation()) {
        mergeTaskOutcomeLocation(other.getTaskOutcomeLocation());
      }
      if (other.taskOutcomeLocationSource_ != 0) {
        setTaskOutcomeLocationSourceValue(other.getTaskOutcomeLocationSourceValue());
      }
      if (!other.getTrackingId().isEmpty()) {
        trackingId_ = other.trackingId_;
        onChanged();
      }
      if (!other.getDeliveryVehicleId().isEmpty()) {
        deliveryVehicleId_ = other.deliveryVehicleId_;
        onChanged();
      }
      if (other.hasPlannedLocation()) {
        mergePlannedLocation(other.getPlannedLocation());
      }
      if (other.hasTaskDuration()) {
        mergeTaskDuration(other.getTaskDuration());
      }
      if (other.hasJourneySharingInfo()) {
        mergeJourneySharingInfo(other.getJourneySharingInfo());
      }
      this.mergeUnknownFields(other.unknownFields);
      onChanged();
      return this;
    }

    @java.lang.Override
    public final boolean isInitialized() {
      return true;
    }

    @java.lang.Override
    public Builder mergeFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      google.maps.fleetengine.delivery.v1.Task parsedMessage = null;
      try {
        parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        parsedMessage = (google.maps.fleetengine.delivery.v1.Task) e.getUnfinishedMessage();
        throw e.unwrapIOException();
      } finally {
        if (parsedMessage != null) {
          mergeFrom(parsedMessage);
        }
      }
      return this;
    }

    private java.lang.Object name_ = "";
    /**
     * <pre>
     * Must be in the format `providers/{provider}/tasks/{task}`.
     * </pre>
     *
     * <code>string name = 1;</code>
     * @return The name.
     */
    public java.lang.String getName() {
      java.lang.Object ref = name_;
      if (!(ref instanceof java.lang.String)) {
        com.google.protobuf.ByteString bs =
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        name_ = s;
        return s;
      } else {
        return (java.lang.String) ref;
      }
    }
    /**
     * <pre>
     * Must be in the format `providers/{provider}/tasks/{task}`.
     * </pre>
     *
     * <code>string name = 1;</code>
     * @return The bytes for name.
     */
    public com.google.protobuf.ByteString
        getNameBytes() {
      java.lang.Object ref = name_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        name_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }
    /**
     * <pre>
     * Must be in the format `providers/{provider}/tasks/{task}`.
     * </pre>
     *
     * <code>string name = 1;</code>
     * @param value The name to set.
     * @return This builder for chaining.
     */
    public Builder setName(
        java.lang.String value) {
      if (value == null) {
    throw new NullPointerException();
  }
  
      name_ = value;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * Must be in the format `providers/{provider}/tasks/{task}`.
     * </pre>
     *
     * <code>string name = 1;</code>
     * @return This builder for chaining.
     */
    public Builder clearName() {
      
      name_ = getDefaultInstance().getName();
      onChanged();
      return this;
    }
    /**
     * <pre>
     * Must be in the format `providers/{provider}/tasks/{task}`.
     * </pre>
     *
     * <code>string name = 1;</code>
     * @param value The bytes for name to set.
     * @return This builder for chaining.
     */
    public Builder setNameBytes(
        com.google.protobuf.ByteString value) {
      if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
      
      name_ = value;
      onChanged();
      return this;
    }

    private int type_ = 0;
    /**
     * <pre>
     * Required. Immutable. Defines the type of the Task. For example, a break or shipment.
     * </pre>
     *
     * <code>.maps.fleetengine.delivery.v1.Task.Type type = 2 [(.google.api.field_behavior) = REQUIRED, (.google.api.field_behavior) = IMMUTABLE];</code>
     * @return The enum numeric value on the wire for type.
     */
    @java.lang.Override public int getTypeValue() {
      return type_;
    }
    /**
     * <pre>
     * Required. Immutable. Defines the type of the Task. For example, a break or shipment.
     * </pre>
     *
     * <code>.maps.fleetengine.delivery.v1.Task.Type type = 2 [(.google.api.field_behavior) = REQUIRED, (.google.api.field_behavior) = IMMUTABLE];</code>
     * @param value The enum numeric value on the wire for type to set.
     * @return This builder for chaining.
     */
    public Builder setTypeValue(int value) {
      
      type_ = value;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * Required. Immutable. Defines the type of the Task. For example, a break or shipment.
     * </pre>
     *
     * <code>.maps.fleetengine.delivery.v1.Task.Type type = 2 [(.google.api.field_behavior) = REQUIRED, (.google.api.field_behavior) = IMMUTABLE];</code>
     * @return The type.
     */
    @java.lang.Override
    public google.maps.fleetengine.delivery.v1.Task.Type getType() {
      @SuppressWarnings("deprecation")
      google.maps.fleetengine.delivery.v1.Task.Type result = google.maps.fleetengine.delivery.v1.Task.Type.valueOf(type_);
      return result == null ? google.maps.fleetengine.delivery.v1.Task.Type.UNRECOGNIZED : result;
    }
    /**
     * <pre>
     * Required. Immutable. Defines the type of the Task. For example, a break or shipment.
     * </pre>
     *
     * <code>.maps.fleetengine.delivery.v1.Task.Type type = 2 [(.google.api.field_behavior) = REQUIRED, (.google.api.field_behavior) = IMMUTABLE];</code>
     * @param value The type to set.
     * @return This builder for chaining.
     */
    public Builder setType(google.maps.fleetengine.delivery.v1.Task.Type value) {
      if (value == null) {
        throw new NullPointerException();
      }
      
      type_ = value.getNumber();
      onChanged();
      return this;
    }
    /**
     * <pre>
     * Required. Immutable. Defines the type of the Task. For example, a break or shipment.
     * </pre>
     *
     * <code>.maps.fleetengine.delivery.v1.Task.Type type = 2 [(.google.api.field_behavior) = REQUIRED, (.google.api.field_behavior) = IMMUTABLE];</code>
     * @return This builder for chaining.
     */
    public Builder clearType() {
      
      type_ = 0;
      onChanged();
      return this;
    }

    private int state_ = 0;
    /**
     * <pre>
     * Required. The current execution state of the Task.
     * </pre>
     *
     * <code>.maps.fleetengine.delivery.v1.Task.State state = 3 [(.google.api.field_behavior) = REQUIRED];</code>
     * @return The enum numeric value on the wire for state.
     */
    @java.lang.Override public int getStateValue() {
      return state_;
    }
    /**
     * <pre>
     * Required. The current execution state of the Task.
     * </pre>
     *
     * <code>.maps.fleetengine.delivery.v1.Task.State state = 3 [(.google.api.field_behavior) = REQUIRED];</code>
     * @param value The enum numeric value on the wire for state to set.
     * @return This builder for chaining.
     */
    public Builder setStateValue(int value) {
      
      state_ = value;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * Required. The current execution state of the Task.
     * </pre>
     *
     * <code>.maps.fleetengine.delivery.v1.Task.State state = 3 [(.google.api.field_behavior) = REQUIRED];</code>
     * @return The state.
     */
    @java.lang.Override
    public google.maps.fleetengine.delivery.v1.Task.State getState() {
      @SuppressWarnings("deprecation")
      google.maps.fleetengine.delivery.v1.Task.State result = google.maps.fleetengine.delivery.v1.Task.State.valueOf(state_);
      return result == null ? google.maps.fleetengine.delivery.v1.Task.State.UNRECOGNIZED : result;
    }
    /**
     * <pre>
     * Required. The current execution state of the Task.
     * </pre>
     *
     * <code>.maps.fleetengine.delivery.v1.Task.State state = 3 [(.google.api.field_behavior) = REQUIRED];</code>
     * @param value The state to set.
     * @return This builder for chaining.
     */
    public Builder setState(google.maps.fleetengine.delivery.v1.Task.State value) {
      if (value == null) {
        throw new NullPointerException();
      }
      
      state_ = value.getNumber();
      onChanged();
      return this;
    }
    /**
     * <pre>
     * Required. The current execution state of the Task.
     * </pre>
     *
     * <code>.maps.fleetengine.delivery.v1.Task.State state = 3 [(.google.api.field_behavior) = REQUIRED];</code>
     * @return This builder for chaining.
     */
    public Builder clearState() {
      
      state_ = 0;
      onChanged();
      return this;
    }

    private int taskOutcome_ = 0;
    /**
     * <pre>
     * The outcome of the Task.
     * </pre>
     *
     * <code>.maps.fleetengine.delivery.v1.Task.TaskOutcome task_outcome = 9;</code>
     * @return The enum numeric value on the wire for taskOutcome.
     */
    @java.lang.Override public int getTaskOutcomeValue() {
      return taskOutcome_;
    }
    /**
     * <pre>
     * The outcome of the Task.
     * </pre>
     *
     * <code>.maps.fleetengine.delivery.v1.Task.TaskOutcome task_outcome = 9;</code>
     * @param value The enum numeric value on the wire for taskOutcome to set.
     * @return This builder for chaining.
     */
    public Builder setTaskOutcomeValue(int value) {
      
      taskOutcome_ = value;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * The outcome of the Task.
     * </pre>
     *
     * <code>.maps.fleetengine.delivery.v1.Task.TaskOutcome task_outcome = 9;</code>
     * @return The taskOutcome.
     */
    @java.lang.Override
    public google.maps.fleetengine.delivery.v1.Task.TaskOutcome getTaskOutcome() {
      @SuppressWarnings("deprecation")
      google.maps.fleetengine.delivery.v1.Task.TaskOutcome result = google.maps.fleetengine.delivery.v1.Task.TaskOutcome.valueOf(taskOutcome_);
      return result == null ? google.maps.fleetengine.delivery.v1.Task.TaskOutcome.UNRECOGNIZED : result;
    }
    /**
     * <pre>
     * The outcome of the Task.
     * </pre>
     *
     * <code>.maps.fleetengine.delivery.v1.Task.TaskOutcome task_outcome = 9;</code>
     * @param value The taskOutcome to set.
     * @return This builder for chaining.
     */
    public Builder setTaskOutcome(google.maps.fleetengine.delivery.v1.Task.TaskOutcome value) {
      if (value == null) {
        throw new NullPointerException();
      }
      
      taskOutcome_ = value.getNumber();
      onChanged();
      return this;
    }
    /**
     * <pre>
     * The outcome of the Task.
     * </pre>
     *
     * <code>.maps.fleetengine.delivery.v1.Task.TaskOutcome task_outcome = 9;</code>
     * @return This builder for chaining.
     */
    public Builder clearTaskOutcome() {
      
      taskOutcome_ = 0;
      onChanged();
      return this;
    }

    private com.google.protobuf.Timestamp taskOutcomeTime_;
    private com.google.protobuf.SingleFieldBuilderV3<
        com.google.protobuf.Timestamp, com.google.protobuf.Timestamp.Builder, com.google.protobuf.TimestampOrBuilder> taskOutcomeTimeBuilder_;
    /**
     * <pre>
     * The timestamp that indicates when the Task's outcome was set by the
     * provider.
     * </pre>
     *
     * <code>.google.protobuf.Timestamp task_outcome_time = 10;</code>
     * @return Whether the taskOutcomeTime field is set.
     */
    public boolean hasTaskOutcomeTime() {
      return taskOutcomeTimeBuilder_ != null || taskOutcomeTime_ != null;
    }
    /**
     * <pre>
     * The timestamp that indicates when the Task's outcome was set by the
     * provider.
     * </pre>
     *
     * <code>.google.protobuf.Timestamp task_outcome_time = 10;</code>
     * @return The taskOutcomeTime.
     */
    public com.google.protobuf.Timestamp getTaskOutcomeTime() {
      if (taskOutcomeTimeBuilder_ == null) {
        return taskOutcomeTime_ == null ? com.google.protobuf.Timestamp.getDefaultInstance() : taskOutcomeTime_;
      } else {
        return taskOutcomeTimeBuilder_.getMessage();
      }
    }
    /**
     * <pre>
     * The timestamp that indicates when the Task's outcome was set by the
     * provider.
     * </pre>
     *
     * <code>.google.protobuf.Timestamp task_outcome_time = 10;</code>
     */
    public Builder setTaskOutcomeTime(com.google.protobuf.Timestamp value) {
      if (taskOutcomeTimeBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        taskOutcomeTime_ = value;
        onChanged();
      } else {
        taskOutcomeTimeBuilder_.setMessage(value);
      }

      return this;
    }
    /**
     * <pre>
     * The timestamp that indicates when the Task's outcome was set by the
     * provider.
     * </pre>
     *
     * <code>.google.protobuf.Timestamp task_outcome_time = 10;</code>
     */
    public Builder setTaskOutcomeTime(
        com.google.protobuf.Timestamp.Builder builderForValue) {
      if (taskOutcomeTimeBuilder_ == null) {
        taskOutcomeTime_ = builderForValue.build();
        onChanged();
      } else {
        taskOutcomeTimeBuilder_.setMessage(builderForValue.build());
      }

      return this;
    }
    /**
     * <pre>
     * The timestamp that indicates when the Task's outcome was set by the
     * provider.
     * </pre>
     *
     * <code>.google.protobuf.Timestamp task_outcome_time = 10;</code>
     */
    public Builder mergeTaskOutcomeTime(com.google.protobuf.Timestamp value) {
      if (taskOutcomeTimeBuilder_ == null) {
        if (taskOutcomeTime_ != null) {
          taskOutcomeTime_ =
            com.google.protobuf.Timestamp.newBuilder(taskOutcomeTime_).mergeFrom(value).buildPartial();
        } else {
          taskOutcomeTime_ = value;
        }
        onChanged();
      } else {
        taskOutcomeTimeBuilder_.mergeFrom(value);
      }

      return this;
    }
    /**
     * <pre>
     * The timestamp that indicates when the Task's outcome was set by the
     * provider.
     * </pre>
     *
     * <code>.google.protobuf.Timestamp task_outcome_time = 10;</code>
     */
    public Builder clearTaskOutcomeTime() {
      if (taskOutcomeTimeBuilder_ == null) {
        taskOutcomeTime_ = null;
        onChanged();
      } else {
        taskOutcomeTime_ = null;
        taskOutcomeTimeBuilder_ = null;
      }

      return this;
    }
    /**
     * <pre>
     * The timestamp that indicates when the Task's outcome was set by the
     * provider.
     * </pre>
     *
     * <code>.google.protobuf.Timestamp task_outcome_time = 10;</code>
     */
    public com.google.protobuf.Timestamp.Builder getTaskOutcomeTimeBuilder() {
      
      onChanged();
      return getTaskOutcomeTimeFieldBuilder().getBuilder();
    }
    /**
     * <pre>
     * The timestamp that indicates when the Task's outcome was set by the
     * provider.
     * </pre>
     *
     * <code>.google.protobuf.Timestamp task_outcome_time = 10;</code>
     */
    public com.google.protobuf.TimestampOrBuilder getTaskOutcomeTimeOrBuilder() {
      if (taskOutcomeTimeBuilder_ != null) {
        return taskOutcomeTimeBuilder_.getMessageOrBuilder();
      } else {
        return taskOutcomeTime_ == null ?
            com.google.protobuf.Timestamp.getDefaultInstance() : taskOutcomeTime_;
      }
    }
    /**
     * <pre>
     * The timestamp that indicates when the Task's outcome was set by the
     * provider.
     * </pre>
     *
     * <code>.google.protobuf.Timestamp task_outcome_time = 10;</code>
     */
    private com.google.protobuf.SingleFieldBuilderV3<
        com.google.protobuf.Timestamp, com.google.protobuf.Timestamp.Builder, com.google.protobuf.TimestampOrBuilder> 
        getTaskOutcomeTimeFieldBuilder() {
      if (taskOutcomeTimeBuilder_ == null) {
        taskOutcomeTimeBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
            com.google.protobuf.Timestamp, com.google.protobuf.Timestamp.Builder, com.google.protobuf.TimestampOrBuilder>(
                getTaskOutcomeTime(),
                getParentForChildren(),
                isClean());
        taskOutcomeTime_ = null;
      }
      return taskOutcomeTimeBuilder_;
    }

    private google.maps.fleetengine.delivery.v1.LocationInfo taskOutcomeLocation_;
    private com.google.protobuf.SingleFieldBuilderV3<
        google.maps.fleetengine.delivery.v1.LocationInfo, google.maps.fleetengine.delivery.v1.LocationInfo.Builder, google.maps.fleetengine.delivery.v1.LocationInfoOrBuilder> taskOutcomeLocationBuilder_;
    /**
     * <pre>
     * The location where the Task's outcome was set. This value is updated as
     * part of `UpdateTask`. If this value isn't explicitly updated by the
     * provider, then Fleet Engine populates it by default with the last known
     * vehicle location (the *raw* location).
     * </pre>
     *
     * <code>.maps.fleetengine.delivery.v1.LocationInfo task_outcome_location = 11;</code>
     * @return Whether the taskOutcomeLocation field is set.
     */
    public boolean hasTaskOutcomeLocation() {
      return taskOutcomeLocationBuilder_ != null || taskOutcomeLocation_ != null;
    }
    /**
     * <pre>
     * The location where the Task's outcome was set. This value is updated as
     * part of `UpdateTask`. If this value isn't explicitly updated by the
     * provider, then Fleet Engine populates it by default with the last known
     * vehicle location (the *raw* location).
     * </pre>
     *
     * <code>.maps.fleetengine.delivery.v1.LocationInfo task_outcome_location = 11;</code>
     * @return The taskOutcomeLocation.
     */
    public google.maps.fleetengine.delivery.v1.LocationInfo getTaskOutcomeLocation() {
      if (taskOutcomeLocationBuilder_ == null) {
        return taskOutcomeLocation_ == null ? google.maps.fleetengine.delivery.v1.LocationInfo.getDefaultInstance() : taskOutcomeLocation_;
      } else {
        return taskOutcomeLocationBuilder_.getMessage();
      }
    }
    /**
     * <pre>
     * The location where the Task's outcome was set. This value is updated as
     * part of `UpdateTask`. If this value isn't explicitly updated by the
     * provider, then Fleet Engine populates it by default with the last known
     * vehicle location (the *raw* location).
     * </pre>
     *
     * <code>.maps.fleetengine.delivery.v1.LocationInfo task_outcome_location = 11;</code>
     */
    public Builder setTaskOutcomeLocation(google.maps.fleetengine.delivery.v1.LocationInfo value) {
      if (taskOutcomeLocationBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        taskOutcomeLocation_ = value;
        onChanged();
      } else {
        taskOutcomeLocationBuilder_.setMessage(value);
      }

      return this;
    }
    /**
     * <pre>
     * The location where the Task's outcome was set. This value is updated as
     * part of `UpdateTask`. If this value isn't explicitly updated by the
     * provider, then Fleet Engine populates it by default with the last known
     * vehicle location (the *raw* location).
     * </pre>
     *
     * <code>.maps.fleetengine.delivery.v1.LocationInfo task_outcome_location = 11;</code>
     */
    public Builder setTaskOutcomeLocation(
        google.maps.fleetengine.delivery.v1.LocationInfo.Builder builderForValue) {
      if (taskOutcomeLocationBuilder_ == null) {
        taskOutcomeLocation_ = builderForValue.build();
        onChanged();
      } else {
        taskOutcomeLocationBuilder_.setMessage(builderForValue.build());
      }

      return this;
    }
    /**
     * <pre>
     * The location where the Task's outcome was set. This value is updated as
     * part of `UpdateTask`. If this value isn't explicitly updated by the
     * provider, then Fleet Engine populates it by default with the last known
     * vehicle location (the *raw* location).
     * </pre>
     *
     * <code>.maps.fleetengine.delivery.v1.LocationInfo task_outcome_location = 11;</code>
     */
    public Builder mergeTaskOutcomeLocation(google.maps.fleetengine.delivery.v1.LocationInfo value) {
      if (taskOutcomeLocationBuilder_ == null) {
        if (taskOutcomeLocation_ != null) {
          taskOutcomeLocation_ =
            google.maps.fleetengine.delivery.v1.LocationInfo.newBuilder(taskOutcomeLocation_).mergeFrom(value).buildPartial();
        } else {
          taskOutcomeLocation_ = value;
        }
        onChanged();
      } else {
        taskOutcomeLocationBuilder_.mergeFrom(value);
      }

      return this;
    }
    /**
     * <pre>
     * The location where the Task's outcome was set. This value is updated as
     * part of `UpdateTask`. If this value isn't explicitly updated by the
     * provider, then Fleet Engine populates it by default with the last known
     * vehicle location (the *raw* location).
     * </pre>
     *
     * <code>.maps.fleetengine.delivery.v1.LocationInfo task_outcome_location = 11;</code>
     */
    public Builder clearTaskOutcomeLocation() {
      if (taskOutcomeLocationBuilder_ == null) {
        taskOutcomeLocation_ = null;
        onChanged();
      } else {
        taskOutcomeLocation_ = null;
        taskOutcomeLocationBuilder_ = null;
      }

      return this;
    }
    /**
     * <pre>
     * The location where the Task's outcome was set. This value is updated as
     * part of `UpdateTask`. If this value isn't explicitly updated by the
     * provider, then Fleet Engine populates it by default with the last known
     * vehicle location (the *raw* location).
     * </pre>
     *
     * <code>.maps.fleetengine.delivery.v1.LocationInfo task_outcome_location = 11;</code>
     */
    public google.maps.fleetengine.delivery.v1.LocationInfo.Builder getTaskOutcomeLocationBuilder() {
      
      onChanged();
      return getTaskOutcomeLocationFieldBuilder().getBuilder();
    }
    /**
     * <pre>
     * The location where the Task's outcome was set. This value is updated as
     * part of `UpdateTask`. If this value isn't explicitly updated by the
     * provider, then Fleet Engine populates it by default with the last known
     * vehicle location (the *raw* location).
     * </pre>
     *
     * <code>.maps.fleetengine.delivery.v1.LocationInfo task_outcome_location = 11;</code>
     */
    public google.maps.fleetengine.delivery.v1.LocationInfoOrBuilder getTaskOutcomeLocationOrBuilder() {
      if (taskOutcomeLocationBuilder_ != null) {
        return taskOutcomeLocationBuilder_.getMessageOrBuilder();
      } else {
        return taskOutcomeLocation_ == null ?
            google.maps.fleetengine.delivery.v1.LocationInfo.getDefaultInstance() : taskOutcomeLocation_;
      }
    }
    /**
     * <pre>
     * The location where the Task's outcome was set. This value is updated as
     * part of `UpdateTask`. If this value isn't explicitly updated by the
     * provider, then Fleet Engine populates it by default with the last known
     * vehicle location (the *raw* location).
     * </pre>
     *
     * <code>.maps.fleetengine.delivery.v1.LocationInfo task_outcome_location = 11;</code>
     */
    private com.google.protobuf.SingleFieldBuilderV3<
        google.maps.fleetengine.delivery.v1.LocationInfo, google.maps.fleetengine.delivery.v1.LocationInfo.Builder, google.maps.fleetengine.delivery.v1.LocationInfoOrBuilder> 
        getTaskOutcomeLocationFieldBuilder() {
      if (taskOutcomeLocationBuilder_ == null) {
        taskOutcomeLocationBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
            google.maps.fleetengine.delivery.v1.LocationInfo, google.maps.fleetengine.delivery.v1.LocationInfo.Builder, google.maps.fleetengine.delivery.v1.LocationInfoOrBuilder>(
                getTaskOutcomeLocation(),
                getParentForChildren(),
                isClean());
        taskOutcomeLocation_ = null;
      }
      return taskOutcomeLocationBuilder_;
    }

    private int taskOutcomeLocationSource_ = 0;
    /**
     * <pre>
     * Indicates where the value of the `task_outcome_location` came from.
     * </pre>
     *
     * <code>.maps.fleetengine.delivery.v1.Task.TaskOutcomeLocationSource task_outcome_location_source = 12;</code>
     * @return The enum numeric value on the wire for taskOutcomeLocationSource.
     */
    @java.lang.Override public int getTaskOutcomeLocationSourceValue() {
      return taskOutcomeLocationSource_;
    }
    /**
     * <pre>
     * Indicates where the value of the `task_outcome_location` came from.
     * </pre>
     *
     * <code>.maps.fleetengine.delivery.v1.Task.TaskOutcomeLocationSource task_outcome_location_source = 12;</code>
     * @param value The enum numeric value on the wire for taskOutcomeLocationSource to set.
     * @return This builder for chaining.
     */
    public Builder setTaskOutcomeLocationSourceValue(int value) {
      
      taskOutcomeLocationSource_ = value;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * Indicates where the value of the `task_outcome_location` came from.
     * </pre>
     *
     * <code>.maps.fleetengine.delivery.v1.Task.TaskOutcomeLocationSource task_outcome_location_source = 12;</code>
     * @return The taskOutcomeLocationSource.
     */
    @java.lang.Override
    public google.maps.fleetengine.delivery.v1.Task.TaskOutcomeLocationSource getTaskOutcomeLocationSource() {
      @SuppressWarnings("deprecation")
      google.maps.fleetengine.delivery.v1.Task.TaskOutcomeLocationSource result = google.maps.fleetengine.delivery.v1.Task.TaskOutcomeLocationSource.valueOf(taskOutcomeLocationSource_);
      return result == null ? google.maps.fleetengine.delivery.v1.Task.TaskOutcomeLocationSource.UNRECOGNIZED : result;
    }
    /**
     * <pre>
     * Indicates where the value of the `task_outcome_location` came from.
     * </pre>
     *
     * <code>.maps.fleetengine.delivery.v1.Task.TaskOutcomeLocationSource task_outcome_location_source = 12;</code>
     * @param value The taskOutcomeLocationSource to set.
     * @return This builder for chaining.
     */
    public Builder setTaskOutcomeLocationSource(google.maps.fleetengine.delivery.v1.Task.TaskOutcomeLocationSource value) {
      if (value == null) {
        throw new NullPointerException();
      }
      
      taskOutcomeLocationSource_ = value.getNumber();
      onChanged();
      return this;
    }
    /**
     * <pre>
     * Indicates where the value of the `task_outcome_location` came from.
     * </pre>
     *
     * <code>.maps.fleetengine.delivery.v1.Task.TaskOutcomeLocationSource task_outcome_location_source = 12;</code>
     * @return This builder for chaining.
     */
    public Builder clearTaskOutcomeLocationSource() {
      
      taskOutcomeLocationSource_ = 0;
      onChanged();
      return this;
    }

    private java.lang.Object trackingId_ = "";
    /**
     * <pre>
     * Immutable. This field facilitates the storing of an ID so you can avoid using a
     * complicated mapping. You cannot set `tracking_id` for Tasks of type
     * `UNAVAILABLE` and `SCHEDULED_STOP`. These IDs are subject to the
     * following restrictions:
     * * Must be a valid Unicode string.
     * * Limited to a maximum length of 64 characters.
     * * Normalized according to Unicode Normalization Form C
     * (http://www.unicode.org/reports/tr15/).
     * * May not contain any of the following ASCII characters: '/', ':', '?',
     * ',', or '#'.
     * </pre>
     *
     * <code>string tracking_id = 4 [(.google.api.field_behavior) = IMMUTABLE];</code>
     * @return The trackingId.
     */
    public java.lang.String getTrackingId() {
      java.lang.Object ref = trackingId_;
      if (!(ref instanceof java.lang.String)) {
        com.google.protobuf.ByteString bs =
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        trackingId_ = s;
        return s;
      } else {
        return (java.lang.String) ref;
      }
    }
    /**
     * <pre>
     * Immutable. This field facilitates the storing of an ID so you can avoid using a
     * complicated mapping. You cannot set `tracking_id` for Tasks of type
     * `UNAVAILABLE` and `SCHEDULED_STOP`. These IDs are subject to the
     * following restrictions:
     * * Must be a valid Unicode string.
     * * Limited to a maximum length of 64 characters.
     * * Normalized according to Unicode Normalization Form C
     * (http://www.unicode.org/reports/tr15/).
     * * May not contain any of the following ASCII characters: '/', ':', '?',
     * ',', or '#'.
     * </pre>
     *
     * <code>string tracking_id = 4 [(.google.api.field_behavior) = IMMUTABLE];</code>
     * @return The bytes for trackingId.
     */
    public com.google.protobuf.ByteString
        getTrackingIdBytes() {
      java.lang.Object ref = trackingId_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        trackingId_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }
    /**
     * <pre>
     * Immutable. This field facilitates the storing of an ID so you can avoid using a
     * complicated mapping. You cannot set `tracking_id` for Tasks of type
     * `UNAVAILABLE` and `SCHEDULED_STOP`. These IDs are subject to the
     * following restrictions:
     * * Must be a valid Unicode string.
     * * Limited to a maximum length of 64 characters.
     * * Normalized according to Unicode Normalization Form C
     * (http://www.unicode.org/reports/tr15/).
     * * May not contain any of the following ASCII characters: '/', ':', '?',
     * ',', or '#'.
     * </pre>
     *
     * <code>string tracking_id = 4 [(.google.api.field_behavior) = IMMUTABLE];</code>
     * @param value The trackingId to set.
     * @return This builder for chaining.
     */
    public Builder setTrackingId(
        java.lang.String value) {
      if (value == null) {
    throw new NullPointerException();
  }
  
      trackingId_ = value;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * Immutable. This field facilitates the storing of an ID so you can avoid using a
     * complicated mapping. You cannot set `tracking_id` for Tasks of type
     * `UNAVAILABLE` and `SCHEDULED_STOP`. These IDs are subject to the
     * following restrictions:
     * * Must be a valid Unicode string.
     * * Limited to a maximum length of 64 characters.
     * * Normalized according to Unicode Normalization Form C
     * (http://www.unicode.org/reports/tr15/).
     * * May not contain any of the following ASCII characters: '/', ':', '?',
     * ',', or '#'.
     * </pre>
     *
     * <code>string tracking_id = 4 [(.google.api.field_behavior) = IMMUTABLE];</code>
     * @return This builder for chaining.
     */
    public Builder clearTrackingId() {
      
      trackingId_ = getDefaultInstance().getTrackingId();
      onChanged();
      return this;
    }
    /**
     * <pre>
     * Immutable. This field facilitates the storing of an ID so you can avoid using a
     * complicated mapping. You cannot set `tracking_id` for Tasks of type
     * `UNAVAILABLE` and `SCHEDULED_STOP`. These IDs are subject to the
     * following restrictions:
     * * Must be a valid Unicode string.
     * * Limited to a maximum length of 64 characters.
     * * Normalized according to Unicode Normalization Form C
     * (http://www.unicode.org/reports/tr15/).
     * * May not contain any of the following ASCII characters: '/', ':', '?',
     * ',', or '#'.
     * </pre>
     *
     * <code>string tracking_id = 4 [(.google.api.field_behavior) = IMMUTABLE];</code>
     * @param value The bytes for trackingId to set.
     * @return This builder for chaining.
     */
    public Builder setTrackingIdBytes(
        com.google.protobuf.ByteString value) {
      if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
      
      trackingId_ = value;
      onChanged();
      return this;
    }

    private java.lang.Object deliveryVehicleId_ = "";
    /**
     * <pre>
     * Output only. The ID of the vehicle that is executing this Task. Delivery Vehicle IDs are
     * subject to the following restrictions:
     * * Must be a valid Unicode string.
     * * Limited to a maximum length of 64 characters.
     * * Normalized according to Unicode Normalization Form C
     * (http://www.unicode.org/reports/tr15/).
     * * May not contain any of the following ASCII characters: '/', ':', '?',
     * ',', or '#'.
     * </pre>
     *
     * <code>string delivery_vehicle_id = 5 [(.google.api.field_behavior) = OUTPUT_ONLY];</code>
     * @return The deliveryVehicleId.
     */
    public java.lang.String getDeliveryVehicleId() {
      java.lang.Object ref = deliveryVehicleId_;
      if (!(ref instanceof java.lang.String)) {
        com.google.protobuf.ByteString bs =
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        deliveryVehicleId_ = s;
        return s;
      } else {
        return (java.lang.String) ref;
      }
    }
    /**
     * <pre>
     * Output only. The ID of the vehicle that is executing this Task. Delivery Vehicle IDs are
     * subject to the following restrictions:
     * * Must be a valid Unicode string.
     * * Limited to a maximum length of 64 characters.
     * * Normalized according to Unicode Normalization Form C
     * (http://www.unicode.org/reports/tr15/).
     * * May not contain any of the following ASCII characters: '/', ':', '?',
     * ',', or '#'.
     * </pre>
     *
     * <code>string delivery_vehicle_id = 5 [(.google.api.field_behavior) = OUTPUT_ONLY];</code>
     * @return The bytes for deliveryVehicleId.
     */
    public com.google.protobuf.ByteString
        getDeliveryVehicleIdBytes() {
      java.lang.Object ref = deliveryVehicleId_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        deliveryVehicleId_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }
    /**
     * <pre>
     * Output only. The ID of the vehicle that is executing this Task. Delivery Vehicle IDs are
     * subject to the following restrictions:
     * * Must be a valid Unicode string.
     * * Limited to a maximum length of 64 characters.
     * * Normalized according to Unicode Normalization Form C
     * (http://www.unicode.org/reports/tr15/).
     * * May not contain any of the following ASCII characters: '/', ':', '?',
     * ',', or '#'.
     * </pre>
     *
     * <code>string delivery_vehicle_id = 5 [(.google.api.field_behavior) = OUTPUT_ONLY];</code>
     * @param value The deliveryVehicleId to set.
     * @return This builder for chaining.
     */
    public Builder setDeliveryVehicleId(
        java.lang.String value) {
      if (value == null) {
    throw new NullPointerException();
  }
  
      deliveryVehicleId_ = value;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * Output only. The ID of the vehicle that is executing this Task. Delivery Vehicle IDs are
     * subject to the following restrictions:
     * * Must be a valid Unicode string.
     * * Limited to a maximum length of 64 characters.
     * * Normalized according to Unicode Normalization Form C
     * (http://www.unicode.org/reports/tr15/).
     * * May not contain any of the following ASCII characters: '/', ':', '?',
     * ',', or '#'.
     * </pre>
     *
     * <code>string delivery_vehicle_id = 5 [(.google.api.field_behavior) = OUTPUT_ONLY];</code>
     * @return This builder for chaining.
     */
    public Builder clearDeliveryVehicleId() {
      
      deliveryVehicleId_ = getDefaultInstance().getDeliveryVehicleId();
      onChanged();
      return this;
    }
    /**
     * <pre>
     * Output only. The ID of the vehicle that is executing this Task. Delivery Vehicle IDs are
     * subject to the following restrictions:
     * * Must be a valid Unicode string.
     * * Limited to a maximum length of 64 characters.
     * * Normalized according to Unicode Normalization Form C
     * (http://www.unicode.org/reports/tr15/).
     * * May not contain any of the following ASCII characters: '/', ':', '?',
     * ',', or '#'.
     * </pre>
     *
     * <code>string delivery_vehicle_id = 5 [(.google.api.field_behavior) = OUTPUT_ONLY];</code>
     * @param value The bytes for deliveryVehicleId to set.
     * @return This builder for chaining.
     */
    public Builder setDeliveryVehicleIdBytes(
        com.google.protobuf.ByteString value) {
      if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
      
      deliveryVehicleId_ = value;
      onChanged();
      return this;
    }

    private google.maps.fleetengine.delivery.v1.LocationInfo plannedLocation_;
    private com.google.protobuf.SingleFieldBuilderV3<
        google.maps.fleetengine.delivery.v1.LocationInfo, google.maps.fleetengine.delivery.v1.LocationInfo.Builder, google.maps.fleetengine.delivery.v1.LocationInfoOrBuilder> plannedLocationBuilder_;
    /**
     * <pre>
     * Immutable. The location where the Task will be completed.
     * Optional for `UNAVAILABLE` Tasks, but required for all other Tasks.
     * </pre>
     *
     * <code>.maps.fleetengine.delivery.v1.LocationInfo planned_location = 6 [(.google.api.field_behavior) = IMMUTABLE];</code>
     * @return Whether the plannedLocation field is set.
     */
    public boolean hasPlannedLocation() {
      return plannedLocationBuilder_ != null || plannedLocation_ != null;
    }
    /**
     * <pre>
     * Immutable. The location where the Task will be completed.
     * Optional for `UNAVAILABLE` Tasks, but required for all other Tasks.
     * </pre>
     *
     * <code>.maps.fleetengine.delivery.v1.LocationInfo planned_location = 6 [(.google.api.field_behavior) = IMMUTABLE];</code>
     * @return The plannedLocation.
     */
    public google.maps.fleetengine.delivery.v1.LocationInfo getPlannedLocation() {
      if (plannedLocationBuilder_ == null) {
        return plannedLocation_ == null ? google.maps.fleetengine.delivery.v1.LocationInfo.getDefaultInstance() : plannedLocation_;
      } else {
        return plannedLocationBuilder_.getMessage();
      }
    }
    /**
     * <pre>
     * Immutable. The location where the Task will be completed.
     * Optional for `UNAVAILABLE` Tasks, but required for all other Tasks.
     * </pre>
     *
     * <code>.maps.fleetengine.delivery.v1.LocationInfo planned_location = 6 [(.google.api.field_behavior) = IMMUTABLE];</code>
     */
    public Builder setPlannedLocation(google.maps.fleetengine.delivery.v1.LocationInfo value) {
      if (plannedLocationBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        plannedLocation_ = value;
        onChanged();
      } else {
        plannedLocationBuilder_.setMessage(value);
      }

      return this;
    }
    /**
     * <pre>
     * Immutable. The location where the Task will be completed.
     * Optional for `UNAVAILABLE` Tasks, but required for all other Tasks.
     * </pre>
     *
     * <code>.maps.fleetengine.delivery.v1.LocationInfo planned_location = 6 [(.google.api.field_behavior) = IMMUTABLE];</code>
     */
    public Builder setPlannedLocation(
        google.maps.fleetengine.delivery.v1.LocationInfo.Builder builderForValue) {
      if (plannedLocationBuilder_ == null) {
        plannedLocation_ = builderForValue.build();
        onChanged();
      } else {
        plannedLocationBuilder_.setMessage(builderForValue.build());
      }

      return this;
    }
    /**
     * <pre>
     * Immutable. The location where the Task will be completed.
     * Optional for `UNAVAILABLE` Tasks, but required for all other Tasks.
     * </pre>
     *
     * <code>.maps.fleetengine.delivery.v1.LocationInfo planned_location = 6 [(.google.api.field_behavior) = IMMUTABLE];</code>
     */
    public Builder mergePlannedLocation(google.maps.fleetengine.delivery.v1.LocationInfo value) {
      if (plannedLocationBuilder_ == null) {
        if (plannedLocation_ != null) {
          plannedLocation_ =
            google.maps.fleetengine.delivery.v1.LocationInfo.newBuilder(plannedLocation_).mergeFrom(value).buildPartial();
        } else {
          plannedLocation_ = value;
        }
        onChanged();
      } else {
        plannedLocationBuilder_.mergeFrom(value);
      }

      return this;
    }
    /**
     * <pre>
     * Immutable. The location where the Task will be completed.
     * Optional for `UNAVAILABLE` Tasks, but required for all other Tasks.
     * </pre>
     *
     * <code>.maps.fleetengine.delivery.v1.LocationInfo planned_location = 6 [(.google.api.field_behavior) = IMMUTABLE];</code>
     */
    public Builder clearPlannedLocation() {
      if (plannedLocationBuilder_ == null) {
        plannedLocation_ = null;
        onChanged();
      } else {
        plannedLocation_ = null;
        plannedLocationBuilder_ = null;
      }

      return this;
    }
    /**
     * <pre>
     * Immutable. The location where the Task will be completed.
     * Optional for `UNAVAILABLE` Tasks, but required for all other Tasks.
     * </pre>
     *
     * <code>.maps.fleetengine.delivery.v1.LocationInfo planned_location = 6 [(.google.api.field_behavior) = IMMUTABLE];</code>
     */
    public google.maps.fleetengine.delivery.v1.LocationInfo.Builder getPlannedLocationBuilder() {
      
      onChanged();
      return getPlannedLocationFieldBuilder().getBuilder();
    }
    /**
     * <pre>
     * Immutable. The location where the Task will be completed.
     * Optional for `UNAVAILABLE` Tasks, but required for all other Tasks.
     * </pre>
     *
     * <code>.maps.fleetengine.delivery.v1.LocationInfo planned_location = 6 [(.google.api.field_behavior) = IMMUTABLE];</code>
     */
    public google.maps.fleetengine.delivery.v1.LocationInfoOrBuilder getPlannedLocationOrBuilder() {
      if (plannedLocationBuilder_ != null) {
        return plannedLocationBuilder_.getMessageOrBuilder();
      } else {
        return plannedLocation_ == null ?
            google.maps.fleetengine.delivery.v1.LocationInfo.getDefaultInstance() : plannedLocation_;
      }
    }
    /**
     * <pre>
     * Immutable. The location where the Task will be completed.
     * Optional for `UNAVAILABLE` Tasks, but required for all other Tasks.
     * </pre>
     *
     * <code>.maps.fleetengine.delivery.v1.LocationInfo planned_location = 6 [(.google.api.field_behavior) = IMMUTABLE];</code>
     */
    private com.google.protobuf.SingleFieldBuilderV3<
        google.maps.fleetengine.delivery.v1.LocationInfo, google.maps.fleetengine.delivery.v1.LocationInfo.Builder, google.maps.fleetengine.delivery.v1.LocationInfoOrBuilder> 
        getPlannedLocationFieldBuilder() {
      if (plannedLocationBuilder_ == null) {
        plannedLocationBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
            google.maps.fleetengine.delivery.v1.LocationInfo, google.maps.fleetengine.delivery.v1.LocationInfo.Builder, google.maps.fleetengine.delivery.v1.LocationInfoOrBuilder>(
                getPlannedLocation(),
                getParentForChildren(),
                isClean());
        plannedLocation_ = null;
      }
      return plannedLocationBuilder_;
    }

    private com.google.protobuf.Duration taskDuration_;
    private com.google.protobuf.SingleFieldBuilderV3<
        com.google.protobuf.Duration, com.google.protobuf.Duration.Builder, com.google.protobuf.DurationOrBuilder> taskDurationBuilder_;
    /**
     * <pre>
     * Required. Immutable. The time needed to execute a Task at this location.
     * </pre>
     *
     * <code>.google.protobuf.Duration task_duration = 7 [(.google.api.field_behavior) = REQUIRED, (.google.api.field_behavior) = IMMUTABLE];</code>
     * @return Whether the taskDuration field is set.
     */
    public boolean hasTaskDuration() {
      return taskDurationBuilder_ != null || taskDuration_ != null;
    }
    /**
     * <pre>
     * Required. Immutable. The time needed to execute a Task at this location.
     * </pre>
     *
     * <code>.google.protobuf.Duration task_duration = 7 [(.google.api.field_behavior) = REQUIRED, (.google.api.field_behavior) = IMMUTABLE];</code>
     * @return The taskDuration.
     */
    public com.google.protobuf.Duration getTaskDuration() {
      if (taskDurationBuilder_ == null) {
        return taskDuration_ == null ? com.google.protobuf.Duration.getDefaultInstance() : taskDuration_;
      } else {
        return taskDurationBuilder_.getMessage();
      }
    }
    /**
     * <pre>
     * Required. Immutable. The time needed to execute a Task at this location.
     * </pre>
     *
     * <code>.google.protobuf.Duration task_duration = 7 [(.google.api.field_behavior) = REQUIRED, (.google.api.field_behavior) = IMMUTABLE];</code>
     */
    public Builder setTaskDuration(com.google.protobuf.Duration value) {
      if (taskDurationBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        taskDuration_ = value;
        onChanged();
      } else {
        taskDurationBuilder_.setMessage(value);
      }

      return this;
    }
    /**
     * <pre>
     * Required. Immutable. The time needed to execute a Task at this location.
     * </pre>
     *
     * <code>.google.protobuf.Duration task_duration = 7 [(.google.api.field_behavior) = REQUIRED, (.google.api.field_behavior) = IMMUTABLE];</code>
     */
    public Builder setTaskDuration(
        com.google.protobuf.Duration.Builder builderForValue) {
      if (taskDurationBuilder_ == null) {
        taskDuration_ = builderForValue.build();
        onChanged();
      } else {
        taskDurationBuilder_.setMessage(builderForValue.build());
      }

      return this;
    }
    /**
     * <pre>
     * Required. Immutable. The time needed to execute a Task at this location.
     * </pre>
     *
     * <code>.google.protobuf.Duration task_duration = 7 [(.google.api.field_behavior) = REQUIRED, (.google.api.field_behavior) = IMMUTABLE];</code>
     */
    public Builder mergeTaskDuration(com.google.protobuf.Duration value) {
      if (taskDurationBuilder_ == null) {
        if (taskDuration_ != null) {
          taskDuration_ =
            com.google.protobuf.Duration.newBuilder(taskDuration_).mergeFrom(value).buildPartial();
        } else {
          taskDuration_ = value;
        }
        onChanged();
      } else {
        taskDurationBuilder_.mergeFrom(value);
      }

      return this;
    }
    /**
     * <pre>
     * Required. Immutable. The time needed to execute a Task at this location.
     * </pre>
     *
     * <code>.google.protobuf.Duration task_duration = 7 [(.google.api.field_behavior) = REQUIRED, (.google.api.field_behavior) = IMMUTABLE];</code>
     */
    public Builder clearTaskDuration() {
      if (taskDurationBuilder_ == null) {
        taskDuration_ = null;
        onChanged();
      } else {
        taskDuration_ = null;
        taskDurationBuilder_ = null;
      }

      return this;
    }
    /**
     * <pre>
     * Required. Immutable. The time needed to execute a Task at this location.
     * </pre>
     *
     * <code>.google.protobuf.Duration task_duration = 7 [(.google.api.field_behavior) = REQUIRED, (.google.api.field_behavior) = IMMUTABLE];</code>
     */
    public com.google.protobuf.Duration.Builder getTaskDurationBuilder() {
      
      onChanged();
      return getTaskDurationFieldBuilder().getBuilder();
    }
    /**
     * <pre>
     * Required. Immutable. The time needed to execute a Task at this location.
     * </pre>
     *
     * <code>.google.protobuf.Duration task_duration = 7 [(.google.api.field_behavior) = REQUIRED, (.google.api.field_behavior) = IMMUTABLE];</code>
     */
    public com.google.protobuf.DurationOrBuilder getTaskDurationOrBuilder() {
      if (taskDurationBuilder_ != null) {
        return taskDurationBuilder_.getMessageOrBuilder();
      } else {
        return taskDuration_ == null ?
            com.google.protobuf.Duration.getDefaultInstance() : taskDuration_;
      }
    }
    /**
     * <pre>
     * Required. Immutable. The time needed to execute a Task at this location.
     * </pre>
     *
     * <code>.google.protobuf.Duration task_duration = 7 [(.google.api.field_behavior) = REQUIRED, (.google.api.field_behavior) = IMMUTABLE];</code>
     */
    private com.google.protobuf.SingleFieldBuilderV3<
        com.google.protobuf.Duration, com.google.protobuf.Duration.Builder, com.google.protobuf.DurationOrBuilder> 
        getTaskDurationFieldBuilder() {
      if (taskDurationBuilder_ == null) {
        taskDurationBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
            com.google.protobuf.Duration, com.google.protobuf.Duration.Builder, com.google.protobuf.DurationOrBuilder>(
                getTaskDuration(),
                getParentForChildren(),
                isClean());
        taskDuration_ = null;
      }
      return taskDurationBuilder_;
    }

    private google.maps.fleetengine.delivery.v1.Task.JourneySharingInfo journeySharingInfo_;
    private com.google.protobuf.SingleFieldBuilderV3<
        google.maps.fleetengine.delivery.v1.Task.JourneySharingInfo, google.maps.fleetengine.delivery.v1.Task.JourneySharingInfo.Builder, google.maps.fleetengine.delivery.v1.Task.JourneySharingInfoOrBuilder> journeySharingInfoBuilder_;
    /**
     * <pre>
     * Output only. Journey sharing-specific fields. Not populated when state is `CLOSED`.
     * </pre>
     *
     * <code>.maps.fleetengine.delivery.v1.Task.JourneySharingInfo journey_sharing_info = 8 [(.google.api.field_behavior) = OUTPUT_ONLY];</code>
     * @return Whether the journeySharingInfo field is set.
     */
    public boolean hasJourneySharingInfo() {
      return journeySharingInfoBuilder_ != null || journeySharingInfo_ != null;
    }
    /**
     * <pre>
     * Output only. Journey sharing-specific fields. Not populated when state is `CLOSED`.
     * </pre>
     *
     * <code>.maps.fleetengine.delivery.v1.Task.JourneySharingInfo journey_sharing_info = 8 [(.google.api.field_behavior) = OUTPUT_ONLY];</code>
     * @return The journeySharingInfo.
     */
    public google.maps.fleetengine.delivery.v1.Task.JourneySharingInfo getJourneySharingInfo() {
      if (journeySharingInfoBuilder_ == null) {
        return journeySharingInfo_ == null ? google.maps.fleetengine.delivery.v1.Task.JourneySharingInfo.getDefaultInstance() : journeySharingInfo_;
      } else {
        return journeySharingInfoBuilder_.getMessage();
      }
    }
    /**
     * <pre>
     * Output only. Journey sharing-specific fields. Not populated when state is `CLOSED`.
     * </pre>
     *
     * <code>.maps.fleetengine.delivery.v1.Task.JourneySharingInfo journey_sharing_info = 8 [(.google.api.field_behavior) = OUTPUT_ONLY];</code>
     */
    public Builder setJourneySharingInfo(google.maps.fleetengine.delivery.v1.Task.JourneySharingInfo value) {
      if (journeySharingInfoBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        journeySharingInfo_ = value;
        onChanged();
      } else {
        journeySharingInfoBuilder_.setMessage(value);
      }

      return this;
    }
    /**
     * <pre>
     * Output only. Journey sharing-specific fields. Not populated when state is `CLOSED`.
     * </pre>
     *
     * <code>.maps.fleetengine.delivery.v1.Task.JourneySharingInfo journey_sharing_info = 8 [(.google.api.field_behavior) = OUTPUT_ONLY];</code>
     */
    public Builder setJourneySharingInfo(
        google.maps.fleetengine.delivery.v1.Task.JourneySharingInfo.Builder builderForValue) {
      if (journeySharingInfoBuilder_ == null) {
        journeySharingInfo_ = builderForValue.build();
        onChanged();
      } else {
        journeySharingInfoBuilder_.setMessage(builderForValue.build());
      }

      return this;
    }
    /**
     * <pre>
     * Output only. Journey sharing-specific fields. Not populated when state is `CLOSED`.
     * </pre>
     *
     * <code>.maps.fleetengine.delivery.v1.Task.JourneySharingInfo journey_sharing_info = 8 [(.google.api.field_behavior) = OUTPUT_ONLY];</code>
     */
    public Builder mergeJourneySharingInfo(google.maps.fleetengine.delivery.v1.Task.JourneySharingInfo value) {
      if (journeySharingInfoBuilder_ == null) {
        if (journeySharingInfo_ != null) {
          journeySharingInfo_ =
            google.maps.fleetengine.delivery.v1.Task.JourneySharingInfo.newBuilder(journeySharingInfo_).mergeFrom(value).buildPartial();
        } else {
          journeySharingInfo_ = value;
        }
        onChanged();
      } else {
        journeySharingInfoBuilder_.mergeFrom(value);
      }

      return this;
    }
    /**
     * <pre>
     * Output only. Journey sharing-specific fields. Not populated when state is `CLOSED`.
     * </pre>
     *
     * <code>.maps.fleetengine.delivery.v1.Task.JourneySharingInfo journey_sharing_info = 8 [(.google.api.field_behavior) = OUTPUT_ONLY];</code>
     */
    public Builder clearJourneySharingInfo() {
      if (journeySharingInfoBuilder_ == null) {
        journeySharingInfo_ = null;
        onChanged();
      } else {
        journeySharingInfo_ = null;
        journeySharingInfoBuilder_ = null;
      }

      return this;
    }
    /**
     * <pre>
     * Output only. Journey sharing-specific fields. Not populated when state is `CLOSED`.
     * </pre>
     *
     * <code>.maps.fleetengine.delivery.v1.Task.JourneySharingInfo journey_sharing_info = 8 [(.google.api.field_behavior) = OUTPUT_ONLY];</code>
     */
    public google.maps.fleetengine.delivery.v1.Task.JourneySharingInfo.Builder getJourneySharingInfoBuilder() {
      
      onChanged();
      return getJourneySharingInfoFieldBuilder().getBuilder();
    }
    /**
     * <pre>
     * Output only. Journey sharing-specific fields. Not populated when state is `CLOSED`.
     * </pre>
     *
     * <code>.maps.fleetengine.delivery.v1.Task.JourneySharingInfo journey_sharing_info = 8 [(.google.api.field_behavior) = OUTPUT_ONLY];</code>
     */
    public google.maps.fleetengine.delivery.v1.Task.JourneySharingInfoOrBuilder getJourneySharingInfoOrBuilder() {
      if (journeySharingInfoBuilder_ != null) {
        return journeySharingInfoBuilder_.getMessageOrBuilder();
      } else {
        return journeySharingInfo_ == null ?
            google.maps.fleetengine.delivery.v1.Task.JourneySharingInfo.getDefaultInstance() : journeySharingInfo_;
      }
    }
    /**
     * <pre>
     * Output only. Journey sharing-specific fields. Not populated when state is `CLOSED`.
     * </pre>
     *
     * <code>.maps.fleetengine.delivery.v1.Task.JourneySharingInfo journey_sharing_info = 8 [(.google.api.field_behavior) = OUTPUT_ONLY];</code>
     */
    private com.google.protobuf.SingleFieldBuilderV3<
        google.maps.fleetengine.delivery.v1.Task.JourneySharingInfo, google.maps.fleetengine.delivery.v1.Task.JourneySharingInfo.Builder, google.maps.fleetengine.delivery.v1.Task.JourneySharingInfoOrBuilder> 
        getJourneySharingInfoFieldBuilder() {
      if (journeySharingInfoBuilder_ == null) {
        journeySharingInfoBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
            google.maps.fleetengine.delivery.v1.Task.JourneySharingInfo, google.maps.fleetengine.delivery.v1.Task.JourneySharingInfo.Builder, google.maps.fleetengine.delivery.v1.Task.JourneySharingInfoOrBuilder>(
                getJourneySharingInfo(),
                getParentForChildren(),
                isClean());
        journeySharingInfo_ = null;
      }
      return journeySharingInfoBuilder_;
    }
    @java.lang.Override
    public final Builder setUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return super.setUnknownFields(unknownFields);
    }

    @java.lang.Override
    public final Builder mergeUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return super.mergeUnknownFields(unknownFields);
    }


    // @@protoc_insertion_point(builder_scope:maps.fleetengine.delivery.v1.Task)
  }

  // @@protoc_insertion_point(class_scope:maps.fleetengine.delivery.v1.Task)
  private static final google.maps.fleetengine.delivery.v1.Task DEFAULT_INSTANCE;
  static {
    DEFAULT_INSTANCE = new google.maps.fleetengine.delivery.v1.Task();
  }

  public static google.maps.fleetengine.delivery.v1.Task getDefaultInstance() {
    return DEFAULT_INSTANCE;
  }

  private static final com.google.protobuf.Parser<Task>
      PARSER = new com.google.protobuf.AbstractParser<Task>() {
    @java.lang.Override
    public Task parsePartialFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return new Task(input, extensionRegistry);
    }
  };

  public static com.google.protobuf.Parser<Task> parser() {
    return PARSER;
  }

  @java.lang.Override
  public com.google.protobuf.Parser<Task> getParserForType() {
    return PARSER;
  }

  @java.lang.Override
  public google.maps.fleetengine.delivery.v1.Task getDefaultInstanceForType() {
    return DEFAULT_INSTANCE;
  }

}

