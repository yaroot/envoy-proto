// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: xds/type/matcher/v3/cel.proto

package com.github.xds.type.matcher.v3;

/**
 * <pre>
 * Performs a match by evaluating a `Common Expression Language
 * &lt;https://github.com/google/cel-spec&gt;`_ (CEL) expression against the standardized set of
 * :ref:`HTTP attributes &lt;arch_overview_attributes&gt;` specified via ``HttpAttributesCelMatchInput``.
 * .. attention::
 *   The match is ``true``, iff the result of the evaluation is a bool AND true.
 *   In all other cases, the match is ``false``, including but not limited to: non-bool types,
 *   ``false``, ``null``,`` int(1)``, etc.
 *   In case CEL expression raises an error, the result of the evaluation is interpreted "no match".
 * Refer to :ref:`Unified Matcher API &lt;envoy_v3_api_msg_.xds.type.matcher.v3.Matcher&gt;` documentation
 * for usage details.
 * [#comment:TODO(sergiitk): Link HttpAttributesMatchInput + usage example.]
 * [#comment:TODO(sergiitk): When implemented, add the extension tag.]
 * </pre>
 *
 * Protobuf type {@code xds.type.matcher.v3.CelMatcher}
 */
public final class CelMatcher extends
    com.google.protobuf.GeneratedMessageV3 implements
    // @@protoc_insertion_point(message_implements:xds.type.matcher.v3.CelMatcher)
    CelMatcherOrBuilder {
private static final long serialVersionUID = 0L;
  // Use CelMatcher.newBuilder() to construct.
  private CelMatcher(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
    super(builder);
  }
  private CelMatcher() {
  }

  @java.lang.Override
  @SuppressWarnings({"unused"})
  protected java.lang.Object newInstance(
      UnusedPrivateParameter unused) {
    return new CelMatcher();
  }

  @java.lang.Override
  public final com.google.protobuf.UnknownFieldSet
  getUnknownFields() {
    return this.unknownFields;
  }
  public static final com.google.protobuf.Descriptors.Descriptor
      getDescriptor() {
    return com.github.xds.type.matcher.v3.CelProto.internal_static_xds_type_matcher_v3_CelMatcher_descriptor;
  }

  @java.lang.Override
  protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internalGetFieldAccessorTable() {
    return com.github.xds.type.matcher.v3.CelProto.internal_static_xds_type_matcher_v3_CelMatcher_fieldAccessorTable
        .ensureFieldAccessorsInitialized(
            com.github.xds.type.matcher.v3.CelMatcher.class, com.github.xds.type.matcher.v3.CelMatcher.Builder.class);
  }

  public static final int EXPR_MATCH_FIELD_NUMBER = 1;
  private com.github.xds.type.v3.CelExpression exprMatch_;
  /**
   * <pre>
   * Either parsed or checked representation of the CEL program.
   * </pre>
   *
   * <code>.xds.type.v3.CelExpression expr_match = 1 [(.validate.rules) = { ... }</code>
   * @return Whether the exprMatch field is set.
   */
  @java.lang.Override
  public boolean hasExprMatch() {
    return exprMatch_ != null;
  }
  /**
   * <pre>
   * Either parsed or checked representation of the CEL program.
   * </pre>
   *
   * <code>.xds.type.v3.CelExpression expr_match = 1 [(.validate.rules) = { ... }</code>
   * @return The exprMatch.
   */
  @java.lang.Override
  public com.github.xds.type.v3.CelExpression getExprMatch() {
    return exprMatch_ == null ? com.github.xds.type.v3.CelExpression.getDefaultInstance() : exprMatch_;
  }
  /**
   * <pre>
   * Either parsed or checked representation of the CEL program.
   * </pre>
   *
   * <code>.xds.type.v3.CelExpression expr_match = 1 [(.validate.rules) = { ... }</code>
   */
  @java.lang.Override
  public com.github.xds.type.v3.CelExpressionOrBuilder getExprMatchOrBuilder() {
    return exprMatch_ == null ? com.github.xds.type.v3.CelExpression.getDefaultInstance() : exprMatch_;
  }

  private byte memoizedIsInitialized = -1;
  @java.lang.Override
  public final boolean isInitialized() {
    byte isInitialized = memoizedIsInitialized;
    if (isInitialized == 1) return true;
    if (isInitialized == 0) return false;

    memoizedIsInitialized = 1;
    return true;
  }

  @java.lang.Override
  public void writeTo(com.google.protobuf.CodedOutputStream output)
                      throws java.io.IOException {
    if (exprMatch_ != null) {
      output.writeMessage(1, getExprMatch());
    }
    getUnknownFields().writeTo(output);
  }

  @java.lang.Override
  public int getSerializedSize() {
    int size = memoizedSize;
    if (size != -1) return size;

    size = 0;
    if (exprMatch_ != null) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(1, getExprMatch());
    }
    size += getUnknownFields().getSerializedSize();
    memoizedSize = size;
    return size;
  }

  @java.lang.Override
  public boolean equals(final java.lang.Object obj) {
    if (obj == this) {
     return true;
    }
    if (!(obj instanceof com.github.xds.type.matcher.v3.CelMatcher)) {
      return super.equals(obj);
    }
    com.github.xds.type.matcher.v3.CelMatcher other = (com.github.xds.type.matcher.v3.CelMatcher) obj;

    if (hasExprMatch() != other.hasExprMatch()) return false;
    if (hasExprMatch()) {
      if (!getExprMatch()
          .equals(other.getExprMatch())) return false;
    }
    if (!getUnknownFields().equals(other.getUnknownFields())) return false;
    return true;
  }

  @java.lang.Override
  public int hashCode() {
    if (memoizedHashCode != 0) {
      return memoizedHashCode;
    }
    int hash = 41;
    hash = (19 * hash) + getDescriptor().hashCode();
    if (hasExprMatch()) {
      hash = (37 * hash) + EXPR_MATCH_FIELD_NUMBER;
      hash = (53 * hash) + getExprMatch().hashCode();
    }
    hash = (29 * hash) + getUnknownFields().hashCode();
    memoizedHashCode = hash;
    return hash;
  }

  public static com.github.xds.type.matcher.v3.CelMatcher parseFrom(
      java.nio.ByteBuffer data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static com.github.xds.type.matcher.v3.CelMatcher parseFrom(
      java.nio.ByteBuffer data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static com.github.xds.type.matcher.v3.CelMatcher parseFrom(
      com.google.protobuf.ByteString data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static com.github.xds.type.matcher.v3.CelMatcher parseFrom(
      com.google.protobuf.ByteString data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static com.github.xds.type.matcher.v3.CelMatcher parseFrom(byte[] data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static com.github.xds.type.matcher.v3.CelMatcher parseFrom(
      byte[] data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static com.github.xds.type.matcher.v3.CelMatcher parseFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input);
  }
  public static com.github.xds.type.matcher.v3.CelMatcher parseFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input, extensionRegistry);
  }
  public static com.github.xds.type.matcher.v3.CelMatcher parseDelimitedFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseDelimitedWithIOException(PARSER, input);
  }
  public static com.github.xds.type.matcher.v3.CelMatcher parseDelimitedFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
  }
  public static com.github.xds.type.matcher.v3.CelMatcher parseFrom(
      com.google.protobuf.CodedInputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input);
  }
  public static com.github.xds.type.matcher.v3.CelMatcher parseFrom(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input, extensionRegistry);
  }

  @java.lang.Override
  public Builder newBuilderForType() { return newBuilder(); }
  public static Builder newBuilder() {
    return DEFAULT_INSTANCE.toBuilder();
  }
  public static Builder newBuilder(com.github.xds.type.matcher.v3.CelMatcher prototype) {
    return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
  }
  @java.lang.Override
  public Builder toBuilder() {
    return this == DEFAULT_INSTANCE
        ? new Builder() : new Builder().mergeFrom(this);
  }

  @java.lang.Override
  protected Builder newBuilderForType(
      com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
    Builder builder = new Builder(parent);
    return builder;
  }
  /**
   * <pre>
   * Performs a match by evaluating a `Common Expression Language
   * &lt;https://github.com/google/cel-spec&gt;`_ (CEL) expression against the standardized set of
   * :ref:`HTTP attributes &lt;arch_overview_attributes&gt;` specified via ``HttpAttributesCelMatchInput``.
   * .. attention::
   *   The match is ``true``, iff the result of the evaluation is a bool AND true.
   *   In all other cases, the match is ``false``, including but not limited to: non-bool types,
   *   ``false``, ``null``,`` int(1)``, etc.
   *   In case CEL expression raises an error, the result of the evaluation is interpreted "no match".
   * Refer to :ref:`Unified Matcher API &lt;envoy_v3_api_msg_.xds.type.matcher.v3.Matcher&gt;` documentation
   * for usage details.
   * [#comment:TODO(sergiitk): Link HttpAttributesMatchInput + usage example.]
   * [#comment:TODO(sergiitk): When implemented, add the extension tag.]
   * </pre>
   *
   * Protobuf type {@code xds.type.matcher.v3.CelMatcher}
   */
  public static final class Builder extends
      com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
      // @@protoc_insertion_point(builder_implements:xds.type.matcher.v3.CelMatcher)
      com.github.xds.type.matcher.v3.CelMatcherOrBuilder {
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.github.xds.type.matcher.v3.CelProto.internal_static_xds_type_matcher_v3_CelMatcher_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.github.xds.type.matcher.v3.CelProto.internal_static_xds_type_matcher_v3_CelMatcher_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.github.xds.type.matcher.v3.CelMatcher.class, com.github.xds.type.matcher.v3.CelMatcher.Builder.class);
    }

    // Construct using com.github.xds.type.matcher.v3.CelMatcher.newBuilder()
    private Builder() {

    }

    private Builder(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      super(parent);

    }
    @java.lang.Override
    public Builder clear() {
      super.clear();
      bitField0_ = 0;
      exprMatch_ = null;
      if (exprMatchBuilder_ != null) {
        exprMatchBuilder_.dispose();
        exprMatchBuilder_ = null;
      }
      return this;
    }

    @java.lang.Override
    public com.google.protobuf.Descriptors.Descriptor
        getDescriptorForType() {
      return com.github.xds.type.matcher.v3.CelProto.internal_static_xds_type_matcher_v3_CelMatcher_descriptor;
    }

    @java.lang.Override
    public com.github.xds.type.matcher.v3.CelMatcher getDefaultInstanceForType() {
      return com.github.xds.type.matcher.v3.CelMatcher.getDefaultInstance();
    }

    @java.lang.Override
    public com.github.xds.type.matcher.v3.CelMatcher build() {
      com.github.xds.type.matcher.v3.CelMatcher result = buildPartial();
      if (!result.isInitialized()) {
        throw newUninitializedMessageException(result);
      }
      return result;
    }

    @java.lang.Override
    public com.github.xds.type.matcher.v3.CelMatcher buildPartial() {
      com.github.xds.type.matcher.v3.CelMatcher result = new com.github.xds.type.matcher.v3.CelMatcher(this);
      if (bitField0_ != 0) { buildPartial0(result); }
      onBuilt();
      return result;
    }

    private void buildPartial0(com.github.xds.type.matcher.v3.CelMatcher result) {
      int from_bitField0_ = bitField0_;
      if (((from_bitField0_ & 0x00000001) != 0)) {
        result.exprMatch_ = exprMatchBuilder_ == null
            ? exprMatch_
            : exprMatchBuilder_.build();
      }
    }

    @java.lang.Override
    public Builder clone() {
      return super.clone();
    }
    @java.lang.Override
    public Builder setField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        java.lang.Object value) {
      return super.setField(field, value);
    }
    @java.lang.Override
    public Builder clearField(
        com.google.protobuf.Descriptors.FieldDescriptor field) {
      return super.clearField(field);
    }
    @java.lang.Override
    public Builder clearOneof(
        com.google.protobuf.Descriptors.OneofDescriptor oneof) {
      return super.clearOneof(oneof);
    }
    @java.lang.Override
    public Builder setRepeatedField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        int index, java.lang.Object value) {
      return super.setRepeatedField(field, index, value);
    }
    @java.lang.Override
    public Builder addRepeatedField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        java.lang.Object value) {
      return super.addRepeatedField(field, value);
    }
    @java.lang.Override
    public Builder mergeFrom(com.google.protobuf.Message other) {
      if (other instanceof com.github.xds.type.matcher.v3.CelMatcher) {
        return mergeFrom((com.github.xds.type.matcher.v3.CelMatcher)other);
      } else {
        super.mergeFrom(other);
        return this;
      }
    }

    public Builder mergeFrom(com.github.xds.type.matcher.v3.CelMatcher other) {
      if (other == com.github.xds.type.matcher.v3.CelMatcher.getDefaultInstance()) return this;
      if (other.hasExprMatch()) {
        mergeExprMatch(other.getExprMatch());
      }
      this.mergeUnknownFields(other.getUnknownFields());
      onChanged();
      return this;
    }

    @java.lang.Override
    public final boolean isInitialized() {
      return true;
    }

    @java.lang.Override
    public Builder mergeFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 10: {
              input.readMessage(
                  getExprMatchFieldBuilder().getBuilder(),
                  extensionRegistry);
              bitField0_ |= 0x00000001;
              break;
            } // case 10
            default: {
              if (!super.parseUnknownField(input, extensionRegistry, tag)) {
                done = true; // was an endgroup tag
              }
              break;
            } // default:
          } // switch (tag)
        } // while (!done)
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.unwrapIOException();
      } finally {
        onChanged();
      } // finally
      return this;
    }
    private int bitField0_;

    private com.github.xds.type.v3.CelExpression exprMatch_;
    private com.google.protobuf.SingleFieldBuilderV3<
        com.github.xds.type.v3.CelExpression, com.github.xds.type.v3.CelExpression.Builder, com.github.xds.type.v3.CelExpressionOrBuilder> exprMatchBuilder_;
    /**
     * <pre>
     * Either parsed or checked representation of the CEL program.
     * </pre>
     *
     * <code>.xds.type.v3.CelExpression expr_match = 1 [(.validate.rules) = { ... }</code>
     * @return Whether the exprMatch field is set.
     */
    public boolean hasExprMatch() {
      return ((bitField0_ & 0x00000001) != 0);
    }
    /**
     * <pre>
     * Either parsed or checked representation of the CEL program.
     * </pre>
     *
     * <code>.xds.type.v3.CelExpression expr_match = 1 [(.validate.rules) = { ... }</code>
     * @return The exprMatch.
     */
    public com.github.xds.type.v3.CelExpression getExprMatch() {
      if (exprMatchBuilder_ == null) {
        return exprMatch_ == null ? com.github.xds.type.v3.CelExpression.getDefaultInstance() : exprMatch_;
      } else {
        return exprMatchBuilder_.getMessage();
      }
    }
    /**
     * <pre>
     * Either parsed or checked representation of the CEL program.
     * </pre>
     *
     * <code>.xds.type.v3.CelExpression expr_match = 1 [(.validate.rules) = { ... }</code>
     */
    public Builder setExprMatch(com.github.xds.type.v3.CelExpression value) {
      if (exprMatchBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        exprMatch_ = value;
      } else {
        exprMatchBuilder_.setMessage(value);
      }
      bitField0_ |= 0x00000001;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * Either parsed or checked representation of the CEL program.
     * </pre>
     *
     * <code>.xds.type.v3.CelExpression expr_match = 1 [(.validate.rules) = { ... }</code>
     */
    public Builder setExprMatch(
        com.github.xds.type.v3.CelExpression.Builder builderForValue) {
      if (exprMatchBuilder_ == null) {
        exprMatch_ = builderForValue.build();
      } else {
        exprMatchBuilder_.setMessage(builderForValue.build());
      }
      bitField0_ |= 0x00000001;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * Either parsed or checked representation of the CEL program.
     * </pre>
     *
     * <code>.xds.type.v3.CelExpression expr_match = 1 [(.validate.rules) = { ... }</code>
     */
    public Builder mergeExprMatch(com.github.xds.type.v3.CelExpression value) {
      if (exprMatchBuilder_ == null) {
        if (((bitField0_ & 0x00000001) != 0) &&
          exprMatch_ != null &&
          exprMatch_ != com.github.xds.type.v3.CelExpression.getDefaultInstance()) {
          getExprMatchBuilder().mergeFrom(value);
        } else {
          exprMatch_ = value;
        }
      } else {
        exprMatchBuilder_.mergeFrom(value);
      }
      bitField0_ |= 0x00000001;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * Either parsed or checked representation of the CEL program.
     * </pre>
     *
     * <code>.xds.type.v3.CelExpression expr_match = 1 [(.validate.rules) = { ... }</code>
     */
    public Builder clearExprMatch() {
      bitField0_ = (bitField0_ & ~0x00000001);
      exprMatch_ = null;
      if (exprMatchBuilder_ != null) {
        exprMatchBuilder_.dispose();
        exprMatchBuilder_ = null;
      }
      onChanged();
      return this;
    }
    /**
     * <pre>
     * Either parsed or checked representation of the CEL program.
     * </pre>
     *
     * <code>.xds.type.v3.CelExpression expr_match = 1 [(.validate.rules) = { ... }</code>
     */
    public com.github.xds.type.v3.CelExpression.Builder getExprMatchBuilder() {
      bitField0_ |= 0x00000001;
      onChanged();
      return getExprMatchFieldBuilder().getBuilder();
    }
    /**
     * <pre>
     * Either parsed or checked representation of the CEL program.
     * </pre>
     *
     * <code>.xds.type.v3.CelExpression expr_match = 1 [(.validate.rules) = { ... }</code>
     */
    public com.github.xds.type.v3.CelExpressionOrBuilder getExprMatchOrBuilder() {
      if (exprMatchBuilder_ != null) {
        return exprMatchBuilder_.getMessageOrBuilder();
      } else {
        return exprMatch_ == null ?
            com.github.xds.type.v3.CelExpression.getDefaultInstance() : exprMatch_;
      }
    }
    /**
     * <pre>
     * Either parsed or checked representation of the CEL program.
     * </pre>
     *
     * <code>.xds.type.v3.CelExpression expr_match = 1 [(.validate.rules) = { ... }</code>
     */
    private com.google.protobuf.SingleFieldBuilderV3<
        com.github.xds.type.v3.CelExpression, com.github.xds.type.v3.CelExpression.Builder, com.github.xds.type.v3.CelExpressionOrBuilder> 
        getExprMatchFieldBuilder() {
      if (exprMatchBuilder_ == null) {
        exprMatchBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
            com.github.xds.type.v3.CelExpression, com.github.xds.type.v3.CelExpression.Builder, com.github.xds.type.v3.CelExpressionOrBuilder>(
                getExprMatch(),
                getParentForChildren(),
                isClean());
        exprMatch_ = null;
      }
      return exprMatchBuilder_;
    }
    @java.lang.Override
    public final Builder setUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return super.setUnknownFields(unknownFields);
    }

    @java.lang.Override
    public final Builder mergeUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return super.mergeUnknownFields(unknownFields);
    }


    // @@protoc_insertion_point(builder_scope:xds.type.matcher.v3.CelMatcher)
  }

  // @@protoc_insertion_point(class_scope:xds.type.matcher.v3.CelMatcher)
  private static final com.github.xds.type.matcher.v3.CelMatcher DEFAULT_INSTANCE;
  static {
    DEFAULT_INSTANCE = new com.github.xds.type.matcher.v3.CelMatcher();
  }

  public static com.github.xds.type.matcher.v3.CelMatcher getDefaultInstance() {
    return DEFAULT_INSTANCE;
  }

  private static final com.google.protobuf.Parser<CelMatcher>
      PARSER = new com.google.protobuf.AbstractParser<CelMatcher>() {
    @java.lang.Override
    public CelMatcher parsePartialFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      Builder builder = newBuilder();
      try {
        builder.mergeFrom(input, extensionRegistry);
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(builder.buildPartial());
      } catch (com.google.protobuf.UninitializedMessageException e) {
        throw e.asInvalidProtocolBufferException().setUnfinishedMessage(builder.buildPartial());
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(e)
            .setUnfinishedMessage(builder.buildPartial());
      }
      return builder.buildPartial();
    }
  };

  public static com.google.protobuf.Parser<CelMatcher> parser() {
    return PARSER;
  }

  @java.lang.Override
  public com.google.protobuf.Parser<CelMatcher> getParserForType() {
    return PARSER;
  }

  @java.lang.Override
  public com.github.xds.type.matcher.v3.CelMatcher getDefaultInstanceForType() {
    return DEFAULT_INSTANCE;
  }

}

