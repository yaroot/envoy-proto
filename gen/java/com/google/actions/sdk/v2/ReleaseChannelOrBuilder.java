// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: google/actions/sdk/v2/release_channel.proto

package com.google.actions.sdk.v2;

public interface ReleaseChannelOrBuilder extends
    // @@protoc_insertion_point(interface_extends:google.actions.sdk.v2.ReleaseChannel)
    com.google.protobuf.MessageOrBuilder {

  /**
   * <pre>
   * The unique name of the release channel in the following format.
   * `projects/{project}/releaseChannels/{release_channel}`.
   * </pre>
   *
   * <code>string name = 1;</code>
   * @return The name.
   */
  java.lang.String getName();
  /**
   * <pre>
   * The unique name of the release channel in the following format.
   * `projects/{project}/releaseChannels/{release_channel}`.
   * </pre>
   *
   * <code>string name = 1;</code>
   * @return The bytes for name.
   */
  com.google.protobuf.ByteString
      getNameBytes();

  /**
   * <pre>
   * Version currently deployed to this release channel in the following format:
   * `projects/{project}/versions/{version}`.
   * </pre>
   *
   * <code>string current_version = 2;</code>
   * @return The currentVersion.
   */
  java.lang.String getCurrentVersion();
  /**
   * <pre>
   * Version currently deployed to this release channel in the following format:
   * `projects/{project}/versions/{version}`.
   * </pre>
   *
   * <code>string current_version = 2;</code>
   * @return The bytes for currentVersion.
   */
  com.google.protobuf.ByteString
      getCurrentVersionBytes();

  /**
   * <pre>
   * Version to be deployed to this release channel in the following format:
   * `projects/{project}/versions/{version}`.
   * </pre>
   *
   * <code>string pending_version = 3;</code>
   * @return The pendingVersion.
   */
  java.lang.String getPendingVersion();
  /**
   * <pre>
   * Version to be deployed to this release channel in the following format:
   * `projects/{project}/versions/{version}`.
   * </pre>
   *
   * <code>string pending_version = 3;</code>
   * @return The bytes for pendingVersion.
   */
  com.google.protobuf.ByteString
      getPendingVersionBytes();
}
