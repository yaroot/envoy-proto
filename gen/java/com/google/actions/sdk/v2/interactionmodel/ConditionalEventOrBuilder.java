// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: google/actions/sdk/v2/interactionmodel/conditional_event.proto

package com.google.actions.sdk.v2.interactionmodel;

public interface ConditionalEventOrBuilder extends
    // @@protoc_insertion_point(interface_extends:google.actions.sdk.v2.interactionmodel.ConditionalEvent)
    com.google.protobuf.MessageOrBuilder {

  /**
   * <pre>
   * Required. Filter condition for this event to trigger. If condition is evaluated to
   * true then the associated `handler` will be triggered.
   * The following variable references are supported:
   *   `$session` - To reference data in session storage.
   *   `$user` - To reference data in user storage.
   * The following boolean operators are supported (with examples):
   *   `&amp;&amp;` - `session.params.counter &gt; 0 &amp;&amp; session.params.counter &lt; 100`
   *   `||` - `session.params.foo == "John" || session.params.counter == "Adam"`
   *   `!`  - `!(session.params.counter == 5)`
   * The following comparisons are supported:
   *   `==`, `!=`, `&lt;`, `&gt;`, `&lt;=`, `&gt;=`
   * The following list and string operators are supported (with examples):
   *   `in`        - "Watermelon" in `session.params.fruitList`
   *   `size`      - `size(session.params.fruitList) &gt; 2`
   *   `substring` - `session.params.fullName.contains("John")`
   * </pre>
   *
   * <code>string condition = 1 [(.google.api.field_behavior) = REQUIRED];</code>
   * @return The condition.
   */
  java.lang.String getCondition();
  /**
   * <pre>
   * Required. Filter condition for this event to trigger. If condition is evaluated to
   * true then the associated `handler` will be triggered.
   * The following variable references are supported:
   *   `$session` - To reference data in session storage.
   *   `$user` - To reference data in user storage.
   * The following boolean operators are supported (with examples):
   *   `&amp;&amp;` - `session.params.counter &gt; 0 &amp;&amp; session.params.counter &lt; 100`
   *   `||` - `session.params.foo == "John" || session.params.counter == "Adam"`
   *   `!`  - `!(session.params.counter == 5)`
   * The following comparisons are supported:
   *   `==`, `!=`, `&lt;`, `&gt;`, `&lt;=`, `&gt;=`
   * The following list and string operators are supported (with examples):
   *   `in`        - "Watermelon" in `session.params.fruitList`
   *   `size`      - `size(session.params.fruitList) &gt; 2`
   *   `substring` - `session.params.fullName.contains("John")`
   * </pre>
   *
   * <code>string condition = 1 [(.google.api.field_behavior) = REQUIRED];</code>
   * @return The bytes for condition.
   */
  com.google.protobuf.ByteString
      getConditionBytes();

  /**
   * <pre>
   * Optional. Destination scene which the conversation should jump to when the associated
   * condition is evaluated to true. The state of the current scene is destroyed
   * on the transition.
   * </pre>
   *
   * <code>string transition_to_scene = 2 [(.google.api.field_behavior) = OPTIONAL];</code>
   * @return The transitionToScene.
   */
  java.lang.String getTransitionToScene();
  /**
   * <pre>
   * Optional. Destination scene which the conversation should jump to when the associated
   * condition is evaluated to true. The state of the current scene is destroyed
   * on the transition.
   * </pre>
   *
   * <code>string transition_to_scene = 2 [(.google.api.field_behavior) = OPTIONAL];</code>
   * @return The bytes for transitionToScene.
   */
  com.google.protobuf.ByteString
      getTransitionToSceneBytes();

  /**
   * <pre>
   * Optional. Event handler which is triggered when the associated condition is evaluated
   * to `true`. Should execute before transitioning to the destination scene.
   * Useful to generate Prompts in response to events.
   * </pre>
   *
   * <code>.google.actions.sdk.v2.interactionmodel.EventHandler handler = 3 [(.google.api.field_behavior) = OPTIONAL];</code>
   * @return Whether the handler field is set.
   */
  boolean hasHandler();
  /**
   * <pre>
   * Optional. Event handler which is triggered when the associated condition is evaluated
   * to `true`. Should execute before transitioning to the destination scene.
   * Useful to generate Prompts in response to events.
   * </pre>
   *
   * <code>.google.actions.sdk.v2.interactionmodel.EventHandler handler = 3 [(.google.api.field_behavior) = OPTIONAL];</code>
   * @return The handler.
   */
  com.google.actions.sdk.v2.interactionmodel.EventHandler getHandler();
  /**
   * <pre>
   * Optional. Event handler which is triggered when the associated condition is evaluated
   * to `true`. Should execute before transitioning to the destination scene.
   * Useful to generate Prompts in response to events.
   * </pre>
   *
   * <code>.google.actions.sdk.v2.interactionmodel.EventHandler handler = 3 [(.google.api.field_behavior) = OPTIONAL];</code>
   */
  com.google.actions.sdk.v2.interactionmodel.EventHandlerOrBuilder getHandlerOrBuilder();
}
