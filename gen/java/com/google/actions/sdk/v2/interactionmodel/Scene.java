// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: google/actions/sdk/v2/interactionmodel/scene.proto

package com.google.actions.sdk.v2.interactionmodel;

/**
 * <pre>
 * Scene is the basic unit of control flow when designing a conversation. They
 * can be chained together with other scenes, generate prompts for the end user,
 * and define slots.
 * The scene name is specified in the name of the file.
 * </pre>
 *
 * Protobuf type {@code google.actions.sdk.v2.interactionmodel.Scene}
 */
public final class Scene extends
    com.google.protobuf.GeneratedMessageV3 implements
    // @@protoc_insertion_point(message_implements:google.actions.sdk.v2.interactionmodel.Scene)
    SceneOrBuilder {
private static final long serialVersionUID = 0L;
  // Use Scene.newBuilder() to construct.
  private Scene(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
    super(builder);
  }
  private Scene() {
    intentEvents_ = java.util.Collections.emptyList();
    conditionalEvents_ = java.util.Collections.emptyList();
    slots_ = java.util.Collections.emptyList();
  }

  @java.lang.Override
  @SuppressWarnings({"unused"})
  protected java.lang.Object newInstance(
      UnusedPrivateParameter unused) {
    return new Scene();
  }

  @java.lang.Override
  public final com.google.protobuf.UnknownFieldSet
  getUnknownFields() {
    return this.unknownFields;
  }
  public static final com.google.protobuf.Descriptors.Descriptor
      getDescriptor() {
    return com.google.actions.sdk.v2.interactionmodel.SceneProto.internal_static_google_actions_sdk_v2_interactionmodel_Scene_descriptor;
  }

  @java.lang.Override
  protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internalGetFieldAccessorTable() {
    return com.google.actions.sdk.v2.interactionmodel.SceneProto.internal_static_google_actions_sdk_v2_interactionmodel_Scene_fieldAccessorTable
        .ensureFieldAccessorsInitialized(
            com.google.actions.sdk.v2.interactionmodel.Scene.class, com.google.actions.sdk.v2.interactionmodel.Scene.Builder.class);
  }

  public static final int ON_ENTER_FIELD_NUMBER = 1;
  private com.google.actions.sdk.v2.interactionmodel.EventHandler onEnter_;
  /**
   * <pre>
   * Handler to invoke when transitioning into this scene.
   * </pre>
   *
   * <code>.google.actions.sdk.v2.interactionmodel.EventHandler on_enter = 1;</code>
   * @return Whether the onEnter field is set.
   */
  @java.lang.Override
  public boolean hasOnEnter() {
    return onEnter_ != null;
  }
  /**
   * <pre>
   * Handler to invoke when transitioning into this scene.
   * </pre>
   *
   * <code>.google.actions.sdk.v2.interactionmodel.EventHandler on_enter = 1;</code>
   * @return The onEnter.
   */
  @java.lang.Override
  public com.google.actions.sdk.v2.interactionmodel.EventHandler getOnEnter() {
    return onEnter_ == null ? com.google.actions.sdk.v2.interactionmodel.EventHandler.getDefaultInstance() : onEnter_;
  }
  /**
   * <pre>
   * Handler to invoke when transitioning into this scene.
   * </pre>
   *
   * <code>.google.actions.sdk.v2.interactionmodel.EventHandler on_enter = 1;</code>
   */
  @java.lang.Override
  public com.google.actions.sdk.v2.interactionmodel.EventHandlerOrBuilder getOnEnterOrBuilder() {
    return onEnter_ == null ? com.google.actions.sdk.v2.interactionmodel.EventHandler.getDefaultInstance() : onEnter_;
  }

  public static final int INTENT_EVENTS_FIELD_NUMBER = 2;
  @SuppressWarnings("serial")
  private java.util.List<com.google.actions.sdk.v2.interactionmodel.IntentEvent> intentEvents_;
  /**
   * <pre>
   * The list of events that trigger based on intents. These events can
   * be triggered at any time after the on_load Handler has been called.
   * Important - these events define the set of intents which are scoped to
   * this scene and will take precedence over any globally defined events that
   * have the same intents or their triggering phrases. Intent names must be
   * unique within a scene.
   * </pre>
   *
   * <code>repeated .google.actions.sdk.v2.interactionmodel.IntentEvent intent_events = 2;</code>
   */
  @java.lang.Override
  public java.util.List<com.google.actions.sdk.v2.interactionmodel.IntentEvent> getIntentEventsList() {
    return intentEvents_;
  }
  /**
   * <pre>
   * The list of events that trigger based on intents. These events can
   * be triggered at any time after the on_load Handler has been called.
   * Important - these events define the set of intents which are scoped to
   * this scene and will take precedence over any globally defined events that
   * have the same intents or their triggering phrases. Intent names must be
   * unique within a scene.
   * </pre>
   *
   * <code>repeated .google.actions.sdk.v2.interactionmodel.IntentEvent intent_events = 2;</code>
   */
  @java.lang.Override
  public java.util.List<? extends com.google.actions.sdk.v2.interactionmodel.IntentEventOrBuilder> 
      getIntentEventsOrBuilderList() {
    return intentEvents_;
  }
  /**
   * <pre>
   * The list of events that trigger based on intents. These events can
   * be triggered at any time after the on_load Handler has been called.
   * Important - these events define the set of intents which are scoped to
   * this scene and will take precedence over any globally defined events that
   * have the same intents or their triggering phrases. Intent names must be
   * unique within a scene.
   * </pre>
   *
   * <code>repeated .google.actions.sdk.v2.interactionmodel.IntentEvent intent_events = 2;</code>
   */
  @java.lang.Override
  public int getIntentEventsCount() {
    return intentEvents_.size();
  }
  /**
   * <pre>
   * The list of events that trigger based on intents. These events can
   * be triggered at any time after the on_load Handler has been called.
   * Important - these events define the set of intents which are scoped to
   * this scene and will take precedence over any globally defined events that
   * have the same intents or their triggering phrases. Intent names must be
   * unique within a scene.
   * </pre>
   *
   * <code>repeated .google.actions.sdk.v2.interactionmodel.IntentEvent intent_events = 2;</code>
   */
  @java.lang.Override
  public com.google.actions.sdk.v2.interactionmodel.IntentEvent getIntentEvents(int index) {
    return intentEvents_.get(index);
  }
  /**
   * <pre>
   * The list of events that trigger based on intents. These events can
   * be triggered at any time after the on_load Handler has been called.
   * Important - these events define the set of intents which are scoped to
   * this scene and will take precedence over any globally defined events that
   * have the same intents or their triggering phrases. Intent names must be
   * unique within a scene.
   * </pre>
   *
   * <code>repeated .google.actions.sdk.v2.interactionmodel.IntentEvent intent_events = 2;</code>
   */
  @java.lang.Override
  public com.google.actions.sdk.v2.interactionmodel.IntentEventOrBuilder getIntentEventsOrBuilder(
      int index) {
    return intentEvents_.get(index);
  }

  public static final int CONDITIONAL_EVENTS_FIELD_NUMBER = 3;
  @SuppressWarnings("serial")
  private java.util.List<com.google.actions.sdk.v2.interactionmodel.ConditionalEvent> conditionalEvents_;
  /**
   * <pre>
   * The list of events to trigger based on conditional statements. These are
   * evaluated after the form has been filled or immediately after on_load if
   * this scene does not have a form (evaluation is only done once). Only the
   * first matching event will be triggered.
   * </pre>
   *
   * <code>repeated .google.actions.sdk.v2.interactionmodel.ConditionalEvent conditional_events = 3;</code>
   */
  @java.lang.Override
  public java.util.List<com.google.actions.sdk.v2.interactionmodel.ConditionalEvent> getConditionalEventsList() {
    return conditionalEvents_;
  }
  /**
   * <pre>
   * The list of events to trigger based on conditional statements. These are
   * evaluated after the form has been filled or immediately after on_load if
   * this scene does not have a form (evaluation is only done once). Only the
   * first matching event will be triggered.
   * </pre>
   *
   * <code>repeated .google.actions.sdk.v2.interactionmodel.ConditionalEvent conditional_events = 3;</code>
   */
  @java.lang.Override
  public java.util.List<? extends com.google.actions.sdk.v2.interactionmodel.ConditionalEventOrBuilder> 
      getConditionalEventsOrBuilderList() {
    return conditionalEvents_;
  }
  /**
   * <pre>
   * The list of events to trigger based on conditional statements. These are
   * evaluated after the form has been filled or immediately after on_load if
   * this scene does not have a form (evaluation is only done once). Only the
   * first matching event will be triggered.
   * </pre>
   *
   * <code>repeated .google.actions.sdk.v2.interactionmodel.ConditionalEvent conditional_events = 3;</code>
   */
  @java.lang.Override
  public int getConditionalEventsCount() {
    return conditionalEvents_.size();
  }
  /**
   * <pre>
   * The list of events to trigger based on conditional statements. These are
   * evaluated after the form has been filled or immediately after on_load if
   * this scene does not have a form (evaluation is only done once). Only the
   * first matching event will be triggered.
   * </pre>
   *
   * <code>repeated .google.actions.sdk.v2.interactionmodel.ConditionalEvent conditional_events = 3;</code>
   */
  @java.lang.Override
  public com.google.actions.sdk.v2.interactionmodel.ConditionalEvent getConditionalEvents(int index) {
    return conditionalEvents_.get(index);
  }
  /**
   * <pre>
   * The list of events to trigger based on conditional statements. These are
   * evaluated after the form has been filled or immediately after on_load if
   * this scene does not have a form (evaluation is only done once). Only the
   * first matching event will be triggered.
   * </pre>
   *
   * <code>repeated .google.actions.sdk.v2.interactionmodel.ConditionalEvent conditional_events = 3;</code>
   */
  @java.lang.Override
  public com.google.actions.sdk.v2.interactionmodel.ConditionalEventOrBuilder getConditionalEventsOrBuilder(
      int index) {
    return conditionalEvents_.get(index);
  }

  public static final int SLOTS_FIELD_NUMBER = 4;
  @SuppressWarnings("serial")
  private java.util.List<com.google.actions.sdk.v2.interactionmodel.Slot> slots_;
  /**
   * <pre>
   * Ordered list of slots. Each slot defines the type of data
   * that it will resolve and configuration to customize the experience of this
   * resolution (e.g. prompts).
   * </pre>
   *
   * <code>repeated .google.actions.sdk.v2.interactionmodel.Slot slots = 4;</code>
   */
  @java.lang.Override
  public java.util.List<com.google.actions.sdk.v2.interactionmodel.Slot> getSlotsList() {
    return slots_;
  }
  /**
   * <pre>
   * Ordered list of slots. Each slot defines the type of data
   * that it will resolve and configuration to customize the experience of this
   * resolution (e.g. prompts).
   * </pre>
   *
   * <code>repeated .google.actions.sdk.v2.interactionmodel.Slot slots = 4;</code>
   */
  @java.lang.Override
  public java.util.List<? extends com.google.actions.sdk.v2.interactionmodel.SlotOrBuilder> 
      getSlotsOrBuilderList() {
    return slots_;
  }
  /**
   * <pre>
   * Ordered list of slots. Each slot defines the type of data
   * that it will resolve and configuration to customize the experience of this
   * resolution (e.g. prompts).
   * </pre>
   *
   * <code>repeated .google.actions.sdk.v2.interactionmodel.Slot slots = 4;</code>
   */
  @java.lang.Override
  public int getSlotsCount() {
    return slots_.size();
  }
  /**
   * <pre>
   * Ordered list of slots. Each slot defines the type of data
   * that it will resolve and configuration to customize the experience of this
   * resolution (e.g. prompts).
   * </pre>
   *
   * <code>repeated .google.actions.sdk.v2.interactionmodel.Slot slots = 4;</code>
   */
  @java.lang.Override
  public com.google.actions.sdk.v2.interactionmodel.Slot getSlots(int index) {
    return slots_.get(index);
  }
  /**
   * <pre>
   * Ordered list of slots. Each slot defines the type of data
   * that it will resolve and configuration to customize the experience of this
   * resolution (e.g. prompts).
   * </pre>
   *
   * <code>repeated .google.actions.sdk.v2.interactionmodel.Slot slots = 4;</code>
   */
  @java.lang.Override
  public com.google.actions.sdk.v2.interactionmodel.SlotOrBuilder getSlotsOrBuilder(
      int index) {
    return slots_.get(index);
  }

  public static final int ON_SLOT_UPDATED_FIELD_NUMBER = 5;
  private com.google.actions.sdk.v2.interactionmodel.EventHandler onSlotUpdated_;
  /**
   * <pre>
   * Handler called when there is a change in state of a slot not
   * caused by updates within another Handler. This allows slots to be
   * invalidated, the scene invalidated or other changes to scene state.
   * </pre>
   *
   * <code>.google.actions.sdk.v2.interactionmodel.EventHandler on_slot_updated = 5;</code>
   * @return Whether the onSlotUpdated field is set.
   */
  @java.lang.Override
  public boolean hasOnSlotUpdated() {
    return onSlotUpdated_ != null;
  }
  /**
   * <pre>
   * Handler called when there is a change in state of a slot not
   * caused by updates within another Handler. This allows slots to be
   * invalidated, the scene invalidated or other changes to scene state.
   * </pre>
   *
   * <code>.google.actions.sdk.v2.interactionmodel.EventHandler on_slot_updated = 5;</code>
   * @return The onSlotUpdated.
   */
  @java.lang.Override
  public com.google.actions.sdk.v2.interactionmodel.EventHandler getOnSlotUpdated() {
    return onSlotUpdated_ == null ? com.google.actions.sdk.v2.interactionmodel.EventHandler.getDefaultInstance() : onSlotUpdated_;
  }
  /**
   * <pre>
   * Handler called when there is a change in state of a slot not
   * caused by updates within another Handler. This allows slots to be
   * invalidated, the scene invalidated or other changes to scene state.
   * </pre>
   *
   * <code>.google.actions.sdk.v2.interactionmodel.EventHandler on_slot_updated = 5;</code>
   */
  @java.lang.Override
  public com.google.actions.sdk.v2.interactionmodel.EventHandlerOrBuilder getOnSlotUpdatedOrBuilder() {
    return onSlotUpdated_ == null ? com.google.actions.sdk.v2.interactionmodel.EventHandler.getDefaultInstance() : onSlotUpdated_;
  }

  private byte memoizedIsInitialized = -1;
  @java.lang.Override
  public final boolean isInitialized() {
    byte isInitialized = memoizedIsInitialized;
    if (isInitialized == 1) return true;
    if (isInitialized == 0) return false;

    memoizedIsInitialized = 1;
    return true;
  }

  @java.lang.Override
  public void writeTo(com.google.protobuf.CodedOutputStream output)
                      throws java.io.IOException {
    if (onEnter_ != null) {
      output.writeMessage(1, getOnEnter());
    }
    for (int i = 0; i < intentEvents_.size(); i++) {
      output.writeMessage(2, intentEvents_.get(i));
    }
    for (int i = 0; i < conditionalEvents_.size(); i++) {
      output.writeMessage(3, conditionalEvents_.get(i));
    }
    for (int i = 0; i < slots_.size(); i++) {
      output.writeMessage(4, slots_.get(i));
    }
    if (onSlotUpdated_ != null) {
      output.writeMessage(5, getOnSlotUpdated());
    }
    getUnknownFields().writeTo(output);
  }

  @java.lang.Override
  public int getSerializedSize() {
    int size = memoizedSize;
    if (size != -1) return size;

    size = 0;
    if (onEnter_ != null) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(1, getOnEnter());
    }
    for (int i = 0; i < intentEvents_.size(); i++) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(2, intentEvents_.get(i));
    }
    for (int i = 0; i < conditionalEvents_.size(); i++) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(3, conditionalEvents_.get(i));
    }
    for (int i = 0; i < slots_.size(); i++) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(4, slots_.get(i));
    }
    if (onSlotUpdated_ != null) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(5, getOnSlotUpdated());
    }
    size += getUnknownFields().getSerializedSize();
    memoizedSize = size;
    return size;
  }

  @java.lang.Override
  public boolean equals(final java.lang.Object obj) {
    if (obj == this) {
     return true;
    }
    if (!(obj instanceof com.google.actions.sdk.v2.interactionmodel.Scene)) {
      return super.equals(obj);
    }
    com.google.actions.sdk.v2.interactionmodel.Scene other = (com.google.actions.sdk.v2.interactionmodel.Scene) obj;

    if (hasOnEnter() != other.hasOnEnter()) return false;
    if (hasOnEnter()) {
      if (!getOnEnter()
          .equals(other.getOnEnter())) return false;
    }
    if (!getIntentEventsList()
        .equals(other.getIntentEventsList())) return false;
    if (!getConditionalEventsList()
        .equals(other.getConditionalEventsList())) return false;
    if (!getSlotsList()
        .equals(other.getSlotsList())) return false;
    if (hasOnSlotUpdated() != other.hasOnSlotUpdated()) return false;
    if (hasOnSlotUpdated()) {
      if (!getOnSlotUpdated()
          .equals(other.getOnSlotUpdated())) return false;
    }
    if (!getUnknownFields().equals(other.getUnknownFields())) return false;
    return true;
  }

  @java.lang.Override
  public int hashCode() {
    if (memoizedHashCode != 0) {
      return memoizedHashCode;
    }
    int hash = 41;
    hash = (19 * hash) + getDescriptor().hashCode();
    if (hasOnEnter()) {
      hash = (37 * hash) + ON_ENTER_FIELD_NUMBER;
      hash = (53 * hash) + getOnEnter().hashCode();
    }
    if (getIntentEventsCount() > 0) {
      hash = (37 * hash) + INTENT_EVENTS_FIELD_NUMBER;
      hash = (53 * hash) + getIntentEventsList().hashCode();
    }
    if (getConditionalEventsCount() > 0) {
      hash = (37 * hash) + CONDITIONAL_EVENTS_FIELD_NUMBER;
      hash = (53 * hash) + getConditionalEventsList().hashCode();
    }
    if (getSlotsCount() > 0) {
      hash = (37 * hash) + SLOTS_FIELD_NUMBER;
      hash = (53 * hash) + getSlotsList().hashCode();
    }
    if (hasOnSlotUpdated()) {
      hash = (37 * hash) + ON_SLOT_UPDATED_FIELD_NUMBER;
      hash = (53 * hash) + getOnSlotUpdated().hashCode();
    }
    hash = (29 * hash) + getUnknownFields().hashCode();
    memoizedHashCode = hash;
    return hash;
  }

  public static com.google.actions.sdk.v2.interactionmodel.Scene parseFrom(
      java.nio.ByteBuffer data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static com.google.actions.sdk.v2.interactionmodel.Scene parseFrom(
      java.nio.ByteBuffer data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static com.google.actions.sdk.v2.interactionmodel.Scene parseFrom(
      com.google.protobuf.ByteString data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static com.google.actions.sdk.v2.interactionmodel.Scene parseFrom(
      com.google.protobuf.ByteString data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static com.google.actions.sdk.v2.interactionmodel.Scene parseFrom(byte[] data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static com.google.actions.sdk.v2.interactionmodel.Scene parseFrom(
      byte[] data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static com.google.actions.sdk.v2.interactionmodel.Scene parseFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input);
  }
  public static com.google.actions.sdk.v2.interactionmodel.Scene parseFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input, extensionRegistry);
  }
  public static com.google.actions.sdk.v2.interactionmodel.Scene parseDelimitedFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseDelimitedWithIOException(PARSER, input);
  }
  public static com.google.actions.sdk.v2.interactionmodel.Scene parseDelimitedFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
  }
  public static com.google.actions.sdk.v2.interactionmodel.Scene parseFrom(
      com.google.protobuf.CodedInputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input);
  }
  public static com.google.actions.sdk.v2.interactionmodel.Scene parseFrom(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input, extensionRegistry);
  }

  @java.lang.Override
  public Builder newBuilderForType() { return newBuilder(); }
  public static Builder newBuilder() {
    return DEFAULT_INSTANCE.toBuilder();
  }
  public static Builder newBuilder(com.google.actions.sdk.v2.interactionmodel.Scene prototype) {
    return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
  }
  @java.lang.Override
  public Builder toBuilder() {
    return this == DEFAULT_INSTANCE
        ? new Builder() : new Builder().mergeFrom(this);
  }

  @java.lang.Override
  protected Builder newBuilderForType(
      com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
    Builder builder = new Builder(parent);
    return builder;
  }
  /**
   * <pre>
   * Scene is the basic unit of control flow when designing a conversation. They
   * can be chained together with other scenes, generate prompts for the end user,
   * and define slots.
   * The scene name is specified in the name of the file.
   * </pre>
   *
   * Protobuf type {@code google.actions.sdk.v2.interactionmodel.Scene}
   */
  public static final class Builder extends
      com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
      // @@protoc_insertion_point(builder_implements:google.actions.sdk.v2.interactionmodel.Scene)
      com.google.actions.sdk.v2.interactionmodel.SceneOrBuilder {
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.google.actions.sdk.v2.interactionmodel.SceneProto.internal_static_google_actions_sdk_v2_interactionmodel_Scene_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.google.actions.sdk.v2.interactionmodel.SceneProto.internal_static_google_actions_sdk_v2_interactionmodel_Scene_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.google.actions.sdk.v2.interactionmodel.Scene.class, com.google.actions.sdk.v2.interactionmodel.Scene.Builder.class);
    }

    // Construct using com.google.actions.sdk.v2.interactionmodel.Scene.newBuilder()
    private Builder() {

    }

    private Builder(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      super(parent);

    }
    @java.lang.Override
    public Builder clear() {
      super.clear();
      bitField0_ = 0;
      onEnter_ = null;
      if (onEnterBuilder_ != null) {
        onEnterBuilder_.dispose();
        onEnterBuilder_ = null;
      }
      if (intentEventsBuilder_ == null) {
        intentEvents_ = java.util.Collections.emptyList();
      } else {
        intentEvents_ = null;
        intentEventsBuilder_.clear();
      }
      bitField0_ = (bitField0_ & ~0x00000002);
      if (conditionalEventsBuilder_ == null) {
        conditionalEvents_ = java.util.Collections.emptyList();
      } else {
        conditionalEvents_ = null;
        conditionalEventsBuilder_.clear();
      }
      bitField0_ = (bitField0_ & ~0x00000004);
      if (slotsBuilder_ == null) {
        slots_ = java.util.Collections.emptyList();
      } else {
        slots_ = null;
        slotsBuilder_.clear();
      }
      bitField0_ = (bitField0_ & ~0x00000008);
      onSlotUpdated_ = null;
      if (onSlotUpdatedBuilder_ != null) {
        onSlotUpdatedBuilder_.dispose();
        onSlotUpdatedBuilder_ = null;
      }
      return this;
    }

    @java.lang.Override
    public com.google.protobuf.Descriptors.Descriptor
        getDescriptorForType() {
      return com.google.actions.sdk.v2.interactionmodel.SceneProto.internal_static_google_actions_sdk_v2_interactionmodel_Scene_descriptor;
    }

    @java.lang.Override
    public com.google.actions.sdk.v2.interactionmodel.Scene getDefaultInstanceForType() {
      return com.google.actions.sdk.v2.interactionmodel.Scene.getDefaultInstance();
    }

    @java.lang.Override
    public com.google.actions.sdk.v2.interactionmodel.Scene build() {
      com.google.actions.sdk.v2.interactionmodel.Scene result = buildPartial();
      if (!result.isInitialized()) {
        throw newUninitializedMessageException(result);
      }
      return result;
    }

    @java.lang.Override
    public com.google.actions.sdk.v2.interactionmodel.Scene buildPartial() {
      com.google.actions.sdk.v2.interactionmodel.Scene result = new com.google.actions.sdk.v2.interactionmodel.Scene(this);
      buildPartialRepeatedFields(result);
      if (bitField0_ != 0) { buildPartial0(result); }
      onBuilt();
      return result;
    }

    private void buildPartialRepeatedFields(com.google.actions.sdk.v2.interactionmodel.Scene result) {
      if (intentEventsBuilder_ == null) {
        if (((bitField0_ & 0x00000002) != 0)) {
          intentEvents_ = java.util.Collections.unmodifiableList(intentEvents_);
          bitField0_ = (bitField0_ & ~0x00000002);
        }
        result.intentEvents_ = intentEvents_;
      } else {
        result.intentEvents_ = intentEventsBuilder_.build();
      }
      if (conditionalEventsBuilder_ == null) {
        if (((bitField0_ & 0x00000004) != 0)) {
          conditionalEvents_ = java.util.Collections.unmodifiableList(conditionalEvents_);
          bitField0_ = (bitField0_ & ~0x00000004);
        }
        result.conditionalEvents_ = conditionalEvents_;
      } else {
        result.conditionalEvents_ = conditionalEventsBuilder_.build();
      }
      if (slotsBuilder_ == null) {
        if (((bitField0_ & 0x00000008) != 0)) {
          slots_ = java.util.Collections.unmodifiableList(slots_);
          bitField0_ = (bitField0_ & ~0x00000008);
        }
        result.slots_ = slots_;
      } else {
        result.slots_ = slotsBuilder_.build();
      }
    }

    private void buildPartial0(com.google.actions.sdk.v2.interactionmodel.Scene result) {
      int from_bitField0_ = bitField0_;
      if (((from_bitField0_ & 0x00000001) != 0)) {
        result.onEnter_ = onEnterBuilder_ == null
            ? onEnter_
            : onEnterBuilder_.build();
      }
      if (((from_bitField0_ & 0x00000010) != 0)) {
        result.onSlotUpdated_ = onSlotUpdatedBuilder_ == null
            ? onSlotUpdated_
            : onSlotUpdatedBuilder_.build();
      }
    }

    @java.lang.Override
    public Builder clone() {
      return super.clone();
    }
    @java.lang.Override
    public Builder setField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        java.lang.Object value) {
      return super.setField(field, value);
    }
    @java.lang.Override
    public Builder clearField(
        com.google.protobuf.Descriptors.FieldDescriptor field) {
      return super.clearField(field);
    }
    @java.lang.Override
    public Builder clearOneof(
        com.google.protobuf.Descriptors.OneofDescriptor oneof) {
      return super.clearOneof(oneof);
    }
    @java.lang.Override
    public Builder setRepeatedField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        int index, java.lang.Object value) {
      return super.setRepeatedField(field, index, value);
    }
    @java.lang.Override
    public Builder addRepeatedField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        java.lang.Object value) {
      return super.addRepeatedField(field, value);
    }
    @java.lang.Override
    public Builder mergeFrom(com.google.protobuf.Message other) {
      if (other instanceof com.google.actions.sdk.v2.interactionmodel.Scene) {
        return mergeFrom((com.google.actions.sdk.v2.interactionmodel.Scene)other);
      } else {
        super.mergeFrom(other);
        return this;
      }
    }

    public Builder mergeFrom(com.google.actions.sdk.v2.interactionmodel.Scene other) {
      if (other == com.google.actions.sdk.v2.interactionmodel.Scene.getDefaultInstance()) return this;
      if (other.hasOnEnter()) {
        mergeOnEnter(other.getOnEnter());
      }
      if (intentEventsBuilder_ == null) {
        if (!other.intentEvents_.isEmpty()) {
          if (intentEvents_.isEmpty()) {
            intentEvents_ = other.intentEvents_;
            bitField0_ = (bitField0_ & ~0x00000002);
          } else {
            ensureIntentEventsIsMutable();
            intentEvents_.addAll(other.intentEvents_);
          }
          onChanged();
        }
      } else {
        if (!other.intentEvents_.isEmpty()) {
          if (intentEventsBuilder_.isEmpty()) {
            intentEventsBuilder_.dispose();
            intentEventsBuilder_ = null;
            intentEvents_ = other.intentEvents_;
            bitField0_ = (bitField0_ & ~0x00000002);
            intentEventsBuilder_ = 
              com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?
                 getIntentEventsFieldBuilder() : null;
          } else {
            intentEventsBuilder_.addAllMessages(other.intentEvents_);
          }
        }
      }
      if (conditionalEventsBuilder_ == null) {
        if (!other.conditionalEvents_.isEmpty()) {
          if (conditionalEvents_.isEmpty()) {
            conditionalEvents_ = other.conditionalEvents_;
            bitField0_ = (bitField0_ & ~0x00000004);
          } else {
            ensureConditionalEventsIsMutable();
            conditionalEvents_.addAll(other.conditionalEvents_);
          }
          onChanged();
        }
      } else {
        if (!other.conditionalEvents_.isEmpty()) {
          if (conditionalEventsBuilder_.isEmpty()) {
            conditionalEventsBuilder_.dispose();
            conditionalEventsBuilder_ = null;
            conditionalEvents_ = other.conditionalEvents_;
            bitField0_ = (bitField0_ & ~0x00000004);
            conditionalEventsBuilder_ = 
              com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?
                 getConditionalEventsFieldBuilder() : null;
          } else {
            conditionalEventsBuilder_.addAllMessages(other.conditionalEvents_);
          }
        }
      }
      if (slotsBuilder_ == null) {
        if (!other.slots_.isEmpty()) {
          if (slots_.isEmpty()) {
            slots_ = other.slots_;
            bitField0_ = (bitField0_ & ~0x00000008);
          } else {
            ensureSlotsIsMutable();
            slots_.addAll(other.slots_);
          }
          onChanged();
        }
      } else {
        if (!other.slots_.isEmpty()) {
          if (slotsBuilder_.isEmpty()) {
            slotsBuilder_.dispose();
            slotsBuilder_ = null;
            slots_ = other.slots_;
            bitField0_ = (bitField0_ & ~0x00000008);
            slotsBuilder_ = 
              com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?
                 getSlotsFieldBuilder() : null;
          } else {
            slotsBuilder_.addAllMessages(other.slots_);
          }
        }
      }
      if (other.hasOnSlotUpdated()) {
        mergeOnSlotUpdated(other.getOnSlotUpdated());
      }
      this.mergeUnknownFields(other.getUnknownFields());
      onChanged();
      return this;
    }

    @java.lang.Override
    public final boolean isInitialized() {
      return true;
    }

    @java.lang.Override
    public Builder mergeFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 10: {
              input.readMessage(
                  getOnEnterFieldBuilder().getBuilder(),
                  extensionRegistry);
              bitField0_ |= 0x00000001;
              break;
            } // case 10
            case 18: {
              com.google.actions.sdk.v2.interactionmodel.IntentEvent m =
                  input.readMessage(
                      com.google.actions.sdk.v2.interactionmodel.IntentEvent.parser(),
                      extensionRegistry);
              if (intentEventsBuilder_ == null) {
                ensureIntentEventsIsMutable();
                intentEvents_.add(m);
              } else {
                intentEventsBuilder_.addMessage(m);
              }
              break;
            } // case 18
            case 26: {
              com.google.actions.sdk.v2.interactionmodel.ConditionalEvent m =
                  input.readMessage(
                      com.google.actions.sdk.v2.interactionmodel.ConditionalEvent.parser(),
                      extensionRegistry);
              if (conditionalEventsBuilder_ == null) {
                ensureConditionalEventsIsMutable();
                conditionalEvents_.add(m);
              } else {
                conditionalEventsBuilder_.addMessage(m);
              }
              break;
            } // case 26
            case 34: {
              com.google.actions.sdk.v2.interactionmodel.Slot m =
                  input.readMessage(
                      com.google.actions.sdk.v2.interactionmodel.Slot.parser(),
                      extensionRegistry);
              if (slotsBuilder_ == null) {
                ensureSlotsIsMutable();
                slots_.add(m);
              } else {
                slotsBuilder_.addMessage(m);
              }
              break;
            } // case 34
            case 42: {
              input.readMessage(
                  getOnSlotUpdatedFieldBuilder().getBuilder(),
                  extensionRegistry);
              bitField0_ |= 0x00000010;
              break;
            } // case 42
            default: {
              if (!super.parseUnknownField(input, extensionRegistry, tag)) {
                done = true; // was an endgroup tag
              }
              break;
            } // default:
          } // switch (tag)
        } // while (!done)
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.unwrapIOException();
      } finally {
        onChanged();
      } // finally
      return this;
    }
    private int bitField0_;

    private com.google.actions.sdk.v2.interactionmodel.EventHandler onEnter_;
    private com.google.protobuf.SingleFieldBuilderV3<
        com.google.actions.sdk.v2.interactionmodel.EventHandler, com.google.actions.sdk.v2.interactionmodel.EventHandler.Builder, com.google.actions.sdk.v2.interactionmodel.EventHandlerOrBuilder> onEnterBuilder_;
    /**
     * <pre>
     * Handler to invoke when transitioning into this scene.
     * </pre>
     *
     * <code>.google.actions.sdk.v2.interactionmodel.EventHandler on_enter = 1;</code>
     * @return Whether the onEnter field is set.
     */
    public boolean hasOnEnter() {
      return ((bitField0_ & 0x00000001) != 0);
    }
    /**
     * <pre>
     * Handler to invoke when transitioning into this scene.
     * </pre>
     *
     * <code>.google.actions.sdk.v2.interactionmodel.EventHandler on_enter = 1;</code>
     * @return The onEnter.
     */
    public com.google.actions.sdk.v2.interactionmodel.EventHandler getOnEnter() {
      if (onEnterBuilder_ == null) {
        return onEnter_ == null ? com.google.actions.sdk.v2.interactionmodel.EventHandler.getDefaultInstance() : onEnter_;
      } else {
        return onEnterBuilder_.getMessage();
      }
    }
    /**
     * <pre>
     * Handler to invoke when transitioning into this scene.
     * </pre>
     *
     * <code>.google.actions.sdk.v2.interactionmodel.EventHandler on_enter = 1;</code>
     */
    public Builder setOnEnter(com.google.actions.sdk.v2.interactionmodel.EventHandler value) {
      if (onEnterBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        onEnter_ = value;
      } else {
        onEnterBuilder_.setMessage(value);
      }
      bitField0_ |= 0x00000001;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * Handler to invoke when transitioning into this scene.
     * </pre>
     *
     * <code>.google.actions.sdk.v2.interactionmodel.EventHandler on_enter = 1;</code>
     */
    public Builder setOnEnter(
        com.google.actions.sdk.v2.interactionmodel.EventHandler.Builder builderForValue) {
      if (onEnterBuilder_ == null) {
        onEnter_ = builderForValue.build();
      } else {
        onEnterBuilder_.setMessage(builderForValue.build());
      }
      bitField0_ |= 0x00000001;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * Handler to invoke when transitioning into this scene.
     * </pre>
     *
     * <code>.google.actions.sdk.v2.interactionmodel.EventHandler on_enter = 1;</code>
     */
    public Builder mergeOnEnter(com.google.actions.sdk.v2.interactionmodel.EventHandler value) {
      if (onEnterBuilder_ == null) {
        if (((bitField0_ & 0x00000001) != 0) &&
          onEnter_ != null &&
          onEnter_ != com.google.actions.sdk.v2.interactionmodel.EventHandler.getDefaultInstance()) {
          getOnEnterBuilder().mergeFrom(value);
        } else {
          onEnter_ = value;
        }
      } else {
        onEnterBuilder_.mergeFrom(value);
      }
      bitField0_ |= 0x00000001;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * Handler to invoke when transitioning into this scene.
     * </pre>
     *
     * <code>.google.actions.sdk.v2.interactionmodel.EventHandler on_enter = 1;</code>
     */
    public Builder clearOnEnter() {
      bitField0_ = (bitField0_ & ~0x00000001);
      onEnter_ = null;
      if (onEnterBuilder_ != null) {
        onEnterBuilder_.dispose();
        onEnterBuilder_ = null;
      }
      onChanged();
      return this;
    }
    /**
     * <pre>
     * Handler to invoke when transitioning into this scene.
     * </pre>
     *
     * <code>.google.actions.sdk.v2.interactionmodel.EventHandler on_enter = 1;</code>
     */
    public com.google.actions.sdk.v2.interactionmodel.EventHandler.Builder getOnEnterBuilder() {
      bitField0_ |= 0x00000001;
      onChanged();
      return getOnEnterFieldBuilder().getBuilder();
    }
    /**
     * <pre>
     * Handler to invoke when transitioning into this scene.
     * </pre>
     *
     * <code>.google.actions.sdk.v2.interactionmodel.EventHandler on_enter = 1;</code>
     */
    public com.google.actions.sdk.v2.interactionmodel.EventHandlerOrBuilder getOnEnterOrBuilder() {
      if (onEnterBuilder_ != null) {
        return onEnterBuilder_.getMessageOrBuilder();
      } else {
        return onEnter_ == null ?
            com.google.actions.sdk.v2.interactionmodel.EventHandler.getDefaultInstance() : onEnter_;
      }
    }
    /**
     * <pre>
     * Handler to invoke when transitioning into this scene.
     * </pre>
     *
     * <code>.google.actions.sdk.v2.interactionmodel.EventHandler on_enter = 1;</code>
     */
    private com.google.protobuf.SingleFieldBuilderV3<
        com.google.actions.sdk.v2.interactionmodel.EventHandler, com.google.actions.sdk.v2.interactionmodel.EventHandler.Builder, com.google.actions.sdk.v2.interactionmodel.EventHandlerOrBuilder> 
        getOnEnterFieldBuilder() {
      if (onEnterBuilder_ == null) {
        onEnterBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
            com.google.actions.sdk.v2.interactionmodel.EventHandler, com.google.actions.sdk.v2.interactionmodel.EventHandler.Builder, com.google.actions.sdk.v2.interactionmodel.EventHandlerOrBuilder>(
                getOnEnter(),
                getParentForChildren(),
                isClean());
        onEnter_ = null;
      }
      return onEnterBuilder_;
    }

    private java.util.List<com.google.actions.sdk.v2.interactionmodel.IntentEvent> intentEvents_ =
      java.util.Collections.emptyList();
    private void ensureIntentEventsIsMutable() {
      if (!((bitField0_ & 0x00000002) != 0)) {
        intentEvents_ = new java.util.ArrayList<com.google.actions.sdk.v2.interactionmodel.IntentEvent>(intentEvents_);
        bitField0_ |= 0x00000002;
       }
    }

    private com.google.protobuf.RepeatedFieldBuilderV3<
        com.google.actions.sdk.v2.interactionmodel.IntentEvent, com.google.actions.sdk.v2.interactionmodel.IntentEvent.Builder, com.google.actions.sdk.v2.interactionmodel.IntentEventOrBuilder> intentEventsBuilder_;

    /**
     * <pre>
     * The list of events that trigger based on intents. These events can
     * be triggered at any time after the on_load Handler has been called.
     * Important - these events define the set of intents which are scoped to
     * this scene and will take precedence over any globally defined events that
     * have the same intents or their triggering phrases. Intent names must be
     * unique within a scene.
     * </pre>
     *
     * <code>repeated .google.actions.sdk.v2.interactionmodel.IntentEvent intent_events = 2;</code>
     */
    public java.util.List<com.google.actions.sdk.v2.interactionmodel.IntentEvent> getIntentEventsList() {
      if (intentEventsBuilder_ == null) {
        return java.util.Collections.unmodifiableList(intentEvents_);
      } else {
        return intentEventsBuilder_.getMessageList();
      }
    }
    /**
     * <pre>
     * The list of events that trigger based on intents. These events can
     * be triggered at any time after the on_load Handler has been called.
     * Important - these events define the set of intents which are scoped to
     * this scene and will take precedence over any globally defined events that
     * have the same intents or their triggering phrases. Intent names must be
     * unique within a scene.
     * </pre>
     *
     * <code>repeated .google.actions.sdk.v2.interactionmodel.IntentEvent intent_events = 2;</code>
     */
    public int getIntentEventsCount() {
      if (intentEventsBuilder_ == null) {
        return intentEvents_.size();
      } else {
        return intentEventsBuilder_.getCount();
      }
    }
    /**
     * <pre>
     * The list of events that trigger based on intents. These events can
     * be triggered at any time after the on_load Handler has been called.
     * Important - these events define the set of intents which are scoped to
     * this scene and will take precedence over any globally defined events that
     * have the same intents or their triggering phrases. Intent names must be
     * unique within a scene.
     * </pre>
     *
     * <code>repeated .google.actions.sdk.v2.interactionmodel.IntentEvent intent_events = 2;</code>
     */
    public com.google.actions.sdk.v2.interactionmodel.IntentEvent getIntentEvents(int index) {
      if (intentEventsBuilder_ == null) {
        return intentEvents_.get(index);
      } else {
        return intentEventsBuilder_.getMessage(index);
      }
    }
    /**
     * <pre>
     * The list of events that trigger based on intents. These events can
     * be triggered at any time after the on_load Handler has been called.
     * Important - these events define the set of intents which are scoped to
     * this scene and will take precedence over any globally defined events that
     * have the same intents or their triggering phrases. Intent names must be
     * unique within a scene.
     * </pre>
     *
     * <code>repeated .google.actions.sdk.v2.interactionmodel.IntentEvent intent_events = 2;</code>
     */
    public Builder setIntentEvents(
        int index, com.google.actions.sdk.v2.interactionmodel.IntentEvent value) {
      if (intentEventsBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureIntentEventsIsMutable();
        intentEvents_.set(index, value);
        onChanged();
      } else {
        intentEventsBuilder_.setMessage(index, value);
      }
      return this;
    }
    /**
     * <pre>
     * The list of events that trigger based on intents. These events can
     * be triggered at any time after the on_load Handler has been called.
     * Important - these events define the set of intents which are scoped to
     * this scene and will take precedence over any globally defined events that
     * have the same intents or their triggering phrases. Intent names must be
     * unique within a scene.
     * </pre>
     *
     * <code>repeated .google.actions.sdk.v2.interactionmodel.IntentEvent intent_events = 2;</code>
     */
    public Builder setIntentEvents(
        int index, com.google.actions.sdk.v2.interactionmodel.IntentEvent.Builder builderForValue) {
      if (intentEventsBuilder_ == null) {
        ensureIntentEventsIsMutable();
        intentEvents_.set(index, builderForValue.build());
        onChanged();
      } else {
        intentEventsBuilder_.setMessage(index, builderForValue.build());
      }
      return this;
    }
    /**
     * <pre>
     * The list of events that trigger based on intents. These events can
     * be triggered at any time after the on_load Handler has been called.
     * Important - these events define the set of intents which are scoped to
     * this scene and will take precedence over any globally defined events that
     * have the same intents or their triggering phrases. Intent names must be
     * unique within a scene.
     * </pre>
     *
     * <code>repeated .google.actions.sdk.v2.interactionmodel.IntentEvent intent_events = 2;</code>
     */
    public Builder addIntentEvents(com.google.actions.sdk.v2.interactionmodel.IntentEvent value) {
      if (intentEventsBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureIntentEventsIsMutable();
        intentEvents_.add(value);
        onChanged();
      } else {
        intentEventsBuilder_.addMessage(value);
      }
      return this;
    }
    /**
     * <pre>
     * The list of events that trigger based on intents. These events can
     * be triggered at any time after the on_load Handler has been called.
     * Important - these events define the set of intents which are scoped to
     * this scene and will take precedence over any globally defined events that
     * have the same intents or their triggering phrases. Intent names must be
     * unique within a scene.
     * </pre>
     *
     * <code>repeated .google.actions.sdk.v2.interactionmodel.IntentEvent intent_events = 2;</code>
     */
    public Builder addIntentEvents(
        int index, com.google.actions.sdk.v2.interactionmodel.IntentEvent value) {
      if (intentEventsBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureIntentEventsIsMutable();
        intentEvents_.add(index, value);
        onChanged();
      } else {
        intentEventsBuilder_.addMessage(index, value);
      }
      return this;
    }
    /**
     * <pre>
     * The list of events that trigger based on intents. These events can
     * be triggered at any time after the on_load Handler has been called.
     * Important - these events define the set of intents which are scoped to
     * this scene and will take precedence over any globally defined events that
     * have the same intents or their triggering phrases. Intent names must be
     * unique within a scene.
     * </pre>
     *
     * <code>repeated .google.actions.sdk.v2.interactionmodel.IntentEvent intent_events = 2;</code>
     */
    public Builder addIntentEvents(
        com.google.actions.sdk.v2.interactionmodel.IntentEvent.Builder builderForValue) {
      if (intentEventsBuilder_ == null) {
        ensureIntentEventsIsMutable();
        intentEvents_.add(builderForValue.build());
        onChanged();
      } else {
        intentEventsBuilder_.addMessage(builderForValue.build());
      }
      return this;
    }
    /**
     * <pre>
     * The list of events that trigger based on intents. These events can
     * be triggered at any time after the on_load Handler has been called.
     * Important - these events define the set of intents which are scoped to
     * this scene and will take precedence over any globally defined events that
     * have the same intents or their triggering phrases. Intent names must be
     * unique within a scene.
     * </pre>
     *
     * <code>repeated .google.actions.sdk.v2.interactionmodel.IntentEvent intent_events = 2;</code>
     */
    public Builder addIntentEvents(
        int index, com.google.actions.sdk.v2.interactionmodel.IntentEvent.Builder builderForValue) {
      if (intentEventsBuilder_ == null) {
        ensureIntentEventsIsMutable();
        intentEvents_.add(index, builderForValue.build());
        onChanged();
      } else {
        intentEventsBuilder_.addMessage(index, builderForValue.build());
      }
      return this;
    }
    /**
     * <pre>
     * The list of events that trigger based on intents. These events can
     * be triggered at any time after the on_load Handler has been called.
     * Important - these events define the set of intents which are scoped to
     * this scene and will take precedence over any globally defined events that
     * have the same intents or their triggering phrases. Intent names must be
     * unique within a scene.
     * </pre>
     *
     * <code>repeated .google.actions.sdk.v2.interactionmodel.IntentEvent intent_events = 2;</code>
     */
    public Builder addAllIntentEvents(
        java.lang.Iterable<? extends com.google.actions.sdk.v2.interactionmodel.IntentEvent> values) {
      if (intentEventsBuilder_ == null) {
        ensureIntentEventsIsMutable();
        com.google.protobuf.AbstractMessageLite.Builder.addAll(
            values, intentEvents_);
        onChanged();
      } else {
        intentEventsBuilder_.addAllMessages(values);
      }
      return this;
    }
    /**
     * <pre>
     * The list of events that trigger based on intents. These events can
     * be triggered at any time after the on_load Handler has been called.
     * Important - these events define the set of intents which are scoped to
     * this scene and will take precedence over any globally defined events that
     * have the same intents or their triggering phrases. Intent names must be
     * unique within a scene.
     * </pre>
     *
     * <code>repeated .google.actions.sdk.v2.interactionmodel.IntentEvent intent_events = 2;</code>
     */
    public Builder clearIntentEvents() {
      if (intentEventsBuilder_ == null) {
        intentEvents_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000002);
        onChanged();
      } else {
        intentEventsBuilder_.clear();
      }
      return this;
    }
    /**
     * <pre>
     * The list of events that trigger based on intents. These events can
     * be triggered at any time after the on_load Handler has been called.
     * Important - these events define the set of intents which are scoped to
     * this scene and will take precedence over any globally defined events that
     * have the same intents or their triggering phrases. Intent names must be
     * unique within a scene.
     * </pre>
     *
     * <code>repeated .google.actions.sdk.v2.interactionmodel.IntentEvent intent_events = 2;</code>
     */
    public Builder removeIntentEvents(int index) {
      if (intentEventsBuilder_ == null) {
        ensureIntentEventsIsMutable();
        intentEvents_.remove(index);
        onChanged();
      } else {
        intentEventsBuilder_.remove(index);
      }
      return this;
    }
    /**
     * <pre>
     * The list of events that trigger based on intents. These events can
     * be triggered at any time after the on_load Handler has been called.
     * Important - these events define the set of intents which are scoped to
     * this scene and will take precedence over any globally defined events that
     * have the same intents or their triggering phrases. Intent names must be
     * unique within a scene.
     * </pre>
     *
     * <code>repeated .google.actions.sdk.v2.interactionmodel.IntentEvent intent_events = 2;</code>
     */
    public com.google.actions.sdk.v2.interactionmodel.IntentEvent.Builder getIntentEventsBuilder(
        int index) {
      return getIntentEventsFieldBuilder().getBuilder(index);
    }
    /**
     * <pre>
     * The list of events that trigger based on intents. These events can
     * be triggered at any time after the on_load Handler has been called.
     * Important - these events define the set of intents which are scoped to
     * this scene and will take precedence over any globally defined events that
     * have the same intents or their triggering phrases. Intent names must be
     * unique within a scene.
     * </pre>
     *
     * <code>repeated .google.actions.sdk.v2.interactionmodel.IntentEvent intent_events = 2;</code>
     */
    public com.google.actions.sdk.v2.interactionmodel.IntentEventOrBuilder getIntentEventsOrBuilder(
        int index) {
      if (intentEventsBuilder_ == null) {
        return intentEvents_.get(index);  } else {
        return intentEventsBuilder_.getMessageOrBuilder(index);
      }
    }
    /**
     * <pre>
     * The list of events that trigger based on intents. These events can
     * be triggered at any time after the on_load Handler has been called.
     * Important - these events define the set of intents which are scoped to
     * this scene and will take precedence over any globally defined events that
     * have the same intents or their triggering phrases. Intent names must be
     * unique within a scene.
     * </pre>
     *
     * <code>repeated .google.actions.sdk.v2.interactionmodel.IntentEvent intent_events = 2;</code>
     */
    public java.util.List<? extends com.google.actions.sdk.v2.interactionmodel.IntentEventOrBuilder> 
         getIntentEventsOrBuilderList() {
      if (intentEventsBuilder_ != null) {
        return intentEventsBuilder_.getMessageOrBuilderList();
      } else {
        return java.util.Collections.unmodifiableList(intentEvents_);
      }
    }
    /**
     * <pre>
     * The list of events that trigger based on intents. These events can
     * be triggered at any time after the on_load Handler has been called.
     * Important - these events define the set of intents which are scoped to
     * this scene and will take precedence over any globally defined events that
     * have the same intents or their triggering phrases. Intent names must be
     * unique within a scene.
     * </pre>
     *
     * <code>repeated .google.actions.sdk.v2.interactionmodel.IntentEvent intent_events = 2;</code>
     */
    public com.google.actions.sdk.v2.interactionmodel.IntentEvent.Builder addIntentEventsBuilder() {
      return getIntentEventsFieldBuilder().addBuilder(
          com.google.actions.sdk.v2.interactionmodel.IntentEvent.getDefaultInstance());
    }
    /**
     * <pre>
     * The list of events that trigger based on intents. These events can
     * be triggered at any time after the on_load Handler has been called.
     * Important - these events define the set of intents which are scoped to
     * this scene and will take precedence over any globally defined events that
     * have the same intents or their triggering phrases. Intent names must be
     * unique within a scene.
     * </pre>
     *
     * <code>repeated .google.actions.sdk.v2.interactionmodel.IntentEvent intent_events = 2;</code>
     */
    public com.google.actions.sdk.v2.interactionmodel.IntentEvent.Builder addIntentEventsBuilder(
        int index) {
      return getIntentEventsFieldBuilder().addBuilder(
          index, com.google.actions.sdk.v2.interactionmodel.IntentEvent.getDefaultInstance());
    }
    /**
     * <pre>
     * The list of events that trigger based on intents. These events can
     * be triggered at any time after the on_load Handler has been called.
     * Important - these events define the set of intents which are scoped to
     * this scene and will take precedence over any globally defined events that
     * have the same intents or their triggering phrases. Intent names must be
     * unique within a scene.
     * </pre>
     *
     * <code>repeated .google.actions.sdk.v2.interactionmodel.IntentEvent intent_events = 2;</code>
     */
    public java.util.List<com.google.actions.sdk.v2.interactionmodel.IntentEvent.Builder> 
         getIntentEventsBuilderList() {
      return getIntentEventsFieldBuilder().getBuilderList();
    }
    private com.google.protobuf.RepeatedFieldBuilderV3<
        com.google.actions.sdk.v2.interactionmodel.IntentEvent, com.google.actions.sdk.v2.interactionmodel.IntentEvent.Builder, com.google.actions.sdk.v2.interactionmodel.IntentEventOrBuilder> 
        getIntentEventsFieldBuilder() {
      if (intentEventsBuilder_ == null) {
        intentEventsBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<
            com.google.actions.sdk.v2.interactionmodel.IntentEvent, com.google.actions.sdk.v2.interactionmodel.IntentEvent.Builder, com.google.actions.sdk.v2.interactionmodel.IntentEventOrBuilder>(
                intentEvents_,
                ((bitField0_ & 0x00000002) != 0),
                getParentForChildren(),
                isClean());
        intentEvents_ = null;
      }
      return intentEventsBuilder_;
    }

    private java.util.List<com.google.actions.sdk.v2.interactionmodel.ConditionalEvent> conditionalEvents_ =
      java.util.Collections.emptyList();
    private void ensureConditionalEventsIsMutable() {
      if (!((bitField0_ & 0x00000004) != 0)) {
        conditionalEvents_ = new java.util.ArrayList<com.google.actions.sdk.v2.interactionmodel.ConditionalEvent>(conditionalEvents_);
        bitField0_ |= 0x00000004;
       }
    }

    private com.google.protobuf.RepeatedFieldBuilderV3<
        com.google.actions.sdk.v2.interactionmodel.ConditionalEvent, com.google.actions.sdk.v2.interactionmodel.ConditionalEvent.Builder, com.google.actions.sdk.v2.interactionmodel.ConditionalEventOrBuilder> conditionalEventsBuilder_;

    /**
     * <pre>
     * The list of events to trigger based on conditional statements. These are
     * evaluated after the form has been filled or immediately after on_load if
     * this scene does not have a form (evaluation is only done once). Only the
     * first matching event will be triggered.
     * </pre>
     *
     * <code>repeated .google.actions.sdk.v2.interactionmodel.ConditionalEvent conditional_events = 3;</code>
     */
    public java.util.List<com.google.actions.sdk.v2.interactionmodel.ConditionalEvent> getConditionalEventsList() {
      if (conditionalEventsBuilder_ == null) {
        return java.util.Collections.unmodifiableList(conditionalEvents_);
      } else {
        return conditionalEventsBuilder_.getMessageList();
      }
    }
    /**
     * <pre>
     * The list of events to trigger based on conditional statements. These are
     * evaluated after the form has been filled or immediately after on_load if
     * this scene does not have a form (evaluation is only done once). Only the
     * first matching event will be triggered.
     * </pre>
     *
     * <code>repeated .google.actions.sdk.v2.interactionmodel.ConditionalEvent conditional_events = 3;</code>
     */
    public int getConditionalEventsCount() {
      if (conditionalEventsBuilder_ == null) {
        return conditionalEvents_.size();
      } else {
        return conditionalEventsBuilder_.getCount();
      }
    }
    /**
     * <pre>
     * The list of events to trigger based on conditional statements. These are
     * evaluated after the form has been filled or immediately after on_load if
     * this scene does not have a form (evaluation is only done once). Only the
     * first matching event will be triggered.
     * </pre>
     *
     * <code>repeated .google.actions.sdk.v2.interactionmodel.ConditionalEvent conditional_events = 3;</code>
     */
    public com.google.actions.sdk.v2.interactionmodel.ConditionalEvent getConditionalEvents(int index) {
      if (conditionalEventsBuilder_ == null) {
        return conditionalEvents_.get(index);
      } else {
        return conditionalEventsBuilder_.getMessage(index);
      }
    }
    /**
     * <pre>
     * The list of events to trigger based on conditional statements. These are
     * evaluated after the form has been filled or immediately after on_load if
     * this scene does not have a form (evaluation is only done once). Only the
     * first matching event will be triggered.
     * </pre>
     *
     * <code>repeated .google.actions.sdk.v2.interactionmodel.ConditionalEvent conditional_events = 3;</code>
     */
    public Builder setConditionalEvents(
        int index, com.google.actions.sdk.v2.interactionmodel.ConditionalEvent value) {
      if (conditionalEventsBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureConditionalEventsIsMutable();
        conditionalEvents_.set(index, value);
        onChanged();
      } else {
        conditionalEventsBuilder_.setMessage(index, value);
      }
      return this;
    }
    /**
     * <pre>
     * The list of events to trigger based on conditional statements. These are
     * evaluated after the form has been filled or immediately after on_load if
     * this scene does not have a form (evaluation is only done once). Only the
     * first matching event will be triggered.
     * </pre>
     *
     * <code>repeated .google.actions.sdk.v2.interactionmodel.ConditionalEvent conditional_events = 3;</code>
     */
    public Builder setConditionalEvents(
        int index, com.google.actions.sdk.v2.interactionmodel.ConditionalEvent.Builder builderForValue) {
      if (conditionalEventsBuilder_ == null) {
        ensureConditionalEventsIsMutable();
        conditionalEvents_.set(index, builderForValue.build());
        onChanged();
      } else {
        conditionalEventsBuilder_.setMessage(index, builderForValue.build());
      }
      return this;
    }
    /**
     * <pre>
     * The list of events to trigger based on conditional statements. These are
     * evaluated after the form has been filled or immediately after on_load if
     * this scene does not have a form (evaluation is only done once). Only the
     * first matching event will be triggered.
     * </pre>
     *
     * <code>repeated .google.actions.sdk.v2.interactionmodel.ConditionalEvent conditional_events = 3;</code>
     */
    public Builder addConditionalEvents(com.google.actions.sdk.v2.interactionmodel.ConditionalEvent value) {
      if (conditionalEventsBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureConditionalEventsIsMutable();
        conditionalEvents_.add(value);
        onChanged();
      } else {
        conditionalEventsBuilder_.addMessage(value);
      }
      return this;
    }
    /**
     * <pre>
     * The list of events to trigger based on conditional statements. These are
     * evaluated after the form has been filled or immediately after on_load if
     * this scene does not have a form (evaluation is only done once). Only the
     * first matching event will be triggered.
     * </pre>
     *
     * <code>repeated .google.actions.sdk.v2.interactionmodel.ConditionalEvent conditional_events = 3;</code>
     */
    public Builder addConditionalEvents(
        int index, com.google.actions.sdk.v2.interactionmodel.ConditionalEvent value) {
      if (conditionalEventsBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureConditionalEventsIsMutable();
        conditionalEvents_.add(index, value);
        onChanged();
      } else {
        conditionalEventsBuilder_.addMessage(index, value);
      }
      return this;
    }
    /**
     * <pre>
     * The list of events to trigger based on conditional statements. These are
     * evaluated after the form has been filled or immediately after on_load if
     * this scene does not have a form (evaluation is only done once). Only the
     * first matching event will be triggered.
     * </pre>
     *
     * <code>repeated .google.actions.sdk.v2.interactionmodel.ConditionalEvent conditional_events = 3;</code>
     */
    public Builder addConditionalEvents(
        com.google.actions.sdk.v2.interactionmodel.ConditionalEvent.Builder builderForValue) {
      if (conditionalEventsBuilder_ == null) {
        ensureConditionalEventsIsMutable();
        conditionalEvents_.add(builderForValue.build());
        onChanged();
      } else {
        conditionalEventsBuilder_.addMessage(builderForValue.build());
      }
      return this;
    }
    /**
     * <pre>
     * The list of events to trigger based on conditional statements. These are
     * evaluated after the form has been filled or immediately after on_load if
     * this scene does not have a form (evaluation is only done once). Only the
     * first matching event will be triggered.
     * </pre>
     *
     * <code>repeated .google.actions.sdk.v2.interactionmodel.ConditionalEvent conditional_events = 3;</code>
     */
    public Builder addConditionalEvents(
        int index, com.google.actions.sdk.v2.interactionmodel.ConditionalEvent.Builder builderForValue) {
      if (conditionalEventsBuilder_ == null) {
        ensureConditionalEventsIsMutable();
        conditionalEvents_.add(index, builderForValue.build());
        onChanged();
      } else {
        conditionalEventsBuilder_.addMessage(index, builderForValue.build());
      }
      return this;
    }
    /**
     * <pre>
     * The list of events to trigger based on conditional statements. These are
     * evaluated after the form has been filled or immediately after on_load if
     * this scene does not have a form (evaluation is only done once). Only the
     * first matching event will be triggered.
     * </pre>
     *
     * <code>repeated .google.actions.sdk.v2.interactionmodel.ConditionalEvent conditional_events = 3;</code>
     */
    public Builder addAllConditionalEvents(
        java.lang.Iterable<? extends com.google.actions.sdk.v2.interactionmodel.ConditionalEvent> values) {
      if (conditionalEventsBuilder_ == null) {
        ensureConditionalEventsIsMutable();
        com.google.protobuf.AbstractMessageLite.Builder.addAll(
            values, conditionalEvents_);
        onChanged();
      } else {
        conditionalEventsBuilder_.addAllMessages(values);
      }
      return this;
    }
    /**
     * <pre>
     * The list of events to trigger based on conditional statements. These are
     * evaluated after the form has been filled or immediately after on_load if
     * this scene does not have a form (evaluation is only done once). Only the
     * first matching event will be triggered.
     * </pre>
     *
     * <code>repeated .google.actions.sdk.v2.interactionmodel.ConditionalEvent conditional_events = 3;</code>
     */
    public Builder clearConditionalEvents() {
      if (conditionalEventsBuilder_ == null) {
        conditionalEvents_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000004);
        onChanged();
      } else {
        conditionalEventsBuilder_.clear();
      }
      return this;
    }
    /**
     * <pre>
     * The list of events to trigger based on conditional statements. These are
     * evaluated after the form has been filled or immediately after on_load if
     * this scene does not have a form (evaluation is only done once). Only the
     * first matching event will be triggered.
     * </pre>
     *
     * <code>repeated .google.actions.sdk.v2.interactionmodel.ConditionalEvent conditional_events = 3;</code>
     */
    public Builder removeConditionalEvents(int index) {
      if (conditionalEventsBuilder_ == null) {
        ensureConditionalEventsIsMutable();
        conditionalEvents_.remove(index);
        onChanged();
      } else {
        conditionalEventsBuilder_.remove(index);
      }
      return this;
    }
    /**
     * <pre>
     * The list of events to trigger based on conditional statements. These are
     * evaluated after the form has been filled or immediately after on_load if
     * this scene does not have a form (evaluation is only done once). Only the
     * first matching event will be triggered.
     * </pre>
     *
     * <code>repeated .google.actions.sdk.v2.interactionmodel.ConditionalEvent conditional_events = 3;</code>
     */
    public com.google.actions.sdk.v2.interactionmodel.ConditionalEvent.Builder getConditionalEventsBuilder(
        int index) {
      return getConditionalEventsFieldBuilder().getBuilder(index);
    }
    /**
     * <pre>
     * The list of events to trigger based on conditional statements. These are
     * evaluated after the form has been filled or immediately after on_load if
     * this scene does not have a form (evaluation is only done once). Only the
     * first matching event will be triggered.
     * </pre>
     *
     * <code>repeated .google.actions.sdk.v2.interactionmodel.ConditionalEvent conditional_events = 3;</code>
     */
    public com.google.actions.sdk.v2.interactionmodel.ConditionalEventOrBuilder getConditionalEventsOrBuilder(
        int index) {
      if (conditionalEventsBuilder_ == null) {
        return conditionalEvents_.get(index);  } else {
        return conditionalEventsBuilder_.getMessageOrBuilder(index);
      }
    }
    /**
     * <pre>
     * The list of events to trigger based on conditional statements. These are
     * evaluated after the form has been filled or immediately after on_load if
     * this scene does not have a form (evaluation is only done once). Only the
     * first matching event will be triggered.
     * </pre>
     *
     * <code>repeated .google.actions.sdk.v2.interactionmodel.ConditionalEvent conditional_events = 3;</code>
     */
    public java.util.List<? extends com.google.actions.sdk.v2.interactionmodel.ConditionalEventOrBuilder> 
         getConditionalEventsOrBuilderList() {
      if (conditionalEventsBuilder_ != null) {
        return conditionalEventsBuilder_.getMessageOrBuilderList();
      } else {
        return java.util.Collections.unmodifiableList(conditionalEvents_);
      }
    }
    /**
     * <pre>
     * The list of events to trigger based on conditional statements. These are
     * evaluated after the form has been filled or immediately after on_load if
     * this scene does not have a form (evaluation is only done once). Only the
     * first matching event will be triggered.
     * </pre>
     *
     * <code>repeated .google.actions.sdk.v2.interactionmodel.ConditionalEvent conditional_events = 3;</code>
     */
    public com.google.actions.sdk.v2.interactionmodel.ConditionalEvent.Builder addConditionalEventsBuilder() {
      return getConditionalEventsFieldBuilder().addBuilder(
          com.google.actions.sdk.v2.interactionmodel.ConditionalEvent.getDefaultInstance());
    }
    /**
     * <pre>
     * The list of events to trigger based on conditional statements. These are
     * evaluated after the form has been filled or immediately after on_load if
     * this scene does not have a form (evaluation is only done once). Only the
     * first matching event will be triggered.
     * </pre>
     *
     * <code>repeated .google.actions.sdk.v2.interactionmodel.ConditionalEvent conditional_events = 3;</code>
     */
    public com.google.actions.sdk.v2.interactionmodel.ConditionalEvent.Builder addConditionalEventsBuilder(
        int index) {
      return getConditionalEventsFieldBuilder().addBuilder(
          index, com.google.actions.sdk.v2.interactionmodel.ConditionalEvent.getDefaultInstance());
    }
    /**
     * <pre>
     * The list of events to trigger based on conditional statements. These are
     * evaluated after the form has been filled or immediately after on_load if
     * this scene does not have a form (evaluation is only done once). Only the
     * first matching event will be triggered.
     * </pre>
     *
     * <code>repeated .google.actions.sdk.v2.interactionmodel.ConditionalEvent conditional_events = 3;</code>
     */
    public java.util.List<com.google.actions.sdk.v2.interactionmodel.ConditionalEvent.Builder> 
         getConditionalEventsBuilderList() {
      return getConditionalEventsFieldBuilder().getBuilderList();
    }
    private com.google.protobuf.RepeatedFieldBuilderV3<
        com.google.actions.sdk.v2.interactionmodel.ConditionalEvent, com.google.actions.sdk.v2.interactionmodel.ConditionalEvent.Builder, com.google.actions.sdk.v2.interactionmodel.ConditionalEventOrBuilder> 
        getConditionalEventsFieldBuilder() {
      if (conditionalEventsBuilder_ == null) {
        conditionalEventsBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<
            com.google.actions.sdk.v2.interactionmodel.ConditionalEvent, com.google.actions.sdk.v2.interactionmodel.ConditionalEvent.Builder, com.google.actions.sdk.v2.interactionmodel.ConditionalEventOrBuilder>(
                conditionalEvents_,
                ((bitField0_ & 0x00000004) != 0),
                getParentForChildren(),
                isClean());
        conditionalEvents_ = null;
      }
      return conditionalEventsBuilder_;
    }

    private java.util.List<com.google.actions.sdk.v2.interactionmodel.Slot> slots_ =
      java.util.Collections.emptyList();
    private void ensureSlotsIsMutable() {
      if (!((bitField0_ & 0x00000008) != 0)) {
        slots_ = new java.util.ArrayList<com.google.actions.sdk.v2.interactionmodel.Slot>(slots_);
        bitField0_ |= 0x00000008;
       }
    }

    private com.google.protobuf.RepeatedFieldBuilderV3<
        com.google.actions.sdk.v2.interactionmodel.Slot, com.google.actions.sdk.v2.interactionmodel.Slot.Builder, com.google.actions.sdk.v2.interactionmodel.SlotOrBuilder> slotsBuilder_;

    /**
     * <pre>
     * Ordered list of slots. Each slot defines the type of data
     * that it will resolve and configuration to customize the experience of this
     * resolution (e.g. prompts).
     * </pre>
     *
     * <code>repeated .google.actions.sdk.v2.interactionmodel.Slot slots = 4;</code>
     */
    public java.util.List<com.google.actions.sdk.v2.interactionmodel.Slot> getSlotsList() {
      if (slotsBuilder_ == null) {
        return java.util.Collections.unmodifiableList(slots_);
      } else {
        return slotsBuilder_.getMessageList();
      }
    }
    /**
     * <pre>
     * Ordered list of slots. Each slot defines the type of data
     * that it will resolve and configuration to customize the experience of this
     * resolution (e.g. prompts).
     * </pre>
     *
     * <code>repeated .google.actions.sdk.v2.interactionmodel.Slot slots = 4;</code>
     */
    public int getSlotsCount() {
      if (slotsBuilder_ == null) {
        return slots_.size();
      } else {
        return slotsBuilder_.getCount();
      }
    }
    /**
     * <pre>
     * Ordered list of slots. Each slot defines the type of data
     * that it will resolve and configuration to customize the experience of this
     * resolution (e.g. prompts).
     * </pre>
     *
     * <code>repeated .google.actions.sdk.v2.interactionmodel.Slot slots = 4;</code>
     */
    public com.google.actions.sdk.v2.interactionmodel.Slot getSlots(int index) {
      if (slotsBuilder_ == null) {
        return slots_.get(index);
      } else {
        return slotsBuilder_.getMessage(index);
      }
    }
    /**
     * <pre>
     * Ordered list of slots. Each slot defines the type of data
     * that it will resolve and configuration to customize the experience of this
     * resolution (e.g. prompts).
     * </pre>
     *
     * <code>repeated .google.actions.sdk.v2.interactionmodel.Slot slots = 4;</code>
     */
    public Builder setSlots(
        int index, com.google.actions.sdk.v2.interactionmodel.Slot value) {
      if (slotsBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureSlotsIsMutable();
        slots_.set(index, value);
        onChanged();
      } else {
        slotsBuilder_.setMessage(index, value);
      }
      return this;
    }
    /**
     * <pre>
     * Ordered list of slots. Each slot defines the type of data
     * that it will resolve and configuration to customize the experience of this
     * resolution (e.g. prompts).
     * </pre>
     *
     * <code>repeated .google.actions.sdk.v2.interactionmodel.Slot slots = 4;</code>
     */
    public Builder setSlots(
        int index, com.google.actions.sdk.v2.interactionmodel.Slot.Builder builderForValue) {
      if (slotsBuilder_ == null) {
        ensureSlotsIsMutable();
        slots_.set(index, builderForValue.build());
        onChanged();
      } else {
        slotsBuilder_.setMessage(index, builderForValue.build());
      }
      return this;
    }
    /**
     * <pre>
     * Ordered list of slots. Each slot defines the type of data
     * that it will resolve and configuration to customize the experience of this
     * resolution (e.g. prompts).
     * </pre>
     *
     * <code>repeated .google.actions.sdk.v2.interactionmodel.Slot slots = 4;</code>
     */
    public Builder addSlots(com.google.actions.sdk.v2.interactionmodel.Slot value) {
      if (slotsBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureSlotsIsMutable();
        slots_.add(value);
        onChanged();
      } else {
        slotsBuilder_.addMessage(value);
      }
      return this;
    }
    /**
     * <pre>
     * Ordered list of slots. Each slot defines the type of data
     * that it will resolve and configuration to customize the experience of this
     * resolution (e.g. prompts).
     * </pre>
     *
     * <code>repeated .google.actions.sdk.v2.interactionmodel.Slot slots = 4;</code>
     */
    public Builder addSlots(
        int index, com.google.actions.sdk.v2.interactionmodel.Slot value) {
      if (slotsBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureSlotsIsMutable();
        slots_.add(index, value);
        onChanged();
      } else {
        slotsBuilder_.addMessage(index, value);
      }
      return this;
    }
    /**
     * <pre>
     * Ordered list of slots. Each slot defines the type of data
     * that it will resolve and configuration to customize the experience of this
     * resolution (e.g. prompts).
     * </pre>
     *
     * <code>repeated .google.actions.sdk.v2.interactionmodel.Slot slots = 4;</code>
     */
    public Builder addSlots(
        com.google.actions.sdk.v2.interactionmodel.Slot.Builder builderForValue) {
      if (slotsBuilder_ == null) {
        ensureSlotsIsMutable();
        slots_.add(builderForValue.build());
        onChanged();
      } else {
        slotsBuilder_.addMessage(builderForValue.build());
      }
      return this;
    }
    /**
     * <pre>
     * Ordered list of slots. Each slot defines the type of data
     * that it will resolve and configuration to customize the experience of this
     * resolution (e.g. prompts).
     * </pre>
     *
     * <code>repeated .google.actions.sdk.v2.interactionmodel.Slot slots = 4;</code>
     */
    public Builder addSlots(
        int index, com.google.actions.sdk.v2.interactionmodel.Slot.Builder builderForValue) {
      if (slotsBuilder_ == null) {
        ensureSlotsIsMutable();
        slots_.add(index, builderForValue.build());
        onChanged();
      } else {
        slotsBuilder_.addMessage(index, builderForValue.build());
      }
      return this;
    }
    /**
     * <pre>
     * Ordered list of slots. Each slot defines the type of data
     * that it will resolve and configuration to customize the experience of this
     * resolution (e.g. prompts).
     * </pre>
     *
     * <code>repeated .google.actions.sdk.v2.interactionmodel.Slot slots = 4;</code>
     */
    public Builder addAllSlots(
        java.lang.Iterable<? extends com.google.actions.sdk.v2.interactionmodel.Slot> values) {
      if (slotsBuilder_ == null) {
        ensureSlotsIsMutable();
        com.google.protobuf.AbstractMessageLite.Builder.addAll(
            values, slots_);
        onChanged();
      } else {
        slotsBuilder_.addAllMessages(values);
      }
      return this;
    }
    /**
     * <pre>
     * Ordered list of slots. Each slot defines the type of data
     * that it will resolve and configuration to customize the experience of this
     * resolution (e.g. prompts).
     * </pre>
     *
     * <code>repeated .google.actions.sdk.v2.interactionmodel.Slot slots = 4;</code>
     */
    public Builder clearSlots() {
      if (slotsBuilder_ == null) {
        slots_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000008);
        onChanged();
      } else {
        slotsBuilder_.clear();
      }
      return this;
    }
    /**
     * <pre>
     * Ordered list of slots. Each slot defines the type of data
     * that it will resolve and configuration to customize the experience of this
     * resolution (e.g. prompts).
     * </pre>
     *
     * <code>repeated .google.actions.sdk.v2.interactionmodel.Slot slots = 4;</code>
     */
    public Builder removeSlots(int index) {
      if (slotsBuilder_ == null) {
        ensureSlotsIsMutable();
        slots_.remove(index);
        onChanged();
      } else {
        slotsBuilder_.remove(index);
      }
      return this;
    }
    /**
     * <pre>
     * Ordered list of slots. Each slot defines the type of data
     * that it will resolve and configuration to customize the experience of this
     * resolution (e.g. prompts).
     * </pre>
     *
     * <code>repeated .google.actions.sdk.v2.interactionmodel.Slot slots = 4;</code>
     */
    public com.google.actions.sdk.v2.interactionmodel.Slot.Builder getSlotsBuilder(
        int index) {
      return getSlotsFieldBuilder().getBuilder(index);
    }
    /**
     * <pre>
     * Ordered list of slots. Each slot defines the type of data
     * that it will resolve and configuration to customize the experience of this
     * resolution (e.g. prompts).
     * </pre>
     *
     * <code>repeated .google.actions.sdk.v2.interactionmodel.Slot slots = 4;</code>
     */
    public com.google.actions.sdk.v2.interactionmodel.SlotOrBuilder getSlotsOrBuilder(
        int index) {
      if (slotsBuilder_ == null) {
        return slots_.get(index);  } else {
        return slotsBuilder_.getMessageOrBuilder(index);
      }
    }
    /**
     * <pre>
     * Ordered list of slots. Each slot defines the type of data
     * that it will resolve and configuration to customize the experience of this
     * resolution (e.g. prompts).
     * </pre>
     *
     * <code>repeated .google.actions.sdk.v2.interactionmodel.Slot slots = 4;</code>
     */
    public java.util.List<? extends com.google.actions.sdk.v2.interactionmodel.SlotOrBuilder> 
         getSlotsOrBuilderList() {
      if (slotsBuilder_ != null) {
        return slotsBuilder_.getMessageOrBuilderList();
      } else {
        return java.util.Collections.unmodifiableList(slots_);
      }
    }
    /**
     * <pre>
     * Ordered list of slots. Each slot defines the type of data
     * that it will resolve and configuration to customize the experience of this
     * resolution (e.g. prompts).
     * </pre>
     *
     * <code>repeated .google.actions.sdk.v2.interactionmodel.Slot slots = 4;</code>
     */
    public com.google.actions.sdk.v2.interactionmodel.Slot.Builder addSlotsBuilder() {
      return getSlotsFieldBuilder().addBuilder(
          com.google.actions.sdk.v2.interactionmodel.Slot.getDefaultInstance());
    }
    /**
     * <pre>
     * Ordered list of slots. Each slot defines the type of data
     * that it will resolve and configuration to customize the experience of this
     * resolution (e.g. prompts).
     * </pre>
     *
     * <code>repeated .google.actions.sdk.v2.interactionmodel.Slot slots = 4;</code>
     */
    public com.google.actions.sdk.v2.interactionmodel.Slot.Builder addSlotsBuilder(
        int index) {
      return getSlotsFieldBuilder().addBuilder(
          index, com.google.actions.sdk.v2.interactionmodel.Slot.getDefaultInstance());
    }
    /**
     * <pre>
     * Ordered list of slots. Each slot defines the type of data
     * that it will resolve and configuration to customize the experience of this
     * resolution (e.g. prompts).
     * </pre>
     *
     * <code>repeated .google.actions.sdk.v2.interactionmodel.Slot slots = 4;</code>
     */
    public java.util.List<com.google.actions.sdk.v2.interactionmodel.Slot.Builder> 
         getSlotsBuilderList() {
      return getSlotsFieldBuilder().getBuilderList();
    }
    private com.google.protobuf.RepeatedFieldBuilderV3<
        com.google.actions.sdk.v2.interactionmodel.Slot, com.google.actions.sdk.v2.interactionmodel.Slot.Builder, com.google.actions.sdk.v2.interactionmodel.SlotOrBuilder> 
        getSlotsFieldBuilder() {
      if (slotsBuilder_ == null) {
        slotsBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<
            com.google.actions.sdk.v2.interactionmodel.Slot, com.google.actions.sdk.v2.interactionmodel.Slot.Builder, com.google.actions.sdk.v2.interactionmodel.SlotOrBuilder>(
                slots_,
                ((bitField0_ & 0x00000008) != 0),
                getParentForChildren(),
                isClean());
        slots_ = null;
      }
      return slotsBuilder_;
    }

    private com.google.actions.sdk.v2.interactionmodel.EventHandler onSlotUpdated_;
    private com.google.protobuf.SingleFieldBuilderV3<
        com.google.actions.sdk.v2.interactionmodel.EventHandler, com.google.actions.sdk.v2.interactionmodel.EventHandler.Builder, com.google.actions.sdk.v2.interactionmodel.EventHandlerOrBuilder> onSlotUpdatedBuilder_;
    /**
     * <pre>
     * Handler called when there is a change in state of a slot not
     * caused by updates within another Handler. This allows slots to be
     * invalidated, the scene invalidated or other changes to scene state.
     * </pre>
     *
     * <code>.google.actions.sdk.v2.interactionmodel.EventHandler on_slot_updated = 5;</code>
     * @return Whether the onSlotUpdated field is set.
     */
    public boolean hasOnSlotUpdated() {
      return ((bitField0_ & 0x00000010) != 0);
    }
    /**
     * <pre>
     * Handler called when there is a change in state of a slot not
     * caused by updates within another Handler. This allows slots to be
     * invalidated, the scene invalidated or other changes to scene state.
     * </pre>
     *
     * <code>.google.actions.sdk.v2.interactionmodel.EventHandler on_slot_updated = 5;</code>
     * @return The onSlotUpdated.
     */
    public com.google.actions.sdk.v2.interactionmodel.EventHandler getOnSlotUpdated() {
      if (onSlotUpdatedBuilder_ == null) {
        return onSlotUpdated_ == null ? com.google.actions.sdk.v2.interactionmodel.EventHandler.getDefaultInstance() : onSlotUpdated_;
      } else {
        return onSlotUpdatedBuilder_.getMessage();
      }
    }
    /**
     * <pre>
     * Handler called when there is a change in state of a slot not
     * caused by updates within another Handler. This allows slots to be
     * invalidated, the scene invalidated or other changes to scene state.
     * </pre>
     *
     * <code>.google.actions.sdk.v2.interactionmodel.EventHandler on_slot_updated = 5;</code>
     */
    public Builder setOnSlotUpdated(com.google.actions.sdk.v2.interactionmodel.EventHandler value) {
      if (onSlotUpdatedBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        onSlotUpdated_ = value;
      } else {
        onSlotUpdatedBuilder_.setMessage(value);
      }
      bitField0_ |= 0x00000010;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * Handler called when there is a change in state of a slot not
     * caused by updates within another Handler. This allows slots to be
     * invalidated, the scene invalidated or other changes to scene state.
     * </pre>
     *
     * <code>.google.actions.sdk.v2.interactionmodel.EventHandler on_slot_updated = 5;</code>
     */
    public Builder setOnSlotUpdated(
        com.google.actions.sdk.v2.interactionmodel.EventHandler.Builder builderForValue) {
      if (onSlotUpdatedBuilder_ == null) {
        onSlotUpdated_ = builderForValue.build();
      } else {
        onSlotUpdatedBuilder_.setMessage(builderForValue.build());
      }
      bitField0_ |= 0x00000010;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * Handler called when there is a change in state of a slot not
     * caused by updates within another Handler. This allows slots to be
     * invalidated, the scene invalidated or other changes to scene state.
     * </pre>
     *
     * <code>.google.actions.sdk.v2.interactionmodel.EventHandler on_slot_updated = 5;</code>
     */
    public Builder mergeOnSlotUpdated(com.google.actions.sdk.v2.interactionmodel.EventHandler value) {
      if (onSlotUpdatedBuilder_ == null) {
        if (((bitField0_ & 0x00000010) != 0) &&
          onSlotUpdated_ != null &&
          onSlotUpdated_ != com.google.actions.sdk.v2.interactionmodel.EventHandler.getDefaultInstance()) {
          getOnSlotUpdatedBuilder().mergeFrom(value);
        } else {
          onSlotUpdated_ = value;
        }
      } else {
        onSlotUpdatedBuilder_.mergeFrom(value);
      }
      bitField0_ |= 0x00000010;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * Handler called when there is a change in state of a slot not
     * caused by updates within another Handler. This allows slots to be
     * invalidated, the scene invalidated or other changes to scene state.
     * </pre>
     *
     * <code>.google.actions.sdk.v2.interactionmodel.EventHandler on_slot_updated = 5;</code>
     */
    public Builder clearOnSlotUpdated() {
      bitField0_ = (bitField0_ & ~0x00000010);
      onSlotUpdated_ = null;
      if (onSlotUpdatedBuilder_ != null) {
        onSlotUpdatedBuilder_.dispose();
        onSlotUpdatedBuilder_ = null;
      }
      onChanged();
      return this;
    }
    /**
     * <pre>
     * Handler called when there is a change in state of a slot not
     * caused by updates within another Handler. This allows slots to be
     * invalidated, the scene invalidated or other changes to scene state.
     * </pre>
     *
     * <code>.google.actions.sdk.v2.interactionmodel.EventHandler on_slot_updated = 5;</code>
     */
    public com.google.actions.sdk.v2.interactionmodel.EventHandler.Builder getOnSlotUpdatedBuilder() {
      bitField0_ |= 0x00000010;
      onChanged();
      return getOnSlotUpdatedFieldBuilder().getBuilder();
    }
    /**
     * <pre>
     * Handler called when there is a change in state of a slot not
     * caused by updates within another Handler. This allows slots to be
     * invalidated, the scene invalidated or other changes to scene state.
     * </pre>
     *
     * <code>.google.actions.sdk.v2.interactionmodel.EventHandler on_slot_updated = 5;</code>
     */
    public com.google.actions.sdk.v2.interactionmodel.EventHandlerOrBuilder getOnSlotUpdatedOrBuilder() {
      if (onSlotUpdatedBuilder_ != null) {
        return onSlotUpdatedBuilder_.getMessageOrBuilder();
      } else {
        return onSlotUpdated_ == null ?
            com.google.actions.sdk.v2.interactionmodel.EventHandler.getDefaultInstance() : onSlotUpdated_;
      }
    }
    /**
     * <pre>
     * Handler called when there is a change in state of a slot not
     * caused by updates within another Handler. This allows slots to be
     * invalidated, the scene invalidated or other changes to scene state.
     * </pre>
     *
     * <code>.google.actions.sdk.v2.interactionmodel.EventHandler on_slot_updated = 5;</code>
     */
    private com.google.protobuf.SingleFieldBuilderV3<
        com.google.actions.sdk.v2.interactionmodel.EventHandler, com.google.actions.sdk.v2.interactionmodel.EventHandler.Builder, com.google.actions.sdk.v2.interactionmodel.EventHandlerOrBuilder> 
        getOnSlotUpdatedFieldBuilder() {
      if (onSlotUpdatedBuilder_ == null) {
        onSlotUpdatedBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
            com.google.actions.sdk.v2.interactionmodel.EventHandler, com.google.actions.sdk.v2.interactionmodel.EventHandler.Builder, com.google.actions.sdk.v2.interactionmodel.EventHandlerOrBuilder>(
                getOnSlotUpdated(),
                getParentForChildren(),
                isClean());
        onSlotUpdated_ = null;
      }
      return onSlotUpdatedBuilder_;
    }
    @java.lang.Override
    public final Builder setUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return super.setUnknownFields(unknownFields);
    }

    @java.lang.Override
    public final Builder mergeUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return super.mergeUnknownFields(unknownFields);
    }


    // @@protoc_insertion_point(builder_scope:google.actions.sdk.v2.interactionmodel.Scene)
  }

  // @@protoc_insertion_point(class_scope:google.actions.sdk.v2.interactionmodel.Scene)
  private static final com.google.actions.sdk.v2.interactionmodel.Scene DEFAULT_INSTANCE;
  static {
    DEFAULT_INSTANCE = new com.google.actions.sdk.v2.interactionmodel.Scene();
  }

  public static com.google.actions.sdk.v2.interactionmodel.Scene getDefaultInstance() {
    return DEFAULT_INSTANCE;
  }

  private static final com.google.protobuf.Parser<Scene>
      PARSER = new com.google.protobuf.AbstractParser<Scene>() {
    @java.lang.Override
    public Scene parsePartialFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      Builder builder = newBuilder();
      try {
        builder.mergeFrom(input, extensionRegistry);
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(builder.buildPartial());
      } catch (com.google.protobuf.UninitializedMessageException e) {
        throw e.asInvalidProtocolBufferException().setUnfinishedMessage(builder.buildPartial());
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(e)
            .setUnfinishedMessage(builder.buildPartial());
      }
      return builder.buildPartial();
    }
  };

  public static com.google.protobuf.Parser<Scene> parser() {
    return PARSER;
  }

  @java.lang.Override
  public com.google.protobuf.Parser<Scene> getParserForType() {
    return PARSER;
  }

  @java.lang.Override
  public com.google.actions.sdk.v2.interactionmodel.Scene getDefaultInstanceForType() {
    return DEFAULT_INSTANCE;
  }

}

