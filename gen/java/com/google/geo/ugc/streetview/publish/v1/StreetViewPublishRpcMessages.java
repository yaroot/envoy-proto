// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: google/streetview/publish/v1/rpcmessages.proto

package com.google.geo.ugc.streetview.publish.v1;

public final class StreetViewPublishRpcMessages {
  private StreetViewPublishRpcMessages() {}
  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistryLite registry) {
  }

  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistry registry) {
    registerAllExtensions(
        (com.google.protobuf.ExtensionRegistryLite) registry);
  }
  /**
   * <pre>
   * Specifies which view of the [Photo][google.streetview.publish.v1.Photo]
   * to include in the response.
   * </pre>
   *
   * Protobuf enum {@code google.streetview.publish.v1.PhotoView}
   */
  public enum PhotoView
      implements com.google.protobuf.ProtocolMessageEnum {
    /**
     * <pre>
     * Server responses do not include the download URL for the photo bytes.
     * The default value.
     * </pre>
     *
     * <code>BASIC = 0;</code>
     */
    BASIC(0),
    /**
     * <pre>
     * Server responses include the download URL for the photo bytes.
     * </pre>
     *
     * <code>INCLUDE_DOWNLOAD_URL = 1;</code>
     */
    INCLUDE_DOWNLOAD_URL(1),
    UNRECOGNIZED(-1),
    ;

    /**
     * <pre>
     * Server responses do not include the download URL for the photo bytes.
     * The default value.
     * </pre>
     *
     * <code>BASIC = 0;</code>
     */
    public static final int BASIC_VALUE = 0;
    /**
     * <pre>
     * Server responses include the download URL for the photo bytes.
     * </pre>
     *
     * <code>INCLUDE_DOWNLOAD_URL = 1;</code>
     */
    public static final int INCLUDE_DOWNLOAD_URL_VALUE = 1;


    public final int getNumber() {
      if (this == UNRECOGNIZED) {
        throw new java.lang.IllegalArgumentException(
            "Can't get the number of an unknown enum value.");
      }
      return value;
    }

    /**
     * @param value The numeric wire value of the corresponding enum entry.
     * @return The enum associated with the given numeric wire value.
     * @deprecated Use {@link #forNumber(int)} instead.
     */
    @java.lang.Deprecated
    public static PhotoView valueOf(int value) {
      return forNumber(value);
    }

    /**
     * @param value The numeric wire value of the corresponding enum entry.
     * @return The enum associated with the given numeric wire value.
     */
    public static PhotoView forNumber(int value) {
      switch (value) {
        case 0: return BASIC;
        case 1: return INCLUDE_DOWNLOAD_URL;
        default: return null;
      }
    }

    public static com.google.protobuf.Internal.EnumLiteMap<PhotoView>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static final com.google.protobuf.Internal.EnumLiteMap<
        PhotoView> internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<PhotoView>() {
            public PhotoView findValueByNumber(int number) {
              return PhotoView.forNumber(number);
            }
          };

    public final com.google.protobuf.Descriptors.EnumValueDescriptor
        getValueDescriptor() {
      if (this == UNRECOGNIZED) {
        throw new java.lang.IllegalStateException(
            "Can't get the descriptor of an unrecognized enum value.");
      }
      return getDescriptor().getValues().get(ordinal());
    }
    public final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptorForType() {
      return getDescriptor();
    }
    public static final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptor() {
      return com.google.geo.ugc.streetview.publish.v1.StreetViewPublishRpcMessages.getDescriptor().getEnumTypes().get(0);
    }

    private static final PhotoView[] VALUES = values();

    public static PhotoView valueOf(
        com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
      if (desc.getType() != getDescriptor()) {
        throw new java.lang.IllegalArgumentException(
          "EnumValueDescriptor is not for this type.");
      }
      if (desc.getIndex() == -1) {
        return UNRECOGNIZED;
      }
      return VALUES[desc.getIndex()];
    }

    private final int value;

    private PhotoView(int value) {
      this.value = value;
    }

    // @@protoc_insertion_point(enum_scope:google.streetview.publish.v1.PhotoView)
  }

  public interface CreatePhotoRequestOrBuilder extends
      // @@protoc_insertion_point(interface_extends:google.streetview.publish.v1.CreatePhotoRequest)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <pre>
     * Required. Photo to create.
     * </pre>
     *
     * <code>.google.streetview.publish.v1.Photo photo = 1 [(.google.api.field_behavior) = REQUIRED];</code>
     * @return Whether the photo field is set.
     */
    boolean hasPhoto();
    /**
     * <pre>
     * Required. Photo to create.
     * </pre>
     *
     * <code>.google.streetview.publish.v1.Photo photo = 1 [(.google.api.field_behavior) = REQUIRED];</code>
     * @return The photo.
     */
    com.google.geo.ugc.streetview.publish.v1.StreetViewPublishResources.Photo getPhoto();
    /**
     * <pre>
     * Required. Photo to create.
     * </pre>
     *
     * <code>.google.streetview.publish.v1.Photo photo = 1 [(.google.api.field_behavior) = REQUIRED];</code>
     */
    com.google.geo.ugc.streetview.publish.v1.StreetViewPublishResources.PhotoOrBuilder getPhotoOrBuilder();
  }
  /**
   * <pre>
   * Request to create a [Photo][google.streetview.publish.v1.Photo].
   * </pre>
   *
   * Protobuf type {@code google.streetview.publish.v1.CreatePhotoRequest}
   */
  public static final class CreatePhotoRequest extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:google.streetview.publish.v1.CreatePhotoRequest)
      CreatePhotoRequestOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use CreatePhotoRequest.newBuilder() to construct.
    private CreatePhotoRequest(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private CreatePhotoRequest() {
    }

    @java.lang.Override
    @SuppressWarnings({"unused"})
    protected java.lang.Object newInstance(
        UnusedPrivateParameter unused) {
      return new CreatePhotoRequest();
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.google.geo.ugc.streetview.publish.v1.StreetViewPublishRpcMessages.internal_static_google_streetview_publish_v1_CreatePhotoRequest_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.google.geo.ugc.streetview.publish.v1.StreetViewPublishRpcMessages.internal_static_google_streetview_publish_v1_CreatePhotoRequest_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.google.geo.ugc.streetview.publish.v1.StreetViewPublishRpcMessages.CreatePhotoRequest.class, com.google.geo.ugc.streetview.publish.v1.StreetViewPublishRpcMessages.CreatePhotoRequest.Builder.class);
    }

    public static final int PHOTO_FIELD_NUMBER = 1;
    private com.google.geo.ugc.streetview.publish.v1.StreetViewPublishResources.Photo photo_;
    /**
     * <pre>
     * Required. Photo to create.
     * </pre>
     *
     * <code>.google.streetview.publish.v1.Photo photo = 1 [(.google.api.field_behavior) = REQUIRED];</code>
     * @return Whether the photo field is set.
     */
    @java.lang.Override
    public boolean hasPhoto() {
      return photo_ != null;
    }
    /**
     * <pre>
     * Required. Photo to create.
     * </pre>
     *
     * <code>.google.streetview.publish.v1.Photo photo = 1 [(.google.api.field_behavior) = REQUIRED];</code>
     * @return The photo.
     */
    @java.lang.Override
    public com.google.geo.ugc.streetview.publish.v1.StreetViewPublishResources.Photo getPhoto() {
      return photo_ == null ? com.google.geo.ugc.streetview.publish.v1.StreetViewPublishResources.Photo.getDefaultInstance() : photo_;
    }
    /**
     * <pre>
     * Required. Photo to create.
     * </pre>
     *
     * <code>.google.streetview.publish.v1.Photo photo = 1 [(.google.api.field_behavior) = REQUIRED];</code>
     */
    @java.lang.Override
    public com.google.geo.ugc.streetview.publish.v1.StreetViewPublishResources.PhotoOrBuilder getPhotoOrBuilder() {
      return photo_ == null ? com.google.geo.ugc.streetview.publish.v1.StreetViewPublishResources.Photo.getDefaultInstance() : photo_;
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (photo_ != null) {
        output.writeMessage(1, getPhoto());
      }
      getUnknownFields().writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (photo_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, getPhoto());
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof com.google.geo.ugc.streetview.publish.v1.StreetViewPublishRpcMessages.CreatePhotoRequest)) {
        return super.equals(obj);
      }
      com.google.geo.ugc.streetview.publish.v1.StreetViewPublishRpcMessages.CreatePhotoRequest other = (com.google.geo.ugc.streetview.publish.v1.StreetViewPublishRpcMessages.CreatePhotoRequest) obj;

      if (hasPhoto() != other.hasPhoto()) return false;
      if (hasPhoto()) {
        if (!getPhoto()
            .equals(other.getPhoto())) return false;
      }
      if (!getUnknownFields().equals(other.getUnknownFields())) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      if (hasPhoto()) {
        hash = (37 * hash) + PHOTO_FIELD_NUMBER;
        hash = (53 * hash) + getPhoto().hashCode();
      }
      hash = (29 * hash) + getUnknownFields().hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static com.google.geo.ugc.streetview.publish.v1.StreetViewPublishRpcMessages.CreatePhotoRequest parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.google.geo.ugc.streetview.publish.v1.StreetViewPublishRpcMessages.CreatePhotoRequest parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.google.geo.ugc.streetview.publish.v1.StreetViewPublishRpcMessages.CreatePhotoRequest parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.google.geo.ugc.streetview.publish.v1.StreetViewPublishRpcMessages.CreatePhotoRequest parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.google.geo.ugc.streetview.publish.v1.StreetViewPublishRpcMessages.CreatePhotoRequest parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.google.geo.ugc.streetview.publish.v1.StreetViewPublishRpcMessages.CreatePhotoRequest parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.google.geo.ugc.streetview.publish.v1.StreetViewPublishRpcMessages.CreatePhotoRequest parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static com.google.geo.ugc.streetview.publish.v1.StreetViewPublishRpcMessages.CreatePhotoRequest parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static com.google.geo.ugc.streetview.publish.v1.StreetViewPublishRpcMessages.CreatePhotoRequest parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static com.google.geo.ugc.streetview.publish.v1.StreetViewPublishRpcMessages.CreatePhotoRequest parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static com.google.geo.ugc.streetview.publish.v1.StreetViewPublishRpcMessages.CreatePhotoRequest parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static com.google.geo.ugc.streetview.publish.v1.StreetViewPublishRpcMessages.CreatePhotoRequest parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(com.google.geo.ugc.streetview.publish.v1.StreetViewPublishRpcMessages.CreatePhotoRequest prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * <pre>
     * Request to create a [Photo][google.streetview.publish.v1.Photo].
     * </pre>
     *
     * Protobuf type {@code google.streetview.publish.v1.CreatePhotoRequest}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:google.streetview.publish.v1.CreatePhotoRequest)
        com.google.geo.ugc.streetview.publish.v1.StreetViewPublishRpcMessages.CreatePhotoRequestOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return com.google.geo.ugc.streetview.publish.v1.StreetViewPublishRpcMessages.internal_static_google_streetview_publish_v1_CreatePhotoRequest_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return com.google.geo.ugc.streetview.publish.v1.StreetViewPublishRpcMessages.internal_static_google_streetview_publish_v1_CreatePhotoRequest_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                com.google.geo.ugc.streetview.publish.v1.StreetViewPublishRpcMessages.CreatePhotoRequest.class, com.google.geo.ugc.streetview.publish.v1.StreetViewPublishRpcMessages.CreatePhotoRequest.Builder.class);
      }

      // Construct using com.google.geo.ugc.streetview.publish.v1.StreetViewPublishRpcMessages.CreatePhotoRequest.newBuilder()
      private Builder() {

      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);

      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        bitField0_ = 0;
        photo_ = null;
        if (photoBuilder_ != null) {
          photoBuilder_.dispose();
          photoBuilder_ = null;
        }
        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.google.geo.ugc.streetview.publish.v1.StreetViewPublishRpcMessages.internal_static_google_streetview_publish_v1_CreatePhotoRequest_descriptor;
      }

      @java.lang.Override
      public com.google.geo.ugc.streetview.publish.v1.StreetViewPublishRpcMessages.CreatePhotoRequest getDefaultInstanceForType() {
        return com.google.geo.ugc.streetview.publish.v1.StreetViewPublishRpcMessages.CreatePhotoRequest.getDefaultInstance();
      }

      @java.lang.Override
      public com.google.geo.ugc.streetview.publish.v1.StreetViewPublishRpcMessages.CreatePhotoRequest build() {
        com.google.geo.ugc.streetview.publish.v1.StreetViewPublishRpcMessages.CreatePhotoRequest result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public com.google.geo.ugc.streetview.publish.v1.StreetViewPublishRpcMessages.CreatePhotoRequest buildPartial() {
        com.google.geo.ugc.streetview.publish.v1.StreetViewPublishRpcMessages.CreatePhotoRequest result = new com.google.geo.ugc.streetview.publish.v1.StreetViewPublishRpcMessages.CreatePhotoRequest(this);
        if (bitField0_ != 0) { buildPartial0(result); }
        onBuilt();
        return result;
      }

      private void buildPartial0(com.google.geo.ugc.streetview.publish.v1.StreetViewPublishRpcMessages.CreatePhotoRequest result) {
        int from_bitField0_ = bitField0_;
        if (((from_bitField0_ & 0x00000001) != 0)) {
          result.photo_ = photoBuilder_ == null
              ? photo_
              : photoBuilder_.build();
        }
      }

      @java.lang.Override
      public Builder clone() {
        return super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.google.geo.ugc.streetview.publish.v1.StreetViewPublishRpcMessages.CreatePhotoRequest) {
          return mergeFrom((com.google.geo.ugc.streetview.publish.v1.StreetViewPublishRpcMessages.CreatePhotoRequest)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(com.google.geo.ugc.streetview.publish.v1.StreetViewPublishRpcMessages.CreatePhotoRequest other) {
        if (other == com.google.geo.ugc.streetview.publish.v1.StreetViewPublishRpcMessages.CreatePhotoRequest.getDefaultInstance()) return this;
        if (other.hasPhoto()) {
          mergePhoto(other.getPhoto());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        if (extensionRegistry == null) {
          throw new java.lang.NullPointerException();
        }
        try {
          boolean done = false;
          while (!done) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                done = true;
                break;
              case 10: {
                input.readMessage(
                    getPhotoFieldBuilder().getBuilder(),
                    extensionRegistry);
                bitField0_ |= 0x00000001;
                break;
              } // case 10
              default: {
                if (!super.parseUnknownField(input, extensionRegistry, tag)) {
                  done = true; // was an endgroup tag
                }
                break;
              } // default:
            } // switch (tag)
          } // while (!done)
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.unwrapIOException();
        } finally {
          onChanged();
        } // finally
        return this;
      }
      private int bitField0_;

      private com.google.geo.ugc.streetview.publish.v1.StreetViewPublishResources.Photo photo_;
      private com.google.protobuf.SingleFieldBuilderV3<
          com.google.geo.ugc.streetview.publish.v1.StreetViewPublishResources.Photo, com.google.geo.ugc.streetview.publish.v1.StreetViewPublishResources.Photo.Builder, com.google.geo.ugc.streetview.publish.v1.StreetViewPublishResources.PhotoOrBuilder> photoBuilder_;
      /**
       * <pre>
       * Required. Photo to create.
       * </pre>
       *
       * <code>.google.streetview.publish.v1.Photo photo = 1 [(.google.api.field_behavior) = REQUIRED];</code>
       * @return Whether the photo field is set.
       */
      public boolean hasPhoto() {
        return ((bitField0_ & 0x00000001) != 0);
      }
      /**
       * <pre>
       * Required. Photo to create.
       * </pre>
       *
       * <code>.google.streetview.publish.v1.Photo photo = 1 [(.google.api.field_behavior) = REQUIRED];</code>
       * @return The photo.
       */
      public com.google.geo.ugc.streetview.publish.v1.StreetViewPublishResources.Photo getPhoto() {
        if (photoBuilder_ == null) {
          return photo_ == null ? com.google.geo.ugc.streetview.publish.v1.StreetViewPublishResources.Photo.getDefaultInstance() : photo_;
        } else {
          return photoBuilder_.getMessage();
        }
      }
      /**
       * <pre>
       * Required. Photo to create.
       * </pre>
       *
       * <code>.google.streetview.publish.v1.Photo photo = 1 [(.google.api.field_behavior) = REQUIRED];</code>
       */
      public Builder setPhoto(com.google.geo.ugc.streetview.publish.v1.StreetViewPublishResources.Photo value) {
        if (photoBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          photo_ = value;
        } else {
          photoBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000001;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Required. Photo to create.
       * </pre>
       *
       * <code>.google.streetview.publish.v1.Photo photo = 1 [(.google.api.field_behavior) = REQUIRED];</code>
       */
      public Builder setPhoto(
          com.google.geo.ugc.streetview.publish.v1.StreetViewPublishResources.Photo.Builder builderForValue) {
        if (photoBuilder_ == null) {
          photo_ = builderForValue.build();
        } else {
          photoBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000001;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Required. Photo to create.
       * </pre>
       *
       * <code>.google.streetview.publish.v1.Photo photo = 1 [(.google.api.field_behavior) = REQUIRED];</code>
       */
      public Builder mergePhoto(com.google.geo.ugc.streetview.publish.v1.StreetViewPublishResources.Photo value) {
        if (photoBuilder_ == null) {
          if (((bitField0_ & 0x00000001) != 0) &&
            photo_ != null &&
            photo_ != com.google.geo.ugc.streetview.publish.v1.StreetViewPublishResources.Photo.getDefaultInstance()) {
            getPhotoBuilder().mergeFrom(value);
          } else {
            photo_ = value;
          }
        } else {
          photoBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x00000001;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Required. Photo to create.
       * </pre>
       *
       * <code>.google.streetview.publish.v1.Photo photo = 1 [(.google.api.field_behavior) = REQUIRED];</code>
       */
      public Builder clearPhoto() {
        bitField0_ = (bitField0_ & ~0x00000001);
        photo_ = null;
        if (photoBuilder_ != null) {
          photoBuilder_.dispose();
          photoBuilder_ = null;
        }
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Required. Photo to create.
       * </pre>
       *
       * <code>.google.streetview.publish.v1.Photo photo = 1 [(.google.api.field_behavior) = REQUIRED];</code>
       */
      public com.google.geo.ugc.streetview.publish.v1.StreetViewPublishResources.Photo.Builder getPhotoBuilder() {
        bitField0_ |= 0x00000001;
        onChanged();
        return getPhotoFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       * Required. Photo to create.
       * </pre>
       *
       * <code>.google.streetview.publish.v1.Photo photo = 1 [(.google.api.field_behavior) = REQUIRED];</code>
       */
      public com.google.geo.ugc.streetview.publish.v1.StreetViewPublishResources.PhotoOrBuilder getPhotoOrBuilder() {
        if (photoBuilder_ != null) {
          return photoBuilder_.getMessageOrBuilder();
        } else {
          return photo_ == null ?
              com.google.geo.ugc.streetview.publish.v1.StreetViewPublishResources.Photo.getDefaultInstance() : photo_;
        }
      }
      /**
       * <pre>
       * Required. Photo to create.
       * </pre>
       *
       * <code>.google.streetview.publish.v1.Photo photo = 1 [(.google.api.field_behavior) = REQUIRED];</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          com.google.geo.ugc.streetview.publish.v1.StreetViewPublishResources.Photo, com.google.geo.ugc.streetview.publish.v1.StreetViewPublishResources.Photo.Builder, com.google.geo.ugc.streetview.publish.v1.StreetViewPublishResources.PhotoOrBuilder> 
          getPhotoFieldBuilder() {
        if (photoBuilder_ == null) {
          photoBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              com.google.geo.ugc.streetview.publish.v1.StreetViewPublishResources.Photo, com.google.geo.ugc.streetview.publish.v1.StreetViewPublishResources.Photo.Builder, com.google.geo.ugc.streetview.publish.v1.StreetViewPublishResources.PhotoOrBuilder>(
                  getPhoto(),
                  getParentForChildren(),
                  isClean());
          photo_ = null;
        }
        return photoBuilder_;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:google.streetview.publish.v1.CreatePhotoRequest)
    }

    // @@protoc_insertion_point(class_scope:google.streetview.publish.v1.CreatePhotoRequest)
    private static final com.google.geo.ugc.streetview.publish.v1.StreetViewPublishRpcMessages.CreatePhotoRequest DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new com.google.geo.ugc.streetview.publish.v1.StreetViewPublishRpcMessages.CreatePhotoRequest();
    }

    public static com.google.geo.ugc.streetview.publish.v1.StreetViewPublishRpcMessages.CreatePhotoRequest getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<CreatePhotoRequest>
        PARSER = new com.google.protobuf.AbstractParser<CreatePhotoRequest>() {
      @java.lang.Override
      public CreatePhotoRequest parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        Builder builder = newBuilder();
        try {
          builder.mergeFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.setUnfinishedMessage(builder.buildPartial());
        } catch (com.google.protobuf.UninitializedMessageException e) {
          throw e.asInvalidProtocolBufferException().setUnfinishedMessage(builder.buildPartial());
        } catch (java.io.IOException e) {
          throw new com.google.protobuf.InvalidProtocolBufferException(e)
              .setUnfinishedMessage(builder.buildPartial());
        }
        return builder.buildPartial();
      }
    };

    public static com.google.protobuf.Parser<CreatePhotoRequest> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<CreatePhotoRequest> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.geo.ugc.streetview.publish.v1.StreetViewPublishRpcMessages.CreatePhotoRequest getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface GetPhotoRequestOrBuilder extends
      // @@protoc_insertion_point(interface_extends:google.streetview.publish.v1.GetPhotoRequest)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <pre>
     * Required. ID of the [Photo][google.streetview.publish.v1.Photo].
     * </pre>
     *
     * <code>string photo_id = 1 [(.google.api.field_behavior) = REQUIRED];</code>
     * @return The photoId.
     */
    java.lang.String getPhotoId();
    /**
     * <pre>
     * Required. ID of the [Photo][google.streetview.publish.v1.Photo].
     * </pre>
     *
     * <code>string photo_id = 1 [(.google.api.field_behavior) = REQUIRED];</code>
     * @return The bytes for photoId.
     */
    com.google.protobuf.ByteString
        getPhotoIdBytes();

    /**
     * <pre>
     * Required. Specifies if a download URL for the photo bytes should be returned in the
     * [Photo][google.streetview.publish.v1.Photo] response.
     * </pre>
     *
     * <code>.google.streetview.publish.v1.PhotoView view = 2 [(.google.api.field_behavior) = REQUIRED];</code>
     * @return The enum numeric value on the wire for view.
     */
    int getViewValue();
    /**
     * <pre>
     * Required. Specifies if a download URL for the photo bytes should be returned in the
     * [Photo][google.streetview.publish.v1.Photo] response.
     * </pre>
     *
     * <code>.google.streetview.publish.v1.PhotoView view = 2 [(.google.api.field_behavior) = REQUIRED];</code>
     * @return The view.
     */
    com.google.geo.ugc.streetview.publish.v1.StreetViewPublishRpcMessages.PhotoView getView();

    /**
     * <pre>
     * The BCP-47 language code, such as "en-US" or "sr-Latn". For more
     * information, see
     * http://www.unicode.org/reports/tr35/#Unicode_locale_identifier.
     * If language_code is unspecified, the user's language preference for Google
     * services is used.
     * </pre>
     *
     * <code>string language_code = 3;</code>
     * @return The languageCode.
     */
    java.lang.String getLanguageCode();
    /**
     * <pre>
     * The BCP-47 language code, such as "en-US" or "sr-Latn". For more
     * information, see
     * http://www.unicode.org/reports/tr35/#Unicode_locale_identifier.
     * If language_code is unspecified, the user's language preference for Google
     * services is used.
     * </pre>
     *
     * <code>string language_code = 3;</code>
     * @return The bytes for languageCode.
     */
    com.google.protobuf.ByteString
        getLanguageCodeBytes();
  }
  /**
   * <pre>
   * Request to get a [Photo][google.streetview.publish.v1.Photo].
   * By default
   * * does not return the download URL for the photo bytes.
   * Parameters:
   * * `view` controls if the download URL for the photo bytes is returned.
   * </pre>
   *
   * Protobuf type {@code google.streetview.publish.v1.GetPhotoRequest}
   */
  public static final class GetPhotoRequest extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:google.streetview.publish.v1.GetPhotoRequest)
      GetPhotoRequestOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use GetPhotoRequest.newBuilder() to construct.
    private GetPhotoRequest(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private GetPhotoRequest() {
      photoId_ = "";
      view_ = 0;
      languageCode_ = "";
    }

    @java.lang.Override
    @SuppressWarnings({"unused"})
    protected java.lang.Object newInstance(
        UnusedPrivateParameter unused) {
      return new GetPhotoRequest();
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.google.geo.ugc.streetview.publish.v1.StreetViewPublishRpcMessages.internal_static_google_streetview_publish_v1_GetPhotoRequest_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.google.geo.ugc.streetview.publish.v1.StreetViewPublishRpcMessages.internal_static_google_streetview_publish_v1_GetPhotoRequest_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.google.geo.ugc.streetview.publish.v1.StreetViewPublishRpcMessages.GetPhotoRequest.class, com.google.geo.ugc.streetview.publish.v1.StreetViewPublishRpcMessages.GetPhotoRequest.Builder.class);
    }

    public static final int PHOTO_ID_FIELD_NUMBER = 1;
    @SuppressWarnings("serial")
    private volatile java.lang.Object photoId_ = "";
    /**
     * <pre>
     * Required. ID of the [Photo][google.streetview.publish.v1.Photo].
     * </pre>
     *
     * <code>string photo_id = 1 [(.google.api.field_behavior) = REQUIRED];</code>
     * @return The photoId.
     */
    @java.lang.Override
    public java.lang.String getPhotoId() {
      java.lang.Object ref = photoId_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        photoId_ = s;
        return s;
      }
    }
    /**
     * <pre>
     * Required. ID of the [Photo][google.streetview.publish.v1.Photo].
     * </pre>
     *
     * <code>string photo_id = 1 [(.google.api.field_behavior) = REQUIRED];</code>
     * @return The bytes for photoId.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString
        getPhotoIdBytes() {
      java.lang.Object ref = photoId_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        photoId_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int VIEW_FIELD_NUMBER = 2;
    private int view_ = 0;
    /**
     * <pre>
     * Required. Specifies if a download URL for the photo bytes should be returned in the
     * [Photo][google.streetview.publish.v1.Photo] response.
     * </pre>
     *
     * <code>.google.streetview.publish.v1.PhotoView view = 2 [(.google.api.field_behavior) = REQUIRED];</code>
     * @return The enum numeric value on the wire for view.
     */
    @java.lang.Override public int getViewValue() {
      return view_;
    }
    /**
     * <pre>
     * Required. Specifies if a download URL for the photo bytes should be returned in the
     * [Photo][google.streetview.publish.v1.Photo] response.
     * </pre>
     *
     * <code>.google.streetview.publish.v1.PhotoView view = 2 [(.google.api.field_behavior) = REQUIRED];</code>
     * @return The view.
     */
    @java.lang.Override public com.google.geo.ugc.streetview.publish.v1.StreetViewPublishRpcMessages.PhotoView getView() {
      com.google.geo.ugc.streetview.publish.v1.StreetViewPublishRpcMessages.PhotoView result = com.google.geo.ugc.streetview.publish.v1.StreetViewPublishRpcMessages.PhotoView.forNumber(view_);
      return result == null ? com.google.geo.ugc.streetview.publish.v1.StreetViewPublishRpcMessages.PhotoView.UNRECOGNIZED : result;
    }

    public static final int LANGUAGE_CODE_FIELD_NUMBER = 3;
    @SuppressWarnings("serial")
    private volatile java.lang.Object languageCode_ = "";
    /**
     * <pre>
     * The BCP-47 language code, such as "en-US" or "sr-Latn". For more
     * information, see
     * http://www.unicode.org/reports/tr35/#Unicode_locale_identifier.
     * If language_code is unspecified, the user's language preference for Google
     * services is used.
     * </pre>
     *
     * <code>string language_code = 3;</code>
     * @return The languageCode.
     */
    @java.lang.Override
    public java.lang.String getLanguageCode() {
      java.lang.Object ref = languageCode_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        languageCode_ = s;
        return s;
      }
    }
    /**
     * <pre>
     * The BCP-47 language code, such as "en-US" or "sr-Latn". For more
     * information, see
     * http://www.unicode.org/reports/tr35/#Unicode_locale_identifier.
     * If language_code is unspecified, the user's language preference for Google
     * services is used.
     * </pre>
     *
     * <code>string language_code = 3;</code>
     * @return The bytes for languageCode.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString
        getLanguageCodeBytes() {
      java.lang.Object ref = languageCode_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        languageCode_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(photoId_)) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 1, photoId_);
      }
      if (view_ != com.google.geo.ugc.streetview.publish.v1.StreetViewPublishRpcMessages.PhotoView.BASIC.getNumber()) {
        output.writeEnum(2, view_);
      }
      if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(languageCode_)) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 3, languageCode_);
      }
      getUnknownFields().writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(photoId_)) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(1, photoId_);
      }
      if (view_ != com.google.geo.ugc.streetview.publish.v1.StreetViewPublishRpcMessages.PhotoView.BASIC.getNumber()) {
        size += com.google.protobuf.CodedOutputStream
          .computeEnumSize(2, view_);
      }
      if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(languageCode_)) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(3, languageCode_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof com.google.geo.ugc.streetview.publish.v1.StreetViewPublishRpcMessages.GetPhotoRequest)) {
        return super.equals(obj);
      }
      com.google.geo.ugc.streetview.publish.v1.StreetViewPublishRpcMessages.GetPhotoRequest other = (com.google.geo.ugc.streetview.publish.v1.StreetViewPublishRpcMessages.GetPhotoRequest) obj;

      if (!getPhotoId()
          .equals(other.getPhotoId())) return false;
      if (view_ != other.view_) return false;
      if (!getLanguageCode()
          .equals(other.getLanguageCode())) return false;
      if (!getUnknownFields().equals(other.getUnknownFields())) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      hash = (37 * hash) + PHOTO_ID_FIELD_NUMBER;
      hash = (53 * hash) + getPhotoId().hashCode();
      hash = (37 * hash) + VIEW_FIELD_NUMBER;
      hash = (53 * hash) + view_;
      hash = (37 * hash) + LANGUAGE_CODE_FIELD_NUMBER;
      hash = (53 * hash) + getLanguageCode().hashCode();
      hash = (29 * hash) + getUnknownFields().hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static com.google.geo.ugc.streetview.publish.v1.StreetViewPublishRpcMessages.GetPhotoRequest parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.google.geo.ugc.streetview.publish.v1.StreetViewPublishRpcMessages.GetPhotoRequest parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.google.geo.ugc.streetview.publish.v1.StreetViewPublishRpcMessages.GetPhotoRequest parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.google.geo.ugc.streetview.publish.v1.StreetViewPublishRpcMessages.GetPhotoRequest parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.google.geo.ugc.streetview.publish.v1.StreetViewPublishRpcMessages.GetPhotoRequest parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.google.geo.ugc.streetview.publish.v1.StreetViewPublishRpcMessages.GetPhotoRequest parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.google.geo.ugc.streetview.publish.v1.StreetViewPublishRpcMessages.GetPhotoRequest parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static com.google.geo.ugc.streetview.publish.v1.StreetViewPublishRpcMessages.GetPhotoRequest parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static com.google.geo.ugc.streetview.publish.v1.StreetViewPublishRpcMessages.GetPhotoRequest parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static com.google.geo.ugc.streetview.publish.v1.StreetViewPublishRpcMessages.GetPhotoRequest parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static com.google.geo.ugc.streetview.publish.v1.StreetViewPublishRpcMessages.GetPhotoRequest parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static com.google.geo.ugc.streetview.publish.v1.StreetViewPublishRpcMessages.GetPhotoRequest parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(com.google.geo.ugc.streetview.publish.v1.StreetViewPublishRpcMessages.GetPhotoRequest prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * <pre>
     * Request to get a [Photo][google.streetview.publish.v1.Photo].
     * By default
     * * does not return the download URL for the photo bytes.
     * Parameters:
     * * `view` controls if the download URL for the photo bytes is returned.
     * </pre>
     *
     * Protobuf type {@code google.streetview.publish.v1.GetPhotoRequest}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:google.streetview.publish.v1.GetPhotoRequest)
        com.google.geo.ugc.streetview.publish.v1.StreetViewPublishRpcMessages.GetPhotoRequestOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return com.google.geo.ugc.streetview.publish.v1.StreetViewPublishRpcMessages.internal_static_google_streetview_publish_v1_GetPhotoRequest_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return com.google.geo.ugc.streetview.publish.v1.StreetViewPublishRpcMessages.internal_static_google_streetview_publish_v1_GetPhotoRequest_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                com.google.geo.ugc.streetview.publish.v1.StreetViewPublishRpcMessages.GetPhotoRequest.class, com.google.geo.ugc.streetview.publish.v1.StreetViewPublishRpcMessages.GetPhotoRequest.Builder.class);
      }

      // Construct using com.google.geo.ugc.streetview.publish.v1.StreetViewPublishRpcMessages.GetPhotoRequest.newBuilder()
      private Builder() {

      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);

      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        bitField0_ = 0;
        photoId_ = "";
        view_ = 0;
        languageCode_ = "";
        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.google.geo.ugc.streetview.publish.v1.StreetViewPublishRpcMessages.internal_static_google_streetview_publish_v1_GetPhotoRequest_descriptor;
      }

      @java.lang.Override
      public com.google.geo.ugc.streetview.publish.v1.StreetViewPublishRpcMessages.GetPhotoRequest getDefaultInstanceForType() {
        return com.google.geo.ugc.streetview.publish.v1.StreetViewPublishRpcMessages.GetPhotoRequest.getDefaultInstance();
      }

      @java.lang.Override
      public com.google.geo.ugc.streetview.publish.v1.StreetViewPublishRpcMessages.GetPhotoRequest build() {
        com.google.geo.ugc.streetview.publish.v1.StreetViewPublishRpcMessages.GetPhotoRequest result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public com.google.geo.ugc.streetview.publish.v1.StreetViewPublishRpcMessages.GetPhotoRequest buildPartial() {
        com.google.geo.ugc.streetview.publish.v1.StreetViewPublishRpcMessages.GetPhotoRequest result = new com.google.geo.ugc.streetview.publish.v1.StreetViewPublishRpcMessages.GetPhotoRequest(this);
        if (bitField0_ != 0) { buildPartial0(result); }
        onBuilt();
        return result;
      }

      private void buildPartial0(com.google.geo.ugc.streetview.publish.v1.StreetViewPublishRpcMessages.GetPhotoRequest result) {
        int from_bitField0_ = bitField0_;
        if (((from_bitField0_ & 0x00000001) != 0)) {
          result.photoId_ = photoId_;
        }
        if (((from_bitField0_ & 0x00000002) != 0)) {
          result.view_ = view_;
        }
        if (((from_bitField0_ & 0x00000004) != 0)) {
          result.languageCode_ = languageCode_;
        }
      }

      @java.lang.Override
      public Builder clone() {
        return super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.google.geo.ugc.streetview.publish.v1.StreetViewPublishRpcMessages.GetPhotoRequest) {
          return mergeFrom((com.google.geo.ugc.streetview.publish.v1.StreetViewPublishRpcMessages.GetPhotoRequest)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(com.google.geo.ugc.streetview.publish.v1.StreetViewPublishRpcMessages.GetPhotoRequest other) {
        if (other == com.google.geo.ugc.streetview.publish.v1.StreetViewPublishRpcMessages.GetPhotoRequest.getDefaultInstance()) return this;
        if (!other.getPhotoId().isEmpty()) {
          photoId_ = other.photoId_;
          bitField0_ |= 0x00000001;
          onChanged();
        }
        if (other.view_ != 0) {
          setViewValue(other.getViewValue());
        }
        if (!other.getLanguageCode().isEmpty()) {
          languageCode_ = other.languageCode_;
          bitField0_ |= 0x00000004;
          onChanged();
        }
        this.mergeUnknownFields(other.getUnknownFields());
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        if (extensionRegistry == null) {
          throw new java.lang.NullPointerException();
        }
        try {
          boolean done = false;
          while (!done) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                done = true;
                break;
              case 10: {
                photoId_ = input.readStringRequireUtf8();
                bitField0_ |= 0x00000001;
                break;
              } // case 10
              case 16: {
                view_ = input.readEnum();
                bitField0_ |= 0x00000002;
                break;
              } // case 16
              case 26: {
                languageCode_ = input.readStringRequireUtf8();
                bitField0_ |= 0x00000004;
                break;
              } // case 26
              default: {
                if (!super.parseUnknownField(input, extensionRegistry, tag)) {
                  done = true; // was an endgroup tag
                }
                break;
              } // default:
            } // switch (tag)
          } // while (!done)
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.unwrapIOException();
        } finally {
          onChanged();
        } // finally
        return this;
      }
      private int bitField0_;

      private java.lang.Object photoId_ = "";
      /**
       * <pre>
       * Required. ID of the [Photo][google.streetview.publish.v1.Photo].
       * </pre>
       *
       * <code>string photo_id = 1 [(.google.api.field_behavior) = REQUIRED];</code>
       * @return The photoId.
       */
      public java.lang.String getPhotoId() {
        java.lang.Object ref = photoId_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          photoId_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <pre>
       * Required. ID of the [Photo][google.streetview.publish.v1.Photo].
       * </pre>
       *
       * <code>string photo_id = 1 [(.google.api.field_behavior) = REQUIRED];</code>
       * @return The bytes for photoId.
       */
      public com.google.protobuf.ByteString
          getPhotoIdBytes() {
        java.lang.Object ref = photoId_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          photoId_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       * Required. ID of the [Photo][google.streetview.publish.v1.Photo].
       * </pre>
       *
       * <code>string photo_id = 1 [(.google.api.field_behavior) = REQUIRED];</code>
       * @param value The photoId to set.
       * @return This builder for chaining.
       */
      public Builder setPhotoId(
          java.lang.String value) {
        if (value == null) { throw new NullPointerException(); }
        photoId_ = value;
        bitField0_ |= 0x00000001;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Required. ID of the [Photo][google.streetview.publish.v1.Photo].
       * </pre>
       *
       * <code>string photo_id = 1 [(.google.api.field_behavior) = REQUIRED];</code>
       * @return This builder for chaining.
       */
      public Builder clearPhotoId() {
        photoId_ = getDefaultInstance().getPhotoId();
        bitField0_ = (bitField0_ & ~0x00000001);
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Required. ID of the [Photo][google.streetview.publish.v1.Photo].
       * </pre>
       *
       * <code>string photo_id = 1 [(.google.api.field_behavior) = REQUIRED];</code>
       * @param value The bytes for photoId to set.
       * @return This builder for chaining.
       */
      public Builder setPhotoIdBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) { throw new NullPointerException(); }
        checkByteStringIsUtf8(value);
        photoId_ = value;
        bitField0_ |= 0x00000001;
        onChanged();
        return this;
      }

      private int view_ = 0;
      /**
       * <pre>
       * Required. Specifies if a download URL for the photo bytes should be returned in the
       * [Photo][google.streetview.publish.v1.Photo] response.
       * </pre>
       *
       * <code>.google.streetview.publish.v1.PhotoView view = 2 [(.google.api.field_behavior) = REQUIRED];</code>
       * @return The enum numeric value on the wire for view.
       */
      @java.lang.Override public int getViewValue() {
        return view_;
      }
      /**
       * <pre>
       * Required. Specifies if a download URL for the photo bytes should be returned in the
       * [Photo][google.streetview.publish.v1.Photo] response.
       * </pre>
       *
       * <code>.google.streetview.publish.v1.PhotoView view = 2 [(.google.api.field_behavior) = REQUIRED];</code>
       * @param value The enum numeric value on the wire for view to set.
       * @return This builder for chaining.
       */
      public Builder setViewValue(int value) {
        view_ = value;
        bitField0_ |= 0x00000002;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Required. Specifies if a download URL for the photo bytes should be returned in the
       * [Photo][google.streetview.publish.v1.Photo] response.
       * </pre>
       *
       * <code>.google.streetview.publish.v1.PhotoView view = 2 [(.google.api.field_behavior) = REQUIRED];</code>
       * @return The view.
       */
      @java.lang.Override
      public com.google.geo.ugc.streetview.publish.v1.StreetViewPublishRpcMessages.PhotoView getView() {
        com.google.geo.ugc.streetview.publish.v1.StreetViewPublishRpcMessages.PhotoView result = com.google.geo.ugc.streetview.publish.v1.StreetViewPublishRpcMessages.PhotoView.forNumber(view_);
        return result == null ? com.google.geo.ugc.streetview.publish.v1.StreetViewPublishRpcMessages.PhotoView.UNRECOGNIZED : result;
      }
      /**
       * <pre>
       * Required. Specifies if a download URL for the photo bytes should be returned in the
       * [Photo][google.streetview.publish.v1.Photo] response.
       * </pre>
       *
       * <code>.google.streetview.publish.v1.PhotoView view = 2 [(.google.api.field_behavior) = REQUIRED];</code>
       * @param value The view to set.
       * @return This builder for chaining.
       */
      public Builder setView(com.google.geo.ugc.streetview.publish.v1.StreetViewPublishRpcMessages.PhotoView value) {
        if (value == null) {
          throw new NullPointerException();
        }
        bitField0_ |= 0x00000002;
        view_ = value.getNumber();
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Required. Specifies if a download URL for the photo bytes should be returned in the
       * [Photo][google.streetview.publish.v1.Photo] response.
       * </pre>
       *
       * <code>.google.streetview.publish.v1.PhotoView view = 2 [(.google.api.field_behavior) = REQUIRED];</code>
       * @return This builder for chaining.
       */
      public Builder clearView() {
        bitField0_ = (bitField0_ & ~0x00000002);
        view_ = 0;
        onChanged();
        return this;
      }

      private java.lang.Object languageCode_ = "";
      /**
       * <pre>
       * The BCP-47 language code, such as "en-US" or "sr-Latn". For more
       * information, see
       * http://www.unicode.org/reports/tr35/#Unicode_locale_identifier.
       * If language_code is unspecified, the user's language preference for Google
       * services is used.
       * </pre>
       *
       * <code>string language_code = 3;</code>
       * @return The languageCode.
       */
      public java.lang.String getLanguageCode() {
        java.lang.Object ref = languageCode_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          languageCode_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <pre>
       * The BCP-47 language code, such as "en-US" or "sr-Latn". For more
       * information, see
       * http://www.unicode.org/reports/tr35/#Unicode_locale_identifier.
       * If language_code is unspecified, the user's language preference for Google
       * services is used.
       * </pre>
       *
       * <code>string language_code = 3;</code>
       * @return The bytes for languageCode.
       */
      public com.google.protobuf.ByteString
          getLanguageCodeBytes() {
        java.lang.Object ref = languageCode_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          languageCode_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       * The BCP-47 language code, such as "en-US" or "sr-Latn". For more
       * information, see
       * http://www.unicode.org/reports/tr35/#Unicode_locale_identifier.
       * If language_code is unspecified, the user's language preference for Google
       * services is used.
       * </pre>
       *
       * <code>string language_code = 3;</code>
       * @param value The languageCode to set.
       * @return This builder for chaining.
       */
      public Builder setLanguageCode(
          java.lang.String value) {
        if (value == null) { throw new NullPointerException(); }
        languageCode_ = value;
        bitField0_ |= 0x00000004;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * The BCP-47 language code, such as "en-US" or "sr-Latn". For more
       * information, see
       * http://www.unicode.org/reports/tr35/#Unicode_locale_identifier.
       * If language_code is unspecified, the user's language preference for Google
       * services is used.
       * </pre>
       *
       * <code>string language_code = 3;</code>
       * @return This builder for chaining.
       */
      public Builder clearLanguageCode() {
        languageCode_ = getDefaultInstance().getLanguageCode();
        bitField0_ = (bitField0_ & ~0x00000004);
        onChanged();
        return this;
      }
      /**
       * <pre>
       * The BCP-47 language code, such as "en-US" or "sr-Latn". For more
       * information, see
       * http://www.unicode.org/reports/tr35/#Unicode_locale_identifier.
       * If language_code is unspecified, the user's language preference for Google
       * services is used.
       * </pre>
       *
       * <code>string language_code = 3;</code>
       * @param value The bytes for languageCode to set.
       * @return This builder for chaining.
       */
      public Builder setLanguageCodeBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) { throw new NullPointerException(); }
        checkByteStringIsUtf8(value);
        languageCode_ = value;
        bitField0_ |= 0x00000004;
        onChanged();
        return this;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:google.streetview.publish.v1.GetPhotoRequest)
    }

    // @@protoc_insertion_point(class_scope:google.streetview.publish.v1.GetPhotoRequest)
    private static final com.google.geo.ugc.streetview.publish.v1.StreetViewPublishRpcMessages.GetPhotoRequest DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new com.google.geo.ugc.streetview.publish.v1.StreetViewPublishRpcMessages.GetPhotoRequest();
    }

    public static com.google.geo.ugc.streetview.publish.v1.StreetViewPublishRpcMessages.GetPhotoRequest getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<GetPhotoRequest>
        PARSER = new com.google.protobuf.AbstractParser<GetPhotoRequest>() {
      @java.lang.Override
      public GetPhotoRequest parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        Builder builder = newBuilder();
        try {
          builder.mergeFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.setUnfinishedMessage(builder.buildPartial());
        } catch (com.google.protobuf.UninitializedMessageException e) {
          throw e.asInvalidProtocolBufferException().setUnfinishedMessage(builder.buildPartial());
        } catch (java.io.IOException e) {
          throw new com.google.protobuf.InvalidProtocolBufferException(e)
              .setUnfinishedMessage(builder.buildPartial());
        }
        return builder.buildPartial();
      }
    };

    public static com.google.protobuf.Parser<GetPhotoRequest> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<GetPhotoRequest> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.geo.ugc.streetview.publish.v1.StreetViewPublishRpcMessages.GetPhotoRequest getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface BatchGetPhotosRequestOrBuilder extends
      // @@protoc_insertion_point(interface_extends:google.streetview.publish.v1.BatchGetPhotosRequest)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <pre>
     * Required. IDs of the [Photos][google.streetview.publish.v1.Photo]. For HTTP
     * GET requests, the URL query parameter should be
     * `photoIds=&lt;id1&gt;&amp;photoIds=&lt;id2&gt;&amp;...`.
     * </pre>
     *
     * <code>repeated string photo_ids = 1 [(.google.api.field_behavior) = REQUIRED];</code>
     * @return A list containing the photoIds.
     */
    java.util.List<java.lang.String>
        getPhotoIdsList();
    /**
     * <pre>
     * Required. IDs of the [Photos][google.streetview.publish.v1.Photo]. For HTTP
     * GET requests, the URL query parameter should be
     * `photoIds=&lt;id1&gt;&amp;photoIds=&lt;id2&gt;&amp;...`.
     * </pre>
     *
     * <code>repeated string photo_ids = 1 [(.google.api.field_behavior) = REQUIRED];</code>
     * @return The count of photoIds.
     */
    int getPhotoIdsCount();
    /**
     * <pre>
     * Required. IDs of the [Photos][google.streetview.publish.v1.Photo]. For HTTP
     * GET requests, the URL query parameter should be
     * `photoIds=&lt;id1&gt;&amp;photoIds=&lt;id2&gt;&amp;...`.
     * </pre>
     *
     * <code>repeated string photo_ids = 1 [(.google.api.field_behavior) = REQUIRED];</code>
     * @param index The index of the element to return.
     * @return The photoIds at the given index.
     */
    java.lang.String getPhotoIds(int index);
    /**
     * <pre>
     * Required. IDs of the [Photos][google.streetview.publish.v1.Photo]. For HTTP
     * GET requests, the URL query parameter should be
     * `photoIds=&lt;id1&gt;&amp;photoIds=&lt;id2&gt;&amp;...`.
     * </pre>
     *
     * <code>repeated string photo_ids = 1 [(.google.api.field_behavior) = REQUIRED];</code>
     * @param index The index of the value to return.
     * @return The bytes of the photoIds at the given index.
     */
    com.google.protobuf.ByteString
        getPhotoIdsBytes(int index);

    /**
     * <pre>
     * Required. Specifies if a download URL for the photo bytes should be returned in the
     * Photo response.
     * </pre>
     *
     * <code>.google.streetview.publish.v1.PhotoView view = 2 [(.google.api.field_behavior) = REQUIRED];</code>
     * @return The enum numeric value on the wire for view.
     */
    int getViewValue();
    /**
     * <pre>
     * Required. Specifies if a download URL for the photo bytes should be returned in the
     * Photo response.
     * </pre>
     *
     * <code>.google.streetview.publish.v1.PhotoView view = 2 [(.google.api.field_behavior) = REQUIRED];</code>
     * @return The view.
     */
    com.google.geo.ugc.streetview.publish.v1.StreetViewPublishRpcMessages.PhotoView getView();

    /**
     * <pre>
     * Optional. The BCP-47 language code, such as "en-US" or "sr-Latn". For more
     * information, see
     * http://www.unicode.org/reports/tr35/#Unicode_locale_identifier.
     * If language_code is unspecified, the user's language preference for Google
     * services is used.
     * </pre>
     *
     * <code>string language_code = 3 [(.google.api.field_behavior) = OPTIONAL];</code>
     * @return The languageCode.
     */
    java.lang.String getLanguageCode();
    /**
     * <pre>
     * Optional. The BCP-47 language code, such as "en-US" or "sr-Latn". For more
     * information, see
     * http://www.unicode.org/reports/tr35/#Unicode_locale_identifier.
     * If language_code is unspecified, the user's language preference for Google
     * services is used.
     * </pre>
     *
     * <code>string language_code = 3 [(.google.api.field_behavior) = OPTIONAL];</code>
     * @return The bytes for languageCode.
     */
    com.google.protobuf.ByteString
        getLanguageCodeBytes();
  }
  /**
   * <pre>
   * Request to get one or more [Photos][google.streetview.publish.v1.Photo].
   * By default
   * * does not return the download URL for the photo bytes.
   * Parameters:
   * * `view` controls if the download URL for the photo bytes is returned.
   * </pre>
   *
   * Protobuf type {@code google.streetview.publish.v1.BatchGetPhotosRequest}
   */
  public static final class BatchGetPhotosRequest extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:google.streetview.publish.v1.BatchGetPhotosRequest)
      BatchGetPhotosRequestOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use BatchGetPhotosRequest.newBuilder() to construct.
    private BatchGetPhotosRequest(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private BatchGetPhotosRequest() {
      photoIds_ = com.google.protobuf.LazyStringArrayList.EMPTY;
      view_ = 0;
      languageCode_ = "";
    }

    @java.lang.Override
    @SuppressWarnings({"unused"})
    protected java.lang.Object newInstance(
        UnusedPrivateParameter unused) {
      return new BatchGetPhotosRequest();
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.google.geo.ugc.streetview.publish.v1.StreetViewPublishRpcMessages.internal_static_google_streetview_publish_v1_BatchGetPhotosRequest_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.google.geo.ugc.streetview.publish.v1.StreetViewPublishRpcMessages.internal_static_google_streetview_publish_v1_BatchGetPhotosRequest_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.google.geo.ugc.streetview.publish.v1.StreetViewPublishRpcMessages.BatchGetPhotosRequest.class, com.google.geo.ugc.streetview.publish.v1.StreetViewPublishRpcMessages.BatchGetPhotosRequest.Builder.class);
    }

    public static final int PHOTO_IDS_FIELD_NUMBER = 1;
    @SuppressWarnings("serial")
    private com.google.protobuf.LazyStringList photoIds_;
    /**
     * <pre>
     * Required. IDs of the [Photos][google.streetview.publish.v1.Photo]. For HTTP
     * GET requests, the URL query parameter should be
     * `photoIds=&lt;id1&gt;&amp;photoIds=&lt;id2&gt;&amp;...`.
     * </pre>
     *
     * <code>repeated string photo_ids = 1 [(.google.api.field_behavior) = REQUIRED];</code>
     * @return A list containing the photoIds.
     */
    public com.google.protobuf.ProtocolStringList
        getPhotoIdsList() {
      return photoIds_;
    }
    /**
     * <pre>
     * Required. IDs of the [Photos][google.streetview.publish.v1.Photo]. For HTTP
     * GET requests, the URL query parameter should be
     * `photoIds=&lt;id1&gt;&amp;photoIds=&lt;id2&gt;&amp;...`.
     * </pre>
     *
     * <code>repeated string photo_ids = 1 [(.google.api.field_behavior) = REQUIRED];</code>
     * @return The count of photoIds.
     */
    public int getPhotoIdsCount() {
      return photoIds_.size();
    }
    /**
     * <pre>
     * Required. IDs of the [Photos][google.streetview.publish.v1.Photo]. For HTTP
     * GET requests, the URL query parameter should be
     * `photoIds=&lt;id1&gt;&amp;photoIds=&lt;id2&gt;&amp;...`.
     * </pre>
     *
     * <code>repeated string photo_ids = 1 [(.google.api.field_behavior) = REQUIRED];</code>
     * @param index The index of the element to return.
     * @return The photoIds at the given index.
     */
    public java.lang.String getPhotoIds(int index) {
      return photoIds_.get(index);
    }
    /**
     * <pre>
     * Required. IDs of the [Photos][google.streetview.publish.v1.Photo]. For HTTP
     * GET requests, the URL query parameter should be
     * `photoIds=&lt;id1&gt;&amp;photoIds=&lt;id2&gt;&amp;...`.
     * </pre>
     *
     * <code>repeated string photo_ids = 1 [(.google.api.field_behavior) = REQUIRED];</code>
     * @param index The index of the value to return.
     * @return The bytes of the photoIds at the given index.
     */
    public com.google.protobuf.ByteString
        getPhotoIdsBytes(int index) {
      return photoIds_.getByteString(index);
    }

    public static final int VIEW_FIELD_NUMBER = 2;
    private int view_ = 0;
    /**
     * <pre>
     * Required. Specifies if a download URL for the photo bytes should be returned in the
     * Photo response.
     * </pre>
     *
     * <code>.google.streetview.publish.v1.PhotoView view = 2 [(.google.api.field_behavior) = REQUIRED];</code>
     * @return The enum numeric value on the wire for view.
     */
    @java.lang.Override public int getViewValue() {
      return view_;
    }
    /**
     * <pre>
     * Required. Specifies if a download URL for the photo bytes should be returned in the
     * Photo response.
     * </pre>
     *
     * <code>.google.streetview.publish.v1.PhotoView view = 2 [(.google.api.field_behavior) = REQUIRED];</code>
     * @return The view.
     */
    @java.lang.Override public com.google.geo.ugc.streetview.publish.v1.StreetViewPublishRpcMessages.PhotoView getView() {
      com.google.geo.ugc.streetview.publish.v1.StreetViewPublishRpcMessages.PhotoView result = com.google.geo.ugc.streetview.publish.v1.StreetViewPublishRpcMessages.PhotoView.forNumber(view_);
      return result == null ? com.google.geo.ugc.streetview.publish.v1.StreetViewPublishRpcMessages.PhotoView.UNRECOGNIZED : result;
    }

    public static final int LANGUAGE_CODE_FIELD_NUMBER = 3;
    @SuppressWarnings("serial")
    private volatile java.lang.Object languageCode_ = "";
    /**
     * <pre>
     * Optional. The BCP-47 language code, such as "en-US" or "sr-Latn". For more
     * information, see
     * http://www.unicode.org/reports/tr35/#Unicode_locale_identifier.
     * If language_code is unspecified, the user's language preference for Google
     * services is used.
     * </pre>
     *
     * <code>string language_code = 3 [(.google.api.field_behavior) = OPTIONAL];</code>
     * @return The languageCode.
     */
    @java.lang.Override
    public java.lang.String getLanguageCode() {
      java.lang.Object ref = languageCode_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        languageCode_ = s;
        return s;
      }
    }
    /**
     * <pre>
     * Optional. The BCP-47 language code, such as "en-US" or "sr-Latn". For more
     * information, see
     * http://www.unicode.org/reports/tr35/#Unicode_locale_identifier.
     * If language_code is unspecified, the user's language preference for Google
     * services is used.
     * </pre>
     *
     * <code>string language_code = 3 [(.google.api.field_behavior) = OPTIONAL];</code>
     * @return The bytes for languageCode.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString
        getLanguageCodeBytes() {
      java.lang.Object ref = languageCode_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        languageCode_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      for (int i = 0; i < photoIds_.size(); i++) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 1, photoIds_.getRaw(i));
      }
      if (view_ != com.google.geo.ugc.streetview.publish.v1.StreetViewPublishRpcMessages.PhotoView.BASIC.getNumber()) {
        output.writeEnum(2, view_);
      }
      if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(languageCode_)) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 3, languageCode_);
      }
      getUnknownFields().writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      {
        int dataSize = 0;
        for (int i = 0; i < photoIds_.size(); i++) {
          dataSize += computeStringSizeNoTag(photoIds_.getRaw(i));
        }
        size += dataSize;
        size += 1 * getPhotoIdsList().size();
      }
      if (view_ != com.google.geo.ugc.streetview.publish.v1.StreetViewPublishRpcMessages.PhotoView.BASIC.getNumber()) {
        size += com.google.protobuf.CodedOutputStream
          .computeEnumSize(2, view_);
      }
      if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(languageCode_)) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(3, languageCode_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof com.google.geo.ugc.streetview.publish.v1.StreetViewPublishRpcMessages.BatchGetPhotosRequest)) {
        return super.equals(obj);
      }
      com.google.geo.ugc.streetview.publish.v1.StreetViewPublishRpcMessages.BatchGetPhotosRequest other = (com.google.geo.ugc.streetview.publish.v1.StreetViewPublishRpcMessages.BatchGetPhotosRequest) obj;

      if (!getPhotoIdsList()
          .equals(other.getPhotoIdsList())) return false;
      if (view_ != other.view_) return false;
      if (!getLanguageCode()
          .equals(other.getLanguageCode())) return false;
      if (!getUnknownFields().equals(other.getUnknownFields())) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      if (getPhotoIdsCount() > 0) {
        hash = (37 * hash) + PHOTO_IDS_FIELD_NUMBER;
        hash = (53 * hash) + getPhotoIdsList().hashCode();
      }
      hash = (37 * hash) + VIEW_FIELD_NUMBER;
      hash = (53 * hash) + view_;
      hash = (37 * hash) + LANGUAGE_CODE_FIELD_NUMBER;
      hash = (53 * hash) + getLanguageCode().hashCode();
      hash = (29 * hash) + getUnknownFields().hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static com.google.geo.ugc.streetview.publish.v1.StreetViewPublishRpcMessages.BatchGetPhotosRequest parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.google.geo.ugc.streetview.publish.v1.StreetViewPublishRpcMessages.BatchGetPhotosRequest parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.google.geo.ugc.streetview.publish.v1.StreetViewPublishRpcMessages.BatchGetPhotosRequest parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.google.geo.ugc.streetview.publish.v1.StreetViewPublishRpcMessages.BatchGetPhotosRequest parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.google.geo.ugc.streetview.publish.v1.StreetViewPublishRpcMessages.BatchGetPhotosRequest parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.google.geo.ugc.streetview.publish.v1.StreetViewPublishRpcMessages.BatchGetPhotosRequest parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.google.geo.ugc.streetview.publish.v1.StreetViewPublishRpcMessages.BatchGetPhotosRequest parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static com.google.geo.ugc.streetview.publish.v1.StreetViewPublishRpcMessages.BatchGetPhotosRequest parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static com.google.geo.ugc.streetview.publish.v1.StreetViewPublishRpcMessages.BatchGetPhotosRequest parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static com.google.geo.ugc.streetview.publish.v1.StreetViewPublishRpcMessages.BatchGetPhotosRequest parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static com.google.geo.ugc.streetview.publish.v1.StreetViewPublishRpcMessages.BatchGetPhotosRequest parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static com.google.geo.ugc.streetview.publish.v1.StreetViewPublishRpcMessages.BatchGetPhotosRequest parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(com.google.geo.ugc.streetview.publish.v1.StreetViewPublishRpcMessages.BatchGetPhotosRequest prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * <pre>
     * Request to get one or more [Photos][google.streetview.publish.v1.Photo].
     * By default
     * * does not return the download URL for the photo bytes.
     * Parameters:
     * * `view` controls if the download URL for the photo bytes is returned.
     * </pre>
     *
     * Protobuf type {@code google.streetview.publish.v1.BatchGetPhotosRequest}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:google.streetview.publish.v1.BatchGetPhotosRequest)
        com.google.geo.ugc.streetview.publish.v1.StreetViewPublishRpcMessages.BatchGetPhotosRequestOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return com.google.geo.ugc.streetview.publish.v1.StreetViewPublishRpcMessages.internal_static_google_streetview_publish_v1_BatchGetPhotosRequest_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return com.google.geo.ugc.streetview.publish.v1.StreetViewPublishRpcMessages.internal_static_google_streetview_publish_v1_BatchGetPhotosRequest_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                com.google.geo.ugc.streetview.publish.v1.StreetViewPublishRpcMessages.BatchGetPhotosRequest.class, com.google.geo.ugc.streetview.publish.v1.StreetViewPublishRpcMessages.BatchGetPhotosRequest.Builder.class);
      }

      // Construct using com.google.geo.ugc.streetview.publish.v1.StreetViewPublishRpcMessages.BatchGetPhotosRequest.newBuilder()
      private Builder() {

      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);

      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        bitField0_ = 0;
        photoIds_ = com.google.protobuf.LazyStringArrayList.EMPTY;
        bitField0_ = (bitField0_ & ~0x00000001);
        view_ = 0;
        languageCode_ = "";
        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.google.geo.ugc.streetview.publish.v1.StreetViewPublishRpcMessages.internal_static_google_streetview_publish_v1_BatchGetPhotosRequest_descriptor;
      }

      @java.lang.Override
      public com.google.geo.ugc.streetview.publish.v1.StreetViewPublishRpcMessages.BatchGetPhotosRequest getDefaultInstanceForType() {
        return com.google.geo.ugc.streetview.publish.v1.StreetViewPublishRpcMessages.BatchGetPhotosRequest.getDefaultInstance();
      }

      @java.lang.Override
      public com.google.geo.ugc.streetview.publish.v1.StreetViewPublishRpcMessages.BatchGetPhotosRequest build() {
        com.google.geo.ugc.streetview.publish.v1.StreetViewPublishRpcMessages.BatchGetPhotosRequest result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public com.google.geo.ugc.streetview.publish.v1.StreetViewPublishRpcMessages.BatchGetPhotosRequest buildPartial() {
        com.google.geo.ugc.streetview.publish.v1.StreetViewPublishRpcMessages.BatchGetPhotosRequest result = new com.google.geo.ugc.streetview.publish.v1.StreetViewPublishRpcMessages.BatchGetPhotosRequest(this);
        buildPartialRepeatedFields(result);
        if (bitField0_ != 0) { buildPartial0(result); }
        onBuilt();
        return result;
      }

      private void buildPartialRepeatedFields(com.google.geo.ugc.streetview.publish.v1.StreetViewPublishRpcMessages.BatchGetPhotosRequest result) {
        if (((bitField0_ & 0x00000001) != 0)) {
          photoIds_ = photoIds_.getUnmodifiableView();
          bitField0_ = (bitField0_ & ~0x00000001);
        }
        result.photoIds_ = photoIds_;
      }

      private void buildPartial0(com.google.geo.ugc.streetview.publish.v1.StreetViewPublishRpcMessages.BatchGetPhotosRequest result) {
        int from_bitField0_ = bitField0_;
        if (((from_bitField0_ & 0x00000002) != 0)) {
          result.view_ = view_;
        }
        if (((from_bitField0_ & 0x00000004) != 0)) {
          result.languageCode_ = languageCode_;
        }
      }

      @java.lang.Override
      public Builder clone() {
        return super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.google.geo.ugc.streetview.publish.v1.StreetViewPublishRpcMessages.BatchGetPhotosRequest) {
          return mergeFrom((com.google.geo.ugc.streetview.publish.v1.StreetViewPublishRpcMessages.BatchGetPhotosRequest)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(com.google.geo.ugc.streetview.publish.v1.StreetViewPublishRpcMessages.BatchGetPhotosRequest other) {
        if (other == com.google.geo.ugc.streetview.publish.v1.StreetViewPublishRpcMessages.BatchGetPhotosRequest.getDefaultInstance()) return this;
        if (!other.photoIds_.isEmpty()) {
          if (photoIds_.isEmpty()) {
            photoIds_ = other.photoIds_;
            bitField0_ = (bitField0_ & ~0x00000001);
          } else {
            ensurePhotoIdsIsMutable();
            photoIds_.addAll(other.photoIds_);
          }
          onChanged();
        }
        if (other.view_ != 0) {
          setViewValue(other.getViewValue());
        }
        if (!other.getLanguageCode().isEmpty()) {
          languageCode_ = other.languageCode_;
          bitField0_ |= 0x00000004;
          onChanged();
        }
        this.mergeUnknownFields(other.getUnknownFields());
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        if (extensionRegistry == null) {
          throw new java.lang.NullPointerException();
        }
        try {
          boolean done = false;
          while (!done) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                done = true;
                break;
              case 10: {
                java.lang.String s = input.readStringRequireUtf8();
                ensurePhotoIdsIsMutable();
                photoIds_.add(s);
                break;
              } // case 10
              case 16: {
                view_ = input.readEnum();
                bitField0_ |= 0x00000002;
                break;
              } // case 16
              case 26: {
                languageCode_ = input.readStringRequireUtf8();
                bitField0_ |= 0x00000004;
                break;
              } // case 26
              default: {
                if (!super.parseUnknownField(input, extensionRegistry, tag)) {
                  done = true; // was an endgroup tag
                }
                break;
              } // default:
            } // switch (tag)
          } // while (!done)
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.unwrapIOException();
        } finally {
          onChanged();
        } // finally
        return this;
      }
      private int bitField0_;

      private com.google.protobuf.LazyStringList photoIds_ = com.google.protobuf.LazyStringArrayList.EMPTY;
      private void ensurePhotoIdsIsMutable() {
        if (!((bitField0_ & 0x00000001) != 0)) {
          photoIds_ = new com.google.protobuf.LazyStringArrayList(photoIds_);
          bitField0_ |= 0x00000001;
         }
      }
      /**
       * <pre>
       * Required. IDs of the [Photos][google.streetview.publish.v1.Photo]. For HTTP
       * GET requests, the URL query parameter should be
       * `photoIds=&lt;id1&gt;&amp;photoIds=&lt;id2&gt;&amp;...`.
       * </pre>
       *
       * <code>repeated string photo_ids = 1 [(.google.api.field_behavior) = REQUIRED];</code>
       * @return A list containing the photoIds.
       */
      public com.google.protobuf.ProtocolStringList
          getPhotoIdsList() {
        return photoIds_.getUnmodifiableView();
      }
      /**
       * <pre>
       * Required. IDs of the [Photos][google.streetview.publish.v1.Photo]. For HTTP
       * GET requests, the URL query parameter should be
       * `photoIds=&lt;id1&gt;&amp;photoIds=&lt;id2&gt;&amp;...`.
       * </pre>
       *
       * <code>repeated string photo_ids = 1 [(.google.api.field_behavior) = REQUIRED];</code>
       * @return The count of photoIds.
       */
      public int getPhotoIdsCount() {
        return photoIds_.size();
      }
      /**
       * <pre>
       * Required. IDs of the [Photos][google.streetview.publish.v1.Photo]. For HTTP
       * GET requests, the URL query parameter should be
       * `photoIds=&lt;id1&gt;&amp;photoIds=&lt;id2&gt;&amp;...`.
       * </pre>
       *
       * <code>repeated string photo_ids = 1 [(.google.api.field_behavior) = REQUIRED];</code>
       * @param index The index of the element to return.
       * @return The photoIds at the given index.
       */
      public java.lang.String getPhotoIds(int index) {
        return photoIds_.get(index);
      }
      /**
       * <pre>
       * Required. IDs of the [Photos][google.streetview.publish.v1.Photo]. For HTTP
       * GET requests, the URL query parameter should be
       * `photoIds=&lt;id1&gt;&amp;photoIds=&lt;id2&gt;&amp;...`.
       * </pre>
       *
       * <code>repeated string photo_ids = 1 [(.google.api.field_behavior) = REQUIRED];</code>
       * @param index The index of the value to return.
       * @return The bytes of the photoIds at the given index.
       */
      public com.google.protobuf.ByteString
          getPhotoIdsBytes(int index) {
        return photoIds_.getByteString(index);
      }
      /**
       * <pre>
       * Required. IDs of the [Photos][google.streetview.publish.v1.Photo]. For HTTP
       * GET requests, the URL query parameter should be
       * `photoIds=&lt;id1&gt;&amp;photoIds=&lt;id2&gt;&amp;...`.
       * </pre>
       *
       * <code>repeated string photo_ids = 1 [(.google.api.field_behavior) = REQUIRED];</code>
       * @param index The index to set the value at.
       * @param value The photoIds to set.
       * @return This builder for chaining.
       */
      public Builder setPhotoIds(
          int index, java.lang.String value) {
        if (value == null) { throw new NullPointerException(); }
        ensurePhotoIdsIsMutable();
        photoIds_.set(index, value);
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Required. IDs of the [Photos][google.streetview.publish.v1.Photo]. For HTTP
       * GET requests, the URL query parameter should be
       * `photoIds=&lt;id1&gt;&amp;photoIds=&lt;id2&gt;&amp;...`.
       * </pre>
       *
       * <code>repeated string photo_ids = 1 [(.google.api.field_behavior) = REQUIRED];</code>
       * @param value The photoIds to add.
       * @return This builder for chaining.
       */
      public Builder addPhotoIds(
          java.lang.String value) {
        if (value == null) { throw new NullPointerException(); }
        ensurePhotoIdsIsMutable();
        photoIds_.add(value);
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Required. IDs of the [Photos][google.streetview.publish.v1.Photo]. For HTTP
       * GET requests, the URL query parameter should be
       * `photoIds=&lt;id1&gt;&amp;photoIds=&lt;id2&gt;&amp;...`.
       * </pre>
       *
       * <code>repeated string photo_ids = 1 [(.google.api.field_behavior) = REQUIRED];</code>
       * @param values The photoIds to add.
       * @return This builder for chaining.
       */
      public Builder addAllPhotoIds(
          java.lang.Iterable<java.lang.String> values) {
        ensurePhotoIdsIsMutable();
        com.google.protobuf.AbstractMessageLite.Builder.addAll(
            values, photoIds_);
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Required. IDs of the [Photos][google.streetview.publish.v1.Photo]. For HTTP
       * GET requests, the URL query parameter should be
       * `photoIds=&lt;id1&gt;&amp;photoIds=&lt;id2&gt;&amp;...`.
       * </pre>
       *
       * <code>repeated string photo_ids = 1 [(.google.api.field_behavior) = REQUIRED];</code>
       * @return This builder for chaining.
       */
      public Builder clearPhotoIds() {
        photoIds_ = com.google.protobuf.LazyStringArrayList.EMPTY;
        bitField0_ = (bitField0_ & ~0x00000001);
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Required. IDs of the [Photos][google.streetview.publish.v1.Photo]. For HTTP
       * GET requests, the URL query parameter should be
       * `photoIds=&lt;id1&gt;&amp;photoIds=&lt;id2&gt;&amp;...`.
       * </pre>
       *
       * <code>repeated string photo_ids = 1 [(.google.api.field_behavior) = REQUIRED];</code>
       * @param value The bytes of the photoIds to add.
       * @return This builder for chaining.
       */
      public Builder addPhotoIdsBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) { throw new NullPointerException(); }
        checkByteStringIsUtf8(value);
        ensurePhotoIdsIsMutable();
        photoIds_.add(value);
        onChanged();
        return this;
      }

      private int view_ = 0;
      /**
       * <pre>
       * Required. Specifies if a download URL for the photo bytes should be returned in the
       * Photo response.
       * </pre>
       *
       * <code>.google.streetview.publish.v1.PhotoView view = 2 [(.google.api.field_behavior) = REQUIRED];</code>
       * @return The enum numeric value on the wire for view.
       */
      @java.lang.Override public int getViewValue() {
        return view_;
      }
      /**
       * <pre>
       * Required. Specifies if a download URL for the photo bytes should be returned in the
       * Photo response.
       * </pre>
       *
       * <code>.google.streetview.publish.v1.PhotoView view = 2 [(.google.api.field_behavior) = REQUIRED];</code>
       * @param value The enum numeric value on the wire for view to set.
       * @return This builder for chaining.
       */
      public Builder setViewValue(int value) {
        view_ = value;
        bitField0_ |= 0x00000002;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Required. Specifies if a download URL for the photo bytes should be returned in the
       * Photo response.
       * </pre>
       *
       * <code>.google.streetview.publish.v1.PhotoView view = 2 [(.google.api.field_behavior) = REQUIRED];</code>
       * @return The view.
       */
      @java.lang.Override
      public com.google.geo.ugc.streetview.publish.v1.StreetViewPublishRpcMessages.PhotoView getView() {
        com.google.geo.ugc.streetview.publish.v1.StreetViewPublishRpcMessages.PhotoView result = com.google.geo.ugc.streetview.publish.v1.StreetViewPublishRpcMessages.PhotoView.forNumber(view_);
        return result == null ? com.google.geo.ugc.streetview.publish.v1.StreetViewPublishRpcMessages.PhotoView.UNRECOGNIZED : result;
      }
      /**
       * <pre>
       * Required. Specifies if a download URL for the photo bytes should be returned in the
       * Photo response.
       * </pre>
       *
       * <code>.google.streetview.publish.v1.PhotoView view = 2 [(.google.api.field_behavior) = REQUIRED];</code>
       * @param value The view to set.
       * @return This builder for chaining.
       */
      public Builder setView(com.google.geo.ugc.streetview.publish.v1.StreetViewPublishRpcMessages.PhotoView value) {
        if (value == null) {
          throw new NullPointerException();
        }
        bitField0_ |= 0x00000002;
        view_ = value.getNumber();
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Required. Specifies if a download URL for the photo bytes should be returned in the
       * Photo response.
       * </pre>
       *
       * <code>.google.streetview.publish.v1.PhotoView view = 2 [(.google.api.field_behavior) = REQUIRED];</code>
       * @return This builder for chaining.
       */
      public Builder clearView() {
        bitField0_ = (bitField0_ & ~0x00000002);
        view_ = 0;
        onChanged();
        return this;
      }

      private java.lang.Object languageCode_ = "";
      /**
       * <pre>
       * Optional. The BCP-47 language code, such as "en-US" or "sr-Latn". For more
       * information, see
       * http://www.unicode.org/reports/tr35/#Unicode_locale_identifier.
       * If language_code is unspecified, the user's language preference for Google
       * services is used.
       * </pre>
       *
       * <code>string language_code = 3 [(.google.api.field_behavior) = OPTIONAL];</code>
       * @return The languageCode.
       */
      public java.lang.String getLanguageCode() {
        java.lang.Object ref = languageCode_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          languageCode_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <pre>
       * Optional. The BCP-47 language code, such as "en-US" or "sr-Latn". For more
       * information, see
       * http://www.unicode.org/reports/tr35/#Unicode_locale_identifier.
       * If language_code is unspecified, the user's language preference for Google
       * services is used.
       * </pre>
       *
       * <code>string language_code = 3 [(.google.api.field_behavior) = OPTIONAL];</code>
       * @return The bytes for languageCode.
       */
      public com.google.protobuf.ByteString
          getLanguageCodeBytes() {
        java.lang.Object ref = languageCode_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          languageCode_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       * Optional. The BCP-47 language code, such as "en-US" or "sr-Latn". For more
       * information, see
       * http://www.unicode.org/reports/tr35/#Unicode_locale_identifier.
       * If language_code is unspecified, the user's language preference for Google
       * services is used.
       * </pre>
       *
       * <code>string language_code = 3 [(.google.api.field_behavior) = OPTIONAL];</code>
       * @param value The languageCode to set.
       * @return This builder for chaining.
       */
      public Builder setLanguageCode(
          java.lang.String value) {
        if (value == null) { throw new NullPointerException(); }
        languageCode_ = value;
        bitField0_ |= 0x00000004;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Optional. The BCP-47 language code, such as "en-US" or "sr-Latn". For more
       * information, see
       * http://www.unicode.org/reports/tr35/#Unicode_locale_identifier.
       * If language_code is unspecified, the user's language preference for Google
       * services is used.
       * </pre>
       *
       * <code>string language_code = 3 [(.google.api.field_behavior) = OPTIONAL];</code>
       * @return This builder for chaining.
       */
      public Builder clearLanguageCode() {
        languageCode_ = getDefaultInstance().getLanguageCode();
        bitField0_ = (bitField0_ & ~0x00000004);
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Optional. The BCP-47 language code, such as "en-US" or "sr-Latn". For more
       * information, see
       * http://www.unicode.org/reports/tr35/#Unicode_locale_identifier.
       * If language_code is unspecified, the user's language preference for Google
       * services is used.
       * </pre>
       *
       * <code>string language_code = 3 [(.google.api.field_behavior) = OPTIONAL];</code>
       * @param value The bytes for languageCode to set.
       * @return This builder for chaining.
       */
      public Builder setLanguageCodeBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) { throw new NullPointerException(); }
        checkByteStringIsUtf8(value);
        languageCode_ = value;
        bitField0_ |= 0x00000004;
        onChanged();
        return this;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:google.streetview.publish.v1.BatchGetPhotosRequest)
    }

    // @@protoc_insertion_point(class_scope:google.streetview.publish.v1.BatchGetPhotosRequest)
    private static final com.google.geo.ugc.streetview.publish.v1.StreetViewPublishRpcMessages.BatchGetPhotosRequest DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new com.google.geo.ugc.streetview.publish.v1.StreetViewPublishRpcMessages.BatchGetPhotosRequest();
    }

    public static com.google.geo.ugc.streetview.publish.v1.StreetViewPublishRpcMessages.BatchGetPhotosRequest getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<BatchGetPhotosRequest>
        PARSER = new com.google.protobuf.AbstractParser<BatchGetPhotosRequest>() {
      @java.lang.Override
      public BatchGetPhotosRequest parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        Builder builder = newBuilder();
        try {
          builder.mergeFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.setUnfinishedMessage(builder.buildPartial());
        } catch (com.google.protobuf.UninitializedMessageException e) {
          throw e.asInvalidProtocolBufferException().setUnfinishedMessage(builder.buildPartial());
        } catch (java.io.IOException e) {
          throw new com.google.protobuf.InvalidProtocolBufferException(e)
              .setUnfinishedMessage(builder.buildPartial());
        }
        return builder.buildPartial();
      }
    };

    public static com.google.protobuf.Parser<BatchGetPhotosRequest> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<BatchGetPhotosRequest> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.geo.ugc.streetview.publish.v1.StreetViewPublishRpcMessages.BatchGetPhotosRequest getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface BatchGetPhotosResponseOrBuilder extends
      // @@protoc_insertion_point(interface_extends:google.streetview.publish.v1.BatchGetPhotosResponse)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <pre>
     * List of results for each individual
     * [Photo][google.streetview.publish.v1.Photo] requested, in the same order as
     * the requests in
     * [BatchGetPhotos][google.streetview.publish.v1.StreetViewPublishService.BatchGetPhotos].
     * </pre>
     *
     * <code>repeated .google.streetview.publish.v1.PhotoResponse results = 1;</code>
     */
    java.util.List<com.google.geo.ugc.streetview.publish.v1.StreetViewPublishRpcMessages.PhotoResponse> 
        getResultsList();
    /**
     * <pre>
     * List of results for each individual
     * [Photo][google.streetview.publish.v1.Photo] requested, in the same order as
     * the requests in
     * [BatchGetPhotos][google.streetview.publish.v1.StreetViewPublishService.BatchGetPhotos].
     * </pre>
     *
     * <code>repeated .google.streetview.publish.v1.PhotoResponse results = 1;</code>
     */
    com.google.geo.ugc.streetview.publish.v1.StreetViewPublishRpcMessages.PhotoResponse getResults(int index);
    /**
     * <pre>
     * List of results for each individual
     * [Photo][google.streetview.publish.v1.Photo] requested, in the same order as
     * the requests in
     * [BatchGetPhotos][google.streetview.publish.v1.StreetViewPublishService.BatchGetPhotos].
     * </pre>
     *
     * <code>repeated .google.streetview.publish.v1.PhotoResponse results = 1;</code>
     */
    int getResultsCount();
    /**
     * <pre>
     * List of results for each individual
     * [Photo][google.streetview.publish.v1.Photo] requested, in the same order as
     * the requests in
     * [BatchGetPhotos][google.streetview.publish.v1.StreetViewPublishService.BatchGetPhotos].
     * </pre>
     *
     * <code>repeated .google.streetview.publish.v1.PhotoResponse results = 1;</code>
     */
    java.util.List<? extends com.google.geo.ugc.streetview.publish.v1.StreetViewPublishRpcMessages.PhotoResponseOrBuilder> 
        getResultsOrBuilderList();
    /**
     * <pre>
     * List of results for each individual
     * [Photo][google.streetview.publish.v1.Photo] requested, in the same order as
     * the requests in
     * [BatchGetPhotos][google.streetview.publish.v1.StreetViewPublishService.BatchGetPhotos].
     * </pre>
     *
     * <code>repeated .google.streetview.publish.v1.PhotoResponse results = 1;</code>
     */
    com.google.geo.ugc.streetview.publish.v1.StreetViewPublishRpcMessages.PhotoResponseOrBuilder getResultsOrBuilder(
        int index);
  }
  /**
   * <pre>
   * Response to batch get of [Photos][google.streetview.publish.v1.Photo].
   * </pre>
   *
   * Protobuf type {@code google.streetview.publish.v1.BatchGetPhotosResponse}
   */
  public static final class BatchGetPhotosResponse extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:google.streetview.publish.v1.BatchGetPhotosResponse)
      BatchGetPhotosResponseOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use BatchGetPhotosResponse.newBuilder() to construct.
    private BatchGetPhotosResponse(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private BatchGetPhotosResponse() {
      results_ = java.util.Collections.emptyList();
    }

    @java.lang.Override
    @SuppressWarnings({"unused"})
    protected java.lang.Object newInstance(
        UnusedPrivateParameter unused) {
      return new BatchGetPhotosResponse();
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.google.geo.ugc.streetview.publish.v1.StreetViewPublishRpcMessages.internal_static_google_streetview_publish_v1_BatchGetPhotosResponse_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.google.geo.ugc.streetview.publish.v1.StreetViewPublishRpcMessages.internal_static_google_streetview_publish_v1_BatchGetPhotosResponse_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.google.geo.ugc.streetview.publish.v1.StreetViewPublishRpcMessages.BatchGetPhotosResponse.class, com.google.geo.ugc.streetview.publish.v1.StreetViewPublishRpcMessages.BatchGetPhotosResponse.Builder.class);
    }

    public static final int RESULTS_FIELD_NUMBER = 1;
    @SuppressWarnings("serial")
    private java.util.List<com.google.geo.ugc.streetview.publish.v1.StreetViewPublishRpcMessages.PhotoResponse> results_;
    /**
     * <pre>
     * List of results for each individual
     * [Photo][google.streetview.publish.v1.Photo] requested, in the same order as
     * the requests in
     * [BatchGetPhotos][google.streetview.publish.v1.StreetViewPublishService.BatchGetPhotos].
     * </pre>
     *
     * <code>repeated .google.streetview.publish.v1.PhotoResponse results = 1;</code>
     */
    @java.lang.Override
    public java.util.List<com.google.geo.ugc.streetview.publish.v1.StreetViewPublishRpcMessages.PhotoResponse> getResultsList() {
      return results_;
    }
    /**
     * <pre>
     * List of results for each individual
     * [Photo][google.streetview.publish.v1.Photo] requested, in the same order as
     * the requests in
     * [BatchGetPhotos][google.streetview.publish.v1.StreetViewPublishService.BatchGetPhotos].
     * </pre>
     *
     * <code>repeated .google.streetview.publish.v1.PhotoResponse results = 1;</code>
     */
    @java.lang.Override
    public java.util.List<? extends com.google.geo.ugc.streetview.publish.v1.StreetViewPublishRpcMessages.PhotoResponseOrBuilder> 
        getResultsOrBuilderList() {
      return results_;
    }
    /**
     * <pre>
     * List of results for each individual
     * [Photo][google.streetview.publish.v1.Photo] requested, in the same order as
     * the requests in
     * [BatchGetPhotos][google.streetview.publish.v1.StreetViewPublishService.BatchGetPhotos].
     * </pre>
     *
     * <code>repeated .google.streetview.publish.v1.PhotoResponse results = 1;</code>
     */
    @java.lang.Override
    public int getResultsCount() {
      return results_.size();
    }
    /**
     * <pre>
     * List of results for each individual
     * [Photo][google.streetview.publish.v1.Photo] requested, in the same order as
     * the requests in
     * [BatchGetPhotos][google.streetview.publish.v1.StreetViewPublishService.BatchGetPhotos].
     * </pre>
     *
     * <code>repeated .google.streetview.publish.v1.PhotoResponse results = 1;</code>
     */
    @java.lang.Override
    public com.google.geo.ugc.streetview.publish.v1.StreetViewPublishRpcMessages.PhotoResponse getResults(int index) {
      return results_.get(index);
    }
    /**
     * <pre>
     * List of results for each individual
     * [Photo][google.streetview.publish.v1.Photo] requested, in the same order as
     * the requests in
     * [BatchGetPhotos][google.streetview.publish.v1.StreetViewPublishService.BatchGetPhotos].
     * </pre>
     *
     * <code>repeated .google.streetview.publish.v1.PhotoResponse results = 1;</code>
     */
    @java.lang.Override
    public com.google.geo.ugc.streetview.publish.v1.StreetViewPublishRpcMessages.PhotoResponseOrBuilder getResultsOrBuilder(
        int index) {
      return results_.get(index);
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      for (int i = 0; i < results_.size(); i++) {
        output.writeMessage(1, results_.get(i));
      }
      getUnknownFields().writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      for (int i = 0; i < results_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, results_.get(i));
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof com.google.geo.ugc.streetview.publish.v1.StreetViewPublishRpcMessages.BatchGetPhotosResponse)) {
        return super.equals(obj);
      }
      com.google.geo.ugc.streetview.publish.v1.StreetViewPublishRpcMessages.BatchGetPhotosResponse other = (com.google.geo.ugc.streetview.publish.v1.StreetViewPublishRpcMessages.BatchGetPhotosResponse) obj;

      if (!getResultsList()
          .equals(other.getResultsList())) return false;
      if (!getUnknownFields().equals(other.getUnknownFields())) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      if (getResultsCount() > 0) {
        hash = (37 * hash) + RESULTS_FIELD_NUMBER;
        hash = (53 * hash) + getResultsList().hashCode();
      }
      hash = (29 * hash) + getUnknownFields().hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static com.google.geo.ugc.streetview.publish.v1.StreetViewPublishRpcMessages.BatchGetPhotosResponse parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.google.geo.ugc.streetview.publish.v1.StreetViewPublishRpcMessages.BatchGetPhotosResponse parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.google.geo.ugc.streetview.publish.v1.StreetViewPublishRpcMessages.BatchGetPhotosResponse parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.google.geo.ugc.streetview.publish.v1.StreetViewPublishRpcMessages.BatchGetPhotosResponse parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.google.geo.ugc.streetview.publish.v1.StreetViewPublishRpcMessages.BatchGetPhotosResponse parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.google.geo.ugc.streetview.publish.v1.StreetViewPublishRpcMessages.BatchGetPhotosResponse parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.google.geo.ugc.streetview.publish.v1.StreetViewPublishRpcMessages.BatchGetPhotosResponse parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static com.google.geo.ugc.streetview.publish.v1.StreetViewPublishRpcMessages.BatchGetPhotosResponse parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static com.google.geo.ugc.streetview.publish.v1.StreetViewPublishRpcMessages.BatchGetPhotosResponse parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static com.google.geo.ugc.streetview.publish.v1.StreetViewPublishRpcMessages.BatchGetPhotosResponse parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static com.google.geo.ugc.streetview.publish.v1.StreetViewPublishRpcMessages.BatchGetPhotosResponse parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static com.google.geo.ugc.streetview.publish.v1.StreetViewPublishRpcMessages.BatchGetPhotosResponse parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(com.google.geo.ugc.streetview.publish.v1.StreetViewPublishRpcMessages.BatchGetPhotosResponse prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * <pre>
     * Response to batch get of [Photos][google.streetview.publish.v1.Photo].
     * </pre>
     *
     * Protobuf type {@code google.streetview.publish.v1.BatchGetPhotosResponse}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:google.streetview.publish.v1.BatchGetPhotosResponse)
        com.google.geo.ugc.streetview.publish.v1.StreetViewPublishRpcMessages.BatchGetPhotosResponseOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return com.google.geo.ugc.streetview.publish.v1.StreetViewPublishRpcMessages.internal_static_google_streetview_publish_v1_BatchGetPhotosResponse_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return com.google.geo.ugc.streetview.publish.v1.StreetViewPublishRpcMessages.internal_static_google_streetview_publish_v1_BatchGetPhotosResponse_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                com.google.geo.ugc.streetview.publish.v1.StreetViewPublishRpcMessages.BatchGetPhotosResponse.class, com.google.geo.ugc.streetview.publish.v1.StreetViewPublishRpcMessages.BatchGetPhotosResponse.Builder.class);
      }

      // Construct using com.google.geo.ugc.streetview.publish.v1.StreetViewPublishRpcMessages.BatchGetPhotosResponse.newBuilder()
      private Builder() {

      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);

      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        bitField0_ = 0;
        if (resultsBuilder_ == null) {
          results_ = java.util.Collections.emptyList();
        } else {
          results_ = null;
          resultsBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000001);
        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.google.geo.ugc.streetview.publish.v1.StreetViewPublishRpcMessages.internal_static_google_streetview_publish_v1_BatchGetPhotosResponse_descriptor;
      }

      @java.lang.Override
      public com.google.geo.ugc.streetview.publish.v1.StreetViewPublishRpcMessages.BatchGetPhotosResponse getDefaultInstanceForType() {
        return com.google.geo.ugc.streetview.publish.v1.StreetViewPublishRpcMessages.BatchGetPhotosResponse.getDefaultInstance();
      }

      @java.lang.Override
      public com.google.geo.ugc.streetview.publish.v1.StreetViewPublishRpcMessages.BatchGetPhotosResponse build() {
        com.google.geo.ugc.streetview.publish.v1.StreetViewPublishRpcMessages.BatchGetPhotosResponse result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public com.google.geo.ugc.streetview.publish.v1.StreetViewPublishRpcMessages.BatchGetPhotosResponse buildPartial() {
        com.google.geo.ugc.streetview.publish.v1.StreetViewPublishRpcMessages.BatchGetPhotosResponse result = new com.google.geo.ugc.streetview.publish.v1.StreetViewPublishRpcMessages.BatchGetPhotosResponse(this);
        buildPartialRepeatedFields(result);
        if (bitField0_ != 0) { buildPartial0(result); }
        onBuilt();
        return result;
      }

      private void buildPartialRepeatedFields(com.google.geo.ugc.streetview.publish.v1.StreetViewPublishRpcMessages.BatchGetPhotosResponse result) {
        if (resultsBuilder_ == null) {
          if (((bitField0_ & 0x00000001) != 0)) {
            results_ = java.util.Collections.unmodifiableList(results_);
            bitField0_ = (bitField0_ & ~0x00000001);
          }
          result.results_ = results_;
        } else {
          result.results_ = resultsBuilder_.build();
        }
      }

      private void buildPartial0(com.google.geo.ugc.streetview.publish.v1.StreetViewPublishRpcMessages.BatchGetPhotosResponse result) {
        int from_bitField0_ = bitField0_;
      }

      @java.lang.Override
      public Builder clone() {
        return super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.google.geo.ugc.streetview.publish.v1.StreetViewPublishRpcMessages.BatchGetPhotosResponse) {
          return mergeFrom((com.google.geo.ugc.streetview.publish.v1.StreetViewPublishRpcMessages.BatchGetPhotosResponse)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(com.google.geo.ugc.streetview.publish.v1.StreetViewPublishRpcMessages.BatchGetPhotosResponse other) {
        if (other == com.google.geo.ugc.streetview.publish.v1.StreetViewPublishRpcMessages.BatchGetPhotosResponse.getDefaultInstance()) return this;
        if (resultsBuilder_ == null) {
          if (!other.results_.isEmpty()) {
            if (results_.isEmpty()) {
              results_ = other.results_;
              bitField0_ = (bitField0_ & ~0x00000001);
            } else {
              ensureResultsIsMutable();
              results_.addAll(other.results_);
            }
            onChanged();
          }
        } else {
          if (!other.results_.isEmpty()) {
            if (resultsBuilder_.isEmpty()) {
              resultsBuilder_.dispose();
              resultsBuilder_ = null;
              results_ = other.results_;
              bitField0_ = (bitField0_ & ~0x00000001);
              resultsBuilder_ = 
                com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?
                   getResultsFieldBuilder() : null;
            } else {
              resultsBuilder_.addAllMessages(other.results_);
            }
          }
        }
        this.mergeUnknownFields(other.getUnknownFields());
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        if (extensionRegistry == null) {
          throw new java.lang.NullPointerException();
        }
        try {
          boolean done = false;
          while (!done) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                done = true;
                break;
              case 10: {
                com.google.geo.ugc.streetview.publish.v1.StreetViewPublishRpcMessages.PhotoResponse m =
                    input.readMessage(
                        com.google.geo.ugc.streetview.publish.v1.StreetViewPublishRpcMessages.PhotoResponse.parser(),
                        extensionRegistry);
                if (resultsBuilder_ == null) {
                  ensureResultsIsMutable();
                  results_.add(m);
                } else {
                  resultsBuilder_.addMessage(m);
                }
                break;
              } // case 10
              default: {
                if (!super.parseUnknownField(input, extensionRegistry, tag)) {
                  done = true; // was an endgroup tag
                }
                break;
              } // default:
            } // switch (tag)
          } // while (!done)
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.unwrapIOException();
        } finally {
          onChanged();
        } // finally
        return this;
      }
      private int bitField0_;

      private java.util.List<com.google.geo.ugc.streetview.publish.v1.StreetViewPublishRpcMessages.PhotoResponse> results_ =
        java.util.Collections.emptyList();
      private void ensureResultsIsMutable() {
        if (!((bitField0_ & 0x00000001) != 0)) {
          results_ = new java.util.ArrayList<com.google.geo.ugc.streetview.publish.v1.StreetViewPublishRpcMessages.PhotoResponse>(results_);
          bitField0_ |= 0x00000001;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilderV3<
          com.google.geo.ugc.streetview.publish.v1.StreetViewPublishRpcMessages.PhotoResponse, com.google.geo.ugc.streetview.publish.v1.StreetViewPublishRpcMessages.PhotoResponse.Builder, com.google.geo.ugc.streetview.publish.v1.StreetViewPublishRpcMessages.PhotoResponseOrBuilder> resultsBuilder_;

      /**
       * <pre>
       * List of results for each individual
       * [Photo][google.streetview.publish.v1.Photo] requested, in the same order as
       * the requests in
       * [BatchGetPhotos][google.streetview.publish.v1.StreetViewPublishService.BatchGetPhotos].
       * </pre>
       *
       * <code>repeated .google.streetview.publish.v1.PhotoResponse results = 1;</code>
       */
      public java.util.List<com.google.geo.ugc.streetview.publish.v1.StreetViewPublishRpcMessages.PhotoResponse> getResultsList() {
        if (resultsBuilder_ == null) {
          return java.util.Collections.unmodifiableList(results_);
        } else {
          return resultsBuilder_.getMessageList();
        }
      }
      /**
       * <pre>
       * List of results for each individual
       * [Photo][google.streetview.publish.v1.Photo] requested, in the same order as
       * the requests in
       * [BatchGetPhotos][google.streetview.publish.v1.StreetViewPublishService.BatchGetPhotos].
       * </pre>
       *
       * <code>repeated .google.streetview.publish.v1.PhotoResponse results = 1;</code>
       */
      public int getResultsCount() {
        if (resultsBuilder_ == null) {
          return results_.size();
        } else {
          return resultsBuilder_.getCount();
        }
      }
      /**
       * <pre>
       * List of results for each individual
       * [Photo][google.streetview.publish.v1.Photo] requested, in the same order as
       * the requests in
       * [BatchGetPhotos][google.streetview.publish.v1.StreetViewPublishService.BatchGetPhotos].
       * </pre>
       *
       * <code>repeated .google.streetview.publish.v1.PhotoResponse results = 1;</code>
       */
      public com.google.geo.ugc.streetview.publish.v1.StreetViewPublishRpcMessages.PhotoResponse getResults(int index) {
        if (resultsBuilder_ == null) {
          return results_.get(index);
        } else {
          return resultsBuilder_.getMessage(index);
        }
      }
      /**
       * <pre>
       * List of results for each individual
       * [Photo][google.streetview.publish.v1.Photo] requested, in the same order as
       * the requests in
       * [BatchGetPhotos][google.streetview.publish.v1.StreetViewPublishService.BatchGetPhotos].
       * </pre>
       *
       * <code>repeated .google.streetview.publish.v1.PhotoResponse results = 1;</code>
       */
      public Builder setResults(
          int index, com.google.geo.ugc.streetview.publish.v1.StreetViewPublishRpcMessages.PhotoResponse value) {
        if (resultsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureResultsIsMutable();
          results_.set(index, value);
          onChanged();
        } else {
          resultsBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <pre>
       * List of results for each individual
       * [Photo][google.streetview.publish.v1.Photo] requested, in the same order as
       * the requests in
       * [BatchGetPhotos][google.streetview.publish.v1.StreetViewPublishService.BatchGetPhotos].
       * </pre>
       *
       * <code>repeated .google.streetview.publish.v1.PhotoResponse results = 1;</code>
       */
      public Builder setResults(
          int index, com.google.geo.ugc.streetview.publish.v1.StreetViewPublishRpcMessages.PhotoResponse.Builder builderForValue) {
        if (resultsBuilder_ == null) {
          ensureResultsIsMutable();
          results_.set(index, builderForValue.build());
          onChanged();
        } else {
          resultsBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       * List of results for each individual
       * [Photo][google.streetview.publish.v1.Photo] requested, in the same order as
       * the requests in
       * [BatchGetPhotos][google.streetview.publish.v1.StreetViewPublishService.BatchGetPhotos].
       * </pre>
       *
       * <code>repeated .google.streetview.publish.v1.PhotoResponse results = 1;</code>
       */
      public Builder addResults(com.google.geo.ugc.streetview.publish.v1.StreetViewPublishRpcMessages.PhotoResponse value) {
        if (resultsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureResultsIsMutable();
          results_.add(value);
          onChanged();
        } else {
          resultsBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <pre>
       * List of results for each individual
       * [Photo][google.streetview.publish.v1.Photo] requested, in the same order as
       * the requests in
       * [BatchGetPhotos][google.streetview.publish.v1.StreetViewPublishService.BatchGetPhotos].
       * </pre>
       *
       * <code>repeated .google.streetview.publish.v1.PhotoResponse results = 1;</code>
       */
      public Builder addResults(
          int index, com.google.geo.ugc.streetview.publish.v1.StreetViewPublishRpcMessages.PhotoResponse value) {
        if (resultsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureResultsIsMutable();
          results_.add(index, value);
          onChanged();
        } else {
          resultsBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <pre>
       * List of results for each individual
       * [Photo][google.streetview.publish.v1.Photo] requested, in the same order as
       * the requests in
       * [BatchGetPhotos][google.streetview.publish.v1.StreetViewPublishService.BatchGetPhotos].
       * </pre>
       *
       * <code>repeated .google.streetview.publish.v1.PhotoResponse results = 1;</code>
       */
      public Builder addResults(
          com.google.geo.ugc.streetview.publish.v1.StreetViewPublishRpcMessages.PhotoResponse.Builder builderForValue) {
        if (resultsBuilder_ == null) {
          ensureResultsIsMutable();
          results_.add(builderForValue.build());
          onChanged();
        } else {
          resultsBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       * List of results for each individual
       * [Photo][google.streetview.publish.v1.Photo] requested, in the same order as
       * the requests in
       * [BatchGetPhotos][google.streetview.publish.v1.StreetViewPublishService.BatchGetPhotos].
       * </pre>
       *
       * <code>repeated .google.streetview.publish.v1.PhotoResponse results = 1;</code>
       */
      public Builder addResults(
          int index, com.google.geo.ugc.streetview.publish.v1.StreetViewPublishRpcMessages.PhotoResponse.Builder builderForValue) {
        if (resultsBuilder_ == null) {
          ensureResultsIsMutable();
          results_.add(index, builderForValue.build());
          onChanged();
        } else {
          resultsBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       * List of results for each individual
       * [Photo][google.streetview.publish.v1.Photo] requested, in the same order as
       * the requests in
       * [BatchGetPhotos][google.streetview.publish.v1.StreetViewPublishService.BatchGetPhotos].
       * </pre>
       *
       * <code>repeated .google.streetview.publish.v1.PhotoResponse results = 1;</code>
       */
      public Builder addAllResults(
          java.lang.Iterable<? extends com.google.geo.ugc.streetview.publish.v1.StreetViewPublishRpcMessages.PhotoResponse> values) {
        if (resultsBuilder_ == null) {
          ensureResultsIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
              values, results_);
          onChanged();
        } else {
          resultsBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <pre>
       * List of results for each individual
       * [Photo][google.streetview.publish.v1.Photo] requested, in the same order as
       * the requests in
       * [BatchGetPhotos][google.streetview.publish.v1.StreetViewPublishService.BatchGetPhotos].
       * </pre>
       *
       * <code>repeated .google.streetview.publish.v1.PhotoResponse results = 1;</code>
       */
      public Builder clearResults() {
        if (resultsBuilder_ == null) {
          results_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000001);
          onChanged();
        } else {
          resultsBuilder_.clear();
        }
        return this;
      }
      /**
       * <pre>
       * List of results for each individual
       * [Photo][google.streetview.publish.v1.Photo] requested, in the same order as
       * the requests in
       * [BatchGetPhotos][google.streetview.publish.v1.StreetViewPublishService.BatchGetPhotos].
       * </pre>
       *
       * <code>repeated .google.streetview.publish.v1.PhotoResponse results = 1;</code>
       */
      public Builder removeResults(int index) {
        if (resultsBuilder_ == null) {
          ensureResultsIsMutable();
          results_.remove(index);
          onChanged();
        } else {
          resultsBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <pre>
       * List of results for each individual
       * [Photo][google.streetview.publish.v1.Photo] requested, in the same order as
       * the requests in
       * [BatchGetPhotos][google.streetview.publish.v1.StreetViewPublishService.BatchGetPhotos].
       * </pre>
       *
       * <code>repeated .google.streetview.publish.v1.PhotoResponse results = 1;</code>
       */
      public com.google.geo.ugc.streetview.publish.v1.StreetViewPublishRpcMessages.PhotoResponse.Builder getResultsBuilder(
          int index) {
        return getResultsFieldBuilder().getBuilder(index);
      }
      /**
       * <pre>
       * List of results for each individual
       * [Photo][google.streetview.publish.v1.Photo] requested, in the same order as
       * the requests in
       * [BatchGetPhotos][google.streetview.publish.v1.StreetViewPublishService.BatchGetPhotos].
       * </pre>
       *
       * <code>repeated .google.streetview.publish.v1.PhotoResponse results = 1;</code>
       */
      public com.google.geo.ugc.streetview.publish.v1.StreetViewPublishRpcMessages.PhotoResponseOrBuilder getResultsOrBuilder(
          int index) {
        if (resultsBuilder_ == null) {
          return results_.get(index);  } else {
          return resultsBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <pre>
       * List of results for each individual
       * [Photo][google.streetview.publish.v1.Photo] requested, in the same order as
       * the requests in
       * [BatchGetPhotos][google.streetview.publish.v1.StreetViewPublishService.BatchGetPhotos].
       * </pre>
       *
       * <code>repeated .google.streetview.publish.v1.PhotoResponse results = 1;</code>
       */
      public java.util.List<? extends com.google.geo.ugc.streetview.publish.v1.StreetViewPublishRpcMessages.PhotoResponseOrBuilder> 
           getResultsOrBuilderList() {
        if (resultsBuilder_ != null) {
          return resultsBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(results_);
        }
      }
      /**
       * <pre>
       * List of results for each individual
       * [Photo][google.streetview.publish.v1.Photo] requested, in the same order as
       * the requests in
       * [BatchGetPhotos][google.streetview.publish.v1.StreetViewPublishService.BatchGetPhotos].
       * </pre>
       *
       * <code>repeated .google.streetview.publish.v1.PhotoResponse results = 1;</code>
       */
      public com.google.geo.ugc.streetview.publish.v1.StreetViewPublishRpcMessages.PhotoResponse.Builder addResultsBuilder() {
        return getResultsFieldBuilder().addBuilder(
            com.google.geo.ugc.streetview.publish.v1.StreetViewPublishRpcMessages.PhotoResponse.getDefaultInstance());
      }
      /**
       * <pre>
       * List of results for each individual
       * [Photo][google.streetview.publish.v1.Photo] requested, in the same order as
       * the requests in
       * [BatchGetPhotos][google.streetview.publish.v1.StreetViewPublishService.BatchGetPhotos].
       * </pre>
       *
       * <code>repeated .google.streetview.publish.v1.PhotoResponse results = 1;</code>
       */
      public com.google.geo.ugc.streetview.publish.v1.StreetViewPublishRpcMessages.PhotoResponse.Builder addResultsBuilder(
          int index) {
        return getResultsFieldBuilder().addBuilder(
            index, com.google.geo.ugc.streetview.publish.v1.StreetViewPublishRpcMessages.PhotoResponse.getDefaultInstance());
      }
      /**
       * <pre>
       * List of results for each individual
       * [Photo][google.streetview.publish.v1.Photo] requested, in the same order as
       * the requests in
       * [BatchGetPhotos][google.streetview.publish.v1.StreetViewPublishService.BatchGetPhotos].
       * </pre>
       *
       * <code>repeated .google.streetview.publish.v1.PhotoResponse results = 1;</code>
       */
      public java.util.List<com.google.geo.ugc.streetview.publish.v1.StreetViewPublishRpcMessages.PhotoResponse.Builder> 
           getResultsBuilderList() {
        return getResultsFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilderV3<
          com.google.geo.ugc.streetview.publish.v1.StreetViewPublishRpcMessages.PhotoResponse, com.google.geo.ugc.streetview.publish.v1.StreetViewPublishRpcMessages.PhotoResponse.Builder, com.google.geo.ugc.streetview.publish.v1.StreetViewPublishRpcMessages.PhotoResponseOrBuilder> 
          getResultsFieldBuilder() {
        if (resultsBuilder_ == null) {
          resultsBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<
              com.google.geo.ugc.streetview.publish.v1.StreetViewPublishRpcMessages.PhotoResponse, com.google.geo.ugc.streetview.publish.v1.StreetViewPublishRpcMessages.PhotoResponse.Builder, com.google.geo.ugc.streetview.publish.v1.StreetViewPublishRpcMessages.PhotoResponseOrBuilder>(
                  results_,
                  ((bitField0_ & 0x00000001) != 0),
                  getParentForChildren(),
                  isClean());
          results_ = null;
        }
        return resultsBuilder_;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:google.streetview.publish.v1.BatchGetPhotosResponse)
    }

    // @@protoc_insertion_point(class_scope:google.streetview.publish.v1.BatchGetPhotosResponse)
    private static final com.google.geo.ugc.streetview.publish.v1.StreetViewPublishRpcMessages.BatchGetPhotosResponse DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new com.google.geo.ugc.streetview.publish.v1.StreetViewPublishRpcMessages.BatchGetPhotosResponse();
    }

    public static com.google.geo.ugc.streetview.publish.v1.StreetViewPublishRpcMessages.BatchGetPhotosResponse getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<BatchGetPhotosResponse>
        PARSER = new com.google.protobuf.AbstractParser<BatchGetPhotosResponse>() {
      @java.lang.Override
      public BatchGetPhotosResponse parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        Builder builder = newBuilder();
        try {
          builder.mergeFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.setUnfinishedMessage(builder.buildPartial());
        } catch (com.google.protobuf.UninitializedMessageException e) {
          throw e.asInvalidProtocolBufferException().setUnfinishedMessage(builder.buildPartial());
        } catch (java.io.IOException e) {
          throw new com.google.protobuf.InvalidProtocolBufferException(e)
              .setUnfinishedMessage(builder.buildPartial());
        }
        return builder.buildPartial();
      }
    };

    public static com.google.protobuf.Parser<BatchGetPhotosResponse> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<BatchGetPhotosResponse> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.geo.ugc.streetview.publish.v1.StreetViewPublishRpcMessages.BatchGetPhotosResponse getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface PhotoResponseOrBuilder extends
      // @@protoc_insertion_point(interface_extends:google.streetview.publish.v1.PhotoResponse)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <pre>
     * The status for the operation to get or update a single photo in the batch
     * request.
     * </pre>
     *
     * <code>.google.rpc.Status status = 1;</code>
     * @return Whether the status field is set.
     */
    boolean hasStatus();
    /**
     * <pre>
     * The status for the operation to get or update a single photo in the batch
     * request.
     * </pre>
     *
     * <code>.google.rpc.Status status = 1;</code>
     * @return The status.
     */
    com.google.rpc.Status getStatus();
    /**
     * <pre>
     * The status for the operation to get or update a single photo in the batch
     * request.
     * </pre>
     *
     * <code>.google.rpc.Status status = 1;</code>
     */
    com.google.rpc.StatusOrBuilder getStatusOrBuilder();

    /**
     * <pre>
     * The [Photo][google.streetview.publish.v1.Photo] resource, if the request
     * was successful.
     * </pre>
     *
     * <code>.google.streetview.publish.v1.Photo photo = 2;</code>
     * @return Whether the photo field is set.
     */
    boolean hasPhoto();
    /**
     * <pre>
     * The [Photo][google.streetview.publish.v1.Photo] resource, if the request
     * was successful.
     * </pre>
     *
     * <code>.google.streetview.publish.v1.Photo photo = 2;</code>
     * @return The photo.
     */
    com.google.geo.ugc.streetview.publish.v1.StreetViewPublishResources.Photo getPhoto();
    /**
     * <pre>
     * The [Photo][google.streetview.publish.v1.Photo] resource, if the request
     * was successful.
     * </pre>
     *
     * <code>.google.streetview.publish.v1.Photo photo = 2;</code>
     */
    com.google.geo.ugc.streetview.publish.v1.StreetViewPublishResources.PhotoOrBuilder getPhotoOrBuilder();
  }
  /**
   * <pre>
   * Response payload for a single
   * [Photo][google.streetview.publish.v1.Photo]
   * in batch operations including
   * [BatchGetPhotos][google.streetview.publish.v1.StreetViewPublishService.BatchGetPhotos]
   * and
   * [BatchUpdatePhotos][google.streetview.publish.v1.StreetViewPublishService.BatchUpdatePhotos].
   * </pre>
   *
   * Protobuf type {@code google.streetview.publish.v1.PhotoResponse}
   */
  public static final class PhotoResponse extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:google.streetview.publish.v1.PhotoResponse)
      PhotoResponseOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use PhotoResponse.newBuilder() to construct.
    private PhotoResponse(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private PhotoResponse() {
    }

    @java.lang.Override
    @SuppressWarnings({"unused"})
    protected java.lang.Object newInstance(
        UnusedPrivateParameter unused) {
      return new PhotoResponse();
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.google.geo.ugc.streetview.publish.v1.StreetViewPublishRpcMessages.internal_static_google_streetview_publish_v1_PhotoResponse_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.google.geo.ugc.streetview.publish.v1.StreetViewPublishRpcMessages.internal_static_google_streetview_publish_v1_PhotoResponse_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.google.geo.ugc.streetview.publish.v1.StreetViewPublishRpcMessages.PhotoResponse.class, com.google.geo.ugc.streetview.publish.v1.StreetViewPublishRpcMessages.PhotoResponse.Builder.class);
    }

    public static final int STATUS_FIELD_NUMBER = 1;
    private com.google.rpc.Status status_;
    /**
     * <pre>
     * The status for the operation to get or update a single photo in the batch
     * request.
     * </pre>
     *
     * <code>.google.rpc.Status status = 1;</code>
     * @return Whether the status field is set.
     */
    @java.lang.Override
    public boolean hasStatus() {
      return status_ != null;
    }
    /**
     * <pre>
     * The status for the operation to get or update a single photo in the batch
     * request.
     * </pre>
     *
     * <code>.google.rpc.Status status = 1;</code>
     * @return The status.
     */
    @java.lang.Override
    public com.google.rpc.Status getStatus() {
      return status_ == null ? com.google.rpc.Status.getDefaultInstance() : status_;
    }
    /**
     * <pre>
     * The status for the operation to get or update a single photo in the batch
     * request.
     * </pre>
     *
     * <code>.google.rpc.Status status = 1;</code>
     */
    @java.lang.Override
    public com.google.rpc.StatusOrBuilder getStatusOrBuilder() {
      return status_ == null ? com.google.rpc.Status.getDefaultInstance() : status_;
    }

    public static final int PHOTO_FIELD_NUMBER = 2;
    private com.google.geo.ugc.streetview.publish.v1.StreetViewPublishResources.Photo photo_;
    /**
     * <pre>
     * The [Photo][google.streetview.publish.v1.Photo] resource, if the request
     * was successful.
     * </pre>
     *
     * <code>.google.streetview.publish.v1.Photo photo = 2;</code>
     * @return Whether the photo field is set.
     */
    @java.lang.Override
    public boolean hasPhoto() {
      return photo_ != null;
    }
    /**
     * <pre>
     * The [Photo][google.streetview.publish.v1.Photo] resource, if the request
     * was successful.
     * </pre>
     *
     * <code>.google.streetview.publish.v1.Photo photo = 2;</code>
     * @return The photo.
     */
    @java.lang.Override
    public com.google.geo.ugc.streetview.publish.v1.StreetViewPublishResources.Photo getPhoto() {
      return photo_ == null ? com.google.geo.ugc.streetview.publish.v1.StreetViewPublishResources.Photo.getDefaultInstance() : photo_;
    }
    /**
     * <pre>
     * The [Photo][google.streetview.publish.v1.Photo] resource, if the request
     * was successful.
     * </pre>
     *
     * <code>.google.streetview.publish.v1.Photo photo = 2;</code>
     */
    @java.lang.Override
    public com.google.geo.ugc.streetview.publish.v1.StreetViewPublishResources.PhotoOrBuilder getPhotoOrBuilder() {
      return photo_ == null ? com.google.geo.ugc.streetview.publish.v1.StreetViewPublishResources.Photo.getDefaultInstance() : photo_;
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (status_ != null) {
        output.writeMessage(1, getStatus());
      }
      if (photo_ != null) {
        output.writeMessage(2, getPhoto());
      }
      getUnknownFields().writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (status_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, getStatus());
      }
      if (photo_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(2, getPhoto());
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof com.google.geo.ugc.streetview.publish.v1.StreetViewPublishRpcMessages.PhotoResponse)) {
        return super.equals(obj);
      }
      com.google.geo.ugc.streetview.publish.v1.StreetViewPublishRpcMessages.PhotoResponse other = (com.google.geo.ugc.streetview.publish.v1.StreetViewPublishRpcMessages.PhotoResponse) obj;

      if (hasStatus() != other.hasStatus()) return false;
      if (hasStatus()) {
        if (!getStatus()
            .equals(other.getStatus())) return false;
      }
      if (hasPhoto() != other.hasPhoto()) return false;
      if (hasPhoto()) {
        if (!getPhoto()
            .equals(other.getPhoto())) return false;
      }
      if (!getUnknownFields().equals(other.getUnknownFields())) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      if (hasStatus()) {
        hash = (37 * hash) + STATUS_FIELD_NUMBER;
        hash = (53 * hash) + getStatus().hashCode();
      }
      if (hasPhoto()) {
        hash = (37 * hash) + PHOTO_FIELD_NUMBER;
        hash = (53 * hash) + getPhoto().hashCode();
      }
      hash = (29 * hash) + getUnknownFields().hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static com.google.geo.ugc.streetview.publish.v1.StreetViewPublishRpcMessages.PhotoResponse parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.google.geo.ugc.streetview.publish.v1.StreetViewPublishRpcMessages.PhotoResponse parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.google.geo.ugc.streetview.publish.v1.StreetViewPublishRpcMessages.PhotoResponse parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.google.geo.ugc.streetview.publish.v1.StreetViewPublishRpcMessages.PhotoResponse parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.google.geo.ugc.streetview.publish.v1.StreetViewPublishRpcMessages.PhotoResponse parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.google.geo.ugc.streetview.publish.v1.StreetViewPublishRpcMessages.PhotoResponse parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.google.geo.ugc.streetview.publish.v1.StreetViewPublishRpcMessages.PhotoResponse parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static com.google.geo.ugc.streetview.publish.v1.StreetViewPublishRpcMessages.PhotoResponse parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static com.google.geo.ugc.streetview.publish.v1.StreetViewPublishRpcMessages.PhotoResponse parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static com.google.geo.ugc.streetview.publish.v1.StreetViewPublishRpcMessages.PhotoResponse parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static com.google.geo.ugc.streetview.publish.v1.StreetViewPublishRpcMessages.PhotoResponse parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static com.google.geo.ugc.streetview.publish.v1.StreetViewPublishRpcMessages.PhotoResponse parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(com.google.geo.ugc.streetview.publish.v1.StreetViewPublishRpcMessages.PhotoResponse prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * <pre>
     * Response payload for a single
     * [Photo][google.streetview.publish.v1.Photo]
     * in batch operations including
     * [BatchGetPhotos][google.streetview.publish.v1.StreetViewPublishService.BatchGetPhotos]
     * and
     * [BatchUpdatePhotos][google.streetview.publish.v1.StreetViewPublishService.BatchUpdatePhotos].
     * </pre>
     *
     * Protobuf type {@code google.streetview.publish.v1.PhotoResponse}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:google.streetview.publish.v1.PhotoResponse)
        com.google.geo.ugc.streetview.publish.v1.StreetViewPublishRpcMessages.PhotoResponseOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return com.google.geo.ugc.streetview.publish.v1.StreetViewPublishRpcMessages.internal_static_google_streetview_publish_v1_PhotoResponse_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return com.google.geo.ugc.streetview.publish.v1.StreetViewPublishRpcMessages.internal_static_google_streetview_publish_v1_PhotoResponse_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                com.google.geo.ugc.streetview.publish.v1.StreetViewPublishRpcMessages.PhotoResponse.class, com.google.geo.ugc.streetview.publish.v1.StreetViewPublishRpcMessages.PhotoResponse.Builder.class);
      }

      // Construct using com.google.geo.ugc.streetview.publish.v1.StreetViewPublishRpcMessages.PhotoResponse.newBuilder()
      private Builder() {

      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);

      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        bitField0_ = 0;
        status_ = null;
        if (statusBuilder_ != null) {
          statusBuilder_.dispose();
          statusBuilder_ = null;
        }
        photo_ = null;
        if (photoBuilder_ != null) {
          photoBuilder_.dispose();
          photoBuilder_ = null;
        }
        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.google.geo.ugc.streetview.publish.v1.StreetViewPublishRpcMessages.internal_static_google_streetview_publish_v1_PhotoResponse_descriptor;
      }

      @java.lang.Override
      public com.google.geo.ugc.streetview.publish.v1.StreetViewPublishRpcMessages.PhotoResponse getDefaultInstanceForType() {
        return com.google.geo.ugc.streetview.publish.v1.StreetViewPublishRpcMessages.PhotoResponse.getDefaultInstance();
      }

      @java.lang.Override
      public com.google.geo.ugc.streetview.publish.v1.StreetViewPublishRpcMessages.PhotoResponse build() {
        com.google.geo.ugc.streetview.publish.v1.StreetViewPublishRpcMessages.PhotoResponse result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public com.google.geo.ugc.streetview.publish.v1.StreetViewPublishRpcMessages.PhotoResponse buildPartial() {
        com.google.geo.ugc.streetview.publish.v1.StreetViewPublishRpcMessages.PhotoResponse result = new com.google.geo.ugc.streetview.publish.v1.StreetViewPublishRpcMessages.PhotoResponse(this);
        if (bitField0_ != 0) { buildPartial0(result); }
        onBuilt();
        return result;
      }

      private void buildPartial0(com.google.geo.ugc.streetview.publish.v1.StreetViewPublishRpcMessages.PhotoResponse result) {
        int from_bitField0_ = bitField0_;
        if (((from_bitField0_ & 0x00000001) != 0)) {
          result.status_ = statusBuilder_ == null
              ? status_
              : statusBuilder_.build();
        }
        if (((from_bitField0_ & 0x00000002) != 0)) {
          result.photo_ = photoBuilder_ == null
              ? photo_
              : photoBuilder_.build();
        }
      }

      @java.lang.Override
      public Builder clone() {
        return super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.google.geo.ugc.streetview.publish.v1.StreetViewPublishRpcMessages.PhotoResponse) {
          return mergeFrom((com.google.geo.ugc.streetview.publish.v1.StreetViewPublishRpcMessages.PhotoResponse)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(com.google.geo.ugc.streetview.publish.v1.StreetViewPublishRpcMessages.PhotoResponse other) {
        if (other == com.google.geo.ugc.streetview.publish.v1.StreetViewPublishRpcMessages.PhotoResponse.getDefaultInstance()) return this;
        if (other.hasStatus()) {
          mergeStatus(other.getStatus());
        }
        if (other.hasPhoto()) {
          mergePhoto(other.getPhoto());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        if (extensionRegistry == null) {
          throw new java.lang.NullPointerException();
        }
        try {
          boolean done = false;
          while (!done) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                done = true;
                break;
              case 10: {
                input.readMessage(
                    getStatusFieldBuilder().getBuilder(),
                    extensionRegistry);
                bitField0_ |= 0x00000001;
                break;
              } // case 10
              case 18: {
                input.readMessage(
                    getPhotoFieldBuilder().getBuilder(),
                    extensionRegistry);
                bitField0_ |= 0x00000002;
                break;
              } // case 18
              default: {
                if (!super.parseUnknownField(input, extensionRegistry, tag)) {
                  done = true; // was an endgroup tag
                }
                break;
              } // default:
            } // switch (tag)
          } // while (!done)
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.unwrapIOException();
        } finally {
          onChanged();
        } // finally
        return this;
      }
      private int bitField0_;

      private com.google.rpc.Status status_;
      private com.google.protobuf.SingleFieldBuilderV3<
          com.google.rpc.Status, com.google.rpc.Status.Builder, com.google.rpc.StatusOrBuilder> statusBuilder_;
      /**
       * <pre>
       * The status for the operation to get or update a single photo in the batch
       * request.
       * </pre>
       *
       * <code>.google.rpc.Status status = 1;</code>
       * @return Whether the status field is set.
       */
      public boolean hasStatus() {
        return ((bitField0_ & 0x00000001) != 0);
      }
      /**
       * <pre>
       * The status for the operation to get or update a single photo in the batch
       * request.
       * </pre>
       *
       * <code>.google.rpc.Status status = 1;</code>
       * @return The status.
       */
      public com.google.rpc.Status getStatus() {
        if (statusBuilder_ == null) {
          return status_ == null ? com.google.rpc.Status.getDefaultInstance() : status_;
        } else {
          return statusBuilder_.getMessage();
        }
      }
      /**
       * <pre>
       * The status for the operation to get or update a single photo in the batch
       * request.
       * </pre>
       *
       * <code>.google.rpc.Status status = 1;</code>
       */
      public Builder setStatus(com.google.rpc.Status value) {
        if (statusBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          status_ = value;
        } else {
          statusBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000001;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * The status for the operation to get or update a single photo in the batch
       * request.
       * </pre>
       *
       * <code>.google.rpc.Status status = 1;</code>
       */
      public Builder setStatus(
          com.google.rpc.Status.Builder builderForValue) {
        if (statusBuilder_ == null) {
          status_ = builderForValue.build();
        } else {
          statusBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000001;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * The status for the operation to get or update a single photo in the batch
       * request.
       * </pre>
       *
       * <code>.google.rpc.Status status = 1;</code>
       */
      public Builder mergeStatus(com.google.rpc.Status value) {
        if (statusBuilder_ == null) {
          if (((bitField0_ & 0x00000001) != 0) &&
            status_ != null &&
            status_ != com.google.rpc.Status.getDefaultInstance()) {
            getStatusBuilder().mergeFrom(value);
          } else {
            status_ = value;
          }
        } else {
          statusBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x00000001;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * The status for the operation to get or update a single photo in the batch
       * request.
       * </pre>
       *
       * <code>.google.rpc.Status status = 1;</code>
       */
      public Builder clearStatus() {
        bitField0_ = (bitField0_ & ~0x00000001);
        status_ = null;
        if (statusBuilder_ != null) {
          statusBuilder_.dispose();
          statusBuilder_ = null;
        }
        onChanged();
        return this;
      }
      /**
       * <pre>
       * The status for the operation to get or update a single photo in the batch
       * request.
       * </pre>
       *
       * <code>.google.rpc.Status status = 1;</code>
       */
      public com.google.rpc.Status.Builder getStatusBuilder() {
        bitField0_ |= 0x00000001;
        onChanged();
        return getStatusFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       * The status for the operation to get or update a single photo in the batch
       * request.
       * </pre>
       *
       * <code>.google.rpc.Status status = 1;</code>
       */
      public com.google.rpc.StatusOrBuilder getStatusOrBuilder() {
        if (statusBuilder_ != null) {
          return statusBuilder_.getMessageOrBuilder();
        } else {
          return status_ == null ?
              com.google.rpc.Status.getDefaultInstance() : status_;
        }
      }
      /**
       * <pre>
       * The status for the operation to get or update a single photo in the batch
       * request.
       * </pre>
       *
       * <code>.google.rpc.Status status = 1;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          com.google.rpc.Status, com.google.rpc.Status.Builder, com.google.rpc.StatusOrBuilder> 
          getStatusFieldBuilder() {
        if (statusBuilder_ == null) {
          statusBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              com.google.rpc.Status, com.google.rpc.Status.Builder, com.google.rpc.StatusOrBuilder>(
                  getStatus(),
                  getParentForChildren(),
                  isClean());
          status_ = null;
        }
        return statusBuilder_;
      }

      private com.google.geo.ugc.streetview.publish.v1.StreetViewPublishResources.Photo photo_;
      private com.google.protobuf.SingleFieldBuilderV3<
          com.google.geo.ugc.streetview.publish.v1.StreetViewPublishResources.Photo, com.google.geo.ugc.streetview.publish.v1.StreetViewPublishResources.Photo.Builder, com.google.geo.ugc.streetview.publish.v1.StreetViewPublishResources.PhotoOrBuilder> photoBuilder_;
      /**
       * <pre>
       * The [Photo][google.streetview.publish.v1.Photo] resource, if the request
       * was successful.
       * </pre>
       *
       * <code>.google.streetview.publish.v1.Photo photo = 2;</code>
       * @return Whether the photo field is set.
       */
      public boolean hasPhoto() {
        return ((bitField0_ & 0x00000002) != 0);
      }
      /**
       * <pre>
       * The [Photo][google.streetview.publish.v1.Photo] resource, if the request
       * was successful.
       * </pre>
       *
       * <code>.google.streetview.publish.v1.Photo photo = 2;</code>
       * @return The photo.
       */
      public com.google.geo.ugc.streetview.publish.v1.StreetViewPublishResources.Photo getPhoto() {
        if (photoBuilder_ == null) {
          return photo_ == null ? com.google.geo.ugc.streetview.publish.v1.StreetViewPublishResources.Photo.getDefaultInstance() : photo_;
        } else {
          return photoBuilder_.getMessage();
        }
      }
      /**
       * <pre>
       * The [Photo][google.streetview.publish.v1.Photo] resource, if the request
       * was successful.
       * </pre>
       *
       * <code>.google.streetview.publish.v1.Photo photo = 2;</code>
       */
      public Builder setPhoto(com.google.geo.ugc.streetview.publish.v1.StreetViewPublishResources.Photo value) {
        if (photoBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          photo_ = value;
        } else {
          photoBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000002;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * The [Photo][google.streetview.publish.v1.Photo] resource, if the request
       * was successful.
       * </pre>
       *
       * <code>.google.streetview.publish.v1.Photo photo = 2;</code>
       */
      public Builder setPhoto(
          com.google.geo.ugc.streetview.publish.v1.StreetViewPublishResources.Photo.Builder builderForValue) {
        if (photoBuilder_ == null) {
          photo_ = builderForValue.build();
        } else {
          photoBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000002;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * The [Photo][google.streetview.publish.v1.Photo] resource, if the request
       * was successful.
       * </pre>
       *
       * <code>.google.streetview.publish.v1.Photo photo = 2;</code>
       */
      public Builder mergePhoto(com.google.geo.ugc.streetview.publish.v1.StreetViewPublishResources.Photo value) {
        if (photoBuilder_ == null) {
          if (((bitField0_ & 0x00000002) != 0) &&
            photo_ != null &&
            photo_ != com.google.geo.ugc.streetview.publish.v1.StreetViewPublishResources.Photo.getDefaultInstance()) {
            getPhotoBuilder().mergeFrom(value);
          } else {
            photo_ = value;
          }
        } else {
          photoBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x00000002;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * The [Photo][google.streetview.publish.v1.Photo] resource, if the request
       * was successful.
       * </pre>
       *
       * <code>.google.streetview.publish.v1.Photo photo = 2;</code>
       */
      public Builder clearPhoto() {
        bitField0_ = (bitField0_ & ~0x00000002);
        photo_ = null;
        if (photoBuilder_ != null) {
          photoBuilder_.dispose();
          photoBuilder_ = null;
        }
        onChanged();
        return this;
      }
      /**
       * <pre>
       * The [Photo][google.streetview.publish.v1.Photo] resource, if the request
       * was successful.
       * </pre>
       *
       * <code>.google.streetview.publish.v1.Photo photo = 2;</code>
       */
      public com.google.geo.ugc.streetview.publish.v1.StreetViewPublishResources.Photo.Builder getPhotoBuilder() {
        bitField0_ |= 0x00000002;
        onChanged();
        return getPhotoFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       * The [Photo][google.streetview.publish.v1.Photo] resource, if the request
       * was successful.
       * </pre>
       *
       * <code>.google.streetview.publish.v1.Photo photo = 2;</code>
       */
      public com.google.geo.ugc.streetview.publish.v1.StreetViewPublishResources.PhotoOrBuilder getPhotoOrBuilder() {
        if (photoBuilder_ != null) {
          return photoBuilder_.getMessageOrBuilder();
        } else {
          return photo_ == null ?
              com.google.geo.ugc.streetview.publish.v1.StreetViewPublishResources.Photo.getDefaultInstance() : photo_;
        }
      }
      /**
       * <pre>
       * The [Photo][google.streetview.publish.v1.Photo] resource, if the request
       * was successful.
       * </pre>
       *
       * <code>.google.streetview.publish.v1.Photo photo = 2;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          com.google.geo.ugc.streetview.publish.v1.StreetViewPublishResources.Photo, com.google.geo.ugc.streetview.publish.v1.StreetViewPublishResources.Photo.Builder, com.google.geo.ugc.streetview.publish.v1.StreetViewPublishResources.PhotoOrBuilder> 
          getPhotoFieldBuilder() {
        if (photoBuilder_ == null) {
          photoBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              com.google.geo.ugc.streetview.publish.v1.StreetViewPublishResources.Photo, com.google.geo.ugc.streetview.publish.v1.StreetViewPublishResources.Photo.Builder, com.google.geo.ugc.streetview.publish.v1.StreetViewPublishResources.PhotoOrBuilder>(
                  getPhoto(),
                  getParentForChildren(),
                  isClean());
          photo_ = null;
        }
        return photoBuilder_;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:google.streetview.publish.v1.PhotoResponse)
    }

    // @@protoc_insertion_point(class_scope:google.streetview.publish.v1.PhotoResponse)
    private static final com.google.geo.ugc.streetview.publish.v1.StreetViewPublishRpcMessages.PhotoResponse DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new com.google.geo.ugc.streetview.publish.v1.StreetViewPublishRpcMessages.PhotoResponse();
    }

    public static com.google.geo.ugc.streetview.publish.v1.StreetViewPublishRpcMessages.PhotoResponse getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<PhotoResponse>
        PARSER = new com.google.protobuf.AbstractParser<PhotoResponse>() {
      @java.lang.Override
      public PhotoResponse parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        Builder builder = newBuilder();
        try {
          builder.mergeFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.setUnfinishedMessage(builder.buildPartial());
        } catch (com.google.protobuf.UninitializedMessageException e) {
          throw e.asInvalidProtocolBufferException().setUnfinishedMessage(builder.buildPartial());
        } catch (java.io.IOException e) {
          throw new com.google.protobuf.InvalidProtocolBufferException(e)
              .setUnfinishedMessage(builder.buildPartial());
        }
        return builder.buildPartial();
      }
    };

    public static com.google.protobuf.Parser<PhotoResponse> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<PhotoResponse> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.geo.ugc.streetview.publish.v1.StreetViewPublishRpcMessages.PhotoResponse getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface ListPhotosRequestOrBuilder extends
      // @@protoc_insertion_point(interface_extends:google.streetview.publish.v1.ListPhotosRequest)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <pre>
     * Required. Specifies if a download URL for the photos bytes should be returned in the
     * Photos response.
     * </pre>
     *
     * <code>.google.streetview.publish.v1.PhotoView view = 1 [(.google.api.field_behavior) = REQUIRED];</code>
     * @return The enum numeric value on the wire for view.
     */
    int getViewValue();
    /**
     * <pre>
     * Required. Specifies if a download URL for the photos bytes should be returned in the
     * Photos response.
     * </pre>
     *
     * <code>.google.streetview.publish.v1.PhotoView view = 1 [(.google.api.field_behavior) = REQUIRED];</code>
     * @return The view.
     */
    com.google.geo.ugc.streetview.publish.v1.StreetViewPublishRpcMessages.PhotoView getView();

    /**
     * <pre>
     * Optional. The maximum number of photos to return.
     * `pageSize` must be non-negative. If `pageSize` is zero or is not provided,
     * the default page size of 100 is used.
     * The number of photos returned in the response may be less than `pageSize`
     * if the number of photos that belong to the user is less than `pageSize`.
     * </pre>
     *
     * <code>int32 page_size = 2 [(.google.api.field_behavior) = OPTIONAL];</code>
     * @return The pageSize.
     */
    int getPageSize();

    /**
     * <pre>
     * Optional. The
     * [nextPageToken][google.streetview.publish.v1.ListPhotosResponse.next_page_token]
     * value returned from a previous
     * [ListPhotos][google.streetview.publish.v1.StreetViewPublishService.ListPhotos]
     * request, if any.
     * </pre>
     *
     * <code>string page_token = 3 [(.google.api.field_behavior) = OPTIONAL];</code>
     * @return The pageToken.
     */
    java.lang.String getPageToken();
    /**
     * <pre>
     * Optional. The
     * [nextPageToken][google.streetview.publish.v1.ListPhotosResponse.next_page_token]
     * value returned from a previous
     * [ListPhotos][google.streetview.publish.v1.StreetViewPublishService.ListPhotos]
     * request, if any.
     * </pre>
     *
     * <code>string page_token = 3 [(.google.api.field_behavior) = OPTIONAL];</code>
     * @return The bytes for pageToken.
     */
    com.google.protobuf.ByteString
        getPageTokenBytes();

    /**
     * <pre>
     * Optional. The filter expression. For example: `placeId=ChIJj61dQgK6j4AR4GeTYWZsKWw`.
     * The filters supported are: `placeId`, `min_latitude`, `max_latitude`,
     * `min_longitude`, and `max_longitude`. See https://google.aip.dev/160 for
     * more information.
     * </pre>
     *
     * <code>string filter = 4 [(.google.api.field_behavior) = OPTIONAL];</code>
     * @return The filter.
     */
    java.lang.String getFilter();
    /**
     * <pre>
     * Optional. The filter expression. For example: `placeId=ChIJj61dQgK6j4AR4GeTYWZsKWw`.
     * The filters supported are: `placeId`, `min_latitude`, `max_latitude`,
     * `min_longitude`, and `max_longitude`. See https://google.aip.dev/160 for
     * more information.
     * </pre>
     *
     * <code>string filter = 4 [(.google.api.field_behavior) = OPTIONAL];</code>
     * @return The bytes for filter.
     */
    com.google.protobuf.ByteString
        getFilterBytes();

    /**
     * <pre>
     * Optional. The BCP-47 language code, such as "en-US" or "sr-Latn". For more
     * information, see
     * http://www.unicode.org/reports/tr35/#Unicode_locale_identifier.
     * If language_code is unspecified, the user's language preference for Google
     * services is used.
     * </pre>
     *
     * <code>string language_code = 5 [(.google.api.field_behavior) = OPTIONAL];</code>
     * @return The languageCode.
     */
    java.lang.String getLanguageCode();
    /**
     * <pre>
     * Optional. The BCP-47 language code, such as "en-US" or "sr-Latn". For more
     * information, see
     * http://www.unicode.org/reports/tr35/#Unicode_locale_identifier.
     * If language_code is unspecified, the user's language preference for Google
     * services is used.
     * </pre>
     *
     * <code>string language_code = 5 [(.google.api.field_behavior) = OPTIONAL];</code>
     * @return The bytes for languageCode.
     */
    com.google.protobuf.ByteString
        getLanguageCodeBytes();
  }
  /**
   * <pre>
   * Request to list all photos that belong to the user sending the request.
   * By default
   * * does not return the download URL for the photo bytes.
   * Parameters:
   * * `view` controls if the download URL for the photo bytes is returned.
   * * `pageSize` determines the maximum number of photos to return.
   * * `pageToken` is the next page token value returned from a previous
   * [ListPhotos][google.streetview.publish.v1.StreetViewPublishService.ListPhotos]
   *     request, if any.
   * * `filter` allows filtering by a given parameter. 'placeId' is the only
   * parameter supported at the moment.
   * </pre>
   *
   * Protobuf type {@code google.streetview.publish.v1.ListPhotosRequest}
   */
  public static final class ListPhotosRequest extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:google.streetview.publish.v1.ListPhotosRequest)
      ListPhotosRequestOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use ListPhotosRequest.newBuilder() to construct.
    private ListPhotosRequest(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private ListPhotosRequest() {
      view_ = 0;
      pageToken_ = "";
      filter_ = "";
      languageCode_ = "";
    }

    @java.lang.Override
    @SuppressWarnings({"unused"})
    protected java.lang.Object newInstance(
        UnusedPrivateParameter unused) {
      return new ListPhotosRequest();
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.google.geo.ugc.streetview.publish.v1.StreetViewPublishRpcMessages.internal_static_google_streetview_publish_v1_ListPhotosRequest_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.google.geo.ugc.streetview.publish.v1.StreetViewPublishRpcMessages.internal_static_google_streetview_publish_v1_ListPhotosRequest_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.google.geo.ugc.streetview.publish.v1.StreetViewPublishRpcMessages.ListPhotosRequest.class, com.google.geo.ugc.streetview.publish.v1.StreetViewPublishRpcMessages.ListPhotosRequest.Builder.class);
    }

    public static final int VIEW_FIELD_NUMBER = 1;
    private int view_ = 0;
    /**
     * <pre>
     * Required. Specifies if a download URL for the photos bytes should be returned in the
     * Photos response.
     * </pre>
     *
     * <code>.google.streetview.publish.v1.PhotoView view = 1 [(.google.api.field_behavior) = REQUIRED];</code>
     * @return The enum numeric value on the wire for view.
     */
    @java.lang.Override public int getViewValue() {
      return view_;
    }
    /**
     * <pre>
     * Required. Specifies if a download URL for the photos bytes should be returned in the
     * Photos response.
     * </pre>
     *
     * <code>.google.streetview.publish.v1.PhotoView view = 1 [(.google.api.field_behavior) = REQUIRED];</code>
     * @return The view.
     */
    @java.lang.Override public com.google.geo.ugc.streetview.publish.v1.StreetViewPublishRpcMessages.PhotoView getView() {
      com.google.geo.ugc.streetview.publish.v1.StreetViewPublishRpcMessages.PhotoView result = com.google.geo.ugc.streetview.publish.v1.StreetViewPublishRpcMessages.PhotoView.forNumber(view_);
      return result == null ? com.google.geo.ugc.streetview.publish.v1.StreetViewPublishRpcMessages.PhotoView.UNRECOGNIZED : result;
    }

    public static final int PAGE_SIZE_FIELD_NUMBER = 2;
    private int pageSize_ = 0;
    /**
     * <pre>
     * Optional. The maximum number of photos to return.
     * `pageSize` must be non-negative. If `pageSize` is zero or is not provided,
     * the default page size of 100 is used.
     * The number of photos returned in the response may be less than `pageSize`
     * if the number of photos that belong to the user is less than `pageSize`.
     * </pre>
     *
     * <code>int32 page_size = 2 [(.google.api.field_behavior) = OPTIONAL];</code>
     * @return The pageSize.
     */
    @java.lang.Override
    public int getPageSize() {
      return pageSize_;
    }

    public static final int PAGE_TOKEN_FIELD_NUMBER = 3;
    @SuppressWarnings("serial")
    private volatile java.lang.Object pageToken_ = "";
    /**
     * <pre>
     * Optional. The
     * [nextPageToken][google.streetview.publish.v1.ListPhotosResponse.next_page_token]
     * value returned from a previous
     * [ListPhotos][google.streetview.publish.v1.StreetViewPublishService.ListPhotos]
     * request, if any.
     * </pre>
     *
     * <code>string page_token = 3 [(.google.api.field_behavior) = OPTIONAL];</code>
     * @return The pageToken.
     */
    @java.lang.Override
    public java.lang.String getPageToken() {
      java.lang.Object ref = pageToken_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        pageToken_ = s;
        return s;
      }
    }
    /**
     * <pre>
     * Optional. The
     * [nextPageToken][google.streetview.publish.v1.ListPhotosResponse.next_page_token]
     * value returned from a previous
     * [ListPhotos][google.streetview.publish.v1.StreetViewPublishService.ListPhotos]
     * request, if any.
     * </pre>
     *
     * <code>string page_token = 3 [(.google.api.field_behavior) = OPTIONAL];</code>
     * @return The bytes for pageToken.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString
        getPageTokenBytes() {
      java.lang.Object ref = pageToken_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        pageToken_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int FILTER_FIELD_NUMBER = 4;
    @SuppressWarnings("serial")
    private volatile java.lang.Object filter_ = "";
    /**
     * <pre>
     * Optional. The filter expression. For example: `placeId=ChIJj61dQgK6j4AR4GeTYWZsKWw`.
     * The filters supported are: `placeId`, `min_latitude`, `max_latitude`,
     * `min_longitude`, and `max_longitude`. See https://google.aip.dev/160 for
     * more information.
     * </pre>
     *
     * <code>string filter = 4 [(.google.api.field_behavior) = OPTIONAL];</code>
     * @return The filter.
     */
    @java.lang.Override
    public java.lang.String getFilter() {
      java.lang.Object ref = filter_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        filter_ = s;
        return s;
      }
    }
    /**
     * <pre>
     * Optional. The filter expression. For example: `placeId=ChIJj61dQgK6j4AR4GeTYWZsKWw`.
     * The filters supported are: `placeId`, `min_latitude`, `max_latitude`,
     * `min_longitude`, and `max_longitude`. See https://google.aip.dev/160 for
     * more information.
     * </pre>
     *
     * <code>string filter = 4 [(.google.api.field_behavior) = OPTIONAL];</code>
     * @return The bytes for filter.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString
        getFilterBytes() {
      java.lang.Object ref = filter_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        filter_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int LANGUAGE_CODE_FIELD_NUMBER = 5;
    @SuppressWarnings("serial")
    private volatile java.lang.Object languageCode_ = "";
    /**
     * <pre>
     * Optional. The BCP-47 language code, such as "en-US" or "sr-Latn". For more
     * information, see
     * http://www.unicode.org/reports/tr35/#Unicode_locale_identifier.
     * If language_code is unspecified, the user's language preference for Google
     * services is used.
     * </pre>
     *
     * <code>string language_code = 5 [(.google.api.field_behavior) = OPTIONAL];</code>
     * @return The languageCode.
     */
    @java.lang.Override
    public java.lang.String getLanguageCode() {
      java.lang.Object ref = languageCode_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        languageCode_ = s;
        return s;
      }
    }
    /**
     * <pre>
     * Optional. The BCP-47 language code, such as "en-US" or "sr-Latn". For more
     * information, see
     * http://www.unicode.org/reports/tr35/#Unicode_locale_identifier.
     * If language_code is unspecified, the user's language preference for Google
     * services is used.
     * </pre>
     *
     * <code>string language_code = 5 [(.google.api.field_behavior) = OPTIONAL];</code>
     * @return The bytes for languageCode.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString
        getLanguageCodeBytes() {
      java.lang.Object ref = languageCode_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        languageCode_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (view_ != com.google.geo.ugc.streetview.publish.v1.StreetViewPublishRpcMessages.PhotoView.BASIC.getNumber()) {
        output.writeEnum(1, view_);
      }
      if (pageSize_ != 0) {
        output.writeInt32(2, pageSize_);
      }
      if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(pageToken_)) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 3, pageToken_);
      }
      if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(filter_)) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 4, filter_);
      }
      if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(languageCode_)) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 5, languageCode_);
      }
      getUnknownFields().writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (view_ != com.google.geo.ugc.streetview.publish.v1.StreetViewPublishRpcMessages.PhotoView.BASIC.getNumber()) {
        size += com.google.protobuf.CodedOutputStream
          .computeEnumSize(1, view_);
      }
      if (pageSize_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(2, pageSize_);
      }
      if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(pageToken_)) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(3, pageToken_);
      }
      if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(filter_)) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(4, filter_);
      }
      if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(languageCode_)) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(5, languageCode_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof com.google.geo.ugc.streetview.publish.v1.StreetViewPublishRpcMessages.ListPhotosRequest)) {
        return super.equals(obj);
      }
      com.google.geo.ugc.streetview.publish.v1.StreetViewPublishRpcMessages.ListPhotosRequest other = (com.google.geo.ugc.streetview.publish.v1.StreetViewPublishRpcMessages.ListPhotosRequest) obj;

      if (view_ != other.view_) return false;
      if (getPageSize()
          != other.getPageSize()) return false;
      if (!getPageToken()
          .equals(other.getPageToken())) return false;
      if (!getFilter()
          .equals(other.getFilter())) return false;
      if (!getLanguageCode()
          .equals(other.getLanguageCode())) return false;
      if (!getUnknownFields().equals(other.getUnknownFields())) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      hash = (37 * hash) + VIEW_FIELD_NUMBER;
      hash = (53 * hash) + view_;
      hash = (37 * hash) + PAGE_SIZE_FIELD_NUMBER;
      hash = (53 * hash) + getPageSize();
      hash = (37 * hash) + PAGE_TOKEN_FIELD_NUMBER;
      hash = (53 * hash) + getPageToken().hashCode();
      hash = (37 * hash) + FILTER_FIELD_NUMBER;
      hash = (53 * hash) + getFilter().hashCode();
      hash = (37 * hash) + LANGUAGE_CODE_FIELD_NUMBER;
      hash = (53 * hash) + getLanguageCode().hashCode();
      hash = (29 * hash) + getUnknownFields().hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static com.google.geo.ugc.streetview.publish.v1.StreetViewPublishRpcMessages.ListPhotosRequest parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.google.geo.ugc.streetview.publish.v1.StreetViewPublishRpcMessages.ListPhotosRequest parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.google.geo.ugc.streetview.publish.v1.StreetViewPublishRpcMessages.ListPhotosRequest parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.google.geo.ugc.streetview.publish.v1.StreetViewPublishRpcMessages.ListPhotosRequest parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.google.geo.ugc.streetview.publish.v1.StreetViewPublishRpcMessages.ListPhotosRequest parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.google.geo.ugc.streetview.publish.v1.StreetViewPublishRpcMessages.ListPhotosRequest parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.google.geo.ugc.streetview.publish.v1.StreetViewPublishRpcMessages.ListPhotosRequest parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static com.google.geo.ugc.streetview.publish.v1.StreetViewPublishRpcMessages.ListPhotosRequest parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static com.google.geo.ugc.streetview.publish.v1.StreetViewPublishRpcMessages.ListPhotosRequest parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static com.google.geo.ugc.streetview.publish.v1.StreetViewPublishRpcMessages.ListPhotosRequest parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static com.google.geo.ugc.streetview.publish.v1.StreetViewPublishRpcMessages.ListPhotosRequest parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static com.google.geo.ugc.streetview.publish.v1.StreetViewPublishRpcMessages.ListPhotosRequest parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(com.google.geo.ugc.streetview.publish.v1.StreetViewPublishRpcMessages.ListPhotosRequest prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * <pre>
     * Request to list all photos that belong to the user sending the request.
     * By default
     * * does not return the download URL for the photo bytes.
     * Parameters:
     * * `view` controls if the download URL for the photo bytes is returned.
     * * `pageSize` determines the maximum number of photos to return.
     * * `pageToken` is the next page token value returned from a previous
     * [ListPhotos][google.streetview.publish.v1.StreetViewPublishService.ListPhotos]
     *     request, if any.
     * * `filter` allows filtering by a given parameter. 'placeId' is the only
     * parameter supported at the moment.
     * </pre>
     *
     * Protobuf type {@code google.streetview.publish.v1.ListPhotosRequest}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:google.streetview.publish.v1.ListPhotosRequest)
        com.google.geo.ugc.streetview.publish.v1.StreetViewPublishRpcMessages.ListPhotosRequestOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return com.google.geo.ugc.streetview.publish.v1.StreetViewPublishRpcMessages.internal_static_google_streetview_publish_v1_ListPhotosRequest_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return com.google.geo.ugc.streetview.publish.v1.StreetViewPublishRpcMessages.internal_static_google_streetview_publish_v1_ListPhotosRequest_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                com.google.geo.ugc.streetview.publish.v1.StreetViewPublishRpcMessages.ListPhotosRequest.class, com.google.geo.ugc.streetview.publish.v1.StreetViewPublishRpcMessages.ListPhotosRequest.Builder.class);
      }

      // Construct using com.google.geo.ugc.streetview.publish.v1.StreetViewPublishRpcMessages.ListPhotosRequest.newBuilder()
      private Builder() {

      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);

      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        bitField0_ = 0;
        view_ = 0;
        pageSize_ = 0;
        pageToken_ = "";
        filter_ = "";
        languageCode_ = "";
        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.google.geo.ugc.streetview.publish.v1.StreetViewPublishRpcMessages.internal_static_google_streetview_publish_v1_ListPhotosRequest_descriptor;
      }

      @java.lang.Override
      public com.google.geo.ugc.streetview.publish.v1.StreetViewPublishRpcMessages.ListPhotosRequest getDefaultInstanceForType() {
        return com.google.geo.ugc.streetview.publish.v1.StreetViewPublishRpcMessages.ListPhotosRequest.getDefaultInstance();
      }

      @java.lang.Override
      public com.google.geo.ugc.streetview.publish.v1.StreetViewPublishRpcMessages.ListPhotosRequest build() {
        com.google.geo.ugc.streetview.publish.v1.StreetViewPublishRpcMessages.ListPhotosRequest result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public com.google.geo.ugc.streetview.publish.v1.StreetViewPublishRpcMessages.ListPhotosRequest buildPartial() {
        com.google.geo.ugc.streetview.publish.v1.StreetViewPublishRpcMessages.ListPhotosRequest result = new com.google.geo.ugc.streetview.publish.v1.StreetViewPublishRpcMessages.ListPhotosRequest(this);
        if (bitField0_ != 0) { buildPartial0(result); }
        onBuilt();
        return result;
      }

      private void buildPartial0(com.google.geo.ugc.streetview.publish.v1.StreetViewPublishRpcMessages.ListPhotosRequest result) {
        int from_bitField0_ = bitField0_;
        if (((from_bitField0_ & 0x00000001) != 0)) {
          result.view_ = view_;
        }
        if (((from_bitField0_ & 0x00000002) != 0)) {
          result.pageSize_ = pageSize_;
        }
        if (((from_bitField0_ & 0x00000004) != 0)) {
          result.pageToken_ = pageToken_;
        }
        if (((from_bitField0_ & 0x00000008) != 0)) {
          result.filter_ = filter_;
        }
        if (((from_bitField0_ & 0x00000010) != 0)) {
          result.languageCode_ = languageCode_;
        }
      }

      @java.lang.Override
      public Builder clone() {
        return super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.google.geo.ugc.streetview.publish.v1.StreetViewPublishRpcMessages.ListPhotosRequest) {
          return mergeFrom((com.google.geo.ugc.streetview.publish.v1.StreetViewPublishRpcMessages.ListPhotosRequest)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(com.google.geo.ugc.streetview.publish.v1.StreetViewPublishRpcMessages.ListPhotosRequest other) {
        if (other == com.google.geo.ugc.streetview.publish.v1.StreetViewPublishRpcMessages.ListPhotosRequest.getDefaultInstance()) return this;
        if (other.view_ != 0) {
          setViewValue(other.getViewValue());
        }
        if (other.getPageSize() != 0) {
          setPageSize(other.getPageSize());
        }
        if (!other.getPageToken().isEmpty()) {
          pageToken_ = other.pageToken_;
          bitField0_ |= 0x00000004;
          onChanged();
        }
        if (!other.getFilter().isEmpty()) {
          filter_ = other.filter_;
          bitField0_ |= 0x00000008;
          onChanged();
        }
        if (!other.getLanguageCode().isEmpty()) {
          languageCode_ = other.languageCode_;
          bitField0_ |= 0x00000010;
          onChanged();
        }
        this.mergeUnknownFields(other.getUnknownFields());
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        if (extensionRegistry == null) {
          throw new java.lang.NullPointerException();
        }
        try {
          boolean done = false;
          while (!done) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                done = true;
                break;
              case 8: {
                view_ = input.readEnum();
                bitField0_ |= 0x00000001;
                break;
              } // case 8
              case 16: {
                pageSize_ = input.readInt32();
                bitField0_ |= 0x00000002;
                break;
              } // case 16
              case 26: {
                pageToken_ = input.readStringRequireUtf8();
                bitField0_ |= 0x00000004;
                break;
              } // case 26
              case 34: {
                filter_ = input.readStringRequireUtf8();
                bitField0_ |= 0x00000008;
                break;
              } // case 34
              case 42: {
                languageCode_ = input.readStringRequireUtf8();
                bitField0_ |= 0x00000010;
                break;
              } // case 42
              default: {
                if (!super.parseUnknownField(input, extensionRegistry, tag)) {
                  done = true; // was an endgroup tag
                }
                break;
              } // default:
            } // switch (tag)
          } // while (!done)
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.unwrapIOException();
        } finally {
          onChanged();
        } // finally
        return this;
      }
      private int bitField0_;

      private int view_ = 0;
      /**
       * <pre>
       * Required. Specifies if a download URL for the photos bytes should be returned in the
       * Photos response.
       * </pre>
       *
       * <code>.google.streetview.publish.v1.PhotoView view = 1 [(.google.api.field_behavior) = REQUIRED];</code>
       * @return The enum numeric value on the wire for view.
       */
      @java.lang.Override public int getViewValue() {
        return view_;
      }
      /**
       * <pre>
       * Required. Specifies if a download URL for the photos bytes should be returned in the
       * Photos response.
       * </pre>
       *
       * <code>.google.streetview.publish.v1.PhotoView view = 1 [(.google.api.field_behavior) = REQUIRED];</code>
       * @param value The enum numeric value on the wire for view to set.
       * @return This builder for chaining.
       */
      public Builder setViewValue(int value) {
        view_ = value;
        bitField0_ |= 0x00000001;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Required. Specifies if a download URL for the photos bytes should be returned in the
       * Photos response.
       * </pre>
       *
       * <code>.google.streetview.publish.v1.PhotoView view = 1 [(.google.api.field_behavior) = REQUIRED];</code>
       * @return The view.
       */
      @java.lang.Override
      public com.google.geo.ugc.streetview.publish.v1.StreetViewPublishRpcMessages.PhotoView getView() {
        com.google.geo.ugc.streetview.publish.v1.StreetViewPublishRpcMessages.PhotoView result = com.google.geo.ugc.streetview.publish.v1.StreetViewPublishRpcMessages.PhotoView.forNumber(view_);
        return result == null ? com.google.geo.ugc.streetview.publish.v1.StreetViewPublishRpcMessages.PhotoView.UNRECOGNIZED : result;
      }
      /**
       * <pre>
       * Required. Specifies if a download URL for the photos bytes should be returned in the
       * Photos response.
       * </pre>
       *
       * <code>.google.streetview.publish.v1.PhotoView view = 1 [(.google.api.field_behavior) = REQUIRED];</code>
       * @param value The view to set.
       * @return This builder for chaining.
       */
      public Builder setView(com.google.geo.ugc.streetview.publish.v1.StreetViewPublishRpcMessages.PhotoView value) {
        if (value == null) {
          throw new NullPointerException();
        }
        bitField0_ |= 0x00000001;
        view_ = value.getNumber();
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Required. Specifies if a download URL for the photos bytes should be returned in the
       * Photos response.
       * </pre>
       *
       * <code>.google.streetview.publish.v1.PhotoView view = 1 [(.google.api.field_behavior) = REQUIRED];</code>
       * @return This builder for chaining.
       */
      public Builder clearView() {
        bitField0_ = (bitField0_ & ~0x00000001);
        view_ = 0;
        onChanged();
        return this;
      }

      private int pageSize_ ;
      /**
       * <pre>
       * Optional. The maximum number of photos to return.
       * `pageSize` must be non-negative. If `pageSize` is zero or is not provided,
       * the default page size of 100 is used.
       * The number of photos returned in the response may be less than `pageSize`
       * if the number of photos that belong to the user is less than `pageSize`.
       * </pre>
       *
       * <code>int32 page_size = 2 [(.google.api.field_behavior) = OPTIONAL];</code>
       * @return The pageSize.
       */
      @java.lang.Override
      public int getPageSize() {
        return pageSize_;
      }
      /**
       * <pre>
       * Optional. The maximum number of photos to return.
       * `pageSize` must be non-negative. If `pageSize` is zero or is not provided,
       * the default page size of 100 is used.
       * The number of photos returned in the response may be less than `pageSize`
       * if the number of photos that belong to the user is less than `pageSize`.
       * </pre>
       *
       * <code>int32 page_size = 2 [(.google.api.field_behavior) = OPTIONAL];</code>
       * @param value The pageSize to set.
       * @return This builder for chaining.
       */
      public Builder setPageSize(int value) {
        
        pageSize_ = value;
        bitField0_ |= 0x00000002;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Optional. The maximum number of photos to return.
       * `pageSize` must be non-negative. If `pageSize` is zero or is not provided,
       * the default page size of 100 is used.
       * The number of photos returned in the response may be less than `pageSize`
       * if the number of photos that belong to the user is less than `pageSize`.
       * </pre>
       *
       * <code>int32 page_size = 2 [(.google.api.field_behavior) = OPTIONAL];</code>
       * @return This builder for chaining.
       */
      public Builder clearPageSize() {
        bitField0_ = (bitField0_ & ~0x00000002);
        pageSize_ = 0;
        onChanged();
        return this;
      }

      private java.lang.Object pageToken_ = "";
      /**
       * <pre>
       * Optional. The
       * [nextPageToken][google.streetview.publish.v1.ListPhotosResponse.next_page_token]
       * value returned from a previous
       * [ListPhotos][google.streetview.publish.v1.StreetViewPublishService.ListPhotos]
       * request, if any.
       * </pre>
       *
       * <code>string page_token = 3 [(.google.api.field_behavior) = OPTIONAL];</code>
       * @return The pageToken.
       */
      public java.lang.String getPageToken() {
        java.lang.Object ref = pageToken_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          pageToken_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <pre>
       * Optional. The
       * [nextPageToken][google.streetview.publish.v1.ListPhotosResponse.next_page_token]
       * value returned from a previous
       * [ListPhotos][google.streetview.publish.v1.StreetViewPublishService.ListPhotos]
       * request, if any.
       * </pre>
       *
       * <code>string page_token = 3 [(.google.api.field_behavior) = OPTIONAL];</code>
       * @return The bytes for pageToken.
       */
      public com.google.protobuf.ByteString
          getPageTokenBytes() {
        java.lang.Object ref = pageToken_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          pageToken_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       * Optional. The
       * [nextPageToken][google.streetview.publish.v1.ListPhotosResponse.next_page_token]
       * value returned from a previous
       * [ListPhotos][google.streetview.publish.v1.StreetViewPublishService.ListPhotos]
       * request, if any.
       * </pre>
       *
       * <code>string page_token = 3 [(.google.api.field_behavior) = OPTIONAL];</code>
       * @param value The pageToken to set.
       * @return This builder for chaining.
       */
      public Builder setPageToken(
          java.lang.String value) {
        if (value == null) { throw new NullPointerException(); }
        pageToken_ = value;
        bitField0_ |= 0x00000004;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Optional. The
       * [nextPageToken][google.streetview.publish.v1.ListPhotosResponse.next_page_token]
       * value returned from a previous
       * [ListPhotos][google.streetview.publish.v1.StreetViewPublishService.ListPhotos]
       * request, if any.
       * </pre>
       *
       * <code>string page_token = 3 [(.google.api.field_behavior) = OPTIONAL];</code>
       * @return This builder for chaining.
       */
      public Builder clearPageToken() {
        pageToken_ = getDefaultInstance().getPageToken();
        bitField0_ = (bitField0_ & ~0x00000004);
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Optional. The
       * [nextPageToken][google.streetview.publish.v1.ListPhotosResponse.next_page_token]
       * value returned from a previous
       * [ListPhotos][google.streetview.publish.v1.StreetViewPublishService.ListPhotos]
       * request, if any.
       * </pre>
       *
       * <code>string page_token = 3 [(.google.api.field_behavior) = OPTIONAL];</code>
       * @param value The bytes for pageToken to set.
       * @return This builder for chaining.
       */
      public Builder setPageTokenBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) { throw new NullPointerException(); }
        checkByteStringIsUtf8(value);
        pageToken_ = value;
        bitField0_ |= 0x00000004;
        onChanged();
        return this;
      }

      private java.lang.Object filter_ = "";
      /**
       * <pre>
       * Optional. The filter expression. For example: `placeId=ChIJj61dQgK6j4AR4GeTYWZsKWw`.
       * The filters supported are: `placeId`, `min_latitude`, `max_latitude`,
       * `min_longitude`, and `max_longitude`. See https://google.aip.dev/160 for
       * more information.
       * </pre>
       *
       * <code>string filter = 4 [(.google.api.field_behavior) = OPTIONAL];</code>
       * @return The filter.
       */
      public java.lang.String getFilter() {
        java.lang.Object ref = filter_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          filter_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <pre>
       * Optional. The filter expression. For example: `placeId=ChIJj61dQgK6j4AR4GeTYWZsKWw`.
       * The filters supported are: `placeId`, `min_latitude`, `max_latitude`,
       * `min_longitude`, and `max_longitude`. See https://google.aip.dev/160 for
       * more information.
       * </pre>
       *
       * <code>string filter = 4 [(.google.api.field_behavior) = OPTIONAL];</code>
       * @return The bytes for filter.
       */
      public com.google.protobuf.ByteString
          getFilterBytes() {
        java.lang.Object ref = filter_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          filter_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       * Optional. The filter expression. For example: `placeId=ChIJj61dQgK6j4AR4GeTYWZsKWw`.
       * The filters supported are: `placeId`, `min_latitude`, `max_latitude`,
       * `min_longitude`, and `max_longitude`. See https://google.aip.dev/160 for
       * more information.
       * </pre>
       *
       * <code>string filter = 4 [(.google.api.field_behavior) = OPTIONAL];</code>
       * @param value The filter to set.
       * @return This builder for chaining.
       */
      public Builder setFilter(
          java.lang.String value) {
        if (value == null) { throw new NullPointerException(); }
        filter_ = value;
        bitField0_ |= 0x00000008;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Optional. The filter expression. For example: `placeId=ChIJj61dQgK6j4AR4GeTYWZsKWw`.
       * The filters supported are: `placeId`, `min_latitude`, `max_latitude`,
       * `min_longitude`, and `max_longitude`. See https://google.aip.dev/160 for
       * more information.
       * </pre>
       *
       * <code>string filter = 4 [(.google.api.field_behavior) = OPTIONAL];</code>
       * @return This builder for chaining.
       */
      public Builder clearFilter() {
        filter_ = getDefaultInstance().getFilter();
        bitField0_ = (bitField0_ & ~0x00000008);
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Optional. The filter expression. For example: `placeId=ChIJj61dQgK6j4AR4GeTYWZsKWw`.
       * The filters supported are: `placeId`, `min_latitude`, `max_latitude`,
       * `min_longitude`, and `max_longitude`. See https://google.aip.dev/160 for
       * more information.
       * </pre>
       *
       * <code>string filter = 4 [(.google.api.field_behavior) = OPTIONAL];</code>
       * @param value The bytes for filter to set.
       * @return This builder for chaining.
       */
      public Builder setFilterBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) { throw new NullPointerException(); }
        checkByteStringIsUtf8(value);
        filter_ = value;
        bitField0_ |= 0x00000008;
        onChanged();
        return this;
      }

      private java.lang.Object languageCode_ = "";
      /**
       * <pre>
       * Optional. The BCP-47 language code, such as "en-US" or "sr-Latn". For more
       * information, see
       * http://www.unicode.org/reports/tr35/#Unicode_locale_identifier.
       * If language_code is unspecified, the user's language preference for Google
       * services is used.
       * </pre>
       *
       * <code>string language_code = 5 [(.google.api.field_behavior) = OPTIONAL];</code>
       * @return The languageCode.
       */
      public java.lang.String getLanguageCode() {
        java.lang.Object ref = languageCode_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          languageCode_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <pre>
       * Optional. The BCP-47 language code, such as "en-US" or "sr-Latn". For more
       * information, see
       * http://www.unicode.org/reports/tr35/#Unicode_locale_identifier.
       * If language_code is unspecified, the user's language preference for Google
       * services is used.
       * </pre>
       *
       * <code>string language_code = 5 [(.google.api.field_behavior) = OPTIONAL];</code>
       * @return The bytes for languageCode.
       */
      public com.google.protobuf.ByteString
          getLanguageCodeBytes() {
        java.lang.Object ref = languageCode_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          languageCode_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       * Optional. The BCP-47 language code, such as "en-US" or "sr-Latn". For more
       * information, see
       * http://www.unicode.org/reports/tr35/#Unicode_locale_identifier.
       * If language_code is unspecified, the user's language preference for Google
       * services is used.
       * </pre>
       *
       * <code>string language_code = 5 [(.google.api.field_behavior) = OPTIONAL];</code>
       * @param value The languageCode to set.
       * @return This builder for chaining.
       */
      public Builder setLanguageCode(
          java.lang.String value) {
        if (value == null) { throw new NullPointerException(); }
        languageCode_ = value;
        bitField0_ |= 0x00000010;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Optional. The BCP-47 language code, such as "en-US" or "sr-Latn". For more
       * information, see
       * http://www.unicode.org/reports/tr35/#Unicode_locale_identifier.
       * If language_code is unspecified, the user's language preference for Google
       * services is used.
       * </pre>
       *
       * <code>string language_code = 5 [(.google.api.field_behavior) = OPTIONAL];</code>
       * @return This builder for chaining.
       */
      public Builder clearLanguageCode() {
        languageCode_ = getDefaultInstance().getLanguageCode();
        bitField0_ = (bitField0_ & ~0x00000010);
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Optional. The BCP-47 language code, such as "en-US" or "sr-Latn". For more
       * information, see
       * http://www.unicode.org/reports/tr35/#Unicode_locale_identifier.
       * If language_code is unspecified, the user's language preference for Google
       * services is used.
       * </pre>
       *
       * <code>string language_code = 5 [(.google.api.field_behavior) = OPTIONAL];</code>
       * @param value The bytes for languageCode to set.
       * @return This builder for chaining.
       */
      public Builder setLanguageCodeBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) { throw new NullPointerException(); }
        checkByteStringIsUtf8(value);
        languageCode_ = value;
        bitField0_ |= 0x00000010;
        onChanged();
        return this;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:google.streetview.publish.v1.ListPhotosRequest)
    }

    // @@protoc_insertion_point(class_scope:google.streetview.publish.v1.ListPhotosRequest)
    private static final com.google.geo.ugc.streetview.publish.v1.StreetViewPublishRpcMessages.ListPhotosRequest DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new com.google.geo.ugc.streetview.publish.v1.StreetViewPublishRpcMessages.ListPhotosRequest();
    }

    public static com.google.geo.ugc.streetview.publish.v1.StreetViewPublishRpcMessages.ListPhotosRequest getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<ListPhotosRequest>
        PARSER = new com.google.protobuf.AbstractParser<ListPhotosRequest>() {
      @java.lang.Override
      public ListPhotosRequest parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        Builder builder = newBuilder();
        try {
          builder.mergeFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.setUnfinishedMessage(builder.buildPartial());
        } catch (com.google.protobuf.UninitializedMessageException e) {
          throw e.asInvalidProtocolBufferException().setUnfinishedMessage(builder.buildPartial());
        } catch (java.io.IOException e) {
          throw new com.google.protobuf.InvalidProtocolBufferException(e)
              .setUnfinishedMessage(builder.buildPartial());
        }
        return builder.buildPartial();
      }
    };

    public static com.google.protobuf.Parser<ListPhotosRequest> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<ListPhotosRequest> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.geo.ugc.streetview.publish.v1.StreetViewPublishRpcMessages.ListPhotosRequest getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface ListPhotosResponseOrBuilder extends
      // @@protoc_insertion_point(interface_extends:google.streetview.publish.v1.ListPhotosResponse)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <pre>
     * List of photos. The
     * [pageSize][google.streetview.publish.v1.ListPhotosRequest.page_size] field
     * in the request determines the number of items returned.
     * </pre>
     *
     * <code>repeated .google.streetview.publish.v1.Photo photos = 1;</code>
     */
    java.util.List<com.google.geo.ugc.streetview.publish.v1.StreetViewPublishResources.Photo> 
        getPhotosList();
    /**
     * <pre>
     * List of photos. The
     * [pageSize][google.streetview.publish.v1.ListPhotosRequest.page_size] field
     * in the request determines the number of items returned.
     * </pre>
     *
     * <code>repeated .google.streetview.publish.v1.Photo photos = 1;</code>
     */
    com.google.geo.ugc.streetview.publish.v1.StreetViewPublishResources.Photo getPhotos(int index);
    /**
     * <pre>
     * List of photos. The
     * [pageSize][google.streetview.publish.v1.ListPhotosRequest.page_size] field
     * in the request determines the number of items returned.
     * </pre>
     *
     * <code>repeated .google.streetview.publish.v1.Photo photos = 1;</code>
     */
    int getPhotosCount();
    /**
     * <pre>
     * List of photos. The
     * [pageSize][google.streetview.publish.v1.ListPhotosRequest.page_size] field
     * in the request determines the number of items returned.
     * </pre>
     *
     * <code>repeated .google.streetview.publish.v1.Photo photos = 1;</code>
     */
    java.util.List<? extends com.google.geo.ugc.streetview.publish.v1.StreetViewPublishResources.PhotoOrBuilder> 
        getPhotosOrBuilderList();
    /**
     * <pre>
     * List of photos. The
     * [pageSize][google.streetview.publish.v1.ListPhotosRequest.page_size] field
     * in the request determines the number of items returned.
     * </pre>
     *
     * <code>repeated .google.streetview.publish.v1.Photo photos = 1;</code>
     */
    com.google.geo.ugc.streetview.publish.v1.StreetViewPublishResources.PhotoOrBuilder getPhotosOrBuilder(
        int index);

    /**
     * <pre>
     * Token to retrieve the next page of results, or empty if there are no more
     * results in the list.
     * </pre>
     *
     * <code>string next_page_token = 2;</code>
     * @return The nextPageToken.
     */
    java.lang.String getNextPageToken();
    /**
     * <pre>
     * Token to retrieve the next page of results, or empty if there are no more
     * results in the list.
     * </pre>
     *
     * <code>string next_page_token = 2;</code>
     * @return The bytes for nextPageToken.
     */
    com.google.protobuf.ByteString
        getNextPageTokenBytes();
  }
  /**
   * <pre>
   * Response to list all photos that belong to a user.
   * </pre>
   *
   * Protobuf type {@code google.streetview.publish.v1.ListPhotosResponse}
   */
  public static final class ListPhotosResponse extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:google.streetview.publish.v1.ListPhotosResponse)
      ListPhotosResponseOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use ListPhotosResponse.newBuilder() to construct.
    private ListPhotosResponse(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private ListPhotosResponse() {
      photos_ = java.util.Collections.emptyList();
      nextPageToken_ = "";
    }

    @java.lang.Override
    @SuppressWarnings({"unused"})
    protected java.lang.Object newInstance(
        UnusedPrivateParameter unused) {
      return new ListPhotosResponse();
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.google.geo.ugc.streetview.publish.v1.StreetViewPublishRpcMessages.internal_static_google_streetview_publish_v1_ListPhotosResponse_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.google.geo.ugc.streetview.publish.v1.StreetViewPublishRpcMessages.internal_static_google_streetview_publish_v1_ListPhotosResponse_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.google.geo.ugc.streetview.publish.v1.StreetViewPublishRpcMessages.ListPhotosResponse.class, com.google.geo.ugc.streetview.publish.v1.StreetViewPublishRpcMessages.ListPhotosResponse.Builder.class);
    }

    public static final int PHOTOS_FIELD_NUMBER = 1;
    @SuppressWarnings("serial")
    private java.util.List<com.google.geo.ugc.streetview.publish.v1.StreetViewPublishResources.Photo> photos_;
    /**
     * <pre>
     * List of photos. The
     * [pageSize][google.streetview.publish.v1.ListPhotosRequest.page_size] field
     * in the request determines the number of items returned.
     * </pre>
     *
     * <code>repeated .google.streetview.publish.v1.Photo photos = 1;</code>
     */
    @java.lang.Override
    public java.util.List<com.google.geo.ugc.streetview.publish.v1.StreetViewPublishResources.Photo> getPhotosList() {
      return photos_;
    }
    /**
     * <pre>
     * List of photos. The
     * [pageSize][google.streetview.publish.v1.ListPhotosRequest.page_size] field
     * in the request determines the number of items returned.
     * </pre>
     *
     * <code>repeated .google.streetview.publish.v1.Photo photos = 1;</code>
     */
    @java.lang.Override
    public java.util.List<? extends com.google.geo.ugc.streetview.publish.v1.StreetViewPublishResources.PhotoOrBuilder> 
        getPhotosOrBuilderList() {
      return photos_;
    }
    /**
     * <pre>
     * List of photos. The
     * [pageSize][google.streetview.publish.v1.ListPhotosRequest.page_size] field
     * in the request determines the number of items returned.
     * </pre>
     *
     * <code>repeated .google.streetview.publish.v1.Photo photos = 1;</code>
     */
    @java.lang.Override
    public int getPhotosCount() {
      return photos_.size();
    }
    /**
     * <pre>
     * List of photos. The
     * [pageSize][google.streetview.publish.v1.ListPhotosRequest.page_size] field
     * in the request determines the number of items returned.
     * </pre>
     *
     * <code>repeated .google.streetview.publish.v1.Photo photos = 1;</code>
     */
    @java.lang.Override
    public com.google.geo.ugc.streetview.publish.v1.StreetViewPublishResources.Photo getPhotos(int index) {
      return photos_.get(index);
    }
    /**
     * <pre>
     * List of photos. The
     * [pageSize][google.streetview.publish.v1.ListPhotosRequest.page_size] field
     * in the request determines the number of items returned.
     * </pre>
     *
     * <code>repeated .google.streetview.publish.v1.Photo photos = 1;</code>
     */
    @java.lang.Override
    public com.google.geo.ugc.streetview.publish.v1.StreetViewPublishResources.PhotoOrBuilder getPhotosOrBuilder(
        int index) {
      return photos_.get(index);
    }

    public static final int NEXT_PAGE_TOKEN_FIELD_NUMBER = 2;
    @SuppressWarnings("serial")
    private volatile java.lang.Object nextPageToken_ = "";
    /**
     * <pre>
     * Token to retrieve the next page of results, or empty if there are no more
     * results in the list.
     * </pre>
     *
     * <code>string next_page_token = 2;</code>
     * @return The nextPageToken.
     */
    @java.lang.Override
    public java.lang.String getNextPageToken() {
      java.lang.Object ref = nextPageToken_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        nextPageToken_ = s;
        return s;
      }
    }
    /**
     * <pre>
     * Token to retrieve the next page of results, or empty if there are no more
     * results in the list.
     * </pre>
     *
     * <code>string next_page_token = 2;</code>
     * @return The bytes for nextPageToken.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString
        getNextPageTokenBytes() {
      java.lang.Object ref = nextPageToken_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        nextPageToken_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      for (int i = 0; i < photos_.size(); i++) {
        output.writeMessage(1, photos_.get(i));
      }
      if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(nextPageToken_)) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 2, nextPageToken_);
      }
      getUnknownFields().writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      for (int i = 0; i < photos_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, photos_.get(i));
      }
      if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(nextPageToken_)) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(2, nextPageToken_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof com.google.geo.ugc.streetview.publish.v1.StreetViewPublishRpcMessages.ListPhotosResponse)) {
        return super.equals(obj);
      }
      com.google.geo.ugc.streetview.publish.v1.StreetViewPublishRpcMessages.ListPhotosResponse other = (com.google.geo.ugc.streetview.publish.v1.StreetViewPublishRpcMessages.ListPhotosResponse) obj;

      if (!getPhotosList()
          .equals(other.getPhotosList())) return false;
      if (!getNextPageToken()
          .equals(other.getNextPageToken())) return false;
      if (!getUnknownFields().equals(other.getUnknownFields())) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      if (getPhotosCount() > 0) {
        hash = (37 * hash) + PHOTOS_FIELD_NUMBER;
        hash = (53 * hash) + getPhotosList().hashCode();
      }
      hash = (37 * hash) + NEXT_PAGE_TOKEN_FIELD_NUMBER;
      hash = (53 * hash) + getNextPageToken().hashCode();
      hash = (29 * hash) + getUnknownFields().hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static com.google.geo.ugc.streetview.publish.v1.StreetViewPublishRpcMessages.ListPhotosResponse parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.google.geo.ugc.streetview.publish.v1.StreetViewPublishRpcMessages.ListPhotosResponse parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.google.geo.ugc.streetview.publish.v1.StreetViewPublishRpcMessages.ListPhotosResponse parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.google.geo.ugc.streetview.publish.v1.StreetViewPublishRpcMessages.ListPhotosResponse parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.google.geo.ugc.streetview.publish.v1.StreetViewPublishRpcMessages.ListPhotosResponse parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.google.geo.ugc.streetview.publish.v1.StreetViewPublishRpcMessages.ListPhotosResponse parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.google.geo.ugc.streetview.publish.v1.StreetViewPublishRpcMessages.ListPhotosResponse parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static com.google.geo.ugc.streetview.publish.v1.StreetViewPublishRpcMessages.ListPhotosResponse parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static com.google.geo.ugc.streetview.publish.v1.StreetViewPublishRpcMessages.ListPhotosResponse parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static com.google.geo.ugc.streetview.publish.v1.StreetViewPublishRpcMessages.ListPhotosResponse parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static com.google.geo.ugc.streetview.publish.v1.StreetViewPublishRpcMessages.ListPhotosResponse parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static com.google.geo.ugc.streetview.publish.v1.StreetViewPublishRpcMessages.ListPhotosResponse parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(com.google.geo.ugc.streetview.publish.v1.StreetViewPublishRpcMessages.ListPhotosResponse prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * <pre>
     * Response to list all photos that belong to a user.
     * </pre>
     *
     * Protobuf type {@code google.streetview.publish.v1.ListPhotosResponse}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:google.streetview.publish.v1.ListPhotosResponse)
        com.google.geo.ugc.streetview.publish.v1.StreetViewPublishRpcMessages.ListPhotosResponseOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return com.google.geo.ugc.streetview.publish.v1.StreetViewPublishRpcMessages.internal_static_google_streetview_publish_v1_ListPhotosResponse_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return com.google.geo.ugc.streetview.publish.v1.StreetViewPublishRpcMessages.internal_static_google_streetview_publish_v1_ListPhotosResponse_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                com.google.geo.ugc.streetview.publish.v1.StreetViewPublishRpcMessages.ListPhotosResponse.class, com.google.geo.ugc.streetview.publish.v1.StreetViewPublishRpcMessages.ListPhotosResponse.Builder.class);
      }

      // Construct using com.google.geo.ugc.streetview.publish.v1.StreetViewPublishRpcMessages.ListPhotosResponse.newBuilder()
      private Builder() {

      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);

      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        bitField0_ = 0;
        if (photosBuilder_ == null) {
          photos_ = java.util.Collections.emptyList();
        } else {
          photos_ = null;
          photosBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000001);
        nextPageToken_ = "";
        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.google.geo.ugc.streetview.publish.v1.StreetViewPublishRpcMessages.internal_static_google_streetview_publish_v1_ListPhotosResponse_descriptor;
      }

      @java.lang.Override
      public com.google.geo.ugc.streetview.publish.v1.StreetViewPublishRpcMessages.ListPhotosResponse getDefaultInstanceForType() {
        return com.google.geo.ugc.streetview.publish.v1.StreetViewPublishRpcMessages.ListPhotosResponse.getDefaultInstance();
      }

      @java.lang.Override
      public com.google.geo.ugc.streetview.publish.v1.StreetViewPublishRpcMessages.ListPhotosResponse build() {
        com.google.geo.ugc.streetview.publish.v1.StreetViewPublishRpcMessages.ListPhotosResponse result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public com.google.geo.ugc.streetview.publish.v1.StreetViewPublishRpcMessages.ListPhotosResponse buildPartial() {
        com.google.geo.ugc.streetview.publish.v1.StreetViewPublishRpcMessages.ListPhotosResponse result = new com.google.geo.ugc.streetview.publish.v1.StreetViewPublishRpcMessages.ListPhotosResponse(this);
        buildPartialRepeatedFields(result);
        if (bitField0_ != 0) { buildPartial0(result); }
        onBuilt();
        return result;
      }

      private void buildPartialRepeatedFields(com.google.geo.ugc.streetview.publish.v1.StreetViewPublishRpcMessages.ListPhotosResponse result) {
        if (photosBuilder_ == null) {
          if (((bitField0_ & 0x00000001) != 0)) {
            photos_ = java.util.Collections.unmodifiableList(photos_);
            bitField0_ = (bitField0_ & ~0x00000001);
          }
          result.photos_ = photos_;
        } else {
          result.photos_ = photosBuilder_.build();
        }
      }

      private void buildPartial0(com.google.geo.ugc.streetview.publish.v1.StreetViewPublishRpcMessages.ListPhotosResponse result) {
        int from_bitField0_ = bitField0_;
        if (((from_bitField0_ & 0x00000002) != 0)) {
          result.nextPageToken_ = nextPageToken_;
        }
      }

      @java.lang.Override
      public Builder clone() {
        return super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.google.geo.ugc.streetview.publish.v1.StreetViewPublishRpcMessages.ListPhotosResponse) {
          return mergeFrom((com.google.geo.ugc.streetview.publish.v1.StreetViewPublishRpcMessages.ListPhotosResponse)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(com.google.geo.ugc.streetview.publish.v1.StreetViewPublishRpcMessages.ListPhotosResponse other) {
        if (other == com.google.geo.ugc.streetview.publish.v1.StreetViewPublishRpcMessages.ListPhotosResponse.getDefaultInstance()) return this;
        if (photosBuilder_ == null) {
          if (!other.photos_.isEmpty()) {
            if (photos_.isEmpty()) {
              photos_ = other.photos_;
              bitField0_ = (bitField0_ & ~0x00000001);
            } else {
              ensurePhotosIsMutable();
              photos_.addAll(other.photos_);
            }
            onChanged();
          }
        } else {
          if (!other.photos_.isEmpty()) {
            if (photosBuilder_.isEmpty()) {
              photosBuilder_.dispose();
              photosBuilder_ = null;
              photos_ = other.photos_;
              bitField0_ = (bitField0_ & ~0x00000001);
              photosBuilder_ = 
                com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?
                   getPhotosFieldBuilder() : null;
            } else {
              photosBuilder_.addAllMessages(other.photos_);
            }
          }
        }
        if (!other.getNextPageToken().isEmpty()) {
          nextPageToken_ = other.nextPageToken_;
          bitField0_ |= 0x00000002;
          onChanged();
        }
        this.mergeUnknownFields(other.getUnknownFields());
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        if (extensionRegistry == null) {
          throw new java.lang.NullPointerException();
        }
        try {
          boolean done = false;
          while (!done) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                done = true;
                break;
              case 10: {
                com.google.geo.ugc.streetview.publish.v1.StreetViewPublishResources.Photo m =
                    input.readMessage(
                        com.google.geo.ugc.streetview.publish.v1.StreetViewPublishResources.Photo.parser(),
                        extensionRegistry);
                if (photosBuilder_ == null) {
                  ensurePhotosIsMutable();
                  photos_.add(m);
                } else {
                  photosBuilder_.addMessage(m);
                }
                break;
              } // case 10
              case 18: {
                nextPageToken_ = input.readStringRequireUtf8();
                bitField0_ |= 0x00000002;
                break;
              } // case 18
              default: {
                if (!super.parseUnknownField(input, extensionRegistry, tag)) {
                  done = true; // was an endgroup tag
                }
                break;
              } // default:
            } // switch (tag)
          } // while (!done)
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.unwrapIOException();
        } finally {
          onChanged();
        } // finally
        return this;
      }
      private int bitField0_;

      private java.util.List<com.google.geo.ugc.streetview.publish.v1.StreetViewPublishResources.Photo> photos_ =
        java.util.Collections.emptyList();
      private void ensurePhotosIsMutable() {
        if (!((bitField0_ & 0x00000001) != 0)) {
          photos_ = new java.util.ArrayList<com.google.geo.ugc.streetview.publish.v1.StreetViewPublishResources.Photo>(photos_);
          bitField0_ |= 0x00000001;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilderV3<
          com.google.geo.ugc.streetview.publish.v1.StreetViewPublishResources.Photo, com.google.geo.ugc.streetview.publish.v1.StreetViewPublishResources.Photo.Builder, com.google.geo.ugc.streetview.publish.v1.StreetViewPublishResources.PhotoOrBuilder> photosBuilder_;

      /**
       * <pre>
       * List of photos. The
       * [pageSize][google.streetview.publish.v1.ListPhotosRequest.page_size] field
       * in the request determines the number of items returned.
       * </pre>
       *
       * <code>repeated .google.streetview.publish.v1.Photo photos = 1;</code>
       */
      public java.util.List<com.google.geo.ugc.streetview.publish.v1.StreetViewPublishResources.Photo> getPhotosList() {
        if (photosBuilder_ == null) {
          return java.util.Collections.unmodifiableList(photos_);
        } else {
          return photosBuilder_.getMessageList();
        }
      }
      /**
       * <pre>
       * List of photos. The
       * [pageSize][google.streetview.publish.v1.ListPhotosRequest.page_size] field
       * in the request determines the number of items returned.
       * </pre>
       *
       * <code>repeated .google.streetview.publish.v1.Photo photos = 1;</code>
       */
      public int getPhotosCount() {
        if (photosBuilder_ == null) {
          return photos_.size();
        } else {
          return photosBuilder_.getCount();
        }
      }
      /**
       * <pre>
       * List of photos. The
       * [pageSize][google.streetview.publish.v1.ListPhotosRequest.page_size] field
       * in the request determines the number of items returned.
       * </pre>
       *
       * <code>repeated .google.streetview.publish.v1.Photo photos = 1;</code>
       */
      public com.google.geo.ugc.streetview.publish.v1.StreetViewPublishResources.Photo getPhotos(int index) {
        if (photosBuilder_ == null) {
          return photos_.get(index);
        } else {
          return photosBuilder_.getMessage(index);
        }
      }
      /**
       * <pre>
       * List of photos. The
       * [pageSize][google.streetview.publish.v1.ListPhotosRequest.page_size] field
       * in the request determines the number of items returned.
       * </pre>
       *
       * <code>repeated .google.streetview.publish.v1.Photo photos = 1;</code>
       */
      public Builder setPhotos(
          int index, com.google.geo.ugc.streetview.publish.v1.StreetViewPublishResources.Photo value) {
        if (photosBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensurePhotosIsMutable();
          photos_.set(index, value);
          onChanged();
        } else {
          photosBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <pre>
       * List of photos. The
       * [pageSize][google.streetview.publish.v1.ListPhotosRequest.page_size] field
       * in the request determines the number of items returned.
       * </pre>
       *
       * <code>repeated .google.streetview.publish.v1.Photo photos = 1;</code>
       */
      public Builder setPhotos(
          int index, com.google.geo.ugc.streetview.publish.v1.StreetViewPublishResources.Photo.Builder builderForValue) {
        if (photosBuilder_ == null) {
          ensurePhotosIsMutable();
          photos_.set(index, builderForValue.build());
          onChanged();
        } else {
          photosBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       * List of photos. The
       * [pageSize][google.streetview.publish.v1.ListPhotosRequest.page_size] field
       * in the request determines the number of items returned.
       * </pre>
       *
       * <code>repeated .google.streetview.publish.v1.Photo photos = 1;</code>
       */
      public Builder addPhotos(com.google.geo.ugc.streetview.publish.v1.StreetViewPublishResources.Photo value) {
        if (photosBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensurePhotosIsMutable();
          photos_.add(value);
          onChanged();
        } else {
          photosBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <pre>
       * List of photos. The
       * [pageSize][google.streetview.publish.v1.ListPhotosRequest.page_size] field
       * in the request determines the number of items returned.
       * </pre>
       *
       * <code>repeated .google.streetview.publish.v1.Photo photos = 1;</code>
       */
      public Builder addPhotos(
          int index, com.google.geo.ugc.streetview.publish.v1.StreetViewPublishResources.Photo value) {
        if (photosBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensurePhotosIsMutable();
          photos_.add(index, value);
          onChanged();
        } else {
          photosBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <pre>
       * List of photos. The
       * [pageSize][google.streetview.publish.v1.ListPhotosRequest.page_size] field
       * in the request determines the number of items returned.
       * </pre>
       *
       * <code>repeated .google.streetview.publish.v1.Photo photos = 1;</code>
       */
      public Builder addPhotos(
          com.google.geo.ugc.streetview.publish.v1.StreetViewPublishResources.Photo.Builder builderForValue) {
        if (photosBuilder_ == null) {
          ensurePhotosIsMutable();
          photos_.add(builderForValue.build());
          onChanged();
        } else {
          photosBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       * List of photos. The
       * [pageSize][google.streetview.publish.v1.ListPhotosRequest.page_size] field
       * in the request determines the number of items returned.
       * </pre>
       *
       * <code>repeated .google.streetview.publish.v1.Photo photos = 1;</code>
       */
      public Builder addPhotos(
          int index, com.google.geo.ugc.streetview.publish.v1.StreetViewPublishResources.Photo.Builder builderForValue) {
        if (photosBuilder_ == null) {
          ensurePhotosIsMutable();
          photos_.add(index, builderForValue.build());
          onChanged();
        } else {
          photosBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       * List of photos. The
       * [pageSize][google.streetview.publish.v1.ListPhotosRequest.page_size] field
       * in the request determines the number of items returned.
       * </pre>
       *
       * <code>repeated .google.streetview.publish.v1.Photo photos = 1;</code>
       */
      public Builder addAllPhotos(
          java.lang.Iterable<? extends com.google.geo.ugc.streetview.publish.v1.StreetViewPublishResources.Photo> values) {
        if (photosBuilder_ == null) {
          ensurePhotosIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
              values, photos_);
          onChanged();
        } else {
          photosBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <pre>
       * List of photos. The
       * [pageSize][google.streetview.publish.v1.ListPhotosRequest.page_size] field
       * in the request determines the number of items returned.
       * </pre>
       *
       * <code>repeated .google.streetview.publish.v1.Photo photos = 1;</code>
       */
      public Builder clearPhotos() {
        if (photosBuilder_ == null) {
          photos_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000001);
          onChanged();
        } else {
          photosBuilder_.clear();
        }
        return this;
      }
      /**
       * <pre>
       * List of photos. The
       * [pageSize][google.streetview.publish.v1.ListPhotosRequest.page_size] field
       * in the request determines the number of items returned.
       * </pre>
       *
       * <code>repeated .google.streetview.publish.v1.Photo photos = 1;</code>
       */
      public Builder removePhotos(int index) {
        if (photosBuilder_ == null) {
          ensurePhotosIsMutable();
          photos_.remove(index);
          onChanged();
        } else {
          photosBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <pre>
       * List of photos. The
       * [pageSize][google.streetview.publish.v1.ListPhotosRequest.page_size] field
       * in the request determines the number of items returned.
       * </pre>
       *
       * <code>repeated .google.streetview.publish.v1.Photo photos = 1;</code>
       */
      public com.google.geo.ugc.streetview.publish.v1.StreetViewPublishResources.Photo.Builder getPhotosBuilder(
          int index) {
        return getPhotosFieldBuilder().getBuilder(index);
      }
      /**
       * <pre>
       * List of photos. The
       * [pageSize][google.streetview.publish.v1.ListPhotosRequest.page_size] field
       * in the request determines the number of items returned.
       * </pre>
       *
       * <code>repeated .google.streetview.publish.v1.Photo photos = 1;</code>
       */
      public com.google.geo.ugc.streetview.publish.v1.StreetViewPublishResources.PhotoOrBuilder getPhotosOrBuilder(
          int index) {
        if (photosBuilder_ == null) {
          return photos_.get(index);  } else {
          return photosBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <pre>
       * List of photos. The
       * [pageSize][google.streetview.publish.v1.ListPhotosRequest.page_size] field
       * in the request determines the number of items returned.
       * </pre>
       *
       * <code>repeated .google.streetview.publish.v1.Photo photos = 1;</code>
       */
      public java.util.List<? extends com.google.geo.ugc.streetview.publish.v1.StreetViewPublishResources.PhotoOrBuilder> 
           getPhotosOrBuilderList() {
        if (photosBuilder_ != null) {
          return photosBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(photos_);
        }
      }
      /**
       * <pre>
       * List of photos. The
       * [pageSize][google.streetview.publish.v1.ListPhotosRequest.page_size] field
       * in the request determines the number of items returned.
       * </pre>
       *
       * <code>repeated .google.streetview.publish.v1.Photo photos = 1;</code>
       */
      public com.google.geo.ugc.streetview.publish.v1.StreetViewPublishResources.Photo.Builder addPhotosBuilder() {
        return getPhotosFieldBuilder().addBuilder(
            com.google.geo.ugc.streetview.publish.v1.StreetViewPublishResources.Photo.getDefaultInstance());
      }
      /**
       * <pre>
       * List of photos. The
       * [pageSize][google.streetview.publish.v1.ListPhotosRequest.page_size] field
       * in the request determines the number of items returned.
       * </pre>
       *
       * <code>repeated .google.streetview.publish.v1.Photo photos = 1;</code>
       */
      public com.google.geo.ugc.streetview.publish.v1.StreetViewPublishResources.Photo.Builder addPhotosBuilder(
          int index) {
        return getPhotosFieldBuilder().addBuilder(
            index, com.google.geo.ugc.streetview.publish.v1.StreetViewPublishResources.Photo.getDefaultInstance());
      }
      /**
       * <pre>
       * List of photos. The
       * [pageSize][google.streetview.publish.v1.ListPhotosRequest.page_size] field
       * in the request determines the number of items returned.
       * </pre>
       *
       * <code>repeated .google.streetview.publish.v1.Photo photos = 1;</code>
       */
      public java.util.List<com.google.geo.ugc.streetview.publish.v1.StreetViewPublishResources.Photo.Builder> 
           getPhotosBuilderList() {
        return getPhotosFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilderV3<
          com.google.geo.ugc.streetview.publish.v1.StreetViewPublishResources.Photo, com.google.geo.ugc.streetview.publish.v1.StreetViewPublishResources.Photo.Builder, com.google.geo.ugc.streetview.publish.v1.StreetViewPublishResources.PhotoOrBuilder> 
          getPhotosFieldBuilder() {
        if (photosBuilder_ == null) {
          photosBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<
              com.google.geo.ugc.streetview.publish.v1.StreetViewPublishResources.Photo, com.google.geo.ugc.streetview.publish.v1.StreetViewPublishResources.Photo.Builder, com.google.geo.ugc.streetview.publish.v1.StreetViewPublishResources.PhotoOrBuilder>(
                  photos_,
                  ((bitField0_ & 0x00000001) != 0),
                  getParentForChildren(),
                  isClean());
          photos_ = null;
        }
        return photosBuilder_;
      }

      private java.lang.Object nextPageToken_ = "";
      /**
       * <pre>
       * Token to retrieve the next page of results, or empty if there are no more
       * results in the list.
       * </pre>
       *
       * <code>string next_page_token = 2;</code>
       * @return The nextPageToken.
       */
      public java.lang.String getNextPageToken() {
        java.lang.Object ref = nextPageToken_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          nextPageToken_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <pre>
       * Token to retrieve the next page of results, or empty if there are no more
       * results in the list.
       * </pre>
       *
       * <code>string next_page_token = 2;</code>
       * @return The bytes for nextPageToken.
       */
      public com.google.protobuf.ByteString
          getNextPageTokenBytes() {
        java.lang.Object ref = nextPageToken_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          nextPageToken_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       * Token to retrieve the next page of results, or empty if there are no more
       * results in the list.
       * </pre>
       *
       * <code>string next_page_token = 2;</code>
       * @param value The nextPageToken to set.
       * @return This builder for chaining.
       */
      public Builder setNextPageToken(
          java.lang.String value) {
        if (value == null) { throw new NullPointerException(); }
        nextPageToken_ = value;
        bitField0_ |= 0x00000002;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Token to retrieve the next page of results, or empty if there are no more
       * results in the list.
       * </pre>
       *
       * <code>string next_page_token = 2;</code>
       * @return This builder for chaining.
       */
      public Builder clearNextPageToken() {
        nextPageToken_ = getDefaultInstance().getNextPageToken();
        bitField0_ = (bitField0_ & ~0x00000002);
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Token to retrieve the next page of results, or empty if there are no more
       * results in the list.
       * </pre>
       *
       * <code>string next_page_token = 2;</code>
       * @param value The bytes for nextPageToken to set.
       * @return This builder for chaining.
       */
      public Builder setNextPageTokenBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) { throw new NullPointerException(); }
        checkByteStringIsUtf8(value);
        nextPageToken_ = value;
        bitField0_ |= 0x00000002;
        onChanged();
        return this;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:google.streetview.publish.v1.ListPhotosResponse)
    }

    // @@protoc_insertion_point(class_scope:google.streetview.publish.v1.ListPhotosResponse)
    private static final com.google.geo.ugc.streetview.publish.v1.StreetViewPublishRpcMessages.ListPhotosResponse DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new com.google.geo.ugc.streetview.publish.v1.StreetViewPublishRpcMessages.ListPhotosResponse();
    }

    public static com.google.geo.ugc.streetview.publish.v1.StreetViewPublishRpcMessages.ListPhotosResponse getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<ListPhotosResponse>
        PARSER = new com.google.protobuf.AbstractParser<ListPhotosResponse>() {
      @java.lang.Override
      public ListPhotosResponse parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        Builder builder = newBuilder();
        try {
          builder.mergeFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.setUnfinishedMessage(builder.buildPartial());
        } catch (com.google.protobuf.UninitializedMessageException e) {
          throw e.asInvalidProtocolBufferException().setUnfinishedMessage(builder.buildPartial());
        } catch (java.io.IOException e) {
          throw new com.google.protobuf.InvalidProtocolBufferException(e)
              .setUnfinishedMessage(builder.buildPartial());
        }
        return builder.buildPartial();
      }
    };

    public static com.google.protobuf.Parser<ListPhotosResponse> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<ListPhotosResponse> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.geo.ugc.streetview.publish.v1.StreetViewPublishRpcMessages.ListPhotosResponse getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface UpdatePhotoRequestOrBuilder extends
      // @@protoc_insertion_point(interface_extends:google.streetview.publish.v1.UpdatePhotoRequest)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <pre>
     * Required. [Photo][google.streetview.publish.v1.Photo] object containing the
     * new metadata.
     * </pre>
     *
     * <code>.google.streetview.publish.v1.Photo photo = 1 [(.google.api.field_behavior) = REQUIRED];</code>
     * @return Whether the photo field is set.
     */
    boolean hasPhoto();
    /**
     * <pre>
     * Required. [Photo][google.streetview.publish.v1.Photo] object containing the
     * new metadata.
     * </pre>
     *
     * <code>.google.streetview.publish.v1.Photo photo = 1 [(.google.api.field_behavior) = REQUIRED];</code>
     * @return The photo.
     */
    com.google.geo.ugc.streetview.publish.v1.StreetViewPublishResources.Photo getPhoto();
    /**
     * <pre>
     * Required. [Photo][google.streetview.publish.v1.Photo] object containing the
     * new metadata.
     * </pre>
     *
     * <code>.google.streetview.publish.v1.Photo photo = 1 [(.google.api.field_behavior) = REQUIRED];</code>
     */
    com.google.geo.ugc.streetview.publish.v1.StreetViewPublishResources.PhotoOrBuilder getPhotoOrBuilder();

    /**
     * <pre>
     * Required. Mask that identifies fields on the photo metadata to update.
     * If not present, the old [Photo][google.streetview.publish.v1.Photo]
     * metadata is entirely replaced with the
     * new [Photo][google.streetview.publish.v1.Photo] metadata in this request.
     * The update fails if invalid fields are specified. Multiple fields can be
     * specified in a comma-delimited list.
     * The following fields are valid:
     * * `pose.heading`
     * * `pose.latLngPair`
     * * `pose.pitch`
     * * `pose.roll`
     * * `pose.level`
     * * `pose.altitude`
     * * `connections`
     * * `places`
     * &gt; Note: When
     * [updateMask][google.streetview.publish.v1.UpdatePhotoRequest.update_mask]
     * contains repeated fields, the entire set of repeated values get replaced
     * with the new contents. For example, if
     * [updateMask][google.streetview.publish.v1.UpdatePhotoRequest.update_mask]
     * contains `connections` and `UpdatePhotoRequest.photo.connections` is empty,
     * all connections are removed.
     * </pre>
     *
     * <code>.google.protobuf.FieldMask update_mask = 2 [(.google.api.field_behavior) = REQUIRED];</code>
     * @return Whether the updateMask field is set.
     */
    boolean hasUpdateMask();
    /**
     * <pre>
     * Required. Mask that identifies fields on the photo metadata to update.
     * If not present, the old [Photo][google.streetview.publish.v1.Photo]
     * metadata is entirely replaced with the
     * new [Photo][google.streetview.publish.v1.Photo] metadata in this request.
     * The update fails if invalid fields are specified. Multiple fields can be
     * specified in a comma-delimited list.
     * The following fields are valid:
     * * `pose.heading`
     * * `pose.latLngPair`
     * * `pose.pitch`
     * * `pose.roll`
     * * `pose.level`
     * * `pose.altitude`
     * * `connections`
     * * `places`
     * &gt; Note: When
     * [updateMask][google.streetview.publish.v1.UpdatePhotoRequest.update_mask]
     * contains repeated fields, the entire set of repeated values get replaced
     * with the new contents. For example, if
     * [updateMask][google.streetview.publish.v1.UpdatePhotoRequest.update_mask]
     * contains `connections` and `UpdatePhotoRequest.photo.connections` is empty,
     * all connections are removed.
     * </pre>
     *
     * <code>.google.protobuf.FieldMask update_mask = 2 [(.google.api.field_behavior) = REQUIRED];</code>
     * @return The updateMask.
     */
    com.google.protobuf.FieldMask getUpdateMask();
    /**
     * <pre>
     * Required. Mask that identifies fields on the photo metadata to update.
     * If not present, the old [Photo][google.streetview.publish.v1.Photo]
     * metadata is entirely replaced with the
     * new [Photo][google.streetview.publish.v1.Photo] metadata in this request.
     * The update fails if invalid fields are specified. Multiple fields can be
     * specified in a comma-delimited list.
     * The following fields are valid:
     * * `pose.heading`
     * * `pose.latLngPair`
     * * `pose.pitch`
     * * `pose.roll`
     * * `pose.level`
     * * `pose.altitude`
     * * `connections`
     * * `places`
     * &gt; Note: When
     * [updateMask][google.streetview.publish.v1.UpdatePhotoRequest.update_mask]
     * contains repeated fields, the entire set of repeated values get replaced
     * with the new contents. For example, if
     * [updateMask][google.streetview.publish.v1.UpdatePhotoRequest.update_mask]
     * contains `connections` and `UpdatePhotoRequest.photo.connections` is empty,
     * all connections are removed.
     * </pre>
     *
     * <code>.google.protobuf.FieldMask update_mask = 2 [(.google.api.field_behavior) = REQUIRED];</code>
     */
    com.google.protobuf.FieldMaskOrBuilder getUpdateMaskOrBuilder();
  }
  /**
   * <pre>
   * Request to update the metadata of a
   * [Photo][google.streetview.publish.v1.Photo]. Updating the pixels of a photo
   * is not supported.
   * </pre>
   *
   * Protobuf type {@code google.streetview.publish.v1.UpdatePhotoRequest}
   */
  public static final class UpdatePhotoRequest extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:google.streetview.publish.v1.UpdatePhotoRequest)
      UpdatePhotoRequestOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use UpdatePhotoRequest.newBuilder() to construct.
    private UpdatePhotoRequest(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private UpdatePhotoRequest() {
    }

    @java.lang.Override
    @SuppressWarnings({"unused"})
    protected java.lang.Object newInstance(
        UnusedPrivateParameter unused) {
      return new UpdatePhotoRequest();
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.google.geo.ugc.streetview.publish.v1.StreetViewPublishRpcMessages.internal_static_google_streetview_publish_v1_UpdatePhotoRequest_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.google.geo.ugc.streetview.publish.v1.StreetViewPublishRpcMessages.internal_static_google_streetview_publish_v1_UpdatePhotoRequest_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.google.geo.ugc.streetview.publish.v1.StreetViewPublishRpcMessages.UpdatePhotoRequest.class, com.google.geo.ugc.streetview.publish.v1.StreetViewPublishRpcMessages.UpdatePhotoRequest.Builder.class);
    }

    public static final int PHOTO_FIELD_NUMBER = 1;
    private com.google.geo.ugc.streetview.publish.v1.StreetViewPublishResources.Photo photo_;
    /**
     * <pre>
     * Required. [Photo][google.streetview.publish.v1.Photo] object containing the
     * new metadata.
     * </pre>
     *
     * <code>.google.streetview.publish.v1.Photo photo = 1 [(.google.api.field_behavior) = REQUIRED];</code>
     * @return Whether the photo field is set.
     */
    @java.lang.Override
    public boolean hasPhoto() {
      return photo_ != null;
    }
    /**
     * <pre>
     * Required. [Photo][google.streetview.publish.v1.Photo] object containing the
     * new metadata.
     * </pre>
     *
     * <code>.google.streetview.publish.v1.Photo photo = 1 [(.google.api.field_behavior) = REQUIRED];</code>
     * @return The photo.
     */
    @java.lang.Override
    public com.google.geo.ugc.streetview.publish.v1.StreetViewPublishResources.Photo getPhoto() {
      return photo_ == null ? com.google.geo.ugc.streetview.publish.v1.StreetViewPublishResources.Photo.getDefaultInstance() : photo_;
    }
    /**
     * <pre>
     * Required. [Photo][google.streetview.publish.v1.Photo] object containing the
     * new metadata.
     * </pre>
     *
     * <code>.google.streetview.publish.v1.Photo photo = 1 [(.google.api.field_behavior) = REQUIRED];</code>
     */
    @java.lang.Override
    public com.google.geo.ugc.streetview.publish.v1.StreetViewPublishResources.PhotoOrBuilder getPhotoOrBuilder() {
      return photo_ == null ? com.google.geo.ugc.streetview.publish.v1.StreetViewPublishResources.Photo.getDefaultInstance() : photo_;
    }

    public static final int UPDATE_MASK_FIELD_NUMBER = 2;
    private com.google.protobuf.FieldMask updateMask_;
    /**
     * <pre>
     * Required. Mask that identifies fields on the photo metadata to update.
     * If not present, the old [Photo][google.streetview.publish.v1.Photo]
     * metadata is entirely replaced with the
     * new [Photo][google.streetview.publish.v1.Photo] metadata in this request.
     * The update fails if invalid fields are specified. Multiple fields can be
     * specified in a comma-delimited list.
     * The following fields are valid:
     * * `pose.heading`
     * * `pose.latLngPair`
     * * `pose.pitch`
     * * `pose.roll`
     * * `pose.level`
     * * `pose.altitude`
     * * `connections`
     * * `places`
     * &gt; Note: When
     * [updateMask][google.streetview.publish.v1.UpdatePhotoRequest.update_mask]
     * contains repeated fields, the entire set of repeated values get replaced
     * with the new contents. For example, if
     * [updateMask][google.streetview.publish.v1.UpdatePhotoRequest.update_mask]
     * contains `connections` and `UpdatePhotoRequest.photo.connections` is empty,
     * all connections are removed.
     * </pre>
     *
     * <code>.google.protobuf.FieldMask update_mask = 2 [(.google.api.field_behavior) = REQUIRED];</code>
     * @return Whether the updateMask field is set.
     */
    @java.lang.Override
    public boolean hasUpdateMask() {
      return updateMask_ != null;
    }
    /**
     * <pre>
     * Required. Mask that identifies fields on the photo metadata to update.
     * If not present, the old [Photo][google.streetview.publish.v1.Photo]
     * metadata is entirely replaced with the
     * new [Photo][google.streetview.publish.v1.Photo] metadata in this request.
     * The update fails if invalid fields are specified. Multiple fields can be
     * specified in a comma-delimited list.
     * The following fields are valid:
     * * `pose.heading`
     * * `pose.latLngPair`
     * * `pose.pitch`
     * * `pose.roll`
     * * `pose.level`
     * * `pose.altitude`
     * * `connections`
     * * `places`
     * &gt; Note: When
     * [updateMask][google.streetview.publish.v1.UpdatePhotoRequest.update_mask]
     * contains repeated fields, the entire set of repeated values get replaced
     * with the new contents. For example, if
     * [updateMask][google.streetview.publish.v1.UpdatePhotoRequest.update_mask]
     * contains `connections` and `UpdatePhotoRequest.photo.connections` is empty,
     * all connections are removed.
     * </pre>
     *
     * <code>.google.protobuf.FieldMask update_mask = 2 [(.google.api.field_behavior) = REQUIRED];</code>
     * @return The updateMask.
     */
    @java.lang.Override
    public com.google.protobuf.FieldMask getUpdateMask() {
      return updateMask_ == null ? com.google.protobuf.FieldMask.getDefaultInstance() : updateMask_;
    }
    /**
     * <pre>
     * Required. Mask that identifies fields on the photo metadata to update.
     * If not present, the old [Photo][google.streetview.publish.v1.Photo]
     * metadata is entirely replaced with the
     * new [Photo][google.streetview.publish.v1.Photo] metadata in this request.
     * The update fails if invalid fields are specified. Multiple fields can be
     * specified in a comma-delimited list.
     * The following fields are valid:
     * * `pose.heading`
     * * `pose.latLngPair`
     * * `pose.pitch`
     * * `pose.roll`
     * * `pose.level`
     * * `pose.altitude`
     * * `connections`
     * * `places`
     * &gt; Note: When
     * [updateMask][google.streetview.publish.v1.UpdatePhotoRequest.update_mask]
     * contains repeated fields, the entire set of repeated values get replaced
     * with the new contents. For example, if
     * [updateMask][google.streetview.publish.v1.UpdatePhotoRequest.update_mask]
     * contains `connections` and `UpdatePhotoRequest.photo.connections` is empty,
     * all connections are removed.
     * </pre>
     *
     * <code>.google.protobuf.FieldMask update_mask = 2 [(.google.api.field_behavior) = REQUIRED];</code>
     */
    @java.lang.Override
    public com.google.protobuf.FieldMaskOrBuilder getUpdateMaskOrBuilder() {
      return updateMask_ == null ? com.google.protobuf.FieldMask.getDefaultInstance() : updateMask_;
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (photo_ != null) {
        output.writeMessage(1, getPhoto());
      }
      if (updateMask_ != null) {
        output.writeMessage(2, getUpdateMask());
      }
      getUnknownFields().writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (photo_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, getPhoto());
      }
      if (updateMask_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(2, getUpdateMask());
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof com.google.geo.ugc.streetview.publish.v1.StreetViewPublishRpcMessages.UpdatePhotoRequest)) {
        return super.equals(obj);
      }
      com.google.geo.ugc.streetview.publish.v1.StreetViewPublishRpcMessages.UpdatePhotoRequest other = (com.google.geo.ugc.streetview.publish.v1.StreetViewPublishRpcMessages.UpdatePhotoRequest) obj;

      if (hasPhoto() != other.hasPhoto()) return false;
      if (hasPhoto()) {
        if (!getPhoto()
            .equals(other.getPhoto())) return false;
      }
      if (hasUpdateMask() != other.hasUpdateMask()) return false;
      if (hasUpdateMask()) {
        if (!getUpdateMask()
            .equals(other.getUpdateMask())) return false;
      }
      if (!getUnknownFields().equals(other.getUnknownFields())) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      if (hasPhoto()) {
        hash = (37 * hash) + PHOTO_FIELD_NUMBER;
        hash = (53 * hash) + getPhoto().hashCode();
      }
      if (hasUpdateMask()) {
        hash = (37 * hash) + UPDATE_MASK_FIELD_NUMBER;
        hash = (53 * hash) + getUpdateMask().hashCode();
      }
      hash = (29 * hash) + getUnknownFields().hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static com.google.geo.ugc.streetview.publish.v1.StreetViewPublishRpcMessages.UpdatePhotoRequest parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.google.geo.ugc.streetview.publish.v1.StreetViewPublishRpcMessages.UpdatePhotoRequest parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.google.geo.ugc.streetview.publish.v1.StreetViewPublishRpcMessages.UpdatePhotoRequest parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.google.geo.ugc.streetview.publish.v1.StreetViewPublishRpcMessages.UpdatePhotoRequest parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.google.geo.ugc.streetview.publish.v1.StreetViewPublishRpcMessages.UpdatePhotoRequest parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.google.geo.ugc.streetview.publish.v1.StreetViewPublishRpcMessages.UpdatePhotoRequest parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.google.geo.ugc.streetview.publish.v1.StreetViewPublishRpcMessages.UpdatePhotoRequest parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static com.google.geo.ugc.streetview.publish.v1.StreetViewPublishRpcMessages.UpdatePhotoRequest parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static com.google.geo.ugc.streetview.publish.v1.StreetViewPublishRpcMessages.UpdatePhotoRequest parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static com.google.geo.ugc.streetview.publish.v1.StreetViewPublishRpcMessages.UpdatePhotoRequest parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static com.google.geo.ugc.streetview.publish.v1.StreetViewPublishRpcMessages.UpdatePhotoRequest parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static com.google.geo.ugc.streetview.publish.v1.StreetViewPublishRpcMessages.UpdatePhotoRequest parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(com.google.geo.ugc.streetview.publish.v1.StreetViewPublishRpcMessages.UpdatePhotoRequest prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * <pre>
     * Request to update the metadata of a
     * [Photo][google.streetview.publish.v1.Photo]. Updating the pixels of a photo
     * is not supported.
     * </pre>
     *
     * Protobuf type {@code google.streetview.publish.v1.UpdatePhotoRequest}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:google.streetview.publish.v1.UpdatePhotoRequest)
        com.google.geo.ugc.streetview.publish.v1.StreetViewPublishRpcMessages.UpdatePhotoRequestOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return com.google.geo.ugc.streetview.publish.v1.StreetViewPublishRpcMessages.internal_static_google_streetview_publish_v1_UpdatePhotoRequest_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return com.google.geo.ugc.streetview.publish.v1.StreetViewPublishRpcMessages.internal_static_google_streetview_publish_v1_UpdatePhotoRequest_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                com.google.geo.ugc.streetview.publish.v1.StreetViewPublishRpcMessages.UpdatePhotoRequest.class, com.google.geo.ugc.streetview.publish.v1.StreetViewPublishRpcMessages.UpdatePhotoRequest.Builder.class);
      }

      // Construct using com.google.geo.ugc.streetview.publish.v1.StreetViewPublishRpcMessages.UpdatePhotoRequest.newBuilder()
      private Builder() {

      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);

      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        bitField0_ = 0;
        photo_ = null;
        if (photoBuilder_ != null) {
          photoBuilder_.dispose();
          photoBuilder_ = null;
        }
        updateMask_ = null;
        if (updateMaskBuilder_ != null) {
          updateMaskBuilder_.dispose();
          updateMaskBuilder_ = null;
        }
        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.google.geo.ugc.streetview.publish.v1.StreetViewPublishRpcMessages.internal_static_google_streetview_publish_v1_UpdatePhotoRequest_descriptor;
      }

      @java.lang.Override
      public com.google.geo.ugc.streetview.publish.v1.StreetViewPublishRpcMessages.UpdatePhotoRequest getDefaultInstanceForType() {
        return com.google.geo.ugc.streetview.publish.v1.StreetViewPublishRpcMessages.UpdatePhotoRequest.getDefaultInstance();
      }

      @java.lang.Override
      public com.google.geo.ugc.streetview.publish.v1.StreetViewPublishRpcMessages.UpdatePhotoRequest build() {
        com.google.geo.ugc.streetview.publish.v1.StreetViewPublishRpcMessages.UpdatePhotoRequest result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public com.google.geo.ugc.streetview.publish.v1.StreetViewPublishRpcMessages.UpdatePhotoRequest buildPartial() {
        com.google.geo.ugc.streetview.publish.v1.StreetViewPublishRpcMessages.UpdatePhotoRequest result = new com.google.geo.ugc.streetview.publish.v1.StreetViewPublishRpcMessages.UpdatePhotoRequest(this);
        if (bitField0_ != 0) { buildPartial0(result); }
        onBuilt();
        return result;
      }

      private void buildPartial0(com.google.geo.ugc.streetview.publish.v1.StreetViewPublishRpcMessages.UpdatePhotoRequest result) {
        int from_bitField0_ = bitField0_;
        if (((from_bitField0_ & 0x00000001) != 0)) {
          result.photo_ = photoBuilder_ == null
              ? photo_
              : photoBuilder_.build();
        }
        if (((from_bitField0_ & 0x00000002) != 0)) {
          result.updateMask_ = updateMaskBuilder_ == null
              ? updateMask_
              : updateMaskBuilder_.build();
        }
      }

      @java.lang.Override
      public Builder clone() {
        return super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.google.geo.ugc.streetview.publish.v1.StreetViewPublishRpcMessages.UpdatePhotoRequest) {
          return mergeFrom((com.google.geo.ugc.streetview.publish.v1.StreetViewPublishRpcMessages.UpdatePhotoRequest)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(com.google.geo.ugc.streetview.publish.v1.StreetViewPublishRpcMessages.UpdatePhotoRequest other) {
        if (other == com.google.geo.ugc.streetview.publish.v1.StreetViewPublishRpcMessages.UpdatePhotoRequest.getDefaultInstance()) return this;
        if (other.hasPhoto()) {
          mergePhoto(other.getPhoto());
        }
        if (other.hasUpdateMask()) {
          mergeUpdateMask(other.getUpdateMask());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        if (extensionRegistry == null) {
          throw new java.lang.NullPointerException();
        }
        try {
          boolean done = false;
          while (!done) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                done = true;
                break;
              case 10: {
                input.readMessage(
                    getPhotoFieldBuilder().getBuilder(),
                    extensionRegistry);
                bitField0_ |= 0x00000001;
                break;
              } // case 10
              case 18: {
                input.readMessage(
                    getUpdateMaskFieldBuilder().getBuilder(),
                    extensionRegistry);
                bitField0_ |= 0x00000002;
                break;
              } // case 18
              default: {
                if (!super.parseUnknownField(input, extensionRegistry, tag)) {
                  done = true; // was an endgroup tag
                }
                break;
              } // default:
            } // switch (tag)
          } // while (!done)
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.unwrapIOException();
        } finally {
          onChanged();
        } // finally
        return this;
      }
      private int bitField0_;

      private com.google.geo.ugc.streetview.publish.v1.StreetViewPublishResources.Photo photo_;
      private com.google.protobuf.SingleFieldBuilderV3<
          com.google.geo.ugc.streetview.publish.v1.StreetViewPublishResources.Photo, com.google.geo.ugc.streetview.publish.v1.StreetViewPublishResources.Photo.Builder, com.google.geo.ugc.streetview.publish.v1.StreetViewPublishResources.PhotoOrBuilder> photoBuilder_;
      /**
       * <pre>
       * Required. [Photo][google.streetview.publish.v1.Photo] object containing the
       * new metadata.
       * </pre>
       *
       * <code>.google.streetview.publish.v1.Photo photo = 1 [(.google.api.field_behavior) = REQUIRED];</code>
       * @return Whether the photo field is set.
       */
      public boolean hasPhoto() {
        return ((bitField0_ & 0x00000001) != 0);
      }
      /**
       * <pre>
       * Required. [Photo][google.streetview.publish.v1.Photo] object containing the
       * new metadata.
       * </pre>
       *
       * <code>.google.streetview.publish.v1.Photo photo = 1 [(.google.api.field_behavior) = REQUIRED];</code>
       * @return The photo.
       */
      public com.google.geo.ugc.streetview.publish.v1.StreetViewPublishResources.Photo getPhoto() {
        if (photoBuilder_ == null) {
          return photo_ == null ? com.google.geo.ugc.streetview.publish.v1.StreetViewPublishResources.Photo.getDefaultInstance() : photo_;
        } else {
          return photoBuilder_.getMessage();
        }
      }
      /**
       * <pre>
       * Required. [Photo][google.streetview.publish.v1.Photo] object containing the
       * new metadata.
       * </pre>
       *
       * <code>.google.streetview.publish.v1.Photo photo = 1 [(.google.api.field_behavior) = REQUIRED];</code>
       */
      public Builder setPhoto(com.google.geo.ugc.streetview.publish.v1.StreetViewPublishResources.Photo value) {
        if (photoBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          photo_ = value;
        } else {
          photoBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000001;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Required. [Photo][google.streetview.publish.v1.Photo] object containing the
       * new metadata.
       * </pre>
       *
       * <code>.google.streetview.publish.v1.Photo photo = 1 [(.google.api.field_behavior) = REQUIRED];</code>
       */
      public Builder setPhoto(
          com.google.geo.ugc.streetview.publish.v1.StreetViewPublishResources.Photo.Builder builderForValue) {
        if (photoBuilder_ == null) {
          photo_ = builderForValue.build();
        } else {
          photoBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000001;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Required. [Photo][google.streetview.publish.v1.Photo] object containing the
       * new metadata.
       * </pre>
       *
       * <code>.google.streetview.publish.v1.Photo photo = 1 [(.google.api.field_behavior) = REQUIRED];</code>
       */
      public Builder mergePhoto(com.google.geo.ugc.streetview.publish.v1.StreetViewPublishResources.Photo value) {
        if (photoBuilder_ == null) {
          if (((bitField0_ & 0x00000001) != 0) &&
            photo_ != null &&
            photo_ != com.google.geo.ugc.streetview.publish.v1.StreetViewPublishResources.Photo.getDefaultInstance()) {
            getPhotoBuilder().mergeFrom(value);
          } else {
            photo_ = value;
          }
        } else {
          photoBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x00000001;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Required. [Photo][google.streetview.publish.v1.Photo] object containing the
       * new metadata.
       * </pre>
       *
       * <code>.google.streetview.publish.v1.Photo photo = 1 [(.google.api.field_behavior) = REQUIRED];</code>
       */
      public Builder clearPhoto() {
        bitField0_ = (bitField0_ & ~0x00000001);
        photo_ = null;
        if (photoBuilder_ != null) {
          photoBuilder_.dispose();
          photoBuilder_ = null;
        }
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Required. [Photo][google.streetview.publish.v1.Photo] object containing the
       * new metadata.
       * </pre>
       *
       * <code>.google.streetview.publish.v1.Photo photo = 1 [(.google.api.field_behavior) = REQUIRED];</code>
       */
      public com.google.geo.ugc.streetview.publish.v1.StreetViewPublishResources.Photo.Builder getPhotoBuilder() {
        bitField0_ |= 0x00000001;
        onChanged();
        return getPhotoFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       * Required. [Photo][google.streetview.publish.v1.Photo] object containing the
       * new metadata.
       * </pre>
       *
       * <code>.google.streetview.publish.v1.Photo photo = 1 [(.google.api.field_behavior) = REQUIRED];</code>
       */
      public com.google.geo.ugc.streetview.publish.v1.StreetViewPublishResources.PhotoOrBuilder getPhotoOrBuilder() {
        if (photoBuilder_ != null) {
          return photoBuilder_.getMessageOrBuilder();
        } else {
          return photo_ == null ?
              com.google.geo.ugc.streetview.publish.v1.StreetViewPublishResources.Photo.getDefaultInstance() : photo_;
        }
      }
      /**
       * <pre>
       * Required. [Photo][google.streetview.publish.v1.Photo] object containing the
       * new metadata.
       * </pre>
       *
       * <code>.google.streetview.publish.v1.Photo photo = 1 [(.google.api.field_behavior) = REQUIRED];</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          com.google.geo.ugc.streetview.publish.v1.StreetViewPublishResources.Photo, com.google.geo.ugc.streetview.publish.v1.StreetViewPublishResources.Photo.Builder, com.google.geo.ugc.streetview.publish.v1.StreetViewPublishResources.PhotoOrBuilder> 
          getPhotoFieldBuilder() {
        if (photoBuilder_ == null) {
          photoBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              com.google.geo.ugc.streetview.publish.v1.StreetViewPublishResources.Photo, com.google.geo.ugc.streetview.publish.v1.StreetViewPublishResources.Photo.Builder, com.google.geo.ugc.streetview.publish.v1.StreetViewPublishResources.PhotoOrBuilder>(
                  getPhoto(),
                  getParentForChildren(),
                  isClean());
          photo_ = null;
        }
        return photoBuilder_;
      }

      private com.google.protobuf.FieldMask updateMask_;
      private com.google.protobuf.SingleFieldBuilderV3<
          com.google.protobuf.FieldMask, com.google.protobuf.FieldMask.Builder, com.google.protobuf.FieldMaskOrBuilder> updateMaskBuilder_;
      /**
       * <pre>
       * Required. Mask that identifies fields on the photo metadata to update.
       * If not present, the old [Photo][google.streetview.publish.v1.Photo]
       * metadata is entirely replaced with the
       * new [Photo][google.streetview.publish.v1.Photo] metadata in this request.
       * The update fails if invalid fields are specified. Multiple fields can be
       * specified in a comma-delimited list.
       * The following fields are valid:
       * * `pose.heading`
       * * `pose.latLngPair`
       * * `pose.pitch`
       * * `pose.roll`
       * * `pose.level`
       * * `pose.altitude`
       * * `connections`
       * * `places`
       * &gt; Note: When
       * [updateMask][google.streetview.publish.v1.UpdatePhotoRequest.update_mask]
       * contains repeated fields, the entire set of repeated values get replaced
       * with the new contents. For example, if
       * [updateMask][google.streetview.publish.v1.UpdatePhotoRequest.update_mask]
       * contains `connections` and `UpdatePhotoRequest.photo.connections` is empty,
       * all connections are removed.
       * </pre>
       *
       * <code>.google.protobuf.FieldMask update_mask = 2 [(.google.api.field_behavior) = REQUIRED];</code>
       * @return Whether the updateMask field is set.
       */
      public boolean hasUpdateMask() {
        return ((bitField0_ & 0x00000002) != 0);
      }
      /**
       * <pre>
       * Required. Mask that identifies fields on the photo metadata to update.
       * If not present, the old [Photo][google.streetview.publish.v1.Photo]
       * metadata is entirely replaced with the
       * new [Photo][google.streetview.publish.v1.Photo] metadata in this request.
       * The update fails if invalid fields are specified. Multiple fields can be
       * specified in a comma-delimited list.
       * The following fields are valid:
       * * `pose.heading`
       * * `pose.latLngPair`
       * * `pose.pitch`
       * * `pose.roll`
       * * `pose.level`
       * * `pose.altitude`
       * * `connections`
       * * `places`
       * &gt; Note: When
       * [updateMask][google.streetview.publish.v1.UpdatePhotoRequest.update_mask]
       * contains repeated fields, the entire set of repeated values get replaced
       * with the new contents. For example, if
       * [updateMask][google.streetview.publish.v1.UpdatePhotoRequest.update_mask]
       * contains `connections` and `UpdatePhotoRequest.photo.connections` is empty,
       * all connections are removed.
       * </pre>
       *
       * <code>.google.protobuf.FieldMask update_mask = 2 [(.google.api.field_behavior) = REQUIRED];</code>
       * @return The updateMask.
       */
      public com.google.protobuf.FieldMask getUpdateMask() {
        if (updateMaskBuilder_ == null) {
          return updateMask_ == null ? com.google.protobuf.FieldMask.getDefaultInstance() : updateMask_;
        } else {
          return updateMaskBuilder_.getMessage();
        }
      }
      /**
       * <pre>
       * Required. Mask that identifies fields on the photo metadata to update.
       * If not present, the old [Photo][google.streetview.publish.v1.Photo]
       * metadata is entirely replaced with the
       * new [Photo][google.streetview.publish.v1.Photo] metadata in this request.
       * The update fails if invalid fields are specified. Multiple fields can be
       * specified in a comma-delimited list.
       * The following fields are valid:
       * * `pose.heading`
       * * `pose.latLngPair`
       * * `pose.pitch`
       * * `pose.roll`
       * * `pose.level`
       * * `pose.altitude`
       * * `connections`
       * * `places`
       * &gt; Note: When
       * [updateMask][google.streetview.publish.v1.UpdatePhotoRequest.update_mask]
       * contains repeated fields, the entire set of repeated values get replaced
       * with the new contents. For example, if
       * [updateMask][google.streetview.publish.v1.UpdatePhotoRequest.update_mask]
       * contains `connections` and `UpdatePhotoRequest.photo.connections` is empty,
       * all connections are removed.
       * </pre>
       *
       * <code>.google.protobuf.FieldMask update_mask = 2 [(.google.api.field_behavior) = REQUIRED];</code>
       */
      public Builder setUpdateMask(com.google.protobuf.FieldMask value) {
        if (updateMaskBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          updateMask_ = value;
        } else {
          updateMaskBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000002;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Required. Mask that identifies fields on the photo metadata to update.
       * If not present, the old [Photo][google.streetview.publish.v1.Photo]
       * metadata is entirely replaced with the
       * new [Photo][google.streetview.publish.v1.Photo] metadata in this request.
       * The update fails if invalid fields are specified. Multiple fields can be
       * specified in a comma-delimited list.
       * The following fields are valid:
       * * `pose.heading`
       * * `pose.latLngPair`
       * * `pose.pitch`
       * * `pose.roll`
       * * `pose.level`
       * * `pose.altitude`
       * * `connections`
       * * `places`
       * &gt; Note: When
       * [updateMask][google.streetview.publish.v1.UpdatePhotoRequest.update_mask]
       * contains repeated fields, the entire set of repeated values get replaced
       * with the new contents. For example, if
       * [updateMask][google.streetview.publish.v1.UpdatePhotoRequest.update_mask]
       * contains `connections` and `UpdatePhotoRequest.photo.connections` is empty,
       * all connections are removed.
       * </pre>
       *
       * <code>.google.protobuf.FieldMask update_mask = 2 [(.google.api.field_behavior) = REQUIRED];</code>
       */
      public Builder setUpdateMask(
          com.google.protobuf.FieldMask.Builder builderForValue) {
        if (updateMaskBuilder_ == null) {
          updateMask_ = builderForValue.build();
        } else {
          updateMaskBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000002;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Required. Mask that identifies fields on the photo metadata to update.
       * If not present, the old [Photo][google.streetview.publish.v1.Photo]
       * metadata is entirely replaced with the
       * new [Photo][google.streetview.publish.v1.Photo] metadata in this request.
       * The update fails if invalid fields are specified. Multiple fields can be
       * specified in a comma-delimited list.
       * The following fields are valid:
       * * `pose.heading`
       * * `pose.latLngPair`
       * * `pose.pitch`
       * * `pose.roll`
       * * `pose.level`
       * * `pose.altitude`
       * * `connections`
       * * `places`
       * &gt; Note: When
       * [updateMask][google.streetview.publish.v1.UpdatePhotoRequest.update_mask]
       * contains repeated fields, the entire set of repeated values get replaced
       * with the new contents. For example, if
       * [updateMask][google.streetview.publish.v1.UpdatePhotoRequest.update_mask]
       * contains `connections` and `UpdatePhotoRequest.photo.connections` is empty,
       * all connections are removed.
       * </pre>
       *
       * <code>.google.protobuf.FieldMask update_mask = 2 [(.google.api.field_behavior) = REQUIRED];</code>
       */
      public Builder mergeUpdateMask(com.google.protobuf.FieldMask value) {
        if (updateMaskBuilder_ == null) {
          if (((bitField0_ & 0x00000002) != 0) &&
            updateMask_ != null &&
            updateMask_ != com.google.protobuf.FieldMask.getDefaultInstance()) {
            getUpdateMaskBuilder().mergeFrom(value);
          } else {
            updateMask_ = value;
          }
        } else {
          updateMaskBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x00000002;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Required. Mask that identifies fields on the photo metadata to update.
       * If not present, the old [Photo][google.streetview.publish.v1.Photo]
       * metadata is entirely replaced with the
       * new [Photo][google.streetview.publish.v1.Photo] metadata in this request.
       * The update fails if invalid fields are specified. Multiple fields can be
       * specified in a comma-delimited list.
       * The following fields are valid:
       * * `pose.heading`
       * * `pose.latLngPair`
       * * `pose.pitch`
       * * `pose.roll`
       * * `pose.level`
       * * `pose.altitude`
       * * `connections`
       * * `places`
       * &gt; Note: When
       * [updateMask][google.streetview.publish.v1.UpdatePhotoRequest.update_mask]
       * contains repeated fields, the entire set of repeated values get replaced
       * with the new contents. For example, if
       * [updateMask][google.streetview.publish.v1.UpdatePhotoRequest.update_mask]
       * contains `connections` and `UpdatePhotoRequest.photo.connections` is empty,
       * all connections are removed.
       * </pre>
       *
       * <code>.google.protobuf.FieldMask update_mask = 2 [(.google.api.field_behavior) = REQUIRED];</code>
       */
      public Builder clearUpdateMask() {
        bitField0_ = (bitField0_ & ~0x00000002);
        updateMask_ = null;
        if (updateMaskBuilder_ != null) {
          updateMaskBuilder_.dispose();
          updateMaskBuilder_ = null;
        }
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Required. Mask that identifies fields on the photo metadata to update.
       * If not present, the old [Photo][google.streetview.publish.v1.Photo]
       * metadata is entirely replaced with the
       * new [Photo][google.streetview.publish.v1.Photo] metadata in this request.
       * The update fails if invalid fields are specified. Multiple fields can be
       * specified in a comma-delimited list.
       * The following fields are valid:
       * * `pose.heading`
       * * `pose.latLngPair`
       * * `pose.pitch`
       * * `pose.roll`
       * * `pose.level`
       * * `pose.altitude`
       * * `connections`
       * * `places`
       * &gt; Note: When
       * [updateMask][google.streetview.publish.v1.UpdatePhotoRequest.update_mask]
       * contains repeated fields, the entire set of repeated values get replaced
       * with the new contents. For example, if
       * [updateMask][google.streetview.publish.v1.UpdatePhotoRequest.update_mask]
       * contains `connections` and `UpdatePhotoRequest.photo.connections` is empty,
       * all connections are removed.
       * </pre>
       *
       * <code>.google.protobuf.FieldMask update_mask = 2 [(.google.api.field_behavior) = REQUIRED];</code>
       */
      public com.google.protobuf.FieldMask.Builder getUpdateMaskBuilder() {
        bitField0_ |= 0x00000002;
        onChanged();
        return getUpdateMaskFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       * Required. Mask that identifies fields on the photo metadata to update.
       * If not present, the old [Photo][google.streetview.publish.v1.Photo]
       * metadata is entirely replaced with the
       * new [Photo][google.streetview.publish.v1.Photo] metadata in this request.
       * The update fails if invalid fields are specified. Multiple fields can be
       * specified in a comma-delimited list.
       * The following fields are valid:
       * * `pose.heading`
       * * `pose.latLngPair`
       * * `pose.pitch`
       * * `pose.roll`
       * * `pose.level`
       * * `pose.altitude`
       * * `connections`
       * * `places`
       * &gt; Note: When
       * [updateMask][google.streetview.publish.v1.UpdatePhotoRequest.update_mask]
       * contains repeated fields, the entire set of repeated values get replaced
       * with the new contents. For example, if
       * [updateMask][google.streetview.publish.v1.UpdatePhotoRequest.update_mask]
       * contains `connections` and `UpdatePhotoRequest.photo.connections` is empty,
       * all connections are removed.
       * </pre>
       *
       * <code>.google.protobuf.FieldMask update_mask = 2 [(.google.api.field_behavior) = REQUIRED];</code>
       */
      public com.google.protobuf.FieldMaskOrBuilder getUpdateMaskOrBuilder() {
        if (updateMaskBuilder_ != null) {
          return updateMaskBuilder_.getMessageOrBuilder();
        } else {
          return updateMask_ == null ?
              com.google.protobuf.FieldMask.getDefaultInstance() : updateMask_;
        }
      }
      /**
       * <pre>
       * Required. Mask that identifies fields on the photo metadata to update.
       * If not present, the old [Photo][google.streetview.publish.v1.Photo]
       * metadata is entirely replaced with the
       * new [Photo][google.streetview.publish.v1.Photo] metadata in this request.
       * The update fails if invalid fields are specified. Multiple fields can be
       * specified in a comma-delimited list.
       * The following fields are valid:
       * * `pose.heading`
       * * `pose.latLngPair`
       * * `pose.pitch`
       * * `pose.roll`
       * * `pose.level`
       * * `pose.altitude`
       * * `connections`
       * * `places`
       * &gt; Note: When
       * [updateMask][google.streetview.publish.v1.UpdatePhotoRequest.update_mask]
       * contains repeated fields, the entire set of repeated values get replaced
       * with the new contents. For example, if
       * [updateMask][google.streetview.publish.v1.UpdatePhotoRequest.update_mask]
       * contains `connections` and `UpdatePhotoRequest.photo.connections` is empty,
       * all connections are removed.
       * </pre>
       *
       * <code>.google.protobuf.FieldMask update_mask = 2 [(.google.api.field_behavior) = REQUIRED];</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          com.google.protobuf.FieldMask, com.google.protobuf.FieldMask.Builder, com.google.protobuf.FieldMaskOrBuilder> 
          getUpdateMaskFieldBuilder() {
        if (updateMaskBuilder_ == null) {
          updateMaskBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              com.google.protobuf.FieldMask, com.google.protobuf.FieldMask.Builder, com.google.protobuf.FieldMaskOrBuilder>(
                  getUpdateMask(),
                  getParentForChildren(),
                  isClean());
          updateMask_ = null;
        }
        return updateMaskBuilder_;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:google.streetview.publish.v1.UpdatePhotoRequest)
    }

    // @@protoc_insertion_point(class_scope:google.streetview.publish.v1.UpdatePhotoRequest)
    private static final com.google.geo.ugc.streetview.publish.v1.StreetViewPublishRpcMessages.UpdatePhotoRequest DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new com.google.geo.ugc.streetview.publish.v1.StreetViewPublishRpcMessages.UpdatePhotoRequest();
    }

    public static com.google.geo.ugc.streetview.publish.v1.StreetViewPublishRpcMessages.UpdatePhotoRequest getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<UpdatePhotoRequest>
        PARSER = new com.google.protobuf.AbstractParser<UpdatePhotoRequest>() {
      @java.lang.Override
      public UpdatePhotoRequest parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        Builder builder = newBuilder();
        try {
          builder.mergeFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.setUnfinishedMessage(builder.buildPartial());
        } catch (com.google.protobuf.UninitializedMessageException e) {
          throw e.asInvalidProtocolBufferException().setUnfinishedMessage(builder.buildPartial());
        } catch (java.io.IOException e) {
          throw new com.google.protobuf.InvalidProtocolBufferException(e)
              .setUnfinishedMessage(builder.buildPartial());
        }
        return builder.buildPartial();
      }
    };

    public static com.google.protobuf.Parser<UpdatePhotoRequest> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<UpdatePhotoRequest> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.geo.ugc.streetview.publish.v1.StreetViewPublishRpcMessages.UpdatePhotoRequest getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface BatchUpdatePhotosRequestOrBuilder extends
      // @@protoc_insertion_point(interface_extends:google.streetview.publish.v1.BatchUpdatePhotosRequest)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <pre>
     * Required. List of
     * [UpdatePhotoRequests][google.streetview.publish.v1.UpdatePhotoRequest].
     * </pre>
     *
     * <code>repeated .google.streetview.publish.v1.UpdatePhotoRequest update_photo_requests = 1 [(.google.api.field_behavior) = REQUIRED];</code>
     */
    java.util.List<com.google.geo.ugc.streetview.publish.v1.StreetViewPublishRpcMessages.UpdatePhotoRequest> 
        getUpdatePhotoRequestsList();
    /**
     * <pre>
     * Required. List of
     * [UpdatePhotoRequests][google.streetview.publish.v1.UpdatePhotoRequest].
     * </pre>
     *
     * <code>repeated .google.streetview.publish.v1.UpdatePhotoRequest update_photo_requests = 1 [(.google.api.field_behavior) = REQUIRED];</code>
     */
    com.google.geo.ugc.streetview.publish.v1.StreetViewPublishRpcMessages.UpdatePhotoRequest getUpdatePhotoRequests(int index);
    /**
     * <pre>
     * Required. List of
     * [UpdatePhotoRequests][google.streetview.publish.v1.UpdatePhotoRequest].
     * </pre>
     *
     * <code>repeated .google.streetview.publish.v1.UpdatePhotoRequest update_photo_requests = 1 [(.google.api.field_behavior) = REQUIRED];</code>
     */
    int getUpdatePhotoRequestsCount();
    /**
     * <pre>
     * Required. List of
     * [UpdatePhotoRequests][google.streetview.publish.v1.UpdatePhotoRequest].
     * </pre>
     *
     * <code>repeated .google.streetview.publish.v1.UpdatePhotoRequest update_photo_requests = 1 [(.google.api.field_behavior) = REQUIRED];</code>
     */
    java.util.List<? extends com.google.geo.ugc.streetview.publish.v1.StreetViewPublishRpcMessages.UpdatePhotoRequestOrBuilder> 
        getUpdatePhotoRequestsOrBuilderList();
    /**
     * <pre>
     * Required. List of
     * [UpdatePhotoRequests][google.streetview.publish.v1.UpdatePhotoRequest].
     * </pre>
     *
     * <code>repeated .google.streetview.publish.v1.UpdatePhotoRequest update_photo_requests = 1 [(.google.api.field_behavior) = REQUIRED];</code>
     */
    com.google.geo.ugc.streetview.publish.v1.StreetViewPublishRpcMessages.UpdatePhotoRequestOrBuilder getUpdatePhotoRequestsOrBuilder(
        int index);
  }
  /**
   * <pre>
   * Request to update the metadata of photos.
   * Updating the pixels of photos is not supported.
   * </pre>
   *
   * Protobuf type {@code google.streetview.publish.v1.BatchUpdatePhotosRequest}
   */
  public static final class BatchUpdatePhotosRequest extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:google.streetview.publish.v1.BatchUpdatePhotosRequest)
      BatchUpdatePhotosRequestOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use BatchUpdatePhotosRequest.newBuilder() to construct.
    private BatchUpdatePhotosRequest(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private BatchUpdatePhotosRequest() {
      updatePhotoRequests_ = java.util.Collections.emptyList();
    }

    @java.lang.Override
    @SuppressWarnings({"unused"})
    protected java.lang.Object newInstance(
        UnusedPrivateParameter unused) {
      return new BatchUpdatePhotosRequest();
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.google.geo.ugc.streetview.publish.v1.StreetViewPublishRpcMessages.internal_static_google_streetview_publish_v1_BatchUpdatePhotosRequest_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.google.geo.ugc.streetview.publish.v1.StreetViewPublishRpcMessages.internal_static_google_streetview_publish_v1_BatchUpdatePhotosRequest_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.google.geo.ugc.streetview.publish.v1.StreetViewPublishRpcMessages.BatchUpdatePhotosRequest.class, com.google.geo.ugc.streetview.publish.v1.StreetViewPublishRpcMessages.BatchUpdatePhotosRequest.Builder.class);
    }

    public static final int UPDATE_PHOTO_REQUESTS_FIELD_NUMBER = 1;
    @SuppressWarnings("serial")
    private java.util.List<com.google.geo.ugc.streetview.publish.v1.StreetViewPublishRpcMessages.UpdatePhotoRequest> updatePhotoRequests_;
    /**
     * <pre>
     * Required. List of
     * [UpdatePhotoRequests][google.streetview.publish.v1.UpdatePhotoRequest].
     * </pre>
     *
     * <code>repeated .google.streetview.publish.v1.UpdatePhotoRequest update_photo_requests = 1 [(.google.api.field_behavior) = REQUIRED];</code>
     */
    @java.lang.Override
    public java.util.List<com.google.geo.ugc.streetview.publish.v1.StreetViewPublishRpcMessages.UpdatePhotoRequest> getUpdatePhotoRequestsList() {
      return updatePhotoRequests_;
    }
    /**
     * <pre>
     * Required. List of
     * [UpdatePhotoRequests][google.streetview.publish.v1.UpdatePhotoRequest].
     * </pre>
     *
     * <code>repeated .google.streetview.publish.v1.UpdatePhotoRequest update_photo_requests = 1 [(.google.api.field_behavior) = REQUIRED];</code>
     */
    @java.lang.Override
    public java.util.List<? extends com.google.geo.ugc.streetview.publish.v1.StreetViewPublishRpcMessages.UpdatePhotoRequestOrBuilder> 
        getUpdatePhotoRequestsOrBuilderList() {
      return updatePhotoRequests_;
    }
    /**
     * <pre>
     * Required. List of
     * [UpdatePhotoRequests][google.streetview.publish.v1.UpdatePhotoRequest].
     * </pre>
     *
     * <code>repeated .google.streetview.publish.v1.UpdatePhotoRequest update_photo_requests = 1 [(.google.api.field_behavior) = REQUIRED];</code>
     */
    @java.lang.Override
    public int getUpdatePhotoRequestsCount() {
      return updatePhotoRequests_.size();
    }
    /**
     * <pre>
     * Required. List of
     * [UpdatePhotoRequests][google.streetview.publish.v1.UpdatePhotoRequest].
     * </pre>
     *
     * <code>repeated .google.streetview.publish.v1.UpdatePhotoRequest update_photo_requests = 1 [(.google.api.field_behavior) = REQUIRED];</code>
     */
    @java.lang.Override
    public com.google.geo.ugc.streetview.publish.v1.StreetViewPublishRpcMessages.UpdatePhotoRequest getUpdatePhotoRequests(int index) {
      return updatePhotoRequests_.get(index);
    }
    /**
     * <pre>
     * Required. List of
     * [UpdatePhotoRequests][google.streetview.publish.v1.UpdatePhotoRequest].
     * </pre>
     *
     * <code>repeated .google.streetview.publish.v1.UpdatePhotoRequest update_photo_requests = 1 [(.google.api.field_behavior) = REQUIRED];</code>
     */
    @java.lang.Override
    public com.google.geo.ugc.streetview.publish.v1.StreetViewPublishRpcMessages.UpdatePhotoRequestOrBuilder getUpdatePhotoRequestsOrBuilder(
        int index) {
      return updatePhotoRequests_.get(index);
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      for (int i = 0; i < updatePhotoRequests_.size(); i++) {
        output.writeMessage(1, updatePhotoRequests_.get(i));
      }
      getUnknownFields().writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      for (int i = 0; i < updatePhotoRequests_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, updatePhotoRequests_.get(i));
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof com.google.geo.ugc.streetview.publish.v1.StreetViewPublishRpcMessages.BatchUpdatePhotosRequest)) {
        return super.equals(obj);
      }
      com.google.geo.ugc.streetview.publish.v1.StreetViewPublishRpcMessages.BatchUpdatePhotosRequest other = (com.google.geo.ugc.streetview.publish.v1.StreetViewPublishRpcMessages.BatchUpdatePhotosRequest) obj;

      if (!getUpdatePhotoRequestsList()
          .equals(other.getUpdatePhotoRequestsList())) return false;
      if (!getUnknownFields().equals(other.getUnknownFields())) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      if (getUpdatePhotoRequestsCount() > 0) {
        hash = (37 * hash) + UPDATE_PHOTO_REQUESTS_FIELD_NUMBER;
        hash = (53 * hash) + getUpdatePhotoRequestsList().hashCode();
      }
      hash = (29 * hash) + getUnknownFields().hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static com.google.geo.ugc.streetview.publish.v1.StreetViewPublishRpcMessages.BatchUpdatePhotosRequest parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.google.geo.ugc.streetview.publish.v1.StreetViewPublishRpcMessages.BatchUpdatePhotosRequest parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.google.geo.ugc.streetview.publish.v1.StreetViewPublishRpcMessages.BatchUpdatePhotosRequest parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.google.geo.ugc.streetview.publish.v1.StreetViewPublishRpcMessages.BatchUpdatePhotosRequest parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.google.geo.ugc.streetview.publish.v1.StreetViewPublishRpcMessages.BatchUpdatePhotosRequest parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.google.geo.ugc.streetview.publish.v1.StreetViewPublishRpcMessages.BatchUpdatePhotosRequest parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.google.geo.ugc.streetview.publish.v1.StreetViewPublishRpcMessages.BatchUpdatePhotosRequest parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static com.google.geo.ugc.streetview.publish.v1.StreetViewPublishRpcMessages.BatchUpdatePhotosRequest parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static com.google.geo.ugc.streetview.publish.v1.StreetViewPublishRpcMessages.BatchUpdatePhotosRequest parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static com.google.geo.ugc.streetview.publish.v1.StreetViewPublishRpcMessages.BatchUpdatePhotosRequest parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static com.google.geo.ugc.streetview.publish.v1.StreetViewPublishRpcMessages.BatchUpdatePhotosRequest parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static com.google.geo.ugc.streetview.publish.v1.StreetViewPublishRpcMessages.BatchUpdatePhotosRequest parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(com.google.geo.ugc.streetview.publish.v1.StreetViewPublishRpcMessages.BatchUpdatePhotosRequest prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * <pre>
     * Request to update the metadata of photos.
     * Updating the pixels of photos is not supported.
     * </pre>
     *
     * Protobuf type {@code google.streetview.publish.v1.BatchUpdatePhotosRequest}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:google.streetview.publish.v1.BatchUpdatePhotosRequest)
        com.google.geo.ugc.streetview.publish.v1.StreetViewPublishRpcMessages.BatchUpdatePhotosRequestOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return com.google.geo.ugc.streetview.publish.v1.StreetViewPublishRpcMessages.internal_static_google_streetview_publish_v1_BatchUpdatePhotosRequest_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return com.google.geo.ugc.streetview.publish.v1.StreetViewPublishRpcMessages.internal_static_google_streetview_publish_v1_BatchUpdatePhotosRequest_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                com.google.geo.ugc.streetview.publish.v1.StreetViewPublishRpcMessages.BatchUpdatePhotosRequest.class, com.google.geo.ugc.streetview.publish.v1.StreetViewPublishRpcMessages.BatchUpdatePhotosRequest.Builder.class);
      }

      // Construct using com.google.geo.ugc.streetview.publish.v1.StreetViewPublishRpcMessages.BatchUpdatePhotosRequest.newBuilder()
      private Builder() {

      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);

      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        bitField0_ = 0;
        if (updatePhotoRequestsBuilder_ == null) {
          updatePhotoRequests_ = java.util.Collections.emptyList();
        } else {
          updatePhotoRequests_ = null;
          updatePhotoRequestsBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000001);
        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.google.geo.ugc.streetview.publish.v1.StreetViewPublishRpcMessages.internal_static_google_streetview_publish_v1_BatchUpdatePhotosRequest_descriptor;
      }

      @java.lang.Override
      public com.google.geo.ugc.streetview.publish.v1.StreetViewPublishRpcMessages.BatchUpdatePhotosRequest getDefaultInstanceForType() {
        return com.google.geo.ugc.streetview.publish.v1.StreetViewPublishRpcMessages.BatchUpdatePhotosRequest.getDefaultInstance();
      }

      @java.lang.Override
      public com.google.geo.ugc.streetview.publish.v1.StreetViewPublishRpcMessages.BatchUpdatePhotosRequest build() {
        com.google.geo.ugc.streetview.publish.v1.StreetViewPublishRpcMessages.BatchUpdatePhotosRequest result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public com.google.geo.ugc.streetview.publish.v1.StreetViewPublishRpcMessages.BatchUpdatePhotosRequest buildPartial() {
        com.google.geo.ugc.streetview.publish.v1.StreetViewPublishRpcMessages.BatchUpdatePhotosRequest result = new com.google.geo.ugc.streetview.publish.v1.StreetViewPublishRpcMessages.BatchUpdatePhotosRequest(this);
        buildPartialRepeatedFields(result);
        if (bitField0_ != 0) { buildPartial0(result); }
        onBuilt();
        return result;
      }

      private void buildPartialRepeatedFields(com.google.geo.ugc.streetview.publish.v1.StreetViewPublishRpcMessages.BatchUpdatePhotosRequest result) {
        if (updatePhotoRequestsBuilder_ == null) {
          if (((bitField0_ & 0x00000001) != 0)) {
            updatePhotoRequests_ = java.util.Collections.unmodifiableList(updatePhotoRequests_);
            bitField0_ = (bitField0_ & ~0x00000001);
          }
          result.updatePhotoRequests_ = updatePhotoRequests_;
        } else {
          result.updatePhotoRequests_ = updatePhotoRequestsBuilder_.build();
        }
      }

      private void buildPartial0(com.google.geo.ugc.streetview.publish.v1.StreetViewPublishRpcMessages.BatchUpdatePhotosRequest result) {
        int from_bitField0_ = bitField0_;
      }

      @java.lang.Override
      public Builder clone() {
        return super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.google.geo.ugc.streetview.publish.v1.StreetViewPublishRpcMessages.BatchUpdatePhotosRequest) {
          return mergeFrom((com.google.geo.ugc.streetview.publish.v1.StreetViewPublishRpcMessages.BatchUpdatePhotosRequest)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(com.google.geo.ugc.streetview.publish.v1.StreetViewPublishRpcMessages.BatchUpdatePhotosRequest other) {
        if (other == com.google.geo.ugc.streetview.publish.v1.StreetViewPublishRpcMessages.BatchUpdatePhotosRequest.getDefaultInstance()) return this;
        if (updatePhotoRequestsBuilder_ == null) {
          if (!other.updatePhotoRequests_.isEmpty()) {
            if (updatePhotoRequests_.isEmpty()) {
              updatePhotoRequests_ = other.updatePhotoRequests_;
              bitField0_ = (bitField0_ & ~0x00000001);
            } else {
              ensureUpdatePhotoRequestsIsMutable();
              updatePhotoRequests_.addAll(other.updatePhotoRequests_);
            }
            onChanged();
          }
        } else {
          if (!other.updatePhotoRequests_.isEmpty()) {
            if (updatePhotoRequestsBuilder_.isEmpty()) {
              updatePhotoRequestsBuilder_.dispose();
              updatePhotoRequestsBuilder_ = null;
              updatePhotoRequests_ = other.updatePhotoRequests_;
              bitField0_ = (bitField0_ & ~0x00000001);
              updatePhotoRequestsBuilder_ = 
                com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?
                   getUpdatePhotoRequestsFieldBuilder() : null;
            } else {
              updatePhotoRequestsBuilder_.addAllMessages(other.updatePhotoRequests_);
            }
          }
        }
        this.mergeUnknownFields(other.getUnknownFields());
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        if (extensionRegistry == null) {
          throw new java.lang.NullPointerException();
        }
        try {
          boolean done = false;
          while (!done) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                done = true;
                break;
              case 10: {
                com.google.geo.ugc.streetview.publish.v1.StreetViewPublishRpcMessages.UpdatePhotoRequest m =
                    input.readMessage(
                        com.google.geo.ugc.streetview.publish.v1.StreetViewPublishRpcMessages.UpdatePhotoRequest.parser(),
                        extensionRegistry);
                if (updatePhotoRequestsBuilder_ == null) {
                  ensureUpdatePhotoRequestsIsMutable();
                  updatePhotoRequests_.add(m);
                } else {
                  updatePhotoRequestsBuilder_.addMessage(m);
                }
                break;
              } // case 10
              default: {
                if (!super.parseUnknownField(input, extensionRegistry, tag)) {
                  done = true; // was an endgroup tag
                }
                break;
              } // default:
            } // switch (tag)
          } // while (!done)
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.unwrapIOException();
        } finally {
          onChanged();
        } // finally
        return this;
      }
      private int bitField0_;

      private java.util.List<com.google.geo.ugc.streetview.publish.v1.StreetViewPublishRpcMessages.UpdatePhotoRequest> updatePhotoRequests_ =
        java.util.Collections.emptyList();
      private void ensureUpdatePhotoRequestsIsMutable() {
        if (!((bitField0_ & 0x00000001) != 0)) {
          updatePhotoRequests_ = new java.util.ArrayList<com.google.geo.ugc.streetview.publish.v1.StreetViewPublishRpcMessages.UpdatePhotoRequest>(updatePhotoRequests_);
          bitField0_ |= 0x00000001;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilderV3<
          com.google.geo.ugc.streetview.publish.v1.StreetViewPublishRpcMessages.UpdatePhotoRequest, com.google.geo.ugc.streetview.publish.v1.StreetViewPublishRpcMessages.UpdatePhotoRequest.Builder, com.google.geo.ugc.streetview.publish.v1.StreetViewPublishRpcMessages.UpdatePhotoRequestOrBuilder> updatePhotoRequestsBuilder_;

      /**
       * <pre>
       * Required. List of
       * [UpdatePhotoRequests][google.streetview.publish.v1.UpdatePhotoRequest].
       * </pre>
       *
       * <code>repeated .google.streetview.publish.v1.UpdatePhotoRequest update_photo_requests = 1 [(.google.api.field_behavior) = REQUIRED];</code>
       */
      public java.util.List<com.google.geo.ugc.streetview.publish.v1.StreetViewPublishRpcMessages.UpdatePhotoRequest> getUpdatePhotoRequestsList() {
        if (updatePhotoRequestsBuilder_ == null) {
          return java.util.Collections.unmodifiableList(updatePhotoRequests_);
        } else {
          return updatePhotoRequestsBuilder_.getMessageList();
        }
      }
      /**
       * <pre>
       * Required. List of
       * [UpdatePhotoRequests][google.streetview.publish.v1.UpdatePhotoRequest].
       * </pre>
       *
       * <code>repeated .google.streetview.publish.v1.UpdatePhotoRequest update_photo_requests = 1 [(.google.api.field_behavior) = REQUIRED];</code>
       */
      public int getUpdatePhotoRequestsCount() {
        if (updatePhotoRequestsBuilder_ == null) {
          return updatePhotoRequests_.size();
        } else {
          return updatePhotoRequestsBuilder_.getCount();
        }
      }
      /**
       * <pre>
       * Required. List of
       * [UpdatePhotoRequests][google.streetview.publish.v1.UpdatePhotoRequest].
       * </pre>
       *
       * <code>repeated .google.streetview.publish.v1.UpdatePhotoRequest update_photo_requests = 1 [(.google.api.field_behavior) = REQUIRED];</code>
       */
      public com.google.geo.ugc.streetview.publish.v1.StreetViewPublishRpcMessages.UpdatePhotoRequest getUpdatePhotoRequests(int index) {
        if (updatePhotoRequestsBuilder_ == null) {
          return updatePhotoRequests_.get(index);
        } else {
          return updatePhotoRequestsBuilder_.getMessage(index);
        }
      }
      /**
       * <pre>
       * Required. List of
       * [UpdatePhotoRequests][google.streetview.publish.v1.UpdatePhotoRequest].
       * </pre>
       *
       * <code>repeated .google.streetview.publish.v1.UpdatePhotoRequest update_photo_requests = 1 [(.google.api.field_behavior) = REQUIRED];</code>
       */
      public Builder setUpdatePhotoRequests(
          int index, com.google.geo.ugc.streetview.publish.v1.StreetViewPublishRpcMessages.UpdatePhotoRequest value) {
        if (updatePhotoRequestsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureUpdatePhotoRequestsIsMutable();
          updatePhotoRequests_.set(index, value);
          onChanged();
        } else {
          updatePhotoRequestsBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <pre>
       * Required. List of
       * [UpdatePhotoRequests][google.streetview.publish.v1.UpdatePhotoRequest].
       * </pre>
       *
       * <code>repeated .google.streetview.publish.v1.UpdatePhotoRequest update_photo_requests = 1 [(.google.api.field_behavior) = REQUIRED];</code>
       */
      public Builder setUpdatePhotoRequests(
          int index, com.google.geo.ugc.streetview.publish.v1.StreetViewPublishRpcMessages.UpdatePhotoRequest.Builder builderForValue) {
        if (updatePhotoRequestsBuilder_ == null) {
          ensureUpdatePhotoRequestsIsMutable();
          updatePhotoRequests_.set(index, builderForValue.build());
          onChanged();
        } else {
          updatePhotoRequestsBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       * Required. List of
       * [UpdatePhotoRequests][google.streetview.publish.v1.UpdatePhotoRequest].
       * </pre>
       *
       * <code>repeated .google.streetview.publish.v1.UpdatePhotoRequest update_photo_requests = 1 [(.google.api.field_behavior) = REQUIRED];</code>
       */
      public Builder addUpdatePhotoRequests(com.google.geo.ugc.streetview.publish.v1.StreetViewPublishRpcMessages.UpdatePhotoRequest value) {
        if (updatePhotoRequestsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureUpdatePhotoRequestsIsMutable();
          updatePhotoRequests_.add(value);
          onChanged();
        } else {
          updatePhotoRequestsBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <pre>
       * Required. List of
       * [UpdatePhotoRequests][google.streetview.publish.v1.UpdatePhotoRequest].
       * </pre>
       *
       * <code>repeated .google.streetview.publish.v1.UpdatePhotoRequest update_photo_requests = 1 [(.google.api.field_behavior) = REQUIRED];</code>
       */
      public Builder addUpdatePhotoRequests(
          int index, com.google.geo.ugc.streetview.publish.v1.StreetViewPublishRpcMessages.UpdatePhotoRequest value) {
        if (updatePhotoRequestsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureUpdatePhotoRequestsIsMutable();
          updatePhotoRequests_.add(index, value);
          onChanged();
        } else {
          updatePhotoRequestsBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <pre>
       * Required. List of
       * [UpdatePhotoRequests][google.streetview.publish.v1.UpdatePhotoRequest].
       * </pre>
       *
       * <code>repeated .google.streetview.publish.v1.UpdatePhotoRequest update_photo_requests = 1 [(.google.api.field_behavior) = REQUIRED];</code>
       */
      public Builder addUpdatePhotoRequests(
          com.google.geo.ugc.streetview.publish.v1.StreetViewPublishRpcMessages.UpdatePhotoRequest.Builder builderForValue) {
        if (updatePhotoRequestsBuilder_ == null) {
          ensureUpdatePhotoRequestsIsMutable();
          updatePhotoRequests_.add(builderForValue.build());
          onChanged();
        } else {
          updatePhotoRequestsBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       * Required. List of
       * [UpdatePhotoRequests][google.streetview.publish.v1.UpdatePhotoRequest].
       * </pre>
       *
       * <code>repeated .google.streetview.publish.v1.UpdatePhotoRequest update_photo_requests = 1 [(.google.api.field_behavior) = REQUIRED];</code>
       */
      public Builder addUpdatePhotoRequests(
          int index, com.google.geo.ugc.streetview.publish.v1.StreetViewPublishRpcMessages.UpdatePhotoRequest.Builder builderForValue) {
        if (updatePhotoRequestsBuilder_ == null) {
          ensureUpdatePhotoRequestsIsMutable();
          updatePhotoRequests_.add(index, builderForValue.build());
          onChanged();
        } else {
          updatePhotoRequestsBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       * Required. List of
       * [UpdatePhotoRequests][google.streetview.publish.v1.UpdatePhotoRequest].
       * </pre>
       *
       * <code>repeated .google.streetview.publish.v1.UpdatePhotoRequest update_photo_requests = 1 [(.google.api.field_behavior) = REQUIRED];</code>
       */
      public Builder addAllUpdatePhotoRequests(
          java.lang.Iterable<? extends com.google.geo.ugc.streetview.publish.v1.StreetViewPublishRpcMessages.UpdatePhotoRequest> values) {
        if (updatePhotoRequestsBuilder_ == null) {
          ensureUpdatePhotoRequestsIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
              values, updatePhotoRequests_);
          onChanged();
        } else {
          updatePhotoRequestsBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <pre>
       * Required. List of
       * [UpdatePhotoRequests][google.streetview.publish.v1.UpdatePhotoRequest].
       * </pre>
       *
       * <code>repeated .google.streetview.publish.v1.UpdatePhotoRequest update_photo_requests = 1 [(.google.api.field_behavior) = REQUIRED];</code>
       */
      public Builder clearUpdatePhotoRequests() {
        if (updatePhotoRequestsBuilder_ == null) {
          updatePhotoRequests_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000001);
          onChanged();
        } else {
          updatePhotoRequestsBuilder_.clear();
        }
        return this;
      }
      /**
       * <pre>
       * Required. List of
       * [UpdatePhotoRequests][google.streetview.publish.v1.UpdatePhotoRequest].
       * </pre>
       *
       * <code>repeated .google.streetview.publish.v1.UpdatePhotoRequest update_photo_requests = 1 [(.google.api.field_behavior) = REQUIRED];</code>
       */
      public Builder removeUpdatePhotoRequests(int index) {
        if (updatePhotoRequestsBuilder_ == null) {
          ensureUpdatePhotoRequestsIsMutable();
          updatePhotoRequests_.remove(index);
          onChanged();
        } else {
          updatePhotoRequestsBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <pre>
       * Required. List of
       * [UpdatePhotoRequests][google.streetview.publish.v1.UpdatePhotoRequest].
       * </pre>
       *
       * <code>repeated .google.streetview.publish.v1.UpdatePhotoRequest update_photo_requests = 1 [(.google.api.field_behavior) = REQUIRED];</code>
       */
      public com.google.geo.ugc.streetview.publish.v1.StreetViewPublishRpcMessages.UpdatePhotoRequest.Builder getUpdatePhotoRequestsBuilder(
          int index) {
        return getUpdatePhotoRequestsFieldBuilder().getBuilder(index);
      }
      /**
       * <pre>
       * Required. List of
       * [UpdatePhotoRequests][google.streetview.publish.v1.UpdatePhotoRequest].
       * </pre>
       *
       * <code>repeated .google.streetview.publish.v1.UpdatePhotoRequest update_photo_requests = 1 [(.google.api.field_behavior) = REQUIRED];</code>
       */
      public com.google.geo.ugc.streetview.publish.v1.StreetViewPublishRpcMessages.UpdatePhotoRequestOrBuilder getUpdatePhotoRequestsOrBuilder(
          int index) {
        if (updatePhotoRequestsBuilder_ == null) {
          return updatePhotoRequests_.get(index);  } else {
          return updatePhotoRequestsBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <pre>
       * Required. List of
       * [UpdatePhotoRequests][google.streetview.publish.v1.UpdatePhotoRequest].
       * </pre>
       *
       * <code>repeated .google.streetview.publish.v1.UpdatePhotoRequest update_photo_requests = 1 [(.google.api.field_behavior) = REQUIRED];</code>
       */
      public java.util.List<? extends com.google.geo.ugc.streetview.publish.v1.StreetViewPublishRpcMessages.UpdatePhotoRequestOrBuilder> 
           getUpdatePhotoRequestsOrBuilderList() {
        if (updatePhotoRequestsBuilder_ != null) {
          return updatePhotoRequestsBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(updatePhotoRequests_);
        }
      }
      /**
       * <pre>
       * Required. List of
       * [UpdatePhotoRequests][google.streetview.publish.v1.UpdatePhotoRequest].
       * </pre>
       *
       * <code>repeated .google.streetview.publish.v1.UpdatePhotoRequest update_photo_requests = 1 [(.google.api.field_behavior) = REQUIRED];</code>
       */
      public com.google.geo.ugc.streetview.publish.v1.StreetViewPublishRpcMessages.UpdatePhotoRequest.Builder addUpdatePhotoRequestsBuilder() {
        return getUpdatePhotoRequestsFieldBuilder().addBuilder(
            com.google.geo.ugc.streetview.publish.v1.StreetViewPublishRpcMessages.UpdatePhotoRequest.getDefaultInstance());
      }
      /**
       * <pre>
       * Required. List of
       * [UpdatePhotoRequests][google.streetview.publish.v1.UpdatePhotoRequest].
       * </pre>
       *
       * <code>repeated .google.streetview.publish.v1.UpdatePhotoRequest update_photo_requests = 1 [(.google.api.field_behavior) = REQUIRED];</code>
       */
      public com.google.geo.ugc.streetview.publish.v1.StreetViewPublishRpcMessages.UpdatePhotoRequest.Builder addUpdatePhotoRequestsBuilder(
          int index) {
        return getUpdatePhotoRequestsFieldBuilder().addBuilder(
            index, com.google.geo.ugc.streetview.publish.v1.StreetViewPublishRpcMessages.UpdatePhotoRequest.getDefaultInstance());
      }
      /**
       * <pre>
       * Required. List of
       * [UpdatePhotoRequests][google.streetview.publish.v1.UpdatePhotoRequest].
       * </pre>
       *
       * <code>repeated .google.streetview.publish.v1.UpdatePhotoRequest update_photo_requests = 1 [(.google.api.field_behavior) = REQUIRED];</code>
       */
      public java.util.List<com.google.geo.ugc.streetview.publish.v1.StreetViewPublishRpcMessages.UpdatePhotoRequest.Builder> 
           getUpdatePhotoRequestsBuilderList() {
        return getUpdatePhotoRequestsFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilderV3<
          com.google.geo.ugc.streetview.publish.v1.StreetViewPublishRpcMessages.UpdatePhotoRequest, com.google.geo.ugc.streetview.publish.v1.StreetViewPublishRpcMessages.UpdatePhotoRequest.Builder, com.google.geo.ugc.streetview.publish.v1.StreetViewPublishRpcMessages.UpdatePhotoRequestOrBuilder> 
          getUpdatePhotoRequestsFieldBuilder() {
        if (updatePhotoRequestsBuilder_ == null) {
          updatePhotoRequestsBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<
              com.google.geo.ugc.streetview.publish.v1.StreetViewPublishRpcMessages.UpdatePhotoRequest, com.google.geo.ugc.streetview.publish.v1.StreetViewPublishRpcMessages.UpdatePhotoRequest.Builder, com.google.geo.ugc.streetview.publish.v1.StreetViewPublishRpcMessages.UpdatePhotoRequestOrBuilder>(
                  updatePhotoRequests_,
                  ((bitField0_ & 0x00000001) != 0),
                  getParentForChildren(),
                  isClean());
          updatePhotoRequests_ = null;
        }
        return updatePhotoRequestsBuilder_;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:google.streetview.publish.v1.BatchUpdatePhotosRequest)
    }

    // @@protoc_insertion_point(class_scope:google.streetview.publish.v1.BatchUpdatePhotosRequest)
    private static final com.google.geo.ugc.streetview.publish.v1.StreetViewPublishRpcMessages.BatchUpdatePhotosRequest DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new com.google.geo.ugc.streetview.publish.v1.StreetViewPublishRpcMessages.BatchUpdatePhotosRequest();
    }

    public static com.google.geo.ugc.streetview.publish.v1.StreetViewPublishRpcMessages.BatchUpdatePhotosRequest getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<BatchUpdatePhotosRequest>
        PARSER = new com.google.protobuf.AbstractParser<BatchUpdatePhotosRequest>() {
      @java.lang.Override
      public BatchUpdatePhotosRequest parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        Builder builder = newBuilder();
        try {
          builder.mergeFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.setUnfinishedMessage(builder.buildPartial());
        } catch (com.google.protobuf.UninitializedMessageException e) {
          throw e.asInvalidProtocolBufferException().setUnfinishedMessage(builder.buildPartial());
        } catch (java.io.IOException e) {
          throw new com.google.protobuf.InvalidProtocolBufferException(e)
              .setUnfinishedMessage(builder.buildPartial());
        }
        return builder.buildPartial();
      }
    };

    public static com.google.protobuf.Parser<BatchUpdatePhotosRequest> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<BatchUpdatePhotosRequest> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.geo.ugc.streetview.publish.v1.StreetViewPublishRpcMessages.BatchUpdatePhotosRequest getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface BatchUpdatePhotosResponseOrBuilder extends
      // @@protoc_insertion_point(interface_extends:google.streetview.publish.v1.BatchUpdatePhotosResponse)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <pre>
     * List of results for each individual
     * [Photo][google.streetview.publish.v1.Photo] updated, in the same order as
     * the request.
     * </pre>
     *
     * <code>repeated .google.streetview.publish.v1.PhotoResponse results = 1;</code>
     */
    java.util.List<com.google.geo.ugc.streetview.publish.v1.StreetViewPublishRpcMessages.PhotoResponse> 
        getResultsList();
    /**
     * <pre>
     * List of results for each individual
     * [Photo][google.streetview.publish.v1.Photo] updated, in the same order as
     * the request.
     * </pre>
     *
     * <code>repeated .google.streetview.publish.v1.PhotoResponse results = 1;</code>
     */
    com.google.geo.ugc.streetview.publish.v1.StreetViewPublishRpcMessages.PhotoResponse getResults(int index);
    /**
     * <pre>
     * List of results for each individual
     * [Photo][google.streetview.publish.v1.Photo] updated, in the same order as
     * the request.
     * </pre>
     *
     * <code>repeated .google.streetview.publish.v1.PhotoResponse results = 1;</code>
     */
    int getResultsCount();
    /**
     * <pre>
     * List of results for each individual
     * [Photo][google.streetview.publish.v1.Photo] updated, in the same order as
     * the request.
     * </pre>
     *
     * <code>repeated .google.streetview.publish.v1.PhotoResponse results = 1;</code>
     */
    java.util.List<? extends com.google.geo.ugc.streetview.publish.v1.StreetViewPublishRpcMessages.PhotoResponseOrBuilder> 
        getResultsOrBuilderList();
    /**
     * <pre>
     * List of results for each individual
     * [Photo][google.streetview.publish.v1.Photo] updated, in the same order as
     * the request.
     * </pre>
     *
     * <code>repeated .google.streetview.publish.v1.PhotoResponse results = 1;</code>
     */
    com.google.geo.ugc.streetview.publish.v1.StreetViewPublishRpcMessages.PhotoResponseOrBuilder getResultsOrBuilder(
        int index);
  }
  /**
   * <pre>
   * Response to batch update of metadata of one or more
   * [Photos][google.streetview.publish.v1.Photo].
   * </pre>
   *
   * Protobuf type {@code google.streetview.publish.v1.BatchUpdatePhotosResponse}
   */
  public static final class BatchUpdatePhotosResponse extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:google.streetview.publish.v1.BatchUpdatePhotosResponse)
      BatchUpdatePhotosResponseOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use BatchUpdatePhotosResponse.newBuilder() to construct.
    private BatchUpdatePhotosResponse(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private BatchUpdatePhotosResponse() {
      results_ = java.util.Collections.emptyList();
    }

    @java.lang.Override
    @SuppressWarnings({"unused"})
    protected java.lang.Object newInstance(
        UnusedPrivateParameter unused) {
      return new BatchUpdatePhotosResponse();
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.google.geo.ugc.streetview.publish.v1.StreetViewPublishRpcMessages.internal_static_google_streetview_publish_v1_BatchUpdatePhotosResponse_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.google.geo.ugc.streetview.publish.v1.StreetViewPublishRpcMessages.internal_static_google_streetview_publish_v1_BatchUpdatePhotosResponse_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.google.geo.ugc.streetview.publish.v1.StreetViewPublishRpcMessages.BatchUpdatePhotosResponse.class, com.google.geo.ugc.streetview.publish.v1.StreetViewPublishRpcMessages.BatchUpdatePhotosResponse.Builder.class);
    }

    public static final int RESULTS_FIELD_NUMBER = 1;
    @SuppressWarnings("serial")
    private java.util.List<com.google.geo.ugc.streetview.publish.v1.StreetViewPublishRpcMessages.PhotoResponse> results_;
    /**
     * <pre>
     * List of results for each individual
     * [Photo][google.streetview.publish.v1.Photo] updated, in the same order as
     * the request.
     * </pre>
     *
     * <code>repeated .google.streetview.publish.v1.PhotoResponse results = 1;</code>
     */
    @java.lang.Override
    public java.util.List<com.google.geo.ugc.streetview.publish.v1.StreetViewPublishRpcMessages.PhotoResponse> getResultsList() {
      return results_;
    }
    /**
     * <pre>
     * List of results for each individual
     * [Photo][google.streetview.publish.v1.Photo] updated, in the same order as
     * the request.
     * </pre>
     *
     * <code>repeated .google.streetview.publish.v1.PhotoResponse results = 1;</code>
     */
    @java.lang.Override
    public java.util.List<? extends com.google.geo.ugc.streetview.publish.v1.StreetViewPublishRpcMessages.PhotoResponseOrBuilder> 
        getResultsOrBuilderList() {
      return results_;
    }
    /**
     * <pre>
     * List of results for each individual
     * [Photo][google.streetview.publish.v1.Photo] updated, in the same order as
     * the request.
     * </pre>
     *
     * <code>repeated .google.streetview.publish.v1.PhotoResponse results = 1;</code>
     */
    @java.lang.Override
    public int getResultsCount() {
      return results_.size();
    }
    /**
     * <pre>
     * List of results for each individual
     * [Photo][google.streetview.publish.v1.Photo] updated, in the same order as
     * the request.
     * </pre>
     *
     * <code>repeated .google.streetview.publish.v1.PhotoResponse results = 1;</code>
     */
    @java.lang.Override
    public com.google.geo.ugc.streetview.publish.v1.StreetViewPublishRpcMessages.PhotoResponse getResults(int index) {
      return results_.get(index);
    }
    /**
     * <pre>
     * List of results for each individual
     * [Photo][google.streetview.publish.v1.Photo] updated, in the same order as
     * the request.
     * </pre>
     *
     * <code>repeated .google.streetview.publish.v1.PhotoResponse results = 1;</code>
     */
    @java.lang.Override
    public com.google.geo.ugc.streetview.publish.v1.StreetViewPublishRpcMessages.PhotoResponseOrBuilder getResultsOrBuilder(
        int index) {
      return results_.get(index);
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      for (int i = 0; i < results_.size(); i++) {
        output.writeMessage(1, results_.get(i));
      }
      getUnknownFields().writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      for (int i = 0; i < results_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, results_.get(i));
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof com.google.geo.ugc.streetview.publish.v1.StreetViewPublishRpcMessages.BatchUpdatePhotosResponse)) {
        return super.equals(obj);
      }
      com.google.geo.ugc.streetview.publish.v1.StreetViewPublishRpcMessages.BatchUpdatePhotosResponse other = (com.google.geo.ugc.streetview.publish.v1.StreetViewPublishRpcMessages.BatchUpdatePhotosResponse) obj;

      if (!getResultsList()
          .equals(other.getResultsList())) return false;
      if (!getUnknownFields().equals(other.getUnknownFields())) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      if (getResultsCount() > 0) {
        hash = (37 * hash) + RESULTS_FIELD_NUMBER;
        hash = (53 * hash) + getResultsList().hashCode();
      }
      hash = (29 * hash) + getUnknownFields().hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static com.google.geo.ugc.streetview.publish.v1.StreetViewPublishRpcMessages.BatchUpdatePhotosResponse parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.google.geo.ugc.streetview.publish.v1.StreetViewPublishRpcMessages.BatchUpdatePhotosResponse parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.google.geo.ugc.streetview.publish.v1.StreetViewPublishRpcMessages.BatchUpdatePhotosResponse parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.google.geo.ugc.streetview.publish.v1.StreetViewPublishRpcMessages.BatchUpdatePhotosResponse parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.google.geo.ugc.streetview.publish.v1.StreetViewPublishRpcMessages.BatchUpdatePhotosResponse parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.google.geo.ugc.streetview.publish.v1.StreetViewPublishRpcMessages.BatchUpdatePhotosResponse parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.google.geo.ugc.streetview.publish.v1.StreetViewPublishRpcMessages.BatchUpdatePhotosResponse parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static com.google.geo.ugc.streetview.publish.v1.StreetViewPublishRpcMessages.BatchUpdatePhotosResponse parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static com.google.geo.ugc.streetview.publish.v1.StreetViewPublishRpcMessages.BatchUpdatePhotosResponse parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static com.google.geo.ugc.streetview.publish.v1.StreetViewPublishRpcMessages.BatchUpdatePhotosResponse parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static com.google.geo.ugc.streetview.publish.v1.StreetViewPublishRpcMessages.BatchUpdatePhotosResponse parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static com.google.geo.ugc.streetview.publish.v1.StreetViewPublishRpcMessages.BatchUpdatePhotosResponse parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(com.google.geo.ugc.streetview.publish.v1.StreetViewPublishRpcMessages.BatchUpdatePhotosResponse prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * <pre>
     * Response to batch update of metadata of one or more
     * [Photos][google.streetview.publish.v1.Photo].
     * </pre>
     *
     * Protobuf type {@code google.streetview.publish.v1.BatchUpdatePhotosResponse}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:google.streetview.publish.v1.BatchUpdatePhotosResponse)
        com.google.geo.ugc.streetview.publish.v1.StreetViewPublishRpcMessages.BatchUpdatePhotosResponseOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return com.google.geo.ugc.streetview.publish.v1.StreetViewPublishRpcMessages.internal_static_google_streetview_publish_v1_BatchUpdatePhotosResponse_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return com.google.geo.ugc.streetview.publish.v1.StreetViewPublishRpcMessages.internal_static_google_streetview_publish_v1_BatchUpdatePhotosResponse_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                com.google.geo.ugc.streetview.publish.v1.StreetViewPublishRpcMessages.BatchUpdatePhotosResponse.class, com.google.geo.ugc.streetview.publish.v1.StreetViewPublishRpcMessages.BatchUpdatePhotosResponse.Builder.class);
      }

      // Construct using com.google.geo.ugc.streetview.publish.v1.StreetViewPublishRpcMessages.BatchUpdatePhotosResponse.newBuilder()
      private Builder() {

      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);

      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        bitField0_ = 0;
        if (resultsBuilder_ == null) {
          results_ = java.util.Collections.emptyList();
        } else {
          results_ = null;
          resultsBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000001);
        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.google.geo.ugc.streetview.publish.v1.StreetViewPublishRpcMessages.internal_static_google_streetview_publish_v1_BatchUpdatePhotosResponse_descriptor;
      }

      @java.lang.Override
      public com.google.geo.ugc.streetview.publish.v1.StreetViewPublishRpcMessages.BatchUpdatePhotosResponse getDefaultInstanceForType() {
        return com.google.geo.ugc.streetview.publish.v1.StreetViewPublishRpcMessages.BatchUpdatePhotosResponse.getDefaultInstance();
      }

      @java.lang.Override
      public com.google.geo.ugc.streetview.publish.v1.StreetViewPublishRpcMessages.BatchUpdatePhotosResponse build() {
        com.google.geo.ugc.streetview.publish.v1.StreetViewPublishRpcMessages.BatchUpdatePhotosResponse result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public com.google.geo.ugc.streetview.publish.v1.StreetViewPublishRpcMessages.BatchUpdatePhotosResponse buildPartial() {
        com.google.geo.ugc.streetview.publish.v1.StreetViewPublishRpcMessages.BatchUpdatePhotosResponse result = new com.google.geo.ugc.streetview.publish.v1.StreetViewPublishRpcMessages.BatchUpdatePhotosResponse(this);
        buildPartialRepeatedFields(result);
        if (bitField0_ != 0) { buildPartial0(result); }
        onBuilt();
        return result;
      }

      private void buildPartialRepeatedFields(com.google.geo.ugc.streetview.publish.v1.StreetViewPublishRpcMessages.BatchUpdatePhotosResponse result) {
        if (resultsBuilder_ == null) {
          if (((bitField0_ & 0x00000001) != 0)) {
            results_ = java.util.Collections.unmodifiableList(results_);
            bitField0_ = (bitField0_ & ~0x00000001);
          }
          result.results_ = results_;
        } else {
          result.results_ = resultsBuilder_.build();
        }
      }

      private void buildPartial0(com.google.geo.ugc.streetview.publish.v1.StreetViewPublishRpcMessages.BatchUpdatePhotosResponse result) {
        int from_bitField0_ = bitField0_;
      }

      @java.lang.Override
      public Builder clone() {
        return super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.google.geo.ugc.streetview.publish.v1.StreetViewPublishRpcMessages.BatchUpdatePhotosResponse) {
          return mergeFrom((com.google.geo.ugc.streetview.publish.v1.StreetViewPublishRpcMessages.BatchUpdatePhotosResponse)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(com.google.geo.ugc.streetview.publish.v1.StreetViewPublishRpcMessages.BatchUpdatePhotosResponse other) {
        if (other == com.google.geo.ugc.streetview.publish.v1.StreetViewPublishRpcMessages.BatchUpdatePhotosResponse.getDefaultInstance()) return this;
        if (resultsBuilder_ == null) {
          if (!other.results_.isEmpty()) {
            if (results_.isEmpty()) {
              results_ = other.results_;
              bitField0_ = (bitField0_ & ~0x00000001);
            } else {
              ensureResultsIsMutable();
              results_.addAll(other.results_);
            }
            onChanged();
          }
        } else {
          if (!other.results_.isEmpty()) {
            if (resultsBuilder_.isEmpty()) {
              resultsBuilder_.dispose();
              resultsBuilder_ = null;
              results_ = other.results_;
              bitField0_ = (bitField0_ & ~0x00000001);
              resultsBuilder_ = 
                com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?
                   getResultsFieldBuilder() : null;
            } else {
              resultsBuilder_.addAllMessages(other.results_);
            }
          }
        }
        this.mergeUnknownFields(other.getUnknownFields());
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        if (extensionRegistry == null) {
          throw new java.lang.NullPointerException();
        }
        try {
          boolean done = false;
          while (!done) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                done = true;
                break;
              case 10: {
                com.google.geo.ugc.streetview.publish.v1.StreetViewPublishRpcMessages.PhotoResponse m =
                    input.readMessage(
                        com.google.geo.ugc.streetview.publish.v1.StreetViewPublishRpcMessages.PhotoResponse.parser(),
                        extensionRegistry);
                if (resultsBuilder_ == null) {
                  ensureResultsIsMutable();
                  results_.add(m);
                } else {
                  resultsBuilder_.addMessage(m);
                }
                break;
              } // case 10
              default: {
                if (!super.parseUnknownField(input, extensionRegistry, tag)) {
                  done = true; // was an endgroup tag
                }
                break;
              } // default:
            } // switch (tag)
          } // while (!done)
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.unwrapIOException();
        } finally {
          onChanged();
        } // finally
        return this;
      }
      private int bitField0_;

      private java.util.List<com.google.geo.ugc.streetview.publish.v1.StreetViewPublishRpcMessages.PhotoResponse> results_ =
        java.util.Collections.emptyList();
      private void ensureResultsIsMutable() {
        if (!((bitField0_ & 0x00000001) != 0)) {
          results_ = new java.util.ArrayList<com.google.geo.ugc.streetview.publish.v1.StreetViewPublishRpcMessages.PhotoResponse>(results_);
          bitField0_ |= 0x00000001;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilderV3<
          com.google.geo.ugc.streetview.publish.v1.StreetViewPublishRpcMessages.PhotoResponse, com.google.geo.ugc.streetview.publish.v1.StreetViewPublishRpcMessages.PhotoResponse.Builder, com.google.geo.ugc.streetview.publish.v1.StreetViewPublishRpcMessages.PhotoResponseOrBuilder> resultsBuilder_;

      /**
       * <pre>
       * List of results for each individual
       * [Photo][google.streetview.publish.v1.Photo] updated, in the same order as
       * the request.
       * </pre>
       *
       * <code>repeated .google.streetview.publish.v1.PhotoResponse results = 1;</code>
       */
      public java.util.List<com.google.geo.ugc.streetview.publish.v1.StreetViewPublishRpcMessages.PhotoResponse> getResultsList() {
        if (resultsBuilder_ == null) {
          return java.util.Collections.unmodifiableList(results_);
        } else {
          return resultsBuilder_.getMessageList();
        }
      }
      /**
       * <pre>
       * List of results for each individual
       * [Photo][google.streetview.publish.v1.Photo] updated, in the same order as
       * the request.
       * </pre>
       *
       * <code>repeated .google.streetview.publish.v1.PhotoResponse results = 1;</code>
       */
      public int getResultsCount() {
        if (resultsBuilder_ == null) {
          return results_.size();
        } else {
          return resultsBuilder_.getCount();
        }
      }
      /**
       * <pre>
       * List of results for each individual
       * [Photo][google.streetview.publish.v1.Photo] updated, in the same order as
       * the request.
       * </pre>
       *
       * <code>repeated .google.streetview.publish.v1.PhotoResponse results = 1;</code>
       */
      public com.google.geo.ugc.streetview.publish.v1.StreetViewPublishRpcMessages.PhotoResponse getResults(int index) {
        if (resultsBuilder_ == null) {
          return results_.get(index);
        } else {
          return resultsBuilder_.getMessage(index);
        }
      }
      /**
       * <pre>
       * List of results for each individual
       * [Photo][google.streetview.publish.v1.Photo] updated, in the same order as
       * the request.
       * </pre>
       *
       * <code>repeated .google.streetview.publish.v1.PhotoResponse results = 1;</code>
       */
      public Builder setResults(
          int index, com.google.geo.ugc.streetview.publish.v1.StreetViewPublishRpcMessages.PhotoResponse value) {
        if (resultsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureResultsIsMutable();
          results_.set(index, value);
          onChanged();
        } else {
          resultsBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <pre>
       * List of results for each individual
       * [Photo][google.streetview.publish.v1.Photo] updated, in the same order as
       * the request.
       * </pre>
       *
       * <code>repeated .google.streetview.publish.v1.PhotoResponse results = 1;</code>
       */
      public Builder setResults(
          int index, com.google.geo.ugc.streetview.publish.v1.StreetViewPublishRpcMessages.PhotoResponse.Builder builderForValue) {
        if (resultsBuilder_ == null) {
          ensureResultsIsMutable();
          results_.set(index, builderForValue.build());
          onChanged();
        } else {
          resultsBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       * List of results for each individual
       * [Photo][google.streetview.publish.v1.Photo] updated, in the same order as
       * the request.
       * </pre>
       *
       * <code>repeated .google.streetview.publish.v1.PhotoResponse results = 1;</code>
       */
      public Builder addResults(com.google.geo.ugc.streetview.publish.v1.StreetViewPublishRpcMessages.PhotoResponse value) {
        if (resultsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureResultsIsMutable();
          results_.add(value);
          onChanged();
        } else {
          resultsBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <pre>
       * List of results for each individual
       * [Photo][google.streetview.publish.v1.Photo] updated, in the same order as
       * the request.
       * </pre>
       *
       * <code>repeated .google.streetview.publish.v1.PhotoResponse results = 1;</code>
       */
      public Builder addResults(
          int index, com.google.geo.ugc.streetview.publish.v1.StreetViewPublishRpcMessages.PhotoResponse value) {
        if (resultsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureResultsIsMutable();
          results_.add(index, value);
          onChanged();
        } else {
          resultsBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <pre>
       * List of results for each individual
       * [Photo][google.streetview.publish.v1.Photo] updated, in the same order as
       * the request.
       * </pre>
       *
       * <code>repeated .google.streetview.publish.v1.PhotoResponse results = 1;</code>
       */
      public Builder addResults(
          com.google.geo.ugc.streetview.publish.v1.StreetViewPublishRpcMessages.PhotoResponse.Builder builderForValue) {
        if (resultsBuilder_ == null) {
          ensureResultsIsMutable();
          results_.add(builderForValue.build());
          onChanged();
        } else {
          resultsBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       * List of results for each individual
       * [Photo][google.streetview.publish.v1.Photo] updated, in the same order as
       * the request.
       * </pre>
       *
       * <code>repeated .google.streetview.publish.v1.PhotoResponse results = 1;</code>
       */
      public Builder addResults(
          int index, com.google.geo.ugc.streetview.publish.v1.StreetViewPublishRpcMessages.PhotoResponse.Builder builderForValue) {
        if (resultsBuilder_ == null) {
          ensureResultsIsMutable();
          results_.add(index, builderForValue.build());
          onChanged();
        } else {
          resultsBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       * List of results for each individual
       * [Photo][google.streetview.publish.v1.Photo] updated, in the same order as
       * the request.
       * </pre>
       *
       * <code>repeated .google.streetview.publish.v1.PhotoResponse results = 1;</code>
       */
      public Builder addAllResults(
          java.lang.Iterable<? extends com.google.geo.ugc.streetview.publish.v1.StreetViewPublishRpcMessages.PhotoResponse> values) {
        if (resultsBuilder_ == null) {
          ensureResultsIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
              values, results_);
          onChanged();
        } else {
          resultsBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <pre>
       * List of results for each individual
       * [Photo][google.streetview.publish.v1.Photo] updated, in the same order as
       * the request.
       * </pre>
       *
       * <code>repeated .google.streetview.publish.v1.PhotoResponse results = 1;</code>
       */
      public Builder clearResults() {
        if (resultsBuilder_ == null) {
          results_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000001);
          onChanged();
        } else {
          resultsBuilder_.clear();
        }
        return this;
      }
      /**
       * <pre>
       * List of results for each individual
       * [Photo][google.streetview.publish.v1.Photo] updated, in the same order as
       * the request.
       * </pre>
       *
       * <code>repeated .google.streetview.publish.v1.PhotoResponse results = 1;</code>
       */
      public Builder removeResults(int index) {
        if (resultsBuilder_ == null) {
          ensureResultsIsMutable();
          results_.remove(index);
          onChanged();
        } else {
          resultsBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <pre>
       * List of results for each individual
       * [Photo][google.streetview.publish.v1.Photo] updated, in the same order as
       * the request.
       * </pre>
       *
       * <code>repeated .google.streetview.publish.v1.PhotoResponse results = 1;</code>
       */
      public com.google.geo.ugc.streetview.publish.v1.StreetViewPublishRpcMessages.PhotoResponse.Builder getResultsBuilder(
          int index) {
        return getResultsFieldBuilder().getBuilder(index);
      }
      /**
       * <pre>
       * List of results for each individual
       * [Photo][google.streetview.publish.v1.Photo] updated, in the same order as
       * the request.
       * </pre>
       *
       * <code>repeated .google.streetview.publish.v1.PhotoResponse results = 1;</code>
       */
      public com.google.geo.ugc.streetview.publish.v1.StreetViewPublishRpcMessages.PhotoResponseOrBuilder getResultsOrBuilder(
          int index) {
        if (resultsBuilder_ == null) {
          return results_.get(index);  } else {
          return resultsBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <pre>
       * List of results for each individual
       * [Photo][google.streetview.publish.v1.Photo] updated, in the same order as
       * the request.
       * </pre>
       *
       * <code>repeated .google.streetview.publish.v1.PhotoResponse results = 1;</code>
       */
      public java.util.List<? extends com.google.geo.ugc.streetview.publish.v1.StreetViewPublishRpcMessages.PhotoResponseOrBuilder> 
           getResultsOrBuilderList() {
        if (resultsBuilder_ != null) {
          return resultsBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(results_);
        }
      }
      /**
       * <pre>
       * List of results for each individual
       * [Photo][google.streetview.publish.v1.Photo] updated, in the same order as
       * the request.
       * </pre>
       *
       * <code>repeated .google.streetview.publish.v1.PhotoResponse results = 1;</code>
       */
      public com.google.geo.ugc.streetview.publish.v1.StreetViewPublishRpcMessages.PhotoResponse.Builder addResultsBuilder() {
        return getResultsFieldBuilder().addBuilder(
            com.google.geo.ugc.streetview.publish.v1.StreetViewPublishRpcMessages.PhotoResponse.getDefaultInstance());
      }
      /**
       * <pre>
       * List of results for each individual
       * [Photo][google.streetview.publish.v1.Photo] updated, in the same order as
       * the request.
       * </pre>
       *
       * <code>repeated .google.streetview.publish.v1.PhotoResponse results = 1;</code>
       */
      public com.google.geo.ugc.streetview.publish.v1.StreetViewPublishRpcMessages.PhotoResponse.Builder addResultsBuilder(
          int index) {
        return getResultsFieldBuilder().addBuilder(
            index, com.google.geo.ugc.streetview.publish.v1.StreetViewPublishRpcMessages.PhotoResponse.getDefaultInstance());
      }
      /**
       * <pre>
       * List of results for each individual
       * [Photo][google.streetview.publish.v1.Photo] updated, in the same order as
       * the request.
       * </pre>
       *
       * <code>repeated .google.streetview.publish.v1.PhotoResponse results = 1;</code>
       */
      public java.util.List<com.google.geo.ugc.streetview.publish.v1.StreetViewPublishRpcMessages.PhotoResponse.Builder> 
           getResultsBuilderList() {
        return getResultsFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilderV3<
          com.google.geo.ugc.streetview.publish.v1.StreetViewPublishRpcMessages.PhotoResponse, com.google.geo.ugc.streetview.publish.v1.StreetViewPublishRpcMessages.PhotoResponse.Builder, com.google.geo.ugc.streetview.publish.v1.StreetViewPublishRpcMessages.PhotoResponseOrBuilder> 
          getResultsFieldBuilder() {
        if (resultsBuilder_ == null) {
          resultsBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<
              com.google.geo.ugc.streetview.publish.v1.StreetViewPublishRpcMessages.PhotoResponse, com.google.geo.ugc.streetview.publish.v1.StreetViewPublishRpcMessages.PhotoResponse.Builder, com.google.geo.ugc.streetview.publish.v1.StreetViewPublishRpcMessages.PhotoResponseOrBuilder>(
                  results_,
                  ((bitField0_ & 0x00000001) != 0),
                  getParentForChildren(),
                  isClean());
          results_ = null;
        }
        return resultsBuilder_;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:google.streetview.publish.v1.BatchUpdatePhotosResponse)
    }

    // @@protoc_insertion_point(class_scope:google.streetview.publish.v1.BatchUpdatePhotosResponse)
    private static final com.google.geo.ugc.streetview.publish.v1.StreetViewPublishRpcMessages.BatchUpdatePhotosResponse DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new com.google.geo.ugc.streetview.publish.v1.StreetViewPublishRpcMessages.BatchUpdatePhotosResponse();
    }

    public static com.google.geo.ugc.streetview.publish.v1.StreetViewPublishRpcMessages.BatchUpdatePhotosResponse getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<BatchUpdatePhotosResponse>
        PARSER = new com.google.protobuf.AbstractParser<BatchUpdatePhotosResponse>() {
      @java.lang.Override
      public BatchUpdatePhotosResponse parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        Builder builder = newBuilder();
        try {
          builder.mergeFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.setUnfinishedMessage(builder.buildPartial());
        } catch (com.google.protobuf.UninitializedMessageException e) {
          throw e.asInvalidProtocolBufferException().setUnfinishedMessage(builder.buildPartial());
        } catch (java.io.IOException e) {
          throw new com.google.protobuf.InvalidProtocolBufferException(e)
              .setUnfinishedMessage(builder.buildPartial());
        }
        return builder.buildPartial();
      }
    };

    public static com.google.protobuf.Parser<BatchUpdatePhotosResponse> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<BatchUpdatePhotosResponse> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.geo.ugc.streetview.publish.v1.StreetViewPublishRpcMessages.BatchUpdatePhotosResponse getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface DeletePhotoRequestOrBuilder extends
      // @@protoc_insertion_point(interface_extends:google.streetview.publish.v1.DeletePhotoRequest)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <pre>
     * Required. ID of the [Photo][google.streetview.publish.v1.Photo].
     * </pre>
     *
     * <code>string photo_id = 1 [(.google.api.field_behavior) = REQUIRED];</code>
     * @return The photoId.
     */
    java.lang.String getPhotoId();
    /**
     * <pre>
     * Required. ID of the [Photo][google.streetview.publish.v1.Photo].
     * </pre>
     *
     * <code>string photo_id = 1 [(.google.api.field_behavior) = REQUIRED];</code>
     * @return The bytes for photoId.
     */
    com.google.protobuf.ByteString
        getPhotoIdBytes();
  }
  /**
   * <pre>
   * Request to delete a [Photo][google.streetview.publish.v1.Photo].
   * </pre>
   *
   * Protobuf type {@code google.streetview.publish.v1.DeletePhotoRequest}
   */
  public static final class DeletePhotoRequest extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:google.streetview.publish.v1.DeletePhotoRequest)
      DeletePhotoRequestOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use DeletePhotoRequest.newBuilder() to construct.
    private DeletePhotoRequest(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private DeletePhotoRequest() {
      photoId_ = "";
    }

    @java.lang.Override
    @SuppressWarnings({"unused"})
    protected java.lang.Object newInstance(
        UnusedPrivateParameter unused) {
      return new DeletePhotoRequest();
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.google.geo.ugc.streetview.publish.v1.StreetViewPublishRpcMessages.internal_static_google_streetview_publish_v1_DeletePhotoRequest_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.google.geo.ugc.streetview.publish.v1.StreetViewPublishRpcMessages.internal_static_google_streetview_publish_v1_DeletePhotoRequest_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.google.geo.ugc.streetview.publish.v1.StreetViewPublishRpcMessages.DeletePhotoRequest.class, com.google.geo.ugc.streetview.publish.v1.StreetViewPublishRpcMessages.DeletePhotoRequest.Builder.class);
    }

    public static final int PHOTO_ID_FIELD_NUMBER = 1;
    @SuppressWarnings("serial")
    private volatile java.lang.Object photoId_ = "";
    /**
     * <pre>
     * Required. ID of the [Photo][google.streetview.publish.v1.Photo].
     * </pre>
     *
     * <code>string photo_id = 1 [(.google.api.field_behavior) = REQUIRED];</code>
     * @return The photoId.
     */
    @java.lang.Override
    public java.lang.String getPhotoId() {
      java.lang.Object ref = photoId_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        photoId_ = s;
        return s;
      }
    }
    /**
     * <pre>
     * Required. ID of the [Photo][google.streetview.publish.v1.Photo].
     * </pre>
     *
     * <code>string photo_id = 1 [(.google.api.field_behavior) = REQUIRED];</code>
     * @return The bytes for photoId.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString
        getPhotoIdBytes() {
      java.lang.Object ref = photoId_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        photoId_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(photoId_)) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 1, photoId_);
      }
      getUnknownFields().writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(photoId_)) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(1, photoId_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof com.google.geo.ugc.streetview.publish.v1.StreetViewPublishRpcMessages.DeletePhotoRequest)) {
        return super.equals(obj);
      }
      com.google.geo.ugc.streetview.publish.v1.StreetViewPublishRpcMessages.DeletePhotoRequest other = (com.google.geo.ugc.streetview.publish.v1.StreetViewPublishRpcMessages.DeletePhotoRequest) obj;

      if (!getPhotoId()
          .equals(other.getPhotoId())) return false;
      if (!getUnknownFields().equals(other.getUnknownFields())) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      hash = (37 * hash) + PHOTO_ID_FIELD_NUMBER;
      hash = (53 * hash) + getPhotoId().hashCode();
      hash = (29 * hash) + getUnknownFields().hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static com.google.geo.ugc.streetview.publish.v1.StreetViewPublishRpcMessages.DeletePhotoRequest parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.google.geo.ugc.streetview.publish.v1.StreetViewPublishRpcMessages.DeletePhotoRequest parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.google.geo.ugc.streetview.publish.v1.StreetViewPublishRpcMessages.DeletePhotoRequest parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.google.geo.ugc.streetview.publish.v1.StreetViewPublishRpcMessages.DeletePhotoRequest parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.google.geo.ugc.streetview.publish.v1.StreetViewPublishRpcMessages.DeletePhotoRequest parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.google.geo.ugc.streetview.publish.v1.StreetViewPublishRpcMessages.DeletePhotoRequest parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.google.geo.ugc.streetview.publish.v1.StreetViewPublishRpcMessages.DeletePhotoRequest parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static com.google.geo.ugc.streetview.publish.v1.StreetViewPublishRpcMessages.DeletePhotoRequest parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static com.google.geo.ugc.streetview.publish.v1.StreetViewPublishRpcMessages.DeletePhotoRequest parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static com.google.geo.ugc.streetview.publish.v1.StreetViewPublishRpcMessages.DeletePhotoRequest parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static com.google.geo.ugc.streetview.publish.v1.StreetViewPublishRpcMessages.DeletePhotoRequest parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static com.google.geo.ugc.streetview.publish.v1.StreetViewPublishRpcMessages.DeletePhotoRequest parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(com.google.geo.ugc.streetview.publish.v1.StreetViewPublishRpcMessages.DeletePhotoRequest prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * <pre>
     * Request to delete a [Photo][google.streetview.publish.v1.Photo].
     * </pre>
     *
     * Protobuf type {@code google.streetview.publish.v1.DeletePhotoRequest}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:google.streetview.publish.v1.DeletePhotoRequest)
        com.google.geo.ugc.streetview.publish.v1.StreetViewPublishRpcMessages.DeletePhotoRequestOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return com.google.geo.ugc.streetview.publish.v1.StreetViewPublishRpcMessages.internal_static_google_streetview_publish_v1_DeletePhotoRequest_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return com.google.geo.ugc.streetview.publish.v1.StreetViewPublishRpcMessages.internal_static_google_streetview_publish_v1_DeletePhotoRequest_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                com.google.geo.ugc.streetview.publish.v1.StreetViewPublishRpcMessages.DeletePhotoRequest.class, com.google.geo.ugc.streetview.publish.v1.StreetViewPublishRpcMessages.DeletePhotoRequest.Builder.class);
      }

      // Construct using com.google.geo.ugc.streetview.publish.v1.StreetViewPublishRpcMessages.DeletePhotoRequest.newBuilder()
      private Builder() {

      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);

      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        bitField0_ = 0;
        photoId_ = "";
        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.google.geo.ugc.streetview.publish.v1.StreetViewPublishRpcMessages.internal_static_google_streetview_publish_v1_DeletePhotoRequest_descriptor;
      }

      @java.lang.Override
      public com.google.geo.ugc.streetview.publish.v1.StreetViewPublishRpcMessages.DeletePhotoRequest getDefaultInstanceForType() {
        return com.google.geo.ugc.streetview.publish.v1.StreetViewPublishRpcMessages.DeletePhotoRequest.getDefaultInstance();
      }

      @java.lang.Override
      public com.google.geo.ugc.streetview.publish.v1.StreetViewPublishRpcMessages.DeletePhotoRequest build() {
        com.google.geo.ugc.streetview.publish.v1.StreetViewPublishRpcMessages.DeletePhotoRequest result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public com.google.geo.ugc.streetview.publish.v1.StreetViewPublishRpcMessages.DeletePhotoRequest buildPartial() {
        com.google.geo.ugc.streetview.publish.v1.StreetViewPublishRpcMessages.DeletePhotoRequest result = new com.google.geo.ugc.streetview.publish.v1.StreetViewPublishRpcMessages.DeletePhotoRequest(this);
        if (bitField0_ != 0) { buildPartial0(result); }
        onBuilt();
        return result;
      }

      private void buildPartial0(com.google.geo.ugc.streetview.publish.v1.StreetViewPublishRpcMessages.DeletePhotoRequest result) {
        int from_bitField0_ = bitField0_;
        if (((from_bitField0_ & 0x00000001) != 0)) {
          result.photoId_ = photoId_;
        }
      }

      @java.lang.Override
      public Builder clone() {
        return super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.google.geo.ugc.streetview.publish.v1.StreetViewPublishRpcMessages.DeletePhotoRequest) {
          return mergeFrom((com.google.geo.ugc.streetview.publish.v1.StreetViewPublishRpcMessages.DeletePhotoRequest)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(com.google.geo.ugc.streetview.publish.v1.StreetViewPublishRpcMessages.DeletePhotoRequest other) {
        if (other == com.google.geo.ugc.streetview.publish.v1.StreetViewPublishRpcMessages.DeletePhotoRequest.getDefaultInstance()) return this;
        if (!other.getPhotoId().isEmpty()) {
          photoId_ = other.photoId_;
          bitField0_ |= 0x00000001;
          onChanged();
        }
        this.mergeUnknownFields(other.getUnknownFields());
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        if (extensionRegistry == null) {
          throw new java.lang.NullPointerException();
        }
        try {
          boolean done = false;
          while (!done) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                done = true;
                break;
              case 10: {
                photoId_ = input.readStringRequireUtf8();
                bitField0_ |= 0x00000001;
                break;
              } // case 10
              default: {
                if (!super.parseUnknownField(input, extensionRegistry, tag)) {
                  done = true; // was an endgroup tag
                }
                break;
              } // default:
            } // switch (tag)
          } // while (!done)
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.unwrapIOException();
        } finally {
          onChanged();
        } // finally
        return this;
      }
      private int bitField0_;

      private java.lang.Object photoId_ = "";
      /**
       * <pre>
       * Required. ID of the [Photo][google.streetview.publish.v1.Photo].
       * </pre>
       *
       * <code>string photo_id = 1 [(.google.api.field_behavior) = REQUIRED];</code>
       * @return The photoId.
       */
      public java.lang.String getPhotoId() {
        java.lang.Object ref = photoId_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          photoId_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <pre>
       * Required. ID of the [Photo][google.streetview.publish.v1.Photo].
       * </pre>
       *
       * <code>string photo_id = 1 [(.google.api.field_behavior) = REQUIRED];</code>
       * @return The bytes for photoId.
       */
      public com.google.protobuf.ByteString
          getPhotoIdBytes() {
        java.lang.Object ref = photoId_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          photoId_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       * Required. ID of the [Photo][google.streetview.publish.v1.Photo].
       * </pre>
       *
       * <code>string photo_id = 1 [(.google.api.field_behavior) = REQUIRED];</code>
       * @param value The photoId to set.
       * @return This builder for chaining.
       */
      public Builder setPhotoId(
          java.lang.String value) {
        if (value == null) { throw new NullPointerException(); }
        photoId_ = value;
        bitField0_ |= 0x00000001;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Required. ID of the [Photo][google.streetview.publish.v1.Photo].
       * </pre>
       *
       * <code>string photo_id = 1 [(.google.api.field_behavior) = REQUIRED];</code>
       * @return This builder for chaining.
       */
      public Builder clearPhotoId() {
        photoId_ = getDefaultInstance().getPhotoId();
        bitField0_ = (bitField0_ & ~0x00000001);
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Required. ID of the [Photo][google.streetview.publish.v1.Photo].
       * </pre>
       *
       * <code>string photo_id = 1 [(.google.api.field_behavior) = REQUIRED];</code>
       * @param value The bytes for photoId to set.
       * @return This builder for chaining.
       */
      public Builder setPhotoIdBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) { throw new NullPointerException(); }
        checkByteStringIsUtf8(value);
        photoId_ = value;
        bitField0_ |= 0x00000001;
        onChanged();
        return this;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:google.streetview.publish.v1.DeletePhotoRequest)
    }

    // @@protoc_insertion_point(class_scope:google.streetview.publish.v1.DeletePhotoRequest)
    private static final com.google.geo.ugc.streetview.publish.v1.StreetViewPublishRpcMessages.DeletePhotoRequest DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new com.google.geo.ugc.streetview.publish.v1.StreetViewPublishRpcMessages.DeletePhotoRequest();
    }

    public static com.google.geo.ugc.streetview.publish.v1.StreetViewPublishRpcMessages.DeletePhotoRequest getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<DeletePhotoRequest>
        PARSER = new com.google.protobuf.AbstractParser<DeletePhotoRequest>() {
      @java.lang.Override
      public DeletePhotoRequest parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        Builder builder = newBuilder();
        try {
          builder.mergeFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.setUnfinishedMessage(builder.buildPartial());
        } catch (com.google.protobuf.UninitializedMessageException e) {
          throw e.asInvalidProtocolBufferException().setUnfinishedMessage(builder.buildPartial());
        } catch (java.io.IOException e) {
          throw new com.google.protobuf.InvalidProtocolBufferException(e)
              .setUnfinishedMessage(builder.buildPartial());
        }
        return builder.buildPartial();
      }
    };

    public static com.google.protobuf.Parser<DeletePhotoRequest> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<DeletePhotoRequest> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.geo.ugc.streetview.publish.v1.StreetViewPublishRpcMessages.DeletePhotoRequest getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface BatchDeletePhotosRequestOrBuilder extends
      // @@protoc_insertion_point(interface_extends:google.streetview.publish.v1.BatchDeletePhotosRequest)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <pre>
     * Required. IDs of the [Photos][google.streetview.publish.v1.Photo]. HTTP
     * GET requests require the following syntax for the URL query parameter:
     * `photoIds=&lt;id1&gt;&amp;photoIds=&lt;id2&gt;&amp;...`.
     * </pre>
     *
     * <code>repeated string photo_ids = 1 [(.google.api.field_behavior) = REQUIRED];</code>
     * @return A list containing the photoIds.
     */
    java.util.List<java.lang.String>
        getPhotoIdsList();
    /**
     * <pre>
     * Required. IDs of the [Photos][google.streetview.publish.v1.Photo]. HTTP
     * GET requests require the following syntax for the URL query parameter:
     * `photoIds=&lt;id1&gt;&amp;photoIds=&lt;id2&gt;&amp;...`.
     * </pre>
     *
     * <code>repeated string photo_ids = 1 [(.google.api.field_behavior) = REQUIRED];</code>
     * @return The count of photoIds.
     */
    int getPhotoIdsCount();
    /**
     * <pre>
     * Required. IDs of the [Photos][google.streetview.publish.v1.Photo]. HTTP
     * GET requests require the following syntax for the URL query parameter:
     * `photoIds=&lt;id1&gt;&amp;photoIds=&lt;id2&gt;&amp;...`.
     * </pre>
     *
     * <code>repeated string photo_ids = 1 [(.google.api.field_behavior) = REQUIRED];</code>
     * @param index The index of the element to return.
     * @return The photoIds at the given index.
     */
    java.lang.String getPhotoIds(int index);
    /**
     * <pre>
     * Required. IDs of the [Photos][google.streetview.publish.v1.Photo]. HTTP
     * GET requests require the following syntax for the URL query parameter:
     * `photoIds=&lt;id1&gt;&amp;photoIds=&lt;id2&gt;&amp;...`.
     * </pre>
     *
     * <code>repeated string photo_ids = 1 [(.google.api.field_behavior) = REQUIRED];</code>
     * @param index The index of the value to return.
     * @return The bytes of the photoIds at the given index.
     */
    com.google.protobuf.ByteString
        getPhotoIdsBytes(int index);
  }
  /**
   * <pre>
   * Request to delete multiple [Photos][google.streetview.publish.v1.Photo].
   * </pre>
   *
   * Protobuf type {@code google.streetview.publish.v1.BatchDeletePhotosRequest}
   */
  public static final class BatchDeletePhotosRequest extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:google.streetview.publish.v1.BatchDeletePhotosRequest)
      BatchDeletePhotosRequestOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use BatchDeletePhotosRequest.newBuilder() to construct.
    private BatchDeletePhotosRequest(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private BatchDeletePhotosRequest() {
      photoIds_ = com.google.protobuf.LazyStringArrayList.EMPTY;
    }

    @java.lang.Override
    @SuppressWarnings({"unused"})
    protected java.lang.Object newInstance(
        UnusedPrivateParameter unused) {
      return new BatchDeletePhotosRequest();
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.google.geo.ugc.streetview.publish.v1.StreetViewPublishRpcMessages.internal_static_google_streetview_publish_v1_BatchDeletePhotosRequest_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.google.geo.ugc.streetview.publish.v1.StreetViewPublishRpcMessages.internal_static_google_streetview_publish_v1_BatchDeletePhotosRequest_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.google.geo.ugc.streetview.publish.v1.StreetViewPublishRpcMessages.BatchDeletePhotosRequest.class, com.google.geo.ugc.streetview.publish.v1.StreetViewPublishRpcMessages.BatchDeletePhotosRequest.Builder.class);
    }

    public static final int PHOTO_IDS_FIELD_NUMBER = 1;
    @SuppressWarnings("serial")
    private com.google.protobuf.LazyStringList photoIds_;
    /**
     * <pre>
     * Required. IDs of the [Photos][google.streetview.publish.v1.Photo]. HTTP
     * GET requests require the following syntax for the URL query parameter:
     * `photoIds=&lt;id1&gt;&amp;photoIds=&lt;id2&gt;&amp;...`.
     * </pre>
     *
     * <code>repeated string photo_ids = 1 [(.google.api.field_behavior) = REQUIRED];</code>
     * @return A list containing the photoIds.
     */
    public com.google.protobuf.ProtocolStringList
        getPhotoIdsList() {
      return photoIds_;
    }
    /**
     * <pre>
     * Required. IDs of the [Photos][google.streetview.publish.v1.Photo]. HTTP
     * GET requests require the following syntax for the URL query parameter:
     * `photoIds=&lt;id1&gt;&amp;photoIds=&lt;id2&gt;&amp;...`.
     * </pre>
     *
     * <code>repeated string photo_ids = 1 [(.google.api.field_behavior) = REQUIRED];</code>
     * @return The count of photoIds.
     */
    public int getPhotoIdsCount() {
      return photoIds_.size();
    }
    /**
     * <pre>
     * Required. IDs of the [Photos][google.streetview.publish.v1.Photo]. HTTP
     * GET requests require the following syntax for the URL query parameter:
     * `photoIds=&lt;id1&gt;&amp;photoIds=&lt;id2&gt;&amp;...`.
     * </pre>
     *
     * <code>repeated string photo_ids = 1 [(.google.api.field_behavior) = REQUIRED];</code>
     * @param index The index of the element to return.
     * @return The photoIds at the given index.
     */
    public java.lang.String getPhotoIds(int index) {
      return photoIds_.get(index);
    }
    /**
     * <pre>
     * Required. IDs of the [Photos][google.streetview.publish.v1.Photo]. HTTP
     * GET requests require the following syntax for the URL query parameter:
     * `photoIds=&lt;id1&gt;&amp;photoIds=&lt;id2&gt;&amp;...`.
     * </pre>
     *
     * <code>repeated string photo_ids = 1 [(.google.api.field_behavior) = REQUIRED];</code>
     * @param index The index of the value to return.
     * @return The bytes of the photoIds at the given index.
     */
    public com.google.protobuf.ByteString
        getPhotoIdsBytes(int index) {
      return photoIds_.getByteString(index);
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      for (int i = 0; i < photoIds_.size(); i++) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 1, photoIds_.getRaw(i));
      }
      getUnknownFields().writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      {
        int dataSize = 0;
        for (int i = 0; i < photoIds_.size(); i++) {
          dataSize += computeStringSizeNoTag(photoIds_.getRaw(i));
        }
        size += dataSize;
        size += 1 * getPhotoIdsList().size();
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof com.google.geo.ugc.streetview.publish.v1.StreetViewPublishRpcMessages.BatchDeletePhotosRequest)) {
        return super.equals(obj);
      }
      com.google.geo.ugc.streetview.publish.v1.StreetViewPublishRpcMessages.BatchDeletePhotosRequest other = (com.google.geo.ugc.streetview.publish.v1.StreetViewPublishRpcMessages.BatchDeletePhotosRequest) obj;

      if (!getPhotoIdsList()
          .equals(other.getPhotoIdsList())) return false;
      if (!getUnknownFields().equals(other.getUnknownFields())) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      if (getPhotoIdsCount() > 0) {
        hash = (37 * hash) + PHOTO_IDS_FIELD_NUMBER;
        hash = (53 * hash) + getPhotoIdsList().hashCode();
      }
      hash = (29 * hash) + getUnknownFields().hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static com.google.geo.ugc.streetview.publish.v1.StreetViewPublishRpcMessages.BatchDeletePhotosRequest parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.google.geo.ugc.streetview.publish.v1.StreetViewPublishRpcMessages.BatchDeletePhotosRequest parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.google.geo.ugc.streetview.publish.v1.StreetViewPublishRpcMessages.BatchDeletePhotosRequest parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.google.geo.ugc.streetview.publish.v1.StreetViewPublishRpcMessages.BatchDeletePhotosRequest parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.google.geo.ugc.streetview.publish.v1.StreetViewPublishRpcMessages.BatchDeletePhotosRequest parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.google.geo.ugc.streetview.publish.v1.StreetViewPublishRpcMessages.BatchDeletePhotosRequest parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.google.geo.ugc.streetview.publish.v1.StreetViewPublishRpcMessages.BatchDeletePhotosRequest parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static com.google.geo.ugc.streetview.publish.v1.StreetViewPublishRpcMessages.BatchDeletePhotosRequest parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static com.google.geo.ugc.streetview.publish.v1.StreetViewPublishRpcMessages.BatchDeletePhotosRequest parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static com.google.geo.ugc.streetview.publish.v1.StreetViewPublishRpcMessages.BatchDeletePhotosRequest parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static com.google.geo.ugc.streetview.publish.v1.StreetViewPublishRpcMessages.BatchDeletePhotosRequest parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static com.google.geo.ugc.streetview.publish.v1.StreetViewPublishRpcMessages.BatchDeletePhotosRequest parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(com.google.geo.ugc.streetview.publish.v1.StreetViewPublishRpcMessages.BatchDeletePhotosRequest prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * <pre>
     * Request to delete multiple [Photos][google.streetview.publish.v1.Photo].
     * </pre>
     *
     * Protobuf type {@code google.streetview.publish.v1.BatchDeletePhotosRequest}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:google.streetview.publish.v1.BatchDeletePhotosRequest)
        com.google.geo.ugc.streetview.publish.v1.StreetViewPublishRpcMessages.BatchDeletePhotosRequestOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return com.google.geo.ugc.streetview.publish.v1.StreetViewPublishRpcMessages.internal_static_google_streetview_publish_v1_BatchDeletePhotosRequest_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return com.google.geo.ugc.streetview.publish.v1.StreetViewPublishRpcMessages.internal_static_google_streetview_publish_v1_BatchDeletePhotosRequest_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                com.google.geo.ugc.streetview.publish.v1.StreetViewPublishRpcMessages.BatchDeletePhotosRequest.class, com.google.geo.ugc.streetview.publish.v1.StreetViewPublishRpcMessages.BatchDeletePhotosRequest.Builder.class);
      }

      // Construct using com.google.geo.ugc.streetview.publish.v1.StreetViewPublishRpcMessages.BatchDeletePhotosRequest.newBuilder()
      private Builder() {

      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);

      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        bitField0_ = 0;
        photoIds_ = com.google.protobuf.LazyStringArrayList.EMPTY;
        bitField0_ = (bitField0_ & ~0x00000001);
        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.google.geo.ugc.streetview.publish.v1.StreetViewPublishRpcMessages.internal_static_google_streetview_publish_v1_BatchDeletePhotosRequest_descriptor;
      }

      @java.lang.Override
      public com.google.geo.ugc.streetview.publish.v1.StreetViewPublishRpcMessages.BatchDeletePhotosRequest getDefaultInstanceForType() {
        return com.google.geo.ugc.streetview.publish.v1.StreetViewPublishRpcMessages.BatchDeletePhotosRequest.getDefaultInstance();
      }

      @java.lang.Override
      public com.google.geo.ugc.streetview.publish.v1.StreetViewPublishRpcMessages.BatchDeletePhotosRequest build() {
        com.google.geo.ugc.streetview.publish.v1.StreetViewPublishRpcMessages.BatchDeletePhotosRequest result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public com.google.geo.ugc.streetview.publish.v1.StreetViewPublishRpcMessages.BatchDeletePhotosRequest buildPartial() {
        com.google.geo.ugc.streetview.publish.v1.StreetViewPublishRpcMessages.BatchDeletePhotosRequest result = new com.google.geo.ugc.streetview.publish.v1.StreetViewPublishRpcMessages.BatchDeletePhotosRequest(this);
        buildPartialRepeatedFields(result);
        if (bitField0_ != 0) { buildPartial0(result); }
        onBuilt();
        return result;
      }

      private void buildPartialRepeatedFields(com.google.geo.ugc.streetview.publish.v1.StreetViewPublishRpcMessages.BatchDeletePhotosRequest result) {
        if (((bitField0_ & 0x00000001) != 0)) {
          photoIds_ = photoIds_.getUnmodifiableView();
          bitField0_ = (bitField0_ & ~0x00000001);
        }
        result.photoIds_ = photoIds_;
      }

      private void buildPartial0(com.google.geo.ugc.streetview.publish.v1.StreetViewPublishRpcMessages.BatchDeletePhotosRequest result) {
        int from_bitField0_ = bitField0_;
      }

      @java.lang.Override
      public Builder clone() {
        return super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.google.geo.ugc.streetview.publish.v1.StreetViewPublishRpcMessages.BatchDeletePhotosRequest) {
          return mergeFrom((com.google.geo.ugc.streetview.publish.v1.StreetViewPublishRpcMessages.BatchDeletePhotosRequest)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(com.google.geo.ugc.streetview.publish.v1.StreetViewPublishRpcMessages.BatchDeletePhotosRequest other) {
        if (other == com.google.geo.ugc.streetview.publish.v1.StreetViewPublishRpcMessages.BatchDeletePhotosRequest.getDefaultInstance()) return this;
        if (!other.photoIds_.isEmpty()) {
          if (photoIds_.isEmpty()) {
            photoIds_ = other.photoIds_;
            bitField0_ = (bitField0_ & ~0x00000001);
          } else {
            ensurePhotoIdsIsMutable();
            photoIds_.addAll(other.photoIds_);
          }
          onChanged();
        }
        this.mergeUnknownFields(other.getUnknownFields());
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        if (extensionRegistry == null) {
          throw new java.lang.NullPointerException();
        }
        try {
          boolean done = false;
          while (!done) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                done = true;
                break;
              case 10: {
                java.lang.String s = input.readStringRequireUtf8();
                ensurePhotoIdsIsMutable();
                photoIds_.add(s);
                break;
              } // case 10
              default: {
                if (!super.parseUnknownField(input, extensionRegistry, tag)) {
                  done = true; // was an endgroup tag
                }
                break;
              } // default:
            } // switch (tag)
          } // while (!done)
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.unwrapIOException();
        } finally {
          onChanged();
        } // finally
        return this;
      }
      private int bitField0_;

      private com.google.protobuf.LazyStringList photoIds_ = com.google.protobuf.LazyStringArrayList.EMPTY;
      private void ensurePhotoIdsIsMutable() {
        if (!((bitField0_ & 0x00000001) != 0)) {
          photoIds_ = new com.google.protobuf.LazyStringArrayList(photoIds_);
          bitField0_ |= 0x00000001;
         }
      }
      /**
       * <pre>
       * Required. IDs of the [Photos][google.streetview.publish.v1.Photo]. HTTP
       * GET requests require the following syntax for the URL query parameter:
       * `photoIds=&lt;id1&gt;&amp;photoIds=&lt;id2&gt;&amp;...`.
       * </pre>
       *
       * <code>repeated string photo_ids = 1 [(.google.api.field_behavior) = REQUIRED];</code>
       * @return A list containing the photoIds.
       */
      public com.google.protobuf.ProtocolStringList
          getPhotoIdsList() {
        return photoIds_.getUnmodifiableView();
      }
      /**
       * <pre>
       * Required. IDs of the [Photos][google.streetview.publish.v1.Photo]. HTTP
       * GET requests require the following syntax for the URL query parameter:
       * `photoIds=&lt;id1&gt;&amp;photoIds=&lt;id2&gt;&amp;...`.
       * </pre>
       *
       * <code>repeated string photo_ids = 1 [(.google.api.field_behavior) = REQUIRED];</code>
       * @return The count of photoIds.
       */
      public int getPhotoIdsCount() {
        return photoIds_.size();
      }
      /**
       * <pre>
       * Required. IDs of the [Photos][google.streetview.publish.v1.Photo]. HTTP
       * GET requests require the following syntax for the URL query parameter:
       * `photoIds=&lt;id1&gt;&amp;photoIds=&lt;id2&gt;&amp;...`.
       * </pre>
       *
       * <code>repeated string photo_ids = 1 [(.google.api.field_behavior) = REQUIRED];</code>
       * @param index The index of the element to return.
       * @return The photoIds at the given index.
       */
      public java.lang.String getPhotoIds(int index) {
        return photoIds_.get(index);
      }
      /**
       * <pre>
       * Required. IDs of the [Photos][google.streetview.publish.v1.Photo]. HTTP
       * GET requests require the following syntax for the URL query parameter:
       * `photoIds=&lt;id1&gt;&amp;photoIds=&lt;id2&gt;&amp;...`.
       * </pre>
       *
       * <code>repeated string photo_ids = 1 [(.google.api.field_behavior) = REQUIRED];</code>
       * @param index The index of the value to return.
       * @return The bytes of the photoIds at the given index.
       */
      public com.google.protobuf.ByteString
          getPhotoIdsBytes(int index) {
        return photoIds_.getByteString(index);
      }
      /**
       * <pre>
       * Required. IDs of the [Photos][google.streetview.publish.v1.Photo]. HTTP
       * GET requests require the following syntax for the URL query parameter:
       * `photoIds=&lt;id1&gt;&amp;photoIds=&lt;id2&gt;&amp;...`.
       * </pre>
       *
       * <code>repeated string photo_ids = 1 [(.google.api.field_behavior) = REQUIRED];</code>
       * @param index The index to set the value at.
       * @param value The photoIds to set.
       * @return This builder for chaining.
       */
      public Builder setPhotoIds(
          int index, java.lang.String value) {
        if (value == null) { throw new NullPointerException(); }
        ensurePhotoIdsIsMutable();
        photoIds_.set(index, value);
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Required. IDs of the [Photos][google.streetview.publish.v1.Photo]. HTTP
       * GET requests require the following syntax for the URL query parameter:
       * `photoIds=&lt;id1&gt;&amp;photoIds=&lt;id2&gt;&amp;...`.
       * </pre>
       *
       * <code>repeated string photo_ids = 1 [(.google.api.field_behavior) = REQUIRED];</code>
       * @param value The photoIds to add.
       * @return This builder for chaining.
       */
      public Builder addPhotoIds(
          java.lang.String value) {
        if (value == null) { throw new NullPointerException(); }
        ensurePhotoIdsIsMutable();
        photoIds_.add(value);
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Required. IDs of the [Photos][google.streetview.publish.v1.Photo]. HTTP
       * GET requests require the following syntax for the URL query parameter:
       * `photoIds=&lt;id1&gt;&amp;photoIds=&lt;id2&gt;&amp;...`.
       * </pre>
       *
       * <code>repeated string photo_ids = 1 [(.google.api.field_behavior) = REQUIRED];</code>
       * @param values The photoIds to add.
       * @return This builder for chaining.
       */
      public Builder addAllPhotoIds(
          java.lang.Iterable<java.lang.String> values) {
        ensurePhotoIdsIsMutable();
        com.google.protobuf.AbstractMessageLite.Builder.addAll(
            values, photoIds_);
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Required. IDs of the [Photos][google.streetview.publish.v1.Photo]. HTTP
       * GET requests require the following syntax for the URL query parameter:
       * `photoIds=&lt;id1&gt;&amp;photoIds=&lt;id2&gt;&amp;...`.
       * </pre>
       *
       * <code>repeated string photo_ids = 1 [(.google.api.field_behavior) = REQUIRED];</code>
       * @return This builder for chaining.
       */
      public Builder clearPhotoIds() {
        photoIds_ = com.google.protobuf.LazyStringArrayList.EMPTY;
        bitField0_ = (bitField0_ & ~0x00000001);
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Required. IDs of the [Photos][google.streetview.publish.v1.Photo]. HTTP
       * GET requests require the following syntax for the URL query parameter:
       * `photoIds=&lt;id1&gt;&amp;photoIds=&lt;id2&gt;&amp;...`.
       * </pre>
       *
       * <code>repeated string photo_ids = 1 [(.google.api.field_behavior) = REQUIRED];</code>
       * @param value The bytes of the photoIds to add.
       * @return This builder for chaining.
       */
      public Builder addPhotoIdsBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) { throw new NullPointerException(); }
        checkByteStringIsUtf8(value);
        ensurePhotoIdsIsMutable();
        photoIds_.add(value);
        onChanged();
        return this;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:google.streetview.publish.v1.BatchDeletePhotosRequest)
    }

    // @@protoc_insertion_point(class_scope:google.streetview.publish.v1.BatchDeletePhotosRequest)
    private static final com.google.geo.ugc.streetview.publish.v1.StreetViewPublishRpcMessages.BatchDeletePhotosRequest DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new com.google.geo.ugc.streetview.publish.v1.StreetViewPublishRpcMessages.BatchDeletePhotosRequest();
    }

    public static com.google.geo.ugc.streetview.publish.v1.StreetViewPublishRpcMessages.BatchDeletePhotosRequest getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<BatchDeletePhotosRequest>
        PARSER = new com.google.protobuf.AbstractParser<BatchDeletePhotosRequest>() {
      @java.lang.Override
      public BatchDeletePhotosRequest parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        Builder builder = newBuilder();
        try {
          builder.mergeFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.setUnfinishedMessage(builder.buildPartial());
        } catch (com.google.protobuf.UninitializedMessageException e) {
          throw e.asInvalidProtocolBufferException().setUnfinishedMessage(builder.buildPartial());
        } catch (java.io.IOException e) {
          throw new com.google.protobuf.InvalidProtocolBufferException(e)
              .setUnfinishedMessage(builder.buildPartial());
        }
        return builder.buildPartial();
      }
    };

    public static com.google.protobuf.Parser<BatchDeletePhotosRequest> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<BatchDeletePhotosRequest> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.geo.ugc.streetview.publish.v1.StreetViewPublishRpcMessages.BatchDeletePhotosRequest getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface CreatePhotoSequenceRequestOrBuilder extends
      // @@protoc_insertion_point(interface_extends:google.streetview.publish.v1.CreatePhotoSequenceRequest)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <pre>
     * Required. [PhotoSequence][google.streetview.publish.v1.PhotoSequence] to
     * create.
     * </pre>
     *
     * <code>.google.streetview.publish.v1.PhotoSequence photo_sequence = 1 [(.google.api.field_behavior) = REQUIRED];</code>
     * @return Whether the photoSequence field is set.
     */
    boolean hasPhotoSequence();
    /**
     * <pre>
     * Required. [PhotoSequence][google.streetview.publish.v1.PhotoSequence] to
     * create.
     * </pre>
     *
     * <code>.google.streetview.publish.v1.PhotoSequence photo_sequence = 1 [(.google.api.field_behavior) = REQUIRED];</code>
     * @return The photoSequence.
     */
    com.google.geo.ugc.streetview.publish.v1.StreetViewPublishResources.PhotoSequence getPhotoSequence();
    /**
     * <pre>
     * Required. [PhotoSequence][google.streetview.publish.v1.PhotoSequence] to
     * create.
     * </pre>
     *
     * <code>.google.streetview.publish.v1.PhotoSequence photo_sequence = 1 [(.google.api.field_behavior) = REQUIRED];</code>
     */
    com.google.geo.ugc.streetview.publish.v1.StreetViewPublishResources.PhotoSequenceOrBuilder getPhotoSequenceOrBuilder();

    /**
     * <pre>
     * Required. The input form of
     * [PhotoSequence][google.streetview.publish.v1.PhotoSequence].
     * </pre>
     *
     * <code>.google.streetview.publish.v1.CreatePhotoSequenceRequest.InputType input_type = 2 [(.google.api.field_behavior) = REQUIRED];</code>
     * @return The enum numeric value on the wire for inputType.
     */
    int getInputTypeValue();
    /**
     * <pre>
     * Required. The input form of
     * [PhotoSequence][google.streetview.publish.v1.PhotoSequence].
     * </pre>
     *
     * <code>.google.streetview.publish.v1.CreatePhotoSequenceRequest.InputType input_type = 2 [(.google.api.field_behavior) = REQUIRED];</code>
     * @return The inputType.
     */
    com.google.geo.ugc.streetview.publish.v1.StreetViewPublishRpcMessages.CreatePhotoSequenceRequest.InputType getInputType();
  }
  /**
   * <pre>
   * Request to create a
   * [PhotoSequence][google.streetview.publish.v1.PhotoSequence] from a video.
   * </pre>
   *
   * Protobuf type {@code google.streetview.publish.v1.CreatePhotoSequenceRequest}
   */
  public static final class CreatePhotoSequenceRequest extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:google.streetview.publish.v1.CreatePhotoSequenceRequest)
      CreatePhotoSequenceRequestOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use CreatePhotoSequenceRequest.newBuilder() to construct.
    private CreatePhotoSequenceRequest(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private CreatePhotoSequenceRequest() {
      inputType_ = 0;
    }

    @java.lang.Override
    @SuppressWarnings({"unused"})
    protected java.lang.Object newInstance(
        UnusedPrivateParameter unused) {
      return new CreatePhotoSequenceRequest();
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.google.geo.ugc.streetview.publish.v1.StreetViewPublishRpcMessages.internal_static_google_streetview_publish_v1_CreatePhotoSequenceRequest_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.google.geo.ugc.streetview.publish.v1.StreetViewPublishRpcMessages.internal_static_google_streetview_publish_v1_CreatePhotoSequenceRequest_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.google.geo.ugc.streetview.publish.v1.StreetViewPublishRpcMessages.CreatePhotoSequenceRequest.class, com.google.geo.ugc.streetview.publish.v1.StreetViewPublishRpcMessages.CreatePhotoSequenceRequest.Builder.class);
    }

    /**
     * <pre>
     * Input forms of [PhotoSequence][google.streetview.publish.v1.PhotoSequence].
     * </pre>
     *
     * Protobuf enum {@code google.streetview.publish.v1.CreatePhotoSequenceRequest.InputType}
     */
    public enum InputType
        implements com.google.protobuf.ProtocolMessageEnum {
      /**
       * <pre>
       * Not specified. Server will return [google.rpc.Code.INVALID_ARGUMENT][google.rpc.Code.INVALID_ARGUMENT].
       * </pre>
       *
       * <code>INPUT_TYPE_UNSPECIFIED = 0;</code>
       */
      INPUT_TYPE_UNSPECIFIED(0),
      /**
       * <pre>
       * 360 Video.
       * </pre>
       *
       * <code>VIDEO = 1;</code>
       */
      VIDEO(1),
      /**
       * <pre>
       * Extensible Device Metadata, http://www.xdm.org
       * </pre>
       *
       * <code>XDM = 2;</code>
       */
      XDM(2),
      UNRECOGNIZED(-1),
      ;

      /**
       * <pre>
       * Not specified. Server will return [google.rpc.Code.INVALID_ARGUMENT][google.rpc.Code.INVALID_ARGUMENT].
       * </pre>
       *
       * <code>INPUT_TYPE_UNSPECIFIED = 0;</code>
       */
      public static final int INPUT_TYPE_UNSPECIFIED_VALUE = 0;
      /**
       * <pre>
       * 360 Video.
       * </pre>
       *
       * <code>VIDEO = 1;</code>
       */
      public static final int VIDEO_VALUE = 1;
      /**
       * <pre>
       * Extensible Device Metadata, http://www.xdm.org
       * </pre>
       *
       * <code>XDM = 2;</code>
       */
      public static final int XDM_VALUE = 2;


      public final int getNumber() {
        if (this == UNRECOGNIZED) {
          throw new java.lang.IllegalArgumentException(
              "Can't get the number of an unknown enum value.");
        }
        return value;
      }

      /**
       * @param value The numeric wire value of the corresponding enum entry.
       * @return The enum associated with the given numeric wire value.
       * @deprecated Use {@link #forNumber(int)} instead.
       */
      @java.lang.Deprecated
      public static InputType valueOf(int value) {
        return forNumber(value);
      }

      /**
       * @param value The numeric wire value of the corresponding enum entry.
       * @return The enum associated with the given numeric wire value.
       */
      public static InputType forNumber(int value) {
        switch (value) {
          case 0: return INPUT_TYPE_UNSPECIFIED;
          case 1: return VIDEO;
          case 2: return XDM;
          default: return null;
        }
      }

      public static com.google.protobuf.Internal.EnumLiteMap<InputType>
          internalGetValueMap() {
        return internalValueMap;
      }
      private static final com.google.protobuf.Internal.EnumLiteMap<
          InputType> internalValueMap =
            new com.google.protobuf.Internal.EnumLiteMap<InputType>() {
              public InputType findValueByNumber(int number) {
                return InputType.forNumber(number);
              }
            };

      public final com.google.protobuf.Descriptors.EnumValueDescriptor
          getValueDescriptor() {
        if (this == UNRECOGNIZED) {
          throw new java.lang.IllegalStateException(
              "Can't get the descriptor of an unrecognized enum value.");
        }
        return getDescriptor().getValues().get(ordinal());
      }
      public final com.google.protobuf.Descriptors.EnumDescriptor
          getDescriptorForType() {
        return getDescriptor();
      }
      public static final com.google.protobuf.Descriptors.EnumDescriptor
          getDescriptor() {
        return com.google.geo.ugc.streetview.publish.v1.StreetViewPublishRpcMessages.CreatePhotoSequenceRequest.getDescriptor().getEnumTypes().get(0);
      }

      private static final InputType[] VALUES = values();

      public static InputType valueOf(
          com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
        if (desc.getType() != getDescriptor()) {
          throw new java.lang.IllegalArgumentException(
            "EnumValueDescriptor is not for this type.");
        }
        if (desc.getIndex() == -1) {
          return UNRECOGNIZED;
        }
        return VALUES[desc.getIndex()];
      }

      private final int value;

      private InputType(int value) {
        this.value = value;
      }

      // @@protoc_insertion_point(enum_scope:google.streetview.publish.v1.CreatePhotoSequenceRequest.InputType)
    }

    public static final int PHOTO_SEQUENCE_FIELD_NUMBER = 1;
    private com.google.geo.ugc.streetview.publish.v1.StreetViewPublishResources.PhotoSequence photoSequence_;
    /**
     * <pre>
     * Required. [PhotoSequence][google.streetview.publish.v1.PhotoSequence] to
     * create.
     * </pre>
     *
     * <code>.google.streetview.publish.v1.PhotoSequence photo_sequence = 1 [(.google.api.field_behavior) = REQUIRED];</code>
     * @return Whether the photoSequence field is set.
     */
    @java.lang.Override
    public boolean hasPhotoSequence() {
      return photoSequence_ != null;
    }
    /**
     * <pre>
     * Required. [PhotoSequence][google.streetview.publish.v1.PhotoSequence] to
     * create.
     * </pre>
     *
     * <code>.google.streetview.publish.v1.PhotoSequence photo_sequence = 1 [(.google.api.field_behavior) = REQUIRED];</code>
     * @return The photoSequence.
     */
    @java.lang.Override
    public com.google.geo.ugc.streetview.publish.v1.StreetViewPublishResources.PhotoSequence getPhotoSequence() {
      return photoSequence_ == null ? com.google.geo.ugc.streetview.publish.v1.StreetViewPublishResources.PhotoSequence.getDefaultInstance() : photoSequence_;
    }
    /**
     * <pre>
     * Required. [PhotoSequence][google.streetview.publish.v1.PhotoSequence] to
     * create.
     * </pre>
     *
     * <code>.google.streetview.publish.v1.PhotoSequence photo_sequence = 1 [(.google.api.field_behavior) = REQUIRED];</code>
     */
    @java.lang.Override
    public com.google.geo.ugc.streetview.publish.v1.StreetViewPublishResources.PhotoSequenceOrBuilder getPhotoSequenceOrBuilder() {
      return photoSequence_ == null ? com.google.geo.ugc.streetview.publish.v1.StreetViewPublishResources.PhotoSequence.getDefaultInstance() : photoSequence_;
    }

    public static final int INPUT_TYPE_FIELD_NUMBER = 2;
    private int inputType_ = 0;
    /**
     * <pre>
     * Required. The input form of
     * [PhotoSequence][google.streetview.publish.v1.PhotoSequence].
     * </pre>
     *
     * <code>.google.streetview.publish.v1.CreatePhotoSequenceRequest.InputType input_type = 2 [(.google.api.field_behavior) = REQUIRED];</code>
     * @return The enum numeric value on the wire for inputType.
     */
    @java.lang.Override public int getInputTypeValue() {
      return inputType_;
    }
    /**
     * <pre>
     * Required. The input form of
     * [PhotoSequence][google.streetview.publish.v1.PhotoSequence].
     * </pre>
     *
     * <code>.google.streetview.publish.v1.CreatePhotoSequenceRequest.InputType input_type = 2 [(.google.api.field_behavior) = REQUIRED];</code>
     * @return The inputType.
     */
    @java.lang.Override public com.google.geo.ugc.streetview.publish.v1.StreetViewPublishRpcMessages.CreatePhotoSequenceRequest.InputType getInputType() {
      com.google.geo.ugc.streetview.publish.v1.StreetViewPublishRpcMessages.CreatePhotoSequenceRequest.InputType result = com.google.geo.ugc.streetview.publish.v1.StreetViewPublishRpcMessages.CreatePhotoSequenceRequest.InputType.forNumber(inputType_);
      return result == null ? com.google.geo.ugc.streetview.publish.v1.StreetViewPublishRpcMessages.CreatePhotoSequenceRequest.InputType.UNRECOGNIZED : result;
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (photoSequence_ != null) {
        output.writeMessage(1, getPhotoSequence());
      }
      if (inputType_ != com.google.geo.ugc.streetview.publish.v1.StreetViewPublishRpcMessages.CreatePhotoSequenceRequest.InputType.INPUT_TYPE_UNSPECIFIED.getNumber()) {
        output.writeEnum(2, inputType_);
      }
      getUnknownFields().writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (photoSequence_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, getPhotoSequence());
      }
      if (inputType_ != com.google.geo.ugc.streetview.publish.v1.StreetViewPublishRpcMessages.CreatePhotoSequenceRequest.InputType.INPUT_TYPE_UNSPECIFIED.getNumber()) {
        size += com.google.protobuf.CodedOutputStream
          .computeEnumSize(2, inputType_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof com.google.geo.ugc.streetview.publish.v1.StreetViewPublishRpcMessages.CreatePhotoSequenceRequest)) {
        return super.equals(obj);
      }
      com.google.geo.ugc.streetview.publish.v1.StreetViewPublishRpcMessages.CreatePhotoSequenceRequest other = (com.google.geo.ugc.streetview.publish.v1.StreetViewPublishRpcMessages.CreatePhotoSequenceRequest) obj;

      if (hasPhotoSequence() != other.hasPhotoSequence()) return false;
      if (hasPhotoSequence()) {
        if (!getPhotoSequence()
            .equals(other.getPhotoSequence())) return false;
      }
      if (inputType_ != other.inputType_) return false;
      if (!getUnknownFields().equals(other.getUnknownFields())) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      if (hasPhotoSequence()) {
        hash = (37 * hash) + PHOTO_SEQUENCE_FIELD_NUMBER;
        hash = (53 * hash) + getPhotoSequence().hashCode();
      }
      hash = (37 * hash) + INPUT_TYPE_FIELD_NUMBER;
      hash = (53 * hash) + inputType_;
      hash = (29 * hash) + getUnknownFields().hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static com.google.geo.ugc.streetview.publish.v1.StreetViewPublishRpcMessages.CreatePhotoSequenceRequest parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.google.geo.ugc.streetview.publish.v1.StreetViewPublishRpcMessages.CreatePhotoSequenceRequest parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.google.geo.ugc.streetview.publish.v1.StreetViewPublishRpcMessages.CreatePhotoSequenceRequest parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.google.geo.ugc.streetview.publish.v1.StreetViewPublishRpcMessages.CreatePhotoSequenceRequest parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.google.geo.ugc.streetview.publish.v1.StreetViewPublishRpcMessages.CreatePhotoSequenceRequest parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.google.geo.ugc.streetview.publish.v1.StreetViewPublishRpcMessages.CreatePhotoSequenceRequest parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.google.geo.ugc.streetview.publish.v1.StreetViewPublishRpcMessages.CreatePhotoSequenceRequest parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static com.google.geo.ugc.streetview.publish.v1.StreetViewPublishRpcMessages.CreatePhotoSequenceRequest parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static com.google.geo.ugc.streetview.publish.v1.StreetViewPublishRpcMessages.CreatePhotoSequenceRequest parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static com.google.geo.ugc.streetview.publish.v1.StreetViewPublishRpcMessages.CreatePhotoSequenceRequest parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static com.google.geo.ugc.streetview.publish.v1.StreetViewPublishRpcMessages.CreatePhotoSequenceRequest parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static com.google.geo.ugc.streetview.publish.v1.StreetViewPublishRpcMessages.CreatePhotoSequenceRequest parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(com.google.geo.ugc.streetview.publish.v1.StreetViewPublishRpcMessages.CreatePhotoSequenceRequest prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * <pre>
     * Request to create a
     * [PhotoSequence][google.streetview.publish.v1.PhotoSequence] from a video.
     * </pre>
     *
     * Protobuf type {@code google.streetview.publish.v1.CreatePhotoSequenceRequest}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:google.streetview.publish.v1.CreatePhotoSequenceRequest)
        com.google.geo.ugc.streetview.publish.v1.StreetViewPublishRpcMessages.CreatePhotoSequenceRequestOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return com.google.geo.ugc.streetview.publish.v1.StreetViewPublishRpcMessages.internal_static_google_streetview_publish_v1_CreatePhotoSequenceRequest_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return com.google.geo.ugc.streetview.publish.v1.StreetViewPublishRpcMessages.internal_static_google_streetview_publish_v1_CreatePhotoSequenceRequest_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                com.google.geo.ugc.streetview.publish.v1.StreetViewPublishRpcMessages.CreatePhotoSequenceRequest.class, com.google.geo.ugc.streetview.publish.v1.StreetViewPublishRpcMessages.CreatePhotoSequenceRequest.Builder.class);
      }

      // Construct using com.google.geo.ugc.streetview.publish.v1.StreetViewPublishRpcMessages.CreatePhotoSequenceRequest.newBuilder()
      private Builder() {

      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);

      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        bitField0_ = 0;
        photoSequence_ = null;
        if (photoSequenceBuilder_ != null) {
          photoSequenceBuilder_.dispose();
          photoSequenceBuilder_ = null;
        }
        inputType_ = 0;
        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.google.geo.ugc.streetview.publish.v1.StreetViewPublishRpcMessages.internal_static_google_streetview_publish_v1_CreatePhotoSequenceRequest_descriptor;
      }

      @java.lang.Override
      public com.google.geo.ugc.streetview.publish.v1.StreetViewPublishRpcMessages.CreatePhotoSequenceRequest getDefaultInstanceForType() {
        return com.google.geo.ugc.streetview.publish.v1.StreetViewPublishRpcMessages.CreatePhotoSequenceRequest.getDefaultInstance();
      }

      @java.lang.Override
      public com.google.geo.ugc.streetview.publish.v1.StreetViewPublishRpcMessages.CreatePhotoSequenceRequest build() {
        com.google.geo.ugc.streetview.publish.v1.StreetViewPublishRpcMessages.CreatePhotoSequenceRequest result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public com.google.geo.ugc.streetview.publish.v1.StreetViewPublishRpcMessages.CreatePhotoSequenceRequest buildPartial() {
        com.google.geo.ugc.streetview.publish.v1.StreetViewPublishRpcMessages.CreatePhotoSequenceRequest result = new com.google.geo.ugc.streetview.publish.v1.StreetViewPublishRpcMessages.CreatePhotoSequenceRequest(this);
        if (bitField0_ != 0) { buildPartial0(result); }
        onBuilt();
        return result;
      }

      private void buildPartial0(com.google.geo.ugc.streetview.publish.v1.StreetViewPublishRpcMessages.CreatePhotoSequenceRequest result) {
        int from_bitField0_ = bitField0_;
        if (((from_bitField0_ & 0x00000001) != 0)) {
          result.photoSequence_ = photoSequenceBuilder_ == null
              ? photoSequence_
              : photoSequenceBuilder_.build();
        }
        if (((from_bitField0_ & 0x00000002) != 0)) {
          result.inputType_ = inputType_;
        }
      }

      @java.lang.Override
      public Builder clone() {
        return super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.google.geo.ugc.streetview.publish.v1.StreetViewPublishRpcMessages.CreatePhotoSequenceRequest) {
          return mergeFrom((com.google.geo.ugc.streetview.publish.v1.StreetViewPublishRpcMessages.CreatePhotoSequenceRequest)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(com.google.geo.ugc.streetview.publish.v1.StreetViewPublishRpcMessages.CreatePhotoSequenceRequest other) {
        if (other == com.google.geo.ugc.streetview.publish.v1.StreetViewPublishRpcMessages.CreatePhotoSequenceRequest.getDefaultInstance()) return this;
        if (other.hasPhotoSequence()) {
          mergePhotoSequence(other.getPhotoSequence());
        }
        if (other.inputType_ != 0) {
          setInputTypeValue(other.getInputTypeValue());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        if (extensionRegistry == null) {
          throw new java.lang.NullPointerException();
        }
        try {
          boolean done = false;
          while (!done) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                done = true;
                break;
              case 10: {
                input.readMessage(
                    getPhotoSequenceFieldBuilder().getBuilder(),
                    extensionRegistry);
                bitField0_ |= 0x00000001;
                break;
              } // case 10
              case 16: {
                inputType_ = input.readEnum();
                bitField0_ |= 0x00000002;
                break;
              } // case 16
              default: {
                if (!super.parseUnknownField(input, extensionRegistry, tag)) {
                  done = true; // was an endgroup tag
                }
                break;
              } // default:
            } // switch (tag)
          } // while (!done)
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.unwrapIOException();
        } finally {
          onChanged();
        } // finally
        return this;
      }
      private int bitField0_;

      private com.google.geo.ugc.streetview.publish.v1.StreetViewPublishResources.PhotoSequence photoSequence_;
      private com.google.protobuf.SingleFieldBuilderV3<
          com.google.geo.ugc.streetview.publish.v1.StreetViewPublishResources.PhotoSequence, com.google.geo.ugc.streetview.publish.v1.StreetViewPublishResources.PhotoSequence.Builder, com.google.geo.ugc.streetview.publish.v1.StreetViewPublishResources.PhotoSequenceOrBuilder> photoSequenceBuilder_;
      /**
       * <pre>
       * Required. [PhotoSequence][google.streetview.publish.v1.PhotoSequence] to
       * create.
       * </pre>
       *
       * <code>.google.streetview.publish.v1.PhotoSequence photo_sequence = 1 [(.google.api.field_behavior) = REQUIRED];</code>
       * @return Whether the photoSequence field is set.
       */
      public boolean hasPhotoSequence() {
        return ((bitField0_ & 0x00000001) != 0);
      }
      /**
       * <pre>
       * Required. [PhotoSequence][google.streetview.publish.v1.PhotoSequence] to
       * create.
       * </pre>
       *
       * <code>.google.streetview.publish.v1.PhotoSequence photo_sequence = 1 [(.google.api.field_behavior) = REQUIRED];</code>
       * @return The photoSequence.
       */
      public com.google.geo.ugc.streetview.publish.v1.StreetViewPublishResources.PhotoSequence getPhotoSequence() {
        if (photoSequenceBuilder_ == null) {
          return photoSequence_ == null ? com.google.geo.ugc.streetview.publish.v1.StreetViewPublishResources.PhotoSequence.getDefaultInstance() : photoSequence_;
        } else {
          return photoSequenceBuilder_.getMessage();
        }
      }
      /**
       * <pre>
       * Required. [PhotoSequence][google.streetview.publish.v1.PhotoSequence] to
       * create.
       * </pre>
       *
       * <code>.google.streetview.publish.v1.PhotoSequence photo_sequence = 1 [(.google.api.field_behavior) = REQUIRED];</code>
       */
      public Builder setPhotoSequence(com.google.geo.ugc.streetview.publish.v1.StreetViewPublishResources.PhotoSequence value) {
        if (photoSequenceBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          photoSequence_ = value;
        } else {
          photoSequenceBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000001;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Required. [PhotoSequence][google.streetview.publish.v1.PhotoSequence] to
       * create.
       * </pre>
       *
       * <code>.google.streetview.publish.v1.PhotoSequence photo_sequence = 1 [(.google.api.field_behavior) = REQUIRED];</code>
       */
      public Builder setPhotoSequence(
          com.google.geo.ugc.streetview.publish.v1.StreetViewPublishResources.PhotoSequence.Builder builderForValue) {
        if (photoSequenceBuilder_ == null) {
          photoSequence_ = builderForValue.build();
        } else {
          photoSequenceBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000001;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Required. [PhotoSequence][google.streetview.publish.v1.PhotoSequence] to
       * create.
       * </pre>
       *
       * <code>.google.streetview.publish.v1.PhotoSequence photo_sequence = 1 [(.google.api.field_behavior) = REQUIRED];</code>
       */
      public Builder mergePhotoSequence(com.google.geo.ugc.streetview.publish.v1.StreetViewPublishResources.PhotoSequence value) {
        if (photoSequenceBuilder_ == null) {
          if (((bitField0_ & 0x00000001) != 0) &&
            photoSequence_ != null &&
            photoSequence_ != com.google.geo.ugc.streetview.publish.v1.StreetViewPublishResources.PhotoSequence.getDefaultInstance()) {
            getPhotoSequenceBuilder().mergeFrom(value);
          } else {
            photoSequence_ = value;
          }
        } else {
          photoSequenceBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x00000001;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Required. [PhotoSequence][google.streetview.publish.v1.PhotoSequence] to
       * create.
       * </pre>
       *
       * <code>.google.streetview.publish.v1.PhotoSequence photo_sequence = 1 [(.google.api.field_behavior) = REQUIRED];</code>
       */
      public Builder clearPhotoSequence() {
        bitField0_ = (bitField0_ & ~0x00000001);
        photoSequence_ = null;
        if (photoSequenceBuilder_ != null) {
          photoSequenceBuilder_.dispose();
          photoSequenceBuilder_ = null;
        }
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Required. [PhotoSequence][google.streetview.publish.v1.PhotoSequence] to
       * create.
       * </pre>
       *
       * <code>.google.streetview.publish.v1.PhotoSequence photo_sequence = 1 [(.google.api.field_behavior) = REQUIRED];</code>
       */
      public com.google.geo.ugc.streetview.publish.v1.StreetViewPublishResources.PhotoSequence.Builder getPhotoSequenceBuilder() {
        bitField0_ |= 0x00000001;
        onChanged();
        return getPhotoSequenceFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       * Required. [PhotoSequence][google.streetview.publish.v1.PhotoSequence] to
       * create.
       * </pre>
       *
       * <code>.google.streetview.publish.v1.PhotoSequence photo_sequence = 1 [(.google.api.field_behavior) = REQUIRED];</code>
       */
      public com.google.geo.ugc.streetview.publish.v1.StreetViewPublishResources.PhotoSequenceOrBuilder getPhotoSequenceOrBuilder() {
        if (photoSequenceBuilder_ != null) {
          return photoSequenceBuilder_.getMessageOrBuilder();
        } else {
          return photoSequence_ == null ?
              com.google.geo.ugc.streetview.publish.v1.StreetViewPublishResources.PhotoSequence.getDefaultInstance() : photoSequence_;
        }
      }
      /**
       * <pre>
       * Required. [PhotoSequence][google.streetview.publish.v1.PhotoSequence] to
       * create.
       * </pre>
       *
       * <code>.google.streetview.publish.v1.PhotoSequence photo_sequence = 1 [(.google.api.field_behavior) = REQUIRED];</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          com.google.geo.ugc.streetview.publish.v1.StreetViewPublishResources.PhotoSequence, com.google.geo.ugc.streetview.publish.v1.StreetViewPublishResources.PhotoSequence.Builder, com.google.geo.ugc.streetview.publish.v1.StreetViewPublishResources.PhotoSequenceOrBuilder> 
          getPhotoSequenceFieldBuilder() {
        if (photoSequenceBuilder_ == null) {
          photoSequenceBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              com.google.geo.ugc.streetview.publish.v1.StreetViewPublishResources.PhotoSequence, com.google.geo.ugc.streetview.publish.v1.StreetViewPublishResources.PhotoSequence.Builder, com.google.geo.ugc.streetview.publish.v1.StreetViewPublishResources.PhotoSequenceOrBuilder>(
                  getPhotoSequence(),
                  getParentForChildren(),
                  isClean());
          photoSequence_ = null;
        }
        return photoSequenceBuilder_;
      }

      private int inputType_ = 0;
      /**
       * <pre>
       * Required. The input form of
       * [PhotoSequence][google.streetview.publish.v1.PhotoSequence].
       * </pre>
       *
       * <code>.google.streetview.publish.v1.CreatePhotoSequenceRequest.InputType input_type = 2 [(.google.api.field_behavior) = REQUIRED];</code>
       * @return The enum numeric value on the wire for inputType.
       */
      @java.lang.Override public int getInputTypeValue() {
        return inputType_;
      }
      /**
       * <pre>
       * Required. The input form of
       * [PhotoSequence][google.streetview.publish.v1.PhotoSequence].
       * </pre>
       *
       * <code>.google.streetview.publish.v1.CreatePhotoSequenceRequest.InputType input_type = 2 [(.google.api.field_behavior) = REQUIRED];</code>
       * @param value The enum numeric value on the wire for inputType to set.
       * @return This builder for chaining.
       */
      public Builder setInputTypeValue(int value) {
        inputType_ = value;
        bitField0_ |= 0x00000002;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Required. The input form of
       * [PhotoSequence][google.streetview.publish.v1.PhotoSequence].
       * </pre>
       *
       * <code>.google.streetview.publish.v1.CreatePhotoSequenceRequest.InputType input_type = 2 [(.google.api.field_behavior) = REQUIRED];</code>
       * @return The inputType.
       */
      @java.lang.Override
      public com.google.geo.ugc.streetview.publish.v1.StreetViewPublishRpcMessages.CreatePhotoSequenceRequest.InputType getInputType() {
        com.google.geo.ugc.streetview.publish.v1.StreetViewPublishRpcMessages.CreatePhotoSequenceRequest.InputType result = com.google.geo.ugc.streetview.publish.v1.StreetViewPublishRpcMessages.CreatePhotoSequenceRequest.InputType.forNumber(inputType_);
        return result == null ? com.google.geo.ugc.streetview.publish.v1.StreetViewPublishRpcMessages.CreatePhotoSequenceRequest.InputType.UNRECOGNIZED : result;
      }
      /**
       * <pre>
       * Required. The input form of
       * [PhotoSequence][google.streetview.publish.v1.PhotoSequence].
       * </pre>
       *
       * <code>.google.streetview.publish.v1.CreatePhotoSequenceRequest.InputType input_type = 2 [(.google.api.field_behavior) = REQUIRED];</code>
       * @param value The inputType to set.
       * @return This builder for chaining.
       */
      public Builder setInputType(com.google.geo.ugc.streetview.publish.v1.StreetViewPublishRpcMessages.CreatePhotoSequenceRequest.InputType value) {
        if (value == null) {
          throw new NullPointerException();
        }
        bitField0_ |= 0x00000002;
        inputType_ = value.getNumber();
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Required. The input form of
       * [PhotoSequence][google.streetview.publish.v1.PhotoSequence].
       * </pre>
       *
       * <code>.google.streetview.publish.v1.CreatePhotoSequenceRequest.InputType input_type = 2 [(.google.api.field_behavior) = REQUIRED];</code>
       * @return This builder for chaining.
       */
      public Builder clearInputType() {
        bitField0_ = (bitField0_ & ~0x00000002);
        inputType_ = 0;
        onChanged();
        return this;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:google.streetview.publish.v1.CreatePhotoSequenceRequest)
    }

    // @@protoc_insertion_point(class_scope:google.streetview.publish.v1.CreatePhotoSequenceRequest)
    private static final com.google.geo.ugc.streetview.publish.v1.StreetViewPublishRpcMessages.CreatePhotoSequenceRequest DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new com.google.geo.ugc.streetview.publish.v1.StreetViewPublishRpcMessages.CreatePhotoSequenceRequest();
    }

    public static com.google.geo.ugc.streetview.publish.v1.StreetViewPublishRpcMessages.CreatePhotoSequenceRequest getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<CreatePhotoSequenceRequest>
        PARSER = new com.google.protobuf.AbstractParser<CreatePhotoSequenceRequest>() {
      @java.lang.Override
      public CreatePhotoSequenceRequest parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        Builder builder = newBuilder();
        try {
          builder.mergeFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.setUnfinishedMessage(builder.buildPartial());
        } catch (com.google.protobuf.UninitializedMessageException e) {
          throw e.asInvalidProtocolBufferException().setUnfinishedMessage(builder.buildPartial());
        } catch (java.io.IOException e) {
          throw new com.google.protobuf.InvalidProtocolBufferException(e)
              .setUnfinishedMessage(builder.buildPartial());
        }
        return builder.buildPartial();
      }
    };

    public static com.google.protobuf.Parser<CreatePhotoSequenceRequest> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<CreatePhotoSequenceRequest> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.geo.ugc.streetview.publish.v1.StreetViewPublishRpcMessages.CreatePhotoSequenceRequest getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface GetPhotoSequenceRequestOrBuilder extends
      // @@protoc_insertion_point(interface_extends:google.streetview.publish.v1.GetPhotoSequenceRequest)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <pre>
     * Required. ID of the photo sequence.
     * </pre>
     *
     * <code>string sequence_id = 1 [(.google.api.field_behavior) = REQUIRED];</code>
     * @return The sequenceId.
     */
    java.lang.String getSequenceId();
    /**
     * <pre>
     * Required. ID of the photo sequence.
     * </pre>
     *
     * <code>string sequence_id = 1 [(.google.api.field_behavior) = REQUIRED];</code>
     * @return The bytes for sequenceId.
     */
    com.google.protobuf.ByteString
        getSequenceIdBytes();

    /**
     * <pre>
     * Specifies if a download URL for the photo sequence should be returned in
     * `download_url` of individual photos in the
     * [PhotoSequence][google.streetview.publish.v1.PhotoSequence] response.
     * &gt; Note: Currently not implemented.
     * </pre>
     *
     * <code>.google.streetview.publish.v1.PhotoView view = 2 [deprecated = true];</code>
     * @deprecated google.streetview.publish.v1.GetPhotoSequenceRequest.view is deprecated.
     *     See google/streetview/publish/v1/rpcmessages.proto;l=283
     * @return The enum numeric value on the wire for view.
     */
    @java.lang.Deprecated int getViewValue();
    /**
     * <pre>
     * Specifies if a download URL for the photo sequence should be returned in
     * `download_url` of individual photos in the
     * [PhotoSequence][google.streetview.publish.v1.PhotoSequence] response.
     * &gt; Note: Currently not implemented.
     * </pre>
     *
     * <code>.google.streetview.publish.v1.PhotoView view = 2 [deprecated = true];</code>
     * @deprecated google.streetview.publish.v1.GetPhotoSequenceRequest.view is deprecated.
     *     See google/streetview/publish/v1/rpcmessages.proto;l=283
     * @return The view.
     */
    @java.lang.Deprecated com.google.geo.ugc.streetview.publish.v1.StreetViewPublishRpcMessages.PhotoView getView();

    /**
     * <pre>
     * Optional. The filter expression. For example: `published_status=PUBLISHED`.
     * The filters supported are: `published_status`.  See
     * https://google.aip.dev/160 for more information.
     * </pre>
     *
     * <code>string filter = 3 [(.google.api.field_behavior) = OPTIONAL];</code>
     * @return The filter.
     */
    java.lang.String getFilter();
    /**
     * <pre>
     * Optional. The filter expression. For example: `published_status=PUBLISHED`.
     * The filters supported are: `published_status`.  See
     * https://google.aip.dev/160 for more information.
     * </pre>
     *
     * <code>string filter = 3 [(.google.api.field_behavior) = OPTIONAL];</code>
     * @return The bytes for filter.
     */
    com.google.protobuf.ByteString
        getFilterBytes();
  }
  /**
   * <pre>
   * Request to get a [PhotoSequence][google.streetview.publish.v1.PhotoSequence].
   * By default
   * * does not return the download URL for the
   * [PhotoSequence][google.streetview.publish.v1.PhotoSequence].
   * Parameters:
   * * `view` controls if the download URL for the
   * [PhotoSequence][google.streetview.publish.v1.PhotoSequence] is
   *   returned.
   * </pre>
   *
   * Protobuf type {@code google.streetview.publish.v1.GetPhotoSequenceRequest}
   */
  public static final class GetPhotoSequenceRequest extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:google.streetview.publish.v1.GetPhotoSequenceRequest)
      GetPhotoSequenceRequestOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use GetPhotoSequenceRequest.newBuilder() to construct.
    private GetPhotoSequenceRequest(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private GetPhotoSequenceRequest() {
      sequenceId_ = "";
      view_ = 0;
      filter_ = "";
    }

    @java.lang.Override
    @SuppressWarnings({"unused"})
    protected java.lang.Object newInstance(
        UnusedPrivateParameter unused) {
      return new GetPhotoSequenceRequest();
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.google.geo.ugc.streetview.publish.v1.StreetViewPublishRpcMessages.internal_static_google_streetview_publish_v1_GetPhotoSequenceRequest_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.google.geo.ugc.streetview.publish.v1.StreetViewPublishRpcMessages.internal_static_google_streetview_publish_v1_GetPhotoSequenceRequest_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.google.geo.ugc.streetview.publish.v1.StreetViewPublishRpcMessages.GetPhotoSequenceRequest.class, com.google.geo.ugc.streetview.publish.v1.StreetViewPublishRpcMessages.GetPhotoSequenceRequest.Builder.class);
    }

    public static final int SEQUENCE_ID_FIELD_NUMBER = 1;
    @SuppressWarnings("serial")
    private volatile java.lang.Object sequenceId_ = "";
    /**
     * <pre>
     * Required. ID of the photo sequence.
     * </pre>
     *
     * <code>string sequence_id = 1 [(.google.api.field_behavior) = REQUIRED];</code>
     * @return The sequenceId.
     */
    @java.lang.Override
    public java.lang.String getSequenceId() {
      java.lang.Object ref = sequenceId_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        sequenceId_ = s;
        return s;
      }
    }
    /**
     * <pre>
     * Required. ID of the photo sequence.
     * </pre>
     *
     * <code>string sequence_id = 1 [(.google.api.field_behavior) = REQUIRED];</code>
     * @return The bytes for sequenceId.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString
        getSequenceIdBytes() {
      java.lang.Object ref = sequenceId_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        sequenceId_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int VIEW_FIELD_NUMBER = 2;
    private int view_ = 0;
    /**
     * <pre>
     * Specifies if a download URL for the photo sequence should be returned in
     * `download_url` of individual photos in the
     * [PhotoSequence][google.streetview.publish.v1.PhotoSequence] response.
     * &gt; Note: Currently not implemented.
     * </pre>
     *
     * <code>.google.streetview.publish.v1.PhotoView view = 2 [deprecated = true];</code>
     * @deprecated google.streetview.publish.v1.GetPhotoSequenceRequest.view is deprecated.
     *     See google/streetview/publish/v1/rpcmessages.proto;l=283
     * @return The enum numeric value on the wire for view.
     */
    @java.lang.Override @java.lang.Deprecated public int getViewValue() {
      return view_;
    }
    /**
     * <pre>
     * Specifies if a download URL for the photo sequence should be returned in
     * `download_url` of individual photos in the
     * [PhotoSequence][google.streetview.publish.v1.PhotoSequence] response.
     * &gt; Note: Currently not implemented.
     * </pre>
     *
     * <code>.google.streetview.publish.v1.PhotoView view = 2 [deprecated = true];</code>
     * @deprecated google.streetview.publish.v1.GetPhotoSequenceRequest.view is deprecated.
     *     See google/streetview/publish/v1/rpcmessages.proto;l=283
     * @return The view.
     */
    @java.lang.Override @java.lang.Deprecated public com.google.geo.ugc.streetview.publish.v1.StreetViewPublishRpcMessages.PhotoView getView() {
      com.google.geo.ugc.streetview.publish.v1.StreetViewPublishRpcMessages.PhotoView result = com.google.geo.ugc.streetview.publish.v1.StreetViewPublishRpcMessages.PhotoView.forNumber(view_);
      return result == null ? com.google.geo.ugc.streetview.publish.v1.StreetViewPublishRpcMessages.PhotoView.UNRECOGNIZED : result;
    }

    public static final int FILTER_FIELD_NUMBER = 3;
    @SuppressWarnings("serial")
    private volatile java.lang.Object filter_ = "";
    /**
     * <pre>
     * Optional. The filter expression. For example: `published_status=PUBLISHED`.
     * The filters supported are: `published_status`.  See
     * https://google.aip.dev/160 for more information.
     * </pre>
     *
     * <code>string filter = 3 [(.google.api.field_behavior) = OPTIONAL];</code>
     * @return The filter.
     */
    @java.lang.Override
    public java.lang.String getFilter() {
      java.lang.Object ref = filter_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        filter_ = s;
        return s;
      }
    }
    /**
     * <pre>
     * Optional. The filter expression. For example: `published_status=PUBLISHED`.
     * The filters supported are: `published_status`.  See
     * https://google.aip.dev/160 for more information.
     * </pre>
     *
     * <code>string filter = 3 [(.google.api.field_behavior) = OPTIONAL];</code>
     * @return The bytes for filter.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString
        getFilterBytes() {
      java.lang.Object ref = filter_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        filter_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(sequenceId_)) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 1, sequenceId_);
      }
      if (view_ != com.google.geo.ugc.streetview.publish.v1.StreetViewPublishRpcMessages.PhotoView.BASIC.getNumber()) {
        output.writeEnum(2, view_);
      }
      if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(filter_)) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 3, filter_);
      }
      getUnknownFields().writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(sequenceId_)) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(1, sequenceId_);
      }
      if (view_ != com.google.geo.ugc.streetview.publish.v1.StreetViewPublishRpcMessages.PhotoView.BASIC.getNumber()) {
        size += com.google.protobuf.CodedOutputStream
          .computeEnumSize(2, view_);
      }
      if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(filter_)) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(3, filter_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof com.google.geo.ugc.streetview.publish.v1.StreetViewPublishRpcMessages.GetPhotoSequenceRequest)) {
        return super.equals(obj);
      }
      com.google.geo.ugc.streetview.publish.v1.StreetViewPublishRpcMessages.GetPhotoSequenceRequest other = (com.google.geo.ugc.streetview.publish.v1.StreetViewPublishRpcMessages.GetPhotoSequenceRequest) obj;

      if (!getSequenceId()
          .equals(other.getSequenceId())) return false;
      if (view_ != other.view_) return false;
      if (!getFilter()
          .equals(other.getFilter())) return false;
      if (!getUnknownFields().equals(other.getUnknownFields())) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      hash = (37 * hash) + SEQUENCE_ID_FIELD_NUMBER;
      hash = (53 * hash) + getSequenceId().hashCode();
      hash = (37 * hash) + VIEW_FIELD_NUMBER;
      hash = (53 * hash) + view_;
      hash = (37 * hash) + FILTER_FIELD_NUMBER;
      hash = (53 * hash) + getFilter().hashCode();
      hash = (29 * hash) + getUnknownFields().hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static com.google.geo.ugc.streetview.publish.v1.StreetViewPublishRpcMessages.GetPhotoSequenceRequest parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.google.geo.ugc.streetview.publish.v1.StreetViewPublishRpcMessages.GetPhotoSequenceRequest parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.google.geo.ugc.streetview.publish.v1.StreetViewPublishRpcMessages.GetPhotoSequenceRequest parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.google.geo.ugc.streetview.publish.v1.StreetViewPublishRpcMessages.GetPhotoSequenceRequest parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.google.geo.ugc.streetview.publish.v1.StreetViewPublishRpcMessages.GetPhotoSequenceRequest parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.google.geo.ugc.streetview.publish.v1.StreetViewPublishRpcMessages.GetPhotoSequenceRequest parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.google.geo.ugc.streetview.publish.v1.StreetViewPublishRpcMessages.GetPhotoSequenceRequest parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static com.google.geo.ugc.streetview.publish.v1.StreetViewPublishRpcMessages.GetPhotoSequenceRequest parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static com.google.geo.ugc.streetview.publish.v1.StreetViewPublishRpcMessages.GetPhotoSequenceRequest parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static com.google.geo.ugc.streetview.publish.v1.StreetViewPublishRpcMessages.GetPhotoSequenceRequest parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static com.google.geo.ugc.streetview.publish.v1.StreetViewPublishRpcMessages.GetPhotoSequenceRequest parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static com.google.geo.ugc.streetview.publish.v1.StreetViewPublishRpcMessages.GetPhotoSequenceRequest parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(com.google.geo.ugc.streetview.publish.v1.StreetViewPublishRpcMessages.GetPhotoSequenceRequest prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * <pre>
     * Request to get a [PhotoSequence][google.streetview.publish.v1.PhotoSequence].
     * By default
     * * does not return the download URL for the
     * [PhotoSequence][google.streetview.publish.v1.PhotoSequence].
     * Parameters:
     * * `view` controls if the download URL for the
     * [PhotoSequence][google.streetview.publish.v1.PhotoSequence] is
     *   returned.
     * </pre>
     *
     * Protobuf type {@code google.streetview.publish.v1.GetPhotoSequenceRequest}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:google.streetview.publish.v1.GetPhotoSequenceRequest)
        com.google.geo.ugc.streetview.publish.v1.StreetViewPublishRpcMessages.GetPhotoSequenceRequestOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return com.google.geo.ugc.streetview.publish.v1.StreetViewPublishRpcMessages.internal_static_google_streetview_publish_v1_GetPhotoSequenceRequest_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return com.google.geo.ugc.streetview.publish.v1.StreetViewPublishRpcMessages.internal_static_google_streetview_publish_v1_GetPhotoSequenceRequest_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                com.google.geo.ugc.streetview.publish.v1.StreetViewPublishRpcMessages.GetPhotoSequenceRequest.class, com.google.geo.ugc.streetview.publish.v1.StreetViewPublishRpcMessages.GetPhotoSequenceRequest.Builder.class);
      }

      // Construct using com.google.geo.ugc.streetview.publish.v1.StreetViewPublishRpcMessages.GetPhotoSequenceRequest.newBuilder()
      private Builder() {

      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);

      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        bitField0_ = 0;
        sequenceId_ = "";
        view_ = 0;
        filter_ = "";
        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.google.geo.ugc.streetview.publish.v1.StreetViewPublishRpcMessages.internal_static_google_streetview_publish_v1_GetPhotoSequenceRequest_descriptor;
      }

      @java.lang.Override
      public com.google.geo.ugc.streetview.publish.v1.StreetViewPublishRpcMessages.GetPhotoSequenceRequest getDefaultInstanceForType() {
        return com.google.geo.ugc.streetview.publish.v1.StreetViewPublishRpcMessages.GetPhotoSequenceRequest.getDefaultInstance();
      }

      @java.lang.Override
      public com.google.geo.ugc.streetview.publish.v1.StreetViewPublishRpcMessages.GetPhotoSequenceRequest build() {
        com.google.geo.ugc.streetview.publish.v1.StreetViewPublishRpcMessages.GetPhotoSequenceRequest result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public com.google.geo.ugc.streetview.publish.v1.StreetViewPublishRpcMessages.GetPhotoSequenceRequest buildPartial() {
        com.google.geo.ugc.streetview.publish.v1.StreetViewPublishRpcMessages.GetPhotoSequenceRequest result = new com.google.geo.ugc.streetview.publish.v1.StreetViewPublishRpcMessages.GetPhotoSequenceRequest(this);
        if (bitField0_ != 0) { buildPartial0(result); }
        onBuilt();
        return result;
      }

      private void buildPartial0(com.google.geo.ugc.streetview.publish.v1.StreetViewPublishRpcMessages.GetPhotoSequenceRequest result) {
        int from_bitField0_ = bitField0_;
        if (((from_bitField0_ & 0x00000001) != 0)) {
          result.sequenceId_ = sequenceId_;
        }
        if (((from_bitField0_ & 0x00000002) != 0)) {
          result.view_ = view_;
        }
        if (((from_bitField0_ & 0x00000004) != 0)) {
          result.filter_ = filter_;
        }
      }

      @java.lang.Override
      public Builder clone() {
        return super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.google.geo.ugc.streetview.publish.v1.StreetViewPublishRpcMessages.GetPhotoSequenceRequest) {
          return mergeFrom((com.google.geo.ugc.streetview.publish.v1.StreetViewPublishRpcMessages.GetPhotoSequenceRequest)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(com.google.geo.ugc.streetview.publish.v1.StreetViewPublishRpcMessages.GetPhotoSequenceRequest other) {
        if (other == com.google.geo.ugc.streetview.publish.v1.StreetViewPublishRpcMessages.GetPhotoSequenceRequest.getDefaultInstance()) return this;
        if (!other.getSequenceId().isEmpty()) {
          sequenceId_ = other.sequenceId_;
          bitField0_ |= 0x00000001;
          onChanged();
        }
        if (other.view_ != 0) {
          setViewValue(other.getViewValue());
        }
        if (!other.getFilter().isEmpty()) {
          filter_ = other.filter_;
          bitField0_ |= 0x00000004;
          onChanged();
        }
        this.mergeUnknownFields(other.getUnknownFields());
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        if (extensionRegistry == null) {
          throw new java.lang.NullPointerException();
        }
        try {
          boolean done = false;
          while (!done) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                done = true;
                break;
              case 10: {
                sequenceId_ = input.readStringRequireUtf8();
                bitField0_ |= 0x00000001;
                break;
              } // case 10
              case 16: {
                view_ = input.readEnum();
                bitField0_ |= 0x00000002;
                break;
              } // case 16
              case 26: {
                filter_ = input.readStringRequireUtf8();
                bitField0_ |= 0x00000004;
                break;
              } // case 26
              default: {
                if (!super.parseUnknownField(input, extensionRegistry, tag)) {
                  done = true; // was an endgroup tag
                }
                break;
              } // default:
            } // switch (tag)
          } // while (!done)
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.unwrapIOException();
        } finally {
          onChanged();
        } // finally
        return this;
      }
      private int bitField0_;

      private java.lang.Object sequenceId_ = "";
      /**
       * <pre>
       * Required. ID of the photo sequence.
       * </pre>
       *
       * <code>string sequence_id = 1 [(.google.api.field_behavior) = REQUIRED];</code>
       * @return The sequenceId.
       */
      public java.lang.String getSequenceId() {
        java.lang.Object ref = sequenceId_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          sequenceId_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <pre>
       * Required. ID of the photo sequence.
       * </pre>
       *
       * <code>string sequence_id = 1 [(.google.api.field_behavior) = REQUIRED];</code>
       * @return The bytes for sequenceId.
       */
      public com.google.protobuf.ByteString
          getSequenceIdBytes() {
        java.lang.Object ref = sequenceId_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          sequenceId_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       * Required. ID of the photo sequence.
       * </pre>
       *
       * <code>string sequence_id = 1 [(.google.api.field_behavior) = REQUIRED];</code>
       * @param value The sequenceId to set.
       * @return This builder for chaining.
       */
      public Builder setSequenceId(
          java.lang.String value) {
        if (value == null) { throw new NullPointerException(); }
        sequenceId_ = value;
        bitField0_ |= 0x00000001;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Required. ID of the photo sequence.
       * </pre>
       *
       * <code>string sequence_id = 1 [(.google.api.field_behavior) = REQUIRED];</code>
       * @return This builder for chaining.
       */
      public Builder clearSequenceId() {
        sequenceId_ = getDefaultInstance().getSequenceId();
        bitField0_ = (bitField0_ & ~0x00000001);
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Required. ID of the photo sequence.
       * </pre>
       *
       * <code>string sequence_id = 1 [(.google.api.field_behavior) = REQUIRED];</code>
       * @param value The bytes for sequenceId to set.
       * @return This builder for chaining.
       */
      public Builder setSequenceIdBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) { throw new NullPointerException(); }
        checkByteStringIsUtf8(value);
        sequenceId_ = value;
        bitField0_ |= 0x00000001;
        onChanged();
        return this;
      }

      private int view_ = 0;
      /**
       * <pre>
       * Specifies if a download URL for the photo sequence should be returned in
       * `download_url` of individual photos in the
       * [PhotoSequence][google.streetview.publish.v1.PhotoSequence] response.
       * &gt; Note: Currently not implemented.
       * </pre>
       *
       * <code>.google.streetview.publish.v1.PhotoView view = 2 [deprecated = true];</code>
       * @deprecated google.streetview.publish.v1.GetPhotoSequenceRequest.view is deprecated.
       *     See google/streetview/publish/v1/rpcmessages.proto;l=283
       * @return The enum numeric value on the wire for view.
       */
      @java.lang.Override @java.lang.Deprecated public int getViewValue() {
        return view_;
      }
      /**
       * <pre>
       * Specifies if a download URL for the photo sequence should be returned in
       * `download_url` of individual photos in the
       * [PhotoSequence][google.streetview.publish.v1.PhotoSequence] response.
       * &gt; Note: Currently not implemented.
       * </pre>
       *
       * <code>.google.streetview.publish.v1.PhotoView view = 2 [deprecated = true];</code>
       * @deprecated google.streetview.publish.v1.GetPhotoSequenceRequest.view is deprecated.
       *     See google/streetview/publish/v1/rpcmessages.proto;l=283
       * @param value The enum numeric value on the wire for view to set.
       * @return This builder for chaining.
       */
      @java.lang.Deprecated public Builder setViewValue(int value) {
        view_ = value;
        bitField0_ |= 0x00000002;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Specifies if a download URL for the photo sequence should be returned in
       * `download_url` of individual photos in the
       * [PhotoSequence][google.streetview.publish.v1.PhotoSequence] response.
       * &gt; Note: Currently not implemented.
       * </pre>
       *
       * <code>.google.streetview.publish.v1.PhotoView view = 2 [deprecated = true];</code>
       * @deprecated google.streetview.publish.v1.GetPhotoSequenceRequest.view is deprecated.
       *     See google/streetview/publish/v1/rpcmessages.proto;l=283
       * @return The view.
       */
      @java.lang.Override
      @java.lang.Deprecated public com.google.geo.ugc.streetview.publish.v1.StreetViewPublishRpcMessages.PhotoView getView() {
        com.google.geo.ugc.streetview.publish.v1.StreetViewPublishRpcMessages.PhotoView result = com.google.geo.ugc.streetview.publish.v1.StreetViewPublishRpcMessages.PhotoView.forNumber(view_);
        return result == null ? com.google.geo.ugc.streetview.publish.v1.StreetViewPublishRpcMessages.PhotoView.UNRECOGNIZED : result;
      }
      /**
       * <pre>
       * Specifies if a download URL for the photo sequence should be returned in
       * `download_url` of individual photos in the
       * [PhotoSequence][google.streetview.publish.v1.PhotoSequence] response.
       * &gt; Note: Currently not implemented.
       * </pre>
       *
       * <code>.google.streetview.publish.v1.PhotoView view = 2 [deprecated = true];</code>
       * @deprecated google.streetview.publish.v1.GetPhotoSequenceRequest.view is deprecated.
       *     See google/streetview/publish/v1/rpcmessages.proto;l=283
       * @param value The view to set.
       * @return This builder for chaining.
       */
      @java.lang.Deprecated public Builder setView(com.google.geo.ugc.streetview.publish.v1.StreetViewPublishRpcMessages.PhotoView value) {
        if (value == null) {
          throw new NullPointerException();
        }
        bitField0_ |= 0x00000002;
        view_ = value.getNumber();
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Specifies if a download URL for the photo sequence should be returned in
       * `download_url` of individual photos in the
       * [PhotoSequence][google.streetview.publish.v1.PhotoSequence] response.
       * &gt; Note: Currently not implemented.
       * </pre>
       *
       * <code>.google.streetview.publish.v1.PhotoView view = 2 [deprecated = true];</code>
       * @deprecated google.streetview.publish.v1.GetPhotoSequenceRequest.view is deprecated.
       *     See google/streetview/publish/v1/rpcmessages.proto;l=283
       * @return This builder for chaining.
       */
      @java.lang.Deprecated public Builder clearView() {
        bitField0_ = (bitField0_ & ~0x00000002);
        view_ = 0;
        onChanged();
        return this;
      }

      private java.lang.Object filter_ = "";
      /**
       * <pre>
       * Optional. The filter expression. For example: `published_status=PUBLISHED`.
       * The filters supported are: `published_status`.  See
       * https://google.aip.dev/160 for more information.
       * </pre>
       *
       * <code>string filter = 3 [(.google.api.field_behavior) = OPTIONAL];</code>
       * @return The filter.
       */
      public java.lang.String getFilter() {
        java.lang.Object ref = filter_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          filter_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <pre>
       * Optional. The filter expression. For example: `published_status=PUBLISHED`.
       * The filters supported are: `published_status`.  See
       * https://google.aip.dev/160 for more information.
       * </pre>
       *
       * <code>string filter = 3 [(.google.api.field_behavior) = OPTIONAL];</code>
       * @return The bytes for filter.
       */
      public com.google.protobuf.ByteString
          getFilterBytes() {
        java.lang.Object ref = filter_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          filter_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       * Optional. The filter expression. For example: `published_status=PUBLISHED`.
       * The filters supported are: `published_status`.  See
       * https://google.aip.dev/160 for more information.
       * </pre>
       *
       * <code>string filter = 3 [(.google.api.field_behavior) = OPTIONAL];</code>
       * @param value The filter to set.
       * @return This builder for chaining.
       */
      public Builder setFilter(
          java.lang.String value) {
        if (value == null) { throw new NullPointerException(); }
        filter_ = value;
        bitField0_ |= 0x00000004;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Optional. The filter expression. For example: `published_status=PUBLISHED`.
       * The filters supported are: `published_status`.  See
       * https://google.aip.dev/160 for more information.
       * </pre>
       *
       * <code>string filter = 3 [(.google.api.field_behavior) = OPTIONAL];</code>
       * @return This builder for chaining.
       */
      public Builder clearFilter() {
        filter_ = getDefaultInstance().getFilter();
        bitField0_ = (bitField0_ & ~0x00000004);
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Optional. The filter expression. For example: `published_status=PUBLISHED`.
       * The filters supported are: `published_status`.  See
       * https://google.aip.dev/160 for more information.
       * </pre>
       *
       * <code>string filter = 3 [(.google.api.field_behavior) = OPTIONAL];</code>
       * @param value The bytes for filter to set.
       * @return This builder for chaining.
       */
      public Builder setFilterBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) { throw new NullPointerException(); }
        checkByteStringIsUtf8(value);
        filter_ = value;
        bitField0_ |= 0x00000004;
        onChanged();
        return this;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:google.streetview.publish.v1.GetPhotoSequenceRequest)
    }

    // @@protoc_insertion_point(class_scope:google.streetview.publish.v1.GetPhotoSequenceRequest)
    private static final com.google.geo.ugc.streetview.publish.v1.StreetViewPublishRpcMessages.GetPhotoSequenceRequest DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new com.google.geo.ugc.streetview.publish.v1.StreetViewPublishRpcMessages.GetPhotoSequenceRequest();
    }

    public static com.google.geo.ugc.streetview.publish.v1.StreetViewPublishRpcMessages.GetPhotoSequenceRequest getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<GetPhotoSequenceRequest>
        PARSER = new com.google.protobuf.AbstractParser<GetPhotoSequenceRequest>() {
      @java.lang.Override
      public GetPhotoSequenceRequest parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        Builder builder = newBuilder();
        try {
          builder.mergeFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.setUnfinishedMessage(builder.buildPartial());
        } catch (com.google.protobuf.UninitializedMessageException e) {
          throw e.asInvalidProtocolBufferException().setUnfinishedMessage(builder.buildPartial());
        } catch (java.io.IOException e) {
          throw new com.google.protobuf.InvalidProtocolBufferException(e)
              .setUnfinishedMessage(builder.buildPartial());
        }
        return builder.buildPartial();
      }
    };

    public static com.google.protobuf.Parser<GetPhotoSequenceRequest> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<GetPhotoSequenceRequest> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.geo.ugc.streetview.publish.v1.StreetViewPublishRpcMessages.GetPhotoSequenceRequest getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface DeletePhotoSequenceRequestOrBuilder extends
      // @@protoc_insertion_point(interface_extends:google.streetview.publish.v1.DeletePhotoSequenceRequest)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <pre>
     * Required. ID of the
     * [PhotoSequence][google.streetview.publish.v1.PhotoSequence].
     * </pre>
     *
     * <code>string sequence_id = 1 [(.google.api.field_behavior) = REQUIRED];</code>
     * @return The sequenceId.
     */
    java.lang.String getSequenceId();
    /**
     * <pre>
     * Required. ID of the
     * [PhotoSequence][google.streetview.publish.v1.PhotoSequence].
     * </pre>
     *
     * <code>string sequence_id = 1 [(.google.api.field_behavior) = REQUIRED];</code>
     * @return The bytes for sequenceId.
     */
    com.google.protobuf.ByteString
        getSequenceIdBytes();
  }
  /**
   * <pre>
   * Request to delete a
   * [PhotoSequence][google.streetview.publish.v1.PhotoSequence].
   * </pre>
   *
   * Protobuf type {@code google.streetview.publish.v1.DeletePhotoSequenceRequest}
   */
  public static final class DeletePhotoSequenceRequest extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:google.streetview.publish.v1.DeletePhotoSequenceRequest)
      DeletePhotoSequenceRequestOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use DeletePhotoSequenceRequest.newBuilder() to construct.
    private DeletePhotoSequenceRequest(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private DeletePhotoSequenceRequest() {
      sequenceId_ = "";
    }

    @java.lang.Override
    @SuppressWarnings({"unused"})
    protected java.lang.Object newInstance(
        UnusedPrivateParameter unused) {
      return new DeletePhotoSequenceRequest();
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.google.geo.ugc.streetview.publish.v1.StreetViewPublishRpcMessages.internal_static_google_streetview_publish_v1_DeletePhotoSequenceRequest_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.google.geo.ugc.streetview.publish.v1.StreetViewPublishRpcMessages.internal_static_google_streetview_publish_v1_DeletePhotoSequenceRequest_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.google.geo.ugc.streetview.publish.v1.StreetViewPublishRpcMessages.DeletePhotoSequenceRequest.class, com.google.geo.ugc.streetview.publish.v1.StreetViewPublishRpcMessages.DeletePhotoSequenceRequest.Builder.class);
    }

    public static final int SEQUENCE_ID_FIELD_NUMBER = 1;
    @SuppressWarnings("serial")
    private volatile java.lang.Object sequenceId_ = "";
    /**
     * <pre>
     * Required. ID of the
     * [PhotoSequence][google.streetview.publish.v1.PhotoSequence].
     * </pre>
     *
     * <code>string sequence_id = 1 [(.google.api.field_behavior) = REQUIRED];</code>
     * @return The sequenceId.
     */
    @java.lang.Override
    public java.lang.String getSequenceId() {
      java.lang.Object ref = sequenceId_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        sequenceId_ = s;
        return s;
      }
    }
    /**
     * <pre>
     * Required. ID of the
     * [PhotoSequence][google.streetview.publish.v1.PhotoSequence].
     * </pre>
     *
     * <code>string sequence_id = 1 [(.google.api.field_behavior) = REQUIRED];</code>
     * @return The bytes for sequenceId.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString
        getSequenceIdBytes() {
      java.lang.Object ref = sequenceId_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        sequenceId_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(sequenceId_)) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 1, sequenceId_);
      }
      getUnknownFields().writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(sequenceId_)) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(1, sequenceId_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof com.google.geo.ugc.streetview.publish.v1.StreetViewPublishRpcMessages.DeletePhotoSequenceRequest)) {
        return super.equals(obj);
      }
      com.google.geo.ugc.streetview.publish.v1.StreetViewPublishRpcMessages.DeletePhotoSequenceRequest other = (com.google.geo.ugc.streetview.publish.v1.StreetViewPublishRpcMessages.DeletePhotoSequenceRequest) obj;

      if (!getSequenceId()
          .equals(other.getSequenceId())) return false;
      if (!getUnknownFields().equals(other.getUnknownFields())) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      hash = (37 * hash) + SEQUENCE_ID_FIELD_NUMBER;
      hash = (53 * hash) + getSequenceId().hashCode();
      hash = (29 * hash) + getUnknownFields().hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static com.google.geo.ugc.streetview.publish.v1.StreetViewPublishRpcMessages.DeletePhotoSequenceRequest parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.google.geo.ugc.streetview.publish.v1.StreetViewPublishRpcMessages.DeletePhotoSequenceRequest parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.google.geo.ugc.streetview.publish.v1.StreetViewPublishRpcMessages.DeletePhotoSequenceRequest parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.google.geo.ugc.streetview.publish.v1.StreetViewPublishRpcMessages.DeletePhotoSequenceRequest parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.google.geo.ugc.streetview.publish.v1.StreetViewPublishRpcMessages.DeletePhotoSequenceRequest parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.google.geo.ugc.streetview.publish.v1.StreetViewPublishRpcMessages.DeletePhotoSequenceRequest parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.google.geo.ugc.streetview.publish.v1.StreetViewPublishRpcMessages.DeletePhotoSequenceRequest parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static com.google.geo.ugc.streetview.publish.v1.StreetViewPublishRpcMessages.DeletePhotoSequenceRequest parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static com.google.geo.ugc.streetview.publish.v1.StreetViewPublishRpcMessages.DeletePhotoSequenceRequest parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static com.google.geo.ugc.streetview.publish.v1.StreetViewPublishRpcMessages.DeletePhotoSequenceRequest parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static com.google.geo.ugc.streetview.publish.v1.StreetViewPublishRpcMessages.DeletePhotoSequenceRequest parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static com.google.geo.ugc.streetview.publish.v1.StreetViewPublishRpcMessages.DeletePhotoSequenceRequest parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(com.google.geo.ugc.streetview.publish.v1.StreetViewPublishRpcMessages.DeletePhotoSequenceRequest prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * <pre>
     * Request to delete a
     * [PhotoSequence][google.streetview.publish.v1.PhotoSequence].
     * </pre>
     *
     * Protobuf type {@code google.streetview.publish.v1.DeletePhotoSequenceRequest}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:google.streetview.publish.v1.DeletePhotoSequenceRequest)
        com.google.geo.ugc.streetview.publish.v1.StreetViewPublishRpcMessages.DeletePhotoSequenceRequestOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return com.google.geo.ugc.streetview.publish.v1.StreetViewPublishRpcMessages.internal_static_google_streetview_publish_v1_DeletePhotoSequenceRequest_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return com.google.geo.ugc.streetview.publish.v1.StreetViewPublishRpcMessages.internal_static_google_streetview_publish_v1_DeletePhotoSequenceRequest_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                com.google.geo.ugc.streetview.publish.v1.StreetViewPublishRpcMessages.DeletePhotoSequenceRequest.class, com.google.geo.ugc.streetview.publish.v1.StreetViewPublishRpcMessages.DeletePhotoSequenceRequest.Builder.class);
      }

      // Construct using com.google.geo.ugc.streetview.publish.v1.StreetViewPublishRpcMessages.DeletePhotoSequenceRequest.newBuilder()
      private Builder() {

      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);

      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        bitField0_ = 0;
        sequenceId_ = "";
        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.google.geo.ugc.streetview.publish.v1.StreetViewPublishRpcMessages.internal_static_google_streetview_publish_v1_DeletePhotoSequenceRequest_descriptor;
      }

      @java.lang.Override
      public com.google.geo.ugc.streetview.publish.v1.StreetViewPublishRpcMessages.DeletePhotoSequenceRequest getDefaultInstanceForType() {
        return com.google.geo.ugc.streetview.publish.v1.StreetViewPublishRpcMessages.DeletePhotoSequenceRequest.getDefaultInstance();
      }

      @java.lang.Override
      public com.google.geo.ugc.streetview.publish.v1.StreetViewPublishRpcMessages.DeletePhotoSequenceRequest build() {
        com.google.geo.ugc.streetview.publish.v1.StreetViewPublishRpcMessages.DeletePhotoSequenceRequest result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public com.google.geo.ugc.streetview.publish.v1.StreetViewPublishRpcMessages.DeletePhotoSequenceRequest buildPartial() {
        com.google.geo.ugc.streetview.publish.v1.StreetViewPublishRpcMessages.DeletePhotoSequenceRequest result = new com.google.geo.ugc.streetview.publish.v1.StreetViewPublishRpcMessages.DeletePhotoSequenceRequest(this);
        if (bitField0_ != 0) { buildPartial0(result); }
        onBuilt();
        return result;
      }

      private void buildPartial0(com.google.geo.ugc.streetview.publish.v1.StreetViewPublishRpcMessages.DeletePhotoSequenceRequest result) {
        int from_bitField0_ = bitField0_;
        if (((from_bitField0_ & 0x00000001) != 0)) {
          result.sequenceId_ = sequenceId_;
        }
      }

      @java.lang.Override
      public Builder clone() {
        return super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.google.geo.ugc.streetview.publish.v1.StreetViewPublishRpcMessages.DeletePhotoSequenceRequest) {
          return mergeFrom((com.google.geo.ugc.streetview.publish.v1.StreetViewPublishRpcMessages.DeletePhotoSequenceRequest)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(com.google.geo.ugc.streetview.publish.v1.StreetViewPublishRpcMessages.DeletePhotoSequenceRequest other) {
        if (other == com.google.geo.ugc.streetview.publish.v1.StreetViewPublishRpcMessages.DeletePhotoSequenceRequest.getDefaultInstance()) return this;
        if (!other.getSequenceId().isEmpty()) {
          sequenceId_ = other.sequenceId_;
          bitField0_ |= 0x00000001;
          onChanged();
        }
        this.mergeUnknownFields(other.getUnknownFields());
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        if (extensionRegistry == null) {
          throw new java.lang.NullPointerException();
        }
        try {
          boolean done = false;
          while (!done) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                done = true;
                break;
              case 10: {
                sequenceId_ = input.readStringRequireUtf8();
                bitField0_ |= 0x00000001;
                break;
              } // case 10
              default: {
                if (!super.parseUnknownField(input, extensionRegistry, tag)) {
                  done = true; // was an endgroup tag
                }
                break;
              } // default:
            } // switch (tag)
          } // while (!done)
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.unwrapIOException();
        } finally {
          onChanged();
        } // finally
        return this;
      }
      private int bitField0_;

      private java.lang.Object sequenceId_ = "";
      /**
       * <pre>
       * Required. ID of the
       * [PhotoSequence][google.streetview.publish.v1.PhotoSequence].
       * </pre>
       *
       * <code>string sequence_id = 1 [(.google.api.field_behavior) = REQUIRED];</code>
       * @return The sequenceId.
       */
      public java.lang.String getSequenceId() {
        java.lang.Object ref = sequenceId_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          sequenceId_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <pre>
       * Required. ID of the
       * [PhotoSequence][google.streetview.publish.v1.PhotoSequence].
       * </pre>
       *
       * <code>string sequence_id = 1 [(.google.api.field_behavior) = REQUIRED];</code>
       * @return The bytes for sequenceId.
       */
      public com.google.protobuf.ByteString
          getSequenceIdBytes() {
        java.lang.Object ref = sequenceId_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          sequenceId_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       * Required. ID of the
       * [PhotoSequence][google.streetview.publish.v1.PhotoSequence].
       * </pre>
       *
       * <code>string sequence_id = 1 [(.google.api.field_behavior) = REQUIRED];</code>
       * @param value The sequenceId to set.
       * @return This builder for chaining.
       */
      public Builder setSequenceId(
          java.lang.String value) {
        if (value == null) { throw new NullPointerException(); }
        sequenceId_ = value;
        bitField0_ |= 0x00000001;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Required. ID of the
       * [PhotoSequence][google.streetview.publish.v1.PhotoSequence].
       * </pre>
       *
       * <code>string sequence_id = 1 [(.google.api.field_behavior) = REQUIRED];</code>
       * @return This builder for chaining.
       */
      public Builder clearSequenceId() {
        sequenceId_ = getDefaultInstance().getSequenceId();
        bitField0_ = (bitField0_ & ~0x00000001);
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Required. ID of the
       * [PhotoSequence][google.streetview.publish.v1.PhotoSequence].
       * </pre>
       *
       * <code>string sequence_id = 1 [(.google.api.field_behavior) = REQUIRED];</code>
       * @param value The bytes for sequenceId to set.
       * @return This builder for chaining.
       */
      public Builder setSequenceIdBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) { throw new NullPointerException(); }
        checkByteStringIsUtf8(value);
        sequenceId_ = value;
        bitField0_ |= 0x00000001;
        onChanged();
        return this;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:google.streetview.publish.v1.DeletePhotoSequenceRequest)
    }

    // @@protoc_insertion_point(class_scope:google.streetview.publish.v1.DeletePhotoSequenceRequest)
    private static final com.google.geo.ugc.streetview.publish.v1.StreetViewPublishRpcMessages.DeletePhotoSequenceRequest DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new com.google.geo.ugc.streetview.publish.v1.StreetViewPublishRpcMessages.DeletePhotoSequenceRequest();
    }

    public static com.google.geo.ugc.streetview.publish.v1.StreetViewPublishRpcMessages.DeletePhotoSequenceRequest getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<DeletePhotoSequenceRequest>
        PARSER = new com.google.protobuf.AbstractParser<DeletePhotoSequenceRequest>() {
      @java.lang.Override
      public DeletePhotoSequenceRequest parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        Builder builder = newBuilder();
        try {
          builder.mergeFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.setUnfinishedMessage(builder.buildPartial());
        } catch (com.google.protobuf.UninitializedMessageException e) {
          throw e.asInvalidProtocolBufferException().setUnfinishedMessage(builder.buildPartial());
        } catch (java.io.IOException e) {
          throw new com.google.protobuf.InvalidProtocolBufferException(e)
              .setUnfinishedMessage(builder.buildPartial());
        }
        return builder.buildPartial();
      }
    };

    public static com.google.protobuf.Parser<DeletePhotoSequenceRequest> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<DeletePhotoSequenceRequest> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.geo.ugc.streetview.publish.v1.StreetViewPublishRpcMessages.DeletePhotoSequenceRequest getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface BatchDeletePhotosResponseOrBuilder extends
      // @@protoc_insertion_point(interface_extends:google.streetview.publish.v1.BatchDeletePhotosResponse)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <pre>
     * The status for the operation to delete a single
     * [Photo][google.streetview.publish.v1.Photo] in the batch request.
     * </pre>
     *
     * <code>repeated .google.rpc.Status status = 1;</code>
     */
    java.util.List<com.google.rpc.Status> 
        getStatusList();
    /**
     * <pre>
     * The status for the operation to delete a single
     * [Photo][google.streetview.publish.v1.Photo] in the batch request.
     * </pre>
     *
     * <code>repeated .google.rpc.Status status = 1;</code>
     */
    com.google.rpc.Status getStatus(int index);
    /**
     * <pre>
     * The status for the operation to delete a single
     * [Photo][google.streetview.publish.v1.Photo] in the batch request.
     * </pre>
     *
     * <code>repeated .google.rpc.Status status = 1;</code>
     */
    int getStatusCount();
    /**
     * <pre>
     * The status for the operation to delete a single
     * [Photo][google.streetview.publish.v1.Photo] in the batch request.
     * </pre>
     *
     * <code>repeated .google.rpc.Status status = 1;</code>
     */
    java.util.List<? extends com.google.rpc.StatusOrBuilder> 
        getStatusOrBuilderList();
    /**
     * <pre>
     * The status for the operation to delete a single
     * [Photo][google.streetview.publish.v1.Photo] in the batch request.
     * </pre>
     *
     * <code>repeated .google.rpc.Status status = 1;</code>
     */
    com.google.rpc.StatusOrBuilder getStatusOrBuilder(
        int index);
  }
  /**
   * <pre>
   * Response to batch delete of one or more
   * [Photos][google.streetview.publish.v1.Photo].
   * </pre>
   *
   * Protobuf type {@code google.streetview.publish.v1.BatchDeletePhotosResponse}
   */
  public static final class BatchDeletePhotosResponse extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:google.streetview.publish.v1.BatchDeletePhotosResponse)
      BatchDeletePhotosResponseOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use BatchDeletePhotosResponse.newBuilder() to construct.
    private BatchDeletePhotosResponse(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private BatchDeletePhotosResponse() {
      status_ = java.util.Collections.emptyList();
    }

    @java.lang.Override
    @SuppressWarnings({"unused"})
    protected java.lang.Object newInstance(
        UnusedPrivateParameter unused) {
      return new BatchDeletePhotosResponse();
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.google.geo.ugc.streetview.publish.v1.StreetViewPublishRpcMessages.internal_static_google_streetview_publish_v1_BatchDeletePhotosResponse_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.google.geo.ugc.streetview.publish.v1.StreetViewPublishRpcMessages.internal_static_google_streetview_publish_v1_BatchDeletePhotosResponse_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.google.geo.ugc.streetview.publish.v1.StreetViewPublishRpcMessages.BatchDeletePhotosResponse.class, com.google.geo.ugc.streetview.publish.v1.StreetViewPublishRpcMessages.BatchDeletePhotosResponse.Builder.class);
    }

    public static final int STATUS_FIELD_NUMBER = 1;
    @SuppressWarnings("serial")
    private java.util.List<com.google.rpc.Status> status_;
    /**
     * <pre>
     * The status for the operation to delete a single
     * [Photo][google.streetview.publish.v1.Photo] in the batch request.
     * </pre>
     *
     * <code>repeated .google.rpc.Status status = 1;</code>
     */
    @java.lang.Override
    public java.util.List<com.google.rpc.Status> getStatusList() {
      return status_;
    }
    /**
     * <pre>
     * The status for the operation to delete a single
     * [Photo][google.streetview.publish.v1.Photo] in the batch request.
     * </pre>
     *
     * <code>repeated .google.rpc.Status status = 1;</code>
     */
    @java.lang.Override
    public java.util.List<? extends com.google.rpc.StatusOrBuilder> 
        getStatusOrBuilderList() {
      return status_;
    }
    /**
     * <pre>
     * The status for the operation to delete a single
     * [Photo][google.streetview.publish.v1.Photo] in the batch request.
     * </pre>
     *
     * <code>repeated .google.rpc.Status status = 1;</code>
     */
    @java.lang.Override
    public int getStatusCount() {
      return status_.size();
    }
    /**
     * <pre>
     * The status for the operation to delete a single
     * [Photo][google.streetview.publish.v1.Photo] in the batch request.
     * </pre>
     *
     * <code>repeated .google.rpc.Status status = 1;</code>
     */
    @java.lang.Override
    public com.google.rpc.Status getStatus(int index) {
      return status_.get(index);
    }
    /**
     * <pre>
     * The status for the operation to delete a single
     * [Photo][google.streetview.publish.v1.Photo] in the batch request.
     * </pre>
     *
     * <code>repeated .google.rpc.Status status = 1;</code>
     */
    @java.lang.Override
    public com.google.rpc.StatusOrBuilder getStatusOrBuilder(
        int index) {
      return status_.get(index);
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      for (int i = 0; i < status_.size(); i++) {
        output.writeMessage(1, status_.get(i));
      }
      getUnknownFields().writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      for (int i = 0; i < status_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, status_.get(i));
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof com.google.geo.ugc.streetview.publish.v1.StreetViewPublishRpcMessages.BatchDeletePhotosResponse)) {
        return super.equals(obj);
      }
      com.google.geo.ugc.streetview.publish.v1.StreetViewPublishRpcMessages.BatchDeletePhotosResponse other = (com.google.geo.ugc.streetview.publish.v1.StreetViewPublishRpcMessages.BatchDeletePhotosResponse) obj;

      if (!getStatusList()
          .equals(other.getStatusList())) return false;
      if (!getUnknownFields().equals(other.getUnknownFields())) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      if (getStatusCount() > 0) {
        hash = (37 * hash) + STATUS_FIELD_NUMBER;
        hash = (53 * hash) + getStatusList().hashCode();
      }
      hash = (29 * hash) + getUnknownFields().hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static com.google.geo.ugc.streetview.publish.v1.StreetViewPublishRpcMessages.BatchDeletePhotosResponse parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.google.geo.ugc.streetview.publish.v1.StreetViewPublishRpcMessages.BatchDeletePhotosResponse parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.google.geo.ugc.streetview.publish.v1.StreetViewPublishRpcMessages.BatchDeletePhotosResponse parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.google.geo.ugc.streetview.publish.v1.StreetViewPublishRpcMessages.BatchDeletePhotosResponse parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.google.geo.ugc.streetview.publish.v1.StreetViewPublishRpcMessages.BatchDeletePhotosResponse parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.google.geo.ugc.streetview.publish.v1.StreetViewPublishRpcMessages.BatchDeletePhotosResponse parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.google.geo.ugc.streetview.publish.v1.StreetViewPublishRpcMessages.BatchDeletePhotosResponse parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static com.google.geo.ugc.streetview.publish.v1.StreetViewPublishRpcMessages.BatchDeletePhotosResponse parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static com.google.geo.ugc.streetview.publish.v1.StreetViewPublishRpcMessages.BatchDeletePhotosResponse parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static com.google.geo.ugc.streetview.publish.v1.StreetViewPublishRpcMessages.BatchDeletePhotosResponse parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static com.google.geo.ugc.streetview.publish.v1.StreetViewPublishRpcMessages.BatchDeletePhotosResponse parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static com.google.geo.ugc.streetview.publish.v1.StreetViewPublishRpcMessages.BatchDeletePhotosResponse parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(com.google.geo.ugc.streetview.publish.v1.StreetViewPublishRpcMessages.BatchDeletePhotosResponse prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * <pre>
     * Response to batch delete of one or more
     * [Photos][google.streetview.publish.v1.Photo].
     * </pre>
     *
     * Protobuf type {@code google.streetview.publish.v1.BatchDeletePhotosResponse}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:google.streetview.publish.v1.BatchDeletePhotosResponse)
        com.google.geo.ugc.streetview.publish.v1.StreetViewPublishRpcMessages.BatchDeletePhotosResponseOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return com.google.geo.ugc.streetview.publish.v1.StreetViewPublishRpcMessages.internal_static_google_streetview_publish_v1_BatchDeletePhotosResponse_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return com.google.geo.ugc.streetview.publish.v1.StreetViewPublishRpcMessages.internal_static_google_streetview_publish_v1_BatchDeletePhotosResponse_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                com.google.geo.ugc.streetview.publish.v1.StreetViewPublishRpcMessages.BatchDeletePhotosResponse.class, com.google.geo.ugc.streetview.publish.v1.StreetViewPublishRpcMessages.BatchDeletePhotosResponse.Builder.class);
      }

      // Construct using com.google.geo.ugc.streetview.publish.v1.StreetViewPublishRpcMessages.BatchDeletePhotosResponse.newBuilder()
      private Builder() {

      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);

      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        bitField0_ = 0;
        if (statusBuilder_ == null) {
          status_ = java.util.Collections.emptyList();
        } else {
          status_ = null;
          statusBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000001);
        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.google.geo.ugc.streetview.publish.v1.StreetViewPublishRpcMessages.internal_static_google_streetview_publish_v1_BatchDeletePhotosResponse_descriptor;
      }

      @java.lang.Override
      public com.google.geo.ugc.streetview.publish.v1.StreetViewPublishRpcMessages.BatchDeletePhotosResponse getDefaultInstanceForType() {
        return com.google.geo.ugc.streetview.publish.v1.StreetViewPublishRpcMessages.BatchDeletePhotosResponse.getDefaultInstance();
      }

      @java.lang.Override
      public com.google.geo.ugc.streetview.publish.v1.StreetViewPublishRpcMessages.BatchDeletePhotosResponse build() {
        com.google.geo.ugc.streetview.publish.v1.StreetViewPublishRpcMessages.BatchDeletePhotosResponse result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public com.google.geo.ugc.streetview.publish.v1.StreetViewPublishRpcMessages.BatchDeletePhotosResponse buildPartial() {
        com.google.geo.ugc.streetview.publish.v1.StreetViewPublishRpcMessages.BatchDeletePhotosResponse result = new com.google.geo.ugc.streetview.publish.v1.StreetViewPublishRpcMessages.BatchDeletePhotosResponse(this);
        buildPartialRepeatedFields(result);
        if (bitField0_ != 0) { buildPartial0(result); }
        onBuilt();
        return result;
      }

      private void buildPartialRepeatedFields(com.google.geo.ugc.streetview.publish.v1.StreetViewPublishRpcMessages.BatchDeletePhotosResponse result) {
        if (statusBuilder_ == null) {
          if (((bitField0_ & 0x00000001) != 0)) {
            status_ = java.util.Collections.unmodifiableList(status_);
            bitField0_ = (bitField0_ & ~0x00000001);
          }
          result.status_ = status_;
        } else {
          result.status_ = statusBuilder_.build();
        }
      }

      private void buildPartial0(com.google.geo.ugc.streetview.publish.v1.StreetViewPublishRpcMessages.BatchDeletePhotosResponse result) {
        int from_bitField0_ = bitField0_;
      }

      @java.lang.Override
      public Builder clone() {
        return super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.google.geo.ugc.streetview.publish.v1.StreetViewPublishRpcMessages.BatchDeletePhotosResponse) {
          return mergeFrom((com.google.geo.ugc.streetview.publish.v1.StreetViewPublishRpcMessages.BatchDeletePhotosResponse)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(com.google.geo.ugc.streetview.publish.v1.StreetViewPublishRpcMessages.BatchDeletePhotosResponse other) {
        if (other == com.google.geo.ugc.streetview.publish.v1.StreetViewPublishRpcMessages.BatchDeletePhotosResponse.getDefaultInstance()) return this;
        if (statusBuilder_ == null) {
          if (!other.status_.isEmpty()) {
            if (status_.isEmpty()) {
              status_ = other.status_;
              bitField0_ = (bitField0_ & ~0x00000001);
            } else {
              ensureStatusIsMutable();
              status_.addAll(other.status_);
            }
            onChanged();
          }
        } else {
          if (!other.status_.isEmpty()) {
            if (statusBuilder_.isEmpty()) {
              statusBuilder_.dispose();
              statusBuilder_ = null;
              status_ = other.status_;
              bitField0_ = (bitField0_ & ~0x00000001);
              statusBuilder_ = 
                com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?
                   getStatusFieldBuilder() : null;
            } else {
              statusBuilder_.addAllMessages(other.status_);
            }
          }
        }
        this.mergeUnknownFields(other.getUnknownFields());
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        if (extensionRegistry == null) {
          throw new java.lang.NullPointerException();
        }
        try {
          boolean done = false;
          while (!done) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                done = true;
                break;
              case 10: {
                com.google.rpc.Status m =
                    input.readMessage(
                        com.google.rpc.Status.parser(),
                        extensionRegistry);
                if (statusBuilder_ == null) {
                  ensureStatusIsMutable();
                  status_.add(m);
                } else {
                  statusBuilder_.addMessage(m);
                }
                break;
              } // case 10
              default: {
                if (!super.parseUnknownField(input, extensionRegistry, tag)) {
                  done = true; // was an endgroup tag
                }
                break;
              } // default:
            } // switch (tag)
          } // while (!done)
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.unwrapIOException();
        } finally {
          onChanged();
        } // finally
        return this;
      }
      private int bitField0_;

      private java.util.List<com.google.rpc.Status> status_ =
        java.util.Collections.emptyList();
      private void ensureStatusIsMutable() {
        if (!((bitField0_ & 0x00000001) != 0)) {
          status_ = new java.util.ArrayList<com.google.rpc.Status>(status_);
          bitField0_ |= 0x00000001;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilderV3<
          com.google.rpc.Status, com.google.rpc.Status.Builder, com.google.rpc.StatusOrBuilder> statusBuilder_;

      /**
       * <pre>
       * The status for the operation to delete a single
       * [Photo][google.streetview.publish.v1.Photo] in the batch request.
       * </pre>
       *
       * <code>repeated .google.rpc.Status status = 1;</code>
       */
      public java.util.List<com.google.rpc.Status> getStatusList() {
        if (statusBuilder_ == null) {
          return java.util.Collections.unmodifiableList(status_);
        } else {
          return statusBuilder_.getMessageList();
        }
      }
      /**
       * <pre>
       * The status for the operation to delete a single
       * [Photo][google.streetview.publish.v1.Photo] in the batch request.
       * </pre>
       *
       * <code>repeated .google.rpc.Status status = 1;</code>
       */
      public int getStatusCount() {
        if (statusBuilder_ == null) {
          return status_.size();
        } else {
          return statusBuilder_.getCount();
        }
      }
      /**
       * <pre>
       * The status for the operation to delete a single
       * [Photo][google.streetview.publish.v1.Photo] in the batch request.
       * </pre>
       *
       * <code>repeated .google.rpc.Status status = 1;</code>
       */
      public com.google.rpc.Status getStatus(int index) {
        if (statusBuilder_ == null) {
          return status_.get(index);
        } else {
          return statusBuilder_.getMessage(index);
        }
      }
      /**
       * <pre>
       * The status for the operation to delete a single
       * [Photo][google.streetview.publish.v1.Photo] in the batch request.
       * </pre>
       *
       * <code>repeated .google.rpc.Status status = 1;</code>
       */
      public Builder setStatus(
          int index, com.google.rpc.Status value) {
        if (statusBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureStatusIsMutable();
          status_.set(index, value);
          onChanged();
        } else {
          statusBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <pre>
       * The status for the operation to delete a single
       * [Photo][google.streetview.publish.v1.Photo] in the batch request.
       * </pre>
       *
       * <code>repeated .google.rpc.Status status = 1;</code>
       */
      public Builder setStatus(
          int index, com.google.rpc.Status.Builder builderForValue) {
        if (statusBuilder_ == null) {
          ensureStatusIsMutable();
          status_.set(index, builderForValue.build());
          onChanged();
        } else {
          statusBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       * The status for the operation to delete a single
       * [Photo][google.streetview.publish.v1.Photo] in the batch request.
       * </pre>
       *
       * <code>repeated .google.rpc.Status status = 1;</code>
       */
      public Builder addStatus(com.google.rpc.Status value) {
        if (statusBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureStatusIsMutable();
          status_.add(value);
          onChanged();
        } else {
          statusBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <pre>
       * The status for the operation to delete a single
       * [Photo][google.streetview.publish.v1.Photo] in the batch request.
       * </pre>
       *
       * <code>repeated .google.rpc.Status status = 1;</code>
       */
      public Builder addStatus(
          int index, com.google.rpc.Status value) {
        if (statusBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureStatusIsMutable();
          status_.add(index, value);
          onChanged();
        } else {
          statusBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <pre>
       * The status for the operation to delete a single
       * [Photo][google.streetview.publish.v1.Photo] in the batch request.
       * </pre>
       *
       * <code>repeated .google.rpc.Status status = 1;</code>
       */
      public Builder addStatus(
          com.google.rpc.Status.Builder builderForValue) {
        if (statusBuilder_ == null) {
          ensureStatusIsMutable();
          status_.add(builderForValue.build());
          onChanged();
        } else {
          statusBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       * The status for the operation to delete a single
       * [Photo][google.streetview.publish.v1.Photo] in the batch request.
       * </pre>
       *
       * <code>repeated .google.rpc.Status status = 1;</code>
       */
      public Builder addStatus(
          int index, com.google.rpc.Status.Builder builderForValue) {
        if (statusBuilder_ == null) {
          ensureStatusIsMutable();
          status_.add(index, builderForValue.build());
          onChanged();
        } else {
          statusBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       * The status for the operation to delete a single
       * [Photo][google.streetview.publish.v1.Photo] in the batch request.
       * </pre>
       *
       * <code>repeated .google.rpc.Status status = 1;</code>
       */
      public Builder addAllStatus(
          java.lang.Iterable<? extends com.google.rpc.Status> values) {
        if (statusBuilder_ == null) {
          ensureStatusIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
              values, status_);
          onChanged();
        } else {
          statusBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <pre>
       * The status for the operation to delete a single
       * [Photo][google.streetview.publish.v1.Photo] in the batch request.
       * </pre>
       *
       * <code>repeated .google.rpc.Status status = 1;</code>
       */
      public Builder clearStatus() {
        if (statusBuilder_ == null) {
          status_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000001);
          onChanged();
        } else {
          statusBuilder_.clear();
        }
        return this;
      }
      /**
       * <pre>
       * The status for the operation to delete a single
       * [Photo][google.streetview.publish.v1.Photo] in the batch request.
       * </pre>
       *
       * <code>repeated .google.rpc.Status status = 1;</code>
       */
      public Builder removeStatus(int index) {
        if (statusBuilder_ == null) {
          ensureStatusIsMutable();
          status_.remove(index);
          onChanged();
        } else {
          statusBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <pre>
       * The status for the operation to delete a single
       * [Photo][google.streetview.publish.v1.Photo] in the batch request.
       * </pre>
       *
       * <code>repeated .google.rpc.Status status = 1;</code>
       */
      public com.google.rpc.Status.Builder getStatusBuilder(
          int index) {
        return getStatusFieldBuilder().getBuilder(index);
      }
      /**
       * <pre>
       * The status for the operation to delete a single
       * [Photo][google.streetview.publish.v1.Photo] in the batch request.
       * </pre>
       *
       * <code>repeated .google.rpc.Status status = 1;</code>
       */
      public com.google.rpc.StatusOrBuilder getStatusOrBuilder(
          int index) {
        if (statusBuilder_ == null) {
          return status_.get(index);  } else {
          return statusBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <pre>
       * The status for the operation to delete a single
       * [Photo][google.streetview.publish.v1.Photo] in the batch request.
       * </pre>
       *
       * <code>repeated .google.rpc.Status status = 1;</code>
       */
      public java.util.List<? extends com.google.rpc.StatusOrBuilder> 
           getStatusOrBuilderList() {
        if (statusBuilder_ != null) {
          return statusBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(status_);
        }
      }
      /**
       * <pre>
       * The status for the operation to delete a single
       * [Photo][google.streetview.publish.v1.Photo] in the batch request.
       * </pre>
       *
       * <code>repeated .google.rpc.Status status = 1;</code>
       */
      public com.google.rpc.Status.Builder addStatusBuilder() {
        return getStatusFieldBuilder().addBuilder(
            com.google.rpc.Status.getDefaultInstance());
      }
      /**
       * <pre>
       * The status for the operation to delete a single
       * [Photo][google.streetview.publish.v1.Photo] in the batch request.
       * </pre>
       *
       * <code>repeated .google.rpc.Status status = 1;</code>
       */
      public com.google.rpc.Status.Builder addStatusBuilder(
          int index) {
        return getStatusFieldBuilder().addBuilder(
            index, com.google.rpc.Status.getDefaultInstance());
      }
      /**
       * <pre>
       * The status for the operation to delete a single
       * [Photo][google.streetview.publish.v1.Photo] in the batch request.
       * </pre>
       *
       * <code>repeated .google.rpc.Status status = 1;</code>
       */
      public java.util.List<com.google.rpc.Status.Builder> 
           getStatusBuilderList() {
        return getStatusFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilderV3<
          com.google.rpc.Status, com.google.rpc.Status.Builder, com.google.rpc.StatusOrBuilder> 
          getStatusFieldBuilder() {
        if (statusBuilder_ == null) {
          statusBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<
              com.google.rpc.Status, com.google.rpc.Status.Builder, com.google.rpc.StatusOrBuilder>(
                  status_,
                  ((bitField0_ & 0x00000001) != 0),
                  getParentForChildren(),
                  isClean());
          status_ = null;
        }
        return statusBuilder_;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:google.streetview.publish.v1.BatchDeletePhotosResponse)
    }

    // @@protoc_insertion_point(class_scope:google.streetview.publish.v1.BatchDeletePhotosResponse)
    private static final com.google.geo.ugc.streetview.publish.v1.StreetViewPublishRpcMessages.BatchDeletePhotosResponse DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new com.google.geo.ugc.streetview.publish.v1.StreetViewPublishRpcMessages.BatchDeletePhotosResponse();
    }

    public static com.google.geo.ugc.streetview.publish.v1.StreetViewPublishRpcMessages.BatchDeletePhotosResponse getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<BatchDeletePhotosResponse>
        PARSER = new com.google.protobuf.AbstractParser<BatchDeletePhotosResponse>() {
      @java.lang.Override
      public BatchDeletePhotosResponse parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        Builder builder = newBuilder();
        try {
          builder.mergeFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.setUnfinishedMessage(builder.buildPartial());
        } catch (com.google.protobuf.UninitializedMessageException e) {
          throw e.asInvalidProtocolBufferException().setUnfinishedMessage(builder.buildPartial());
        } catch (java.io.IOException e) {
          throw new com.google.protobuf.InvalidProtocolBufferException(e)
              .setUnfinishedMessage(builder.buildPartial());
        }
        return builder.buildPartial();
      }
    };

    public static com.google.protobuf.Parser<BatchDeletePhotosResponse> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<BatchDeletePhotosResponse> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.geo.ugc.streetview.publish.v1.StreetViewPublishRpcMessages.BatchDeletePhotosResponse getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface ListPhotoSequencesRequestOrBuilder extends
      // @@protoc_insertion_point(interface_extends:google.streetview.publish.v1.ListPhotoSequencesRequest)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <pre>
     * Optional. The maximum number of photo sequences to return.
     * `pageSize` must be non-negative. If `pageSize` is zero or is not
     * provided, the default page size of 100 is used.
     * The number of photo sequences returned in the response may be less than
     * `pageSize` if the number of matches is less than `pageSize`.
     * This is currently unimplemented but is in process.
     * </pre>
     *
     * <code>int32 page_size = 1 [(.google.api.field_behavior) = OPTIONAL];</code>
     * @return The pageSize.
     */
    int getPageSize();

    /**
     * <pre>
     * Optional. The
     * [nextPageToken][google.streetview.publish.v1.ListPhotosResponse.next_page_token]
     * value returned from a previous
     * [ListPhotoSequences][google.streetview.publish.v1.StreetViewPublishService.ListPhotoSequences]
     * request, if any.
     * </pre>
     *
     * <code>string page_token = 2 [(.google.api.field_behavior) = OPTIONAL];</code>
     * @return The pageToken.
     */
    java.lang.String getPageToken();
    /**
     * <pre>
     * Optional. The
     * [nextPageToken][google.streetview.publish.v1.ListPhotosResponse.next_page_token]
     * value returned from a previous
     * [ListPhotoSequences][google.streetview.publish.v1.StreetViewPublishService.ListPhotoSequences]
     * request, if any.
     * </pre>
     *
     * <code>string page_token = 2 [(.google.api.field_behavior) = OPTIONAL];</code>
     * @return The bytes for pageToken.
     */
    com.google.protobuf.ByteString
        getPageTokenBytes();

    /**
     * <pre>
     * Optional. The filter expression. For example: `imagery_type=SPHERICAL`.
     * The filters supported are: `imagery_type`, `processing_state`,
     * `min_latitude`, `max_latitude`, `min_longitude`, `max_longitude`, and
     * `filename_query`. See https://google.aip.dev/160 for more information.
     * Filename queries should sent as a Phrase in order to support multple words
     * and special characters by adding escaped quotes. Ex:
     * filename_query="example of a phrase.mp4"
     * </pre>
     *
     * <code>string filter = 4 [(.google.api.field_behavior) = OPTIONAL];</code>
     * @return The filter.
     */
    java.lang.String getFilter();
    /**
     * <pre>
     * Optional. The filter expression. For example: `imagery_type=SPHERICAL`.
     * The filters supported are: `imagery_type`, `processing_state`,
     * `min_latitude`, `max_latitude`, `min_longitude`, `max_longitude`, and
     * `filename_query`. See https://google.aip.dev/160 for more information.
     * Filename queries should sent as a Phrase in order to support multple words
     * and special characters by adding escaped quotes. Ex:
     * filename_query="example of a phrase.mp4"
     * </pre>
     *
     * <code>string filter = 4 [(.google.api.field_behavior) = OPTIONAL];</code>
     * @return The bytes for filter.
     */
    com.google.protobuf.ByteString
        getFilterBytes();
  }
  /**
   * <pre>
   * Request to list all photo sequences that belong to the user sending the
   * request.
   * Parameters:
   * * `pageSize` determines the maximum number of photo sequences to return.
   * * `pageToken` is the next page token value returned from a previous
   * [ListPhotoSequences][google.streetview.publish.v1.StreetViewPublishService.ListPhotoSequences]
   *   request, if any.
   * </pre>
   *
   * Protobuf type {@code google.streetview.publish.v1.ListPhotoSequencesRequest}
   */
  public static final class ListPhotoSequencesRequest extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:google.streetview.publish.v1.ListPhotoSequencesRequest)
      ListPhotoSequencesRequestOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use ListPhotoSequencesRequest.newBuilder() to construct.
    private ListPhotoSequencesRequest(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private ListPhotoSequencesRequest() {
      pageToken_ = "";
      filter_ = "";
    }

    @java.lang.Override
    @SuppressWarnings({"unused"})
    protected java.lang.Object newInstance(
        UnusedPrivateParameter unused) {
      return new ListPhotoSequencesRequest();
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.google.geo.ugc.streetview.publish.v1.StreetViewPublishRpcMessages.internal_static_google_streetview_publish_v1_ListPhotoSequencesRequest_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.google.geo.ugc.streetview.publish.v1.StreetViewPublishRpcMessages.internal_static_google_streetview_publish_v1_ListPhotoSequencesRequest_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.google.geo.ugc.streetview.publish.v1.StreetViewPublishRpcMessages.ListPhotoSequencesRequest.class, com.google.geo.ugc.streetview.publish.v1.StreetViewPublishRpcMessages.ListPhotoSequencesRequest.Builder.class);
    }

    public static final int PAGE_SIZE_FIELD_NUMBER = 1;
    private int pageSize_ = 0;
    /**
     * <pre>
     * Optional. The maximum number of photo sequences to return.
     * `pageSize` must be non-negative. If `pageSize` is zero or is not
     * provided, the default page size of 100 is used.
     * The number of photo sequences returned in the response may be less than
     * `pageSize` if the number of matches is less than `pageSize`.
     * This is currently unimplemented but is in process.
     * </pre>
     *
     * <code>int32 page_size = 1 [(.google.api.field_behavior) = OPTIONAL];</code>
     * @return The pageSize.
     */
    @java.lang.Override
    public int getPageSize() {
      return pageSize_;
    }

    public static final int PAGE_TOKEN_FIELD_NUMBER = 2;
    @SuppressWarnings("serial")
    private volatile java.lang.Object pageToken_ = "";
    /**
     * <pre>
     * Optional. The
     * [nextPageToken][google.streetview.publish.v1.ListPhotosResponse.next_page_token]
     * value returned from a previous
     * [ListPhotoSequences][google.streetview.publish.v1.StreetViewPublishService.ListPhotoSequences]
     * request, if any.
     * </pre>
     *
     * <code>string page_token = 2 [(.google.api.field_behavior) = OPTIONAL];</code>
     * @return The pageToken.
     */
    @java.lang.Override
    public java.lang.String getPageToken() {
      java.lang.Object ref = pageToken_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        pageToken_ = s;
        return s;
      }
    }
    /**
     * <pre>
     * Optional. The
     * [nextPageToken][google.streetview.publish.v1.ListPhotosResponse.next_page_token]
     * value returned from a previous
     * [ListPhotoSequences][google.streetview.publish.v1.StreetViewPublishService.ListPhotoSequences]
     * request, if any.
     * </pre>
     *
     * <code>string page_token = 2 [(.google.api.field_behavior) = OPTIONAL];</code>
     * @return The bytes for pageToken.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString
        getPageTokenBytes() {
      java.lang.Object ref = pageToken_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        pageToken_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int FILTER_FIELD_NUMBER = 4;
    @SuppressWarnings("serial")
    private volatile java.lang.Object filter_ = "";
    /**
     * <pre>
     * Optional. The filter expression. For example: `imagery_type=SPHERICAL`.
     * The filters supported are: `imagery_type`, `processing_state`,
     * `min_latitude`, `max_latitude`, `min_longitude`, `max_longitude`, and
     * `filename_query`. See https://google.aip.dev/160 for more information.
     * Filename queries should sent as a Phrase in order to support multple words
     * and special characters by adding escaped quotes. Ex:
     * filename_query="example of a phrase.mp4"
     * </pre>
     *
     * <code>string filter = 4 [(.google.api.field_behavior) = OPTIONAL];</code>
     * @return The filter.
     */
    @java.lang.Override
    public java.lang.String getFilter() {
      java.lang.Object ref = filter_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        filter_ = s;
        return s;
      }
    }
    /**
     * <pre>
     * Optional. The filter expression. For example: `imagery_type=SPHERICAL`.
     * The filters supported are: `imagery_type`, `processing_state`,
     * `min_latitude`, `max_latitude`, `min_longitude`, `max_longitude`, and
     * `filename_query`. See https://google.aip.dev/160 for more information.
     * Filename queries should sent as a Phrase in order to support multple words
     * and special characters by adding escaped quotes. Ex:
     * filename_query="example of a phrase.mp4"
     * </pre>
     *
     * <code>string filter = 4 [(.google.api.field_behavior) = OPTIONAL];</code>
     * @return The bytes for filter.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString
        getFilterBytes() {
      java.lang.Object ref = filter_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        filter_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (pageSize_ != 0) {
        output.writeInt32(1, pageSize_);
      }
      if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(pageToken_)) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 2, pageToken_);
      }
      if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(filter_)) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 4, filter_);
      }
      getUnknownFields().writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (pageSize_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(1, pageSize_);
      }
      if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(pageToken_)) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(2, pageToken_);
      }
      if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(filter_)) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(4, filter_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof com.google.geo.ugc.streetview.publish.v1.StreetViewPublishRpcMessages.ListPhotoSequencesRequest)) {
        return super.equals(obj);
      }
      com.google.geo.ugc.streetview.publish.v1.StreetViewPublishRpcMessages.ListPhotoSequencesRequest other = (com.google.geo.ugc.streetview.publish.v1.StreetViewPublishRpcMessages.ListPhotoSequencesRequest) obj;

      if (getPageSize()
          != other.getPageSize()) return false;
      if (!getPageToken()
          .equals(other.getPageToken())) return false;
      if (!getFilter()
          .equals(other.getFilter())) return false;
      if (!getUnknownFields().equals(other.getUnknownFields())) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      hash = (37 * hash) + PAGE_SIZE_FIELD_NUMBER;
      hash = (53 * hash) + getPageSize();
      hash = (37 * hash) + PAGE_TOKEN_FIELD_NUMBER;
      hash = (53 * hash) + getPageToken().hashCode();
      hash = (37 * hash) + FILTER_FIELD_NUMBER;
      hash = (53 * hash) + getFilter().hashCode();
      hash = (29 * hash) + getUnknownFields().hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static com.google.geo.ugc.streetview.publish.v1.StreetViewPublishRpcMessages.ListPhotoSequencesRequest parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.google.geo.ugc.streetview.publish.v1.StreetViewPublishRpcMessages.ListPhotoSequencesRequest parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.google.geo.ugc.streetview.publish.v1.StreetViewPublishRpcMessages.ListPhotoSequencesRequest parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.google.geo.ugc.streetview.publish.v1.StreetViewPublishRpcMessages.ListPhotoSequencesRequest parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.google.geo.ugc.streetview.publish.v1.StreetViewPublishRpcMessages.ListPhotoSequencesRequest parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.google.geo.ugc.streetview.publish.v1.StreetViewPublishRpcMessages.ListPhotoSequencesRequest parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.google.geo.ugc.streetview.publish.v1.StreetViewPublishRpcMessages.ListPhotoSequencesRequest parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static com.google.geo.ugc.streetview.publish.v1.StreetViewPublishRpcMessages.ListPhotoSequencesRequest parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static com.google.geo.ugc.streetview.publish.v1.StreetViewPublishRpcMessages.ListPhotoSequencesRequest parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static com.google.geo.ugc.streetview.publish.v1.StreetViewPublishRpcMessages.ListPhotoSequencesRequest parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static com.google.geo.ugc.streetview.publish.v1.StreetViewPublishRpcMessages.ListPhotoSequencesRequest parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static com.google.geo.ugc.streetview.publish.v1.StreetViewPublishRpcMessages.ListPhotoSequencesRequest parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(com.google.geo.ugc.streetview.publish.v1.StreetViewPublishRpcMessages.ListPhotoSequencesRequest prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * <pre>
     * Request to list all photo sequences that belong to the user sending the
     * request.
     * Parameters:
     * * `pageSize` determines the maximum number of photo sequences to return.
     * * `pageToken` is the next page token value returned from a previous
     * [ListPhotoSequences][google.streetview.publish.v1.StreetViewPublishService.ListPhotoSequences]
     *   request, if any.
     * </pre>
     *
     * Protobuf type {@code google.streetview.publish.v1.ListPhotoSequencesRequest}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:google.streetview.publish.v1.ListPhotoSequencesRequest)
        com.google.geo.ugc.streetview.publish.v1.StreetViewPublishRpcMessages.ListPhotoSequencesRequestOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return com.google.geo.ugc.streetview.publish.v1.StreetViewPublishRpcMessages.internal_static_google_streetview_publish_v1_ListPhotoSequencesRequest_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return com.google.geo.ugc.streetview.publish.v1.StreetViewPublishRpcMessages.internal_static_google_streetview_publish_v1_ListPhotoSequencesRequest_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                com.google.geo.ugc.streetview.publish.v1.StreetViewPublishRpcMessages.ListPhotoSequencesRequest.class, com.google.geo.ugc.streetview.publish.v1.StreetViewPublishRpcMessages.ListPhotoSequencesRequest.Builder.class);
      }

      // Construct using com.google.geo.ugc.streetview.publish.v1.StreetViewPublishRpcMessages.ListPhotoSequencesRequest.newBuilder()
      private Builder() {

      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);

      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        bitField0_ = 0;
        pageSize_ = 0;
        pageToken_ = "";
        filter_ = "";
        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.google.geo.ugc.streetview.publish.v1.StreetViewPublishRpcMessages.internal_static_google_streetview_publish_v1_ListPhotoSequencesRequest_descriptor;
      }

      @java.lang.Override
      public com.google.geo.ugc.streetview.publish.v1.StreetViewPublishRpcMessages.ListPhotoSequencesRequest getDefaultInstanceForType() {
        return com.google.geo.ugc.streetview.publish.v1.StreetViewPublishRpcMessages.ListPhotoSequencesRequest.getDefaultInstance();
      }

      @java.lang.Override
      public com.google.geo.ugc.streetview.publish.v1.StreetViewPublishRpcMessages.ListPhotoSequencesRequest build() {
        com.google.geo.ugc.streetview.publish.v1.StreetViewPublishRpcMessages.ListPhotoSequencesRequest result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public com.google.geo.ugc.streetview.publish.v1.StreetViewPublishRpcMessages.ListPhotoSequencesRequest buildPartial() {
        com.google.geo.ugc.streetview.publish.v1.StreetViewPublishRpcMessages.ListPhotoSequencesRequest result = new com.google.geo.ugc.streetview.publish.v1.StreetViewPublishRpcMessages.ListPhotoSequencesRequest(this);
        if (bitField0_ != 0) { buildPartial0(result); }
        onBuilt();
        return result;
      }

      private void buildPartial0(com.google.geo.ugc.streetview.publish.v1.StreetViewPublishRpcMessages.ListPhotoSequencesRequest result) {
        int from_bitField0_ = bitField0_;
        if (((from_bitField0_ & 0x00000001) != 0)) {
          result.pageSize_ = pageSize_;
        }
        if (((from_bitField0_ & 0x00000002) != 0)) {
          result.pageToken_ = pageToken_;
        }
        if (((from_bitField0_ & 0x00000004) != 0)) {
          result.filter_ = filter_;
        }
      }

      @java.lang.Override
      public Builder clone() {
        return super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.google.geo.ugc.streetview.publish.v1.StreetViewPublishRpcMessages.ListPhotoSequencesRequest) {
          return mergeFrom((com.google.geo.ugc.streetview.publish.v1.StreetViewPublishRpcMessages.ListPhotoSequencesRequest)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(com.google.geo.ugc.streetview.publish.v1.StreetViewPublishRpcMessages.ListPhotoSequencesRequest other) {
        if (other == com.google.geo.ugc.streetview.publish.v1.StreetViewPublishRpcMessages.ListPhotoSequencesRequest.getDefaultInstance()) return this;
        if (other.getPageSize() != 0) {
          setPageSize(other.getPageSize());
        }
        if (!other.getPageToken().isEmpty()) {
          pageToken_ = other.pageToken_;
          bitField0_ |= 0x00000002;
          onChanged();
        }
        if (!other.getFilter().isEmpty()) {
          filter_ = other.filter_;
          bitField0_ |= 0x00000004;
          onChanged();
        }
        this.mergeUnknownFields(other.getUnknownFields());
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        if (extensionRegistry == null) {
          throw new java.lang.NullPointerException();
        }
        try {
          boolean done = false;
          while (!done) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                done = true;
                break;
              case 8: {
                pageSize_ = input.readInt32();
                bitField0_ |= 0x00000001;
                break;
              } // case 8
              case 18: {
                pageToken_ = input.readStringRequireUtf8();
                bitField0_ |= 0x00000002;
                break;
              } // case 18
              case 34: {
                filter_ = input.readStringRequireUtf8();
                bitField0_ |= 0x00000004;
                break;
              } // case 34
              default: {
                if (!super.parseUnknownField(input, extensionRegistry, tag)) {
                  done = true; // was an endgroup tag
                }
                break;
              } // default:
            } // switch (tag)
          } // while (!done)
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.unwrapIOException();
        } finally {
          onChanged();
        } // finally
        return this;
      }
      private int bitField0_;

      private int pageSize_ ;
      /**
       * <pre>
       * Optional. The maximum number of photo sequences to return.
       * `pageSize` must be non-negative. If `pageSize` is zero or is not
       * provided, the default page size of 100 is used.
       * The number of photo sequences returned in the response may be less than
       * `pageSize` if the number of matches is less than `pageSize`.
       * This is currently unimplemented but is in process.
       * </pre>
       *
       * <code>int32 page_size = 1 [(.google.api.field_behavior) = OPTIONAL];</code>
       * @return The pageSize.
       */
      @java.lang.Override
      public int getPageSize() {
        return pageSize_;
      }
      /**
       * <pre>
       * Optional. The maximum number of photo sequences to return.
       * `pageSize` must be non-negative. If `pageSize` is zero or is not
       * provided, the default page size of 100 is used.
       * The number of photo sequences returned in the response may be less than
       * `pageSize` if the number of matches is less than `pageSize`.
       * This is currently unimplemented but is in process.
       * </pre>
       *
       * <code>int32 page_size = 1 [(.google.api.field_behavior) = OPTIONAL];</code>
       * @param value The pageSize to set.
       * @return This builder for chaining.
       */
      public Builder setPageSize(int value) {
        
        pageSize_ = value;
        bitField0_ |= 0x00000001;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Optional. The maximum number of photo sequences to return.
       * `pageSize` must be non-negative. If `pageSize` is zero or is not
       * provided, the default page size of 100 is used.
       * The number of photo sequences returned in the response may be less than
       * `pageSize` if the number of matches is less than `pageSize`.
       * This is currently unimplemented but is in process.
       * </pre>
       *
       * <code>int32 page_size = 1 [(.google.api.field_behavior) = OPTIONAL];</code>
       * @return This builder for chaining.
       */
      public Builder clearPageSize() {
        bitField0_ = (bitField0_ & ~0x00000001);
        pageSize_ = 0;
        onChanged();
        return this;
      }

      private java.lang.Object pageToken_ = "";
      /**
       * <pre>
       * Optional. The
       * [nextPageToken][google.streetview.publish.v1.ListPhotosResponse.next_page_token]
       * value returned from a previous
       * [ListPhotoSequences][google.streetview.publish.v1.StreetViewPublishService.ListPhotoSequences]
       * request, if any.
       * </pre>
       *
       * <code>string page_token = 2 [(.google.api.field_behavior) = OPTIONAL];</code>
       * @return The pageToken.
       */
      public java.lang.String getPageToken() {
        java.lang.Object ref = pageToken_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          pageToken_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <pre>
       * Optional. The
       * [nextPageToken][google.streetview.publish.v1.ListPhotosResponse.next_page_token]
       * value returned from a previous
       * [ListPhotoSequences][google.streetview.publish.v1.StreetViewPublishService.ListPhotoSequences]
       * request, if any.
       * </pre>
       *
       * <code>string page_token = 2 [(.google.api.field_behavior) = OPTIONAL];</code>
       * @return The bytes for pageToken.
       */
      public com.google.protobuf.ByteString
          getPageTokenBytes() {
        java.lang.Object ref = pageToken_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          pageToken_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       * Optional. The
       * [nextPageToken][google.streetview.publish.v1.ListPhotosResponse.next_page_token]
       * value returned from a previous
       * [ListPhotoSequences][google.streetview.publish.v1.StreetViewPublishService.ListPhotoSequences]
       * request, if any.
       * </pre>
       *
       * <code>string page_token = 2 [(.google.api.field_behavior) = OPTIONAL];</code>
       * @param value The pageToken to set.
       * @return This builder for chaining.
       */
      public Builder setPageToken(
          java.lang.String value) {
        if (value == null) { throw new NullPointerException(); }
        pageToken_ = value;
        bitField0_ |= 0x00000002;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Optional. The
       * [nextPageToken][google.streetview.publish.v1.ListPhotosResponse.next_page_token]
       * value returned from a previous
       * [ListPhotoSequences][google.streetview.publish.v1.StreetViewPublishService.ListPhotoSequences]
       * request, if any.
       * </pre>
       *
       * <code>string page_token = 2 [(.google.api.field_behavior) = OPTIONAL];</code>
       * @return This builder for chaining.
       */
      public Builder clearPageToken() {
        pageToken_ = getDefaultInstance().getPageToken();
        bitField0_ = (bitField0_ & ~0x00000002);
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Optional. The
       * [nextPageToken][google.streetview.publish.v1.ListPhotosResponse.next_page_token]
       * value returned from a previous
       * [ListPhotoSequences][google.streetview.publish.v1.StreetViewPublishService.ListPhotoSequences]
       * request, if any.
       * </pre>
       *
       * <code>string page_token = 2 [(.google.api.field_behavior) = OPTIONAL];</code>
       * @param value The bytes for pageToken to set.
       * @return This builder for chaining.
       */
      public Builder setPageTokenBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) { throw new NullPointerException(); }
        checkByteStringIsUtf8(value);
        pageToken_ = value;
        bitField0_ |= 0x00000002;
        onChanged();
        return this;
      }

      private java.lang.Object filter_ = "";
      /**
       * <pre>
       * Optional. The filter expression. For example: `imagery_type=SPHERICAL`.
       * The filters supported are: `imagery_type`, `processing_state`,
       * `min_latitude`, `max_latitude`, `min_longitude`, `max_longitude`, and
       * `filename_query`. See https://google.aip.dev/160 for more information.
       * Filename queries should sent as a Phrase in order to support multple words
       * and special characters by adding escaped quotes. Ex:
       * filename_query="example of a phrase.mp4"
       * </pre>
       *
       * <code>string filter = 4 [(.google.api.field_behavior) = OPTIONAL];</code>
       * @return The filter.
       */
      public java.lang.String getFilter() {
        java.lang.Object ref = filter_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          filter_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <pre>
       * Optional. The filter expression. For example: `imagery_type=SPHERICAL`.
       * The filters supported are: `imagery_type`, `processing_state`,
       * `min_latitude`, `max_latitude`, `min_longitude`, `max_longitude`, and
       * `filename_query`. See https://google.aip.dev/160 for more information.
       * Filename queries should sent as a Phrase in order to support multple words
       * and special characters by adding escaped quotes. Ex:
       * filename_query="example of a phrase.mp4"
       * </pre>
       *
       * <code>string filter = 4 [(.google.api.field_behavior) = OPTIONAL];</code>
       * @return The bytes for filter.
       */
      public com.google.protobuf.ByteString
          getFilterBytes() {
        java.lang.Object ref = filter_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          filter_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       * Optional. The filter expression. For example: `imagery_type=SPHERICAL`.
       * The filters supported are: `imagery_type`, `processing_state`,
       * `min_latitude`, `max_latitude`, `min_longitude`, `max_longitude`, and
       * `filename_query`. See https://google.aip.dev/160 for more information.
       * Filename queries should sent as a Phrase in order to support multple words
       * and special characters by adding escaped quotes. Ex:
       * filename_query="example of a phrase.mp4"
       * </pre>
       *
       * <code>string filter = 4 [(.google.api.field_behavior) = OPTIONAL];</code>
       * @param value The filter to set.
       * @return This builder for chaining.
       */
      public Builder setFilter(
          java.lang.String value) {
        if (value == null) { throw new NullPointerException(); }
        filter_ = value;
        bitField0_ |= 0x00000004;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Optional. The filter expression. For example: `imagery_type=SPHERICAL`.
       * The filters supported are: `imagery_type`, `processing_state`,
       * `min_latitude`, `max_latitude`, `min_longitude`, `max_longitude`, and
       * `filename_query`. See https://google.aip.dev/160 for more information.
       * Filename queries should sent as a Phrase in order to support multple words
       * and special characters by adding escaped quotes. Ex:
       * filename_query="example of a phrase.mp4"
       * </pre>
       *
       * <code>string filter = 4 [(.google.api.field_behavior) = OPTIONAL];</code>
       * @return This builder for chaining.
       */
      public Builder clearFilter() {
        filter_ = getDefaultInstance().getFilter();
        bitField0_ = (bitField0_ & ~0x00000004);
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Optional. The filter expression. For example: `imagery_type=SPHERICAL`.
       * The filters supported are: `imagery_type`, `processing_state`,
       * `min_latitude`, `max_latitude`, `min_longitude`, `max_longitude`, and
       * `filename_query`. See https://google.aip.dev/160 for more information.
       * Filename queries should sent as a Phrase in order to support multple words
       * and special characters by adding escaped quotes. Ex:
       * filename_query="example of a phrase.mp4"
       * </pre>
       *
       * <code>string filter = 4 [(.google.api.field_behavior) = OPTIONAL];</code>
       * @param value The bytes for filter to set.
       * @return This builder for chaining.
       */
      public Builder setFilterBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) { throw new NullPointerException(); }
        checkByteStringIsUtf8(value);
        filter_ = value;
        bitField0_ |= 0x00000004;
        onChanged();
        return this;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:google.streetview.publish.v1.ListPhotoSequencesRequest)
    }

    // @@protoc_insertion_point(class_scope:google.streetview.publish.v1.ListPhotoSequencesRequest)
    private static final com.google.geo.ugc.streetview.publish.v1.StreetViewPublishRpcMessages.ListPhotoSequencesRequest DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new com.google.geo.ugc.streetview.publish.v1.StreetViewPublishRpcMessages.ListPhotoSequencesRequest();
    }

    public static com.google.geo.ugc.streetview.publish.v1.StreetViewPublishRpcMessages.ListPhotoSequencesRequest getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<ListPhotoSequencesRequest>
        PARSER = new com.google.protobuf.AbstractParser<ListPhotoSequencesRequest>() {
      @java.lang.Override
      public ListPhotoSequencesRequest parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        Builder builder = newBuilder();
        try {
          builder.mergeFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.setUnfinishedMessage(builder.buildPartial());
        } catch (com.google.protobuf.UninitializedMessageException e) {
          throw e.asInvalidProtocolBufferException().setUnfinishedMessage(builder.buildPartial());
        } catch (java.io.IOException e) {
          throw new com.google.protobuf.InvalidProtocolBufferException(e)
              .setUnfinishedMessage(builder.buildPartial());
        }
        return builder.buildPartial();
      }
    };

    public static com.google.protobuf.Parser<ListPhotoSequencesRequest> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<ListPhotoSequencesRequest> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.geo.ugc.streetview.publish.v1.StreetViewPublishRpcMessages.ListPhotoSequencesRequest getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface ListPhotoSequencesResponseOrBuilder extends
      // @@protoc_insertion_point(interface_extends:google.streetview.publish.v1.ListPhotoSequencesResponse)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <pre>
     * List of photo sequences via [Operation][google.longrunning.Operation]
     * interface.
     * The maximum number of items returned is based on the
     * [pageSize][google.streetview.publish.v1.ListPhotoSequencesRequest.page_size]
     * field in the request.
     * Each item in the list can have three possible states,
     * * `Operation.done` = false, if the processing of
     *   [PhotoSequence][google.streetview.publish.v1.PhotoSequence] is not
     *   finished yet.
     * * `Operation.done` = true and `Operation.error` is populated, if there was
     *   an error in processing.
     * * `Operation.done` = true and `Operation.response` contains a
     *   [PhotoSequence][google.streetview.publish.v1.PhotoSequence] message,
     *   In each sequence, only
     *   [Id][google.streetview.publish.v1.PhotoSequence.id] is populated.
     * </pre>
     *
     * <code>repeated .google.longrunning.Operation photo_sequences = 1;</code>
     */
    java.util.List<com.google.longrunning.Operation> 
        getPhotoSequencesList();
    /**
     * <pre>
     * List of photo sequences via [Operation][google.longrunning.Operation]
     * interface.
     * The maximum number of items returned is based on the
     * [pageSize][google.streetview.publish.v1.ListPhotoSequencesRequest.page_size]
     * field in the request.
     * Each item in the list can have three possible states,
     * * `Operation.done` = false, if the processing of
     *   [PhotoSequence][google.streetview.publish.v1.PhotoSequence] is not
     *   finished yet.
     * * `Operation.done` = true and `Operation.error` is populated, if there was
     *   an error in processing.
     * * `Operation.done` = true and `Operation.response` contains a
     *   [PhotoSequence][google.streetview.publish.v1.PhotoSequence] message,
     *   In each sequence, only
     *   [Id][google.streetview.publish.v1.PhotoSequence.id] is populated.
     * </pre>
     *
     * <code>repeated .google.longrunning.Operation photo_sequences = 1;</code>
     */
    com.google.longrunning.Operation getPhotoSequences(int index);
    /**
     * <pre>
     * List of photo sequences via [Operation][google.longrunning.Operation]
     * interface.
     * The maximum number of items returned is based on the
     * [pageSize][google.streetview.publish.v1.ListPhotoSequencesRequest.page_size]
     * field in the request.
     * Each item in the list can have three possible states,
     * * `Operation.done` = false, if the processing of
     *   [PhotoSequence][google.streetview.publish.v1.PhotoSequence] is not
     *   finished yet.
     * * `Operation.done` = true and `Operation.error` is populated, if there was
     *   an error in processing.
     * * `Operation.done` = true and `Operation.response` contains a
     *   [PhotoSequence][google.streetview.publish.v1.PhotoSequence] message,
     *   In each sequence, only
     *   [Id][google.streetview.publish.v1.PhotoSequence.id] is populated.
     * </pre>
     *
     * <code>repeated .google.longrunning.Operation photo_sequences = 1;</code>
     */
    int getPhotoSequencesCount();
    /**
     * <pre>
     * List of photo sequences via [Operation][google.longrunning.Operation]
     * interface.
     * The maximum number of items returned is based on the
     * [pageSize][google.streetview.publish.v1.ListPhotoSequencesRequest.page_size]
     * field in the request.
     * Each item in the list can have three possible states,
     * * `Operation.done` = false, if the processing of
     *   [PhotoSequence][google.streetview.publish.v1.PhotoSequence] is not
     *   finished yet.
     * * `Operation.done` = true and `Operation.error` is populated, if there was
     *   an error in processing.
     * * `Operation.done` = true and `Operation.response` contains a
     *   [PhotoSequence][google.streetview.publish.v1.PhotoSequence] message,
     *   In each sequence, only
     *   [Id][google.streetview.publish.v1.PhotoSequence.id] is populated.
     * </pre>
     *
     * <code>repeated .google.longrunning.Operation photo_sequences = 1;</code>
     */
    java.util.List<? extends com.google.longrunning.OperationOrBuilder> 
        getPhotoSequencesOrBuilderList();
    /**
     * <pre>
     * List of photo sequences via [Operation][google.longrunning.Operation]
     * interface.
     * The maximum number of items returned is based on the
     * [pageSize][google.streetview.publish.v1.ListPhotoSequencesRequest.page_size]
     * field in the request.
     * Each item in the list can have three possible states,
     * * `Operation.done` = false, if the processing of
     *   [PhotoSequence][google.streetview.publish.v1.PhotoSequence] is not
     *   finished yet.
     * * `Operation.done` = true and `Operation.error` is populated, if there was
     *   an error in processing.
     * * `Operation.done` = true and `Operation.response` contains a
     *   [PhotoSequence][google.streetview.publish.v1.PhotoSequence] message,
     *   In each sequence, only
     *   [Id][google.streetview.publish.v1.PhotoSequence.id] is populated.
     * </pre>
     *
     * <code>repeated .google.longrunning.Operation photo_sequences = 1;</code>
     */
    com.google.longrunning.OperationOrBuilder getPhotoSequencesOrBuilder(
        int index);

    /**
     * <pre>
     * Token to retrieve the next page of results, or empty if there are no more
     * results in the list.
     * </pre>
     *
     * <code>string next_page_token = 2;</code>
     * @return The nextPageToken.
     */
    java.lang.String getNextPageToken();
    /**
     * <pre>
     * Token to retrieve the next page of results, or empty if there are no more
     * results in the list.
     * </pre>
     *
     * <code>string next_page_token = 2;</code>
     * @return The bytes for nextPageToken.
     */
    com.google.protobuf.ByteString
        getNextPageTokenBytes();
  }
  /**
   * <pre>
   * Response to list all photo sequences that belong to a user.
   * </pre>
   *
   * Protobuf type {@code google.streetview.publish.v1.ListPhotoSequencesResponse}
   */
  public static final class ListPhotoSequencesResponse extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:google.streetview.publish.v1.ListPhotoSequencesResponse)
      ListPhotoSequencesResponseOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use ListPhotoSequencesResponse.newBuilder() to construct.
    private ListPhotoSequencesResponse(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private ListPhotoSequencesResponse() {
      photoSequences_ = java.util.Collections.emptyList();
      nextPageToken_ = "";
    }

    @java.lang.Override
    @SuppressWarnings({"unused"})
    protected java.lang.Object newInstance(
        UnusedPrivateParameter unused) {
      return new ListPhotoSequencesResponse();
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.google.geo.ugc.streetview.publish.v1.StreetViewPublishRpcMessages.internal_static_google_streetview_publish_v1_ListPhotoSequencesResponse_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.google.geo.ugc.streetview.publish.v1.StreetViewPublishRpcMessages.internal_static_google_streetview_publish_v1_ListPhotoSequencesResponse_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.google.geo.ugc.streetview.publish.v1.StreetViewPublishRpcMessages.ListPhotoSequencesResponse.class, com.google.geo.ugc.streetview.publish.v1.StreetViewPublishRpcMessages.ListPhotoSequencesResponse.Builder.class);
    }

    public static final int PHOTO_SEQUENCES_FIELD_NUMBER = 1;
    @SuppressWarnings("serial")
    private java.util.List<com.google.longrunning.Operation> photoSequences_;
    /**
     * <pre>
     * List of photo sequences via [Operation][google.longrunning.Operation]
     * interface.
     * The maximum number of items returned is based on the
     * [pageSize][google.streetview.publish.v1.ListPhotoSequencesRequest.page_size]
     * field in the request.
     * Each item in the list can have three possible states,
     * * `Operation.done` = false, if the processing of
     *   [PhotoSequence][google.streetview.publish.v1.PhotoSequence] is not
     *   finished yet.
     * * `Operation.done` = true and `Operation.error` is populated, if there was
     *   an error in processing.
     * * `Operation.done` = true and `Operation.response` contains a
     *   [PhotoSequence][google.streetview.publish.v1.PhotoSequence] message,
     *   In each sequence, only
     *   [Id][google.streetview.publish.v1.PhotoSequence.id] is populated.
     * </pre>
     *
     * <code>repeated .google.longrunning.Operation photo_sequences = 1;</code>
     */
    @java.lang.Override
    public java.util.List<com.google.longrunning.Operation> getPhotoSequencesList() {
      return photoSequences_;
    }
    /**
     * <pre>
     * List of photo sequences via [Operation][google.longrunning.Operation]
     * interface.
     * The maximum number of items returned is based on the
     * [pageSize][google.streetview.publish.v1.ListPhotoSequencesRequest.page_size]
     * field in the request.
     * Each item in the list can have three possible states,
     * * `Operation.done` = false, if the processing of
     *   [PhotoSequence][google.streetview.publish.v1.PhotoSequence] is not
     *   finished yet.
     * * `Operation.done` = true and `Operation.error` is populated, if there was
     *   an error in processing.
     * * `Operation.done` = true and `Operation.response` contains a
     *   [PhotoSequence][google.streetview.publish.v1.PhotoSequence] message,
     *   In each sequence, only
     *   [Id][google.streetview.publish.v1.PhotoSequence.id] is populated.
     * </pre>
     *
     * <code>repeated .google.longrunning.Operation photo_sequences = 1;</code>
     */
    @java.lang.Override
    public java.util.List<? extends com.google.longrunning.OperationOrBuilder> 
        getPhotoSequencesOrBuilderList() {
      return photoSequences_;
    }
    /**
     * <pre>
     * List of photo sequences via [Operation][google.longrunning.Operation]
     * interface.
     * The maximum number of items returned is based on the
     * [pageSize][google.streetview.publish.v1.ListPhotoSequencesRequest.page_size]
     * field in the request.
     * Each item in the list can have three possible states,
     * * `Operation.done` = false, if the processing of
     *   [PhotoSequence][google.streetview.publish.v1.PhotoSequence] is not
     *   finished yet.
     * * `Operation.done` = true and `Operation.error` is populated, if there was
     *   an error in processing.
     * * `Operation.done` = true and `Operation.response` contains a
     *   [PhotoSequence][google.streetview.publish.v1.PhotoSequence] message,
     *   In each sequence, only
     *   [Id][google.streetview.publish.v1.PhotoSequence.id] is populated.
     * </pre>
     *
     * <code>repeated .google.longrunning.Operation photo_sequences = 1;</code>
     */
    @java.lang.Override
    public int getPhotoSequencesCount() {
      return photoSequences_.size();
    }
    /**
     * <pre>
     * List of photo sequences via [Operation][google.longrunning.Operation]
     * interface.
     * The maximum number of items returned is based on the
     * [pageSize][google.streetview.publish.v1.ListPhotoSequencesRequest.page_size]
     * field in the request.
     * Each item in the list can have three possible states,
     * * `Operation.done` = false, if the processing of
     *   [PhotoSequence][google.streetview.publish.v1.PhotoSequence] is not
     *   finished yet.
     * * `Operation.done` = true and `Operation.error` is populated, if there was
     *   an error in processing.
     * * `Operation.done` = true and `Operation.response` contains a
     *   [PhotoSequence][google.streetview.publish.v1.PhotoSequence] message,
     *   In each sequence, only
     *   [Id][google.streetview.publish.v1.PhotoSequence.id] is populated.
     * </pre>
     *
     * <code>repeated .google.longrunning.Operation photo_sequences = 1;</code>
     */
    @java.lang.Override
    public com.google.longrunning.Operation getPhotoSequences(int index) {
      return photoSequences_.get(index);
    }
    /**
     * <pre>
     * List of photo sequences via [Operation][google.longrunning.Operation]
     * interface.
     * The maximum number of items returned is based on the
     * [pageSize][google.streetview.publish.v1.ListPhotoSequencesRequest.page_size]
     * field in the request.
     * Each item in the list can have three possible states,
     * * `Operation.done` = false, if the processing of
     *   [PhotoSequence][google.streetview.publish.v1.PhotoSequence] is not
     *   finished yet.
     * * `Operation.done` = true and `Operation.error` is populated, if there was
     *   an error in processing.
     * * `Operation.done` = true and `Operation.response` contains a
     *   [PhotoSequence][google.streetview.publish.v1.PhotoSequence] message,
     *   In each sequence, only
     *   [Id][google.streetview.publish.v1.PhotoSequence.id] is populated.
     * </pre>
     *
     * <code>repeated .google.longrunning.Operation photo_sequences = 1;</code>
     */
    @java.lang.Override
    public com.google.longrunning.OperationOrBuilder getPhotoSequencesOrBuilder(
        int index) {
      return photoSequences_.get(index);
    }

    public static final int NEXT_PAGE_TOKEN_FIELD_NUMBER = 2;
    @SuppressWarnings("serial")
    private volatile java.lang.Object nextPageToken_ = "";
    /**
     * <pre>
     * Token to retrieve the next page of results, or empty if there are no more
     * results in the list.
     * </pre>
     *
     * <code>string next_page_token = 2;</code>
     * @return The nextPageToken.
     */
    @java.lang.Override
    public java.lang.String getNextPageToken() {
      java.lang.Object ref = nextPageToken_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        nextPageToken_ = s;
        return s;
      }
    }
    /**
     * <pre>
     * Token to retrieve the next page of results, or empty if there are no more
     * results in the list.
     * </pre>
     *
     * <code>string next_page_token = 2;</code>
     * @return The bytes for nextPageToken.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString
        getNextPageTokenBytes() {
      java.lang.Object ref = nextPageToken_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        nextPageToken_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      for (int i = 0; i < photoSequences_.size(); i++) {
        output.writeMessage(1, photoSequences_.get(i));
      }
      if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(nextPageToken_)) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 2, nextPageToken_);
      }
      getUnknownFields().writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      for (int i = 0; i < photoSequences_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, photoSequences_.get(i));
      }
      if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(nextPageToken_)) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(2, nextPageToken_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof com.google.geo.ugc.streetview.publish.v1.StreetViewPublishRpcMessages.ListPhotoSequencesResponse)) {
        return super.equals(obj);
      }
      com.google.geo.ugc.streetview.publish.v1.StreetViewPublishRpcMessages.ListPhotoSequencesResponse other = (com.google.geo.ugc.streetview.publish.v1.StreetViewPublishRpcMessages.ListPhotoSequencesResponse) obj;

      if (!getPhotoSequencesList()
          .equals(other.getPhotoSequencesList())) return false;
      if (!getNextPageToken()
          .equals(other.getNextPageToken())) return false;
      if (!getUnknownFields().equals(other.getUnknownFields())) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      if (getPhotoSequencesCount() > 0) {
        hash = (37 * hash) + PHOTO_SEQUENCES_FIELD_NUMBER;
        hash = (53 * hash) + getPhotoSequencesList().hashCode();
      }
      hash = (37 * hash) + NEXT_PAGE_TOKEN_FIELD_NUMBER;
      hash = (53 * hash) + getNextPageToken().hashCode();
      hash = (29 * hash) + getUnknownFields().hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static com.google.geo.ugc.streetview.publish.v1.StreetViewPublishRpcMessages.ListPhotoSequencesResponse parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.google.geo.ugc.streetview.publish.v1.StreetViewPublishRpcMessages.ListPhotoSequencesResponse parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.google.geo.ugc.streetview.publish.v1.StreetViewPublishRpcMessages.ListPhotoSequencesResponse parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.google.geo.ugc.streetview.publish.v1.StreetViewPublishRpcMessages.ListPhotoSequencesResponse parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.google.geo.ugc.streetview.publish.v1.StreetViewPublishRpcMessages.ListPhotoSequencesResponse parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.google.geo.ugc.streetview.publish.v1.StreetViewPublishRpcMessages.ListPhotoSequencesResponse parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.google.geo.ugc.streetview.publish.v1.StreetViewPublishRpcMessages.ListPhotoSequencesResponse parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static com.google.geo.ugc.streetview.publish.v1.StreetViewPublishRpcMessages.ListPhotoSequencesResponse parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static com.google.geo.ugc.streetview.publish.v1.StreetViewPublishRpcMessages.ListPhotoSequencesResponse parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static com.google.geo.ugc.streetview.publish.v1.StreetViewPublishRpcMessages.ListPhotoSequencesResponse parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static com.google.geo.ugc.streetview.publish.v1.StreetViewPublishRpcMessages.ListPhotoSequencesResponse parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static com.google.geo.ugc.streetview.publish.v1.StreetViewPublishRpcMessages.ListPhotoSequencesResponse parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(com.google.geo.ugc.streetview.publish.v1.StreetViewPublishRpcMessages.ListPhotoSequencesResponse prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * <pre>
     * Response to list all photo sequences that belong to a user.
     * </pre>
     *
     * Protobuf type {@code google.streetview.publish.v1.ListPhotoSequencesResponse}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:google.streetview.publish.v1.ListPhotoSequencesResponse)
        com.google.geo.ugc.streetview.publish.v1.StreetViewPublishRpcMessages.ListPhotoSequencesResponseOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return com.google.geo.ugc.streetview.publish.v1.StreetViewPublishRpcMessages.internal_static_google_streetview_publish_v1_ListPhotoSequencesResponse_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return com.google.geo.ugc.streetview.publish.v1.StreetViewPublishRpcMessages.internal_static_google_streetview_publish_v1_ListPhotoSequencesResponse_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                com.google.geo.ugc.streetview.publish.v1.StreetViewPublishRpcMessages.ListPhotoSequencesResponse.class, com.google.geo.ugc.streetview.publish.v1.StreetViewPublishRpcMessages.ListPhotoSequencesResponse.Builder.class);
      }

      // Construct using com.google.geo.ugc.streetview.publish.v1.StreetViewPublishRpcMessages.ListPhotoSequencesResponse.newBuilder()
      private Builder() {

      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);

      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        bitField0_ = 0;
        if (photoSequencesBuilder_ == null) {
          photoSequences_ = java.util.Collections.emptyList();
        } else {
          photoSequences_ = null;
          photoSequencesBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000001);
        nextPageToken_ = "";
        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.google.geo.ugc.streetview.publish.v1.StreetViewPublishRpcMessages.internal_static_google_streetview_publish_v1_ListPhotoSequencesResponse_descriptor;
      }

      @java.lang.Override
      public com.google.geo.ugc.streetview.publish.v1.StreetViewPublishRpcMessages.ListPhotoSequencesResponse getDefaultInstanceForType() {
        return com.google.geo.ugc.streetview.publish.v1.StreetViewPublishRpcMessages.ListPhotoSequencesResponse.getDefaultInstance();
      }

      @java.lang.Override
      public com.google.geo.ugc.streetview.publish.v1.StreetViewPublishRpcMessages.ListPhotoSequencesResponse build() {
        com.google.geo.ugc.streetview.publish.v1.StreetViewPublishRpcMessages.ListPhotoSequencesResponse result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public com.google.geo.ugc.streetview.publish.v1.StreetViewPublishRpcMessages.ListPhotoSequencesResponse buildPartial() {
        com.google.geo.ugc.streetview.publish.v1.StreetViewPublishRpcMessages.ListPhotoSequencesResponse result = new com.google.geo.ugc.streetview.publish.v1.StreetViewPublishRpcMessages.ListPhotoSequencesResponse(this);
        buildPartialRepeatedFields(result);
        if (bitField0_ != 0) { buildPartial0(result); }
        onBuilt();
        return result;
      }

      private void buildPartialRepeatedFields(com.google.geo.ugc.streetview.publish.v1.StreetViewPublishRpcMessages.ListPhotoSequencesResponse result) {
        if (photoSequencesBuilder_ == null) {
          if (((bitField0_ & 0x00000001) != 0)) {
            photoSequences_ = java.util.Collections.unmodifiableList(photoSequences_);
            bitField0_ = (bitField0_ & ~0x00000001);
          }
          result.photoSequences_ = photoSequences_;
        } else {
          result.photoSequences_ = photoSequencesBuilder_.build();
        }
      }

      private void buildPartial0(com.google.geo.ugc.streetview.publish.v1.StreetViewPublishRpcMessages.ListPhotoSequencesResponse result) {
        int from_bitField0_ = bitField0_;
        if (((from_bitField0_ & 0x00000002) != 0)) {
          result.nextPageToken_ = nextPageToken_;
        }
      }

      @java.lang.Override
      public Builder clone() {
        return super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.google.geo.ugc.streetview.publish.v1.StreetViewPublishRpcMessages.ListPhotoSequencesResponse) {
          return mergeFrom((com.google.geo.ugc.streetview.publish.v1.StreetViewPublishRpcMessages.ListPhotoSequencesResponse)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(com.google.geo.ugc.streetview.publish.v1.StreetViewPublishRpcMessages.ListPhotoSequencesResponse other) {
        if (other == com.google.geo.ugc.streetview.publish.v1.StreetViewPublishRpcMessages.ListPhotoSequencesResponse.getDefaultInstance()) return this;
        if (photoSequencesBuilder_ == null) {
          if (!other.photoSequences_.isEmpty()) {
            if (photoSequences_.isEmpty()) {
              photoSequences_ = other.photoSequences_;
              bitField0_ = (bitField0_ & ~0x00000001);
            } else {
              ensurePhotoSequencesIsMutable();
              photoSequences_.addAll(other.photoSequences_);
            }
            onChanged();
          }
        } else {
          if (!other.photoSequences_.isEmpty()) {
            if (photoSequencesBuilder_.isEmpty()) {
              photoSequencesBuilder_.dispose();
              photoSequencesBuilder_ = null;
              photoSequences_ = other.photoSequences_;
              bitField0_ = (bitField0_ & ~0x00000001);
              photoSequencesBuilder_ = 
                com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?
                   getPhotoSequencesFieldBuilder() : null;
            } else {
              photoSequencesBuilder_.addAllMessages(other.photoSequences_);
            }
          }
        }
        if (!other.getNextPageToken().isEmpty()) {
          nextPageToken_ = other.nextPageToken_;
          bitField0_ |= 0x00000002;
          onChanged();
        }
        this.mergeUnknownFields(other.getUnknownFields());
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        if (extensionRegistry == null) {
          throw new java.lang.NullPointerException();
        }
        try {
          boolean done = false;
          while (!done) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                done = true;
                break;
              case 10: {
                com.google.longrunning.Operation m =
                    input.readMessage(
                        com.google.longrunning.Operation.parser(),
                        extensionRegistry);
                if (photoSequencesBuilder_ == null) {
                  ensurePhotoSequencesIsMutable();
                  photoSequences_.add(m);
                } else {
                  photoSequencesBuilder_.addMessage(m);
                }
                break;
              } // case 10
              case 18: {
                nextPageToken_ = input.readStringRequireUtf8();
                bitField0_ |= 0x00000002;
                break;
              } // case 18
              default: {
                if (!super.parseUnknownField(input, extensionRegistry, tag)) {
                  done = true; // was an endgroup tag
                }
                break;
              } // default:
            } // switch (tag)
          } // while (!done)
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.unwrapIOException();
        } finally {
          onChanged();
        } // finally
        return this;
      }
      private int bitField0_;

      private java.util.List<com.google.longrunning.Operation> photoSequences_ =
        java.util.Collections.emptyList();
      private void ensurePhotoSequencesIsMutable() {
        if (!((bitField0_ & 0x00000001) != 0)) {
          photoSequences_ = new java.util.ArrayList<com.google.longrunning.Operation>(photoSequences_);
          bitField0_ |= 0x00000001;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilderV3<
          com.google.longrunning.Operation, com.google.longrunning.Operation.Builder, com.google.longrunning.OperationOrBuilder> photoSequencesBuilder_;

      /**
       * <pre>
       * List of photo sequences via [Operation][google.longrunning.Operation]
       * interface.
       * The maximum number of items returned is based on the
       * [pageSize][google.streetview.publish.v1.ListPhotoSequencesRequest.page_size]
       * field in the request.
       * Each item in the list can have three possible states,
       * * `Operation.done` = false, if the processing of
       *   [PhotoSequence][google.streetview.publish.v1.PhotoSequence] is not
       *   finished yet.
       * * `Operation.done` = true and `Operation.error` is populated, if there was
       *   an error in processing.
       * * `Operation.done` = true and `Operation.response` contains a
       *   [PhotoSequence][google.streetview.publish.v1.PhotoSequence] message,
       *   In each sequence, only
       *   [Id][google.streetview.publish.v1.PhotoSequence.id] is populated.
       * </pre>
       *
       * <code>repeated .google.longrunning.Operation photo_sequences = 1;</code>
       */
      public java.util.List<com.google.longrunning.Operation> getPhotoSequencesList() {
        if (photoSequencesBuilder_ == null) {
          return java.util.Collections.unmodifiableList(photoSequences_);
        } else {
          return photoSequencesBuilder_.getMessageList();
        }
      }
      /**
       * <pre>
       * List of photo sequences via [Operation][google.longrunning.Operation]
       * interface.
       * The maximum number of items returned is based on the
       * [pageSize][google.streetview.publish.v1.ListPhotoSequencesRequest.page_size]
       * field in the request.
       * Each item in the list can have three possible states,
       * * `Operation.done` = false, if the processing of
       *   [PhotoSequence][google.streetview.publish.v1.PhotoSequence] is not
       *   finished yet.
       * * `Operation.done` = true and `Operation.error` is populated, if there was
       *   an error in processing.
       * * `Operation.done` = true and `Operation.response` contains a
       *   [PhotoSequence][google.streetview.publish.v1.PhotoSequence] message,
       *   In each sequence, only
       *   [Id][google.streetview.publish.v1.PhotoSequence.id] is populated.
       * </pre>
       *
       * <code>repeated .google.longrunning.Operation photo_sequences = 1;</code>
       */
      public int getPhotoSequencesCount() {
        if (photoSequencesBuilder_ == null) {
          return photoSequences_.size();
        } else {
          return photoSequencesBuilder_.getCount();
        }
      }
      /**
       * <pre>
       * List of photo sequences via [Operation][google.longrunning.Operation]
       * interface.
       * The maximum number of items returned is based on the
       * [pageSize][google.streetview.publish.v1.ListPhotoSequencesRequest.page_size]
       * field in the request.
       * Each item in the list can have three possible states,
       * * `Operation.done` = false, if the processing of
       *   [PhotoSequence][google.streetview.publish.v1.PhotoSequence] is not
       *   finished yet.
       * * `Operation.done` = true and `Operation.error` is populated, if there was
       *   an error in processing.
       * * `Operation.done` = true and `Operation.response` contains a
       *   [PhotoSequence][google.streetview.publish.v1.PhotoSequence] message,
       *   In each sequence, only
       *   [Id][google.streetview.publish.v1.PhotoSequence.id] is populated.
       * </pre>
       *
       * <code>repeated .google.longrunning.Operation photo_sequences = 1;</code>
       */
      public com.google.longrunning.Operation getPhotoSequences(int index) {
        if (photoSequencesBuilder_ == null) {
          return photoSequences_.get(index);
        } else {
          return photoSequencesBuilder_.getMessage(index);
        }
      }
      /**
       * <pre>
       * List of photo sequences via [Operation][google.longrunning.Operation]
       * interface.
       * The maximum number of items returned is based on the
       * [pageSize][google.streetview.publish.v1.ListPhotoSequencesRequest.page_size]
       * field in the request.
       * Each item in the list can have three possible states,
       * * `Operation.done` = false, if the processing of
       *   [PhotoSequence][google.streetview.publish.v1.PhotoSequence] is not
       *   finished yet.
       * * `Operation.done` = true and `Operation.error` is populated, if there was
       *   an error in processing.
       * * `Operation.done` = true and `Operation.response` contains a
       *   [PhotoSequence][google.streetview.publish.v1.PhotoSequence] message,
       *   In each sequence, only
       *   [Id][google.streetview.publish.v1.PhotoSequence.id] is populated.
       * </pre>
       *
       * <code>repeated .google.longrunning.Operation photo_sequences = 1;</code>
       */
      public Builder setPhotoSequences(
          int index, com.google.longrunning.Operation value) {
        if (photoSequencesBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensurePhotoSequencesIsMutable();
          photoSequences_.set(index, value);
          onChanged();
        } else {
          photoSequencesBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <pre>
       * List of photo sequences via [Operation][google.longrunning.Operation]
       * interface.
       * The maximum number of items returned is based on the
       * [pageSize][google.streetview.publish.v1.ListPhotoSequencesRequest.page_size]
       * field in the request.
       * Each item in the list can have three possible states,
       * * `Operation.done` = false, if the processing of
       *   [PhotoSequence][google.streetview.publish.v1.PhotoSequence] is not
       *   finished yet.
       * * `Operation.done` = true and `Operation.error` is populated, if there was
       *   an error in processing.
       * * `Operation.done` = true and `Operation.response` contains a
       *   [PhotoSequence][google.streetview.publish.v1.PhotoSequence] message,
       *   In each sequence, only
       *   [Id][google.streetview.publish.v1.PhotoSequence.id] is populated.
       * </pre>
       *
       * <code>repeated .google.longrunning.Operation photo_sequences = 1;</code>
       */
      public Builder setPhotoSequences(
          int index, com.google.longrunning.Operation.Builder builderForValue) {
        if (photoSequencesBuilder_ == null) {
          ensurePhotoSequencesIsMutable();
          photoSequences_.set(index, builderForValue.build());
          onChanged();
        } else {
          photoSequencesBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       * List of photo sequences via [Operation][google.longrunning.Operation]
       * interface.
       * The maximum number of items returned is based on the
       * [pageSize][google.streetview.publish.v1.ListPhotoSequencesRequest.page_size]
       * field in the request.
       * Each item in the list can have three possible states,
       * * `Operation.done` = false, if the processing of
       *   [PhotoSequence][google.streetview.publish.v1.PhotoSequence] is not
       *   finished yet.
       * * `Operation.done` = true and `Operation.error` is populated, if there was
       *   an error in processing.
       * * `Operation.done` = true and `Operation.response` contains a
       *   [PhotoSequence][google.streetview.publish.v1.PhotoSequence] message,
       *   In each sequence, only
       *   [Id][google.streetview.publish.v1.PhotoSequence.id] is populated.
       * </pre>
       *
       * <code>repeated .google.longrunning.Operation photo_sequences = 1;</code>
       */
      public Builder addPhotoSequences(com.google.longrunning.Operation value) {
        if (photoSequencesBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensurePhotoSequencesIsMutable();
          photoSequences_.add(value);
          onChanged();
        } else {
          photoSequencesBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <pre>
       * List of photo sequences via [Operation][google.longrunning.Operation]
       * interface.
       * The maximum number of items returned is based on the
       * [pageSize][google.streetview.publish.v1.ListPhotoSequencesRequest.page_size]
       * field in the request.
       * Each item in the list can have three possible states,
       * * `Operation.done` = false, if the processing of
       *   [PhotoSequence][google.streetview.publish.v1.PhotoSequence] is not
       *   finished yet.
       * * `Operation.done` = true and `Operation.error` is populated, if there was
       *   an error in processing.
       * * `Operation.done` = true and `Operation.response` contains a
       *   [PhotoSequence][google.streetview.publish.v1.PhotoSequence] message,
       *   In each sequence, only
       *   [Id][google.streetview.publish.v1.PhotoSequence.id] is populated.
       * </pre>
       *
       * <code>repeated .google.longrunning.Operation photo_sequences = 1;</code>
       */
      public Builder addPhotoSequences(
          int index, com.google.longrunning.Operation value) {
        if (photoSequencesBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensurePhotoSequencesIsMutable();
          photoSequences_.add(index, value);
          onChanged();
        } else {
          photoSequencesBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <pre>
       * List of photo sequences via [Operation][google.longrunning.Operation]
       * interface.
       * The maximum number of items returned is based on the
       * [pageSize][google.streetview.publish.v1.ListPhotoSequencesRequest.page_size]
       * field in the request.
       * Each item in the list can have three possible states,
       * * `Operation.done` = false, if the processing of
       *   [PhotoSequence][google.streetview.publish.v1.PhotoSequence] is not
       *   finished yet.
       * * `Operation.done` = true and `Operation.error` is populated, if there was
       *   an error in processing.
       * * `Operation.done` = true and `Operation.response` contains a
       *   [PhotoSequence][google.streetview.publish.v1.PhotoSequence] message,
       *   In each sequence, only
       *   [Id][google.streetview.publish.v1.PhotoSequence.id] is populated.
       * </pre>
       *
       * <code>repeated .google.longrunning.Operation photo_sequences = 1;</code>
       */
      public Builder addPhotoSequences(
          com.google.longrunning.Operation.Builder builderForValue) {
        if (photoSequencesBuilder_ == null) {
          ensurePhotoSequencesIsMutable();
          photoSequences_.add(builderForValue.build());
          onChanged();
        } else {
          photoSequencesBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       * List of photo sequences via [Operation][google.longrunning.Operation]
       * interface.
       * The maximum number of items returned is based on the
       * [pageSize][google.streetview.publish.v1.ListPhotoSequencesRequest.page_size]
       * field in the request.
       * Each item in the list can have three possible states,
       * * `Operation.done` = false, if the processing of
       *   [PhotoSequence][google.streetview.publish.v1.PhotoSequence] is not
       *   finished yet.
       * * `Operation.done` = true and `Operation.error` is populated, if there was
       *   an error in processing.
       * * `Operation.done` = true and `Operation.response` contains a
       *   [PhotoSequence][google.streetview.publish.v1.PhotoSequence] message,
       *   In each sequence, only
       *   [Id][google.streetview.publish.v1.PhotoSequence.id] is populated.
       * </pre>
       *
       * <code>repeated .google.longrunning.Operation photo_sequences = 1;</code>
       */
      public Builder addPhotoSequences(
          int index, com.google.longrunning.Operation.Builder builderForValue) {
        if (photoSequencesBuilder_ == null) {
          ensurePhotoSequencesIsMutable();
          photoSequences_.add(index, builderForValue.build());
          onChanged();
        } else {
          photoSequencesBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       * List of photo sequences via [Operation][google.longrunning.Operation]
       * interface.
       * The maximum number of items returned is based on the
       * [pageSize][google.streetview.publish.v1.ListPhotoSequencesRequest.page_size]
       * field in the request.
       * Each item in the list can have three possible states,
       * * `Operation.done` = false, if the processing of
       *   [PhotoSequence][google.streetview.publish.v1.PhotoSequence] is not
       *   finished yet.
       * * `Operation.done` = true and `Operation.error` is populated, if there was
       *   an error in processing.
       * * `Operation.done` = true and `Operation.response` contains a
       *   [PhotoSequence][google.streetview.publish.v1.PhotoSequence] message,
       *   In each sequence, only
       *   [Id][google.streetview.publish.v1.PhotoSequence.id] is populated.
       * </pre>
       *
       * <code>repeated .google.longrunning.Operation photo_sequences = 1;</code>
       */
      public Builder addAllPhotoSequences(
          java.lang.Iterable<? extends com.google.longrunning.Operation> values) {
        if (photoSequencesBuilder_ == null) {
          ensurePhotoSequencesIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
              values, photoSequences_);
          onChanged();
        } else {
          photoSequencesBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <pre>
       * List of photo sequences via [Operation][google.longrunning.Operation]
       * interface.
       * The maximum number of items returned is based on the
       * [pageSize][google.streetview.publish.v1.ListPhotoSequencesRequest.page_size]
       * field in the request.
       * Each item in the list can have three possible states,
       * * `Operation.done` = false, if the processing of
       *   [PhotoSequence][google.streetview.publish.v1.PhotoSequence] is not
       *   finished yet.
       * * `Operation.done` = true and `Operation.error` is populated, if there was
       *   an error in processing.
       * * `Operation.done` = true and `Operation.response` contains a
       *   [PhotoSequence][google.streetview.publish.v1.PhotoSequence] message,
       *   In each sequence, only
       *   [Id][google.streetview.publish.v1.PhotoSequence.id] is populated.
       * </pre>
       *
       * <code>repeated .google.longrunning.Operation photo_sequences = 1;</code>
       */
      public Builder clearPhotoSequences() {
        if (photoSequencesBuilder_ == null) {
          photoSequences_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000001);
          onChanged();
        } else {
          photoSequencesBuilder_.clear();
        }
        return this;
      }
      /**
       * <pre>
       * List of photo sequences via [Operation][google.longrunning.Operation]
       * interface.
       * The maximum number of items returned is based on the
       * [pageSize][google.streetview.publish.v1.ListPhotoSequencesRequest.page_size]
       * field in the request.
       * Each item in the list can have three possible states,
       * * `Operation.done` = false, if the processing of
       *   [PhotoSequence][google.streetview.publish.v1.PhotoSequence] is not
       *   finished yet.
       * * `Operation.done` = true and `Operation.error` is populated, if there was
       *   an error in processing.
       * * `Operation.done` = true and `Operation.response` contains a
       *   [PhotoSequence][google.streetview.publish.v1.PhotoSequence] message,
       *   In each sequence, only
       *   [Id][google.streetview.publish.v1.PhotoSequence.id] is populated.
       * </pre>
       *
       * <code>repeated .google.longrunning.Operation photo_sequences = 1;</code>
       */
      public Builder removePhotoSequences(int index) {
        if (photoSequencesBuilder_ == null) {
          ensurePhotoSequencesIsMutable();
          photoSequences_.remove(index);
          onChanged();
        } else {
          photoSequencesBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <pre>
       * List of photo sequences via [Operation][google.longrunning.Operation]
       * interface.
       * The maximum number of items returned is based on the
       * [pageSize][google.streetview.publish.v1.ListPhotoSequencesRequest.page_size]
       * field in the request.
       * Each item in the list can have three possible states,
       * * `Operation.done` = false, if the processing of
       *   [PhotoSequence][google.streetview.publish.v1.PhotoSequence] is not
       *   finished yet.
       * * `Operation.done` = true and `Operation.error` is populated, if there was
       *   an error in processing.
       * * `Operation.done` = true and `Operation.response` contains a
       *   [PhotoSequence][google.streetview.publish.v1.PhotoSequence] message,
       *   In each sequence, only
       *   [Id][google.streetview.publish.v1.PhotoSequence.id] is populated.
       * </pre>
       *
       * <code>repeated .google.longrunning.Operation photo_sequences = 1;</code>
       */
      public com.google.longrunning.Operation.Builder getPhotoSequencesBuilder(
          int index) {
        return getPhotoSequencesFieldBuilder().getBuilder(index);
      }
      /**
       * <pre>
       * List of photo sequences via [Operation][google.longrunning.Operation]
       * interface.
       * The maximum number of items returned is based on the
       * [pageSize][google.streetview.publish.v1.ListPhotoSequencesRequest.page_size]
       * field in the request.
       * Each item in the list can have three possible states,
       * * `Operation.done` = false, if the processing of
       *   [PhotoSequence][google.streetview.publish.v1.PhotoSequence] is not
       *   finished yet.
       * * `Operation.done` = true and `Operation.error` is populated, if there was
       *   an error in processing.
       * * `Operation.done` = true and `Operation.response` contains a
       *   [PhotoSequence][google.streetview.publish.v1.PhotoSequence] message,
       *   In each sequence, only
       *   [Id][google.streetview.publish.v1.PhotoSequence.id] is populated.
       * </pre>
       *
       * <code>repeated .google.longrunning.Operation photo_sequences = 1;</code>
       */
      public com.google.longrunning.OperationOrBuilder getPhotoSequencesOrBuilder(
          int index) {
        if (photoSequencesBuilder_ == null) {
          return photoSequences_.get(index);  } else {
          return photoSequencesBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <pre>
       * List of photo sequences via [Operation][google.longrunning.Operation]
       * interface.
       * The maximum number of items returned is based on the
       * [pageSize][google.streetview.publish.v1.ListPhotoSequencesRequest.page_size]
       * field in the request.
       * Each item in the list can have three possible states,
       * * `Operation.done` = false, if the processing of
       *   [PhotoSequence][google.streetview.publish.v1.PhotoSequence] is not
       *   finished yet.
       * * `Operation.done` = true and `Operation.error` is populated, if there was
       *   an error in processing.
       * * `Operation.done` = true and `Operation.response` contains a
       *   [PhotoSequence][google.streetview.publish.v1.PhotoSequence] message,
       *   In each sequence, only
       *   [Id][google.streetview.publish.v1.PhotoSequence.id] is populated.
       * </pre>
       *
       * <code>repeated .google.longrunning.Operation photo_sequences = 1;</code>
       */
      public java.util.List<? extends com.google.longrunning.OperationOrBuilder> 
           getPhotoSequencesOrBuilderList() {
        if (photoSequencesBuilder_ != null) {
          return photoSequencesBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(photoSequences_);
        }
      }
      /**
       * <pre>
       * List of photo sequences via [Operation][google.longrunning.Operation]
       * interface.
       * The maximum number of items returned is based on the
       * [pageSize][google.streetview.publish.v1.ListPhotoSequencesRequest.page_size]
       * field in the request.
       * Each item in the list can have three possible states,
       * * `Operation.done` = false, if the processing of
       *   [PhotoSequence][google.streetview.publish.v1.PhotoSequence] is not
       *   finished yet.
       * * `Operation.done` = true and `Operation.error` is populated, if there was
       *   an error in processing.
       * * `Operation.done` = true and `Operation.response` contains a
       *   [PhotoSequence][google.streetview.publish.v1.PhotoSequence] message,
       *   In each sequence, only
       *   [Id][google.streetview.publish.v1.PhotoSequence.id] is populated.
       * </pre>
       *
       * <code>repeated .google.longrunning.Operation photo_sequences = 1;</code>
       */
      public com.google.longrunning.Operation.Builder addPhotoSequencesBuilder() {
        return getPhotoSequencesFieldBuilder().addBuilder(
            com.google.longrunning.Operation.getDefaultInstance());
      }
      /**
       * <pre>
       * List of photo sequences via [Operation][google.longrunning.Operation]
       * interface.
       * The maximum number of items returned is based on the
       * [pageSize][google.streetview.publish.v1.ListPhotoSequencesRequest.page_size]
       * field in the request.
       * Each item in the list can have three possible states,
       * * `Operation.done` = false, if the processing of
       *   [PhotoSequence][google.streetview.publish.v1.PhotoSequence] is not
       *   finished yet.
       * * `Operation.done` = true and `Operation.error` is populated, if there was
       *   an error in processing.
       * * `Operation.done` = true and `Operation.response` contains a
       *   [PhotoSequence][google.streetview.publish.v1.PhotoSequence] message,
       *   In each sequence, only
       *   [Id][google.streetview.publish.v1.PhotoSequence.id] is populated.
       * </pre>
       *
       * <code>repeated .google.longrunning.Operation photo_sequences = 1;</code>
       */
      public com.google.longrunning.Operation.Builder addPhotoSequencesBuilder(
          int index) {
        return getPhotoSequencesFieldBuilder().addBuilder(
            index, com.google.longrunning.Operation.getDefaultInstance());
      }
      /**
       * <pre>
       * List of photo sequences via [Operation][google.longrunning.Operation]
       * interface.
       * The maximum number of items returned is based on the
       * [pageSize][google.streetview.publish.v1.ListPhotoSequencesRequest.page_size]
       * field in the request.
       * Each item in the list can have three possible states,
       * * `Operation.done` = false, if the processing of
       *   [PhotoSequence][google.streetview.publish.v1.PhotoSequence] is not
       *   finished yet.
       * * `Operation.done` = true and `Operation.error` is populated, if there was
       *   an error in processing.
       * * `Operation.done` = true and `Operation.response` contains a
       *   [PhotoSequence][google.streetview.publish.v1.PhotoSequence] message,
       *   In each sequence, only
       *   [Id][google.streetview.publish.v1.PhotoSequence.id] is populated.
       * </pre>
       *
       * <code>repeated .google.longrunning.Operation photo_sequences = 1;</code>
       */
      public java.util.List<com.google.longrunning.Operation.Builder> 
           getPhotoSequencesBuilderList() {
        return getPhotoSequencesFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilderV3<
          com.google.longrunning.Operation, com.google.longrunning.Operation.Builder, com.google.longrunning.OperationOrBuilder> 
          getPhotoSequencesFieldBuilder() {
        if (photoSequencesBuilder_ == null) {
          photoSequencesBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<
              com.google.longrunning.Operation, com.google.longrunning.Operation.Builder, com.google.longrunning.OperationOrBuilder>(
                  photoSequences_,
                  ((bitField0_ & 0x00000001) != 0),
                  getParentForChildren(),
                  isClean());
          photoSequences_ = null;
        }
        return photoSequencesBuilder_;
      }

      private java.lang.Object nextPageToken_ = "";
      /**
       * <pre>
       * Token to retrieve the next page of results, or empty if there are no more
       * results in the list.
       * </pre>
       *
       * <code>string next_page_token = 2;</code>
       * @return The nextPageToken.
       */
      public java.lang.String getNextPageToken() {
        java.lang.Object ref = nextPageToken_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          nextPageToken_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <pre>
       * Token to retrieve the next page of results, or empty if there are no more
       * results in the list.
       * </pre>
       *
       * <code>string next_page_token = 2;</code>
       * @return The bytes for nextPageToken.
       */
      public com.google.protobuf.ByteString
          getNextPageTokenBytes() {
        java.lang.Object ref = nextPageToken_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          nextPageToken_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       * Token to retrieve the next page of results, or empty if there are no more
       * results in the list.
       * </pre>
       *
       * <code>string next_page_token = 2;</code>
       * @param value The nextPageToken to set.
       * @return This builder for chaining.
       */
      public Builder setNextPageToken(
          java.lang.String value) {
        if (value == null) { throw new NullPointerException(); }
        nextPageToken_ = value;
        bitField0_ |= 0x00000002;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Token to retrieve the next page of results, or empty if there are no more
       * results in the list.
       * </pre>
       *
       * <code>string next_page_token = 2;</code>
       * @return This builder for chaining.
       */
      public Builder clearNextPageToken() {
        nextPageToken_ = getDefaultInstance().getNextPageToken();
        bitField0_ = (bitField0_ & ~0x00000002);
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Token to retrieve the next page of results, or empty if there are no more
       * results in the list.
       * </pre>
       *
       * <code>string next_page_token = 2;</code>
       * @param value The bytes for nextPageToken to set.
       * @return This builder for chaining.
       */
      public Builder setNextPageTokenBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) { throw new NullPointerException(); }
        checkByteStringIsUtf8(value);
        nextPageToken_ = value;
        bitField0_ |= 0x00000002;
        onChanged();
        return this;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:google.streetview.publish.v1.ListPhotoSequencesResponse)
    }

    // @@protoc_insertion_point(class_scope:google.streetview.publish.v1.ListPhotoSequencesResponse)
    private static final com.google.geo.ugc.streetview.publish.v1.StreetViewPublishRpcMessages.ListPhotoSequencesResponse DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new com.google.geo.ugc.streetview.publish.v1.StreetViewPublishRpcMessages.ListPhotoSequencesResponse();
    }

    public static com.google.geo.ugc.streetview.publish.v1.StreetViewPublishRpcMessages.ListPhotoSequencesResponse getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<ListPhotoSequencesResponse>
        PARSER = new com.google.protobuf.AbstractParser<ListPhotoSequencesResponse>() {
      @java.lang.Override
      public ListPhotoSequencesResponse parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        Builder builder = newBuilder();
        try {
          builder.mergeFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.setUnfinishedMessage(builder.buildPartial());
        } catch (com.google.protobuf.UninitializedMessageException e) {
          throw e.asInvalidProtocolBufferException().setUnfinishedMessage(builder.buildPartial());
        } catch (java.io.IOException e) {
          throw new com.google.protobuf.InvalidProtocolBufferException(e)
              .setUnfinishedMessage(builder.buildPartial());
        }
        return builder.buildPartial();
      }
    };

    public static com.google.protobuf.Parser<ListPhotoSequencesResponse> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<ListPhotoSequencesResponse> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.geo.ugc.streetview.publish.v1.StreetViewPublishRpcMessages.ListPhotoSequencesResponse getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_google_streetview_publish_v1_CreatePhotoRequest_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_google_streetview_publish_v1_CreatePhotoRequest_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_google_streetview_publish_v1_GetPhotoRequest_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_google_streetview_publish_v1_GetPhotoRequest_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_google_streetview_publish_v1_BatchGetPhotosRequest_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_google_streetview_publish_v1_BatchGetPhotosRequest_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_google_streetview_publish_v1_BatchGetPhotosResponse_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_google_streetview_publish_v1_BatchGetPhotosResponse_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_google_streetview_publish_v1_PhotoResponse_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_google_streetview_publish_v1_PhotoResponse_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_google_streetview_publish_v1_ListPhotosRequest_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_google_streetview_publish_v1_ListPhotosRequest_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_google_streetview_publish_v1_ListPhotosResponse_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_google_streetview_publish_v1_ListPhotosResponse_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_google_streetview_publish_v1_UpdatePhotoRequest_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_google_streetview_publish_v1_UpdatePhotoRequest_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_google_streetview_publish_v1_BatchUpdatePhotosRequest_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_google_streetview_publish_v1_BatchUpdatePhotosRequest_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_google_streetview_publish_v1_BatchUpdatePhotosResponse_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_google_streetview_publish_v1_BatchUpdatePhotosResponse_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_google_streetview_publish_v1_DeletePhotoRequest_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_google_streetview_publish_v1_DeletePhotoRequest_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_google_streetview_publish_v1_BatchDeletePhotosRequest_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_google_streetview_publish_v1_BatchDeletePhotosRequest_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_google_streetview_publish_v1_CreatePhotoSequenceRequest_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_google_streetview_publish_v1_CreatePhotoSequenceRequest_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_google_streetview_publish_v1_GetPhotoSequenceRequest_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_google_streetview_publish_v1_GetPhotoSequenceRequest_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_google_streetview_publish_v1_DeletePhotoSequenceRequest_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_google_streetview_publish_v1_DeletePhotoSequenceRequest_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_google_streetview_publish_v1_BatchDeletePhotosResponse_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_google_streetview_publish_v1_BatchDeletePhotosResponse_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_google_streetview_publish_v1_ListPhotoSequencesRequest_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_google_streetview_publish_v1_ListPhotoSequencesRequest_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_google_streetview_publish_v1_ListPhotoSequencesResponse_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_google_streetview_publish_v1_ListPhotoSequencesResponse_fieldAccessorTable;

  public static com.google.protobuf.Descriptors.FileDescriptor
      getDescriptor() {
    return descriptor;
  }
  private static  com.google.protobuf.Descriptors.FileDescriptor
      descriptor;
  static {
    java.lang.String[] descriptorData = {
      "\n.google/streetview/publish/v1/rpcmessag" +
      "es.proto\022\034google.streetview.publish.v1\032\037" +
      "google/api/field_behavior.proto\032#google/" +
      "longrunning/operations.proto\032 google/pro" +
      "tobuf/field_mask.proto\032\027google/rpc/statu" +
      "s.proto\032,google/streetview/publish/v1/re" +
      "sources.proto\"M\n\022CreatePhotoRequest\0227\n\005p" +
      "hoto\030\001 \001(\0132#.google.streetview.publish.v" +
      "1.PhotoB\003\340A\002\"{\n\017GetPhotoRequest\022\025\n\010photo" +
      "_id\030\001 \001(\tB\003\340A\002\022:\n\004view\030\002 \001(\0162\'.google.st" +
      "reetview.publish.v1.PhotoViewB\003\340A\002\022\025\n\rla" +
      "nguage_code\030\003 \001(\t\"\207\001\n\025BatchGetPhotosRequ" +
      "est\022\026\n\tphoto_ids\030\001 \003(\tB\003\340A\002\022:\n\004view\030\002 \001(" +
      "\0162\'.google.streetview.publish.v1.PhotoVi" +
      "ewB\003\340A\002\022\032\n\rlanguage_code\030\003 \001(\tB\003\340A\001\"V\n\026B" +
      "atchGetPhotosResponse\022<\n\007results\030\001 \003(\0132+" +
      ".google.streetview.publish.v1.PhotoRespo" +
      "nse\"g\n\rPhotoResponse\022\"\n\006status\030\001 \001(\0132\022.g" +
      "oogle.rpc.Status\0222\n\005photo\030\002 \001(\0132#.google" +
      ".streetview.publish.v1.Photo\"\261\001\n\021ListPho" +
      "tosRequest\022:\n\004view\030\001 \001(\0162\'.google.street" +
      "view.publish.v1.PhotoViewB\003\340A\002\022\026\n\tpage_s" +
      "ize\030\002 \001(\005B\003\340A\001\022\027\n\npage_token\030\003 \001(\tB\003\340A\001\022" +
      "\023\n\006filter\030\004 \001(\tB\003\340A\001\022\032\n\rlanguage_code\030\005 " +
      "\001(\tB\003\340A\001\"b\n\022ListPhotosResponse\0223\n\006photos" +
      "\030\001 \003(\0132#.google.streetview.publish.v1.Ph" +
      "oto\022\027\n\017next_page_token\030\002 \001(\t\"\203\001\n\022UpdateP" +
      "hotoRequest\0227\n\005photo\030\001 \001(\0132#.google.stre" +
      "etview.publish.v1.PhotoB\003\340A\002\0224\n\013update_m" +
      "ask\030\002 \001(\0132\032.google.protobuf.FieldMaskB\003\340" +
      "A\002\"p\n\030BatchUpdatePhotosRequest\022T\n\025update" +
      "_photo_requests\030\001 \003(\01320.google.streetvie" +
      "w.publish.v1.UpdatePhotoRequestB\003\340A\002\"Y\n\031" +
      "BatchUpdatePhotosResponse\022<\n\007results\030\001 \003" +
      "(\0132+.google.streetview.publish.v1.PhotoR" +
      "esponse\"+\n\022DeletePhotoRequest\022\025\n\010photo_i" +
      "d\030\001 \001(\tB\003\340A\002\"2\n\030BatchDeletePhotosRequest" +
      "\022\026\n\tphoto_ids\030\001 \003(\tB\003\340A\002\"\200\002\n\032CreatePhoto" +
      "SequenceRequest\022H\n\016photo_sequence\030\001 \001(\0132" +
      "+.google.streetview.publish.v1.PhotoSequ" +
      "enceB\003\340A\002\022[\n\ninput_type\030\002 \001(\0162B.google.s" +
      "treetview.publish.v1.CreatePhotoSequence" +
      "Request.InputTypeB\003\340A\002\";\n\tInputType\022\032\n\026I" +
      "NPUT_TYPE_UNSPECIFIED\020\000\022\t\n\005VIDEO\020\001\022\007\n\003XD" +
      "M\020\002\"\203\001\n\027GetPhotoSequenceRequest\022\030\n\013seque" +
      "nce_id\030\001 \001(\tB\003\340A\002\0229\n\004view\030\002 \001(\0162\'.google" +
      ".streetview.publish.v1.PhotoViewB\002\030\001\022\023\n\006" +
      "filter\030\003 \001(\tB\003\340A\001\"6\n\032DeletePhotoSequence" +
      "Request\022\030\n\013sequence_id\030\001 \001(\tB\003\340A\002\"?\n\031Bat" +
      "chDeletePhotosResponse\022\"\n\006status\030\001 \003(\0132\022" +
      ".google.rpc.Status\"a\n\031ListPhotoSequences" +
      "Request\022\026\n\tpage_size\030\001 \001(\005B\003\340A\001\022\027\n\npage_" +
      "token\030\002 \001(\tB\003\340A\001\022\023\n\006filter\030\004 \001(\tB\003\340A\001\"m\n" +
      "\032ListPhotoSequencesResponse\0226\n\017photo_seq" +
      "uences\030\001 \003(\0132\035.google.longrunning.Operat" +
      "ion\022\027\n\017next_page_token\030\002 \001(\t*0\n\tPhotoVie" +
      "w\022\t\n\005BASIC\020\000\022\030\n\024INCLUDE_DOWNLOAD_URL\020\001B\215" +
      "\001\n(com.google.geo.ugc.streetview.publish" +
      ".v1B\034StreetViewPublishRpcMessagesZCgoogl" +
      "e.golang.org/genproto/googleapis/streetv" +
      "iew/publish/v1;publishb\006proto3"
    };
    descriptor = com.google.protobuf.Descriptors.FileDescriptor
      .internalBuildGeneratedFileFrom(descriptorData,
        new com.google.protobuf.Descriptors.FileDescriptor[] {
          com.google.api.FieldBehaviorProto.getDescriptor(),
          com.google.longrunning.OperationsProto.getDescriptor(),
          com.google.protobuf.FieldMaskProto.getDescriptor(),
          com.google.rpc.StatusProto.getDescriptor(),
          com.google.geo.ugc.streetview.publish.v1.StreetViewPublishResources.getDescriptor(),
        });
    internal_static_google_streetview_publish_v1_CreatePhotoRequest_descriptor =
      getDescriptor().getMessageTypes().get(0);
    internal_static_google_streetview_publish_v1_CreatePhotoRequest_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_google_streetview_publish_v1_CreatePhotoRequest_descriptor,
        new java.lang.String[] { "Photo", });
    internal_static_google_streetview_publish_v1_GetPhotoRequest_descriptor =
      getDescriptor().getMessageTypes().get(1);
    internal_static_google_streetview_publish_v1_GetPhotoRequest_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_google_streetview_publish_v1_GetPhotoRequest_descriptor,
        new java.lang.String[] { "PhotoId", "View", "LanguageCode", });
    internal_static_google_streetview_publish_v1_BatchGetPhotosRequest_descriptor =
      getDescriptor().getMessageTypes().get(2);
    internal_static_google_streetview_publish_v1_BatchGetPhotosRequest_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_google_streetview_publish_v1_BatchGetPhotosRequest_descriptor,
        new java.lang.String[] { "PhotoIds", "View", "LanguageCode", });
    internal_static_google_streetview_publish_v1_BatchGetPhotosResponse_descriptor =
      getDescriptor().getMessageTypes().get(3);
    internal_static_google_streetview_publish_v1_BatchGetPhotosResponse_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_google_streetview_publish_v1_BatchGetPhotosResponse_descriptor,
        new java.lang.String[] { "Results", });
    internal_static_google_streetview_publish_v1_PhotoResponse_descriptor =
      getDescriptor().getMessageTypes().get(4);
    internal_static_google_streetview_publish_v1_PhotoResponse_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_google_streetview_publish_v1_PhotoResponse_descriptor,
        new java.lang.String[] { "Status", "Photo", });
    internal_static_google_streetview_publish_v1_ListPhotosRequest_descriptor =
      getDescriptor().getMessageTypes().get(5);
    internal_static_google_streetview_publish_v1_ListPhotosRequest_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_google_streetview_publish_v1_ListPhotosRequest_descriptor,
        new java.lang.String[] { "View", "PageSize", "PageToken", "Filter", "LanguageCode", });
    internal_static_google_streetview_publish_v1_ListPhotosResponse_descriptor =
      getDescriptor().getMessageTypes().get(6);
    internal_static_google_streetview_publish_v1_ListPhotosResponse_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_google_streetview_publish_v1_ListPhotosResponse_descriptor,
        new java.lang.String[] { "Photos", "NextPageToken", });
    internal_static_google_streetview_publish_v1_UpdatePhotoRequest_descriptor =
      getDescriptor().getMessageTypes().get(7);
    internal_static_google_streetview_publish_v1_UpdatePhotoRequest_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_google_streetview_publish_v1_UpdatePhotoRequest_descriptor,
        new java.lang.String[] { "Photo", "UpdateMask", });
    internal_static_google_streetview_publish_v1_BatchUpdatePhotosRequest_descriptor =
      getDescriptor().getMessageTypes().get(8);
    internal_static_google_streetview_publish_v1_BatchUpdatePhotosRequest_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_google_streetview_publish_v1_BatchUpdatePhotosRequest_descriptor,
        new java.lang.String[] { "UpdatePhotoRequests", });
    internal_static_google_streetview_publish_v1_BatchUpdatePhotosResponse_descriptor =
      getDescriptor().getMessageTypes().get(9);
    internal_static_google_streetview_publish_v1_BatchUpdatePhotosResponse_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_google_streetview_publish_v1_BatchUpdatePhotosResponse_descriptor,
        new java.lang.String[] { "Results", });
    internal_static_google_streetview_publish_v1_DeletePhotoRequest_descriptor =
      getDescriptor().getMessageTypes().get(10);
    internal_static_google_streetview_publish_v1_DeletePhotoRequest_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_google_streetview_publish_v1_DeletePhotoRequest_descriptor,
        new java.lang.String[] { "PhotoId", });
    internal_static_google_streetview_publish_v1_BatchDeletePhotosRequest_descriptor =
      getDescriptor().getMessageTypes().get(11);
    internal_static_google_streetview_publish_v1_BatchDeletePhotosRequest_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_google_streetview_publish_v1_BatchDeletePhotosRequest_descriptor,
        new java.lang.String[] { "PhotoIds", });
    internal_static_google_streetview_publish_v1_CreatePhotoSequenceRequest_descriptor =
      getDescriptor().getMessageTypes().get(12);
    internal_static_google_streetview_publish_v1_CreatePhotoSequenceRequest_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_google_streetview_publish_v1_CreatePhotoSequenceRequest_descriptor,
        new java.lang.String[] { "PhotoSequence", "InputType", });
    internal_static_google_streetview_publish_v1_GetPhotoSequenceRequest_descriptor =
      getDescriptor().getMessageTypes().get(13);
    internal_static_google_streetview_publish_v1_GetPhotoSequenceRequest_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_google_streetview_publish_v1_GetPhotoSequenceRequest_descriptor,
        new java.lang.String[] { "SequenceId", "View", "Filter", });
    internal_static_google_streetview_publish_v1_DeletePhotoSequenceRequest_descriptor =
      getDescriptor().getMessageTypes().get(14);
    internal_static_google_streetview_publish_v1_DeletePhotoSequenceRequest_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_google_streetview_publish_v1_DeletePhotoSequenceRequest_descriptor,
        new java.lang.String[] { "SequenceId", });
    internal_static_google_streetview_publish_v1_BatchDeletePhotosResponse_descriptor =
      getDescriptor().getMessageTypes().get(15);
    internal_static_google_streetview_publish_v1_BatchDeletePhotosResponse_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_google_streetview_publish_v1_BatchDeletePhotosResponse_descriptor,
        new java.lang.String[] { "Status", });
    internal_static_google_streetview_publish_v1_ListPhotoSequencesRequest_descriptor =
      getDescriptor().getMessageTypes().get(16);
    internal_static_google_streetview_publish_v1_ListPhotoSequencesRequest_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_google_streetview_publish_v1_ListPhotoSequencesRequest_descriptor,
        new java.lang.String[] { "PageSize", "PageToken", "Filter", });
    internal_static_google_streetview_publish_v1_ListPhotoSequencesResponse_descriptor =
      getDescriptor().getMessageTypes().get(17);
    internal_static_google_streetview_publish_v1_ListPhotoSequencesResponse_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_google_streetview_publish_v1_ListPhotoSequencesResponse_descriptor,
        new java.lang.String[] { "PhotoSequences", "NextPageToken", });
    com.google.protobuf.ExtensionRegistry registry =
        com.google.protobuf.ExtensionRegistry.newInstance();
    registry.add(com.google.api.FieldBehaviorProto.fieldBehavior);
    com.google.protobuf.Descriptors.FileDescriptor
        .internalUpdateFileDescriptor(descriptor, registry);
    com.google.api.FieldBehaviorProto.getDescriptor();
    com.google.longrunning.OperationsProto.getDescriptor();
    com.google.protobuf.FieldMaskProto.getDescriptor();
    com.google.rpc.StatusProto.getDescriptor();
    com.google.geo.ugc.streetview.publish.v1.StreetViewPublishResources.getDescriptor();
  }

  // @@protoc_insertion_point(outer_class_scope)
}
