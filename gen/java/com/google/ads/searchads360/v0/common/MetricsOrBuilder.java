// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: google/ads/searchads360/v0/common/metrics.proto

package com.google.ads.searchads360.v0.common;

public interface MetricsOrBuilder extends
    // @@protoc_insertion_point(interface_extends:google.ads.searchads360.v0.common.Metrics)
    com.google.protobuf.MessageOrBuilder {

  /**
   * <pre>
   * The percent of your ad impressions that are shown as the very first ad
   * above the organic search results.
   * </pre>
   *
   * <code>optional double absolute_top_impression_percentage = 183;</code>
   * @return Whether the absoluteTopImpressionPercentage field is set.
   */
  boolean hasAbsoluteTopImpressionPercentage();
  /**
   * <pre>
   * The percent of your ad impressions that are shown as the very first ad
   * above the organic search results.
   * </pre>
   *
   * <code>optional double absolute_top_impression_percentage = 183;</code>
   * @return The absoluteTopImpressionPercentage.
   */
  double getAbsoluteTopImpressionPercentage();

  /**
   * <pre>
   * All conversions from interactions (as oppose to view through conversions)
   * divided by the number of ad interactions.
   * </pre>
   *
   * <code>optional double all_conversions_from_interactions_rate = 191;</code>
   * @return Whether the allConversionsFromInteractionsRate field is set.
   */
  boolean hasAllConversionsFromInteractionsRate();
  /**
   * <pre>
   * All conversions from interactions (as oppose to view through conversions)
   * divided by the number of ad interactions.
   * </pre>
   *
   * <code>optional double all_conversions_from_interactions_rate = 191;</code>
   * @return The allConversionsFromInteractionsRate.
   */
  double getAllConversionsFromInteractionsRate();

  /**
   * <pre>
   * The value of all conversions.
   * </pre>
   *
   * <code>optional double all_conversions_value = 192;</code>
   * @return Whether the allConversionsValue field is set.
   */
  boolean hasAllConversionsValue();
  /**
   * <pre>
   * The value of all conversions.
   * </pre>
   *
   * <code>optional double all_conversions_value = 192;</code>
   * @return The allConversionsValue.
   */
  double getAllConversionsValue();

  /**
   * <pre>
   * The value of all conversions. When this column is selected with date, the
   * values in date column means the conversion date. Details for the
   * by_conversion_date columns are available at
   * https://support.google.com/sa360/answer/9250611.
   * </pre>
   *
   * <code>double all_conversions_value_by_conversion_date = 240;</code>
   * @return The allConversionsValueByConversionDate.
   */
  double getAllConversionsValueByConversionDate();

  /**
   * <pre>
   * The total number of conversions. This includes all conversions regardless
   * of the value of include_in_conversions_metric.
   * </pre>
   *
   * <code>optional double all_conversions = 193;</code>
   * @return Whether the allConversions field is set.
   */
  boolean hasAllConversions();
  /**
   * <pre>
   * The total number of conversions. This includes all conversions regardless
   * of the value of include_in_conversions_metric.
   * </pre>
   *
   * <code>optional double all_conversions = 193;</code>
   * @return The allConversions.
   */
  double getAllConversions();

  /**
   * <pre>
   * The total number of conversions. This includes all conversions regardless
   * of the value of include_in_conversions_metric. When this column is selected
   * with date, the values in date column means the conversion date. Details for
   * the by_conversion_date columns are available at
   * https://support.google.com/sa360/answer/9250611.
   * </pre>
   *
   * <code>double all_conversions_by_conversion_date = 241;</code>
   * @return The allConversionsByConversionDate.
   */
  double getAllConversionsByConversionDate();

  /**
   * <pre>
   * The value of all conversions divided by the total cost of ad interactions
   * (such as clicks for text ads or views for video ads).
   * </pre>
   *
   * <code>optional double all_conversions_value_per_cost = 194;</code>
   * @return Whether the allConversionsValuePerCost field is set.
   */
  boolean hasAllConversionsValuePerCost();
  /**
   * <pre>
   * The value of all conversions divided by the total cost of ad interactions
   * (such as clicks for text ads or views for video ads).
   * </pre>
   *
   * <code>optional double all_conversions_value_per_cost = 194;</code>
   * @return The allConversionsValuePerCost.
   */
  double getAllConversionsValuePerCost();

  /**
   * <pre>
   * The number of times people clicked the "Call" button to call a store during
   * or after clicking an ad. This number doesn't include whether or not calls
   * were connected, or the duration of any calls.
   * This metric applies to feed items only.
   * </pre>
   *
   * <code>optional double all_conversions_from_click_to_call = 195;</code>
   * @return Whether the allConversionsFromClickToCall field is set.
   */
  boolean hasAllConversionsFromClickToCall();
  /**
   * <pre>
   * The number of times people clicked the "Call" button to call a store during
   * or after clicking an ad. This number doesn't include whether or not calls
   * were connected, or the duration of any calls.
   * This metric applies to feed items only.
   * </pre>
   *
   * <code>optional double all_conversions_from_click_to_call = 195;</code>
   * @return The allConversionsFromClickToCall.
   */
  double getAllConversionsFromClickToCall();

  /**
   * <pre>
   * The number of times people clicked a "Get directions" button to navigate to
   * a store after clicking an ad.
   * This metric applies to feed items only.
   * </pre>
   *
   * <code>optional double all_conversions_from_directions = 196;</code>
   * @return Whether the allConversionsFromDirections field is set.
   */
  boolean hasAllConversionsFromDirections();
  /**
   * <pre>
   * The number of times people clicked a "Get directions" button to navigate to
   * a store after clicking an ad.
   * This metric applies to feed items only.
   * </pre>
   *
   * <code>optional double all_conversions_from_directions = 196;</code>
   * @return The allConversionsFromDirections.
   */
  double getAllConversionsFromDirections();

  /**
   * <pre>
   * The value of all conversions from interactions divided by the total number
   * of interactions.
   * </pre>
   *
   * <code>optional double all_conversions_from_interactions_value_per_interaction = 197;</code>
   * @return Whether the allConversionsFromInteractionsValuePerInteraction field is set.
   */
  boolean hasAllConversionsFromInteractionsValuePerInteraction();
  /**
   * <pre>
   * The value of all conversions from interactions divided by the total number
   * of interactions.
   * </pre>
   *
   * <code>optional double all_conversions_from_interactions_value_per_interaction = 197;</code>
   * @return The allConversionsFromInteractionsValuePerInteraction.
   */
  double getAllConversionsFromInteractionsValuePerInteraction();

  /**
   * <pre>
   * The number of times people clicked a link to view a store's menu after
   * clicking an ad.
   * This metric applies to feed items only.
   * </pre>
   *
   * <code>optional double all_conversions_from_menu = 198;</code>
   * @return Whether the allConversionsFromMenu field is set.
   */
  boolean hasAllConversionsFromMenu();
  /**
   * <pre>
   * The number of times people clicked a link to view a store's menu after
   * clicking an ad.
   * This metric applies to feed items only.
   * </pre>
   *
   * <code>optional double all_conversions_from_menu = 198;</code>
   * @return The allConversionsFromMenu.
   */
  double getAllConversionsFromMenu();

  /**
   * <pre>
   * The number of times people placed an order at a store after clicking an ad.
   * This metric applies to feed items only.
   * </pre>
   *
   * <code>optional double all_conversions_from_order = 199;</code>
   * @return Whether the allConversionsFromOrder field is set.
   */
  boolean hasAllConversionsFromOrder();
  /**
   * <pre>
   * The number of times people placed an order at a store after clicking an ad.
   * This metric applies to feed items only.
   * </pre>
   *
   * <code>optional double all_conversions_from_order = 199;</code>
   * @return The allConversionsFromOrder.
   */
  double getAllConversionsFromOrder();

  /**
   * <pre>
   * The number of other conversions (for example, posting a review or saving a
   * location for a store) that occurred after people clicked an ad.
   * This metric applies to feed items only.
   * </pre>
   *
   * <code>optional double all_conversions_from_other_engagement = 200;</code>
   * @return Whether the allConversionsFromOtherEngagement field is set.
   */
  boolean hasAllConversionsFromOtherEngagement();
  /**
   * <pre>
   * The number of other conversions (for example, posting a review or saving a
   * location for a store) that occurred after people clicked an ad.
   * This metric applies to feed items only.
   * </pre>
   *
   * <code>optional double all_conversions_from_other_engagement = 200;</code>
   * @return The allConversionsFromOtherEngagement.
   */
  double getAllConversionsFromOtherEngagement();

  /**
   * <pre>
   * Estimated number of times people visited a store after clicking an ad.
   * This metric applies to feed items only.
   * </pre>
   *
   * <code>optional double all_conversions_from_store_visit = 201;</code>
   * @return Whether the allConversionsFromStoreVisit field is set.
   */
  boolean hasAllConversionsFromStoreVisit();
  /**
   * <pre>
   * Estimated number of times people visited a store after clicking an ad.
   * This metric applies to feed items only.
   * </pre>
   *
   * <code>optional double all_conversions_from_store_visit = 201;</code>
   * @return The allConversionsFromStoreVisit.
   */
  double getAllConversionsFromStoreVisit();

  /**
   * <pre>
   * The number of times that people were taken to a store's URL after clicking
   * an ad.
   * This metric applies to feed items only.
   * </pre>
   *
   * <code>optional double all_conversions_from_store_website = 202;</code>
   * @return Whether the allConversionsFromStoreWebsite field is set.
   */
  boolean hasAllConversionsFromStoreWebsite();
  /**
   * <pre>
   * The number of times that people were taken to a store's URL after clicking
   * an ad.
   * This metric applies to feed items only.
   * </pre>
   *
   * <code>optional double all_conversions_from_store_website = 202;</code>
   * @return The allConversionsFromStoreWebsite.
   */
  double getAllConversionsFromStoreWebsite();

  /**
   * <pre>
   * The average amount you pay per interaction. This amount is the total cost
   * of your ads divided by the total number of interactions.
   * </pre>
   *
   * <code>optional double average_cost = 203;</code>
   * @return Whether the averageCost field is set.
   */
  boolean hasAverageCost();
  /**
   * <pre>
   * The average amount you pay per interaction. This amount is the total cost
   * of your ads divided by the total number of interactions.
   * </pre>
   *
   * <code>optional double average_cost = 203;</code>
   * @return The averageCost.
   */
  double getAverageCost();

  /**
   * <pre>
   * The total cost of all clicks divided by the total number of clicks
   * received.
   * </pre>
   *
   * <code>optional double average_cpc = 204;</code>
   * @return Whether the averageCpc field is set.
   */
  boolean hasAverageCpc();
  /**
   * <pre>
   * The total cost of all clicks divided by the total number of clicks
   * received.
   * </pre>
   *
   * <code>optional double average_cpc = 204;</code>
   * @return The averageCpc.
   */
  double getAverageCpc();

  /**
   * <pre>
   * Average cost-per-thousand impressions (CPM).
   * </pre>
   *
   * <code>optional double average_cpm = 206;</code>
   * @return Whether the averageCpm field is set.
   */
  boolean hasAverageCpm();
  /**
   * <pre>
   * Average cost-per-thousand impressions (CPM).
   * </pre>
   *
   * <code>optional double average_cpm = 206;</code>
   * @return The averageCpm.
   */
  double getAverageCpm();

  /**
   * <pre>
   * The number of clicks.
   * </pre>
   *
   * <code>optional int64 clicks = 131;</code>
   * @return Whether the clicks field is set.
   */
  boolean hasClicks();
  /**
   * <pre>
   * The number of clicks.
   * </pre>
   *
   * <code>optional int64 clicks = 131;</code>
   * @return The clicks.
   */
  long getClicks();

  /**
   * <pre>
   * The estimated percent of times that your ad was eligible to show
   * on the Display Network but didn't because your budget was too low.
   * Note: Content budget lost impression share is reported in the range of 0
   * to 0.9. Any value above 0.9 is reported as 0.9001.
   * </pre>
   *
   * <code>optional double content_budget_lost_impression_share = 159;</code>
   * @return Whether the contentBudgetLostImpressionShare field is set.
   */
  boolean hasContentBudgetLostImpressionShare();
  /**
   * <pre>
   * The estimated percent of times that your ad was eligible to show
   * on the Display Network but didn't because your budget was too low.
   * Note: Content budget lost impression share is reported in the range of 0
   * to 0.9. Any value above 0.9 is reported as 0.9001.
   * </pre>
   *
   * <code>optional double content_budget_lost_impression_share = 159;</code>
   * @return The contentBudgetLostImpressionShare.
   */
  double getContentBudgetLostImpressionShare();

  /**
   * <pre>
   * The impressions you've received on the Display Network divided
   * by the estimated number of impressions you were eligible to receive.
   * Note: Content impression share is reported in the range of 0.1 to 1. Any
   * value below 0.1 is reported as 0.0999.
   * </pre>
   *
   * <code>optional double content_impression_share = 160;</code>
   * @return Whether the contentImpressionShare field is set.
   */
  boolean hasContentImpressionShare();
  /**
   * <pre>
   * The impressions you've received on the Display Network divided
   * by the estimated number of impressions you were eligible to receive.
   * Note: Content impression share is reported in the range of 0.1 to 1. Any
   * value below 0.1 is reported as 0.0999.
   * </pre>
   *
   * <code>optional double content_impression_share = 160;</code>
   * @return The contentImpressionShare.
   */
  double getContentImpressionShare();

  /**
   * <pre>
   * The estimated percentage of impressions on the Display Network
   * that your ads didn't receive due to poor Ad Rank.
   * Note: Content rank lost impression share is reported in the range of 0
   * to 0.9. Any value above 0.9 is reported as 0.9001.
   * </pre>
   *
   * <code>optional double content_rank_lost_impression_share = 163;</code>
   * @return Whether the contentRankLostImpressionShare field is set.
   */
  boolean hasContentRankLostImpressionShare();
  /**
   * <pre>
   * The estimated percentage of impressions on the Display Network
   * that your ads didn't receive due to poor Ad Rank.
   * Note: Content rank lost impression share is reported in the range of 0
   * to 0.9. Any value above 0.9 is reported as 0.9001.
   * </pre>
   *
   * <code>optional double content_rank_lost_impression_share = 163;</code>
   * @return The contentRankLostImpressionShare.
   */
  double getContentRankLostImpressionShare();

  /**
   * <pre>
   * Average biddable conversions (from interaction) per conversion eligible
   * interaction. Shows how often, on average, an ad interaction leads to a
   * biddable conversion.
   * </pre>
   *
   * <code>optional double conversions_from_interactions_rate = 284;</code>
   * @return Whether the conversionsFromInteractionsRate field is set.
   */
  boolean hasConversionsFromInteractionsRate();
  /**
   * <pre>
   * Average biddable conversions (from interaction) per conversion eligible
   * interaction. Shows how often, on average, an ad interaction leads to a
   * biddable conversion.
   * </pre>
   *
   * <code>optional double conversions_from_interactions_rate = 284;</code>
   * @return The conversionsFromInteractionsRate.
   */
  double getConversionsFromInteractionsRate();

  /**
   * <pre>
   * The value of client account conversions. This only
   * includes conversion actions which
   * include_in_client_account_conversions_metric attribute is set to true. If
   * you use conversion-based bidding, your bid strategies will optimize for
   * these conversions.
   * </pre>
   *
   * <code>optional double client_account_conversions_value = 165;</code>
   * @return Whether the clientAccountConversionsValue field is set.
   */
  boolean hasClientAccountConversionsValue();
  /**
   * <pre>
   * The value of client account conversions. This only
   * includes conversion actions which
   * include_in_client_account_conversions_metric attribute is set to true. If
   * you use conversion-based bidding, your bid strategies will optimize for
   * these conversions.
   * </pre>
   *
   * <code>optional double client_account_conversions_value = 165;</code>
   * @return The clientAccountConversionsValue.
   */
  double getClientAccountConversionsValue();

  /**
   * <pre>
   * The sum of biddable conversions value by conversion date. When this
   * column is selected with date, the values in date column means the
   * conversion date.
   * </pre>
   *
   * <code>double conversions_value_by_conversion_date = 283;</code>
   * @return The conversionsValueByConversionDate.
   */
  double getConversionsValueByConversionDate();

  /**
   * <pre>
   * The value of biddable conversion divided by the total cost of conversion
   * eligible interactions.
   * </pre>
   *
   * <code>optional double conversions_value_per_cost = 288;</code>
   * @return Whether the conversionsValuePerCost field is set.
   */
  boolean hasConversionsValuePerCost();
  /**
   * <pre>
   * The value of biddable conversion divided by the total cost of conversion
   * eligible interactions.
   * </pre>
   *
   * <code>optional double conversions_value_per_cost = 288;</code>
   * @return The conversionsValuePerCost.
   */
  double getConversionsValuePerCost();

  /**
   * <pre>
   * The value of conversions from interactions divided by the number of ad
   * interactions. This only includes conversion actions which
   * include_in_conversions_metric attribute is set to true. If you use
   * conversion-based bidding, your bid strategies will optimize for these
   * conversions.
   * </pre>
   *
   * <code>optional double conversions_from_interactions_value_per_interaction = 167;</code>
   * @return Whether the conversionsFromInteractionsValuePerInteraction field is set.
   */
  boolean hasConversionsFromInteractionsValuePerInteraction();
  /**
   * <pre>
   * The value of conversions from interactions divided by the number of ad
   * interactions. This only includes conversion actions which
   * include_in_conversions_metric attribute is set to true. If you use
   * conversion-based bidding, your bid strategies will optimize for these
   * conversions.
   * </pre>
   *
   * <code>optional double conversions_from_interactions_value_per_interaction = 167;</code>
   * @return The conversionsFromInteractionsValuePerInteraction.
   */
  double getConversionsFromInteractionsValuePerInteraction();

  /**
   * <pre>
   * The number of client account conversions. This only
   * includes conversion actions which
   * include_in_client_account_conversions_metric attribute is set to true. If
   * you use conversion-based bidding, your bid strategies will optimize for
   * these conversions.
   * </pre>
   *
   * <code>optional double client_account_conversions = 168;</code>
   * @return Whether the clientAccountConversions field is set.
   */
  boolean hasClientAccountConversions();
  /**
   * <pre>
   * The number of client account conversions. This only
   * includes conversion actions which
   * include_in_client_account_conversions_metric attribute is set to true. If
   * you use conversion-based bidding, your bid strategies will optimize for
   * these conversions.
   * </pre>
   *
   * <code>optional double client_account_conversions = 168;</code>
   * @return The clientAccountConversions.
   */
  double getClientAccountConversions();

  /**
   * <pre>
   * The sum of conversions by conversion date for biddable conversion types.
   * Can be fractional due to attribution modeling. When this column is selected
   * with date, the values in date column means the conversion date.
   * </pre>
   *
   * <code>double conversions_by_conversion_date = 282;</code>
   * @return The conversionsByConversionDate.
   */
  double getConversionsByConversionDate();

  /**
   * <pre>
   * The sum of your cost-per-click (CPC) and cost-per-thousand impressions
   * (CPM) costs during this period.
   * </pre>
   *
   * <code>optional int64 cost_micros = 169;</code>
   * @return Whether the costMicros field is set.
   */
  boolean hasCostMicros();
  /**
   * <pre>
   * The sum of your cost-per-click (CPC) and cost-per-thousand impressions
   * (CPM) costs during this period.
   * </pre>
   *
   * <code>optional int64 cost_micros = 169;</code>
   * @return The costMicros.
   */
  long getCostMicros();

  /**
   * <pre>
   * The cost of ad interactions divided by all conversions.
   * </pre>
   *
   * <code>optional double cost_per_all_conversions = 170;</code>
   * @return Whether the costPerAllConversions field is set.
   */
  boolean hasCostPerAllConversions();
  /**
   * <pre>
   * The cost of ad interactions divided by all conversions.
   * </pre>
   *
   * <code>optional double cost_per_all_conversions = 170;</code>
   * @return The costPerAllConversions.
   */
  double getCostPerAllConversions();

  /**
   * <pre>
   * Average conversion eligible cost per biddable conversion.
   * </pre>
   *
   * <code>optional double cost_per_conversion = 286;</code>
   * @return Whether the costPerConversion field is set.
   */
  boolean hasCostPerConversion();
  /**
   * <pre>
   * Average conversion eligible cost per biddable conversion.
   * </pre>
   *
   * <code>optional double cost_per_conversion = 286;</code>
   * @return The costPerConversion.
   */
  double getCostPerConversion();

  /**
   * <pre>
   * The cost of ad interactions divided by current model attributed
   * conversions. This only includes conversion actions which
   * include_in_conversions_metric attribute is set to true. If you use
   * conversion-based bidding, your bid strategies will optimize for these
   * conversions.
   * </pre>
   *
   * <code>optional double cost_per_current_model_attributed_conversion = 172;</code>
   * @return Whether the costPerCurrentModelAttributedConversion field is set.
   */
  boolean hasCostPerCurrentModelAttributedConversion();
  /**
   * <pre>
   * The cost of ad interactions divided by current model attributed
   * conversions. This only includes conversion actions which
   * include_in_conversions_metric attribute is set to true. If you use
   * conversion-based bidding, your bid strategies will optimize for these
   * conversions.
   * </pre>
   *
   * <code>optional double cost_per_current_model_attributed_conversion = 172;</code>
   * @return The costPerCurrentModelAttributedConversion.
   */
  double getCostPerCurrentModelAttributedConversion();

  /**
   * <pre>
   * Conversions from when a customer clicks on an ad on one device,
   * then converts on a different device or browser.
   * Cross-device conversions are already included in all_conversions.
   * </pre>
   *
   * <code>optional double cross_device_conversions = 173;</code>
   * @return Whether the crossDeviceConversions field is set.
   */
  boolean hasCrossDeviceConversions();
  /**
   * <pre>
   * Conversions from when a customer clicks on an ad on one device,
   * then converts on a different device or browser.
   * Cross-device conversions are already included in all_conversions.
   * </pre>
   *
   * <code>optional double cross_device_conversions = 173;</code>
   * @return The crossDeviceConversions.
   */
  double getCrossDeviceConversions();

  /**
   * <pre>
   * The sum of the value of cross-device conversions.
   * </pre>
   *
   * <code>optional double cross_device_conversions_value = 253;</code>
   * @return Whether the crossDeviceConversionsValue field is set.
   */
  boolean hasCrossDeviceConversionsValue();
  /**
   * <pre>
   * The sum of the value of cross-device conversions.
   * </pre>
   *
   * <code>optional double cross_device_conversions_value = 253;</code>
   * @return The crossDeviceConversionsValue.
   */
  double getCrossDeviceConversionsValue();

  /**
   * <pre>
   * The number of clicks your ad receives (Clicks) divided by the number
   * of times your ad is shown (Impressions).
   * </pre>
   *
   * <code>optional double ctr = 174;</code>
   * @return Whether the ctr field is set.
   */
  boolean hasCtr();
  /**
   * <pre>
   * The number of clicks your ad receives (Clicks) divided by the number
   * of times your ad is shown (Impressions).
   * </pre>
   *
   * <code>optional double ctr = 174;</code>
   * @return The ctr.
   */
  double getCtr();

  /**
   * <pre>
   * The number of conversions. This only includes conversion actions which
   * include_in_conversions_metric attribute is set to true. If you use
   * conversion-based bidding, your bid strategies will optimize for these
   * conversions.
   * </pre>
   *
   * <code>optional double conversions = 251;</code>
   * @return Whether the conversions field is set.
   */
  boolean hasConversions();
  /**
   * <pre>
   * The number of conversions. This only includes conversion actions which
   * include_in_conversions_metric attribute is set to true. If you use
   * conversion-based bidding, your bid strategies will optimize for these
   * conversions.
   * </pre>
   *
   * <code>optional double conversions = 251;</code>
   * @return The conversions.
   */
  double getConversions();

  /**
   * <pre>
   * The sum of conversion values for the conversions included in the
   * "conversions" field. This metric is useful only if you entered a value for
   * your conversion actions.
   * </pre>
   *
   * <code>optional double conversions_value = 252;</code>
   * @return Whether the conversionsValue field is set.
   */
  boolean hasConversionsValue();
  /**
   * <pre>
   * The sum of conversion values for the conversions included in the
   * "conversions" field. This metric is useful only if you entered a value for
   * your conversion actions.
   * </pre>
   *
   * <code>optional double conversions_value = 252;</code>
   * @return The conversionsValue.
   */
  double getConversionsValue();

  /**
   * <pre>
   * The creative historical quality score.
   * </pre>
   *
   * <code>.google.ads.searchads360.v0.enums.QualityScoreBucketEnum.QualityScoreBucket historical_creative_quality_score = 80;</code>
   * @return The enum numeric value on the wire for historicalCreativeQualityScore.
   */
  int getHistoricalCreativeQualityScoreValue();
  /**
   * <pre>
   * The creative historical quality score.
   * </pre>
   *
   * <code>.google.ads.searchads360.v0.enums.QualityScoreBucketEnum.QualityScoreBucket historical_creative_quality_score = 80;</code>
   * @return The historicalCreativeQualityScore.
   */
  com.google.ads.searchads360.v0.enums.QualityScoreBucketEnum.QualityScoreBucket getHistoricalCreativeQualityScore();

  /**
   * <pre>
   * The quality of historical landing page experience.
   * </pre>
   *
   * <code>.google.ads.searchads360.v0.enums.QualityScoreBucketEnum.QualityScoreBucket historical_landing_page_quality_score = 81;</code>
   * @return The enum numeric value on the wire for historicalLandingPageQualityScore.
   */
  int getHistoricalLandingPageQualityScoreValue();
  /**
   * <pre>
   * The quality of historical landing page experience.
   * </pre>
   *
   * <code>.google.ads.searchads360.v0.enums.QualityScoreBucketEnum.QualityScoreBucket historical_landing_page_quality_score = 81;</code>
   * @return The historicalLandingPageQualityScore.
   */
  com.google.ads.searchads360.v0.enums.QualityScoreBucketEnum.QualityScoreBucket getHistoricalLandingPageQualityScore();

  /**
   * <pre>
   * The historical quality score.
   * </pre>
   *
   * <code>optional int64 historical_quality_score = 216;</code>
   * @return Whether the historicalQualityScore field is set.
   */
  boolean hasHistoricalQualityScore();
  /**
   * <pre>
   * The historical quality score.
   * </pre>
   *
   * <code>optional int64 historical_quality_score = 216;</code>
   * @return The historicalQualityScore.
   */
  long getHistoricalQualityScore();

  /**
   * <pre>
   * The historical search predicted click through rate (CTR).
   * </pre>
   *
   * <code>.google.ads.searchads360.v0.enums.QualityScoreBucketEnum.QualityScoreBucket historical_search_predicted_ctr = 83;</code>
   * @return The enum numeric value on the wire for historicalSearchPredictedCtr.
   */
  int getHistoricalSearchPredictedCtrValue();
  /**
   * <pre>
   * The historical search predicted click through rate (CTR).
   * </pre>
   *
   * <code>.google.ads.searchads360.v0.enums.QualityScoreBucketEnum.QualityScoreBucket historical_search_predicted_ctr = 83;</code>
   * @return The historicalSearchPredictedCtr.
   */
  com.google.ads.searchads360.v0.enums.QualityScoreBucketEnum.QualityScoreBucket getHistoricalSearchPredictedCtr();

  /**
   * <pre>
   * Count of how often your ad has appeared on a search results page or
   * website on the Google Network.
   * </pre>
   *
   * <code>optional int64 impressions = 221;</code>
   * @return Whether the impressions field is set.
   */
  boolean hasImpressions();
  /**
   * <pre>
   * Count of how often your ad has appeared on a search results page or
   * website on the Google Network.
   * </pre>
   *
   * <code>optional int64 impressions = 221;</code>
   * @return The impressions.
   */
  long getImpressions();

  /**
   * <pre>
   * How often people interact with your ad after it is shown to them.
   * This is the number of interactions divided by the number of times your ad
   * is shown.
   * </pre>
   *
   * <code>optional double interaction_rate = 222;</code>
   * @return Whether the interactionRate field is set.
   */
  boolean hasInteractionRate();
  /**
   * <pre>
   * How often people interact with your ad after it is shown to them.
   * This is the number of interactions divided by the number of times your ad
   * is shown.
   * </pre>
   *
   * <code>optional double interaction_rate = 222;</code>
   * @return The interactionRate.
   */
  double getInteractionRate();

  /**
   * <pre>
   * The number of interactions.
   * An interaction is the main user action associated with an ad format-clicks
   * for text and shopping ads, views for video ads, and so on.
   * </pre>
   *
   * <code>optional int64 interactions = 223;</code>
   * @return Whether the interactions field is set.
   */
  boolean hasInteractions();
  /**
   * <pre>
   * The number of interactions.
   * An interaction is the main user action associated with an ad format-clicks
   * for text and shopping ads, views for video ads, and so on.
   * </pre>
   *
   * <code>optional int64 interactions = 223;</code>
   * @return The interactions.
   */
  long getInteractions();

  /**
   * <pre>
   * The types of payable and free interactions.
   * </pre>
   *
   * <code>repeated .google.ads.searchads360.v0.enums.InteractionEventTypeEnum.InteractionEventType interaction_event_types = 100;</code>
   * @return A list containing the interactionEventTypes.
   */
  java.util.List<com.google.ads.searchads360.v0.enums.InteractionEventTypeEnum.InteractionEventType> getInteractionEventTypesList();
  /**
   * <pre>
   * The types of payable and free interactions.
   * </pre>
   *
   * <code>repeated .google.ads.searchads360.v0.enums.InteractionEventTypeEnum.InteractionEventType interaction_event_types = 100;</code>
   * @return The count of interactionEventTypes.
   */
  int getInteractionEventTypesCount();
  /**
   * <pre>
   * The types of payable and free interactions.
   * </pre>
   *
   * <code>repeated .google.ads.searchads360.v0.enums.InteractionEventTypeEnum.InteractionEventType interaction_event_types = 100;</code>
   * @param index The index of the element to return.
   * @return The interactionEventTypes at the given index.
   */
  com.google.ads.searchads360.v0.enums.InteractionEventTypeEnum.InteractionEventType getInteractionEventTypes(int index);
  /**
   * <pre>
   * The types of payable and free interactions.
   * </pre>
   *
   * <code>repeated .google.ads.searchads360.v0.enums.InteractionEventTypeEnum.InteractionEventType interaction_event_types = 100;</code>
   * @return A list containing the enum numeric values on the wire for interactionEventTypes.
   */
  java.util.List<java.lang.Integer>
  getInteractionEventTypesValueList();
  /**
   * <pre>
   * The types of payable and free interactions.
   * </pre>
   *
   * <code>repeated .google.ads.searchads360.v0.enums.InteractionEventTypeEnum.InteractionEventType interaction_event_types = 100;</code>
   * @param index The index of the value to return.
   * @return The enum numeric value on the wire of interactionEventTypes at the given index.
   */
  int getInteractionEventTypesValue(int index);

  /**
   * <pre>
   * The percentage of clicks filtered out of your total number of clicks
   * (filtered + non-filtered clicks) during the reporting period.
   * </pre>
   *
   * <code>optional double invalid_click_rate = 224;</code>
   * @return Whether the invalidClickRate field is set.
   */
  boolean hasInvalidClickRate();
  /**
   * <pre>
   * The percentage of clicks filtered out of your total number of clicks
   * (filtered + non-filtered clicks) during the reporting period.
   * </pre>
   *
   * <code>optional double invalid_click_rate = 224;</code>
   * @return The invalidClickRate.
   */
  double getInvalidClickRate();

  /**
   * <pre>
   * Number of clicks Google considers illegitimate and doesn't charge you for.
   * </pre>
   *
   * <code>optional int64 invalid_clicks = 225;</code>
   * @return Whether the invalidClicks field is set.
   */
  boolean hasInvalidClicks();
  /**
   * <pre>
   * Number of clicks Google considers illegitimate and doesn't charge you for.
   * </pre>
   *
   * <code>optional int64 invalid_clicks = 225;</code>
   * @return The invalidClicks.
   */
  long getInvalidClicks();

  /**
   * <pre>
   * The percentage of mobile clicks that go to a mobile-friendly page.
   * </pre>
   *
   * <code>optional double mobile_friendly_clicks_percentage = 229;</code>
   * @return Whether the mobileFriendlyClicksPercentage field is set.
   */
  boolean hasMobileFriendlyClicksPercentage();
  /**
   * <pre>
   * The percentage of mobile clicks that go to a mobile-friendly page.
   * </pre>
   *
   * <code>optional double mobile_friendly_clicks_percentage = 229;</code>
   * @return The mobileFriendlyClicksPercentage.
   */
  double getMobileFriendlyClicksPercentage();

  /**
   * <pre>
   * The percentage of the customer's Shopping or Search ad impressions that are
   * shown in the most prominent Shopping position. See
   * https://support.google.com/sa360/answer/9566729
   * for details. Any value below 0.1 is reported as 0.0999.
   * </pre>
   *
   * <code>optional double search_absolute_top_impression_share = 136;</code>
   * @return Whether the searchAbsoluteTopImpressionShare field is set.
   */
  boolean hasSearchAbsoluteTopImpressionShare();
  /**
   * <pre>
   * The percentage of the customer's Shopping or Search ad impressions that are
   * shown in the most prominent Shopping position. See
   * https://support.google.com/sa360/answer/9566729
   * for details. Any value below 0.1 is reported as 0.0999.
   * </pre>
   *
   * <code>optional double search_absolute_top_impression_share = 136;</code>
   * @return The searchAbsoluteTopImpressionShare.
   */
  double getSearchAbsoluteTopImpressionShare();

  /**
   * <pre>
   * The number estimating how often your ad wasn't the very first ad above the
   * organic search results due to a low budget. Note: Search
   * budget lost absolute top impression share is reported in the range of 0 to
   * 0.9. Any value above 0.9 is reported as 0.9001.
   * </pre>
   *
   * <code>optional double search_budget_lost_absolute_top_impression_share = 137;</code>
   * @return Whether the searchBudgetLostAbsoluteTopImpressionShare field is set.
   */
  boolean hasSearchBudgetLostAbsoluteTopImpressionShare();
  /**
   * <pre>
   * The number estimating how often your ad wasn't the very first ad above the
   * organic search results due to a low budget. Note: Search
   * budget lost absolute top impression share is reported in the range of 0 to
   * 0.9. Any value above 0.9 is reported as 0.9001.
   * </pre>
   *
   * <code>optional double search_budget_lost_absolute_top_impression_share = 137;</code>
   * @return The searchBudgetLostAbsoluteTopImpressionShare.
   */
  double getSearchBudgetLostAbsoluteTopImpressionShare();

  /**
   * <pre>
   * The estimated percent of times that your ad was eligible to show on the
   * Search Network but didn't because your budget was too low. Note: Search
   * budget lost impression share is reported in the range of 0 to 0.9. Any
   * value above 0.9 is reported as 0.9001.
   * </pre>
   *
   * <code>optional double search_budget_lost_impression_share = 138;</code>
   * @return Whether the searchBudgetLostImpressionShare field is set.
   */
  boolean hasSearchBudgetLostImpressionShare();
  /**
   * <pre>
   * The estimated percent of times that your ad was eligible to show on the
   * Search Network but didn't because your budget was too low. Note: Search
   * budget lost impression share is reported in the range of 0 to 0.9. Any
   * value above 0.9 is reported as 0.9001.
   * </pre>
   *
   * <code>optional double search_budget_lost_impression_share = 138;</code>
   * @return The searchBudgetLostImpressionShare.
   */
  double getSearchBudgetLostImpressionShare();

  /**
   * <pre>
   * The number estimating how often your ad didn't show anywhere above the
   * organic search results due to a low budget. Note: Search
   * budget lost top impression share is reported in the range of 0 to 0.9. Any
   * value above 0.9 is reported as 0.9001.
   * </pre>
   *
   * <code>optional double search_budget_lost_top_impression_share = 139;</code>
   * @return Whether the searchBudgetLostTopImpressionShare field is set.
   */
  boolean hasSearchBudgetLostTopImpressionShare();
  /**
   * <pre>
   * The number estimating how often your ad didn't show anywhere above the
   * organic search results due to a low budget. Note: Search
   * budget lost top impression share is reported in the range of 0 to 0.9. Any
   * value above 0.9 is reported as 0.9001.
   * </pre>
   *
   * <code>optional double search_budget_lost_top_impression_share = 139;</code>
   * @return The searchBudgetLostTopImpressionShare.
   */
  double getSearchBudgetLostTopImpressionShare();

  /**
   * <pre>
   * The number of clicks you've received on the Search Network
   * divided by the estimated number of clicks you were eligible to receive.
   * Note: Search click share is reported in the range of 0.1 to 1. Any value
   * below 0.1 is reported as 0.0999.
   * </pre>
   *
   * <code>optional double search_click_share = 140;</code>
   * @return Whether the searchClickShare field is set.
   */
  boolean hasSearchClickShare();
  /**
   * <pre>
   * The number of clicks you've received on the Search Network
   * divided by the estimated number of clicks you were eligible to receive.
   * Note: Search click share is reported in the range of 0.1 to 1. Any value
   * below 0.1 is reported as 0.0999.
   * </pre>
   *
   * <code>optional double search_click_share = 140;</code>
   * @return The searchClickShare.
   */
  double getSearchClickShare();

  /**
   * <pre>
   * The impressions you've received divided by the estimated number of
   * impressions you were eligible to receive on the Search Network for search
   * terms that matched your keywords exactly (or were close variants of your
   * keyword), regardless of your keyword match types. Note: Search exact match
   * impression share is reported in the range of 0.1 to 1. Any value below 0.1
   * is reported as 0.0999.
   * </pre>
   *
   * <code>optional double search_exact_match_impression_share = 141;</code>
   * @return Whether the searchExactMatchImpressionShare field is set.
   */
  boolean hasSearchExactMatchImpressionShare();
  /**
   * <pre>
   * The impressions you've received divided by the estimated number of
   * impressions you were eligible to receive on the Search Network for search
   * terms that matched your keywords exactly (or were close variants of your
   * keyword), regardless of your keyword match types. Note: Search exact match
   * impression share is reported in the range of 0.1 to 1. Any value below 0.1
   * is reported as 0.0999.
   * </pre>
   *
   * <code>optional double search_exact_match_impression_share = 141;</code>
   * @return The searchExactMatchImpressionShare.
   */
  double getSearchExactMatchImpressionShare();

  /**
   * <pre>
   * The impressions you've received on the Search Network divided
   * by the estimated number of impressions you were eligible to receive.
   * Note: Search impression share is reported in the range of 0.1 to 1. Any
   * value below 0.1 is reported as 0.0999.
   * </pre>
   *
   * <code>optional double search_impression_share = 142;</code>
   * @return Whether the searchImpressionShare field is set.
   */
  boolean hasSearchImpressionShare();
  /**
   * <pre>
   * The impressions you've received on the Search Network divided
   * by the estimated number of impressions you were eligible to receive.
   * Note: Search impression share is reported in the range of 0.1 to 1. Any
   * value below 0.1 is reported as 0.0999.
   * </pre>
   *
   * <code>optional double search_impression_share = 142;</code>
   * @return The searchImpressionShare.
   */
  double getSearchImpressionShare();

  /**
   * <pre>
   * The number estimating how often your ad wasn't the very first ad above the
   * organic search results due to poor Ad Rank.
   * Note: Search rank lost absolute top impression share is reported in the
   * range of 0 to 0.9. Any value above 0.9 is reported as 0.9001.
   * </pre>
   *
   * <code>optional double search_rank_lost_absolute_top_impression_share = 143;</code>
   * @return Whether the searchRankLostAbsoluteTopImpressionShare field is set.
   */
  boolean hasSearchRankLostAbsoluteTopImpressionShare();
  /**
   * <pre>
   * The number estimating how often your ad wasn't the very first ad above the
   * organic search results due to poor Ad Rank.
   * Note: Search rank lost absolute top impression share is reported in the
   * range of 0 to 0.9. Any value above 0.9 is reported as 0.9001.
   * </pre>
   *
   * <code>optional double search_rank_lost_absolute_top_impression_share = 143;</code>
   * @return The searchRankLostAbsoluteTopImpressionShare.
   */
  double getSearchRankLostAbsoluteTopImpressionShare();

  /**
   * <pre>
   * The estimated percentage of impressions on the Search Network
   * that your ads didn't receive due to poor Ad Rank.
   * Note: Search rank lost impression share is reported in the range of 0 to
   * 0.9. Any value above 0.9 is reported as 0.9001.
   * </pre>
   *
   * <code>optional double search_rank_lost_impression_share = 144;</code>
   * @return Whether the searchRankLostImpressionShare field is set.
   */
  boolean hasSearchRankLostImpressionShare();
  /**
   * <pre>
   * The estimated percentage of impressions on the Search Network
   * that your ads didn't receive due to poor Ad Rank.
   * Note: Search rank lost impression share is reported in the range of 0 to
   * 0.9. Any value above 0.9 is reported as 0.9001.
   * </pre>
   *
   * <code>optional double search_rank_lost_impression_share = 144;</code>
   * @return The searchRankLostImpressionShare.
   */
  double getSearchRankLostImpressionShare();

  /**
   * <pre>
   * The number estimating how often your ad didn't show anywhere above the
   * organic search results due to poor Ad Rank.
   * Note: Search rank lost top impression share is reported in the range of 0
   * to 0.9. Any value above 0.9 is reported as 0.9001.
   * </pre>
   *
   * <code>optional double search_rank_lost_top_impression_share = 145;</code>
   * @return Whether the searchRankLostTopImpressionShare field is set.
   */
  boolean hasSearchRankLostTopImpressionShare();
  /**
   * <pre>
   * The number estimating how often your ad didn't show anywhere above the
   * organic search results due to poor Ad Rank.
   * Note: Search rank lost top impression share is reported in the range of 0
   * to 0.9. Any value above 0.9 is reported as 0.9001.
   * </pre>
   *
   * <code>optional double search_rank_lost_top_impression_share = 145;</code>
   * @return The searchRankLostTopImpressionShare.
   */
  double getSearchRankLostTopImpressionShare();

  /**
   * <pre>
   * The impressions you've received in the top location (anywhere above the
   * organic search results) compared to the estimated number of impressions you
   * were eligible to receive in the top location.
   * Note: Search top impression share is reported in the range of 0.1 to 1. Any
   * value below 0.1 is reported as 0.0999.
   * </pre>
   *
   * <code>optional double search_top_impression_share = 146;</code>
   * @return Whether the searchTopImpressionShare field is set.
   */
  boolean hasSearchTopImpressionShare();
  /**
   * <pre>
   * The impressions you've received in the top location (anywhere above the
   * organic search results) compared to the estimated number of impressions you
   * were eligible to receive in the top location.
   * Note: Search top impression share is reported in the range of 0.1 to 1. Any
   * value below 0.1 is reported as 0.0999.
   * </pre>
   *
   * <code>optional double search_top_impression_share = 146;</code>
   * @return The searchTopImpressionShare.
   */
  double getSearchTopImpressionShare();

  /**
   * <pre>
   * The percent of your ad impressions that are shown anywhere above the
   * organic search results.
   * </pre>
   *
   * <code>optional double top_impression_percentage = 148;</code>
   * @return Whether the topImpressionPercentage field is set.
   */
  boolean hasTopImpressionPercentage();
  /**
   * <pre>
   * The percent of your ad impressions that are shown anywhere above the
   * organic search results.
   * </pre>
   *
   * <code>optional double top_impression_percentage = 148;</code>
   * @return The topImpressionPercentage.
   */
  double getTopImpressionPercentage();

  /**
   * <pre>
   * The value of all conversions divided by the number of all conversions.
   * </pre>
   *
   * <code>optional double value_per_all_conversions = 150;</code>
   * @return Whether the valuePerAllConversions field is set.
   */
  boolean hasValuePerAllConversions();
  /**
   * <pre>
   * The value of all conversions divided by the number of all conversions.
   * </pre>
   *
   * <code>optional double value_per_all_conversions = 150;</code>
   * @return The valuePerAllConversions.
   */
  double getValuePerAllConversions();

  /**
   * <pre>
   * The value of all conversions divided by the number of all conversions. When
   * this column is selected with date, the values in date column means the
   * conversion date. Details for the by_conversion_date columns are available
   * at https://support.google.com/sa360/answer/9250611.
   * </pre>
   *
   * <code>optional double value_per_all_conversions_by_conversion_date = 244;</code>
   * @return Whether the valuePerAllConversionsByConversionDate field is set.
   */
  boolean hasValuePerAllConversionsByConversionDate();
  /**
   * <pre>
   * The value of all conversions divided by the number of all conversions. When
   * this column is selected with date, the values in date column means the
   * conversion date. Details for the by_conversion_date columns are available
   * at https://support.google.com/sa360/answer/9250611.
   * </pre>
   *
   * <code>optional double value_per_all_conversions_by_conversion_date = 244;</code>
   * @return The valuePerAllConversionsByConversionDate.
   */
  double getValuePerAllConversionsByConversionDate();

  /**
   * <pre>
   * The value of biddable conversion divided by the number of biddable
   * conversions. Shows how much, on average, each of the biddable conversions
   * is worth.
   * </pre>
   *
   * <code>optional double value_per_conversion = 287;</code>
   * @return Whether the valuePerConversion field is set.
   */
  boolean hasValuePerConversion();
  /**
   * <pre>
   * The value of biddable conversion divided by the number of biddable
   * conversions. Shows how much, on average, each of the biddable conversions
   * is worth.
   * </pre>
   *
   * <code>optional double value_per_conversion = 287;</code>
   * @return The valuePerConversion.
   */
  double getValuePerConversion();

  /**
   * <pre>
   * Biddable conversions value by conversion date divided by biddable
   * conversions by conversion date. Shows how much, on average, each of the
   * biddable conversions is worth (by conversion date). When this column is
   * selected with date, the values in date column means the conversion date.
   * </pre>
   *
   * <code>optional double value_per_conversions_by_conversion_date = 285;</code>
   * @return Whether the valuePerConversionsByConversionDate field is set.
   */
  boolean hasValuePerConversionsByConversionDate();
  /**
   * <pre>
   * Biddable conversions value by conversion date divided by biddable
   * conversions by conversion date. Shows how much, on average, each of the
   * biddable conversions is worth (by conversion date). When this column is
   * selected with date, the values in date column means the conversion date.
   * </pre>
   *
   * <code>optional double value_per_conversions_by_conversion_date = 285;</code>
   * @return The valuePerConversionsByConversionDate.
   */
  double getValuePerConversionsByConversionDate();

  /**
   * <pre>
   * The total number of view-through conversions.
   * These happen when a customer sees an image or rich media ad, then later
   * completes a conversion on your site without interacting with (for example,
   * clicking on) another ad.
   * </pre>
   *
   * <code>optional int64 client_account_view_through_conversions = 155;</code>
   * @return Whether the clientAccountViewThroughConversions field is set.
   */
  boolean hasClientAccountViewThroughConversions();
  /**
   * <pre>
   * The total number of view-through conversions.
   * These happen when a customer sees an image or rich media ad, then later
   * completes a conversion on your site without interacting with (for example,
   * clicking on) another ad.
   * </pre>
   *
   * <code>optional int64 client_account_view_through_conversions = 155;</code>
   * @return The clientAccountViewThroughConversions.
   */
  long getClientAccountViewThroughConversions();
}
