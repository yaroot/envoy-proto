// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: google/ads/searchads360/v0/common/metrics.proto

package com.google.ads.searchads360.v0.common;

/**
 * <pre>
 * Metrics data.
 * </pre>
 *
 * Protobuf type {@code google.ads.searchads360.v0.common.Metrics}
 */
public final class Metrics extends
    com.google.protobuf.GeneratedMessageV3 implements
    // @@protoc_insertion_point(message_implements:google.ads.searchads360.v0.common.Metrics)
    MetricsOrBuilder {
private static final long serialVersionUID = 0L;
  // Use Metrics.newBuilder() to construct.
  private Metrics(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
    super(builder);
  }
  private Metrics() {
    historicalCreativeQualityScore_ = 0;
    historicalLandingPageQualityScore_ = 0;
    historicalSearchPredictedCtr_ = 0;
    interactionEventTypes_ = java.util.Collections.emptyList();
  }

  @java.lang.Override
  @SuppressWarnings({"unused"})
  protected java.lang.Object newInstance(
      UnusedPrivateParameter unused) {
    return new Metrics();
  }

  @java.lang.Override
  public final com.google.protobuf.UnknownFieldSet
  getUnknownFields() {
    return this.unknownFields;
  }
  public static final com.google.protobuf.Descriptors.Descriptor
      getDescriptor() {
    return com.google.ads.searchads360.v0.common.MetricsProto.internal_static_google_ads_searchads360_v0_common_Metrics_descriptor;
  }

  @java.lang.Override
  protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internalGetFieldAccessorTable() {
    return com.google.ads.searchads360.v0.common.MetricsProto.internal_static_google_ads_searchads360_v0_common_Metrics_fieldAccessorTable
        .ensureFieldAccessorsInitialized(
            com.google.ads.searchads360.v0.common.Metrics.class, com.google.ads.searchads360.v0.common.Metrics.Builder.class);
  }

  private int bitField0_;
  private int bitField1_;
  public static final int ABSOLUTE_TOP_IMPRESSION_PERCENTAGE_FIELD_NUMBER = 183;
  private double absoluteTopImpressionPercentage_ = 0D;
  /**
   * <pre>
   * The percent of your ad impressions that are shown as the very first ad
   * above the organic search results.
   * </pre>
   *
   * <code>optional double absolute_top_impression_percentage = 183;</code>
   * @return Whether the absoluteTopImpressionPercentage field is set.
   */
  @java.lang.Override
  public boolean hasAbsoluteTopImpressionPercentage() {
    return ((bitField0_ & 0x00000001) != 0);
  }
  /**
   * <pre>
   * The percent of your ad impressions that are shown as the very first ad
   * above the organic search results.
   * </pre>
   *
   * <code>optional double absolute_top_impression_percentage = 183;</code>
   * @return The absoluteTopImpressionPercentage.
   */
  @java.lang.Override
  public double getAbsoluteTopImpressionPercentage() {
    return absoluteTopImpressionPercentage_;
  }

  public static final int ALL_CONVERSIONS_FROM_INTERACTIONS_RATE_FIELD_NUMBER = 191;
  private double allConversionsFromInteractionsRate_ = 0D;
  /**
   * <pre>
   * All conversions from interactions (as oppose to view through conversions)
   * divided by the number of ad interactions.
   * </pre>
   *
   * <code>optional double all_conversions_from_interactions_rate = 191;</code>
   * @return Whether the allConversionsFromInteractionsRate field is set.
   */
  @java.lang.Override
  public boolean hasAllConversionsFromInteractionsRate() {
    return ((bitField0_ & 0x00000002) != 0);
  }
  /**
   * <pre>
   * All conversions from interactions (as oppose to view through conversions)
   * divided by the number of ad interactions.
   * </pre>
   *
   * <code>optional double all_conversions_from_interactions_rate = 191;</code>
   * @return The allConversionsFromInteractionsRate.
   */
  @java.lang.Override
  public double getAllConversionsFromInteractionsRate() {
    return allConversionsFromInteractionsRate_;
  }

  public static final int ALL_CONVERSIONS_VALUE_FIELD_NUMBER = 192;
  private double allConversionsValue_ = 0D;
  /**
   * <pre>
   * The value of all conversions.
   * </pre>
   *
   * <code>optional double all_conversions_value = 192;</code>
   * @return Whether the allConversionsValue field is set.
   */
  @java.lang.Override
  public boolean hasAllConversionsValue() {
    return ((bitField0_ & 0x00000004) != 0);
  }
  /**
   * <pre>
   * The value of all conversions.
   * </pre>
   *
   * <code>optional double all_conversions_value = 192;</code>
   * @return The allConversionsValue.
   */
  @java.lang.Override
  public double getAllConversionsValue() {
    return allConversionsValue_;
  }

  public static final int ALL_CONVERSIONS_VALUE_BY_CONVERSION_DATE_FIELD_NUMBER = 240;
  private double allConversionsValueByConversionDate_ = 0D;
  /**
   * <pre>
   * The value of all conversions. When this column is selected with date, the
   * values in date column means the conversion date. Details for the
   * by_conversion_date columns are available at
   * https://support.google.com/sa360/answer/9250611.
   * </pre>
   *
   * <code>double all_conversions_value_by_conversion_date = 240;</code>
   * @return The allConversionsValueByConversionDate.
   */
  @java.lang.Override
  public double getAllConversionsValueByConversionDate() {
    return allConversionsValueByConversionDate_;
  }

  public static final int ALL_CONVERSIONS_FIELD_NUMBER = 193;
  private double allConversions_ = 0D;
  /**
   * <pre>
   * The total number of conversions. This includes all conversions regardless
   * of the value of include_in_conversions_metric.
   * </pre>
   *
   * <code>optional double all_conversions = 193;</code>
   * @return Whether the allConversions field is set.
   */
  @java.lang.Override
  public boolean hasAllConversions() {
    return ((bitField0_ & 0x00000008) != 0);
  }
  /**
   * <pre>
   * The total number of conversions. This includes all conversions regardless
   * of the value of include_in_conversions_metric.
   * </pre>
   *
   * <code>optional double all_conversions = 193;</code>
   * @return The allConversions.
   */
  @java.lang.Override
  public double getAllConversions() {
    return allConversions_;
  }

  public static final int ALL_CONVERSIONS_BY_CONVERSION_DATE_FIELD_NUMBER = 241;
  private double allConversionsByConversionDate_ = 0D;
  /**
   * <pre>
   * The total number of conversions. This includes all conversions regardless
   * of the value of include_in_conversions_metric. When this column is selected
   * with date, the values in date column means the conversion date. Details for
   * the by_conversion_date columns are available at
   * https://support.google.com/sa360/answer/9250611.
   * </pre>
   *
   * <code>double all_conversions_by_conversion_date = 241;</code>
   * @return The allConversionsByConversionDate.
   */
  @java.lang.Override
  public double getAllConversionsByConversionDate() {
    return allConversionsByConversionDate_;
  }

  public static final int ALL_CONVERSIONS_VALUE_PER_COST_FIELD_NUMBER = 194;
  private double allConversionsValuePerCost_ = 0D;
  /**
   * <pre>
   * The value of all conversions divided by the total cost of ad interactions
   * (such as clicks for text ads or views for video ads).
   * </pre>
   *
   * <code>optional double all_conversions_value_per_cost = 194;</code>
   * @return Whether the allConversionsValuePerCost field is set.
   */
  @java.lang.Override
  public boolean hasAllConversionsValuePerCost() {
    return ((bitField0_ & 0x00000010) != 0);
  }
  /**
   * <pre>
   * The value of all conversions divided by the total cost of ad interactions
   * (such as clicks for text ads or views for video ads).
   * </pre>
   *
   * <code>optional double all_conversions_value_per_cost = 194;</code>
   * @return The allConversionsValuePerCost.
   */
  @java.lang.Override
  public double getAllConversionsValuePerCost() {
    return allConversionsValuePerCost_;
  }

  public static final int ALL_CONVERSIONS_FROM_CLICK_TO_CALL_FIELD_NUMBER = 195;
  private double allConversionsFromClickToCall_ = 0D;
  /**
   * <pre>
   * The number of times people clicked the "Call" button to call a store during
   * or after clicking an ad. This number doesn't include whether or not calls
   * were connected, or the duration of any calls.
   * This metric applies to feed items only.
   * </pre>
   *
   * <code>optional double all_conversions_from_click_to_call = 195;</code>
   * @return Whether the allConversionsFromClickToCall field is set.
   */
  @java.lang.Override
  public boolean hasAllConversionsFromClickToCall() {
    return ((bitField0_ & 0x00000020) != 0);
  }
  /**
   * <pre>
   * The number of times people clicked the "Call" button to call a store during
   * or after clicking an ad. This number doesn't include whether or not calls
   * were connected, or the duration of any calls.
   * This metric applies to feed items only.
   * </pre>
   *
   * <code>optional double all_conversions_from_click_to_call = 195;</code>
   * @return The allConversionsFromClickToCall.
   */
  @java.lang.Override
  public double getAllConversionsFromClickToCall() {
    return allConversionsFromClickToCall_;
  }

  public static final int ALL_CONVERSIONS_FROM_DIRECTIONS_FIELD_NUMBER = 196;
  private double allConversionsFromDirections_ = 0D;
  /**
   * <pre>
   * The number of times people clicked a "Get directions" button to navigate to
   * a store after clicking an ad.
   * This metric applies to feed items only.
   * </pre>
   *
   * <code>optional double all_conversions_from_directions = 196;</code>
   * @return Whether the allConversionsFromDirections field is set.
   */
  @java.lang.Override
  public boolean hasAllConversionsFromDirections() {
    return ((bitField0_ & 0x00000040) != 0);
  }
  /**
   * <pre>
   * The number of times people clicked a "Get directions" button to navigate to
   * a store after clicking an ad.
   * This metric applies to feed items only.
   * </pre>
   *
   * <code>optional double all_conversions_from_directions = 196;</code>
   * @return The allConversionsFromDirections.
   */
  @java.lang.Override
  public double getAllConversionsFromDirections() {
    return allConversionsFromDirections_;
  }

  public static final int ALL_CONVERSIONS_FROM_INTERACTIONS_VALUE_PER_INTERACTION_FIELD_NUMBER = 197;
  private double allConversionsFromInteractionsValuePerInteraction_ = 0D;
  /**
   * <pre>
   * The value of all conversions from interactions divided by the total number
   * of interactions.
   * </pre>
   *
   * <code>optional double all_conversions_from_interactions_value_per_interaction = 197;</code>
   * @return Whether the allConversionsFromInteractionsValuePerInteraction field is set.
   */
  @java.lang.Override
  public boolean hasAllConversionsFromInteractionsValuePerInteraction() {
    return ((bitField0_ & 0x00000080) != 0);
  }
  /**
   * <pre>
   * The value of all conversions from interactions divided by the total number
   * of interactions.
   * </pre>
   *
   * <code>optional double all_conversions_from_interactions_value_per_interaction = 197;</code>
   * @return The allConversionsFromInteractionsValuePerInteraction.
   */
  @java.lang.Override
  public double getAllConversionsFromInteractionsValuePerInteraction() {
    return allConversionsFromInteractionsValuePerInteraction_;
  }

  public static final int ALL_CONVERSIONS_FROM_MENU_FIELD_NUMBER = 198;
  private double allConversionsFromMenu_ = 0D;
  /**
   * <pre>
   * The number of times people clicked a link to view a store's menu after
   * clicking an ad.
   * This metric applies to feed items only.
   * </pre>
   *
   * <code>optional double all_conversions_from_menu = 198;</code>
   * @return Whether the allConversionsFromMenu field is set.
   */
  @java.lang.Override
  public boolean hasAllConversionsFromMenu() {
    return ((bitField0_ & 0x00000100) != 0);
  }
  /**
   * <pre>
   * The number of times people clicked a link to view a store's menu after
   * clicking an ad.
   * This metric applies to feed items only.
   * </pre>
   *
   * <code>optional double all_conversions_from_menu = 198;</code>
   * @return The allConversionsFromMenu.
   */
  @java.lang.Override
  public double getAllConversionsFromMenu() {
    return allConversionsFromMenu_;
  }

  public static final int ALL_CONVERSIONS_FROM_ORDER_FIELD_NUMBER = 199;
  private double allConversionsFromOrder_ = 0D;
  /**
   * <pre>
   * The number of times people placed an order at a store after clicking an ad.
   * This metric applies to feed items only.
   * </pre>
   *
   * <code>optional double all_conversions_from_order = 199;</code>
   * @return Whether the allConversionsFromOrder field is set.
   */
  @java.lang.Override
  public boolean hasAllConversionsFromOrder() {
    return ((bitField0_ & 0x00000200) != 0);
  }
  /**
   * <pre>
   * The number of times people placed an order at a store after clicking an ad.
   * This metric applies to feed items only.
   * </pre>
   *
   * <code>optional double all_conversions_from_order = 199;</code>
   * @return The allConversionsFromOrder.
   */
  @java.lang.Override
  public double getAllConversionsFromOrder() {
    return allConversionsFromOrder_;
  }

  public static final int ALL_CONVERSIONS_FROM_OTHER_ENGAGEMENT_FIELD_NUMBER = 200;
  private double allConversionsFromOtherEngagement_ = 0D;
  /**
   * <pre>
   * The number of other conversions (for example, posting a review or saving a
   * location for a store) that occurred after people clicked an ad.
   * This metric applies to feed items only.
   * </pre>
   *
   * <code>optional double all_conversions_from_other_engagement = 200;</code>
   * @return Whether the allConversionsFromOtherEngagement field is set.
   */
  @java.lang.Override
  public boolean hasAllConversionsFromOtherEngagement() {
    return ((bitField0_ & 0x00000400) != 0);
  }
  /**
   * <pre>
   * The number of other conversions (for example, posting a review or saving a
   * location for a store) that occurred after people clicked an ad.
   * This metric applies to feed items only.
   * </pre>
   *
   * <code>optional double all_conversions_from_other_engagement = 200;</code>
   * @return The allConversionsFromOtherEngagement.
   */
  @java.lang.Override
  public double getAllConversionsFromOtherEngagement() {
    return allConversionsFromOtherEngagement_;
  }

  public static final int ALL_CONVERSIONS_FROM_STORE_VISIT_FIELD_NUMBER = 201;
  private double allConversionsFromStoreVisit_ = 0D;
  /**
   * <pre>
   * Estimated number of times people visited a store after clicking an ad.
   * This metric applies to feed items only.
   * </pre>
   *
   * <code>optional double all_conversions_from_store_visit = 201;</code>
   * @return Whether the allConversionsFromStoreVisit field is set.
   */
  @java.lang.Override
  public boolean hasAllConversionsFromStoreVisit() {
    return ((bitField0_ & 0x00000800) != 0);
  }
  /**
   * <pre>
   * Estimated number of times people visited a store after clicking an ad.
   * This metric applies to feed items only.
   * </pre>
   *
   * <code>optional double all_conversions_from_store_visit = 201;</code>
   * @return The allConversionsFromStoreVisit.
   */
  @java.lang.Override
  public double getAllConversionsFromStoreVisit() {
    return allConversionsFromStoreVisit_;
  }

  public static final int ALL_CONVERSIONS_FROM_STORE_WEBSITE_FIELD_NUMBER = 202;
  private double allConversionsFromStoreWebsite_ = 0D;
  /**
   * <pre>
   * The number of times that people were taken to a store's URL after clicking
   * an ad.
   * This metric applies to feed items only.
   * </pre>
   *
   * <code>optional double all_conversions_from_store_website = 202;</code>
   * @return Whether the allConversionsFromStoreWebsite field is set.
   */
  @java.lang.Override
  public boolean hasAllConversionsFromStoreWebsite() {
    return ((bitField0_ & 0x00001000) != 0);
  }
  /**
   * <pre>
   * The number of times that people were taken to a store's URL after clicking
   * an ad.
   * This metric applies to feed items only.
   * </pre>
   *
   * <code>optional double all_conversions_from_store_website = 202;</code>
   * @return The allConversionsFromStoreWebsite.
   */
  @java.lang.Override
  public double getAllConversionsFromStoreWebsite() {
    return allConversionsFromStoreWebsite_;
  }

  public static final int AVERAGE_COST_FIELD_NUMBER = 203;
  private double averageCost_ = 0D;
  /**
   * <pre>
   * The average amount you pay per interaction. This amount is the total cost
   * of your ads divided by the total number of interactions.
   * </pre>
   *
   * <code>optional double average_cost = 203;</code>
   * @return Whether the averageCost field is set.
   */
  @java.lang.Override
  public boolean hasAverageCost() {
    return ((bitField0_ & 0x00002000) != 0);
  }
  /**
   * <pre>
   * The average amount you pay per interaction. This amount is the total cost
   * of your ads divided by the total number of interactions.
   * </pre>
   *
   * <code>optional double average_cost = 203;</code>
   * @return The averageCost.
   */
  @java.lang.Override
  public double getAverageCost() {
    return averageCost_;
  }

  public static final int AVERAGE_CPC_FIELD_NUMBER = 204;
  private double averageCpc_ = 0D;
  /**
   * <pre>
   * The total cost of all clicks divided by the total number of clicks
   * received.
   * </pre>
   *
   * <code>optional double average_cpc = 204;</code>
   * @return Whether the averageCpc field is set.
   */
  @java.lang.Override
  public boolean hasAverageCpc() {
    return ((bitField0_ & 0x00004000) != 0);
  }
  /**
   * <pre>
   * The total cost of all clicks divided by the total number of clicks
   * received.
   * </pre>
   *
   * <code>optional double average_cpc = 204;</code>
   * @return The averageCpc.
   */
  @java.lang.Override
  public double getAverageCpc() {
    return averageCpc_;
  }

  public static final int AVERAGE_CPM_FIELD_NUMBER = 206;
  private double averageCpm_ = 0D;
  /**
   * <pre>
   * Average cost-per-thousand impressions (CPM).
   * </pre>
   *
   * <code>optional double average_cpm = 206;</code>
   * @return Whether the averageCpm field is set.
   */
  @java.lang.Override
  public boolean hasAverageCpm() {
    return ((bitField0_ & 0x00008000) != 0);
  }
  /**
   * <pre>
   * Average cost-per-thousand impressions (CPM).
   * </pre>
   *
   * <code>optional double average_cpm = 206;</code>
   * @return The averageCpm.
   */
  @java.lang.Override
  public double getAverageCpm() {
    return averageCpm_;
  }

  public static final int CLICKS_FIELD_NUMBER = 131;
  private long clicks_ = 0L;
  /**
   * <pre>
   * The number of clicks.
   * </pre>
   *
   * <code>optional int64 clicks = 131;</code>
   * @return Whether the clicks field is set.
   */
  @java.lang.Override
  public boolean hasClicks() {
    return ((bitField0_ & 0x00010000) != 0);
  }
  /**
   * <pre>
   * The number of clicks.
   * </pre>
   *
   * <code>optional int64 clicks = 131;</code>
   * @return The clicks.
   */
  @java.lang.Override
  public long getClicks() {
    return clicks_;
  }

  public static final int CONTENT_BUDGET_LOST_IMPRESSION_SHARE_FIELD_NUMBER = 159;
  private double contentBudgetLostImpressionShare_ = 0D;
  /**
   * <pre>
   * The estimated percent of times that your ad was eligible to show
   * on the Display Network but didn't because your budget was too low.
   * Note: Content budget lost impression share is reported in the range of 0
   * to 0.9. Any value above 0.9 is reported as 0.9001.
   * </pre>
   *
   * <code>optional double content_budget_lost_impression_share = 159;</code>
   * @return Whether the contentBudgetLostImpressionShare field is set.
   */
  @java.lang.Override
  public boolean hasContentBudgetLostImpressionShare() {
    return ((bitField0_ & 0x00020000) != 0);
  }
  /**
   * <pre>
   * The estimated percent of times that your ad was eligible to show
   * on the Display Network but didn't because your budget was too low.
   * Note: Content budget lost impression share is reported in the range of 0
   * to 0.9. Any value above 0.9 is reported as 0.9001.
   * </pre>
   *
   * <code>optional double content_budget_lost_impression_share = 159;</code>
   * @return The contentBudgetLostImpressionShare.
   */
  @java.lang.Override
  public double getContentBudgetLostImpressionShare() {
    return contentBudgetLostImpressionShare_;
  }

  public static final int CONTENT_IMPRESSION_SHARE_FIELD_NUMBER = 160;
  private double contentImpressionShare_ = 0D;
  /**
   * <pre>
   * The impressions you've received on the Display Network divided
   * by the estimated number of impressions you were eligible to receive.
   * Note: Content impression share is reported in the range of 0.1 to 1. Any
   * value below 0.1 is reported as 0.0999.
   * </pre>
   *
   * <code>optional double content_impression_share = 160;</code>
   * @return Whether the contentImpressionShare field is set.
   */
  @java.lang.Override
  public boolean hasContentImpressionShare() {
    return ((bitField0_ & 0x00040000) != 0);
  }
  /**
   * <pre>
   * The impressions you've received on the Display Network divided
   * by the estimated number of impressions you were eligible to receive.
   * Note: Content impression share is reported in the range of 0.1 to 1. Any
   * value below 0.1 is reported as 0.0999.
   * </pre>
   *
   * <code>optional double content_impression_share = 160;</code>
   * @return The contentImpressionShare.
   */
  @java.lang.Override
  public double getContentImpressionShare() {
    return contentImpressionShare_;
  }

  public static final int CONTENT_RANK_LOST_IMPRESSION_SHARE_FIELD_NUMBER = 163;
  private double contentRankLostImpressionShare_ = 0D;
  /**
   * <pre>
   * The estimated percentage of impressions on the Display Network
   * that your ads didn't receive due to poor Ad Rank.
   * Note: Content rank lost impression share is reported in the range of 0
   * to 0.9. Any value above 0.9 is reported as 0.9001.
   * </pre>
   *
   * <code>optional double content_rank_lost_impression_share = 163;</code>
   * @return Whether the contentRankLostImpressionShare field is set.
   */
  @java.lang.Override
  public boolean hasContentRankLostImpressionShare() {
    return ((bitField0_ & 0x00080000) != 0);
  }
  /**
   * <pre>
   * The estimated percentage of impressions on the Display Network
   * that your ads didn't receive due to poor Ad Rank.
   * Note: Content rank lost impression share is reported in the range of 0
   * to 0.9. Any value above 0.9 is reported as 0.9001.
   * </pre>
   *
   * <code>optional double content_rank_lost_impression_share = 163;</code>
   * @return The contentRankLostImpressionShare.
   */
  @java.lang.Override
  public double getContentRankLostImpressionShare() {
    return contentRankLostImpressionShare_;
  }

  public static final int CONVERSIONS_FROM_INTERACTIONS_RATE_FIELD_NUMBER = 284;
  private double conversionsFromInteractionsRate_ = 0D;
  /**
   * <pre>
   * Average biddable conversions (from interaction) per conversion eligible
   * interaction. Shows how often, on average, an ad interaction leads to a
   * biddable conversion.
   * </pre>
   *
   * <code>optional double conversions_from_interactions_rate = 284;</code>
   * @return Whether the conversionsFromInteractionsRate field is set.
   */
  @java.lang.Override
  public boolean hasConversionsFromInteractionsRate() {
    return ((bitField0_ & 0x00100000) != 0);
  }
  /**
   * <pre>
   * Average biddable conversions (from interaction) per conversion eligible
   * interaction. Shows how often, on average, an ad interaction leads to a
   * biddable conversion.
   * </pre>
   *
   * <code>optional double conversions_from_interactions_rate = 284;</code>
   * @return The conversionsFromInteractionsRate.
   */
  @java.lang.Override
  public double getConversionsFromInteractionsRate() {
    return conversionsFromInteractionsRate_;
  }

  public static final int CLIENT_ACCOUNT_CONVERSIONS_VALUE_FIELD_NUMBER = 165;
  private double clientAccountConversionsValue_ = 0D;
  /**
   * <pre>
   * The value of client account conversions. This only
   * includes conversion actions which
   * include_in_client_account_conversions_metric attribute is set to true. If
   * you use conversion-based bidding, your bid strategies will optimize for
   * these conversions.
   * </pre>
   *
   * <code>optional double client_account_conversions_value = 165;</code>
   * @return Whether the clientAccountConversionsValue field is set.
   */
  @java.lang.Override
  public boolean hasClientAccountConversionsValue() {
    return ((bitField0_ & 0x00200000) != 0);
  }
  /**
   * <pre>
   * The value of client account conversions. This only
   * includes conversion actions which
   * include_in_client_account_conversions_metric attribute is set to true. If
   * you use conversion-based bidding, your bid strategies will optimize for
   * these conversions.
   * </pre>
   *
   * <code>optional double client_account_conversions_value = 165;</code>
   * @return The clientAccountConversionsValue.
   */
  @java.lang.Override
  public double getClientAccountConversionsValue() {
    return clientAccountConversionsValue_;
  }

  public static final int CONVERSIONS_VALUE_BY_CONVERSION_DATE_FIELD_NUMBER = 283;
  private double conversionsValueByConversionDate_ = 0D;
  /**
   * <pre>
   * The sum of biddable conversions value by conversion date. When this
   * column is selected with date, the values in date column means the
   * conversion date.
   * </pre>
   *
   * <code>double conversions_value_by_conversion_date = 283;</code>
   * @return The conversionsValueByConversionDate.
   */
  @java.lang.Override
  public double getConversionsValueByConversionDate() {
    return conversionsValueByConversionDate_;
  }

  public static final int CONVERSIONS_VALUE_PER_COST_FIELD_NUMBER = 288;
  private double conversionsValuePerCost_ = 0D;
  /**
   * <pre>
   * The value of biddable conversion divided by the total cost of conversion
   * eligible interactions.
   * </pre>
   *
   * <code>optional double conversions_value_per_cost = 288;</code>
   * @return Whether the conversionsValuePerCost field is set.
   */
  @java.lang.Override
  public boolean hasConversionsValuePerCost() {
    return ((bitField0_ & 0x00400000) != 0);
  }
  /**
   * <pre>
   * The value of biddable conversion divided by the total cost of conversion
   * eligible interactions.
   * </pre>
   *
   * <code>optional double conversions_value_per_cost = 288;</code>
   * @return The conversionsValuePerCost.
   */
  @java.lang.Override
  public double getConversionsValuePerCost() {
    return conversionsValuePerCost_;
  }

  public static final int CONVERSIONS_FROM_INTERACTIONS_VALUE_PER_INTERACTION_FIELD_NUMBER = 167;
  private double conversionsFromInteractionsValuePerInteraction_ = 0D;
  /**
   * <pre>
   * The value of conversions from interactions divided by the number of ad
   * interactions. This only includes conversion actions which
   * include_in_conversions_metric attribute is set to true. If you use
   * conversion-based bidding, your bid strategies will optimize for these
   * conversions.
   * </pre>
   *
   * <code>optional double conversions_from_interactions_value_per_interaction = 167;</code>
   * @return Whether the conversionsFromInteractionsValuePerInteraction field is set.
   */
  @java.lang.Override
  public boolean hasConversionsFromInteractionsValuePerInteraction() {
    return ((bitField0_ & 0x00800000) != 0);
  }
  /**
   * <pre>
   * The value of conversions from interactions divided by the number of ad
   * interactions. This only includes conversion actions which
   * include_in_conversions_metric attribute is set to true. If you use
   * conversion-based bidding, your bid strategies will optimize for these
   * conversions.
   * </pre>
   *
   * <code>optional double conversions_from_interactions_value_per_interaction = 167;</code>
   * @return The conversionsFromInteractionsValuePerInteraction.
   */
  @java.lang.Override
  public double getConversionsFromInteractionsValuePerInteraction() {
    return conversionsFromInteractionsValuePerInteraction_;
  }

  public static final int CLIENT_ACCOUNT_CONVERSIONS_FIELD_NUMBER = 168;
  private double clientAccountConversions_ = 0D;
  /**
   * <pre>
   * The number of client account conversions. This only
   * includes conversion actions which
   * include_in_client_account_conversions_metric attribute is set to true. If
   * you use conversion-based bidding, your bid strategies will optimize for
   * these conversions.
   * </pre>
   *
   * <code>optional double client_account_conversions = 168;</code>
   * @return Whether the clientAccountConversions field is set.
   */
  @java.lang.Override
  public boolean hasClientAccountConversions() {
    return ((bitField0_ & 0x01000000) != 0);
  }
  /**
   * <pre>
   * The number of client account conversions. This only
   * includes conversion actions which
   * include_in_client_account_conversions_metric attribute is set to true. If
   * you use conversion-based bidding, your bid strategies will optimize for
   * these conversions.
   * </pre>
   *
   * <code>optional double client_account_conversions = 168;</code>
   * @return The clientAccountConversions.
   */
  @java.lang.Override
  public double getClientAccountConversions() {
    return clientAccountConversions_;
  }

  public static final int CONVERSIONS_BY_CONVERSION_DATE_FIELD_NUMBER = 282;
  private double conversionsByConversionDate_ = 0D;
  /**
   * <pre>
   * The sum of conversions by conversion date for biddable conversion types.
   * Can be fractional due to attribution modeling. When this column is selected
   * with date, the values in date column means the conversion date.
   * </pre>
   *
   * <code>double conversions_by_conversion_date = 282;</code>
   * @return The conversionsByConversionDate.
   */
  @java.lang.Override
  public double getConversionsByConversionDate() {
    return conversionsByConversionDate_;
  }

  public static final int COST_MICROS_FIELD_NUMBER = 169;
  private long costMicros_ = 0L;
  /**
   * <pre>
   * The sum of your cost-per-click (CPC) and cost-per-thousand impressions
   * (CPM) costs during this period.
   * </pre>
   *
   * <code>optional int64 cost_micros = 169;</code>
   * @return Whether the costMicros field is set.
   */
  @java.lang.Override
  public boolean hasCostMicros() {
    return ((bitField0_ & 0x02000000) != 0);
  }
  /**
   * <pre>
   * The sum of your cost-per-click (CPC) and cost-per-thousand impressions
   * (CPM) costs during this period.
   * </pre>
   *
   * <code>optional int64 cost_micros = 169;</code>
   * @return The costMicros.
   */
  @java.lang.Override
  public long getCostMicros() {
    return costMicros_;
  }

  public static final int COST_PER_ALL_CONVERSIONS_FIELD_NUMBER = 170;
  private double costPerAllConversions_ = 0D;
  /**
   * <pre>
   * The cost of ad interactions divided by all conversions.
   * </pre>
   *
   * <code>optional double cost_per_all_conversions = 170;</code>
   * @return Whether the costPerAllConversions field is set.
   */
  @java.lang.Override
  public boolean hasCostPerAllConversions() {
    return ((bitField0_ & 0x04000000) != 0);
  }
  /**
   * <pre>
   * The cost of ad interactions divided by all conversions.
   * </pre>
   *
   * <code>optional double cost_per_all_conversions = 170;</code>
   * @return The costPerAllConversions.
   */
  @java.lang.Override
  public double getCostPerAllConversions() {
    return costPerAllConversions_;
  }

  public static final int COST_PER_CONVERSION_FIELD_NUMBER = 286;
  private double costPerConversion_ = 0D;
  /**
   * <pre>
   * Average conversion eligible cost per biddable conversion.
   * </pre>
   *
   * <code>optional double cost_per_conversion = 286;</code>
   * @return Whether the costPerConversion field is set.
   */
  @java.lang.Override
  public boolean hasCostPerConversion() {
    return ((bitField0_ & 0x08000000) != 0);
  }
  /**
   * <pre>
   * Average conversion eligible cost per biddable conversion.
   * </pre>
   *
   * <code>optional double cost_per_conversion = 286;</code>
   * @return The costPerConversion.
   */
  @java.lang.Override
  public double getCostPerConversion() {
    return costPerConversion_;
  }

  public static final int COST_PER_CURRENT_MODEL_ATTRIBUTED_CONVERSION_FIELD_NUMBER = 172;
  private double costPerCurrentModelAttributedConversion_ = 0D;
  /**
   * <pre>
   * The cost of ad interactions divided by current model attributed
   * conversions. This only includes conversion actions which
   * include_in_conversions_metric attribute is set to true. If you use
   * conversion-based bidding, your bid strategies will optimize for these
   * conversions.
   * </pre>
   *
   * <code>optional double cost_per_current_model_attributed_conversion = 172;</code>
   * @return Whether the costPerCurrentModelAttributedConversion field is set.
   */
  @java.lang.Override
  public boolean hasCostPerCurrentModelAttributedConversion() {
    return ((bitField0_ & 0x10000000) != 0);
  }
  /**
   * <pre>
   * The cost of ad interactions divided by current model attributed
   * conversions. This only includes conversion actions which
   * include_in_conversions_metric attribute is set to true. If you use
   * conversion-based bidding, your bid strategies will optimize for these
   * conversions.
   * </pre>
   *
   * <code>optional double cost_per_current_model_attributed_conversion = 172;</code>
   * @return The costPerCurrentModelAttributedConversion.
   */
  @java.lang.Override
  public double getCostPerCurrentModelAttributedConversion() {
    return costPerCurrentModelAttributedConversion_;
  }

  public static final int CROSS_DEVICE_CONVERSIONS_FIELD_NUMBER = 173;
  private double crossDeviceConversions_ = 0D;
  /**
   * <pre>
   * Conversions from when a customer clicks on an ad on one device,
   * then converts on a different device or browser.
   * Cross-device conversions are already included in all_conversions.
   * </pre>
   *
   * <code>optional double cross_device_conversions = 173;</code>
   * @return Whether the crossDeviceConversions field is set.
   */
  @java.lang.Override
  public boolean hasCrossDeviceConversions() {
    return ((bitField0_ & 0x20000000) != 0);
  }
  /**
   * <pre>
   * Conversions from when a customer clicks on an ad on one device,
   * then converts on a different device or browser.
   * Cross-device conversions are already included in all_conversions.
   * </pre>
   *
   * <code>optional double cross_device_conversions = 173;</code>
   * @return The crossDeviceConversions.
   */
  @java.lang.Override
  public double getCrossDeviceConversions() {
    return crossDeviceConversions_;
  }

  public static final int CROSS_DEVICE_CONVERSIONS_VALUE_FIELD_NUMBER = 253;
  private double crossDeviceConversionsValue_ = 0D;
  /**
   * <pre>
   * The sum of the value of cross-device conversions.
   * </pre>
   *
   * <code>optional double cross_device_conversions_value = 253;</code>
   * @return Whether the crossDeviceConversionsValue field is set.
   */
  @java.lang.Override
  public boolean hasCrossDeviceConversionsValue() {
    return ((bitField0_ & 0x40000000) != 0);
  }
  /**
   * <pre>
   * The sum of the value of cross-device conversions.
   * </pre>
   *
   * <code>optional double cross_device_conversions_value = 253;</code>
   * @return The crossDeviceConversionsValue.
   */
  @java.lang.Override
  public double getCrossDeviceConversionsValue() {
    return crossDeviceConversionsValue_;
  }

  public static final int CTR_FIELD_NUMBER = 174;
  private double ctr_ = 0D;
  /**
   * <pre>
   * The number of clicks your ad receives (Clicks) divided by the number
   * of times your ad is shown (Impressions).
   * </pre>
   *
   * <code>optional double ctr = 174;</code>
   * @return Whether the ctr field is set.
   */
  @java.lang.Override
  public boolean hasCtr() {
    return ((bitField0_ & 0x80000000) != 0);
  }
  /**
   * <pre>
   * The number of clicks your ad receives (Clicks) divided by the number
   * of times your ad is shown (Impressions).
   * </pre>
   *
   * <code>optional double ctr = 174;</code>
   * @return The ctr.
   */
  @java.lang.Override
  public double getCtr() {
    return ctr_;
  }

  public static final int CONVERSIONS_FIELD_NUMBER = 251;
  private double conversions_ = 0D;
  /**
   * <pre>
   * The number of conversions. This only includes conversion actions which
   * include_in_conversions_metric attribute is set to true. If you use
   * conversion-based bidding, your bid strategies will optimize for these
   * conversions.
   * </pre>
   *
   * <code>optional double conversions = 251;</code>
   * @return Whether the conversions field is set.
   */
  @java.lang.Override
  public boolean hasConversions() {
    return ((bitField1_ & 0x00000001) != 0);
  }
  /**
   * <pre>
   * The number of conversions. This only includes conversion actions which
   * include_in_conversions_metric attribute is set to true. If you use
   * conversion-based bidding, your bid strategies will optimize for these
   * conversions.
   * </pre>
   *
   * <code>optional double conversions = 251;</code>
   * @return The conversions.
   */
  @java.lang.Override
  public double getConversions() {
    return conversions_;
  }

  public static final int CONVERSIONS_VALUE_FIELD_NUMBER = 252;
  private double conversionsValue_ = 0D;
  /**
   * <pre>
   * The sum of conversion values for the conversions included in the
   * "conversions" field. This metric is useful only if you entered a value for
   * your conversion actions.
   * </pre>
   *
   * <code>optional double conversions_value = 252;</code>
   * @return Whether the conversionsValue field is set.
   */
  @java.lang.Override
  public boolean hasConversionsValue() {
    return ((bitField1_ & 0x00000002) != 0);
  }
  /**
   * <pre>
   * The sum of conversion values for the conversions included in the
   * "conversions" field. This metric is useful only if you entered a value for
   * your conversion actions.
   * </pre>
   *
   * <code>optional double conversions_value = 252;</code>
   * @return The conversionsValue.
   */
  @java.lang.Override
  public double getConversionsValue() {
    return conversionsValue_;
  }

  public static final int HISTORICAL_CREATIVE_QUALITY_SCORE_FIELD_NUMBER = 80;
  private int historicalCreativeQualityScore_ = 0;
  /**
   * <pre>
   * The creative historical quality score.
   * </pre>
   *
   * <code>.google.ads.searchads360.v0.enums.QualityScoreBucketEnum.QualityScoreBucket historical_creative_quality_score = 80;</code>
   * @return The enum numeric value on the wire for historicalCreativeQualityScore.
   */
  @java.lang.Override public int getHistoricalCreativeQualityScoreValue() {
    return historicalCreativeQualityScore_;
  }
  /**
   * <pre>
   * The creative historical quality score.
   * </pre>
   *
   * <code>.google.ads.searchads360.v0.enums.QualityScoreBucketEnum.QualityScoreBucket historical_creative_quality_score = 80;</code>
   * @return The historicalCreativeQualityScore.
   */
  @java.lang.Override public com.google.ads.searchads360.v0.enums.QualityScoreBucketEnum.QualityScoreBucket getHistoricalCreativeQualityScore() {
    com.google.ads.searchads360.v0.enums.QualityScoreBucketEnum.QualityScoreBucket result = com.google.ads.searchads360.v0.enums.QualityScoreBucketEnum.QualityScoreBucket.forNumber(historicalCreativeQualityScore_);
    return result == null ? com.google.ads.searchads360.v0.enums.QualityScoreBucketEnum.QualityScoreBucket.UNRECOGNIZED : result;
  }

  public static final int HISTORICAL_LANDING_PAGE_QUALITY_SCORE_FIELD_NUMBER = 81;
  private int historicalLandingPageQualityScore_ = 0;
  /**
   * <pre>
   * The quality of historical landing page experience.
   * </pre>
   *
   * <code>.google.ads.searchads360.v0.enums.QualityScoreBucketEnum.QualityScoreBucket historical_landing_page_quality_score = 81;</code>
   * @return The enum numeric value on the wire for historicalLandingPageQualityScore.
   */
  @java.lang.Override public int getHistoricalLandingPageQualityScoreValue() {
    return historicalLandingPageQualityScore_;
  }
  /**
   * <pre>
   * The quality of historical landing page experience.
   * </pre>
   *
   * <code>.google.ads.searchads360.v0.enums.QualityScoreBucketEnum.QualityScoreBucket historical_landing_page_quality_score = 81;</code>
   * @return The historicalLandingPageQualityScore.
   */
  @java.lang.Override public com.google.ads.searchads360.v0.enums.QualityScoreBucketEnum.QualityScoreBucket getHistoricalLandingPageQualityScore() {
    com.google.ads.searchads360.v0.enums.QualityScoreBucketEnum.QualityScoreBucket result = com.google.ads.searchads360.v0.enums.QualityScoreBucketEnum.QualityScoreBucket.forNumber(historicalLandingPageQualityScore_);
    return result == null ? com.google.ads.searchads360.v0.enums.QualityScoreBucketEnum.QualityScoreBucket.UNRECOGNIZED : result;
  }

  public static final int HISTORICAL_QUALITY_SCORE_FIELD_NUMBER = 216;
  private long historicalQualityScore_ = 0L;
  /**
   * <pre>
   * The historical quality score.
   * </pre>
   *
   * <code>optional int64 historical_quality_score = 216;</code>
   * @return Whether the historicalQualityScore field is set.
   */
  @java.lang.Override
  public boolean hasHistoricalQualityScore() {
    return ((bitField1_ & 0x00000004) != 0);
  }
  /**
   * <pre>
   * The historical quality score.
   * </pre>
   *
   * <code>optional int64 historical_quality_score = 216;</code>
   * @return The historicalQualityScore.
   */
  @java.lang.Override
  public long getHistoricalQualityScore() {
    return historicalQualityScore_;
  }

  public static final int HISTORICAL_SEARCH_PREDICTED_CTR_FIELD_NUMBER = 83;
  private int historicalSearchPredictedCtr_ = 0;
  /**
   * <pre>
   * The historical search predicted click through rate (CTR).
   * </pre>
   *
   * <code>.google.ads.searchads360.v0.enums.QualityScoreBucketEnum.QualityScoreBucket historical_search_predicted_ctr = 83;</code>
   * @return The enum numeric value on the wire for historicalSearchPredictedCtr.
   */
  @java.lang.Override public int getHistoricalSearchPredictedCtrValue() {
    return historicalSearchPredictedCtr_;
  }
  /**
   * <pre>
   * The historical search predicted click through rate (CTR).
   * </pre>
   *
   * <code>.google.ads.searchads360.v0.enums.QualityScoreBucketEnum.QualityScoreBucket historical_search_predicted_ctr = 83;</code>
   * @return The historicalSearchPredictedCtr.
   */
  @java.lang.Override public com.google.ads.searchads360.v0.enums.QualityScoreBucketEnum.QualityScoreBucket getHistoricalSearchPredictedCtr() {
    com.google.ads.searchads360.v0.enums.QualityScoreBucketEnum.QualityScoreBucket result = com.google.ads.searchads360.v0.enums.QualityScoreBucketEnum.QualityScoreBucket.forNumber(historicalSearchPredictedCtr_);
    return result == null ? com.google.ads.searchads360.v0.enums.QualityScoreBucketEnum.QualityScoreBucket.UNRECOGNIZED : result;
  }

  public static final int IMPRESSIONS_FIELD_NUMBER = 221;
  private long impressions_ = 0L;
  /**
   * <pre>
   * Count of how often your ad has appeared on a search results page or
   * website on the Google Network.
   * </pre>
   *
   * <code>optional int64 impressions = 221;</code>
   * @return Whether the impressions field is set.
   */
  @java.lang.Override
  public boolean hasImpressions() {
    return ((bitField1_ & 0x00000008) != 0);
  }
  /**
   * <pre>
   * Count of how often your ad has appeared on a search results page or
   * website on the Google Network.
   * </pre>
   *
   * <code>optional int64 impressions = 221;</code>
   * @return The impressions.
   */
  @java.lang.Override
  public long getImpressions() {
    return impressions_;
  }

  public static final int INTERACTION_RATE_FIELD_NUMBER = 222;
  private double interactionRate_ = 0D;
  /**
   * <pre>
   * How often people interact with your ad after it is shown to them.
   * This is the number of interactions divided by the number of times your ad
   * is shown.
   * </pre>
   *
   * <code>optional double interaction_rate = 222;</code>
   * @return Whether the interactionRate field is set.
   */
  @java.lang.Override
  public boolean hasInteractionRate() {
    return ((bitField1_ & 0x00000010) != 0);
  }
  /**
   * <pre>
   * How often people interact with your ad after it is shown to them.
   * This is the number of interactions divided by the number of times your ad
   * is shown.
   * </pre>
   *
   * <code>optional double interaction_rate = 222;</code>
   * @return The interactionRate.
   */
  @java.lang.Override
  public double getInteractionRate() {
    return interactionRate_;
  }

  public static final int INTERACTIONS_FIELD_NUMBER = 223;
  private long interactions_ = 0L;
  /**
   * <pre>
   * The number of interactions.
   * An interaction is the main user action associated with an ad format-clicks
   * for text and shopping ads, views for video ads, and so on.
   * </pre>
   *
   * <code>optional int64 interactions = 223;</code>
   * @return Whether the interactions field is set.
   */
  @java.lang.Override
  public boolean hasInteractions() {
    return ((bitField1_ & 0x00000020) != 0);
  }
  /**
   * <pre>
   * The number of interactions.
   * An interaction is the main user action associated with an ad format-clicks
   * for text and shopping ads, views for video ads, and so on.
   * </pre>
   *
   * <code>optional int64 interactions = 223;</code>
   * @return The interactions.
   */
  @java.lang.Override
  public long getInteractions() {
    return interactions_;
  }

  public static final int INTERACTION_EVENT_TYPES_FIELD_NUMBER = 100;
  @SuppressWarnings("serial")
  private java.util.List<java.lang.Integer> interactionEventTypes_;
  private static final com.google.protobuf.Internal.ListAdapter.Converter<
      java.lang.Integer, com.google.ads.searchads360.v0.enums.InteractionEventTypeEnum.InteractionEventType> interactionEventTypes_converter_ =
          new com.google.protobuf.Internal.ListAdapter.Converter<
              java.lang.Integer, com.google.ads.searchads360.v0.enums.InteractionEventTypeEnum.InteractionEventType>() {
            public com.google.ads.searchads360.v0.enums.InteractionEventTypeEnum.InteractionEventType convert(java.lang.Integer from) {
              com.google.ads.searchads360.v0.enums.InteractionEventTypeEnum.InteractionEventType result = com.google.ads.searchads360.v0.enums.InteractionEventTypeEnum.InteractionEventType.forNumber(from);
              return result == null ? com.google.ads.searchads360.v0.enums.InteractionEventTypeEnum.InteractionEventType.UNRECOGNIZED : result;
            }
          };
  /**
   * <pre>
   * The types of payable and free interactions.
   * </pre>
   *
   * <code>repeated .google.ads.searchads360.v0.enums.InteractionEventTypeEnum.InteractionEventType interaction_event_types = 100;</code>
   * @return A list containing the interactionEventTypes.
   */
  @java.lang.Override
  public java.util.List<com.google.ads.searchads360.v0.enums.InteractionEventTypeEnum.InteractionEventType> getInteractionEventTypesList() {
    return new com.google.protobuf.Internal.ListAdapter<
        java.lang.Integer, com.google.ads.searchads360.v0.enums.InteractionEventTypeEnum.InteractionEventType>(interactionEventTypes_, interactionEventTypes_converter_);
  }
  /**
   * <pre>
   * The types of payable and free interactions.
   * </pre>
   *
   * <code>repeated .google.ads.searchads360.v0.enums.InteractionEventTypeEnum.InteractionEventType interaction_event_types = 100;</code>
   * @return The count of interactionEventTypes.
   */
  @java.lang.Override
  public int getInteractionEventTypesCount() {
    return interactionEventTypes_.size();
  }
  /**
   * <pre>
   * The types of payable and free interactions.
   * </pre>
   *
   * <code>repeated .google.ads.searchads360.v0.enums.InteractionEventTypeEnum.InteractionEventType interaction_event_types = 100;</code>
   * @param index The index of the element to return.
   * @return The interactionEventTypes at the given index.
   */
  @java.lang.Override
  public com.google.ads.searchads360.v0.enums.InteractionEventTypeEnum.InteractionEventType getInteractionEventTypes(int index) {
    return interactionEventTypes_converter_.convert(interactionEventTypes_.get(index));
  }
  /**
   * <pre>
   * The types of payable and free interactions.
   * </pre>
   *
   * <code>repeated .google.ads.searchads360.v0.enums.InteractionEventTypeEnum.InteractionEventType interaction_event_types = 100;</code>
   * @return A list containing the enum numeric values on the wire for interactionEventTypes.
   */
  @java.lang.Override
  public java.util.List<java.lang.Integer>
  getInteractionEventTypesValueList() {
    return interactionEventTypes_;
  }
  /**
   * <pre>
   * The types of payable and free interactions.
   * </pre>
   *
   * <code>repeated .google.ads.searchads360.v0.enums.InteractionEventTypeEnum.InteractionEventType interaction_event_types = 100;</code>
   * @param index The index of the value to return.
   * @return The enum numeric value on the wire of interactionEventTypes at the given index.
   */
  @java.lang.Override
  public int getInteractionEventTypesValue(int index) {
    return interactionEventTypes_.get(index);
  }
  private int interactionEventTypesMemoizedSerializedSize;

  public static final int INVALID_CLICK_RATE_FIELD_NUMBER = 224;
  private double invalidClickRate_ = 0D;
  /**
   * <pre>
   * The percentage of clicks filtered out of your total number of clicks
   * (filtered + non-filtered clicks) during the reporting period.
   * </pre>
   *
   * <code>optional double invalid_click_rate = 224;</code>
   * @return Whether the invalidClickRate field is set.
   */
  @java.lang.Override
  public boolean hasInvalidClickRate() {
    return ((bitField1_ & 0x00000040) != 0);
  }
  /**
   * <pre>
   * The percentage of clicks filtered out of your total number of clicks
   * (filtered + non-filtered clicks) during the reporting period.
   * </pre>
   *
   * <code>optional double invalid_click_rate = 224;</code>
   * @return The invalidClickRate.
   */
  @java.lang.Override
  public double getInvalidClickRate() {
    return invalidClickRate_;
  }

  public static final int INVALID_CLICKS_FIELD_NUMBER = 225;
  private long invalidClicks_ = 0L;
  /**
   * <pre>
   * Number of clicks Google considers illegitimate and doesn't charge you for.
   * </pre>
   *
   * <code>optional int64 invalid_clicks = 225;</code>
   * @return Whether the invalidClicks field is set.
   */
  @java.lang.Override
  public boolean hasInvalidClicks() {
    return ((bitField1_ & 0x00000080) != 0);
  }
  /**
   * <pre>
   * Number of clicks Google considers illegitimate and doesn't charge you for.
   * </pre>
   *
   * <code>optional int64 invalid_clicks = 225;</code>
   * @return The invalidClicks.
   */
  @java.lang.Override
  public long getInvalidClicks() {
    return invalidClicks_;
  }

  public static final int MOBILE_FRIENDLY_CLICKS_PERCENTAGE_FIELD_NUMBER = 229;
  private double mobileFriendlyClicksPercentage_ = 0D;
  /**
   * <pre>
   * The percentage of mobile clicks that go to a mobile-friendly page.
   * </pre>
   *
   * <code>optional double mobile_friendly_clicks_percentage = 229;</code>
   * @return Whether the mobileFriendlyClicksPercentage field is set.
   */
  @java.lang.Override
  public boolean hasMobileFriendlyClicksPercentage() {
    return ((bitField1_ & 0x00000100) != 0);
  }
  /**
   * <pre>
   * The percentage of mobile clicks that go to a mobile-friendly page.
   * </pre>
   *
   * <code>optional double mobile_friendly_clicks_percentage = 229;</code>
   * @return The mobileFriendlyClicksPercentage.
   */
  @java.lang.Override
  public double getMobileFriendlyClicksPercentage() {
    return mobileFriendlyClicksPercentage_;
  }

  public static final int SEARCH_ABSOLUTE_TOP_IMPRESSION_SHARE_FIELD_NUMBER = 136;
  private double searchAbsoluteTopImpressionShare_ = 0D;
  /**
   * <pre>
   * The percentage of the customer's Shopping or Search ad impressions that are
   * shown in the most prominent Shopping position. See
   * https://support.google.com/sa360/answer/9566729
   * for details. Any value below 0.1 is reported as 0.0999.
   * </pre>
   *
   * <code>optional double search_absolute_top_impression_share = 136;</code>
   * @return Whether the searchAbsoluteTopImpressionShare field is set.
   */
  @java.lang.Override
  public boolean hasSearchAbsoluteTopImpressionShare() {
    return ((bitField1_ & 0x00000200) != 0);
  }
  /**
   * <pre>
   * The percentage of the customer's Shopping or Search ad impressions that are
   * shown in the most prominent Shopping position. See
   * https://support.google.com/sa360/answer/9566729
   * for details. Any value below 0.1 is reported as 0.0999.
   * </pre>
   *
   * <code>optional double search_absolute_top_impression_share = 136;</code>
   * @return The searchAbsoluteTopImpressionShare.
   */
  @java.lang.Override
  public double getSearchAbsoluteTopImpressionShare() {
    return searchAbsoluteTopImpressionShare_;
  }

  public static final int SEARCH_BUDGET_LOST_ABSOLUTE_TOP_IMPRESSION_SHARE_FIELD_NUMBER = 137;
  private double searchBudgetLostAbsoluteTopImpressionShare_ = 0D;
  /**
   * <pre>
   * The number estimating how often your ad wasn't the very first ad above the
   * organic search results due to a low budget. Note: Search
   * budget lost absolute top impression share is reported in the range of 0 to
   * 0.9. Any value above 0.9 is reported as 0.9001.
   * </pre>
   *
   * <code>optional double search_budget_lost_absolute_top_impression_share = 137;</code>
   * @return Whether the searchBudgetLostAbsoluteTopImpressionShare field is set.
   */
  @java.lang.Override
  public boolean hasSearchBudgetLostAbsoluteTopImpressionShare() {
    return ((bitField1_ & 0x00000400) != 0);
  }
  /**
   * <pre>
   * The number estimating how often your ad wasn't the very first ad above the
   * organic search results due to a low budget. Note: Search
   * budget lost absolute top impression share is reported in the range of 0 to
   * 0.9. Any value above 0.9 is reported as 0.9001.
   * </pre>
   *
   * <code>optional double search_budget_lost_absolute_top_impression_share = 137;</code>
   * @return The searchBudgetLostAbsoluteTopImpressionShare.
   */
  @java.lang.Override
  public double getSearchBudgetLostAbsoluteTopImpressionShare() {
    return searchBudgetLostAbsoluteTopImpressionShare_;
  }

  public static final int SEARCH_BUDGET_LOST_IMPRESSION_SHARE_FIELD_NUMBER = 138;
  private double searchBudgetLostImpressionShare_ = 0D;
  /**
   * <pre>
   * The estimated percent of times that your ad was eligible to show on the
   * Search Network but didn't because your budget was too low. Note: Search
   * budget lost impression share is reported in the range of 0 to 0.9. Any
   * value above 0.9 is reported as 0.9001.
   * </pre>
   *
   * <code>optional double search_budget_lost_impression_share = 138;</code>
   * @return Whether the searchBudgetLostImpressionShare field is set.
   */
  @java.lang.Override
  public boolean hasSearchBudgetLostImpressionShare() {
    return ((bitField1_ & 0x00000800) != 0);
  }
  /**
   * <pre>
   * The estimated percent of times that your ad was eligible to show on the
   * Search Network but didn't because your budget was too low. Note: Search
   * budget lost impression share is reported in the range of 0 to 0.9. Any
   * value above 0.9 is reported as 0.9001.
   * </pre>
   *
   * <code>optional double search_budget_lost_impression_share = 138;</code>
   * @return The searchBudgetLostImpressionShare.
   */
  @java.lang.Override
  public double getSearchBudgetLostImpressionShare() {
    return searchBudgetLostImpressionShare_;
  }

  public static final int SEARCH_BUDGET_LOST_TOP_IMPRESSION_SHARE_FIELD_NUMBER = 139;
  private double searchBudgetLostTopImpressionShare_ = 0D;
  /**
   * <pre>
   * The number estimating how often your ad didn't show anywhere above the
   * organic search results due to a low budget. Note: Search
   * budget lost top impression share is reported in the range of 0 to 0.9. Any
   * value above 0.9 is reported as 0.9001.
   * </pre>
   *
   * <code>optional double search_budget_lost_top_impression_share = 139;</code>
   * @return Whether the searchBudgetLostTopImpressionShare field is set.
   */
  @java.lang.Override
  public boolean hasSearchBudgetLostTopImpressionShare() {
    return ((bitField1_ & 0x00001000) != 0);
  }
  /**
   * <pre>
   * The number estimating how often your ad didn't show anywhere above the
   * organic search results due to a low budget. Note: Search
   * budget lost top impression share is reported in the range of 0 to 0.9. Any
   * value above 0.9 is reported as 0.9001.
   * </pre>
   *
   * <code>optional double search_budget_lost_top_impression_share = 139;</code>
   * @return The searchBudgetLostTopImpressionShare.
   */
  @java.lang.Override
  public double getSearchBudgetLostTopImpressionShare() {
    return searchBudgetLostTopImpressionShare_;
  }

  public static final int SEARCH_CLICK_SHARE_FIELD_NUMBER = 140;
  private double searchClickShare_ = 0D;
  /**
   * <pre>
   * The number of clicks you've received on the Search Network
   * divided by the estimated number of clicks you were eligible to receive.
   * Note: Search click share is reported in the range of 0.1 to 1. Any value
   * below 0.1 is reported as 0.0999.
   * </pre>
   *
   * <code>optional double search_click_share = 140;</code>
   * @return Whether the searchClickShare field is set.
   */
  @java.lang.Override
  public boolean hasSearchClickShare() {
    return ((bitField1_ & 0x00002000) != 0);
  }
  /**
   * <pre>
   * The number of clicks you've received on the Search Network
   * divided by the estimated number of clicks you were eligible to receive.
   * Note: Search click share is reported in the range of 0.1 to 1. Any value
   * below 0.1 is reported as 0.0999.
   * </pre>
   *
   * <code>optional double search_click_share = 140;</code>
   * @return The searchClickShare.
   */
  @java.lang.Override
  public double getSearchClickShare() {
    return searchClickShare_;
  }

  public static final int SEARCH_EXACT_MATCH_IMPRESSION_SHARE_FIELD_NUMBER = 141;
  private double searchExactMatchImpressionShare_ = 0D;
  /**
   * <pre>
   * The impressions you've received divided by the estimated number of
   * impressions you were eligible to receive on the Search Network for search
   * terms that matched your keywords exactly (or were close variants of your
   * keyword), regardless of your keyword match types. Note: Search exact match
   * impression share is reported in the range of 0.1 to 1. Any value below 0.1
   * is reported as 0.0999.
   * </pre>
   *
   * <code>optional double search_exact_match_impression_share = 141;</code>
   * @return Whether the searchExactMatchImpressionShare field is set.
   */
  @java.lang.Override
  public boolean hasSearchExactMatchImpressionShare() {
    return ((bitField1_ & 0x00004000) != 0);
  }
  /**
   * <pre>
   * The impressions you've received divided by the estimated number of
   * impressions you were eligible to receive on the Search Network for search
   * terms that matched your keywords exactly (or were close variants of your
   * keyword), regardless of your keyword match types. Note: Search exact match
   * impression share is reported in the range of 0.1 to 1. Any value below 0.1
   * is reported as 0.0999.
   * </pre>
   *
   * <code>optional double search_exact_match_impression_share = 141;</code>
   * @return The searchExactMatchImpressionShare.
   */
  @java.lang.Override
  public double getSearchExactMatchImpressionShare() {
    return searchExactMatchImpressionShare_;
  }

  public static final int SEARCH_IMPRESSION_SHARE_FIELD_NUMBER = 142;
  private double searchImpressionShare_ = 0D;
  /**
   * <pre>
   * The impressions you've received on the Search Network divided
   * by the estimated number of impressions you were eligible to receive.
   * Note: Search impression share is reported in the range of 0.1 to 1. Any
   * value below 0.1 is reported as 0.0999.
   * </pre>
   *
   * <code>optional double search_impression_share = 142;</code>
   * @return Whether the searchImpressionShare field is set.
   */
  @java.lang.Override
  public boolean hasSearchImpressionShare() {
    return ((bitField1_ & 0x00008000) != 0);
  }
  /**
   * <pre>
   * The impressions you've received on the Search Network divided
   * by the estimated number of impressions you were eligible to receive.
   * Note: Search impression share is reported in the range of 0.1 to 1. Any
   * value below 0.1 is reported as 0.0999.
   * </pre>
   *
   * <code>optional double search_impression_share = 142;</code>
   * @return The searchImpressionShare.
   */
  @java.lang.Override
  public double getSearchImpressionShare() {
    return searchImpressionShare_;
  }

  public static final int SEARCH_RANK_LOST_ABSOLUTE_TOP_IMPRESSION_SHARE_FIELD_NUMBER = 143;
  private double searchRankLostAbsoluteTopImpressionShare_ = 0D;
  /**
   * <pre>
   * The number estimating how often your ad wasn't the very first ad above the
   * organic search results due to poor Ad Rank.
   * Note: Search rank lost absolute top impression share is reported in the
   * range of 0 to 0.9. Any value above 0.9 is reported as 0.9001.
   * </pre>
   *
   * <code>optional double search_rank_lost_absolute_top_impression_share = 143;</code>
   * @return Whether the searchRankLostAbsoluteTopImpressionShare field is set.
   */
  @java.lang.Override
  public boolean hasSearchRankLostAbsoluteTopImpressionShare() {
    return ((bitField1_ & 0x00010000) != 0);
  }
  /**
   * <pre>
   * The number estimating how often your ad wasn't the very first ad above the
   * organic search results due to poor Ad Rank.
   * Note: Search rank lost absolute top impression share is reported in the
   * range of 0 to 0.9. Any value above 0.9 is reported as 0.9001.
   * </pre>
   *
   * <code>optional double search_rank_lost_absolute_top_impression_share = 143;</code>
   * @return The searchRankLostAbsoluteTopImpressionShare.
   */
  @java.lang.Override
  public double getSearchRankLostAbsoluteTopImpressionShare() {
    return searchRankLostAbsoluteTopImpressionShare_;
  }

  public static final int SEARCH_RANK_LOST_IMPRESSION_SHARE_FIELD_NUMBER = 144;
  private double searchRankLostImpressionShare_ = 0D;
  /**
   * <pre>
   * The estimated percentage of impressions on the Search Network
   * that your ads didn't receive due to poor Ad Rank.
   * Note: Search rank lost impression share is reported in the range of 0 to
   * 0.9. Any value above 0.9 is reported as 0.9001.
   * </pre>
   *
   * <code>optional double search_rank_lost_impression_share = 144;</code>
   * @return Whether the searchRankLostImpressionShare field is set.
   */
  @java.lang.Override
  public boolean hasSearchRankLostImpressionShare() {
    return ((bitField1_ & 0x00020000) != 0);
  }
  /**
   * <pre>
   * The estimated percentage of impressions on the Search Network
   * that your ads didn't receive due to poor Ad Rank.
   * Note: Search rank lost impression share is reported in the range of 0 to
   * 0.9. Any value above 0.9 is reported as 0.9001.
   * </pre>
   *
   * <code>optional double search_rank_lost_impression_share = 144;</code>
   * @return The searchRankLostImpressionShare.
   */
  @java.lang.Override
  public double getSearchRankLostImpressionShare() {
    return searchRankLostImpressionShare_;
  }

  public static final int SEARCH_RANK_LOST_TOP_IMPRESSION_SHARE_FIELD_NUMBER = 145;
  private double searchRankLostTopImpressionShare_ = 0D;
  /**
   * <pre>
   * The number estimating how often your ad didn't show anywhere above the
   * organic search results due to poor Ad Rank.
   * Note: Search rank lost top impression share is reported in the range of 0
   * to 0.9. Any value above 0.9 is reported as 0.9001.
   * </pre>
   *
   * <code>optional double search_rank_lost_top_impression_share = 145;</code>
   * @return Whether the searchRankLostTopImpressionShare field is set.
   */
  @java.lang.Override
  public boolean hasSearchRankLostTopImpressionShare() {
    return ((bitField1_ & 0x00040000) != 0);
  }
  /**
   * <pre>
   * The number estimating how often your ad didn't show anywhere above the
   * organic search results due to poor Ad Rank.
   * Note: Search rank lost top impression share is reported in the range of 0
   * to 0.9. Any value above 0.9 is reported as 0.9001.
   * </pre>
   *
   * <code>optional double search_rank_lost_top_impression_share = 145;</code>
   * @return The searchRankLostTopImpressionShare.
   */
  @java.lang.Override
  public double getSearchRankLostTopImpressionShare() {
    return searchRankLostTopImpressionShare_;
  }

  public static final int SEARCH_TOP_IMPRESSION_SHARE_FIELD_NUMBER = 146;
  private double searchTopImpressionShare_ = 0D;
  /**
   * <pre>
   * The impressions you've received in the top location (anywhere above the
   * organic search results) compared to the estimated number of impressions you
   * were eligible to receive in the top location.
   * Note: Search top impression share is reported in the range of 0.1 to 1. Any
   * value below 0.1 is reported as 0.0999.
   * </pre>
   *
   * <code>optional double search_top_impression_share = 146;</code>
   * @return Whether the searchTopImpressionShare field is set.
   */
  @java.lang.Override
  public boolean hasSearchTopImpressionShare() {
    return ((bitField1_ & 0x00080000) != 0);
  }
  /**
   * <pre>
   * The impressions you've received in the top location (anywhere above the
   * organic search results) compared to the estimated number of impressions you
   * were eligible to receive in the top location.
   * Note: Search top impression share is reported in the range of 0.1 to 1. Any
   * value below 0.1 is reported as 0.0999.
   * </pre>
   *
   * <code>optional double search_top_impression_share = 146;</code>
   * @return The searchTopImpressionShare.
   */
  @java.lang.Override
  public double getSearchTopImpressionShare() {
    return searchTopImpressionShare_;
  }

  public static final int TOP_IMPRESSION_PERCENTAGE_FIELD_NUMBER = 148;
  private double topImpressionPercentage_ = 0D;
  /**
   * <pre>
   * The percent of your ad impressions that are shown anywhere above the
   * organic search results.
   * </pre>
   *
   * <code>optional double top_impression_percentage = 148;</code>
   * @return Whether the topImpressionPercentage field is set.
   */
  @java.lang.Override
  public boolean hasTopImpressionPercentage() {
    return ((bitField1_ & 0x00100000) != 0);
  }
  /**
   * <pre>
   * The percent of your ad impressions that are shown anywhere above the
   * organic search results.
   * </pre>
   *
   * <code>optional double top_impression_percentage = 148;</code>
   * @return The topImpressionPercentage.
   */
  @java.lang.Override
  public double getTopImpressionPercentage() {
    return topImpressionPercentage_;
  }

  public static final int VALUE_PER_ALL_CONVERSIONS_FIELD_NUMBER = 150;
  private double valuePerAllConversions_ = 0D;
  /**
   * <pre>
   * The value of all conversions divided by the number of all conversions.
   * </pre>
   *
   * <code>optional double value_per_all_conversions = 150;</code>
   * @return Whether the valuePerAllConversions field is set.
   */
  @java.lang.Override
  public boolean hasValuePerAllConversions() {
    return ((bitField1_ & 0x00200000) != 0);
  }
  /**
   * <pre>
   * The value of all conversions divided by the number of all conversions.
   * </pre>
   *
   * <code>optional double value_per_all_conversions = 150;</code>
   * @return The valuePerAllConversions.
   */
  @java.lang.Override
  public double getValuePerAllConversions() {
    return valuePerAllConversions_;
  }

  public static final int VALUE_PER_ALL_CONVERSIONS_BY_CONVERSION_DATE_FIELD_NUMBER = 244;
  private double valuePerAllConversionsByConversionDate_ = 0D;
  /**
   * <pre>
   * The value of all conversions divided by the number of all conversions. When
   * this column is selected with date, the values in date column means the
   * conversion date. Details for the by_conversion_date columns are available
   * at https://support.google.com/sa360/answer/9250611.
   * </pre>
   *
   * <code>optional double value_per_all_conversions_by_conversion_date = 244;</code>
   * @return Whether the valuePerAllConversionsByConversionDate field is set.
   */
  @java.lang.Override
  public boolean hasValuePerAllConversionsByConversionDate() {
    return ((bitField1_ & 0x00400000) != 0);
  }
  /**
   * <pre>
   * The value of all conversions divided by the number of all conversions. When
   * this column is selected with date, the values in date column means the
   * conversion date. Details for the by_conversion_date columns are available
   * at https://support.google.com/sa360/answer/9250611.
   * </pre>
   *
   * <code>optional double value_per_all_conversions_by_conversion_date = 244;</code>
   * @return The valuePerAllConversionsByConversionDate.
   */
  @java.lang.Override
  public double getValuePerAllConversionsByConversionDate() {
    return valuePerAllConversionsByConversionDate_;
  }

  public static final int VALUE_PER_CONVERSION_FIELD_NUMBER = 287;
  private double valuePerConversion_ = 0D;
  /**
   * <pre>
   * The value of biddable conversion divided by the number of biddable
   * conversions. Shows how much, on average, each of the biddable conversions
   * is worth.
   * </pre>
   *
   * <code>optional double value_per_conversion = 287;</code>
   * @return Whether the valuePerConversion field is set.
   */
  @java.lang.Override
  public boolean hasValuePerConversion() {
    return ((bitField1_ & 0x00800000) != 0);
  }
  /**
   * <pre>
   * The value of biddable conversion divided by the number of biddable
   * conversions. Shows how much, on average, each of the biddable conversions
   * is worth.
   * </pre>
   *
   * <code>optional double value_per_conversion = 287;</code>
   * @return The valuePerConversion.
   */
  @java.lang.Override
  public double getValuePerConversion() {
    return valuePerConversion_;
  }

  public static final int VALUE_PER_CONVERSIONS_BY_CONVERSION_DATE_FIELD_NUMBER = 285;
  private double valuePerConversionsByConversionDate_ = 0D;
  /**
   * <pre>
   * Biddable conversions value by conversion date divided by biddable
   * conversions by conversion date. Shows how much, on average, each of the
   * biddable conversions is worth (by conversion date). When this column is
   * selected with date, the values in date column means the conversion date.
   * </pre>
   *
   * <code>optional double value_per_conversions_by_conversion_date = 285;</code>
   * @return Whether the valuePerConversionsByConversionDate field is set.
   */
  @java.lang.Override
  public boolean hasValuePerConversionsByConversionDate() {
    return ((bitField1_ & 0x01000000) != 0);
  }
  /**
   * <pre>
   * Biddable conversions value by conversion date divided by biddable
   * conversions by conversion date. Shows how much, on average, each of the
   * biddable conversions is worth (by conversion date). When this column is
   * selected with date, the values in date column means the conversion date.
   * </pre>
   *
   * <code>optional double value_per_conversions_by_conversion_date = 285;</code>
   * @return The valuePerConversionsByConversionDate.
   */
  @java.lang.Override
  public double getValuePerConversionsByConversionDate() {
    return valuePerConversionsByConversionDate_;
  }

  public static final int CLIENT_ACCOUNT_VIEW_THROUGH_CONVERSIONS_FIELD_NUMBER = 155;
  private long clientAccountViewThroughConversions_ = 0L;
  /**
   * <pre>
   * The total number of view-through conversions.
   * These happen when a customer sees an image or rich media ad, then later
   * completes a conversion on your site without interacting with (for example,
   * clicking on) another ad.
   * </pre>
   *
   * <code>optional int64 client_account_view_through_conversions = 155;</code>
   * @return Whether the clientAccountViewThroughConversions field is set.
   */
  @java.lang.Override
  public boolean hasClientAccountViewThroughConversions() {
    return ((bitField1_ & 0x02000000) != 0);
  }
  /**
   * <pre>
   * The total number of view-through conversions.
   * These happen when a customer sees an image or rich media ad, then later
   * completes a conversion on your site without interacting with (for example,
   * clicking on) another ad.
   * </pre>
   *
   * <code>optional int64 client_account_view_through_conversions = 155;</code>
   * @return The clientAccountViewThroughConversions.
   */
  @java.lang.Override
  public long getClientAccountViewThroughConversions() {
    return clientAccountViewThroughConversions_;
  }

  private byte memoizedIsInitialized = -1;
  @java.lang.Override
  public final boolean isInitialized() {
    byte isInitialized = memoizedIsInitialized;
    if (isInitialized == 1) return true;
    if (isInitialized == 0) return false;

    memoizedIsInitialized = 1;
    return true;
  }

  @java.lang.Override
  public void writeTo(com.google.protobuf.CodedOutputStream output)
                      throws java.io.IOException {
    getSerializedSize();
    if (historicalCreativeQualityScore_ != com.google.ads.searchads360.v0.enums.QualityScoreBucketEnum.QualityScoreBucket.UNSPECIFIED.getNumber()) {
      output.writeEnum(80, historicalCreativeQualityScore_);
    }
    if (historicalLandingPageQualityScore_ != com.google.ads.searchads360.v0.enums.QualityScoreBucketEnum.QualityScoreBucket.UNSPECIFIED.getNumber()) {
      output.writeEnum(81, historicalLandingPageQualityScore_);
    }
    if (historicalSearchPredictedCtr_ != com.google.ads.searchads360.v0.enums.QualityScoreBucketEnum.QualityScoreBucket.UNSPECIFIED.getNumber()) {
      output.writeEnum(83, historicalSearchPredictedCtr_);
    }
    if (getInteractionEventTypesList().size() > 0) {
      output.writeUInt32NoTag(802);
      output.writeUInt32NoTag(interactionEventTypesMemoizedSerializedSize);
    }
    for (int i = 0; i < interactionEventTypes_.size(); i++) {
      output.writeEnumNoTag(interactionEventTypes_.get(i));
    }
    if (((bitField0_ & 0x00010000) != 0)) {
      output.writeInt64(131, clicks_);
    }
    if (((bitField1_ & 0x00000200) != 0)) {
      output.writeDouble(136, searchAbsoluteTopImpressionShare_);
    }
    if (((bitField1_ & 0x00000400) != 0)) {
      output.writeDouble(137, searchBudgetLostAbsoluteTopImpressionShare_);
    }
    if (((bitField1_ & 0x00000800) != 0)) {
      output.writeDouble(138, searchBudgetLostImpressionShare_);
    }
    if (((bitField1_ & 0x00001000) != 0)) {
      output.writeDouble(139, searchBudgetLostTopImpressionShare_);
    }
    if (((bitField1_ & 0x00002000) != 0)) {
      output.writeDouble(140, searchClickShare_);
    }
    if (((bitField1_ & 0x00004000) != 0)) {
      output.writeDouble(141, searchExactMatchImpressionShare_);
    }
    if (((bitField1_ & 0x00008000) != 0)) {
      output.writeDouble(142, searchImpressionShare_);
    }
    if (((bitField1_ & 0x00010000) != 0)) {
      output.writeDouble(143, searchRankLostAbsoluteTopImpressionShare_);
    }
    if (((bitField1_ & 0x00020000) != 0)) {
      output.writeDouble(144, searchRankLostImpressionShare_);
    }
    if (((bitField1_ & 0x00040000) != 0)) {
      output.writeDouble(145, searchRankLostTopImpressionShare_);
    }
    if (((bitField1_ & 0x00080000) != 0)) {
      output.writeDouble(146, searchTopImpressionShare_);
    }
    if (((bitField1_ & 0x00100000) != 0)) {
      output.writeDouble(148, topImpressionPercentage_);
    }
    if (((bitField1_ & 0x00200000) != 0)) {
      output.writeDouble(150, valuePerAllConversions_);
    }
    if (((bitField1_ & 0x02000000) != 0)) {
      output.writeInt64(155, clientAccountViewThroughConversions_);
    }
    if (((bitField0_ & 0x00020000) != 0)) {
      output.writeDouble(159, contentBudgetLostImpressionShare_);
    }
    if (((bitField0_ & 0x00040000) != 0)) {
      output.writeDouble(160, contentImpressionShare_);
    }
    if (((bitField0_ & 0x00080000) != 0)) {
      output.writeDouble(163, contentRankLostImpressionShare_);
    }
    if (((bitField0_ & 0x00200000) != 0)) {
      output.writeDouble(165, clientAccountConversionsValue_);
    }
    if (((bitField0_ & 0x00800000) != 0)) {
      output.writeDouble(167, conversionsFromInteractionsValuePerInteraction_);
    }
    if (((bitField0_ & 0x01000000) != 0)) {
      output.writeDouble(168, clientAccountConversions_);
    }
    if (((bitField0_ & 0x02000000) != 0)) {
      output.writeInt64(169, costMicros_);
    }
    if (((bitField0_ & 0x04000000) != 0)) {
      output.writeDouble(170, costPerAllConversions_);
    }
    if (((bitField0_ & 0x10000000) != 0)) {
      output.writeDouble(172, costPerCurrentModelAttributedConversion_);
    }
    if (((bitField0_ & 0x20000000) != 0)) {
      output.writeDouble(173, crossDeviceConversions_);
    }
    if (((bitField0_ & 0x80000000) != 0)) {
      output.writeDouble(174, ctr_);
    }
    if (((bitField0_ & 0x00000001) != 0)) {
      output.writeDouble(183, absoluteTopImpressionPercentage_);
    }
    if (((bitField0_ & 0x00000002) != 0)) {
      output.writeDouble(191, allConversionsFromInteractionsRate_);
    }
    if (((bitField0_ & 0x00000004) != 0)) {
      output.writeDouble(192, allConversionsValue_);
    }
    if (((bitField0_ & 0x00000008) != 0)) {
      output.writeDouble(193, allConversions_);
    }
    if (((bitField0_ & 0x00000010) != 0)) {
      output.writeDouble(194, allConversionsValuePerCost_);
    }
    if (((bitField0_ & 0x00000020) != 0)) {
      output.writeDouble(195, allConversionsFromClickToCall_);
    }
    if (((bitField0_ & 0x00000040) != 0)) {
      output.writeDouble(196, allConversionsFromDirections_);
    }
    if (((bitField0_ & 0x00000080) != 0)) {
      output.writeDouble(197, allConversionsFromInteractionsValuePerInteraction_);
    }
    if (((bitField0_ & 0x00000100) != 0)) {
      output.writeDouble(198, allConversionsFromMenu_);
    }
    if (((bitField0_ & 0x00000200) != 0)) {
      output.writeDouble(199, allConversionsFromOrder_);
    }
    if (((bitField0_ & 0x00000400) != 0)) {
      output.writeDouble(200, allConversionsFromOtherEngagement_);
    }
    if (((bitField0_ & 0x00000800) != 0)) {
      output.writeDouble(201, allConversionsFromStoreVisit_);
    }
    if (((bitField0_ & 0x00001000) != 0)) {
      output.writeDouble(202, allConversionsFromStoreWebsite_);
    }
    if (((bitField0_ & 0x00002000) != 0)) {
      output.writeDouble(203, averageCost_);
    }
    if (((bitField0_ & 0x00004000) != 0)) {
      output.writeDouble(204, averageCpc_);
    }
    if (((bitField0_ & 0x00008000) != 0)) {
      output.writeDouble(206, averageCpm_);
    }
    if (((bitField1_ & 0x00000004) != 0)) {
      output.writeInt64(216, historicalQualityScore_);
    }
    if (((bitField1_ & 0x00000008) != 0)) {
      output.writeInt64(221, impressions_);
    }
    if (((bitField1_ & 0x00000010) != 0)) {
      output.writeDouble(222, interactionRate_);
    }
    if (((bitField1_ & 0x00000020) != 0)) {
      output.writeInt64(223, interactions_);
    }
    if (((bitField1_ & 0x00000040) != 0)) {
      output.writeDouble(224, invalidClickRate_);
    }
    if (((bitField1_ & 0x00000080) != 0)) {
      output.writeInt64(225, invalidClicks_);
    }
    if (((bitField1_ & 0x00000100) != 0)) {
      output.writeDouble(229, mobileFriendlyClicksPercentage_);
    }
    if (java.lang.Double.doubleToRawLongBits(allConversionsValueByConversionDate_) != 0) {
      output.writeDouble(240, allConversionsValueByConversionDate_);
    }
    if (java.lang.Double.doubleToRawLongBits(allConversionsByConversionDate_) != 0) {
      output.writeDouble(241, allConversionsByConversionDate_);
    }
    if (((bitField1_ & 0x00400000) != 0)) {
      output.writeDouble(244, valuePerAllConversionsByConversionDate_);
    }
    if (((bitField1_ & 0x00000001) != 0)) {
      output.writeDouble(251, conversions_);
    }
    if (((bitField1_ & 0x00000002) != 0)) {
      output.writeDouble(252, conversionsValue_);
    }
    if (((bitField0_ & 0x40000000) != 0)) {
      output.writeDouble(253, crossDeviceConversionsValue_);
    }
    if (java.lang.Double.doubleToRawLongBits(conversionsByConversionDate_) != 0) {
      output.writeDouble(282, conversionsByConversionDate_);
    }
    if (java.lang.Double.doubleToRawLongBits(conversionsValueByConversionDate_) != 0) {
      output.writeDouble(283, conversionsValueByConversionDate_);
    }
    if (((bitField0_ & 0x00100000) != 0)) {
      output.writeDouble(284, conversionsFromInteractionsRate_);
    }
    if (((bitField1_ & 0x01000000) != 0)) {
      output.writeDouble(285, valuePerConversionsByConversionDate_);
    }
    if (((bitField0_ & 0x08000000) != 0)) {
      output.writeDouble(286, costPerConversion_);
    }
    if (((bitField1_ & 0x00800000) != 0)) {
      output.writeDouble(287, valuePerConversion_);
    }
    if (((bitField0_ & 0x00400000) != 0)) {
      output.writeDouble(288, conversionsValuePerCost_);
    }
    getUnknownFields().writeTo(output);
  }

  @java.lang.Override
  public int getSerializedSize() {
    int size = memoizedSize;
    if (size != -1) return size;

    size = 0;
    if (historicalCreativeQualityScore_ != com.google.ads.searchads360.v0.enums.QualityScoreBucketEnum.QualityScoreBucket.UNSPECIFIED.getNumber()) {
      size += com.google.protobuf.CodedOutputStream
        .computeEnumSize(80, historicalCreativeQualityScore_);
    }
    if (historicalLandingPageQualityScore_ != com.google.ads.searchads360.v0.enums.QualityScoreBucketEnum.QualityScoreBucket.UNSPECIFIED.getNumber()) {
      size += com.google.protobuf.CodedOutputStream
        .computeEnumSize(81, historicalLandingPageQualityScore_);
    }
    if (historicalSearchPredictedCtr_ != com.google.ads.searchads360.v0.enums.QualityScoreBucketEnum.QualityScoreBucket.UNSPECIFIED.getNumber()) {
      size += com.google.protobuf.CodedOutputStream
        .computeEnumSize(83, historicalSearchPredictedCtr_);
    }
    {
      int dataSize = 0;
      for (int i = 0; i < interactionEventTypes_.size(); i++) {
        dataSize += com.google.protobuf.CodedOutputStream
          .computeEnumSizeNoTag(interactionEventTypes_.get(i));
      }
      size += dataSize;
      if (!getInteractionEventTypesList().isEmpty()) {  size += 2;
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32SizeNoTag(dataSize);
      }interactionEventTypesMemoizedSerializedSize = dataSize;
    }
    if (((bitField0_ & 0x00010000) != 0)) {
      size += com.google.protobuf.CodedOutputStream
        .computeInt64Size(131, clicks_);
    }
    if (((bitField1_ & 0x00000200) != 0)) {
      size += com.google.protobuf.CodedOutputStream
        .computeDoubleSize(136, searchAbsoluteTopImpressionShare_);
    }
    if (((bitField1_ & 0x00000400) != 0)) {
      size += com.google.protobuf.CodedOutputStream
        .computeDoubleSize(137, searchBudgetLostAbsoluteTopImpressionShare_);
    }
    if (((bitField1_ & 0x00000800) != 0)) {
      size += com.google.protobuf.CodedOutputStream
        .computeDoubleSize(138, searchBudgetLostImpressionShare_);
    }
    if (((bitField1_ & 0x00001000) != 0)) {
      size += com.google.protobuf.CodedOutputStream
        .computeDoubleSize(139, searchBudgetLostTopImpressionShare_);
    }
    if (((bitField1_ & 0x00002000) != 0)) {
      size += com.google.protobuf.CodedOutputStream
        .computeDoubleSize(140, searchClickShare_);
    }
    if (((bitField1_ & 0x00004000) != 0)) {
      size += com.google.protobuf.CodedOutputStream
        .computeDoubleSize(141, searchExactMatchImpressionShare_);
    }
    if (((bitField1_ & 0x00008000) != 0)) {
      size += com.google.protobuf.CodedOutputStream
        .computeDoubleSize(142, searchImpressionShare_);
    }
    if (((bitField1_ & 0x00010000) != 0)) {
      size += com.google.protobuf.CodedOutputStream
        .computeDoubleSize(143, searchRankLostAbsoluteTopImpressionShare_);
    }
    if (((bitField1_ & 0x00020000) != 0)) {
      size += com.google.protobuf.CodedOutputStream
        .computeDoubleSize(144, searchRankLostImpressionShare_);
    }
    if (((bitField1_ & 0x00040000) != 0)) {
      size += com.google.protobuf.CodedOutputStream
        .computeDoubleSize(145, searchRankLostTopImpressionShare_);
    }
    if (((bitField1_ & 0x00080000) != 0)) {
      size += com.google.protobuf.CodedOutputStream
        .computeDoubleSize(146, searchTopImpressionShare_);
    }
    if (((bitField1_ & 0x00100000) != 0)) {
      size += com.google.protobuf.CodedOutputStream
        .computeDoubleSize(148, topImpressionPercentage_);
    }
    if (((bitField1_ & 0x00200000) != 0)) {
      size += com.google.protobuf.CodedOutputStream
        .computeDoubleSize(150, valuePerAllConversions_);
    }
    if (((bitField1_ & 0x02000000) != 0)) {
      size += com.google.protobuf.CodedOutputStream
        .computeInt64Size(155, clientAccountViewThroughConversions_);
    }
    if (((bitField0_ & 0x00020000) != 0)) {
      size += com.google.protobuf.CodedOutputStream
        .computeDoubleSize(159, contentBudgetLostImpressionShare_);
    }
    if (((bitField0_ & 0x00040000) != 0)) {
      size += com.google.protobuf.CodedOutputStream
        .computeDoubleSize(160, contentImpressionShare_);
    }
    if (((bitField0_ & 0x00080000) != 0)) {
      size += com.google.protobuf.CodedOutputStream
        .computeDoubleSize(163, contentRankLostImpressionShare_);
    }
    if (((bitField0_ & 0x00200000) != 0)) {
      size += com.google.protobuf.CodedOutputStream
        .computeDoubleSize(165, clientAccountConversionsValue_);
    }
    if (((bitField0_ & 0x00800000) != 0)) {
      size += com.google.protobuf.CodedOutputStream
        .computeDoubleSize(167, conversionsFromInteractionsValuePerInteraction_);
    }
    if (((bitField0_ & 0x01000000) != 0)) {
      size += com.google.protobuf.CodedOutputStream
        .computeDoubleSize(168, clientAccountConversions_);
    }
    if (((bitField0_ & 0x02000000) != 0)) {
      size += com.google.protobuf.CodedOutputStream
        .computeInt64Size(169, costMicros_);
    }
    if (((bitField0_ & 0x04000000) != 0)) {
      size += com.google.protobuf.CodedOutputStream
        .computeDoubleSize(170, costPerAllConversions_);
    }
    if (((bitField0_ & 0x10000000) != 0)) {
      size += com.google.protobuf.CodedOutputStream
        .computeDoubleSize(172, costPerCurrentModelAttributedConversion_);
    }
    if (((bitField0_ & 0x20000000) != 0)) {
      size += com.google.protobuf.CodedOutputStream
        .computeDoubleSize(173, crossDeviceConversions_);
    }
    if (((bitField0_ & 0x80000000) != 0)) {
      size += com.google.protobuf.CodedOutputStream
        .computeDoubleSize(174, ctr_);
    }
    if (((bitField0_ & 0x00000001) != 0)) {
      size += com.google.protobuf.CodedOutputStream
        .computeDoubleSize(183, absoluteTopImpressionPercentage_);
    }
    if (((bitField0_ & 0x00000002) != 0)) {
      size += com.google.protobuf.CodedOutputStream
        .computeDoubleSize(191, allConversionsFromInteractionsRate_);
    }
    if (((bitField0_ & 0x00000004) != 0)) {
      size += com.google.protobuf.CodedOutputStream
        .computeDoubleSize(192, allConversionsValue_);
    }
    if (((bitField0_ & 0x00000008) != 0)) {
      size += com.google.protobuf.CodedOutputStream
        .computeDoubleSize(193, allConversions_);
    }
    if (((bitField0_ & 0x00000010) != 0)) {
      size += com.google.protobuf.CodedOutputStream
        .computeDoubleSize(194, allConversionsValuePerCost_);
    }
    if (((bitField0_ & 0x00000020) != 0)) {
      size += com.google.protobuf.CodedOutputStream
        .computeDoubleSize(195, allConversionsFromClickToCall_);
    }
    if (((bitField0_ & 0x00000040) != 0)) {
      size += com.google.protobuf.CodedOutputStream
        .computeDoubleSize(196, allConversionsFromDirections_);
    }
    if (((bitField0_ & 0x00000080) != 0)) {
      size += com.google.protobuf.CodedOutputStream
        .computeDoubleSize(197, allConversionsFromInteractionsValuePerInteraction_);
    }
    if (((bitField0_ & 0x00000100) != 0)) {
      size += com.google.protobuf.CodedOutputStream
        .computeDoubleSize(198, allConversionsFromMenu_);
    }
    if (((bitField0_ & 0x00000200) != 0)) {
      size += com.google.protobuf.CodedOutputStream
        .computeDoubleSize(199, allConversionsFromOrder_);
    }
    if (((bitField0_ & 0x00000400) != 0)) {
      size += com.google.protobuf.CodedOutputStream
        .computeDoubleSize(200, allConversionsFromOtherEngagement_);
    }
    if (((bitField0_ & 0x00000800) != 0)) {
      size += com.google.protobuf.CodedOutputStream
        .computeDoubleSize(201, allConversionsFromStoreVisit_);
    }
    if (((bitField0_ & 0x00001000) != 0)) {
      size += com.google.protobuf.CodedOutputStream
        .computeDoubleSize(202, allConversionsFromStoreWebsite_);
    }
    if (((bitField0_ & 0x00002000) != 0)) {
      size += com.google.protobuf.CodedOutputStream
        .computeDoubleSize(203, averageCost_);
    }
    if (((bitField0_ & 0x00004000) != 0)) {
      size += com.google.protobuf.CodedOutputStream
        .computeDoubleSize(204, averageCpc_);
    }
    if (((bitField0_ & 0x00008000) != 0)) {
      size += com.google.protobuf.CodedOutputStream
        .computeDoubleSize(206, averageCpm_);
    }
    if (((bitField1_ & 0x00000004) != 0)) {
      size += com.google.protobuf.CodedOutputStream
        .computeInt64Size(216, historicalQualityScore_);
    }
    if (((bitField1_ & 0x00000008) != 0)) {
      size += com.google.protobuf.CodedOutputStream
        .computeInt64Size(221, impressions_);
    }
    if (((bitField1_ & 0x00000010) != 0)) {
      size += com.google.protobuf.CodedOutputStream
        .computeDoubleSize(222, interactionRate_);
    }
    if (((bitField1_ & 0x00000020) != 0)) {
      size += com.google.protobuf.CodedOutputStream
        .computeInt64Size(223, interactions_);
    }
    if (((bitField1_ & 0x00000040) != 0)) {
      size += com.google.protobuf.CodedOutputStream
        .computeDoubleSize(224, invalidClickRate_);
    }
    if (((bitField1_ & 0x00000080) != 0)) {
      size += com.google.protobuf.CodedOutputStream
        .computeInt64Size(225, invalidClicks_);
    }
    if (((bitField1_ & 0x00000100) != 0)) {
      size += com.google.protobuf.CodedOutputStream
        .computeDoubleSize(229, mobileFriendlyClicksPercentage_);
    }
    if (java.lang.Double.doubleToRawLongBits(allConversionsValueByConversionDate_) != 0) {
      size += com.google.protobuf.CodedOutputStream
        .computeDoubleSize(240, allConversionsValueByConversionDate_);
    }
    if (java.lang.Double.doubleToRawLongBits(allConversionsByConversionDate_) != 0) {
      size += com.google.protobuf.CodedOutputStream
        .computeDoubleSize(241, allConversionsByConversionDate_);
    }
    if (((bitField1_ & 0x00400000) != 0)) {
      size += com.google.protobuf.CodedOutputStream
        .computeDoubleSize(244, valuePerAllConversionsByConversionDate_);
    }
    if (((bitField1_ & 0x00000001) != 0)) {
      size += com.google.protobuf.CodedOutputStream
        .computeDoubleSize(251, conversions_);
    }
    if (((bitField1_ & 0x00000002) != 0)) {
      size += com.google.protobuf.CodedOutputStream
        .computeDoubleSize(252, conversionsValue_);
    }
    if (((bitField0_ & 0x40000000) != 0)) {
      size += com.google.protobuf.CodedOutputStream
        .computeDoubleSize(253, crossDeviceConversionsValue_);
    }
    if (java.lang.Double.doubleToRawLongBits(conversionsByConversionDate_) != 0) {
      size += com.google.protobuf.CodedOutputStream
        .computeDoubleSize(282, conversionsByConversionDate_);
    }
    if (java.lang.Double.doubleToRawLongBits(conversionsValueByConversionDate_) != 0) {
      size += com.google.protobuf.CodedOutputStream
        .computeDoubleSize(283, conversionsValueByConversionDate_);
    }
    if (((bitField0_ & 0x00100000) != 0)) {
      size += com.google.protobuf.CodedOutputStream
        .computeDoubleSize(284, conversionsFromInteractionsRate_);
    }
    if (((bitField1_ & 0x01000000) != 0)) {
      size += com.google.protobuf.CodedOutputStream
        .computeDoubleSize(285, valuePerConversionsByConversionDate_);
    }
    if (((bitField0_ & 0x08000000) != 0)) {
      size += com.google.protobuf.CodedOutputStream
        .computeDoubleSize(286, costPerConversion_);
    }
    if (((bitField1_ & 0x00800000) != 0)) {
      size += com.google.protobuf.CodedOutputStream
        .computeDoubleSize(287, valuePerConversion_);
    }
    if (((bitField0_ & 0x00400000) != 0)) {
      size += com.google.protobuf.CodedOutputStream
        .computeDoubleSize(288, conversionsValuePerCost_);
    }
    size += getUnknownFields().getSerializedSize();
    memoizedSize = size;
    return size;
  }

  @java.lang.Override
  public boolean equals(final java.lang.Object obj) {
    if (obj == this) {
     return true;
    }
    if (!(obj instanceof com.google.ads.searchads360.v0.common.Metrics)) {
      return super.equals(obj);
    }
    com.google.ads.searchads360.v0.common.Metrics other = (com.google.ads.searchads360.v0.common.Metrics) obj;

    if (hasAbsoluteTopImpressionPercentage() != other.hasAbsoluteTopImpressionPercentage()) return false;
    if (hasAbsoluteTopImpressionPercentage()) {
      if (java.lang.Double.doubleToLongBits(getAbsoluteTopImpressionPercentage())
          != java.lang.Double.doubleToLongBits(
              other.getAbsoluteTopImpressionPercentage())) return false;
    }
    if (hasAllConversionsFromInteractionsRate() != other.hasAllConversionsFromInteractionsRate()) return false;
    if (hasAllConversionsFromInteractionsRate()) {
      if (java.lang.Double.doubleToLongBits(getAllConversionsFromInteractionsRate())
          != java.lang.Double.doubleToLongBits(
              other.getAllConversionsFromInteractionsRate())) return false;
    }
    if (hasAllConversionsValue() != other.hasAllConversionsValue()) return false;
    if (hasAllConversionsValue()) {
      if (java.lang.Double.doubleToLongBits(getAllConversionsValue())
          != java.lang.Double.doubleToLongBits(
              other.getAllConversionsValue())) return false;
    }
    if (java.lang.Double.doubleToLongBits(getAllConversionsValueByConversionDate())
        != java.lang.Double.doubleToLongBits(
            other.getAllConversionsValueByConversionDate())) return false;
    if (hasAllConversions() != other.hasAllConversions()) return false;
    if (hasAllConversions()) {
      if (java.lang.Double.doubleToLongBits(getAllConversions())
          != java.lang.Double.doubleToLongBits(
              other.getAllConversions())) return false;
    }
    if (java.lang.Double.doubleToLongBits(getAllConversionsByConversionDate())
        != java.lang.Double.doubleToLongBits(
            other.getAllConversionsByConversionDate())) return false;
    if (hasAllConversionsValuePerCost() != other.hasAllConversionsValuePerCost()) return false;
    if (hasAllConversionsValuePerCost()) {
      if (java.lang.Double.doubleToLongBits(getAllConversionsValuePerCost())
          != java.lang.Double.doubleToLongBits(
              other.getAllConversionsValuePerCost())) return false;
    }
    if (hasAllConversionsFromClickToCall() != other.hasAllConversionsFromClickToCall()) return false;
    if (hasAllConversionsFromClickToCall()) {
      if (java.lang.Double.doubleToLongBits(getAllConversionsFromClickToCall())
          != java.lang.Double.doubleToLongBits(
              other.getAllConversionsFromClickToCall())) return false;
    }
    if (hasAllConversionsFromDirections() != other.hasAllConversionsFromDirections()) return false;
    if (hasAllConversionsFromDirections()) {
      if (java.lang.Double.doubleToLongBits(getAllConversionsFromDirections())
          != java.lang.Double.doubleToLongBits(
              other.getAllConversionsFromDirections())) return false;
    }
    if (hasAllConversionsFromInteractionsValuePerInteraction() != other.hasAllConversionsFromInteractionsValuePerInteraction()) return false;
    if (hasAllConversionsFromInteractionsValuePerInteraction()) {
      if (java.lang.Double.doubleToLongBits(getAllConversionsFromInteractionsValuePerInteraction())
          != java.lang.Double.doubleToLongBits(
              other.getAllConversionsFromInteractionsValuePerInteraction())) return false;
    }
    if (hasAllConversionsFromMenu() != other.hasAllConversionsFromMenu()) return false;
    if (hasAllConversionsFromMenu()) {
      if (java.lang.Double.doubleToLongBits(getAllConversionsFromMenu())
          != java.lang.Double.doubleToLongBits(
              other.getAllConversionsFromMenu())) return false;
    }
    if (hasAllConversionsFromOrder() != other.hasAllConversionsFromOrder()) return false;
    if (hasAllConversionsFromOrder()) {
      if (java.lang.Double.doubleToLongBits(getAllConversionsFromOrder())
          != java.lang.Double.doubleToLongBits(
              other.getAllConversionsFromOrder())) return false;
    }
    if (hasAllConversionsFromOtherEngagement() != other.hasAllConversionsFromOtherEngagement()) return false;
    if (hasAllConversionsFromOtherEngagement()) {
      if (java.lang.Double.doubleToLongBits(getAllConversionsFromOtherEngagement())
          != java.lang.Double.doubleToLongBits(
              other.getAllConversionsFromOtherEngagement())) return false;
    }
    if (hasAllConversionsFromStoreVisit() != other.hasAllConversionsFromStoreVisit()) return false;
    if (hasAllConversionsFromStoreVisit()) {
      if (java.lang.Double.doubleToLongBits(getAllConversionsFromStoreVisit())
          != java.lang.Double.doubleToLongBits(
              other.getAllConversionsFromStoreVisit())) return false;
    }
    if (hasAllConversionsFromStoreWebsite() != other.hasAllConversionsFromStoreWebsite()) return false;
    if (hasAllConversionsFromStoreWebsite()) {
      if (java.lang.Double.doubleToLongBits(getAllConversionsFromStoreWebsite())
          != java.lang.Double.doubleToLongBits(
              other.getAllConversionsFromStoreWebsite())) return false;
    }
    if (hasAverageCost() != other.hasAverageCost()) return false;
    if (hasAverageCost()) {
      if (java.lang.Double.doubleToLongBits(getAverageCost())
          != java.lang.Double.doubleToLongBits(
              other.getAverageCost())) return false;
    }
    if (hasAverageCpc() != other.hasAverageCpc()) return false;
    if (hasAverageCpc()) {
      if (java.lang.Double.doubleToLongBits(getAverageCpc())
          != java.lang.Double.doubleToLongBits(
              other.getAverageCpc())) return false;
    }
    if (hasAverageCpm() != other.hasAverageCpm()) return false;
    if (hasAverageCpm()) {
      if (java.lang.Double.doubleToLongBits(getAverageCpm())
          != java.lang.Double.doubleToLongBits(
              other.getAverageCpm())) return false;
    }
    if (hasClicks() != other.hasClicks()) return false;
    if (hasClicks()) {
      if (getClicks()
          != other.getClicks()) return false;
    }
    if (hasContentBudgetLostImpressionShare() != other.hasContentBudgetLostImpressionShare()) return false;
    if (hasContentBudgetLostImpressionShare()) {
      if (java.lang.Double.doubleToLongBits(getContentBudgetLostImpressionShare())
          != java.lang.Double.doubleToLongBits(
              other.getContentBudgetLostImpressionShare())) return false;
    }
    if (hasContentImpressionShare() != other.hasContentImpressionShare()) return false;
    if (hasContentImpressionShare()) {
      if (java.lang.Double.doubleToLongBits(getContentImpressionShare())
          != java.lang.Double.doubleToLongBits(
              other.getContentImpressionShare())) return false;
    }
    if (hasContentRankLostImpressionShare() != other.hasContentRankLostImpressionShare()) return false;
    if (hasContentRankLostImpressionShare()) {
      if (java.lang.Double.doubleToLongBits(getContentRankLostImpressionShare())
          != java.lang.Double.doubleToLongBits(
              other.getContentRankLostImpressionShare())) return false;
    }
    if (hasConversionsFromInteractionsRate() != other.hasConversionsFromInteractionsRate()) return false;
    if (hasConversionsFromInteractionsRate()) {
      if (java.lang.Double.doubleToLongBits(getConversionsFromInteractionsRate())
          != java.lang.Double.doubleToLongBits(
              other.getConversionsFromInteractionsRate())) return false;
    }
    if (hasClientAccountConversionsValue() != other.hasClientAccountConversionsValue()) return false;
    if (hasClientAccountConversionsValue()) {
      if (java.lang.Double.doubleToLongBits(getClientAccountConversionsValue())
          != java.lang.Double.doubleToLongBits(
              other.getClientAccountConversionsValue())) return false;
    }
    if (java.lang.Double.doubleToLongBits(getConversionsValueByConversionDate())
        != java.lang.Double.doubleToLongBits(
            other.getConversionsValueByConversionDate())) return false;
    if (hasConversionsValuePerCost() != other.hasConversionsValuePerCost()) return false;
    if (hasConversionsValuePerCost()) {
      if (java.lang.Double.doubleToLongBits(getConversionsValuePerCost())
          != java.lang.Double.doubleToLongBits(
              other.getConversionsValuePerCost())) return false;
    }
    if (hasConversionsFromInteractionsValuePerInteraction() != other.hasConversionsFromInteractionsValuePerInteraction()) return false;
    if (hasConversionsFromInteractionsValuePerInteraction()) {
      if (java.lang.Double.doubleToLongBits(getConversionsFromInteractionsValuePerInteraction())
          != java.lang.Double.doubleToLongBits(
              other.getConversionsFromInteractionsValuePerInteraction())) return false;
    }
    if (hasClientAccountConversions() != other.hasClientAccountConversions()) return false;
    if (hasClientAccountConversions()) {
      if (java.lang.Double.doubleToLongBits(getClientAccountConversions())
          != java.lang.Double.doubleToLongBits(
              other.getClientAccountConversions())) return false;
    }
    if (java.lang.Double.doubleToLongBits(getConversionsByConversionDate())
        != java.lang.Double.doubleToLongBits(
            other.getConversionsByConversionDate())) return false;
    if (hasCostMicros() != other.hasCostMicros()) return false;
    if (hasCostMicros()) {
      if (getCostMicros()
          != other.getCostMicros()) return false;
    }
    if (hasCostPerAllConversions() != other.hasCostPerAllConversions()) return false;
    if (hasCostPerAllConversions()) {
      if (java.lang.Double.doubleToLongBits(getCostPerAllConversions())
          != java.lang.Double.doubleToLongBits(
              other.getCostPerAllConversions())) return false;
    }
    if (hasCostPerConversion() != other.hasCostPerConversion()) return false;
    if (hasCostPerConversion()) {
      if (java.lang.Double.doubleToLongBits(getCostPerConversion())
          != java.lang.Double.doubleToLongBits(
              other.getCostPerConversion())) return false;
    }
    if (hasCostPerCurrentModelAttributedConversion() != other.hasCostPerCurrentModelAttributedConversion()) return false;
    if (hasCostPerCurrentModelAttributedConversion()) {
      if (java.lang.Double.doubleToLongBits(getCostPerCurrentModelAttributedConversion())
          != java.lang.Double.doubleToLongBits(
              other.getCostPerCurrentModelAttributedConversion())) return false;
    }
    if (hasCrossDeviceConversions() != other.hasCrossDeviceConversions()) return false;
    if (hasCrossDeviceConversions()) {
      if (java.lang.Double.doubleToLongBits(getCrossDeviceConversions())
          != java.lang.Double.doubleToLongBits(
              other.getCrossDeviceConversions())) return false;
    }
    if (hasCrossDeviceConversionsValue() != other.hasCrossDeviceConversionsValue()) return false;
    if (hasCrossDeviceConversionsValue()) {
      if (java.lang.Double.doubleToLongBits(getCrossDeviceConversionsValue())
          != java.lang.Double.doubleToLongBits(
              other.getCrossDeviceConversionsValue())) return false;
    }
    if (hasCtr() != other.hasCtr()) return false;
    if (hasCtr()) {
      if (java.lang.Double.doubleToLongBits(getCtr())
          != java.lang.Double.doubleToLongBits(
              other.getCtr())) return false;
    }
    if (hasConversions() != other.hasConversions()) return false;
    if (hasConversions()) {
      if (java.lang.Double.doubleToLongBits(getConversions())
          != java.lang.Double.doubleToLongBits(
              other.getConversions())) return false;
    }
    if (hasConversionsValue() != other.hasConversionsValue()) return false;
    if (hasConversionsValue()) {
      if (java.lang.Double.doubleToLongBits(getConversionsValue())
          != java.lang.Double.doubleToLongBits(
              other.getConversionsValue())) return false;
    }
    if (historicalCreativeQualityScore_ != other.historicalCreativeQualityScore_) return false;
    if (historicalLandingPageQualityScore_ != other.historicalLandingPageQualityScore_) return false;
    if (hasHistoricalQualityScore() != other.hasHistoricalQualityScore()) return false;
    if (hasHistoricalQualityScore()) {
      if (getHistoricalQualityScore()
          != other.getHistoricalQualityScore()) return false;
    }
    if (historicalSearchPredictedCtr_ != other.historicalSearchPredictedCtr_) return false;
    if (hasImpressions() != other.hasImpressions()) return false;
    if (hasImpressions()) {
      if (getImpressions()
          != other.getImpressions()) return false;
    }
    if (hasInteractionRate() != other.hasInteractionRate()) return false;
    if (hasInteractionRate()) {
      if (java.lang.Double.doubleToLongBits(getInteractionRate())
          != java.lang.Double.doubleToLongBits(
              other.getInteractionRate())) return false;
    }
    if (hasInteractions() != other.hasInteractions()) return false;
    if (hasInteractions()) {
      if (getInteractions()
          != other.getInteractions()) return false;
    }
    if (!interactionEventTypes_.equals(other.interactionEventTypes_)) return false;
    if (hasInvalidClickRate() != other.hasInvalidClickRate()) return false;
    if (hasInvalidClickRate()) {
      if (java.lang.Double.doubleToLongBits(getInvalidClickRate())
          != java.lang.Double.doubleToLongBits(
              other.getInvalidClickRate())) return false;
    }
    if (hasInvalidClicks() != other.hasInvalidClicks()) return false;
    if (hasInvalidClicks()) {
      if (getInvalidClicks()
          != other.getInvalidClicks()) return false;
    }
    if (hasMobileFriendlyClicksPercentage() != other.hasMobileFriendlyClicksPercentage()) return false;
    if (hasMobileFriendlyClicksPercentage()) {
      if (java.lang.Double.doubleToLongBits(getMobileFriendlyClicksPercentage())
          != java.lang.Double.doubleToLongBits(
              other.getMobileFriendlyClicksPercentage())) return false;
    }
    if (hasSearchAbsoluteTopImpressionShare() != other.hasSearchAbsoluteTopImpressionShare()) return false;
    if (hasSearchAbsoluteTopImpressionShare()) {
      if (java.lang.Double.doubleToLongBits(getSearchAbsoluteTopImpressionShare())
          != java.lang.Double.doubleToLongBits(
              other.getSearchAbsoluteTopImpressionShare())) return false;
    }
    if (hasSearchBudgetLostAbsoluteTopImpressionShare() != other.hasSearchBudgetLostAbsoluteTopImpressionShare()) return false;
    if (hasSearchBudgetLostAbsoluteTopImpressionShare()) {
      if (java.lang.Double.doubleToLongBits(getSearchBudgetLostAbsoluteTopImpressionShare())
          != java.lang.Double.doubleToLongBits(
              other.getSearchBudgetLostAbsoluteTopImpressionShare())) return false;
    }
    if (hasSearchBudgetLostImpressionShare() != other.hasSearchBudgetLostImpressionShare()) return false;
    if (hasSearchBudgetLostImpressionShare()) {
      if (java.lang.Double.doubleToLongBits(getSearchBudgetLostImpressionShare())
          != java.lang.Double.doubleToLongBits(
              other.getSearchBudgetLostImpressionShare())) return false;
    }
    if (hasSearchBudgetLostTopImpressionShare() != other.hasSearchBudgetLostTopImpressionShare()) return false;
    if (hasSearchBudgetLostTopImpressionShare()) {
      if (java.lang.Double.doubleToLongBits(getSearchBudgetLostTopImpressionShare())
          != java.lang.Double.doubleToLongBits(
              other.getSearchBudgetLostTopImpressionShare())) return false;
    }
    if (hasSearchClickShare() != other.hasSearchClickShare()) return false;
    if (hasSearchClickShare()) {
      if (java.lang.Double.doubleToLongBits(getSearchClickShare())
          != java.lang.Double.doubleToLongBits(
              other.getSearchClickShare())) return false;
    }
    if (hasSearchExactMatchImpressionShare() != other.hasSearchExactMatchImpressionShare()) return false;
    if (hasSearchExactMatchImpressionShare()) {
      if (java.lang.Double.doubleToLongBits(getSearchExactMatchImpressionShare())
          != java.lang.Double.doubleToLongBits(
              other.getSearchExactMatchImpressionShare())) return false;
    }
    if (hasSearchImpressionShare() != other.hasSearchImpressionShare()) return false;
    if (hasSearchImpressionShare()) {
      if (java.lang.Double.doubleToLongBits(getSearchImpressionShare())
          != java.lang.Double.doubleToLongBits(
              other.getSearchImpressionShare())) return false;
    }
    if (hasSearchRankLostAbsoluteTopImpressionShare() != other.hasSearchRankLostAbsoluteTopImpressionShare()) return false;
    if (hasSearchRankLostAbsoluteTopImpressionShare()) {
      if (java.lang.Double.doubleToLongBits(getSearchRankLostAbsoluteTopImpressionShare())
          != java.lang.Double.doubleToLongBits(
              other.getSearchRankLostAbsoluteTopImpressionShare())) return false;
    }
    if (hasSearchRankLostImpressionShare() != other.hasSearchRankLostImpressionShare()) return false;
    if (hasSearchRankLostImpressionShare()) {
      if (java.lang.Double.doubleToLongBits(getSearchRankLostImpressionShare())
          != java.lang.Double.doubleToLongBits(
              other.getSearchRankLostImpressionShare())) return false;
    }
    if (hasSearchRankLostTopImpressionShare() != other.hasSearchRankLostTopImpressionShare()) return false;
    if (hasSearchRankLostTopImpressionShare()) {
      if (java.lang.Double.doubleToLongBits(getSearchRankLostTopImpressionShare())
          != java.lang.Double.doubleToLongBits(
              other.getSearchRankLostTopImpressionShare())) return false;
    }
    if (hasSearchTopImpressionShare() != other.hasSearchTopImpressionShare()) return false;
    if (hasSearchTopImpressionShare()) {
      if (java.lang.Double.doubleToLongBits(getSearchTopImpressionShare())
          != java.lang.Double.doubleToLongBits(
              other.getSearchTopImpressionShare())) return false;
    }
    if (hasTopImpressionPercentage() != other.hasTopImpressionPercentage()) return false;
    if (hasTopImpressionPercentage()) {
      if (java.lang.Double.doubleToLongBits(getTopImpressionPercentage())
          != java.lang.Double.doubleToLongBits(
              other.getTopImpressionPercentage())) return false;
    }
    if (hasValuePerAllConversions() != other.hasValuePerAllConversions()) return false;
    if (hasValuePerAllConversions()) {
      if (java.lang.Double.doubleToLongBits(getValuePerAllConversions())
          != java.lang.Double.doubleToLongBits(
              other.getValuePerAllConversions())) return false;
    }
    if (hasValuePerAllConversionsByConversionDate() != other.hasValuePerAllConversionsByConversionDate()) return false;
    if (hasValuePerAllConversionsByConversionDate()) {
      if (java.lang.Double.doubleToLongBits(getValuePerAllConversionsByConversionDate())
          != java.lang.Double.doubleToLongBits(
              other.getValuePerAllConversionsByConversionDate())) return false;
    }
    if (hasValuePerConversion() != other.hasValuePerConversion()) return false;
    if (hasValuePerConversion()) {
      if (java.lang.Double.doubleToLongBits(getValuePerConversion())
          != java.lang.Double.doubleToLongBits(
              other.getValuePerConversion())) return false;
    }
    if (hasValuePerConversionsByConversionDate() != other.hasValuePerConversionsByConversionDate()) return false;
    if (hasValuePerConversionsByConversionDate()) {
      if (java.lang.Double.doubleToLongBits(getValuePerConversionsByConversionDate())
          != java.lang.Double.doubleToLongBits(
              other.getValuePerConversionsByConversionDate())) return false;
    }
    if (hasClientAccountViewThroughConversions() != other.hasClientAccountViewThroughConversions()) return false;
    if (hasClientAccountViewThroughConversions()) {
      if (getClientAccountViewThroughConversions()
          != other.getClientAccountViewThroughConversions()) return false;
    }
    if (!getUnknownFields().equals(other.getUnknownFields())) return false;
    return true;
  }

  @java.lang.Override
  public int hashCode() {
    if (memoizedHashCode != 0) {
      return memoizedHashCode;
    }
    int hash = 41;
    hash = (19 * hash) + getDescriptor().hashCode();
    if (hasAbsoluteTopImpressionPercentage()) {
      hash = (37 * hash) + ABSOLUTE_TOP_IMPRESSION_PERCENTAGE_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
          java.lang.Double.doubleToLongBits(getAbsoluteTopImpressionPercentage()));
    }
    if (hasAllConversionsFromInteractionsRate()) {
      hash = (37 * hash) + ALL_CONVERSIONS_FROM_INTERACTIONS_RATE_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
          java.lang.Double.doubleToLongBits(getAllConversionsFromInteractionsRate()));
    }
    if (hasAllConversionsValue()) {
      hash = (37 * hash) + ALL_CONVERSIONS_VALUE_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
          java.lang.Double.doubleToLongBits(getAllConversionsValue()));
    }
    hash = (37 * hash) + ALL_CONVERSIONS_VALUE_BY_CONVERSION_DATE_FIELD_NUMBER;
    hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
        java.lang.Double.doubleToLongBits(getAllConversionsValueByConversionDate()));
    if (hasAllConversions()) {
      hash = (37 * hash) + ALL_CONVERSIONS_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
          java.lang.Double.doubleToLongBits(getAllConversions()));
    }
    hash = (37 * hash) + ALL_CONVERSIONS_BY_CONVERSION_DATE_FIELD_NUMBER;
    hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
        java.lang.Double.doubleToLongBits(getAllConversionsByConversionDate()));
    if (hasAllConversionsValuePerCost()) {
      hash = (37 * hash) + ALL_CONVERSIONS_VALUE_PER_COST_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
          java.lang.Double.doubleToLongBits(getAllConversionsValuePerCost()));
    }
    if (hasAllConversionsFromClickToCall()) {
      hash = (37 * hash) + ALL_CONVERSIONS_FROM_CLICK_TO_CALL_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
          java.lang.Double.doubleToLongBits(getAllConversionsFromClickToCall()));
    }
    if (hasAllConversionsFromDirections()) {
      hash = (37 * hash) + ALL_CONVERSIONS_FROM_DIRECTIONS_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
          java.lang.Double.doubleToLongBits(getAllConversionsFromDirections()));
    }
    if (hasAllConversionsFromInteractionsValuePerInteraction()) {
      hash = (37 * hash) + ALL_CONVERSIONS_FROM_INTERACTIONS_VALUE_PER_INTERACTION_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
          java.lang.Double.doubleToLongBits(getAllConversionsFromInteractionsValuePerInteraction()));
    }
    if (hasAllConversionsFromMenu()) {
      hash = (37 * hash) + ALL_CONVERSIONS_FROM_MENU_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
          java.lang.Double.doubleToLongBits(getAllConversionsFromMenu()));
    }
    if (hasAllConversionsFromOrder()) {
      hash = (37 * hash) + ALL_CONVERSIONS_FROM_ORDER_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
          java.lang.Double.doubleToLongBits(getAllConversionsFromOrder()));
    }
    if (hasAllConversionsFromOtherEngagement()) {
      hash = (37 * hash) + ALL_CONVERSIONS_FROM_OTHER_ENGAGEMENT_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
          java.lang.Double.doubleToLongBits(getAllConversionsFromOtherEngagement()));
    }
    if (hasAllConversionsFromStoreVisit()) {
      hash = (37 * hash) + ALL_CONVERSIONS_FROM_STORE_VISIT_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
          java.lang.Double.doubleToLongBits(getAllConversionsFromStoreVisit()));
    }
    if (hasAllConversionsFromStoreWebsite()) {
      hash = (37 * hash) + ALL_CONVERSIONS_FROM_STORE_WEBSITE_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
          java.lang.Double.doubleToLongBits(getAllConversionsFromStoreWebsite()));
    }
    if (hasAverageCost()) {
      hash = (37 * hash) + AVERAGE_COST_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
          java.lang.Double.doubleToLongBits(getAverageCost()));
    }
    if (hasAverageCpc()) {
      hash = (37 * hash) + AVERAGE_CPC_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
          java.lang.Double.doubleToLongBits(getAverageCpc()));
    }
    if (hasAverageCpm()) {
      hash = (37 * hash) + AVERAGE_CPM_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
          java.lang.Double.doubleToLongBits(getAverageCpm()));
    }
    if (hasClicks()) {
      hash = (37 * hash) + CLICKS_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
          getClicks());
    }
    if (hasContentBudgetLostImpressionShare()) {
      hash = (37 * hash) + CONTENT_BUDGET_LOST_IMPRESSION_SHARE_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
          java.lang.Double.doubleToLongBits(getContentBudgetLostImpressionShare()));
    }
    if (hasContentImpressionShare()) {
      hash = (37 * hash) + CONTENT_IMPRESSION_SHARE_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
          java.lang.Double.doubleToLongBits(getContentImpressionShare()));
    }
    if (hasContentRankLostImpressionShare()) {
      hash = (37 * hash) + CONTENT_RANK_LOST_IMPRESSION_SHARE_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
          java.lang.Double.doubleToLongBits(getContentRankLostImpressionShare()));
    }
    if (hasConversionsFromInteractionsRate()) {
      hash = (37 * hash) + CONVERSIONS_FROM_INTERACTIONS_RATE_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
          java.lang.Double.doubleToLongBits(getConversionsFromInteractionsRate()));
    }
    if (hasClientAccountConversionsValue()) {
      hash = (37 * hash) + CLIENT_ACCOUNT_CONVERSIONS_VALUE_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
          java.lang.Double.doubleToLongBits(getClientAccountConversionsValue()));
    }
    hash = (37 * hash) + CONVERSIONS_VALUE_BY_CONVERSION_DATE_FIELD_NUMBER;
    hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
        java.lang.Double.doubleToLongBits(getConversionsValueByConversionDate()));
    if (hasConversionsValuePerCost()) {
      hash = (37 * hash) + CONVERSIONS_VALUE_PER_COST_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
          java.lang.Double.doubleToLongBits(getConversionsValuePerCost()));
    }
    if (hasConversionsFromInteractionsValuePerInteraction()) {
      hash = (37 * hash) + CONVERSIONS_FROM_INTERACTIONS_VALUE_PER_INTERACTION_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
          java.lang.Double.doubleToLongBits(getConversionsFromInteractionsValuePerInteraction()));
    }
    if (hasClientAccountConversions()) {
      hash = (37 * hash) + CLIENT_ACCOUNT_CONVERSIONS_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
          java.lang.Double.doubleToLongBits(getClientAccountConversions()));
    }
    hash = (37 * hash) + CONVERSIONS_BY_CONVERSION_DATE_FIELD_NUMBER;
    hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
        java.lang.Double.doubleToLongBits(getConversionsByConversionDate()));
    if (hasCostMicros()) {
      hash = (37 * hash) + COST_MICROS_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
          getCostMicros());
    }
    if (hasCostPerAllConversions()) {
      hash = (37 * hash) + COST_PER_ALL_CONVERSIONS_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
          java.lang.Double.doubleToLongBits(getCostPerAllConversions()));
    }
    if (hasCostPerConversion()) {
      hash = (37 * hash) + COST_PER_CONVERSION_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
          java.lang.Double.doubleToLongBits(getCostPerConversion()));
    }
    if (hasCostPerCurrentModelAttributedConversion()) {
      hash = (37 * hash) + COST_PER_CURRENT_MODEL_ATTRIBUTED_CONVERSION_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
          java.lang.Double.doubleToLongBits(getCostPerCurrentModelAttributedConversion()));
    }
    if (hasCrossDeviceConversions()) {
      hash = (37 * hash) + CROSS_DEVICE_CONVERSIONS_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
          java.lang.Double.doubleToLongBits(getCrossDeviceConversions()));
    }
    if (hasCrossDeviceConversionsValue()) {
      hash = (37 * hash) + CROSS_DEVICE_CONVERSIONS_VALUE_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
          java.lang.Double.doubleToLongBits(getCrossDeviceConversionsValue()));
    }
    if (hasCtr()) {
      hash = (37 * hash) + CTR_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
          java.lang.Double.doubleToLongBits(getCtr()));
    }
    if (hasConversions()) {
      hash = (37 * hash) + CONVERSIONS_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
          java.lang.Double.doubleToLongBits(getConversions()));
    }
    if (hasConversionsValue()) {
      hash = (37 * hash) + CONVERSIONS_VALUE_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
          java.lang.Double.doubleToLongBits(getConversionsValue()));
    }
    hash = (37 * hash) + HISTORICAL_CREATIVE_QUALITY_SCORE_FIELD_NUMBER;
    hash = (53 * hash) + historicalCreativeQualityScore_;
    hash = (37 * hash) + HISTORICAL_LANDING_PAGE_QUALITY_SCORE_FIELD_NUMBER;
    hash = (53 * hash) + historicalLandingPageQualityScore_;
    if (hasHistoricalQualityScore()) {
      hash = (37 * hash) + HISTORICAL_QUALITY_SCORE_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
          getHistoricalQualityScore());
    }
    hash = (37 * hash) + HISTORICAL_SEARCH_PREDICTED_CTR_FIELD_NUMBER;
    hash = (53 * hash) + historicalSearchPredictedCtr_;
    if (hasImpressions()) {
      hash = (37 * hash) + IMPRESSIONS_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
          getImpressions());
    }
    if (hasInteractionRate()) {
      hash = (37 * hash) + INTERACTION_RATE_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
          java.lang.Double.doubleToLongBits(getInteractionRate()));
    }
    if (hasInteractions()) {
      hash = (37 * hash) + INTERACTIONS_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
          getInteractions());
    }
    if (getInteractionEventTypesCount() > 0) {
      hash = (37 * hash) + INTERACTION_EVENT_TYPES_FIELD_NUMBER;
      hash = (53 * hash) + interactionEventTypes_.hashCode();
    }
    if (hasInvalidClickRate()) {
      hash = (37 * hash) + INVALID_CLICK_RATE_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
          java.lang.Double.doubleToLongBits(getInvalidClickRate()));
    }
    if (hasInvalidClicks()) {
      hash = (37 * hash) + INVALID_CLICKS_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
          getInvalidClicks());
    }
    if (hasMobileFriendlyClicksPercentage()) {
      hash = (37 * hash) + MOBILE_FRIENDLY_CLICKS_PERCENTAGE_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
          java.lang.Double.doubleToLongBits(getMobileFriendlyClicksPercentage()));
    }
    if (hasSearchAbsoluteTopImpressionShare()) {
      hash = (37 * hash) + SEARCH_ABSOLUTE_TOP_IMPRESSION_SHARE_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
          java.lang.Double.doubleToLongBits(getSearchAbsoluteTopImpressionShare()));
    }
    if (hasSearchBudgetLostAbsoluteTopImpressionShare()) {
      hash = (37 * hash) + SEARCH_BUDGET_LOST_ABSOLUTE_TOP_IMPRESSION_SHARE_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
          java.lang.Double.doubleToLongBits(getSearchBudgetLostAbsoluteTopImpressionShare()));
    }
    if (hasSearchBudgetLostImpressionShare()) {
      hash = (37 * hash) + SEARCH_BUDGET_LOST_IMPRESSION_SHARE_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
          java.lang.Double.doubleToLongBits(getSearchBudgetLostImpressionShare()));
    }
    if (hasSearchBudgetLostTopImpressionShare()) {
      hash = (37 * hash) + SEARCH_BUDGET_LOST_TOP_IMPRESSION_SHARE_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
          java.lang.Double.doubleToLongBits(getSearchBudgetLostTopImpressionShare()));
    }
    if (hasSearchClickShare()) {
      hash = (37 * hash) + SEARCH_CLICK_SHARE_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
          java.lang.Double.doubleToLongBits(getSearchClickShare()));
    }
    if (hasSearchExactMatchImpressionShare()) {
      hash = (37 * hash) + SEARCH_EXACT_MATCH_IMPRESSION_SHARE_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
          java.lang.Double.doubleToLongBits(getSearchExactMatchImpressionShare()));
    }
    if (hasSearchImpressionShare()) {
      hash = (37 * hash) + SEARCH_IMPRESSION_SHARE_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
          java.lang.Double.doubleToLongBits(getSearchImpressionShare()));
    }
    if (hasSearchRankLostAbsoluteTopImpressionShare()) {
      hash = (37 * hash) + SEARCH_RANK_LOST_ABSOLUTE_TOP_IMPRESSION_SHARE_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
          java.lang.Double.doubleToLongBits(getSearchRankLostAbsoluteTopImpressionShare()));
    }
    if (hasSearchRankLostImpressionShare()) {
      hash = (37 * hash) + SEARCH_RANK_LOST_IMPRESSION_SHARE_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
          java.lang.Double.doubleToLongBits(getSearchRankLostImpressionShare()));
    }
    if (hasSearchRankLostTopImpressionShare()) {
      hash = (37 * hash) + SEARCH_RANK_LOST_TOP_IMPRESSION_SHARE_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
          java.lang.Double.doubleToLongBits(getSearchRankLostTopImpressionShare()));
    }
    if (hasSearchTopImpressionShare()) {
      hash = (37 * hash) + SEARCH_TOP_IMPRESSION_SHARE_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
          java.lang.Double.doubleToLongBits(getSearchTopImpressionShare()));
    }
    if (hasTopImpressionPercentage()) {
      hash = (37 * hash) + TOP_IMPRESSION_PERCENTAGE_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
          java.lang.Double.doubleToLongBits(getTopImpressionPercentage()));
    }
    if (hasValuePerAllConversions()) {
      hash = (37 * hash) + VALUE_PER_ALL_CONVERSIONS_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
          java.lang.Double.doubleToLongBits(getValuePerAllConversions()));
    }
    if (hasValuePerAllConversionsByConversionDate()) {
      hash = (37 * hash) + VALUE_PER_ALL_CONVERSIONS_BY_CONVERSION_DATE_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
          java.lang.Double.doubleToLongBits(getValuePerAllConversionsByConversionDate()));
    }
    if (hasValuePerConversion()) {
      hash = (37 * hash) + VALUE_PER_CONVERSION_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
          java.lang.Double.doubleToLongBits(getValuePerConversion()));
    }
    if (hasValuePerConversionsByConversionDate()) {
      hash = (37 * hash) + VALUE_PER_CONVERSIONS_BY_CONVERSION_DATE_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
          java.lang.Double.doubleToLongBits(getValuePerConversionsByConversionDate()));
    }
    if (hasClientAccountViewThroughConversions()) {
      hash = (37 * hash) + CLIENT_ACCOUNT_VIEW_THROUGH_CONVERSIONS_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
          getClientAccountViewThroughConversions());
    }
    hash = (29 * hash) + getUnknownFields().hashCode();
    memoizedHashCode = hash;
    return hash;
  }

  public static com.google.ads.searchads360.v0.common.Metrics parseFrom(
      java.nio.ByteBuffer data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static com.google.ads.searchads360.v0.common.Metrics parseFrom(
      java.nio.ByteBuffer data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static com.google.ads.searchads360.v0.common.Metrics parseFrom(
      com.google.protobuf.ByteString data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static com.google.ads.searchads360.v0.common.Metrics parseFrom(
      com.google.protobuf.ByteString data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static com.google.ads.searchads360.v0.common.Metrics parseFrom(byte[] data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static com.google.ads.searchads360.v0.common.Metrics parseFrom(
      byte[] data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static com.google.ads.searchads360.v0.common.Metrics parseFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input);
  }
  public static com.google.ads.searchads360.v0.common.Metrics parseFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input, extensionRegistry);
  }
  public static com.google.ads.searchads360.v0.common.Metrics parseDelimitedFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseDelimitedWithIOException(PARSER, input);
  }
  public static com.google.ads.searchads360.v0.common.Metrics parseDelimitedFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
  }
  public static com.google.ads.searchads360.v0.common.Metrics parseFrom(
      com.google.protobuf.CodedInputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input);
  }
  public static com.google.ads.searchads360.v0.common.Metrics parseFrom(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input, extensionRegistry);
  }

  @java.lang.Override
  public Builder newBuilderForType() { return newBuilder(); }
  public static Builder newBuilder() {
    return DEFAULT_INSTANCE.toBuilder();
  }
  public static Builder newBuilder(com.google.ads.searchads360.v0.common.Metrics prototype) {
    return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
  }
  @java.lang.Override
  public Builder toBuilder() {
    return this == DEFAULT_INSTANCE
        ? new Builder() : new Builder().mergeFrom(this);
  }

  @java.lang.Override
  protected Builder newBuilderForType(
      com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
    Builder builder = new Builder(parent);
    return builder;
  }
  /**
   * <pre>
   * Metrics data.
   * </pre>
   *
   * Protobuf type {@code google.ads.searchads360.v0.common.Metrics}
   */
  public static final class Builder extends
      com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
      // @@protoc_insertion_point(builder_implements:google.ads.searchads360.v0.common.Metrics)
      com.google.ads.searchads360.v0.common.MetricsOrBuilder {
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.google.ads.searchads360.v0.common.MetricsProto.internal_static_google_ads_searchads360_v0_common_Metrics_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.google.ads.searchads360.v0.common.MetricsProto.internal_static_google_ads_searchads360_v0_common_Metrics_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.google.ads.searchads360.v0.common.Metrics.class, com.google.ads.searchads360.v0.common.Metrics.Builder.class);
    }

    // Construct using com.google.ads.searchads360.v0.common.Metrics.newBuilder()
    private Builder() {

    }

    private Builder(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      super(parent);

    }
    @java.lang.Override
    public Builder clear() {
      super.clear();
      bitField0_ = 0;
      bitField1_ = 0;
      bitField2_ = 0;
      absoluteTopImpressionPercentage_ = 0D;
      allConversionsFromInteractionsRate_ = 0D;
      allConversionsValue_ = 0D;
      allConversionsValueByConversionDate_ = 0D;
      allConversions_ = 0D;
      allConversionsByConversionDate_ = 0D;
      allConversionsValuePerCost_ = 0D;
      allConversionsFromClickToCall_ = 0D;
      allConversionsFromDirections_ = 0D;
      allConversionsFromInteractionsValuePerInteraction_ = 0D;
      allConversionsFromMenu_ = 0D;
      allConversionsFromOrder_ = 0D;
      allConversionsFromOtherEngagement_ = 0D;
      allConversionsFromStoreVisit_ = 0D;
      allConversionsFromStoreWebsite_ = 0D;
      averageCost_ = 0D;
      averageCpc_ = 0D;
      averageCpm_ = 0D;
      clicks_ = 0L;
      contentBudgetLostImpressionShare_ = 0D;
      contentImpressionShare_ = 0D;
      contentRankLostImpressionShare_ = 0D;
      conversionsFromInteractionsRate_ = 0D;
      clientAccountConversionsValue_ = 0D;
      conversionsValueByConversionDate_ = 0D;
      conversionsValuePerCost_ = 0D;
      conversionsFromInteractionsValuePerInteraction_ = 0D;
      clientAccountConversions_ = 0D;
      conversionsByConversionDate_ = 0D;
      costMicros_ = 0L;
      costPerAllConversions_ = 0D;
      costPerConversion_ = 0D;
      costPerCurrentModelAttributedConversion_ = 0D;
      crossDeviceConversions_ = 0D;
      crossDeviceConversionsValue_ = 0D;
      ctr_ = 0D;
      conversions_ = 0D;
      conversionsValue_ = 0D;
      historicalCreativeQualityScore_ = 0;
      historicalLandingPageQualityScore_ = 0;
      historicalQualityScore_ = 0L;
      historicalSearchPredictedCtr_ = 0;
      impressions_ = 0L;
      interactionRate_ = 0D;
      interactions_ = 0L;
      interactionEventTypes_ = java.util.Collections.emptyList();
      bitField1_ = (bitField1_ & ~0x00002000);
      invalidClickRate_ = 0D;
      invalidClicks_ = 0L;
      mobileFriendlyClicksPercentage_ = 0D;
      searchAbsoluteTopImpressionShare_ = 0D;
      searchBudgetLostAbsoluteTopImpressionShare_ = 0D;
      searchBudgetLostImpressionShare_ = 0D;
      searchBudgetLostTopImpressionShare_ = 0D;
      searchClickShare_ = 0D;
      searchExactMatchImpressionShare_ = 0D;
      searchImpressionShare_ = 0D;
      searchRankLostAbsoluteTopImpressionShare_ = 0D;
      searchRankLostImpressionShare_ = 0D;
      searchRankLostTopImpressionShare_ = 0D;
      searchTopImpressionShare_ = 0D;
      topImpressionPercentage_ = 0D;
      valuePerAllConversions_ = 0D;
      valuePerAllConversionsByConversionDate_ = 0D;
      valuePerConversion_ = 0D;
      valuePerConversionsByConversionDate_ = 0D;
      clientAccountViewThroughConversions_ = 0L;
      return this;
    }

    @java.lang.Override
    public com.google.protobuf.Descriptors.Descriptor
        getDescriptorForType() {
      return com.google.ads.searchads360.v0.common.MetricsProto.internal_static_google_ads_searchads360_v0_common_Metrics_descriptor;
    }

    @java.lang.Override
    public com.google.ads.searchads360.v0.common.Metrics getDefaultInstanceForType() {
      return com.google.ads.searchads360.v0.common.Metrics.getDefaultInstance();
    }

    @java.lang.Override
    public com.google.ads.searchads360.v0.common.Metrics build() {
      com.google.ads.searchads360.v0.common.Metrics result = buildPartial();
      if (!result.isInitialized()) {
        throw newUninitializedMessageException(result);
      }
      return result;
    }

    @java.lang.Override
    public com.google.ads.searchads360.v0.common.Metrics buildPartial() {
      com.google.ads.searchads360.v0.common.Metrics result = new com.google.ads.searchads360.v0.common.Metrics(this);
      buildPartialRepeatedFields(result);
      if (bitField0_ != 0) { buildPartial0(result); }
      if (bitField1_ != 0) { buildPartial1(result); }
      if (bitField2_ != 0) { buildPartial2(result); }
      onBuilt();
      return result;
    }

    private void buildPartialRepeatedFields(com.google.ads.searchads360.v0.common.Metrics result) {
      if (((bitField1_ & 0x00002000) != 0)) {
        interactionEventTypes_ = java.util.Collections.unmodifiableList(interactionEventTypes_);
        bitField1_ = (bitField1_ & ~0x00002000);
      }
      result.interactionEventTypes_ = interactionEventTypes_;
    }

    private void buildPartial0(com.google.ads.searchads360.v0.common.Metrics result) {
      int from_bitField0_ = bitField0_;
      int to_bitField0_ = 0;
      if (((from_bitField0_ & 0x00000001) != 0)) {
        result.absoluteTopImpressionPercentage_ = absoluteTopImpressionPercentage_;
        to_bitField0_ |= 0x00000001;
      }
      if (((from_bitField0_ & 0x00000002) != 0)) {
        result.allConversionsFromInteractionsRate_ = allConversionsFromInteractionsRate_;
        to_bitField0_ |= 0x00000002;
      }
      if (((from_bitField0_ & 0x00000004) != 0)) {
        result.allConversionsValue_ = allConversionsValue_;
        to_bitField0_ |= 0x00000004;
      }
      if (((from_bitField0_ & 0x00000008) != 0)) {
        result.allConversionsValueByConversionDate_ = allConversionsValueByConversionDate_;
      }
      if (((from_bitField0_ & 0x00000010) != 0)) {
        result.allConversions_ = allConversions_;
        to_bitField0_ |= 0x00000008;
      }
      if (((from_bitField0_ & 0x00000020) != 0)) {
        result.allConversionsByConversionDate_ = allConversionsByConversionDate_;
      }
      if (((from_bitField0_ & 0x00000040) != 0)) {
        result.allConversionsValuePerCost_ = allConversionsValuePerCost_;
        to_bitField0_ |= 0x00000010;
      }
      if (((from_bitField0_ & 0x00000080) != 0)) {
        result.allConversionsFromClickToCall_ = allConversionsFromClickToCall_;
        to_bitField0_ |= 0x00000020;
      }
      if (((from_bitField0_ & 0x00000100) != 0)) {
        result.allConversionsFromDirections_ = allConversionsFromDirections_;
        to_bitField0_ |= 0x00000040;
      }
      if (((from_bitField0_ & 0x00000200) != 0)) {
        result.allConversionsFromInteractionsValuePerInteraction_ = allConversionsFromInteractionsValuePerInteraction_;
        to_bitField0_ |= 0x00000080;
      }
      if (((from_bitField0_ & 0x00000400) != 0)) {
        result.allConversionsFromMenu_ = allConversionsFromMenu_;
        to_bitField0_ |= 0x00000100;
      }
      if (((from_bitField0_ & 0x00000800) != 0)) {
        result.allConversionsFromOrder_ = allConversionsFromOrder_;
        to_bitField0_ |= 0x00000200;
      }
      if (((from_bitField0_ & 0x00001000) != 0)) {
        result.allConversionsFromOtherEngagement_ = allConversionsFromOtherEngagement_;
        to_bitField0_ |= 0x00000400;
      }
      if (((from_bitField0_ & 0x00002000) != 0)) {
        result.allConversionsFromStoreVisit_ = allConversionsFromStoreVisit_;
        to_bitField0_ |= 0x00000800;
      }
      if (((from_bitField0_ & 0x00004000) != 0)) {
        result.allConversionsFromStoreWebsite_ = allConversionsFromStoreWebsite_;
        to_bitField0_ |= 0x00001000;
      }
      if (((from_bitField0_ & 0x00008000) != 0)) {
        result.averageCost_ = averageCost_;
        to_bitField0_ |= 0x00002000;
      }
      if (((from_bitField0_ & 0x00010000) != 0)) {
        result.averageCpc_ = averageCpc_;
        to_bitField0_ |= 0x00004000;
      }
      if (((from_bitField0_ & 0x00020000) != 0)) {
        result.averageCpm_ = averageCpm_;
        to_bitField0_ |= 0x00008000;
      }
      if (((from_bitField0_ & 0x00040000) != 0)) {
        result.clicks_ = clicks_;
        to_bitField0_ |= 0x00010000;
      }
      if (((from_bitField0_ & 0x00080000) != 0)) {
        result.contentBudgetLostImpressionShare_ = contentBudgetLostImpressionShare_;
        to_bitField0_ |= 0x00020000;
      }
      if (((from_bitField0_ & 0x00100000) != 0)) {
        result.contentImpressionShare_ = contentImpressionShare_;
        to_bitField0_ |= 0x00040000;
      }
      if (((from_bitField0_ & 0x00200000) != 0)) {
        result.contentRankLostImpressionShare_ = contentRankLostImpressionShare_;
        to_bitField0_ |= 0x00080000;
      }
      if (((from_bitField0_ & 0x00400000) != 0)) {
        result.conversionsFromInteractionsRate_ = conversionsFromInteractionsRate_;
        to_bitField0_ |= 0x00100000;
      }
      if (((from_bitField0_ & 0x00800000) != 0)) {
        result.clientAccountConversionsValue_ = clientAccountConversionsValue_;
        to_bitField0_ |= 0x00200000;
      }
      if (((from_bitField0_ & 0x01000000) != 0)) {
        result.conversionsValueByConversionDate_ = conversionsValueByConversionDate_;
      }
      if (((from_bitField0_ & 0x02000000) != 0)) {
        result.conversionsValuePerCost_ = conversionsValuePerCost_;
        to_bitField0_ |= 0x00400000;
      }
      if (((from_bitField0_ & 0x04000000) != 0)) {
        result.conversionsFromInteractionsValuePerInteraction_ = conversionsFromInteractionsValuePerInteraction_;
        to_bitField0_ |= 0x00800000;
      }
      if (((from_bitField0_ & 0x08000000) != 0)) {
        result.clientAccountConversions_ = clientAccountConversions_;
        to_bitField0_ |= 0x01000000;
      }
      if (((from_bitField0_ & 0x10000000) != 0)) {
        result.conversionsByConversionDate_ = conversionsByConversionDate_;
      }
      if (((from_bitField0_ & 0x20000000) != 0)) {
        result.costMicros_ = costMicros_;
        to_bitField0_ |= 0x02000000;
      }
      if (((from_bitField0_ & 0x40000000) != 0)) {
        result.costPerAllConversions_ = costPerAllConversions_;
        to_bitField0_ |= 0x04000000;
      }
      if (((from_bitField0_ & 0x80000000) != 0)) {
        result.costPerConversion_ = costPerConversion_;
        to_bitField0_ |= 0x08000000;
      }
      result.bitField0_ |= to_bitField0_;
    }

    private void buildPartial1(com.google.ads.searchads360.v0.common.Metrics result) {
      int from_bitField1_ = bitField1_;
      int to_bitField0_ = 0;
      if (((from_bitField1_ & 0x00000001) != 0)) {
        result.costPerCurrentModelAttributedConversion_ = costPerCurrentModelAttributedConversion_;
        to_bitField0_ |= 0x10000000;
      }
      if (((from_bitField1_ & 0x00000002) != 0)) {
        result.crossDeviceConversions_ = crossDeviceConversions_;
        to_bitField0_ |= 0x20000000;
      }
      if (((from_bitField1_ & 0x00000004) != 0)) {
        result.crossDeviceConversionsValue_ = crossDeviceConversionsValue_;
        to_bitField0_ |= 0x40000000;
      }
      if (((from_bitField1_ & 0x00000008) != 0)) {
        result.ctr_ = ctr_;
        to_bitField0_ |= 0x80000000;
      }
      int to_bitField1_ = 0;
      if (((from_bitField1_ & 0x00000010) != 0)) {
        result.conversions_ = conversions_;
        to_bitField1_ |= 0x00000001;
      }
      if (((from_bitField1_ & 0x00000020) != 0)) {
        result.conversionsValue_ = conversionsValue_;
        to_bitField1_ |= 0x00000002;
      }
      if (((from_bitField1_ & 0x00000040) != 0)) {
        result.historicalCreativeQualityScore_ = historicalCreativeQualityScore_;
      }
      if (((from_bitField1_ & 0x00000080) != 0)) {
        result.historicalLandingPageQualityScore_ = historicalLandingPageQualityScore_;
      }
      if (((from_bitField1_ & 0x00000100) != 0)) {
        result.historicalQualityScore_ = historicalQualityScore_;
        to_bitField1_ |= 0x00000004;
      }
      if (((from_bitField1_ & 0x00000200) != 0)) {
        result.historicalSearchPredictedCtr_ = historicalSearchPredictedCtr_;
      }
      if (((from_bitField1_ & 0x00000400) != 0)) {
        result.impressions_ = impressions_;
        to_bitField1_ |= 0x00000008;
      }
      if (((from_bitField1_ & 0x00000800) != 0)) {
        result.interactionRate_ = interactionRate_;
        to_bitField1_ |= 0x00000010;
      }
      if (((from_bitField1_ & 0x00001000) != 0)) {
        result.interactions_ = interactions_;
        to_bitField1_ |= 0x00000020;
      }
      if (((from_bitField1_ & 0x00004000) != 0)) {
        result.invalidClickRate_ = invalidClickRate_;
        to_bitField1_ |= 0x00000040;
      }
      if (((from_bitField1_ & 0x00008000) != 0)) {
        result.invalidClicks_ = invalidClicks_;
        to_bitField1_ |= 0x00000080;
      }
      if (((from_bitField1_ & 0x00010000) != 0)) {
        result.mobileFriendlyClicksPercentage_ = mobileFriendlyClicksPercentage_;
        to_bitField1_ |= 0x00000100;
      }
      if (((from_bitField1_ & 0x00020000) != 0)) {
        result.searchAbsoluteTopImpressionShare_ = searchAbsoluteTopImpressionShare_;
        to_bitField1_ |= 0x00000200;
      }
      if (((from_bitField1_ & 0x00040000) != 0)) {
        result.searchBudgetLostAbsoluteTopImpressionShare_ = searchBudgetLostAbsoluteTopImpressionShare_;
        to_bitField1_ |= 0x00000400;
      }
      if (((from_bitField1_ & 0x00080000) != 0)) {
        result.searchBudgetLostImpressionShare_ = searchBudgetLostImpressionShare_;
        to_bitField1_ |= 0x00000800;
      }
      if (((from_bitField1_ & 0x00100000) != 0)) {
        result.searchBudgetLostTopImpressionShare_ = searchBudgetLostTopImpressionShare_;
        to_bitField1_ |= 0x00001000;
      }
      if (((from_bitField1_ & 0x00200000) != 0)) {
        result.searchClickShare_ = searchClickShare_;
        to_bitField1_ |= 0x00002000;
      }
      if (((from_bitField1_ & 0x00400000) != 0)) {
        result.searchExactMatchImpressionShare_ = searchExactMatchImpressionShare_;
        to_bitField1_ |= 0x00004000;
      }
      if (((from_bitField1_ & 0x00800000) != 0)) {
        result.searchImpressionShare_ = searchImpressionShare_;
        to_bitField1_ |= 0x00008000;
      }
      if (((from_bitField1_ & 0x01000000) != 0)) {
        result.searchRankLostAbsoluteTopImpressionShare_ = searchRankLostAbsoluteTopImpressionShare_;
        to_bitField1_ |= 0x00010000;
      }
      if (((from_bitField1_ & 0x02000000) != 0)) {
        result.searchRankLostImpressionShare_ = searchRankLostImpressionShare_;
        to_bitField1_ |= 0x00020000;
      }
      if (((from_bitField1_ & 0x04000000) != 0)) {
        result.searchRankLostTopImpressionShare_ = searchRankLostTopImpressionShare_;
        to_bitField1_ |= 0x00040000;
      }
      if (((from_bitField1_ & 0x08000000) != 0)) {
        result.searchTopImpressionShare_ = searchTopImpressionShare_;
        to_bitField1_ |= 0x00080000;
      }
      if (((from_bitField1_ & 0x10000000) != 0)) {
        result.topImpressionPercentage_ = topImpressionPercentage_;
        to_bitField1_ |= 0x00100000;
      }
      if (((from_bitField1_ & 0x20000000) != 0)) {
        result.valuePerAllConversions_ = valuePerAllConversions_;
        to_bitField1_ |= 0x00200000;
      }
      if (((from_bitField1_ & 0x40000000) != 0)) {
        result.valuePerAllConversionsByConversionDate_ = valuePerAllConversionsByConversionDate_;
        to_bitField1_ |= 0x00400000;
      }
      if (((from_bitField1_ & 0x80000000) != 0)) {
        result.valuePerConversion_ = valuePerConversion_;
        to_bitField1_ |= 0x00800000;
      }
      result.bitField0_ |= to_bitField0_;
      result.bitField1_ |= to_bitField1_;
    }

    private void buildPartial2(com.google.ads.searchads360.v0.common.Metrics result) {
      int from_bitField2_ = bitField2_;
      int to_bitField1_ = 0;
      if (((from_bitField2_ & 0x00000001) != 0)) {
        result.valuePerConversionsByConversionDate_ = valuePerConversionsByConversionDate_;
        to_bitField1_ |= 0x01000000;
      }
      if (((from_bitField2_ & 0x00000002) != 0)) {
        result.clientAccountViewThroughConversions_ = clientAccountViewThroughConversions_;
        to_bitField1_ |= 0x02000000;
      }
      result.bitField1_ |= to_bitField1_;
    }

    @java.lang.Override
    public Builder clone() {
      return super.clone();
    }
    @java.lang.Override
    public Builder setField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        java.lang.Object value) {
      return super.setField(field, value);
    }
    @java.lang.Override
    public Builder clearField(
        com.google.protobuf.Descriptors.FieldDescriptor field) {
      return super.clearField(field);
    }
    @java.lang.Override
    public Builder clearOneof(
        com.google.protobuf.Descriptors.OneofDescriptor oneof) {
      return super.clearOneof(oneof);
    }
    @java.lang.Override
    public Builder setRepeatedField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        int index, java.lang.Object value) {
      return super.setRepeatedField(field, index, value);
    }
    @java.lang.Override
    public Builder addRepeatedField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        java.lang.Object value) {
      return super.addRepeatedField(field, value);
    }
    @java.lang.Override
    public Builder mergeFrom(com.google.protobuf.Message other) {
      if (other instanceof com.google.ads.searchads360.v0.common.Metrics) {
        return mergeFrom((com.google.ads.searchads360.v0.common.Metrics)other);
      } else {
        super.mergeFrom(other);
        return this;
      }
    }

    public Builder mergeFrom(com.google.ads.searchads360.v0.common.Metrics other) {
      if (other == com.google.ads.searchads360.v0.common.Metrics.getDefaultInstance()) return this;
      if (other.hasAbsoluteTopImpressionPercentage()) {
        setAbsoluteTopImpressionPercentage(other.getAbsoluteTopImpressionPercentage());
      }
      if (other.hasAllConversionsFromInteractionsRate()) {
        setAllConversionsFromInteractionsRate(other.getAllConversionsFromInteractionsRate());
      }
      if (other.hasAllConversionsValue()) {
        setAllConversionsValue(other.getAllConversionsValue());
      }
      if (other.getAllConversionsValueByConversionDate() != 0D) {
        setAllConversionsValueByConversionDate(other.getAllConversionsValueByConversionDate());
      }
      if (other.hasAllConversions()) {
        setAllConversions(other.getAllConversions());
      }
      if (other.getAllConversionsByConversionDate() != 0D) {
        setAllConversionsByConversionDate(other.getAllConversionsByConversionDate());
      }
      if (other.hasAllConversionsValuePerCost()) {
        setAllConversionsValuePerCost(other.getAllConversionsValuePerCost());
      }
      if (other.hasAllConversionsFromClickToCall()) {
        setAllConversionsFromClickToCall(other.getAllConversionsFromClickToCall());
      }
      if (other.hasAllConversionsFromDirections()) {
        setAllConversionsFromDirections(other.getAllConversionsFromDirections());
      }
      if (other.hasAllConversionsFromInteractionsValuePerInteraction()) {
        setAllConversionsFromInteractionsValuePerInteraction(other.getAllConversionsFromInteractionsValuePerInteraction());
      }
      if (other.hasAllConversionsFromMenu()) {
        setAllConversionsFromMenu(other.getAllConversionsFromMenu());
      }
      if (other.hasAllConversionsFromOrder()) {
        setAllConversionsFromOrder(other.getAllConversionsFromOrder());
      }
      if (other.hasAllConversionsFromOtherEngagement()) {
        setAllConversionsFromOtherEngagement(other.getAllConversionsFromOtherEngagement());
      }
      if (other.hasAllConversionsFromStoreVisit()) {
        setAllConversionsFromStoreVisit(other.getAllConversionsFromStoreVisit());
      }
      if (other.hasAllConversionsFromStoreWebsite()) {
        setAllConversionsFromStoreWebsite(other.getAllConversionsFromStoreWebsite());
      }
      if (other.hasAverageCost()) {
        setAverageCost(other.getAverageCost());
      }
      if (other.hasAverageCpc()) {
        setAverageCpc(other.getAverageCpc());
      }
      if (other.hasAverageCpm()) {
        setAverageCpm(other.getAverageCpm());
      }
      if (other.hasClicks()) {
        setClicks(other.getClicks());
      }
      if (other.hasContentBudgetLostImpressionShare()) {
        setContentBudgetLostImpressionShare(other.getContentBudgetLostImpressionShare());
      }
      if (other.hasContentImpressionShare()) {
        setContentImpressionShare(other.getContentImpressionShare());
      }
      if (other.hasContentRankLostImpressionShare()) {
        setContentRankLostImpressionShare(other.getContentRankLostImpressionShare());
      }
      if (other.hasConversionsFromInteractionsRate()) {
        setConversionsFromInteractionsRate(other.getConversionsFromInteractionsRate());
      }
      if (other.hasClientAccountConversionsValue()) {
        setClientAccountConversionsValue(other.getClientAccountConversionsValue());
      }
      if (other.getConversionsValueByConversionDate() != 0D) {
        setConversionsValueByConversionDate(other.getConversionsValueByConversionDate());
      }
      if (other.hasConversionsValuePerCost()) {
        setConversionsValuePerCost(other.getConversionsValuePerCost());
      }
      if (other.hasConversionsFromInteractionsValuePerInteraction()) {
        setConversionsFromInteractionsValuePerInteraction(other.getConversionsFromInteractionsValuePerInteraction());
      }
      if (other.hasClientAccountConversions()) {
        setClientAccountConversions(other.getClientAccountConversions());
      }
      if (other.getConversionsByConversionDate() != 0D) {
        setConversionsByConversionDate(other.getConversionsByConversionDate());
      }
      if (other.hasCostMicros()) {
        setCostMicros(other.getCostMicros());
      }
      if (other.hasCostPerAllConversions()) {
        setCostPerAllConversions(other.getCostPerAllConversions());
      }
      if (other.hasCostPerConversion()) {
        setCostPerConversion(other.getCostPerConversion());
      }
      if (other.hasCostPerCurrentModelAttributedConversion()) {
        setCostPerCurrentModelAttributedConversion(other.getCostPerCurrentModelAttributedConversion());
      }
      if (other.hasCrossDeviceConversions()) {
        setCrossDeviceConversions(other.getCrossDeviceConversions());
      }
      if (other.hasCrossDeviceConversionsValue()) {
        setCrossDeviceConversionsValue(other.getCrossDeviceConversionsValue());
      }
      if (other.hasCtr()) {
        setCtr(other.getCtr());
      }
      if (other.hasConversions()) {
        setConversions(other.getConversions());
      }
      if (other.hasConversionsValue()) {
        setConversionsValue(other.getConversionsValue());
      }
      if (other.historicalCreativeQualityScore_ != 0) {
        setHistoricalCreativeQualityScoreValue(other.getHistoricalCreativeQualityScoreValue());
      }
      if (other.historicalLandingPageQualityScore_ != 0) {
        setHistoricalLandingPageQualityScoreValue(other.getHistoricalLandingPageQualityScoreValue());
      }
      if (other.hasHistoricalQualityScore()) {
        setHistoricalQualityScore(other.getHistoricalQualityScore());
      }
      if (other.historicalSearchPredictedCtr_ != 0) {
        setHistoricalSearchPredictedCtrValue(other.getHistoricalSearchPredictedCtrValue());
      }
      if (other.hasImpressions()) {
        setImpressions(other.getImpressions());
      }
      if (other.hasInteractionRate()) {
        setInteractionRate(other.getInteractionRate());
      }
      if (other.hasInteractions()) {
        setInteractions(other.getInteractions());
      }
      if (!other.interactionEventTypes_.isEmpty()) {
        if (interactionEventTypes_.isEmpty()) {
          interactionEventTypes_ = other.interactionEventTypes_;
          bitField1_ = (bitField1_ & ~0x00002000);
        } else {
          ensureInteractionEventTypesIsMutable();
          interactionEventTypes_.addAll(other.interactionEventTypes_);
        }
        onChanged();
      }
      if (other.hasInvalidClickRate()) {
        setInvalidClickRate(other.getInvalidClickRate());
      }
      if (other.hasInvalidClicks()) {
        setInvalidClicks(other.getInvalidClicks());
      }
      if (other.hasMobileFriendlyClicksPercentage()) {
        setMobileFriendlyClicksPercentage(other.getMobileFriendlyClicksPercentage());
      }
      if (other.hasSearchAbsoluteTopImpressionShare()) {
        setSearchAbsoluteTopImpressionShare(other.getSearchAbsoluteTopImpressionShare());
      }
      if (other.hasSearchBudgetLostAbsoluteTopImpressionShare()) {
        setSearchBudgetLostAbsoluteTopImpressionShare(other.getSearchBudgetLostAbsoluteTopImpressionShare());
      }
      if (other.hasSearchBudgetLostImpressionShare()) {
        setSearchBudgetLostImpressionShare(other.getSearchBudgetLostImpressionShare());
      }
      if (other.hasSearchBudgetLostTopImpressionShare()) {
        setSearchBudgetLostTopImpressionShare(other.getSearchBudgetLostTopImpressionShare());
      }
      if (other.hasSearchClickShare()) {
        setSearchClickShare(other.getSearchClickShare());
      }
      if (other.hasSearchExactMatchImpressionShare()) {
        setSearchExactMatchImpressionShare(other.getSearchExactMatchImpressionShare());
      }
      if (other.hasSearchImpressionShare()) {
        setSearchImpressionShare(other.getSearchImpressionShare());
      }
      if (other.hasSearchRankLostAbsoluteTopImpressionShare()) {
        setSearchRankLostAbsoluteTopImpressionShare(other.getSearchRankLostAbsoluteTopImpressionShare());
      }
      if (other.hasSearchRankLostImpressionShare()) {
        setSearchRankLostImpressionShare(other.getSearchRankLostImpressionShare());
      }
      if (other.hasSearchRankLostTopImpressionShare()) {
        setSearchRankLostTopImpressionShare(other.getSearchRankLostTopImpressionShare());
      }
      if (other.hasSearchTopImpressionShare()) {
        setSearchTopImpressionShare(other.getSearchTopImpressionShare());
      }
      if (other.hasTopImpressionPercentage()) {
        setTopImpressionPercentage(other.getTopImpressionPercentage());
      }
      if (other.hasValuePerAllConversions()) {
        setValuePerAllConversions(other.getValuePerAllConversions());
      }
      if (other.hasValuePerAllConversionsByConversionDate()) {
        setValuePerAllConversionsByConversionDate(other.getValuePerAllConversionsByConversionDate());
      }
      if (other.hasValuePerConversion()) {
        setValuePerConversion(other.getValuePerConversion());
      }
      if (other.hasValuePerConversionsByConversionDate()) {
        setValuePerConversionsByConversionDate(other.getValuePerConversionsByConversionDate());
      }
      if (other.hasClientAccountViewThroughConversions()) {
        setClientAccountViewThroughConversions(other.getClientAccountViewThroughConversions());
      }
      this.mergeUnknownFields(other.getUnknownFields());
      onChanged();
      return this;
    }

    @java.lang.Override
    public final boolean isInitialized() {
      return true;
    }

    @java.lang.Override
    public Builder mergeFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 640: {
              historicalCreativeQualityScore_ = input.readEnum();
              bitField1_ |= 0x00000040;
              break;
            } // case 640
            case 648: {
              historicalLandingPageQualityScore_ = input.readEnum();
              bitField1_ |= 0x00000080;
              break;
            } // case 648
            case 664: {
              historicalSearchPredictedCtr_ = input.readEnum();
              bitField1_ |= 0x00000200;
              break;
            } // case 664
            case 800: {
              int tmpRaw = input.readEnum();
              ensureInteractionEventTypesIsMutable();
              interactionEventTypes_.add(tmpRaw);
              break;
            } // case 800
            case 802: {
              int length = input.readRawVarint32();
              int oldLimit = input.pushLimit(length);
              while(input.getBytesUntilLimit() > 0) {
                int tmpRaw = input.readEnum();
                ensureInteractionEventTypesIsMutable();
                interactionEventTypes_.add(tmpRaw);
              }
              input.popLimit(oldLimit);
              break;
            } // case 802
            case 1048: {
              clicks_ = input.readInt64();
              bitField0_ |= 0x00040000;
              break;
            } // case 1048
            case 1089: {
              searchAbsoluteTopImpressionShare_ = input.readDouble();
              bitField1_ |= 0x00020000;
              break;
            } // case 1089
            case 1097: {
              searchBudgetLostAbsoluteTopImpressionShare_ = input.readDouble();
              bitField1_ |= 0x00040000;
              break;
            } // case 1097
            case 1105: {
              searchBudgetLostImpressionShare_ = input.readDouble();
              bitField1_ |= 0x00080000;
              break;
            } // case 1105
            case 1113: {
              searchBudgetLostTopImpressionShare_ = input.readDouble();
              bitField1_ |= 0x00100000;
              break;
            } // case 1113
            case 1121: {
              searchClickShare_ = input.readDouble();
              bitField1_ |= 0x00200000;
              break;
            } // case 1121
            case 1129: {
              searchExactMatchImpressionShare_ = input.readDouble();
              bitField1_ |= 0x00400000;
              break;
            } // case 1129
            case 1137: {
              searchImpressionShare_ = input.readDouble();
              bitField1_ |= 0x00800000;
              break;
            } // case 1137
            case 1145: {
              searchRankLostAbsoluteTopImpressionShare_ = input.readDouble();
              bitField1_ |= 0x01000000;
              break;
            } // case 1145
            case 1153: {
              searchRankLostImpressionShare_ = input.readDouble();
              bitField1_ |= 0x02000000;
              break;
            } // case 1153
            case 1161: {
              searchRankLostTopImpressionShare_ = input.readDouble();
              bitField1_ |= 0x04000000;
              break;
            } // case 1161
            case 1169: {
              searchTopImpressionShare_ = input.readDouble();
              bitField1_ |= 0x08000000;
              break;
            } // case 1169
            case 1185: {
              topImpressionPercentage_ = input.readDouble();
              bitField1_ |= 0x10000000;
              break;
            } // case 1185
            case 1201: {
              valuePerAllConversions_ = input.readDouble();
              bitField1_ |= 0x20000000;
              break;
            } // case 1201
            case 1240: {
              clientAccountViewThroughConversions_ = input.readInt64();
              bitField2_ |= 0x00000002;
              break;
            } // case 1240
            case 1273: {
              contentBudgetLostImpressionShare_ = input.readDouble();
              bitField0_ |= 0x00080000;
              break;
            } // case 1273
            case 1281: {
              contentImpressionShare_ = input.readDouble();
              bitField0_ |= 0x00100000;
              break;
            } // case 1281
            case 1305: {
              contentRankLostImpressionShare_ = input.readDouble();
              bitField0_ |= 0x00200000;
              break;
            } // case 1305
            case 1321: {
              clientAccountConversionsValue_ = input.readDouble();
              bitField0_ |= 0x00800000;
              break;
            } // case 1321
            case 1337: {
              conversionsFromInteractionsValuePerInteraction_ = input.readDouble();
              bitField0_ |= 0x04000000;
              break;
            } // case 1337
            case 1345: {
              clientAccountConversions_ = input.readDouble();
              bitField0_ |= 0x08000000;
              break;
            } // case 1345
            case 1352: {
              costMicros_ = input.readInt64();
              bitField0_ |= 0x20000000;
              break;
            } // case 1352
            case 1361: {
              costPerAllConversions_ = input.readDouble();
              bitField0_ |= 0x40000000;
              break;
            } // case 1361
            case 1377: {
              costPerCurrentModelAttributedConversion_ = input.readDouble();
              bitField1_ |= 0x00000001;
              break;
            } // case 1377
            case 1385: {
              crossDeviceConversions_ = input.readDouble();
              bitField1_ |= 0x00000002;
              break;
            } // case 1385
            case 1393: {
              ctr_ = input.readDouble();
              bitField1_ |= 0x00000008;
              break;
            } // case 1393
            case 1465: {
              absoluteTopImpressionPercentage_ = input.readDouble();
              bitField0_ |= 0x00000001;
              break;
            } // case 1465
            case 1529: {
              allConversionsFromInteractionsRate_ = input.readDouble();
              bitField0_ |= 0x00000002;
              break;
            } // case 1529
            case 1537: {
              allConversionsValue_ = input.readDouble();
              bitField0_ |= 0x00000004;
              break;
            } // case 1537
            case 1545: {
              allConversions_ = input.readDouble();
              bitField0_ |= 0x00000010;
              break;
            } // case 1545
            case 1553: {
              allConversionsValuePerCost_ = input.readDouble();
              bitField0_ |= 0x00000040;
              break;
            } // case 1553
            case 1561: {
              allConversionsFromClickToCall_ = input.readDouble();
              bitField0_ |= 0x00000080;
              break;
            } // case 1561
            case 1569: {
              allConversionsFromDirections_ = input.readDouble();
              bitField0_ |= 0x00000100;
              break;
            } // case 1569
            case 1577: {
              allConversionsFromInteractionsValuePerInteraction_ = input.readDouble();
              bitField0_ |= 0x00000200;
              break;
            } // case 1577
            case 1585: {
              allConversionsFromMenu_ = input.readDouble();
              bitField0_ |= 0x00000400;
              break;
            } // case 1585
            case 1593: {
              allConversionsFromOrder_ = input.readDouble();
              bitField0_ |= 0x00000800;
              break;
            } // case 1593
            case 1601: {
              allConversionsFromOtherEngagement_ = input.readDouble();
              bitField0_ |= 0x00001000;
              break;
            } // case 1601
            case 1609: {
              allConversionsFromStoreVisit_ = input.readDouble();
              bitField0_ |= 0x00002000;
              break;
            } // case 1609
            case 1617: {
              allConversionsFromStoreWebsite_ = input.readDouble();
              bitField0_ |= 0x00004000;
              break;
            } // case 1617
            case 1625: {
              averageCost_ = input.readDouble();
              bitField0_ |= 0x00008000;
              break;
            } // case 1625
            case 1633: {
              averageCpc_ = input.readDouble();
              bitField0_ |= 0x00010000;
              break;
            } // case 1633
            case 1649: {
              averageCpm_ = input.readDouble();
              bitField0_ |= 0x00020000;
              break;
            } // case 1649
            case 1728: {
              historicalQualityScore_ = input.readInt64();
              bitField1_ |= 0x00000100;
              break;
            } // case 1728
            case 1768: {
              impressions_ = input.readInt64();
              bitField1_ |= 0x00000400;
              break;
            } // case 1768
            case 1777: {
              interactionRate_ = input.readDouble();
              bitField1_ |= 0x00000800;
              break;
            } // case 1777
            case 1784: {
              interactions_ = input.readInt64();
              bitField1_ |= 0x00001000;
              break;
            } // case 1784
            case 1793: {
              invalidClickRate_ = input.readDouble();
              bitField1_ |= 0x00004000;
              break;
            } // case 1793
            case 1800: {
              invalidClicks_ = input.readInt64();
              bitField1_ |= 0x00008000;
              break;
            } // case 1800
            case 1833: {
              mobileFriendlyClicksPercentage_ = input.readDouble();
              bitField1_ |= 0x00010000;
              break;
            } // case 1833
            case 1921: {
              allConversionsValueByConversionDate_ = input.readDouble();
              bitField0_ |= 0x00000008;
              break;
            } // case 1921
            case 1929: {
              allConversionsByConversionDate_ = input.readDouble();
              bitField0_ |= 0x00000020;
              break;
            } // case 1929
            case 1953: {
              valuePerAllConversionsByConversionDate_ = input.readDouble();
              bitField1_ |= 0x40000000;
              break;
            } // case 1953
            case 2009: {
              conversions_ = input.readDouble();
              bitField1_ |= 0x00000010;
              break;
            } // case 2009
            case 2017: {
              conversionsValue_ = input.readDouble();
              bitField1_ |= 0x00000020;
              break;
            } // case 2017
            case 2025: {
              crossDeviceConversionsValue_ = input.readDouble();
              bitField1_ |= 0x00000004;
              break;
            } // case 2025
            case 2257: {
              conversionsByConversionDate_ = input.readDouble();
              bitField0_ |= 0x10000000;
              break;
            } // case 2257
            case 2265: {
              conversionsValueByConversionDate_ = input.readDouble();
              bitField0_ |= 0x01000000;
              break;
            } // case 2265
            case 2273: {
              conversionsFromInteractionsRate_ = input.readDouble();
              bitField0_ |= 0x00400000;
              break;
            } // case 2273
            case 2281: {
              valuePerConversionsByConversionDate_ = input.readDouble();
              bitField2_ |= 0x00000001;
              break;
            } // case 2281
            case 2289: {
              costPerConversion_ = input.readDouble();
              bitField0_ |= 0x80000000;
              break;
            } // case 2289
            case 2297: {
              valuePerConversion_ = input.readDouble();
              bitField1_ |= 0x80000000;
              break;
            } // case 2297
            case 2305: {
              conversionsValuePerCost_ = input.readDouble();
              bitField0_ |= 0x02000000;
              break;
            } // case 2305
            default: {
              if (!super.parseUnknownField(input, extensionRegistry, tag)) {
                done = true; // was an endgroup tag
              }
              break;
            } // default:
          } // switch (tag)
        } // while (!done)
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.unwrapIOException();
      } finally {
        onChanged();
      } // finally
      return this;
    }
    private int bitField0_;
    private int bitField1_;
    private int bitField2_;

    private double absoluteTopImpressionPercentage_ ;
    /**
     * <pre>
     * The percent of your ad impressions that are shown as the very first ad
     * above the organic search results.
     * </pre>
     *
     * <code>optional double absolute_top_impression_percentage = 183;</code>
     * @return Whether the absoluteTopImpressionPercentage field is set.
     */
    @java.lang.Override
    public boolean hasAbsoluteTopImpressionPercentage() {
      return ((bitField0_ & 0x00000001) != 0);
    }
    /**
     * <pre>
     * The percent of your ad impressions that are shown as the very first ad
     * above the organic search results.
     * </pre>
     *
     * <code>optional double absolute_top_impression_percentage = 183;</code>
     * @return The absoluteTopImpressionPercentage.
     */
    @java.lang.Override
    public double getAbsoluteTopImpressionPercentage() {
      return absoluteTopImpressionPercentage_;
    }
    /**
     * <pre>
     * The percent of your ad impressions that are shown as the very first ad
     * above the organic search results.
     * </pre>
     *
     * <code>optional double absolute_top_impression_percentage = 183;</code>
     * @param value The absoluteTopImpressionPercentage to set.
     * @return This builder for chaining.
     */
    public Builder setAbsoluteTopImpressionPercentage(double value) {
      
      absoluteTopImpressionPercentage_ = value;
      bitField0_ |= 0x00000001;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * The percent of your ad impressions that are shown as the very first ad
     * above the organic search results.
     * </pre>
     *
     * <code>optional double absolute_top_impression_percentage = 183;</code>
     * @return This builder for chaining.
     */
    public Builder clearAbsoluteTopImpressionPercentage() {
      bitField0_ = (bitField0_ & ~0x00000001);
      absoluteTopImpressionPercentage_ = 0D;
      onChanged();
      return this;
    }

    private double allConversionsFromInteractionsRate_ ;
    /**
     * <pre>
     * All conversions from interactions (as oppose to view through conversions)
     * divided by the number of ad interactions.
     * </pre>
     *
     * <code>optional double all_conversions_from_interactions_rate = 191;</code>
     * @return Whether the allConversionsFromInteractionsRate field is set.
     */
    @java.lang.Override
    public boolean hasAllConversionsFromInteractionsRate() {
      return ((bitField0_ & 0x00000002) != 0);
    }
    /**
     * <pre>
     * All conversions from interactions (as oppose to view through conversions)
     * divided by the number of ad interactions.
     * </pre>
     *
     * <code>optional double all_conversions_from_interactions_rate = 191;</code>
     * @return The allConversionsFromInteractionsRate.
     */
    @java.lang.Override
    public double getAllConversionsFromInteractionsRate() {
      return allConversionsFromInteractionsRate_;
    }
    /**
     * <pre>
     * All conversions from interactions (as oppose to view through conversions)
     * divided by the number of ad interactions.
     * </pre>
     *
     * <code>optional double all_conversions_from_interactions_rate = 191;</code>
     * @param value The allConversionsFromInteractionsRate to set.
     * @return This builder for chaining.
     */
    public Builder setAllConversionsFromInteractionsRate(double value) {
      
      allConversionsFromInteractionsRate_ = value;
      bitField0_ |= 0x00000002;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * All conversions from interactions (as oppose to view through conversions)
     * divided by the number of ad interactions.
     * </pre>
     *
     * <code>optional double all_conversions_from_interactions_rate = 191;</code>
     * @return This builder for chaining.
     */
    public Builder clearAllConversionsFromInteractionsRate() {
      bitField0_ = (bitField0_ & ~0x00000002);
      allConversionsFromInteractionsRate_ = 0D;
      onChanged();
      return this;
    }

    private double allConversionsValue_ ;
    /**
     * <pre>
     * The value of all conversions.
     * </pre>
     *
     * <code>optional double all_conversions_value = 192;</code>
     * @return Whether the allConversionsValue field is set.
     */
    @java.lang.Override
    public boolean hasAllConversionsValue() {
      return ((bitField0_ & 0x00000004) != 0);
    }
    /**
     * <pre>
     * The value of all conversions.
     * </pre>
     *
     * <code>optional double all_conversions_value = 192;</code>
     * @return The allConversionsValue.
     */
    @java.lang.Override
    public double getAllConversionsValue() {
      return allConversionsValue_;
    }
    /**
     * <pre>
     * The value of all conversions.
     * </pre>
     *
     * <code>optional double all_conversions_value = 192;</code>
     * @param value The allConversionsValue to set.
     * @return This builder for chaining.
     */
    public Builder setAllConversionsValue(double value) {
      
      allConversionsValue_ = value;
      bitField0_ |= 0x00000004;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * The value of all conversions.
     * </pre>
     *
     * <code>optional double all_conversions_value = 192;</code>
     * @return This builder for chaining.
     */
    public Builder clearAllConversionsValue() {
      bitField0_ = (bitField0_ & ~0x00000004);
      allConversionsValue_ = 0D;
      onChanged();
      return this;
    }

    private double allConversionsValueByConversionDate_ ;
    /**
     * <pre>
     * The value of all conversions. When this column is selected with date, the
     * values in date column means the conversion date. Details for the
     * by_conversion_date columns are available at
     * https://support.google.com/sa360/answer/9250611.
     * </pre>
     *
     * <code>double all_conversions_value_by_conversion_date = 240;</code>
     * @return The allConversionsValueByConversionDate.
     */
    @java.lang.Override
    public double getAllConversionsValueByConversionDate() {
      return allConversionsValueByConversionDate_;
    }
    /**
     * <pre>
     * The value of all conversions. When this column is selected with date, the
     * values in date column means the conversion date. Details for the
     * by_conversion_date columns are available at
     * https://support.google.com/sa360/answer/9250611.
     * </pre>
     *
     * <code>double all_conversions_value_by_conversion_date = 240;</code>
     * @param value The allConversionsValueByConversionDate to set.
     * @return This builder for chaining.
     */
    public Builder setAllConversionsValueByConversionDate(double value) {
      
      allConversionsValueByConversionDate_ = value;
      bitField0_ |= 0x00000008;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * The value of all conversions. When this column is selected with date, the
     * values in date column means the conversion date. Details for the
     * by_conversion_date columns are available at
     * https://support.google.com/sa360/answer/9250611.
     * </pre>
     *
     * <code>double all_conversions_value_by_conversion_date = 240;</code>
     * @return This builder for chaining.
     */
    public Builder clearAllConversionsValueByConversionDate() {
      bitField0_ = (bitField0_ & ~0x00000008);
      allConversionsValueByConversionDate_ = 0D;
      onChanged();
      return this;
    }

    private double allConversions_ ;
    /**
     * <pre>
     * The total number of conversions. This includes all conversions regardless
     * of the value of include_in_conversions_metric.
     * </pre>
     *
     * <code>optional double all_conversions = 193;</code>
     * @return Whether the allConversions field is set.
     */
    @java.lang.Override
    public boolean hasAllConversions() {
      return ((bitField0_ & 0x00000010) != 0);
    }
    /**
     * <pre>
     * The total number of conversions. This includes all conversions regardless
     * of the value of include_in_conversions_metric.
     * </pre>
     *
     * <code>optional double all_conversions = 193;</code>
     * @return The allConversions.
     */
    @java.lang.Override
    public double getAllConversions() {
      return allConversions_;
    }
    /**
     * <pre>
     * The total number of conversions. This includes all conversions regardless
     * of the value of include_in_conversions_metric.
     * </pre>
     *
     * <code>optional double all_conversions = 193;</code>
     * @param value The allConversions to set.
     * @return This builder for chaining.
     */
    public Builder setAllConversions(double value) {
      
      allConversions_ = value;
      bitField0_ |= 0x00000010;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * The total number of conversions. This includes all conversions regardless
     * of the value of include_in_conversions_metric.
     * </pre>
     *
     * <code>optional double all_conversions = 193;</code>
     * @return This builder for chaining.
     */
    public Builder clearAllConversions() {
      bitField0_ = (bitField0_ & ~0x00000010);
      allConversions_ = 0D;
      onChanged();
      return this;
    }

    private double allConversionsByConversionDate_ ;
    /**
     * <pre>
     * The total number of conversions. This includes all conversions regardless
     * of the value of include_in_conversions_metric. When this column is selected
     * with date, the values in date column means the conversion date. Details for
     * the by_conversion_date columns are available at
     * https://support.google.com/sa360/answer/9250611.
     * </pre>
     *
     * <code>double all_conversions_by_conversion_date = 241;</code>
     * @return The allConversionsByConversionDate.
     */
    @java.lang.Override
    public double getAllConversionsByConversionDate() {
      return allConversionsByConversionDate_;
    }
    /**
     * <pre>
     * The total number of conversions. This includes all conversions regardless
     * of the value of include_in_conversions_metric. When this column is selected
     * with date, the values in date column means the conversion date. Details for
     * the by_conversion_date columns are available at
     * https://support.google.com/sa360/answer/9250611.
     * </pre>
     *
     * <code>double all_conversions_by_conversion_date = 241;</code>
     * @param value The allConversionsByConversionDate to set.
     * @return This builder for chaining.
     */
    public Builder setAllConversionsByConversionDate(double value) {
      
      allConversionsByConversionDate_ = value;
      bitField0_ |= 0x00000020;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * The total number of conversions. This includes all conversions regardless
     * of the value of include_in_conversions_metric. When this column is selected
     * with date, the values in date column means the conversion date. Details for
     * the by_conversion_date columns are available at
     * https://support.google.com/sa360/answer/9250611.
     * </pre>
     *
     * <code>double all_conversions_by_conversion_date = 241;</code>
     * @return This builder for chaining.
     */
    public Builder clearAllConversionsByConversionDate() {
      bitField0_ = (bitField0_ & ~0x00000020);
      allConversionsByConversionDate_ = 0D;
      onChanged();
      return this;
    }

    private double allConversionsValuePerCost_ ;
    /**
     * <pre>
     * The value of all conversions divided by the total cost of ad interactions
     * (such as clicks for text ads or views for video ads).
     * </pre>
     *
     * <code>optional double all_conversions_value_per_cost = 194;</code>
     * @return Whether the allConversionsValuePerCost field is set.
     */
    @java.lang.Override
    public boolean hasAllConversionsValuePerCost() {
      return ((bitField0_ & 0x00000040) != 0);
    }
    /**
     * <pre>
     * The value of all conversions divided by the total cost of ad interactions
     * (such as clicks for text ads or views for video ads).
     * </pre>
     *
     * <code>optional double all_conversions_value_per_cost = 194;</code>
     * @return The allConversionsValuePerCost.
     */
    @java.lang.Override
    public double getAllConversionsValuePerCost() {
      return allConversionsValuePerCost_;
    }
    /**
     * <pre>
     * The value of all conversions divided by the total cost of ad interactions
     * (such as clicks for text ads or views for video ads).
     * </pre>
     *
     * <code>optional double all_conversions_value_per_cost = 194;</code>
     * @param value The allConversionsValuePerCost to set.
     * @return This builder for chaining.
     */
    public Builder setAllConversionsValuePerCost(double value) {
      
      allConversionsValuePerCost_ = value;
      bitField0_ |= 0x00000040;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * The value of all conversions divided by the total cost of ad interactions
     * (such as clicks for text ads or views for video ads).
     * </pre>
     *
     * <code>optional double all_conversions_value_per_cost = 194;</code>
     * @return This builder for chaining.
     */
    public Builder clearAllConversionsValuePerCost() {
      bitField0_ = (bitField0_ & ~0x00000040);
      allConversionsValuePerCost_ = 0D;
      onChanged();
      return this;
    }

    private double allConversionsFromClickToCall_ ;
    /**
     * <pre>
     * The number of times people clicked the "Call" button to call a store during
     * or after clicking an ad. This number doesn't include whether or not calls
     * were connected, or the duration of any calls.
     * This metric applies to feed items only.
     * </pre>
     *
     * <code>optional double all_conversions_from_click_to_call = 195;</code>
     * @return Whether the allConversionsFromClickToCall field is set.
     */
    @java.lang.Override
    public boolean hasAllConversionsFromClickToCall() {
      return ((bitField0_ & 0x00000080) != 0);
    }
    /**
     * <pre>
     * The number of times people clicked the "Call" button to call a store during
     * or after clicking an ad. This number doesn't include whether or not calls
     * were connected, or the duration of any calls.
     * This metric applies to feed items only.
     * </pre>
     *
     * <code>optional double all_conversions_from_click_to_call = 195;</code>
     * @return The allConversionsFromClickToCall.
     */
    @java.lang.Override
    public double getAllConversionsFromClickToCall() {
      return allConversionsFromClickToCall_;
    }
    /**
     * <pre>
     * The number of times people clicked the "Call" button to call a store during
     * or after clicking an ad. This number doesn't include whether or not calls
     * were connected, or the duration of any calls.
     * This metric applies to feed items only.
     * </pre>
     *
     * <code>optional double all_conversions_from_click_to_call = 195;</code>
     * @param value The allConversionsFromClickToCall to set.
     * @return This builder for chaining.
     */
    public Builder setAllConversionsFromClickToCall(double value) {
      
      allConversionsFromClickToCall_ = value;
      bitField0_ |= 0x00000080;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * The number of times people clicked the "Call" button to call a store during
     * or after clicking an ad. This number doesn't include whether or not calls
     * were connected, or the duration of any calls.
     * This metric applies to feed items only.
     * </pre>
     *
     * <code>optional double all_conversions_from_click_to_call = 195;</code>
     * @return This builder for chaining.
     */
    public Builder clearAllConversionsFromClickToCall() {
      bitField0_ = (bitField0_ & ~0x00000080);
      allConversionsFromClickToCall_ = 0D;
      onChanged();
      return this;
    }

    private double allConversionsFromDirections_ ;
    /**
     * <pre>
     * The number of times people clicked a "Get directions" button to navigate to
     * a store after clicking an ad.
     * This metric applies to feed items only.
     * </pre>
     *
     * <code>optional double all_conversions_from_directions = 196;</code>
     * @return Whether the allConversionsFromDirections field is set.
     */
    @java.lang.Override
    public boolean hasAllConversionsFromDirections() {
      return ((bitField0_ & 0x00000100) != 0);
    }
    /**
     * <pre>
     * The number of times people clicked a "Get directions" button to navigate to
     * a store after clicking an ad.
     * This metric applies to feed items only.
     * </pre>
     *
     * <code>optional double all_conversions_from_directions = 196;</code>
     * @return The allConversionsFromDirections.
     */
    @java.lang.Override
    public double getAllConversionsFromDirections() {
      return allConversionsFromDirections_;
    }
    /**
     * <pre>
     * The number of times people clicked a "Get directions" button to navigate to
     * a store after clicking an ad.
     * This metric applies to feed items only.
     * </pre>
     *
     * <code>optional double all_conversions_from_directions = 196;</code>
     * @param value The allConversionsFromDirections to set.
     * @return This builder for chaining.
     */
    public Builder setAllConversionsFromDirections(double value) {
      
      allConversionsFromDirections_ = value;
      bitField0_ |= 0x00000100;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * The number of times people clicked a "Get directions" button to navigate to
     * a store after clicking an ad.
     * This metric applies to feed items only.
     * </pre>
     *
     * <code>optional double all_conversions_from_directions = 196;</code>
     * @return This builder for chaining.
     */
    public Builder clearAllConversionsFromDirections() {
      bitField0_ = (bitField0_ & ~0x00000100);
      allConversionsFromDirections_ = 0D;
      onChanged();
      return this;
    }

    private double allConversionsFromInteractionsValuePerInteraction_ ;
    /**
     * <pre>
     * The value of all conversions from interactions divided by the total number
     * of interactions.
     * </pre>
     *
     * <code>optional double all_conversions_from_interactions_value_per_interaction = 197;</code>
     * @return Whether the allConversionsFromInteractionsValuePerInteraction field is set.
     */
    @java.lang.Override
    public boolean hasAllConversionsFromInteractionsValuePerInteraction() {
      return ((bitField0_ & 0x00000200) != 0);
    }
    /**
     * <pre>
     * The value of all conversions from interactions divided by the total number
     * of interactions.
     * </pre>
     *
     * <code>optional double all_conversions_from_interactions_value_per_interaction = 197;</code>
     * @return The allConversionsFromInteractionsValuePerInteraction.
     */
    @java.lang.Override
    public double getAllConversionsFromInteractionsValuePerInteraction() {
      return allConversionsFromInteractionsValuePerInteraction_;
    }
    /**
     * <pre>
     * The value of all conversions from interactions divided by the total number
     * of interactions.
     * </pre>
     *
     * <code>optional double all_conversions_from_interactions_value_per_interaction = 197;</code>
     * @param value The allConversionsFromInteractionsValuePerInteraction to set.
     * @return This builder for chaining.
     */
    public Builder setAllConversionsFromInteractionsValuePerInteraction(double value) {
      
      allConversionsFromInteractionsValuePerInteraction_ = value;
      bitField0_ |= 0x00000200;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * The value of all conversions from interactions divided by the total number
     * of interactions.
     * </pre>
     *
     * <code>optional double all_conversions_from_interactions_value_per_interaction = 197;</code>
     * @return This builder for chaining.
     */
    public Builder clearAllConversionsFromInteractionsValuePerInteraction() {
      bitField0_ = (bitField0_ & ~0x00000200);
      allConversionsFromInteractionsValuePerInteraction_ = 0D;
      onChanged();
      return this;
    }

    private double allConversionsFromMenu_ ;
    /**
     * <pre>
     * The number of times people clicked a link to view a store's menu after
     * clicking an ad.
     * This metric applies to feed items only.
     * </pre>
     *
     * <code>optional double all_conversions_from_menu = 198;</code>
     * @return Whether the allConversionsFromMenu field is set.
     */
    @java.lang.Override
    public boolean hasAllConversionsFromMenu() {
      return ((bitField0_ & 0x00000400) != 0);
    }
    /**
     * <pre>
     * The number of times people clicked a link to view a store's menu after
     * clicking an ad.
     * This metric applies to feed items only.
     * </pre>
     *
     * <code>optional double all_conversions_from_menu = 198;</code>
     * @return The allConversionsFromMenu.
     */
    @java.lang.Override
    public double getAllConversionsFromMenu() {
      return allConversionsFromMenu_;
    }
    /**
     * <pre>
     * The number of times people clicked a link to view a store's menu after
     * clicking an ad.
     * This metric applies to feed items only.
     * </pre>
     *
     * <code>optional double all_conversions_from_menu = 198;</code>
     * @param value The allConversionsFromMenu to set.
     * @return This builder for chaining.
     */
    public Builder setAllConversionsFromMenu(double value) {
      
      allConversionsFromMenu_ = value;
      bitField0_ |= 0x00000400;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * The number of times people clicked a link to view a store's menu after
     * clicking an ad.
     * This metric applies to feed items only.
     * </pre>
     *
     * <code>optional double all_conversions_from_menu = 198;</code>
     * @return This builder for chaining.
     */
    public Builder clearAllConversionsFromMenu() {
      bitField0_ = (bitField0_ & ~0x00000400);
      allConversionsFromMenu_ = 0D;
      onChanged();
      return this;
    }

    private double allConversionsFromOrder_ ;
    /**
     * <pre>
     * The number of times people placed an order at a store after clicking an ad.
     * This metric applies to feed items only.
     * </pre>
     *
     * <code>optional double all_conversions_from_order = 199;</code>
     * @return Whether the allConversionsFromOrder field is set.
     */
    @java.lang.Override
    public boolean hasAllConversionsFromOrder() {
      return ((bitField0_ & 0x00000800) != 0);
    }
    /**
     * <pre>
     * The number of times people placed an order at a store after clicking an ad.
     * This metric applies to feed items only.
     * </pre>
     *
     * <code>optional double all_conversions_from_order = 199;</code>
     * @return The allConversionsFromOrder.
     */
    @java.lang.Override
    public double getAllConversionsFromOrder() {
      return allConversionsFromOrder_;
    }
    /**
     * <pre>
     * The number of times people placed an order at a store after clicking an ad.
     * This metric applies to feed items only.
     * </pre>
     *
     * <code>optional double all_conversions_from_order = 199;</code>
     * @param value The allConversionsFromOrder to set.
     * @return This builder for chaining.
     */
    public Builder setAllConversionsFromOrder(double value) {
      
      allConversionsFromOrder_ = value;
      bitField0_ |= 0x00000800;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * The number of times people placed an order at a store after clicking an ad.
     * This metric applies to feed items only.
     * </pre>
     *
     * <code>optional double all_conversions_from_order = 199;</code>
     * @return This builder for chaining.
     */
    public Builder clearAllConversionsFromOrder() {
      bitField0_ = (bitField0_ & ~0x00000800);
      allConversionsFromOrder_ = 0D;
      onChanged();
      return this;
    }

    private double allConversionsFromOtherEngagement_ ;
    /**
     * <pre>
     * The number of other conversions (for example, posting a review or saving a
     * location for a store) that occurred after people clicked an ad.
     * This metric applies to feed items only.
     * </pre>
     *
     * <code>optional double all_conversions_from_other_engagement = 200;</code>
     * @return Whether the allConversionsFromOtherEngagement field is set.
     */
    @java.lang.Override
    public boolean hasAllConversionsFromOtherEngagement() {
      return ((bitField0_ & 0x00001000) != 0);
    }
    /**
     * <pre>
     * The number of other conversions (for example, posting a review or saving a
     * location for a store) that occurred after people clicked an ad.
     * This metric applies to feed items only.
     * </pre>
     *
     * <code>optional double all_conversions_from_other_engagement = 200;</code>
     * @return The allConversionsFromOtherEngagement.
     */
    @java.lang.Override
    public double getAllConversionsFromOtherEngagement() {
      return allConversionsFromOtherEngagement_;
    }
    /**
     * <pre>
     * The number of other conversions (for example, posting a review or saving a
     * location for a store) that occurred after people clicked an ad.
     * This metric applies to feed items only.
     * </pre>
     *
     * <code>optional double all_conversions_from_other_engagement = 200;</code>
     * @param value The allConversionsFromOtherEngagement to set.
     * @return This builder for chaining.
     */
    public Builder setAllConversionsFromOtherEngagement(double value) {
      
      allConversionsFromOtherEngagement_ = value;
      bitField0_ |= 0x00001000;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * The number of other conversions (for example, posting a review or saving a
     * location for a store) that occurred after people clicked an ad.
     * This metric applies to feed items only.
     * </pre>
     *
     * <code>optional double all_conversions_from_other_engagement = 200;</code>
     * @return This builder for chaining.
     */
    public Builder clearAllConversionsFromOtherEngagement() {
      bitField0_ = (bitField0_ & ~0x00001000);
      allConversionsFromOtherEngagement_ = 0D;
      onChanged();
      return this;
    }

    private double allConversionsFromStoreVisit_ ;
    /**
     * <pre>
     * Estimated number of times people visited a store after clicking an ad.
     * This metric applies to feed items only.
     * </pre>
     *
     * <code>optional double all_conversions_from_store_visit = 201;</code>
     * @return Whether the allConversionsFromStoreVisit field is set.
     */
    @java.lang.Override
    public boolean hasAllConversionsFromStoreVisit() {
      return ((bitField0_ & 0x00002000) != 0);
    }
    /**
     * <pre>
     * Estimated number of times people visited a store after clicking an ad.
     * This metric applies to feed items only.
     * </pre>
     *
     * <code>optional double all_conversions_from_store_visit = 201;</code>
     * @return The allConversionsFromStoreVisit.
     */
    @java.lang.Override
    public double getAllConversionsFromStoreVisit() {
      return allConversionsFromStoreVisit_;
    }
    /**
     * <pre>
     * Estimated number of times people visited a store after clicking an ad.
     * This metric applies to feed items only.
     * </pre>
     *
     * <code>optional double all_conversions_from_store_visit = 201;</code>
     * @param value The allConversionsFromStoreVisit to set.
     * @return This builder for chaining.
     */
    public Builder setAllConversionsFromStoreVisit(double value) {
      
      allConversionsFromStoreVisit_ = value;
      bitField0_ |= 0x00002000;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * Estimated number of times people visited a store after clicking an ad.
     * This metric applies to feed items only.
     * </pre>
     *
     * <code>optional double all_conversions_from_store_visit = 201;</code>
     * @return This builder for chaining.
     */
    public Builder clearAllConversionsFromStoreVisit() {
      bitField0_ = (bitField0_ & ~0x00002000);
      allConversionsFromStoreVisit_ = 0D;
      onChanged();
      return this;
    }

    private double allConversionsFromStoreWebsite_ ;
    /**
     * <pre>
     * The number of times that people were taken to a store's URL after clicking
     * an ad.
     * This metric applies to feed items only.
     * </pre>
     *
     * <code>optional double all_conversions_from_store_website = 202;</code>
     * @return Whether the allConversionsFromStoreWebsite field is set.
     */
    @java.lang.Override
    public boolean hasAllConversionsFromStoreWebsite() {
      return ((bitField0_ & 0x00004000) != 0);
    }
    /**
     * <pre>
     * The number of times that people were taken to a store's URL after clicking
     * an ad.
     * This metric applies to feed items only.
     * </pre>
     *
     * <code>optional double all_conversions_from_store_website = 202;</code>
     * @return The allConversionsFromStoreWebsite.
     */
    @java.lang.Override
    public double getAllConversionsFromStoreWebsite() {
      return allConversionsFromStoreWebsite_;
    }
    /**
     * <pre>
     * The number of times that people were taken to a store's URL after clicking
     * an ad.
     * This metric applies to feed items only.
     * </pre>
     *
     * <code>optional double all_conversions_from_store_website = 202;</code>
     * @param value The allConversionsFromStoreWebsite to set.
     * @return This builder for chaining.
     */
    public Builder setAllConversionsFromStoreWebsite(double value) {
      
      allConversionsFromStoreWebsite_ = value;
      bitField0_ |= 0x00004000;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * The number of times that people were taken to a store's URL after clicking
     * an ad.
     * This metric applies to feed items only.
     * </pre>
     *
     * <code>optional double all_conversions_from_store_website = 202;</code>
     * @return This builder for chaining.
     */
    public Builder clearAllConversionsFromStoreWebsite() {
      bitField0_ = (bitField0_ & ~0x00004000);
      allConversionsFromStoreWebsite_ = 0D;
      onChanged();
      return this;
    }

    private double averageCost_ ;
    /**
     * <pre>
     * The average amount you pay per interaction. This amount is the total cost
     * of your ads divided by the total number of interactions.
     * </pre>
     *
     * <code>optional double average_cost = 203;</code>
     * @return Whether the averageCost field is set.
     */
    @java.lang.Override
    public boolean hasAverageCost() {
      return ((bitField0_ & 0x00008000) != 0);
    }
    /**
     * <pre>
     * The average amount you pay per interaction. This amount is the total cost
     * of your ads divided by the total number of interactions.
     * </pre>
     *
     * <code>optional double average_cost = 203;</code>
     * @return The averageCost.
     */
    @java.lang.Override
    public double getAverageCost() {
      return averageCost_;
    }
    /**
     * <pre>
     * The average amount you pay per interaction. This amount is the total cost
     * of your ads divided by the total number of interactions.
     * </pre>
     *
     * <code>optional double average_cost = 203;</code>
     * @param value The averageCost to set.
     * @return This builder for chaining.
     */
    public Builder setAverageCost(double value) {
      
      averageCost_ = value;
      bitField0_ |= 0x00008000;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * The average amount you pay per interaction. This amount is the total cost
     * of your ads divided by the total number of interactions.
     * </pre>
     *
     * <code>optional double average_cost = 203;</code>
     * @return This builder for chaining.
     */
    public Builder clearAverageCost() {
      bitField0_ = (bitField0_ & ~0x00008000);
      averageCost_ = 0D;
      onChanged();
      return this;
    }

    private double averageCpc_ ;
    /**
     * <pre>
     * The total cost of all clicks divided by the total number of clicks
     * received.
     * </pre>
     *
     * <code>optional double average_cpc = 204;</code>
     * @return Whether the averageCpc field is set.
     */
    @java.lang.Override
    public boolean hasAverageCpc() {
      return ((bitField0_ & 0x00010000) != 0);
    }
    /**
     * <pre>
     * The total cost of all clicks divided by the total number of clicks
     * received.
     * </pre>
     *
     * <code>optional double average_cpc = 204;</code>
     * @return The averageCpc.
     */
    @java.lang.Override
    public double getAverageCpc() {
      return averageCpc_;
    }
    /**
     * <pre>
     * The total cost of all clicks divided by the total number of clicks
     * received.
     * </pre>
     *
     * <code>optional double average_cpc = 204;</code>
     * @param value The averageCpc to set.
     * @return This builder for chaining.
     */
    public Builder setAverageCpc(double value) {
      
      averageCpc_ = value;
      bitField0_ |= 0x00010000;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * The total cost of all clicks divided by the total number of clicks
     * received.
     * </pre>
     *
     * <code>optional double average_cpc = 204;</code>
     * @return This builder for chaining.
     */
    public Builder clearAverageCpc() {
      bitField0_ = (bitField0_ & ~0x00010000);
      averageCpc_ = 0D;
      onChanged();
      return this;
    }

    private double averageCpm_ ;
    /**
     * <pre>
     * Average cost-per-thousand impressions (CPM).
     * </pre>
     *
     * <code>optional double average_cpm = 206;</code>
     * @return Whether the averageCpm field is set.
     */
    @java.lang.Override
    public boolean hasAverageCpm() {
      return ((bitField0_ & 0x00020000) != 0);
    }
    /**
     * <pre>
     * Average cost-per-thousand impressions (CPM).
     * </pre>
     *
     * <code>optional double average_cpm = 206;</code>
     * @return The averageCpm.
     */
    @java.lang.Override
    public double getAverageCpm() {
      return averageCpm_;
    }
    /**
     * <pre>
     * Average cost-per-thousand impressions (CPM).
     * </pre>
     *
     * <code>optional double average_cpm = 206;</code>
     * @param value The averageCpm to set.
     * @return This builder for chaining.
     */
    public Builder setAverageCpm(double value) {
      
      averageCpm_ = value;
      bitField0_ |= 0x00020000;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * Average cost-per-thousand impressions (CPM).
     * </pre>
     *
     * <code>optional double average_cpm = 206;</code>
     * @return This builder for chaining.
     */
    public Builder clearAverageCpm() {
      bitField0_ = (bitField0_ & ~0x00020000);
      averageCpm_ = 0D;
      onChanged();
      return this;
    }

    private long clicks_ ;
    /**
     * <pre>
     * The number of clicks.
     * </pre>
     *
     * <code>optional int64 clicks = 131;</code>
     * @return Whether the clicks field is set.
     */
    @java.lang.Override
    public boolean hasClicks() {
      return ((bitField0_ & 0x00040000) != 0);
    }
    /**
     * <pre>
     * The number of clicks.
     * </pre>
     *
     * <code>optional int64 clicks = 131;</code>
     * @return The clicks.
     */
    @java.lang.Override
    public long getClicks() {
      return clicks_;
    }
    /**
     * <pre>
     * The number of clicks.
     * </pre>
     *
     * <code>optional int64 clicks = 131;</code>
     * @param value The clicks to set.
     * @return This builder for chaining.
     */
    public Builder setClicks(long value) {
      
      clicks_ = value;
      bitField0_ |= 0x00040000;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * The number of clicks.
     * </pre>
     *
     * <code>optional int64 clicks = 131;</code>
     * @return This builder for chaining.
     */
    public Builder clearClicks() {
      bitField0_ = (bitField0_ & ~0x00040000);
      clicks_ = 0L;
      onChanged();
      return this;
    }

    private double contentBudgetLostImpressionShare_ ;
    /**
     * <pre>
     * The estimated percent of times that your ad was eligible to show
     * on the Display Network but didn't because your budget was too low.
     * Note: Content budget lost impression share is reported in the range of 0
     * to 0.9. Any value above 0.9 is reported as 0.9001.
     * </pre>
     *
     * <code>optional double content_budget_lost_impression_share = 159;</code>
     * @return Whether the contentBudgetLostImpressionShare field is set.
     */
    @java.lang.Override
    public boolean hasContentBudgetLostImpressionShare() {
      return ((bitField0_ & 0x00080000) != 0);
    }
    /**
     * <pre>
     * The estimated percent of times that your ad was eligible to show
     * on the Display Network but didn't because your budget was too low.
     * Note: Content budget lost impression share is reported in the range of 0
     * to 0.9. Any value above 0.9 is reported as 0.9001.
     * </pre>
     *
     * <code>optional double content_budget_lost_impression_share = 159;</code>
     * @return The contentBudgetLostImpressionShare.
     */
    @java.lang.Override
    public double getContentBudgetLostImpressionShare() {
      return contentBudgetLostImpressionShare_;
    }
    /**
     * <pre>
     * The estimated percent of times that your ad was eligible to show
     * on the Display Network but didn't because your budget was too low.
     * Note: Content budget lost impression share is reported in the range of 0
     * to 0.9. Any value above 0.9 is reported as 0.9001.
     * </pre>
     *
     * <code>optional double content_budget_lost_impression_share = 159;</code>
     * @param value The contentBudgetLostImpressionShare to set.
     * @return This builder for chaining.
     */
    public Builder setContentBudgetLostImpressionShare(double value) {
      
      contentBudgetLostImpressionShare_ = value;
      bitField0_ |= 0x00080000;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * The estimated percent of times that your ad was eligible to show
     * on the Display Network but didn't because your budget was too low.
     * Note: Content budget lost impression share is reported in the range of 0
     * to 0.9. Any value above 0.9 is reported as 0.9001.
     * </pre>
     *
     * <code>optional double content_budget_lost_impression_share = 159;</code>
     * @return This builder for chaining.
     */
    public Builder clearContentBudgetLostImpressionShare() {
      bitField0_ = (bitField0_ & ~0x00080000);
      contentBudgetLostImpressionShare_ = 0D;
      onChanged();
      return this;
    }

    private double contentImpressionShare_ ;
    /**
     * <pre>
     * The impressions you've received on the Display Network divided
     * by the estimated number of impressions you were eligible to receive.
     * Note: Content impression share is reported in the range of 0.1 to 1. Any
     * value below 0.1 is reported as 0.0999.
     * </pre>
     *
     * <code>optional double content_impression_share = 160;</code>
     * @return Whether the contentImpressionShare field is set.
     */
    @java.lang.Override
    public boolean hasContentImpressionShare() {
      return ((bitField0_ & 0x00100000) != 0);
    }
    /**
     * <pre>
     * The impressions you've received on the Display Network divided
     * by the estimated number of impressions you were eligible to receive.
     * Note: Content impression share is reported in the range of 0.1 to 1. Any
     * value below 0.1 is reported as 0.0999.
     * </pre>
     *
     * <code>optional double content_impression_share = 160;</code>
     * @return The contentImpressionShare.
     */
    @java.lang.Override
    public double getContentImpressionShare() {
      return contentImpressionShare_;
    }
    /**
     * <pre>
     * The impressions you've received on the Display Network divided
     * by the estimated number of impressions you were eligible to receive.
     * Note: Content impression share is reported in the range of 0.1 to 1. Any
     * value below 0.1 is reported as 0.0999.
     * </pre>
     *
     * <code>optional double content_impression_share = 160;</code>
     * @param value The contentImpressionShare to set.
     * @return This builder for chaining.
     */
    public Builder setContentImpressionShare(double value) {
      
      contentImpressionShare_ = value;
      bitField0_ |= 0x00100000;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * The impressions you've received on the Display Network divided
     * by the estimated number of impressions you were eligible to receive.
     * Note: Content impression share is reported in the range of 0.1 to 1. Any
     * value below 0.1 is reported as 0.0999.
     * </pre>
     *
     * <code>optional double content_impression_share = 160;</code>
     * @return This builder for chaining.
     */
    public Builder clearContentImpressionShare() {
      bitField0_ = (bitField0_ & ~0x00100000);
      contentImpressionShare_ = 0D;
      onChanged();
      return this;
    }

    private double contentRankLostImpressionShare_ ;
    /**
     * <pre>
     * The estimated percentage of impressions on the Display Network
     * that your ads didn't receive due to poor Ad Rank.
     * Note: Content rank lost impression share is reported in the range of 0
     * to 0.9. Any value above 0.9 is reported as 0.9001.
     * </pre>
     *
     * <code>optional double content_rank_lost_impression_share = 163;</code>
     * @return Whether the contentRankLostImpressionShare field is set.
     */
    @java.lang.Override
    public boolean hasContentRankLostImpressionShare() {
      return ((bitField0_ & 0x00200000) != 0);
    }
    /**
     * <pre>
     * The estimated percentage of impressions on the Display Network
     * that your ads didn't receive due to poor Ad Rank.
     * Note: Content rank lost impression share is reported in the range of 0
     * to 0.9. Any value above 0.9 is reported as 0.9001.
     * </pre>
     *
     * <code>optional double content_rank_lost_impression_share = 163;</code>
     * @return The contentRankLostImpressionShare.
     */
    @java.lang.Override
    public double getContentRankLostImpressionShare() {
      return contentRankLostImpressionShare_;
    }
    /**
     * <pre>
     * The estimated percentage of impressions on the Display Network
     * that your ads didn't receive due to poor Ad Rank.
     * Note: Content rank lost impression share is reported in the range of 0
     * to 0.9. Any value above 0.9 is reported as 0.9001.
     * </pre>
     *
     * <code>optional double content_rank_lost_impression_share = 163;</code>
     * @param value The contentRankLostImpressionShare to set.
     * @return This builder for chaining.
     */
    public Builder setContentRankLostImpressionShare(double value) {
      
      contentRankLostImpressionShare_ = value;
      bitField0_ |= 0x00200000;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * The estimated percentage of impressions on the Display Network
     * that your ads didn't receive due to poor Ad Rank.
     * Note: Content rank lost impression share is reported in the range of 0
     * to 0.9. Any value above 0.9 is reported as 0.9001.
     * </pre>
     *
     * <code>optional double content_rank_lost_impression_share = 163;</code>
     * @return This builder for chaining.
     */
    public Builder clearContentRankLostImpressionShare() {
      bitField0_ = (bitField0_ & ~0x00200000);
      contentRankLostImpressionShare_ = 0D;
      onChanged();
      return this;
    }

    private double conversionsFromInteractionsRate_ ;
    /**
     * <pre>
     * Average biddable conversions (from interaction) per conversion eligible
     * interaction. Shows how often, on average, an ad interaction leads to a
     * biddable conversion.
     * </pre>
     *
     * <code>optional double conversions_from_interactions_rate = 284;</code>
     * @return Whether the conversionsFromInteractionsRate field is set.
     */
    @java.lang.Override
    public boolean hasConversionsFromInteractionsRate() {
      return ((bitField0_ & 0x00400000) != 0);
    }
    /**
     * <pre>
     * Average biddable conversions (from interaction) per conversion eligible
     * interaction. Shows how often, on average, an ad interaction leads to a
     * biddable conversion.
     * </pre>
     *
     * <code>optional double conversions_from_interactions_rate = 284;</code>
     * @return The conversionsFromInteractionsRate.
     */
    @java.lang.Override
    public double getConversionsFromInteractionsRate() {
      return conversionsFromInteractionsRate_;
    }
    /**
     * <pre>
     * Average biddable conversions (from interaction) per conversion eligible
     * interaction. Shows how often, on average, an ad interaction leads to a
     * biddable conversion.
     * </pre>
     *
     * <code>optional double conversions_from_interactions_rate = 284;</code>
     * @param value The conversionsFromInteractionsRate to set.
     * @return This builder for chaining.
     */
    public Builder setConversionsFromInteractionsRate(double value) {
      
      conversionsFromInteractionsRate_ = value;
      bitField0_ |= 0x00400000;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * Average biddable conversions (from interaction) per conversion eligible
     * interaction. Shows how often, on average, an ad interaction leads to a
     * biddable conversion.
     * </pre>
     *
     * <code>optional double conversions_from_interactions_rate = 284;</code>
     * @return This builder for chaining.
     */
    public Builder clearConversionsFromInteractionsRate() {
      bitField0_ = (bitField0_ & ~0x00400000);
      conversionsFromInteractionsRate_ = 0D;
      onChanged();
      return this;
    }

    private double clientAccountConversionsValue_ ;
    /**
     * <pre>
     * The value of client account conversions. This only
     * includes conversion actions which
     * include_in_client_account_conversions_metric attribute is set to true. If
     * you use conversion-based bidding, your bid strategies will optimize for
     * these conversions.
     * </pre>
     *
     * <code>optional double client_account_conversions_value = 165;</code>
     * @return Whether the clientAccountConversionsValue field is set.
     */
    @java.lang.Override
    public boolean hasClientAccountConversionsValue() {
      return ((bitField0_ & 0x00800000) != 0);
    }
    /**
     * <pre>
     * The value of client account conversions. This only
     * includes conversion actions which
     * include_in_client_account_conversions_metric attribute is set to true. If
     * you use conversion-based bidding, your bid strategies will optimize for
     * these conversions.
     * </pre>
     *
     * <code>optional double client_account_conversions_value = 165;</code>
     * @return The clientAccountConversionsValue.
     */
    @java.lang.Override
    public double getClientAccountConversionsValue() {
      return clientAccountConversionsValue_;
    }
    /**
     * <pre>
     * The value of client account conversions. This only
     * includes conversion actions which
     * include_in_client_account_conversions_metric attribute is set to true. If
     * you use conversion-based bidding, your bid strategies will optimize for
     * these conversions.
     * </pre>
     *
     * <code>optional double client_account_conversions_value = 165;</code>
     * @param value The clientAccountConversionsValue to set.
     * @return This builder for chaining.
     */
    public Builder setClientAccountConversionsValue(double value) {
      
      clientAccountConversionsValue_ = value;
      bitField0_ |= 0x00800000;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * The value of client account conversions. This only
     * includes conversion actions which
     * include_in_client_account_conversions_metric attribute is set to true. If
     * you use conversion-based bidding, your bid strategies will optimize for
     * these conversions.
     * </pre>
     *
     * <code>optional double client_account_conversions_value = 165;</code>
     * @return This builder for chaining.
     */
    public Builder clearClientAccountConversionsValue() {
      bitField0_ = (bitField0_ & ~0x00800000);
      clientAccountConversionsValue_ = 0D;
      onChanged();
      return this;
    }

    private double conversionsValueByConversionDate_ ;
    /**
     * <pre>
     * The sum of biddable conversions value by conversion date. When this
     * column is selected with date, the values in date column means the
     * conversion date.
     * </pre>
     *
     * <code>double conversions_value_by_conversion_date = 283;</code>
     * @return The conversionsValueByConversionDate.
     */
    @java.lang.Override
    public double getConversionsValueByConversionDate() {
      return conversionsValueByConversionDate_;
    }
    /**
     * <pre>
     * The sum of biddable conversions value by conversion date. When this
     * column is selected with date, the values in date column means the
     * conversion date.
     * </pre>
     *
     * <code>double conversions_value_by_conversion_date = 283;</code>
     * @param value The conversionsValueByConversionDate to set.
     * @return This builder for chaining.
     */
    public Builder setConversionsValueByConversionDate(double value) {
      
      conversionsValueByConversionDate_ = value;
      bitField0_ |= 0x01000000;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * The sum of biddable conversions value by conversion date. When this
     * column is selected with date, the values in date column means the
     * conversion date.
     * </pre>
     *
     * <code>double conversions_value_by_conversion_date = 283;</code>
     * @return This builder for chaining.
     */
    public Builder clearConversionsValueByConversionDate() {
      bitField0_ = (bitField0_ & ~0x01000000);
      conversionsValueByConversionDate_ = 0D;
      onChanged();
      return this;
    }

    private double conversionsValuePerCost_ ;
    /**
     * <pre>
     * The value of biddable conversion divided by the total cost of conversion
     * eligible interactions.
     * </pre>
     *
     * <code>optional double conversions_value_per_cost = 288;</code>
     * @return Whether the conversionsValuePerCost field is set.
     */
    @java.lang.Override
    public boolean hasConversionsValuePerCost() {
      return ((bitField0_ & 0x02000000) != 0);
    }
    /**
     * <pre>
     * The value of biddable conversion divided by the total cost of conversion
     * eligible interactions.
     * </pre>
     *
     * <code>optional double conversions_value_per_cost = 288;</code>
     * @return The conversionsValuePerCost.
     */
    @java.lang.Override
    public double getConversionsValuePerCost() {
      return conversionsValuePerCost_;
    }
    /**
     * <pre>
     * The value of biddable conversion divided by the total cost of conversion
     * eligible interactions.
     * </pre>
     *
     * <code>optional double conversions_value_per_cost = 288;</code>
     * @param value The conversionsValuePerCost to set.
     * @return This builder for chaining.
     */
    public Builder setConversionsValuePerCost(double value) {
      
      conversionsValuePerCost_ = value;
      bitField0_ |= 0x02000000;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * The value of biddable conversion divided by the total cost of conversion
     * eligible interactions.
     * </pre>
     *
     * <code>optional double conversions_value_per_cost = 288;</code>
     * @return This builder for chaining.
     */
    public Builder clearConversionsValuePerCost() {
      bitField0_ = (bitField0_ & ~0x02000000);
      conversionsValuePerCost_ = 0D;
      onChanged();
      return this;
    }

    private double conversionsFromInteractionsValuePerInteraction_ ;
    /**
     * <pre>
     * The value of conversions from interactions divided by the number of ad
     * interactions. This only includes conversion actions which
     * include_in_conversions_metric attribute is set to true. If you use
     * conversion-based bidding, your bid strategies will optimize for these
     * conversions.
     * </pre>
     *
     * <code>optional double conversions_from_interactions_value_per_interaction = 167;</code>
     * @return Whether the conversionsFromInteractionsValuePerInteraction field is set.
     */
    @java.lang.Override
    public boolean hasConversionsFromInteractionsValuePerInteraction() {
      return ((bitField0_ & 0x04000000) != 0);
    }
    /**
     * <pre>
     * The value of conversions from interactions divided by the number of ad
     * interactions. This only includes conversion actions which
     * include_in_conversions_metric attribute is set to true. If you use
     * conversion-based bidding, your bid strategies will optimize for these
     * conversions.
     * </pre>
     *
     * <code>optional double conversions_from_interactions_value_per_interaction = 167;</code>
     * @return The conversionsFromInteractionsValuePerInteraction.
     */
    @java.lang.Override
    public double getConversionsFromInteractionsValuePerInteraction() {
      return conversionsFromInteractionsValuePerInteraction_;
    }
    /**
     * <pre>
     * The value of conversions from interactions divided by the number of ad
     * interactions. This only includes conversion actions which
     * include_in_conversions_metric attribute is set to true. If you use
     * conversion-based bidding, your bid strategies will optimize for these
     * conversions.
     * </pre>
     *
     * <code>optional double conversions_from_interactions_value_per_interaction = 167;</code>
     * @param value The conversionsFromInteractionsValuePerInteraction to set.
     * @return This builder for chaining.
     */
    public Builder setConversionsFromInteractionsValuePerInteraction(double value) {
      
      conversionsFromInteractionsValuePerInteraction_ = value;
      bitField0_ |= 0x04000000;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * The value of conversions from interactions divided by the number of ad
     * interactions. This only includes conversion actions which
     * include_in_conversions_metric attribute is set to true. If you use
     * conversion-based bidding, your bid strategies will optimize for these
     * conversions.
     * </pre>
     *
     * <code>optional double conversions_from_interactions_value_per_interaction = 167;</code>
     * @return This builder for chaining.
     */
    public Builder clearConversionsFromInteractionsValuePerInteraction() {
      bitField0_ = (bitField0_ & ~0x04000000);
      conversionsFromInteractionsValuePerInteraction_ = 0D;
      onChanged();
      return this;
    }

    private double clientAccountConversions_ ;
    /**
     * <pre>
     * The number of client account conversions. This only
     * includes conversion actions which
     * include_in_client_account_conversions_metric attribute is set to true. If
     * you use conversion-based bidding, your bid strategies will optimize for
     * these conversions.
     * </pre>
     *
     * <code>optional double client_account_conversions = 168;</code>
     * @return Whether the clientAccountConversions field is set.
     */
    @java.lang.Override
    public boolean hasClientAccountConversions() {
      return ((bitField0_ & 0x08000000) != 0);
    }
    /**
     * <pre>
     * The number of client account conversions. This only
     * includes conversion actions which
     * include_in_client_account_conversions_metric attribute is set to true. If
     * you use conversion-based bidding, your bid strategies will optimize for
     * these conversions.
     * </pre>
     *
     * <code>optional double client_account_conversions = 168;</code>
     * @return The clientAccountConversions.
     */
    @java.lang.Override
    public double getClientAccountConversions() {
      return clientAccountConversions_;
    }
    /**
     * <pre>
     * The number of client account conversions. This only
     * includes conversion actions which
     * include_in_client_account_conversions_metric attribute is set to true. If
     * you use conversion-based bidding, your bid strategies will optimize for
     * these conversions.
     * </pre>
     *
     * <code>optional double client_account_conversions = 168;</code>
     * @param value The clientAccountConversions to set.
     * @return This builder for chaining.
     */
    public Builder setClientAccountConversions(double value) {
      
      clientAccountConversions_ = value;
      bitField0_ |= 0x08000000;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * The number of client account conversions. This only
     * includes conversion actions which
     * include_in_client_account_conversions_metric attribute is set to true. If
     * you use conversion-based bidding, your bid strategies will optimize for
     * these conversions.
     * </pre>
     *
     * <code>optional double client_account_conversions = 168;</code>
     * @return This builder for chaining.
     */
    public Builder clearClientAccountConversions() {
      bitField0_ = (bitField0_ & ~0x08000000);
      clientAccountConversions_ = 0D;
      onChanged();
      return this;
    }

    private double conversionsByConversionDate_ ;
    /**
     * <pre>
     * The sum of conversions by conversion date for biddable conversion types.
     * Can be fractional due to attribution modeling. When this column is selected
     * with date, the values in date column means the conversion date.
     * </pre>
     *
     * <code>double conversions_by_conversion_date = 282;</code>
     * @return The conversionsByConversionDate.
     */
    @java.lang.Override
    public double getConversionsByConversionDate() {
      return conversionsByConversionDate_;
    }
    /**
     * <pre>
     * The sum of conversions by conversion date for biddable conversion types.
     * Can be fractional due to attribution modeling. When this column is selected
     * with date, the values in date column means the conversion date.
     * </pre>
     *
     * <code>double conversions_by_conversion_date = 282;</code>
     * @param value The conversionsByConversionDate to set.
     * @return This builder for chaining.
     */
    public Builder setConversionsByConversionDate(double value) {
      
      conversionsByConversionDate_ = value;
      bitField0_ |= 0x10000000;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * The sum of conversions by conversion date for biddable conversion types.
     * Can be fractional due to attribution modeling. When this column is selected
     * with date, the values in date column means the conversion date.
     * </pre>
     *
     * <code>double conversions_by_conversion_date = 282;</code>
     * @return This builder for chaining.
     */
    public Builder clearConversionsByConversionDate() {
      bitField0_ = (bitField0_ & ~0x10000000);
      conversionsByConversionDate_ = 0D;
      onChanged();
      return this;
    }

    private long costMicros_ ;
    /**
     * <pre>
     * The sum of your cost-per-click (CPC) and cost-per-thousand impressions
     * (CPM) costs during this period.
     * </pre>
     *
     * <code>optional int64 cost_micros = 169;</code>
     * @return Whether the costMicros field is set.
     */
    @java.lang.Override
    public boolean hasCostMicros() {
      return ((bitField0_ & 0x20000000) != 0);
    }
    /**
     * <pre>
     * The sum of your cost-per-click (CPC) and cost-per-thousand impressions
     * (CPM) costs during this period.
     * </pre>
     *
     * <code>optional int64 cost_micros = 169;</code>
     * @return The costMicros.
     */
    @java.lang.Override
    public long getCostMicros() {
      return costMicros_;
    }
    /**
     * <pre>
     * The sum of your cost-per-click (CPC) and cost-per-thousand impressions
     * (CPM) costs during this period.
     * </pre>
     *
     * <code>optional int64 cost_micros = 169;</code>
     * @param value The costMicros to set.
     * @return This builder for chaining.
     */
    public Builder setCostMicros(long value) {
      
      costMicros_ = value;
      bitField0_ |= 0x20000000;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * The sum of your cost-per-click (CPC) and cost-per-thousand impressions
     * (CPM) costs during this period.
     * </pre>
     *
     * <code>optional int64 cost_micros = 169;</code>
     * @return This builder for chaining.
     */
    public Builder clearCostMicros() {
      bitField0_ = (bitField0_ & ~0x20000000);
      costMicros_ = 0L;
      onChanged();
      return this;
    }

    private double costPerAllConversions_ ;
    /**
     * <pre>
     * The cost of ad interactions divided by all conversions.
     * </pre>
     *
     * <code>optional double cost_per_all_conversions = 170;</code>
     * @return Whether the costPerAllConversions field is set.
     */
    @java.lang.Override
    public boolean hasCostPerAllConversions() {
      return ((bitField0_ & 0x40000000) != 0);
    }
    /**
     * <pre>
     * The cost of ad interactions divided by all conversions.
     * </pre>
     *
     * <code>optional double cost_per_all_conversions = 170;</code>
     * @return The costPerAllConversions.
     */
    @java.lang.Override
    public double getCostPerAllConversions() {
      return costPerAllConversions_;
    }
    /**
     * <pre>
     * The cost of ad interactions divided by all conversions.
     * </pre>
     *
     * <code>optional double cost_per_all_conversions = 170;</code>
     * @param value The costPerAllConversions to set.
     * @return This builder for chaining.
     */
    public Builder setCostPerAllConversions(double value) {
      
      costPerAllConversions_ = value;
      bitField0_ |= 0x40000000;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * The cost of ad interactions divided by all conversions.
     * </pre>
     *
     * <code>optional double cost_per_all_conversions = 170;</code>
     * @return This builder for chaining.
     */
    public Builder clearCostPerAllConversions() {
      bitField0_ = (bitField0_ & ~0x40000000);
      costPerAllConversions_ = 0D;
      onChanged();
      return this;
    }

    private double costPerConversion_ ;
    /**
     * <pre>
     * Average conversion eligible cost per biddable conversion.
     * </pre>
     *
     * <code>optional double cost_per_conversion = 286;</code>
     * @return Whether the costPerConversion field is set.
     */
    @java.lang.Override
    public boolean hasCostPerConversion() {
      return ((bitField0_ & 0x80000000) != 0);
    }
    /**
     * <pre>
     * Average conversion eligible cost per biddable conversion.
     * </pre>
     *
     * <code>optional double cost_per_conversion = 286;</code>
     * @return The costPerConversion.
     */
    @java.lang.Override
    public double getCostPerConversion() {
      return costPerConversion_;
    }
    /**
     * <pre>
     * Average conversion eligible cost per biddable conversion.
     * </pre>
     *
     * <code>optional double cost_per_conversion = 286;</code>
     * @param value The costPerConversion to set.
     * @return This builder for chaining.
     */
    public Builder setCostPerConversion(double value) {
      
      costPerConversion_ = value;
      bitField0_ |= 0x80000000;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * Average conversion eligible cost per biddable conversion.
     * </pre>
     *
     * <code>optional double cost_per_conversion = 286;</code>
     * @return This builder for chaining.
     */
    public Builder clearCostPerConversion() {
      bitField0_ = (bitField0_ & ~0x80000000);
      costPerConversion_ = 0D;
      onChanged();
      return this;
    }

    private double costPerCurrentModelAttributedConversion_ ;
    /**
     * <pre>
     * The cost of ad interactions divided by current model attributed
     * conversions. This only includes conversion actions which
     * include_in_conversions_metric attribute is set to true. If you use
     * conversion-based bidding, your bid strategies will optimize for these
     * conversions.
     * </pre>
     *
     * <code>optional double cost_per_current_model_attributed_conversion = 172;</code>
     * @return Whether the costPerCurrentModelAttributedConversion field is set.
     */
    @java.lang.Override
    public boolean hasCostPerCurrentModelAttributedConversion() {
      return ((bitField1_ & 0x00000001) != 0);
    }
    /**
     * <pre>
     * The cost of ad interactions divided by current model attributed
     * conversions. This only includes conversion actions which
     * include_in_conversions_metric attribute is set to true. If you use
     * conversion-based bidding, your bid strategies will optimize for these
     * conversions.
     * </pre>
     *
     * <code>optional double cost_per_current_model_attributed_conversion = 172;</code>
     * @return The costPerCurrentModelAttributedConversion.
     */
    @java.lang.Override
    public double getCostPerCurrentModelAttributedConversion() {
      return costPerCurrentModelAttributedConversion_;
    }
    /**
     * <pre>
     * The cost of ad interactions divided by current model attributed
     * conversions. This only includes conversion actions which
     * include_in_conversions_metric attribute is set to true. If you use
     * conversion-based bidding, your bid strategies will optimize for these
     * conversions.
     * </pre>
     *
     * <code>optional double cost_per_current_model_attributed_conversion = 172;</code>
     * @param value The costPerCurrentModelAttributedConversion to set.
     * @return This builder for chaining.
     */
    public Builder setCostPerCurrentModelAttributedConversion(double value) {
      
      costPerCurrentModelAttributedConversion_ = value;
      bitField1_ |= 0x00000001;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * The cost of ad interactions divided by current model attributed
     * conversions. This only includes conversion actions which
     * include_in_conversions_metric attribute is set to true. If you use
     * conversion-based bidding, your bid strategies will optimize for these
     * conversions.
     * </pre>
     *
     * <code>optional double cost_per_current_model_attributed_conversion = 172;</code>
     * @return This builder for chaining.
     */
    public Builder clearCostPerCurrentModelAttributedConversion() {
      bitField1_ = (bitField1_ & ~0x00000001);
      costPerCurrentModelAttributedConversion_ = 0D;
      onChanged();
      return this;
    }

    private double crossDeviceConversions_ ;
    /**
     * <pre>
     * Conversions from when a customer clicks on an ad on one device,
     * then converts on a different device or browser.
     * Cross-device conversions are already included in all_conversions.
     * </pre>
     *
     * <code>optional double cross_device_conversions = 173;</code>
     * @return Whether the crossDeviceConversions field is set.
     */
    @java.lang.Override
    public boolean hasCrossDeviceConversions() {
      return ((bitField1_ & 0x00000002) != 0);
    }
    /**
     * <pre>
     * Conversions from when a customer clicks on an ad on one device,
     * then converts on a different device or browser.
     * Cross-device conversions are already included in all_conversions.
     * </pre>
     *
     * <code>optional double cross_device_conversions = 173;</code>
     * @return The crossDeviceConversions.
     */
    @java.lang.Override
    public double getCrossDeviceConversions() {
      return crossDeviceConversions_;
    }
    /**
     * <pre>
     * Conversions from when a customer clicks on an ad on one device,
     * then converts on a different device or browser.
     * Cross-device conversions are already included in all_conversions.
     * </pre>
     *
     * <code>optional double cross_device_conversions = 173;</code>
     * @param value The crossDeviceConversions to set.
     * @return This builder for chaining.
     */
    public Builder setCrossDeviceConversions(double value) {
      
      crossDeviceConversions_ = value;
      bitField1_ |= 0x00000002;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * Conversions from when a customer clicks on an ad on one device,
     * then converts on a different device or browser.
     * Cross-device conversions are already included in all_conversions.
     * </pre>
     *
     * <code>optional double cross_device_conversions = 173;</code>
     * @return This builder for chaining.
     */
    public Builder clearCrossDeviceConversions() {
      bitField1_ = (bitField1_ & ~0x00000002);
      crossDeviceConversions_ = 0D;
      onChanged();
      return this;
    }

    private double crossDeviceConversionsValue_ ;
    /**
     * <pre>
     * The sum of the value of cross-device conversions.
     * </pre>
     *
     * <code>optional double cross_device_conversions_value = 253;</code>
     * @return Whether the crossDeviceConversionsValue field is set.
     */
    @java.lang.Override
    public boolean hasCrossDeviceConversionsValue() {
      return ((bitField1_ & 0x00000004) != 0);
    }
    /**
     * <pre>
     * The sum of the value of cross-device conversions.
     * </pre>
     *
     * <code>optional double cross_device_conversions_value = 253;</code>
     * @return The crossDeviceConversionsValue.
     */
    @java.lang.Override
    public double getCrossDeviceConversionsValue() {
      return crossDeviceConversionsValue_;
    }
    /**
     * <pre>
     * The sum of the value of cross-device conversions.
     * </pre>
     *
     * <code>optional double cross_device_conversions_value = 253;</code>
     * @param value The crossDeviceConversionsValue to set.
     * @return This builder for chaining.
     */
    public Builder setCrossDeviceConversionsValue(double value) {
      
      crossDeviceConversionsValue_ = value;
      bitField1_ |= 0x00000004;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * The sum of the value of cross-device conversions.
     * </pre>
     *
     * <code>optional double cross_device_conversions_value = 253;</code>
     * @return This builder for chaining.
     */
    public Builder clearCrossDeviceConversionsValue() {
      bitField1_ = (bitField1_ & ~0x00000004);
      crossDeviceConversionsValue_ = 0D;
      onChanged();
      return this;
    }

    private double ctr_ ;
    /**
     * <pre>
     * The number of clicks your ad receives (Clicks) divided by the number
     * of times your ad is shown (Impressions).
     * </pre>
     *
     * <code>optional double ctr = 174;</code>
     * @return Whether the ctr field is set.
     */
    @java.lang.Override
    public boolean hasCtr() {
      return ((bitField1_ & 0x00000008) != 0);
    }
    /**
     * <pre>
     * The number of clicks your ad receives (Clicks) divided by the number
     * of times your ad is shown (Impressions).
     * </pre>
     *
     * <code>optional double ctr = 174;</code>
     * @return The ctr.
     */
    @java.lang.Override
    public double getCtr() {
      return ctr_;
    }
    /**
     * <pre>
     * The number of clicks your ad receives (Clicks) divided by the number
     * of times your ad is shown (Impressions).
     * </pre>
     *
     * <code>optional double ctr = 174;</code>
     * @param value The ctr to set.
     * @return This builder for chaining.
     */
    public Builder setCtr(double value) {
      
      ctr_ = value;
      bitField1_ |= 0x00000008;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * The number of clicks your ad receives (Clicks) divided by the number
     * of times your ad is shown (Impressions).
     * </pre>
     *
     * <code>optional double ctr = 174;</code>
     * @return This builder for chaining.
     */
    public Builder clearCtr() {
      bitField1_ = (bitField1_ & ~0x00000008);
      ctr_ = 0D;
      onChanged();
      return this;
    }

    private double conversions_ ;
    /**
     * <pre>
     * The number of conversions. This only includes conversion actions which
     * include_in_conversions_metric attribute is set to true. If you use
     * conversion-based bidding, your bid strategies will optimize for these
     * conversions.
     * </pre>
     *
     * <code>optional double conversions = 251;</code>
     * @return Whether the conversions field is set.
     */
    @java.lang.Override
    public boolean hasConversions() {
      return ((bitField1_ & 0x00000010) != 0);
    }
    /**
     * <pre>
     * The number of conversions. This only includes conversion actions which
     * include_in_conversions_metric attribute is set to true. If you use
     * conversion-based bidding, your bid strategies will optimize for these
     * conversions.
     * </pre>
     *
     * <code>optional double conversions = 251;</code>
     * @return The conversions.
     */
    @java.lang.Override
    public double getConversions() {
      return conversions_;
    }
    /**
     * <pre>
     * The number of conversions. This only includes conversion actions which
     * include_in_conversions_metric attribute is set to true. If you use
     * conversion-based bidding, your bid strategies will optimize for these
     * conversions.
     * </pre>
     *
     * <code>optional double conversions = 251;</code>
     * @param value The conversions to set.
     * @return This builder for chaining.
     */
    public Builder setConversions(double value) {
      
      conversions_ = value;
      bitField1_ |= 0x00000010;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * The number of conversions. This only includes conversion actions which
     * include_in_conversions_metric attribute is set to true. If you use
     * conversion-based bidding, your bid strategies will optimize for these
     * conversions.
     * </pre>
     *
     * <code>optional double conversions = 251;</code>
     * @return This builder for chaining.
     */
    public Builder clearConversions() {
      bitField1_ = (bitField1_ & ~0x00000010);
      conversions_ = 0D;
      onChanged();
      return this;
    }

    private double conversionsValue_ ;
    /**
     * <pre>
     * The sum of conversion values for the conversions included in the
     * "conversions" field. This metric is useful only if you entered a value for
     * your conversion actions.
     * </pre>
     *
     * <code>optional double conversions_value = 252;</code>
     * @return Whether the conversionsValue field is set.
     */
    @java.lang.Override
    public boolean hasConversionsValue() {
      return ((bitField1_ & 0x00000020) != 0);
    }
    /**
     * <pre>
     * The sum of conversion values for the conversions included in the
     * "conversions" field. This metric is useful only if you entered a value for
     * your conversion actions.
     * </pre>
     *
     * <code>optional double conversions_value = 252;</code>
     * @return The conversionsValue.
     */
    @java.lang.Override
    public double getConversionsValue() {
      return conversionsValue_;
    }
    /**
     * <pre>
     * The sum of conversion values for the conversions included in the
     * "conversions" field. This metric is useful only if you entered a value for
     * your conversion actions.
     * </pre>
     *
     * <code>optional double conversions_value = 252;</code>
     * @param value The conversionsValue to set.
     * @return This builder for chaining.
     */
    public Builder setConversionsValue(double value) {
      
      conversionsValue_ = value;
      bitField1_ |= 0x00000020;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * The sum of conversion values for the conversions included in the
     * "conversions" field. This metric is useful only if you entered a value for
     * your conversion actions.
     * </pre>
     *
     * <code>optional double conversions_value = 252;</code>
     * @return This builder for chaining.
     */
    public Builder clearConversionsValue() {
      bitField1_ = (bitField1_ & ~0x00000020);
      conversionsValue_ = 0D;
      onChanged();
      return this;
    }

    private int historicalCreativeQualityScore_ = 0;
    /**
     * <pre>
     * The creative historical quality score.
     * </pre>
     *
     * <code>.google.ads.searchads360.v0.enums.QualityScoreBucketEnum.QualityScoreBucket historical_creative_quality_score = 80;</code>
     * @return The enum numeric value on the wire for historicalCreativeQualityScore.
     */
    @java.lang.Override public int getHistoricalCreativeQualityScoreValue() {
      return historicalCreativeQualityScore_;
    }
    /**
     * <pre>
     * The creative historical quality score.
     * </pre>
     *
     * <code>.google.ads.searchads360.v0.enums.QualityScoreBucketEnum.QualityScoreBucket historical_creative_quality_score = 80;</code>
     * @param value The enum numeric value on the wire for historicalCreativeQualityScore to set.
     * @return This builder for chaining.
     */
    public Builder setHistoricalCreativeQualityScoreValue(int value) {
      historicalCreativeQualityScore_ = value;
      bitField1_ |= 0x00000040;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * The creative historical quality score.
     * </pre>
     *
     * <code>.google.ads.searchads360.v0.enums.QualityScoreBucketEnum.QualityScoreBucket historical_creative_quality_score = 80;</code>
     * @return The historicalCreativeQualityScore.
     */
    @java.lang.Override
    public com.google.ads.searchads360.v0.enums.QualityScoreBucketEnum.QualityScoreBucket getHistoricalCreativeQualityScore() {
      com.google.ads.searchads360.v0.enums.QualityScoreBucketEnum.QualityScoreBucket result = com.google.ads.searchads360.v0.enums.QualityScoreBucketEnum.QualityScoreBucket.forNumber(historicalCreativeQualityScore_);
      return result == null ? com.google.ads.searchads360.v0.enums.QualityScoreBucketEnum.QualityScoreBucket.UNRECOGNIZED : result;
    }
    /**
     * <pre>
     * The creative historical quality score.
     * </pre>
     *
     * <code>.google.ads.searchads360.v0.enums.QualityScoreBucketEnum.QualityScoreBucket historical_creative_quality_score = 80;</code>
     * @param value The historicalCreativeQualityScore to set.
     * @return This builder for chaining.
     */
    public Builder setHistoricalCreativeQualityScore(com.google.ads.searchads360.v0.enums.QualityScoreBucketEnum.QualityScoreBucket value) {
      if (value == null) {
        throw new NullPointerException();
      }
      bitField1_ |= 0x00000040;
      historicalCreativeQualityScore_ = value.getNumber();
      onChanged();
      return this;
    }
    /**
     * <pre>
     * The creative historical quality score.
     * </pre>
     *
     * <code>.google.ads.searchads360.v0.enums.QualityScoreBucketEnum.QualityScoreBucket historical_creative_quality_score = 80;</code>
     * @return This builder for chaining.
     */
    public Builder clearHistoricalCreativeQualityScore() {
      bitField1_ = (bitField1_ & ~0x00000040);
      historicalCreativeQualityScore_ = 0;
      onChanged();
      return this;
    }

    private int historicalLandingPageQualityScore_ = 0;
    /**
     * <pre>
     * The quality of historical landing page experience.
     * </pre>
     *
     * <code>.google.ads.searchads360.v0.enums.QualityScoreBucketEnum.QualityScoreBucket historical_landing_page_quality_score = 81;</code>
     * @return The enum numeric value on the wire for historicalLandingPageQualityScore.
     */
    @java.lang.Override public int getHistoricalLandingPageQualityScoreValue() {
      return historicalLandingPageQualityScore_;
    }
    /**
     * <pre>
     * The quality of historical landing page experience.
     * </pre>
     *
     * <code>.google.ads.searchads360.v0.enums.QualityScoreBucketEnum.QualityScoreBucket historical_landing_page_quality_score = 81;</code>
     * @param value The enum numeric value on the wire for historicalLandingPageQualityScore to set.
     * @return This builder for chaining.
     */
    public Builder setHistoricalLandingPageQualityScoreValue(int value) {
      historicalLandingPageQualityScore_ = value;
      bitField1_ |= 0x00000080;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * The quality of historical landing page experience.
     * </pre>
     *
     * <code>.google.ads.searchads360.v0.enums.QualityScoreBucketEnum.QualityScoreBucket historical_landing_page_quality_score = 81;</code>
     * @return The historicalLandingPageQualityScore.
     */
    @java.lang.Override
    public com.google.ads.searchads360.v0.enums.QualityScoreBucketEnum.QualityScoreBucket getHistoricalLandingPageQualityScore() {
      com.google.ads.searchads360.v0.enums.QualityScoreBucketEnum.QualityScoreBucket result = com.google.ads.searchads360.v0.enums.QualityScoreBucketEnum.QualityScoreBucket.forNumber(historicalLandingPageQualityScore_);
      return result == null ? com.google.ads.searchads360.v0.enums.QualityScoreBucketEnum.QualityScoreBucket.UNRECOGNIZED : result;
    }
    /**
     * <pre>
     * The quality of historical landing page experience.
     * </pre>
     *
     * <code>.google.ads.searchads360.v0.enums.QualityScoreBucketEnum.QualityScoreBucket historical_landing_page_quality_score = 81;</code>
     * @param value The historicalLandingPageQualityScore to set.
     * @return This builder for chaining.
     */
    public Builder setHistoricalLandingPageQualityScore(com.google.ads.searchads360.v0.enums.QualityScoreBucketEnum.QualityScoreBucket value) {
      if (value == null) {
        throw new NullPointerException();
      }
      bitField1_ |= 0x00000080;
      historicalLandingPageQualityScore_ = value.getNumber();
      onChanged();
      return this;
    }
    /**
     * <pre>
     * The quality of historical landing page experience.
     * </pre>
     *
     * <code>.google.ads.searchads360.v0.enums.QualityScoreBucketEnum.QualityScoreBucket historical_landing_page_quality_score = 81;</code>
     * @return This builder for chaining.
     */
    public Builder clearHistoricalLandingPageQualityScore() {
      bitField1_ = (bitField1_ & ~0x00000080);
      historicalLandingPageQualityScore_ = 0;
      onChanged();
      return this;
    }

    private long historicalQualityScore_ ;
    /**
     * <pre>
     * The historical quality score.
     * </pre>
     *
     * <code>optional int64 historical_quality_score = 216;</code>
     * @return Whether the historicalQualityScore field is set.
     */
    @java.lang.Override
    public boolean hasHistoricalQualityScore() {
      return ((bitField1_ & 0x00000100) != 0);
    }
    /**
     * <pre>
     * The historical quality score.
     * </pre>
     *
     * <code>optional int64 historical_quality_score = 216;</code>
     * @return The historicalQualityScore.
     */
    @java.lang.Override
    public long getHistoricalQualityScore() {
      return historicalQualityScore_;
    }
    /**
     * <pre>
     * The historical quality score.
     * </pre>
     *
     * <code>optional int64 historical_quality_score = 216;</code>
     * @param value The historicalQualityScore to set.
     * @return This builder for chaining.
     */
    public Builder setHistoricalQualityScore(long value) {
      
      historicalQualityScore_ = value;
      bitField1_ |= 0x00000100;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * The historical quality score.
     * </pre>
     *
     * <code>optional int64 historical_quality_score = 216;</code>
     * @return This builder for chaining.
     */
    public Builder clearHistoricalQualityScore() {
      bitField1_ = (bitField1_ & ~0x00000100);
      historicalQualityScore_ = 0L;
      onChanged();
      return this;
    }

    private int historicalSearchPredictedCtr_ = 0;
    /**
     * <pre>
     * The historical search predicted click through rate (CTR).
     * </pre>
     *
     * <code>.google.ads.searchads360.v0.enums.QualityScoreBucketEnum.QualityScoreBucket historical_search_predicted_ctr = 83;</code>
     * @return The enum numeric value on the wire for historicalSearchPredictedCtr.
     */
    @java.lang.Override public int getHistoricalSearchPredictedCtrValue() {
      return historicalSearchPredictedCtr_;
    }
    /**
     * <pre>
     * The historical search predicted click through rate (CTR).
     * </pre>
     *
     * <code>.google.ads.searchads360.v0.enums.QualityScoreBucketEnum.QualityScoreBucket historical_search_predicted_ctr = 83;</code>
     * @param value The enum numeric value on the wire for historicalSearchPredictedCtr to set.
     * @return This builder for chaining.
     */
    public Builder setHistoricalSearchPredictedCtrValue(int value) {
      historicalSearchPredictedCtr_ = value;
      bitField1_ |= 0x00000200;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * The historical search predicted click through rate (CTR).
     * </pre>
     *
     * <code>.google.ads.searchads360.v0.enums.QualityScoreBucketEnum.QualityScoreBucket historical_search_predicted_ctr = 83;</code>
     * @return The historicalSearchPredictedCtr.
     */
    @java.lang.Override
    public com.google.ads.searchads360.v0.enums.QualityScoreBucketEnum.QualityScoreBucket getHistoricalSearchPredictedCtr() {
      com.google.ads.searchads360.v0.enums.QualityScoreBucketEnum.QualityScoreBucket result = com.google.ads.searchads360.v0.enums.QualityScoreBucketEnum.QualityScoreBucket.forNumber(historicalSearchPredictedCtr_);
      return result == null ? com.google.ads.searchads360.v0.enums.QualityScoreBucketEnum.QualityScoreBucket.UNRECOGNIZED : result;
    }
    /**
     * <pre>
     * The historical search predicted click through rate (CTR).
     * </pre>
     *
     * <code>.google.ads.searchads360.v0.enums.QualityScoreBucketEnum.QualityScoreBucket historical_search_predicted_ctr = 83;</code>
     * @param value The historicalSearchPredictedCtr to set.
     * @return This builder for chaining.
     */
    public Builder setHistoricalSearchPredictedCtr(com.google.ads.searchads360.v0.enums.QualityScoreBucketEnum.QualityScoreBucket value) {
      if (value == null) {
        throw new NullPointerException();
      }
      bitField1_ |= 0x00000200;
      historicalSearchPredictedCtr_ = value.getNumber();
      onChanged();
      return this;
    }
    /**
     * <pre>
     * The historical search predicted click through rate (CTR).
     * </pre>
     *
     * <code>.google.ads.searchads360.v0.enums.QualityScoreBucketEnum.QualityScoreBucket historical_search_predicted_ctr = 83;</code>
     * @return This builder for chaining.
     */
    public Builder clearHistoricalSearchPredictedCtr() {
      bitField1_ = (bitField1_ & ~0x00000200);
      historicalSearchPredictedCtr_ = 0;
      onChanged();
      return this;
    }

    private long impressions_ ;
    /**
     * <pre>
     * Count of how often your ad has appeared on a search results page or
     * website on the Google Network.
     * </pre>
     *
     * <code>optional int64 impressions = 221;</code>
     * @return Whether the impressions field is set.
     */
    @java.lang.Override
    public boolean hasImpressions() {
      return ((bitField1_ & 0x00000400) != 0);
    }
    /**
     * <pre>
     * Count of how often your ad has appeared on a search results page or
     * website on the Google Network.
     * </pre>
     *
     * <code>optional int64 impressions = 221;</code>
     * @return The impressions.
     */
    @java.lang.Override
    public long getImpressions() {
      return impressions_;
    }
    /**
     * <pre>
     * Count of how often your ad has appeared on a search results page or
     * website on the Google Network.
     * </pre>
     *
     * <code>optional int64 impressions = 221;</code>
     * @param value The impressions to set.
     * @return This builder for chaining.
     */
    public Builder setImpressions(long value) {
      
      impressions_ = value;
      bitField1_ |= 0x00000400;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * Count of how often your ad has appeared on a search results page or
     * website on the Google Network.
     * </pre>
     *
     * <code>optional int64 impressions = 221;</code>
     * @return This builder for chaining.
     */
    public Builder clearImpressions() {
      bitField1_ = (bitField1_ & ~0x00000400);
      impressions_ = 0L;
      onChanged();
      return this;
    }

    private double interactionRate_ ;
    /**
     * <pre>
     * How often people interact with your ad after it is shown to them.
     * This is the number of interactions divided by the number of times your ad
     * is shown.
     * </pre>
     *
     * <code>optional double interaction_rate = 222;</code>
     * @return Whether the interactionRate field is set.
     */
    @java.lang.Override
    public boolean hasInteractionRate() {
      return ((bitField1_ & 0x00000800) != 0);
    }
    /**
     * <pre>
     * How often people interact with your ad after it is shown to them.
     * This is the number of interactions divided by the number of times your ad
     * is shown.
     * </pre>
     *
     * <code>optional double interaction_rate = 222;</code>
     * @return The interactionRate.
     */
    @java.lang.Override
    public double getInteractionRate() {
      return interactionRate_;
    }
    /**
     * <pre>
     * How often people interact with your ad after it is shown to them.
     * This is the number of interactions divided by the number of times your ad
     * is shown.
     * </pre>
     *
     * <code>optional double interaction_rate = 222;</code>
     * @param value The interactionRate to set.
     * @return This builder for chaining.
     */
    public Builder setInteractionRate(double value) {
      
      interactionRate_ = value;
      bitField1_ |= 0x00000800;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * How often people interact with your ad after it is shown to them.
     * This is the number of interactions divided by the number of times your ad
     * is shown.
     * </pre>
     *
     * <code>optional double interaction_rate = 222;</code>
     * @return This builder for chaining.
     */
    public Builder clearInteractionRate() {
      bitField1_ = (bitField1_ & ~0x00000800);
      interactionRate_ = 0D;
      onChanged();
      return this;
    }

    private long interactions_ ;
    /**
     * <pre>
     * The number of interactions.
     * An interaction is the main user action associated with an ad format-clicks
     * for text and shopping ads, views for video ads, and so on.
     * </pre>
     *
     * <code>optional int64 interactions = 223;</code>
     * @return Whether the interactions field is set.
     */
    @java.lang.Override
    public boolean hasInteractions() {
      return ((bitField1_ & 0x00001000) != 0);
    }
    /**
     * <pre>
     * The number of interactions.
     * An interaction is the main user action associated with an ad format-clicks
     * for text and shopping ads, views for video ads, and so on.
     * </pre>
     *
     * <code>optional int64 interactions = 223;</code>
     * @return The interactions.
     */
    @java.lang.Override
    public long getInteractions() {
      return interactions_;
    }
    /**
     * <pre>
     * The number of interactions.
     * An interaction is the main user action associated with an ad format-clicks
     * for text and shopping ads, views for video ads, and so on.
     * </pre>
     *
     * <code>optional int64 interactions = 223;</code>
     * @param value The interactions to set.
     * @return This builder for chaining.
     */
    public Builder setInteractions(long value) {
      
      interactions_ = value;
      bitField1_ |= 0x00001000;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * The number of interactions.
     * An interaction is the main user action associated with an ad format-clicks
     * for text and shopping ads, views for video ads, and so on.
     * </pre>
     *
     * <code>optional int64 interactions = 223;</code>
     * @return This builder for chaining.
     */
    public Builder clearInteractions() {
      bitField1_ = (bitField1_ & ~0x00001000);
      interactions_ = 0L;
      onChanged();
      return this;
    }

    private java.util.List<java.lang.Integer> interactionEventTypes_ =
      java.util.Collections.emptyList();
    private void ensureInteractionEventTypesIsMutable() {
      if (!((bitField1_ & 0x00002000) != 0)) {
        interactionEventTypes_ = new java.util.ArrayList<java.lang.Integer>(interactionEventTypes_);
        bitField1_ |= 0x00002000;
      }
    }
    /**
     * <pre>
     * The types of payable and free interactions.
     * </pre>
     *
     * <code>repeated .google.ads.searchads360.v0.enums.InteractionEventTypeEnum.InteractionEventType interaction_event_types = 100;</code>
     * @return A list containing the interactionEventTypes.
     */
    public java.util.List<com.google.ads.searchads360.v0.enums.InteractionEventTypeEnum.InteractionEventType> getInteractionEventTypesList() {
      return new com.google.protobuf.Internal.ListAdapter<
          java.lang.Integer, com.google.ads.searchads360.v0.enums.InteractionEventTypeEnum.InteractionEventType>(interactionEventTypes_, interactionEventTypes_converter_);
    }
    /**
     * <pre>
     * The types of payable and free interactions.
     * </pre>
     *
     * <code>repeated .google.ads.searchads360.v0.enums.InteractionEventTypeEnum.InteractionEventType interaction_event_types = 100;</code>
     * @return The count of interactionEventTypes.
     */
    public int getInteractionEventTypesCount() {
      return interactionEventTypes_.size();
    }
    /**
     * <pre>
     * The types of payable and free interactions.
     * </pre>
     *
     * <code>repeated .google.ads.searchads360.v0.enums.InteractionEventTypeEnum.InteractionEventType interaction_event_types = 100;</code>
     * @param index The index of the element to return.
     * @return The interactionEventTypes at the given index.
     */
    public com.google.ads.searchads360.v0.enums.InteractionEventTypeEnum.InteractionEventType getInteractionEventTypes(int index) {
      return interactionEventTypes_converter_.convert(interactionEventTypes_.get(index));
    }
    /**
     * <pre>
     * The types of payable and free interactions.
     * </pre>
     *
     * <code>repeated .google.ads.searchads360.v0.enums.InteractionEventTypeEnum.InteractionEventType interaction_event_types = 100;</code>
     * @param index The index to set the value at.
     * @param value The interactionEventTypes to set.
     * @return This builder for chaining.
     */
    public Builder setInteractionEventTypes(
        int index, com.google.ads.searchads360.v0.enums.InteractionEventTypeEnum.InteractionEventType value) {
      if (value == null) {
        throw new NullPointerException();
      }
      ensureInteractionEventTypesIsMutable();
      interactionEventTypes_.set(index, value.getNumber());
      onChanged();
      return this;
    }
    /**
     * <pre>
     * The types of payable and free interactions.
     * </pre>
     *
     * <code>repeated .google.ads.searchads360.v0.enums.InteractionEventTypeEnum.InteractionEventType interaction_event_types = 100;</code>
     * @param value The interactionEventTypes to add.
     * @return This builder for chaining.
     */
    public Builder addInteractionEventTypes(com.google.ads.searchads360.v0.enums.InteractionEventTypeEnum.InteractionEventType value) {
      if (value == null) {
        throw new NullPointerException();
      }
      ensureInteractionEventTypesIsMutable();
      interactionEventTypes_.add(value.getNumber());
      onChanged();
      return this;
    }
    /**
     * <pre>
     * The types of payable and free interactions.
     * </pre>
     *
     * <code>repeated .google.ads.searchads360.v0.enums.InteractionEventTypeEnum.InteractionEventType interaction_event_types = 100;</code>
     * @param values The interactionEventTypes to add.
     * @return This builder for chaining.
     */
    public Builder addAllInteractionEventTypes(
        java.lang.Iterable<? extends com.google.ads.searchads360.v0.enums.InteractionEventTypeEnum.InteractionEventType> values) {
      ensureInteractionEventTypesIsMutable();
      for (com.google.ads.searchads360.v0.enums.InteractionEventTypeEnum.InteractionEventType value : values) {
        interactionEventTypes_.add(value.getNumber());
      }
      onChanged();
      return this;
    }
    /**
     * <pre>
     * The types of payable and free interactions.
     * </pre>
     *
     * <code>repeated .google.ads.searchads360.v0.enums.InteractionEventTypeEnum.InteractionEventType interaction_event_types = 100;</code>
     * @return This builder for chaining.
     */
    public Builder clearInteractionEventTypes() {
      interactionEventTypes_ = java.util.Collections.emptyList();
      bitField1_ = (bitField1_ & ~0x00002000);
      onChanged();
      return this;
    }
    /**
     * <pre>
     * The types of payable and free interactions.
     * </pre>
     *
     * <code>repeated .google.ads.searchads360.v0.enums.InteractionEventTypeEnum.InteractionEventType interaction_event_types = 100;</code>
     * @return A list containing the enum numeric values on the wire for interactionEventTypes.
     */
    public java.util.List<java.lang.Integer>
    getInteractionEventTypesValueList() {
      return java.util.Collections.unmodifiableList(interactionEventTypes_);
    }
    /**
     * <pre>
     * The types of payable and free interactions.
     * </pre>
     *
     * <code>repeated .google.ads.searchads360.v0.enums.InteractionEventTypeEnum.InteractionEventType interaction_event_types = 100;</code>
     * @param index The index of the value to return.
     * @return The enum numeric value on the wire of interactionEventTypes at the given index.
     */
    public int getInteractionEventTypesValue(int index) {
      return interactionEventTypes_.get(index);
    }
    /**
     * <pre>
     * The types of payable and free interactions.
     * </pre>
     *
     * <code>repeated .google.ads.searchads360.v0.enums.InteractionEventTypeEnum.InteractionEventType interaction_event_types = 100;</code>
     * @param index The index to set the value at.
     * @param value The enum numeric value on the wire for interactionEventTypes to set.
     * @return This builder for chaining.
     */
    public Builder setInteractionEventTypesValue(
        int index, int value) {
      ensureInteractionEventTypesIsMutable();
      interactionEventTypes_.set(index, value);
      onChanged();
      return this;
    }
    /**
     * <pre>
     * The types of payable and free interactions.
     * </pre>
     *
     * <code>repeated .google.ads.searchads360.v0.enums.InteractionEventTypeEnum.InteractionEventType interaction_event_types = 100;</code>
     * @param value The enum numeric value on the wire for interactionEventTypes to add.
     * @return This builder for chaining.
     */
    public Builder addInteractionEventTypesValue(int value) {
      ensureInteractionEventTypesIsMutable();
      interactionEventTypes_.add(value);
      onChanged();
      return this;
    }
    /**
     * <pre>
     * The types of payable and free interactions.
     * </pre>
     *
     * <code>repeated .google.ads.searchads360.v0.enums.InteractionEventTypeEnum.InteractionEventType interaction_event_types = 100;</code>
     * @param values The enum numeric values on the wire for interactionEventTypes to add.
     * @return This builder for chaining.
     */
    public Builder addAllInteractionEventTypesValue(
        java.lang.Iterable<java.lang.Integer> values) {
      ensureInteractionEventTypesIsMutable();
      for (int value : values) {
        interactionEventTypes_.add(value);
      }
      onChanged();
      return this;
    }

    private double invalidClickRate_ ;
    /**
     * <pre>
     * The percentage of clicks filtered out of your total number of clicks
     * (filtered + non-filtered clicks) during the reporting period.
     * </pre>
     *
     * <code>optional double invalid_click_rate = 224;</code>
     * @return Whether the invalidClickRate field is set.
     */
    @java.lang.Override
    public boolean hasInvalidClickRate() {
      return ((bitField1_ & 0x00004000) != 0);
    }
    /**
     * <pre>
     * The percentage of clicks filtered out of your total number of clicks
     * (filtered + non-filtered clicks) during the reporting period.
     * </pre>
     *
     * <code>optional double invalid_click_rate = 224;</code>
     * @return The invalidClickRate.
     */
    @java.lang.Override
    public double getInvalidClickRate() {
      return invalidClickRate_;
    }
    /**
     * <pre>
     * The percentage of clicks filtered out of your total number of clicks
     * (filtered + non-filtered clicks) during the reporting period.
     * </pre>
     *
     * <code>optional double invalid_click_rate = 224;</code>
     * @param value The invalidClickRate to set.
     * @return This builder for chaining.
     */
    public Builder setInvalidClickRate(double value) {
      
      invalidClickRate_ = value;
      bitField1_ |= 0x00004000;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * The percentage of clicks filtered out of your total number of clicks
     * (filtered + non-filtered clicks) during the reporting period.
     * </pre>
     *
     * <code>optional double invalid_click_rate = 224;</code>
     * @return This builder for chaining.
     */
    public Builder clearInvalidClickRate() {
      bitField1_ = (bitField1_ & ~0x00004000);
      invalidClickRate_ = 0D;
      onChanged();
      return this;
    }

    private long invalidClicks_ ;
    /**
     * <pre>
     * Number of clicks Google considers illegitimate and doesn't charge you for.
     * </pre>
     *
     * <code>optional int64 invalid_clicks = 225;</code>
     * @return Whether the invalidClicks field is set.
     */
    @java.lang.Override
    public boolean hasInvalidClicks() {
      return ((bitField1_ & 0x00008000) != 0);
    }
    /**
     * <pre>
     * Number of clicks Google considers illegitimate and doesn't charge you for.
     * </pre>
     *
     * <code>optional int64 invalid_clicks = 225;</code>
     * @return The invalidClicks.
     */
    @java.lang.Override
    public long getInvalidClicks() {
      return invalidClicks_;
    }
    /**
     * <pre>
     * Number of clicks Google considers illegitimate and doesn't charge you for.
     * </pre>
     *
     * <code>optional int64 invalid_clicks = 225;</code>
     * @param value The invalidClicks to set.
     * @return This builder for chaining.
     */
    public Builder setInvalidClicks(long value) {
      
      invalidClicks_ = value;
      bitField1_ |= 0x00008000;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * Number of clicks Google considers illegitimate and doesn't charge you for.
     * </pre>
     *
     * <code>optional int64 invalid_clicks = 225;</code>
     * @return This builder for chaining.
     */
    public Builder clearInvalidClicks() {
      bitField1_ = (bitField1_ & ~0x00008000);
      invalidClicks_ = 0L;
      onChanged();
      return this;
    }

    private double mobileFriendlyClicksPercentage_ ;
    /**
     * <pre>
     * The percentage of mobile clicks that go to a mobile-friendly page.
     * </pre>
     *
     * <code>optional double mobile_friendly_clicks_percentage = 229;</code>
     * @return Whether the mobileFriendlyClicksPercentage field is set.
     */
    @java.lang.Override
    public boolean hasMobileFriendlyClicksPercentage() {
      return ((bitField1_ & 0x00010000) != 0);
    }
    /**
     * <pre>
     * The percentage of mobile clicks that go to a mobile-friendly page.
     * </pre>
     *
     * <code>optional double mobile_friendly_clicks_percentage = 229;</code>
     * @return The mobileFriendlyClicksPercentage.
     */
    @java.lang.Override
    public double getMobileFriendlyClicksPercentage() {
      return mobileFriendlyClicksPercentage_;
    }
    /**
     * <pre>
     * The percentage of mobile clicks that go to a mobile-friendly page.
     * </pre>
     *
     * <code>optional double mobile_friendly_clicks_percentage = 229;</code>
     * @param value The mobileFriendlyClicksPercentage to set.
     * @return This builder for chaining.
     */
    public Builder setMobileFriendlyClicksPercentage(double value) {
      
      mobileFriendlyClicksPercentage_ = value;
      bitField1_ |= 0x00010000;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * The percentage of mobile clicks that go to a mobile-friendly page.
     * </pre>
     *
     * <code>optional double mobile_friendly_clicks_percentage = 229;</code>
     * @return This builder for chaining.
     */
    public Builder clearMobileFriendlyClicksPercentage() {
      bitField1_ = (bitField1_ & ~0x00010000);
      mobileFriendlyClicksPercentage_ = 0D;
      onChanged();
      return this;
    }

    private double searchAbsoluteTopImpressionShare_ ;
    /**
     * <pre>
     * The percentage of the customer's Shopping or Search ad impressions that are
     * shown in the most prominent Shopping position. See
     * https://support.google.com/sa360/answer/9566729
     * for details. Any value below 0.1 is reported as 0.0999.
     * </pre>
     *
     * <code>optional double search_absolute_top_impression_share = 136;</code>
     * @return Whether the searchAbsoluteTopImpressionShare field is set.
     */
    @java.lang.Override
    public boolean hasSearchAbsoluteTopImpressionShare() {
      return ((bitField1_ & 0x00020000) != 0);
    }
    /**
     * <pre>
     * The percentage of the customer's Shopping or Search ad impressions that are
     * shown in the most prominent Shopping position. See
     * https://support.google.com/sa360/answer/9566729
     * for details. Any value below 0.1 is reported as 0.0999.
     * </pre>
     *
     * <code>optional double search_absolute_top_impression_share = 136;</code>
     * @return The searchAbsoluteTopImpressionShare.
     */
    @java.lang.Override
    public double getSearchAbsoluteTopImpressionShare() {
      return searchAbsoluteTopImpressionShare_;
    }
    /**
     * <pre>
     * The percentage of the customer's Shopping or Search ad impressions that are
     * shown in the most prominent Shopping position. See
     * https://support.google.com/sa360/answer/9566729
     * for details. Any value below 0.1 is reported as 0.0999.
     * </pre>
     *
     * <code>optional double search_absolute_top_impression_share = 136;</code>
     * @param value The searchAbsoluteTopImpressionShare to set.
     * @return This builder for chaining.
     */
    public Builder setSearchAbsoluteTopImpressionShare(double value) {
      
      searchAbsoluteTopImpressionShare_ = value;
      bitField1_ |= 0x00020000;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * The percentage of the customer's Shopping or Search ad impressions that are
     * shown in the most prominent Shopping position. See
     * https://support.google.com/sa360/answer/9566729
     * for details. Any value below 0.1 is reported as 0.0999.
     * </pre>
     *
     * <code>optional double search_absolute_top_impression_share = 136;</code>
     * @return This builder for chaining.
     */
    public Builder clearSearchAbsoluteTopImpressionShare() {
      bitField1_ = (bitField1_ & ~0x00020000);
      searchAbsoluteTopImpressionShare_ = 0D;
      onChanged();
      return this;
    }

    private double searchBudgetLostAbsoluteTopImpressionShare_ ;
    /**
     * <pre>
     * The number estimating how often your ad wasn't the very first ad above the
     * organic search results due to a low budget. Note: Search
     * budget lost absolute top impression share is reported in the range of 0 to
     * 0.9. Any value above 0.9 is reported as 0.9001.
     * </pre>
     *
     * <code>optional double search_budget_lost_absolute_top_impression_share = 137;</code>
     * @return Whether the searchBudgetLostAbsoluteTopImpressionShare field is set.
     */
    @java.lang.Override
    public boolean hasSearchBudgetLostAbsoluteTopImpressionShare() {
      return ((bitField1_ & 0x00040000) != 0);
    }
    /**
     * <pre>
     * The number estimating how often your ad wasn't the very first ad above the
     * organic search results due to a low budget. Note: Search
     * budget lost absolute top impression share is reported in the range of 0 to
     * 0.9. Any value above 0.9 is reported as 0.9001.
     * </pre>
     *
     * <code>optional double search_budget_lost_absolute_top_impression_share = 137;</code>
     * @return The searchBudgetLostAbsoluteTopImpressionShare.
     */
    @java.lang.Override
    public double getSearchBudgetLostAbsoluteTopImpressionShare() {
      return searchBudgetLostAbsoluteTopImpressionShare_;
    }
    /**
     * <pre>
     * The number estimating how often your ad wasn't the very first ad above the
     * organic search results due to a low budget. Note: Search
     * budget lost absolute top impression share is reported in the range of 0 to
     * 0.9. Any value above 0.9 is reported as 0.9001.
     * </pre>
     *
     * <code>optional double search_budget_lost_absolute_top_impression_share = 137;</code>
     * @param value The searchBudgetLostAbsoluteTopImpressionShare to set.
     * @return This builder for chaining.
     */
    public Builder setSearchBudgetLostAbsoluteTopImpressionShare(double value) {
      
      searchBudgetLostAbsoluteTopImpressionShare_ = value;
      bitField1_ |= 0x00040000;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * The number estimating how often your ad wasn't the very first ad above the
     * organic search results due to a low budget. Note: Search
     * budget lost absolute top impression share is reported in the range of 0 to
     * 0.9. Any value above 0.9 is reported as 0.9001.
     * </pre>
     *
     * <code>optional double search_budget_lost_absolute_top_impression_share = 137;</code>
     * @return This builder for chaining.
     */
    public Builder clearSearchBudgetLostAbsoluteTopImpressionShare() {
      bitField1_ = (bitField1_ & ~0x00040000);
      searchBudgetLostAbsoluteTopImpressionShare_ = 0D;
      onChanged();
      return this;
    }

    private double searchBudgetLostImpressionShare_ ;
    /**
     * <pre>
     * The estimated percent of times that your ad was eligible to show on the
     * Search Network but didn't because your budget was too low. Note: Search
     * budget lost impression share is reported in the range of 0 to 0.9. Any
     * value above 0.9 is reported as 0.9001.
     * </pre>
     *
     * <code>optional double search_budget_lost_impression_share = 138;</code>
     * @return Whether the searchBudgetLostImpressionShare field is set.
     */
    @java.lang.Override
    public boolean hasSearchBudgetLostImpressionShare() {
      return ((bitField1_ & 0x00080000) != 0);
    }
    /**
     * <pre>
     * The estimated percent of times that your ad was eligible to show on the
     * Search Network but didn't because your budget was too low. Note: Search
     * budget lost impression share is reported in the range of 0 to 0.9. Any
     * value above 0.9 is reported as 0.9001.
     * </pre>
     *
     * <code>optional double search_budget_lost_impression_share = 138;</code>
     * @return The searchBudgetLostImpressionShare.
     */
    @java.lang.Override
    public double getSearchBudgetLostImpressionShare() {
      return searchBudgetLostImpressionShare_;
    }
    /**
     * <pre>
     * The estimated percent of times that your ad was eligible to show on the
     * Search Network but didn't because your budget was too low. Note: Search
     * budget lost impression share is reported in the range of 0 to 0.9. Any
     * value above 0.9 is reported as 0.9001.
     * </pre>
     *
     * <code>optional double search_budget_lost_impression_share = 138;</code>
     * @param value The searchBudgetLostImpressionShare to set.
     * @return This builder for chaining.
     */
    public Builder setSearchBudgetLostImpressionShare(double value) {
      
      searchBudgetLostImpressionShare_ = value;
      bitField1_ |= 0x00080000;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * The estimated percent of times that your ad was eligible to show on the
     * Search Network but didn't because your budget was too low. Note: Search
     * budget lost impression share is reported in the range of 0 to 0.9. Any
     * value above 0.9 is reported as 0.9001.
     * </pre>
     *
     * <code>optional double search_budget_lost_impression_share = 138;</code>
     * @return This builder for chaining.
     */
    public Builder clearSearchBudgetLostImpressionShare() {
      bitField1_ = (bitField1_ & ~0x00080000);
      searchBudgetLostImpressionShare_ = 0D;
      onChanged();
      return this;
    }

    private double searchBudgetLostTopImpressionShare_ ;
    /**
     * <pre>
     * The number estimating how often your ad didn't show anywhere above the
     * organic search results due to a low budget. Note: Search
     * budget lost top impression share is reported in the range of 0 to 0.9. Any
     * value above 0.9 is reported as 0.9001.
     * </pre>
     *
     * <code>optional double search_budget_lost_top_impression_share = 139;</code>
     * @return Whether the searchBudgetLostTopImpressionShare field is set.
     */
    @java.lang.Override
    public boolean hasSearchBudgetLostTopImpressionShare() {
      return ((bitField1_ & 0x00100000) != 0);
    }
    /**
     * <pre>
     * The number estimating how often your ad didn't show anywhere above the
     * organic search results due to a low budget. Note: Search
     * budget lost top impression share is reported in the range of 0 to 0.9. Any
     * value above 0.9 is reported as 0.9001.
     * </pre>
     *
     * <code>optional double search_budget_lost_top_impression_share = 139;</code>
     * @return The searchBudgetLostTopImpressionShare.
     */
    @java.lang.Override
    public double getSearchBudgetLostTopImpressionShare() {
      return searchBudgetLostTopImpressionShare_;
    }
    /**
     * <pre>
     * The number estimating how often your ad didn't show anywhere above the
     * organic search results due to a low budget. Note: Search
     * budget lost top impression share is reported in the range of 0 to 0.9. Any
     * value above 0.9 is reported as 0.9001.
     * </pre>
     *
     * <code>optional double search_budget_lost_top_impression_share = 139;</code>
     * @param value The searchBudgetLostTopImpressionShare to set.
     * @return This builder for chaining.
     */
    public Builder setSearchBudgetLostTopImpressionShare(double value) {
      
      searchBudgetLostTopImpressionShare_ = value;
      bitField1_ |= 0x00100000;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * The number estimating how often your ad didn't show anywhere above the
     * organic search results due to a low budget. Note: Search
     * budget lost top impression share is reported in the range of 0 to 0.9. Any
     * value above 0.9 is reported as 0.9001.
     * </pre>
     *
     * <code>optional double search_budget_lost_top_impression_share = 139;</code>
     * @return This builder for chaining.
     */
    public Builder clearSearchBudgetLostTopImpressionShare() {
      bitField1_ = (bitField1_ & ~0x00100000);
      searchBudgetLostTopImpressionShare_ = 0D;
      onChanged();
      return this;
    }

    private double searchClickShare_ ;
    /**
     * <pre>
     * The number of clicks you've received on the Search Network
     * divided by the estimated number of clicks you were eligible to receive.
     * Note: Search click share is reported in the range of 0.1 to 1. Any value
     * below 0.1 is reported as 0.0999.
     * </pre>
     *
     * <code>optional double search_click_share = 140;</code>
     * @return Whether the searchClickShare field is set.
     */
    @java.lang.Override
    public boolean hasSearchClickShare() {
      return ((bitField1_ & 0x00200000) != 0);
    }
    /**
     * <pre>
     * The number of clicks you've received on the Search Network
     * divided by the estimated number of clicks you were eligible to receive.
     * Note: Search click share is reported in the range of 0.1 to 1. Any value
     * below 0.1 is reported as 0.0999.
     * </pre>
     *
     * <code>optional double search_click_share = 140;</code>
     * @return The searchClickShare.
     */
    @java.lang.Override
    public double getSearchClickShare() {
      return searchClickShare_;
    }
    /**
     * <pre>
     * The number of clicks you've received on the Search Network
     * divided by the estimated number of clicks you were eligible to receive.
     * Note: Search click share is reported in the range of 0.1 to 1. Any value
     * below 0.1 is reported as 0.0999.
     * </pre>
     *
     * <code>optional double search_click_share = 140;</code>
     * @param value The searchClickShare to set.
     * @return This builder for chaining.
     */
    public Builder setSearchClickShare(double value) {
      
      searchClickShare_ = value;
      bitField1_ |= 0x00200000;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * The number of clicks you've received on the Search Network
     * divided by the estimated number of clicks you were eligible to receive.
     * Note: Search click share is reported in the range of 0.1 to 1. Any value
     * below 0.1 is reported as 0.0999.
     * </pre>
     *
     * <code>optional double search_click_share = 140;</code>
     * @return This builder for chaining.
     */
    public Builder clearSearchClickShare() {
      bitField1_ = (bitField1_ & ~0x00200000);
      searchClickShare_ = 0D;
      onChanged();
      return this;
    }

    private double searchExactMatchImpressionShare_ ;
    /**
     * <pre>
     * The impressions you've received divided by the estimated number of
     * impressions you were eligible to receive on the Search Network for search
     * terms that matched your keywords exactly (or were close variants of your
     * keyword), regardless of your keyword match types. Note: Search exact match
     * impression share is reported in the range of 0.1 to 1. Any value below 0.1
     * is reported as 0.0999.
     * </pre>
     *
     * <code>optional double search_exact_match_impression_share = 141;</code>
     * @return Whether the searchExactMatchImpressionShare field is set.
     */
    @java.lang.Override
    public boolean hasSearchExactMatchImpressionShare() {
      return ((bitField1_ & 0x00400000) != 0);
    }
    /**
     * <pre>
     * The impressions you've received divided by the estimated number of
     * impressions you were eligible to receive on the Search Network for search
     * terms that matched your keywords exactly (or were close variants of your
     * keyword), regardless of your keyword match types. Note: Search exact match
     * impression share is reported in the range of 0.1 to 1. Any value below 0.1
     * is reported as 0.0999.
     * </pre>
     *
     * <code>optional double search_exact_match_impression_share = 141;</code>
     * @return The searchExactMatchImpressionShare.
     */
    @java.lang.Override
    public double getSearchExactMatchImpressionShare() {
      return searchExactMatchImpressionShare_;
    }
    /**
     * <pre>
     * The impressions you've received divided by the estimated number of
     * impressions you were eligible to receive on the Search Network for search
     * terms that matched your keywords exactly (or were close variants of your
     * keyword), regardless of your keyword match types. Note: Search exact match
     * impression share is reported in the range of 0.1 to 1. Any value below 0.1
     * is reported as 0.0999.
     * </pre>
     *
     * <code>optional double search_exact_match_impression_share = 141;</code>
     * @param value The searchExactMatchImpressionShare to set.
     * @return This builder for chaining.
     */
    public Builder setSearchExactMatchImpressionShare(double value) {
      
      searchExactMatchImpressionShare_ = value;
      bitField1_ |= 0x00400000;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * The impressions you've received divided by the estimated number of
     * impressions you were eligible to receive on the Search Network for search
     * terms that matched your keywords exactly (or were close variants of your
     * keyword), regardless of your keyword match types. Note: Search exact match
     * impression share is reported in the range of 0.1 to 1. Any value below 0.1
     * is reported as 0.0999.
     * </pre>
     *
     * <code>optional double search_exact_match_impression_share = 141;</code>
     * @return This builder for chaining.
     */
    public Builder clearSearchExactMatchImpressionShare() {
      bitField1_ = (bitField1_ & ~0x00400000);
      searchExactMatchImpressionShare_ = 0D;
      onChanged();
      return this;
    }

    private double searchImpressionShare_ ;
    /**
     * <pre>
     * The impressions you've received on the Search Network divided
     * by the estimated number of impressions you were eligible to receive.
     * Note: Search impression share is reported in the range of 0.1 to 1. Any
     * value below 0.1 is reported as 0.0999.
     * </pre>
     *
     * <code>optional double search_impression_share = 142;</code>
     * @return Whether the searchImpressionShare field is set.
     */
    @java.lang.Override
    public boolean hasSearchImpressionShare() {
      return ((bitField1_ & 0x00800000) != 0);
    }
    /**
     * <pre>
     * The impressions you've received on the Search Network divided
     * by the estimated number of impressions you were eligible to receive.
     * Note: Search impression share is reported in the range of 0.1 to 1. Any
     * value below 0.1 is reported as 0.0999.
     * </pre>
     *
     * <code>optional double search_impression_share = 142;</code>
     * @return The searchImpressionShare.
     */
    @java.lang.Override
    public double getSearchImpressionShare() {
      return searchImpressionShare_;
    }
    /**
     * <pre>
     * The impressions you've received on the Search Network divided
     * by the estimated number of impressions you were eligible to receive.
     * Note: Search impression share is reported in the range of 0.1 to 1. Any
     * value below 0.1 is reported as 0.0999.
     * </pre>
     *
     * <code>optional double search_impression_share = 142;</code>
     * @param value The searchImpressionShare to set.
     * @return This builder for chaining.
     */
    public Builder setSearchImpressionShare(double value) {
      
      searchImpressionShare_ = value;
      bitField1_ |= 0x00800000;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * The impressions you've received on the Search Network divided
     * by the estimated number of impressions you were eligible to receive.
     * Note: Search impression share is reported in the range of 0.1 to 1. Any
     * value below 0.1 is reported as 0.0999.
     * </pre>
     *
     * <code>optional double search_impression_share = 142;</code>
     * @return This builder for chaining.
     */
    public Builder clearSearchImpressionShare() {
      bitField1_ = (bitField1_ & ~0x00800000);
      searchImpressionShare_ = 0D;
      onChanged();
      return this;
    }

    private double searchRankLostAbsoluteTopImpressionShare_ ;
    /**
     * <pre>
     * The number estimating how often your ad wasn't the very first ad above the
     * organic search results due to poor Ad Rank.
     * Note: Search rank lost absolute top impression share is reported in the
     * range of 0 to 0.9. Any value above 0.9 is reported as 0.9001.
     * </pre>
     *
     * <code>optional double search_rank_lost_absolute_top_impression_share = 143;</code>
     * @return Whether the searchRankLostAbsoluteTopImpressionShare field is set.
     */
    @java.lang.Override
    public boolean hasSearchRankLostAbsoluteTopImpressionShare() {
      return ((bitField1_ & 0x01000000) != 0);
    }
    /**
     * <pre>
     * The number estimating how often your ad wasn't the very first ad above the
     * organic search results due to poor Ad Rank.
     * Note: Search rank lost absolute top impression share is reported in the
     * range of 0 to 0.9. Any value above 0.9 is reported as 0.9001.
     * </pre>
     *
     * <code>optional double search_rank_lost_absolute_top_impression_share = 143;</code>
     * @return The searchRankLostAbsoluteTopImpressionShare.
     */
    @java.lang.Override
    public double getSearchRankLostAbsoluteTopImpressionShare() {
      return searchRankLostAbsoluteTopImpressionShare_;
    }
    /**
     * <pre>
     * The number estimating how often your ad wasn't the very first ad above the
     * organic search results due to poor Ad Rank.
     * Note: Search rank lost absolute top impression share is reported in the
     * range of 0 to 0.9. Any value above 0.9 is reported as 0.9001.
     * </pre>
     *
     * <code>optional double search_rank_lost_absolute_top_impression_share = 143;</code>
     * @param value The searchRankLostAbsoluteTopImpressionShare to set.
     * @return This builder for chaining.
     */
    public Builder setSearchRankLostAbsoluteTopImpressionShare(double value) {
      
      searchRankLostAbsoluteTopImpressionShare_ = value;
      bitField1_ |= 0x01000000;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * The number estimating how often your ad wasn't the very first ad above the
     * organic search results due to poor Ad Rank.
     * Note: Search rank lost absolute top impression share is reported in the
     * range of 0 to 0.9. Any value above 0.9 is reported as 0.9001.
     * </pre>
     *
     * <code>optional double search_rank_lost_absolute_top_impression_share = 143;</code>
     * @return This builder for chaining.
     */
    public Builder clearSearchRankLostAbsoluteTopImpressionShare() {
      bitField1_ = (bitField1_ & ~0x01000000);
      searchRankLostAbsoluteTopImpressionShare_ = 0D;
      onChanged();
      return this;
    }

    private double searchRankLostImpressionShare_ ;
    /**
     * <pre>
     * The estimated percentage of impressions on the Search Network
     * that your ads didn't receive due to poor Ad Rank.
     * Note: Search rank lost impression share is reported in the range of 0 to
     * 0.9. Any value above 0.9 is reported as 0.9001.
     * </pre>
     *
     * <code>optional double search_rank_lost_impression_share = 144;</code>
     * @return Whether the searchRankLostImpressionShare field is set.
     */
    @java.lang.Override
    public boolean hasSearchRankLostImpressionShare() {
      return ((bitField1_ & 0x02000000) != 0);
    }
    /**
     * <pre>
     * The estimated percentage of impressions on the Search Network
     * that your ads didn't receive due to poor Ad Rank.
     * Note: Search rank lost impression share is reported in the range of 0 to
     * 0.9. Any value above 0.9 is reported as 0.9001.
     * </pre>
     *
     * <code>optional double search_rank_lost_impression_share = 144;</code>
     * @return The searchRankLostImpressionShare.
     */
    @java.lang.Override
    public double getSearchRankLostImpressionShare() {
      return searchRankLostImpressionShare_;
    }
    /**
     * <pre>
     * The estimated percentage of impressions on the Search Network
     * that your ads didn't receive due to poor Ad Rank.
     * Note: Search rank lost impression share is reported in the range of 0 to
     * 0.9. Any value above 0.9 is reported as 0.9001.
     * </pre>
     *
     * <code>optional double search_rank_lost_impression_share = 144;</code>
     * @param value The searchRankLostImpressionShare to set.
     * @return This builder for chaining.
     */
    public Builder setSearchRankLostImpressionShare(double value) {
      
      searchRankLostImpressionShare_ = value;
      bitField1_ |= 0x02000000;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * The estimated percentage of impressions on the Search Network
     * that your ads didn't receive due to poor Ad Rank.
     * Note: Search rank lost impression share is reported in the range of 0 to
     * 0.9. Any value above 0.9 is reported as 0.9001.
     * </pre>
     *
     * <code>optional double search_rank_lost_impression_share = 144;</code>
     * @return This builder for chaining.
     */
    public Builder clearSearchRankLostImpressionShare() {
      bitField1_ = (bitField1_ & ~0x02000000);
      searchRankLostImpressionShare_ = 0D;
      onChanged();
      return this;
    }

    private double searchRankLostTopImpressionShare_ ;
    /**
     * <pre>
     * The number estimating how often your ad didn't show anywhere above the
     * organic search results due to poor Ad Rank.
     * Note: Search rank lost top impression share is reported in the range of 0
     * to 0.9. Any value above 0.9 is reported as 0.9001.
     * </pre>
     *
     * <code>optional double search_rank_lost_top_impression_share = 145;</code>
     * @return Whether the searchRankLostTopImpressionShare field is set.
     */
    @java.lang.Override
    public boolean hasSearchRankLostTopImpressionShare() {
      return ((bitField1_ & 0x04000000) != 0);
    }
    /**
     * <pre>
     * The number estimating how often your ad didn't show anywhere above the
     * organic search results due to poor Ad Rank.
     * Note: Search rank lost top impression share is reported in the range of 0
     * to 0.9. Any value above 0.9 is reported as 0.9001.
     * </pre>
     *
     * <code>optional double search_rank_lost_top_impression_share = 145;</code>
     * @return The searchRankLostTopImpressionShare.
     */
    @java.lang.Override
    public double getSearchRankLostTopImpressionShare() {
      return searchRankLostTopImpressionShare_;
    }
    /**
     * <pre>
     * The number estimating how often your ad didn't show anywhere above the
     * organic search results due to poor Ad Rank.
     * Note: Search rank lost top impression share is reported in the range of 0
     * to 0.9. Any value above 0.9 is reported as 0.9001.
     * </pre>
     *
     * <code>optional double search_rank_lost_top_impression_share = 145;</code>
     * @param value The searchRankLostTopImpressionShare to set.
     * @return This builder for chaining.
     */
    public Builder setSearchRankLostTopImpressionShare(double value) {
      
      searchRankLostTopImpressionShare_ = value;
      bitField1_ |= 0x04000000;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * The number estimating how often your ad didn't show anywhere above the
     * organic search results due to poor Ad Rank.
     * Note: Search rank lost top impression share is reported in the range of 0
     * to 0.9. Any value above 0.9 is reported as 0.9001.
     * </pre>
     *
     * <code>optional double search_rank_lost_top_impression_share = 145;</code>
     * @return This builder for chaining.
     */
    public Builder clearSearchRankLostTopImpressionShare() {
      bitField1_ = (bitField1_ & ~0x04000000);
      searchRankLostTopImpressionShare_ = 0D;
      onChanged();
      return this;
    }

    private double searchTopImpressionShare_ ;
    /**
     * <pre>
     * The impressions you've received in the top location (anywhere above the
     * organic search results) compared to the estimated number of impressions you
     * were eligible to receive in the top location.
     * Note: Search top impression share is reported in the range of 0.1 to 1. Any
     * value below 0.1 is reported as 0.0999.
     * </pre>
     *
     * <code>optional double search_top_impression_share = 146;</code>
     * @return Whether the searchTopImpressionShare field is set.
     */
    @java.lang.Override
    public boolean hasSearchTopImpressionShare() {
      return ((bitField1_ & 0x08000000) != 0);
    }
    /**
     * <pre>
     * The impressions you've received in the top location (anywhere above the
     * organic search results) compared to the estimated number of impressions you
     * were eligible to receive in the top location.
     * Note: Search top impression share is reported in the range of 0.1 to 1. Any
     * value below 0.1 is reported as 0.0999.
     * </pre>
     *
     * <code>optional double search_top_impression_share = 146;</code>
     * @return The searchTopImpressionShare.
     */
    @java.lang.Override
    public double getSearchTopImpressionShare() {
      return searchTopImpressionShare_;
    }
    /**
     * <pre>
     * The impressions you've received in the top location (anywhere above the
     * organic search results) compared to the estimated number of impressions you
     * were eligible to receive in the top location.
     * Note: Search top impression share is reported in the range of 0.1 to 1. Any
     * value below 0.1 is reported as 0.0999.
     * </pre>
     *
     * <code>optional double search_top_impression_share = 146;</code>
     * @param value The searchTopImpressionShare to set.
     * @return This builder for chaining.
     */
    public Builder setSearchTopImpressionShare(double value) {
      
      searchTopImpressionShare_ = value;
      bitField1_ |= 0x08000000;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * The impressions you've received in the top location (anywhere above the
     * organic search results) compared to the estimated number of impressions you
     * were eligible to receive in the top location.
     * Note: Search top impression share is reported in the range of 0.1 to 1. Any
     * value below 0.1 is reported as 0.0999.
     * </pre>
     *
     * <code>optional double search_top_impression_share = 146;</code>
     * @return This builder for chaining.
     */
    public Builder clearSearchTopImpressionShare() {
      bitField1_ = (bitField1_ & ~0x08000000);
      searchTopImpressionShare_ = 0D;
      onChanged();
      return this;
    }

    private double topImpressionPercentage_ ;
    /**
     * <pre>
     * The percent of your ad impressions that are shown anywhere above the
     * organic search results.
     * </pre>
     *
     * <code>optional double top_impression_percentage = 148;</code>
     * @return Whether the topImpressionPercentage field is set.
     */
    @java.lang.Override
    public boolean hasTopImpressionPercentage() {
      return ((bitField1_ & 0x10000000) != 0);
    }
    /**
     * <pre>
     * The percent of your ad impressions that are shown anywhere above the
     * organic search results.
     * </pre>
     *
     * <code>optional double top_impression_percentage = 148;</code>
     * @return The topImpressionPercentage.
     */
    @java.lang.Override
    public double getTopImpressionPercentage() {
      return topImpressionPercentage_;
    }
    /**
     * <pre>
     * The percent of your ad impressions that are shown anywhere above the
     * organic search results.
     * </pre>
     *
     * <code>optional double top_impression_percentage = 148;</code>
     * @param value The topImpressionPercentage to set.
     * @return This builder for chaining.
     */
    public Builder setTopImpressionPercentage(double value) {
      
      topImpressionPercentage_ = value;
      bitField1_ |= 0x10000000;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * The percent of your ad impressions that are shown anywhere above the
     * organic search results.
     * </pre>
     *
     * <code>optional double top_impression_percentage = 148;</code>
     * @return This builder for chaining.
     */
    public Builder clearTopImpressionPercentage() {
      bitField1_ = (bitField1_ & ~0x10000000);
      topImpressionPercentage_ = 0D;
      onChanged();
      return this;
    }

    private double valuePerAllConversions_ ;
    /**
     * <pre>
     * The value of all conversions divided by the number of all conversions.
     * </pre>
     *
     * <code>optional double value_per_all_conversions = 150;</code>
     * @return Whether the valuePerAllConversions field is set.
     */
    @java.lang.Override
    public boolean hasValuePerAllConversions() {
      return ((bitField1_ & 0x20000000) != 0);
    }
    /**
     * <pre>
     * The value of all conversions divided by the number of all conversions.
     * </pre>
     *
     * <code>optional double value_per_all_conversions = 150;</code>
     * @return The valuePerAllConversions.
     */
    @java.lang.Override
    public double getValuePerAllConversions() {
      return valuePerAllConversions_;
    }
    /**
     * <pre>
     * The value of all conversions divided by the number of all conversions.
     * </pre>
     *
     * <code>optional double value_per_all_conversions = 150;</code>
     * @param value The valuePerAllConversions to set.
     * @return This builder for chaining.
     */
    public Builder setValuePerAllConversions(double value) {
      
      valuePerAllConversions_ = value;
      bitField1_ |= 0x20000000;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * The value of all conversions divided by the number of all conversions.
     * </pre>
     *
     * <code>optional double value_per_all_conversions = 150;</code>
     * @return This builder for chaining.
     */
    public Builder clearValuePerAllConversions() {
      bitField1_ = (bitField1_ & ~0x20000000);
      valuePerAllConversions_ = 0D;
      onChanged();
      return this;
    }

    private double valuePerAllConversionsByConversionDate_ ;
    /**
     * <pre>
     * The value of all conversions divided by the number of all conversions. When
     * this column is selected with date, the values in date column means the
     * conversion date. Details for the by_conversion_date columns are available
     * at https://support.google.com/sa360/answer/9250611.
     * </pre>
     *
     * <code>optional double value_per_all_conversions_by_conversion_date = 244;</code>
     * @return Whether the valuePerAllConversionsByConversionDate field is set.
     */
    @java.lang.Override
    public boolean hasValuePerAllConversionsByConversionDate() {
      return ((bitField1_ & 0x40000000) != 0);
    }
    /**
     * <pre>
     * The value of all conversions divided by the number of all conversions. When
     * this column is selected with date, the values in date column means the
     * conversion date. Details for the by_conversion_date columns are available
     * at https://support.google.com/sa360/answer/9250611.
     * </pre>
     *
     * <code>optional double value_per_all_conversions_by_conversion_date = 244;</code>
     * @return The valuePerAllConversionsByConversionDate.
     */
    @java.lang.Override
    public double getValuePerAllConversionsByConversionDate() {
      return valuePerAllConversionsByConversionDate_;
    }
    /**
     * <pre>
     * The value of all conversions divided by the number of all conversions. When
     * this column is selected with date, the values in date column means the
     * conversion date. Details for the by_conversion_date columns are available
     * at https://support.google.com/sa360/answer/9250611.
     * </pre>
     *
     * <code>optional double value_per_all_conversions_by_conversion_date = 244;</code>
     * @param value The valuePerAllConversionsByConversionDate to set.
     * @return This builder for chaining.
     */
    public Builder setValuePerAllConversionsByConversionDate(double value) {
      
      valuePerAllConversionsByConversionDate_ = value;
      bitField1_ |= 0x40000000;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * The value of all conversions divided by the number of all conversions. When
     * this column is selected with date, the values in date column means the
     * conversion date. Details for the by_conversion_date columns are available
     * at https://support.google.com/sa360/answer/9250611.
     * </pre>
     *
     * <code>optional double value_per_all_conversions_by_conversion_date = 244;</code>
     * @return This builder for chaining.
     */
    public Builder clearValuePerAllConversionsByConversionDate() {
      bitField1_ = (bitField1_ & ~0x40000000);
      valuePerAllConversionsByConversionDate_ = 0D;
      onChanged();
      return this;
    }

    private double valuePerConversion_ ;
    /**
     * <pre>
     * The value of biddable conversion divided by the number of biddable
     * conversions. Shows how much, on average, each of the biddable conversions
     * is worth.
     * </pre>
     *
     * <code>optional double value_per_conversion = 287;</code>
     * @return Whether the valuePerConversion field is set.
     */
    @java.lang.Override
    public boolean hasValuePerConversion() {
      return ((bitField1_ & 0x80000000) != 0);
    }
    /**
     * <pre>
     * The value of biddable conversion divided by the number of biddable
     * conversions. Shows how much, on average, each of the biddable conversions
     * is worth.
     * </pre>
     *
     * <code>optional double value_per_conversion = 287;</code>
     * @return The valuePerConversion.
     */
    @java.lang.Override
    public double getValuePerConversion() {
      return valuePerConversion_;
    }
    /**
     * <pre>
     * The value of biddable conversion divided by the number of biddable
     * conversions. Shows how much, on average, each of the biddable conversions
     * is worth.
     * </pre>
     *
     * <code>optional double value_per_conversion = 287;</code>
     * @param value The valuePerConversion to set.
     * @return This builder for chaining.
     */
    public Builder setValuePerConversion(double value) {
      
      valuePerConversion_ = value;
      bitField1_ |= 0x80000000;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * The value of biddable conversion divided by the number of biddable
     * conversions. Shows how much, on average, each of the biddable conversions
     * is worth.
     * </pre>
     *
     * <code>optional double value_per_conversion = 287;</code>
     * @return This builder for chaining.
     */
    public Builder clearValuePerConversion() {
      bitField1_ = (bitField1_ & ~0x80000000);
      valuePerConversion_ = 0D;
      onChanged();
      return this;
    }

    private double valuePerConversionsByConversionDate_ ;
    /**
     * <pre>
     * Biddable conversions value by conversion date divided by biddable
     * conversions by conversion date. Shows how much, on average, each of the
     * biddable conversions is worth (by conversion date). When this column is
     * selected with date, the values in date column means the conversion date.
     * </pre>
     *
     * <code>optional double value_per_conversions_by_conversion_date = 285;</code>
     * @return Whether the valuePerConversionsByConversionDate field is set.
     */
    @java.lang.Override
    public boolean hasValuePerConversionsByConversionDate() {
      return ((bitField2_ & 0x00000001) != 0);
    }
    /**
     * <pre>
     * Biddable conversions value by conversion date divided by biddable
     * conversions by conversion date. Shows how much, on average, each of the
     * biddable conversions is worth (by conversion date). When this column is
     * selected with date, the values in date column means the conversion date.
     * </pre>
     *
     * <code>optional double value_per_conversions_by_conversion_date = 285;</code>
     * @return The valuePerConversionsByConversionDate.
     */
    @java.lang.Override
    public double getValuePerConversionsByConversionDate() {
      return valuePerConversionsByConversionDate_;
    }
    /**
     * <pre>
     * Biddable conversions value by conversion date divided by biddable
     * conversions by conversion date. Shows how much, on average, each of the
     * biddable conversions is worth (by conversion date). When this column is
     * selected with date, the values in date column means the conversion date.
     * </pre>
     *
     * <code>optional double value_per_conversions_by_conversion_date = 285;</code>
     * @param value The valuePerConversionsByConversionDate to set.
     * @return This builder for chaining.
     */
    public Builder setValuePerConversionsByConversionDate(double value) {
      
      valuePerConversionsByConversionDate_ = value;
      bitField2_ |= 0x00000001;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * Biddable conversions value by conversion date divided by biddable
     * conversions by conversion date. Shows how much, on average, each of the
     * biddable conversions is worth (by conversion date). When this column is
     * selected with date, the values in date column means the conversion date.
     * </pre>
     *
     * <code>optional double value_per_conversions_by_conversion_date = 285;</code>
     * @return This builder for chaining.
     */
    public Builder clearValuePerConversionsByConversionDate() {
      bitField2_ = (bitField2_ & ~0x00000001);
      valuePerConversionsByConversionDate_ = 0D;
      onChanged();
      return this;
    }

    private long clientAccountViewThroughConversions_ ;
    /**
     * <pre>
     * The total number of view-through conversions.
     * These happen when a customer sees an image or rich media ad, then later
     * completes a conversion on your site without interacting with (for example,
     * clicking on) another ad.
     * </pre>
     *
     * <code>optional int64 client_account_view_through_conversions = 155;</code>
     * @return Whether the clientAccountViewThroughConversions field is set.
     */
    @java.lang.Override
    public boolean hasClientAccountViewThroughConversions() {
      return ((bitField2_ & 0x00000002) != 0);
    }
    /**
     * <pre>
     * The total number of view-through conversions.
     * These happen when a customer sees an image or rich media ad, then later
     * completes a conversion on your site without interacting with (for example,
     * clicking on) another ad.
     * </pre>
     *
     * <code>optional int64 client_account_view_through_conversions = 155;</code>
     * @return The clientAccountViewThroughConversions.
     */
    @java.lang.Override
    public long getClientAccountViewThroughConversions() {
      return clientAccountViewThroughConversions_;
    }
    /**
     * <pre>
     * The total number of view-through conversions.
     * These happen when a customer sees an image or rich media ad, then later
     * completes a conversion on your site without interacting with (for example,
     * clicking on) another ad.
     * </pre>
     *
     * <code>optional int64 client_account_view_through_conversions = 155;</code>
     * @param value The clientAccountViewThroughConversions to set.
     * @return This builder for chaining.
     */
    public Builder setClientAccountViewThroughConversions(long value) {
      
      clientAccountViewThroughConversions_ = value;
      bitField2_ |= 0x00000002;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * The total number of view-through conversions.
     * These happen when a customer sees an image or rich media ad, then later
     * completes a conversion on your site without interacting with (for example,
     * clicking on) another ad.
     * </pre>
     *
     * <code>optional int64 client_account_view_through_conversions = 155;</code>
     * @return This builder for chaining.
     */
    public Builder clearClientAccountViewThroughConversions() {
      bitField2_ = (bitField2_ & ~0x00000002);
      clientAccountViewThroughConversions_ = 0L;
      onChanged();
      return this;
    }
    @java.lang.Override
    public final Builder setUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return super.setUnknownFields(unknownFields);
    }

    @java.lang.Override
    public final Builder mergeUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return super.mergeUnknownFields(unknownFields);
    }


    // @@protoc_insertion_point(builder_scope:google.ads.searchads360.v0.common.Metrics)
  }

  // @@protoc_insertion_point(class_scope:google.ads.searchads360.v0.common.Metrics)
  private static final com.google.ads.searchads360.v0.common.Metrics DEFAULT_INSTANCE;
  static {
    DEFAULT_INSTANCE = new com.google.ads.searchads360.v0.common.Metrics();
  }

  public static com.google.ads.searchads360.v0.common.Metrics getDefaultInstance() {
    return DEFAULT_INSTANCE;
  }

  private static final com.google.protobuf.Parser<Metrics>
      PARSER = new com.google.protobuf.AbstractParser<Metrics>() {
    @java.lang.Override
    public Metrics parsePartialFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      Builder builder = newBuilder();
      try {
        builder.mergeFrom(input, extensionRegistry);
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(builder.buildPartial());
      } catch (com.google.protobuf.UninitializedMessageException e) {
        throw e.asInvalidProtocolBufferException().setUnfinishedMessage(builder.buildPartial());
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(e)
            .setUnfinishedMessage(builder.buildPartial());
      }
      return builder.buildPartial();
    }
  };

  public static com.google.protobuf.Parser<Metrics> parser() {
    return PARSER;
  }

  @java.lang.Override
  public com.google.protobuf.Parser<Metrics> getParserForType() {
    return PARSER;
  }

  @java.lang.Override
  public com.google.ads.searchads360.v0.common.Metrics getDefaultInstanceForType() {
    return DEFAULT_INSTANCE;
  }

}

