// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: google/example/library/v1/library.proto

package com.google.example.library.v1;

public interface ListBooksRequestOrBuilder extends
    // @@protoc_insertion_point(interface_extends:google.example.library.v1.ListBooksRequest)
    com.google.protobuf.MessageOrBuilder {

  /**
   * <pre>
   * The name of the shelf whose books we'd like to list.
   * </pre>
   *
   * <code>string parent = 1 [(.google.api.field_behavior) = REQUIRED, (.google.api.resource_reference) = { ... }</code>
   * @return The parent.
   */
  java.lang.String getParent();
  /**
   * <pre>
   * The name of the shelf whose books we'd like to list.
   * </pre>
   *
   * <code>string parent = 1 [(.google.api.field_behavior) = REQUIRED, (.google.api.resource_reference) = { ... }</code>
   * @return The bytes for parent.
   */
  com.google.protobuf.ByteString
      getParentBytes();

  /**
   * <pre>
   * Requested page size. Server may return fewer books than requested.
   * If unspecified, server will pick an appropriate default.
   * </pre>
   *
   * <code>int32 page_size = 2;</code>
   * @return The pageSize.
   */
  int getPageSize();

  /**
   * <pre>
   * A token identifying a page of results the server should return.
   * Typically, this is the value of
   * [ListBooksResponse.next_page_token][google.example.library.v1.ListBooksResponse.next_page_token].
   * returned from the previous call to `ListBooks` method.
   * </pre>
   *
   * <code>string page_token = 3;</code>
   * @return The pageToken.
   */
  java.lang.String getPageToken();
  /**
   * <pre>
   * A token identifying a page of results the server should return.
   * Typically, this is the value of
   * [ListBooksResponse.next_page_token][google.example.library.v1.ListBooksResponse.next_page_token].
   * returned from the previous call to `ListBooks` method.
   * </pre>
   *
   * <code>string page_token = 3;</code>
   * @return The bytes for pageToken.
   */
  com.google.protobuf.ByteString
      getPageTokenBytes();
}
