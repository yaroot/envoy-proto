// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: google/firestore/admin/v1beta1/index.proto

package com.google.firestore.admin.v1beta1;

/**
 * <pre>
 * An index definition.
 * </pre>
 *
 * Protobuf type {@code google.firestore.admin.v1beta1.Index}
 */
public final class Index extends
    com.google.protobuf.GeneratedMessageV3 implements
    // @@protoc_insertion_point(message_implements:google.firestore.admin.v1beta1.Index)
    IndexOrBuilder {
private static final long serialVersionUID = 0L;
  // Use Index.newBuilder() to construct.
  private Index(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
    super(builder);
  }
  private Index() {
    name_ = "";
    collectionId_ = "";
    fields_ = java.util.Collections.emptyList();
    state_ = 0;
  }

  @java.lang.Override
  @SuppressWarnings({"unused"})
  protected java.lang.Object newInstance(
      UnusedPrivateParameter unused) {
    return new Index();
  }

  @java.lang.Override
  public final com.google.protobuf.UnknownFieldSet
  getUnknownFields() {
    return this.unknownFields;
  }
  private Index(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    this();
    if (extensionRegistry == null) {
      throw new java.lang.NullPointerException();
    }
    int mutable_bitField0_ = 0;
    com.google.protobuf.UnknownFieldSet.Builder unknownFields =
        com.google.protobuf.UnknownFieldSet.newBuilder();
    try {
      boolean done = false;
      while (!done) {
        int tag = input.readTag();
        switch (tag) {
          case 0:
            done = true;
            break;
          case 10: {
            java.lang.String s = input.readStringRequireUtf8();

            name_ = s;
            break;
          }
          case 18: {
            java.lang.String s = input.readStringRequireUtf8();

            collectionId_ = s;
            break;
          }
          case 26: {
            if (!((mutable_bitField0_ & 0x00000001) != 0)) {
              fields_ = new java.util.ArrayList<com.google.firestore.admin.v1beta1.IndexField>();
              mutable_bitField0_ |= 0x00000001;
            }
            fields_.add(
                input.readMessage(com.google.firestore.admin.v1beta1.IndexField.parser(), extensionRegistry));
            break;
          }
          case 48: {
            int rawValue = input.readEnum();

            state_ = rawValue;
            break;
          }
          default: {
            if (!parseUnknownField(
                input, unknownFields, extensionRegistry, tag)) {
              done = true;
            }
            break;
          }
        }
      }
    } catch (com.google.protobuf.InvalidProtocolBufferException e) {
      throw e.setUnfinishedMessage(this);
    } catch (com.google.protobuf.UninitializedMessageException e) {
      throw e.asInvalidProtocolBufferException().setUnfinishedMessage(this);
    } catch (java.io.IOException e) {
      throw new com.google.protobuf.InvalidProtocolBufferException(
          e).setUnfinishedMessage(this);
    } finally {
      if (((mutable_bitField0_ & 0x00000001) != 0)) {
        fields_ = java.util.Collections.unmodifiableList(fields_);
      }
      this.unknownFields = unknownFields.build();
      makeExtensionsImmutable();
    }
  }
  public static final com.google.protobuf.Descriptors.Descriptor
      getDescriptor() {
    return com.google.firestore.admin.v1beta1.IndexProto.internal_static_google_firestore_admin_v1beta1_Index_descriptor;
  }

  @java.lang.Override
  protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internalGetFieldAccessorTable() {
    return com.google.firestore.admin.v1beta1.IndexProto.internal_static_google_firestore_admin_v1beta1_Index_fieldAccessorTable
        .ensureFieldAccessorsInitialized(
            com.google.firestore.admin.v1beta1.Index.class, com.google.firestore.admin.v1beta1.Index.Builder.class);
  }

  /**
   * <pre>
   * The state of an index. During index creation, an index will be in the
   * `CREATING` state. If the index is created successfully, it will transition
   * to the `READY` state. If the index is not able to be created, it will
   * transition to the `ERROR` state.
   * </pre>
   *
   * Protobuf enum {@code google.firestore.admin.v1beta1.Index.State}
   */
  public enum State
      implements com.google.protobuf.ProtocolMessageEnum {
    /**
     * <pre>
     * The state is unspecified.
     * </pre>
     *
     * <code>STATE_UNSPECIFIED = 0;</code>
     */
    STATE_UNSPECIFIED(0),
    /**
     * <pre>
     * The index is being created.
     * There is an active long-running operation for the index.
     * The index is updated when writing a document.
     * Some index data may exist.
     * </pre>
     *
     * <code>CREATING = 3;</code>
     */
    CREATING(3),
    /**
     * <pre>
     * The index is ready to be used.
     * The index is updated when writing a document.
     * The index is fully populated from all stored documents it applies to.
     * </pre>
     *
     * <code>READY = 2;</code>
     */
    READY(2),
    /**
     * <pre>
     * The index was being created, but something went wrong.
     * There is no active long-running operation for the index,
     * and the most recently finished long-running operation failed.
     * The index is not updated when writing a document.
     * Some index data may exist.
     * </pre>
     *
     * <code>ERROR = 5;</code>
     */
    ERROR(5),
    UNRECOGNIZED(-1),
    ;

    /**
     * <pre>
     * The state is unspecified.
     * </pre>
     *
     * <code>STATE_UNSPECIFIED = 0;</code>
     */
    public static final int STATE_UNSPECIFIED_VALUE = 0;
    /**
     * <pre>
     * The index is being created.
     * There is an active long-running operation for the index.
     * The index is updated when writing a document.
     * Some index data may exist.
     * </pre>
     *
     * <code>CREATING = 3;</code>
     */
    public static final int CREATING_VALUE = 3;
    /**
     * <pre>
     * The index is ready to be used.
     * The index is updated when writing a document.
     * The index is fully populated from all stored documents it applies to.
     * </pre>
     *
     * <code>READY = 2;</code>
     */
    public static final int READY_VALUE = 2;
    /**
     * <pre>
     * The index was being created, but something went wrong.
     * There is no active long-running operation for the index,
     * and the most recently finished long-running operation failed.
     * The index is not updated when writing a document.
     * Some index data may exist.
     * </pre>
     *
     * <code>ERROR = 5;</code>
     */
    public static final int ERROR_VALUE = 5;


    public final int getNumber() {
      if (this == UNRECOGNIZED) {
        throw new java.lang.IllegalArgumentException(
            "Can't get the number of an unknown enum value.");
      }
      return value;
    }

    /**
     * @param value The numeric wire value of the corresponding enum entry.
     * @return The enum associated with the given numeric wire value.
     * @deprecated Use {@link #forNumber(int)} instead.
     */
    @java.lang.Deprecated
    public static State valueOf(int value) {
      return forNumber(value);
    }

    /**
     * @param value The numeric wire value of the corresponding enum entry.
     * @return The enum associated with the given numeric wire value.
     */
    public static State forNumber(int value) {
      switch (value) {
        case 0: return STATE_UNSPECIFIED;
        case 3: return CREATING;
        case 2: return READY;
        case 5: return ERROR;
        default: return null;
      }
    }

    public static com.google.protobuf.Internal.EnumLiteMap<State>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static final com.google.protobuf.Internal.EnumLiteMap<
        State> internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<State>() {
            public State findValueByNumber(int number) {
              return State.forNumber(number);
            }
          };

    public final com.google.protobuf.Descriptors.EnumValueDescriptor
        getValueDescriptor() {
      if (this == UNRECOGNIZED) {
        throw new java.lang.IllegalStateException(
            "Can't get the descriptor of an unrecognized enum value.");
      }
      return getDescriptor().getValues().get(ordinal());
    }
    public final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptorForType() {
      return getDescriptor();
    }
    public static final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptor() {
      return com.google.firestore.admin.v1beta1.Index.getDescriptor().getEnumTypes().get(0);
    }

    private static final State[] VALUES = values();

    public static State valueOf(
        com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
      if (desc.getType() != getDescriptor()) {
        throw new java.lang.IllegalArgumentException(
          "EnumValueDescriptor is not for this type.");
      }
      if (desc.getIndex() == -1) {
        return UNRECOGNIZED;
      }
      return VALUES[desc.getIndex()];
    }

    private final int value;

    private State(int value) {
      this.value = value;
    }

    // @@protoc_insertion_point(enum_scope:google.firestore.admin.v1beta1.Index.State)
  }

  public static final int NAME_FIELD_NUMBER = 1;
  private volatile java.lang.Object name_;
  /**
   * <pre>
   * The resource name of the index.
   * Output only.
   * </pre>
   *
   * <code>string name = 1;</code>
   * @return The name.
   */
  @java.lang.Override
  public java.lang.String getName() {
    java.lang.Object ref = name_;
    if (ref instanceof java.lang.String) {
      return (java.lang.String) ref;
    } else {
      com.google.protobuf.ByteString bs = 
          (com.google.protobuf.ByteString) ref;
      java.lang.String s = bs.toStringUtf8();
      name_ = s;
      return s;
    }
  }
  /**
   * <pre>
   * The resource name of the index.
   * Output only.
   * </pre>
   *
   * <code>string name = 1;</code>
   * @return The bytes for name.
   */
  @java.lang.Override
  public com.google.protobuf.ByteString
      getNameBytes() {
    java.lang.Object ref = name_;
    if (ref instanceof java.lang.String) {
      com.google.protobuf.ByteString b = 
          com.google.protobuf.ByteString.copyFromUtf8(
              (java.lang.String) ref);
      name_ = b;
      return b;
    } else {
      return (com.google.protobuf.ByteString) ref;
    }
  }

  public static final int COLLECTION_ID_FIELD_NUMBER = 2;
  private volatile java.lang.Object collectionId_;
  /**
   * <pre>
   * The collection ID to which this index applies. Required.
   * </pre>
   *
   * <code>string collection_id = 2;</code>
   * @return The collectionId.
   */
  @java.lang.Override
  public java.lang.String getCollectionId() {
    java.lang.Object ref = collectionId_;
    if (ref instanceof java.lang.String) {
      return (java.lang.String) ref;
    } else {
      com.google.protobuf.ByteString bs = 
          (com.google.protobuf.ByteString) ref;
      java.lang.String s = bs.toStringUtf8();
      collectionId_ = s;
      return s;
    }
  }
  /**
   * <pre>
   * The collection ID to which this index applies. Required.
   * </pre>
   *
   * <code>string collection_id = 2;</code>
   * @return The bytes for collectionId.
   */
  @java.lang.Override
  public com.google.protobuf.ByteString
      getCollectionIdBytes() {
    java.lang.Object ref = collectionId_;
    if (ref instanceof java.lang.String) {
      com.google.protobuf.ByteString b = 
          com.google.protobuf.ByteString.copyFromUtf8(
              (java.lang.String) ref);
      collectionId_ = b;
      return b;
    } else {
      return (com.google.protobuf.ByteString) ref;
    }
  }

  public static final int FIELDS_FIELD_NUMBER = 3;
  private java.util.List<com.google.firestore.admin.v1beta1.IndexField> fields_;
  /**
   * <pre>
   * The fields to index.
   * </pre>
   *
   * <code>repeated .google.firestore.admin.v1beta1.IndexField fields = 3;</code>
   */
  @java.lang.Override
  public java.util.List<com.google.firestore.admin.v1beta1.IndexField> getFieldsList() {
    return fields_;
  }
  /**
   * <pre>
   * The fields to index.
   * </pre>
   *
   * <code>repeated .google.firestore.admin.v1beta1.IndexField fields = 3;</code>
   */
  @java.lang.Override
  public java.util.List<? extends com.google.firestore.admin.v1beta1.IndexFieldOrBuilder> 
      getFieldsOrBuilderList() {
    return fields_;
  }
  /**
   * <pre>
   * The fields to index.
   * </pre>
   *
   * <code>repeated .google.firestore.admin.v1beta1.IndexField fields = 3;</code>
   */
  @java.lang.Override
  public int getFieldsCount() {
    return fields_.size();
  }
  /**
   * <pre>
   * The fields to index.
   * </pre>
   *
   * <code>repeated .google.firestore.admin.v1beta1.IndexField fields = 3;</code>
   */
  @java.lang.Override
  public com.google.firestore.admin.v1beta1.IndexField getFields(int index) {
    return fields_.get(index);
  }
  /**
   * <pre>
   * The fields to index.
   * </pre>
   *
   * <code>repeated .google.firestore.admin.v1beta1.IndexField fields = 3;</code>
   */
  @java.lang.Override
  public com.google.firestore.admin.v1beta1.IndexFieldOrBuilder getFieldsOrBuilder(
      int index) {
    return fields_.get(index);
  }

  public static final int STATE_FIELD_NUMBER = 6;
  private int state_;
  /**
   * <pre>
   * The state of the index.
   * Output only.
   * </pre>
   *
   * <code>.google.firestore.admin.v1beta1.Index.State state = 6;</code>
   * @return The enum numeric value on the wire for state.
   */
  @java.lang.Override public int getStateValue() {
    return state_;
  }
  /**
   * <pre>
   * The state of the index.
   * Output only.
   * </pre>
   *
   * <code>.google.firestore.admin.v1beta1.Index.State state = 6;</code>
   * @return The state.
   */
  @java.lang.Override public com.google.firestore.admin.v1beta1.Index.State getState() {
    @SuppressWarnings("deprecation")
    com.google.firestore.admin.v1beta1.Index.State result = com.google.firestore.admin.v1beta1.Index.State.valueOf(state_);
    return result == null ? com.google.firestore.admin.v1beta1.Index.State.UNRECOGNIZED : result;
  }

  private byte memoizedIsInitialized = -1;
  @java.lang.Override
  public final boolean isInitialized() {
    byte isInitialized = memoizedIsInitialized;
    if (isInitialized == 1) return true;
    if (isInitialized == 0) return false;

    memoizedIsInitialized = 1;
    return true;
  }

  @java.lang.Override
  public void writeTo(com.google.protobuf.CodedOutputStream output)
                      throws java.io.IOException {
    if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(name_)) {
      com.google.protobuf.GeneratedMessageV3.writeString(output, 1, name_);
    }
    if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(collectionId_)) {
      com.google.protobuf.GeneratedMessageV3.writeString(output, 2, collectionId_);
    }
    for (int i = 0; i < fields_.size(); i++) {
      output.writeMessage(3, fields_.get(i));
    }
    if (state_ != com.google.firestore.admin.v1beta1.Index.State.STATE_UNSPECIFIED.getNumber()) {
      output.writeEnum(6, state_);
    }
    unknownFields.writeTo(output);
  }

  @java.lang.Override
  public int getSerializedSize() {
    int size = memoizedSize;
    if (size != -1) return size;

    size = 0;
    if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(name_)) {
      size += com.google.protobuf.GeneratedMessageV3.computeStringSize(1, name_);
    }
    if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(collectionId_)) {
      size += com.google.protobuf.GeneratedMessageV3.computeStringSize(2, collectionId_);
    }
    for (int i = 0; i < fields_.size(); i++) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(3, fields_.get(i));
    }
    if (state_ != com.google.firestore.admin.v1beta1.Index.State.STATE_UNSPECIFIED.getNumber()) {
      size += com.google.protobuf.CodedOutputStream
        .computeEnumSize(6, state_);
    }
    size += unknownFields.getSerializedSize();
    memoizedSize = size;
    return size;
  }

  @java.lang.Override
  public boolean equals(final java.lang.Object obj) {
    if (obj == this) {
     return true;
    }
    if (!(obj instanceof com.google.firestore.admin.v1beta1.Index)) {
      return super.equals(obj);
    }
    com.google.firestore.admin.v1beta1.Index other = (com.google.firestore.admin.v1beta1.Index) obj;

    if (!getName()
        .equals(other.getName())) return false;
    if (!getCollectionId()
        .equals(other.getCollectionId())) return false;
    if (!getFieldsList()
        .equals(other.getFieldsList())) return false;
    if (state_ != other.state_) return false;
    if (!unknownFields.equals(other.unknownFields)) return false;
    return true;
  }

  @java.lang.Override
  public int hashCode() {
    if (memoizedHashCode != 0) {
      return memoizedHashCode;
    }
    int hash = 41;
    hash = (19 * hash) + getDescriptor().hashCode();
    hash = (37 * hash) + NAME_FIELD_NUMBER;
    hash = (53 * hash) + getName().hashCode();
    hash = (37 * hash) + COLLECTION_ID_FIELD_NUMBER;
    hash = (53 * hash) + getCollectionId().hashCode();
    if (getFieldsCount() > 0) {
      hash = (37 * hash) + FIELDS_FIELD_NUMBER;
      hash = (53 * hash) + getFieldsList().hashCode();
    }
    hash = (37 * hash) + STATE_FIELD_NUMBER;
    hash = (53 * hash) + state_;
    hash = (29 * hash) + unknownFields.hashCode();
    memoizedHashCode = hash;
    return hash;
  }

  public static com.google.firestore.admin.v1beta1.Index parseFrom(
      java.nio.ByteBuffer data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static com.google.firestore.admin.v1beta1.Index parseFrom(
      java.nio.ByteBuffer data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static com.google.firestore.admin.v1beta1.Index parseFrom(
      com.google.protobuf.ByteString data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static com.google.firestore.admin.v1beta1.Index parseFrom(
      com.google.protobuf.ByteString data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static com.google.firestore.admin.v1beta1.Index parseFrom(byte[] data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static com.google.firestore.admin.v1beta1.Index parseFrom(
      byte[] data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static com.google.firestore.admin.v1beta1.Index parseFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input);
  }
  public static com.google.firestore.admin.v1beta1.Index parseFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input, extensionRegistry);
  }
  public static com.google.firestore.admin.v1beta1.Index parseDelimitedFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseDelimitedWithIOException(PARSER, input);
  }
  public static com.google.firestore.admin.v1beta1.Index parseDelimitedFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
  }
  public static com.google.firestore.admin.v1beta1.Index parseFrom(
      com.google.protobuf.CodedInputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input);
  }
  public static com.google.firestore.admin.v1beta1.Index parseFrom(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input, extensionRegistry);
  }

  @java.lang.Override
  public Builder newBuilderForType() { return newBuilder(); }
  public static Builder newBuilder() {
    return DEFAULT_INSTANCE.toBuilder();
  }
  public static Builder newBuilder(com.google.firestore.admin.v1beta1.Index prototype) {
    return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
  }
  @java.lang.Override
  public Builder toBuilder() {
    return this == DEFAULT_INSTANCE
        ? new Builder() : new Builder().mergeFrom(this);
  }

  @java.lang.Override
  protected Builder newBuilderForType(
      com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
    Builder builder = new Builder(parent);
    return builder;
  }
  /**
   * <pre>
   * An index definition.
   * </pre>
   *
   * Protobuf type {@code google.firestore.admin.v1beta1.Index}
   */
  public static final class Builder extends
      com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
      // @@protoc_insertion_point(builder_implements:google.firestore.admin.v1beta1.Index)
      com.google.firestore.admin.v1beta1.IndexOrBuilder {
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.google.firestore.admin.v1beta1.IndexProto.internal_static_google_firestore_admin_v1beta1_Index_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.google.firestore.admin.v1beta1.IndexProto.internal_static_google_firestore_admin_v1beta1_Index_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.google.firestore.admin.v1beta1.Index.class, com.google.firestore.admin.v1beta1.Index.Builder.class);
    }

    // Construct using com.google.firestore.admin.v1beta1.Index.newBuilder()
    private Builder() {
      maybeForceBuilderInitialization();
    }

    private Builder(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      super(parent);
      maybeForceBuilderInitialization();
    }
    private void maybeForceBuilderInitialization() {
      if (com.google.protobuf.GeneratedMessageV3
              .alwaysUseFieldBuilders) {
        getFieldsFieldBuilder();
      }
    }
    @java.lang.Override
    public Builder clear() {
      super.clear();
      name_ = "";

      collectionId_ = "";

      if (fieldsBuilder_ == null) {
        fields_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000001);
      } else {
        fieldsBuilder_.clear();
      }
      state_ = 0;

      return this;
    }

    @java.lang.Override
    public com.google.protobuf.Descriptors.Descriptor
        getDescriptorForType() {
      return com.google.firestore.admin.v1beta1.IndexProto.internal_static_google_firestore_admin_v1beta1_Index_descriptor;
    }

    @java.lang.Override
    public com.google.firestore.admin.v1beta1.Index getDefaultInstanceForType() {
      return com.google.firestore.admin.v1beta1.Index.getDefaultInstance();
    }

    @java.lang.Override
    public com.google.firestore.admin.v1beta1.Index build() {
      com.google.firestore.admin.v1beta1.Index result = buildPartial();
      if (!result.isInitialized()) {
        throw newUninitializedMessageException(result);
      }
      return result;
    }

    @java.lang.Override
    public com.google.firestore.admin.v1beta1.Index buildPartial() {
      com.google.firestore.admin.v1beta1.Index result = new com.google.firestore.admin.v1beta1.Index(this);
      int from_bitField0_ = bitField0_;
      result.name_ = name_;
      result.collectionId_ = collectionId_;
      if (fieldsBuilder_ == null) {
        if (((bitField0_ & 0x00000001) != 0)) {
          fields_ = java.util.Collections.unmodifiableList(fields_);
          bitField0_ = (bitField0_ & ~0x00000001);
        }
        result.fields_ = fields_;
      } else {
        result.fields_ = fieldsBuilder_.build();
      }
      result.state_ = state_;
      onBuilt();
      return result;
    }

    @java.lang.Override
    public Builder clone() {
      return super.clone();
    }
    @java.lang.Override
    public Builder setField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        java.lang.Object value) {
      return super.setField(field, value);
    }
    @java.lang.Override
    public Builder clearField(
        com.google.protobuf.Descriptors.FieldDescriptor field) {
      return super.clearField(field);
    }
    @java.lang.Override
    public Builder clearOneof(
        com.google.protobuf.Descriptors.OneofDescriptor oneof) {
      return super.clearOneof(oneof);
    }
    @java.lang.Override
    public Builder setRepeatedField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        int index, java.lang.Object value) {
      return super.setRepeatedField(field, index, value);
    }
    @java.lang.Override
    public Builder addRepeatedField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        java.lang.Object value) {
      return super.addRepeatedField(field, value);
    }
    @java.lang.Override
    public Builder mergeFrom(com.google.protobuf.Message other) {
      if (other instanceof com.google.firestore.admin.v1beta1.Index) {
        return mergeFrom((com.google.firestore.admin.v1beta1.Index)other);
      } else {
        super.mergeFrom(other);
        return this;
      }
    }

    public Builder mergeFrom(com.google.firestore.admin.v1beta1.Index other) {
      if (other == com.google.firestore.admin.v1beta1.Index.getDefaultInstance()) return this;
      if (!other.getName().isEmpty()) {
        name_ = other.name_;
        onChanged();
      }
      if (!other.getCollectionId().isEmpty()) {
        collectionId_ = other.collectionId_;
        onChanged();
      }
      if (fieldsBuilder_ == null) {
        if (!other.fields_.isEmpty()) {
          if (fields_.isEmpty()) {
            fields_ = other.fields_;
            bitField0_ = (bitField0_ & ~0x00000001);
          } else {
            ensureFieldsIsMutable();
            fields_.addAll(other.fields_);
          }
          onChanged();
        }
      } else {
        if (!other.fields_.isEmpty()) {
          if (fieldsBuilder_.isEmpty()) {
            fieldsBuilder_.dispose();
            fieldsBuilder_ = null;
            fields_ = other.fields_;
            bitField0_ = (bitField0_ & ~0x00000001);
            fieldsBuilder_ = 
              com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?
                 getFieldsFieldBuilder() : null;
          } else {
            fieldsBuilder_.addAllMessages(other.fields_);
          }
        }
      }
      if (other.state_ != 0) {
        setStateValue(other.getStateValue());
      }
      this.mergeUnknownFields(other.unknownFields);
      onChanged();
      return this;
    }

    @java.lang.Override
    public final boolean isInitialized() {
      return true;
    }

    @java.lang.Override
    public Builder mergeFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      com.google.firestore.admin.v1beta1.Index parsedMessage = null;
      try {
        parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        parsedMessage = (com.google.firestore.admin.v1beta1.Index) e.getUnfinishedMessage();
        throw e.unwrapIOException();
      } finally {
        if (parsedMessage != null) {
          mergeFrom(parsedMessage);
        }
      }
      return this;
    }
    private int bitField0_;

    private java.lang.Object name_ = "";
    /**
     * <pre>
     * The resource name of the index.
     * Output only.
     * </pre>
     *
     * <code>string name = 1;</code>
     * @return The name.
     */
    public java.lang.String getName() {
      java.lang.Object ref = name_;
      if (!(ref instanceof java.lang.String)) {
        com.google.protobuf.ByteString bs =
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        name_ = s;
        return s;
      } else {
        return (java.lang.String) ref;
      }
    }
    /**
     * <pre>
     * The resource name of the index.
     * Output only.
     * </pre>
     *
     * <code>string name = 1;</code>
     * @return The bytes for name.
     */
    public com.google.protobuf.ByteString
        getNameBytes() {
      java.lang.Object ref = name_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        name_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }
    /**
     * <pre>
     * The resource name of the index.
     * Output only.
     * </pre>
     *
     * <code>string name = 1;</code>
     * @param value The name to set.
     * @return This builder for chaining.
     */
    public Builder setName(
        java.lang.String value) {
      if (value == null) {
    throw new NullPointerException();
  }
  
      name_ = value;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * The resource name of the index.
     * Output only.
     * </pre>
     *
     * <code>string name = 1;</code>
     * @return This builder for chaining.
     */
    public Builder clearName() {
      
      name_ = getDefaultInstance().getName();
      onChanged();
      return this;
    }
    /**
     * <pre>
     * The resource name of the index.
     * Output only.
     * </pre>
     *
     * <code>string name = 1;</code>
     * @param value The bytes for name to set.
     * @return This builder for chaining.
     */
    public Builder setNameBytes(
        com.google.protobuf.ByteString value) {
      if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
      
      name_ = value;
      onChanged();
      return this;
    }

    private java.lang.Object collectionId_ = "";
    /**
     * <pre>
     * The collection ID to which this index applies. Required.
     * </pre>
     *
     * <code>string collection_id = 2;</code>
     * @return The collectionId.
     */
    public java.lang.String getCollectionId() {
      java.lang.Object ref = collectionId_;
      if (!(ref instanceof java.lang.String)) {
        com.google.protobuf.ByteString bs =
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        collectionId_ = s;
        return s;
      } else {
        return (java.lang.String) ref;
      }
    }
    /**
     * <pre>
     * The collection ID to which this index applies. Required.
     * </pre>
     *
     * <code>string collection_id = 2;</code>
     * @return The bytes for collectionId.
     */
    public com.google.protobuf.ByteString
        getCollectionIdBytes() {
      java.lang.Object ref = collectionId_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        collectionId_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }
    /**
     * <pre>
     * The collection ID to which this index applies. Required.
     * </pre>
     *
     * <code>string collection_id = 2;</code>
     * @param value The collectionId to set.
     * @return This builder for chaining.
     */
    public Builder setCollectionId(
        java.lang.String value) {
      if (value == null) {
    throw new NullPointerException();
  }
  
      collectionId_ = value;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * The collection ID to which this index applies. Required.
     * </pre>
     *
     * <code>string collection_id = 2;</code>
     * @return This builder for chaining.
     */
    public Builder clearCollectionId() {
      
      collectionId_ = getDefaultInstance().getCollectionId();
      onChanged();
      return this;
    }
    /**
     * <pre>
     * The collection ID to which this index applies. Required.
     * </pre>
     *
     * <code>string collection_id = 2;</code>
     * @param value The bytes for collectionId to set.
     * @return This builder for chaining.
     */
    public Builder setCollectionIdBytes(
        com.google.protobuf.ByteString value) {
      if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
      
      collectionId_ = value;
      onChanged();
      return this;
    }

    private java.util.List<com.google.firestore.admin.v1beta1.IndexField> fields_ =
      java.util.Collections.emptyList();
    private void ensureFieldsIsMutable() {
      if (!((bitField0_ & 0x00000001) != 0)) {
        fields_ = new java.util.ArrayList<com.google.firestore.admin.v1beta1.IndexField>(fields_);
        bitField0_ |= 0x00000001;
       }
    }

    private com.google.protobuf.RepeatedFieldBuilderV3<
        com.google.firestore.admin.v1beta1.IndexField, com.google.firestore.admin.v1beta1.IndexField.Builder, com.google.firestore.admin.v1beta1.IndexFieldOrBuilder> fieldsBuilder_;

    /**
     * <pre>
     * The fields to index.
     * </pre>
     *
     * <code>repeated .google.firestore.admin.v1beta1.IndexField fields = 3;</code>
     */
    public java.util.List<com.google.firestore.admin.v1beta1.IndexField> getFieldsList() {
      if (fieldsBuilder_ == null) {
        return java.util.Collections.unmodifiableList(fields_);
      } else {
        return fieldsBuilder_.getMessageList();
      }
    }
    /**
     * <pre>
     * The fields to index.
     * </pre>
     *
     * <code>repeated .google.firestore.admin.v1beta1.IndexField fields = 3;</code>
     */
    public int getFieldsCount() {
      if (fieldsBuilder_ == null) {
        return fields_.size();
      } else {
        return fieldsBuilder_.getCount();
      }
    }
    /**
     * <pre>
     * The fields to index.
     * </pre>
     *
     * <code>repeated .google.firestore.admin.v1beta1.IndexField fields = 3;</code>
     */
    public com.google.firestore.admin.v1beta1.IndexField getFields(int index) {
      if (fieldsBuilder_ == null) {
        return fields_.get(index);
      } else {
        return fieldsBuilder_.getMessage(index);
      }
    }
    /**
     * <pre>
     * The fields to index.
     * </pre>
     *
     * <code>repeated .google.firestore.admin.v1beta1.IndexField fields = 3;</code>
     */
    public Builder setFields(
        int index, com.google.firestore.admin.v1beta1.IndexField value) {
      if (fieldsBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureFieldsIsMutable();
        fields_.set(index, value);
        onChanged();
      } else {
        fieldsBuilder_.setMessage(index, value);
      }
      return this;
    }
    /**
     * <pre>
     * The fields to index.
     * </pre>
     *
     * <code>repeated .google.firestore.admin.v1beta1.IndexField fields = 3;</code>
     */
    public Builder setFields(
        int index, com.google.firestore.admin.v1beta1.IndexField.Builder builderForValue) {
      if (fieldsBuilder_ == null) {
        ensureFieldsIsMutable();
        fields_.set(index, builderForValue.build());
        onChanged();
      } else {
        fieldsBuilder_.setMessage(index, builderForValue.build());
      }
      return this;
    }
    /**
     * <pre>
     * The fields to index.
     * </pre>
     *
     * <code>repeated .google.firestore.admin.v1beta1.IndexField fields = 3;</code>
     */
    public Builder addFields(com.google.firestore.admin.v1beta1.IndexField value) {
      if (fieldsBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureFieldsIsMutable();
        fields_.add(value);
        onChanged();
      } else {
        fieldsBuilder_.addMessage(value);
      }
      return this;
    }
    /**
     * <pre>
     * The fields to index.
     * </pre>
     *
     * <code>repeated .google.firestore.admin.v1beta1.IndexField fields = 3;</code>
     */
    public Builder addFields(
        int index, com.google.firestore.admin.v1beta1.IndexField value) {
      if (fieldsBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureFieldsIsMutable();
        fields_.add(index, value);
        onChanged();
      } else {
        fieldsBuilder_.addMessage(index, value);
      }
      return this;
    }
    /**
     * <pre>
     * The fields to index.
     * </pre>
     *
     * <code>repeated .google.firestore.admin.v1beta1.IndexField fields = 3;</code>
     */
    public Builder addFields(
        com.google.firestore.admin.v1beta1.IndexField.Builder builderForValue) {
      if (fieldsBuilder_ == null) {
        ensureFieldsIsMutable();
        fields_.add(builderForValue.build());
        onChanged();
      } else {
        fieldsBuilder_.addMessage(builderForValue.build());
      }
      return this;
    }
    /**
     * <pre>
     * The fields to index.
     * </pre>
     *
     * <code>repeated .google.firestore.admin.v1beta1.IndexField fields = 3;</code>
     */
    public Builder addFields(
        int index, com.google.firestore.admin.v1beta1.IndexField.Builder builderForValue) {
      if (fieldsBuilder_ == null) {
        ensureFieldsIsMutable();
        fields_.add(index, builderForValue.build());
        onChanged();
      } else {
        fieldsBuilder_.addMessage(index, builderForValue.build());
      }
      return this;
    }
    /**
     * <pre>
     * The fields to index.
     * </pre>
     *
     * <code>repeated .google.firestore.admin.v1beta1.IndexField fields = 3;</code>
     */
    public Builder addAllFields(
        java.lang.Iterable<? extends com.google.firestore.admin.v1beta1.IndexField> values) {
      if (fieldsBuilder_ == null) {
        ensureFieldsIsMutable();
        com.google.protobuf.AbstractMessageLite.Builder.addAll(
            values, fields_);
        onChanged();
      } else {
        fieldsBuilder_.addAllMessages(values);
      }
      return this;
    }
    /**
     * <pre>
     * The fields to index.
     * </pre>
     *
     * <code>repeated .google.firestore.admin.v1beta1.IndexField fields = 3;</code>
     */
    public Builder clearFields() {
      if (fieldsBuilder_ == null) {
        fields_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000001);
        onChanged();
      } else {
        fieldsBuilder_.clear();
      }
      return this;
    }
    /**
     * <pre>
     * The fields to index.
     * </pre>
     *
     * <code>repeated .google.firestore.admin.v1beta1.IndexField fields = 3;</code>
     */
    public Builder removeFields(int index) {
      if (fieldsBuilder_ == null) {
        ensureFieldsIsMutable();
        fields_.remove(index);
        onChanged();
      } else {
        fieldsBuilder_.remove(index);
      }
      return this;
    }
    /**
     * <pre>
     * The fields to index.
     * </pre>
     *
     * <code>repeated .google.firestore.admin.v1beta1.IndexField fields = 3;</code>
     */
    public com.google.firestore.admin.v1beta1.IndexField.Builder getFieldsBuilder(
        int index) {
      return getFieldsFieldBuilder().getBuilder(index);
    }
    /**
     * <pre>
     * The fields to index.
     * </pre>
     *
     * <code>repeated .google.firestore.admin.v1beta1.IndexField fields = 3;</code>
     */
    public com.google.firestore.admin.v1beta1.IndexFieldOrBuilder getFieldsOrBuilder(
        int index) {
      if (fieldsBuilder_ == null) {
        return fields_.get(index);  } else {
        return fieldsBuilder_.getMessageOrBuilder(index);
      }
    }
    /**
     * <pre>
     * The fields to index.
     * </pre>
     *
     * <code>repeated .google.firestore.admin.v1beta1.IndexField fields = 3;</code>
     */
    public java.util.List<? extends com.google.firestore.admin.v1beta1.IndexFieldOrBuilder> 
         getFieldsOrBuilderList() {
      if (fieldsBuilder_ != null) {
        return fieldsBuilder_.getMessageOrBuilderList();
      } else {
        return java.util.Collections.unmodifiableList(fields_);
      }
    }
    /**
     * <pre>
     * The fields to index.
     * </pre>
     *
     * <code>repeated .google.firestore.admin.v1beta1.IndexField fields = 3;</code>
     */
    public com.google.firestore.admin.v1beta1.IndexField.Builder addFieldsBuilder() {
      return getFieldsFieldBuilder().addBuilder(
          com.google.firestore.admin.v1beta1.IndexField.getDefaultInstance());
    }
    /**
     * <pre>
     * The fields to index.
     * </pre>
     *
     * <code>repeated .google.firestore.admin.v1beta1.IndexField fields = 3;</code>
     */
    public com.google.firestore.admin.v1beta1.IndexField.Builder addFieldsBuilder(
        int index) {
      return getFieldsFieldBuilder().addBuilder(
          index, com.google.firestore.admin.v1beta1.IndexField.getDefaultInstance());
    }
    /**
     * <pre>
     * The fields to index.
     * </pre>
     *
     * <code>repeated .google.firestore.admin.v1beta1.IndexField fields = 3;</code>
     */
    public java.util.List<com.google.firestore.admin.v1beta1.IndexField.Builder> 
         getFieldsBuilderList() {
      return getFieldsFieldBuilder().getBuilderList();
    }
    private com.google.protobuf.RepeatedFieldBuilderV3<
        com.google.firestore.admin.v1beta1.IndexField, com.google.firestore.admin.v1beta1.IndexField.Builder, com.google.firestore.admin.v1beta1.IndexFieldOrBuilder> 
        getFieldsFieldBuilder() {
      if (fieldsBuilder_ == null) {
        fieldsBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<
            com.google.firestore.admin.v1beta1.IndexField, com.google.firestore.admin.v1beta1.IndexField.Builder, com.google.firestore.admin.v1beta1.IndexFieldOrBuilder>(
                fields_,
                ((bitField0_ & 0x00000001) != 0),
                getParentForChildren(),
                isClean());
        fields_ = null;
      }
      return fieldsBuilder_;
    }

    private int state_ = 0;
    /**
     * <pre>
     * The state of the index.
     * Output only.
     * </pre>
     *
     * <code>.google.firestore.admin.v1beta1.Index.State state = 6;</code>
     * @return The enum numeric value on the wire for state.
     */
    @java.lang.Override public int getStateValue() {
      return state_;
    }
    /**
     * <pre>
     * The state of the index.
     * Output only.
     * </pre>
     *
     * <code>.google.firestore.admin.v1beta1.Index.State state = 6;</code>
     * @param value The enum numeric value on the wire for state to set.
     * @return This builder for chaining.
     */
    public Builder setStateValue(int value) {
      
      state_ = value;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * The state of the index.
     * Output only.
     * </pre>
     *
     * <code>.google.firestore.admin.v1beta1.Index.State state = 6;</code>
     * @return The state.
     */
    @java.lang.Override
    public com.google.firestore.admin.v1beta1.Index.State getState() {
      @SuppressWarnings("deprecation")
      com.google.firestore.admin.v1beta1.Index.State result = com.google.firestore.admin.v1beta1.Index.State.valueOf(state_);
      return result == null ? com.google.firestore.admin.v1beta1.Index.State.UNRECOGNIZED : result;
    }
    /**
     * <pre>
     * The state of the index.
     * Output only.
     * </pre>
     *
     * <code>.google.firestore.admin.v1beta1.Index.State state = 6;</code>
     * @param value The state to set.
     * @return This builder for chaining.
     */
    public Builder setState(com.google.firestore.admin.v1beta1.Index.State value) {
      if (value == null) {
        throw new NullPointerException();
      }
      
      state_ = value.getNumber();
      onChanged();
      return this;
    }
    /**
     * <pre>
     * The state of the index.
     * Output only.
     * </pre>
     *
     * <code>.google.firestore.admin.v1beta1.Index.State state = 6;</code>
     * @return This builder for chaining.
     */
    public Builder clearState() {
      
      state_ = 0;
      onChanged();
      return this;
    }
    @java.lang.Override
    public final Builder setUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return super.setUnknownFields(unknownFields);
    }

    @java.lang.Override
    public final Builder mergeUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return super.mergeUnknownFields(unknownFields);
    }


    // @@protoc_insertion_point(builder_scope:google.firestore.admin.v1beta1.Index)
  }

  // @@protoc_insertion_point(class_scope:google.firestore.admin.v1beta1.Index)
  private static final com.google.firestore.admin.v1beta1.Index DEFAULT_INSTANCE;
  static {
    DEFAULT_INSTANCE = new com.google.firestore.admin.v1beta1.Index();
  }

  public static com.google.firestore.admin.v1beta1.Index getDefaultInstance() {
    return DEFAULT_INSTANCE;
  }

  private static final com.google.protobuf.Parser<Index>
      PARSER = new com.google.protobuf.AbstractParser<Index>() {
    @java.lang.Override
    public Index parsePartialFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return new Index(input, extensionRegistry);
    }
  };

  public static com.google.protobuf.Parser<Index> parser() {
    return PARSER;
  }

  @java.lang.Override
  public com.google.protobuf.Parser<Index> getParserForType() {
    return PARSER;
  }

  @java.lang.Override
  public com.google.firestore.admin.v1beta1.Index getDefaultInstanceForType() {
    return DEFAULT_INSTANCE;
  }

}

