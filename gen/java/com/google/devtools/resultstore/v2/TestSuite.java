// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: google/devtools/resultstore/v2/test_suite.proto

package com.google.devtools.resultstore.v2;

/**
 * <pre>
 * The result of running a test suite, as reported in a &lt;testsuite&gt; element of
 * an XML log.
 * </pre>
 *
 * Protobuf type {@code google.devtools.resultstore.v2.TestSuite}
 */
public final class TestSuite extends
    com.google.protobuf.GeneratedMessageV3 implements
    // @@protoc_insertion_point(message_implements:google.devtools.resultstore.v2.TestSuite)
    TestSuiteOrBuilder {
private static final long serialVersionUID = 0L;
  // Use TestSuite.newBuilder() to construct.
  private TestSuite(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
    super(builder);
  }
  private TestSuite() {
    suiteName_ = "";
    tests_ = java.util.Collections.emptyList();
    failures_ = java.util.Collections.emptyList();
    errors_ = java.util.Collections.emptyList();
    properties_ = java.util.Collections.emptyList();
    files_ = java.util.Collections.emptyList();
  }

  @java.lang.Override
  @SuppressWarnings({"unused"})
  protected java.lang.Object newInstance(
      UnusedPrivateParameter unused) {
    return new TestSuite();
  }

  @java.lang.Override
  public final com.google.protobuf.UnknownFieldSet
  getUnknownFields() {
    return this.unknownFields;
  }
  private TestSuite(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    this();
    if (extensionRegistry == null) {
      throw new java.lang.NullPointerException();
    }
    int mutable_bitField0_ = 0;
    com.google.protobuf.UnknownFieldSet.Builder unknownFields =
        com.google.protobuf.UnknownFieldSet.newBuilder();
    try {
      boolean done = false;
      while (!done) {
        int tag = input.readTag();
        switch (tag) {
          case 0:
            done = true;
            break;
          case 10: {
            java.lang.String s = input.readStringRequireUtf8();

            suiteName_ = s;
            break;
          }
          case 18: {
            if (!((mutable_bitField0_ & 0x00000001) != 0)) {
              tests_ = new java.util.ArrayList<com.google.devtools.resultstore.v2.Test>();
              mutable_bitField0_ |= 0x00000001;
            }
            tests_.add(
                input.readMessage(com.google.devtools.resultstore.v2.Test.parser(), extensionRegistry));
            break;
          }
          case 26: {
            if (!((mutable_bitField0_ & 0x00000002) != 0)) {
              failures_ = new java.util.ArrayList<com.google.devtools.resultstore.v2.TestFailure>();
              mutable_bitField0_ |= 0x00000002;
            }
            failures_.add(
                input.readMessage(com.google.devtools.resultstore.v2.TestFailure.parser(), extensionRegistry));
            break;
          }
          case 34: {
            if (!((mutable_bitField0_ & 0x00000004) != 0)) {
              errors_ = new java.util.ArrayList<com.google.devtools.resultstore.v2.TestError>();
              mutable_bitField0_ |= 0x00000004;
            }
            errors_.add(
                input.readMessage(com.google.devtools.resultstore.v2.TestError.parser(), extensionRegistry));
            break;
          }
          case 50: {
            com.google.devtools.resultstore.v2.Timing.Builder subBuilder = null;
            if (timing_ != null) {
              subBuilder = timing_.toBuilder();
            }
            timing_ = input.readMessage(com.google.devtools.resultstore.v2.Timing.parser(), extensionRegistry);
            if (subBuilder != null) {
              subBuilder.mergeFrom(timing_);
              timing_ = subBuilder.buildPartial();
            }

            break;
          }
          case 58: {
            if (!((mutable_bitField0_ & 0x00000008) != 0)) {
              properties_ = new java.util.ArrayList<com.google.devtools.resultstore.v2.Property>();
              mutable_bitField0_ |= 0x00000008;
            }
            properties_.add(
                input.readMessage(com.google.devtools.resultstore.v2.Property.parser(), extensionRegistry));
            break;
          }
          case 66: {
            if (!((mutable_bitField0_ & 0x00000010) != 0)) {
              files_ = new java.util.ArrayList<com.google.devtools.resultstore.v2.File>();
              mutable_bitField0_ |= 0x00000010;
            }
            files_.add(
                input.readMessage(com.google.devtools.resultstore.v2.File.parser(), extensionRegistry));
            break;
          }
          default: {
            if (!parseUnknownField(
                input, unknownFields, extensionRegistry, tag)) {
              done = true;
            }
            break;
          }
        }
      }
    } catch (com.google.protobuf.InvalidProtocolBufferException e) {
      throw e.setUnfinishedMessage(this);
    } catch (com.google.protobuf.UninitializedMessageException e) {
      throw e.asInvalidProtocolBufferException().setUnfinishedMessage(this);
    } catch (java.io.IOException e) {
      throw new com.google.protobuf.InvalidProtocolBufferException(
          e).setUnfinishedMessage(this);
    } finally {
      if (((mutable_bitField0_ & 0x00000001) != 0)) {
        tests_ = java.util.Collections.unmodifiableList(tests_);
      }
      if (((mutable_bitField0_ & 0x00000002) != 0)) {
        failures_ = java.util.Collections.unmodifiableList(failures_);
      }
      if (((mutable_bitField0_ & 0x00000004) != 0)) {
        errors_ = java.util.Collections.unmodifiableList(errors_);
      }
      if (((mutable_bitField0_ & 0x00000008) != 0)) {
        properties_ = java.util.Collections.unmodifiableList(properties_);
      }
      if (((mutable_bitField0_ & 0x00000010) != 0)) {
        files_ = java.util.Collections.unmodifiableList(files_);
      }
      this.unknownFields = unknownFields.build();
      makeExtensionsImmutable();
    }
  }
  public static final com.google.protobuf.Descriptors.Descriptor
      getDescriptor() {
    return com.google.devtools.resultstore.v2.TestSuiteProto.internal_static_google_devtools_resultstore_v2_TestSuite_descriptor;
  }

  @java.lang.Override
  protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internalGetFieldAccessorTable() {
    return com.google.devtools.resultstore.v2.TestSuiteProto.internal_static_google_devtools_resultstore_v2_TestSuite_fieldAccessorTable
        .ensureFieldAccessorsInitialized(
            com.google.devtools.resultstore.v2.TestSuite.class, com.google.devtools.resultstore.v2.TestSuite.Builder.class);
  }

  public static final int SUITE_NAME_FIELD_NUMBER = 1;
  private volatile java.lang.Object suiteName_;
  /**
   * <pre>
   * The full name of this suite, as reported in the name attribute. For Java
   * tests, this is normally the fully qualified class name. Eg.
   * "com.google.common.hash.BloomFilterTest".
   * </pre>
   *
   * <code>string suite_name = 1;</code>
   * @return The suiteName.
   */
  @java.lang.Override
  public java.lang.String getSuiteName() {
    java.lang.Object ref = suiteName_;
    if (ref instanceof java.lang.String) {
      return (java.lang.String) ref;
    } else {
      com.google.protobuf.ByteString bs = 
          (com.google.protobuf.ByteString) ref;
      java.lang.String s = bs.toStringUtf8();
      suiteName_ = s;
      return s;
    }
  }
  /**
   * <pre>
   * The full name of this suite, as reported in the name attribute. For Java
   * tests, this is normally the fully qualified class name. Eg.
   * "com.google.common.hash.BloomFilterTest".
   * </pre>
   *
   * <code>string suite_name = 1;</code>
   * @return The bytes for suiteName.
   */
  @java.lang.Override
  public com.google.protobuf.ByteString
      getSuiteNameBytes() {
    java.lang.Object ref = suiteName_;
    if (ref instanceof java.lang.String) {
      com.google.protobuf.ByteString b = 
          com.google.protobuf.ByteString.copyFromUtf8(
              (java.lang.String) ref);
      suiteName_ = b;
      return b;
    } else {
      return (com.google.protobuf.ByteString) ref;
    }
  }

  public static final int TESTS_FIELD_NUMBER = 2;
  private java.util.List<com.google.devtools.resultstore.v2.Test> tests_;
  /**
   * <pre>
   * The results of the test cases and test suites contained in this suite,
   * as reported in the &lt;testcase&gt; and &lt;testsuite&gt; elements contained within
   * this &lt;testsuite&gt;.
   * </pre>
   *
   * <code>repeated .google.devtools.resultstore.v2.Test tests = 2;</code>
   */
  @java.lang.Override
  public java.util.List<com.google.devtools.resultstore.v2.Test> getTestsList() {
    return tests_;
  }
  /**
   * <pre>
   * The results of the test cases and test suites contained in this suite,
   * as reported in the &lt;testcase&gt; and &lt;testsuite&gt; elements contained within
   * this &lt;testsuite&gt;.
   * </pre>
   *
   * <code>repeated .google.devtools.resultstore.v2.Test tests = 2;</code>
   */
  @java.lang.Override
  public java.util.List<? extends com.google.devtools.resultstore.v2.TestOrBuilder> 
      getTestsOrBuilderList() {
    return tests_;
  }
  /**
   * <pre>
   * The results of the test cases and test suites contained in this suite,
   * as reported in the &lt;testcase&gt; and &lt;testsuite&gt; elements contained within
   * this &lt;testsuite&gt;.
   * </pre>
   *
   * <code>repeated .google.devtools.resultstore.v2.Test tests = 2;</code>
   */
  @java.lang.Override
  public int getTestsCount() {
    return tests_.size();
  }
  /**
   * <pre>
   * The results of the test cases and test suites contained in this suite,
   * as reported in the &lt;testcase&gt; and &lt;testsuite&gt; elements contained within
   * this &lt;testsuite&gt;.
   * </pre>
   *
   * <code>repeated .google.devtools.resultstore.v2.Test tests = 2;</code>
   */
  @java.lang.Override
  public com.google.devtools.resultstore.v2.Test getTests(int index) {
    return tests_.get(index);
  }
  /**
   * <pre>
   * The results of the test cases and test suites contained in this suite,
   * as reported in the &lt;testcase&gt; and &lt;testsuite&gt; elements contained within
   * this &lt;testsuite&gt;.
   * </pre>
   *
   * <code>repeated .google.devtools.resultstore.v2.Test tests = 2;</code>
   */
  @java.lang.Override
  public com.google.devtools.resultstore.v2.TestOrBuilder getTestsOrBuilder(
      int index) {
    return tests_.get(index);
  }

  public static final int FAILURES_FIELD_NUMBER = 3;
  private java.util.List<com.google.devtools.resultstore.v2.TestFailure> failures_;
  /**
   * <pre>
   * Failures reported in &lt;failure&gt; elements within this &lt;testsuite&gt;.
   * </pre>
   *
   * <code>repeated .google.devtools.resultstore.v2.TestFailure failures = 3;</code>
   */
  @java.lang.Override
  public java.util.List<com.google.devtools.resultstore.v2.TestFailure> getFailuresList() {
    return failures_;
  }
  /**
   * <pre>
   * Failures reported in &lt;failure&gt; elements within this &lt;testsuite&gt;.
   * </pre>
   *
   * <code>repeated .google.devtools.resultstore.v2.TestFailure failures = 3;</code>
   */
  @java.lang.Override
  public java.util.List<? extends com.google.devtools.resultstore.v2.TestFailureOrBuilder> 
      getFailuresOrBuilderList() {
    return failures_;
  }
  /**
   * <pre>
   * Failures reported in &lt;failure&gt; elements within this &lt;testsuite&gt;.
   * </pre>
   *
   * <code>repeated .google.devtools.resultstore.v2.TestFailure failures = 3;</code>
   */
  @java.lang.Override
  public int getFailuresCount() {
    return failures_.size();
  }
  /**
   * <pre>
   * Failures reported in &lt;failure&gt; elements within this &lt;testsuite&gt;.
   * </pre>
   *
   * <code>repeated .google.devtools.resultstore.v2.TestFailure failures = 3;</code>
   */
  @java.lang.Override
  public com.google.devtools.resultstore.v2.TestFailure getFailures(int index) {
    return failures_.get(index);
  }
  /**
   * <pre>
   * Failures reported in &lt;failure&gt; elements within this &lt;testsuite&gt;.
   * </pre>
   *
   * <code>repeated .google.devtools.resultstore.v2.TestFailure failures = 3;</code>
   */
  @java.lang.Override
  public com.google.devtools.resultstore.v2.TestFailureOrBuilder getFailuresOrBuilder(
      int index) {
    return failures_.get(index);
  }

  public static final int ERRORS_FIELD_NUMBER = 4;
  private java.util.List<com.google.devtools.resultstore.v2.TestError> errors_;
  /**
   * <pre>
   * Errors reported in &lt;error&gt; elements within this &lt;testsuite&gt;.
   * </pre>
   *
   * <code>repeated .google.devtools.resultstore.v2.TestError errors = 4;</code>
   */
  @java.lang.Override
  public java.util.List<com.google.devtools.resultstore.v2.TestError> getErrorsList() {
    return errors_;
  }
  /**
   * <pre>
   * Errors reported in &lt;error&gt; elements within this &lt;testsuite&gt;.
   * </pre>
   *
   * <code>repeated .google.devtools.resultstore.v2.TestError errors = 4;</code>
   */
  @java.lang.Override
  public java.util.List<? extends com.google.devtools.resultstore.v2.TestErrorOrBuilder> 
      getErrorsOrBuilderList() {
    return errors_;
  }
  /**
   * <pre>
   * Errors reported in &lt;error&gt; elements within this &lt;testsuite&gt;.
   * </pre>
   *
   * <code>repeated .google.devtools.resultstore.v2.TestError errors = 4;</code>
   */
  @java.lang.Override
  public int getErrorsCount() {
    return errors_.size();
  }
  /**
   * <pre>
   * Errors reported in &lt;error&gt; elements within this &lt;testsuite&gt;.
   * </pre>
   *
   * <code>repeated .google.devtools.resultstore.v2.TestError errors = 4;</code>
   */
  @java.lang.Override
  public com.google.devtools.resultstore.v2.TestError getErrors(int index) {
    return errors_.get(index);
  }
  /**
   * <pre>
   * Errors reported in &lt;error&gt; elements within this &lt;testsuite&gt;.
   * </pre>
   *
   * <code>repeated .google.devtools.resultstore.v2.TestError errors = 4;</code>
   */
  @java.lang.Override
  public com.google.devtools.resultstore.v2.TestErrorOrBuilder getErrorsOrBuilder(
      int index) {
    return errors_.get(index);
  }

  public static final int TIMING_FIELD_NUMBER = 6;
  private com.google.devtools.resultstore.v2.Timing timing_;
  /**
   * <pre>
   * The timing for the entire TestSuite, as reported by the time attribute.
   * </pre>
   *
   * <code>.google.devtools.resultstore.v2.Timing timing = 6;</code>
   * @return Whether the timing field is set.
   */
  @java.lang.Override
  public boolean hasTiming() {
    return timing_ != null;
  }
  /**
   * <pre>
   * The timing for the entire TestSuite, as reported by the time attribute.
   * </pre>
   *
   * <code>.google.devtools.resultstore.v2.Timing timing = 6;</code>
   * @return The timing.
   */
  @java.lang.Override
  public com.google.devtools.resultstore.v2.Timing getTiming() {
    return timing_ == null ? com.google.devtools.resultstore.v2.Timing.getDefaultInstance() : timing_;
  }
  /**
   * <pre>
   * The timing for the entire TestSuite, as reported by the time attribute.
   * </pre>
   *
   * <code>.google.devtools.resultstore.v2.Timing timing = 6;</code>
   */
  @java.lang.Override
  public com.google.devtools.resultstore.v2.TimingOrBuilder getTimingOrBuilder() {
    return getTiming();
  }

  public static final int PROPERTIES_FIELD_NUMBER = 7;
  private java.util.List<com.google.devtools.resultstore.v2.Property> properties_;
  /**
   * <pre>
   * Arbitrary name-value pairs, as reported in custom attributes or in a
   * &lt;properties&gt; element within this &lt;testsuite&gt;. Multiple properties are
   * allowed with the same key. Properties will be returned in lexicographical
   * order by key.
   * </pre>
   *
   * <code>repeated .google.devtools.resultstore.v2.Property properties = 7;</code>
   */
  @java.lang.Override
  public java.util.List<com.google.devtools.resultstore.v2.Property> getPropertiesList() {
    return properties_;
  }
  /**
   * <pre>
   * Arbitrary name-value pairs, as reported in custom attributes or in a
   * &lt;properties&gt; element within this &lt;testsuite&gt;. Multiple properties are
   * allowed with the same key. Properties will be returned in lexicographical
   * order by key.
   * </pre>
   *
   * <code>repeated .google.devtools.resultstore.v2.Property properties = 7;</code>
   */
  @java.lang.Override
  public java.util.List<? extends com.google.devtools.resultstore.v2.PropertyOrBuilder> 
      getPropertiesOrBuilderList() {
    return properties_;
  }
  /**
   * <pre>
   * Arbitrary name-value pairs, as reported in custom attributes or in a
   * &lt;properties&gt; element within this &lt;testsuite&gt;. Multiple properties are
   * allowed with the same key. Properties will be returned in lexicographical
   * order by key.
   * </pre>
   *
   * <code>repeated .google.devtools.resultstore.v2.Property properties = 7;</code>
   */
  @java.lang.Override
  public int getPropertiesCount() {
    return properties_.size();
  }
  /**
   * <pre>
   * Arbitrary name-value pairs, as reported in custom attributes or in a
   * &lt;properties&gt; element within this &lt;testsuite&gt;. Multiple properties are
   * allowed with the same key. Properties will be returned in lexicographical
   * order by key.
   * </pre>
   *
   * <code>repeated .google.devtools.resultstore.v2.Property properties = 7;</code>
   */
  @java.lang.Override
  public com.google.devtools.resultstore.v2.Property getProperties(int index) {
    return properties_.get(index);
  }
  /**
   * <pre>
   * Arbitrary name-value pairs, as reported in custom attributes or in a
   * &lt;properties&gt; element within this &lt;testsuite&gt;. Multiple properties are
   * allowed with the same key. Properties will be returned in lexicographical
   * order by key.
   * </pre>
   *
   * <code>repeated .google.devtools.resultstore.v2.Property properties = 7;</code>
   */
  @java.lang.Override
  public com.google.devtools.resultstore.v2.PropertyOrBuilder getPropertiesOrBuilder(
      int index) {
    return properties_.get(index);
  }

  public static final int FILES_FIELD_NUMBER = 8;
  private java.util.List<com.google.devtools.resultstore.v2.File> files_;
  /**
   * <pre>
   * Files produced by this test suite, as reported by undeclared output
   * annotations.
   * The file IDs must be unique within this list. Duplicate file IDs will
   * result in an error. Files will be returned in lexicographical order by ID.
   * </pre>
   *
   * <code>repeated .google.devtools.resultstore.v2.File files = 8;</code>
   */
  @java.lang.Override
  public java.util.List<com.google.devtools.resultstore.v2.File> getFilesList() {
    return files_;
  }
  /**
   * <pre>
   * Files produced by this test suite, as reported by undeclared output
   * annotations.
   * The file IDs must be unique within this list. Duplicate file IDs will
   * result in an error. Files will be returned in lexicographical order by ID.
   * </pre>
   *
   * <code>repeated .google.devtools.resultstore.v2.File files = 8;</code>
   */
  @java.lang.Override
  public java.util.List<? extends com.google.devtools.resultstore.v2.FileOrBuilder> 
      getFilesOrBuilderList() {
    return files_;
  }
  /**
   * <pre>
   * Files produced by this test suite, as reported by undeclared output
   * annotations.
   * The file IDs must be unique within this list. Duplicate file IDs will
   * result in an error. Files will be returned in lexicographical order by ID.
   * </pre>
   *
   * <code>repeated .google.devtools.resultstore.v2.File files = 8;</code>
   */
  @java.lang.Override
  public int getFilesCount() {
    return files_.size();
  }
  /**
   * <pre>
   * Files produced by this test suite, as reported by undeclared output
   * annotations.
   * The file IDs must be unique within this list. Duplicate file IDs will
   * result in an error. Files will be returned in lexicographical order by ID.
   * </pre>
   *
   * <code>repeated .google.devtools.resultstore.v2.File files = 8;</code>
   */
  @java.lang.Override
  public com.google.devtools.resultstore.v2.File getFiles(int index) {
    return files_.get(index);
  }
  /**
   * <pre>
   * Files produced by this test suite, as reported by undeclared output
   * annotations.
   * The file IDs must be unique within this list. Duplicate file IDs will
   * result in an error. Files will be returned in lexicographical order by ID.
   * </pre>
   *
   * <code>repeated .google.devtools.resultstore.v2.File files = 8;</code>
   */
  @java.lang.Override
  public com.google.devtools.resultstore.v2.FileOrBuilder getFilesOrBuilder(
      int index) {
    return files_.get(index);
  }

  private byte memoizedIsInitialized = -1;
  @java.lang.Override
  public final boolean isInitialized() {
    byte isInitialized = memoizedIsInitialized;
    if (isInitialized == 1) return true;
    if (isInitialized == 0) return false;

    memoizedIsInitialized = 1;
    return true;
  }

  @java.lang.Override
  public void writeTo(com.google.protobuf.CodedOutputStream output)
                      throws java.io.IOException {
    if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(suiteName_)) {
      com.google.protobuf.GeneratedMessageV3.writeString(output, 1, suiteName_);
    }
    for (int i = 0; i < tests_.size(); i++) {
      output.writeMessage(2, tests_.get(i));
    }
    for (int i = 0; i < failures_.size(); i++) {
      output.writeMessage(3, failures_.get(i));
    }
    for (int i = 0; i < errors_.size(); i++) {
      output.writeMessage(4, errors_.get(i));
    }
    if (timing_ != null) {
      output.writeMessage(6, getTiming());
    }
    for (int i = 0; i < properties_.size(); i++) {
      output.writeMessage(7, properties_.get(i));
    }
    for (int i = 0; i < files_.size(); i++) {
      output.writeMessage(8, files_.get(i));
    }
    unknownFields.writeTo(output);
  }

  @java.lang.Override
  public int getSerializedSize() {
    int size = memoizedSize;
    if (size != -1) return size;

    size = 0;
    if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(suiteName_)) {
      size += com.google.protobuf.GeneratedMessageV3.computeStringSize(1, suiteName_);
    }
    for (int i = 0; i < tests_.size(); i++) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(2, tests_.get(i));
    }
    for (int i = 0; i < failures_.size(); i++) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(3, failures_.get(i));
    }
    for (int i = 0; i < errors_.size(); i++) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(4, errors_.get(i));
    }
    if (timing_ != null) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(6, getTiming());
    }
    for (int i = 0; i < properties_.size(); i++) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(7, properties_.get(i));
    }
    for (int i = 0; i < files_.size(); i++) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(8, files_.get(i));
    }
    size += unknownFields.getSerializedSize();
    memoizedSize = size;
    return size;
  }

  @java.lang.Override
  public boolean equals(final java.lang.Object obj) {
    if (obj == this) {
     return true;
    }
    if (!(obj instanceof com.google.devtools.resultstore.v2.TestSuite)) {
      return super.equals(obj);
    }
    com.google.devtools.resultstore.v2.TestSuite other = (com.google.devtools.resultstore.v2.TestSuite) obj;

    if (!getSuiteName()
        .equals(other.getSuiteName())) return false;
    if (!getTestsList()
        .equals(other.getTestsList())) return false;
    if (!getFailuresList()
        .equals(other.getFailuresList())) return false;
    if (!getErrorsList()
        .equals(other.getErrorsList())) return false;
    if (hasTiming() != other.hasTiming()) return false;
    if (hasTiming()) {
      if (!getTiming()
          .equals(other.getTiming())) return false;
    }
    if (!getPropertiesList()
        .equals(other.getPropertiesList())) return false;
    if (!getFilesList()
        .equals(other.getFilesList())) return false;
    if (!unknownFields.equals(other.unknownFields)) return false;
    return true;
  }

  @java.lang.Override
  public int hashCode() {
    if (memoizedHashCode != 0) {
      return memoizedHashCode;
    }
    int hash = 41;
    hash = (19 * hash) + getDescriptor().hashCode();
    hash = (37 * hash) + SUITE_NAME_FIELD_NUMBER;
    hash = (53 * hash) + getSuiteName().hashCode();
    if (getTestsCount() > 0) {
      hash = (37 * hash) + TESTS_FIELD_NUMBER;
      hash = (53 * hash) + getTestsList().hashCode();
    }
    if (getFailuresCount() > 0) {
      hash = (37 * hash) + FAILURES_FIELD_NUMBER;
      hash = (53 * hash) + getFailuresList().hashCode();
    }
    if (getErrorsCount() > 0) {
      hash = (37 * hash) + ERRORS_FIELD_NUMBER;
      hash = (53 * hash) + getErrorsList().hashCode();
    }
    if (hasTiming()) {
      hash = (37 * hash) + TIMING_FIELD_NUMBER;
      hash = (53 * hash) + getTiming().hashCode();
    }
    if (getPropertiesCount() > 0) {
      hash = (37 * hash) + PROPERTIES_FIELD_NUMBER;
      hash = (53 * hash) + getPropertiesList().hashCode();
    }
    if (getFilesCount() > 0) {
      hash = (37 * hash) + FILES_FIELD_NUMBER;
      hash = (53 * hash) + getFilesList().hashCode();
    }
    hash = (29 * hash) + unknownFields.hashCode();
    memoizedHashCode = hash;
    return hash;
  }

  public static com.google.devtools.resultstore.v2.TestSuite parseFrom(
      java.nio.ByteBuffer data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static com.google.devtools.resultstore.v2.TestSuite parseFrom(
      java.nio.ByteBuffer data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static com.google.devtools.resultstore.v2.TestSuite parseFrom(
      com.google.protobuf.ByteString data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static com.google.devtools.resultstore.v2.TestSuite parseFrom(
      com.google.protobuf.ByteString data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static com.google.devtools.resultstore.v2.TestSuite parseFrom(byte[] data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static com.google.devtools.resultstore.v2.TestSuite parseFrom(
      byte[] data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static com.google.devtools.resultstore.v2.TestSuite parseFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input);
  }
  public static com.google.devtools.resultstore.v2.TestSuite parseFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input, extensionRegistry);
  }
  public static com.google.devtools.resultstore.v2.TestSuite parseDelimitedFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseDelimitedWithIOException(PARSER, input);
  }
  public static com.google.devtools.resultstore.v2.TestSuite parseDelimitedFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
  }
  public static com.google.devtools.resultstore.v2.TestSuite parseFrom(
      com.google.protobuf.CodedInputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input);
  }
  public static com.google.devtools.resultstore.v2.TestSuite parseFrom(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input, extensionRegistry);
  }

  @java.lang.Override
  public Builder newBuilderForType() { return newBuilder(); }
  public static Builder newBuilder() {
    return DEFAULT_INSTANCE.toBuilder();
  }
  public static Builder newBuilder(com.google.devtools.resultstore.v2.TestSuite prototype) {
    return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
  }
  @java.lang.Override
  public Builder toBuilder() {
    return this == DEFAULT_INSTANCE
        ? new Builder() : new Builder().mergeFrom(this);
  }

  @java.lang.Override
  protected Builder newBuilderForType(
      com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
    Builder builder = new Builder(parent);
    return builder;
  }
  /**
   * <pre>
   * The result of running a test suite, as reported in a &lt;testsuite&gt; element of
   * an XML log.
   * </pre>
   *
   * Protobuf type {@code google.devtools.resultstore.v2.TestSuite}
   */
  public static final class Builder extends
      com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
      // @@protoc_insertion_point(builder_implements:google.devtools.resultstore.v2.TestSuite)
      com.google.devtools.resultstore.v2.TestSuiteOrBuilder {
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.google.devtools.resultstore.v2.TestSuiteProto.internal_static_google_devtools_resultstore_v2_TestSuite_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.google.devtools.resultstore.v2.TestSuiteProto.internal_static_google_devtools_resultstore_v2_TestSuite_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.google.devtools.resultstore.v2.TestSuite.class, com.google.devtools.resultstore.v2.TestSuite.Builder.class);
    }

    // Construct using com.google.devtools.resultstore.v2.TestSuite.newBuilder()
    private Builder() {
      maybeForceBuilderInitialization();
    }

    private Builder(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      super(parent);
      maybeForceBuilderInitialization();
    }
    private void maybeForceBuilderInitialization() {
      if (com.google.protobuf.GeneratedMessageV3
              .alwaysUseFieldBuilders) {
        getTestsFieldBuilder();
        getFailuresFieldBuilder();
        getErrorsFieldBuilder();
        getPropertiesFieldBuilder();
        getFilesFieldBuilder();
      }
    }
    @java.lang.Override
    public Builder clear() {
      super.clear();
      suiteName_ = "";

      if (testsBuilder_ == null) {
        tests_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000001);
      } else {
        testsBuilder_.clear();
      }
      if (failuresBuilder_ == null) {
        failures_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000002);
      } else {
        failuresBuilder_.clear();
      }
      if (errorsBuilder_ == null) {
        errors_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000004);
      } else {
        errorsBuilder_.clear();
      }
      if (timingBuilder_ == null) {
        timing_ = null;
      } else {
        timing_ = null;
        timingBuilder_ = null;
      }
      if (propertiesBuilder_ == null) {
        properties_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000008);
      } else {
        propertiesBuilder_.clear();
      }
      if (filesBuilder_ == null) {
        files_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000010);
      } else {
        filesBuilder_.clear();
      }
      return this;
    }

    @java.lang.Override
    public com.google.protobuf.Descriptors.Descriptor
        getDescriptorForType() {
      return com.google.devtools.resultstore.v2.TestSuiteProto.internal_static_google_devtools_resultstore_v2_TestSuite_descriptor;
    }

    @java.lang.Override
    public com.google.devtools.resultstore.v2.TestSuite getDefaultInstanceForType() {
      return com.google.devtools.resultstore.v2.TestSuite.getDefaultInstance();
    }

    @java.lang.Override
    public com.google.devtools.resultstore.v2.TestSuite build() {
      com.google.devtools.resultstore.v2.TestSuite result = buildPartial();
      if (!result.isInitialized()) {
        throw newUninitializedMessageException(result);
      }
      return result;
    }

    @java.lang.Override
    public com.google.devtools.resultstore.v2.TestSuite buildPartial() {
      com.google.devtools.resultstore.v2.TestSuite result = new com.google.devtools.resultstore.v2.TestSuite(this);
      int from_bitField0_ = bitField0_;
      result.suiteName_ = suiteName_;
      if (testsBuilder_ == null) {
        if (((bitField0_ & 0x00000001) != 0)) {
          tests_ = java.util.Collections.unmodifiableList(tests_);
          bitField0_ = (bitField0_ & ~0x00000001);
        }
        result.tests_ = tests_;
      } else {
        result.tests_ = testsBuilder_.build();
      }
      if (failuresBuilder_ == null) {
        if (((bitField0_ & 0x00000002) != 0)) {
          failures_ = java.util.Collections.unmodifiableList(failures_);
          bitField0_ = (bitField0_ & ~0x00000002);
        }
        result.failures_ = failures_;
      } else {
        result.failures_ = failuresBuilder_.build();
      }
      if (errorsBuilder_ == null) {
        if (((bitField0_ & 0x00000004) != 0)) {
          errors_ = java.util.Collections.unmodifiableList(errors_);
          bitField0_ = (bitField0_ & ~0x00000004);
        }
        result.errors_ = errors_;
      } else {
        result.errors_ = errorsBuilder_.build();
      }
      if (timingBuilder_ == null) {
        result.timing_ = timing_;
      } else {
        result.timing_ = timingBuilder_.build();
      }
      if (propertiesBuilder_ == null) {
        if (((bitField0_ & 0x00000008) != 0)) {
          properties_ = java.util.Collections.unmodifiableList(properties_);
          bitField0_ = (bitField0_ & ~0x00000008);
        }
        result.properties_ = properties_;
      } else {
        result.properties_ = propertiesBuilder_.build();
      }
      if (filesBuilder_ == null) {
        if (((bitField0_ & 0x00000010) != 0)) {
          files_ = java.util.Collections.unmodifiableList(files_);
          bitField0_ = (bitField0_ & ~0x00000010);
        }
        result.files_ = files_;
      } else {
        result.files_ = filesBuilder_.build();
      }
      onBuilt();
      return result;
    }

    @java.lang.Override
    public Builder clone() {
      return super.clone();
    }
    @java.lang.Override
    public Builder setField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        java.lang.Object value) {
      return super.setField(field, value);
    }
    @java.lang.Override
    public Builder clearField(
        com.google.protobuf.Descriptors.FieldDescriptor field) {
      return super.clearField(field);
    }
    @java.lang.Override
    public Builder clearOneof(
        com.google.protobuf.Descriptors.OneofDescriptor oneof) {
      return super.clearOneof(oneof);
    }
    @java.lang.Override
    public Builder setRepeatedField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        int index, java.lang.Object value) {
      return super.setRepeatedField(field, index, value);
    }
    @java.lang.Override
    public Builder addRepeatedField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        java.lang.Object value) {
      return super.addRepeatedField(field, value);
    }
    @java.lang.Override
    public Builder mergeFrom(com.google.protobuf.Message other) {
      if (other instanceof com.google.devtools.resultstore.v2.TestSuite) {
        return mergeFrom((com.google.devtools.resultstore.v2.TestSuite)other);
      } else {
        super.mergeFrom(other);
        return this;
      }
    }

    public Builder mergeFrom(com.google.devtools.resultstore.v2.TestSuite other) {
      if (other == com.google.devtools.resultstore.v2.TestSuite.getDefaultInstance()) return this;
      if (!other.getSuiteName().isEmpty()) {
        suiteName_ = other.suiteName_;
        onChanged();
      }
      if (testsBuilder_ == null) {
        if (!other.tests_.isEmpty()) {
          if (tests_.isEmpty()) {
            tests_ = other.tests_;
            bitField0_ = (bitField0_ & ~0x00000001);
          } else {
            ensureTestsIsMutable();
            tests_.addAll(other.tests_);
          }
          onChanged();
        }
      } else {
        if (!other.tests_.isEmpty()) {
          if (testsBuilder_.isEmpty()) {
            testsBuilder_.dispose();
            testsBuilder_ = null;
            tests_ = other.tests_;
            bitField0_ = (bitField0_ & ~0x00000001);
            testsBuilder_ = 
              com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?
                 getTestsFieldBuilder() : null;
          } else {
            testsBuilder_.addAllMessages(other.tests_);
          }
        }
      }
      if (failuresBuilder_ == null) {
        if (!other.failures_.isEmpty()) {
          if (failures_.isEmpty()) {
            failures_ = other.failures_;
            bitField0_ = (bitField0_ & ~0x00000002);
          } else {
            ensureFailuresIsMutable();
            failures_.addAll(other.failures_);
          }
          onChanged();
        }
      } else {
        if (!other.failures_.isEmpty()) {
          if (failuresBuilder_.isEmpty()) {
            failuresBuilder_.dispose();
            failuresBuilder_ = null;
            failures_ = other.failures_;
            bitField0_ = (bitField0_ & ~0x00000002);
            failuresBuilder_ = 
              com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?
                 getFailuresFieldBuilder() : null;
          } else {
            failuresBuilder_.addAllMessages(other.failures_);
          }
        }
      }
      if (errorsBuilder_ == null) {
        if (!other.errors_.isEmpty()) {
          if (errors_.isEmpty()) {
            errors_ = other.errors_;
            bitField0_ = (bitField0_ & ~0x00000004);
          } else {
            ensureErrorsIsMutable();
            errors_.addAll(other.errors_);
          }
          onChanged();
        }
      } else {
        if (!other.errors_.isEmpty()) {
          if (errorsBuilder_.isEmpty()) {
            errorsBuilder_.dispose();
            errorsBuilder_ = null;
            errors_ = other.errors_;
            bitField0_ = (bitField0_ & ~0x00000004);
            errorsBuilder_ = 
              com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?
                 getErrorsFieldBuilder() : null;
          } else {
            errorsBuilder_.addAllMessages(other.errors_);
          }
        }
      }
      if (other.hasTiming()) {
        mergeTiming(other.getTiming());
      }
      if (propertiesBuilder_ == null) {
        if (!other.properties_.isEmpty()) {
          if (properties_.isEmpty()) {
            properties_ = other.properties_;
            bitField0_ = (bitField0_ & ~0x00000008);
          } else {
            ensurePropertiesIsMutable();
            properties_.addAll(other.properties_);
          }
          onChanged();
        }
      } else {
        if (!other.properties_.isEmpty()) {
          if (propertiesBuilder_.isEmpty()) {
            propertiesBuilder_.dispose();
            propertiesBuilder_ = null;
            properties_ = other.properties_;
            bitField0_ = (bitField0_ & ~0x00000008);
            propertiesBuilder_ = 
              com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?
                 getPropertiesFieldBuilder() : null;
          } else {
            propertiesBuilder_.addAllMessages(other.properties_);
          }
        }
      }
      if (filesBuilder_ == null) {
        if (!other.files_.isEmpty()) {
          if (files_.isEmpty()) {
            files_ = other.files_;
            bitField0_ = (bitField0_ & ~0x00000010);
          } else {
            ensureFilesIsMutable();
            files_.addAll(other.files_);
          }
          onChanged();
        }
      } else {
        if (!other.files_.isEmpty()) {
          if (filesBuilder_.isEmpty()) {
            filesBuilder_.dispose();
            filesBuilder_ = null;
            files_ = other.files_;
            bitField0_ = (bitField0_ & ~0x00000010);
            filesBuilder_ = 
              com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?
                 getFilesFieldBuilder() : null;
          } else {
            filesBuilder_.addAllMessages(other.files_);
          }
        }
      }
      this.mergeUnknownFields(other.unknownFields);
      onChanged();
      return this;
    }

    @java.lang.Override
    public final boolean isInitialized() {
      return true;
    }

    @java.lang.Override
    public Builder mergeFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      com.google.devtools.resultstore.v2.TestSuite parsedMessage = null;
      try {
        parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        parsedMessage = (com.google.devtools.resultstore.v2.TestSuite) e.getUnfinishedMessage();
        throw e.unwrapIOException();
      } finally {
        if (parsedMessage != null) {
          mergeFrom(parsedMessage);
        }
      }
      return this;
    }
    private int bitField0_;

    private java.lang.Object suiteName_ = "";
    /**
     * <pre>
     * The full name of this suite, as reported in the name attribute. For Java
     * tests, this is normally the fully qualified class name. Eg.
     * "com.google.common.hash.BloomFilterTest".
     * </pre>
     *
     * <code>string suite_name = 1;</code>
     * @return The suiteName.
     */
    public java.lang.String getSuiteName() {
      java.lang.Object ref = suiteName_;
      if (!(ref instanceof java.lang.String)) {
        com.google.protobuf.ByteString bs =
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        suiteName_ = s;
        return s;
      } else {
        return (java.lang.String) ref;
      }
    }
    /**
     * <pre>
     * The full name of this suite, as reported in the name attribute. For Java
     * tests, this is normally the fully qualified class name. Eg.
     * "com.google.common.hash.BloomFilterTest".
     * </pre>
     *
     * <code>string suite_name = 1;</code>
     * @return The bytes for suiteName.
     */
    public com.google.protobuf.ByteString
        getSuiteNameBytes() {
      java.lang.Object ref = suiteName_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        suiteName_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }
    /**
     * <pre>
     * The full name of this suite, as reported in the name attribute. For Java
     * tests, this is normally the fully qualified class name. Eg.
     * "com.google.common.hash.BloomFilterTest".
     * </pre>
     *
     * <code>string suite_name = 1;</code>
     * @param value The suiteName to set.
     * @return This builder for chaining.
     */
    public Builder setSuiteName(
        java.lang.String value) {
      if (value == null) {
    throw new NullPointerException();
  }
  
      suiteName_ = value;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * The full name of this suite, as reported in the name attribute. For Java
     * tests, this is normally the fully qualified class name. Eg.
     * "com.google.common.hash.BloomFilterTest".
     * </pre>
     *
     * <code>string suite_name = 1;</code>
     * @return This builder for chaining.
     */
    public Builder clearSuiteName() {
      
      suiteName_ = getDefaultInstance().getSuiteName();
      onChanged();
      return this;
    }
    /**
     * <pre>
     * The full name of this suite, as reported in the name attribute. For Java
     * tests, this is normally the fully qualified class name. Eg.
     * "com.google.common.hash.BloomFilterTest".
     * </pre>
     *
     * <code>string suite_name = 1;</code>
     * @param value The bytes for suiteName to set.
     * @return This builder for chaining.
     */
    public Builder setSuiteNameBytes(
        com.google.protobuf.ByteString value) {
      if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
      
      suiteName_ = value;
      onChanged();
      return this;
    }

    private java.util.List<com.google.devtools.resultstore.v2.Test> tests_ =
      java.util.Collections.emptyList();
    private void ensureTestsIsMutable() {
      if (!((bitField0_ & 0x00000001) != 0)) {
        tests_ = new java.util.ArrayList<com.google.devtools.resultstore.v2.Test>(tests_);
        bitField0_ |= 0x00000001;
       }
    }

    private com.google.protobuf.RepeatedFieldBuilderV3<
        com.google.devtools.resultstore.v2.Test, com.google.devtools.resultstore.v2.Test.Builder, com.google.devtools.resultstore.v2.TestOrBuilder> testsBuilder_;

    /**
     * <pre>
     * The results of the test cases and test suites contained in this suite,
     * as reported in the &lt;testcase&gt; and &lt;testsuite&gt; elements contained within
     * this &lt;testsuite&gt;.
     * </pre>
     *
     * <code>repeated .google.devtools.resultstore.v2.Test tests = 2;</code>
     */
    public java.util.List<com.google.devtools.resultstore.v2.Test> getTestsList() {
      if (testsBuilder_ == null) {
        return java.util.Collections.unmodifiableList(tests_);
      } else {
        return testsBuilder_.getMessageList();
      }
    }
    /**
     * <pre>
     * The results of the test cases and test suites contained in this suite,
     * as reported in the &lt;testcase&gt; and &lt;testsuite&gt; elements contained within
     * this &lt;testsuite&gt;.
     * </pre>
     *
     * <code>repeated .google.devtools.resultstore.v2.Test tests = 2;</code>
     */
    public int getTestsCount() {
      if (testsBuilder_ == null) {
        return tests_.size();
      } else {
        return testsBuilder_.getCount();
      }
    }
    /**
     * <pre>
     * The results of the test cases and test suites contained in this suite,
     * as reported in the &lt;testcase&gt; and &lt;testsuite&gt; elements contained within
     * this &lt;testsuite&gt;.
     * </pre>
     *
     * <code>repeated .google.devtools.resultstore.v2.Test tests = 2;</code>
     */
    public com.google.devtools.resultstore.v2.Test getTests(int index) {
      if (testsBuilder_ == null) {
        return tests_.get(index);
      } else {
        return testsBuilder_.getMessage(index);
      }
    }
    /**
     * <pre>
     * The results of the test cases and test suites contained in this suite,
     * as reported in the &lt;testcase&gt; and &lt;testsuite&gt; elements contained within
     * this &lt;testsuite&gt;.
     * </pre>
     *
     * <code>repeated .google.devtools.resultstore.v2.Test tests = 2;</code>
     */
    public Builder setTests(
        int index, com.google.devtools.resultstore.v2.Test value) {
      if (testsBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureTestsIsMutable();
        tests_.set(index, value);
        onChanged();
      } else {
        testsBuilder_.setMessage(index, value);
      }
      return this;
    }
    /**
     * <pre>
     * The results of the test cases and test suites contained in this suite,
     * as reported in the &lt;testcase&gt; and &lt;testsuite&gt; elements contained within
     * this &lt;testsuite&gt;.
     * </pre>
     *
     * <code>repeated .google.devtools.resultstore.v2.Test tests = 2;</code>
     */
    public Builder setTests(
        int index, com.google.devtools.resultstore.v2.Test.Builder builderForValue) {
      if (testsBuilder_ == null) {
        ensureTestsIsMutable();
        tests_.set(index, builderForValue.build());
        onChanged();
      } else {
        testsBuilder_.setMessage(index, builderForValue.build());
      }
      return this;
    }
    /**
     * <pre>
     * The results of the test cases and test suites contained in this suite,
     * as reported in the &lt;testcase&gt; and &lt;testsuite&gt; elements contained within
     * this &lt;testsuite&gt;.
     * </pre>
     *
     * <code>repeated .google.devtools.resultstore.v2.Test tests = 2;</code>
     */
    public Builder addTests(com.google.devtools.resultstore.v2.Test value) {
      if (testsBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureTestsIsMutable();
        tests_.add(value);
        onChanged();
      } else {
        testsBuilder_.addMessage(value);
      }
      return this;
    }
    /**
     * <pre>
     * The results of the test cases and test suites contained in this suite,
     * as reported in the &lt;testcase&gt; and &lt;testsuite&gt; elements contained within
     * this &lt;testsuite&gt;.
     * </pre>
     *
     * <code>repeated .google.devtools.resultstore.v2.Test tests = 2;</code>
     */
    public Builder addTests(
        int index, com.google.devtools.resultstore.v2.Test value) {
      if (testsBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureTestsIsMutable();
        tests_.add(index, value);
        onChanged();
      } else {
        testsBuilder_.addMessage(index, value);
      }
      return this;
    }
    /**
     * <pre>
     * The results of the test cases and test suites contained in this suite,
     * as reported in the &lt;testcase&gt; and &lt;testsuite&gt; elements contained within
     * this &lt;testsuite&gt;.
     * </pre>
     *
     * <code>repeated .google.devtools.resultstore.v2.Test tests = 2;</code>
     */
    public Builder addTests(
        com.google.devtools.resultstore.v2.Test.Builder builderForValue) {
      if (testsBuilder_ == null) {
        ensureTestsIsMutable();
        tests_.add(builderForValue.build());
        onChanged();
      } else {
        testsBuilder_.addMessage(builderForValue.build());
      }
      return this;
    }
    /**
     * <pre>
     * The results of the test cases and test suites contained in this suite,
     * as reported in the &lt;testcase&gt; and &lt;testsuite&gt; elements contained within
     * this &lt;testsuite&gt;.
     * </pre>
     *
     * <code>repeated .google.devtools.resultstore.v2.Test tests = 2;</code>
     */
    public Builder addTests(
        int index, com.google.devtools.resultstore.v2.Test.Builder builderForValue) {
      if (testsBuilder_ == null) {
        ensureTestsIsMutable();
        tests_.add(index, builderForValue.build());
        onChanged();
      } else {
        testsBuilder_.addMessage(index, builderForValue.build());
      }
      return this;
    }
    /**
     * <pre>
     * The results of the test cases and test suites contained in this suite,
     * as reported in the &lt;testcase&gt; and &lt;testsuite&gt; elements contained within
     * this &lt;testsuite&gt;.
     * </pre>
     *
     * <code>repeated .google.devtools.resultstore.v2.Test tests = 2;</code>
     */
    public Builder addAllTests(
        java.lang.Iterable<? extends com.google.devtools.resultstore.v2.Test> values) {
      if (testsBuilder_ == null) {
        ensureTestsIsMutable();
        com.google.protobuf.AbstractMessageLite.Builder.addAll(
            values, tests_);
        onChanged();
      } else {
        testsBuilder_.addAllMessages(values);
      }
      return this;
    }
    /**
     * <pre>
     * The results of the test cases and test suites contained in this suite,
     * as reported in the &lt;testcase&gt; and &lt;testsuite&gt; elements contained within
     * this &lt;testsuite&gt;.
     * </pre>
     *
     * <code>repeated .google.devtools.resultstore.v2.Test tests = 2;</code>
     */
    public Builder clearTests() {
      if (testsBuilder_ == null) {
        tests_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000001);
        onChanged();
      } else {
        testsBuilder_.clear();
      }
      return this;
    }
    /**
     * <pre>
     * The results of the test cases and test suites contained in this suite,
     * as reported in the &lt;testcase&gt; and &lt;testsuite&gt; elements contained within
     * this &lt;testsuite&gt;.
     * </pre>
     *
     * <code>repeated .google.devtools.resultstore.v2.Test tests = 2;</code>
     */
    public Builder removeTests(int index) {
      if (testsBuilder_ == null) {
        ensureTestsIsMutable();
        tests_.remove(index);
        onChanged();
      } else {
        testsBuilder_.remove(index);
      }
      return this;
    }
    /**
     * <pre>
     * The results of the test cases and test suites contained in this suite,
     * as reported in the &lt;testcase&gt; and &lt;testsuite&gt; elements contained within
     * this &lt;testsuite&gt;.
     * </pre>
     *
     * <code>repeated .google.devtools.resultstore.v2.Test tests = 2;</code>
     */
    public com.google.devtools.resultstore.v2.Test.Builder getTestsBuilder(
        int index) {
      return getTestsFieldBuilder().getBuilder(index);
    }
    /**
     * <pre>
     * The results of the test cases and test suites contained in this suite,
     * as reported in the &lt;testcase&gt; and &lt;testsuite&gt; elements contained within
     * this &lt;testsuite&gt;.
     * </pre>
     *
     * <code>repeated .google.devtools.resultstore.v2.Test tests = 2;</code>
     */
    public com.google.devtools.resultstore.v2.TestOrBuilder getTestsOrBuilder(
        int index) {
      if (testsBuilder_ == null) {
        return tests_.get(index);  } else {
        return testsBuilder_.getMessageOrBuilder(index);
      }
    }
    /**
     * <pre>
     * The results of the test cases and test suites contained in this suite,
     * as reported in the &lt;testcase&gt; and &lt;testsuite&gt; elements contained within
     * this &lt;testsuite&gt;.
     * </pre>
     *
     * <code>repeated .google.devtools.resultstore.v2.Test tests = 2;</code>
     */
    public java.util.List<? extends com.google.devtools.resultstore.v2.TestOrBuilder> 
         getTestsOrBuilderList() {
      if (testsBuilder_ != null) {
        return testsBuilder_.getMessageOrBuilderList();
      } else {
        return java.util.Collections.unmodifiableList(tests_);
      }
    }
    /**
     * <pre>
     * The results of the test cases and test suites contained in this suite,
     * as reported in the &lt;testcase&gt; and &lt;testsuite&gt; elements contained within
     * this &lt;testsuite&gt;.
     * </pre>
     *
     * <code>repeated .google.devtools.resultstore.v2.Test tests = 2;</code>
     */
    public com.google.devtools.resultstore.v2.Test.Builder addTestsBuilder() {
      return getTestsFieldBuilder().addBuilder(
          com.google.devtools.resultstore.v2.Test.getDefaultInstance());
    }
    /**
     * <pre>
     * The results of the test cases and test suites contained in this suite,
     * as reported in the &lt;testcase&gt; and &lt;testsuite&gt; elements contained within
     * this &lt;testsuite&gt;.
     * </pre>
     *
     * <code>repeated .google.devtools.resultstore.v2.Test tests = 2;</code>
     */
    public com.google.devtools.resultstore.v2.Test.Builder addTestsBuilder(
        int index) {
      return getTestsFieldBuilder().addBuilder(
          index, com.google.devtools.resultstore.v2.Test.getDefaultInstance());
    }
    /**
     * <pre>
     * The results of the test cases and test suites contained in this suite,
     * as reported in the &lt;testcase&gt; and &lt;testsuite&gt; elements contained within
     * this &lt;testsuite&gt;.
     * </pre>
     *
     * <code>repeated .google.devtools.resultstore.v2.Test tests = 2;</code>
     */
    public java.util.List<com.google.devtools.resultstore.v2.Test.Builder> 
         getTestsBuilderList() {
      return getTestsFieldBuilder().getBuilderList();
    }
    private com.google.protobuf.RepeatedFieldBuilderV3<
        com.google.devtools.resultstore.v2.Test, com.google.devtools.resultstore.v2.Test.Builder, com.google.devtools.resultstore.v2.TestOrBuilder> 
        getTestsFieldBuilder() {
      if (testsBuilder_ == null) {
        testsBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<
            com.google.devtools.resultstore.v2.Test, com.google.devtools.resultstore.v2.Test.Builder, com.google.devtools.resultstore.v2.TestOrBuilder>(
                tests_,
                ((bitField0_ & 0x00000001) != 0),
                getParentForChildren(),
                isClean());
        tests_ = null;
      }
      return testsBuilder_;
    }

    private java.util.List<com.google.devtools.resultstore.v2.TestFailure> failures_ =
      java.util.Collections.emptyList();
    private void ensureFailuresIsMutable() {
      if (!((bitField0_ & 0x00000002) != 0)) {
        failures_ = new java.util.ArrayList<com.google.devtools.resultstore.v2.TestFailure>(failures_);
        bitField0_ |= 0x00000002;
       }
    }

    private com.google.protobuf.RepeatedFieldBuilderV3<
        com.google.devtools.resultstore.v2.TestFailure, com.google.devtools.resultstore.v2.TestFailure.Builder, com.google.devtools.resultstore.v2.TestFailureOrBuilder> failuresBuilder_;

    /**
     * <pre>
     * Failures reported in &lt;failure&gt; elements within this &lt;testsuite&gt;.
     * </pre>
     *
     * <code>repeated .google.devtools.resultstore.v2.TestFailure failures = 3;</code>
     */
    public java.util.List<com.google.devtools.resultstore.v2.TestFailure> getFailuresList() {
      if (failuresBuilder_ == null) {
        return java.util.Collections.unmodifiableList(failures_);
      } else {
        return failuresBuilder_.getMessageList();
      }
    }
    /**
     * <pre>
     * Failures reported in &lt;failure&gt; elements within this &lt;testsuite&gt;.
     * </pre>
     *
     * <code>repeated .google.devtools.resultstore.v2.TestFailure failures = 3;</code>
     */
    public int getFailuresCount() {
      if (failuresBuilder_ == null) {
        return failures_.size();
      } else {
        return failuresBuilder_.getCount();
      }
    }
    /**
     * <pre>
     * Failures reported in &lt;failure&gt; elements within this &lt;testsuite&gt;.
     * </pre>
     *
     * <code>repeated .google.devtools.resultstore.v2.TestFailure failures = 3;</code>
     */
    public com.google.devtools.resultstore.v2.TestFailure getFailures(int index) {
      if (failuresBuilder_ == null) {
        return failures_.get(index);
      } else {
        return failuresBuilder_.getMessage(index);
      }
    }
    /**
     * <pre>
     * Failures reported in &lt;failure&gt; elements within this &lt;testsuite&gt;.
     * </pre>
     *
     * <code>repeated .google.devtools.resultstore.v2.TestFailure failures = 3;</code>
     */
    public Builder setFailures(
        int index, com.google.devtools.resultstore.v2.TestFailure value) {
      if (failuresBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureFailuresIsMutable();
        failures_.set(index, value);
        onChanged();
      } else {
        failuresBuilder_.setMessage(index, value);
      }
      return this;
    }
    /**
     * <pre>
     * Failures reported in &lt;failure&gt; elements within this &lt;testsuite&gt;.
     * </pre>
     *
     * <code>repeated .google.devtools.resultstore.v2.TestFailure failures = 3;</code>
     */
    public Builder setFailures(
        int index, com.google.devtools.resultstore.v2.TestFailure.Builder builderForValue) {
      if (failuresBuilder_ == null) {
        ensureFailuresIsMutable();
        failures_.set(index, builderForValue.build());
        onChanged();
      } else {
        failuresBuilder_.setMessage(index, builderForValue.build());
      }
      return this;
    }
    /**
     * <pre>
     * Failures reported in &lt;failure&gt; elements within this &lt;testsuite&gt;.
     * </pre>
     *
     * <code>repeated .google.devtools.resultstore.v2.TestFailure failures = 3;</code>
     */
    public Builder addFailures(com.google.devtools.resultstore.v2.TestFailure value) {
      if (failuresBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureFailuresIsMutable();
        failures_.add(value);
        onChanged();
      } else {
        failuresBuilder_.addMessage(value);
      }
      return this;
    }
    /**
     * <pre>
     * Failures reported in &lt;failure&gt; elements within this &lt;testsuite&gt;.
     * </pre>
     *
     * <code>repeated .google.devtools.resultstore.v2.TestFailure failures = 3;</code>
     */
    public Builder addFailures(
        int index, com.google.devtools.resultstore.v2.TestFailure value) {
      if (failuresBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureFailuresIsMutable();
        failures_.add(index, value);
        onChanged();
      } else {
        failuresBuilder_.addMessage(index, value);
      }
      return this;
    }
    /**
     * <pre>
     * Failures reported in &lt;failure&gt; elements within this &lt;testsuite&gt;.
     * </pre>
     *
     * <code>repeated .google.devtools.resultstore.v2.TestFailure failures = 3;</code>
     */
    public Builder addFailures(
        com.google.devtools.resultstore.v2.TestFailure.Builder builderForValue) {
      if (failuresBuilder_ == null) {
        ensureFailuresIsMutable();
        failures_.add(builderForValue.build());
        onChanged();
      } else {
        failuresBuilder_.addMessage(builderForValue.build());
      }
      return this;
    }
    /**
     * <pre>
     * Failures reported in &lt;failure&gt; elements within this &lt;testsuite&gt;.
     * </pre>
     *
     * <code>repeated .google.devtools.resultstore.v2.TestFailure failures = 3;</code>
     */
    public Builder addFailures(
        int index, com.google.devtools.resultstore.v2.TestFailure.Builder builderForValue) {
      if (failuresBuilder_ == null) {
        ensureFailuresIsMutable();
        failures_.add(index, builderForValue.build());
        onChanged();
      } else {
        failuresBuilder_.addMessage(index, builderForValue.build());
      }
      return this;
    }
    /**
     * <pre>
     * Failures reported in &lt;failure&gt; elements within this &lt;testsuite&gt;.
     * </pre>
     *
     * <code>repeated .google.devtools.resultstore.v2.TestFailure failures = 3;</code>
     */
    public Builder addAllFailures(
        java.lang.Iterable<? extends com.google.devtools.resultstore.v2.TestFailure> values) {
      if (failuresBuilder_ == null) {
        ensureFailuresIsMutable();
        com.google.protobuf.AbstractMessageLite.Builder.addAll(
            values, failures_);
        onChanged();
      } else {
        failuresBuilder_.addAllMessages(values);
      }
      return this;
    }
    /**
     * <pre>
     * Failures reported in &lt;failure&gt; elements within this &lt;testsuite&gt;.
     * </pre>
     *
     * <code>repeated .google.devtools.resultstore.v2.TestFailure failures = 3;</code>
     */
    public Builder clearFailures() {
      if (failuresBuilder_ == null) {
        failures_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000002);
        onChanged();
      } else {
        failuresBuilder_.clear();
      }
      return this;
    }
    /**
     * <pre>
     * Failures reported in &lt;failure&gt; elements within this &lt;testsuite&gt;.
     * </pre>
     *
     * <code>repeated .google.devtools.resultstore.v2.TestFailure failures = 3;</code>
     */
    public Builder removeFailures(int index) {
      if (failuresBuilder_ == null) {
        ensureFailuresIsMutable();
        failures_.remove(index);
        onChanged();
      } else {
        failuresBuilder_.remove(index);
      }
      return this;
    }
    /**
     * <pre>
     * Failures reported in &lt;failure&gt; elements within this &lt;testsuite&gt;.
     * </pre>
     *
     * <code>repeated .google.devtools.resultstore.v2.TestFailure failures = 3;</code>
     */
    public com.google.devtools.resultstore.v2.TestFailure.Builder getFailuresBuilder(
        int index) {
      return getFailuresFieldBuilder().getBuilder(index);
    }
    /**
     * <pre>
     * Failures reported in &lt;failure&gt; elements within this &lt;testsuite&gt;.
     * </pre>
     *
     * <code>repeated .google.devtools.resultstore.v2.TestFailure failures = 3;</code>
     */
    public com.google.devtools.resultstore.v2.TestFailureOrBuilder getFailuresOrBuilder(
        int index) {
      if (failuresBuilder_ == null) {
        return failures_.get(index);  } else {
        return failuresBuilder_.getMessageOrBuilder(index);
      }
    }
    /**
     * <pre>
     * Failures reported in &lt;failure&gt; elements within this &lt;testsuite&gt;.
     * </pre>
     *
     * <code>repeated .google.devtools.resultstore.v2.TestFailure failures = 3;</code>
     */
    public java.util.List<? extends com.google.devtools.resultstore.v2.TestFailureOrBuilder> 
         getFailuresOrBuilderList() {
      if (failuresBuilder_ != null) {
        return failuresBuilder_.getMessageOrBuilderList();
      } else {
        return java.util.Collections.unmodifiableList(failures_);
      }
    }
    /**
     * <pre>
     * Failures reported in &lt;failure&gt; elements within this &lt;testsuite&gt;.
     * </pre>
     *
     * <code>repeated .google.devtools.resultstore.v2.TestFailure failures = 3;</code>
     */
    public com.google.devtools.resultstore.v2.TestFailure.Builder addFailuresBuilder() {
      return getFailuresFieldBuilder().addBuilder(
          com.google.devtools.resultstore.v2.TestFailure.getDefaultInstance());
    }
    /**
     * <pre>
     * Failures reported in &lt;failure&gt; elements within this &lt;testsuite&gt;.
     * </pre>
     *
     * <code>repeated .google.devtools.resultstore.v2.TestFailure failures = 3;</code>
     */
    public com.google.devtools.resultstore.v2.TestFailure.Builder addFailuresBuilder(
        int index) {
      return getFailuresFieldBuilder().addBuilder(
          index, com.google.devtools.resultstore.v2.TestFailure.getDefaultInstance());
    }
    /**
     * <pre>
     * Failures reported in &lt;failure&gt; elements within this &lt;testsuite&gt;.
     * </pre>
     *
     * <code>repeated .google.devtools.resultstore.v2.TestFailure failures = 3;</code>
     */
    public java.util.List<com.google.devtools.resultstore.v2.TestFailure.Builder> 
         getFailuresBuilderList() {
      return getFailuresFieldBuilder().getBuilderList();
    }
    private com.google.protobuf.RepeatedFieldBuilderV3<
        com.google.devtools.resultstore.v2.TestFailure, com.google.devtools.resultstore.v2.TestFailure.Builder, com.google.devtools.resultstore.v2.TestFailureOrBuilder> 
        getFailuresFieldBuilder() {
      if (failuresBuilder_ == null) {
        failuresBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<
            com.google.devtools.resultstore.v2.TestFailure, com.google.devtools.resultstore.v2.TestFailure.Builder, com.google.devtools.resultstore.v2.TestFailureOrBuilder>(
                failures_,
                ((bitField0_ & 0x00000002) != 0),
                getParentForChildren(),
                isClean());
        failures_ = null;
      }
      return failuresBuilder_;
    }

    private java.util.List<com.google.devtools.resultstore.v2.TestError> errors_ =
      java.util.Collections.emptyList();
    private void ensureErrorsIsMutable() {
      if (!((bitField0_ & 0x00000004) != 0)) {
        errors_ = new java.util.ArrayList<com.google.devtools.resultstore.v2.TestError>(errors_);
        bitField0_ |= 0x00000004;
       }
    }

    private com.google.protobuf.RepeatedFieldBuilderV3<
        com.google.devtools.resultstore.v2.TestError, com.google.devtools.resultstore.v2.TestError.Builder, com.google.devtools.resultstore.v2.TestErrorOrBuilder> errorsBuilder_;

    /**
     * <pre>
     * Errors reported in &lt;error&gt; elements within this &lt;testsuite&gt;.
     * </pre>
     *
     * <code>repeated .google.devtools.resultstore.v2.TestError errors = 4;</code>
     */
    public java.util.List<com.google.devtools.resultstore.v2.TestError> getErrorsList() {
      if (errorsBuilder_ == null) {
        return java.util.Collections.unmodifiableList(errors_);
      } else {
        return errorsBuilder_.getMessageList();
      }
    }
    /**
     * <pre>
     * Errors reported in &lt;error&gt; elements within this &lt;testsuite&gt;.
     * </pre>
     *
     * <code>repeated .google.devtools.resultstore.v2.TestError errors = 4;</code>
     */
    public int getErrorsCount() {
      if (errorsBuilder_ == null) {
        return errors_.size();
      } else {
        return errorsBuilder_.getCount();
      }
    }
    /**
     * <pre>
     * Errors reported in &lt;error&gt; elements within this &lt;testsuite&gt;.
     * </pre>
     *
     * <code>repeated .google.devtools.resultstore.v2.TestError errors = 4;</code>
     */
    public com.google.devtools.resultstore.v2.TestError getErrors(int index) {
      if (errorsBuilder_ == null) {
        return errors_.get(index);
      } else {
        return errorsBuilder_.getMessage(index);
      }
    }
    /**
     * <pre>
     * Errors reported in &lt;error&gt; elements within this &lt;testsuite&gt;.
     * </pre>
     *
     * <code>repeated .google.devtools.resultstore.v2.TestError errors = 4;</code>
     */
    public Builder setErrors(
        int index, com.google.devtools.resultstore.v2.TestError value) {
      if (errorsBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureErrorsIsMutable();
        errors_.set(index, value);
        onChanged();
      } else {
        errorsBuilder_.setMessage(index, value);
      }
      return this;
    }
    /**
     * <pre>
     * Errors reported in &lt;error&gt; elements within this &lt;testsuite&gt;.
     * </pre>
     *
     * <code>repeated .google.devtools.resultstore.v2.TestError errors = 4;</code>
     */
    public Builder setErrors(
        int index, com.google.devtools.resultstore.v2.TestError.Builder builderForValue) {
      if (errorsBuilder_ == null) {
        ensureErrorsIsMutable();
        errors_.set(index, builderForValue.build());
        onChanged();
      } else {
        errorsBuilder_.setMessage(index, builderForValue.build());
      }
      return this;
    }
    /**
     * <pre>
     * Errors reported in &lt;error&gt; elements within this &lt;testsuite&gt;.
     * </pre>
     *
     * <code>repeated .google.devtools.resultstore.v2.TestError errors = 4;</code>
     */
    public Builder addErrors(com.google.devtools.resultstore.v2.TestError value) {
      if (errorsBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureErrorsIsMutable();
        errors_.add(value);
        onChanged();
      } else {
        errorsBuilder_.addMessage(value);
      }
      return this;
    }
    /**
     * <pre>
     * Errors reported in &lt;error&gt; elements within this &lt;testsuite&gt;.
     * </pre>
     *
     * <code>repeated .google.devtools.resultstore.v2.TestError errors = 4;</code>
     */
    public Builder addErrors(
        int index, com.google.devtools.resultstore.v2.TestError value) {
      if (errorsBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureErrorsIsMutable();
        errors_.add(index, value);
        onChanged();
      } else {
        errorsBuilder_.addMessage(index, value);
      }
      return this;
    }
    /**
     * <pre>
     * Errors reported in &lt;error&gt; elements within this &lt;testsuite&gt;.
     * </pre>
     *
     * <code>repeated .google.devtools.resultstore.v2.TestError errors = 4;</code>
     */
    public Builder addErrors(
        com.google.devtools.resultstore.v2.TestError.Builder builderForValue) {
      if (errorsBuilder_ == null) {
        ensureErrorsIsMutable();
        errors_.add(builderForValue.build());
        onChanged();
      } else {
        errorsBuilder_.addMessage(builderForValue.build());
      }
      return this;
    }
    /**
     * <pre>
     * Errors reported in &lt;error&gt; elements within this &lt;testsuite&gt;.
     * </pre>
     *
     * <code>repeated .google.devtools.resultstore.v2.TestError errors = 4;</code>
     */
    public Builder addErrors(
        int index, com.google.devtools.resultstore.v2.TestError.Builder builderForValue) {
      if (errorsBuilder_ == null) {
        ensureErrorsIsMutable();
        errors_.add(index, builderForValue.build());
        onChanged();
      } else {
        errorsBuilder_.addMessage(index, builderForValue.build());
      }
      return this;
    }
    /**
     * <pre>
     * Errors reported in &lt;error&gt; elements within this &lt;testsuite&gt;.
     * </pre>
     *
     * <code>repeated .google.devtools.resultstore.v2.TestError errors = 4;</code>
     */
    public Builder addAllErrors(
        java.lang.Iterable<? extends com.google.devtools.resultstore.v2.TestError> values) {
      if (errorsBuilder_ == null) {
        ensureErrorsIsMutable();
        com.google.protobuf.AbstractMessageLite.Builder.addAll(
            values, errors_);
        onChanged();
      } else {
        errorsBuilder_.addAllMessages(values);
      }
      return this;
    }
    /**
     * <pre>
     * Errors reported in &lt;error&gt; elements within this &lt;testsuite&gt;.
     * </pre>
     *
     * <code>repeated .google.devtools.resultstore.v2.TestError errors = 4;</code>
     */
    public Builder clearErrors() {
      if (errorsBuilder_ == null) {
        errors_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000004);
        onChanged();
      } else {
        errorsBuilder_.clear();
      }
      return this;
    }
    /**
     * <pre>
     * Errors reported in &lt;error&gt; elements within this &lt;testsuite&gt;.
     * </pre>
     *
     * <code>repeated .google.devtools.resultstore.v2.TestError errors = 4;</code>
     */
    public Builder removeErrors(int index) {
      if (errorsBuilder_ == null) {
        ensureErrorsIsMutable();
        errors_.remove(index);
        onChanged();
      } else {
        errorsBuilder_.remove(index);
      }
      return this;
    }
    /**
     * <pre>
     * Errors reported in &lt;error&gt; elements within this &lt;testsuite&gt;.
     * </pre>
     *
     * <code>repeated .google.devtools.resultstore.v2.TestError errors = 4;</code>
     */
    public com.google.devtools.resultstore.v2.TestError.Builder getErrorsBuilder(
        int index) {
      return getErrorsFieldBuilder().getBuilder(index);
    }
    /**
     * <pre>
     * Errors reported in &lt;error&gt; elements within this &lt;testsuite&gt;.
     * </pre>
     *
     * <code>repeated .google.devtools.resultstore.v2.TestError errors = 4;</code>
     */
    public com.google.devtools.resultstore.v2.TestErrorOrBuilder getErrorsOrBuilder(
        int index) {
      if (errorsBuilder_ == null) {
        return errors_.get(index);  } else {
        return errorsBuilder_.getMessageOrBuilder(index);
      }
    }
    /**
     * <pre>
     * Errors reported in &lt;error&gt; elements within this &lt;testsuite&gt;.
     * </pre>
     *
     * <code>repeated .google.devtools.resultstore.v2.TestError errors = 4;</code>
     */
    public java.util.List<? extends com.google.devtools.resultstore.v2.TestErrorOrBuilder> 
         getErrorsOrBuilderList() {
      if (errorsBuilder_ != null) {
        return errorsBuilder_.getMessageOrBuilderList();
      } else {
        return java.util.Collections.unmodifiableList(errors_);
      }
    }
    /**
     * <pre>
     * Errors reported in &lt;error&gt; elements within this &lt;testsuite&gt;.
     * </pre>
     *
     * <code>repeated .google.devtools.resultstore.v2.TestError errors = 4;</code>
     */
    public com.google.devtools.resultstore.v2.TestError.Builder addErrorsBuilder() {
      return getErrorsFieldBuilder().addBuilder(
          com.google.devtools.resultstore.v2.TestError.getDefaultInstance());
    }
    /**
     * <pre>
     * Errors reported in &lt;error&gt; elements within this &lt;testsuite&gt;.
     * </pre>
     *
     * <code>repeated .google.devtools.resultstore.v2.TestError errors = 4;</code>
     */
    public com.google.devtools.resultstore.v2.TestError.Builder addErrorsBuilder(
        int index) {
      return getErrorsFieldBuilder().addBuilder(
          index, com.google.devtools.resultstore.v2.TestError.getDefaultInstance());
    }
    /**
     * <pre>
     * Errors reported in &lt;error&gt; elements within this &lt;testsuite&gt;.
     * </pre>
     *
     * <code>repeated .google.devtools.resultstore.v2.TestError errors = 4;</code>
     */
    public java.util.List<com.google.devtools.resultstore.v2.TestError.Builder> 
         getErrorsBuilderList() {
      return getErrorsFieldBuilder().getBuilderList();
    }
    private com.google.protobuf.RepeatedFieldBuilderV3<
        com.google.devtools.resultstore.v2.TestError, com.google.devtools.resultstore.v2.TestError.Builder, com.google.devtools.resultstore.v2.TestErrorOrBuilder> 
        getErrorsFieldBuilder() {
      if (errorsBuilder_ == null) {
        errorsBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<
            com.google.devtools.resultstore.v2.TestError, com.google.devtools.resultstore.v2.TestError.Builder, com.google.devtools.resultstore.v2.TestErrorOrBuilder>(
                errors_,
                ((bitField0_ & 0x00000004) != 0),
                getParentForChildren(),
                isClean());
        errors_ = null;
      }
      return errorsBuilder_;
    }

    private com.google.devtools.resultstore.v2.Timing timing_;
    private com.google.protobuf.SingleFieldBuilderV3<
        com.google.devtools.resultstore.v2.Timing, com.google.devtools.resultstore.v2.Timing.Builder, com.google.devtools.resultstore.v2.TimingOrBuilder> timingBuilder_;
    /**
     * <pre>
     * The timing for the entire TestSuite, as reported by the time attribute.
     * </pre>
     *
     * <code>.google.devtools.resultstore.v2.Timing timing = 6;</code>
     * @return Whether the timing field is set.
     */
    public boolean hasTiming() {
      return timingBuilder_ != null || timing_ != null;
    }
    /**
     * <pre>
     * The timing for the entire TestSuite, as reported by the time attribute.
     * </pre>
     *
     * <code>.google.devtools.resultstore.v2.Timing timing = 6;</code>
     * @return The timing.
     */
    public com.google.devtools.resultstore.v2.Timing getTiming() {
      if (timingBuilder_ == null) {
        return timing_ == null ? com.google.devtools.resultstore.v2.Timing.getDefaultInstance() : timing_;
      } else {
        return timingBuilder_.getMessage();
      }
    }
    /**
     * <pre>
     * The timing for the entire TestSuite, as reported by the time attribute.
     * </pre>
     *
     * <code>.google.devtools.resultstore.v2.Timing timing = 6;</code>
     */
    public Builder setTiming(com.google.devtools.resultstore.v2.Timing value) {
      if (timingBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        timing_ = value;
        onChanged();
      } else {
        timingBuilder_.setMessage(value);
      }

      return this;
    }
    /**
     * <pre>
     * The timing for the entire TestSuite, as reported by the time attribute.
     * </pre>
     *
     * <code>.google.devtools.resultstore.v2.Timing timing = 6;</code>
     */
    public Builder setTiming(
        com.google.devtools.resultstore.v2.Timing.Builder builderForValue) {
      if (timingBuilder_ == null) {
        timing_ = builderForValue.build();
        onChanged();
      } else {
        timingBuilder_.setMessage(builderForValue.build());
      }

      return this;
    }
    /**
     * <pre>
     * The timing for the entire TestSuite, as reported by the time attribute.
     * </pre>
     *
     * <code>.google.devtools.resultstore.v2.Timing timing = 6;</code>
     */
    public Builder mergeTiming(com.google.devtools.resultstore.v2.Timing value) {
      if (timingBuilder_ == null) {
        if (timing_ != null) {
          timing_ =
            com.google.devtools.resultstore.v2.Timing.newBuilder(timing_).mergeFrom(value).buildPartial();
        } else {
          timing_ = value;
        }
        onChanged();
      } else {
        timingBuilder_.mergeFrom(value);
      }

      return this;
    }
    /**
     * <pre>
     * The timing for the entire TestSuite, as reported by the time attribute.
     * </pre>
     *
     * <code>.google.devtools.resultstore.v2.Timing timing = 6;</code>
     */
    public Builder clearTiming() {
      if (timingBuilder_ == null) {
        timing_ = null;
        onChanged();
      } else {
        timing_ = null;
        timingBuilder_ = null;
      }

      return this;
    }
    /**
     * <pre>
     * The timing for the entire TestSuite, as reported by the time attribute.
     * </pre>
     *
     * <code>.google.devtools.resultstore.v2.Timing timing = 6;</code>
     */
    public com.google.devtools.resultstore.v2.Timing.Builder getTimingBuilder() {
      
      onChanged();
      return getTimingFieldBuilder().getBuilder();
    }
    /**
     * <pre>
     * The timing for the entire TestSuite, as reported by the time attribute.
     * </pre>
     *
     * <code>.google.devtools.resultstore.v2.Timing timing = 6;</code>
     */
    public com.google.devtools.resultstore.v2.TimingOrBuilder getTimingOrBuilder() {
      if (timingBuilder_ != null) {
        return timingBuilder_.getMessageOrBuilder();
      } else {
        return timing_ == null ?
            com.google.devtools.resultstore.v2.Timing.getDefaultInstance() : timing_;
      }
    }
    /**
     * <pre>
     * The timing for the entire TestSuite, as reported by the time attribute.
     * </pre>
     *
     * <code>.google.devtools.resultstore.v2.Timing timing = 6;</code>
     */
    private com.google.protobuf.SingleFieldBuilderV3<
        com.google.devtools.resultstore.v2.Timing, com.google.devtools.resultstore.v2.Timing.Builder, com.google.devtools.resultstore.v2.TimingOrBuilder> 
        getTimingFieldBuilder() {
      if (timingBuilder_ == null) {
        timingBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
            com.google.devtools.resultstore.v2.Timing, com.google.devtools.resultstore.v2.Timing.Builder, com.google.devtools.resultstore.v2.TimingOrBuilder>(
                getTiming(),
                getParentForChildren(),
                isClean());
        timing_ = null;
      }
      return timingBuilder_;
    }

    private java.util.List<com.google.devtools.resultstore.v2.Property> properties_ =
      java.util.Collections.emptyList();
    private void ensurePropertiesIsMutable() {
      if (!((bitField0_ & 0x00000008) != 0)) {
        properties_ = new java.util.ArrayList<com.google.devtools.resultstore.v2.Property>(properties_);
        bitField0_ |= 0x00000008;
       }
    }

    private com.google.protobuf.RepeatedFieldBuilderV3<
        com.google.devtools.resultstore.v2.Property, com.google.devtools.resultstore.v2.Property.Builder, com.google.devtools.resultstore.v2.PropertyOrBuilder> propertiesBuilder_;

    /**
     * <pre>
     * Arbitrary name-value pairs, as reported in custom attributes or in a
     * &lt;properties&gt; element within this &lt;testsuite&gt;. Multiple properties are
     * allowed with the same key. Properties will be returned in lexicographical
     * order by key.
     * </pre>
     *
     * <code>repeated .google.devtools.resultstore.v2.Property properties = 7;</code>
     */
    public java.util.List<com.google.devtools.resultstore.v2.Property> getPropertiesList() {
      if (propertiesBuilder_ == null) {
        return java.util.Collections.unmodifiableList(properties_);
      } else {
        return propertiesBuilder_.getMessageList();
      }
    }
    /**
     * <pre>
     * Arbitrary name-value pairs, as reported in custom attributes or in a
     * &lt;properties&gt; element within this &lt;testsuite&gt;. Multiple properties are
     * allowed with the same key. Properties will be returned in lexicographical
     * order by key.
     * </pre>
     *
     * <code>repeated .google.devtools.resultstore.v2.Property properties = 7;</code>
     */
    public int getPropertiesCount() {
      if (propertiesBuilder_ == null) {
        return properties_.size();
      } else {
        return propertiesBuilder_.getCount();
      }
    }
    /**
     * <pre>
     * Arbitrary name-value pairs, as reported in custom attributes or in a
     * &lt;properties&gt; element within this &lt;testsuite&gt;. Multiple properties are
     * allowed with the same key. Properties will be returned in lexicographical
     * order by key.
     * </pre>
     *
     * <code>repeated .google.devtools.resultstore.v2.Property properties = 7;</code>
     */
    public com.google.devtools.resultstore.v2.Property getProperties(int index) {
      if (propertiesBuilder_ == null) {
        return properties_.get(index);
      } else {
        return propertiesBuilder_.getMessage(index);
      }
    }
    /**
     * <pre>
     * Arbitrary name-value pairs, as reported in custom attributes or in a
     * &lt;properties&gt; element within this &lt;testsuite&gt;. Multiple properties are
     * allowed with the same key. Properties will be returned in lexicographical
     * order by key.
     * </pre>
     *
     * <code>repeated .google.devtools.resultstore.v2.Property properties = 7;</code>
     */
    public Builder setProperties(
        int index, com.google.devtools.resultstore.v2.Property value) {
      if (propertiesBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensurePropertiesIsMutable();
        properties_.set(index, value);
        onChanged();
      } else {
        propertiesBuilder_.setMessage(index, value);
      }
      return this;
    }
    /**
     * <pre>
     * Arbitrary name-value pairs, as reported in custom attributes or in a
     * &lt;properties&gt; element within this &lt;testsuite&gt;. Multiple properties are
     * allowed with the same key. Properties will be returned in lexicographical
     * order by key.
     * </pre>
     *
     * <code>repeated .google.devtools.resultstore.v2.Property properties = 7;</code>
     */
    public Builder setProperties(
        int index, com.google.devtools.resultstore.v2.Property.Builder builderForValue) {
      if (propertiesBuilder_ == null) {
        ensurePropertiesIsMutable();
        properties_.set(index, builderForValue.build());
        onChanged();
      } else {
        propertiesBuilder_.setMessage(index, builderForValue.build());
      }
      return this;
    }
    /**
     * <pre>
     * Arbitrary name-value pairs, as reported in custom attributes or in a
     * &lt;properties&gt; element within this &lt;testsuite&gt;. Multiple properties are
     * allowed with the same key. Properties will be returned in lexicographical
     * order by key.
     * </pre>
     *
     * <code>repeated .google.devtools.resultstore.v2.Property properties = 7;</code>
     */
    public Builder addProperties(com.google.devtools.resultstore.v2.Property value) {
      if (propertiesBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensurePropertiesIsMutable();
        properties_.add(value);
        onChanged();
      } else {
        propertiesBuilder_.addMessage(value);
      }
      return this;
    }
    /**
     * <pre>
     * Arbitrary name-value pairs, as reported in custom attributes or in a
     * &lt;properties&gt; element within this &lt;testsuite&gt;. Multiple properties are
     * allowed with the same key. Properties will be returned in lexicographical
     * order by key.
     * </pre>
     *
     * <code>repeated .google.devtools.resultstore.v2.Property properties = 7;</code>
     */
    public Builder addProperties(
        int index, com.google.devtools.resultstore.v2.Property value) {
      if (propertiesBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensurePropertiesIsMutable();
        properties_.add(index, value);
        onChanged();
      } else {
        propertiesBuilder_.addMessage(index, value);
      }
      return this;
    }
    /**
     * <pre>
     * Arbitrary name-value pairs, as reported in custom attributes or in a
     * &lt;properties&gt; element within this &lt;testsuite&gt;. Multiple properties are
     * allowed with the same key. Properties will be returned in lexicographical
     * order by key.
     * </pre>
     *
     * <code>repeated .google.devtools.resultstore.v2.Property properties = 7;</code>
     */
    public Builder addProperties(
        com.google.devtools.resultstore.v2.Property.Builder builderForValue) {
      if (propertiesBuilder_ == null) {
        ensurePropertiesIsMutable();
        properties_.add(builderForValue.build());
        onChanged();
      } else {
        propertiesBuilder_.addMessage(builderForValue.build());
      }
      return this;
    }
    /**
     * <pre>
     * Arbitrary name-value pairs, as reported in custom attributes or in a
     * &lt;properties&gt; element within this &lt;testsuite&gt;. Multiple properties are
     * allowed with the same key. Properties will be returned in lexicographical
     * order by key.
     * </pre>
     *
     * <code>repeated .google.devtools.resultstore.v2.Property properties = 7;</code>
     */
    public Builder addProperties(
        int index, com.google.devtools.resultstore.v2.Property.Builder builderForValue) {
      if (propertiesBuilder_ == null) {
        ensurePropertiesIsMutable();
        properties_.add(index, builderForValue.build());
        onChanged();
      } else {
        propertiesBuilder_.addMessage(index, builderForValue.build());
      }
      return this;
    }
    /**
     * <pre>
     * Arbitrary name-value pairs, as reported in custom attributes or in a
     * &lt;properties&gt; element within this &lt;testsuite&gt;. Multiple properties are
     * allowed with the same key. Properties will be returned in lexicographical
     * order by key.
     * </pre>
     *
     * <code>repeated .google.devtools.resultstore.v2.Property properties = 7;</code>
     */
    public Builder addAllProperties(
        java.lang.Iterable<? extends com.google.devtools.resultstore.v2.Property> values) {
      if (propertiesBuilder_ == null) {
        ensurePropertiesIsMutable();
        com.google.protobuf.AbstractMessageLite.Builder.addAll(
            values, properties_);
        onChanged();
      } else {
        propertiesBuilder_.addAllMessages(values);
      }
      return this;
    }
    /**
     * <pre>
     * Arbitrary name-value pairs, as reported in custom attributes or in a
     * &lt;properties&gt; element within this &lt;testsuite&gt;. Multiple properties are
     * allowed with the same key. Properties will be returned in lexicographical
     * order by key.
     * </pre>
     *
     * <code>repeated .google.devtools.resultstore.v2.Property properties = 7;</code>
     */
    public Builder clearProperties() {
      if (propertiesBuilder_ == null) {
        properties_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000008);
        onChanged();
      } else {
        propertiesBuilder_.clear();
      }
      return this;
    }
    /**
     * <pre>
     * Arbitrary name-value pairs, as reported in custom attributes or in a
     * &lt;properties&gt; element within this &lt;testsuite&gt;. Multiple properties are
     * allowed with the same key. Properties will be returned in lexicographical
     * order by key.
     * </pre>
     *
     * <code>repeated .google.devtools.resultstore.v2.Property properties = 7;</code>
     */
    public Builder removeProperties(int index) {
      if (propertiesBuilder_ == null) {
        ensurePropertiesIsMutable();
        properties_.remove(index);
        onChanged();
      } else {
        propertiesBuilder_.remove(index);
      }
      return this;
    }
    /**
     * <pre>
     * Arbitrary name-value pairs, as reported in custom attributes or in a
     * &lt;properties&gt; element within this &lt;testsuite&gt;. Multiple properties are
     * allowed with the same key. Properties will be returned in lexicographical
     * order by key.
     * </pre>
     *
     * <code>repeated .google.devtools.resultstore.v2.Property properties = 7;</code>
     */
    public com.google.devtools.resultstore.v2.Property.Builder getPropertiesBuilder(
        int index) {
      return getPropertiesFieldBuilder().getBuilder(index);
    }
    /**
     * <pre>
     * Arbitrary name-value pairs, as reported in custom attributes or in a
     * &lt;properties&gt; element within this &lt;testsuite&gt;. Multiple properties are
     * allowed with the same key. Properties will be returned in lexicographical
     * order by key.
     * </pre>
     *
     * <code>repeated .google.devtools.resultstore.v2.Property properties = 7;</code>
     */
    public com.google.devtools.resultstore.v2.PropertyOrBuilder getPropertiesOrBuilder(
        int index) {
      if (propertiesBuilder_ == null) {
        return properties_.get(index);  } else {
        return propertiesBuilder_.getMessageOrBuilder(index);
      }
    }
    /**
     * <pre>
     * Arbitrary name-value pairs, as reported in custom attributes or in a
     * &lt;properties&gt; element within this &lt;testsuite&gt;. Multiple properties are
     * allowed with the same key. Properties will be returned in lexicographical
     * order by key.
     * </pre>
     *
     * <code>repeated .google.devtools.resultstore.v2.Property properties = 7;</code>
     */
    public java.util.List<? extends com.google.devtools.resultstore.v2.PropertyOrBuilder> 
         getPropertiesOrBuilderList() {
      if (propertiesBuilder_ != null) {
        return propertiesBuilder_.getMessageOrBuilderList();
      } else {
        return java.util.Collections.unmodifiableList(properties_);
      }
    }
    /**
     * <pre>
     * Arbitrary name-value pairs, as reported in custom attributes or in a
     * &lt;properties&gt; element within this &lt;testsuite&gt;. Multiple properties are
     * allowed with the same key. Properties will be returned in lexicographical
     * order by key.
     * </pre>
     *
     * <code>repeated .google.devtools.resultstore.v2.Property properties = 7;</code>
     */
    public com.google.devtools.resultstore.v2.Property.Builder addPropertiesBuilder() {
      return getPropertiesFieldBuilder().addBuilder(
          com.google.devtools.resultstore.v2.Property.getDefaultInstance());
    }
    /**
     * <pre>
     * Arbitrary name-value pairs, as reported in custom attributes or in a
     * &lt;properties&gt; element within this &lt;testsuite&gt;. Multiple properties are
     * allowed with the same key. Properties will be returned in lexicographical
     * order by key.
     * </pre>
     *
     * <code>repeated .google.devtools.resultstore.v2.Property properties = 7;</code>
     */
    public com.google.devtools.resultstore.v2.Property.Builder addPropertiesBuilder(
        int index) {
      return getPropertiesFieldBuilder().addBuilder(
          index, com.google.devtools.resultstore.v2.Property.getDefaultInstance());
    }
    /**
     * <pre>
     * Arbitrary name-value pairs, as reported in custom attributes or in a
     * &lt;properties&gt; element within this &lt;testsuite&gt;. Multiple properties are
     * allowed with the same key. Properties will be returned in lexicographical
     * order by key.
     * </pre>
     *
     * <code>repeated .google.devtools.resultstore.v2.Property properties = 7;</code>
     */
    public java.util.List<com.google.devtools.resultstore.v2.Property.Builder> 
         getPropertiesBuilderList() {
      return getPropertiesFieldBuilder().getBuilderList();
    }
    private com.google.protobuf.RepeatedFieldBuilderV3<
        com.google.devtools.resultstore.v2.Property, com.google.devtools.resultstore.v2.Property.Builder, com.google.devtools.resultstore.v2.PropertyOrBuilder> 
        getPropertiesFieldBuilder() {
      if (propertiesBuilder_ == null) {
        propertiesBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<
            com.google.devtools.resultstore.v2.Property, com.google.devtools.resultstore.v2.Property.Builder, com.google.devtools.resultstore.v2.PropertyOrBuilder>(
                properties_,
                ((bitField0_ & 0x00000008) != 0),
                getParentForChildren(),
                isClean());
        properties_ = null;
      }
      return propertiesBuilder_;
    }

    private java.util.List<com.google.devtools.resultstore.v2.File> files_ =
      java.util.Collections.emptyList();
    private void ensureFilesIsMutable() {
      if (!((bitField0_ & 0x00000010) != 0)) {
        files_ = new java.util.ArrayList<com.google.devtools.resultstore.v2.File>(files_);
        bitField0_ |= 0x00000010;
       }
    }

    private com.google.protobuf.RepeatedFieldBuilderV3<
        com.google.devtools.resultstore.v2.File, com.google.devtools.resultstore.v2.File.Builder, com.google.devtools.resultstore.v2.FileOrBuilder> filesBuilder_;

    /**
     * <pre>
     * Files produced by this test suite, as reported by undeclared output
     * annotations.
     * The file IDs must be unique within this list. Duplicate file IDs will
     * result in an error. Files will be returned in lexicographical order by ID.
     * </pre>
     *
     * <code>repeated .google.devtools.resultstore.v2.File files = 8;</code>
     */
    public java.util.List<com.google.devtools.resultstore.v2.File> getFilesList() {
      if (filesBuilder_ == null) {
        return java.util.Collections.unmodifiableList(files_);
      } else {
        return filesBuilder_.getMessageList();
      }
    }
    /**
     * <pre>
     * Files produced by this test suite, as reported by undeclared output
     * annotations.
     * The file IDs must be unique within this list. Duplicate file IDs will
     * result in an error. Files will be returned in lexicographical order by ID.
     * </pre>
     *
     * <code>repeated .google.devtools.resultstore.v2.File files = 8;</code>
     */
    public int getFilesCount() {
      if (filesBuilder_ == null) {
        return files_.size();
      } else {
        return filesBuilder_.getCount();
      }
    }
    /**
     * <pre>
     * Files produced by this test suite, as reported by undeclared output
     * annotations.
     * The file IDs must be unique within this list. Duplicate file IDs will
     * result in an error. Files will be returned in lexicographical order by ID.
     * </pre>
     *
     * <code>repeated .google.devtools.resultstore.v2.File files = 8;</code>
     */
    public com.google.devtools.resultstore.v2.File getFiles(int index) {
      if (filesBuilder_ == null) {
        return files_.get(index);
      } else {
        return filesBuilder_.getMessage(index);
      }
    }
    /**
     * <pre>
     * Files produced by this test suite, as reported by undeclared output
     * annotations.
     * The file IDs must be unique within this list. Duplicate file IDs will
     * result in an error. Files will be returned in lexicographical order by ID.
     * </pre>
     *
     * <code>repeated .google.devtools.resultstore.v2.File files = 8;</code>
     */
    public Builder setFiles(
        int index, com.google.devtools.resultstore.v2.File value) {
      if (filesBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureFilesIsMutable();
        files_.set(index, value);
        onChanged();
      } else {
        filesBuilder_.setMessage(index, value);
      }
      return this;
    }
    /**
     * <pre>
     * Files produced by this test suite, as reported by undeclared output
     * annotations.
     * The file IDs must be unique within this list. Duplicate file IDs will
     * result in an error. Files will be returned in lexicographical order by ID.
     * </pre>
     *
     * <code>repeated .google.devtools.resultstore.v2.File files = 8;</code>
     */
    public Builder setFiles(
        int index, com.google.devtools.resultstore.v2.File.Builder builderForValue) {
      if (filesBuilder_ == null) {
        ensureFilesIsMutable();
        files_.set(index, builderForValue.build());
        onChanged();
      } else {
        filesBuilder_.setMessage(index, builderForValue.build());
      }
      return this;
    }
    /**
     * <pre>
     * Files produced by this test suite, as reported by undeclared output
     * annotations.
     * The file IDs must be unique within this list. Duplicate file IDs will
     * result in an error. Files will be returned in lexicographical order by ID.
     * </pre>
     *
     * <code>repeated .google.devtools.resultstore.v2.File files = 8;</code>
     */
    public Builder addFiles(com.google.devtools.resultstore.v2.File value) {
      if (filesBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureFilesIsMutable();
        files_.add(value);
        onChanged();
      } else {
        filesBuilder_.addMessage(value);
      }
      return this;
    }
    /**
     * <pre>
     * Files produced by this test suite, as reported by undeclared output
     * annotations.
     * The file IDs must be unique within this list. Duplicate file IDs will
     * result in an error. Files will be returned in lexicographical order by ID.
     * </pre>
     *
     * <code>repeated .google.devtools.resultstore.v2.File files = 8;</code>
     */
    public Builder addFiles(
        int index, com.google.devtools.resultstore.v2.File value) {
      if (filesBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureFilesIsMutable();
        files_.add(index, value);
        onChanged();
      } else {
        filesBuilder_.addMessage(index, value);
      }
      return this;
    }
    /**
     * <pre>
     * Files produced by this test suite, as reported by undeclared output
     * annotations.
     * The file IDs must be unique within this list. Duplicate file IDs will
     * result in an error. Files will be returned in lexicographical order by ID.
     * </pre>
     *
     * <code>repeated .google.devtools.resultstore.v2.File files = 8;</code>
     */
    public Builder addFiles(
        com.google.devtools.resultstore.v2.File.Builder builderForValue) {
      if (filesBuilder_ == null) {
        ensureFilesIsMutable();
        files_.add(builderForValue.build());
        onChanged();
      } else {
        filesBuilder_.addMessage(builderForValue.build());
      }
      return this;
    }
    /**
     * <pre>
     * Files produced by this test suite, as reported by undeclared output
     * annotations.
     * The file IDs must be unique within this list. Duplicate file IDs will
     * result in an error. Files will be returned in lexicographical order by ID.
     * </pre>
     *
     * <code>repeated .google.devtools.resultstore.v2.File files = 8;</code>
     */
    public Builder addFiles(
        int index, com.google.devtools.resultstore.v2.File.Builder builderForValue) {
      if (filesBuilder_ == null) {
        ensureFilesIsMutable();
        files_.add(index, builderForValue.build());
        onChanged();
      } else {
        filesBuilder_.addMessage(index, builderForValue.build());
      }
      return this;
    }
    /**
     * <pre>
     * Files produced by this test suite, as reported by undeclared output
     * annotations.
     * The file IDs must be unique within this list. Duplicate file IDs will
     * result in an error. Files will be returned in lexicographical order by ID.
     * </pre>
     *
     * <code>repeated .google.devtools.resultstore.v2.File files = 8;</code>
     */
    public Builder addAllFiles(
        java.lang.Iterable<? extends com.google.devtools.resultstore.v2.File> values) {
      if (filesBuilder_ == null) {
        ensureFilesIsMutable();
        com.google.protobuf.AbstractMessageLite.Builder.addAll(
            values, files_);
        onChanged();
      } else {
        filesBuilder_.addAllMessages(values);
      }
      return this;
    }
    /**
     * <pre>
     * Files produced by this test suite, as reported by undeclared output
     * annotations.
     * The file IDs must be unique within this list. Duplicate file IDs will
     * result in an error. Files will be returned in lexicographical order by ID.
     * </pre>
     *
     * <code>repeated .google.devtools.resultstore.v2.File files = 8;</code>
     */
    public Builder clearFiles() {
      if (filesBuilder_ == null) {
        files_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000010);
        onChanged();
      } else {
        filesBuilder_.clear();
      }
      return this;
    }
    /**
     * <pre>
     * Files produced by this test suite, as reported by undeclared output
     * annotations.
     * The file IDs must be unique within this list. Duplicate file IDs will
     * result in an error. Files will be returned in lexicographical order by ID.
     * </pre>
     *
     * <code>repeated .google.devtools.resultstore.v2.File files = 8;</code>
     */
    public Builder removeFiles(int index) {
      if (filesBuilder_ == null) {
        ensureFilesIsMutable();
        files_.remove(index);
        onChanged();
      } else {
        filesBuilder_.remove(index);
      }
      return this;
    }
    /**
     * <pre>
     * Files produced by this test suite, as reported by undeclared output
     * annotations.
     * The file IDs must be unique within this list. Duplicate file IDs will
     * result in an error. Files will be returned in lexicographical order by ID.
     * </pre>
     *
     * <code>repeated .google.devtools.resultstore.v2.File files = 8;</code>
     */
    public com.google.devtools.resultstore.v2.File.Builder getFilesBuilder(
        int index) {
      return getFilesFieldBuilder().getBuilder(index);
    }
    /**
     * <pre>
     * Files produced by this test suite, as reported by undeclared output
     * annotations.
     * The file IDs must be unique within this list. Duplicate file IDs will
     * result in an error. Files will be returned in lexicographical order by ID.
     * </pre>
     *
     * <code>repeated .google.devtools.resultstore.v2.File files = 8;</code>
     */
    public com.google.devtools.resultstore.v2.FileOrBuilder getFilesOrBuilder(
        int index) {
      if (filesBuilder_ == null) {
        return files_.get(index);  } else {
        return filesBuilder_.getMessageOrBuilder(index);
      }
    }
    /**
     * <pre>
     * Files produced by this test suite, as reported by undeclared output
     * annotations.
     * The file IDs must be unique within this list. Duplicate file IDs will
     * result in an error. Files will be returned in lexicographical order by ID.
     * </pre>
     *
     * <code>repeated .google.devtools.resultstore.v2.File files = 8;</code>
     */
    public java.util.List<? extends com.google.devtools.resultstore.v2.FileOrBuilder> 
         getFilesOrBuilderList() {
      if (filesBuilder_ != null) {
        return filesBuilder_.getMessageOrBuilderList();
      } else {
        return java.util.Collections.unmodifiableList(files_);
      }
    }
    /**
     * <pre>
     * Files produced by this test suite, as reported by undeclared output
     * annotations.
     * The file IDs must be unique within this list. Duplicate file IDs will
     * result in an error. Files will be returned in lexicographical order by ID.
     * </pre>
     *
     * <code>repeated .google.devtools.resultstore.v2.File files = 8;</code>
     */
    public com.google.devtools.resultstore.v2.File.Builder addFilesBuilder() {
      return getFilesFieldBuilder().addBuilder(
          com.google.devtools.resultstore.v2.File.getDefaultInstance());
    }
    /**
     * <pre>
     * Files produced by this test suite, as reported by undeclared output
     * annotations.
     * The file IDs must be unique within this list. Duplicate file IDs will
     * result in an error. Files will be returned in lexicographical order by ID.
     * </pre>
     *
     * <code>repeated .google.devtools.resultstore.v2.File files = 8;</code>
     */
    public com.google.devtools.resultstore.v2.File.Builder addFilesBuilder(
        int index) {
      return getFilesFieldBuilder().addBuilder(
          index, com.google.devtools.resultstore.v2.File.getDefaultInstance());
    }
    /**
     * <pre>
     * Files produced by this test suite, as reported by undeclared output
     * annotations.
     * The file IDs must be unique within this list. Duplicate file IDs will
     * result in an error. Files will be returned in lexicographical order by ID.
     * </pre>
     *
     * <code>repeated .google.devtools.resultstore.v2.File files = 8;</code>
     */
    public java.util.List<com.google.devtools.resultstore.v2.File.Builder> 
         getFilesBuilderList() {
      return getFilesFieldBuilder().getBuilderList();
    }
    private com.google.protobuf.RepeatedFieldBuilderV3<
        com.google.devtools.resultstore.v2.File, com.google.devtools.resultstore.v2.File.Builder, com.google.devtools.resultstore.v2.FileOrBuilder> 
        getFilesFieldBuilder() {
      if (filesBuilder_ == null) {
        filesBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<
            com.google.devtools.resultstore.v2.File, com.google.devtools.resultstore.v2.File.Builder, com.google.devtools.resultstore.v2.FileOrBuilder>(
                files_,
                ((bitField0_ & 0x00000010) != 0),
                getParentForChildren(),
                isClean());
        files_ = null;
      }
      return filesBuilder_;
    }
    @java.lang.Override
    public final Builder setUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return super.setUnknownFields(unknownFields);
    }

    @java.lang.Override
    public final Builder mergeUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return super.mergeUnknownFields(unknownFields);
    }


    // @@protoc_insertion_point(builder_scope:google.devtools.resultstore.v2.TestSuite)
  }

  // @@protoc_insertion_point(class_scope:google.devtools.resultstore.v2.TestSuite)
  private static final com.google.devtools.resultstore.v2.TestSuite DEFAULT_INSTANCE;
  static {
    DEFAULT_INSTANCE = new com.google.devtools.resultstore.v2.TestSuite();
  }

  public static com.google.devtools.resultstore.v2.TestSuite getDefaultInstance() {
    return DEFAULT_INSTANCE;
  }

  private static final com.google.protobuf.Parser<TestSuite>
      PARSER = new com.google.protobuf.AbstractParser<TestSuite>() {
    @java.lang.Override
    public TestSuite parsePartialFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return new TestSuite(input, extensionRegistry);
    }
  };

  public static com.google.protobuf.Parser<TestSuite> parser() {
    return PARSER;
  }

  @java.lang.Override
  public com.google.protobuf.Parser<TestSuite> getParserForType() {
    return PARSER;
  }

  @java.lang.Override
  public com.google.devtools.resultstore.v2.TestSuite getDefaultInstanceForType() {
    return DEFAULT_INSTANCE;
  }

}

