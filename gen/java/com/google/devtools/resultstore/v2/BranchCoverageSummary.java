// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: google/devtools/resultstore/v2/coverage_summary.proto

package com.google.devtools.resultstore.v2;

/**
 * <pre>
 * Summary of branch coverage
 * A branch may be:
 *  * not executed.  Counted only in total.
 *  * executed but not taken.  Appears in total and executed.
 *  * executed and taken.  Appears in all three fields.
 * </pre>
 *
 * Protobuf type {@code google.devtools.resultstore.v2.BranchCoverageSummary}
 */
public final class BranchCoverageSummary extends
    com.google.protobuf.GeneratedMessageV3 implements
    // @@protoc_insertion_point(message_implements:google.devtools.resultstore.v2.BranchCoverageSummary)
    BranchCoverageSummaryOrBuilder {
private static final long serialVersionUID = 0L;
  // Use BranchCoverageSummary.newBuilder() to construct.
  private BranchCoverageSummary(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
    super(builder);
  }
  private BranchCoverageSummary() {
  }

  @java.lang.Override
  @SuppressWarnings({"unused"})
  protected java.lang.Object newInstance(
      UnusedPrivateParameter unused) {
    return new BranchCoverageSummary();
  }

  @java.lang.Override
  public final com.google.protobuf.UnknownFieldSet
  getUnknownFields() {
    return this.unknownFields;
  }
  public static final com.google.protobuf.Descriptors.Descriptor
      getDescriptor() {
    return com.google.devtools.resultstore.v2.CoverageSummaryProto.internal_static_google_devtools_resultstore_v2_BranchCoverageSummary_descriptor;
  }

  @java.lang.Override
  protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internalGetFieldAccessorTable() {
    return com.google.devtools.resultstore.v2.CoverageSummaryProto.internal_static_google_devtools_resultstore_v2_BranchCoverageSummary_fieldAccessorTable
        .ensureFieldAccessorsInitialized(
            com.google.devtools.resultstore.v2.BranchCoverageSummary.class, com.google.devtools.resultstore.v2.BranchCoverageSummary.Builder.class);
  }

  public static final int TOTAL_BRANCH_COUNT_FIELD_NUMBER = 1;
  private int totalBranchCount_ = 0;
  /**
   * <pre>
   * The number of branches present in the file.
   * </pre>
   *
   * <code>int32 total_branch_count = 1;</code>
   * @return The totalBranchCount.
   */
  @java.lang.Override
  public int getTotalBranchCount() {
    return totalBranchCount_;
  }

  public static final int EXECUTED_BRANCH_COUNT_FIELD_NUMBER = 2;
  private int executedBranchCount_ = 0;
  /**
   * <pre>
   * The number of branches executed out of the total branches present.
   * A branch is executed when its condition is evaluated.
   * This is &lt;= total_branch_count as not all branches are executed.
   * </pre>
   *
   * <code>int32 executed_branch_count = 2;</code>
   * @return The executedBranchCount.
   */
  @java.lang.Override
  public int getExecutedBranchCount() {
    return executedBranchCount_;
  }

  public static final int TAKEN_BRANCH_COUNT_FIELD_NUMBER = 3;
  private int takenBranchCount_ = 0;
  /**
   * <pre>
   * The number of branches taken out of the total branches executed.
   * A branch is taken when its condition is satisfied.
   * This is &lt;= executed_branch_count as not all executed branches are taken.
   * </pre>
   *
   * <code>int32 taken_branch_count = 3;</code>
   * @return The takenBranchCount.
   */
  @java.lang.Override
  public int getTakenBranchCount() {
    return takenBranchCount_;
  }

  private byte memoizedIsInitialized = -1;
  @java.lang.Override
  public final boolean isInitialized() {
    byte isInitialized = memoizedIsInitialized;
    if (isInitialized == 1) return true;
    if (isInitialized == 0) return false;

    memoizedIsInitialized = 1;
    return true;
  }

  @java.lang.Override
  public void writeTo(com.google.protobuf.CodedOutputStream output)
                      throws java.io.IOException {
    if (totalBranchCount_ != 0) {
      output.writeInt32(1, totalBranchCount_);
    }
    if (executedBranchCount_ != 0) {
      output.writeInt32(2, executedBranchCount_);
    }
    if (takenBranchCount_ != 0) {
      output.writeInt32(3, takenBranchCount_);
    }
    getUnknownFields().writeTo(output);
  }

  @java.lang.Override
  public int getSerializedSize() {
    int size = memoizedSize;
    if (size != -1) return size;

    size = 0;
    if (totalBranchCount_ != 0) {
      size += com.google.protobuf.CodedOutputStream
        .computeInt32Size(1, totalBranchCount_);
    }
    if (executedBranchCount_ != 0) {
      size += com.google.protobuf.CodedOutputStream
        .computeInt32Size(2, executedBranchCount_);
    }
    if (takenBranchCount_ != 0) {
      size += com.google.protobuf.CodedOutputStream
        .computeInt32Size(3, takenBranchCount_);
    }
    size += getUnknownFields().getSerializedSize();
    memoizedSize = size;
    return size;
  }

  @java.lang.Override
  public boolean equals(final java.lang.Object obj) {
    if (obj == this) {
     return true;
    }
    if (!(obj instanceof com.google.devtools.resultstore.v2.BranchCoverageSummary)) {
      return super.equals(obj);
    }
    com.google.devtools.resultstore.v2.BranchCoverageSummary other = (com.google.devtools.resultstore.v2.BranchCoverageSummary) obj;

    if (getTotalBranchCount()
        != other.getTotalBranchCount()) return false;
    if (getExecutedBranchCount()
        != other.getExecutedBranchCount()) return false;
    if (getTakenBranchCount()
        != other.getTakenBranchCount()) return false;
    if (!getUnknownFields().equals(other.getUnknownFields())) return false;
    return true;
  }

  @java.lang.Override
  public int hashCode() {
    if (memoizedHashCode != 0) {
      return memoizedHashCode;
    }
    int hash = 41;
    hash = (19 * hash) + getDescriptor().hashCode();
    hash = (37 * hash) + TOTAL_BRANCH_COUNT_FIELD_NUMBER;
    hash = (53 * hash) + getTotalBranchCount();
    hash = (37 * hash) + EXECUTED_BRANCH_COUNT_FIELD_NUMBER;
    hash = (53 * hash) + getExecutedBranchCount();
    hash = (37 * hash) + TAKEN_BRANCH_COUNT_FIELD_NUMBER;
    hash = (53 * hash) + getTakenBranchCount();
    hash = (29 * hash) + getUnknownFields().hashCode();
    memoizedHashCode = hash;
    return hash;
  }

  public static com.google.devtools.resultstore.v2.BranchCoverageSummary parseFrom(
      java.nio.ByteBuffer data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static com.google.devtools.resultstore.v2.BranchCoverageSummary parseFrom(
      java.nio.ByteBuffer data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static com.google.devtools.resultstore.v2.BranchCoverageSummary parseFrom(
      com.google.protobuf.ByteString data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static com.google.devtools.resultstore.v2.BranchCoverageSummary parseFrom(
      com.google.protobuf.ByteString data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static com.google.devtools.resultstore.v2.BranchCoverageSummary parseFrom(byte[] data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static com.google.devtools.resultstore.v2.BranchCoverageSummary parseFrom(
      byte[] data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static com.google.devtools.resultstore.v2.BranchCoverageSummary parseFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input);
  }
  public static com.google.devtools.resultstore.v2.BranchCoverageSummary parseFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input, extensionRegistry);
  }
  public static com.google.devtools.resultstore.v2.BranchCoverageSummary parseDelimitedFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseDelimitedWithIOException(PARSER, input);
  }
  public static com.google.devtools.resultstore.v2.BranchCoverageSummary parseDelimitedFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
  }
  public static com.google.devtools.resultstore.v2.BranchCoverageSummary parseFrom(
      com.google.protobuf.CodedInputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input);
  }
  public static com.google.devtools.resultstore.v2.BranchCoverageSummary parseFrom(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input, extensionRegistry);
  }

  @java.lang.Override
  public Builder newBuilderForType() { return newBuilder(); }
  public static Builder newBuilder() {
    return DEFAULT_INSTANCE.toBuilder();
  }
  public static Builder newBuilder(com.google.devtools.resultstore.v2.BranchCoverageSummary prototype) {
    return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
  }
  @java.lang.Override
  public Builder toBuilder() {
    return this == DEFAULT_INSTANCE
        ? new Builder() : new Builder().mergeFrom(this);
  }

  @java.lang.Override
  protected Builder newBuilderForType(
      com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
    Builder builder = new Builder(parent);
    return builder;
  }
  /**
   * <pre>
   * Summary of branch coverage
   * A branch may be:
   *  * not executed.  Counted only in total.
   *  * executed but not taken.  Appears in total and executed.
   *  * executed and taken.  Appears in all three fields.
   * </pre>
   *
   * Protobuf type {@code google.devtools.resultstore.v2.BranchCoverageSummary}
   */
  public static final class Builder extends
      com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
      // @@protoc_insertion_point(builder_implements:google.devtools.resultstore.v2.BranchCoverageSummary)
      com.google.devtools.resultstore.v2.BranchCoverageSummaryOrBuilder {
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.google.devtools.resultstore.v2.CoverageSummaryProto.internal_static_google_devtools_resultstore_v2_BranchCoverageSummary_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.google.devtools.resultstore.v2.CoverageSummaryProto.internal_static_google_devtools_resultstore_v2_BranchCoverageSummary_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.google.devtools.resultstore.v2.BranchCoverageSummary.class, com.google.devtools.resultstore.v2.BranchCoverageSummary.Builder.class);
    }

    // Construct using com.google.devtools.resultstore.v2.BranchCoverageSummary.newBuilder()
    private Builder() {

    }

    private Builder(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      super(parent);

    }
    @java.lang.Override
    public Builder clear() {
      super.clear();
      bitField0_ = 0;
      totalBranchCount_ = 0;
      executedBranchCount_ = 0;
      takenBranchCount_ = 0;
      return this;
    }

    @java.lang.Override
    public com.google.protobuf.Descriptors.Descriptor
        getDescriptorForType() {
      return com.google.devtools.resultstore.v2.CoverageSummaryProto.internal_static_google_devtools_resultstore_v2_BranchCoverageSummary_descriptor;
    }

    @java.lang.Override
    public com.google.devtools.resultstore.v2.BranchCoverageSummary getDefaultInstanceForType() {
      return com.google.devtools.resultstore.v2.BranchCoverageSummary.getDefaultInstance();
    }

    @java.lang.Override
    public com.google.devtools.resultstore.v2.BranchCoverageSummary build() {
      com.google.devtools.resultstore.v2.BranchCoverageSummary result = buildPartial();
      if (!result.isInitialized()) {
        throw newUninitializedMessageException(result);
      }
      return result;
    }

    @java.lang.Override
    public com.google.devtools.resultstore.v2.BranchCoverageSummary buildPartial() {
      com.google.devtools.resultstore.v2.BranchCoverageSummary result = new com.google.devtools.resultstore.v2.BranchCoverageSummary(this);
      if (bitField0_ != 0) { buildPartial0(result); }
      onBuilt();
      return result;
    }

    private void buildPartial0(com.google.devtools.resultstore.v2.BranchCoverageSummary result) {
      int from_bitField0_ = bitField0_;
      if (((from_bitField0_ & 0x00000001) != 0)) {
        result.totalBranchCount_ = totalBranchCount_;
      }
      if (((from_bitField0_ & 0x00000002) != 0)) {
        result.executedBranchCount_ = executedBranchCount_;
      }
      if (((from_bitField0_ & 0x00000004) != 0)) {
        result.takenBranchCount_ = takenBranchCount_;
      }
    }

    @java.lang.Override
    public Builder clone() {
      return super.clone();
    }
    @java.lang.Override
    public Builder setField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        java.lang.Object value) {
      return super.setField(field, value);
    }
    @java.lang.Override
    public Builder clearField(
        com.google.protobuf.Descriptors.FieldDescriptor field) {
      return super.clearField(field);
    }
    @java.lang.Override
    public Builder clearOneof(
        com.google.protobuf.Descriptors.OneofDescriptor oneof) {
      return super.clearOneof(oneof);
    }
    @java.lang.Override
    public Builder setRepeatedField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        int index, java.lang.Object value) {
      return super.setRepeatedField(field, index, value);
    }
    @java.lang.Override
    public Builder addRepeatedField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        java.lang.Object value) {
      return super.addRepeatedField(field, value);
    }
    @java.lang.Override
    public Builder mergeFrom(com.google.protobuf.Message other) {
      if (other instanceof com.google.devtools.resultstore.v2.BranchCoverageSummary) {
        return mergeFrom((com.google.devtools.resultstore.v2.BranchCoverageSummary)other);
      } else {
        super.mergeFrom(other);
        return this;
      }
    }

    public Builder mergeFrom(com.google.devtools.resultstore.v2.BranchCoverageSummary other) {
      if (other == com.google.devtools.resultstore.v2.BranchCoverageSummary.getDefaultInstance()) return this;
      if (other.getTotalBranchCount() != 0) {
        setTotalBranchCount(other.getTotalBranchCount());
      }
      if (other.getExecutedBranchCount() != 0) {
        setExecutedBranchCount(other.getExecutedBranchCount());
      }
      if (other.getTakenBranchCount() != 0) {
        setTakenBranchCount(other.getTakenBranchCount());
      }
      this.mergeUnknownFields(other.getUnknownFields());
      onChanged();
      return this;
    }

    @java.lang.Override
    public final boolean isInitialized() {
      return true;
    }

    @java.lang.Override
    public Builder mergeFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 8: {
              totalBranchCount_ = input.readInt32();
              bitField0_ |= 0x00000001;
              break;
            } // case 8
            case 16: {
              executedBranchCount_ = input.readInt32();
              bitField0_ |= 0x00000002;
              break;
            } // case 16
            case 24: {
              takenBranchCount_ = input.readInt32();
              bitField0_ |= 0x00000004;
              break;
            } // case 24
            default: {
              if (!super.parseUnknownField(input, extensionRegistry, tag)) {
                done = true; // was an endgroup tag
              }
              break;
            } // default:
          } // switch (tag)
        } // while (!done)
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.unwrapIOException();
      } finally {
        onChanged();
      } // finally
      return this;
    }
    private int bitField0_;

    private int totalBranchCount_ ;
    /**
     * <pre>
     * The number of branches present in the file.
     * </pre>
     *
     * <code>int32 total_branch_count = 1;</code>
     * @return The totalBranchCount.
     */
    @java.lang.Override
    public int getTotalBranchCount() {
      return totalBranchCount_;
    }
    /**
     * <pre>
     * The number of branches present in the file.
     * </pre>
     *
     * <code>int32 total_branch_count = 1;</code>
     * @param value The totalBranchCount to set.
     * @return This builder for chaining.
     */
    public Builder setTotalBranchCount(int value) {
      
      totalBranchCount_ = value;
      bitField0_ |= 0x00000001;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * The number of branches present in the file.
     * </pre>
     *
     * <code>int32 total_branch_count = 1;</code>
     * @return This builder for chaining.
     */
    public Builder clearTotalBranchCount() {
      bitField0_ = (bitField0_ & ~0x00000001);
      totalBranchCount_ = 0;
      onChanged();
      return this;
    }

    private int executedBranchCount_ ;
    /**
     * <pre>
     * The number of branches executed out of the total branches present.
     * A branch is executed when its condition is evaluated.
     * This is &lt;= total_branch_count as not all branches are executed.
     * </pre>
     *
     * <code>int32 executed_branch_count = 2;</code>
     * @return The executedBranchCount.
     */
    @java.lang.Override
    public int getExecutedBranchCount() {
      return executedBranchCount_;
    }
    /**
     * <pre>
     * The number of branches executed out of the total branches present.
     * A branch is executed when its condition is evaluated.
     * This is &lt;= total_branch_count as not all branches are executed.
     * </pre>
     *
     * <code>int32 executed_branch_count = 2;</code>
     * @param value The executedBranchCount to set.
     * @return This builder for chaining.
     */
    public Builder setExecutedBranchCount(int value) {
      
      executedBranchCount_ = value;
      bitField0_ |= 0x00000002;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * The number of branches executed out of the total branches present.
     * A branch is executed when its condition is evaluated.
     * This is &lt;= total_branch_count as not all branches are executed.
     * </pre>
     *
     * <code>int32 executed_branch_count = 2;</code>
     * @return This builder for chaining.
     */
    public Builder clearExecutedBranchCount() {
      bitField0_ = (bitField0_ & ~0x00000002);
      executedBranchCount_ = 0;
      onChanged();
      return this;
    }

    private int takenBranchCount_ ;
    /**
     * <pre>
     * The number of branches taken out of the total branches executed.
     * A branch is taken when its condition is satisfied.
     * This is &lt;= executed_branch_count as not all executed branches are taken.
     * </pre>
     *
     * <code>int32 taken_branch_count = 3;</code>
     * @return The takenBranchCount.
     */
    @java.lang.Override
    public int getTakenBranchCount() {
      return takenBranchCount_;
    }
    /**
     * <pre>
     * The number of branches taken out of the total branches executed.
     * A branch is taken when its condition is satisfied.
     * This is &lt;= executed_branch_count as not all executed branches are taken.
     * </pre>
     *
     * <code>int32 taken_branch_count = 3;</code>
     * @param value The takenBranchCount to set.
     * @return This builder for chaining.
     */
    public Builder setTakenBranchCount(int value) {
      
      takenBranchCount_ = value;
      bitField0_ |= 0x00000004;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * The number of branches taken out of the total branches executed.
     * A branch is taken when its condition is satisfied.
     * This is &lt;= executed_branch_count as not all executed branches are taken.
     * </pre>
     *
     * <code>int32 taken_branch_count = 3;</code>
     * @return This builder for chaining.
     */
    public Builder clearTakenBranchCount() {
      bitField0_ = (bitField0_ & ~0x00000004);
      takenBranchCount_ = 0;
      onChanged();
      return this;
    }
    @java.lang.Override
    public final Builder setUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return super.setUnknownFields(unknownFields);
    }

    @java.lang.Override
    public final Builder mergeUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return super.mergeUnknownFields(unknownFields);
    }


    // @@protoc_insertion_point(builder_scope:google.devtools.resultstore.v2.BranchCoverageSummary)
  }

  // @@protoc_insertion_point(class_scope:google.devtools.resultstore.v2.BranchCoverageSummary)
  private static final com.google.devtools.resultstore.v2.BranchCoverageSummary DEFAULT_INSTANCE;
  static {
    DEFAULT_INSTANCE = new com.google.devtools.resultstore.v2.BranchCoverageSummary();
  }

  public static com.google.devtools.resultstore.v2.BranchCoverageSummary getDefaultInstance() {
    return DEFAULT_INSTANCE;
  }

  private static final com.google.protobuf.Parser<BranchCoverageSummary>
      PARSER = new com.google.protobuf.AbstractParser<BranchCoverageSummary>() {
    @java.lang.Override
    public BranchCoverageSummary parsePartialFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      Builder builder = newBuilder();
      try {
        builder.mergeFrom(input, extensionRegistry);
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(builder.buildPartial());
      } catch (com.google.protobuf.UninitializedMessageException e) {
        throw e.asInvalidProtocolBufferException().setUnfinishedMessage(builder.buildPartial());
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(e)
            .setUnfinishedMessage(builder.buildPartial());
      }
      return builder.buildPartial();
    }
  };

  public static com.google.protobuf.Parser<BranchCoverageSummary> parser() {
    return PARSER;
  }

  @java.lang.Override
  public com.google.protobuf.Parser<BranchCoverageSummary> getParserForType() {
    return PARSER;
  }

  @java.lang.Override
  public com.google.devtools.resultstore.v2.BranchCoverageSummary getDefaultInstanceForType() {
    return DEFAULT_INSTANCE;
  }

}

