// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: google/devtools/resultstore/v2/file.proto

package com.google.devtools.resultstore.v2;

/**
 * <pre>
 * The metadata for a file or an archive file entry.
 * </pre>
 *
 * Protobuf type {@code google.devtools.resultstore.v2.File}
 */
public final class File extends
    com.google.protobuf.GeneratedMessageV3 implements
    // @@protoc_insertion_point(message_implements:google.devtools.resultstore.v2.File)
    FileOrBuilder {
private static final long serialVersionUID = 0L;
  // Use File.newBuilder() to construct.
  private File(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
    super(builder);
  }
  private File() {
    uid_ = "";
    uri_ = "";
    contentType_ = "";
    contentViewer_ = "";
    description_ = "";
    digest_ = "";
    hashType_ = 0;
  }

  @java.lang.Override
  @SuppressWarnings({"unused"})
  protected java.lang.Object newInstance(
      UnusedPrivateParameter unused) {
    return new File();
  }

  @java.lang.Override
  public final com.google.protobuf.UnknownFieldSet
  getUnknownFields() {
    return this.unknownFields;
  }
  public static final com.google.protobuf.Descriptors.Descriptor
      getDescriptor() {
    return com.google.devtools.resultstore.v2.FileProto.internal_static_google_devtools_resultstore_v2_File_descriptor;
  }

  @java.lang.Override
  protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internalGetFieldAccessorTable() {
    return com.google.devtools.resultstore.v2.FileProto.internal_static_google_devtools_resultstore_v2_File_fieldAccessorTable
        .ensureFieldAccessorsInitialized(
            com.google.devtools.resultstore.v2.File.class, com.google.devtools.resultstore.v2.File.Builder.class);
  }

  /**
   * <pre>
   * If known, the hash function used to compute this digest.
   * </pre>
   *
   * Protobuf enum {@code google.devtools.resultstore.v2.File.HashType}
   */
  public enum HashType
      implements com.google.protobuf.ProtocolMessageEnum {
    /**
     * <pre>
     * Unknown
     * </pre>
     *
     * <code>HASH_TYPE_UNSPECIFIED = 0;</code>
     */
    HASH_TYPE_UNSPECIFIED(0),
    /**
     * <pre>
     * MD5
     * </pre>
     *
     * <code>MD5 = 1;</code>
     */
    MD5(1),
    /**
     * <pre>
     * SHA-1
     * </pre>
     *
     * <code>SHA1 = 2;</code>
     */
    SHA1(2),
    /**
     * <pre>
     * SHA-256
     * </pre>
     *
     * <code>SHA256 = 3;</code>
     */
    SHA256(3),
    UNRECOGNIZED(-1),
    ;

    /**
     * <pre>
     * Unknown
     * </pre>
     *
     * <code>HASH_TYPE_UNSPECIFIED = 0;</code>
     */
    public static final int HASH_TYPE_UNSPECIFIED_VALUE = 0;
    /**
     * <pre>
     * MD5
     * </pre>
     *
     * <code>MD5 = 1;</code>
     */
    public static final int MD5_VALUE = 1;
    /**
     * <pre>
     * SHA-1
     * </pre>
     *
     * <code>SHA1 = 2;</code>
     */
    public static final int SHA1_VALUE = 2;
    /**
     * <pre>
     * SHA-256
     * </pre>
     *
     * <code>SHA256 = 3;</code>
     */
    public static final int SHA256_VALUE = 3;


    public final int getNumber() {
      if (this == UNRECOGNIZED) {
        throw new java.lang.IllegalArgumentException(
            "Can't get the number of an unknown enum value.");
      }
      return value;
    }

    /**
     * @param value The numeric wire value of the corresponding enum entry.
     * @return The enum associated with the given numeric wire value.
     * @deprecated Use {@link #forNumber(int)} instead.
     */
    @java.lang.Deprecated
    public static HashType valueOf(int value) {
      return forNumber(value);
    }

    /**
     * @param value The numeric wire value of the corresponding enum entry.
     * @return The enum associated with the given numeric wire value.
     */
    public static HashType forNumber(int value) {
      switch (value) {
        case 0: return HASH_TYPE_UNSPECIFIED;
        case 1: return MD5;
        case 2: return SHA1;
        case 3: return SHA256;
        default: return null;
      }
    }

    public static com.google.protobuf.Internal.EnumLiteMap<HashType>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static final com.google.protobuf.Internal.EnumLiteMap<
        HashType> internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<HashType>() {
            public HashType findValueByNumber(int number) {
              return HashType.forNumber(number);
            }
          };

    public final com.google.protobuf.Descriptors.EnumValueDescriptor
        getValueDescriptor() {
      if (this == UNRECOGNIZED) {
        throw new java.lang.IllegalStateException(
            "Can't get the descriptor of an unrecognized enum value.");
      }
      return getDescriptor().getValues().get(ordinal());
    }
    public final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptorForType() {
      return getDescriptor();
    }
    public static final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptor() {
      return com.google.devtools.resultstore.v2.File.getDescriptor().getEnumTypes().get(0);
    }

    private static final HashType[] VALUES = values();

    public static HashType valueOf(
        com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
      if (desc.getType() != getDescriptor()) {
        throw new java.lang.IllegalArgumentException(
          "EnumValueDescriptor is not for this type.");
      }
      if (desc.getIndex() == -1) {
        return UNRECOGNIZED;
      }
      return VALUES[desc.getIndex()];
    }

    private final int value;

    private HashType(int value) {
      this.value = value;
    }

    // @@protoc_insertion_point(enum_scope:google.devtools.resultstore.v2.File.HashType)
  }

  public static final int UID_FIELD_NUMBER = 1;
  @SuppressWarnings("serial")
  private volatile java.lang.Object uid_ = "";
  /**
   * <pre>
   * The identifier of the file or archive entry.
   * User-provided, must be unique for the repeated field it is in. When an
   * Append RPC is called with a Files field populated, if a File already exists
   * with this ID, that File will be overwritten with the new File proto.
   * </pre>
   *
   * <code>string uid = 1;</code>
   * @return The uid.
   */
  @java.lang.Override
  public java.lang.String getUid() {
    java.lang.Object ref = uid_;
    if (ref instanceof java.lang.String) {
      return (java.lang.String) ref;
    } else {
      com.google.protobuf.ByteString bs = 
          (com.google.protobuf.ByteString) ref;
      java.lang.String s = bs.toStringUtf8();
      uid_ = s;
      return s;
    }
  }
  /**
   * <pre>
   * The identifier of the file or archive entry.
   * User-provided, must be unique for the repeated field it is in. When an
   * Append RPC is called with a Files field populated, if a File already exists
   * with this ID, that File will be overwritten with the new File proto.
   * </pre>
   *
   * <code>string uid = 1;</code>
   * @return The bytes for uid.
   */
  @java.lang.Override
  public com.google.protobuf.ByteString
      getUidBytes() {
    java.lang.Object ref = uid_;
    if (ref instanceof java.lang.String) {
      com.google.protobuf.ByteString b = 
          com.google.protobuf.ByteString.copyFromUtf8(
              (java.lang.String) ref);
      uid_ = b;
      return b;
    } else {
      return (com.google.protobuf.ByteString) ref;
    }
  }

  public static final int URI_FIELD_NUMBER = 2;
  @SuppressWarnings("serial")
  private volatile java.lang.Object uri_ = "";
  /**
   * <pre>
   * The URI of a file.
   * This could also be the URI of an entire archive.
   * Most log data doesn't need to be stored forever, so a ttl is suggested.
   * Note that if you ever move or delete the file at this URI, the link from
   * the server will be broken.
   * </pre>
   *
   * <code>string uri = 2;</code>
   * @return The uri.
   */
  @java.lang.Override
  public java.lang.String getUri() {
    java.lang.Object ref = uri_;
    if (ref instanceof java.lang.String) {
      return (java.lang.String) ref;
    } else {
      com.google.protobuf.ByteString bs = 
          (com.google.protobuf.ByteString) ref;
      java.lang.String s = bs.toStringUtf8();
      uri_ = s;
      return s;
    }
  }
  /**
   * <pre>
   * The URI of a file.
   * This could also be the URI of an entire archive.
   * Most log data doesn't need to be stored forever, so a ttl is suggested.
   * Note that if you ever move or delete the file at this URI, the link from
   * the server will be broken.
   * </pre>
   *
   * <code>string uri = 2;</code>
   * @return The bytes for uri.
   */
  @java.lang.Override
  public com.google.protobuf.ByteString
      getUriBytes() {
    java.lang.Object ref = uri_;
    if (ref instanceof java.lang.String) {
      com.google.protobuf.ByteString b = 
          com.google.protobuf.ByteString.copyFromUtf8(
              (java.lang.String) ref);
      uri_ = b;
      return b;
    } else {
      return (com.google.protobuf.ByteString) ref;
    }
  }

  public static final int LENGTH_FIELD_NUMBER = 3;
  private com.google.protobuf.Int64Value length_;
  /**
   * <pre>
   * The length of the file in bytes.  Allows the filesize to be shown in the
   * UI.  Omit if file is still being written or length is not known.  This
   * could also be the length of an entire archive.
   * </pre>
   *
   * <code>.google.protobuf.Int64Value length = 3;</code>
   * @return Whether the length field is set.
   */
  @java.lang.Override
  public boolean hasLength() {
    return length_ != null;
  }
  /**
   * <pre>
   * The length of the file in bytes.  Allows the filesize to be shown in the
   * UI.  Omit if file is still being written or length is not known.  This
   * could also be the length of an entire archive.
   * </pre>
   *
   * <code>.google.protobuf.Int64Value length = 3;</code>
   * @return The length.
   */
  @java.lang.Override
  public com.google.protobuf.Int64Value getLength() {
    return length_ == null ? com.google.protobuf.Int64Value.getDefaultInstance() : length_;
  }
  /**
   * <pre>
   * The length of the file in bytes.  Allows the filesize to be shown in the
   * UI.  Omit if file is still being written or length is not known.  This
   * could also be the length of an entire archive.
   * </pre>
   *
   * <code>.google.protobuf.Int64Value length = 3;</code>
   */
  @java.lang.Override
  public com.google.protobuf.Int64ValueOrBuilder getLengthOrBuilder() {
    return length_ == null ? com.google.protobuf.Int64Value.getDefaultInstance() : length_;
  }

  public static final int CONTENT_TYPE_FIELD_NUMBER = 4;
  @SuppressWarnings("serial")
  private volatile java.lang.Object contentType_ = "";
  /**
   * <pre>
   * The content-type (aka MIME-type) of the file.  This is sent to the web
   * browser so it knows how to handle the file. (e.g. text/plain, image/jpeg,
   * text/html, etc). For zip archives, use "application/zip".
   * </pre>
   *
   * <code>string content_type = 4;</code>
   * @return The contentType.
   */
  @java.lang.Override
  public java.lang.String getContentType() {
    java.lang.Object ref = contentType_;
    if (ref instanceof java.lang.String) {
      return (java.lang.String) ref;
    } else {
      com.google.protobuf.ByteString bs = 
          (com.google.protobuf.ByteString) ref;
      java.lang.String s = bs.toStringUtf8();
      contentType_ = s;
      return s;
    }
  }
  /**
   * <pre>
   * The content-type (aka MIME-type) of the file.  This is sent to the web
   * browser so it knows how to handle the file. (e.g. text/plain, image/jpeg,
   * text/html, etc). For zip archives, use "application/zip".
   * </pre>
   *
   * <code>string content_type = 4;</code>
   * @return The bytes for contentType.
   */
  @java.lang.Override
  public com.google.protobuf.ByteString
      getContentTypeBytes() {
    java.lang.Object ref = contentType_;
    if (ref instanceof java.lang.String) {
      com.google.protobuf.ByteString b = 
          com.google.protobuf.ByteString.copyFromUtf8(
              (java.lang.String) ref);
      contentType_ = b;
      return b;
    } else {
      return (com.google.protobuf.ByteString) ref;
    }
  }

  public static final int ARCHIVE_ENTRY_FIELD_NUMBER = 5;
  private com.google.devtools.resultstore.v2.ArchiveEntry archiveEntry_;
  /**
   * <pre>
   * If the above path, length, and content_type are referring to an archive,
   * and you wish to refer to a particular entry within that archive, put the
   * particular archive entry data here.
   * </pre>
   *
   * <code>.google.devtools.resultstore.v2.ArchiveEntry archive_entry = 5;</code>
   * @return Whether the archiveEntry field is set.
   */
  @java.lang.Override
  public boolean hasArchiveEntry() {
    return archiveEntry_ != null;
  }
  /**
   * <pre>
   * If the above path, length, and content_type are referring to an archive,
   * and you wish to refer to a particular entry within that archive, put the
   * particular archive entry data here.
   * </pre>
   *
   * <code>.google.devtools.resultstore.v2.ArchiveEntry archive_entry = 5;</code>
   * @return The archiveEntry.
   */
  @java.lang.Override
  public com.google.devtools.resultstore.v2.ArchiveEntry getArchiveEntry() {
    return archiveEntry_ == null ? com.google.devtools.resultstore.v2.ArchiveEntry.getDefaultInstance() : archiveEntry_;
  }
  /**
   * <pre>
   * If the above path, length, and content_type are referring to an archive,
   * and you wish to refer to a particular entry within that archive, put the
   * particular archive entry data here.
   * </pre>
   *
   * <code>.google.devtools.resultstore.v2.ArchiveEntry archive_entry = 5;</code>
   */
  @java.lang.Override
  public com.google.devtools.resultstore.v2.ArchiveEntryOrBuilder getArchiveEntryOrBuilder() {
    return archiveEntry_ == null ? com.google.devtools.resultstore.v2.ArchiveEntry.getDefaultInstance() : archiveEntry_;
  }

  public static final int CONTENT_VIEWER_FIELD_NUMBER = 6;
  @SuppressWarnings("serial")
  private volatile java.lang.Object contentViewer_ = "";
  /**
   * <pre>
   * A url to a content display app/site for this file or archive entry.
   * </pre>
   *
   * <code>string content_viewer = 6;</code>
   * @return The contentViewer.
   */
  @java.lang.Override
  public java.lang.String getContentViewer() {
    java.lang.Object ref = contentViewer_;
    if (ref instanceof java.lang.String) {
      return (java.lang.String) ref;
    } else {
      com.google.protobuf.ByteString bs = 
          (com.google.protobuf.ByteString) ref;
      java.lang.String s = bs.toStringUtf8();
      contentViewer_ = s;
      return s;
    }
  }
  /**
   * <pre>
   * A url to a content display app/site for this file or archive entry.
   * </pre>
   *
   * <code>string content_viewer = 6;</code>
   * @return The bytes for contentViewer.
   */
  @java.lang.Override
  public com.google.protobuf.ByteString
      getContentViewerBytes() {
    java.lang.Object ref = contentViewer_;
    if (ref instanceof java.lang.String) {
      com.google.protobuf.ByteString b = 
          com.google.protobuf.ByteString.copyFromUtf8(
              (java.lang.String) ref);
      contentViewer_ = b;
      return b;
    } else {
      return (com.google.protobuf.ByteString) ref;
    }
  }

  public static final int HIDDEN_FIELD_NUMBER = 7;
  private boolean hidden_ = false;
  /**
   * <pre>
   * Whether to hide this file or archive entry in the UI.  Defaults to false.
   * A checkbox lets users see hidden files, but they're hidden by default.
   * </pre>
   *
   * <code>bool hidden = 7;</code>
   * @return The hidden.
   */
  @java.lang.Override
  public boolean getHidden() {
    return hidden_;
  }

  public static final int DESCRIPTION_FIELD_NUMBER = 8;
  @SuppressWarnings("serial")
  private volatile java.lang.Object description_ = "";
  /**
   * <pre>
   * A short description of what this file or archive entry contains. This
   * description should help someone viewing the list of these files to
   * understand the purpose of this file and what they would want to view it
   * for.
   * </pre>
   *
   * <code>string description = 8;</code>
   * @return The description.
   */
  @java.lang.Override
  public java.lang.String getDescription() {
    java.lang.Object ref = description_;
    if (ref instanceof java.lang.String) {
      return (java.lang.String) ref;
    } else {
      com.google.protobuf.ByteString bs = 
          (com.google.protobuf.ByteString) ref;
      java.lang.String s = bs.toStringUtf8();
      description_ = s;
      return s;
    }
  }
  /**
   * <pre>
   * A short description of what this file or archive entry contains. This
   * description should help someone viewing the list of these files to
   * understand the purpose of this file and what they would want to view it
   * for.
   * </pre>
   *
   * <code>string description = 8;</code>
   * @return The bytes for description.
   */
  @java.lang.Override
  public com.google.protobuf.ByteString
      getDescriptionBytes() {
    java.lang.Object ref = description_;
    if (ref instanceof java.lang.String) {
      com.google.protobuf.ByteString b = 
          com.google.protobuf.ByteString.copyFromUtf8(
              (java.lang.String) ref);
      description_ = b;
      return b;
    } else {
      return (com.google.protobuf.ByteString) ref;
    }
  }

  public static final int DIGEST_FIELD_NUMBER = 9;
  @SuppressWarnings("serial")
  private volatile java.lang.Object digest_ = "";
  /**
   * <pre>
   * The digest of this file in hexadecimal-like string if known.
   * </pre>
   *
   * <code>string digest = 9;</code>
   * @return The digest.
   */
  @java.lang.Override
  public java.lang.String getDigest() {
    java.lang.Object ref = digest_;
    if (ref instanceof java.lang.String) {
      return (java.lang.String) ref;
    } else {
      com.google.protobuf.ByteString bs = 
          (com.google.protobuf.ByteString) ref;
      java.lang.String s = bs.toStringUtf8();
      digest_ = s;
      return s;
    }
  }
  /**
   * <pre>
   * The digest of this file in hexadecimal-like string if known.
   * </pre>
   *
   * <code>string digest = 9;</code>
   * @return The bytes for digest.
   */
  @java.lang.Override
  public com.google.protobuf.ByteString
      getDigestBytes() {
    java.lang.Object ref = digest_;
    if (ref instanceof java.lang.String) {
      com.google.protobuf.ByteString b = 
          com.google.protobuf.ByteString.copyFromUtf8(
              (java.lang.String) ref);
      digest_ = b;
      return b;
    } else {
      return (com.google.protobuf.ByteString) ref;
    }
  }

  public static final int HASH_TYPE_FIELD_NUMBER = 10;
  private int hashType_ = 0;
  /**
   * <pre>
   * The algorithm corresponding to the digest if known.
   * </pre>
   *
   * <code>.google.devtools.resultstore.v2.File.HashType hash_type = 10;</code>
   * @return The enum numeric value on the wire for hashType.
   */
  @java.lang.Override public int getHashTypeValue() {
    return hashType_;
  }
  /**
   * <pre>
   * The algorithm corresponding to the digest if known.
   * </pre>
   *
   * <code>.google.devtools.resultstore.v2.File.HashType hash_type = 10;</code>
   * @return The hashType.
   */
  @java.lang.Override public com.google.devtools.resultstore.v2.File.HashType getHashType() {
    com.google.devtools.resultstore.v2.File.HashType result = com.google.devtools.resultstore.v2.File.HashType.forNumber(hashType_);
    return result == null ? com.google.devtools.resultstore.v2.File.HashType.UNRECOGNIZED : result;
  }

  private byte memoizedIsInitialized = -1;
  @java.lang.Override
  public final boolean isInitialized() {
    byte isInitialized = memoizedIsInitialized;
    if (isInitialized == 1) return true;
    if (isInitialized == 0) return false;

    memoizedIsInitialized = 1;
    return true;
  }

  @java.lang.Override
  public void writeTo(com.google.protobuf.CodedOutputStream output)
                      throws java.io.IOException {
    if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(uid_)) {
      com.google.protobuf.GeneratedMessageV3.writeString(output, 1, uid_);
    }
    if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(uri_)) {
      com.google.protobuf.GeneratedMessageV3.writeString(output, 2, uri_);
    }
    if (length_ != null) {
      output.writeMessage(3, getLength());
    }
    if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(contentType_)) {
      com.google.protobuf.GeneratedMessageV3.writeString(output, 4, contentType_);
    }
    if (archiveEntry_ != null) {
      output.writeMessage(5, getArchiveEntry());
    }
    if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(contentViewer_)) {
      com.google.protobuf.GeneratedMessageV3.writeString(output, 6, contentViewer_);
    }
    if (hidden_ != false) {
      output.writeBool(7, hidden_);
    }
    if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(description_)) {
      com.google.protobuf.GeneratedMessageV3.writeString(output, 8, description_);
    }
    if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(digest_)) {
      com.google.protobuf.GeneratedMessageV3.writeString(output, 9, digest_);
    }
    if (hashType_ != com.google.devtools.resultstore.v2.File.HashType.HASH_TYPE_UNSPECIFIED.getNumber()) {
      output.writeEnum(10, hashType_);
    }
    getUnknownFields().writeTo(output);
  }

  @java.lang.Override
  public int getSerializedSize() {
    int size = memoizedSize;
    if (size != -1) return size;

    size = 0;
    if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(uid_)) {
      size += com.google.protobuf.GeneratedMessageV3.computeStringSize(1, uid_);
    }
    if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(uri_)) {
      size += com.google.protobuf.GeneratedMessageV3.computeStringSize(2, uri_);
    }
    if (length_ != null) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(3, getLength());
    }
    if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(contentType_)) {
      size += com.google.protobuf.GeneratedMessageV3.computeStringSize(4, contentType_);
    }
    if (archiveEntry_ != null) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(5, getArchiveEntry());
    }
    if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(contentViewer_)) {
      size += com.google.protobuf.GeneratedMessageV3.computeStringSize(6, contentViewer_);
    }
    if (hidden_ != false) {
      size += com.google.protobuf.CodedOutputStream
        .computeBoolSize(7, hidden_);
    }
    if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(description_)) {
      size += com.google.protobuf.GeneratedMessageV3.computeStringSize(8, description_);
    }
    if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(digest_)) {
      size += com.google.protobuf.GeneratedMessageV3.computeStringSize(9, digest_);
    }
    if (hashType_ != com.google.devtools.resultstore.v2.File.HashType.HASH_TYPE_UNSPECIFIED.getNumber()) {
      size += com.google.protobuf.CodedOutputStream
        .computeEnumSize(10, hashType_);
    }
    size += getUnknownFields().getSerializedSize();
    memoizedSize = size;
    return size;
  }

  @java.lang.Override
  public boolean equals(final java.lang.Object obj) {
    if (obj == this) {
     return true;
    }
    if (!(obj instanceof com.google.devtools.resultstore.v2.File)) {
      return super.equals(obj);
    }
    com.google.devtools.resultstore.v2.File other = (com.google.devtools.resultstore.v2.File) obj;

    if (!getUid()
        .equals(other.getUid())) return false;
    if (!getUri()
        .equals(other.getUri())) return false;
    if (hasLength() != other.hasLength()) return false;
    if (hasLength()) {
      if (!getLength()
          .equals(other.getLength())) return false;
    }
    if (!getContentType()
        .equals(other.getContentType())) return false;
    if (hasArchiveEntry() != other.hasArchiveEntry()) return false;
    if (hasArchiveEntry()) {
      if (!getArchiveEntry()
          .equals(other.getArchiveEntry())) return false;
    }
    if (!getContentViewer()
        .equals(other.getContentViewer())) return false;
    if (getHidden()
        != other.getHidden()) return false;
    if (!getDescription()
        .equals(other.getDescription())) return false;
    if (!getDigest()
        .equals(other.getDigest())) return false;
    if (hashType_ != other.hashType_) return false;
    if (!getUnknownFields().equals(other.getUnknownFields())) return false;
    return true;
  }

  @java.lang.Override
  public int hashCode() {
    if (memoizedHashCode != 0) {
      return memoizedHashCode;
    }
    int hash = 41;
    hash = (19 * hash) + getDescriptor().hashCode();
    hash = (37 * hash) + UID_FIELD_NUMBER;
    hash = (53 * hash) + getUid().hashCode();
    hash = (37 * hash) + URI_FIELD_NUMBER;
    hash = (53 * hash) + getUri().hashCode();
    if (hasLength()) {
      hash = (37 * hash) + LENGTH_FIELD_NUMBER;
      hash = (53 * hash) + getLength().hashCode();
    }
    hash = (37 * hash) + CONTENT_TYPE_FIELD_NUMBER;
    hash = (53 * hash) + getContentType().hashCode();
    if (hasArchiveEntry()) {
      hash = (37 * hash) + ARCHIVE_ENTRY_FIELD_NUMBER;
      hash = (53 * hash) + getArchiveEntry().hashCode();
    }
    hash = (37 * hash) + CONTENT_VIEWER_FIELD_NUMBER;
    hash = (53 * hash) + getContentViewer().hashCode();
    hash = (37 * hash) + HIDDEN_FIELD_NUMBER;
    hash = (53 * hash) + com.google.protobuf.Internal.hashBoolean(
        getHidden());
    hash = (37 * hash) + DESCRIPTION_FIELD_NUMBER;
    hash = (53 * hash) + getDescription().hashCode();
    hash = (37 * hash) + DIGEST_FIELD_NUMBER;
    hash = (53 * hash) + getDigest().hashCode();
    hash = (37 * hash) + HASH_TYPE_FIELD_NUMBER;
    hash = (53 * hash) + hashType_;
    hash = (29 * hash) + getUnknownFields().hashCode();
    memoizedHashCode = hash;
    return hash;
  }

  public static com.google.devtools.resultstore.v2.File parseFrom(
      java.nio.ByteBuffer data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static com.google.devtools.resultstore.v2.File parseFrom(
      java.nio.ByteBuffer data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static com.google.devtools.resultstore.v2.File parseFrom(
      com.google.protobuf.ByteString data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static com.google.devtools.resultstore.v2.File parseFrom(
      com.google.protobuf.ByteString data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static com.google.devtools.resultstore.v2.File parseFrom(byte[] data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static com.google.devtools.resultstore.v2.File parseFrom(
      byte[] data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static com.google.devtools.resultstore.v2.File parseFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input);
  }
  public static com.google.devtools.resultstore.v2.File parseFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input, extensionRegistry);
  }
  public static com.google.devtools.resultstore.v2.File parseDelimitedFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseDelimitedWithIOException(PARSER, input);
  }
  public static com.google.devtools.resultstore.v2.File parseDelimitedFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
  }
  public static com.google.devtools.resultstore.v2.File parseFrom(
      com.google.protobuf.CodedInputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input);
  }
  public static com.google.devtools.resultstore.v2.File parseFrom(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input, extensionRegistry);
  }

  @java.lang.Override
  public Builder newBuilderForType() { return newBuilder(); }
  public static Builder newBuilder() {
    return DEFAULT_INSTANCE.toBuilder();
  }
  public static Builder newBuilder(com.google.devtools.resultstore.v2.File prototype) {
    return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
  }
  @java.lang.Override
  public Builder toBuilder() {
    return this == DEFAULT_INSTANCE
        ? new Builder() : new Builder().mergeFrom(this);
  }

  @java.lang.Override
  protected Builder newBuilderForType(
      com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
    Builder builder = new Builder(parent);
    return builder;
  }
  /**
   * <pre>
   * The metadata for a file or an archive file entry.
   * </pre>
   *
   * Protobuf type {@code google.devtools.resultstore.v2.File}
   */
  public static final class Builder extends
      com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
      // @@protoc_insertion_point(builder_implements:google.devtools.resultstore.v2.File)
      com.google.devtools.resultstore.v2.FileOrBuilder {
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.google.devtools.resultstore.v2.FileProto.internal_static_google_devtools_resultstore_v2_File_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.google.devtools.resultstore.v2.FileProto.internal_static_google_devtools_resultstore_v2_File_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.google.devtools.resultstore.v2.File.class, com.google.devtools.resultstore.v2.File.Builder.class);
    }

    // Construct using com.google.devtools.resultstore.v2.File.newBuilder()
    private Builder() {

    }

    private Builder(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      super(parent);

    }
    @java.lang.Override
    public Builder clear() {
      super.clear();
      bitField0_ = 0;
      uid_ = "";
      uri_ = "";
      length_ = null;
      if (lengthBuilder_ != null) {
        lengthBuilder_.dispose();
        lengthBuilder_ = null;
      }
      contentType_ = "";
      archiveEntry_ = null;
      if (archiveEntryBuilder_ != null) {
        archiveEntryBuilder_.dispose();
        archiveEntryBuilder_ = null;
      }
      contentViewer_ = "";
      hidden_ = false;
      description_ = "";
      digest_ = "";
      hashType_ = 0;
      return this;
    }

    @java.lang.Override
    public com.google.protobuf.Descriptors.Descriptor
        getDescriptorForType() {
      return com.google.devtools.resultstore.v2.FileProto.internal_static_google_devtools_resultstore_v2_File_descriptor;
    }

    @java.lang.Override
    public com.google.devtools.resultstore.v2.File getDefaultInstanceForType() {
      return com.google.devtools.resultstore.v2.File.getDefaultInstance();
    }

    @java.lang.Override
    public com.google.devtools.resultstore.v2.File build() {
      com.google.devtools.resultstore.v2.File result = buildPartial();
      if (!result.isInitialized()) {
        throw newUninitializedMessageException(result);
      }
      return result;
    }

    @java.lang.Override
    public com.google.devtools.resultstore.v2.File buildPartial() {
      com.google.devtools.resultstore.v2.File result = new com.google.devtools.resultstore.v2.File(this);
      if (bitField0_ != 0) { buildPartial0(result); }
      onBuilt();
      return result;
    }

    private void buildPartial0(com.google.devtools.resultstore.v2.File result) {
      int from_bitField0_ = bitField0_;
      if (((from_bitField0_ & 0x00000001) != 0)) {
        result.uid_ = uid_;
      }
      if (((from_bitField0_ & 0x00000002) != 0)) {
        result.uri_ = uri_;
      }
      if (((from_bitField0_ & 0x00000004) != 0)) {
        result.length_ = lengthBuilder_ == null
            ? length_
            : lengthBuilder_.build();
      }
      if (((from_bitField0_ & 0x00000008) != 0)) {
        result.contentType_ = contentType_;
      }
      if (((from_bitField0_ & 0x00000010) != 0)) {
        result.archiveEntry_ = archiveEntryBuilder_ == null
            ? archiveEntry_
            : archiveEntryBuilder_.build();
      }
      if (((from_bitField0_ & 0x00000020) != 0)) {
        result.contentViewer_ = contentViewer_;
      }
      if (((from_bitField0_ & 0x00000040) != 0)) {
        result.hidden_ = hidden_;
      }
      if (((from_bitField0_ & 0x00000080) != 0)) {
        result.description_ = description_;
      }
      if (((from_bitField0_ & 0x00000100) != 0)) {
        result.digest_ = digest_;
      }
      if (((from_bitField0_ & 0x00000200) != 0)) {
        result.hashType_ = hashType_;
      }
    }

    @java.lang.Override
    public Builder clone() {
      return super.clone();
    }
    @java.lang.Override
    public Builder setField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        java.lang.Object value) {
      return super.setField(field, value);
    }
    @java.lang.Override
    public Builder clearField(
        com.google.protobuf.Descriptors.FieldDescriptor field) {
      return super.clearField(field);
    }
    @java.lang.Override
    public Builder clearOneof(
        com.google.protobuf.Descriptors.OneofDescriptor oneof) {
      return super.clearOneof(oneof);
    }
    @java.lang.Override
    public Builder setRepeatedField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        int index, java.lang.Object value) {
      return super.setRepeatedField(field, index, value);
    }
    @java.lang.Override
    public Builder addRepeatedField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        java.lang.Object value) {
      return super.addRepeatedField(field, value);
    }
    @java.lang.Override
    public Builder mergeFrom(com.google.protobuf.Message other) {
      if (other instanceof com.google.devtools.resultstore.v2.File) {
        return mergeFrom((com.google.devtools.resultstore.v2.File)other);
      } else {
        super.mergeFrom(other);
        return this;
      }
    }

    public Builder mergeFrom(com.google.devtools.resultstore.v2.File other) {
      if (other == com.google.devtools.resultstore.v2.File.getDefaultInstance()) return this;
      if (!other.getUid().isEmpty()) {
        uid_ = other.uid_;
        bitField0_ |= 0x00000001;
        onChanged();
      }
      if (!other.getUri().isEmpty()) {
        uri_ = other.uri_;
        bitField0_ |= 0x00000002;
        onChanged();
      }
      if (other.hasLength()) {
        mergeLength(other.getLength());
      }
      if (!other.getContentType().isEmpty()) {
        contentType_ = other.contentType_;
        bitField0_ |= 0x00000008;
        onChanged();
      }
      if (other.hasArchiveEntry()) {
        mergeArchiveEntry(other.getArchiveEntry());
      }
      if (!other.getContentViewer().isEmpty()) {
        contentViewer_ = other.contentViewer_;
        bitField0_ |= 0x00000020;
        onChanged();
      }
      if (other.getHidden() != false) {
        setHidden(other.getHidden());
      }
      if (!other.getDescription().isEmpty()) {
        description_ = other.description_;
        bitField0_ |= 0x00000080;
        onChanged();
      }
      if (!other.getDigest().isEmpty()) {
        digest_ = other.digest_;
        bitField0_ |= 0x00000100;
        onChanged();
      }
      if (other.hashType_ != 0) {
        setHashTypeValue(other.getHashTypeValue());
      }
      this.mergeUnknownFields(other.getUnknownFields());
      onChanged();
      return this;
    }

    @java.lang.Override
    public final boolean isInitialized() {
      return true;
    }

    @java.lang.Override
    public Builder mergeFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 10: {
              uid_ = input.readStringRequireUtf8();
              bitField0_ |= 0x00000001;
              break;
            } // case 10
            case 18: {
              uri_ = input.readStringRequireUtf8();
              bitField0_ |= 0x00000002;
              break;
            } // case 18
            case 26: {
              input.readMessage(
                  getLengthFieldBuilder().getBuilder(),
                  extensionRegistry);
              bitField0_ |= 0x00000004;
              break;
            } // case 26
            case 34: {
              contentType_ = input.readStringRequireUtf8();
              bitField0_ |= 0x00000008;
              break;
            } // case 34
            case 42: {
              input.readMessage(
                  getArchiveEntryFieldBuilder().getBuilder(),
                  extensionRegistry);
              bitField0_ |= 0x00000010;
              break;
            } // case 42
            case 50: {
              contentViewer_ = input.readStringRequireUtf8();
              bitField0_ |= 0x00000020;
              break;
            } // case 50
            case 56: {
              hidden_ = input.readBool();
              bitField0_ |= 0x00000040;
              break;
            } // case 56
            case 66: {
              description_ = input.readStringRequireUtf8();
              bitField0_ |= 0x00000080;
              break;
            } // case 66
            case 74: {
              digest_ = input.readStringRequireUtf8();
              bitField0_ |= 0x00000100;
              break;
            } // case 74
            case 80: {
              hashType_ = input.readEnum();
              bitField0_ |= 0x00000200;
              break;
            } // case 80
            default: {
              if (!super.parseUnknownField(input, extensionRegistry, tag)) {
                done = true; // was an endgroup tag
              }
              break;
            } // default:
          } // switch (tag)
        } // while (!done)
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.unwrapIOException();
      } finally {
        onChanged();
      } // finally
      return this;
    }
    private int bitField0_;

    private java.lang.Object uid_ = "";
    /**
     * <pre>
     * The identifier of the file or archive entry.
     * User-provided, must be unique for the repeated field it is in. When an
     * Append RPC is called with a Files field populated, if a File already exists
     * with this ID, that File will be overwritten with the new File proto.
     * </pre>
     *
     * <code>string uid = 1;</code>
     * @return The uid.
     */
    public java.lang.String getUid() {
      java.lang.Object ref = uid_;
      if (!(ref instanceof java.lang.String)) {
        com.google.protobuf.ByteString bs =
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        uid_ = s;
        return s;
      } else {
        return (java.lang.String) ref;
      }
    }
    /**
     * <pre>
     * The identifier of the file or archive entry.
     * User-provided, must be unique for the repeated field it is in. When an
     * Append RPC is called with a Files field populated, if a File already exists
     * with this ID, that File will be overwritten with the new File proto.
     * </pre>
     *
     * <code>string uid = 1;</code>
     * @return The bytes for uid.
     */
    public com.google.protobuf.ByteString
        getUidBytes() {
      java.lang.Object ref = uid_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        uid_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }
    /**
     * <pre>
     * The identifier of the file or archive entry.
     * User-provided, must be unique for the repeated field it is in. When an
     * Append RPC is called with a Files field populated, if a File already exists
     * with this ID, that File will be overwritten with the new File proto.
     * </pre>
     *
     * <code>string uid = 1;</code>
     * @param value The uid to set.
     * @return This builder for chaining.
     */
    public Builder setUid(
        java.lang.String value) {
      if (value == null) { throw new NullPointerException(); }
      uid_ = value;
      bitField0_ |= 0x00000001;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * The identifier of the file or archive entry.
     * User-provided, must be unique for the repeated field it is in. When an
     * Append RPC is called with a Files field populated, if a File already exists
     * with this ID, that File will be overwritten with the new File proto.
     * </pre>
     *
     * <code>string uid = 1;</code>
     * @return This builder for chaining.
     */
    public Builder clearUid() {
      uid_ = getDefaultInstance().getUid();
      bitField0_ = (bitField0_ & ~0x00000001);
      onChanged();
      return this;
    }
    /**
     * <pre>
     * The identifier of the file or archive entry.
     * User-provided, must be unique for the repeated field it is in. When an
     * Append RPC is called with a Files field populated, if a File already exists
     * with this ID, that File will be overwritten with the new File proto.
     * </pre>
     *
     * <code>string uid = 1;</code>
     * @param value The bytes for uid to set.
     * @return This builder for chaining.
     */
    public Builder setUidBytes(
        com.google.protobuf.ByteString value) {
      if (value == null) { throw new NullPointerException(); }
      checkByteStringIsUtf8(value);
      uid_ = value;
      bitField0_ |= 0x00000001;
      onChanged();
      return this;
    }

    private java.lang.Object uri_ = "";
    /**
     * <pre>
     * The URI of a file.
     * This could also be the URI of an entire archive.
     * Most log data doesn't need to be stored forever, so a ttl is suggested.
     * Note that if you ever move or delete the file at this URI, the link from
     * the server will be broken.
     * </pre>
     *
     * <code>string uri = 2;</code>
     * @return The uri.
     */
    public java.lang.String getUri() {
      java.lang.Object ref = uri_;
      if (!(ref instanceof java.lang.String)) {
        com.google.protobuf.ByteString bs =
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        uri_ = s;
        return s;
      } else {
        return (java.lang.String) ref;
      }
    }
    /**
     * <pre>
     * The URI of a file.
     * This could also be the URI of an entire archive.
     * Most log data doesn't need to be stored forever, so a ttl is suggested.
     * Note that if you ever move or delete the file at this URI, the link from
     * the server will be broken.
     * </pre>
     *
     * <code>string uri = 2;</code>
     * @return The bytes for uri.
     */
    public com.google.protobuf.ByteString
        getUriBytes() {
      java.lang.Object ref = uri_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        uri_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }
    /**
     * <pre>
     * The URI of a file.
     * This could also be the URI of an entire archive.
     * Most log data doesn't need to be stored forever, so a ttl is suggested.
     * Note that if you ever move or delete the file at this URI, the link from
     * the server will be broken.
     * </pre>
     *
     * <code>string uri = 2;</code>
     * @param value The uri to set.
     * @return This builder for chaining.
     */
    public Builder setUri(
        java.lang.String value) {
      if (value == null) { throw new NullPointerException(); }
      uri_ = value;
      bitField0_ |= 0x00000002;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * The URI of a file.
     * This could also be the URI of an entire archive.
     * Most log data doesn't need to be stored forever, so a ttl is suggested.
     * Note that if you ever move or delete the file at this URI, the link from
     * the server will be broken.
     * </pre>
     *
     * <code>string uri = 2;</code>
     * @return This builder for chaining.
     */
    public Builder clearUri() {
      uri_ = getDefaultInstance().getUri();
      bitField0_ = (bitField0_ & ~0x00000002);
      onChanged();
      return this;
    }
    /**
     * <pre>
     * The URI of a file.
     * This could also be the URI of an entire archive.
     * Most log data doesn't need to be stored forever, so a ttl is suggested.
     * Note that if you ever move or delete the file at this URI, the link from
     * the server will be broken.
     * </pre>
     *
     * <code>string uri = 2;</code>
     * @param value The bytes for uri to set.
     * @return This builder for chaining.
     */
    public Builder setUriBytes(
        com.google.protobuf.ByteString value) {
      if (value == null) { throw new NullPointerException(); }
      checkByteStringIsUtf8(value);
      uri_ = value;
      bitField0_ |= 0x00000002;
      onChanged();
      return this;
    }

    private com.google.protobuf.Int64Value length_;
    private com.google.protobuf.SingleFieldBuilderV3<
        com.google.protobuf.Int64Value, com.google.protobuf.Int64Value.Builder, com.google.protobuf.Int64ValueOrBuilder> lengthBuilder_;
    /**
     * <pre>
     * The length of the file in bytes.  Allows the filesize to be shown in the
     * UI.  Omit if file is still being written or length is not known.  This
     * could also be the length of an entire archive.
     * </pre>
     *
     * <code>.google.protobuf.Int64Value length = 3;</code>
     * @return Whether the length field is set.
     */
    public boolean hasLength() {
      return ((bitField0_ & 0x00000004) != 0);
    }
    /**
     * <pre>
     * The length of the file in bytes.  Allows the filesize to be shown in the
     * UI.  Omit if file is still being written or length is not known.  This
     * could also be the length of an entire archive.
     * </pre>
     *
     * <code>.google.protobuf.Int64Value length = 3;</code>
     * @return The length.
     */
    public com.google.protobuf.Int64Value getLength() {
      if (lengthBuilder_ == null) {
        return length_ == null ? com.google.protobuf.Int64Value.getDefaultInstance() : length_;
      } else {
        return lengthBuilder_.getMessage();
      }
    }
    /**
     * <pre>
     * The length of the file in bytes.  Allows the filesize to be shown in the
     * UI.  Omit if file is still being written or length is not known.  This
     * could also be the length of an entire archive.
     * </pre>
     *
     * <code>.google.protobuf.Int64Value length = 3;</code>
     */
    public Builder setLength(com.google.protobuf.Int64Value value) {
      if (lengthBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        length_ = value;
      } else {
        lengthBuilder_.setMessage(value);
      }
      bitField0_ |= 0x00000004;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * The length of the file in bytes.  Allows the filesize to be shown in the
     * UI.  Omit if file is still being written or length is not known.  This
     * could also be the length of an entire archive.
     * </pre>
     *
     * <code>.google.protobuf.Int64Value length = 3;</code>
     */
    public Builder setLength(
        com.google.protobuf.Int64Value.Builder builderForValue) {
      if (lengthBuilder_ == null) {
        length_ = builderForValue.build();
      } else {
        lengthBuilder_.setMessage(builderForValue.build());
      }
      bitField0_ |= 0x00000004;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * The length of the file in bytes.  Allows the filesize to be shown in the
     * UI.  Omit if file is still being written or length is not known.  This
     * could also be the length of an entire archive.
     * </pre>
     *
     * <code>.google.protobuf.Int64Value length = 3;</code>
     */
    public Builder mergeLength(com.google.protobuf.Int64Value value) {
      if (lengthBuilder_ == null) {
        if (((bitField0_ & 0x00000004) != 0) &&
          length_ != null &&
          length_ != com.google.protobuf.Int64Value.getDefaultInstance()) {
          getLengthBuilder().mergeFrom(value);
        } else {
          length_ = value;
        }
      } else {
        lengthBuilder_.mergeFrom(value);
      }
      bitField0_ |= 0x00000004;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * The length of the file in bytes.  Allows the filesize to be shown in the
     * UI.  Omit if file is still being written or length is not known.  This
     * could also be the length of an entire archive.
     * </pre>
     *
     * <code>.google.protobuf.Int64Value length = 3;</code>
     */
    public Builder clearLength() {
      bitField0_ = (bitField0_ & ~0x00000004);
      length_ = null;
      if (lengthBuilder_ != null) {
        lengthBuilder_.dispose();
        lengthBuilder_ = null;
      }
      onChanged();
      return this;
    }
    /**
     * <pre>
     * The length of the file in bytes.  Allows the filesize to be shown in the
     * UI.  Omit if file is still being written or length is not known.  This
     * could also be the length of an entire archive.
     * </pre>
     *
     * <code>.google.protobuf.Int64Value length = 3;</code>
     */
    public com.google.protobuf.Int64Value.Builder getLengthBuilder() {
      bitField0_ |= 0x00000004;
      onChanged();
      return getLengthFieldBuilder().getBuilder();
    }
    /**
     * <pre>
     * The length of the file in bytes.  Allows the filesize to be shown in the
     * UI.  Omit if file is still being written or length is not known.  This
     * could also be the length of an entire archive.
     * </pre>
     *
     * <code>.google.protobuf.Int64Value length = 3;</code>
     */
    public com.google.protobuf.Int64ValueOrBuilder getLengthOrBuilder() {
      if (lengthBuilder_ != null) {
        return lengthBuilder_.getMessageOrBuilder();
      } else {
        return length_ == null ?
            com.google.protobuf.Int64Value.getDefaultInstance() : length_;
      }
    }
    /**
     * <pre>
     * The length of the file in bytes.  Allows the filesize to be shown in the
     * UI.  Omit if file is still being written or length is not known.  This
     * could also be the length of an entire archive.
     * </pre>
     *
     * <code>.google.protobuf.Int64Value length = 3;</code>
     */
    private com.google.protobuf.SingleFieldBuilderV3<
        com.google.protobuf.Int64Value, com.google.protobuf.Int64Value.Builder, com.google.protobuf.Int64ValueOrBuilder> 
        getLengthFieldBuilder() {
      if (lengthBuilder_ == null) {
        lengthBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
            com.google.protobuf.Int64Value, com.google.protobuf.Int64Value.Builder, com.google.protobuf.Int64ValueOrBuilder>(
                getLength(),
                getParentForChildren(),
                isClean());
        length_ = null;
      }
      return lengthBuilder_;
    }

    private java.lang.Object contentType_ = "";
    /**
     * <pre>
     * The content-type (aka MIME-type) of the file.  This is sent to the web
     * browser so it knows how to handle the file. (e.g. text/plain, image/jpeg,
     * text/html, etc). For zip archives, use "application/zip".
     * </pre>
     *
     * <code>string content_type = 4;</code>
     * @return The contentType.
     */
    public java.lang.String getContentType() {
      java.lang.Object ref = contentType_;
      if (!(ref instanceof java.lang.String)) {
        com.google.protobuf.ByteString bs =
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        contentType_ = s;
        return s;
      } else {
        return (java.lang.String) ref;
      }
    }
    /**
     * <pre>
     * The content-type (aka MIME-type) of the file.  This is sent to the web
     * browser so it knows how to handle the file. (e.g. text/plain, image/jpeg,
     * text/html, etc). For zip archives, use "application/zip".
     * </pre>
     *
     * <code>string content_type = 4;</code>
     * @return The bytes for contentType.
     */
    public com.google.protobuf.ByteString
        getContentTypeBytes() {
      java.lang.Object ref = contentType_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        contentType_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }
    /**
     * <pre>
     * The content-type (aka MIME-type) of the file.  This is sent to the web
     * browser so it knows how to handle the file. (e.g. text/plain, image/jpeg,
     * text/html, etc). For zip archives, use "application/zip".
     * </pre>
     *
     * <code>string content_type = 4;</code>
     * @param value The contentType to set.
     * @return This builder for chaining.
     */
    public Builder setContentType(
        java.lang.String value) {
      if (value == null) { throw new NullPointerException(); }
      contentType_ = value;
      bitField0_ |= 0x00000008;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * The content-type (aka MIME-type) of the file.  This is sent to the web
     * browser so it knows how to handle the file. (e.g. text/plain, image/jpeg,
     * text/html, etc). For zip archives, use "application/zip".
     * </pre>
     *
     * <code>string content_type = 4;</code>
     * @return This builder for chaining.
     */
    public Builder clearContentType() {
      contentType_ = getDefaultInstance().getContentType();
      bitField0_ = (bitField0_ & ~0x00000008);
      onChanged();
      return this;
    }
    /**
     * <pre>
     * The content-type (aka MIME-type) of the file.  This is sent to the web
     * browser so it knows how to handle the file. (e.g. text/plain, image/jpeg,
     * text/html, etc). For zip archives, use "application/zip".
     * </pre>
     *
     * <code>string content_type = 4;</code>
     * @param value The bytes for contentType to set.
     * @return This builder for chaining.
     */
    public Builder setContentTypeBytes(
        com.google.protobuf.ByteString value) {
      if (value == null) { throw new NullPointerException(); }
      checkByteStringIsUtf8(value);
      contentType_ = value;
      bitField0_ |= 0x00000008;
      onChanged();
      return this;
    }

    private com.google.devtools.resultstore.v2.ArchiveEntry archiveEntry_;
    private com.google.protobuf.SingleFieldBuilderV3<
        com.google.devtools.resultstore.v2.ArchiveEntry, com.google.devtools.resultstore.v2.ArchiveEntry.Builder, com.google.devtools.resultstore.v2.ArchiveEntryOrBuilder> archiveEntryBuilder_;
    /**
     * <pre>
     * If the above path, length, and content_type are referring to an archive,
     * and you wish to refer to a particular entry within that archive, put the
     * particular archive entry data here.
     * </pre>
     *
     * <code>.google.devtools.resultstore.v2.ArchiveEntry archive_entry = 5;</code>
     * @return Whether the archiveEntry field is set.
     */
    public boolean hasArchiveEntry() {
      return ((bitField0_ & 0x00000010) != 0);
    }
    /**
     * <pre>
     * If the above path, length, and content_type are referring to an archive,
     * and you wish to refer to a particular entry within that archive, put the
     * particular archive entry data here.
     * </pre>
     *
     * <code>.google.devtools.resultstore.v2.ArchiveEntry archive_entry = 5;</code>
     * @return The archiveEntry.
     */
    public com.google.devtools.resultstore.v2.ArchiveEntry getArchiveEntry() {
      if (archiveEntryBuilder_ == null) {
        return archiveEntry_ == null ? com.google.devtools.resultstore.v2.ArchiveEntry.getDefaultInstance() : archiveEntry_;
      } else {
        return archiveEntryBuilder_.getMessage();
      }
    }
    /**
     * <pre>
     * If the above path, length, and content_type are referring to an archive,
     * and you wish to refer to a particular entry within that archive, put the
     * particular archive entry data here.
     * </pre>
     *
     * <code>.google.devtools.resultstore.v2.ArchiveEntry archive_entry = 5;</code>
     */
    public Builder setArchiveEntry(com.google.devtools.resultstore.v2.ArchiveEntry value) {
      if (archiveEntryBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        archiveEntry_ = value;
      } else {
        archiveEntryBuilder_.setMessage(value);
      }
      bitField0_ |= 0x00000010;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * If the above path, length, and content_type are referring to an archive,
     * and you wish to refer to a particular entry within that archive, put the
     * particular archive entry data here.
     * </pre>
     *
     * <code>.google.devtools.resultstore.v2.ArchiveEntry archive_entry = 5;</code>
     */
    public Builder setArchiveEntry(
        com.google.devtools.resultstore.v2.ArchiveEntry.Builder builderForValue) {
      if (archiveEntryBuilder_ == null) {
        archiveEntry_ = builderForValue.build();
      } else {
        archiveEntryBuilder_.setMessage(builderForValue.build());
      }
      bitField0_ |= 0x00000010;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * If the above path, length, and content_type are referring to an archive,
     * and you wish to refer to a particular entry within that archive, put the
     * particular archive entry data here.
     * </pre>
     *
     * <code>.google.devtools.resultstore.v2.ArchiveEntry archive_entry = 5;</code>
     */
    public Builder mergeArchiveEntry(com.google.devtools.resultstore.v2.ArchiveEntry value) {
      if (archiveEntryBuilder_ == null) {
        if (((bitField0_ & 0x00000010) != 0) &&
          archiveEntry_ != null &&
          archiveEntry_ != com.google.devtools.resultstore.v2.ArchiveEntry.getDefaultInstance()) {
          getArchiveEntryBuilder().mergeFrom(value);
        } else {
          archiveEntry_ = value;
        }
      } else {
        archiveEntryBuilder_.mergeFrom(value);
      }
      bitField0_ |= 0x00000010;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * If the above path, length, and content_type are referring to an archive,
     * and you wish to refer to a particular entry within that archive, put the
     * particular archive entry data here.
     * </pre>
     *
     * <code>.google.devtools.resultstore.v2.ArchiveEntry archive_entry = 5;</code>
     */
    public Builder clearArchiveEntry() {
      bitField0_ = (bitField0_ & ~0x00000010);
      archiveEntry_ = null;
      if (archiveEntryBuilder_ != null) {
        archiveEntryBuilder_.dispose();
        archiveEntryBuilder_ = null;
      }
      onChanged();
      return this;
    }
    /**
     * <pre>
     * If the above path, length, and content_type are referring to an archive,
     * and you wish to refer to a particular entry within that archive, put the
     * particular archive entry data here.
     * </pre>
     *
     * <code>.google.devtools.resultstore.v2.ArchiveEntry archive_entry = 5;</code>
     */
    public com.google.devtools.resultstore.v2.ArchiveEntry.Builder getArchiveEntryBuilder() {
      bitField0_ |= 0x00000010;
      onChanged();
      return getArchiveEntryFieldBuilder().getBuilder();
    }
    /**
     * <pre>
     * If the above path, length, and content_type are referring to an archive,
     * and you wish to refer to a particular entry within that archive, put the
     * particular archive entry data here.
     * </pre>
     *
     * <code>.google.devtools.resultstore.v2.ArchiveEntry archive_entry = 5;</code>
     */
    public com.google.devtools.resultstore.v2.ArchiveEntryOrBuilder getArchiveEntryOrBuilder() {
      if (archiveEntryBuilder_ != null) {
        return archiveEntryBuilder_.getMessageOrBuilder();
      } else {
        return archiveEntry_ == null ?
            com.google.devtools.resultstore.v2.ArchiveEntry.getDefaultInstance() : archiveEntry_;
      }
    }
    /**
     * <pre>
     * If the above path, length, and content_type are referring to an archive,
     * and you wish to refer to a particular entry within that archive, put the
     * particular archive entry data here.
     * </pre>
     *
     * <code>.google.devtools.resultstore.v2.ArchiveEntry archive_entry = 5;</code>
     */
    private com.google.protobuf.SingleFieldBuilderV3<
        com.google.devtools.resultstore.v2.ArchiveEntry, com.google.devtools.resultstore.v2.ArchiveEntry.Builder, com.google.devtools.resultstore.v2.ArchiveEntryOrBuilder> 
        getArchiveEntryFieldBuilder() {
      if (archiveEntryBuilder_ == null) {
        archiveEntryBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
            com.google.devtools.resultstore.v2.ArchiveEntry, com.google.devtools.resultstore.v2.ArchiveEntry.Builder, com.google.devtools.resultstore.v2.ArchiveEntryOrBuilder>(
                getArchiveEntry(),
                getParentForChildren(),
                isClean());
        archiveEntry_ = null;
      }
      return archiveEntryBuilder_;
    }

    private java.lang.Object contentViewer_ = "";
    /**
     * <pre>
     * A url to a content display app/site for this file or archive entry.
     * </pre>
     *
     * <code>string content_viewer = 6;</code>
     * @return The contentViewer.
     */
    public java.lang.String getContentViewer() {
      java.lang.Object ref = contentViewer_;
      if (!(ref instanceof java.lang.String)) {
        com.google.protobuf.ByteString bs =
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        contentViewer_ = s;
        return s;
      } else {
        return (java.lang.String) ref;
      }
    }
    /**
     * <pre>
     * A url to a content display app/site for this file or archive entry.
     * </pre>
     *
     * <code>string content_viewer = 6;</code>
     * @return The bytes for contentViewer.
     */
    public com.google.protobuf.ByteString
        getContentViewerBytes() {
      java.lang.Object ref = contentViewer_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        contentViewer_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }
    /**
     * <pre>
     * A url to a content display app/site for this file or archive entry.
     * </pre>
     *
     * <code>string content_viewer = 6;</code>
     * @param value The contentViewer to set.
     * @return This builder for chaining.
     */
    public Builder setContentViewer(
        java.lang.String value) {
      if (value == null) { throw new NullPointerException(); }
      contentViewer_ = value;
      bitField0_ |= 0x00000020;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * A url to a content display app/site for this file or archive entry.
     * </pre>
     *
     * <code>string content_viewer = 6;</code>
     * @return This builder for chaining.
     */
    public Builder clearContentViewer() {
      contentViewer_ = getDefaultInstance().getContentViewer();
      bitField0_ = (bitField0_ & ~0x00000020);
      onChanged();
      return this;
    }
    /**
     * <pre>
     * A url to a content display app/site for this file or archive entry.
     * </pre>
     *
     * <code>string content_viewer = 6;</code>
     * @param value The bytes for contentViewer to set.
     * @return This builder for chaining.
     */
    public Builder setContentViewerBytes(
        com.google.protobuf.ByteString value) {
      if (value == null) { throw new NullPointerException(); }
      checkByteStringIsUtf8(value);
      contentViewer_ = value;
      bitField0_ |= 0x00000020;
      onChanged();
      return this;
    }

    private boolean hidden_ ;
    /**
     * <pre>
     * Whether to hide this file or archive entry in the UI.  Defaults to false.
     * A checkbox lets users see hidden files, but they're hidden by default.
     * </pre>
     *
     * <code>bool hidden = 7;</code>
     * @return The hidden.
     */
    @java.lang.Override
    public boolean getHidden() {
      return hidden_;
    }
    /**
     * <pre>
     * Whether to hide this file or archive entry in the UI.  Defaults to false.
     * A checkbox lets users see hidden files, but they're hidden by default.
     * </pre>
     *
     * <code>bool hidden = 7;</code>
     * @param value The hidden to set.
     * @return This builder for chaining.
     */
    public Builder setHidden(boolean value) {
      
      hidden_ = value;
      bitField0_ |= 0x00000040;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * Whether to hide this file or archive entry in the UI.  Defaults to false.
     * A checkbox lets users see hidden files, but they're hidden by default.
     * </pre>
     *
     * <code>bool hidden = 7;</code>
     * @return This builder for chaining.
     */
    public Builder clearHidden() {
      bitField0_ = (bitField0_ & ~0x00000040);
      hidden_ = false;
      onChanged();
      return this;
    }

    private java.lang.Object description_ = "";
    /**
     * <pre>
     * A short description of what this file or archive entry contains. This
     * description should help someone viewing the list of these files to
     * understand the purpose of this file and what they would want to view it
     * for.
     * </pre>
     *
     * <code>string description = 8;</code>
     * @return The description.
     */
    public java.lang.String getDescription() {
      java.lang.Object ref = description_;
      if (!(ref instanceof java.lang.String)) {
        com.google.protobuf.ByteString bs =
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        description_ = s;
        return s;
      } else {
        return (java.lang.String) ref;
      }
    }
    /**
     * <pre>
     * A short description of what this file or archive entry contains. This
     * description should help someone viewing the list of these files to
     * understand the purpose of this file and what they would want to view it
     * for.
     * </pre>
     *
     * <code>string description = 8;</code>
     * @return The bytes for description.
     */
    public com.google.protobuf.ByteString
        getDescriptionBytes() {
      java.lang.Object ref = description_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        description_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }
    /**
     * <pre>
     * A short description of what this file or archive entry contains. This
     * description should help someone viewing the list of these files to
     * understand the purpose of this file and what they would want to view it
     * for.
     * </pre>
     *
     * <code>string description = 8;</code>
     * @param value The description to set.
     * @return This builder for chaining.
     */
    public Builder setDescription(
        java.lang.String value) {
      if (value == null) { throw new NullPointerException(); }
      description_ = value;
      bitField0_ |= 0x00000080;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * A short description of what this file or archive entry contains. This
     * description should help someone viewing the list of these files to
     * understand the purpose of this file and what they would want to view it
     * for.
     * </pre>
     *
     * <code>string description = 8;</code>
     * @return This builder for chaining.
     */
    public Builder clearDescription() {
      description_ = getDefaultInstance().getDescription();
      bitField0_ = (bitField0_ & ~0x00000080);
      onChanged();
      return this;
    }
    /**
     * <pre>
     * A short description of what this file or archive entry contains. This
     * description should help someone viewing the list of these files to
     * understand the purpose of this file and what they would want to view it
     * for.
     * </pre>
     *
     * <code>string description = 8;</code>
     * @param value The bytes for description to set.
     * @return This builder for chaining.
     */
    public Builder setDescriptionBytes(
        com.google.protobuf.ByteString value) {
      if (value == null) { throw new NullPointerException(); }
      checkByteStringIsUtf8(value);
      description_ = value;
      bitField0_ |= 0x00000080;
      onChanged();
      return this;
    }

    private java.lang.Object digest_ = "";
    /**
     * <pre>
     * The digest of this file in hexadecimal-like string if known.
     * </pre>
     *
     * <code>string digest = 9;</code>
     * @return The digest.
     */
    public java.lang.String getDigest() {
      java.lang.Object ref = digest_;
      if (!(ref instanceof java.lang.String)) {
        com.google.protobuf.ByteString bs =
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        digest_ = s;
        return s;
      } else {
        return (java.lang.String) ref;
      }
    }
    /**
     * <pre>
     * The digest of this file in hexadecimal-like string if known.
     * </pre>
     *
     * <code>string digest = 9;</code>
     * @return The bytes for digest.
     */
    public com.google.protobuf.ByteString
        getDigestBytes() {
      java.lang.Object ref = digest_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        digest_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }
    /**
     * <pre>
     * The digest of this file in hexadecimal-like string if known.
     * </pre>
     *
     * <code>string digest = 9;</code>
     * @param value The digest to set.
     * @return This builder for chaining.
     */
    public Builder setDigest(
        java.lang.String value) {
      if (value == null) { throw new NullPointerException(); }
      digest_ = value;
      bitField0_ |= 0x00000100;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * The digest of this file in hexadecimal-like string if known.
     * </pre>
     *
     * <code>string digest = 9;</code>
     * @return This builder for chaining.
     */
    public Builder clearDigest() {
      digest_ = getDefaultInstance().getDigest();
      bitField0_ = (bitField0_ & ~0x00000100);
      onChanged();
      return this;
    }
    /**
     * <pre>
     * The digest of this file in hexadecimal-like string if known.
     * </pre>
     *
     * <code>string digest = 9;</code>
     * @param value The bytes for digest to set.
     * @return This builder for chaining.
     */
    public Builder setDigestBytes(
        com.google.protobuf.ByteString value) {
      if (value == null) { throw new NullPointerException(); }
      checkByteStringIsUtf8(value);
      digest_ = value;
      bitField0_ |= 0x00000100;
      onChanged();
      return this;
    }

    private int hashType_ = 0;
    /**
     * <pre>
     * The algorithm corresponding to the digest if known.
     * </pre>
     *
     * <code>.google.devtools.resultstore.v2.File.HashType hash_type = 10;</code>
     * @return The enum numeric value on the wire for hashType.
     */
    @java.lang.Override public int getHashTypeValue() {
      return hashType_;
    }
    /**
     * <pre>
     * The algorithm corresponding to the digest if known.
     * </pre>
     *
     * <code>.google.devtools.resultstore.v2.File.HashType hash_type = 10;</code>
     * @param value The enum numeric value on the wire for hashType to set.
     * @return This builder for chaining.
     */
    public Builder setHashTypeValue(int value) {
      hashType_ = value;
      bitField0_ |= 0x00000200;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * The algorithm corresponding to the digest if known.
     * </pre>
     *
     * <code>.google.devtools.resultstore.v2.File.HashType hash_type = 10;</code>
     * @return The hashType.
     */
    @java.lang.Override
    public com.google.devtools.resultstore.v2.File.HashType getHashType() {
      com.google.devtools.resultstore.v2.File.HashType result = com.google.devtools.resultstore.v2.File.HashType.forNumber(hashType_);
      return result == null ? com.google.devtools.resultstore.v2.File.HashType.UNRECOGNIZED : result;
    }
    /**
     * <pre>
     * The algorithm corresponding to the digest if known.
     * </pre>
     *
     * <code>.google.devtools.resultstore.v2.File.HashType hash_type = 10;</code>
     * @param value The hashType to set.
     * @return This builder for chaining.
     */
    public Builder setHashType(com.google.devtools.resultstore.v2.File.HashType value) {
      if (value == null) {
        throw new NullPointerException();
      }
      bitField0_ |= 0x00000200;
      hashType_ = value.getNumber();
      onChanged();
      return this;
    }
    /**
     * <pre>
     * The algorithm corresponding to the digest if known.
     * </pre>
     *
     * <code>.google.devtools.resultstore.v2.File.HashType hash_type = 10;</code>
     * @return This builder for chaining.
     */
    public Builder clearHashType() {
      bitField0_ = (bitField0_ & ~0x00000200);
      hashType_ = 0;
      onChanged();
      return this;
    }
    @java.lang.Override
    public final Builder setUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return super.setUnknownFields(unknownFields);
    }

    @java.lang.Override
    public final Builder mergeUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return super.mergeUnknownFields(unknownFields);
    }


    // @@protoc_insertion_point(builder_scope:google.devtools.resultstore.v2.File)
  }

  // @@protoc_insertion_point(class_scope:google.devtools.resultstore.v2.File)
  private static final com.google.devtools.resultstore.v2.File DEFAULT_INSTANCE;
  static {
    DEFAULT_INSTANCE = new com.google.devtools.resultstore.v2.File();
  }

  public static com.google.devtools.resultstore.v2.File getDefaultInstance() {
    return DEFAULT_INSTANCE;
  }

  private static final com.google.protobuf.Parser<File>
      PARSER = new com.google.protobuf.AbstractParser<File>() {
    @java.lang.Override
    public File parsePartialFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      Builder builder = newBuilder();
      try {
        builder.mergeFrom(input, extensionRegistry);
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(builder.buildPartial());
      } catch (com.google.protobuf.UninitializedMessageException e) {
        throw e.asInvalidProtocolBufferException().setUnfinishedMessage(builder.buildPartial());
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(e)
            .setUnfinishedMessage(builder.buildPartial());
      }
      return builder.buildPartial();
    }
  };

  public static com.google.protobuf.Parser<File> parser() {
    return PARSER;
  }

  @java.lang.Override
  public com.google.protobuf.Parser<File> getParserForType() {
    return PARSER;
  }

  @java.lang.Override
  public com.google.devtools.resultstore.v2.File getDefaultInstanceForType() {
    return DEFAULT_INSTANCE;
  }

}

