// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: google/devtools/resultstore/v2/coverage.proto

package com.google.devtools.resultstore.v2;

/**
 * <pre>
 * Describes branch coverage for a file
 * </pre>
 *
 * Protobuf type {@code google.devtools.resultstore.v2.BranchCoverage}
 */
public final class BranchCoverage extends
    com.google.protobuf.GeneratedMessageV3 implements
    // @@protoc_insertion_point(message_implements:google.devtools.resultstore.v2.BranchCoverage)
    BranchCoverageOrBuilder {
private static final long serialVersionUID = 0L;
  // Use BranchCoverage.newBuilder() to construct.
  private BranchCoverage(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
    super(builder);
  }
  private BranchCoverage() {
    branchPresent_ = com.google.protobuf.ByteString.EMPTY;
    branchesInLine_ = emptyIntList();
    executed_ = com.google.protobuf.ByteString.EMPTY;
    taken_ = com.google.protobuf.ByteString.EMPTY;
  }

  @java.lang.Override
  @SuppressWarnings({"unused"})
  protected java.lang.Object newInstance(
      UnusedPrivateParameter unused) {
    return new BranchCoverage();
  }

  @java.lang.Override
  public final com.google.protobuf.UnknownFieldSet
  getUnknownFields() {
    return this.unknownFields;
  }
  private BranchCoverage(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    this();
    if (extensionRegistry == null) {
      throw new java.lang.NullPointerException();
    }
    int mutable_bitField0_ = 0;
    com.google.protobuf.UnknownFieldSet.Builder unknownFields =
        com.google.protobuf.UnknownFieldSet.newBuilder();
    try {
      boolean done = false;
      while (!done) {
        int tag = input.readTag();
        switch (tag) {
          case 0:
            done = true;
            break;
          case 10: {

            branchPresent_ = input.readBytes();
            break;
          }
          case 16: {
            if (!((mutable_bitField0_ & 0x00000001) != 0)) {
              branchesInLine_ = newIntList();
              mutable_bitField0_ |= 0x00000001;
            }
            branchesInLine_.addInt(input.readInt32());
            break;
          }
          case 18: {
            int length = input.readRawVarint32();
            int limit = input.pushLimit(length);
            if (!((mutable_bitField0_ & 0x00000001) != 0) && input.getBytesUntilLimit() > 0) {
              branchesInLine_ = newIntList();
              mutable_bitField0_ |= 0x00000001;
            }
            while (input.getBytesUntilLimit() > 0) {
              branchesInLine_.addInt(input.readInt32());
            }
            input.popLimit(limit);
            break;
          }
          case 26: {

            executed_ = input.readBytes();
            break;
          }
          case 34: {

            taken_ = input.readBytes();
            break;
          }
          default: {
            if (!parseUnknownField(
                input, unknownFields, extensionRegistry, tag)) {
              done = true;
            }
            break;
          }
        }
      }
    } catch (com.google.protobuf.InvalidProtocolBufferException e) {
      throw e.setUnfinishedMessage(this);
    } catch (com.google.protobuf.UninitializedMessageException e) {
      throw e.asInvalidProtocolBufferException().setUnfinishedMessage(this);
    } catch (java.io.IOException e) {
      throw new com.google.protobuf.InvalidProtocolBufferException(
          e).setUnfinishedMessage(this);
    } finally {
      if (((mutable_bitField0_ & 0x00000001) != 0)) {
        branchesInLine_.makeImmutable(); // C
      }
      this.unknownFields = unknownFields.build();
      makeExtensionsImmutable();
    }
  }
  public static final com.google.protobuf.Descriptors.Descriptor
      getDescriptor() {
    return com.google.devtools.resultstore.v2.CoverageProto.internal_static_google_devtools_resultstore_v2_BranchCoverage_descriptor;
  }

  @java.lang.Override
  protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internalGetFieldAccessorTable() {
    return com.google.devtools.resultstore.v2.CoverageProto.internal_static_google_devtools_resultstore_v2_BranchCoverage_fieldAccessorTable
        .ensureFieldAccessorsInitialized(
            com.google.devtools.resultstore.v2.BranchCoverage.class, com.google.devtools.resultstore.v2.BranchCoverage.Builder.class);
  }

  public static final int BRANCH_PRESENT_FIELD_NUMBER = 1;
  private com.google.protobuf.ByteString branchPresent_;
  /**
   * <pre>
   * The field branch_present denotes the lines containing at least one branch.
   * This is a bitfield where i-th bit corresponds to the i-th line. Divide line
   * number by 8 to get index into byte array. Mod line number by 8 to get bit
   * number (0 = LSB, 7 = MSB).
   * A 1 denotes the line contains at least one branch.
   * A 0 denotes the line contains no branches.
   * </pre>
   *
   * <code>bytes branch_present = 1;</code>
   * @return The branchPresent.
   */
  @java.lang.Override
  public com.google.protobuf.ByteString getBranchPresent() {
    return branchPresent_;
  }

  public static final int BRANCHES_IN_LINE_FIELD_NUMBER = 2;
  private com.google.protobuf.Internal.IntList branchesInLine_;
  /**
   * <pre>
   * Contains the number of branches present, only for the lines which have the
   * corresponding bit set in branch_present, in a relative order ignoring
   * lines which do not have any branches.
   * </pre>
   *
   * <code>repeated int32 branches_in_line = 2;</code>
   * @return A list containing the branchesInLine.
   */
  @java.lang.Override
  public java.util.List<java.lang.Integer>
      getBranchesInLineList() {
    return branchesInLine_;
  }
  /**
   * <pre>
   * Contains the number of branches present, only for the lines which have the
   * corresponding bit set in branch_present, in a relative order ignoring
   * lines which do not have any branches.
   * </pre>
   *
   * <code>repeated int32 branches_in_line = 2;</code>
   * @return The count of branchesInLine.
   */
  public int getBranchesInLineCount() {
    return branchesInLine_.size();
  }
  /**
   * <pre>
   * Contains the number of branches present, only for the lines which have the
   * corresponding bit set in branch_present, in a relative order ignoring
   * lines which do not have any branches.
   * </pre>
   *
   * <code>repeated int32 branches_in_line = 2;</code>
   * @param index The index of the element to return.
   * @return The branchesInLine at the given index.
   */
  public int getBranchesInLine(int index) {
    return branchesInLine_.getInt(index);
  }
  private int branchesInLineMemoizedSerializedSize = -1;

  public static final int EXECUTED_FIELD_NUMBER = 3;
  private com.google.protobuf.ByteString executed_;
  /**
   * <pre>
   * As each branch can have any one of the following three states: not
   * executed, executed but not taken, executed and taken.
   * This is a bitfield where i-th bit corresponds to the i-th branch. Divide
   * branch number by 8 to get index into byte array. Mod branch number by 8 to
   * get bit number (0 = LSB, 7 = MSB).
   * i-th bit of the following two byte arrays are used to denote the above
   * mentioned states.
   * not executed: i-th bit of executed == 0 &amp;&amp; i-th bit of taken == 0
   * executed but not taken: i-th bit of executed == 1 &amp;&amp; i-th bit of taken == 0
   * executed and taken: i-th bit of executed == 1 &amp;&amp; i-th bit of taken == 1
   * </pre>
   *
   * <code>bytes executed = 3;</code>
   * @return The executed.
   */
  @java.lang.Override
  public com.google.protobuf.ByteString getExecuted() {
    return executed_;
  }

  public static final int TAKEN_FIELD_NUMBER = 4;
  private com.google.protobuf.ByteString taken_;
  /**
   * <pre>
   * Described above.
   * </pre>
   *
   * <code>bytes taken = 4;</code>
   * @return The taken.
   */
  @java.lang.Override
  public com.google.protobuf.ByteString getTaken() {
    return taken_;
  }

  private byte memoizedIsInitialized = -1;
  @java.lang.Override
  public final boolean isInitialized() {
    byte isInitialized = memoizedIsInitialized;
    if (isInitialized == 1) return true;
    if (isInitialized == 0) return false;

    memoizedIsInitialized = 1;
    return true;
  }

  @java.lang.Override
  public void writeTo(com.google.protobuf.CodedOutputStream output)
                      throws java.io.IOException {
    getSerializedSize();
    if (!branchPresent_.isEmpty()) {
      output.writeBytes(1, branchPresent_);
    }
    if (getBranchesInLineList().size() > 0) {
      output.writeUInt32NoTag(18);
      output.writeUInt32NoTag(branchesInLineMemoizedSerializedSize);
    }
    for (int i = 0; i < branchesInLine_.size(); i++) {
      output.writeInt32NoTag(branchesInLine_.getInt(i));
    }
    if (!executed_.isEmpty()) {
      output.writeBytes(3, executed_);
    }
    if (!taken_.isEmpty()) {
      output.writeBytes(4, taken_);
    }
    unknownFields.writeTo(output);
  }

  @java.lang.Override
  public int getSerializedSize() {
    int size = memoizedSize;
    if (size != -1) return size;

    size = 0;
    if (!branchPresent_.isEmpty()) {
      size += com.google.protobuf.CodedOutputStream
        .computeBytesSize(1, branchPresent_);
    }
    {
      int dataSize = 0;
      for (int i = 0; i < branchesInLine_.size(); i++) {
        dataSize += com.google.protobuf.CodedOutputStream
          .computeInt32SizeNoTag(branchesInLine_.getInt(i));
      }
      size += dataSize;
      if (!getBranchesInLineList().isEmpty()) {
        size += 1;
        size += com.google.protobuf.CodedOutputStream
            .computeInt32SizeNoTag(dataSize);
      }
      branchesInLineMemoizedSerializedSize = dataSize;
    }
    if (!executed_.isEmpty()) {
      size += com.google.protobuf.CodedOutputStream
        .computeBytesSize(3, executed_);
    }
    if (!taken_.isEmpty()) {
      size += com.google.protobuf.CodedOutputStream
        .computeBytesSize(4, taken_);
    }
    size += unknownFields.getSerializedSize();
    memoizedSize = size;
    return size;
  }

  @java.lang.Override
  public boolean equals(final java.lang.Object obj) {
    if (obj == this) {
     return true;
    }
    if (!(obj instanceof com.google.devtools.resultstore.v2.BranchCoverage)) {
      return super.equals(obj);
    }
    com.google.devtools.resultstore.v2.BranchCoverage other = (com.google.devtools.resultstore.v2.BranchCoverage) obj;

    if (!getBranchPresent()
        .equals(other.getBranchPresent())) return false;
    if (!getBranchesInLineList()
        .equals(other.getBranchesInLineList())) return false;
    if (!getExecuted()
        .equals(other.getExecuted())) return false;
    if (!getTaken()
        .equals(other.getTaken())) return false;
    if (!unknownFields.equals(other.unknownFields)) return false;
    return true;
  }

  @java.lang.Override
  public int hashCode() {
    if (memoizedHashCode != 0) {
      return memoizedHashCode;
    }
    int hash = 41;
    hash = (19 * hash) + getDescriptor().hashCode();
    hash = (37 * hash) + BRANCH_PRESENT_FIELD_NUMBER;
    hash = (53 * hash) + getBranchPresent().hashCode();
    if (getBranchesInLineCount() > 0) {
      hash = (37 * hash) + BRANCHES_IN_LINE_FIELD_NUMBER;
      hash = (53 * hash) + getBranchesInLineList().hashCode();
    }
    hash = (37 * hash) + EXECUTED_FIELD_NUMBER;
    hash = (53 * hash) + getExecuted().hashCode();
    hash = (37 * hash) + TAKEN_FIELD_NUMBER;
    hash = (53 * hash) + getTaken().hashCode();
    hash = (29 * hash) + unknownFields.hashCode();
    memoizedHashCode = hash;
    return hash;
  }

  public static com.google.devtools.resultstore.v2.BranchCoverage parseFrom(
      java.nio.ByteBuffer data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static com.google.devtools.resultstore.v2.BranchCoverage parseFrom(
      java.nio.ByteBuffer data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static com.google.devtools.resultstore.v2.BranchCoverage parseFrom(
      com.google.protobuf.ByteString data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static com.google.devtools.resultstore.v2.BranchCoverage parseFrom(
      com.google.protobuf.ByteString data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static com.google.devtools.resultstore.v2.BranchCoverage parseFrom(byte[] data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static com.google.devtools.resultstore.v2.BranchCoverage parseFrom(
      byte[] data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static com.google.devtools.resultstore.v2.BranchCoverage parseFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input);
  }
  public static com.google.devtools.resultstore.v2.BranchCoverage parseFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input, extensionRegistry);
  }
  public static com.google.devtools.resultstore.v2.BranchCoverage parseDelimitedFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseDelimitedWithIOException(PARSER, input);
  }
  public static com.google.devtools.resultstore.v2.BranchCoverage parseDelimitedFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
  }
  public static com.google.devtools.resultstore.v2.BranchCoverage parseFrom(
      com.google.protobuf.CodedInputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input);
  }
  public static com.google.devtools.resultstore.v2.BranchCoverage parseFrom(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input, extensionRegistry);
  }

  @java.lang.Override
  public Builder newBuilderForType() { return newBuilder(); }
  public static Builder newBuilder() {
    return DEFAULT_INSTANCE.toBuilder();
  }
  public static Builder newBuilder(com.google.devtools.resultstore.v2.BranchCoverage prototype) {
    return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
  }
  @java.lang.Override
  public Builder toBuilder() {
    return this == DEFAULT_INSTANCE
        ? new Builder() : new Builder().mergeFrom(this);
  }

  @java.lang.Override
  protected Builder newBuilderForType(
      com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
    Builder builder = new Builder(parent);
    return builder;
  }
  /**
   * <pre>
   * Describes branch coverage for a file
   * </pre>
   *
   * Protobuf type {@code google.devtools.resultstore.v2.BranchCoverage}
   */
  public static final class Builder extends
      com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
      // @@protoc_insertion_point(builder_implements:google.devtools.resultstore.v2.BranchCoverage)
      com.google.devtools.resultstore.v2.BranchCoverageOrBuilder {
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.google.devtools.resultstore.v2.CoverageProto.internal_static_google_devtools_resultstore_v2_BranchCoverage_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.google.devtools.resultstore.v2.CoverageProto.internal_static_google_devtools_resultstore_v2_BranchCoverage_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.google.devtools.resultstore.v2.BranchCoverage.class, com.google.devtools.resultstore.v2.BranchCoverage.Builder.class);
    }

    // Construct using com.google.devtools.resultstore.v2.BranchCoverage.newBuilder()
    private Builder() {
      maybeForceBuilderInitialization();
    }

    private Builder(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      super(parent);
      maybeForceBuilderInitialization();
    }
    private void maybeForceBuilderInitialization() {
      if (com.google.protobuf.GeneratedMessageV3
              .alwaysUseFieldBuilders) {
      }
    }
    @java.lang.Override
    public Builder clear() {
      super.clear();
      branchPresent_ = com.google.protobuf.ByteString.EMPTY;

      branchesInLine_ = emptyIntList();
      bitField0_ = (bitField0_ & ~0x00000001);
      executed_ = com.google.protobuf.ByteString.EMPTY;

      taken_ = com.google.protobuf.ByteString.EMPTY;

      return this;
    }

    @java.lang.Override
    public com.google.protobuf.Descriptors.Descriptor
        getDescriptorForType() {
      return com.google.devtools.resultstore.v2.CoverageProto.internal_static_google_devtools_resultstore_v2_BranchCoverage_descriptor;
    }

    @java.lang.Override
    public com.google.devtools.resultstore.v2.BranchCoverage getDefaultInstanceForType() {
      return com.google.devtools.resultstore.v2.BranchCoverage.getDefaultInstance();
    }

    @java.lang.Override
    public com.google.devtools.resultstore.v2.BranchCoverage build() {
      com.google.devtools.resultstore.v2.BranchCoverage result = buildPartial();
      if (!result.isInitialized()) {
        throw newUninitializedMessageException(result);
      }
      return result;
    }

    @java.lang.Override
    public com.google.devtools.resultstore.v2.BranchCoverage buildPartial() {
      com.google.devtools.resultstore.v2.BranchCoverage result = new com.google.devtools.resultstore.v2.BranchCoverage(this);
      int from_bitField0_ = bitField0_;
      result.branchPresent_ = branchPresent_;
      if (((bitField0_ & 0x00000001) != 0)) {
        branchesInLine_.makeImmutable();
        bitField0_ = (bitField0_ & ~0x00000001);
      }
      result.branchesInLine_ = branchesInLine_;
      result.executed_ = executed_;
      result.taken_ = taken_;
      onBuilt();
      return result;
    }

    @java.lang.Override
    public Builder clone() {
      return super.clone();
    }
    @java.lang.Override
    public Builder setField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        java.lang.Object value) {
      return super.setField(field, value);
    }
    @java.lang.Override
    public Builder clearField(
        com.google.protobuf.Descriptors.FieldDescriptor field) {
      return super.clearField(field);
    }
    @java.lang.Override
    public Builder clearOneof(
        com.google.protobuf.Descriptors.OneofDescriptor oneof) {
      return super.clearOneof(oneof);
    }
    @java.lang.Override
    public Builder setRepeatedField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        int index, java.lang.Object value) {
      return super.setRepeatedField(field, index, value);
    }
    @java.lang.Override
    public Builder addRepeatedField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        java.lang.Object value) {
      return super.addRepeatedField(field, value);
    }
    @java.lang.Override
    public Builder mergeFrom(com.google.protobuf.Message other) {
      if (other instanceof com.google.devtools.resultstore.v2.BranchCoverage) {
        return mergeFrom((com.google.devtools.resultstore.v2.BranchCoverage)other);
      } else {
        super.mergeFrom(other);
        return this;
      }
    }

    public Builder mergeFrom(com.google.devtools.resultstore.v2.BranchCoverage other) {
      if (other == com.google.devtools.resultstore.v2.BranchCoverage.getDefaultInstance()) return this;
      if (other.getBranchPresent() != com.google.protobuf.ByteString.EMPTY) {
        setBranchPresent(other.getBranchPresent());
      }
      if (!other.branchesInLine_.isEmpty()) {
        if (branchesInLine_.isEmpty()) {
          branchesInLine_ = other.branchesInLine_;
          bitField0_ = (bitField0_ & ~0x00000001);
        } else {
          ensureBranchesInLineIsMutable();
          branchesInLine_.addAll(other.branchesInLine_);
        }
        onChanged();
      }
      if (other.getExecuted() != com.google.protobuf.ByteString.EMPTY) {
        setExecuted(other.getExecuted());
      }
      if (other.getTaken() != com.google.protobuf.ByteString.EMPTY) {
        setTaken(other.getTaken());
      }
      this.mergeUnknownFields(other.unknownFields);
      onChanged();
      return this;
    }

    @java.lang.Override
    public final boolean isInitialized() {
      return true;
    }

    @java.lang.Override
    public Builder mergeFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      com.google.devtools.resultstore.v2.BranchCoverage parsedMessage = null;
      try {
        parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        parsedMessage = (com.google.devtools.resultstore.v2.BranchCoverage) e.getUnfinishedMessage();
        throw e.unwrapIOException();
      } finally {
        if (parsedMessage != null) {
          mergeFrom(parsedMessage);
        }
      }
      return this;
    }
    private int bitField0_;

    private com.google.protobuf.ByteString branchPresent_ = com.google.protobuf.ByteString.EMPTY;
    /**
     * <pre>
     * The field branch_present denotes the lines containing at least one branch.
     * This is a bitfield where i-th bit corresponds to the i-th line. Divide line
     * number by 8 to get index into byte array. Mod line number by 8 to get bit
     * number (0 = LSB, 7 = MSB).
     * A 1 denotes the line contains at least one branch.
     * A 0 denotes the line contains no branches.
     * </pre>
     *
     * <code>bytes branch_present = 1;</code>
     * @return The branchPresent.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString getBranchPresent() {
      return branchPresent_;
    }
    /**
     * <pre>
     * The field branch_present denotes the lines containing at least one branch.
     * This is a bitfield where i-th bit corresponds to the i-th line. Divide line
     * number by 8 to get index into byte array. Mod line number by 8 to get bit
     * number (0 = LSB, 7 = MSB).
     * A 1 denotes the line contains at least one branch.
     * A 0 denotes the line contains no branches.
     * </pre>
     *
     * <code>bytes branch_present = 1;</code>
     * @param value The branchPresent to set.
     * @return This builder for chaining.
     */
    public Builder setBranchPresent(com.google.protobuf.ByteString value) {
      if (value == null) {
    throw new NullPointerException();
  }
  
      branchPresent_ = value;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * The field branch_present denotes the lines containing at least one branch.
     * This is a bitfield where i-th bit corresponds to the i-th line. Divide line
     * number by 8 to get index into byte array. Mod line number by 8 to get bit
     * number (0 = LSB, 7 = MSB).
     * A 1 denotes the line contains at least one branch.
     * A 0 denotes the line contains no branches.
     * </pre>
     *
     * <code>bytes branch_present = 1;</code>
     * @return This builder for chaining.
     */
    public Builder clearBranchPresent() {
      
      branchPresent_ = getDefaultInstance().getBranchPresent();
      onChanged();
      return this;
    }

    private com.google.protobuf.Internal.IntList branchesInLine_ = emptyIntList();
    private void ensureBranchesInLineIsMutable() {
      if (!((bitField0_ & 0x00000001) != 0)) {
        branchesInLine_ = mutableCopy(branchesInLine_);
        bitField0_ |= 0x00000001;
       }
    }
    /**
     * <pre>
     * Contains the number of branches present, only for the lines which have the
     * corresponding bit set in branch_present, in a relative order ignoring
     * lines which do not have any branches.
     * </pre>
     *
     * <code>repeated int32 branches_in_line = 2;</code>
     * @return A list containing the branchesInLine.
     */
    public java.util.List<java.lang.Integer>
        getBranchesInLineList() {
      return ((bitField0_ & 0x00000001) != 0) ?
               java.util.Collections.unmodifiableList(branchesInLine_) : branchesInLine_;
    }
    /**
     * <pre>
     * Contains the number of branches present, only for the lines which have the
     * corresponding bit set in branch_present, in a relative order ignoring
     * lines which do not have any branches.
     * </pre>
     *
     * <code>repeated int32 branches_in_line = 2;</code>
     * @return The count of branchesInLine.
     */
    public int getBranchesInLineCount() {
      return branchesInLine_.size();
    }
    /**
     * <pre>
     * Contains the number of branches present, only for the lines which have the
     * corresponding bit set in branch_present, in a relative order ignoring
     * lines which do not have any branches.
     * </pre>
     *
     * <code>repeated int32 branches_in_line = 2;</code>
     * @param index The index of the element to return.
     * @return The branchesInLine at the given index.
     */
    public int getBranchesInLine(int index) {
      return branchesInLine_.getInt(index);
    }
    /**
     * <pre>
     * Contains the number of branches present, only for the lines which have the
     * corresponding bit set in branch_present, in a relative order ignoring
     * lines which do not have any branches.
     * </pre>
     *
     * <code>repeated int32 branches_in_line = 2;</code>
     * @param index The index to set the value at.
     * @param value The branchesInLine to set.
     * @return This builder for chaining.
     */
    public Builder setBranchesInLine(
        int index, int value) {
      ensureBranchesInLineIsMutable();
      branchesInLine_.setInt(index, value);
      onChanged();
      return this;
    }
    /**
     * <pre>
     * Contains the number of branches present, only for the lines which have the
     * corresponding bit set in branch_present, in a relative order ignoring
     * lines which do not have any branches.
     * </pre>
     *
     * <code>repeated int32 branches_in_line = 2;</code>
     * @param value The branchesInLine to add.
     * @return This builder for chaining.
     */
    public Builder addBranchesInLine(int value) {
      ensureBranchesInLineIsMutable();
      branchesInLine_.addInt(value);
      onChanged();
      return this;
    }
    /**
     * <pre>
     * Contains the number of branches present, only for the lines which have the
     * corresponding bit set in branch_present, in a relative order ignoring
     * lines which do not have any branches.
     * </pre>
     *
     * <code>repeated int32 branches_in_line = 2;</code>
     * @param values The branchesInLine to add.
     * @return This builder for chaining.
     */
    public Builder addAllBranchesInLine(
        java.lang.Iterable<? extends java.lang.Integer> values) {
      ensureBranchesInLineIsMutable();
      com.google.protobuf.AbstractMessageLite.Builder.addAll(
          values, branchesInLine_);
      onChanged();
      return this;
    }
    /**
     * <pre>
     * Contains the number of branches present, only for the lines which have the
     * corresponding bit set in branch_present, in a relative order ignoring
     * lines which do not have any branches.
     * </pre>
     *
     * <code>repeated int32 branches_in_line = 2;</code>
     * @return This builder for chaining.
     */
    public Builder clearBranchesInLine() {
      branchesInLine_ = emptyIntList();
      bitField0_ = (bitField0_ & ~0x00000001);
      onChanged();
      return this;
    }

    private com.google.protobuf.ByteString executed_ = com.google.protobuf.ByteString.EMPTY;
    /**
     * <pre>
     * As each branch can have any one of the following three states: not
     * executed, executed but not taken, executed and taken.
     * This is a bitfield where i-th bit corresponds to the i-th branch. Divide
     * branch number by 8 to get index into byte array. Mod branch number by 8 to
     * get bit number (0 = LSB, 7 = MSB).
     * i-th bit of the following two byte arrays are used to denote the above
     * mentioned states.
     * not executed: i-th bit of executed == 0 &amp;&amp; i-th bit of taken == 0
     * executed but not taken: i-th bit of executed == 1 &amp;&amp; i-th bit of taken == 0
     * executed and taken: i-th bit of executed == 1 &amp;&amp; i-th bit of taken == 1
     * </pre>
     *
     * <code>bytes executed = 3;</code>
     * @return The executed.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString getExecuted() {
      return executed_;
    }
    /**
     * <pre>
     * As each branch can have any one of the following three states: not
     * executed, executed but not taken, executed and taken.
     * This is a bitfield where i-th bit corresponds to the i-th branch. Divide
     * branch number by 8 to get index into byte array. Mod branch number by 8 to
     * get bit number (0 = LSB, 7 = MSB).
     * i-th bit of the following two byte arrays are used to denote the above
     * mentioned states.
     * not executed: i-th bit of executed == 0 &amp;&amp; i-th bit of taken == 0
     * executed but not taken: i-th bit of executed == 1 &amp;&amp; i-th bit of taken == 0
     * executed and taken: i-th bit of executed == 1 &amp;&amp; i-th bit of taken == 1
     * </pre>
     *
     * <code>bytes executed = 3;</code>
     * @param value The executed to set.
     * @return This builder for chaining.
     */
    public Builder setExecuted(com.google.protobuf.ByteString value) {
      if (value == null) {
    throw new NullPointerException();
  }
  
      executed_ = value;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * As each branch can have any one of the following three states: not
     * executed, executed but not taken, executed and taken.
     * This is a bitfield where i-th bit corresponds to the i-th branch. Divide
     * branch number by 8 to get index into byte array. Mod branch number by 8 to
     * get bit number (0 = LSB, 7 = MSB).
     * i-th bit of the following two byte arrays are used to denote the above
     * mentioned states.
     * not executed: i-th bit of executed == 0 &amp;&amp; i-th bit of taken == 0
     * executed but not taken: i-th bit of executed == 1 &amp;&amp; i-th bit of taken == 0
     * executed and taken: i-th bit of executed == 1 &amp;&amp; i-th bit of taken == 1
     * </pre>
     *
     * <code>bytes executed = 3;</code>
     * @return This builder for chaining.
     */
    public Builder clearExecuted() {
      
      executed_ = getDefaultInstance().getExecuted();
      onChanged();
      return this;
    }

    private com.google.protobuf.ByteString taken_ = com.google.protobuf.ByteString.EMPTY;
    /**
     * <pre>
     * Described above.
     * </pre>
     *
     * <code>bytes taken = 4;</code>
     * @return The taken.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString getTaken() {
      return taken_;
    }
    /**
     * <pre>
     * Described above.
     * </pre>
     *
     * <code>bytes taken = 4;</code>
     * @param value The taken to set.
     * @return This builder for chaining.
     */
    public Builder setTaken(com.google.protobuf.ByteString value) {
      if (value == null) {
    throw new NullPointerException();
  }
  
      taken_ = value;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * Described above.
     * </pre>
     *
     * <code>bytes taken = 4;</code>
     * @return This builder for chaining.
     */
    public Builder clearTaken() {
      
      taken_ = getDefaultInstance().getTaken();
      onChanged();
      return this;
    }
    @java.lang.Override
    public final Builder setUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return super.setUnknownFields(unknownFields);
    }

    @java.lang.Override
    public final Builder mergeUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return super.mergeUnknownFields(unknownFields);
    }


    // @@protoc_insertion_point(builder_scope:google.devtools.resultstore.v2.BranchCoverage)
  }

  // @@protoc_insertion_point(class_scope:google.devtools.resultstore.v2.BranchCoverage)
  private static final com.google.devtools.resultstore.v2.BranchCoverage DEFAULT_INSTANCE;
  static {
    DEFAULT_INSTANCE = new com.google.devtools.resultstore.v2.BranchCoverage();
  }

  public static com.google.devtools.resultstore.v2.BranchCoverage getDefaultInstance() {
    return DEFAULT_INSTANCE;
  }

  private static final com.google.protobuf.Parser<BranchCoverage>
      PARSER = new com.google.protobuf.AbstractParser<BranchCoverage>() {
    @java.lang.Override
    public BranchCoverage parsePartialFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return new BranchCoverage(input, extensionRegistry);
    }
  };

  public static com.google.protobuf.Parser<BranchCoverage> parser() {
    return PARSER;
  }

  @java.lang.Override
  public com.google.protobuf.Parser<BranchCoverage> getParserForType() {
    return PARSER;
  }

  @java.lang.Override
  public com.google.devtools.resultstore.v2.BranchCoverage getDefaultInstanceForType() {
    return DEFAULT_INSTANCE;
  }

}

