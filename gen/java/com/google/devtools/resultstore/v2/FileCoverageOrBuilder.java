// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: google/devtools/resultstore/v2/coverage.proto

package com.google.devtools.resultstore.v2;

public interface FileCoverageOrBuilder extends
    // @@protoc_insertion_point(interface_extends:google.devtools.resultstore.v2.FileCoverage)
    com.google.protobuf.MessageOrBuilder {

  /**
   * <pre>
   * Path of source file within the SourceContext of this Invocation.
   * </pre>
   *
   * <code>string path = 1;</code>
   * @return The path.
   */
  java.lang.String getPath();
  /**
   * <pre>
   * Path of source file within the SourceContext of this Invocation.
   * </pre>
   *
   * <code>string path = 1;</code>
   * @return The bytes for path.
   */
  com.google.protobuf.ByteString
      getPathBytes();

  /**
   * <pre>
   * Details of lines in a file for calculating line coverage.
   * </pre>
   *
   * <code>.google.devtools.resultstore.v2.LineCoverage line_coverage = 2;</code>
   * @return Whether the lineCoverage field is set.
   */
  boolean hasLineCoverage();
  /**
   * <pre>
   * Details of lines in a file for calculating line coverage.
   * </pre>
   *
   * <code>.google.devtools.resultstore.v2.LineCoverage line_coverage = 2;</code>
   * @return The lineCoverage.
   */
  com.google.devtools.resultstore.v2.LineCoverage getLineCoverage();
  /**
   * <pre>
   * Details of lines in a file for calculating line coverage.
   * </pre>
   *
   * <code>.google.devtools.resultstore.v2.LineCoverage line_coverage = 2;</code>
   */
  com.google.devtools.resultstore.v2.LineCoverageOrBuilder getLineCoverageOrBuilder();

  /**
   * <pre>
   * Details of branches in a file for calculating branch coverage.
   * </pre>
   *
   * <code>.google.devtools.resultstore.v2.BranchCoverage branch_coverage = 3;</code>
   * @return Whether the branchCoverage field is set.
   */
  boolean hasBranchCoverage();
  /**
   * <pre>
   * Details of branches in a file for calculating branch coverage.
   * </pre>
   *
   * <code>.google.devtools.resultstore.v2.BranchCoverage branch_coverage = 3;</code>
   * @return The branchCoverage.
   */
  com.google.devtools.resultstore.v2.BranchCoverage getBranchCoverage();
  /**
   * <pre>
   * Details of branches in a file for calculating branch coverage.
   * </pre>
   *
   * <code>.google.devtools.resultstore.v2.BranchCoverage branch_coverage = 3;</code>
   */
  com.google.devtools.resultstore.v2.BranchCoverageOrBuilder getBranchCoverageOrBuilder();
}
