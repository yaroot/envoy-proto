// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: google/devtools/resultstore/v2/invocation.proto

package com.google.devtools.resultstore.v2;

/**
 * <pre>
 * Describes the workspace under which the tool was invoked, this includes
 * information that was fed into the command, the source code referenced, and
 * the tool itself.
 * </pre>
 *
 * Protobuf type {@code google.devtools.resultstore.v2.WorkspaceInfo}
 */
public final class WorkspaceInfo extends
    com.google.protobuf.GeneratedMessageV3 implements
    // @@protoc_insertion_point(message_implements:google.devtools.resultstore.v2.WorkspaceInfo)
    WorkspaceInfoOrBuilder {
private static final long serialVersionUID = 0L;
  // Use WorkspaceInfo.newBuilder() to construct.
  private WorkspaceInfo(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
    super(builder);
  }
  private WorkspaceInfo() {
    hostname_ = "";
    workingDirectory_ = "";
    toolTag_ = "";
    commandLines_ = java.util.Collections.emptyList();
  }

  @java.lang.Override
  @SuppressWarnings({"unused"})
  protected java.lang.Object newInstance(
      UnusedPrivateParameter unused) {
    return new WorkspaceInfo();
  }

  @java.lang.Override
  public final com.google.protobuf.UnknownFieldSet
  getUnknownFields() {
    return this.unknownFields;
  }
  public static final com.google.protobuf.Descriptors.Descriptor
      getDescriptor() {
    return com.google.devtools.resultstore.v2.InvocationProto.internal_static_google_devtools_resultstore_v2_WorkspaceInfo_descriptor;
  }

  @java.lang.Override
  protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internalGetFieldAccessorTable() {
    return com.google.devtools.resultstore.v2.InvocationProto.internal_static_google_devtools_resultstore_v2_WorkspaceInfo_fieldAccessorTable
        .ensureFieldAccessorsInitialized(
            com.google.devtools.resultstore.v2.WorkspaceInfo.class, com.google.devtools.resultstore.v2.WorkspaceInfo.Builder.class);
  }

  public static final int WORKSPACE_CONTEXT_FIELD_NUMBER = 1;
  private com.google.devtools.resultstore.v2.WorkspaceContext workspaceContext_;
  /**
   * <pre>
   * Data about the workspace that might be useful for debugging.
   * </pre>
   *
   * <code>.google.devtools.resultstore.v2.WorkspaceContext workspace_context = 1;</code>
   * @return Whether the workspaceContext field is set.
   */
  @java.lang.Override
  public boolean hasWorkspaceContext() {
    return workspaceContext_ != null;
  }
  /**
   * <pre>
   * Data about the workspace that might be useful for debugging.
   * </pre>
   *
   * <code>.google.devtools.resultstore.v2.WorkspaceContext workspace_context = 1;</code>
   * @return The workspaceContext.
   */
  @java.lang.Override
  public com.google.devtools.resultstore.v2.WorkspaceContext getWorkspaceContext() {
    return workspaceContext_ == null ? com.google.devtools.resultstore.v2.WorkspaceContext.getDefaultInstance() : workspaceContext_;
  }
  /**
   * <pre>
   * Data about the workspace that might be useful for debugging.
   * </pre>
   *
   * <code>.google.devtools.resultstore.v2.WorkspaceContext workspace_context = 1;</code>
   */
  @java.lang.Override
  public com.google.devtools.resultstore.v2.WorkspaceContextOrBuilder getWorkspaceContextOrBuilder() {
    return workspaceContext_ == null ? com.google.devtools.resultstore.v2.WorkspaceContext.getDefaultInstance() : workspaceContext_;
  }

  public static final int HOSTNAME_FIELD_NUMBER = 3;
  @SuppressWarnings("serial")
  private volatile java.lang.Object hostname_ = "";
  /**
   * <pre>
   * Where the tool was invoked
   * </pre>
   *
   * <code>string hostname = 3;</code>
   * @return The hostname.
   */
  @java.lang.Override
  public java.lang.String getHostname() {
    java.lang.Object ref = hostname_;
    if (ref instanceof java.lang.String) {
      return (java.lang.String) ref;
    } else {
      com.google.protobuf.ByteString bs = 
          (com.google.protobuf.ByteString) ref;
      java.lang.String s = bs.toStringUtf8();
      hostname_ = s;
      return s;
    }
  }
  /**
   * <pre>
   * Where the tool was invoked
   * </pre>
   *
   * <code>string hostname = 3;</code>
   * @return The bytes for hostname.
   */
  @java.lang.Override
  public com.google.protobuf.ByteString
      getHostnameBytes() {
    java.lang.Object ref = hostname_;
    if (ref instanceof java.lang.String) {
      com.google.protobuf.ByteString b = 
          com.google.protobuf.ByteString.copyFromUtf8(
              (java.lang.String) ref);
      hostname_ = b;
      return b;
    } else {
      return (com.google.protobuf.ByteString) ref;
    }
  }

  public static final int WORKING_DIRECTORY_FIELD_NUMBER = 4;
  @SuppressWarnings("serial")
  private volatile java.lang.Object workingDirectory_ = "";
  /**
   * <pre>
   * The client's working directory where the build/test was run from.
   * </pre>
   *
   * <code>string working_directory = 4;</code>
   * @return The workingDirectory.
   */
  @java.lang.Override
  public java.lang.String getWorkingDirectory() {
    java.lang.Object ref = workingDirectory_;
    if (ref instanceof java.lang.String) {
      return (java.lang.String) ref;
    } else {
      com.google.protobuf.ByteString bs = 
          (com.google.protobuf.ByteString) ref;
      java.lang.String s = bs.toStringUtf8();
      workingDirectory_ = s;
      return s;
    }
  }
  /**
   * <pre>
   * The client's working directory where the build/test was run from.
   * </pre>
   *
   * <code>string working_directory = 4;</code>
   * @return The bytes for workingDirectory.
   */
  @java.lang.Override
  public com.google.protobuf.ByteString
      getWorkingDirectoryBytes() {
    java.lang.Object ref = workingDirectory_;
    if (ref instanceof java.lang.String) {
      com.google.protobuf.ByteString b = 
          com.google.protobuf.ByteString.copyFromUtf8(
              (java.lang.String) ref);
      workingDirectory_ = b;
      return b;
    } else {
      return (com.google.protobuf.ByteString) ref;
    }
  }

  public static final int TOOL_TAG_FIELD_NUMBER = 5;
  @SuppressWarnings("serial")
  private volatile java.lang.Object toolTag_ = "";
  /**
   * <pre>
   * Tools should set tool_tag to the name of the tool or use case.
   * </pre>
   *
   * <code>string tool_tag = 5;</code>
   * @return The toolTag.
   */
  @java.lang.Override
  public java.lang.String getToolTag() {
    java.lang.Object ref = toolTag_;
    if (ref instanceof java.lang.String) {
      return (java.lang.String) ref;
    } else {
      com.google.protobuf.ByteString bs = 
          (com.google.protobuf.ByteString) ref;
      java.lang.String s = bs.toStringUtf8();
      toolTag_ = s;
      return s;
    }
  }
  /**
   * <pre>
   * Tools should set tool_tag to the name of the tool or use case.
   * </pre>
   *
   * <code>string tool_tag = 5;</code>
   * @return The bytes for toolTag.
   */
  @java.lang.Override
  public com.google.protobuf.ByteString
      getToolTagBytes() {
    java.lang.Object ref = toolTag_;
    if (ref instanceof java.lang.String) {
      com.google.protobuf.ByteString b = 
          com.google.protobuf.ByteString.copyFromUtf8(
              (java.lang.String) ref);
      toolTag_ = b;
      return b;
    } else {
      return (com.google.protobuf.ByteString) ref;
    }
  }

  public static final int COMMAND_LINES_FIELD_NUMBER = 7;
  @SuppressWarnings("serial")
  private java.util.List<com.google.devtools.resultstore.v2.CommandLine> commandLines_;
  /**
   * <pre>
   * The command lines invoked. The first command line is the one typed by the
   * user, then each one after that should be an expansion of the previous
   * command line.
   * </pre>
   *
   * <code>repeated .google.devtools.resultstore.v2.CommandLine command_lines = 7;</code>
   */
  @java.lang.Override
  public java.util.List<com.google.devtools.resultstore.v2.CommandLine> getCommandLinesList() {
    return commandLines_;
  }
  /**
   * <pre>
   * The command lines invoked. The first command line is the one typed by the
   * user, then each one after that should be an expansion of the previous
   * command line.
   * </pre>
   *
   * <code>repeated .google.devtools.resultstore.v2.CommandLine command_lines = 7;</code>
   */
  @java.lang.Override
  public java.util.List<? extends com.google.devtools.resultstore.v2.CommandLineOrBuilder> 
      getCommandLinesOrBuilderList() {
    return commandLines_;
  }
  /**
   * <pre>
   * The command lines invoked. The first command line is the one typed by the
   * user, then each one after that should be an expansion of the previous
   * command line.
   * </pre>
   *
   * <code>repeated .google.devtools.resultstore.v2.CommandLine command_lines = 7;</code>
   */
  @java.lang.Override
  public int getCommandLinesCount() {
    return commandLines_.size();
  }
  /**
   * <pre>
   * The command lines invoked. The first command line is the one typed by the
   * user, then each one after that should be an expansion of the previous
   * command line.
   * </pre>
   *
   * <code>repeated .google.devtools.resultstore.v2.CommandLine command_lines = 7;</code>
   */
  @java.lang.Override
  public com.google.devtools.resultstore.v2.CommandLine getCommandLines(int index) {
    return commandLines_.get(index);
  }
  /**
   * <pre>
   * The command lines invoked. The first command line is the one typed by the
   * user, then each one after that should be an expansion of the previous
   * command line.
   * </pre>
   *
   * <code>repeated .google.devtools.resultstore.v2.CommandLine command_lines = 7;</code>
   */
  @java.lang.Override
  public com.google.devtools.resultstore.v2.CommandLineOrBuilder getCommandLinesOrBuilder(
      int index) {
    return commandLines_.get(index);
  }

  private byte memoizedIsInitialized = -1;
  @java.lang.Override
  public final boolean isInitialized() {
    byte isInitialized = memoizedIsInitialized;
    if (isInitialized == 1) return true;
    if (isInitialized == 0) return false;

    memoizedIsInitialized = 1;
    return true;
  }

  @java.lang.Override
  public void writeTo(com.google.protobuf.CodedOutputStream output)
                      throws java.io.IOException {
    if (workspaceContext_ != null) {
      output.writeMessage(1, getWorkspaceContext());
    }
    if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(hostname_)) {
      com.google.protobuf.GeneratedMessageV3.writeString(output, 3, hostname_);
    }
    if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(workingDirectory_)) {
      com.google.protobuf.GeneratedMessageV3.writeString(output, 4, workingDirectory_);
    }
    if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(toolTag_)) {
      com.google.protobuf.GeneratedMessageV3.writeString(output, 5, toolTag_);
    }
    for (int i = 0; i < commandLines_.size(); i++) {
      output.writeMessage(7, commandLines_.get(i));
    }
    getUnknownFields().writeTo(output);
  }

  @java.lang.Override
  public int getSerializedSize() {
    int size = memoizedSize;
    if (size != -1) return size;

    size = 0;
    if (workspaceContext_ != null) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(1, getWorkspaceContext());
    }
    if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(hostname_)) {
      size += com.google.protobuf.GeneratedMessageV3.computeStringSize(3, hostname_);
    }
    if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(workingDirectory_)) {
      size += com.google.protobuf.GeneratedMessageV3.computeStringSize(4, workingDirectory_);
    }
    if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(toolTag_)) {
      size += com.google.protobuf.GeneratedMessageV3.computeStringSize(5, toolTag_);
    }
    for (int i = 0; i < commandLines_.size(); i++) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(7, commandLines_.get(i));
    }
    size += getUnknownFields().getSerializedSize();
    memoizedSize = size;
    return size;
  }

  @java.lang.Override
  public boolean equals(final java.lang.Object obj) {
    if (obj == this) {
     return true;
    }
    if (!(obj instanceof com.google.devtools.resultstore.v2.WorkspaceInfo)) {
      return super.equals(obj);
    }
    com.google.devtools.resultstore.v2.WorkspaceInfo other = (com.google.devtools.resultstore.v2.WorkspaceInfo) obj;

    if (hasWorkspaceContext() != other.hasWorkspaceContext()) return false;
    if (hasWorkspaceContext()) {
      if (!getWorkspaceContext()
          .equals(other.getWorkspaceContext())) return false;
    }
    if (!getHostname()
        .equals(other.getHostname())) return false;
    if (!getWorkingDirectory()
        .equals(other.getWorkingDirectory())) return false;
    if (!getToolTag()
        .equals(other.getToolTag())) return false;
    if (!getCommandLinesList()
        .equals(other.getCommandLinesList())) return false;
    if (!getUnknownFields().equals(other.getUnknownFields())) return false;
    return true;
  }

  @java.lang.Override
  public int hashCode() {
    if (memoizedHashCode != 0) {
      return memoizedHashCode;
    }
    int hash = 41;
    hash = (19 * hash) + getDescriptor().hashCode();
    if (hasWorkspaceContext()) {
      hash = (37 * hash) + WORKSPACE_CONTEXT_FIELD_NUMBER;
      hash = (53 * hash) + getWorkspaceContext().hashCode();
    }
    hash = (37 * hash) + HOSTNAME_FIELD_NUMBER;
    hash = (53 * hash) + getHostname().hashCode();
    hash = (37 * hash) + WORKING_DIRECTORY_FIELD_NUMBER;
    hash = (53 * hash) + getWorkingDirectory().hashCode();
    hash = (37 * hash) + TOOL_TAG_FIELD_NUMBER;
    hash = (53 * hash) + getToolTag().hashCode();
    if (getCommandLinesCount() > 0) {
      hash = (37 * hash) + COMMAND_LINES_FIELD_NUMBER;
      hash = (53 * hash) + getCommandLinesList().hashCode();
    }
    hash = (29 * hash) + getUnknownFields().hashCode();
    memoizedHashCode = hash;
    return hash;
  }

  public static com.google.devtools.resultstore.v2.WorkspaceInfo parseFrom(
      java.nio.ByteBuffer data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static com.google.devtools.resultstore.v2.WorkspaceInfo parseFrom(
      java.nio.ByteBuffer data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static com.google.devtools.resultstore.v2.WorkspaceInfo parseFrom(
      com.google.protobuf.ByteString data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static com.google.devtools.resultstore.v2.WorkspaceInfo parseFrom(
      com.google.protobuf.ByteString data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static com.google.devtools.resultstore.v2.WorkspaceInfo parseFrom(byte[] data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static com.google.devtools.resultstore.v2.WorkspaceInfo parseFrom(
      byte[] data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static com.google.devtools.resultstore.v2.WorkspaceInfo parseFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input);
  }
  public static com.google.devtools.resultstore.v2.WorkspaceInfo parseFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input, extensionRegistry);
  }
  public static com.google.devtools.resultstore.v2.WorkspaceInfo parseDelimitedFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseDelimitedWithIOException(PARSER, input);
  }
  public static com.google.devtools.resultstore.v2.WorkspaceInfo parseDelimitedFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
  }
  public static com.google.devtools.resultstore.v2.WorkspaceInfo parseFrom(
      com.google.protobuf.CodedInputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input);
  }
  public static com.google.devtools.resultstore.v2.WorkspaceInfo parseFrom(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input, extensionRegistry);
  }

  @java.lang.Override
  public Builder newBuilderForType() { return newBuilder(); }
  public static Builder newBuilder() {
    return DEFAULT_INSTANCE.toBuilder();
  }
  public static Builder newBuilder(com.google.devtools.resultstore.v2.WorkspaceInfo prototype) {
    return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
  }
  @java.lang.Override
  public Builder toBuilder() {
    return this == DEFAULT_INSTANCE
        ? new Builder() : new Builder().mergeFrom(this);
  }

  @java.lang.Override
  protected Builder newBuilderForType(
      com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
    Builder builder = new Builder(parent);
    return builder;
  }
  /**
   * <pre>
   * Describes the workspace under which the tool was invoked, this includes
   * information that was fed into the command, the source code referenced, and
   * the tool itself.
   * </pre>
   *
   * Protobuf type {@code google.devtools.resultstore.v2.WorkspaceInfo}
   */
  public static final class Builder extends
      com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
      // @@protoc_insertion_point(builder_implements:google.devtools.resultstore.v2.WorkspaceInfo)
      com.google.devtools.resultstore.v2.WorkspaceInfoOrBuilder {
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.google.devtools.resultstore.v2.InvocationProto.internal_static_google_devtools_resultstore_v2_WorkspaceInfo_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.google.devtools.resultstore.v2.InvocationProto.internal_static_google_devtools_resultstore_v2_WorkspaceInfo_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.google.devtools.resultstore.v2.WorkspaceInfo.class, com.google.devtools.resultstore.v2.WorkspaceInfo.Builder.class);
    }

    // Construct using com.google.devtools.resultstore.v2.WorkspaceInfo.newBuilder()
    private Builder() {

    }

    private Builder(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      super(parent);

    }
    @java.lang.Override
    public Builder clear() {
      super.clear();
      bitField0_ = 0;
      workspaceContext_ = null;
      if (workspaceContextBuilder_ != null) {
        workspaceContextBuilder_.dispose();
        workspaceContextBuilder_ = null;
      }
      hostname_ = "";
      workingDirectory_ = "";
      toolTag_ = "";
      if (commandLinesBuilder_ == null) {
        commandLines_ = java.util.Collections.emptyList();
      } else {
        commandLines_ = null;
        commandLinesBuilder_.clear();
      }
      bitField0_ = (bitField0_ & ~0x00000010);
      return this;
    }

    @java.lang.Override
    public com.google.protobuf.Descriptors.Descriptor
        getDescriptorForType() {
      return com.google.devtools.resultstore.v2.InvocationProto.internal_static_google_devtools_resultstore_v2_WorkspaceInfo_descriptor;
    }

    @java.lang.Override
    public com.google.devtools.resultstore.v2.WorkspaceInfo getDefaultInstanceForType() {
      return com.google.devtools.resultstore.v2.WorkspaceInfo.getDefaultInstance();
    }

    @java.lang.Override
    public com.google.devtools.resultstore.v2.WorkspaceInfo build() {
      com.google.devtools.resultstore.v2.WorkspaceInfo result = buildPartial();
      if (!result.isInitialized()) {
        throw newUninitializedMessageException(result);
      }
      return result;
    }

    @java.lang.Override
    public com.google.devtools.resultstore.v2.WorkspaceInfo buildPartial() {
      com.google.devtools.resultstore.v2.WorkspaceInfo result = new com.google.devtools.resultstore.v2.WorkspaceInfo(this);
      buildPartialRepeatedFields(result);
      if (bitField0_ != 0) { buildPartial0(result); }
      onBuilt();
      return result;
    }

    private void buildPartialRepeatedFields(com.google.devtools.resultstore.v2.WorkspaceInfo result) {
      if (commandLinesBuilder_ == null) {
        if (((bitField0_ & 0x00000010) != 0)) {
          commandLines_ = java.util.Collections.unmodifiableList(commandLines_);
          bitField0_ = (bitField0_ & ~0x00000010);
        }
        result.commandLines_ = commandLines_;
      } else {
        result.commandLines_ = commandLinesBuilder_.build();
      }
    }

    private void buildPartial0(com.google.devtools.resultstore.v2.WorkspaceInfo result) {
      int from_bitField0_ = bitField0_;
      if (((from_bitField0_ & 0x00000001) != 0)) {
        result.workspaceContext_ = workspaceContextBuilder_ == null
            ? workspaceContext_
            : workspaceContextBuilder_.build();
      }
      if (((from_bitField0_ & 0x00000002) != 0)) {
        result.hostname_ = hostname_;
      }
      if (((from_bitField0_ & 0x00000004) != 0)) {
        result.workingDirectory_ = workingDirectory_;
      }
      if (((from_bitField0_ & 0x00000008) != 0)) {
        result.toolTag_ = toolTag_;
      }
    }

    @java.lang.Override
    public Builder clone() {
      return super.clone();
    }
    @java.lang.Override
    public Builder setField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        java.lang.Object value) {
      return super.setField(field, value);
    }
    @java.lang.Override
    public Builder clearField(
        com.google.protobuf.Descriptors.FieldDescriptor field) {
      return super.clearField(field);
    }
    @java.lang.Override
    public Builder clearOneof(
        com.google.protobuf.Descriptors.OneofDescriptor oneof) {
      return super.clearOneof(oneof);
    }
    @java.lang.Override
    public Builder setRepeatedField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        int index, java.lang.Object value) {
      return super.setRepeatedField(field, index, value);
    }
    @java.lang.Override
    public Builder addRepeatedField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        java.lang.Object value) {
      return super.addRepeatedField(field, value);
    }
    @java.lang.Override
    public Builder mergeFrom(com.google.protobuf.Message other) {
      if (other instanceof com.google.devtools.resultstore.v2.WorkspaceInfo) {
        return mergeFrom((com.google.devtools.resultstore.v2.WorkspaceInfo)other);
      } else {
        super.mergeFrom(other);
        return this;
      }
    }

    public Builder mergeFrom(com.google.devtools.resultstore.v2.WorkspaceInfo other) {
      if (other == com.google.devtools.resultstore.v2.WorkspaceInfo.getDefaultInstance()) return this;
      if (other.hasWorkspaceContext()) {
        mergeWorkspaceContext(other.getWorkspaceContext());
      }
      if (!other.getHostname().isEmpty()) {
        hostname_ = other.hostname_;
        bitField0_ |= 0x00000002;
        onChanged();
      }
      if (!other.getWorkingDirectory().isEmpty()) {
        workingDirectory_ = other.workingDirectory_;
        bitField0_ |= 0x00000004;
        onChanged();
      }
      if (!other.getToolTag().isEmpty()) {
        toolTag_ = other.toolTag_;
        bitField0_ |= 0x00000008;
        onChanged();
      }
      if (commandLinesBuilder_ == null) {
        if (!other.commandLines_.isEmpty()) {
          if (commandLines_.isEmpty()) {
            commandLines_ = other.commandLines_;
            bitField0_ = (bitField0_ & ~0x00000010);
          } else {
            ensureCommandLinesIsMutable();
            commandLines_.addAll(other.commandLines_);
          }
          onChanged();
        }
      } else {
        if (!other.commandLines_.isEmpty()) {
          if (commandLinesBuilder_.isEmpty()) {
            commandLinesBuilder_.dispose();
            commandLinesBuilder_ = null;
            commandLines_ = other.commandLines_;
            bitField0_ = (bitField0_ & ~0x00000010);
            commandLinesBuilder_ = 
              com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?
                 getCommandLinesFieldBuilder() : null;
          } else {
            commandLinesBuilder_.addAllMessages(other.commandLines_);
          }
        }
      }
      this.mergeUnknownFields(other.getUnknownFields());
      onChanged();
      return this;
    }

    @java.lang.Override
    public final boolean isInitialized() {
      return true;
    }

    @java.lang.Override
    public Builder mergeFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 10: {
              input.readMessage(
                  getWorkspaceContextFieldBuilder().getBuilder(),
                  extensionRegistry);
              bitField0_ |= 0x00000001;
              break;
            } // case 10
            case 26: {
              hostname_ = input.readStringRequireUtf8();
              bitField0_ |= 0x00000002;
              break;
            } // case 26
            case 34: {
              workingDirectory_ = input.readStringRequireUtf8();
              bitField0_ |= 0x00000004;
              break;
            } // case 34
            case 42: {
              toolTag_ = input.readStringRequireUtf8();
              bitField0_ |= 0x00000008;
              break;
            } // case 42
            case 58: {
              com.google.devtools.resultstore.v2.CommandLine m =
                  input.readMessage(
                      com.google.devtools.resultstore.v2.CommandLine.parser(),
                      extensionRegistry);
              if (commandLinesBuilder_ == null) {
                ensureCommandLinesIsMutable();
                commandLines_.add(m);
              } else {
                commandLinesBuilder_.addMessage(m);
              }
              break;
            } // case 58
            default: {
              if (!super.parseUnknownField(input, extensionRegistry, tag)) {
                done = true; // was an endgroup tag
              }
              break;
            } // default:
          } // switch (tag)
        } // while (!done)
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.unwrapIOException();
      } finally {
        onChanged();
      } // finally
      return this;
    }
    private int bitField0_;

    private com.google.devtools.resultstore.v2.WorkspaceContext workspaceContext_;
    private com.google.protobuf.SingleFieldBuilderV3<
        com.google.devtools.resultstore.v2.WorkspaceContext, com.google.devtools.resultstore.v2.WorkspaceContext.Builder, com.google.devtools.resultstore.v2.WorkspaceContextOrBuilder> workspaceContextBuilder_;
    /**
     * <pre>
     * Data about the workspace that might be useful for debugging.
     * </pre>
     *
     * <code>.google.devtools.resultstore.v2.WorkspaceContext workspace_context = 1;</code>
     * @return Whether the workspaceContext field is set.
     */
    public boolean hasWorkspaceContext() {
      return ((bitField0_ & 0x00000001) != 0);
    }
    /**
     * <pre>
     * Data about the workspace that might be useful for debugging.
     * </pre>
     *
     * <code>.google.devtools.resultstore.v2.WorkspaceContext workspace_context = 1;</code>
     * @return The workspaceContext.
     */
    public com.google.devtools.resultstore.v2.WorkspaceContext getWorkspaceContext() {
      if (workspaceContextBuilder_ == null) {
        return workspaceContext_ == null ? com.google.devtools.resultstore.v2.WorkspaceContext.getDefaultInstance() : workspaceContext_;
      } else {
        return workspaceContextBuilder_.getMessage();
      }
    }
    /**
     * <pre>
     * Data about the workspace that might be useful for debugging.
     * </pre>
     *
     * <code>.google.devtools.resultstore.v2.WorkspaceContext workspace_context = 1;</code>
     */
    public Builder setWorkspaceContext(com.google.devtools.resultstore.v2.WorkspaceContext value) {
      if (workspaceContextBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        workspaceContext_ = value;
      } else {
        workspaceContextBuilder_.setMessage(value);
      }
      bitField0_ |= 0x00000001;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * Data about the workspace that might be useful for debugging.
     * </pre>
     *
     * <code>.google.devtools.resultstore.v2.WorkspaceContext workspace_context = 1;</code>
     */
    public Builder setWorkspaceContext(
        com.google.devtools.resultstore.v2.WorkspaceContext.Builder builderForValue) {
      if (workspaceContextBuilder_ == null) {
        workspaceContext_ = builderForValue.build();
      } else {
        workspaceContextBuilder_.setMessage(builderForValue.build());
      }
      bitField0_ |= 0x00000001;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * Data about the workspace that might be useful for debugging.
     * </pre>
     *
     * <code>.google.devtools.resultstore.v2.WorkspaceContext workspace_context = 1;</code>
     */
    public Builder mergeWorkspaceContext(com.google.devtools.resultstore.v2.WorkspaceContext value) {
      if (workspaceContextBuilder_ == null) {
        if (((bitField0_ & 0x00000001) != 0) &&
          workspaceContext_ != null &&
          workspaceContext_ != com.google.devtools.resultstore.v2.WorkspaceContext.getDefaultInstance()) {
          getWorkspaceContextBuilder().mergeFrom(value);
        } else {
          workspaceContext_ = value;
        }
      } else {
        workspaceContextBuilder_.mergeFrom(value);
      }
      bitField0_ |= 0x00000001;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * Data about the workspace that might be useful for debugging.
     * </pre>
     *
     * <code>.google.devtools.resultstore.v2.WorkspaceContext workspace_context = 1;</code>
     */
    public Builder clearWorkspaceContext() {
      bitField0_ = (bitField0_ & ~0x00000001);
      workspaceContext_ = null;
      if (workspaceContextBuilder_ != null) {
        workspaceContextBuilder_.dispose();
        workspaceContextBuilder_ = null;
      }
      onChanged();
      return this;
    }
    /**
     * <pre>
     * Data about the workspace that might be useful for debugging.
     * </pre>
     *
     * <code>.google.devtools.resultstore.v2.WorkspaceContext workspace_context = 1;</code>
     */
    public com.google.devtools.resultstore.v2.WorkspaceContext.Builder getWorkspaceContextBuilder() {
      bitField0_ |= 0x00000001;
      onChanged();
      return getWorkspaceContextFieldBuilder().getBuilder();
    }
    /**
     * <pre>
     * Data about the workspace that might be useful for debugging.
     * </pre>
     *
     * <code>.google.devtools.resultstore.v2.WorkspaceContext workspace_context = 1;</code>
     */
    public com.google.devtools.resultstore.v2.WorkspaceContextOrBuilder getWorkspaceContextOrBuilder() {
      if (workspaceContextBuilder_ != null) {
        return workspaceContextBuilder_.getMessageOrBuilder();
      } else {
        return workspaceContext_ == null ?
            com.google.devtools.resultstore.v2.WorkspaceContext.getDefaultInstance() : workspaceContext_;
      }
    }
    /**
     * <pre>
     * Data about the workspace that might be useful for debugging.
     * </pre>
     *
     * <code>.google.devtools.resultstore.v2.WorkspaceContext workspace_context = 1;</code>
     */
    private com.google.protobuf.SingleFieldBuilderV3<
        com.google.devtools.resultstore.v2.WorkspaceContext, com.google.devtools.resultstore.v2.WorkspaceContext.Builder, com.google.devtools.resultstore.v2.WorkspaceContextOrBuilder> 
        getWorkspaceContextFieldBuilder() {
      if (workspaceContextBuilder_ == null) {
        workspaceContextBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
            com.google.devtools.resultstore.v2.WorkspaceContext, com.google.devtools.resultstore.v2.WorkspaceContext.Builder, com.google.devtools.resultstore.v2.WorkspaceContextOrBuilder>(
                getWorkspaceContext(),
                getParentForChildren(),
                isClean());
        workspaceContext_ = null;
      }
      return workspaceContextBuilder_;
    }

    private java.lang.Object hostname_ = "";
    /**
     * <pre>
     * Where the tool was invoked
     * </pre>
     *
     * <code>string hostname = 3;</code>
     * @return The hostname.
     */
    public java.lang.String getHostname() {
      java.lang.Object ref = hostname_;
      if (!(ref instanceof java.lang.String)) {
        com.google.protobuf.ByteString bs =
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        hostname_ = s;
        return s;
      } else {
        return (java.lang.String) ref;
      }
    }
    /**
     * <pre>
     * Where the tool was invoked
     * </pre>
     *
     * <code>string hostname = 3;</code>
     * @return The bytes for hostname.
     */
    public com.google.protobuf.ByteString
        getHostnameBytes() {
      java.lang.Object ref = hostname_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        hostname_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }
    /**
     * <pre>
     * Where the tool was invoked
     * </pre>
     *
     * <code>string hostname = 3;</code>
     * @param value The hostname to set.
     * @return This builder for chaining.
     */
    public Builder setHostname(
        java.lang.String value) {
      if (value == null) { throw new NullPointerException(); }
      hostname_ = value;
      bitField0_ |= 0x00000002;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * Where the tool was invoked
     * </pre>
     *
     * <code>string hostname = 3;</code>
     * @return This builder for chaining.
     */
    public Builder clearHostname() {
      hostname_ = getDefaultInstance().getHostname();
      bitField0_ = (bitField0_ & ~0x00000002);
      onChanged();
      return this;
    }
    /**
     * <pre>
     * Where the tool was invoked
     * </pre>
     *
     * <code>string hostname = 3;</code>
     * @param value The bytes for hostname to set.
     * @return This builder for chaining.
     */
    public Builder setHostnameBytes(
        com.google.protobuf.ByteString value) {
      if (value == null) { throw new NullPointerException(); }
      checkByteStringIsUtf8(value);
      hostname_ = value;
      bitField0_ |= 0x00000002;
      onChanged();
      return this;
    }

    private java.lang.Object workingDirectory_ = "";
    /**
     * <pre>
     * The client's working directory where the build/test was run from.
     * </pre>
     *
     * <code>string working_directory = 4;</code>
     * @return The workingDirectory.
     */
    public java.lang.String getWorkingDirectory() {
      java.lang.Object ref = workingDirectory_;
      if (!(ref instanceof java.lang.String)) {
        com.google.protobuf.ByteString bs =
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        workingDirectory_ = s;
        return s;
      } else {
        return (java.lang.String) ref;
      }
    }
    /**
     * <pre>
     * The client's working directory where the build/test was run from.
     * </pre>
     *
     * <code>string working_directory = 4;</code>
     * @return The bytes for workingDirectory.
     */
    public com.google.protobuf.ByteString
        getWorkingDirectoryBytes() {
      java.lang.Object ref = workingDirectory_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        workingDirectory_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }
    /**
     * <pre>
     * The client's working directory where the build/test was run from.
     * </pre>
     *
     * <code>string working_directory = 4;</code>
     * @param value The workingDirectory to set.
     * @return This builder for chaining.
     */
    public Builder setWorkingDirectory(
        java.lang.String value) {
      if (value == null) { throw new NullPointerException(); }
      workingDirectory_ = value;
      bitField0_ |= 0x00000004;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * The client's working directory where the build/test was run from.
     * </pre>
     *
     * <code>string working_directory = 4;</code>
     * @return This builder for chaining.
     */
    public Builder clearWorkingDirectory() {
      workingDirectory_ = getDefaultInstance().getWorkingDirectory();
      bitField0_ = (bitField0_ & ~0x00000004);
      onChanged();
      return this;
    }
    /**
     * <pre>
     * The client's working directory where the build/test was run from.
     * </pre>
     *
     * <code>string working_directory = 4;</code>
     * @param value The bytes for workingDirectory to set.
     * @return This builder for chaining.
     */
    public Builder setWorkingDirectoryBytes(
        com.google.protobuf.ByteString value) {
      if (value == null) { throw new NullPointerException(); }
      checkByteStringIsUtf8(value);
      workingDirectory_ = value;
      bitField0_ |= 0x00000004;
      onChanged();
      return this;
    }

    private java.lang.Object toolTag_ = "";
    /**
     * <pre>
     * Tools should set tool_tag to the name of the tool or use case.
     * </pre>
     *
     * <code>string tool_tag = 5;</code>
     * @return The toolTag.
     */
    public java.lang.String getToolTag() {
      java.lang.Object ref = toolTag_;
      if (!(ref instanceof java.lang.String)) {
        com.google.protobuf.ByteString bs =
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        toolTag_ = s;
        return s;
      } else {
        return (java.lang.String) ref;
      }
    }
    /**
     * <pre>
     * Tools should set tool_tag to the name of the tool or use case.
     * </pre>
     *
     * <code>string tool_tag = 5;</code>
     * @return The bytes for toolTag.
     */
    public com.google.protobuf.ByteString
        getToolTagBytes() {
      java.lang.Object ref = toolTag_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        toolTag_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }
    /**
     * <pre>
     * Tools should set tool_tag to the name of the tool or use case.
     * </pre>
     *
     * <code>string tool_tag = 5;</code>
     * @param value The toolTag to set.
     * @return This builder for chaining.
     */
    public Builder setToolTag(
        java.lang.String value) {
      if (value == null) { throw new NullPointerException(); }
      toolTag_ = value;
      bitField0_ |= 0x00000008;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * Tools should set tool_tag to the name of the tool or use case.
     * </pre>
     *
     * <code>string tool_tag = 5;</code>
     * @return This builder for chaining.
     */
    public Builder clearToolTag() {
      toolTag_ = getDefaultInstance().getToolTag();
      bitField0_ = (bitField0_ & ~0x00000008);
      onChanged();
      return this;
    }
    /**
     * <pre>
     * Tools should set tool_tag to the name of the tool or use case.
     * </pre>
     *
     * <code>string tool_tag = 5;</code>
     * @param value The bytes for toolTag to set.
     * @return This builder for chaining.
     */
    public Builder setToolTagBytes(
        com.google.protobuf.ByteString value) {
      if (value == null) { throw new NullPointerException(); }
      checkByteStringIsUtf8(value);
      toolTag_ = value;
      bitField0_ |= 0x00000008;
      onChanged();
      return this;
    }

    private java.util.List<com.google.devtools.resultstore.v2.CommandLine> commandLines_ =
      java.util.Collections.emptyList();
    private void ensureCommandLinesIsMutable() {
      if (!((bitField0_ & 0x00000010) != 0)) {
        commandLines_ = new java.util.ArrayList<com.google.devtools.resultstore.v2.CommandLine>(commandLines_);
        bitField0_ |= 0x00000010;
       }
    }

    private com.google.protobuf.RepeatedFieldBuilderV3<
        com.google.devtools.resultstore.v2.CommandLine, com.google.devtools.resultstore.v2.CommandLine.Builder, com.google.devtools.resultstore.v2.CommandLineOrBuilder> commandLinesBuilder_;

    /**
     * <pre>
     * The command lines invoked. The first command line is the one typed by the
     * user, then each one after that should be an expansion of the previous
     * command line.
     * </pre>
     *
     * <code>repeated .google.devtools.resultstore.v2.CommandLine command_lines = 7;</code>
     */
    public java.util.List<com.google.devtools.resultstore.v2.CommandLine> getCommandLinesList() {
      if (commandLinesBuilder_ == null) {
        return java.util.Collections.unmodifiableList(commandLines_);
      } else {
        return commandLinesBuilder_.getMessageList();
      }
    }
    /**
     * <pre>
     * The command lines invoked. The first command line is the one typed by the
     * user, then each one after that should be an expansion of the previous
     * command line.
     * </pre>
     *
     * <code>repeated .google.devtools.resultstore.v2.CommandLine command_lines = 7;</code>
     */
    public int getCommandLinesCount() {
      if (commandLinesBuilder_ == null) {
        return commandLines_.size();
      } else {
        return commandLinesBuilder_.getCount();
      }
    }
    /**
     * <pre>
     * The command lines invoked. The first command line is the one typed by the
     * user, then each one after that should be an expansion of the previous
     * command line.
     * </pre>
     *
     * <code>repeated .google.devtools.resultstore.v2.CommandLine command_lines = 7;</code>
     */
    public com.google.devtools.resultstore.v2.CommandLine getCommandLines(int index) {
      if (commandLinesBuilder_ == null) {
        return commandLines_.get(index);
      } else {
        return commandLinesBuilder_.getMessage(index);
      }
    }
    /**
     * <pre>
     * The command lines invoked. The first command line is the one typed by the
     * user, then each one after that should be an expansion of the previous
     * command line.
     * </pre>
     *
     * <code>repeated .google.devtools.resultstore.v2.CommandLine command_lines = 7;</code>
     */
    public Builder setCommandLines(
        int index, com.google.devtools.resultstore.v2.CommandLine value) {
      if (commandLinesBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureCommandLinesIsMutable();
        commandLines_.set(index, value);
        onChanged();
      } else {
        commandLinesBuilder_.setMessage(index, value);
      }
      return this;
    }
    /**
     * <pre>
     * The command lines invoked. The first command line is the one typed by the
     * user, then each one after that should be an expansion of the previous
     * command line.
     * </pre>
     *
     * <code>repeated .google.devtools.resultstore.v2.CommandLine command_lines = 7;</code>
     */
    public Builder setCommandLines(
        int index, com.google.devtools.resultstore.v2.CommandLine.Builder builderForValue) {
      if (commandLinesBuilder_ == null) {
        ensureCommandLinesIsMutable();
        commandLines_.set(index, builderForValue.build());
        onChanged();
      } else {
        commandLinesBuilder_.setMessage(index, builderForValue.build());
      }
      return this;
    }
    /**
     * <pre>
     * The command lines invoked. The first command line is the one typed by the
     * user, then each one after that should be an expansion of the previous
     * command line.
     * </pre>
     *
     * <code>repeated .google.devtools.resultstore.v2.CommandLine command_lines = 7;</code>
     */
    public Builder addCommandLines(com.google.devtools.resultstore.v2.CommandLine value) {
      if (commandLinesBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureCommandLinesIsMutable();
        commandLines_.add(value);
        onChanged();
      } else {
        commandLinesBuilder_.addMessage(value);
      }
      return this;
    }
    /**
     * <pre>
     * The command lines invoked. The first command line is the one typed by the
     * user, then each one after that should be an expansion of the previous
     * command line.
     * </pre>
     *
     * <code>repeated .google.devtools.resultstore.v2.CommandLine command_lines = 7;</code>
     */
    public Builder addCommandLines(
        int index, com.google.devtools.resultstore.v2.CommandLine value) {
      if (commandLinesBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureCommandLinesIsMutable();
        commandLines_.add(index, value);
        onChanged();
      } else {
        commandLinesBuilder_.addMessage(index, value);
      }
      return this;
    }
    /**
     * <pre>
     * The command lines invoked. The first command line is the one typed by the
     * user, then each one after that should be an expansion of the previous
     * command line.
     * </pre>
     *
     * <code>repeated .google.devtools.resultstore.v2.CommandLine command_lines = 7;</code>
     */
    public Builder addCommandLines(
        com.google.devtools.resultstore.v2.CommandLine.Builder builderForValue) {
      if (commandLinesBuilder_ == null) {
        ensureCommandLinesIsMutable();
        commandLines_.add(builderForValue.build());
        onChanged();
      } else {
        commandLinesBuilder_.addMessage(builderForValue.build());
      }
      return this;
    }
    /**
     * <pre>
     * The command lines invoked. The first command line is the one typed by the
     * user, then each one after that should be an expansion of the previous
     * command line.
     * </pre>
     *
     * <code>repeated .google.devtools.resultstore.v2.CommandLine command_lines = 7;</code>
     */
    public Builder addCommandLines(
        int index, com.google.devtools.resultstore.v2.CommandLine.Builder builderForValue) {
      if (commandLinesBuilder_ == null) {
        ensureCommandLinesIsMutable();
        commandLines_.add(index, builderForValue.build());
        onChanged();
      } else {
        commandLinesBuilder_.addMessage(index, builderForValue.build());
      }
      return this;
    }
    /**
     * <pre>
     * The command lines invoked. The first command line is the one typed by the
     * user, then each one after that should be an expansion of the previous
     * command line.
     * </pre>
     *
     * <code>repeated .google.devtools.resultstore.v2.CommandLine command_lines = 7;</code>
     */
    public Builder addAllCommandLines(
        java.lang.Iterable<? extends com.google.devtools.resultstore.v2.CommandLine> values) {
      if (commandLinesBuilder_ == null) {
        ensureCommandLinesIsMutable();
        com.google.protobuf.AbstractMessageLite.Builder.addAll(
            values, commandLines_);
        onChanged();
      } else {
        commandLinesBuilder_.addAllMessages(values);
      }
      return this;
    }
    /**
     * <pre>
     * The command lines invoked. The first command line is the one typed by the
     * user, then each one after that should be an expansion of the previous
     * command line.
     * </pre>
     *
     * <code>repeated .google.devtools.resultstore.v2.CommandLine command_lines = 7;</code>
     */
    public Builder clearCommandLines() {
      if (commandLinesBuilder_ == null) {
        commandLines_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000010);
        onChanged();
      } else {
        commandLinesBuilder_.clear();
      }
      return this;
    }
    /**
     * <pre>
     * The command lines invoked. The first command line is the one typed by the
     * user, then each one after that should be an expansion of the previous
     * command line.
     * </pre>
     *
     * <code>repeated .google.devtools.resultstore.v2.CommandLine command_lines = 7;</code>
     */
    public Builder removeCommandLines(int index) {
      if (commandLinesBuilder_ == null) {
        ensureCommandLinesIsMutable();
        commandLines_.remove(index);
        onChanged();
      } else {
        commandLinesBuilder_.remove(index);
      }
      return this;
    }
    /**
     * <pre>
     * The command lines invoked. The first command line is the one typed by the
     * user, then each one after that should be an expansion of the previous
     * command line.
     * </pre>
     *
     * <code>repeated .google.devtools.resultstore.v2.CommandLine command_lines = 7;</code>
     */
    public com.google.devtools.resultstore.v2.CommandLine.Builder getCommandLinesBuilder(
        int index) {
      return getCommandLinesFieldBuilder().getBuilder(index);
    }
    /**
     * <pre>
     * The command lines invoked. The first command line is the one typed by the
     * user, then each one after that should be an expansion of the previous
     * command line.
     * </pre>
     *
     * <code>repeated .google.devtools.resultstore.v2.CommandLine command_lines = 7;</code>
     */
    public com.google.devtools.resultstore.v2.CommandLineOrBuilder getCommandLinesOrBuilder(
        int index) {
      if (commandLinesBuilder_ == null) {
        return commandLines_.get(index);  } else {
        return commandLinesBuilder_.getMessageOrBuilder(index);
      }
    }
    /**
     * <pre>
     * The command lines invoked. The first command line is the one typed by the
     * user, then each one after that should be an expansion of the previous
     * command line.
     * </pre>
     *
     * <code>repeated .google.devtools.resultstore.v2.CommandLine command_lines = 7;</code>
     */
    public java.util.List<? extends com.google.devtools.resultstore.v2.CommandLineOrBuilder> 
         getCommandLinesOrBuilderList() {
      if (commandLinesBuilder_ != null) {
        return commandLinesBuilder_.getMessageOrBuilderList();
      } else {
        return java.util.Collections.unmodifiableList(commandLines_);
      }
    }
    /**
     * <pre>
     * The command lines invoked. The first command line is the one typed by the
     * user, then each one after that should be an expansion of the previous
     * command line.
     * </pre>
     *
     * <code>repeated .google.devtools.resultstore.v2.CommandLine command_lines = 7;</code>
     */
    public com.google.devtools.resultstore.v2.CommandLine.Builder addCommandLinesBuilder() {
      return getCommandLinesFieldBuilder().addBuilder(
          com.google.devtools.resultstore.v2.CommandLine.getDefaultInstance());
    }
    /**
     * <pre>
     * The command lines invoked. The first command line is the one typed by the
     * user, then each one after that should be an expansion of the previous
     * command line.
     * </pre>
     *
     * <code>repeated .google.devtools.resultstore.v2.CommandLine command_lines = 7;</code>
     */
    public com.google.devtools.resultstore.v2.CommandLine.Builder addCommandLinesBuilder(
        int index) {
      return getCommandLinesFieldBuilder().addBuilder(
          index, com.google.devtools.resultstore.v2.CommandLine.getDefaultInstance());
    }
    /**
     * <pre>
     * The command lines invoked. The first command line is the one typed by the
     * user, then each one after that should be an expansion of the previous
     * command line.
     * </pre>
     *
     * <code>repeated .google.devtools.resultstore.v2.CommandLine command_lines = 7;</code>
     */
    public java.util.List<com.google.devtools.resultstore.v2.CommandLine.Builder> 
         getCommandLinesBuilderList() {
      return getCommandLinesFieldBuilder().getBuilderList();
    }
    private com.google.protobuf.RepeatedFieldBuilderV3<
        com.google.devtools.resultstore.v2.CommandLine, com.google.devtools.resultstore.v2.CommandLine.Builder, com.google.devtools.resultstore.v2.CommandLineOrBuilder> 
        getCommandLinesFieldBuilder() {
      if (commandLinesBuilder_ == null) {
        commandLinesBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<
            com.google.devtools.resultstore.v2.CommandLine, com.google.devtools.resultstore.v2.CommandLine.Builder, com.google.devtools.resultstore.v2.CommandLineOrBuilder>(
                commandLines_,
                ((bitField0_ & 0x00000010) != 0),
                getParentForChildren(),
                isClean());
        commandLines_ = null;
      }
      return commandLinesBuilder_;
    }
    @java.lang.Override
    public final Builder setUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return super.setUnknownFields(unknownFields);
    }

    @java.lang.Override
    public final Builder mergeUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return super.mergeUnknownFields(unknownFields);
    }


    // @@protoc_insertion_point(builder_scope:google.devtools.resultstore.v2.WorkspaceInfo)
  }

  // @@protoc_insertion_point(class_scope:google.devtools.resultstore.v2.WorkspaceInfo)
  private static final com.google.devtools.resultstore.v2.WorkspaceInfo DEFAULT_INSTANCE;
  static {
    DEFAULT_INSTANCE = new com.google.devtools.resultstore.v2.WorkspaceInfo();
  }

  public static com.google.devtools.resultstore.v2.WorkspaceInfo getDefaultInstance() {
    return DEFAULT_INSTANCE;
  }

  private static final com.google.protobuf.Parser<WorkspaceInfo>
      PARSER = new com.google.protobuf.AbstractParser<WorkspaceInfo>() {
    @java.lang.Override
    public WorkspaceInfo parsePartialFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      Builder builder = newBuilder();
      try {
        builder.mergeFrom(input, extensionRegistry);
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(builder.buildPartial());
      } catch (com.google.protobuf.UninitializedMessageException e) {
        throw e.asInvalidProtocolBufferException().setUnfinishedMessage(builder.buildPartial());
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(e)
            .setUnfinishedMessage(builder.buildPartial());
      }
      return builder.buildPartial();
    }
  };

  public static com.google.protobuf.Parser<WorkspaceInfo> parser() {
    return PARSER;
  }

  @java.lang.Override
  public com.google.protobuf.Parser<WorkspaceInfo> getParserForType() {
    return PARSER;
  }

  @java.lang.Override
  public com.google.devtools.resultstore.v2.WorkspaceInfo getDefaultInstanceForType() {
    return DEFAULT_INSTANCE;
  }

}

