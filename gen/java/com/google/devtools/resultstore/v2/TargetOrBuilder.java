// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: google/devtools/resultstore/v2/target.proto

package com.google.devtools.resultstore.v2;

public interface TargetOrBuilder extends
    // @@protoc_insertion_point(interface_extends:google.devtools.resultstore.v2.Target)
    com.google.protobuf.MessageOrBuilder {

  /**
   * <pre>
   * The resource name.  Its format must be:
   * invocations/${INVOCATION_ID}/targets/${url_encode(TARGET_ID)}
   * </pre>
   *
   * <code>string name = 1;</code>
   * @return The name.
   */
  java.lang.String getName();
  /**
   * <pre>
   * The resource name.  Its format must be:
   * invocations/${INVOCATION_ID}/targets/${url_encode(TARGET_ID)}
   * </pre>
   *
   * <code>string name = 1;</code>
   * @return The bytes for name.
   */
  com.google.protobuf.ByteString
      getNameBytes();

  /**
   * <pre>
   * The resource ID components that identify the Target. They must match the
   * resource name after proper encoding.
   * </pre>
   *
   * <code>.google.devtools.resultstore.v2.Target.Id id = 2;</code>
   * @return Whether the id field is set.
   */
  boolean hasId();
  /**
   * <pre>
   * The resource ID components that identify the Target. They must match the
   * resource name after proper encoding.
   * </pre>
   *
   * <code>.google.devtools.resultstore.v2.Target.Id id = 2;</code>
   * @return The id.
   */
  com.google.devtools.resultstore.v2.Target.Id getId();
  /**
   * <pre>
   * The resource ID components that identify the Target. They must match the
   * resource name after proper encoding.
   * </pre>
   *
   * <code>.google.devtools.resultstore.v2.Target.Id id = 2;</code>
   */
  com.google.devtools.resultstore.v2.Target.IdOrBuilder getIdOrBuilder();

  /**
   * <pre>
   * This is the aggregate status of the target.
   * </pre>
   *
   * <code>.google.devtools.resultstore.v2.StatusAttributes status_attributes = 3;</code>
   * @return Whether the statusAttributes field is set.
   */
  boolean hasStatusAttributes();
  /**
   * <pre>
   * This is the aggregate status of the target.
   * </pre>
   *
   * <code>.google.devtools.resultstore.v2.StatusAttributes status_attributes = 3;</code>
   * @return The statusAttributes.
   */
  com.google.devtools.resultstore.v2.StatusAttributes getStatusAttributes();
  /**
   * <pre>
   * This is the aggregate status of the target.
   * </pre>
   *
   * <code>.google.devtools.resultstore.v2.StatusAttributes status_attributes = 3;</code>
   */
  com.google.devtools.resultstore.v2.StatusAttributesOrBuilder getStatusAttributesOrBuilder();

  /**
   * <pre>
   * When this target started and its duration.
   * </pre>
   *
   * <code>.google.devtools.resultstore.v2.Timing timing = 4;</code>
   * @return Whether the timing field is set.
   */
  boolean hasTiming();
  /**
   * <pre>
   * When this target started and its duration.
   * </pre>
   *
   * <code>.google.devtools.resultstore.v2.Timing timing = 4;</code>
   * @return The timing.
   */
  com.google.devtools.resultstore.v2.Timing getTiming();
  /**
   * <pre>
   * When this target started and its duration.
   * </pre>
   *
   * <code>.google.devtools.resultstore.v2.Timing timing = 4;</code>
   */
  com.google.devtools.resultstore.v2.TimingOrBuilder getTimingOrBuilder();

  /**
   * <pre>
   * Attributes that apply to all targets.
   * </pre>
   *
   * <code>.google.devtools.resultstore.v2.TargetAttributes target_attributes = 5;</code>
   * @return Whether the targetAttributes field is set.
   */
  boolean hasTargetAttributes();
  /**
   * <pre>
   * Attributes that apply to all targets.
   * </pre>
   *
   * <code>.google.devtools.resultstore.v2.TargetAttributes target_attributes = 5;</code>
   * @return The targetAttributes.
   */
  com.google.devtools.resultstore.v2.TargetAttributes getTargetAttributes();
  /**
   * <pre>
   * Attributes that apply to all targets.
   * </pre>
   *
   * <code>.google.devtools.resultstore.v2.TargetAttributes target_attributes = 5;</code>
   */
  com.google.devtools.resultstore.v2.TargetAttributesOrBuilder getTargetAttributesOrBuilder();

  /**
   * <pre>
   * Attributes that apply to all test actions under this target.
   * </pre>
   *
   * <code>.google.devtools.resultstore.v2.TestAttributes test_attributes = 6;</code>
   * @return Whether the testAttributes field is set.
   */
  boolean hasTestAttributes();
  /**
   * <pre>
   * Attributes that apply to all test actions under this target.
   * </pre>
   *
   * <code>.google.devtools.resultstore.v2.TestAttributes test_attributes = 6;</code>
   * @return The testAttributes.
   */
  com.google.devtools.resultstore.v2.TestAttributes getTestAttributes();
  /**
   * <pre>
   * Attributes that apply to all test actions under this target.
   * </pre>
   *
   * <code>.google.devtools.resultstore.v2.TestAttributes test_attributes = 6;</code>
   */
  com.google.devtools.resultstore.v2.TestAttributesOrBuilder getTestAttributesOrBuilder();

  /**
   * <pre>
   * Arbitrary name-value pairs.
   * This is implemented as a multi-map. Multiple properties are allowed with
   * the same key. Properties will be returned in lexicographical order by key.
   * </pre>
   *
   * <code>repeated .google.devtools.resultstore.v2.Property properties = 7;</code>
   */
  java.util.List<com.google.devtools.resultstore.v2.Property> 
      getPropertiesList();
  /**
   * <pre>
   * Arbitrary name-value pairs.
   * This is implemented as a multi-map. Multiple properties are allowed with
   * the same key. Properties will be returned in lexicographical order by key.
   * </pre>
   *
   * <code>repeated .google.devtools.resultstore.v2.Property properties = 7;</code>
   */
  com.google.devtools.resultstore.v2.Property getProperties(int index);
  /**
   * <pre>
   * Arbitrary name-value pairs.
   * This is implemented as a multi-map. Multiple properties are allowed with
   * the same key. Properties will be returned in lexicographical order by key.
   * </pre>
   *
   * <code>repeated .google.devtools.resultstore.v2.Property properties = 7;</code>
   */
  int getPropertiesCount();
  /**
   * <pre>
   * Arbitrary name-value pairs.
   * This is implemented as a multi-map. Multiple properties are allowed with
   * the same key. Properties will be returned in lexicographical order by key.
   * </pre>
   *
   * <code>repeated .google.devtools.resultstore.v2.Property properties = 7;</code>
   */
  java.util.List<? extends com.google.devtools.resultstore.v2.PropertyOrBuilder> 
      getPropertiesOrBuilderList();
  /**
   * <pre>
   * Arbitrary name-value pairs.
   * This is implemented as a multi-map. Multiple properties are allowed with
   * the same key. Properties will be returned in lexicographical order by key.
   * </pre>
   *
   * <code>repeated .google.devtools.resultstore.v2.Property properties = 7;</code>
   */
  com.google.devtools.resultstore.v2.PropertyOrBuilder getPropertiesOrBuilder(
      int index);

  /**
   * <pre>
   * A list of file references for target level files.
   * The file IDs must be unique within this list. Duplicate file IDs will
   * result in an error. Files will be returned in lexicographical order by ID.
   * Use this field to specify outputs not related to a configuration.
   * </pre>
   *
   * <code>repeated .google.devtools.resultstore.v2.File files = 8;</code>
   */
  java.util.List<com.google.devtools.resultstore.v2.File> 
      getFilesList();
  /**
   * <pre>
   * A list of file references for target level files.
   * The file IDs must be unique within this list. Duplicate file IDs will
   * result in an error. Files will be returned in lexicographical order by ID.
   * Use this field to specify outputs not related to a configuration.
   * </pre>
   *
   * <code>repeated .google.devtools.resultstore.v2.File files = 8;</code>
   */
  com.google.devtools.resultstore.v2.File getFiles(int index);
  /**
   * <pre>
   * A list of file references for target level files.
   * The file IDs must be unique within this list. Duplicate file IDs will
   * result in an error. Files will be returned in lexicographical order by ID.
   * Use this field to specify outputs not related to a configuration.
   * </pre>
   *
   * <code>repeated .google.devtools.resultstore.v2.File files = 8;</code>
   */
  int getFilesCount();
  /**
   * <pre>
   * A list of file references for target level files.
   * The file IDs must be unique within this list. Duplicate file IDs will
   * result in an error. Files will be returned in lexicographical order by ID.
   * Use this field to specify outputs not related to a configuration.
   * </pre>
   *
   * <code>repeated .google.devtools.resultstore.v2.File files = 8;</code>
   */
  java.util.List<? extends com.google.devtools.resultstore.v2.FileOrBuilder> 
      getFilesOrBuilderList();
  /**
   * <pre>
   * A list of file references for target level files.
   * The file IDs must be unique within this list. Duplicate file IDs will
   * result in an error. Files will be returned in lexicographical order by ID.
   * Use this field to specify outputs not related to a configuration.
   * </pre>
   *
   * <code>repeated .google.devtools.resultstore.v2.File files = 8;</code>
   */
  com.google.devtools.resultstore.v2.FileOrBuilder getFilesOrBuilder(
      int index);

  /**
   * <pre>
   * Provides a hint to clients as to whether to display the Target to users.
   * If true then clients likely want to display the Target by default.
   * Once set to true, this may not be set back to false.
   * </pre>
   *
   * <code>bool visible = 10;</code>
   * @return The visible.
   */
  boolean getVisible();
}
