// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: google/devtools/resultstore/v2/common.proto

package com.google.devtools.resultstore.v2;

/**
 * <pre>
 * These correspond to the prefix of the rule name. Eg cc_test has language CC.
 * </pre>
 *
 * Protobuf enum {@code google.devtools.resultstore.v2.Language}
 */
public enum Language
    implements com.google.protobuf.ProtocolMessageEnum {
  /**
   * <pre>
   * Language unspecified or not listed here.
   * </pre>
   *
   * <code>LANGUAGE_UNSPECIFIED = 0;</code>
   */
  LANGUAGE_UNSPECIFIED(0),
  /**
   * <pre>
   * Not related to any particular language
   * </pre>
   *
   * <code>NONE = 1;</code>
   */
  NONE(1),
  /**
   * <pre>
   * Android
   * </pre>
   *
   * <code>ANDROID = 2;</code>
   */
  ANDROID(2),
  /**
   * <pre>
   * ActionScript (Flash)
   * </pre>
   *
   * <code>AS = 3;</code>
   */
  AS(3),
  /**
   * <pre>
   * C++ or C
   * </pre>
   *
   * <code>CC = 4;</code>
   */
  CC(4),
  /**
   * <pre>
   * Cascading-Style-Sheets
   * </pre>
   *
   * <code>CSS = 5;</code>
   */
  CSS(5),
  /**
   * <pre>
   * Dart
   * </pre>
   *
   * <code>DART = 6;</code>
   */
  DART(6),
  /**
   * <pre>
   * Go
   * </pre>
   *
   * <code>GO = 7;</code>
   */
  GO(7),
  /**
   * <pre>
   * Google-Web-Toolkit
   * </pre>
   *
   * <code>GWT = 8;</code>
   */
  GWT(8),
  /**
   * <pre>
   * Haskell
   * </pre>
   *
   * <code>HASKELL = 9;</code>
   */
  HASKELL(9),
  /**
   * <pre>
   * Java
   * </pre>
   *
   * <code>JAVA = 10;</code>
   */
  JAVA(10),
  /**
   * <pre>
   * Javascript
   * </pre>
   *
   * <code>JS = 11;</code>
   */
  JS(11),
  /**
   * <pre>
   * Lisp
   * </pre>
   *
   * <code>LISP = 12;</code>
   */
  LISP(12),
  /**
   * <pre>
   * Objective-C
   * </pre>
   *
   * <code>OBJC = 13;</code>
   */
  OBJC(13),
  /**
   * <pre>
   * Python
   * </pre>
   *
   * <code>PY = 14;</code>
   */
  PY(14),
  /**
   * <pre>
   * Shell (Typically Bash)
   * </pre>
   *
   * <code>SH = 15;</code>
   */
  SH(15),
  /**
   * <pre>
   * Swift
   * </pre>
   *
   * <code>SWIFT = 16;</code>
   */
  SWIFT(16),
  /**
   * <pre>
   * Typescript
   * </pre>
   *
   * <code>TS = 18;</code>
   */
  TS(18),
  /**
   * <pre>
   * Webtesting
   * </pre>
   *
   * <code>WEB = 19;</code>
   */
  WEB(19),
  /**
   * <pre>
   * Scala
   * </pre>
   *
   * <code>SCALA = 20;</code>
   */
  SCALA(20),
  /**
   * <pre>
   * Protocol Buffer
   * </pre>
   *
   * <code>PROTO = 21;</code>
   */
  PROTO(21),
  /**
   * <pre>
   * Extensible Markup Language
   * </pre>
   *
   * <code>XML = 22;</code>
   */
  XML(22),
  UNRECOGNIZED(-1),
  ;

  /**
   * <pre>
   * Language unspecified or not listed here.
   * </pre>
   *
   * <code>LANGUAGE_UNSPECIFIED = 0;</code>
   */
  public static final int LANGUAGE_UNSPECIFIED_VALUE = 0;
  /**
   * <pre>
   * Not related to any particular language
   * </pre>
   *
   * <code>NONE = 1;</code>
   */
  public static final int NONE_VALUE = 1;
  /**
   * <pre>
   * Android
   * </pre>
   *
   * <code>ANDROID = 2;</code>
   */
  public static final int ANDROID_VALUE = 2;
  /**
   * <pre>
   * ActionScript (Flash)
   * </pre>
   *
   * <code>AS = 3;</code>
   */
  public static final int AS_VALUE = 3;
  /**
   * <pre>
   * C++ or C
   * </pre>
   *
   * <code>CC = 4;</code>
   */
  public static final int CC_VALUE = 4;
  /**
   * <pre>
   * Cascading-Style-Sheets
   * </pre>
   *
   * <code>CSS = 5;</code>
   */
  public static final int CSS_VALUE = 5;
  /**
   * <pre>
   * Dart
   * </pre>
   *
   * <code>DART = 6;</code>
   */
  public static final int DART_VALUE = 6;
  /**
   * <pre>
   * Go
   * </pre>
   *
   * <code>GO = 7;</code>
   */
  public static final int GO_VALUE = 7;
  /**
   * <pre>
   * Google-Web-Toolkit
   * </pre>
   *
   * <code>GWT = 8;</code>
   */
  public static final int GWT_VALUE = 8;
  /**
   * <pre>
   * Haskell
   * </pre>
   *
   * <code>HASKELL = 9;</code>
   */
  public static final int HASKELL_VALUE = 9;
  /**
   * <pre>
   * Java
   * </pre>
   *
   * <code>JAVA = 10;</code>
   */
  public static final int JAVA_VALUE = 10;
  /**
   * <pre>
   * Javascript
   * </pre>
   *
   * <code>JS = 11;</code>
   */
  public static final int JS_VALUE = 11;
  /**
   * <pre>
   * Lisp
   * </pre>
   *
   * <code>LISP = 12;</code>
   */
  public static final int LISP_VALUE = 12;
  /**
   * <pre>
   * Objective-C
   * </pre>
   *
   * <code>OBJC = 13;</code>
   */
  public static final int OBJC_VALUE = 13;
  /**
   * <pre>
   * Python
   * </pre>
   *
   * <code>PY = 14;</code>
   */
  public static final int PY_VALUE = 14;
  /**
   * <pre>
   * Shell (Typically Bash)
   * </pre>
   *
   * <code>SH = 15;</code>
   */
  public static final int SH_VALUE = 15;
  /**
   * <pre>
   * Swift
   * </pre>
   *
   * <code>SWIFT = 16;</code>
   */
  public static final int SWIFT_VALUE = 16;
  /**
   * <pre>
   * Typescript
   * </pre>
   *
   * <code>TS = 18;</code>
   */
  public static final int TS_VALUE = 18;
  /**
   * <pre>
   * Webtesting
   * </pre>
   *
   * <code>WEB = 19;</code>
   */
  public static final int WEB_VALUE = 19;
  /**
   * <pre>
   * Scala
   * </pre>
   *
   * <code>SCALA = 20;</code>
   */
  public static final int SCALA_VALUE = 20;
  /**
   * <pre>
   * Protocol Buffer
   * </pre>
   *
   * <code>PROTO = 21;</code>
   */
  public static final int PROTO_VALUE = 21;
  /**
   * <pre>
   * Extensible Markup Language
   * </pre>
   *
   * <code>XML = 22;</code>
   */
  public static final int XML_VALUE = 22;


  public final int getNumber() {
    if (this == UNRECOGNIZED) {
      throw new java.lang.IllegalArgumentException(
          "Can't get the number of an unknown enum value.");
    }
    return value;
  }

  /**
   * @param value The numeric wire value of the corresponding enum entry.
   * @return The enum associated with the given numeric wire value.
   * @deprecated Use {@link #forNumber(int)} instead.
   */
  @java.lang.Deprecated
  public static Language valueOf(int value) {
    return forNumber(value);
  }

  /**
   * @param value The numeric wire value of the corresponding enum entry.
   * @return The enum associated with the given numeric wire value.
   */
  public static Language forNumber(int value) {
    switch (value) {
      case 0: return LANGUAGE_UNSPECIFIED;
      case 1: return NONE;
      case 2: return ANDROID;
      case 3: return AS;
      case 4: return CC;
      case 5: return CSS;
      case 6: return DART;
      case 7: return GO;
      case 8: return GWT;
      case 9: return HASKELL;
      case 10: return JAVA;
      case 11: return JS;
      case 12: return LISP;
      case 13: return OBJC;
      case 14: return PY;
      case 15: return SH;
      case 16: return SWIFT;
      case 18: return TS;
      case 19: return WEB;
      case 20: return SCALA;
      case 21: return PROTO;
      case 22: return XML;
      default: return null;
    }
  }

  public static com.google.protobuf.Internal.EnumLiteMap<Language>
      internalGetValueMap() {
    return internalValueMap;
  }
  private static final com.google.protobuf.Internal.EnumLiteMap<
      Language> internalValueMap =
        new com.google.protobuf.Internal.EnumLiteMap<Language>() {
          public Language findValueByNumber(int number) {
            return Language.forNumber(number);
          }
        };

  public final com.google.protobuf.Descriptors.EnumValueDescriptor
      getValueDescriptor() {
    if (this == UNRECOGNIZED) {
      throw new java.lang.IllegalStateException(
          "Can't get the descriptor of an unrecognized enum value.");
    }
    return getDescriptor().getValues().get(ordinal());
  }
  public final com.google.protobuf.Descriptors.EnumDescriptor
      getDescriptorForType() {
    return getDescriptor();
  }
  public static final com.google.protobuf.Descriptors.EnumDescriptor
      getDescriptor() {
    return com.google.devtools.resultstore.v2.CommonProto.getDescriptor().getEnumTypes().get(0);
  }

  private static final Language[] VALUES = values();

  public static Language valueOf(
      com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
    if (desc.getType() != getDescriptor()) {
      throw new java.lang.IllegalArgumentException(
        "EnumValueDescriptor is not for this type.");
    }
    if (desc.getIndex() == -1) {
      return UNRECOGNIZED;
    }
    return VALUES[desc.getIndex()];
  }

  private final int value;

  private Language(int value) {
    this.value = value;
  }

  // @@protoc_insertion_point(enum_scope:google.devtools.resultstore.v2.Language)
}

