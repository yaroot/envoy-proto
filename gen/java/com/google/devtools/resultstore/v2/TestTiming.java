// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: google/devtools/resultstore/v2/action.proto

package com.google.devtools.resultstore.v2;

/**
 * <pre>
 * Timing data for execution of a test action. The action may be performed
 * locally, on the machine running the build, or remotely.
 * </pre>
 *
 * Protobuf type {@code google.devtools.resultstore.v2.TestTiming}
 */
public final class TestTiming extends
    com.google.protobuf.GeneratedMessageV3 implements
    // @@protoc_insertion_point(message_implements:google.devtools.resultstore.v2.TestTiming)
    TestTimingOrBuilder {
private static final long serialVersionUID = 0L;
  // Use TestTiming.newBuilder() to construct.
  private TestTiming(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
    super(builder);
  }
  private TestTiming() {
    testCaching_ = 0;
  }

  @java.lang.Override
  @SuppressWarnings({"unused"})
  protected java.lang.Object newInstance(
      UnusedPrivateParameter unused) {
    return new TestTiming();
  }

  @java.lang.Override
  public final com.google.protobuf.UnknownFieldSet
  getUnknownFields() {
    return this.unknownFields;
  }
  public static final com.google.protobuf.Descriptors.Descriptor
      getDescriptor() {
    return com.google.devtools.resultstore.v2.ActionProto.internal_static_google_devtools_resultstore_v2_TestTiming_descriptor;
  }

  @java.lang.Override
  protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internalGetFieldAccessorTable() {
    return com.google.devtools.resultstore.v2.ActionProto.internal_static_google_devtools_resultstore_v2_TestTiming_fieldAccessorTable
        .ensureFieldAccessorsInitialized(
            com.google.devtools.resultstore.v2.TestTiming.class, com.google.devtools.resultstore.v2.TestTiming.Builder.class);
  }

  private int locationCase_ = 0;
  private java.lang.Object location_;
  public enum LocationCase
      implements com.google.protobuf.Internal.EnumLite,
          com.google.protobuf.AbstractMessage.InternalOneOfEnum {
    LOCAL(1),
    REMOTE(2),
    LOCATION_NOT_SET(0);
    private final int value;
    private LocationCase(int value) {
      this.value = value;
    }
    /**
     * @param value The number of the enum to look for.
     * @return The enum associated with the given number.
     * @deprecated Use {@link #forNumber(int)} instead.
     */
    @java.lang.Deprecated
    public static LocationCase valueOf(int value) {
      return forNumber(value);
    }

    public static LocationCase forNumber(int value) {
      switch (value) {
        case 1: return LOCAL;
        case 2: return REMOTE;
        case 0: return LOCATION_NOT_SET;
        default: return null;
      }
    }
    public int getNumber() {
      return this.value;
    }
  };

  public LocationCase
  getLocationCase() {
    return LocationCase.forNumber(
        locationCase_);
  }

  public static final int LOCAL_FIELD_NUMBER = 1;
  /**
   * <pre>
   * Used for local test actions.
   * </pre>
   *
   * <code>.google.devtools.resultstore.v2.LocalTestTiming local = 1;</code>
   * @return Whether the local field is set.
   */
  @java.lang.Override
  public boolean hasLocal() {
    return locationCase_ == 1;
  }
  /**
   * <pre>
   * Used for local test actions.
   * </pre>
   *
   * <code>.google.devtools.resultstore.v2.LocalTestTiming local = 1;</code>
   * @return The local.
   */
  @java.lang.Override
  public com.google.devtools.resultstore.v2.LocalTestTiming getLocal() {
    if (locationCase_ == 1) {
       return (com.google.devtools.resultstore.v2.LocalTestTiming) location_;
    }
    return com.google.devtools.resultstore.v2.LocalTestTiming.getDefaultInstance();
  }
  /**
   * <pre>
   * Used for local test actions.
   * </pre>
   *
   * <code>.google.devtools.resultstore.v2.LocalTestTiming local = 1;</code>
   */
  @java.lang.Override
  public com.google.devtools.resultstore.v2.LocalTestTimingOrBuilder getLocalOrBuilder() {
    if (locationCase_ == 1) {
       return (com.google.devtools.resultstore.v2.LocalTestTiming) location_;
    }
    return com.google.devtools.resultstore.v2.LocalTestTiming.getDefaultInstance();
  }

  public static final int REMOTE_FIELD_NUMBER = 2;
  /**
   * <pre>
   * Used for remote test actions.
   * </pre>
   *
   * <code>.google.devtools.resultstore.v2.RemoteTestTiming remote = 2;</code>
   * @return Whether the remote field is set.
   */
  @java.lang.Override
  public boolean hasRemote() {
    return locationCase_ == 2;
  }
  /**
   * <pre>
   * Used for remote test actions.
   * </pre>
   *
   * <code>.google.devtools.resultstore.v2.RemoteTestTiming remote = 2;</code>
   * @return The remote.
   */
  @java.lang.Override
  public com.google.devtools.resultstore.v2.RemoteTestTiming getRemote() {
    if (locationCase_ == 2) {
       return (com.google.devtools.resultstore.v2.RemoteTestTiming) location_;
    }
    return com.google.devtools.resultstore.v2.RemoteTestTiming.getDefaultInstance();
  }
  /**
   * <pre>
   * Used for remote test actions.
   * </pre>
   *
   * <code>.google.devtools.resultstore.v2.RemoteTestTiming remote = 2;</code>
   */
  @java.lang.Override
  public com.google.devtools.resultstore.v2.RemoteTestTimingOrBuilder getRemoteOrBuilder() {
    if (locationCase_ == 2) {
       return (com.google.devtools.resultstore.v2.RemoteTestTiming) location_;
    }
    return com.google.devtools.resultstore.v2.RemoteTestTiming.getDefaultInstance();
  }

  public static final int SYSTEM_TIME_DURATION_FIELD_NUMBER = 3;
  private com.google.protobuf.Duration systemTimeDuration_;
  /**
   * <pre>
   * The amount of CPU time spent by the test process executing system calls
   * within the kernel, as opposed to library code. Time the test process spent
   * blocked does not count towards this figure.
   * </pre>
   *
   * <code>.google.protobuf.Duration system_time_duration = 3;</code>
   * @return Whether the systemTimeDuration field is set.
   */
  @java.lang.Override
  public boolean hasSystemTimeDuration() {
    return systemTimeDuration_ != null;
  }
  /**
   * <pre>
   * The amount of CPU time spent by the test process executing system calls
   * within the kernel, as opposed to library code. Time the test process spent
   * blocked does not count towards this figure.
   * </pre>
   *
   * <code>.google.protobuf.Duration system_time_duration = 3;</code>
   * @return The systemTimeDuration.
   */
  @java.lang.Override
  public com.google.protobuf.Duration getSystemTimeDuration() {
    return systemTimeDuration_ == null ? com.google.protobuf.Duration.getDefaultInstance() : systemTimeDuration_;
  }
  /**
   * <pre>
   * The amount of CPU time spent by the test process executing system calls
   * within the kernel, as opposed to library code. Time the test process spent
   * blocked does not count towards this figure.
   * </pre>
   *
   * <code>.google.protobuf.Duration system_time_duration = 3;</code>
   */
  @java.lang.Override
  public com.google.protobuf.DurationOrBuilder getSystemTimeDurationOrBuilder() {
    return systemTimeDuration_ == null ? com.google.protobuf.Duration.getDefaultInstance() : systemTimeDuration_;
  }

  public static final int USER_TIME_DURATION_FIELD_NUMBER = 4;
  private com.google.protobuf.Duration userTimeDuration_;
  /**
   * <pre>
   * The amount of CPU time spent by the test process executing user-mode code
   * outside the kernel, as opposed to library code. Time the test process
   * spent blocked does not count towards this figure. You can add user_time to
   * system_time to get total CPU time taken by the test process.
   * </pre>
   *
   * <code>.google.protobuf.Duration user_time_duration = 4;</code>
   * @return Whether the userTimeDuration field is set.
   */
  @java.lang.Override
  public boolean hasUserTimeDuration() {
    return userTimeDuration_ != null;
  }
  /**
   * <pre>
   * The amount of CPU time spent by the test process executing user-mode code
   * outside the kernel, as opposed to library code. Time the test process
   * spent blocked does not count towards this figure. You can add user_time to
   * system_time to get total CPU time taken by the test process.
   * </pre>
   *
   * <code>.google.protobuf.Duration user_time_duration = 4;</code>
   * @return The userTimeDuration.
   */
  @java.lang.Override
  public com.google.protobuf.Duration getUserTimeDuration() {
    return userTimeDuration_ == null ? com.google.protobuf.Duration.getDefaultInstance() : userTimeDuration_;
  }
  /**
   * <pre>
   * The amount of CPU time spent by the test process executing user-mode code
   * outside the kernel, as opposed to library code. Time the test process
   * spent blocked does not count towards this figure. You can add user_time to
   * system_time to get total CPU time taken by the test process.
   * </pre>
   *
   * <code>.google.protobuf.Duration user_time_duration = 4;</code>
   */
  @java.lang.Override
  public com.google.protobuf.DurationOrBuilder getUserTimeDurationOrBuilder() {
    return userTimeDuration_ == null ? com.google.protobuf.Duration.getDefaultInstance() : userTimeDuration_;
  }

  public static final int TEST_CACHING_FIELD_NUMBER = 5;
  private int testCaching_ = 0;
  /**
   * <pre>
   * Most build systems cache build results to speed up incremental builds.
   * Some also cache test results too. This indicates whether the test results
   * were found in a cache, and where that cache was located.
   * </pre>
   *
   * <code>.google.devtools.resultstore.v2.TestCaching test_caching = 5;</code>
   * @return The enum numeric value on the wire for testCaching.
   */
  @java.lang.Override public int getTestCachingValue() {
    return testCaching_;
  }
  /**
   * <pre>
   * Most build systems cache build results to speed up incremental builds.
   * Some also cache test results too. This indicates whether the test results
   * were found in a cache, and where that cache was located.
   * </pre>
   *
   * <code>.google.devtools.resultstore.v2.TestCaching test_caching = 5;</code>
   * @return The testCaching.
   */
  @java.lang.Override public com.google.devtools.resultstore.v2.TestCaching getTestCaching() {
    com.google.devtools.resultstore.v2.TestCaching result = com.google.devtools.resultstore.v2.TestCaching.forNumber(testCaching_);
    return result == null ? com.google.devtools.resultstore.v2.TestCaching.UNRECOGNIZED : result;
  }

  private byte memoizedIsInitialized = -1;
  @java.lang.Override
  public final boolean isInitialized() {
    byte isInitialized = memoizedIsInitialized;
    if (isInitialized == 1) return true;
    if (isInitialized == 0) return false;

    memoizedIsInitialized = 1;
    return true;
  }

  @java.lang.Override
  public void writeTo(com.google.protobuf.CodedOutputStream output)
                      throws java.io.IOException {
    if (locationCase_ == 1) {
      output.writeMessage(1, (com.google.devtools.resultstore.v2.LocalTestTiming) location_);
    }
    if (locationCase_ == 2) {
      output.writeMessage(2, (com.google.devtools.resultstore.v2.RemoteTestTiming) location_);
    }
    if (systemTimeDuration_ != null) {
      output.writeMessage(3, getSystemTimeDuration());
    }
    if (userTimeDuration_ != null) {
      output.writeMessage(4, getUserTimeDuration());
    }
    if (testCaching_ != com.google.devtools.resultstore.v2.TestCaching.TEST_CACHING_UNSPECIFIED.getNumber()) {
      output.writeEnum(5, testCaching_);
    }
    getUnknownFields().writeTo(output);
  }

  @java.lang.Override
  public int getSerializedSize() {
    int size = memoizedSize;
    if (size != -1) return size;

    size = 0;
    if (locationCase_ == 1) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(1, (com.google.devtools.resultstore.v2.LocalTestTiming) location_);
    }
    if (locationCase_ == 2) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(2, (com.google.devtools.resultstore.v2.RemoteTestTiming) location_);
    }
    if (systemTimeDuration_ != null) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(3, getSystemTimeDuration());
    }
    if (userTimeDuration_ != null) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(4, getUserTimeDuration());
    }
    if (testCaching_ != com.google.devtools.resultstore.v2.TestCaching.TEST_CACHING_UNSPECIFIED.getNumber()) {
      size += com.google.protobuf.CodedOutputStream
        .computeEnumSize(5, testCaching_);
    }
    size += getUnknownFields().getSerializedSize();
    memoizedSize = size;
    return size;
  }

  @java.lang.Override
  public boolean equals(final java.lang.Object obj) {
    if (obj == this) {
     return true;
    }
    if (!(obj instanceof com.google.devtools.resultstore.v2.TestTiming)) {
      return super.equals(obj);
    }
    com.google.devtools.resultstore.v2.TestTiming other = (com.google.devtools.resultstore.v2.TestTiming) obj;

    if (hasSystemTimeDuration() != other.hasSystemTimeDuration()) return false;
    if (hasSystemTimeDuration()) {
      if (!getSystemTimeDuration()
          .equals(other.getSystemTimeDuration())) return false;
    }
    if (hasUserTimeDuration() != other.hasUserTimeDuration()) return false;
    if (hasUserTimeDuration()) {
      if (!getUserTimeDuration()
          .equals(other.getUserTimeDuration())) return false;
    }
    if (testCaching_ != other.testCaching_) return false;
    if (!getLocationCase().equals(other.getLocationCase())) return false;
    switch (locationCase_) {
      case 1:
        if (!getLocal()
            .equals(other.getLocal())) return false;
        break;
      case 2:
        if (!getRemote()
            .equals(other.getRemote())) return false;
        break;
      case 0:
      default:
    }
    if (!getUnknownFields().equals(other.getUnknownFields())) return false;
    return true;
  }

  @java.lang.Override
  public int hashCode() {
    if (memoizedHashCode != 0) {
      return memoizedHashCode;
    }
    int hash = 41;
    hash = (19 * hash) + getDescriptor().hashCode();
    if (hasSystemTimeDuration()) {
      hash = (37 * hash) + SYSTEM_TIME_DURATION_FIELD_NUMBER;
      hash = (53 * hash) + getSystemTimeDuration().hashCode();
    }
    if (hasUserTimeDuration()) {
      hash = (37 * hash) + USER_TIME_DURATION_FIELD_NUMBER;
      hash = (53 * hash) + getUserTimeDuration().hashCode();
    }
    hash = (37 * hash) + TEST_CACHING_FIELD_NUMBER;
    hash = (53 * hash) + testCaching_;
    switch (locationCase_) {
      case 1:
        hash = (37 * hash) + LOCAL_FIELD_NUMBER;
        hash = (53 * hash) + getLocal().hashCode();
        break;
      case 2:
        hash = (37 * hash) + REMOTE_FIELD_NUMBER;
        hash = (53 * hash) + getRemote().hashCode();
        break;
      case 0:
      default:
    }
    hash = (29 * hash) + getUnknownFields().hashCode();
    memoizedHashCode = hash;
    return hash;
  }

  public static com.google.devtools.resultstore.v2.TestTiming parseFrom(
      java.nio.ByteBuffer data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static com.google.devtools.resultstore.v2.TestTiming parseFrom(
      java.nio.ByteBuffer data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static com.google.devtools.resultstore.v2.TestTiming parseFrom(
      com.google.protobuf.ByteString data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static com.google.devtools.resultstore.v2.TestTiming parseFrom(
      com.google.protobuf.ByteString data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static com.google.devtools.resultstore.v2.TestTiming parseFrom(byte[] data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static com.google.devtools.resultstore.v2.TestTiming parseFrom(
      byte[] data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static com.google.devtools.resultstore.v2.TestTiming parseFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input);
  }
  public static com.google.devtools.resultstore.v2.TestTiming parseFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input, extensionRegistry);
  }
  public static com.google.devtools.resultstore.v2.TestTiming parseDelimitedFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseDelimitedWithIOException(PARSER, input);
  }
  public static com.google.devtools.resultstore.v2.TestTiming parseDelimitedFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
  }
  public static com.google.devtools.resultstore.v2.TestTiming parseFrom(
      com.google.protobuf.CodedInputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input);
  }
  public static com.google.devtools.resultstore.v2.TestTiming parseFrom(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input, extensionRegistry);
  }

  @java.lang.Override
  public Builder newBuilderForType() { return newBuilder(); }
  public static Builder newBuilder() {
    return DEFAULT_INSTANCE.toBuilder();
  }
  public static Builder newBuilder(com.google.devtools.resultstore.v2.TestTiming prototype) {
    return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
  }
  @java.lang.Override
  public Builder toBuilder() {
    return this == DEFAULT_INSTANCE
        ? new Builder() : new Builder().mergeFrom(this);
  }

  @java.lang.Override
  protected Builder newBuilderForType(
      com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
    Builder builder = new Builder(parent);
    return builder;
  }
  /**
   * <pre>
   * Timing data for execution of a test action. The action may be performed
   * locally, on the machine running the build, or remotely.
   * </pre>
   *
   * Protobuf type {@code google.devtools.resultstore.v2.TestTiming}
   */
  public static final class Builder extends
      com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
      // @@protoc_insertion_point(builder_implements:google.devtools.resultstore.v2.TestTiming)
      com.google.devtools.resultstore.v2.TestTimingOrBuilder {
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.google.devtools.resultstore.v2.ActionProto.internal_static_google_devtools_resultstore_v2_TestTiming_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.google.devtools.resultstore.v2.ActionProto.internal_static_google_devtools_resultstore_v2_TestTiming_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.google.devtools.resultstore.v2.TestTiming.class, com.google.devtools.resultstore.v2.TestTiming.Builder.class);
    }

    // Construct using com.google.devtools.resultstore.v2.TestTiming.newBuilder()
    private Builder() {

    }

    private Builder(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      super(parent);

    }
    @java.lang.Override
    public Builder clear() {
      super.clear();
      bitField0_ = 0;
      if (localBuilder_ != null) {
        localBuilder_.clear();
      }
      if (remoteBuilder_ != null) {
        remoteBuilder_.clear();
      }
      systemTimeDuration_ = null;
      if (systemTimeDurationBuilder_ != null) {
        systemTimeDurationBuilder_.dispose();
        systemTimeDurationBuilder_ = null;
      }
      userTimeDuration_ = null;
      if (userTimeDurationBuilder_ != null) {
        userTimeDurationBuilder_.dispose();
        userTimeDurationBuilder_ = null;
      }
      testCaching_ = 0;
      locationCase_ = 0;
      location_ = null;
      return this;
    }

    @java.lang.Override
    public com.google.protobuf.Descriptors.Descriptor
        getDescriptorForType() {
      return com.google.devtools.resultstore.v2.ActionProto.internal_static_google_devtools_resultstore_v2_TestTiming_descriptor;
    }

    @java.lang.Override
    public com.google.devtools.resultstore.v2.TestTiming getDefaultInstanceForType() {
      return com.google.devtools.resultstore.v2.TestTiming.getDefaultInstance();
    }

    @java.lang.Override
    public com.google.devtools.resultstore.v2.TestTiming build() {
      com.google.devtools.resultstore.v2.TestTiming result = buildPartial();
      if (!result.isInitialized()) {
        throw newUninitializedMessageException(result);
      }
      return result;
    }

    @java.lang.Override
    public com.google.devtools.resultstore.v2.TestTiming buildPartial() {
      com.google.devtools.resultstore.v2.TestTiming result = new com.google.devtools.resultstore.v2.TestTiming(this);
      if (bitField0_ != 0) { buildPartial0(result); }
      buildPartialOneofs(result);
      onBuilt();
      return result;
    }

    private void buildPartial0(com.google.devtools.resultstore.v2.TestTiming result) {
      int from_bitField0_ = bitField0_;
      if (((from_bitField0_ & 0x00000004) != 0)) {
        result.systemTimeDuration_ = systemTimeDurationBuilder_ == null
            ? systemTimeDuration_
            : systemTimeDurationBuilder_.build();
      }
      if (((from_bitField0_ & 0x00000008) != 0)) {
        result.userTimeDuration_ = userTimeDurationBuilder_ == null
            ? userTimeDuration_
            : userTimeDurationBuilder_.build();
      }
      if (((from_bitField0_ & 0x00000010) != 0)) {
        result.testCaching_ = testCaching_;
      }
    }

    private void buildPartialOneofs(com.google.devtools.resultstore.v2.TestTiming result) {
      result.locationCase_ = locationCase_;
      result.location_ = this.location_;
      if (locationCase_ == 1 &&
          localBuilder_ != null) {
        result.location_ = localBuilder_.build();
      }
      if (locationCase_ == 2 &&
          remoteBuilder_ != null) {
        result.location_ = remoteBuilder_.build();
      }
    }

    @java.lang.Override
    public Builder clone() {
      return super.clone();
    }
    @java.lang.Override
    public Builder setField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        java.lang.Object value) {
      return super.setField(field, value);
    }
    @java.lang.Override
    public Builder clearField(
        com.google.protobuf.Descriptors.FieldDescriptor field) {
      return super.clearField(field);
    }
    @java.lang.Override
    public Builder clearOneof(
        com.google.protobuf.Descriptors.OneofDescriptor oneof) {
      return super.clearOneof(oneof);
    }
    @java.lang.Override
    public Builder setRepeatedField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        int index, java.lang.Object value) {
      return super.setRepeatedField(field, index, value);
    }
    @java.lang.Override
    public Builder addRepeatedField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        java.lang.Object value) {
      return super.addRepeatedField(field, value);
    }
    @java.lang.Override
    public Builder mergeFrom(com.google.protobuf.Message other) {
      if (other instanceof com.google.devtools.resultstore.v2.TestTiming) {
        return mergeFrom((com.google.devtools.resultstore.v2.TestTiming)other);
      } else {
        super.mergeFrom(other);
        return this;
      }
    }

    public Builder mergeFrom(com.google.devtools.resultstore.v2.TestTiming other) {
      if (other == com.google.devtools.resultstore.v2.TestTiming.getDefaultInstance()) return this;
      if (other.hasSystemTimeDuration()) {
        mergeSystemTimeDuration(other.getSystemTimeDuration());
      }
      if (other.hasUserTimeDuration()) {
        mergeUserTimeDuration(other.getUserTimeDuration());
      }
      if (other.testCaching_ != 0) {
        setTestCachingValue(other.getTestCachingValue());
      }
      switch (other.getLocationCase()) {
        case LOCAL: {
          mergeLocal(other.getLocal());
          break;
        }
        case REMOTE: {
          mergeRemote(other.getRemote());
          break;
        }
        case LOCATION_NOT_SET: {
          break;
        }
      }
      this.mergeUnknownFields(other.getUnknownFields());
      onChanged();
      return this;
    }

    @java.lang.Override
    public final boolean isInitialized() {
      return true;
    }

    @java.lang.Override
    public Builder mergeFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 10: {
              input.readMessage(
                  getLocalFieldBuilder().getBuilder(),
                  extensionRegistry);
              locationCase_ = 1;
              break;
            } // case 10
            case 18: {
              input.readMessage(
                  getRemoteFieldBuilder().getBuilder(),
                  extensionRegistry);
              locationCase_ = 2;
              break;
            } // case 18
            case 26: {
              input.readMessage(
                  getSystemTimeDurationFieldBuilder().getBuilder(),
                  extensionRegistry);
              bitField0_ |= 0x00000004;
              break;
            } // case 26
            case 34: {
              input.readMessage(
                  getUserTimeDurationFieldBuilder().getBuilder(),
                  extensionRegistry);
              bitField0_ |= 0x00000008;
              break;
            } // case 34
            case 40: {
              testCaching_ = input.readEnum();
              bitField0_ |= 0x00000010;
              break;
            } // case 40
            default: {
              if (!super.parseUnknownField(input, extensionRegistry, tag)) {
                done = true; // was an endgroup tag
              }
              break;
            } // default:
          } // switch (tag)
        } // while (!done)
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.unwrapIOException();
      } finally {
        onChanged();
      } // finally
      return this;
    }
    private int locationCase_ = 0;
    private java.lang.Object location_;
    public LocationCase
        getLocationCase() {
      return LocationCase.forNumber(
          locationCase_);
    }

    public Builder clearLocation() {
      locationCase_ = 0;
      location_ = null;
      onChanged();
      return this;
    }

    private int bitField0_;

    private com.google.protobuf.SingleFieldBuilderV3<
        com.google.devtools.resultstore.v2.LocalTestTiming, com.google.devtools.resultstore.v2.LocalTestTiming.Builder, com.google.devtools.resultstore.v2.LocalTestTimingOrBuilder> localBuilder_;
    /**
     * <pre>
     * Used for local test actions.
     * </pre>
     *
     * <code>.google.devtools.resultstore.v2.LocalTestTiming local = 1;</code>
     * @return Whether the local field is set.
     */
    @java.lang.Override
    public boolean hasLocal() {
      return locationCase_ == 1;
    }
    /**
     * <pre>
     * Used for local test actions.
     * </pre>
     *
     * <code>.google.devtools.resultstore.v2.LocalTestTiming local = 1;</code>
     * @return The local.
     */
    @java.lang.Override
    public com.google.devtools.resultstore.v2.LocalTestTiming getLocal() {
      if (localBuilder_ == null) {
        if (locationCase_ == 1) {
          return (com.google.devtools.resultstore.v2.LocalTestTiming) location_;
        }
        return com.google.devtools.resultstore.v2.LocalTestTiming.getDefaultInstance();
      } else {
        if (locationCase_ == 1) {
          return localBuilder_.getMessage();
        }
        return com.google.devtools.resultstore.v2.LocalTestTiming.getDefaultInstance();
      }
    }
    /**
     * <pre>
     * Used for local test actions.
     * </pre>
     *
     * <code>.google.devtools.resultstore.v2.LocalTestTiming local = 1;</code>
     */
    public Builder setLocal(com.google.devtools.resultstore.v2.LocalTestTiming value) {
      if (localBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        location_ = value;
        onChanged();
      } else {
        localBuilder_.setMessage(value);
      }
      locationCase_ = 1;
      return this;
    }
    /**
     * <pre>
     * Used for local test actions.
     * </pre>
     *
     * <code>.google.devtools.resultstore.v2.LocalTestTiming local = 1;</code>
     */
    public Builder setLocal(
        com.google.devtools.resultstore.v2.LocalTestTiming.Builder builderForValue) {
      if (localBuilder_ == null) {
        location_ = builderForValue.build();
        onChanged();
      } else {
        localBuilder_.setMessage(builderForValue.build());
      }
      locationCase_ = 1;
      return this;
    }
    /**
     * <pre>
     * Used for local test actions.
     * </pre>
     *
     * <code>.google.devtools.resultstore.v2.LocalTestTiming local = 1;</code>
     */
    public Builder mergeLocal(com.google.devtools.resultstore.v2.LocalTestTiming value) {
      if (localBuilder_ == null) {
        if (locationCase_ == 1 &&
            location_ != com.google.devtools.resultstore.v2.LocalTestTiming.getDefaultInstance()) {
          location_ = com.google.devtools.resultstore.v2.LocalTestTiming.newBuilder((com.google.devtools.resultstore.v2.LocalTestTiming) location_)
              .mergeFrom(value).buildPartial();
        } else {
          location_ = value;
        }
        onChanged();
      } else {
        if (locationCase_ == 1) {
          localBuilder_.mergeFrom(value);
        } else {
          localBuilder_.setMessage(value);
        }
      }
      locationCase_ = 1;
      return this;
    }
    /**
     * <pre>
     * Used for local test actions.
     * </pre>
     *
     * <code>.google.devtools.resultstore.v2.LocalTestTiming local = 1;</code>
     */
    public Builder clearLocal() {
      if (localBuilder_ == null) {
        if (locationCase_ == 1) {
          locationCase_ = 0;
          location_ = null;
          onChanged();
        }
      } else {
        if (locationCase_ == 1) {
          locationCase_ = 0;
          location_ = null;
        }
        localBuilder_.clear();
      }
      return this;
    }
    /**
     * <pre>
     * Used for local test actions.
     * </pre>
     *
     * <code>.google.devtools.resultstore.v2.LocalTestTiming local = 1;</code>
     */
    public com.google.devtools.resultstore.v2.LocalTestTiming.Builder getLocalBuilder() {
      return getLocalFieldBuilder().getBuilder();
    }
    /**
     * <pre>
     * Used for local test actions.
     * </pre>
     *
     * <code>.google.devtools.resultstore.v2.LocalTestTiming local = 1;</code>
     */
    @java.lang.Override
    public com.google.devtools.resultstore.v2.LocalTestTimingOrBuilder getLocalOrBuilder() {
      if ((locationCase_ == 1) && (localBuilder_ != null)) {
        return localBuilder_.getMessageOrBuilder();
      } else {
        if (locationCase_ == 1) {
          return (com.google.devtools.resultstore.v2.LocalTestTiming) location_;
        }
        return com.google.devtools.resultstore.v2.LocalTestTiming.getDefaultInstance();
      }
    }
    /**
     * <pre>
     * Used for local test actions.
     * </pre>
     *
     * <code>.google.devtools.resultstore.v2.LocalTestTiming local = 1;</code>
     */
    private com.google.protobuf.SingleFieldBuilderV3<
        com.google.devtools.resultstore.v2.LocalTestTiming, com.google.devtools.resultstore.v2.LocalTestTiming.Builder, com.google.devtools.resultstore.v2.LocalTestTimingOrBuilder> 
        getLocalFieldBuilder() {
      if (localBuilder_ == null) {
        if (!(locationCase_ == 1)) {
          location_ = com.google.devtools.resultstore.v2.LocalTestTiming.getDefaultInstance();
        }
        localBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
            com.google.devtools.resultstore.v2.LocalTestTiming, com.google.devtools.resultstore.v2.LocalTestTiming.Builder, com.google.devtools.resultstore.v2.LocalTestTimingOrBuilder>(
                (com.google.devtools.resultstore.v2.LocalTestTiming) location_,
                getParentForChildren(),
                isClean());
        location_ = null;
      }
      locationCase_ = 1;
      onChanged();
      return localBuilder_;
    }

    private com.google.protobuf.SingleFieldBuilderV3<
        com.google.devtools.resultstore.v2.RemoteTestTiming, com.google.devtools.resultstore.v2.RemoteTestTiming.Builder, com.google.devtools.resultstore.v2.RemoteTestTimingOrBuilder> remoteBuilder_;
    /**
     * <pre>
     * Used for remote test actions.
     * </pre>
     *
     * <code>.google.devtools.resultstore.v2.RemoteTestTiming remote = 2;</code>
     * @return Whether the remote field is set.
     */
    @java.lang.Override
    public boolean hasRemote() {
      return locationCase_ == 2;
    }
    /**
     * <pre>
     * Used for remote test actions.
     * </pre>
     *
     * <code>.google.devtools.resultstore.v2.RemoteTestTiming remote = 2;</code>
     * @return The remote.
     */
    @java.lang.Override
    public com.google.devtools.resultstore.v2.RemoteTestTiming getRemote() {
      if (remoteBuilder_ == null) {
        if (locationCase_ == 2) {
          return (com.google.devtools.resultstore.v2.RemoteTestTiming) location_;
        }
        return com.google.devtools.resultstore.v2.RemoteTestTiming.getDefaultInstance();
      } else {
        if (locationCase_ == 2) {
          return remoteBuilder_.getMessage();
        }
        return com.google.devtools.resultstore.v2.RemoteTestTiming.getDefaultInstance();
      }
    }
    /**
     * <pre>
     * Used for remote test actions.
     * </pre>
     *
     * <code>.google.devtools.resultstore.v2.RemoteTestTiming remote = 2;</code>
     */
    public Builder setRemote(com.google.devtools.resultstore.v2.RemoteTestTiming value) {
      if (remoteBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        location_ = value;
        onChanged();
      } else {
        remoteBuilder_.setMessage(value);
      }
      locationCase_ = 2;
      return this;
    }
    /**
     * <pre>
     * Used for remote test actions.
     * </pre>
     *
     * <code>.google.devtools.resultstore.v2.RemoteTestTiming remote = 2;</code>
     */
    public Builder setRemote(
        com.google.devtools.resultstore.v2.RemoteTestTiming.Builder builderForValue) {
      if (remoteBuilder_ == null) {
        location_ = builderForValue.build();
        onChanged();
      } else {
        remoteBuilder_.setMessage(builderForValue.build());
      }
      locationCase_ = 2;
      return this;
    }
    /**
     * <pre>
     * Used for remote test actions.
     * </pre>
     *
     * <code>.google.devtools.resultstore.v2.RemoteTestTiming remote = 2;</code>
     */
    public Builder mergeRemote(com.google.devtools.resultstore.v2.RemoteTestTiming value) {
      if (remoteBuilder_ == null) {
        if (locationCase_ == 2 &&
            location_ != com.google.devtools.resultstore.v2.RemoteTestTiming.getDefaultInstance()) {
          location_ = com.google.devtools.resultstore.v2.RemoteTestTiming.newBuilder((com.google.devtools.resultstore.v2.RemoteTestTiming) location_)
              .mergeFrom(value).buildPartial();
        } else {
          location_ = value;
        }
        onChanged();
      } else {
        if (locationCase_ == 2) {
          remoteBuilder_.mergeFrom(value);
        } else {
          remoteBuilder_.setMessage(value);
        }
      }
      locationCase_ = 2;
      return this;
    }
    /**
     * <pre>
     * Used for remote test actions.
     * </pre>
     *
     * <code>.google.devtools.resultstore.v2.RemoteTestTiming remote = 2;</code>
     */
    public Builder clearRemote() {
      if (remoteBuilder_ == null) {
        if (locationCase_ == 2) {
          locationCase_ = 0;
          location_ = null;
          onChanged();
        }
      } else {
        if (locationCase_ == 2) {
          locationCase_ = 0;
          location_ = null;
        }
        remoteBuilder_.clear();
      }
      return this;
    }
    /**
     * <pre>
     * Used for remote test actions.
     * </pre>
     *
     * <code>.google.devtools.resultstore.v2.RemoteTestTiming remote = 2;</code>
     */
    public com.google.devtools.resultstore.v2.RemoteTestTiming.Builder getRemoteBuilder() {
      return getRemoteFieldBuilder().getBuilder();
    }
    /**
     * <pre>
     * Used for remote test actions.
     * </pre>
     *
     * <code>.google.devtools.resultstore.v2.RemoteTestTiming remote = 2;</code>
     */
    @java.lang.Override
    public com.google.devtools.resultstore.v2.RemoteTestTimingOrBuilder getRemoteOrBuilder() {
      if ((locationCase_ == 2) && (remoteBuilder_ != null)) {
        return remoteBuilder_.getMessageOrBuilder();
      } else {
        if (locationCase_ == 2) {
          return (com.google.devtools.resultstore.v2.RemoteTestTiming) location_;
        }
        return com.google.devtools.resultstore.v2.RemoteTestTiming.getDefaultInstance();
      }
    }
    /**
     * <pre>
     * Used for remote test actions.
     * </pre>
     *
     * <code>.google.devtools.resultstore.v2.RemoteTestTiming remote = 2;</code>
     */
    private com.google.protobuf.SingleFieldBuilderV3<
        com.google.devtools.resultstore.v2.RemoteTestTiming, com.google.devtools.resultstore.v2.RemoteTestTiming.Builder, com.google.devtools.resultstore.v2.RemoteTestTimingOrBuilder> 
        getRemoteFieldBuilder() {
      if (remoteBuilder_ == null) {
        if (!(locationCase_ == 2)) {
          location_ = com.google.devtools.resultstore.v2.RemoteTestTiming.getDefaultInstance();
        }
        remoteBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
            com.google.devtools.resultstore.v2.RemoteTestTiming, com.google.devtools.resultstore.v2.RemoteTestTiming.Builder, com.google.devtools.resultstore.v2.RemoteTestTimingOrBuilder>(
                (com.google.devtools.resultstore.v2.RemoteTestTiming) location_,
                getParentForChildren(),
                isClean());
        location_ = null;
      }
      locationCase_ = 2;
      onChanged();
      return remoteBuilder_;
    }

    private com.google.protobuf.Duration systemTimeDuration_;
    private com.google.protobuf.SingleFieldBuilderV3<
        com.google.protobuf.Duration, com.google.protobuf.Duration.Builder, com.google.protobuf.DurationOrBuilder> systemTimeDurationBuilder_;
    /**
     * <pre>
     * The amount of CPU time spent by the test process executing system calls
     * within the kernel, as opposed to library code. Time the test process spent
     * blocked does not count towards this figure.
     * </pre>
     *
     * <code>.google.protobuf.Duration system_time_duration = 3;</code>
     * @return Whether the systemTimeDuration field is set.
     */
    public boolean hasSystemTimeDuration() {
      return ((bitField0_ & 0x00000004) != 0);
    }
    /**
     * <pre>
     * The amount of CPU time spent by the test process executing system calls
     * within the kernel, as opposed to library code. Time the test process spent
     * blocked does not count towards this figure.
     * </pre>
     *
     * <code>.google.protobuf.Duration system_time_duration = 3;</code>
     * @return The systemTimeDuration.
     */
    public com.google.protobuf.Duration getSystemTimeDuration() {
      if (systemTimeDurationBuilder_ == null) {
        return systemTimeDuration_ == null ? com.google.protobuf.Duration.getDefaultInstance() : systemTimeDuration_;
      } else {
        return systemTimeDurationBuilder_.getMessage();
      }
    }
    /**
     * <pre>
     * The amount of CPU time spent by the test process executing system calls
     * within the kernel, as opposed to library code. Time the test process spent
     * blocked does not count towards this figure.
     * </pre>
     *
     * <code>.google.protobuf.Duration system_time_duration = 3;</code>
     */
    public Builder setSystemTimeDuration(com.google.protobuf.Duration value) {
      if (systemTimeDurationBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        systemTimeDuration_ = value;
      } else {
        systemTimeDurationBuilder_.setMessage(value);
      }
      bitField0_ |= 0x00000004;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * The amount of CPU time spent by the test process executing system calls
     * within the kernel, as opposed to library code. Time the test process spent
     * blocked does not count towards this figure.
     * </pre>
     *
     * <code>.google.protobuf.Duration system_time_duration = 3;</code>
     */
    public Builder setSystemTimeDuration(
        com.google.protobuf.Duration.Builder builderForValue) {
      if (systemTimeDurationBuilder_ == null) {
        systemTimeDuration_ = builderForValue.build();
      } else {
        systemTimeDurationBuilder_.setMessage(builderForValue.build());
      }
      bitField0_ |= 0x00000004;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * The amount of CPU time spent by the test process executing system calls
     * within the kernel, as opposed to library code. Time the test process spent
     * blocked does not count towards this figure.
     * </pre>
     *
     * <code>.google.protobuf.Duration system_time_duration = 3;</code>
     */
    public Builder mergeSystemTimeDuration(com.google.protobuf.Duration value) {
      if (systemTimeDurationBuilder_ == null) {
        if (((bitField0_ & 0x00000004) != 0) &&
          systemTimeDuration_ != null &&
          systemTimeDuration_ != com.google.protobuf.Duration.getDefaultInstance()) {
          getSystemTimeDurationBuilder().mergeFrom(value);
        } else {
          systemTimeDuration_ = value;
        }
      } else {
        systemTimeDurationBuilder_.mergeFrom(value);
      }
      bitField0_ |= 0x00000004;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * The amount of CPU time spent by the test process executing system calls
     * within the kernel, as opposed to library code. Time the test process spent
     * blocked does not count towards this figure.
     * </pre>
     *
     * <code>.google.protobuf.Duration system_time_duration = 3;</code>
     */
    public Builder clearSystemTimeDuration() {
      bitField0_ = (bitField0_ & ~0x00000004);
      systemTimeDuration_ = null;
      if (systemTimeDurationBuilder_ != null) {
        systemTimeDurationBuilder_.dispose();
        systemTimeDurationBuilder_ = null;
      }
      onChanged();
      return this;
    }
    /**
     * <pre>
     * The amount of CPU time spent by the test process executing system calls
     * within the kernel, as opposed to library code. Time the test process spent
     * blocked does not count towards this figure.
     * </pre>
     *
     * <code>.google.protobuf.Duration system_time_duration = 3;</code>
     */
    public com.google.protobuf.Duration.Builder getSystemTimeDurationBuilder() {
      bitField0_ |= 0x00000004;
      onChanged();
      return getSystemTimeDurationFieldBuilder().getBuilder();
    }
    /**
     * <pre>
     * The amount of CPU time spent by the test process executing system calls
     * within the kernel, as opposed to library code. Time the test process spent
     * blocked does not count towards this figure.
     * </pre>
     *
     * <code>.google.protobuf.Duration system_time_duration = 3;</code>
     */
    public com.google.protobuf.DurationOrBuilder getSystemTimeDurationOrBuilder() {
      if (systemTimeDurationBuilder_ != null) {
        return systemTimeDurationBuilder_.getMessageOrBuilder();
      } else {
        return systemTimeDuration_ == null ?
            com.google.protobuf.Duration.getDefaultInstance() : systemTimeDuration_;
      }
    }
    /**
     * <pre>
     * The amount of CPU time spent by the test process executing system calls
     * within the kernel, as opposed to library code. Time the test process spent
     * blocked does not count towards this figure.
     * </pre>
     *
     * <code>.google.protobuf.Duration system_time_duration = 3;</code>
     */
    private com.google.protobuf.SingleFieldBuilderV3<
        com.google.protobuf.Duration, com.google.protobuf.Duration.Builder, com.google.protobuf.DurationOrBuilder> 
        getSystemTimeDurationFieldBuilder() {
      if (systemTimeDurationBuilder_ == null) {
        systemTimeDurationBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
            com.google.protobuf.Duration, com.google.protobuf.Duration.Builder, com.google.protobuf.DurationOrBuilder>(
                getSystemTimeDuration(),
                getParentForChildren(),
                isClean());
        systemTimeDuration_ = null;
      }
      return systemTimeDurationBuilder_;
    }

    private com.google.protobuf.Duration userTimeDuration_;
    private com.google.protobuf.SingleFieldBuilderV3<
        com.google.protobuf.Duration, com.google.protobuf.Duration.Builder, com.google.protobuf.DurationOrBuilder> userTimeDurationBuilder_;
    /**
     * <pre>
     * The amount of CPU time spent by the test process executing user-mode code
     * outside the kernel, as opposed to library code. Time the test process
     * spent blocked does not count towards this figure. You can add user_time to
     * system_time to get total CPU time taken by the test process.
     * </pre>
     *
     * <code>.google.protobuf.Duration user_time_duration = 4;</code>
     * @return Whether the userTimeDuration field is set.
     */
    public boolean hasUserTimeDuration() {
      return ((bitField0_ & 0x00000008) != 0);
    }
    /**
     * <pre>
     * The amount of CPU time spent by the test process executing user-mode code
     * outside the kernel, as opposed to library code. Time the test process
     * spent blocked does not count towards this figure. You can add user_time to
     * system_time to get total CPU time taken by the test process.
     * </pre>
     *
     * <code>.google.protobuf.Duration user_time_duration = 4;</code>
     * @return The userTimeDuration.
     */
    public com.google.protobuf.Duration getUserTimeDuration() {
      if (userTimeDurationBuilder_ == null) {
        return userTimeDuration_ == null ? com.google.protobuf.Duration.getDefaultInstance() : userTimeDuration_;
      } else {
        return userTimeDurationBuilder_.getMessage();
      }
    }
    /**
     * <pre>
     * The amount of CPU time spent by the test process executing user-mode code
     * outside the kernel, as opposed to library code. Time the test process
     * spent blocked does not count towards this figure. You can add user_time to
     * system_time to get total CPU time taken by the test process.
     * </pre>
     *
     * <code>.google.protobuf.Duration user_time_duration = 4;</code>
     */
    public Builder setUserTimeDuration(com.google.protobuf.Duration value) {
      if (userTimeDurationBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        userTimeDuration_ = value;
      } else {
        userTimeDurationBuilder_.setMessage(value);
      }
      bitField0_ |= 0x00000008;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * The amount of CPU time spent by the test process executing user-mode code
     * outside the kernel, as opposed to library code. Time the test process
     * spent blocked does not count towards this figure. You can add user_time to
     * system_time to get total CPU time taken by the test process.
     * </pre>
     *
     * <code>.google.protobuf.Duration user_time_duration = 4;</code>
     */
    public Builder setUserTimeDuration(
        com.google.protobuf.Duration.Builder builderForValue) {
      if (userTimeDurationBuilder_ == null) {
        userTimeDuration_ = builderForValue.build();
      } else {
        userTimeDurationBuilder_.setMessage(builderForValue.build());
      }
      bitField0_ |= 0x00000008;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * The amount of CPU time spent by the test process executing user-mode code
     * outside the kernel, as opposed to library code. Time the test process
     * spent blocked does not count towards this figure. You can add user_time to
     * system_time to get total CPU time taken by the test process.
     * </pre>
     *
     * <code>.google.protobuf.Duration user_time_duration = 4;</code>
     */
    public Builder mergeUserTimeDuration(com.google.protobuf.Duration value) {
      if (userTimeDurationBuilder_ == null) {
        if (((bitField0_ & 0x00000008) != 0) &&
          userTimeDuration_ != null &&
          userTimeDuration_ != com.google.protobuf.Duration.getDefaultInstance()) {
          getUserTimeDurationBuilder().mergeFrom(value);
        } else {
          userTimeDuration_ = value;
        }
      } else {
        userTimeDurationBuilder_.mergeFrom(value);
      }
      bitField0_ |= 0x00000008;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * The amount of CPU time spent by the test process executing user-mode code
     * outside the kernel, as opposed to library code. Time the test process
     * spent blocked does not count towards this figure. You can add user_time to
     * system_time to get total CPU time taken by the test process.
     * </pre>
     *
     * <code>.google.protobuf.Duration user_time_duration = 4;</code>
     */
    public Builder clearUserTimeDuration() {
      bitField0_ = (bitField0_ & ~0x00000008);
      userTimeDuration_ = null;
      if (userTimeDurationBuilder_ != null) {
        userTimeDurationBuilder_.dispose();
        userTimeDurationBuilder_ = null;
      }
      onChanged();
      return this;
    }
    /**
     * <pre>
     * The amount of CPU time spent by the test process executing user-mode code
     * outside the kernel, as opposed to library code. Time the test process
     * spent blocked does not count towards this figure. You can add user_time to
     * system_time to get total CPU time taken by the test process.
     * </pre>
     *
     * <code>.google.protobuf.Duration user_time_duration = 4;</code>
     */
    public com.google.protobuf.Duration.Builder getUserTimeDurationBuilder() {
      bitField0_ |= 0x00000008;
      onChanged();
      return getUserTimeDurationFieldBuilder().getBuilder();
    }
    /**
     * <pre>
     * The amount of CPU time spent by the test process executing user-mode code
     * outside the kernel, as opposed to library code. Time the test process
     * spent blocked does not count towards this figure. You can add user_time to
     * system_time to get total CPU time taken by the test process.
     * </pre>
     *
     * <code>.google.protobuf.Duration user_time_duration = 4;</code>
     */
    public com.google.protobuf.DurationOrBuilder getUserTimeDurationOrBuilder() {
      if (userTimeDurationBuilder_ != null) {
        return userTimeDurationBuilder_.getMessageOrBuilder();
      } else {
        return userTimeDuration_ == null ?
            com.google.protobuf.Duration.getDefaultInstance() : userTimeDuration_;
      }
    }
    /**
     * <pre>
     * The amount of CPU time spent by the test process executing user-mode code
     * outside the kernel, as opposed to library code. Time the test process
     * spent blocked does not count towards this figure. You can add user_time to
     * system_time to get total CPU time taken by the test process.
     * </pre>
     *
     * <code>.google.protobuf.Duration user_time_duration = 4;</code>
     */
    private com.google.protobuf.SingleFieldBuilderV3<
        com.google.protobuf.Duration, com.google.protobuf.Duration.Builder, com.google.protobuf.DurationOrBuilder> 
        getUserTimeDurationFieldBuilder() {
      if (userTimeDurationBuilder_ == null) {
        userTimeDurationBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
            com.google.protobuf.Duration, com.google.protobuf.Duration.Builder, com.google.protobuf.DurationOrBuilder>(
                getUserTimeDuration(),
                getParentForChildren(),
                isClean());
        userTimeDuration_ = null;
      }
      return userTimeDurationBuilder_;
    }

    private int testCaching_ = 0;
    /**
     * <pre>
     * Most build systems cache build results to speed up incremental builds.
     * Some also cache test results too. This indicates whether the test results
     * were found in a cache, and where that cache was located.
     * </pre>
     *
     * <code>.google.devtools.resultstore.v2.TestCaching test_caching = 5;</code>
     * @return The enum numeric value on the wire for testCaching.
     */
    @java.lang.Override public int getTestCachingValue() {
      return testCaching_;
    }
    /**
     * <pre>
     * Most build systems cache build results to speed up incremental builds.
     * Some also cache test results too. This indicates whether the test results
     * were found in a cache, and where that cache was located.
     * </pre>
     *
     * <code>.google.devtools.resultstore.v2.TestCaching test_caching = 5;</code>
     * @param value The enum numeric value on the wire for testCaching to set.
     * @return This builder for chaining.
     */
    public Builder setTestCachingValue(int value) {
      testCaching_ = value;
      bitField0_ |= 0x00000010;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * Most build systems cache build results to speed up incremental builds.
     * Some also cache test results too. This indicates whether the test results
     * were found in a cache, and where that cache was located.
     * </pre>
     *
     * <code>.google.devtools.resultstore.v2.TestCaching test_caching = 5;</code>
     * @return The testCaching.
     */
    @java.lang.Override
    public com.google.devtools.resultstore.v2.TestCaching getTestCaching() {
      com.google.devtools.resultstore.v2.TestCaching result = com.google.devtools.resultstore.v2.TestCaching.forNumber(testCaching_);
      return result == null ? com.google.devtools.resultstore.v2.TestCaching.UNRECOGNIZED : result;
    }
    /**
     * <pre>
     * Most build systems cache build results to speed up incremental builds.
     * Some also cache test results too. This indicates whether the test results
     * were found in a cache, and where that cache was located.
     * </pre>
     *
     * <code>.google.devtools.resultstore.v2.TestCaching test_caching = 5;</code>
     * @param value The testCaching to set.
     * @return This builder for chaining.
     */
    public Builder setTestCaching(com.google.devtools.resultstore.v2.TestCaching value) {
      if (value == null) {
        throw new NullPointerException();
      }
      bitField0_ |= 0x00000010;
      testCaching_ = value.getNumber();
      onChanged();
      return this;
    }
    /**
     * <pre>
     * Most build systems cache build results to speed up incremental builds.
     * Some also cache test results too. This indicates whether the test results
     * were found in a cache, and where that cache was located.
     * </pre>
     *
     * <code>.google.devtools.resultstore.v2.TestCaching test_caching = 5;</code>
     * @return This builder for chaining.
     */
    public Builder clearTestCaching() {
      bitField0_ = (bitField0_ & ~0x00000010);
      testCaching_ = 0;
      onChanged();
      return this;
    }
    @java.lang.Override
    public final Builder setUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return super.setUnknownFields(unknownFields);
    }

    @java.lang.Override
    public final Builder mergeUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return super.mergeUnknownFields(unknownFields);
    }


    // @@protoc_insertion_point(builder_scope:google.devtools.resultstore.v2.TestTiming)
  }

  // @@protoc_insertion_point(class_scope:google.devtools.resultstore.v2.TestTiming)
  private static final com.google.devtools.resultstore.v2.TestTiming DEFAULT_INSTANCE;
  static {
    DEFAULT_INSTANCE = new com.google.devtools.resultstore.v2.TestTiming();
  }

  public static com.google.devtools.resultstore.v2.TestTiming getDefaultInstance() {
    return DEFAULT_INSTANCE;
  }

  private static final com.google.protobuf.Parser<TestTiming>
      PARSER = new com.google.protobuf.AbstractParser<TestTiming>() {
    @java.lang.Override
    public TestTiming parsePartialFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      Builder builder = newBuilder();
      try {
        builder.mergeFrom(input, extensionRegistry);
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(builder.buildPartial());
      } catch (com.google.protobuf.UninitializedMessageException e) {
        throw e.asInvalidProtocolBufferException().setUnfinishedMessage(builder.buildPartial());
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(e)
            .setUnfinishedMessage(builder.buildPartial());
      }
      return builder.buildPartial();
    }
  };

  public static com.google.protobuf.Parser<TestTiming> parser() {
    return PARSER;
  }

  @java.lang.Override
  public com.google.protobuf.Parser<TestTiming> getParserForType() {
    return PARSER;
  }

  @java.lang.Override
  public com.google.devtools.resultstore.v2.TestTiming getDefaultInstanceForType() {
    return DEFAULT_INSTANCE;
  }

}

