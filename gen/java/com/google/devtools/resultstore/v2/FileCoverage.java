// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: google/devtools/resultstore/v2/coverage.proto

package com.google.devtools.resultstore.v2;

/**
 * <pre>
 * Describes code coverage for a particular file under test.
 * </pre>
 *
 * Protobuf type {@code google.devtools.resultstore.v2.FileCoverage}
 */
public final class FileCoverage extends
    com.google.protobuf.GeneratedMessageV3 implements
    // @@protoc_insertion_point(message_implements:google.devtools.resultstore.v2.FileCoverage)
    FileCoverageOrBuilder {
private static final long serialVersionUID = 0L;
  // Use FileCoverage.newBuilder() to construct.
  private FileCoverage(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
    super(builder);
  }
  private FileCoverage() {
    path_ = "";
  }

  @java.lang.Override
  @SuppressWarnings({"unused"})
  protected java.lang.Object newInstance(
      UnusedPrivateParameter unused) {
    return new FileCoverage();
  }

  @java.lang.Override
  public final com.google.protobuf.UnknownFieldSet
  getUnknownFields() {
    return this.unknownFields;
  }
  private FileCoverage(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    this();
    if (extensionRegistry == null) {
      throw new java.lang.NullPointerException();
    }
    com.google.protobuf.UnknownFieldSet.Builder unknownFields =
        com.google.protobuf.UnknownFieldSet.newBuilder();
    try {
      boolean done = false;
      while (!done) {
        int tag = input.readTag();
        switch (tag) {
          case 0:
            done = true;
            break;
          case 10: {
            java.lang.String s = input.readStringRequireUtf8();

            path_ = s;
            break;
          }
          case 18: {
            com.google.devtools.resultstore.v2.LineCoverage.Builder subBuilder = null;
            if (lineCoverage_ != null) {
              subBuilder = lineCoverage_.toBuilder();
            }
            lineCoverage_ = input.readMessage(com.google.devtools.resultstore.v2.LineCoverage.parser(), extensionRegistry);
            if (subBuilder != null) {
              subBuilder.mergeFrom(lineCoverage_);
              lineCoverage_ = subBuilder.buildPartial();
            }

            break;
          }
          case 26: {
            com.google.devtools.resultstore.v2.BranchCoverage.Builder subBuilder = null;
            if (branchCoverage_ != null) {
              subBuilder = branchCoverage_.toBuilder();
            }
            branchCoverage_ = input.readMessage(com.google.devtools.resultstore.v2.BranchCoverage.parser(), extensionRegistry);
            if (subBuilder != null) {
              subBuilder.mergeFrom(branchCoverage_);
              branchCoverage_ = subBuilder.buildPartial();
            }

            break;
          }
          default: {
            if (!parseUnknownField(
                input, unknownFields, extensionRegistry, tag)) {
              done = true;
            }
            break;
          }
        }
      }
    } catch (com.google.protobuf.InvalidProtocolBufferException e) {
      throw e.setUnfinishedMessage(this);
    } catch (com.google.protobuf.UninitializedMessageException e) {
      throw e.asInvalidProtocolBufferException().setUnfinishedMessage(this);
    } catch (java.io.IOException e) {
      throw new com.google.protobuf.InvalidProtocolBufferException(
          e).setUnfinishedMessage(this);
    } finally {
      this.unknownFields = unknownFields.build();
      makeExtensionsImmutable();
    }
  }
  public static final com.google.protobuf.Descriptors.Descriptor
      getDescriptor() {
    return com.google.devtools.resultstore.v2.CoverageProto.internal_static_google_devtools_resultstore_v2_FileCoverage_descriptor;
  }

  @java.lang.Override
  protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internalGetFieldAccessorTable() {
    return com.google.devtools.resultstore.v2.CoverageProto.internal_static_google_devtools_resultstore_v2_FileCoverage_fieldAccessorTable
        .ensureFieldAccessorsInitialized(
            com.google.devtools.resultstore.v2.FileCoverage.class, com.google.devtools.resultstore.v2.FileCoverage.Builder.class);
  }

  public static final int PATH_FIELD_NUMBER = 1;
  private volatile java.lang.Object path_;
  /**
   * <pre>
   * Path of source file within the SourceContext of this Invocation.
   * </pre>
   *
   * <code>string path = 1;</code>
   * @return The path.
   */
  @java.lang.Override
  public java.lang.String getPath() {
    java.lang.Object ref = path_;
    if (ref instanceof java.lang.String) {
      return (java.lang.String) ref;
    } else {
      com.google.protobuf.ByteString bs = 
          (com.google.protobuf.ByteString) ref;
      java.lang.String s = bs.toStringUtf8();
      path_ = s;
      return s;
    }
  }
  /**
   * <pre>
   * Path of source file within the SourceContext of this Invocation.
   * </pre>
   *
   * <code>string path = 1;</code>
   * @return The bytes for path.
   */
  @java.lang.Override
  public com.google.protobuf.ByteString
      getPathBytes() {
    java.lang.Object ref = path_;
    if (ref instanceof java.lang.String) {
      com.google.protobuf.ByteString b = 
          com.google.protobuf.ByteString.copyFromUtf8(
              (java.lang.String) ref);
      path_ = b;
      return b;
    } else {
      return (com.google.protobuf.ByteString) ref;
    }
  }

  public static final int LINE_COVERAGE_FIELD_NUMBER = 2;
  private com.google.devtools.resultstore.v2.LineCoverage lineCoverage_;
  /**
   * <pre>
   * Details of lines in a file for calculating line coverage.
   * </pre>
   *
   * <code>.google.devtools.resultstore.v2.LineCoverage line_coverage = 2;</code>
   * @return Whether the lineCoverage field is set.
   */
  @java.lang.Override
  public boolean hasLineCoverage() {
    return lineCoverage_ != null;
  }
  /**
   * <pre>
   * Details of lines in a file for calculating line coverage.
   * </pre>
   *
   * <code>.google.devtools.resultstore.v2.LineCoverage line_coverage = 2;</code>
   * @return The lineCoverage.
   */
  @java.lang.Override
  public com.google.devtools.resultstore.v2.LineCoverage getLineCoverage() {
    return lineCoverage_ == null ? com.google.devtools.resultstore.v2.LineCoverage.getDefaultInstance() : lineCoverage_;
  }
  /**
   * <pre>
   * Details of lines in a file for calculating line coverage.
   * </pre>
   *
   * <code>.google.devtools.resultstore.v2.LineCoverage line_coverage = 2;</code>
   */
  @java.lang.Override
  public com.google.devtools.resultstore.v2.LineCoverageOrBuilder getLineCoverageOrBuilder() {
    return getLineCoverage();
  }

  public static final int BRANCH_COVERAGE_FIELD_NUMBER = 3;
  private com.google.devtools.resultstore.v2.BranchCoverage branchCoverage_;
  /**
   * <pre>
   * Details of branches in a file for calculating branch coverage.
   * </pre>
   *
   * <code>.google.devtools.resultstore.v2.BranchCoverage branch_coverage = 3;</code>
   * @return Whether the branchCoverage field is set.
   */
  @java.lang.Override
  public boolean hasBranchCoverage() {
    return branchCoverage_ != null;
  }
  /**
   * <pre>
   * Details of branches in a file for calculating branch coverage.
   * </pre>
   *
   * <code>.google.devtools.resultstore.v2.BranchCoverage branch_coverage = 3;</code>
   * @return The branchCoverage.
   */
  @java.lang.Override
  public com.google.devtools.resultstore.v2.BranchCoverage getBranchCoverage() {
    return branchCoverage_ == null ? com.google.devtools.resultstore.v2.BranchCoverage.getDefaultInstance() : branchCoverage_;
  }
  /**
   * <pre>
   * Details of branches in a file for calculating branch coverage.
   * </pre>
   *
   * <code>.google.devtools.resultstore.v2.BranchCoverage branch_coverage = 3;</code>
   */
  @java.lang.Override
  public com.google.devtools.resultstore.v2.BranchCoverageOrBuilder getBranchCoverageOrBuilder() {
    return getBranchCoverage();
  }

  private byte memoizedIsInitialized = -1;
  @java.lang.Override
  public final boolean isInitialized() {
    byte isInitialized = memoizedIsInitialized;
    if (isInitialized == 1) return true;
    if (isInitialized == 0) return false;

    memoizedIsInitialized = 1;
    return true;
  }

  @java.lang.Override
  public void writeTo(com.google.protobuf.CodedOutputStream output)
                      throws java.io.IOException {
    if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(path_)) {
      com.google.protobuf.GeneratedMessageV3.writeString(output, 1, path_);
    }
    if (lineCoverage_ != null) {
      output.writeMessage(2, getLineCoverage());
    }
    if (branchCoverage_ != null) {
      output.writeMessage(3, getBranchCoverage());
    }
    unknownFields.writeTo(output);
  }

  @java.lang.Override
  public int getSerializedSize() {
    int size = memoizedSize;
    if (size != -1) return size;

    size = 0;
    if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(path_)) {
      size += com.google.protobuf.GeneratedMessageV3.computeStringSize(1, path_);
    }
    if (lineCoverage_ != null) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(2, getLineCoverage());
    }
    if (branchCoverage_ != null) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(3, getBranchCoverage());
    }
    size += unknownFields.getSerializedSize();
    memoizedSize = size;
    return size;
  }

  @java.lang.Override
  public boolean equals(final java.lang.Object obj) {
    if (obj == this) {
     return true;
    }
    if (!(obj instanceof com.google.devtools.resultstore.v2.FileCoverage)) {
      return super.equals(obj);
    }
    com.google.devtools.resultstore.v2.FileCoverage other = (com.google.devtools.resultstore.v2.FileCoverage) obj;

    if (!getPath()
        .equals(other.getPath())) return false;
    if (hasLineCoverage() != other.hasLineCoverage()) return false;
    if (hasLineCoverage()) {
      if (!getLineCoverage()
          .equals(other.getLineCoverage())) return false;
    }
    if (hasBranchCoverage() != other.hasBranchCoverage()) return false;
    if (hasBranchCoverage()) {
      if (!getBranchCoverage()
          .equals(other.getBranchCoverage())) return false;
    }
    if (!unknownFields.equals(other.unknownFields)) return false;
    return true;
  }

  @java.lang.Override
  public int hashCode() {
    if (memoizedHashCode != 0) {
      return memoizedHashCode;
    }
    int hash = 41;
    hash = (19 * hash) + getDescriptor().hashCode();
    hash = (37 * hash) + PATH_FIELD_NUMBER;
    hash = (53 * hash) + getPath().hashCode();
    if (hasLineCoverage()) {
      hash = (37 * hash) + LINE_COVERAGE_FIELD_NUMBER;
      hash = (53 * hash) + getLineCoverage().hashCode();
    }
    if (hasBranchCoverage()) {
      hash = (37 * hash) + BRANCH_COVERAGE_FIELD_NUMBER;
      hash = (53 * hash) + getBranchCoverage().hashCode();
    }
    hash = (29 * hash) + unknownFields.hashCode();
    memoizedHashCode = hash;
    return hash;
  }

  public static com.google.devtools.resultstore.v2.FileCoverage parseFrom(
      java.nio.ByteBuffer data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static com.google.devtools.resultstore.v2.FileCoverage parseFrom(
      java.nio.ByteBuffer data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static com.google.devtools.resultstore.v2.FileCoverage parseFrom(
      com.google.protobuf.ByteString data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static com.google.devtools.resultstore.v2.FileCoverage parseFrom(
      com.google.protobuf.ByteString data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static com.google.devtools.resultstore.v2.FileCoverage parseFrom(byte[] data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static com.google.devtools.resultstore.v2.FileCoverage parseFrom(
      byte[] data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static com.google.devtools.resultstore.v2.FileCoverage parseFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input);
  }
  public static com.google.devtools.resultstore.v2.FileCoverage parseFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input, extensionRegistry);
  }
  public static com.google.devtools.resultstore.v2.FileCoverage parseDelimitedFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseDelimitedWithIOException(PARSER, input);
  }
  public static com.google.devtools.resultstore.v2.FileCoverage parseDelimitedFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
  }
  public static com.google.devtools.resultstore.v2.FileCoverage parseFrom(
      com.google.protobuf.CodedInputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input);
  }
  public static com.google.devtools.resultstore.v2.FileCoverage parseFrom(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input, extensionRegistry);
  }

  @java.lang.Override
  public Builder newBuilderForType() { return newBuilder(); }
  public static Builder newBuilder() {
    return DEFAULT_INSTANCE.toBuilder();
  }
  public static Builder newBuilder(com.google.devtools.resultstore.v2.FileCoverage prototype) {
    return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
  }
  @java.lang.Override
  public Builder toBuilder() {
    return this == DEFAULT_INSTANCE
        ? new Builder() : new Builder().mergeFrom(this);
  }

  @java.lang.Override
  protected Builder newBuilderForType(
      com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
    Builder builder = new Builder(parent);
    return builder;
  }
  /**
   * <pre>
   * Describes code coverage for a particular file under test.
   * </pre>
   *
   * Protobuf type {@code google.devtools.resultstore.v2.FileCoverage}
   */
  public static final class Builder extends
      com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
      // @@protoc_insertion_point(builder_implements:google.devtools.resultstore.v2.FileCoverage)
      com.google.devtools.resultstore.v2.FileCoverageOrBuilder {
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.google.devtools.resultstore.v2.CoverageProto.internal_static_google_devtools_resultstore_v2_FileCoverage_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.google.devtools.resultstore.v2.CoverageProto.internal_static_google_devtools_resultstore_v2_FileCoverage_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.google.devtools.resultstore.v2.FileCoverage.class, com.google.devtools.resultstore.v2.FileCoverage.Builder.class);
    }

    // Construct using com.google.devtools.resultstore.v2.FileCoverage.newBuilder()
    private Builder() {
      maybeForceBuilderInitialization();
    }

    private Builder(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      super(parent);
      maybeForceBuilderInitialization();
    }
    private void maybeForceBuilderInitialization() {
      if (com.google.protobuf.GeneratedMessageV3
              .alwaysUseFieldBuilders) {
      }
    }
    @java.lang.Override
    public Builder clear() {
      super.clear();
      path_ = "";

      if (lineCoverageBuilder_ == null) {
        lineCoverage_ = null;
      } else {
        lineCoverage_ = null;
        lineCoverageBuilder_ = null;
      }
      if (branchCoverageBuilder_ == null) {
        branchCoverage_ = null;
      } else {
        branchCoverage_ = null;
        branchCoverageBuilder_ = null;
      }
      return this;
    }

    @java.lang.Override
    public com.google.protobuf.Descriptors.Descriptor
        getDescriptorForType() {
      return com.google.devtools.resultstore.v2.CoverageProto.internal_static_google_devtools_resultstore_v2_FileCoverage_descriptor;
    }

    @java.lang.Override
    public com.google.devtools.resultstore.v2.FileCoverage getDefaultInstanceForType() {
      return com.google.devtools.resultstore.v2.FileCoverage.getDefaultInstance();
    }

    @java.lang.Override
    public com.google.devtools.resultstore.v2.FileCoverage build() {
      com.google.devtools.resultstore.v2.FileCoverage result = buildPartial();
      if (!result.isInitialized()) {
        throw newUninitializedMessageException(result);
      }
      return result;
    }

    @java.lang.Override
    public com.google.devtools.resultstore.v2.FileCoverage buildPartial() {
      com.google.devtools.resultstore.v2.FileCoverage result = new com.google.devtools.resultstore.v2.FileCoverage(this);
      result.path_ = path_;
      if (lineCoverageBuilder_ == null) {
        result.lineCoverage_ = lineCoverage_;
      } else {
        result.lineCoverage_ = lineCoverageBuilder_.build();
      }
      if (branchCoverageBuilder_ == null) {
        result.branchCoverage_ = branchCoverage_;
      } else {
        result.branchCoverage_ = branchCoverageBuilder_.build();
      }
      onBuilt();
      return result;
    }

    @java.lang.Override
    public Builder clone() {
      return super.clone();
    }
    @java.lang.Override
    public Builder setField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        java.lang.Object value) {
      return super.setField(field, value);
    }
    @java.lang.Override
    public Builder clearField(
        com.google.protobuf.Descriptors.FieldDescriptor field) {
      return super.clearField(field);
    }
    @java.lang.Override
    public Builder clearOneof(
        com.google.protobuf.Descriptors.OneofDescriptor oneof) {
      return super.clearOneof(oneof);
    }
    @java.lang.Override
    public Builder setRepeatedField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        int index, java.lang.Object value) {
      return super.setRepeatedField(field, index, value);
    }
    @java.lang.Override
    public Builder addRepeatedField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        java.lang.Object value) {
      return super.addRepeatedField(field, value);
    }
    @java.lang.Override
    public Builder mergeFrom(com.google.protobuf.Message other) {
      if (other instanceof com.google.devtools.resultstore.v2.FileCoverage) {
        return mergeFrom((com.google.devtools.resultstore.v2.FileCoverage)other);
      } else {
        super.mergeFrom(other);
        return this;
      }
    }

    public Builder mergeFrom(com.google.devtools.resultstore.v2.FileCoverage other) {
      if (other == com.google.devtools.resultstore.v2.FileCoverage.getDefaultInstance()) return this;
      if (!other.getPath().isEmpty()) {
        path_ = other.path_;
        onChanged();
      }
      if (other.hasLineCoverage()) {
        mergeLineCoverage(other.getLineCoverage());
      }
      if (other.hasBranchCoverage()) {
        mergeBranchCoverage(other.getBranchCoverage());
      }
      this.mergeUnknownFields(other.unknownFields);
      onChanged();
      return this;
    }

    @java.lang.Override
    public final boolean isInitialized() {
      return true;
    }

    @java.lang.Override
    public Builder mergeFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      com.google.devtools.resultstore.v2.FileCoverage parsedMessage = null;
      try {
        parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        parsedMessage = (com.google.devtools.resultstore.v2.FileCoverage) e.getUnfinishedMessage();
        throw e.unwrapIOException();
      } finally {
        if (parsedMessage != null) {
          mergeFrom(parsedMessage);
        }
      }
      return this;
    }

    private java.lang.Object path_ = "";
    /**
     * <pre>
     * Path of source file within the SourceContext of this Invocation.
     * </pre>
     *
     * <code>string path = 1;</code>
     * @return The path.
     */
    public java.lang.String getPath() {
      java.lang.Object ref = path_;
      if (!(ref instanceof java.lang.String)) {
        com.google.protobuf.ByteString bs =
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        path_ = s;
        return s;
      } else {
        return (java.lang.String) ref;
      }
    }
    /**
     * <pre>
     * Path of source file within the SourceContext of this Invocation.
     * </pre>
     *
     * <code>string path = 1;</code>
     * @return The bytes for path.
     */
    public com.google.protobuf.ByteString
        getPathBytes() {
      java.lang.Object ref = path_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        path_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }
    /**
     * <pre>
     * Path of source file within the SourceContext of this Invocation.
     * </pre>
     *
     * <code>string path = 1;</code>
     * @param value The path to set.
     * @return This builder for chaining.
     */
    public Builder setPath(
        java.lang.String value) {
      if (value == null) {
    throw new NullPointerException();
  }
  
      path_ = value;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * Path of source file within the SourceContext of this Invocation.
     * </pre>
     *
     * <code>string path = 1;</code>
     * @return This builder for chaining.
     */
    public Builder clearPath() {
      
      path_ = getDefaultInstance().getPath();
      onChanged();
      return this;
    }
    /**
     * <pre>
     * Path of source file within the SourceContext of this Invocation.
     * </pre>
     *
     * <code>string path = 1;</code>
     * @param value The bytes for path to set.
     * @return This builder for chaining.
     */
    public Builder setPathBytes(
        com.google.protobuf.ByteString value) {
      if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
      
      path_ = value;
      onChanged();
      return this;
    }

    private com.google.devtools.resultstore.v2.LineCoverage lineCoverage_;
    private com.google.protobuf.SingleFieldBuilderV3<
        com.google.devtools.resultstore.v2.LineCoverage, com.google.devtools.resultstore.v2.LineCoverage.Builder, com.google.devtools.resultstore.v2.LineCoverageOrBuilder> lineCoverageBuilder_;
    /**
     * <pre>
     * Details of lines in a file for calculating line coverage.
     * </pre>
     *
     * <code>.google.devtools.resultstore.v2.LineCoverage line_coverage = 2;</code>
     * @return Whether the lineCoverage field is set.
     */
    public boolean hasLineCoverage() {
      return lineCoverageBuilder_ != null || lineCoverage_ != null;
    }
    /**
     * <pre>
     * Details of lines in a file for calculating line coverage.
     * </pre>
     *
     * <code>.google.devtools.resultstore.v2.LineCoverage line_coverage = 2;</code>
     * @return The lineCoverage.
     */
    public com.google.devtools.resultstore.v2.LineCoverage getLineCoverage() {
      if (lineCoverageBuilder_ == null) {
        return lineCoverage_ == null ? com.google.devtools.resultstore.v2.LineCoverage.getDefaultInstance() : lineCoverage_;
      } else {
        return lineCoverageBuilder_.getMessage();
      }
    }
    /**
     * <pre>
     * Details of lines in a file for calculating line coverage.
     * </pre>
     *
     * <code>.google.devtools.resultstore.v2.LineCoverage line_coverage = 2;</code>
     */
    public Builder setLineCoverage(com.google.devtools.resultstore.v2.LineCoverage value) {
      if (lineCoverageBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        lineCoverage_ = value;
        onChanged();
      } else {
        lineCoverageBuilder_.setMessage(value);
      }

      return this;
    }
    /**
     * <pre>
     * Details of lines in a file for calculating line coverage.
     * </pre>
     *
     * <code>.google.devtools.resultstore.v2.LineCoverage line_coverage = 2;</code>
     */
    public Builder setLineCoverage(
        com.google.devtools.resultstore.v2.LineCoverage.Builder builderForValue) {
      if (lineCoverageBuilder_ == null) {
        lineCoverage_ = builderForValue.build();
        onChanged();
      } else {
        lineCoverageBuilder_.setMessage(builderForValue.build());
      }

      return this;
    }
    /**
     * <pre>
     * Details of lines in a file for calculating line coverage.
     * </pre>
     *
     * <code>.google.devtools.resultstore.v2.LineCoverage line_coverage = 2;</code>
     */
    public Builder mergeLineCoverage(com.google.devtools.resultstore.v2.LineCoverage value) {
      if (lineCoverageBuilder_ == null) {
        if (lineCoverage_ != null) {
          lineCoverage_ =
            com.google.devtools.resultstore.v2.LineCoverage.newBuilder(lineCoverage_).mergeFrom(value).buildPartial();
        } else {
          lineCoverage_ = value;
        }
        onChanged();
      } else {
        lineCoverageBuilder_.mergeFrom(value);
      }

      return this;
    }
    /**
     * <pre>
     * Details of lines in a file for calculating line coverage.
     * </pre>
     *
     * <code>.google.devtools.resultstore.v2.LineCoverage line_coverage = 2;</code>
     */
    public Builder clearLineCoverage() {
      if (lineCoverageBuilder_ == null) {
        lineCoverage_ = null;
        onChanged();
      } else {
        lineCoverage_ = null;
        lineCoverageBuilder_ = null;
      }

      return this;
    }
    /**
     * <pre>
     * Details of lines in a file for calculating line coverage.
     * </pre>
     *
     * <code>.google.devtools.resultstore.v2.LineCoverage line_coverage = 2;</code>
     */
    public com.google.devtools.resultstore.v2.LineCoverage.Builder getLineCoverageBuilder() {
      
      onChanged();
      return getLineCoverageFieldBuilder().getBuilder();
    }
    /**
     * <pre>
     * Details of lines in a file for calculating line coverage.
     * </pre>
     *
     * <code>.google.devtools.resultstore.v2.LineCoverage line_coverage = 2;</code>
     */
    public com.google.devtools.resultstore.v2.LineCoverageOrBuilder getLineCoverageOrBuilder() {
      if (lineCoverageBuilder_ != null) {
        return lineCoverageBuilder_.getMessageOrBuilder();
      } else {
        return lineCoverage_ == null ?
            com.google.devtools.resultstore.v2.LineCoverage.getDefaultInstance() : lineCoverage_;
      }
    }
    /**
     * <pre>
     * Details of lines in a file for calculating line coverage.
     * </pre>
     *
     * <code>.google.devtools.resultstore.v2.LineCoverage line_coverage = 2;</code>
     */
    private com.google.protobuf.SingleFieldBuilderV3<
        com.google.devtools.resultstore.v2.LineCoverage, com.google.devtools.resultstore.v2.LineCoverage.Builder, com.google.devtools.resultstore.v2.LineCoverageOrBuilder> 
        getLineCoverageFieldBuilder() {
      if (lineCoverageBuilder_ == null) {
        lineCoverageBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
            com.google.devtools.resultstore.v2.LineCoverage, com.google.devtools.resultstore.v2.LineCoverage.Builder, com.google.devtools.resultstore.v2.LineCoverageOrBuilder>(
                getLineCoverage(),
                getParentForChildren(),
                isClean());
        lineCoverage_ = null;
      }
      return lineCoverageBuilder_;
    }

    private com.google.devtools.resultstore.v2.BranchCoverage branchCoverage_;
    private com.google.protobuf.SingleFieldBuilderV3<
        com.google.devtools.resultstore.v2.BranchCoverage, com.google.devtools.resultstore.v2.BranchCoverage.Builder, com.google.devtools.resultstore.v2.BranchCoverageOrBuilder> branchCoverageBuilder_;
    /**
     * <pre>
     * Details of branches in a file for calculating branch coverage.
     * </pre>
     *
     * <code>.google.devtools.resultstore.v2.BranchCoverage branch_coverage = 3;</code>
     * @return Whether the branchCoverage field is set.
     */
    public boolean hasBranchCoverage() {
      return branchCoverageBuilder_ != null || branchCoverage_ != null;
    }
    /**
     * <pre>
     * Details of branches in a file for calculating branch coverage.
     * </pre>
     *
     * <code>.google.devtools.resultstore.v2.BranchCoverage branch_coverage = 3;</code>
     * @return The branchCoverage.
     */
    public com.google.devtools.resultstore.v2.BranchCoverage getBranchCoverage() {
      if (branchCoverageBuilder_ == null) {
        return branchCoverage_ == null ? com.google.devtools.resultstore.v2.BranchCoverage.getDefaultInstance() : branchCoverage_;
      } else {
        return branchCoverageBuilder_.getMessage();
      }
    }
    /**
     * <pre>
     * Details of branches in a file for calculating branch coverage.
     * </pre>
     *
     * <code>.google.devtools.resultstore.v2.BranchCoverage branch_coverage = 3;</code>
     */
    public Builder setBranchCoverage(com.google.devtools.resultstore.v2.BranchCoverage value) {
      if (branchCoverageBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        branchCoverage_ = value;
        onChanged();
      } else {
        branchCoverageBuilder_.setMessage(value);
      }

      return this;
    }
    /**
     * <pre>
     * Details of branches in a file for calculating branch coverage.
     * </pre>
     *
     * <code>.google.devtools.resultstore.v2.BranchCoverage branch_coverage = 3;</code>
     */
    public Builder setBranchCoverage(
        com.google.devtools.resultstore.v2.BranchCoverage.Builder builderForValue) {
      if (branchCoverageBuilder_ == null) {
        branchCoverage_ = builderForValue.build();
        onChanged();
      } else {
        branchCoverageBuilder_.setMessage(builderForValue.build());
      }

      return this;
    }
    /**
     * <pre>
     * Details of branches in a file for calculating branch coverage.
     * </pre>
     *
     * <code>.google.devtools.resultstore.v2.BranchCoverage branch_coverage = 3;</code>
     */
    public Builder mergeBranchCoverage(com.google.devtools.resultstore.v2.BranchCoverage value) {
      if (branchCoverageBuilder_ == null) {
        if (branchCoverage_ != null) {
          branchCoverage_ =
            com.google.devtools.resultstore.v2.BranchCoverage.newBuilder(branchCoverage_).mergeFrom(value).buildPartial();
        } else {
          branchCoverage_ = value;
        }
        onChanged();
      } else {
        branchCoverageBuilder_.mergeFrom(value);
      }

      return this;
    }
    /**
     * <pre>
     * Details of branches in a file for calculating branch coverage.
     * </pre>
     *
     * <code>.google.devtools.resultstore.v2.BranchCoverage branch_coverage = 3;</code>
     */
    public Builder clearBranchCoverage() {
      if (branchCoverageBuilder_ == null) {
        branchCoverage_ = null;
        onChanged();
      } else {
        branchCoverage_ = null;
        branchCoverageBuilder_ = null;
      }

      return this;
    }
    /**
     * <pre>
     * Details of branches in a file for calculating branch coverage.
     * </pre>
     *
     * <code>.google.devtools.resultstore.v2.BranchCoverage branch_coverage = 3;</code>
     */
    public com.google.devtools.resultstore.v2.BranchCoverage.Builder getBranchCoverageBuilder() {
      
      onChanged();
      return getBranchCoverageFieldBuilder().getBuilder();
    }
    /**
     * <pre>
     * Details of branches in a file for calculating branch coverage.
     * </pre>
     *
     * <code>.google.devtools.resultstore.v2.BranchCoverage branch_coverage = 3;</code>
     */
    public com.google.devtools.resultstore.v2.BranchCoverageOrBuilder getBranchCoverageOrBuilder() {
      if (branchCoverageBuilder_ != null) {
        return branchCoverageBuilder_.getMessageOrBuilder();
      } else {
        return branchCoverage_ == null ?
            com.google.devtools.resultstore.v2.BranchCoverage.getDefaultInstance() : branchCoverage_;
      }
    }
    /**
     * <pre>
     * Details of branches in a file for calculating branch coverage.
     * </pre>
     *
     * <code>.google.devtools.resultstore.v2.BranchCoverage branch_coverage = 3;</code>
     */
    private com.google.protobuf.SingleFieldBuilderV3<
        com.google.devtools.resultstore.v2.BranchCoverage, com.google.devtools.resultstore.v2.BranchCoverage.Builder, com.google.devtools.resultstore.v2.BranchCoverageOrBuilder> 
        getBranchCoverageFieldBuilder() {
      if (branchCoverageBuilder_ == null) {
        branchCoverageBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
            com.google.devtools.resultstore.v2.BranchCoverage, com.google.devtools.resultstore.v2.BranchCoverage.Builder, com.google.devtools.resultstore.v2.BranchCoverageOrBuilder>(
                getBranchCoverage(),
                getParentForChildren(),
                isClean());
        branchCoverage_ = null;
      }
      return branchCoverageBuilder_;
    }
    @java.lang.Override
    public final Builder setUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return super.setUnknownFields(unknownFields);
    }

    @java.lang.Override
    public final Builder mergeUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return super.mergeUnknownFields(unknownFields);
    }


    // @@protoc_insertion_point(builder_scope:google.devtools.resultstore.v2.FileCoverage)
  }

  // @@protoc_insertion_point(class_scope:google.devtools.resultstore.v2.FileCoverage)
  private static final com.google.devtools.resultstore.v2.FileCoverage DEFAULT_INSTANCE;
  static {
    DEFAULT_INSTANCE = new com.google.devtools.resultstore.v2.FileCoverage();
  }

  public static com.google.devtools.resultstore.v2.FileCoverage getDefaultInstance() {
    return DEFAULT_INSTANCE;
  }

  private static final com.google.protobuf.Parser<FileCoverage>
      PARSER = new com.google.protobuf.AbstractParser<FileCoverage>() {
    @java.lang.Override
    public FileCoverage parsePartialFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return new FileCoverage(input, extensionRegistry);
    }
  };

  public static com.google.protobuf.Parser<FileCoverage> parser() {
    return PARSER;
  }

  @java.lang.Override
  public com.google.protobuf.Parser<FileCoverage> getParserForType() {
    return PARSER;
  }

  @java.lang.Override
  public com.google.devtools.resultstore.v2.FileCoverage getDefaultInstanceForType() {
    return DEFAULT_INSTANCE;
  }

}

