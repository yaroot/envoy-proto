// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: google/devtools/resultstore/v2/resultstore_upload.proto

package com.google.devtools.resultstore.v2;

/**
 * <pre>
 * Request passed into UploadBatch
 * </pre>
 *
 * Protobuf type {@code google.devtools.resultstore.v2.UploadBatchRequest}
 */
public final class UploadBatchRequest extends
    com.google.protobuf.GeneratedMessageV3 implements
    // @@protoc_insertion_point(message_implements:google.devtools.resultstore.v2.UploadBatchRequest)
    UploadBatchRequestOrBuilder {
private static final long serialVersionUID = 0L;
  // Use UploadBatchRequest.newBuilder() to construct.
  private UploadBatchRequest(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
    super(builder);
  }
  private UploadBatchRequest() {
    parent_ = "";
    authorizationToken_ = "";
    nextResumeToken_ = "";
    resumeToken_ = "";
    uploaderState_ = com.google.protobuf.ByteString.EMPTY;
    uploadRequests_ = java.util.Collections.emptyList();
  }

  @java.lang.Override
  @SuppressWarnings({"unused"})
  protected java.lang.Object newInstance(
      UnusedPrivateParameter unused) {
    return new UploadBatchRequest();
  }

  @java.lang.Override
  public final com.google.protobuf.UnknownFieldSet
  getUnknownFields() {
    return this.unknownFields;
  }
  private UploadBatchRequest(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    this();
    if (extensionRegistry == null) {
      throw new java.lang.NullPointerException();
    }
    int mutable_bitField0_ = 0;
    com.google.protobuf.UnknownFieldSet.Builder unknownFields =
        com.google.protobuf.UnknownFieldSet.newBuilder();
    try {
      boolean done = false;
      while (!done) {
        int tag = input.readTag();
        switch (tag) {
          case 0:
            done = true;
            break;
          case 10: {
            java.lang.String s = input.readStringRequireUtf8();

            parent_ = s;
            break;
          }
          case 18: {
            java.lang.String s = input.readStringRequireUtf8();

            authorizationToken_ = s;
            break;
          }
          case 26: {
            java.lang.String s = input.readStringRequireUtf8();

            nextResumeToken_ = s;
            break;
          }
          case 34: {
            java.lang.String s = input.readStringRequireUtf8();

            resumeToken_ = s;
            break;
          }
          case 42: {
            if (!((mutable_bitField0_ & 0x00000001) != 0)) {
              uploadRequests_ = new java.util.ArrayList<com.google.devtools.resultstore.v2.UploadRequest>();
              mutable_bitField0_ |= 0x00000001;
            }
            uploadRequests_.add(
                input.readMessage(com.google.devtools.resultstore.v2.UploadRequest.parser(), extensionRegistry));
            break;
          }
          case 50: {

            uploaderState_ = input.readBytes();
            break;
          }
          default: {
            if (!parseUnknownField(
                input, unknownFields, extensionRegistry, tag)) {
              done = true;
            }
            break;
          }
        }
      }
    } catch (com.google.protobuf.InvalidProtocolBufferException e) {
      throw e.setUnfinishedMessage(this);
    } catch (com.google.protobuf.UninitializedMessageException e) {
      throw e.asInvalidProtocolBufferException().setUnfinishedMessage(this);
    } catch (java.io.IOException e) {
      throw new com.google.protobuf.InvalidProtocolBufferException(
          e).setUnfinishedMessage(this);
    } finally {
      if (((mutable_bitField0_ & 0x00000001) != 0)) {
        uploadRequests_ = java.util.Collections.unmodifiableList(uploadRequests_);
      }
      this.unknownFields = unknownFields.build();
      makeExtensionsImmutable();
    }
  }
  public static final com.google.protobuf.Descriptors.Descriptor
      getDescriptor() {
    return com.google.devtools.resultstore.v2.ResultStoreUploadProto.internal_static_google_devtools_resultstore_v2_UploadBatchRequest_descriptor;
  }

  @java.lang.Override
  protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internalGetFieldAccessorTable() {
    return com.google.devtools.resultstore.v2.ResultStoreUploadProto.internal_static_google_devtools_resultstore_v2_UploadBatchRequest_fieldAccessorTable
        .ensureFieldAccessorsInitialized(
            com.google.devtools.resultstore.v2.UploadBatchRequest.class, com.google.devtools.resultstore.v2.UploadBatchRequest.Builder.class);
  }

  public static final int PARENT_FIELD_NUMBER = 1;
  private volatile java.lang.Object parent_;
  /**
   * <pre>
   * Required. The name of the invocation being modified.
   * The name format must be: invocations/${INVOCATION_ID}
   * </pre>
   *
   * <code>string parent = 1 [(.google.api.field_behavior) = REQUIRED];</code>
   * @return The parent.
   */
  @java.lang.Override
  public java.lang.String getParent() {
    java.lang.Object ref = parent_;
    if (ref instanceof java.lang.String) {
      return (java.lang.String) ref;
    } else {
      com.google.protobuf.ByteString bs = 
          (com.google.protobuf.ByteString) ref;
      java.lang.String s = bs.toStringUtf8();
      parent_ = s;
      return s;
    }
  }
  /**
   * <pre>
   * Required. The name of the invocation being modified.
   * The name format must be: invocations/${INVOCATION_ID}
   * </pre>
   *
   * <code>string parent = 1 [(.google.api.field_behavior) = REQUIRED];</code>
   * @return The bytes for parent.
   */
  @java.lang.Override
  public com.google.protobuf.ByteString
      getParentBytes() {
    java.lang.Object ref = parent_;
    if (ref instanceof java.lang.String) {
      com.google.protobuf.ByteString b = 
          com.google.protobuf.ByteString.copyFromUtf8(
              (java.lang.String) ref);
      parent_ = b;
      return b;
    } else {
      return (com.google.protobuf.ByteString) ref;
    }
  }

  public static final int AUTHORIZATION_TOKEN_FIELD_NUMBER = 2;
  private volatile java.lang.Object authorizationToken_;
  /**
   * <pre>
   * Required. A UUID that must match the value provided in CreateInvocationRequest.
   * </pre>
   *
   * <code>string authorization_token = 2 [(.google.api.field_behavior) = REQUIRED];</code>
   * @return The authorizationToken.
   */
  @java.lang.Override
  public java.lang.String getAuthorizationToken() {
    java.lang.Object ref = authorizationToken_;
    if (ref instanceof java.lang.String) {
      return (java.lang.String) ref;
    } else {
      com.google.protobuf.ByteString bs = 
          (com.google.protobuf.ByteString) ref;
      java.lang.String s = bs.toStringUtf8();
      authorizationToken_ = s;
      return s;
    }
  }
  /**
   * <pre>
   * Required. A UUID that must match the value provided in CreateInvocationRequest.
   * </pre>
   *
   * <code>string authorization_token = 2 [(.google.api.field_behavior) = REQUIRED];</code>
   * @return The bytes for authorizationToken.
   */
  @java.lang.Override
  public com.google.protobuf.ByteString
      getAuthorizationTokenBytes() {
    java.lang.Object ref = authorizationToken_;
    if (ref instanceof java.lang.String) {
      com.google.protobuf.ByteString b = 
          com.google.protobuf.ByteString.copyFromUtf8(
              (java.lang.String) ref);
      authorizationToken_ = b;
      return b;
    } else {
      return (com.google.protobuf.ByteString) ref;
    }
  }

  public static final int NEXT_RESUME_TOKEN_FIELD_NUMBER = 3;
  private volatile java.lang.Object nextResumeToken_;
  /**
   * <pre>
   * Required. The token of this batch, that will be committed in this UploadBatchRequest.
   * If this matches the previously uploaded resume_token, then this request
   * will silently do nothing.
   * See CreateInvocationRequest.initial_resume_token for more information.
   * Must be web safe Base64 encoded bytes.
   * </pre>
   *
   * <code>string next_resume_token = 3 [(.google.api.field_behavior) = REQUIRED];</code>
   * @return The nextResumeToken.
   */
  @java.lang.Override
  public java.lang.String getNextResumeToken() {
    java.lang.Object ref = nextResumeToken_;
    if (ref instanceof java.lang.String) {
      return (java.lang.String) ref;
    } else {
      com.google.protobuf.ByteString bs = 
          (com.google.protobuf.ByteString) ref;
      java.lang.String s = bs.toStringUtf8();
      nextResumeToken_ = s;
      return s;
    }
  }
  /**
   * <pre>
   * Required. The token of this batch, that will be committed in this UploadBatchRequest.
   * If this matches the previously uploaded resume_token, then this request
   * will silently do nothing.
   * See CreateInvocationRequest.initial_resume_token for more information.
   * Must be web safe Base64 encoded bytes.
   * </pre>
   *
   * <code>string next_resume_token = 3 [(.google.api.field_behavior) = REQUIRED];</code>
   * @return The bytes for nextResumeToken.
   */
  @java.lang.Override
  public com.google.protobuf.ByteString
      getNextResumeTokenBytes() {
    java.lang.Object ref = nextResumeToken_;
    if (ref instanceof java.lang.String) {
      com.google.protobuf.ByteString b = 
          com.google.protobuf.ByteString.copyFromUtf8(
              (java.lang.String) ref);
      nextResumeToken_ = b;
      return b;
    } else {
      return (com.google.protobuf.ByteString) ref;
    }
  }

  public static final int RESUME_TOKEN_FIELD_NUMBER = 4;
  private volatile java.lang.Object resumeToken_;
  /**
   * <pre>
   * Required. The token of the previous batch that was committed in a UploadBatchRequest.
   * This will be checked after next_resume_token match is checked. If this does
   * not match the previously uploaded resume_token, a 409 Conflict (HTTPS) or
   * ABORTED (gRPC ) error code indicating a concurrency
   * failure will be returned, and that the user should call
   * GetInvocationUploadMetadata to fetch the current resume_token to
   * reconstruct the state of the upload to resume it.
   * See CreateInvocationRequest.initial_resume_token for more information.
   * Must be web safe Base64 encoded bytes.
   * </pre>
   *
   * <code>string resume_token = 4 [(.google.api.field_behavior) = REQUIRED];</code>
   * @return The resumeToken.
   */
  @java.lang.Override
  public java.lang.String getResumeToken() {
    java.lang.Object ref = resumeToken_;
    if (ref instanceof java.lang.String) {
      return (java.lang.String) ref;
    } else {
      com.google.protobuf.ByteString bs = 
          (com.google.protobuf.ByteString) ref;
      java.lang.String s = bs.toStringUtf8();
      resumeToken_ = s;
      return s;
    }
  }
  /**
   * <pre>
   * Required. The token of the previous batch that was committed in a UploadBatchRequest.
   * This will be checked after next_resume_token match is checked. If this does
   * not match the previously uploaded resume_token, a 409 Conflict (HTTPS) or
   * ABORTED (gRPC ) error code indicating a concurrency
   * failure will be returned, and that the user should call
   * GetInvocationUploadMetadata to fetch the current resume_token to
   * reconstruct the state of the upload to resume it.
   * See CreateInvocationRequest.initial_resume_token for more information.
   * Must be web safe Base64 encoded bytes.
   * </pre>
   *
   * <code>string resume_token = 4 [(.google.api.field_behavior) = REQUIRED];</code>
   * @return The bytes for resumeToken.
   */
  @java.lang.Override
  public com.google.protobuf.ByteString
      getResumeTokenBytes() {
    java.lang.Object ref = resumeToken_;
    if (ref instanceof java.lang.String) {
      com.google.protobuf.ByteString b = 
          com.google.protobuf.ByteString.copyFromUtf8(
              (java.lang.String) ref);
      resumeToken_ = b;
      return b;
    } else {
      return (com.google.protobuf.ByteString) ref;
    }
  }

  public static final int UPLOADER_STATE_FIELD_NUMBER = 6;
  private com.google.protobuf.ByteString uploaderState_;
  /**
   * <pre>
   * Client-specific data used to resume batch upload if an error occurs and
   * retry is needed. This serves a role closely related to resume_token, as
   * both fields may be used to provide state required to restore a Batch
   * Upload, but they differ in two important aspects:
   *  - it is not compared to previous values, and as such does not provide
   *    concurrency control;
   *  - it allows for a larger payload, since the contents are never
   *    inspected/compared;
   * The size of the message must be within 1 MiB. Too large requests will be
   * rejected.
   * </pre>
   *
   * <code>bytes uploader_state = 6;</code>
   * @return The uploaderState.
   */
  @java.lang.Override
  public com.google.protobuf.ByteString getUploaderState() {
    return uploaderState_;
  }

  public static final int UPLOAD_REQUESTS_FIELD_NUMBER = 5;
  private java.util.List<com.google.devtools.resultstore.v2.UploadRequest> uploadRequests_;
  /**
   * <pre>
   * The individual upload requests for this batch.
   * This field may be empty, allowing this RPC to be used like TouchInvocation.
   * </pre>
   *
   * <code>repeated .google.devtools.resultstore.v2.UploadRequest upload_requests = 5;</code>
   */
  @java.lang.Override
  public java.util.List<com.google.devtools.resultstore.v2.UploadRequest> getUploadRequestsList() {
    return uploadRequests_;
  }
  /**
   * <pre>
   * The individual upload requests for this batch.
   * This field may be empty, allowing this RPC to be used like TouchInvocation.
   * </pre>
   *
   * <code>repeated .google.devtools.resultstore.v2.UploadRequest upload_requests = 5;</code>
   */
  @java.lang.Override
  public java.util.List<? extends com.google.devtools.resultstore.v2.UploadRequestOrBuilder> 
      getUploadRequestsOrBuilderList() {
    return uploadRequests_;
  }
  /**
   * <pre>
   * The individual upload requests for this batch.
   * This field may be empty, allowing this RPC to be used like TouchInvocation.
   * </pre>
   *
   * <code>repeated .google.devtools.resultstore.v2.UploadRequest upload_requests = 5;</code>
   */
  @java.lang.Override
  public int getUploadRequestsCount() {
    return uploadRequests_.size();
  }
  /**
   * <pre>
   * The individual upload requests for this batch.
   * This field may be empty, allowing this RPC to be used like TouchInvocation.
   * </pre>
   *
   * <code>repeated .google.devtools.resultstore.v2.UploadRequest upload_requests = 5;</code>
   */
  @java.lang.Override
  public com.google.devtools.resultstore.v2.UploadRequest getUploadRequests(int index) {
    return uploadRequests_.get(index);
  }
  /**
   * <pre>
   * The individual upload requests for this batch.
   * This field may be empty, allowing this RPC to be used like TouchInvocation.
   * </pre>
   *
   * <code>repeated .google.devtools.resultstore.v2.UploadRequest upload_requests = 5;</code>
   */
  @java.lang.Override
  public com.google.devtools.resultstore.v2.UploadRequestOrBuilder getUploadRequestsOrBuilder(
      int index) {
    return uploadRequests_.get(index);
  }

  private byte memoizedIsInitialized = -1;
  @java.lang.Override
  public final boolean isInitialized() {
    byte isInitialized = memoizedIsInitialized;
    if (isInitialized == 1) return true;
    if (isInitialized == 0) return false;

    memoizedIsInitialized = 1;
    return true;
  }

  @java.lang.Override
  public void writeTo(com.google.protobuf.CodedOutputStream output)
                      throws java.io.IOException {
    if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(parent_)) {
      com.google.protobuf.GeneratedMessageV3.writeString(output, 1, parent_);
    }
    if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(authorizationToken_)) {
      com.google.protobuf.GeneratedMessageV3.writeString(output, 2, authorizationToken_);
    }
    if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(nextResumeToken_)) {
      com.google.protobuf.GeneratedMessageV3.writeString(output, 3, nextResumeToken_);
    }
    if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(resumeToken_)) {
      com.google.protobuf.GeneratedMessageV3.writeString(output, 4, resumeToken_);
    }
    for (int i = 0; i < uploadRequests_.size(); i++) {
      output.writeMessage(5, uploadRequests_.get(i));
    }
    if (!uploaderState_.isEmpty()) {
      output.writeBytes(6, uploaderState_);
    }
    unknownFields.writeTo(output);
  }

  @java.lang.Override
  public int getSerializedSize() {
    int size = memoizedSize;
    if (size != -1) return size;

    size = 0;
    if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(parent_)) {
      size += com.google.protobuf.GeneratedMessageV3.computeStringSize(1, parent_);
    }
    if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(authorizationToken_)) {
      size += com.google.protobuf.GeneratedMessageV3.computeStringSize(2, authorizationToken_);
    }
    if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(nextResumeToken_)) {
      size += com.google.protobuf.GeneratedMessageV3.computeStringSize(3, nextResumeToken_);
    }
    if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(resumeToken_)) {
      size += com.google.protobuf.GeneratedMessageV3.computeStringSize(4, resumeToken_);
    }
    for (int i = 0; i < uploadRequests_.size(); i++) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(5, uploadRequests_.get(i));
    }
    if (!uploaderState_.isEmpty()) {
      size += com.google.protobuf.CodedOutputStream
        .computeBytesSize(6, uploaderState_);
    }
    size += unknownFields.getSerializedSize();
    memoizedSize = size;
    return size;
  }

  @java.lang.Override
  public boolean equals(final java.lang.Object obj) {
    if (obj == this) {
     return true;
    }
    if (!(obj instanceof com.google.devtools.resultstore.v2.UploadBatchRequest)) {
      return super.equals(obj);
    }
    com.google.devtools.resultstore.v2.UploadBatchRequest other = (com.google.devtools.resultstore.v2.UploadBatchRequest) obj;

    if (!getParent()
        .equals(other.getParent())) return false;
    if (!getAuthorizationToken()
        .equals(other.getAuthorizationToken())) return false;
    if (!getNextResumeToken()
        .equals(other.getNextResumeToken())) return false;
    if (!getResumeToken()
        .equals(other.getResumeToken())) return false;
    if (!getUploaderState()
        .equals(other.getUploaderState())) return false;
    if (!getUploadRequestsList()
        .equals(other.getUploadRequestsList())) return false;
    if (!unknownFields.equals(other.unknownFields)) return false;
    return true;
  }

  @java.lang.Override
  public int hashCode() {
    if (memoizedHashCode != 0) {
      return memoizedHashCode;
    }
    int hash = 41;
    hash = (19 * hash) + getDescriptor().hashCode();
    hash = (37 * hash) + PARENT_FIELD_NUMBER;
    hash = (53 * hash) + getParent().hashCode();
    hash = (37 * hash) + AUTHORIZATION_TOKEN_FIELD_NUMBER;
    hash = (53 * hash) + getAuthorizationToken().hashCode();
    hash = (37 * hash) + NEXT_RESUME_TOKEN_FIELD_NUMBER;
    hash = (53 * hash) + getNextResumeToken().hashCode();
    hash = (37 * hash) + RESUME_TOKEN_FIELD_NUMBER;
    hash = (53 * hash) + getResumeToken().hashCode();
    hash = (37 * hash) + UPLOADER_STATE_FIELD_NUMBER;
    hash = (53 * hash) + getUploaderState().hashCode();
    if (getUploadRequestsCount() > 0) {
      hash = (37 * hash) + UPLOAD_REQUESTS_FIELD_NUMBER;
      hash = (53 * hash) + getUploadRequestsList().hashCode();
    }
    hash = (29 * hash) + unknownFields.hashCode();
    memoizedHashCode = hash;
    return hash;
  }

  public static com.google.devtools.resultstore.v2.UploadBatchRequest parseFrom(
      java.nio.ByteBuffer data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static com.google.devtools.resultstore.v2.UploadBatchRequest parseFrom(
      java.nio.ByteBuffer data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static com.google.devtools.resultstore.v2.UploadBatchRequest parseFrom(
      com.google.protobuf.ByteString data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static com.google.devtools.resultstore.v2.UploadBatchRequest parseFrom(
      com.google.protobuf.ByteString data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static com.google.devtools.resultstore.v2.UploadBatchRequest parseFrom(byte[] data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static com.google.devtools.resultstore.v2.UploadBatchRequest parseFrom(
      byte[] data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static com.google.devtools.resultstore.v2.UploadBatchRequest parseFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input);
  }
  public static com.google.devtools.resultstore.v2.UploadBatchRequest parseFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input, extensionRegistry);
  }
  public static com.google.devtools.resultstore.v2.UploadBatchRequest parseDelimitedFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseDelimitedWithIOException(PARSER, input);
  }
  public static com.google.devtools.resultstore.v2.UploadBatchRequest parseDelimitedFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
  }
  public static com.google.devtools.resultstore.v2.UploadBatchRequest parseFrom(
      com.google.protobuf.CodedInputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input);
  }
  public static com.google.devtools.resultstore.v2.UploadBatchRequest parseFrom(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input, extensionRegistry);
  }

  @java.lang.Override
  public Builder newBuilderForType() { return newBuilder(); }
  public static Builder newBuilder() {
    return DEFAULT_INSTANCE.toBuilder();
  }
  public static Builder newBuilder(com.google.devtools.resultstore.v2.UploadBatchRequest prototype) {
    return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
  }
  @java.lang.Override
  public Builder toBuilder() {
    return this == DEFAULT_INSTANCE
        ? new Builder() : new Builder().mergeFrom(this);
  }

  @java.lang.Override
  protected Builder newBuilderForType(
      com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
    Builder builder = new Builder(parent);
    return builder;
  }
  /**
   * <pre>
   * Request passed into UploadBatch
   * </pre>
   *
   * Protobuf type {@code google.devtools.resultstore.v2.UploadBatchRequest}
   */
  public static final class Builder extends
      com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
      // @@protoc_insertion_point(builder_implements:google.devtools.resultstore.v2.UploadBatchRequest)
      com.google.devtools.resultstore.v2.UploadBatchRequestOrBuilder {
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.google.devtools.resultstore.v2.ResultStoreUploadProto.internal_static_google_devtools_resultstore_v2_UploadBatchRequest_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.google.devtools.resultstore.v2.ResultStoreUploadProto.internal_static_google_devtools_resultstore_v2_UploadBatchRequest_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.google.devtools.resultstore.v2.UploadBatchRequest.class, com.google.devtools.resultstore.v2.UploadBatchRequest.Builder.class);
    }

    // Construct using com.google.devtools.resultstore.v2.UploadBatchRequest.newBuilder()
    private Builder() {
      maybeForceBuilderInitialization();
    }

    private Builder(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      super(parent);
      maybeForceBuilderInitialization();
    }
    private void maybeForceBuilderInitialization() {
      if (com.google.protobuf.GeneratedMessageV3
              .alwaysUseFieldBuilders) {
        getUploadRequestsFieldBuilder();
      }
    }
    @java.lang.Override
    public Builder clear() {
      super.clear();
      parent_ = "";

      authorizationToken_ = "";

      nextResumeToken_ = "";

      resumeToken_ = "";

      uploaderState_ = com.google.protobuf.ByteString.EMPTY;

      if (uploadRequestsBuilder_ == null) {
        uploadRequests_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000001);
      } else {
        uploadRequestsBuilder_.clear();
      }
      return this;
    }

    @java.lang.Override
    public com.google.protobuf.Descriptors.Descriptor
        getDescriptorForType() {
      return com.google.devtools.resultstore.v2.ResultStoreUploadProto.internal_static_google_devtools_resultstore_v2_UploadBatchRequest_descriptor;
    }

    @java.lang.Override
    public com.google.devtools.resultstore.v2.UploadBatchRequest getDefaultInstanceForType() {
      return com.google.devtools.resultstore.v2.UploadBatchRequest.getDefaultInstance();
    }

    @java.lang.Override
    public com.google.devtools.resultstore.v2.UploadBatchRequest build() {
      com.google.devtools.resultstore.v2.UploadBatchRequest result = buildPartial();
      if (!result.isInitialized()) {
        throw newUninitializedMessageException(result);
      }
      return result;
    }

    @java.lang.Override
    public com.google.devtools.resultstore.v2.UploadBatchRequest buildPartial() {
      com.google.devtools.resultstore.v2.UploadBatchRequest result = new com.google.devtools.resultstore.v2.UploadBatchRequest(this);
      int from_bitField0_ = bitField0_;
      result.parent_ = parent_;
      result.authorizationToken_ = authorizationToken_;
      result.nextResumeToken_ = nextResumeToken_;
      result.resumeToken_ = resumeToken_;
      result.uploaderState_ = uploaderState_;
      if (uploadRequestsBuilder_ == null) {
        if (((bitField0_ & 0x00000001) != 0)) {
          uploadRequests_ = java.util.Collections.unmodifiableList(uploadRequests_);
          bitField0_ = (bitField0_ & ~0x00000001);
        }
        result.uploadRequests_ = uploadRequests_;
      } else {
        result.uploadRequests_ = uploadRequestsBuilder_.build();
      }
      onBuilt();
      return result;
    }

    @java.lang.Override
    public Builder clone() {
      return super.clone();
    }
    @java.lang.Override
    public Builder setField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        java.lang.Object value) {
      return super.setField(field, value);
    }
    @java.lang.Override
    public Builder clearField(
        com.google.protobuf.Descriptors.FieldDescriptor field) {
      return super.clearField(field);
    }
    @java.lang.Override
    public Builder clearOneof(
        com.google.protobuf.Descriptors.OneofDescriptor oneof) {
      return super.clearOneof(oneof);
    }
    @java.lang.Override
    public Builder setRepeatedField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        int index, java.lang.Object value) {
      return super.setRepeatedField(field, index, value);
    }
    @java.lang.Override
    public Builder addRepeatedField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        java.lang.Object value) {
      return super.addRepeatedField(field, value);
    }
    @java.lang.Override
    public Builder mergeFrom(com.google.protobuf.Message other) {
      if (other instanceof com.google.devtools.resultstore.v2.UploadBatchRequest) {
        return mergeFrom((com.google.devtools.resultstore.v2.UploadBatchRequest)other);
      } else {
        super.mergeFrom(other);
        return this;
      }
    }

    public Builder mergeFrom(com.google.devtools.resultstore.v2.UploadBatchRequest other) {
      if (other == com.google.devtools.resultstore.v2.UploadBatchRequest.getDefaultInstance()) return this;
      if (!other.getParent().isEmpty()) {
        parent_ = other.parent_;
        onChanged();
      }
      if (!other.getAuthorizationToken().isEmpty()) {
        authorizationToken_ = other.authorizationToken_;
        onChanged();
      }
      if (!other.getNextResumeToken().isEmpty()) {
        nextResumeToken_ = other.nextResumeToken_;
        onChanged();
      }
      if (!other.getResumeToken().isEmpty()) {
        resumeToken_ = other.resumeToken_;
        onChanged();
      }
      if (other.getUploaderState() != com.google.protobuf.ByteString.EMPTY) {
        setUploaderState(other.getUploaderState());
      }
      if (uploadRequestsBuilder_ == null) {
        if (!other.uploadRequests_.isEmpty()) {
          if (uploadRequests_.isEmpty()) {
            uploadRequests_ = other.uploadRequests_;
            bitField0_ = (bitField0_ & ~0x00000001);
          } else {
            ensureUploadRequestsIsMutable();
            uploadRequests_.addAll(other.uploadRequests_);
          }
          onChanged();
        }
      } else {
        if (!other.uploadRequests_.isEmpty()) {
          if (uploadRequestsBuilder_.isEmpty()) {
            uploadRequestsBuilder_.dispose();
            uploadRequestsBuilder_ = null;
            uploadRequests_ = other.uploadRequests_;
            bitField0_ = (bitField0_ & ~0x00000001);
            uploadRequestsBuilder_ = 
              com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?
                 getUploadRequestsFieldBuilder() : null;
          } else {
            uploadRequestsBuilder_.addAllMessages(other.uploadRequests_);
          }
        }
      }
      this.mergeUnknownFields(other.unknownFields);
      onChanged();
      return this;
    }

    @java.lang.Override
    public final boolean isInitialized() {
      return true;
    }

    @java.lang.Override
    public Builder mergeFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      com.google.devtools.resultstore.v2.UploadBatchRequest parsedMessage = null;
      try {
        parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        parsedMessage = (com.google.devtools.resultstore.v2.UploadBatchRequest) e.getUnfinishedMessage();
        throw e.unwrapIOException();
      } finally {
        if (parsedMessage != null) {
          mergeFrom(parsedMessage);
        }
      }
      return this;
    }
    private int bitField0_;

    private java.lang.Object parent_ = "";
    /**
     * <pre>
     * Required. The name of the invocation being modified.
     * The name format must be: invocations/${INVOCATION_ID}
     * </pre>
     *
     * <code>string parent = 1 [(.google.api.field_behavior) = REQUIRED];</code>
     * @return The parent.
     */
    public java.lang.String getParent() {
      java.lang.Object ref = parent_;
      if (!(ref instanceof java.lang.String)) {
        com.google.protobuf.ByteString bs =
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        parent_ = s;
        return s;
      } else {
        return (java.lang.String) ref;
      }
    }
    /**
     * <pre>
     * Required. The name of the invocation being modified.
     * The name format must be: invocations/${INVOCATION_ID}
     * </pre>
     *
     * <code>string parent = 1 [(.google.api.field_behavior) = REQUIRED];</code>
     * @return The bytes for parent.
     */
    public com.google.protobuf.ByteString
        getParentBytes() {
      java.lang.Object ref = parent_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        parent_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }
    /**
     * <pre>
     * Required. The name of the invocation being modified.
     * The name format must be: invocations/${INVOCATION_ID}
     * </pre>
     *
     * <code>string parent = 1 [(.google.api.field_behavior) = REQUIRED];</code>
     * @param value The parent to set.
     * @return This builder for chaining.
     */
    public Builder setParent(
        java.lang.String value) {
      if (value == null) {
    throw new NullPointerException();
  }
  
      parent_ = value;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * Required. The name of the invocation being modified.
     * The name format must be: invocations/${INVOCATION_ID}
     * </pre>
     *
     * <code>string parent = 1 [(.google.api.field_behavior) = REQUIRED];</code>
     * @return This builder for chaining.
     */
    public Builder clearParent() {
      
      parent_ = getDefaultInstance().getParent();
      onChanged();
      return this;
    }
    /**
     * <pre>
     * Required. The name of the invocation being modified.
     * The name format must be: invocations/${INVOCATION_ID}
     * </pre>
     *
     * <code>string parent = 1 [(.google.api.field_behavior) = REQUIRED];</code>
     * @param value The bytes for parent to set.
     * @return This builder for chaining.
     */
    public Builder setParentBytes(
        com.google.protobuf.ByteString value) {
      if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
      
      parent_ = value;
      onChanged();
      return this;
    }

    private java.lang.Object authorizationToken_ = "";
    /**
     * <pre>
     * Required. A UUID that must match the value provided in CreateInvocationRequest.
     * </pre>
     *
     * <code>string authorization_token = 2 [(.google.api.field_behavior) = REQUIRED];</code>
     * @return The authorizationToken.
     */
    public java.lang.String getAuthorizationToken() {
      java.lang.Object ref = authorizationToken_;
      if (!(ref instanceof java.lang.String)) {
        com.google.protobuf.ByteString bs =
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        authorizationToken_ = s;
        return s;
      } else {
        return (java.lang.String) ref;
      }
    }
    /**
     * <pre>
     * Required. A UUID that must match the value provided in CreateInvocationRequest.
     * </pre>
     *
     * <code>string authorization_token = 2 [(.google.api.field_behavior) = REQUIRED];</code>
     * @return The bytes for authorizationToken.
     */
    public com.google.protobuf.ByteString
        getAuthorizationTokenBytes() {
      java.lang.Object ref = authorizationToken_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        authorizationToken_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }
    /**
     * <pre>
     * Required. A UUID that must match the value provided in CreateInvocationRequest.
     * </pre>
     *
     * <code>string authorization_token = 2 [(.google.api.field_behavior) = REQUIRED];</code>
     * @param value The authorizationToken to set.
     * @return This builder for chaining.
     */
    public Builder setAuthorizationToken(
        java.lang.String value) {
      if (value == null) {
    throw new NullPointerException();
  }
  
      authorizationToken_ = value;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * Required. A UUID that must match the value provided in CreateInvocationRequest.
     * </pre>
     *
     * <code>string authorization_token = 2 [(.google.api.field_behavior) = REQUIRED];</code>
     * @return This builder for chaining.
     */
    public Builder clearAuthorizationToken() {
      
      authorizationToken_ = getDefaultInstance().getAuthorizationToken();
      onChanged();
      return this;
    }
    /**
     * <pre>
     * Required. A UUID that must match the value provided in CreateInvocationRequest.
     * </pre>
     *
     * <code>string authorization_token = 2 [(.google.api.field_behavior) = REQUIRED];</code>
     * @param value The bytes for authorizationToken to set.
     * @return This builder for chaining.
     */
    public Builder setAuthorizationTokenBytes(
        com.google.protobuf.ByteString value) {
      if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
      
      authorizationToken_ = value;
      onChanged();
      return this;
    }

    private java.lang.Object nextResumeToken_ = "";
    /**
     * <pre>
     * Required. The token of this batch, that will be committed in this UploadBatchRequest.
     * If this matches the previously uploaded resume_token, then this request
     * will silently do nothing.
     * See CreateInvocationRequest.initial_resume_token for more information.
     * Must be web safe Base64 encoded bytes.
     * </pre>
     *
     * <code>string next_resume_token = 3 [(.google.api.field_behavior) = REQUIRED];</code>
     * @return The nextResumeToken.
     */
    public java.lang.String getNextResumeToken() {
      java.lang.Object ref = nextResumeToken_;
      if (!(ref instanceof java.lang.String)) {
        com.google.protobuf.ByteString bs =
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        nextResumeToken_ = s;
        return s;
      } else {
        return (java.lang.String) ref;
      }
    }
    /**
     * <pre>
     * Required. The token of this batch, that will be committed in this UploadBatchRequest.
     * If this matches the previously uploaded resume_token, then this request
     * will silently do nothing.
     * See CreateInvocationRequest.initial_resume_token for more information.
     * Must be web safe Base64 encoded bytes.
     * </pre>
     *
     * <code>string next_resume_token = 3 [(.google.api.field_behavior) = REQUIRED];</code>
     * @return The bytes for nextResumeToken.
     */
    public com.google.protobuf.ByteString
        getNextResumeTokenBytes() {
      java.lang.Object ref = nextResumeToken_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        nextResumeToken_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }
    /**
     * <pre>
     * Required. The token of this batch, that will be committed in this UploadBatchRequest.
     * If this matches the previously uploaded resume_token, then this request
     * will silently do nothing.
     * See CreateInvocationRequest.initial_resume_token for more information.
     * Must be web safe Base64 encoded bytes.
     * </pre>
     *
     * <code>string next_resume_token = 3 [(.google.api.field_behavior) = REQUIRED];</code>
     * @param value The nextResumeToken to set.
     * @return This builder for chaining.
     */
    public Builder setNextResumeToken(
        java.lang.String value) {
      if (value == null) {
    throw new NullPointerException();
  }
  
      nextResumeToken_ = value;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * Required. The token of this batch, that will be committed in this UploadBatchRequest.
     * If this matches the previously uploaded resume_token, then this request
     * will silently do nothing.
     * See CreateInvocationRequest.initial_resume_token for more information.
     * Must be web safe Base64 encoded bytes.
     * </pre>
     *
     * <code>string next_resume_token = 3 [(.google.api.field_behavior) = REQUIRED];</code>
     * @return This builder for chaining.
     */
    public Builder clearNextResumeToken() {
      
      nextResumeToken_ = getDefaultInstance().getNextResumeToken();
      onChanged();
      return this;
    }
    /**
     * <pre>
     * Required. The token of this batch, that will be committed in this UploadBatchRequest.
     * If this matches the previously uploaded resume_token, then this request
     * will silently do nothing.
     * See CreateInvocationRequest.initial_resume_token for more information.
     * Must be web safe Base64 encoded bytes.
     * </pre>
     *
     * <code>string next_resume_token = 3 [(.google.api.field_behavior) = REQUIRED];</code>
     * @param value The bytes for nextResumeToken to set.
     * @return This builder for chaining.
     */
    public Builder setNextResumeTokenBytes(
        com.google.protobuf.ByteString value) {
      if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
      
      nextResumeToken_ = value;
      onChanged();
      return this;
    }

    private java.lang.Object resumeToken_ = "";
    /**
     * <pre>
     * Required. The token of the previous batch that was committed in a UploadBatchRequest.
     * This will be checked after next_resume_token match is checked. If this does
     * not match the previously uploaded resume_token, a 409 Conflict (HTTPS) or
     * ABORTED (gRPC ) error code indicating a concurrency
     * failure will be returned, and that the user should call
     * GetInvocationUploadMetadata to fetch the current resume_token to
     * reconstruct the state of the upload to resume it.
     * See CreateInvocationRequest.initial_resume_token for more information.
     * Must be web safe Base64 encoded bytes.
     * </pre>
     *
     * <code>string resume_token = 4 [(.google.api.field_behavior) = REQUIRED];</code>
     * @return The resumeToken.
     */
    public java.lang.String getResumeToken() {
      java.lang.Object ref = resumeToken_;
      if (!(ref instanceof java.lang.String)) {
        com.google.protobuf.ByteString bs =
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        resumeToken_ = s;
        return s;
      } else {
        return (java.lang.String) ref;
      }
    }
    /**
     * <pre>
     * Required. The token of the previous batch that was committed in a UploadBatchRequest.
     * This will be checked after next_resume_token match is checked. If this does
     * not match the previously uploaded resume_token, a 409 Conflict (HTTPS) or
     * ABORTED (gRPC ) error code indicating a concurrency
     * failure will be returned, and that the user should call
     * GetInvocationUploadMetadata to fetch the current resume_token to
     * reconstruct the state of the upload to resume it.
     * See CreateInvocationRequest.initial_resume_token for more information.
     * Must be web safe Base64 encoded bytes.
     * </pre>
     *
     * <code>string resume_token = 4 [(.google.api.field_behavior) = REQUIRED];</code>
     * @return The bytes for resumeToken.
     */
    public com.google.protobuf.ByteString
        getResumeTokenBytes() {
      java.lang.Object ref = resumeToken_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        resumeToken_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }
    /**
     * <pre>
     * Required. The token of the previous batch that was committed in a UploadBatchRequest.
     * This will be checked after next_resume_token match is checked. If this does
     * not match the previously uploaded resume_token, a 409 Conflict (HTTPS) or
     * ABORTED (gRPC ) error code indicating a concurrency
     * failure will be returned, and that the user should call
     * GetInvocationUploadMetadata to fetch the current resume_token to
     * reconstruct the state of the upload to resume it.
     * See CreateInvocationRequest.initial_resume_token for more information.
     * Must be web safe Base64 encoded bytes.
     * </pre>
     *
     * <code>string resume_token = 4 [(.google.api.field_behavior) = REQUIRED];</code>
     * @param value The resumeToken to set.
     * @return This builder for chaining.
     */
    public Builder setResumeToken(
        java.lang.String value) {
      if (value == null) {
    throw new NullPointerException();
  }
  
      resumeToken_ = value;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * Required. The token of the previous batch that was committed in a UploadBatchRequest.
     * This will be checked after next_resume_token match is checked. If this does
     * not match the previously uploaded resume_token, a 409 Conflict (HTTPS) or
     * ABORTED (gRPC ) error code indicating a concurrency
     * failure will be returned, and that the user should call
     * GetInvocationUploadMetadata to fetch the current resume_token to
     * reconstruct the state of the upload to resume it.
     * See CreateInvocationRequest.initial_resume_token for more information.
     * Must be web safe Base64 encoded bytes.
     * </pre>
     *
     * <code>string resume_token = 4 [(.google.api.field_behavior) = REQUIRED];</code>
     * @return This builder for chaining.
     */
    public Builder clearResumeToken() {
      
      resumeToken_ = getDefaultInstance().getResumeToken();
      onChanged();
      return this;
    }
    /**
     * <pre>
     * Required. The token of the previous batch that was committed in a UploadBatchRequest.
     * This will be checked after next_resume_token match is checked. If this does
     * not match the previously uploaded resume_token, a 409 Conflict (HTTPS) or
     * ABORTED (gRPC ) error code indicating a concurrency
     * failure will be returned, and that the user should call
     * GetInvocationUploadMetadata to fetch the current resume_token to
     * reconstruct the state of the upload to resume it.
     * See CreateInvocationRequest.initial_resume_token for more information.
     * Must be web safe Base64 encoded bytes.
     * </pre>
     *
     * <code>string resume_token = 4 [(.google.api.field_behavior) = REQUIRED];</code>
     * @param value The bytes for resumeToken to set.
     * @return This builder for chaining.
     */
    public Builder setResumeTokenBytes(
        com.google.protobuf.ByteString value) {
      if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
      
      resumeToken_ = value;
      onChanged();
      return this;
    }

    private com.google.protobuf.ByteString uploaderState_ = com.google.protobuf.ByteString.EMPTY;
    /**
     * <pre>
     * Client-specific data used to resume batch upload if an error occurs and
     * retry is needed. This serves a role closely related to resume_token, as
     * both fields may be used to provide state required to restore a Batch
     * Upload, but they differ in two important aspects:
     *  - it is not compared to previous values, and as such does not provide
     *    concurrency control;
     *  - it allows for a larger payload, since the contents are never
     *    inspected/compared;
     * The size of the message must be within 1 MiB. Too large requests will be
     * rejected.
     * </pre>
     *
     * <code>bytes uploader_state = 6;</code>
     * @return The uploaderState.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString getUploaderState() {
      return uploaderState_;
    }
    /**
     * <pre>
     * Client-specific data used to resume batch upload if an error occurs and
     * retry is needed. This serves a role closely related to resume_token, as
     * both fields may be used to provide state required to restore a Batch
     * Upload, but they differ in two important aspects:
     *  - it is not compared to previous values, and as such does not provide
     *    concurrency control;
     *  - it allows for a larger payload, since the contents are never
     *    inspected/compared;
     * The size of the message must be within 1 MiB. Too large requests will be
     * rejected.
     * </pre>
     *
     * <code>bytes uploader_state = 6;</code>
     * @param value The uploaderState to set.
     * @return This builder for chaining.
     */
    public Builder setUploaderState(com.google.protobuf.ByteString value) {
      if (value == null) {
    throw new NullPointerException();
  }
  
      uploaderState_ = value;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * Client-specific data used to resume batch upload if an error occurs and
     * retry is needed. This serves a role closely related to resume_token, as
     * both fields may be used to provide state required to restore a Batch
     * Upload, but they differ in two important aspects:
     *  - it is not compared to previous values, and as such does not provide
     *    concurrency control;
     *  - it allows for a larger payload, since the contents are never
     *    inspected/compared;
     * The size of the message must be within 1 MiB. Too large requests will be
     * rejected.
     * </pre>
     *
     * <code>bytes uploader_state = 6;</code>
     * @return This builder for chaining.
     */
    public Builder clearUploaderState() {
      
      uploaderState_ = getDefaultInstance().getUploaderState();
      onChanged();
      return this;
    }

    private java.util.List<com.google.devtools.resultstore.v2.UploadRequest> uploadRequests_ =
      java.util.Collections.emptyList();
    private void ensureUploadRequestsIsMutable() {
      if (!((bitField0_ & 0x00000001) != 0)) {
        uploadRequests_ = new java.util.ArrayList<com.google.devtools.resultstore.v2.UploadRequest>(uploadRequests_);
        bitField0_ |= 0x00000001;
       }
    }

    private com.google.protobuf.RepeatedFieldBuilderV3<
        com.google.devtools.resultstore.v2.UploadRequest, com.google.devtools.resultstore.v2.UploadRequest.Builder, com.google.devtools.resultstore.v2.UploadRequestOrBuilder> uploadRequestsBuilder_;

    /**
     * <pre>
     * The individual upload requests for this batch.
     * This field may be empty, allowing this RPC to be used like TouchInvocation.
     * </pre>
     *
     * <code>repeated .google.devtools.resultstore.v2.UploadRequest upload_requests = 5;</code>
     */
    public java.util.List<com.google.devtools.resultstore.v2.UploadRequest> getUploadRequestsList() {
      if (uploadRequestsBuilder_ == null) {
        return java.util.Collections.unmodifiableList(uploadRequests_);
      } else {
        return uploadRequestsBuilder_.getMessageList();
      }
    }
    /**
     * <pre>
     * The individual upload requests for this batch.
     * This field may be empty, allowing this RPC to be used like TouchInvocation.
     * </pre>
     *
     * <code>repeated .google.devtools.resultstore.v2.UploadRequest upload_requests = 5;</code>
     */
    public int getUploadRequestsCount() {
      if (uploadRequestsBuilder_ == null) {
        return uploadRequests_.size();
      } else {
        return uploadRequestsBuilder_.getCount();
      }
    }
    /**
     * <pre>
     * The individual upload requests for this batch.
     * This field may be empty, allowing this RPC to be used like TouchInvocation.
     * </pre>
     *
     * <code>repeated .google.devtools.resultstore.v2.UploadRequest upload_requests = 5;</code>
     */
    public com.google.devtools.resultstore.v2.UploadRequest getUploadRequests(int index) {
      if (uploadRequestsBuilder_ == null) {
        return uploadRequests_.get(index);
      } else {
        return uploadRequestsBuilder_.getMessage(index);
      }
    }
    /**
     * <pre>
     * The individual upload requests for this batch.
     * This field may be empty, allowing this RPC to be used like TouchInvocation.
     * </pre>
     *
     * <code>repeated .google.devtools.resultstore.v2.UploadRequest upload_requests = 5;</code>
     */
    public Builder setUploadRequests(
        int index, com.google.devtools.resultstore.v2.UploadRequest value) {
      if (uploadRequestsBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureUploadRequestsIsMutable();
        uploadRequests_.set(index, value);
        onChanged();
      } else {
        uploadRequestsBuilder_.setMessage(index, value);
      }
      return this;
    }
    /**
     * <pre>
     * The individual upload requests for this batch.
     * This field may be empty, allowing this RPC to be used like TouchInvocation.
     * </pre>
     *
     * <code>repeated .google.devtools.resultstore.v2.UploadRequest upload_requests = 5;</code>
     */
    public Builder setUploadRequests(
        int index, com.google.devtools.resultstore.v2.UploadRequest.Builder builderForValue) {
      if (uploadRequestsBuilder_ == null) {
        ensureUploadRequestsIsMutable();
        uploadRequests_.set(index, builderForValue.build());
        onChanged();
      } else {
        uploadRequestsBuilder_.setMessage(index, builderForValue.build());
      }
      return this;
    }
    /**
     * <pre>
     * The individual upload requests for this batch.
     * This field may be empty, allowing this RPC to be used like TouchInvocation.
     * </pre>
     *
     * <code>repeated .google.devtools.resultstore.v2.UploadRequest upload_requests = 5;</code>
     */
    public Builder addUploadRequests(com.google.devtools.resultstore.v2.UploadRequest value) {
      if (uploadRequestsBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureUploadRequestsIsMutable();
        uploadRequests_.add(value);
        onChanged();
      } else {
        uploadRequestsBuilder_.addMessage(value);
      }
      return this;
    }
    /**
     * <pre>
     * The individual upload requests for this batch.
     * This field may be empty, allowing this RPC to be used like TouchInvocation.
     * </pre>
     *
     * <code>repeated .google.devtools.resultstore.v2.UploadRequest upload_requests = 5;</code>
     */
    public Builder addUploadRequests(
        int index, com.google.devtools.resultstore.v2.UploadRequest value) {
      if (uploadRequestsBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureUploadRequestsIsMutable();
        uploadRequests_.add(index, value);
        onChanged();
      } else {
        uploadRequestsBuilder_.addMessage(index, value);
      }
      return this;
    }
    /**
     * <pre>
     * The individual upload requests for this batch.
     * This field may be empty, allowing this RPC to be used like TouchInvocation.
     * </pre>
     *
     * <code>repeated .google.devtools.resultstore.v2.UploadRequest upload_requests = 5;</code>
     */
    public Builder addUploadRequests(
        com.google.devtools.resultstore.v2.UploadRequest.Builder builderForValue) {
      if (uploadRequestsBuilder_ == null) {
        ensureUploadRequestsIsMutable();
        uploadRequests_.add(builderForValue.build());
        onChanged();
      } else {
        uploadRequestsBuilder_.addMessage(builderForValue.build());
      }
      return this;
    }
    /**
     * <pre>
     * The individual upload requests for this batch.
     * This field may be empty, allowing this RPC to be used like TouchInvocation.
     * </pre>
     *
     * <code>repeated .google.devtools.resultstore.v2.UploadRequest upload_requests = 5;</code>
     */
    public Builder addUploadRequests(
        int index, com.google.devtools.resultstore.v2.UploadRequest.Builder builderForValue) {
      if (uploadRequestsBuilder_ == null) {
        ensureUploadRequestsIsMutable();
        uploadRequests_.add(index, builderForValue.build());
        onChanged();
      } else {
        uploadRequestsBuilder_.addMessage(index, builderForValue.build());
      }
      return this;
    }
    /**
     * <pre>
     * The individual upload requests for this batch.
     * This field may be empty, allowing this RPC to be used like TouchInvocation.
     * </pre>
     *
     * <code>repeated .google.devtools.resultstore.v2.UploadRequest upload_requests = 5;</code>
     */
    public Builder addAllUploadRequests(
        java.lang.Iterable<? extends com.google.devtools.resultstore.v2.UploadRequest> values) {
      if (uploadRequestsBuilder_ == null) {
        ensureUploadRequestsIsMutable();
        com.google.protobuf.AbstractMessageLite.Builder.addAll(
            values, uploadRequests_);
        onChanged();
      } else {
        uploadRequestsBuilder_.addAllMessages(values);
      }
      return this;
    }
    /**
     * <pre>
     * The individual upload requests for this batch.
     * This field may be empty, allowing this RPC to be used like TouchInvocation.
     * </pre>
     *
     * <code>repeated .google.devtools.resultstore.v2.UploadRequest upload_requests = 5;</code>
     */
    public Builder clearUploadRequests() {
      if (uploadRequestsBuilder_ == null) {
        uploadRequests_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000001);
        onChanged();
      } else {
        uploadRequestsBuilder_.clear();
      }
      return this;
    }
    /**
     * <pre>
     * The individual upload requests for this batch.
     * This field may be empty, allowing this RPC to be used like TouchInvocation.
     * </pre>
     *
     * <code>repeated .google.devtools.resultstore.v2.UploadRequest upload_requests = 5;</code>
     */
    public Builder removeUploadRequests(int index) {
      if (uploadRequestsBuilder_ == null) {
        ensureUploadRequestsIsMutable();
        uploadRequests_.remove(index);
        onChanged();
      } else {
        uploadRequestsBuilder_.remove(index);
      }
      return this;
    }
    /**
     * <pre>
     * The individual upload requests for this batch.
     * This field may be empty, allowing this RPC to be used like TouchInvocation.
     * </pre>
     *
     * <code>repeated .google.devtools.resultstore.v2.UploadRequest upload_requests = 5;</code>
     */
    public com.google.devtools.resultstore.v2.UploadRequest.Builder getUploadRequestsBuilder(
        int index) {
      return getUploadRequestsFieldBuilder().getBuilder(index);
    }
    /**
     * <pre>
     * The individual upload requests for this batch.
     * This field may be empty, allowing this RPC to be used like TouchInvocation.
     * </pre>
     *
     * <code>repeated .google.devtools.resultstore.v2.UploadRequest upload_requests = 5;</code>
     */
    public com.google.devtools.resultstore.v2.UploadRequestOrBuilder getUploadRequestsOrBuilder(
        int index) {
      if (uploadRequestsBuilder_ == null) {
        return uploadRequests_.get(index);  } else {
        return uploadRequestsBuilder_.getMessageOrBuilder(index);
      }
    }
    /**
     * <pre>
     * The individual upload requests for this batch.
     * This field may be empty, allowing this RPC to be used like TouchInvocation.
     * </pre>
     *
     * <code>repeated .google.devtools.resultstore.v2.UploadRequest upload_requests = 5;</code>
     */
    public java.util.List<? extends com.google.devtools.resultstore.v2.UploadRequestOrBuilder> 
         getUploadRequestsOrBuilderList() {
      if (uploadRequestsBuilder_ != null) {
        return uploadRequestsBuilder_.getMessageOrBuilderList();
      } else {
        return java.util.Collections.unmodifiableList(uploadRequests_);
      }
    }
    /**
     * <pre>
     * The individual upload requests for this batch.
     * This field may be empty, allowing this RPC to be used like TouchInvocation.
     * </pre>
     *
     * <code>repeated .google.devtools.resultstore.v2.UploadRequest upload_requests = 5;</code>
     */
    public com.google.devtools.resultstore.v2.UploadRequest.Builder addUploadRequestsBuilder() {
      return getUploadRequestsFieldBuilder().addBuilder(
          com.google.devtools.resultstore.v2.UploadRequest.getDefaultInstance());
    }
    /**
     * <pre>
     * The individual upload requests for this batch.
     * This field may be empty, allowing this RPC to be used like TouchInvocation.
     * </pre>
     *
     * <code>repeated .google.devtools.resultstore.v2.UploadRequest upload_requests = 5;</code>
     */
    public com.google.devtools.resultstore.v2.UploadRequest.Builder addUploadRequestsBuilder(
        int index) {
      return getUploadRequestsFieldBuilder().addBuilder(
          index, com.google.devtools.resultstore.v2.UploadRequest.getDefaultInstance());
    }
    /**
     * <pre>
     * The individual upload requests for this batch.
     * This field may be empty, allowing this RPC to be used like TouchInvocation.
     * </pre>
     *
     * <code>repeated .google.devtools.resultstore.v2.UploadRequest upload_requests = 5;</code>
     */
    public java.util.List<com.google.devtools.resultstore.v2.UploadRequest.Builder> 
         getUploadRequestsBuilderList() {
      return getUploadRequestsFieldBuilder().getBuilderList();
    }
    private com.google.protobuf.RepeatedFieldBuilderV3<
        com.google.devtools.resultstore.v2.UploadRequest, com.google.devtools.resultstore.v2.UploadRequest.Builder, com.google.devtools.resultstore.v2.UploadRequestOrBuilder> 
        getUploadRequestsFieldBuilder() {
      if (uploadRequestsBuilder_ == null) {
        uploadRequestsBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<
            com.google.devtools.resultstore.v2.UploadRequest, com.google.devtools.resultstore.v2.UploadRequest.Builder, com.google.devtools.resultstore.v2.UploadRequestOrBuilder>(
                uploadRequests_,
                ((bitField0_ & 0x00000001) != 0),
                getParentForChildren(),
                isClean());
        uploadRequests_ = null;
      }
      return uploadRequestsBuilder_;
    }
    @java.lang.Override
    public final Builder setUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return super.setUnknownFields(unknownFields);
    }

    @java.lang.Override
    public final Builder mergeUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return super.mergeUnknownFields(unknownFields);
    }


    // @@protoc_insertion_point(builder_scope:google.devtools.resultstore.v2.UploadBatchRequest)
  }

  // @@protoc_insertion_point(class_scope:google.devtools.resultstore.v2.UploadBatchRequest)
  private static final com.google.devtools.resultstore.v2.UploadBatchRequest DEFAULT_INSTANCE;
  static {
    DEFAULT_INSTANCE = new com.google.devtools.resultstore.v2.UploadBatchRequest();
  }

  public static com.google.devtools.resultstore.v2.UploadBatchRequest getDefaultInstance() {
    return DEFAULT_INSTANCE;
  }

  private static final com.google.protobuf.Parser<UploadBatchRequest>
      PARSER = new com.google.protobuf.AbstractParser<UploadBatchRequest>() {
    @java.lang.Override
    public UploadBatchRequest parsePartialFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return new UploadBatchRequest(input, extensionRegistry);
    }
  };

  public static com.google.protobuf.Parser<UploadBatchRequest> parser() {
    return PARSER;
  }

  @java.lang.Override
  public com.google.protobuf.Parser<UploadBatchRequest> getParserForType() {
    return PARSER;
  }

  @java.lang.Override
  public com.google.devtools.resultstore.v2.UploadBatchRequest getDefaultInstanceForType() {
    return DEFAULT_INSTANCE;
  }

}

