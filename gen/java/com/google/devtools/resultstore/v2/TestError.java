// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: google/devtools/resultstore/v2/test_suite.proto

package com.google.devtools.resultstore.v2;

/**
 * <pre>
 * Represents an exception that prevented a test case from completing, as
 * reported in an &lt;error&gt; element within a &lt;testcase&gt;. For Java, multiple
 * TestErrors are used to represent a chained exception.
 * </pre>
 *
 * Protobuf type {@code google.devtools.resultstore.v2.TestError}
 */
public final class TestError extends
    com.google.protobuf.GeneratedMessageV3 implements
    // @@protoc_insertion_point(message_implements:google.devtools.resultstore.v2.TestError)
    TestErrorOrBuilder {
private static final long serialVersionUID = 0L;
  // Use TestError.newBuilder() to construct.
  private TestError(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
    super(builder);
  }
  private TestError() {
    errorMessage_ = "";
    exceptionType_ = "";
    stackTrace_ = "";
  }

  @java.lang.Override
  @SuppressWarnings({"unused"})
  protected java.lang.Object newInstance(
      UnusedPrivateParameter unused) {
    return new TestError();
  }

  @java.lang.Override
  public final com.google.protobuf.UnknownFieldSet
  getUnknownFields() {
    return this.unknownFields;
  }
  public static final com.google.protobuf.Descriptors.Descriptor
      getDescriptor() {
    return com.google.devtools.resultstore.v2.TestSuiteProto.internal_static_google_devtools_resultstore_v2_TestError_descriptor;
  }

  @java.lang.Override
  protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internalGetFieldAccessorTable() {
    return com.google.devtools.resultstore.v2.TestSuiteProto.internal_static_google_devtools_resultstore_v2_TestError_fieldAccessorTable
        .ensureFieldAccessorsInitialized(
            com.google.devtools.resultstore.v2.TestError.class, com.google.devtools.resultstore.v2.TestError.Builder.class);
  }

  public static final int ERROR_MESSAGE_FIELD_NUMBER = 1;
  @SuppressWarnings("serial")
  private volatile java.lang.Object errorMessage_ = "";
  /**
   * <pre>
   * The exception message, as reported in the message attribute. Typically
   * short, but may be multi-line. Eg. "argument cannot be null".
   * </pre>
   *
   * <code>string error_message = 1;</code>
   * @return The errorMessage.
   */
  @java.lang.Override
  public java.lang.String getErrorMessage() {
    java.lang.Object ref = errorMessage_;
    if (ref instanceof java.lang.String) {
      return (java.lang.String) ref;
    } else {
      com.google.protobuf.ByteString bs = 
          (com.google.protobuf.ByteString) ref;
      java.lang.String s = bs.toStringUtf8();
      errorMessage_ = s;
      return s;
    }
  }
  /**
   * <pre>
   * The exception message, as reported in the message attribute. Typically
   * short, but may be multi-line. Eg. "argument cannot be null".
   * </pre>
   *
   * <code>string error_message = 1;</code>
   * @return The bytes for errorMessage.
   */
  @java.lang.Override
  public com.google.protobuf.ByteString
      getErrorMessageBytes() {
    java.lang.Object ref = errorMessage_;
    if (ref instanceof java.lang.String) {
      com.google.protobuf.ByteString b = 
          com.google.protobuf.ByteString.copyFromUtf8(
              (java.lang.String) ref);
      errorMessage_ = b;
      return b;
    } else {
      return (com.google.protobuf.ByteString) ref;
    }
  }

  public static final int EXCEPTION_TYPE_FIELD_NUMBER = 2;
  @SuppressWarnings("serial")
  private volatile java.lang.Object exceptionType_ = "";
  /**
   * <pre>
   * The type of the exception being thrown, reported in the type attribute.
   * For Java, this is a fully qualified Throwable class name.
   * Eg: "java.lang.IllegalArgumentException"
   * </pre>
   *
   * <code>string exception_type = 2;</code>
   * @return The exceptionType.
   */
  @java.lang.Override
  public java.lang.String getExceptionType() {
    java.lang.Object ref = exceptionType_;
    if (ref instanceof java.lang.String) {
      return (java.lang.String) ref;
    } else {
      com.google.protobuf.ByteString bs = 
          (com.google.protobuf.ByteString) ref;
      java.lang.String s = bs.toStringUtf8();
      exceptionType_ = s;
      return s;
    }
  }
  /**
   * <pre>
   * The type of the exception being thrown, reported in the type attribute.
   * For Java, this is a fully qualified Throwable class name.
   * Eg: "java.lang.IllegalArgumentException"
   * </pre>
   *
   * <code>string exception_type = 2;</code>
   * @return The bytes for exceptionType.
   */
  @java.lang.Override
  public com.google.protobuf.ByteString
      getExceptionTypeBytes() {
    java.lang.Object ref = exceptionType_;
    if (ref instanceof java.lang.String) {
      com.google.protobuf.ByteString b = 
          com.google.protobuf.ByteString.copyFromUtf8(
              (java.lang.String) ref);
      exceptionType_ = b;
      return b;
    } else {
      return (com.google.protobuf.ByteString) ref;
    }
  }

  public static final int STACK_TRACE_FIELD_NUMBER = 3;
  @SuppressWarnings("serial")
  private volatile java.lang.Object stackTrace_ = "";
  /**
   * <pre>
   * The stack trace reported as the content of the &lt;error&gt; element, often in
   * a CDATA block. This contains one line for each stack frame, each including
   * a method/function name, a class/file name, and a line number. Most recent
   * call is usually first, but not for Python stack traces. May contain the
   * exception_type and message.
   * </pre>
   *
   * <code>string stack_trace = 3;</code>
   * @return The stackTrace.
   */
  @java.lang.Override
  public java.lang.String getStackTrace() {
    java.lang.Object ref = stackTrace_;
    if (ref instanceof java.lang.String) {
      return (java.lang.String) ref;
    } else {
      com.google.protobuf.ByteString bs = 
          (com.google.protobuf.ByteString) ref;
      java.lang.String s = bs.toStringUtf8();
      stackTrace_ = s;
      return s;
    }
  }
  /**
   * <pre>
   * The stack trace reported as the content of the &lt;error&gt; element, often in
   * a CDATA block. This contains one line for each stack frame, each including
   * a method/function name, a class/file name, and a line number. Most recent
   * call is usually first, but not for Python stack traces. May contain the
   * exception_type and message.
   * </pre>
   *
   * <code>string stack_trace = 3;</code>
   * @return The bytes for stackTrace.
   */
  @java.lang.Override
  public com.google.protobuf.ByteString
      getStackTraceBytes() {
    java.lang.Object ref = stackTrace_;
    if (ref instanceof java.lang.String) {
      com.google.protobuf.ByteString b = 
          com.google.protobuf.ByteString.copyFromUtf8(
              (java.lang.String) ref);
      stackTrace_ = b;
      return b;
    } else {
      return (com.google.protobuf.ByteString) ref;
    }
  }

  private byte memoizedIsInitialized = -1;
  @java.lang.Override
  public final boolean isInitialized() {
    byte isInitialized = memoizedIsInitialized;
    if (isInitialized == 1) return true;
    if (isInitialized == 0) return false;

    memoizedIsInitialized = 1;
    return true;
  }

  @java.lang.Override
  public void writeTo(com.google.protobuf.CodedOutputStream output)
                      throws java.io.IOException {
    if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(errorMessage_)) {
      com.google.protobuf.GeneratedMessageV3.writeString(output, 1, errorMessage_);
    }
    if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(exceptionType_)) {
      com.google.protobuf.GeneratedMessageV3.writeString(output, 2, exceptionType_);
    }
    if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(stackTrace_)) {
      com.google.protobuf.GeneratedMessageV3.writeString(output, 3, stackTrace_);
    }
    getUnknownFields().writeTo(output);
  }

  @java.lang.Override
  public int getSerializedSize() {
    int size = memoizedSize;
    if (size != -1) return size;

    size = 0;
    if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(errorMessage_)) {
      size += com.google.protobuf.GeneratedMessageV3.computeStringSize(1, errorMessage_);
    }
    if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(exceptionType_)) {
      size += com.google.protobuf.GeneratedMessageV3.computeStringSize(2, exceptionType_);
    }
    if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(stackTrace_)) {
      size += com.google.protobuf.GeneratedMessageV3.computeStringSize(3, stackTrace_);
    }
    size += getUnknownFields().getSerializedSize();
    memoizedSize = size;
    return size;
  }

  @java.lang.Override
  public boolean equals(final java.lang.Object obj) {
    if (obj == this) {
     return true;
    }
    if (!(obj instanceof com.google.devtools.resultstore.v2.TestError)) {
      return super.equals(obj);
    }
    com.google.devtools.resultstore.v2.TestError other = (com.google.devtools.resultstore.v2.TestError) obj;

    if (!getErrorMessage()
        .equals(other.getErrorMessage())) return false;
    if (!getExceptionType()
        .equals(other.getExceptionType())) return false;
    if (!getStackTrace()
        .equals(other.getStackTrace())) return false;
    if (!getUnknownFields().equals(other.getUnknownFields())) return false;
    return true;
  }

  @java.lang.Override
  public int hashCode() {
    if (memoizedHashCode != 0) {
      return memoizedHashCode;
    }
    int hash = 41;
    hash = (19 * hash) + getDescriptor().hashCode();
    hash = (37 * hash) + ERROR_MESSAGE_FIELD_NUMBER;
    hash = (53 * hash) + getErrorMessage().hashCode();
    hash = (37 * hash) + EXCEPTION_TYPE_FIELD_NUMBER;
    hash = (53 * hash) + getExceptionType().hashCode();
    hash = (37 * hash) + STACK_TRACE_FIELD_NUMBER;
    hash = (53 * hash) + getStackTrace().hashCode();
    hash = (29 * hash) + getUnknownFields().hashCode();
    memoizedHashCode = hash;
    return hash;
  }

  public static com.google.devtools.resultstore.v2.TestError parseFrom(
      java.nio.ByteBuffer data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static com.google.devtools.resultstore.v2.TestError parseFrom(
      java.nio.ByteBuffer data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static com.google.devtools.resultstore.v2.TestError parseFrom(
      com.google.protobuf.ByteString data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static com.google.devtools.resultstore.v2.TestError parseFrom(
      com.google.protobuf.ByteString data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static com.google.devtools.resultstore.v2.TestError parseFrom(byte[] data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static com.google.devtools.resultstore.v2.TestError parseFrom(
      byte[] data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static com.google.devtools.resultstore.v2.TestError parseFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input);
  }
  public static com.google.devtools.resultstore.v2.TestError parseFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input, extensionRegistry);
  }
  public static com.google.devtools.resultstore.v2.TestError parseDelimitedFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseDelimitedWithIOException(PARSER, input);
  }
  public static com.google.devtools.resultstore.v2.TestError parseDelimitedFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
  }
  public static com.google.devtools.resultstore.v2.TestError parseFrom(
      com.google.protobuf.CodedInputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input);
  }
  public static com.google.devtools.resultstore.v2.TestError parseFrom(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input, extensionRegistry);
  }

  @java.lang.Override
  public Builder newBuilderForType() { return newBuilder(); }
  public static Builder newBuilder() {
    return DEFAULT_INSTANCE.toBuilder();
  }
  public static Builder newBuilder(com.google.devtools.resultstore.v2.TestError prototype) {
    return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
  }
  @java.lang.Override
  public Builder toBuilder() {
    return this == DEFAULT_INSTANCE
        ? new Builder() : new Builder().mergeFrom(this);
  }

  @java.lang.Override
  protected Builder newBuilderForType(
      com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
    Builder builder = new Builder(parent);
    return builder;
  }
  /**
   * <pre>
   * Represents an exception that prevented a test case from completing, as
   * reported in an &lt;error&gt; element within a &lt;testcase&gt;. For Java, multiple
   * TestErrors are used to represent a chained exception.
   * </pre>
   *
   * Protobuf type {@code google.devtools.resultstore.v2.TestError}
   */
  public static final class Builder extends
      com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
      // @@protoc_insertion_point(builder_implements:google.devtools.resultstore.v2.TestError)
      com.google.devtools.resultstore.v2.TestErrorOrBuilder {
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.google.devtools.resultstore.v2.TestSuiteProto.internal_static_google_devtools_resultstore_v2_TestError_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.google.devtools.resultstore.v2.TestSuiteProto.internal_static_google_devtools_resultstore_v2_TestError_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.google.devtools.resultstore.v2.TestError.class, com.google.devtools.resultstore.v2.TestError.Builder.class);
    }

    // Construct using com.google.devtools.resultstore.v2.TestError.newBuilder()
    private Builder() {

    }

    private Builder(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      super(parent);

    }
    @java.lang.Override
    public Builder clear() {
      super.clear();
      bitField0_ = 0;
      errorMessage_ = "";
      exceptionType_ = "";
      stackTrace_ = "";
      return this;
    }

    @java.lang.Override
    public com.google.protobuf.Descriptors.Descriptor
        getDescriptorForType() {
      return com.google.devtools.resultstore.v2.TestSuiteProto.internal_static_google_devtools_resultstore_v2_TestError_descriptor;
    }

    @java.lang.Override
    public com.google.devtools.resultstore.v2.TestError getDefaultInstanceForType() {
      return com.google.devtools.resultstore.v2.TestError.getDefaultInstance();
    }

    @java.lang.Override
    public com.google.devtools.resultstore.v2.TestError build() {
      com.google.devtools.resultstore.v2.TestError result = buildPartial();
      if (!result.isInitialized()) {
        throw newUninitializedMessageException(result);
      }
      return result;
    }

    @java.lang.Override
    public com.google.devtools.resultstore.v2.TestError buildPartial() {
      com.google.devtools.resultstore.v2.TestError result = new com.google.devtools.resultstore.v2.TestError(this);
      if (bitField0_ != 0) { buildPartial0(result); }
      onBuilt();
      return result;
    }

    private void buildPartial0(com.google.devtools.resultstore.v2.TestError result) {
      int from_bitField0_ = bitField0_;
      if (((from_bitField0_ & 0x00000001) != 0)) {
        result.errorMessage_ = errorMessage_;
      }
      if (((from_bitField0_ & 0x00000002) != 0)) {
        result.exceptionType_ = exceptionType_;
      }
      if (((from_bitField0_ & 0x00000004) != 0)) {
        result.stackTrace_ = stackTrace_;
      }
    }

    @java.lang.Override
    public Builder clone() {
      return super.clone();
    }
    @java.lang.Override
    public Builder setField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        java.lang.Object value) {
      return super.setField(field, value);
    }
    @java.lang.Override
    public Builder clearField(
        com.google.protobuf.Descriptors.FieldDescriptor field) {
      return super.clearField(field);
    }
    @java.lang.Override
    public Builder clearOneof(
        com.google.protobuf.Descriptors.OneofDescriptor oneof) {
      return super.clearOneof(oneof);
    }
    @java.lang.Override
    public Builder setRepeatedField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        int index, java.lang.Object value) {
      return super.setRepeatedField(field, index, value);
    }
    @java.lang.Override
    public Builder addRepeatedField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        java.lang.Object value) {
      return super.addRepeatedField(field, value);
    }
    @java.lang.Override
    public Builder mergeFrom(com.google.protobuf.Message other) {
      if (other instanceof com.google.devtools.resultstore.v2.TestError) {
        return mergeFrom((com.google.devtools.resultstore.v2.TestError)other);
      } else {
        super.mergeFrom(other);
        return this;
      }
    }

    public Builder mergeFrom(com.google.devtools.resultstore.v2.TestError other) {
      if (other == com.google.devtools.resultstore.v2.TestError.getDefaultInstance()) return this;
      if (!other.getErrorMessage().isEmpty()) {
        errorMessage_ = other.errorMessage_;
        bitField0_ |= 0x00000001;
        onChanged();
      }
      if (!other.getExceptionType().isEmpty()) {
        exceptionType_ = other.exceptionType_;
        bitField0_ |= 0x00000002;
        onChanged();
      }
      if (!other.getStackTrace().isEmpty()) {
        stackTrace_ = other.stackTrace_;
        bitField0_ |= 0x00000004;
        onChanged();
      }
      this.mergeUnknownFields(other.getUnknownFields());
      onChanged();
      return this;
    }

    @java.lang.Override
    public final boolean isInitialized() {
      return true;
    }

    @java.lang.Override
    public Builder mergeFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 10: {
              errorMessage_ = input.readStringRequireUtf8();
              bitField0_ |= 0x00000001;
              break;
            } // case 10
            case 18: {
              exceptionType_ = input.readStringRequireUtf8();
              bitField0_ |= 0x00000002;
              break;
            } // case 18
            case 26: {
              stackTrace_ = input.readStringRequireUtf8();
              bitField0_ |= 0x00000004;
              break;
            } // case 26
            default: {
              if (!super.parseUnknownField(input, extensionRegistry, tag)) {
                done = true; // was an endgroup tag
              }
              break;
            } // default:
          } // switch (tag)
        } // while (!done)
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.unwrapIOException();
      } finally {
        onChanged();
      } // finally
      return this;
    }
    private int bitField0_;

    private java.lang.Object errorMessage_ = "";
    /**
     * <pre>
     * The exception message, as reported in the message attribute. Typically
     * short, but may be multi-line. Eg. "argument cannot be null".
     * </pre>
     *
     * <code>string error_message = 1;</code>
     * @return The errorMessage.
     */
    public java.lang.String getErrorMessage() {
      java.lang.Object ref = errorMessage_;
      if (!(ref instanceof java.lang.String)) {
        com.google.protobuf.ByteString bs =
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        errorMessage_ = s;
        return s;
      } else {
        return (java.lang.String) ref;
      }
    }
    /**
     * <pre>
     * The exception message, as reported in the message attribute. Typically
     * short, but may be multi-line. Eg. "argument cannot be null".
     * </pre>
     *
     * <code>string error_message = 1;</code>
     * @return The bytes for errorMessage.
     */
    public com.google.protobuf.ByteString
        getErrorMessageBytes() {
      java.lang.Object ref = errorMessage_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        errorMessage_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }
    /**
     * <pre>
     * The exception message, as reported in the message attribute. Typically
     * short, but may be multi-line. Eg. "argument cannot be null".
     * </pre>
     *
     * <code>string error_message = 1;</code>
     * @param value The errorMessage to set.
     * @return This builder for chaining.
     */
    public Builder setErrorMessage(
        java.lang.String value) {
      if (value == null) { throw new NullPointerException(); }
      errorMessage_ = value;
      bitField0_ |= 0x00000001;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * The exception message, as reported in the message attribute. Typically
     * short, but may be multi-line. Eg. "argument cannot be null".
     * </pre>
     *
     * <code>string error_message = 1;</code>
     * @return This builder for chaining.
     */
    public Builder clearErrorMessage() {
      errorMessage_ = getDefaultInstance().getErrorMessage();
      bitField0_ = (bitField0_ & ~0x00000001);
      onChanged();
      return this;
    }
    /**
     * <pre>
     * The exception message, as reported in the message attribute. Typically
     * short, but may be multi-line. Eg. "argument cannot be null".
     * </pre>
     *
     * <code>string error_message = 1;</code>
     * @param value The bytes for errorMessage to set.
     * @return This builder for chaining.
     */
    public Builder setErrorMessageBytes(
        com.google.protobuf.ByteString value) {
      if (value == null) { throw new NullPointerException(); }
      checkByteStringIsUtf8(value);
      errorMessage_ = value;
      bitField0_ |= 0x00000001;
      onChanged();
      return this;
    }

    private java.lang.Object exceptionType_ = "";
    /**
     * <pre>
     * The type of the exception being thrown, reported in the type attribute.
     * For Java, this is a fully qualified Throwable class name.
     * Eg: "java.lang.IllegalArgumentException"
     * </pre>
     *
     * <code>string exception_type = 2;</code>
     * @return The exceptionType.
     */
    public java.lang.String getExceptionType() {
      java.lang.Object ref = exceptionType_;
      if (!(ref instanceof java.lang.String)) {
        com.google.protobuf.ByteString bs =
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        exceptionType_ = s;
        return s;
      } else {
        return (java.lang.String) ref;
      }
    }
    /**
     * <pre>
     * The type of the exception being thrown, reported in the type attribute.
     * For Java, this is a fully qualified Throwable class name.
     * Eg: "java.lang.IllegalArgumentException"
     * </pre>
     *
     * <code>string exception_type = 2;</code>
     * @return The bytes for exceptionType.
     */
    public com.google.protobuf.ByteString
        getExceptionTypeBytes() {
      java.lang.Object ref = exceptionType_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        exceptionType_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }
    /**
     * <pre>
     * The type of the exception being thrown, reported in the type attribute.
     * For Java, this is a fully qualified Throwable class name.
     * Eg: "java.lang.IllegalArgumentException"
     * </pre>
     *
     * <code>string exception_type = 2;</code>
     * @param value The exceptionType to set.
     * @return This builder for chaining.
     */
    public Builder setExceptionType(
        java.lang.String value) {
      if (value == null) { throw new NullPointerException(); }
      exceptionType_ = value;
      bitField0_ |= 0x00000002;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * The type of the exception being thrown, reported in the type attribute.
     * For Java, this is a fully qualified Throwable class name.
     * Eg: "java.lang.IllegalArgumentException"
     * </pre>
     *
     * <code>string exception_type = 2;</code>
     * @return This builder for chaining.
     */
    public Builder clearExceptionType() {
      exceptionType_ = getDefaultInstance().getExceptionType();
      bitField0_ = (bitField0_ & ~0x00000002);
      onChanged();
      return this;
    }
    /**
     * <pre>
     * The type of the exception being thrown, reported in the type attribute.
     * For Java, this is a fully qualified Throwable class name.
     * Eg: "java.lang.IllegalArgumentException"
     * </pre>
     *
     * <code>string exception_type = 2;</code>
     * @param value The bytes for exceptionType to set.
     * @return This builder for chaining.
     */
    public Builder setExceptionTypeBytes(
        com.google.protobuf.ByteString value) {
      if (value == null) { throw new NullPointerException(); }
      checkByteStringIsUtf8(value);
      exceptionType_ = value;
      bitField0_ |= 0x00000002;
      onChanged();
      return this;
    }

    private java.lang.Object stackTrace_ = "";
    /**
     * <pre>
     * The stack trace reported as the content of the &lt;error&gt; element, often in
     * a CDATA block. This contains one line for each stack frame, each including
     * a method/function name, a class/file name, and a line number. Most recent
     * call is usually first, but not for Python stack traces. May contain the
     * exception_type and message.
     * </pre>
     *
     * <code>string stack_trace = 3;</code>
     * @return The stackTrace.
     */
    public java.lang.String getStackTrace() {
      java.lang.Object ref = stackTrace_;
      if (!(ref instanceof java.lang.String)) {
        com.google.protobuf.ByteString bs =
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        stackTrace_ = s;
        return s;
      } else {
        return (java.lang.String) ref;
      }
    }
    /**
     * <pre>
     * The stack trace reported as the content of the &lt;error&gt; element, often in
     * a CDATA block. This contains one line for each stack frame, each including
     * a method/function name, a class/file name, and a line number. Most recent
     * call is usually first, but not for Python stack traces. May contain the
     * exception_type and message.
     * </pre>
     *
     * <code>string stack_trace = 3;</code>
     * @return The bytes for stackTrace.
     */
    public com.google.protobuf.ByteString
        getStackTraceBytes() {
      java.lang.Object ref = stackTrace_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        stackTrace_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }
    /**
     * <pre>
     * The stack trace reported as the content of the &lt;error&gt; element, often in
     * a CDATA block. This contains one line for each stack frame, each including
     * a method/function name, a class/file name, and a line number. Most recent
     * call is usually first, but not for Python stack traces. May contain the
     * exception_type and message.
     * </pre>
     *
     * <code>string stack_trace = 3;</code>
     * @param value The stackTrace to set.
     * @return This builder for chaining.
     */
    public Builder setStackTrace(
        java.lang.String value) {
      if (value == null) { throw new NullPointerException(); }
      stackTrace_ = value;
      bitField0_ |= 0x00000004;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * The stack trace reported as the content of the &lt;error&gt; element, often in
     * a CDATA block. This contains one line for each stack frame, each including
     * a method/function name, a class/file name, and a line number. Most recent
     * call is usually first, but not for Python stack traces. May contain the
     * exception_type and message.
     * </pre>
     *
     * <code>string stack_trace = 3;</code>
     * @return This builder for chaining.
     */
    public Builder clearStackTrace() {
      stackTrace_ = getDefaultInstance().getStackTrace();
      bitField0_ = (bitField0_ & ~0x00000004);
      onChanged();
      return this;
    }
    /**
     * <pre>
     * The stack trace reported as the content of the &lt;error&gt; element, often in
     * a CDATA block. This contains one line for each stack frame, each including
     * a method/function name, a class/file name, and a line number. Most recent
     * call is usually first, but not for Python stack traces. May contain the
     * exception_type and message.
     * </pre>
     *
     * <code>string stack_trace = 3;</code>
     * @param value The bytes for stackTrace to set.
     * @return This builder for chaining.
     */
    public Builder setStackTraceBytes(
        com.google.protobuf.ByteString value) {
      if (value == null) { throw new NullPointerException(); }
      checkByteStringIsUtf8(value);
      stackTrace_ = value;
      bitField0_ |= 0x00000004;
      onChanged();
      return this;
    }
    @java.lang.Override
    public final Builder setUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return super.setUnknownFields(unknownFields);
    }

    @java.lang.Override
    public final Builder mergeUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return super.mergeUnknownFields(unknownFields);
    }


    // @@protoc_insertion_point(builder_scope:google.devtools.resultstore.v2.TestError)
  }

  // @@protoc_insertion_point(class_scope:google.devtools.resultstore.v2.TestError)
  private static final com.google.devtools.resultstore.v2.TestError DEFAULT_INSTANCE;
  static {
    DEFAULT_INSTANCE = new com.google.devtools.resultstore.v2.TestError();
  }

  public static com.google.devtools.resultstore.v2.TestError getDefaultInstance() {
    return DEFAULT_INSTANCE;
  }

  private static final com.google.protobuf.Parser<TestError>
      PARSER = new com.google.protobuf.AbstractParser<TestError>() {
    @java.lang.Override
    public TestError parsePartialFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      Builder builder = newBuilder();
      try {
        builder.mergeFrom(input, extensionRegistry);
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(builder.buildPartial());
      } catch (com.google.protobuf.UninitializedMessageException e) {
        throw e.asInvalidProtocolBufferException().setUnfinishedMessage(builder.buildPartial());
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(e)
            .setUnfinishedMessage(builder.buildPartial());
      }
      return builder.buildPartial();
    }
  };

  public static com.google.protobuf.Parser<TestError> parser() {
    return PARSER;
  }

  @java.lang.Override
  public com.google.protobuf.Parser<TestError> getParserForType() {
    return PARSER;
  }

  @java.lang.Override
  public com.google.devtools.resultstore.v2.TestError getDefaultInstanceForType() {
    return DEFAULT_INSTANCE;
  }

}

