// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: google/devtools/resultstore/v2/file_processing_error.proto

package com.google.devtools.resultstore.v2;

/**
 * <pre>
 * Errors in file post-processing are categorized using this enum.
 * </pre>
 *
 * Protobuf enum {@code google.devtools.resultstore.v2.FileProcessingErrorType}
 */
public enum FileProcessingErrorType
    implements com.google.protobuf.ProtocolMessageEnum {
  /**
   * <pre>
   * Type unspecified or not listed here.
   * </pre>
   *
   * <code>FILE_PROCESSING_ERROR_TYPE_UNSPECIFIED = 0;</code>
   */
  FILE_PROCESSING_ERROR_TYPE_UNSPECIFIED(0),
  /**
   * <pre>
   * A read error occurred trying to read the file.
   * </pre>
   *
   * <code>GENERIC_READ_ERROR = 1;</code>
   */
  GENERIC_READ_ERROR(1),
  /**
   * <pre>
   * There was an error trying to parse the file.
   * </pre>
   *
   * <code>GENERIC_PARSE_ERROR = 2;</code>
   */
  GENERIC_PARSE_ERROR(2),
  /**
   * <pre>
   * File is exceeds size limit.
   * </pre>
   *
   * <code>FILE_TOO_LARGE = 3;</code>
   */
  FILE_TOO_LARGE(3),
  /**
   * <pre>
   * The result of parsing the file exceeded size limit.
   * </pre>
   *
   * <code>OUTPUT_TOO_LARGE = 4;</code>
   */
  OUTPUT_TOO_LARGE(4),
  /**
   * <pre>
   * Read access to the file was denied by file system.
   * </pre>
   *
   * <code>ACCESS_DENIED = 5;</code>
   */
  ACCESS_DENIED(5),
  /**
   * <pre>
   * Deadline exceeded trying to read the file.
   * </pre>
   *
   * <code>DEADLINE_EXCEEDED = 6;</code>
   */
  DEADLINE_EXCEEDED(6),
  /**
   * <pre>
   * File not found.
   * </pre>
   *
   * <code>NOT_FOUND = 7;</code>
   */
  NOT_FOUND(7),
  /**
   * <pre>
   * File is empty but was expected to have content.
   * </pre>
   *
   * <code>FILE_EMPTY = 8;</code>
   */
  FILE_EMPTY(8),
  UNRECOGNIZED(-1),
  ;

  /**
   * <pre>
   * Type unspecified or not listed here.
   * </pre>
   *
   * <code>FILE_PROCESSING_ERROR_TYPE_UNSPECIFIED = 0;</code>
   */
  public static final int FILE_PROCESSING_ERROR_TYPE_UNSPECIFIED_VALUE = 0;
  /**
   * <pre>
   * A read error occurred trying to read the file.
   * </pre>
   *
   * <code>GENERIC_READ_ERROR = 1;</code>
   */
  public static final int GENERIC_READ_ERROR_VALUE = 1;
  /**
   * <pre>
   * There was an error trying to parse the file.
   * </pre>
   *
   * <code>GENERIC_PARSE_ERROR = 2;</code>
   */
  public static final int GENERIC_PARSE_ERROR_VALUE = 2;
  /**
   * <pre>
   * File is exceeds size limit.
   * </pre>
   *
   * <code>FILE_TOO_LARGE = 3;</code>
   */
  public static final int FILE_TOO_LARGE_VALUE = 3;
  /**
   * <pre>
   * The result of parsing the file exceeded size limit.
   * </pre>
   *
   * <code>OUTPUT_TOO_LARGE = 4;</code>
   */
  public static final int OUTPUT_TOO_LARGE_VALUE = 4;
  /**
   * <pre>
   * Read access to the file was denied by file system.
   * </pre>
   *
   * <code>ACCESS_DENIED = 5;</code>
   */
  public static final int ACCESS_DENIED_VALUE = 5;
  /**
   * <pre>
   * Deadline exceeded trying to read the file.
   * </pre>
   *
   * <code>DEADLINE_EXCEEDED = 6;</code>
   */
  public static final int DEADLINE_EXCEEDED_VALUE = 6;
  /**
   * <pre>
   * File not found.
   * </pre>
   *
   * <code>NOT_FOUND = 7;</code>
   */
  public static final int NOT_FOUND_VALUE = 7;
  /**
   * <pre>
   * File is empty but was expected to have content.
   * </pre>
   *
   * <code>FILE_EMPTY = 8;</code>
   */
  public static final int FILE_EMPTY_VALUE = 8;


  public final int getNumber() {
    if (this == UNRECOGNIZED) {
      throw new java.lang.IllegalArgumentException(
          "Can't get the number of an unknown enum value.");
    }
    return value;
  }

  /**
   * @param value The numeric wire value of the corresponding enum entry.
   * @return The enum associated with the given numeric wire value.
   * @deprecated Use {@link #forNumber(int)} instead.
   */
  @java.lang.Deprecated
  public static FileProcessingErrorType valueOf(int value) {
    return forNumber(value);
  }

  /**
   * @param value The numeric wire value of the corresponding enum entry.
   * @return The enum associated with the given numeric wire value.
   */
  public static FileProcessingErrorType forNumber(int value) {
    switch (value) {
      case 0: return FILE_PROCESSING_ERROR_TYPE_UNSPECIFIED;
      case 1: return GENERIC_READ_ERROR;
      case 2: return GENERIC_PARSE_ERROR;
      case 3: return FILE_TOO_LARGE;
      case 4: return OUTPUT_TOO_LARGE;
      case 5: return ACCESS_DENIED;
      case 6: return DEADLINE_EXCEEDED;
      case 7: return NOT_FOUND;
      case 8: return FILE_EMPTY;
      default: return null;
    }
  }

  public static com.google.protobuf.Internal.EnumLiteMap<FileProcessingErrorType>
      internalGetValueMap() {
    return internalValueMap;
  }
  private static final com.google.protobuf.Internal.EnumLiteMap<
      FileProcessingErrorType> internalValueMap =
        new com.google.protobuf.Internal.EnumLiteMap<FileProcessingErrorType>() {
          public FileProcessingErrorType findValueByNumber(int number) {
            return FileProcessingErrorType.forNumber(number);
          }
        };

  public final com.google.protobuf.Descriptors.EnumValueDescriptor
      getValueDescriptor() {
    if (this == UNRECOGNIZED) {
      throw new java.lang.IllegalStateException(
          "Can't get the descriptor of an unrecognized enum value.");
    }
    return getDescriptor().getValues().get(ordinal());
  }
  public final com.google.protobuf.Descriptors.EnumDescriptor
      getDescriptorForType() {
    return getDescriptor();
  }
  public static final com.google.protobuf.Descriptors.EnumDescriptor
      getDescriptor() {
    return com.google.devtools.resultstore.v2.FileProcessingErrorProto.getDescriptor().getEnumTypes().get(0);
  }

  private static final FileProcessingErrorType[] VALUES = values();

  public static FileProcessingErrorType valueOf(
      com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
    if (desc.getType() != getDescriptor()) {
      throw new java.lang.IllegalArgumentException(
        "EnumValueDescriptor is not for this type.");
    }
    if (desc.getIndex() == -1) {
      return UNRECOGNIZED;
    }
    return VALUES[desc.getIndex()];
  }

  private final int value;

  private FileProcessingErrorType(int value) {
    this.value = value;
  }

  // @@protoc_insertion_point(enum_scope:google.devtools.resultstore.v2.FileProcessingErrorType)
}

