// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: google/devtools/resultstore/v2/target.proto

package com.google.devtools.resultstore.v2;

/**
 * <pre>
 * These correspond to the suffix of the rule name. Eg cc_test has type TEST.
 * </pre>
 *
 * Protobuf enum {@code google.devtools.resultstore.v2.TargetType}
 */
public enum TargetType
    implements com.google.protobuf.ProtocolMessageEnum {
  /**
   * <pre>
   * Unspecified by the build system.
   * </pre>
   *
   * <code>TARGET_TYPE_UNSPECIFIED = 0;</code>
   */
  TARGET_TYPE_UNSPECIFIED(0),
  /**
   * <pre>
   * An application e.g. ios_application.
   * </pre>
   *
   * <code>APPLICATION = 1;</code>
   */
  APPLICATION(1),
  /**
   * <pre>
   * A binary target e.g. cc_binary.
   * </pre>
   *
   * <code>BINARY = 2;</code>
   */
  BINARY(2),
  /**
   * <pre>
   * A library target e.g. java_library
   * </pre>
   *
   * <code>LIBRARY = 3;</code>
   */
  LIBRARY(3),
  /**
   * <pre>
   * A package
   * </pre>
   *
   * <code>PACKAGE = 4;</code>
   */
  PACKAGE(4),
  /**
   * <pre>
   * Any test target, in bazel that means a rule with a '_test' suffix.
   * </pre>
   *
   * <code>TEST = 5;</code>
   */
  TEST(5),
  UNRECOGNIZED(-1),
  ;

  /**
   * <pre>
   * Unspecified by the build system.
   * </pre>
   *
   * <code>TARGET_TYPE_UNSPECIFIED = 0;</code>
   */
  public static final int TARGET_TYPE_UNSPECIFIED_VALUE = 0;
  /**
   * <pre>
   * An application e.g. ios_application.
   * </pre>
   *
   * <code>APPLICATION = 1;</code>
   */
  public static final int APPLICATION_VALUE = 1;
  /**
   * <pre>
   * A binary target e.g. cc_binary.
   * </pre>
   *
   * <code>BINARY = 2;</code>
   */
  public static final int BINARY_VALUE = 2;
  /**
   * <pre>
   * A library target e.g. java_library
   * </pre>
   *
   * <code>LIBRARY = 3;</code>
   */
  public static final int LIBRARY_VALUE = 3;
  /**
   * <pre>
   * A package
   * </pre>
   *
   * <code>PACKAGE = 4;</code>
   */
  public static final int PACKAGE_VALUE = 4;
  /**
   * <pre>
   * Any test target, in bazel that means a rule with a '_test' suffix.
   * </pre>
   *
   * <code>TEST = 5;</code>
   */
  public static final int TEST_VALUE = 5;


  public final int getNumber() {
    if (this == UNRECOGNIZED) {
      throw new java.lang.IllegalArgumentException(
          "Can't get the number of an unknown enum value.");
    }
    return value;
  }

  /**
   * @param value The numeric wire value of the corresponding enum entry.
   * @return The enum associated with the given numeric wire value.
   * @deprecated Use {@link #forNumber(int)} instead.
   */
  @java.lang.Deprecated
  public static TargetType valueOf(int value) {
    return forNumber(value);
  }

  /**
   * @param value The numeric wire value of the corresponding enum entry.
   * @return The enum associated with the given numeric wire value.
   */
  public static TargetType forNumber(int value) {
    switch (value) {
      case 0: return TARGET_TYPE_UNSPECIFIED;
      case 1: return APPLICATION;
      case 2: return BINARY;
      case 3: return LIBRARY;
      case 4: return PACKAGE;
      case 5: return TEST;
      default: return null;
    }
  }

  public static com.google.protobuf.Internal.EnumLiteMap<TargetType>
      internalGetValueMap() {
    return internalValueMap;
  }
  private static final com.google.protobuf.Internal.EnumLiteMap<
      TargetType> internalValueMap =
        new com.google.protobuf.Internal.EnumLiteMap<TargetType>() {
          public TargetType findValueByNumber(int number) {
            return TargetType.forNumber(number);
          }
        };

  public final com.google.protobuf.Descriptors.EnumValueDescriptor
      getValueDescriptor() {
    if (this == UNRECOGNIZED) {
      throw new java.lang.IllegalStateException(
          "Can't get the descriptor of an unrecognized enum value.");
    }
    return getDescriptor().getValues().get(ordinal());
  }
  public final com.google.protobuf.Descriptors.EnumDescriptor
      getDescriptorForType() {
    return getDescriptor();
  }
  public static final com.google.protobuf.Descriptors.EnumDescriptor
      getDescriptor() {
    return com.google.devtools.resultstore.v2.TargetProto.getDescriptor().getEnumTypes().get(0);
  }

  private static final TargetType[] VALUES = values();

  public static TargetType valueOf(
      com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
    if (desc.getType() != getDescriptor()) {
      throw new java.lang.IllegalArgumentException(
        "EnumValueDescriptor is not for this type.");
    }
    if (desc.getIndex() == -1) {
      return UNRECOGNIZED;
    }
    return VALUES[desc.getIndex()];
  }

  private final int value;

  private TargetType(int value) {
    this.value = value;
  }

  // @@protoc_insertion_point(enum_scope:google.devtools.resultstore.v2.TargetType)
}

