// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: google/devtools/resultstore/v2/invocation.proto

package com.google.devtools.resultstore.v2;

public interface WorkspaceInfoOrBuilder extends
    // @@protoc_insertion_point(interface_extends:google.devtools.resultstore.v2.WorkspaceInfo)
    com.google.protobuf.MessageOrBuilder {

  /**
   * <pre>
   * Data about the workspace that might be useful for debugging.
   * </pre>
   *
   * <code>.google.devtools.resultstore.v2.WorkspaceContext workspace_context = 1;</code>
   * @return Whether the workspaceContext field is set.
   */
  boolean hasWorkspaceContext();
  /**
   * <pre>
   * Data about the workspace that might be useful for debugging.
   * </pre>
   *
   * <code>.google.devtools.resultstore.v2.WorkspaceContext workspace_context = 1;</code>
   * @return The workspaceContext.
   */
  com.google.devtools.resultstore.v2.WorkspaceContext getWorkspaceContext();
  /**
   * <pre>
   * Data about the workspace that might be useful for debugging.
   * </pre>
   *
   * <code>.google.devtools.resultstore.v2.WorkspaceContext workspace_context = 1;</code>
   */
  com.google.devtools.resultstore.v2.WorkspaceContextOrBuilder getWorkspaceContextOrBuilder();

  /**
   * <pre>
   * Where the tool was invoked
   * </pre>
   *
   * <code>string hostname = 3;</code>
   * @return The hostname.
   */
  java.lang.String getHostname();
  /**
   * <pre>
   * Where the tool was invoked
   * </pre>
   *
   * <code>string hostname = 3;</code>
   * @return The bytes for hostname.
   */
  com.google.protobuf.ByteString
      getHostnameBytes();

  /**
   * <pre>
   * The client's working directory where the build/test was run from.
   * </pre>
   *
   * <code>string working_directory = 4;</code>
   * @return The workingDirectory.
   */
  java.lang.String getWorkingDirectory();
  /**
   * <pre>
   * The client's working directory where the build/test was run from.
   * </pre>
   *
   * <code>string working_directory = 4;</code>
   * @return The bytes for workingDirectory.
   */
  com.google.protobuf.ByteString
      getWorkingDirectoryBytes();

  /**
   * <pre>
   * Tools should set tool_tag to the name of the tool or use case.
   * </pre>
   *
   * <code>string tool_tag = 5;</code>
   * @return The toolTag.
   */
  java.lang.String getToolTag();
  /**
   * <pre>
   * Tools should set tool_tag to the name of the tool or use case.
   * </pre>
   *
   * <code>string tool_tag = 5;</code>
   * @return The bytes for toolTag.
   */
  com.google.protobuf.ByteString
      getToolTagBytes();

  /**
   * <pre>
   * The command lines invoked. The first command line is the one typed by the
   * user, then each one after that should be an expansion of the previous
   * command line.
   * </pre>
   *
   * <code>repeated .google.devtools.resultstore.v2.CommandLine command_lines = 7;</code>
   */
  java.util.List<com.google.devtools.resultstore.v2.CommandLine> 
      getCommandLinesList();
  /**
   * <pre>
   * The command lines invoked. The first command line is the one typed by the
   * user, then each one after that should be an expansion of the previous
   * command line.
   * </pre>
   *
   * <code>repeated .google.devtools.resultstore.v2.CommandLine command_lines = 7;</code>
   */
  com.google.devtools.resultstore.v2.CommandLine getCommandLines(int index);
  /**
   * <pre>
   * The command lines invoked. The first command line is the one typed by the
   * user, then each one after that should be an expansion of the previous
   * command line.
   * </pre>
   *
   * <code>repeated .google.devtools.resultstore.v2.CommandLine command_lines = 7;</code>
   */
  int getCommandLinesCount();
  /**
   * <pre>
   * The command lines invoked. The first command line is the one typed by the
   * user, then each one after that should be an expansion of the previous
   * command line.
   * </pre>
   *
   * <code>repeated .google.devtools.resultstore.v2.CommandLine command_lines = 7;</code>
   */
  java.util.List<? extends com.google.devtools.resultstore.v2.CommandLineOrBuilder> 
      getCommandLinesOrBuilderList();
  /**
   * <pre>
   * The command lines invoked. The first command line is the one typed by the
   * user, then each one after that should be an expansion of the previous
   * command line.
   * </pre>
   *
   * <code>repeated .google.devtools.resultstore.v2.CommandLine command_lines = 7;</code>
   */
  com.google.devtools.resultstore.v2.CommandLineOrBuilder getCommandLinesOrBuilder(
      int index);
}
