// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: google/devtools/resultstore/v2/action.proto

package com.google.devtools.resultstore.v2;

public interface RemoteTestAttemptTimingOrBuilder extends
    // @@protoc_insertion_point(interface_extends:google.devtools.resultstore.v2.RemoteTestAttemptTiming)
    com.google.protobuf.MessageOrBuilder {

  /**
   * <pre>
   * Idle period before the test process is invoked on the remote machine.
   * </pre>
   *
   * <code>.google.protobuf.Duration queue_duration = 1;</code>
   * @return Whether the queueDuration field is set.
   */
  boolean hasQueueDuration();
  /**
   * <pre>
   * Idle period before the test process is invoked on the remote machine.
   * </pre>
   *
   * <code>.google.protobuf.Duration queue_duration = 1;</code>
   * @return The queueDuration.
   */
  com.google.protobuf.Duration getQueueDuration();
  /**
   * <pre>
   * Idle period before the test process is invoked on the remote machine.
   * </pre>
   *
   * <code>.google.protobuf.Duration queue_duration = 1;</code>
   */
  com.google.protobuf.DurationOrBuilder getQueueDurationOrBuilder();

  /**
   * <pre>
   * Time to upload data dependencies from the local machine to the remote
   * machine running the test, or to the distributed cache.
   * </pre>
   *
   * <code>.google.protobuf.Duration upload_duration = 2;</code>
   * @return Whether the uploadDuration field is set.
   */
  boolean hasUploadDuration();
  /**
   * <pre>
   * Time to upload data dependencies from the local machine to the remote
   * machine running the test, or to the distributed cache.
   * </pre>
   *
   * <code>.google.protobuf.Duration upload_duration = 2;</code>
   * @return The uploadDuration.
   */
  com.google.protobuf.Duration getUploadDuration();
  /**
   * <pre>
   * Time to upload data dependencies from the local machine to the remote
   * machine running the test, or to the distributed cache.
   * </pre>
   *
   * <code>.google.protobuf.Duration upload_duration = 2;</code>
   */
  com.google.protobuf.DurationOrBuilder getUploadDurationOrBuilder();

  /**
   * <pre>
   * Time to set up the remote machine.
   * Not to be confused with setup time in
   * xUnit test frameworks, which falls within the test_process_time.
   * </pre>
   *
   * <code>.google.protobuf.Duration machine_setup_duration = 3;</code>
   * @return Whether the machineSetupDuration field is set.
   */
  boolean hasMachineSetupDuration();
  /**
   * <pre>
   * Time to set up the remote machine.
   * Not to be confused with setup time in
   * xUnit test frameworks, which falls within the test_process_time.
   * </pre>
   *
   * <code>.google.protobuf.Duration machine_setup_duration = 3;</code>
   * @return The machineSetupDuration.
   */
  com.google.protobuf.Duration getMachineSetupDuration();
  /**
   * <pre>
   * Time to set up the remote machine.
   * Not to be confused with setup time in
   * xUnit test frameworks, which falls within the test_process_time.
   * </pre>
   *
   * <code>.google.protobuf.Duration machine_setup_duration = 3;</code>
   */
  com.google.protobuf.DurationOrBuilder getMachineSetupDurationOrBuilder();

  /**
   * <pre>
   * Time taken by the test process, typically surrounded by a small wrapper
   * script.
   * For Java tests, this includes JVM setup, flag parsing, class path setup,
   * parsing files to setup the suite, and finally running your test methods.
   * In many cases, only a small fraction of the test process time is spent
   * running the test methods.
   * </pre>
   *
   * <code>.google.protobuf.Duration test_process_duration = 4;</code>
   * @return Whether the testProcessDuration field is set.
   */
  boolean hasTestProcessDuration();
  /**
   * <pre>
   * Time taken by the test process, typically surrounded by a small wrapper
   * script.
   * For Java tests, this includes JVM setup, flag parsing, class path setup,
   * parsing files to setup the suite, and finally running your test methods.
   * In many cases, only a small fraction of the test process time is spent
   * running the test methods.
   * </pre>
   *
   * <code>.google.protobuf.Duration test_process_duration = 4;</code>
   * @return The testProcessDuration.
   */
  com.google.protobuf.Duration getTestProcessDuration();
  /**
   * <pre>
   * Time taken by the test process, typically surrounded by a small wrapper
   * script.
   * For Java tests, this includes JVM setup, flag parsing, class path setup,
   * parsing files to setup the suite, and finally running your test methods.
   * In many cases, only a small fraction of the test process time is spent
   * running the test methods.
   * </pre>
   *
   * <code>.google.protobuf.Duration test_process_duration = 4;</code>
   */
  com.google.protobuf.DurationOrBuilder getTestProcessDurationOrBuilder();

  /**
   * <pre>
   * Time spent retrieving test logs and any other test outputs, back to the
   * local machine.
   * </pre>
   *
   * <code>.google.protobuf.Duration download_duration = 5;</code>
   * @return Whether the downloadDuration field is set.
   */
  boolean hasDownloadDuration();
  /**
   * <pre>
   * Time spent retrieving test logs and any other test outputs, back to the
   * local machine.
   * </pre>
   *
   * <code>.google.protobuf.Duration download_duration = 5;</code>
   * @return The downloadDuration.
   */
  com.google.protobuf.Duration getDownloadDuration();
  /**
   * <pre>
   * Time spent retrieving test logs and any other test outputs, back to the
   * local machine.
   * </pre>
   *
   * <code>.google.protobuf.Duration download_duration = 5;</code>
   */
  com.google.protobuf.DurationOrBuilder getDownloadDurationOrBuilder();
}
