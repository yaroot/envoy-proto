// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: google/devtools/resultstore/v2/resultstore_upload.proto

package com.google.devtools.resultstore.v2;

public interface UploadBatchRequestOrBuilder extends
    // @@protoc_insertion_point(interface_extends:google.devtools.resultstore.v2.UploadBatchRequest)
    com.google.protobuf.MessageOrBuilder {

  /**
   * <pre>
   * Required. The name of the invocation being modified.
   * The name format must be: invocations/${INVOCATION_ID}
   * </pre>
   *
   * <code>string parent = 1 [(.google.api.field_behavior) = REQUIRED];</code>
   * @return The parent.
   */
  java.lang.String getParent();
  /**
   * <pre>
   * Required. The name of the invocation being modified.
   * The name format must be: invocations/${INVOCATION_ID}
   * </pre>
   *
   * <code>string parent = 1 [(.google.api.field_behavior) = REQUIRED];</code>
   * @return The bytes for parent.
   */
  com.google.protobuf.ByteString
      getParentBytes();

  /**
   * <pre>
   * Required. A UUID that must match the value provided in CreateInvocationRequest.
   * </pre>
   *
   * <code>string authorization_token = 2 [(.google.api.field_behavior) = REQUIRED];</code>
   * @return The authorizationToken.
   */
  java.lang.String getAuthorizationToken();
  /**
   * <pre>
   * Required. A UUID that must match the value provided in CreateInvocationRequest.
   * </pre>
   *
   * <code>string authorization_token = 2 [(.google.api.field_behavior) = REQUIRED];</code>
   * @return The bytes for authorizationToken.
   */
  com.google.protobuf.ByteString
      getAuthorizationTokenBytes();

  /**
   * <pre>
   * Required. The token of this batch, that will be committed in this UploadBatchRequest.
   * If this matches the previously uploaded resume_token, then this request
   * will silently do nothing.
   * See CreateInvocationRequest.initial_resume_token for more information.
   * Must be web safe Base64 encoded bytes.
   * </pre>
   *
   * <code>string next_resume_token = 3 [(.google.api.field_behavior) = REQUIRED];</code>
   * @return The nextResumeToken.
   */
  java.lang.String getNextResumeToken();
  /**
   * <pre>
   * Required. The token of this batch, that will be committed in this UploadBatchRequest.
   * If this matches the previously uploaded resume_token, then this request
   * will silently do nothing.
   * See CreateInvocationRequest.initial_resume_token for more information.
   * Must be web safe Base64 encoded bytes.
   * </pre>
   *
   * <code>string next_resume_token = 3 [(.google.api.field_behavior) = REQUIRED];</code>
   * @return The bytes for nextResumeToken.
   */
  com.google.protobuf.ByteString
      getNextResumeTokenBytes();

  /**
   * <pre>
   * Required. The token of the previous batch that was committed in a UploadBatchRequest.
   * This will be checked after next_resume_token match is checked. If this does
   * not match the previously uploaded resume_token, a 409 Conflict (HTTPS) or
   * ABORTED (gRPC ) error code indicating a concurrency
   * failure will be returned, and that the user should call
   * GetInvocationUploadMetadata to fetch the current resume_token to
   * reconstruct the state of the upload to resume it.
   * See CreateInvocationRequest.initial_resume_token for more information.
   * Must be web safe Base64 encoded bytes.
   * </pre>
   *
   * <code>string resume_token = 4 [(.google.api.field_behavior) = REQUIRED];</code>
   * @return The resumeToken.
   */
  java.lang.String getResumeToken();
  /**
   * <pre>
   * Required. The token of the previous batch that was committed in a UploadBatchRequest.
   * This will be checked after next_resume_token match is checked. If this does
   * not match the previously uploaded resume_token, a 409 Conflict (HTTPS) or
   * ABORTED (gRPC ) error code indicating a concurrency
   * failure will be returned, and that the user should call
   * GetInvocationUploadMetadata to fetch the current resume_token to
   * reconstruct the state of the upload to resume it.
   * See CreateInvocationRequest.initial_resume_token for more information.
   * Must be web safe Base64 encoded bytes.
   * </pre>
   *
   * <code>string resume_token = 4 [(.google.api.field_behavior) = REQUIRED];</code>
   * @return The bytes for resumeToken.
   */
  com.google.protobuf.ByteString
      getResumeTokenBytes();

  /**
   * <pre>
   * Client-specific data used to resume batch upload if an error occurs and
   * retry is needed. This serves a role closely related to resume_token, as
   * both fields may be used to provide state required to restore a Batch
   * Upload, but they differ in two important aspects:
   *  - it is not compared to previous values, and as such does not provide
   *    concurrency control;
   *  - it allows for a larger payload, since the contents are never
   *    inspected/compared;
   * The size of the message must be within 1 MiB. Too large requests will be
   * rejected.
   * </pre>
   *
   * <code>bytes uploader_state = 6;</code>
   * @return The uploaderState.
   */
  com.google.protobuf.ByteString getUploaderState();

  /**
   * <pre>
   * The individual upload requests for this batch.
   * This field may be empty, allowing this RPC to be used like TouchInvocation.
   * </pre>
   *
   * <code>repeated .google.devtools.resultstore.v2.UploadRequest upload_requests = 5;</code>
   */
  java.util.List<com.google.devtools.resultstore.v2.UploadRequest> 
      getUploadRequestsList();
  /**
   * <pre>
   * The individual upload requests for this batch.
   * This field may be empty, allowing this RPC to be used like TouchInvocation.
   * </pre>
   *
   * <code>repeated .google.devtools.resultstore.v2.UploadRequest upload_requests = 5;</code>
   */
  com.google.devtools.resultstore.v2.UploadRequest getUploadRequests(int index);
  /**
   * <pre>
   * The individual upload requests for this batch.
   * This field may be empty, allowing this RPC to be used like TouchInvocation.
   * </pre>
   *
   * <code>repeated .google.devtools.resultstore.v2.UploadRequest upload_requests = 5;</code>
   */
  int getUploadRequestsCount();
  /**
   * <pre>
   * The individual upload requests for this batch.
   * This field may be empty, allowing this RPC to be used like TouchInvocation.
   * </pre>
   *
   * <code>repeated .google.devtools.resultstore.v2.UploadRequest upload_requests = 5;</code>
   */
  java.util.List<? extends com.google.devtools.resultstore.v2.UploadRequestOrBuilder> 
      getUploadRequestsOrBuilderList();
  /**
   * <pre>
   * The individual upload requests for this batch.
   * This field may be empty, allowing this RPC to be used like TouchInvocation.
   * </pre>
   *
   * <code>repeated .google.devtools.resultstore.v2.UploadRequest upload_requests = 5;</code>
   */
  com.google.devtools.resultstore.v2.UploadRequestOrBuilder getUploadRequestsOrBuilder(
      int index);
}
