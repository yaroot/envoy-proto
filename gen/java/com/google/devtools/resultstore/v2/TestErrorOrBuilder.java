// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: google/devtools/resultstore/v2/test_suite.proto

package com.google.devtools.resultstore.v2;

public interface TestErrorOrBuilder extends
    // @@protoc_insertion_point(interface_extends:google.devtools.resultstore.v2.TestError)
    com.google.protobuf.MessageOrBuilder {

  /**
   * <pre>
   * The exception message, as reported in the message attribute. Typically
   * short, but may be multi-line. Eg. "argument cannot be null".
   * </pre>
   *
   * <code>string error_message = 1;</code>
   * @return The errorMessage.
   */
  java.lang.String getErrorMessage();
  /**
   * <pre>
   * The exception message, as reported in the message attribute. Typically
   * short, but may be multi-line. Eg. "argument cannot be null".
   * </pre>
   *
   * <code>string error_message = 1;</code>
   * @return The bytes for errorMessage.
   */
  com.google.protobuf.ByteString
      getErrorMessageBytes();

  /**
   * <pre>
   * The type of the exception being thrown, reported in the type attribute.
   * For Java, this is a fully qualified Throwable class name.
   * Eg: "java.lang.IllegalArgumentException"
   * </pre>
   *
   * <code>string exception_type = 2;</code>
   * @return The exceptionType.
   */
  java.lang.String getExceptionType();
  /**
   * <pre>
   * The type of the exception being thrown, reported in the type attribute.
   * For Java, this is a fully qualified Throwable class name.
   * Eg: "java.lang.IllegalArgumentException"
   * </pre>
   *
   * <code>string exception_type = 2;</code>
   * @return The bytes for exceptionType.
   */
  com.google.protobuf.ByteString
      getExceptionTypeBytes();

  /**
   * <pre>
   * The stack trace reported as the content of the &lt;error&gt; element, often in
   * a CDATA block. This contains one line for each stack frame, each including
   * a method/function name, a class/file name, and a line number. Most recent
   * call is usually first, but not for Python stack traces. May contain the
   * exception_type and message.
   * </pre>
   *
   * <code>string stack_trace = 3;</code>
   * @return The stackTrace.
   */
  java.lang.String getStackTrace();
  /**
   * <pre>
   * The stack trace reported as the content of the &lt;error&gt; element, often in
   * a CDATA block. This contains one line for each stack frame, each including
   * a method/function name, a class/file name, and a line number. Most recent
   * call is usually first, but not for Python stack traces. May contain the
   * exception_type and message.
   * </pre>
   *
   * <code>string stack_trace = 3;</code>
   * @return The bytes for stackTrace.
   */
  com.google.protobuf.ByteString
      getStackTraceBytes();
}
