// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: google/devtools/remoteworkers/v1test2/command.proto

package com.google.devtools.remoteworkers.v1test2;

/**
 * <pre>
 * Describes a shell-style task to execute, suitable for providing as the Bots
 * interface's `Lease.payload` field.
 * </pre>
 *
 * Protobuf type {@code google.devtools.remoteworkers.v1test2.CommandTask}
 */
public final class CommandTask extends
    com.google.protobuf.GeneratedMessageV3 implements
    // @@protoc_insertion_point(message_implements:google.devtools.remoteworkers.v1test2.CommandTask)
    CommandTaskOrBuilder {
private static final long serialVersionUID = 0L;
  // Use CommandTask.newBuilder() to construct.
  private CommandTask(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
    super(builder);
  }
  private CommandTask() {
  }

  @java.lang.Override
  @SuppressWarnings({"unused"})
  protected java.lang.Object newInstance(
      UnusedPrivateParameter unused) {
    return new CommandTask();
  }

  @java.lang.Override
  public final com.google.protobuf.UnknownFieldSet
  getUnknownFields() {
    return this.unknownFields;
  }
  public static final com.google.protobuf.Descriptors.Descriptor
      getDescriptor() {
    return com.google.devtools.remoteworkers.v1test2.RemoteWorkersCommands.internal_static_google_devtools_remoteworkers_v1test2_CommandTask_descriptor;
  }

  @java.lang.Override
  protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internalGetFieldAccessorTable() {
    return com.google.devtools.remoteworkers.v1test2.RemoteWorkersCommands.internal_static_google_devtools_remoteworkers_v1test2_CommandTask_fieldAccessorTable
        .ensureFieldAccessorsInitialized(
            com.google.devtools.remoteworkers.v1test2.CommandTask.class, com.google.devtools.remoteworkers.v1test2.CommandTask.Builder.class);
  }

  public interface InputsOrBuilder extends
      // @@protoc_insertion_point(interface_extends:google.devtools.remoteworkers.v1test2.CommandTask.Inputs)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <pre>
     * The command itself to run (e.g., argv).
     * This field should be passed directly to the underlying operating system,
     * and so it must be sensible to that operating system. For example, on
     * Windows, the first argument might be "C:&#92;Windows&#92;System32&#92;ping.exe" -
     * that is, using drive letters and backslashes. A command for a *nix
     * system, on the other hand, would use forward slashes.
     * All other fields in the RWAPI must consistently use forward slashes,
     * since those fields may be interpretted by both the service and the bot.
     * </pre>
     *
     * <code>repeated string arguments = 1;</code>
     * @return A list containing the arguments.
     */
    java.util.List<java.lang.String>
        getArgumentsList();
    /**
     * <pre>
     * The command itself to run (e.g., argv).
     * This field should be passed directly to the underlying operating system,
     * and so it must be sensible to that operating system. For example, on
     * Windows, the first argument might be "C:&#92;Windows&#92;System32&#92;ping.exe" -
     * that is, using drive letters and backslashes. A command for a *nix
     * system, on the other hand, would use forward slashes.
     * All other fields in the RWAPI must consistently use forward slashes,
     * since those fields may be interpretted by both the service and the bot.
     * </pre>
     *
     * <code>repeated string arguments = 1;</code>
     * @return The count of arguments.
     */
    int getArgumentsCount();
    /**
     * <pre>
     * The command itself to run (e.g., argv).
     * This field should be passed directly to the underlying operating system,
     * and so it must be sensible to that operating system. For example, on
     * Windows, the first argument might be "C:&#92;Windows&#92;System32&#92;ping.exe" -
     * that is, using drive letters and backslashes. A command for a *nix
     * system, on the other hand, would use forward slashes.
     * All other fields in the RWAPI must consistently use forward slashes,
     * since those fields may be interpretted by both the service and the bot.
     * </pre>
     *
     * <code>repeated string arguments = 1;</code>
     * @param index The index of the element to return.
     * @return The arguments at the given index.
     */
    java.lang.String getArguments(int index);
    /**
     * <pre>
     * The command itself to run (e.g., argv).
     * This field should be passed directly to the underlying operating system,
     * and so it must be sensible to that operating system. For example, on
     * Windows, the first argument might be "C:&#92;Windows&#92;System32&#92;ping.exe" -
     * that is, using drive letters and backslashes. A command for a *nix
     * system, on the other hand, would use forward slashes.
     * All other fields in the RWAPI must consistently use forward slashes,
     * since those fields may be interpretted by both the service and the bot.
     * </pre>
     *
     * <code>repeated string arguments = 1;</code>
     * @param index The index of the value to return.
     * @return The bytes of the arguments at the given index.
     */
    com.google.protobuf.ByteString
        getArgumentsBytes(int index);

    /**
     * <pre>
     * The input filesystem to be set up prior to the task beginning. The
     * contents should be a repeated set of FileMetadata messages though other
     * formats are allowed if better for the implementation (eg, a LUCI-style
     * .isolated file).
     * This field is repeated since implementations might want to cache the
     * metadata, in which case it may be useful to break up portions of the
     * filesystem that change frequently (eg, specific input files) from those
     * that don't (eg, standard header files).
     * </pre>
     *
     * <code>repeated .google.devtools.remoteworkers.v1test2.Digest files = 2;</code>
     */
    java.util.List<com.google.devtools.remoteworkers.v1test2.Digest> 
        getFilesList();
    /**
     * <pre>
     * The input filesystem to be set up prior to the task beginning. The
     * contents should be a repeated set of FileMetadata messages though other
     * formats are allowed if better for the implementation (eg, a LUCI-style
     * .isolated file).
     * This field is repeated since implementations might want to cache the
     * metadata, in which case it may be useful to break up portions of the
     * filesystem that change frequently (eg, specific input files) from those
     * that don't (eg, standard header files).
     * </pre>
     *
     * <code>repeated .google.devtools.remoteworkers.v1test2.Digest files = 2;</code>
     */
    com.google.devtools.remoteworkers.v1test2.Digest getFiles(int index);
    /**
     * <pre>
     * The input filesystem to be set up prior to the task beginning. The
     * contents should be a repeated set of FileMetadata messages though other
     * formats are allowed if better for the implementation (eg, a LUCI-style
     * .isolated file).
     * This field is repeated since implementations might want to cache the
     * metadata, in which case it may be useful to break up portions of the
     * filesystem that change frequently (eg, specific input files) from those
     * that don't (eg, standard header files).
     * </pre>
     *
     * <code>repeated .google.devtools.remoteworkers.v1test2.Digest files = 2;</code>
     */
    int getFilesCount();
    /**
     * <pre>
     * The input filesystem to be set up prior to the task beginning. The
     * contents should be a repeated set of FileMetadata messages though other
     * formats are allowed if better for the implementation (eg, a LUCI-style
     * .isolated file).
     * This field is repeated since implementations might want to cache the
     * metadata, in which case it may be useful to break up portions of the
     * filesystem that change frequently (eg, specific input files) from those
     * that don't (eg, standard header files).
     * </pre>
     *
     * <code>repeated .google.devtools.remoteworkers.v1test2.Digest files = 2;</code>
     */
    java.util.List<? extends com.google.devtools.remoteworkers.v1test2.DigestOrBuilder> 
        getFilesOrBuilderList();
    /**
     * <pre>
     * The input filesystem to be set up prior to the task beginning. The
     * contents should be a repeated set of FileMetadata messages though other
     * formats are allowed if better for the implementation (eg, a LUCI-style
     * .isolated file).
     * This field is repeated since implementations might want to cache the
     * metadata, in which case it may be useful to break up portions of the
     * filesystem that change frequently (eg, specific input files) from those
     * that don't (eg, standard header files).
     * </pre>
     *
     * <code>repeated .google.devtools.remoteworkers.v1test2.Digest files = 2;</code>
     */
    com.google.devtools.remoteworkers.v1test2.DigestOrBuilder getFilesOrBuilder(
        int index);

    /**
     * <pre>
     * Inline contents for blobs expected to be needed by the bot to execute the
     * task. For example, contents of entries in `files` or blobs that are
     * indirectly referenced by an entry there.
     * The bot should check against this list before downloading required task
     * inputs to reduce the number of communications between itself and the
     * remote CAS server.
     * </pre>
     *
     * <code>repeated .google.devtools.remoteworkers.v1test2.Blob inline_blobs = 4;</code>
     */
    java.util.List<com.google.devtools.remoteworkers.v1test2.Blob> 
        getInlineBlobsList();
    /**
     * <pre>
     * Inline contents for blobs expected to be needed by the bot to execute the
     * task. For example, contents of entries in `files` or blobs that are
     * indirectly referenced by an entry there.
     * The bot should check against this list before downloading required task
     * inputs to reduce the number of communications between itself and the
     * remote CAS server.
     * </pre>
     *
     * <code>repeated .google.devtools.remoteworkers.v1test2.Blob inline_blobs = 4;</code>
     */
    com.google.devtools.remoteworkers.v1test2.Blob getInlineBlobs(int index);
    /**
     * <pre>
     * Inline contents for blobs expected to be needed by the bot to execute the
     * task. For example, contents of entries in `files` or blobs that are
     * indirectly referenced by an entry there.
     * The bot should check against this list before downloading required task
     * inputs to reduce the number of communications between itself and the
     * remote CAS server.
     * </pre>
     *
     * <code>repeated .google.devtools.remoteworkers.v1test2.Blob inline_blobs = 4;</code>
     */
    int getInlineBlobsCount();
    /**
     * <pre>
     * Inline contents for blobs expected to be needed by the bot to execute the
     * task. For example, contents of entries in `files` or blobs that are
     * indirectly referenced by an entry there.
     * The bot should check against this list before downloading required task
     * inputs to reduce the number of communications between itself and the
     * remote CAS server.
     * </pre>
     *
     * <code>repeated .google.devtools.remoteworkers.v1test2.Blob inline_blobs = 4;</code>
     */
    java.util.List<? extends com.google.devtools.remoteworkers.v1test2.BlobOrBuilder> 
        getInlineBlobsOrBuilderList();
    /**
     * <pre>
     * Inline contents for blobs expected to be needed by the bot to execute the
     * task. For example, contents of entries in `files` or blobs that are
     * indirectly referenced by an entry there.
     * The bot should check against this list before downloading required task
     * inputs to reduce the number of communications between itself and the
     * remote CAS server.
     * </pre>
     *
     * <code>repeated .google.devtools.remoteworkers.v1test2.Blob inline_blobs = 4;</code>
     */
    com.google.devtools.remoteworkers.v1test2.BlobOrBuilder getInlineBlobsOrBuilder(
        int index);

    /**
     * <pre>
     * All environment variables required by the task.
     * </pre>
     *
     * <code>repeated .google.devtools.remoteworkers.v1test2.CommandTask.Inputs.EnvironmentVariable environment_variables = 3;</code>
     */
    java.util.List<com.google.devtools.remoteworkers.v1test2.CommandTask.Inputs.EnvironmentVariable> 
        getEnvironmentVariablesList();
    /**
     * <pre>
     * All environment variables required by the task.
     * </pre>
     *
     * <code>repeated .google.devtools.remoteworkers.v1test2.CommandTask.Inputs.EnvironmentVariable environment_variables = 3;</code>
     */
    com.google.devtools.remoteworkers.v1test2.CommandTask.Inputs.EnvironmentVariable getEnvironmentVariables(int index);
    /**
     * <pre>
     * All environment variables required by the task.
     * </pre>
     *
     * <code>repeated .google.devtools.remoteworkers.v1test2.CommandTask.Inputs.EnvironmentVariable environment_variables = 3;</code>
     */
    int getEnvironmentVariablesCount();
    /**
     * <pre>
     * All environment variables required by the task.
     * </pre>
     *
     * <code>repeated .google.devtools.remoteworkers.v1test2.CommandTask.Inputs.EnvironmentVariable environment_variables = 3;</code>
     */
    java.util.List<? extends com.google.devtools.remoteworkers.v1test2.CommandTask.Inputs.EnvironmentVariableOrBuilder> 
        getEnvironmentVariablesOrBuilderList();
    /**
     * <pre>
     * All environment variables required by the task.
     * </pre>
     *
     * <code>repeated .google.devtools.remoteworkers.v1test2.CommandTask.Inputs.EnvironmentVariable environment_variables = 3;</code>
     */
    com.google.devtools.remoteworkers.v1test2.CommandTask.Inputs.EnvironmentVariableOrBuilder getEnvironmentVariablesOrBuilder(
        int index);

    /**
     * <pre>
     * Directory from which a command is executed. It is a relative directory
     * with respect to the bot's working directory (i.e., "./"). If it is
     * non-empty, then it must exist under "./". Otherwise, "./" will be used.
     * </pre>
     *
     * <code>string working_directory = 5;</code>
     * @return The workingDirectory.
     */
    java.lang.String getWorkingDirectory();
    /**
     * <pre>
     * Directory from which a command is executed. It is a relative directory
     * with respect to the bot's working directory (i.e., "./"). If it is
     * non-empty, then it must exist under "./". Otherwise, "./" will be used.
     * </pre>
     *
     * <code>string working_directory = 5;</code>
     * @return The bytes for workingDirectory.
     */
    com.google.protobuf.ByteString
        getWorkingDirectoryBytes();
  }
  /**
   * <pre>
   * Describes the inputs to a shell-style task.
   * </pre>
   *
   * Protobuf type {@code google.devtools.remoteworkers.v1test2.CommandTask.Inputs}
   */
  public static final class Inputs extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:google.devtools.remoteworkers.v1test2.CommandTask.Inputs)
      InputsOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use Inputs.newBuilder() to construct.
    private Inputs(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private Inputs() {
      arguments_ = com.google.protobuf.LazyStringArrayList.EMPTY;
      files_ = java.util.Collections.emptyList();
      inlineBlobs_ = java.util.Collections.emptyList();
      environmentVariables_ = java.util.Collections.emptyList();
      workingDirectory_ = "";
    }

    @java.lang.Override
    @SuppressWarnings({"unused"})
    protected java.lang.Object newInstance(
        UnusedPrivateParameter unused) {
      return new Inputs();
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.google.devtools.remoteworkers.v1test2.RemoteWorkersCommands.internal_static_google_devtools_remoteworkers_v1test2_CommandTask_Inputs_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.google.devtools.remoteworkers.v1test2.RemoteWorkersCommands.internal_static_google_devtools_remoteworkers_v1test2_CommandTask_Inputs_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.google.devtools.remoteworkers.v1test2.CommandTask.Inputs.class, com.google.devtools.remoteworkers.v1test2.CommandTask.Inputs.Builder.class);
    }

    public interface EnvironmentVariableOrBuilder extends
        // @@protoc_insertion_point(interface_extends:google.devtools.remoteworkers.v1test2.CommandTask.Inputs.EnvironmentVariable)
        com.google.protobuf.MessageOrBuilder {

      /**
       * <pre>
       * The envvar name.
       * </pre>
       *
       * <code>string name = 1;</code>
       * @return The name.
       */
      java.lang.String getName();
      /**
       * <pre>
       * The envvar name.
       * </pre>
       *
       * <code>string name = 1;</code>
       * @return The bytes for name.
       */
      com.google.protobuf.ByteString
          getNameBytes();

      /**
       * <pre>
       * The envvar value.
       * </pre>
       *
       * <code>string value = 2;</code>
       * @return The value.
       */
      java.lang.String getValue();
      /**
       * <pre>
       * The envvar value.
       * </pre>
       *
       * <code>string value = 2;</code>
       * @return The bytes for value.
       */
      com.google.protobuf.ByteString
          getValueBytes();
    }
    /**
     * <pre>
     * An environment variable required by this task.
     * </pre>
     *
     * Protobuf type {@code google.devtools.remoteworkers.v1test2.CommandTask.Inputs.EnvironmentVariable}
     */
    public static final class EnvironmentVariable extends
        com.google.protobuf.GeneratedMessageV3 implements
        // @@protoc_insertion_point(message_implements:google.devtools.remoteworkers.v1test2.CommandTask.Inputs.EnvironmentVariable)
        EnvironmentVariableOrBuilder {
    private static final long serialVersionUID = 0L;
      // Use EnvironmentVariable.newBuilder() to construct.
      private EnvironmentVariable(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
        super(builder);
      }
      private EnvironmentVariable() {
        name_ = "";
        value_ = "";
      }

      @java.lang.Override
      @SuppressWarnings({"unused"})
      protected java.lang.Object newInstance(
          UnusedPrivateParameter unused) {
        return new EnvironmentVariable();
      }

      @java.lang.Override
      public final com.google.protobuf.UnknownFieldSet
      getUnknownFields() {
        return this.unknownFields;
      }
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return com.google.devtools.remoteworkers.v1test2.RemoteWorkersCommands.internal_static_google_devtools_remoteworkers_v1test2_CommandTask_Inputs_EnvironmentVariable_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return com.google.devtools.remoteworkers.v1test2.RemoteWorkersCommands.internal_static_google_devtools_remoteworkers_v1test2_CommandTask_Inputs_EnvironmentVariable_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                com.google.devtools.remoteworkers.v1test2.CommandTask.Inputs.EnvironmentVariable.class, com.google.devtools.remoteworkers.v1test2.CommandTask.Inputs.EnvironmentVariable.Builder.class);
      }

      public static final int NAME_FIELD_NUMBER = 1;
      @SuppressWarnings("serial")
      private volatile java.lang.Object name_ = "";
      /**
       * <pre>
       * The envvar name.
       * </pre>
       *
       * <code>string name = 1;</code>
       * @return The name.
       */
      @java.lang.Override
      public java.lang.String getName() {
        java.lang.Object ref = name_;
        if (ref instanceof java.lang.String) {
          return (java.lang.String) ref;
        } else {
          com.google.protobuf.ByteString bs = 
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          name_ = s;
          return s;
        }
      }
      /**
       * <pre>
       * The envvar name.
       * </pre>
       *
       * <code>string name = 1;</code>
       * @return The bytes for name.
       */
      @java.lang.Override
      public com.google.protobuf.ByteString
          getNameBytes() {
        java.lang.Object ref = name_;
        if (ref instanceof java.lang.String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          name_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }

      public static final int VALUE_FIELD_NUMBER = 2;
      @SuppressWarnings("serial")
      private volatile java.lang.Object value_ = "";
      /**
       * <pre>
       * The envvar value.
       * </pre>
       *
       * <code>string value = 2;</code>
       * @return The value.
       */
      @java.lang.Override
      public java.lang.String getValue() {
        java.lang.Object ref = value_;
        if (ref instanceof java.lang.String) {
          return (java.lang.String) ref;
        } else {
          com.google.protobuf.ByteString bs = 
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          value_ = s;
          return s;
        }
      }
      /**
       * <pre>
       * The envvar value.
       * </pre>
       *
       * <code>string value = 2;</code>
       * @return The bytes for value.
       */
      @java.lang.Override
      public com.google.protobuf.ByteString
          getValueBytes() {
        java.lang.Object ref = value_;
        if (ref instanceof java.lang.String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          value_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }

      private byte memoizedIsInitialized = -1;
      @java.lang.Override
      public final boolean isInitialized() {
        byte isInitialized = memoizedIsInitialized;
        if (isInitialized == 1) return true;
        if (isInitialized == 0) return false;

        memoizedIsInitialized = 1;
        return true;
      }

      @java.lang.Override
      public void writeTo(com.google.protobuf.CodedOutputStream output)
                          throws java.io.IOException {
        if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(name_)) {
          com.google.protobuf.GeneratedMessageV3.writeString(output, 1, name_);
        }
        if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(value_)) {
          com.google.protobuf.GeneratedMessageV3.writeString(output, 2, value_);
        }
        getUnknownFields().writeTo(output);
      }

      @java.lang.Override
      public int getSerializedSize() {
        int size = memoizedSize;
        if (size != -1) return size;

        size = 0;
        if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(name_)) {
          size += com.google.protobuf.GeneratedMessageV3.computeStringSize(1, name_);
        }
        if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(value_)) {
          size += com.google.protobuf.GeneratedMessageV3.computeStringSize(2, value_);
        }
        size += getUnknownFields().getSerializedSize();
        memoizedSize = size;
        return size;
      }

      @java.lang.Override
      public boolean equals(final java.lang.Object obj) {
        if (obj == this) {
         return true;
        }
        if (!(obj instanceof com.google.devtools.remoteworkers.v1test2.CommandTask.Inputs.EnvironmentVariable)) {
          return super.equals(obj);
        }
        com.google.devtools.remoteworkers.v1test2.CommandTask.Inputs.EnvironmentVariable other = (com.google.devtools.remoteworkers.v1test2.CommandTask.Inputs.EnvironmentVariable) obj;

        if (!getName()
            .equals(other.getName())) return false;
        if (!getValue()
            .equals(other.getValue())) return false;
        if (!getUnknownFields().equals(other.getUnknownFields())) return false;
        return true;
      }

      @java.lang.Override
      public int hashCode() {
        if (memoizedHashCode != 0) {
          return memoizedHashCode;
        }
        int hash = 41;
        hash = (19 * hash) + getDescriptor().hashCode();
        hash = (37 * hash) + NAME_FIELD_NUMBER;
        hash = (53 * hash) + getName().hashCode();
        hash = (37 * hash) + VALUE_FIELD_NUMBER;
        hash = (53 * hash) + getValue().hashCode();
        hash = (29 * hash) + getUnknownFields().hashCode();
        memoizedHashCode = hash;
        return hash;
      }

      public static com.google.devtools.remoteworkers.v1test2.CommandTask.Inputs.EnvironmentVariable parseFrom(
          java.nio.ByteBuffer data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static com.google.devtools.remoteworkers.v1test2.CommandTask.Inputs.EnvironmentVariable parseFrom(
          java.nio.ByteBuffer data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static com.google.devtools.remoteworkers.v1test2.CommandTask.Inputs.EnvironmentVariable parseFrom(
          com.google.protobuf.ByteString data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static com.google.devtools.remoteworkers.v1test2.CommandTask.Inputs.EnvironmentVariable parseFrom(
          com.google.protobuf.ByteString data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static com.google.devtools.remoteworkers.v1test2.CommandTask.Inputs.EnvironmentVariable parseFrom(byte[] data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static com.google.devtools.remoteworkers.v1test2.CommandTask.Inputs.EnvironmentVariable parseFrom(
          byte[] data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static com.google.devtools.remoteworkers.v1test2.CommandTask.Inputs.EnvironmentVariable parseFrom(java.io.InputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input);
      }
      public static com.google.devtools.remoteworkers.v1test2.CommandTask.Inputs.EnvironmentVariable parseFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input, extensionRegistry);
      }
      public static com.google.devtools.remoteworkers.v1test2.CommandTask.Inputs.EnvironmentVariable parseDelimitedFrom(java.io.InputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseDelimitedWithIOException(PARSER, input);
      }
      public static com.google.devtools.remoteworkers.v1test2.CommandTask.Inputs.EnvironmentVariable parseDelimitedFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
      }
      public static com.google.devtools.remoteworkers.v1test2.CommandTask.Inputs.EnvironmentVariable parseFrom(
          com.google.protobuf.CodedInputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input);
      }
      public static com.google.devtools.remoteworkers.v1test2.CommandTask.Inputs.EnvironmentVariable parseFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input, extensionRegistry);
      }

      @java.lang.Override
      public Builder newBuilderForType() { return newBuilder(); }
      public static Builder newBuilder() {
        return DEFAULT_INSTANCE.toBuilder();
      }
      public static Builder newBuilder(com.google.devtools.remoteworkers.v1test2.CommandTask.Inputs.EnvironmentVariable prototype) {
        return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
      }
      @java.lang.Override
      public Builder toBuilder() {
        return this == DEFAULT_INSTANCE
            ? new Builder() : new Builder().mergeFrom(this);
      }

      @java.lang.Override
      protected Builder newBuilderForType(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        Builder builder = new Builder(parent);
        return builder;
      }
      /**
       * <pre>
       * An environment variable required by this task.
       * </pre>
       *
       * Protobuf type {@code google.devtools.remoteworkers.v1test2.CommandTask.Inputs.EnvironmentVariable}
       */
      public static final class Builder extends
          com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
          // @@protoc_insertion_point(builder_implements:google.devtools.remoteworkers.v1test2.CommandTask.Inputs.EnvironmentVariable)
          com.google.devtools.remoteworkers.v1test2.CommandTask.Inputs.EnvironmentVariableOrBuilder {
        public static final com.google.protobuf.Descriptors.Descriptor
            getDescriptor() {
          return com.google.devtools.remoteworkers.v1test2.RemoteWorkersCommands.internal_static_google_devtools_remoteworkers_v1test2_CommandTask_Inputs_EnvironmentVariable_descriptor;
        }

        @java.lang.Override
        protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
            internalGetFieldAccessorTable() {
          return com.google.devtools.remoteworkers.v1test2.RemoteWorkersCommands.internal_static_google_devtools_remoteworkers_v1test2_CommandTask_Inputs_EnvironmentVariable_fieldAccessorTable
              .ensureFieldAccessorsInitialized(
                  com.google.devtools.remoteworkers.v1test2.CommandTask.Inputs.EnvironmentVariable.class, com.google.devtools.remoteworkers.v1test2.CommandTask.Inputs.EnvironmentVariable.Builder.class);
        }

        // Construct using com.google.devtools.remoteworkers.v1test2.CommandTask.Inputs.EnvironmentVariable.newBuilder()
        private Builder() {

        }

        private Builder(
            com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
          super(parent);

        }
        @java.lang.Override
        public Builder clear() {
          super.clear();
          bitField0_ = 0;
          name_ = "";
          value_ = "";
          return this;
        }

        @java.lang.Override
        public com.google.protobuf.Descriptors.Descriptor
            getDescriptorForType() {
          return com.google.devtools.remoteworkers.v1test2.RemoteWorkersCommands.internal_static_google_devtools_remoteworkers_v1test2_CommandTask_Inputs_EnvironmentVariable_descriptor;
        }

        @java.lang.Override
        public com.google.devtools.remoteworkers.v1test2.CommandTask.Inputs.EnvironmentVariable getDefaultInstanceForType() {
          return com.google.devtools.remoteworkers.v1test2.CommandTask.Inputs.EnvironmentVariable.getDefaultInstance();
        }

        @java.lang.Override
        public com.google.devtools.remoteworkers.v1test2.CommandTask.Inputs.EnvironmentVariable build() {
          com.google.devtools.remoteworkers.v1test2.CommandTask.Inputs.EnvironmentVariable result = buildPartial();
          if (!result.isInitialized()) {
            throw newUninitializedMessageException(result);
          }
          return result;
        }

        @java.lang.Override
        public com.google.devtools.remoteworkers.v1test2.CommandTask.Inputs.EnvironmentVariable buildPartial() {
          com.google.devtools.remoteworkers.v1test2.CommandTask.Inputs.EnvironmentVariable result = new com.google.devtools.remoteworkers.v1test2.CommandTask.Inputs.EnvironmentVariable(this);
          if (bitField0_ != 0) { buildPartial0(result); }
          onBuilt();
          return result;
        }

        private void buildPartial0(com.google.devtools.remoteworkers.v1test2.CommandTask.Inputs.EnvironmentVariable result) {
          int from_bitField0_ = bitField0_;
          if (((from_bitField0_ & 0x00000001) != 0)) {
            result.name_ = name_;
          }
          if (((from_bitField0_ & 0x00000002) != 0)) {
            result.value_ = value_;
          }
        }

        @java.lang.Override
        public Builder clone() {
          return super.clone();
        }
        @java.lang.Override
        public Builder setField(
            com.google.protobuf.Descriptors.FieldDescriptor field,
            java.lang.Object value) {
          return super.setField(field, value);
        }
        @java.lang.Override
        public Builder clearField(
            com.google.protobuf.Descriptors.FieldDescriptor field) {
          return super.clearField(field);
        }
        @java.lang.Override
        public Builder clearOneof(
            com.google.protobuf.Descriptors.OneofDescriptor oneof) {
          return super.clearOneof(oneof);
        }
        @java.lang.Override
        public Builder setRepeatedField(
            com.google.protobuf.Descriptors.FieldDescriptor field,
            int index, java.lang.Object value) {
          return super.setRepeatedField(field, index, value);
        }
        @java.lang.Override
        public Builder addRepeatedField(
            com.google.protobuf.Descriptors.FieldDescriptor field,
            java.lang.Object value) {
          return super.addRepeatedField(field, value);
        }
        @java.lang.Override
        public Builder mergeFrom(com.google.protobuf.Message other) {
          if (other instanceof com.google.devtools.remoteworkers.v1test2.CommandTask.Inputs.EnvironmentVariable) {
            return mergeFrom((com.google.devtools.remoteworkers.v1test2.CommandTask.Inputs.EnvironmentVariable)other);
          } else {
            super.mergeFrom(other);
            return this;
          }
        }

        public Builder mergeFrom(com.google.devtools.remoteworkers.v1test2.CommandTask.Inputs.EnvironmentVariable other) {
          if (other == com.google.devtools.remoteworkers.v1test2.CommandTask.Inputs.EnvironmentVariable.getDefaultInstance()) return this;
          if (!other.getName().isEmpty()) {
            name_ = other.name_;
            bitField0_ |= 0x00000001;
            onChanged();
          }
          if (!other.getValue().isEmpty()) {
            value_ = other.value_;
            bitField0_ |= 0x00000002;
            onChanged();
          }
          this.mergeUnknownFields(other.getUnknownFields());
          onChanged();
          return this;
        }

        @java.lang.Override
        public final boolean isInitialized() {
          return true;
        }

        @java.lang.Override
        public Builder mergeFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
          if (extensionRegistry == null) {
            throw new java.lang.NullPointerException();
          }
          try {
            boolean done = false;
            while (!done) {
              int tag = input.readTag();
              switch (tag) {
                case 0:
                  done = true;
                  break;
                case 10: {
                  name_ = input.readStringRequireUtf8();
                  bitField0_ |= 0x00000001;
                  break;
                } // case 10
                case 18: {
                  value_ = input.readStringRequireUtf8();
                  bitField0_ |= 0x00000002;
                  break;
                } // case 18
                default: {
                  if (!super.parseUnknownField(input, extensionRegistry, tag)) {
                    done = true; // was an endgroup tag
                  }
                  break;
                } // default:
              } // switch (tag)
            } // while (!done)
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            throw e.unwrapIOException();
          } finally {
            onChanged();
          } // finally
          return this;
        }
        private int bitField0_;

        private java.lang.Object name_ = "";
        /**
         * <pre>
         * The envvar name.
         * </pre>
         *
         * <code>string name = 1;</code>
         * @return The name.
         */
        public java.lang.String getName() {
          java.lang.Object ref = name_;
          if (!(ref instanceof java.lang.String)) {
            com.google.protobuf.ByteString bs =
                (com.google.protobuf.ByteString) ref;
            java.lang.String s = bs.toStringUtf8();
            name_ = s;
            return s;
          } else {
            return (java.lang.String) ref;
          }
        }
        /**
         * <pre>
         * The envvar name.
         * </pre>
         *
         * <code>string name = 1;</code>
         * @return The bytes for name.
         */
        public com.google.protobuf.ByteString
            getNameBytes() {
          java.lang.Object ref = name_;
          if (ref instanceof String) {
            com.google.protobuf.ByteString b = 
                com.google.protobuf.ByteString.copyFromUtf8(
                    (java.lang.String) ref);
            name_ = b;
            return b;
          } else {
            return (com.google.protobuf.ByteString) ref;
          }
        }
        /**
         * <pre>
         * The envvar name.
         * </pre>
         *
         * <code>string name = 1;</code>
         * @param value The name to set.
         * @return This builder for chaining.
         */
        public Builder setName(
            java.lang.String value) {
          if (value == null) { throw new NullPointerException(); }
          name_ = value;
          bitField0_ |= 0x00000001;
          onChanged();
          return this;
        }
        /**
         * <pre>
         * The envvar name.
         * </pre>
         *
         * <code>string name = 1;</code>
         * @return This builder for chaining.
         */
        public Builder clearName() {
          name_ = getDefaultInstance().getName();
          bitField0_ = (bitField0_ & ~0x00000001);
          onChanged();
          return this;
        }
        /**
         * <pre>
         * The envvar name.
         * </pre>
         *
         * <code>string name = 1;</code>
         * @param value The bytes for name to set.
         * @return This builder for chaining.
         */
        public Builder setNameBytes(
            com.google.protobuf.ByteString value) {
          if (value == null) { throw new NullPointerException(); }
          checkByteStringIsUtf8(value);
          name_ = value;
          bitField0_ |= 0x00000001;
          onChanged();
          return this;
        }

        private java.lang.Object value_ = "";
        /**
         * <pre>
         * The envvar value.
         * </pre>
         *
         * <code>string value = 2;</code>
         * @return The value.
         */
        public java.lang.String getValue() {
          java.lang.Object ref = value_;
          if (!(ref instanceof java.lang.String)) {
            com.google.protobuf.ByteString bs =
                (com.google.protobuf.ByteString) ref;
            java.lang.String s = bs.toStringUtf8();
            value_ = s;
            return s;
          } else {
            return (java.lang.String) ref;
          }
        }
        /**
         * <pre>
         * The envvar value.
         * </pre>
         *
         * <code>string value = 2;</code>
         * @return The bytes for value.
         */
        public com.google.protobuf.ByteString
            getValueBytes() {
          java.lang.Object ref = value_;
          if (ref instanceof String) {
            com.google.protobuf.ByteString b = 
                com.google.protobuf.ByteString.copyFromUtf8(
                    (java.lang.String) ref);
            value_ = b;
            return b;
          } else {
            return (com.google.protobuf.ByteString) ref;
          }
        }
        /**
         * <pre>
         * The envvar value.
         * </pre>
         *
         * <code>string value = 2;</code>
         * @param value The value to set.
         * @return This builder for chaining.
         */
        public Builder setValue(
            java.lang.String value) {
          if (value == null) { throw new NullPointerException(); }
          value_ = value;
          bitField0_ |= 0x00000002;
          onChanged();
          return this;
        }
        /**
         * <pre>
         * The envvar value.
         * </pre>
         *
         * <code>string value = 2;</code>
         * @return This builder for chaining.
         */
        public Builder clearValue() {
          value_ = getDefaultInstance().getValue();
          bitField0_ = (bitField0_ & ~0x00000002);
          onChanged();
          return this;
        }
        /**
         * <pre>
         * The envvar value.
         * </pre>
         *
         * <code>string value = 2;</code>
         * @param value The bytes for value to set.
         * @return This builder for chaining.
         */
        public Builder setValueBytes(
            com.google.protobuf.ByteString value) {
          if (value == null) { throw new NullPointerException(); }
          checkByteStringIsUtf8(value);
          value_ = value;
          bitField0_ |= 0x00000002;
          onChanged();
          return this;
        }
        @java.lang.Override
        public final Builder setUnknownFields(
            final com.google.protobuf.UnknownFieldSet unknownFields) {
          return super.setUnknownFields(unknownFields);
        }

        @java.lang.Override
        public final Builder mergeUnknownFields(
            final com.google.protobuf.UnknownFieldSet unknownFields) {
          return super.mergeUnknownFields(unknownFields);
        }


        // @@protoc_insertion_point(builder_scope:google.devtools.remoteworkers.v1test2.CommandTask.Inputs.EnvironmentVariable)
      }

      // @@protoc_insertion_point(class_scope:google.devtools.remoteworkers.v1test2.CommandTask.Inputs.EnvironmentVariable)
      private static final com.google.devtools.remoteworkers.v1test2.CommandTask.Inputs.EnvironmentVariable DEFAULT_INSTANCE;
      static {
        DEFAULT_INSTANCE = new com.google.devtools.remoteworkers.v1test2.CommandTask.Inputs.EnvironmentVariable();
      }

      public static com.google.devtools.remoteworkers.v1test2.CommandTask.Inputs.EnvironmentVariable getDefaultInstance() {
        return DEFAULT_INSTANCE;
      }

      private static final com.google.protobuf.Parser<EnvironmentVariable>
          PARSER = new com.google.protobuf.AbstractParser<EnvironmentVariable>() {
        @java.lang.Override
        public EnvironmentVariable parsePartialFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
          Builder builder = newBuilder();
          try {
            builder.mergeFrom(input, extensionRegistry);
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            throw e.setUnfinishedMessage(builder.buildPartial());
          } catch (com.google.protobuf.UninitializedMessageException e) {
            throw e.asInvalidProtocolBufferException().setUnfinishedMessage(builder.buildPartial());
          } catch (java.io.IOException e) {
            throw new com.google.protobuf.InvalidProtocolBufferException(e)
                .setUnfinishedMessage(builder.buildPartial());
          }
          return builder.buildPartial();
        }
      };

      public static com.google.protobuf.Parser<EnvironmentVariable> parser() {
        return PARSER;
      }

      @java.lang.Override
      public com.google.protobuf.Parser<EnvironmentVariable> getParserForType() {
        return PARSER;
      }

      @java.lang.Override
      public com.google.devtools.remoteworkers.v1test2.CommandTask.Inputs.EnvironmentVariable getDefaultInstanceForType() {
        return DEFAULT_INSTANCE;
      }

    }

    public static final int ARGUMENTS_FIELD_NUMBER = 1;
    @SuppressWarnings("serial")
    private com.google.protobuf.LazyStringList arguments_;
    /**
     * <pre>
     * The command itself to run (e.g., argv).
     * This field should be passed directly to the underlying operating system,
     * and so it must be sensible to that operating system. For example, on
     * Windows, the first argument might be "C:&#92;Windows&#92;System32&#92;ping.exe" -
     * that is, using drive letters and backslashes. A command for a *nix
     * system, on the other hand, would use forward slashes.
     * All other fields in the RWAPI must consistently use forward slashes,
     * since those fields may be interpretted by both the service and the bot.
     * </pre>
     *
     * <code>repeated string arguments = 1;</code>
     * @return A list containing the arguments.
     */
    public com.google.protobuf.ProtocolStringList
        getArgumentsList() {
      return arguments_;
    }
    /**
     * <pre>
     * The command itself to run (e.g., argv).
     * This field should be passed directly to the underlying operating system,
     * and so it must be sensible to that operating system. For example, on
     * Windows, the first argument might be "C:&#92;Windows&#92;System32&#92;ping.exe" -
     * that is, using drive letters and backslashes. A command for a *nix
     * system, on the other hand, would use forward slashes.
     * All other fields in the RWAPI must consistently use forward slashes,
     * since those fields may be interpretted by both the service and the bot.
     * </pre>
     *
     * <code>repeated string arguments = 1;</code>
     * @return The count of arguments.
     */
    public int getArgumentsCount() {
      return arguments_.size();
    }
    /**
     * <pre>
     * The command itself to run (e.g., argv).
     * This field should be passed directly to the underlying operating system,
     * and so it must be sensible to that operating system. For example, on
     * Windows, the first argument might be "C:&#92;Windows&#92;System32&#92;ping.exe" -
     * that is, using drive letters and backslashes. A command for a *nix
     * system, on the other hand, would use forward slashes.
     * All other fields in the RWAPI must consistently use forward slashes,
     * since those fields may be interpretted by both the service and the bot.
     * </pre>
     *
     * <code>repeated string arguments = 1;</code>
     * @param index The index of the element to return.
     * @return The arguments at the given index.
     */
    public java.lang.String getArguments(int index) {
      return arguments_.get(index);
    }
    /**
     * <pre>
     * The command itself to run (e.g., argv).
     * This field should be passed directly to the underlying operating system,
     * and so it must be sensible to that operating system. For example, on
     * Windows, the first argument might be "C:&#92;Windows&#92;System32&#92;ping.exe" -
     * that is, using drive letters and backslashes. A command for a *nix
     * system, on the other hand, would use forward slashes.
     * All other fields in the RWAPI must consistently use forward slashes,
     * since those fields may be interpretted by both the service and the bot.
     * </pre>
     *
     * <code>repeated string arguments = 1;</code>
     * @param index The index of the value to return.
     * @return The bytes of the arguments at the given index.
     */
    public com.google.protobuf.ByteString
        getArgumentsBytes(int index) {
      return arguments_.getByteString(index);
    }

    public static final int FILES_FIELD_NUMBER = 2;
    @SuppressWarnings("serial")
    private java.util.List<com.google.devtools.remoteworkers.v1test2.Digest> files_;
    /**
     * <pre>
     * The input filesystem to be set up prior to the task beginning. The
     * contents should be a repeated set of FileMetadata messages though other
     * formats are allowed if better for the implementation (eg, a LUCI-style
     * .isolated file).
     * This field is repeated since implementations might want to cache the
     * metadata, in which case it may be useful to break up portions of the
     * filesystem that change frequently (eg, specific input files) from those
     * that don't (eg, standard header files).
     * </pre>
     *
     * <code>repeated .google.devtools.remoteworkers.v1test2.Digest files = 2;</code>
     */
    @java.lang.Override
    public java.util.List<com.google.devtools.remoteworkers.v1test2.Digest> getFilesList() {
      return files_;
    }
    /**
     * <pre>
     * The input filesystem to be set up prior to the task beginning. The
     * contents should be a repeated set of FileMetadata messages though other
     * formats are allowed if better for the implementation (eg, a LUCI-style
     * .isolated file).
     * This field is repeated since implementations might want to cache the
     * metadata, in which case it may be useful to break up portions of the
     * filesystem that change frequently (eg, specific input files) from those
     * that don't (eg, standard header files).
     * </pre>
     *
     * <code>repeated .google.devtools.remoteworkers.v1test2.Digest files = 2;</code>
     */
    @java.lang.Override
    public java.util.List<? extends com.google.devtools.remoteworkers.v1test2.DigestOrBuilder> 
        getFilesOrBuilderList() {
      return files_;
    }
    /**
     * <pre>
     * The input filesystem to be set up prior to the task beginning. The
     * contents should be a repeated set of FileMetadata messages though other
     * formats are allowed if better for the implementation (eg, a LUCI-style
     * .isolated file).
     * This field is repeated since implementations might want to cache the
     * metadata, in which case it may be useful to break up portions of the
     * filesystem that change frequently (eg, specific input files) from those
     * that don't (eg, standard header files).
     * </pre>
     *
     * <code>repeated .google.devtools.remoteworkers.v1test2.Digest files = 2;</code>
     */
    @java.lang.Override
    public int getFilesCount() {
      return files_.size();
    }
    /**
     * <pre>
     * The input filesystem to be set up prior to the task beginning. The
     * contents should be a repeated set of FileMetadata messages though other
     * formats are allowed if better for the implementation (eg, a LUCI-style
     * .isolated file).
     * This field is repeated since implementations might want to cache the
     * metadata, in which case it may be useful to break up portions of the
     * filesystem that change frequently (eg, specific input files) from those
     * that don't (eg, standard header files).
     * </pre>
     *
     * <code>repeated .google.devtools.remoteworkers.v1test2.Digest files = 2;</code>
     */
    @java.lang.Override
    public com.google.devtools.remoteworkers.v1test2.Digest getFiles(int index) {
      return files_.get(index);
    }
    /**
     * <pre>
     * The input filesystem to be set up prior to the task beginning. The
     * contents should be a repeated set of FileMetadata messages though other
     * formats are allowed if better for the implementation (eg, a LUCI-style
     * .isolated file).
     * This field is repeated since implementations might want to cache the
     * metadata, in which case it may be useful to break up portions of the
     * filesystem that change frequently (eg, specific input files) from those
     * that don't (eg, standard header files).
     * </pre>
     *
     * <code>repeated .google.devtools.remoteworkers.v1test2.Digest files = 2;</code>
     */
    @java.lang.Override
    public com.google.devtools.remoteworkers.v1test2.DigestOrBuilder getFilesOrBuilder(
        int index) {
      return files_.get(index);
    }

    public static final int INLINE_BLOBS_FIELD_NUMBER = 4;
    @SuppressWarnings("serial")
    private java.util.List<com.google.devtools.remoteworkers.v1test2.Blob> inlineBlobs_;
    /**
     * <pre>
     * Inline contents for blobs expected to be needed by the bot to execute the
     * task. For example, contents of entries in `files` or blobs that are
     * indirectly referenced by an entry there.
     * The bot should check against this list before downloading required task
     * inputs to reduce the number of communications between itself and the
     * remote CAS server.
     * </pre>
     *
     * <code>repeated .google.devtools.remoteworkers.v1test2.Blob inline_blobs = 4;</code>
     */
    @java.lang.Override
    public java.util.List<com.google.devtools.remoteworkers.v1test2.Blob> getInlineBlobsList() {
      return inlineBlobs_;
    }
    /**
     * <pre>
     * Inline contents for blobs expected to be needed by the bot to execute the
     * task. For example, contents of entries in `files` or blobs that are
     * indirectly referenced by an entry there.
     * The bot should check against this list before downloading required task
     * inputs to reduce the number of communications between itself and the
     * remote CAS server.
     * </pre>
     *
     * <code>repeated .google.devtools.remoteworkers.v1test2.Blob inline_blobs = 4;</code>
     */
    @java.lang.Override
    public java.util.List<? extends com.google.devtools.remoteworkers.v1test2.BlobOrBuilder> 
        getInlineBlobsOrBuilderList() {
      return inlineBlobs_;
    }
    /**
     * <pre>
     * Inline contents for blobs expected to be needed by the bot to execute the
     * task. For example, contents of entries in `files` or blobs that are
     * indirectly referenced by an entry there.
     * The bot should check against this list before downloading required task
     * inputs to reduce the number of communications between itself and the
     * remote CAS server.
     * </pre>
     *
     * <code>repeated .google.devtools.remoteworkers.v1test2.Blob inline_blobs = 4;</code>
     */
    @java.lang.Override
    public int getInlineBlobsCount() {
      return inlineBlobs_.size();
    }
    /**
     * <pre>
     * Inline contents for blobs expected to be needed by the bot to execute the
     * task. For example, contents of entries in `files` or blobs that are
     * indirectly referenced by an entry there.
     * The bot should check against this list before downloading required task
     * inputs to reduce the number of communications between itself and the
     * remote CAS server.
     * </pre>
     *
     * <code>repeated .google.devtools.remoteworkers.v1test2.Blob inline_blobs = 4;</code>
     */
    @java.lang.Override
    public com.google.devtools.remoteworkers.v1test2.Blob getInlineBlobs(int index) {
      return inlineBlobs_.get(index);
    }
    /**
     * <pre>
     * Inline contents for blobs expected to be needed by the bot to execute the
     * task. For example, contents of entries in `files` or blobs that are
     * indirectly referenced by an entry there.
     * The bot should check against this list before downloading required task
     * inputs to reduce the number of communications between itself and the
     * remote CAS server.
     * </pre>
     *
     * <code>repeated .google.devtools.remoteworkers.v1test2.Blob inline_blobs = 4;</code>
     */
    @java.lang.Override
    public com.google.devtools.remoteworkers.v1test2.BlobOrBuilder getInlineBlobsOrBuilder(
        int index) {
      return inlineBlobs_.get(index);
    }

    public static final int ENVIRONMENT_VARIABLES_FIELD_NUMBER = 3;
    @SuppressWarnings("serial")
    private java.util.List<com.google.devtools.remoteworkers.v1test2.CommandTask.Inputs.EnvironmentVariable> environmentVariables_;
    /**
     * <pre>
     * All environment variables required by the task.
     * </pre>
     *
     * <code>repeated .google.devtools.remoteworkers.v1test2.CommandTask.Inputs.EnvironmentVariable environment_variables = 3;</code>
     */
    @java.lang.Override
    public java.util.List<com.google.devtools.remoteworkers.v1test2.CommandTask.Inputs.EnvironmentVariable> getEnvironmentVariablesList() {
      return environmentVariables_;
    }
    /**
     * <pre>
     * All environment variables required by the task.
     * </pre>
     *
     * <code>repeated .google.devtools.remoteworkers.v1test2.CommandTask.Inputs.EnvironmentVariable environment_variables = 3;</code>
     */
    @java.lang.Override
    public java.util.List<? extends com.google.devtools.remoteworkers.v1test2.CommandTask.Inputs.EnvironmentVariableOrBuilder> 
        getEnvironmentVariablesOrBuilderList() {
      return environmentVariables_;
    }
    /**
     * <pre>
     * All environment variables required by the task.
     * </pre>
     *
     * <code>repeated .google.devtools.remoteworkers.v1test2.CommandTask.Inputs.EnvironmentVariable environment_variables = 3;</code>
     */
    @java.lang.Override
    public int getEnvironmentVariablesCount() {
      return environmentVariables_.size();
    }
    /**
     * <pre>
     * All environment variables required by the task.
     * </pre>
     *
     * <code>repeated .google.devtools.remoteworkers.v1test2.CommandTask.Inputs.EnvironmentVariable environment_variables = 3;</code>
     */
    @java.lang.Override
    public com.google.devtools.remoteworkers.v1test2.CommandTask.Inputs.EnvironmentVariable getEnvironmentVariables(int index) {
      return environmentVariables_.get(index);
    }
    /**
     * <pre>
     * All environment variables required by the task.
     * </pre>
     *
     * <code>repeated .google.devtools.remoteworkers.v1test2.CommandTask.Inputs.EnvironmentVariable environment_variables = 3;</code>
     */
    @java.lang.Override
    public com.google.devtools.remoteworkers.v1test2.CommandTask.Inputs.EnvironmentVariableOrBuilder getEnvironmentVariablesOrBuilder(
        int index) {
      return environmentVariables_.get(index);
    }

    public static final int WORKING_DIRECTORY_FIELD_NUMBER = 5;
    @SuppressWarnings("serial")
    private volatile java.lang.Object workingDirectory_ = "";
    /**
     * <pre>
     * Directory from which a command is executed. It is a relative directory
     * with respect to the bot's working directory (i.e., "./"). If it is
     * non-empty, then it must exist under "./". Otherwise, "./" will be used.
     * </pre>
     *
     * <code>string working_directory = 5;</code>
     * @return The workingDirectory.
     */
    @java.lang.Override
    public java.lang.String getWorkingDirectory() {
      java.lang.Object ref = workingDirectory_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        workingDirectory_ = s;
        return s;
      }
    }
    /**
     * <pre>
     * Directory from which a command is executed. It is a relative directory
     * with respect to the bot's working directory (i.e., "./"). If it is
     * non-empty, then it must exist under "./". Otherwise, "./" will be used.
     * </pre>
     *
     * <code>string working_directory = 5;</code>
     * @return The bytes for workingDirectory.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString
        getWorkingDirectoryBytes() {
      java.lang.Object ref = workingDirectory_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        workingDirectory_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      for (int i = 0; i < arguments_.size(); i++) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 1, arguments_.getRaw(i));
      }
      for (int i = 0; i < files_.size(); i++) {
        output.writeMessage(2, files_.get(i));
      }
      for (int i = 0; i < environmentVariables_.size(); i++) {
        output.writeMessage(3, environmentVariables_.get(i));
      }
      for (int i = 0; i < inlineBlobs_.size(); i++) {
        output.writeMessage(4, inlineBlobs_.get(i));
      }
      if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(workingDirectory_)) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 5, workingDirectory_);
      }
      getUnknownFields().writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      {
        int dataSize = 0;
        for (int i = 0; i < arguments_.size(); i++) {
          dataSize += computeStringSizeNoTag(arguments_.getRaw(i));
        }
        size += dataSize;
        size += 1 * getArgumentsList().size();
      }
      for (int i = 0; i < files_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(2, files_.get(i));
      }
      for (int i = 0; i < environmentVariables_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(3, environmentVariables_.get(i));
      }
      for (int i = 0; i < inlineBlobs_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(4, inlineBlobs_.get(i));
      }
      if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(workingDirectory_)) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(5, workingDirectory_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof com.google.devtools.remoteworkers.v1test2.CommandTask.Inputs)) {
        return super.equals(obj);
      }
      com.google.devtools.remoteworkers.v1test2.CommandTask.Inputs other = (com.google.devtools.remoteworkers.v1test2.CommandTask.Inputs) obj;

      if (!getArgumentsList()
          .equals(other.getArgumentsList())) return false;
      if (!getFilesList()
          .equals(other.getFilesList())) return false;
      if (!getInlineBlobsList()
          .equals(other.getInlineBlobsList())) return false;
      if (!getEnvironmentVariablesList()
          .equals(other.getEnvironmentVariablesList())) return false;
      if (!getWorkingDirectory()
          .equals(other.getWorkingDirectory())) return false;
      if (!getUnknownFields().equals(other.getUnknownFields())) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      if (getArgumentsCount() > 0) {
        hash = (37 * hash) + ARGUMENTS_FIELD_NUMBER;
        hash = (53 * hash) + getArgumentsList().hashCode();
      }
      if (getFilesCount() > 0) {
        hash = (37 * hash) + FILES_FIELD_NUMBER;
        hash = (53 * hash) + getFilesList().hashCode();
      }
      if (getInlineBlobsCount() > 0) {
        hash = (37 * hash) + INLINE_BLOBS_FIELD_NUMBER;
        hash = (53 * hash) + getInlineBlobsList().hashCode();
      }
      if (getEnvironmentVariablesCount() > 0) {
        hash = (37 * hash) + ENVIRONMENT_VARIABLES_FIELD_NUMBER;
        hash = (53 * hash) + getEnvironmentVariablesList().hashCode();
      }
      hash = (37 * hash) + WORKING_DIRECTORY_FIELD_NUMBER;
      hash = (53 * hash) + getWorkingDirectory().hashCode();
      hash = (29 * hash) + getUnknownFields().hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static com.google.devtools.remoteworkers.v1test2.CommandTask.Inputs parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.google.devtools.remoteworkers.v1test2.CommandTask.Inputs parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.google.devtools.remoteworkers.v1test2.CommandTask.Inputs parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.google.devtools.remoteworkers.v1test2.CommandTask.Inputs parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.google.devtools.remoteworkers.v1test2.CommandTask.Inputs parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.google.devtools.remoteworkers.v1test2.CommandTask.Inputs parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.google.devtools.remoteworkers.v1test2.CommandTask.Inputs parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static com.google.devtools.remoteworkers.v1test2.CommandTask.Inputs parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static com.google.devtools.remoteworkers.v1test2.CommandTask.Inputs parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static com.google.devtools.remoteworkers.v1test2.CommandTask.Inputs parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static com.google.devtools.remoteworkers.v1test2.CommandTask.Inputs parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static com.google.devtools.remoteworkers.v1test2.CommandTask.Inputs parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(com.google.devtools.remoteworkers.v1test2.CommandTask.Inputs prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * <pre>
     * Describes the inputs to a shell-style task.
     * </pre>
     *
     * Protobuf type {@code google.devtools.remoteworkers.v1test2.CommandTask.Inputs}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:google.devtools.remoteworkers.v1test2.CommandTask.Inputs)
        com.google.devtools.remoteworkers.v1test2.CommandTask.InputsOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return com.google.devtools.remoteworkers.v1test2.RemoteWorkersCommands.internal_static_google_devtools_remoteworkers_v1test2_CommandTask_Inputs_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return com.google.devtools.remoteworkers.v1test2.RemoteWorkersCommands.internal_static_google_devtools_remoteworkers_v1test2_CommandTask_Inputs_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                com.google.devtools.remoteworkers.v1test2.CommandTask.Inputs.class, com.google.devtools.remoteworkers.v1test2.CommandTask.Inputs.Builder.class);
      }

      // Construct using com.google.devtools.remoteworkers.v1test2.CommandTask.Inputs.newBuilder()
      private Builder() {

      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);

      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        bitField0_ = 0;
        arguments_ = com.google.protobuf.LazyStringArrayList.EMPTY;
        bitField0_ = (bitField0_ & ~0x00000001);
        if (filesBuilder_ == null) {
          files_ = java.util.Collections.emptyList();
        } else {
          files_ = null;
          filesBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000002);
        if (inlineBlobsBuilder_ == null) {
          inlineBlobs_ = java.util.Collections.emptyList();
        } else {
          inlineBlobs_ = null;
          inlineBlobsBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000004);
        if (environmentVariablesBuilder_ == null) {
          environmentVariables_ = java.util.Collections.emptyList();
        } else {
          environmentVariables_ = null;
          environmentVariablesBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000008);
        workingDirectory_ = "";
        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.google.devtools.remoteworkers.v1test2.RemoteWorkersCommands.internal_static_google_devtools_remoteworkers_v1test2_CommandTask_Inputs_descriptor;
      }

      @java.lang.Override
      public com.google.devtools.remoteworkers.v1test2.CommandTask.Inputs getDefaultInstanceForType() {
        return com.google.devtools.remoteworkers.v1test2.CommandTask.Inputs.getDefaultInstance();
      }

      @java.lang.Override
      public com.google.devtools.remoteworkers.v1test2.CommandTask.Inputs build() {
        com.google.devtools.remoteworkers.v1test2.CommandTask.Inputs result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public com.google.devtools.remoteworkers.v1test2.CommandTask.Inputs buildPartial() {
        com.google.devtools.remoteworkers.v1test2.CommandTask.Inputs result = new com.google.devtools.remoteworkers.v1test2.CommandTask.Inputs(this);
        buildPartialRepeatedFields(result);
        if (bitField0_ != 0) { buildPartial0(result); }
        onBuilt();
        return result;
      }

      private void buildPartialRepeatedFields(com.google.devtools.remoteworkers.v1test2.CommandTask.Inputs result) {
        if (((bitField0_ & 0x00000001) != 0)) {
          arguments_ = arguments_.getUnmodifiableView();
          bitField0_ = (bitField0_ & ~0x00000001);
        }
        result.arguments_ = arguments_;
        if (filesBuilder_ == null) {
          if (((bitField0_ & 0x00000002) != 0)) {
            files_ = java.util.Collections.unmodifiableList(files_);
            bitField0_ = (bitField0_ & ~0x00000002);
          }
          result.files_ = files_;
        } else {
          result.files_ = filesBuilder_.build();
        }
        if (inlineBlobsBuilder_ == null) {
          if (((bitField0_ & 0x00000004) != 0)) {
            inlineBlobs_ = java.util.Collections.unmodifiableList(inlineBlobs_);
            bitField0_ = (bitField0_ & ~0x00000004);
          }
          result.inlineBlobs_ = inlineBlobs_;
        } else {
          result.inlineBlobs_ = inlineBlobsBuilder_.build();
        }
        if (environmentVariablesBuilder_ == null) {
          if (((bitField0_ & 0x00000008) != 0)) {
            environmentVariables_ = java.util.Collections.unmodifiableList(environmentVariables_);
            bitField0_ = (bitField0_ & ~0x00000008);
          }
          result.environmentVariables_ = environmentVariables_;
        } else {
          result.environmentVariables_ = environmentVariablesBuilder_.build();
        }
      }

      private void buildPartial0(com.google.devtools.remoteworkers.v1test2.CommandTask.Inputs result) {
        int from_bitField0_ = bitField0_;
        if (((from_bitField0_ & 0x00000010) != 0)) {
          result.workingDirectory_ = workingDirectory_;
        }
      }

      @java.lang.Override
      public Builder clone() {
        return super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.google.devtools.remoteworkers.v1test2.CommandTask.Inputs) {
          return mergeFrom((com.google.devtools.remoteworkers.v1test2.CommandTask.Inputs)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(com.google.devtools.remoteworkers.v1test2.CommandTask.Inputs other) {
        if (other == com.google.devtools.remoteworkers.v1test2.CommandTask.Inputs.getDefaultInstance()) return this;
        if (!other.arguments_.isEmpty()) {
          if (arguments_.isEmpty()) {
            arguments_ = other.arguments_;
            bitField0_ = (bitField0_ & ~0x00000001);
          } else {
            ensureArgumentsIsMutable();
            arguments_.addAll(other.arguments_);
          }
          onChanged();
        }
        if (filesBuilder_ == null) {
          if (!other.files_.isEmpty()) {
            if (files_.isEmpty()) {
              files_ = other.files_;
              bitField0_ = (bitField0_ & ~0x00000002);
            } else {
              ensureFilesIsMutable();
              files_.addAll(other.files_);
            }
            onChanged();
          }
        } else {
          if (!other.files_.isEmpty()) {
            if (filesBuilder_.isEmpty()) {
              filesBuilder_.dispose();
              filesBuilder_ = null;
              files_ = other.files_;
              bitField0_ = (bitField0_ & ~0x00000002);
              filesBuilder_ = 
                com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?
                   getFilesFieldBuilder() : null;
            } else {
              filesBuilder_.addAllMessages(other.files_);
            }
          }
        }
        if (inlineBlobsBuilder_ == null) {
          if (!other.inlineBlobs_.isEmpty()) {
            if (inlineBlobs_.isEmpty()) {
              inlineBlobs_ = other.inlineBlobs_;
              bitField0_ = (bitField0_ & ~0x00000004);
            } else {
              ensureInlineBlobsIsMutable();
              inlineBlobs_.addAll(other.inlineBlobs_);
            }
            onChanged();
          }
        } else {
          if (!other.inlineBlobs_.isEmpty()) {
            if (inlineBlobsBuilder_.isEmpty()) {
              inlineBlobsBuilder_.dispose();
              inlineBlobsBuilder_ = null;
              inlineBlobs_ = other.inlineBlobs_;
              bitField0_ = (bitField0_ & ~0x00000004);
              inlineBlobsBuilder_ = 
                com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?
                   getInlineBlobsFieldBuilder() : null;
            } else {
              inlineBlobsBuilder_.addAllMessages(other.inlineBlobs_);
            }
          }
        }
        if (environmentVariablesBuilder_ == null) {
          if (!other.environmentVariables_.isEmpty()) {
            if (environmentVariables_.isEmpty()) {
              environmentVariables_ = other.environmentVariables_;
              bitField0_ = (bitField0_ & ~0x00000008);
            } else {
              ensureEnvironmentVariablesIsMutable();
              environmentVariables_.addAll(other.environmentVariables_);
            }
            onChanged();
          }
        } else {
          if (!other.environmentVariables_.isEmpty()) {
            if (environmentVariablesBuilder_.isEmpty()) {
              environmentVariablesBuilder_.dispose();
              environmentVariablesBuilder_ = null;
              environmentVariables_ = other.environmentVariables_;
              bitField0_ = (bitField0_ & ~0x00000008);
              environmentVariablesBuilder_ = 
                com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?
                   getEnvironmentVariablesFieldBuilder() : null;
            } else {
              environmentVariablesBuilder_.addAllMessages(other.environmentVariables_);
            }
          }
        }
        if (!other.getWorkingDirectory().isEmpty()) {
          workingDirectory_ = other.workingDirectory_;
          bitField0_ |= 0x00000010;
          onChanged();
        }
        this.mergeUnknownFields(other.getUnknownFields());
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        if (extensionRegistry == null) {
          throw new java.lang.NullPointerException();
        }
        try {
          boolean done = false;
          while (!done) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                done = true;
                break;
              case 10: {
                java.lang.String s = input.readStringRequireUtf8();
                ensureArgumentsIsMutable();
                arguments_.add(s);
                break;
              } // case 10
              case 18: {
                com.google.devtools.remoteworkers.v1test2.Digest m =
                    input.readMessage(
                        com.google.devtools.remoteworkers.v1test2.Digest.parser(),
                        extensionRegistry);
                if (filesBuilder_ == null) {
                  ensureFilesIsMutable();
                  files_.add(m);
                } else {
                  filesBuilder_.addMessage(m);
                }
                break;
              } // case 18
              case 26: {
                com.google.devtools.remoteworkers.v1test2.CommandTask.Inputs.EnvironmentVariable m =
                    input.readMessage(
                        com.google.devtools.remoteworkers.v1test2.CommandTask.Inputs.EnvironmentVariable.parser(),
                        extensionRegistry);
                if (environmentVariablesBuilder_ == null) {
                  ensureEnvironmentVariablesIsMutable();
                  environmentVariables_.add(m);
                } else {
                  environmentVariablesBuilder_.addMessage(m);
                }
                break;
              } // case 26
              case 34: {
                com.google.devtools.remoteworkers.v1test2.Blob m =
                    input.readMessage(
                        com.google.devtools.remoteworkers.v1test2.Blob.parser(),
                        extensionRegistry);
                if (inlineBlobsBuilder_ == null) {
                  ensureInlineBlobsIsMutable();
                  inlineBlobs_.add(m);
                } else {
                  inlineBlobsBuilder_.addMessage(m);
                }
                break;
              } // case 34
              case 42: {
                workingDirectory_ = input.readStringRequireUtf8();
                bitField0_ |= 0x00000010;
                break;
              } // case 42
              default: {
                if (!super.parseUnknownField(input, extensionRegistry, tag)) {
                  done = true; // was an endgroup tag
                }
                break;
              } // default:
            } // switch (tag)
          } // while (!done)
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.unwrapIOException();
        } finally {
          onChanged();
        } // finally
        return this;
      }
      private int bitField0_;

      private com.google.protobuf.LazyStringList arguments_ = com.google.protobuf.LazyStringArrayList.EMPTY;
      private void ensureArgumentsIsMutable() {
        if (!((bitField0_ & 0x00000001) != 0)) {
          arguments_ = new com.google.protobuf.LazyStringArrayList(arguments_);
          bitField0_ |= 0x00000001;
         }
      }
      /**
       * <pre>
       * The command itself to run (e.g., argv).
       * This field should be passed directly to the underlying operating system,
       * and so it must be sensible to that operating system. For example, on
       * Windows, the first argument might be "C:&#92;Windows&#92;System32&#92;ping.exe" -
       * that is, using drive letters and backslashes. A command for a *nix
       * system, on the other hand, would use forward slashes.
       * All other fields in the RWAPI must consistently use forward slashes,
       * since those fields may be interpretted by both the service and the bot.
       * </pre>
       *
       * <code>repeated string arguments = 1;</code>
       * @return A list containing the arguments.
       */
      public com.google.protobuf.ProtocolStringList
          getArgumentsList() {
        return arguments_.getUnmodifiableView();
      }
      /**
       * <pre>
       * The command itself to run (e.g., argv).
       * This field should be passed directly to the underlying operating system,
       * and so it must be sensible to that operating system. For example, on
       * Windows, the first argument might be "C:&#92;Windows&#92;System32&#92;ping.exe" -
       * that is, using drive letters and backslashes. A command for a *nix
       * system, on the other hand, would use forward slashes.
       * All other fields in the RWAPI must consistently use forward slashes,
       * since those fields may be interpretted by both the service and the bot.
       * </pre>
       *
       * <code>repeated string arguments = 1;</code>
       * @return The count of arguments.
       */
      public int getArgumentsCount() {
        return arguments_.size();
      }
      /**
       * <pre>
       * The command itself to run (e.g., argv).
       * This field should be passed directly to the underlying operating system,
       * and so it must be sensible to that operating system. For example, on
       * Windows, the first argument might be "C:&#92;Windows&#92;System32&#92;ping.exe" -
       * that is, using drive letters and backslashes. A command for a *nix
       * system, on the other hand, would use forward slashes.
       * All other fields in the RWAPI must consistently use forward slashes,
       * since those fields may be interpretted by both the service and the bot.
       * </pre>
       *
       * <code>repeated string arguments = 1;</code>
       * @param index The index of the element to return.
       * @return The arguments at the given index.
       */
      public java.lang.String getArguments(int index) {
        return arguments_.get(index);
      }
      /**
       * <pre>
       * The command itself to run (e.g., argv).
       * This field should be passed directly to the underlying operating system,
       * and so it must be sensible to that operating system. For example, on
       * Windows, the first argument might be "C:&#92;Windows&#92;System32&#92;ping.exe" -
       * that is, using drive letters and backslashes. A command for a *nix
       * system, on the other hand, would use forward slashes.
       * All other fields in the RWAPI must consistently use forward slashes,
       * since those fields may be interpretted by both the service and the bot.
       * </pre>
       *
       * <code>repeated string arguments = 1;</code>
       * @param index The index of the value to return.
       * @return The bytes of the arguments at the given index.
       */
      public com.google.protobuf.ByteString
          getArgumentsBytes(int index) {
        return arguments_.getByteString(index);
      }
      /**
       * <pre>
       * The command itself to run (e.g., argv).
       * This field should be passed directly to the underlying operating system,
       * and so it must be sensible to that operating system. For example, on
       * Windows, the first argument might be "C:&#92;Windows&#92;System32&#92;ping.exe" -
       * that is, using drive letters and backslashes. A command for a *nix
       * system, on the other hand, would use forward slashes.
       * All other fields in the RWAPI must consistently use forward slashes,
       * since those fields may be interpretted by both the service and the bot.
       * </pre>
       *
       * <code>repeated string arguments = 1;</code>
       * @param index The index to set the value at.
       * @param value The arguments to set.
       * @return This builder for chaining.
       */
      public Builder setArguments(
          int index, java.lang.String value) {
        if (value == null) { throw new NullPointerException(); }
        ensureArgumentsIsMutable();
        arguments_.set(index, value);
        onChanged();
        return this;
      }
      /**
       * <pre>
       * The command itself to run (e.g., argv).
       * This field should be passed directly to the underlying operating system,
       * and so it must be sensible to that operating system. For example, on
       * Windows, the first argument might be "C:&#92;Windows&#92;System32&#92;ping.exe" -
       * that is, using drive letters and backslashes. A command for a *nix
       * system, on the other hand, would use forward slashes.
       * All other fields in the RWAPI must consistently use forward slashes,
       * since those fields may be interpretted by both the service and the bot.
       * </pre>
       *
       * <code>repeated string arguments = 1;</code>
       * @param value The arguments to add.
       * @return This builder for chaining.
       */
      public Builder addArguments(
          java.lang.String value) {
        if (value == null) { throw new NullPointerException(); }
        ensureArgumentsIsMutable();
        arguments_.add(value);
        onChanged();
        return this;
      }
      /**
       * <pre>
       * The command itself to run (e.g., argv).
       * This field should be passed directly to the underlying operating system,
       * and so it must be sensible to that operating system. For example, on
       * Windows, the first argument might be "C:&#92;Windows&#92;System32&#92;ping.exe" -
       * that is, using drive letters and backslashes. A command for a *nix
       * system, on the other hand, would use forward slashes.
       * All other fields in the RWAPI must consistently use forward slashes,
       * since those fields may be interpretted by both the service and the bot.
       * </pre>
       *
       * <code>repeated string arguments = 1;</code>
       * @param values The arguments to add.
       * @return This builder for chaining.
       */
      public Builder addAllArguments(
          java.lang.Iterable<java.lang.String> values) {
        ensureArgumentsIsMutable();
        com.google.protobuf.AbstractMessageLite.Builder.addAll(
            values, arguments_);
        onChanged();
        return this;
      }
      /**
       * <pre>
       * The command itself to run (e.g., argv).
       * This field should be passed directly to the underlying operating system,
       * and so it must be sensible to that operating system. For example, on
       * Windows, the first argument might be "C:&#92;Windows&#92;System32&#92;ping.exe" -
       * that is, using drive letters and backslashes. A command for a *nix
       * system, on the other hand, would use forward slashes.
       * All other fields in the RWAPI must consistently use forward slashes,
       * since those fields may be interpretted by both the service and the bot.
       * </pre>
       *
       * <code>repeated string arguments = 1;</code>
       * @return This builder for chaining.
       */
      public Builder clearArguments() {
        arguments_ = com.google.protobuf.LazyStringArrayList.EMPTY;
        bitField0_ = (bitField0_ & ~0x00000001);
        onChanged();
        return this;
      }
      /**
       * <pre>
       * The command itself to run (e.g., argv).
       * This field should be passed directly to the underlying operating system,
       * and so it must be sensible to that operating system. For example, on
       * Windows, the first argument might be "C:&#92;Windows&#92;System32&#92;ping.exe" -
       * that is, using drive letters and backslashes. A command for a *nix
       * system, on the other hand, would use forward slashes.
       * All other fields in the RWAPI must consistently use forward slashes,
       * since those fields may be interpretted by both the service and the bot.
       * </pre>
       *
       * <code>repeated string arguments = 1;</code>
       * @param value The bytes of the arguments to add.
       * @return This builder for chaining.
       */
      public Builder addArgumentsBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) { throw new NullPointerException(); }
        checkByteStringIsUtf8(value);
        ensureArgumentsIsMutable();
        arguments_.add(value);
        onChanged();
        return this;
      }

      private java.util.List<com.google.devtools.remoteworkers.v1test2.Digest> files_ =
        java.util.Collections.emptyList();
      private void ensureFilesIsMutable() {
        if (!((bitField0_ & 0x00000002) != 0)) {
          files_ = new java.util.ArrayList<com.google.devtools.remoteworkers.v1test2.Digest>(files_);
          bitField0_ |= 0x00000002;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilderV3<
          com.google.devtools.remoteworkers.v1test2.Digest, com.google.devtools.remoteworkers.v1test2.Digest.Builder, com.google.devtools.remoteworkers.v1test2.DigestOrBuilder> filesBuilder_;

      /**
       * <pre>
       * The input filesystem to be set up prior to the task beginning. The
       * contents should be a repeated set of FileMetadata messages though other
       * formats are allowed if better for the implementation (eg, a LUCI-style
       * .isolated file).
       * This field is repeated since implementations might want to cache the
       * metadata, in which case it may be useful to break up portions of the
       * filesystem that change frequently (eg, specific input files) from those
       * that don't (eg, standard header files).
       * </pre>
       *
       * <code>repeated .google.devtools.remoteworkers.v1test2.Digest files = 2;</code>
       */
      public java.util.List<com.google.devtools.remoteworkers.v1test2.Digest> getFilesList() {
        if (filesBuilder_ == null) {
          return java.util.Collections.unmodifiableList(files_);
        } else {
          return filesBuilder_.getMessageList();
        }
      }
      /**
       * <pre>
       * The input filesystem to be set up prior to the task beginning. The
       * contents should be a repeated set of FileMetadata messages though other
       * formats are allowed if better for the implementation (eg, a LUCI-style
       * .isolated file).
       * This field is repeated since implementations might want to cache the
       * metadata, in which case it may be useful to break up portions of the
       * filesystem that change frequently (eg, specific input files) from those
       * that don't (eg, standard header files).
       * </pre>
       *
       * <code>repeated .google.devtools.remoteworkers.v1test2.Digest files = 2;</code>
       */
      public int getFilesCount() {
        if (filesBuilder_ == null) {
          return files_.size();
        } else {
          return filesBuilder_.getCount();
        }
      }
      /**
       * <pre>
       * The input filesystem to be set up prior to the task beginning. The
       * contents should be a repeated set of FileMetadata messages though other
       * formats are allowed if better for the implementation (eg, a LUCI-style
       * .isolated file).
       * This field is repeated since implementations might want to cache the
       * metadata, in which case it may be useful to break up portions of the
       * filesystem that change frequently (eg, specific input files) from those
       * that don't (eg, standard header files).
       * </pre>
       *
       * <code>repeated .google.devtools.remoteworkers.v1test2.Digest files = 2;</code>
       */
      public com.google.devtools.remoteworkers.v1test2.Digest getFiles(int index) {
        if (filesBuilder_ == null) {
          return files_.get(index);
        } else {
          return filesBuilder_.getMessage(index);
        }
      }
      /**
       * <pre>
       * The input filesystem to be set up prior to the task beginning. The
       * contents should be a repeated set of FileMetadata messages though other
       * formats are allowed if better for the implementation (eg, a LUCI-style
       * .isolated file).
       * This field is repeated since implementations might want to cache the
       * metadata, in which case it may be useful to break up portions of the
       * filesystem that change frequently (eg, specific input files) from those
       * that don't (eg, standard header files).
       * </pre>
       *
       * <code>repeated .google.devtools.remoteworkers.v1test2.Digest files = 2;</code>
       */
      public Builder setFiles(
          int index, com.google.devtools.remoteworkers.v1test2.Digest value) {
        if (filesBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureFilesIsMutable();
          files_.set(index, value);
          onChanged();
        } else {
          filesBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <pre>
       * The input filesystem to be set up prior to the task beginning. The
       * contents should be a repeated set of FileMetadata messages though other
       * formats are allowed if better for the implementation (eg, a LUCI-style
       * .isolated file).
       * This field is repeated since implementations might want to cache the
       * metadata, in which case it may be useful to break up portions of the
       * filesystem that change frequently (eg, specific input files) from those
       * that don't (eg, standard header files).
       * </pre>
       *
       * <code>repeated .google.devtools.remoteworkers.v1test2.Digest files = 2;</code>
       */
      public Builder setFiles(
          int index, com.google.devtools.remoteworkers.v1test2.Digest.Builder builderForValue) {
        if (filesBuilder_ == null) {
          ensureFilesIsMutable();
          files_.set(index, builderForValue.build());
          onChanged();
        } else {
          filesBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       * The input filesystem to be set up prior to the task beginning. The
       * contents should be a repeated set of FileMetadata messages though other
       * formats are allowed if better for the implementation (eg, a LUCI-style
       * .isolated file).
       * This field is repeated since implementations might want to cache the
       * metadata, in which case it may be useful to break up portions of the
       * filesystem that change frequently (eg, specific input files) from those
       * that don't (eg, standard header files).
       * </pre>
       *
       * <code>repeated .google.devtools.remoteworkers.v1test2.Digest files = 2;</code>
       */
      public Builder addFiles(com.google.devtools.remoteworkers.v1test2.Digest value) {
        if (filesBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureFilesIsMutable();
          files_.add(value);
          onChanged();
        } else {
          filesBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <pre>
       * The input filesystem to be set up prior to the task beginning. The
       * contents should be a repeated set of FileMetadata messages though other
       * formats are allowed if better for the implementation (eg, a LUCI-style
       * .isolated file).
       * This field is repeated since implementations might want to cache the
       * metadata, in which case it may be useful to break up portions of the
       * filesystem that change frequently (eg, specific input files) from those
       * that don't (eg, standard header files).
       * </pre>
       *
       * <code>repeated .google.devtools.remoteworkers.v1test2.Digest files = 2;</code>
       */
      public Builder addFiles(
          int index, com.google.devtools.remoteworkers.v1test2.Digest value) {
        if (filesBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureFilesIsMutable();
          files_.add(index, value);
          onChanged();
        } else {
          filesBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <pre>
       * The input filesystem to be set up prior to the task beginning. The
       * contents should be a repeated set of FileMetadata messages though other
       * formats are allowed if better for the implementation (eg, a LUCI-style
       * .isolated file).
       * This field is repeated since implementations might want to cache the
       * metadata, in which case it may be useful to break up portions of the
       * filesystem that change frequently (eg, specific input files) from those
       * that don't (eg, standard header files).
       * </pre>
       *
       * <code>repeated .google.devtools.remoteworkers.v1test2.Digest files = 2;</code>
       */
      public Builder addFiles(
          com.google.devtools.remoteworkers.v1test2.Digest.Builder builderForValue) {
        if (filesBuilder_ == null) {
          ensureFilesIsMutable();
          files_.add(builderForValue.build());
          onChanged();
        } else {
          filesBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       * The input filesystem to be set up prior to the task beginning. The
       * contents should be a repeated set of FileMetadata messages though other
       * formats are allowed if better for the implementation (eg, a LUCI-style
       * .isolated file).
       * This field is repeated since implementations might want to cache the
       * metadata, in which case it may be useful to break up portions of the
       * filesystem that change frequently (eg, specific input files) from those
       * that don't (eg, standard header files).
       * </pre>
       *
       * <code>repeated .google.devtools.remoteworkers.v1test2.Digest files = 2;</code>
       */
      public Builder addFiles(
          int index, com.google.devtools.remoteworkers.v1test2.Digest.Builder builderForValue) {
        if (filesBuilder_ == null) {
          ensureFilesIsMutable();
          files_.add(index, builderForValue.build());
          onChanged();
        } else {
          filesBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       * The input filesystem to be set up prior to the task beginning. The
       * contents should be a repeated set of FileMetadata messages though other
       * formats are allowed if better for the implementation (eg, a LUCI-style
       * .isolated file).
       * This field is repeated since implementations might want to cache the
       * metadata, in which case it may be useful to break up portions of the
       * filesystem that change frequently (eg, specific input files) from those
       * that don't (eg, standard header files).
       * </pre>
       *
       * <code>repeated .google.devtools.remoteworkers.v1test2.Digest files = 2;</code>
       */
      public Builder addAllFiles(
          java.lang.Iterable<? extends com.google.devtools.remoteworkers.v1test2.Digest> values) {
        if (filesBuilder_ == null) {
          ensureFilesIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
              values, files_);
          onChanged();
        } else {
          filesBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <pre>
       * The input filesystem to be set up prior to the task beginning. The
       * contents should be a repeated set of FileMetadata messages though other
       * formats are allowed if better for the implementation (eg, a LUCI-style
       * .isolated file).
       * This field is repeated since implementations might want to cache the
       * metadata, in which case it may be useful to break up portions of the
       * filesystem that change frequently (eg, specific input files) from those
       * that don't (eg, standard header files).
       * </pre>
       *
       * <code>repeated .google.devtools.remoteworkers.v1test2.Digest files = 2;</code>
       */
      public Builder clearFiles() {
        if (filesBuilder_ == null) {
          files_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000002);
          onChanged();
        } else {
          filesBuilder_.clear();
        }
        return this;
      }
      /**
       * <pre>
       * The input filesystem to be set up prior to the task beginning. The
       * contents should be a repeated set of FileMetadata messages though other
       * formats are allowed if better for the implementation (eg, a LUCI-style
       * .isolated file).
       * This field is repeated since implementations might want to cache the
       * metadata, in which case it may be useful to break up portions of the
       * filesystem that change frequently (eg, specific input files) from those
       * that don't (eg, standard header files).
       * </pre>
       *
       * <code>repeated .google.devtools.remoteworkers.v1test2.Digest files = 2;</code>
       */
      public Builder removeFiles(int index) {
        if (filesBuilder_ == null) {
          ensureFilesIsMutable();
          files_.remove(index);
          onChanged();
        } else {
          filesBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <pre>
       * The input filesystem to be set up prior to the task beginning. The
       * contents should be a repeated set of FileMetadata messages though other
       * formats are allowed if better for the implementation (eg, a LUCI-style
       * .isolated file).
       * This field is repeated since implementations might want to cache the
       * metadata, in which case it may be useful to break up portions of the
       * filesystem that change frequently (eg, specific input files) from those
       * that don't (eg, standard header files).
       * </pre>
       *
       * <code>repeated .google.devtools.remoteworkers.v1test2.Digest files = 2;</code>
       */
      public com.google.devtools.remoteworkers.v1test2.Digest.Builder getFilesBuilder(
          int index) {
        return getFilesFieldBuilder().getBuilder(index);
      }
      /**
       * <pre>
       * The input filesystem to be set up prior to the task beginning. The
       * contents should be a repeated set of FileMetadata messages though other
       * formats are allowed if better for the implementation (eg, a LUCI-style
       * .isolated file).
       * This field is repeated since implementations might want to cache the
       * metadata, in which case it may be useful to break up portions of the
       * filesystem that change frequently (eg, specific input files) from those
       * that don't (eg, standard header files).
       * </pre>
       *
       * <code>repeated .google.devtools.remoteworkers.v1test2.Digest files = 2;</code>
       */
      public com.google.devtools.remoteworkers.v1test2.DigestOrBuilder getFilesOrBuilder(
          int index) {
        if (filesBuilder_ == null) {
          return files_.get(index);  } else {
          return filesBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <pre>
       * The input filesystem to be set up prior to the task beginning. The
       * contents should be a repeated set of FileMetadata messages though other
       * formats are allowed if better for the implementation (eg, a LUCI-style
       * .isolated file).
       * This field is repeated since implementations might want to cache the
       * metadata, in which case it may be useful to break up portions of the
       * filesystem that change frequently (eg, specific input files) from those
       * that don't (eg, standard header files).
       * </pre>
       *
       * <code>repeated .google.devtools.remoteworkers.v1test2.Digest files = 2;</code>
       */
      public java.util.List<? extends com.google.devtools.remoteworkers.v1test2.DigestOrBuilder> 
           getFilesOrBuilderList() {
        if (filesBuilder_ != null) {
          return filesBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(files_);
        }
      }
      /**
       * <pre>
       * The input filesystem to be set up prior to the task beginning. The
       * contents should be a repeated set of FileMetadata messages though other
       * formats are allowed if better for the implementation (eg, a LUCI-style
       * .isolated file).
       * This field is repeated since implementations might want to cache the
       * metadata, in which case it may be useful to break up portions of the
       * filesystem that change frequently (eg, specific input files) from those
       * that don't (eg, standard header files).
       * </pre>
       *
       * <code>repeated .google.devtools.remoteworkers.v1test2.Digest files = 2;</code>
       */
      public com.google.devtools.remoteworkers.v1test2.Digest.Builder addFilesBuilder() {
        return getFilesFieldBuilder().addBuilder(
            com.google.devtools.remoteworkers.v1test2.Digest.getDefaultInstance());
      }
      /**
       * <pre>
       * The input filesystem to be set up prior to the task beginning. The
       * contents should be a repeated set of FileMetadata messages though other
       * formats are allowed if better for the implementation (eg, a LUCI-style
       * .isolated file).
       * This field is repeated since implementations might want to cache the
       * metadata, in which case it may be useful to break up portions of the
       * filesystem that change frequently (eg, specific input files) from those
       * that don't (eg, standard header files).
       * </pre>
       *
       * <code>repeated .google.devtools.remoteworkers.v1test2.Digest files = 2;</code>
       */
      public com.google.devtools.remoteworkers.v1test2.Digest.Builder addFilesBuilder(
          int index) {
        return getFilesFieldBuilder().addBuilder(
            index, com.google.devtools.remoteworkers.v1test2.Digest.getDefaultInstance());
      }
      /**
       * <pre>
       * The input filesystem to be set up prior to the task beginning. The
       * contents should be a repeated set of FileMetadata messages though other
       * formats are allowed if better for the implementation (eg, a LUCI-style
       * .isolated file).
       * This field is repeated since implementations might want to cache the
       * metadata, in which case it may be useful to break up portions of the
       * filesystem that change frequently (eg, specific input files) from those
       * that don't (eg, standard header files).
       * </pre>
       *
       * <code>repeated .google.devtools.remoteworkers.v1test2.Digest files = 2;</code>
       */
      public java.util.List<com.google.devtools.remoteworkers.v1test2.Digest.Builder> 
           getFilesBuilderList() {
        return getFilesFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilderV3<
          com.google.devtools.remoteworkers.v1test2.Digest, com.google.devtools.remoteworkers.v1test2.Digest.Builder, com.google.devtools.remoteworkers.v1test2.DigestOrBuilder> 
          getFilesFieldBuilder() {
        if (filesBuilder_ == null) {
          filesBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<
              com.google.devtools.remoteworkers.v1test2.Digest, com.google.devtools.remoteworkers.v1test2.Digest.Builder, com.google.devtools.remoteworkers.v1test2.DigestOrBuilder>(
                  files_,
                  ((bitField0_ & 0x00000002) != 0),
                  getParentForChildren(),
                  isClean());
          files_ = null;
        }
        return filesBuilder_;
      }

      private java.util.List<com.google.devtools.remoteworkers.v1test2.Blob> inlineBlobs_ =
        java.util.Collections.emptyList();
      private void ensureInlineBlobsIsMutable() {
        if (!((bitField0_ & 0x00000004) != 0)) {
          inlineBlobs_ = new java.util.ArrayList<com.google.devtools.remoteworkers.v1test2.Blob>(inlineBlobs_);
          bitField0_ |= 0x00000004;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilderV3<
          com.google.devtools.remoteworkers.v1test2.Blob, com.google.devtools.remoteworkers.v1test2.Blob.Builder, com.google.devtools.remoteworkers.v1test2.BlobOrBuilder> inlineBlobsBuilder_;

      /**
       * <pre>
       * Inline contents for blobs expected to be needed by the bot to execute the
       * task. For example, contents of entries in `files` or blobs that are
       * indirectly referenced by an entry there.
       * The bot should check against this list before downloading required task
       * inputs to reduce the number of communications between itself and the
       * remote CAS server.
       * </pre>
       *
       * <code>repeated .google.devtools.remoteworkers.v1test2.Blob inline_blobs = 4;</code>
       */
      public java.util.List<com.google.devtools.remoteworkers.v1test2.Blob> getInlineBlobsList() {
        if (inlineBlobsBuilder_ == null) {
          return java.util.Collections.unmodifiableList(inlineBlobs_);
        } else {
          return inlineBlobsBuilder_.getMessageList();
        }
      }
      /**
       * <pre>
       * Inline contents for blobs expected to be needed by the bot to execute the
       * task. For example, contents of entries in `files` or blobs that are
       * indirectly referenced by an entry there.
       * The bot should check against this list before downloading required task
       * inputs to reduce the number of communications between itself and the
       * remote CAS server.
       * </pre>
       *
       * <code>repeated .google.devtools.remoteworkers.v1test2.Blob inline_blobs = 4;</code>
       */
      public int getInlineBlobsCount() {
        if (inlineBlobsBuilder_ == null) {
          return inlineBlobs_.size();
        } else {
          return inlineBlobsBuilder_.getCount();
        }
      }
      /**
       * <pre>
       * Inline contents for blobs expected to be needed by the bot to execute the
       * task. For example, contents of entries in `files` or blobs that are
       * indirectly referenced by an entry there.
       * The bot should check against this list before downloading required task
       * inputs to reduce the number of communications between itself and the
       * remote CAS server.
       * </pre>
       *
       * <code>repeated .google.devtools.remoteworkers.v1test2.Blob inline_blobs = 4;</code>
       */
      public com.google.devtools.remoteworkers.v1test2.Blob getInlineBlobs(int index) {
        if (inlineBlobsBuilder_ == null) {
          return inlineBlobs_.get(index);
        } else {
          return inlineBlobsBuilder_.getMessage(index);
        }
      }
      /**
       * <pre>
       * Inline contents for blobs expected to be needed by the bot to execute the
       * task. For example, contents of entries in `files` or blobs that are
       * indirectly referenced by an entry there.
       * The bot should check against this list before downloading required task
       * inputs to reduce the number of communications between itself and the
       * remote CAS server.
       * </pre>
       *
       * <code>repeated .google.devtools.remoteworkers.v1test2.Blob inline_blobs = 4;</code>
       */
      public Builder setInlineBlobs(
          int index, com.google.devtools.remoteworkers.v1test2.Blob value) {
        if (inlineBlobsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureInlineBlobsIsMutable();
          inlineBlobs_.set(index, value);
          onChanged();
        } else {
          inlineBlobsBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <pre>
       * Inline contents for blobs expected to be needed by the bot to execute the
       * task. For example, contents of entries in `files` or blobs that are
       * indirectly referenced by an entry there.
       * The bot should check against this list before downloading required task
       * inputs to reduce the number of communications between itself and the
       * remote CAS server.
       * </pre>
       *
       * <code>repeated .google.devtools.remoteworkers.v1test2.Blob inline_blobs = 4;</code>
       */
      public Builder setInlineBlobs(
          int index, com.google.devtools.remoteworkers.v1test2.Blob.Builder builderForValue) {
        if (inlineBlobsBuilder_ == null) {
          ensureInlineBlobsIsMutable();
          inlineBlobs_.set(index, builderForValue.build());
          onChanged();
        } else {
          inlineBlobsBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       * Inline contents for blobs expected to be needed by the bot to execute the
       * task. For example, contents of entries in `files` or blobs that are
       * indirectly referenced by an entry there.
       * The bot should check against this list before downloading required task
       * inputs to reduce the number of communications between itself and the
       * remote CAS server.
       * </pre>
       *
       * <code>repeated .google.devtools.remoteworkers.v1test2.Blob inline_blobs = 4;</code>
       */
      public Builder addInlineBlobs(com.google.devtools.remoteworkers.v1test2.Blob value) {
        if (inlineBlobsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureInlineBlobsIsMutable();
          inlineBlobs_.add(value);
          onChanged();
        } else {
          inlineBlobsBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <pre>
       * Inline contents for blobs expected to be needed by the bot to execute the
       * task. For example, contents of entries in `files` or blobs that are
       * indirectly referenced by an entry there.
       * The bot should check against this list before downloading required task
       * inputs to reduce the number of communications between itself and the
       * remote CAS server.
       * </pre>
       *
       * <code>repeated .google.devtools.remoteworkers.v1test2.Blob inline_blobs = 4;</code>
       */
      public Builder addInlineBlobs(
          int index, com.google.devtools.remoteworkers.v1test2.Blob value) {
        if (inlineBlobsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureInlineBlobsIsMutable();
          inlineBlobs_.add(index, value);
          onChanged();
        } else {
          inlineBlobsBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <pre>
       * Inline contents for blobs expected to be needed by the bot to execute the
       * task. For example, contents of entries in `files` or blobs that are
       * indirectly referenced by an entry there.
       * The bot should check against this list before downloading required task
       * inputs to reduce the number of communications between itself and the
       * remote CAS server.
       * </pre>
       *
       * <code>repeated .google.devtools.remoteworkers.v1test2.Blob inline_blobs = 4;</code>
       */
      public Builder addInlineBlobs(
          com.google.devtools.remoteworkers.v1test2.Blob.Builder builderForValue) {
        if (inlineBlobsBuilder_ == null) {
          ensureInlineBlobsIsMutable();
          inlineBlobs_.add(builderForValue.build());
          onChanged();
        } else {
          inlineBlobsBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       * Inline contents for blobs expected to be needed by the bot to execute the
       * task. For example, contents of entries in `files` or blobs that are
       * indirectly referenced by an entry there.
       * The bot should check against this list before downloading required task
       * inputs to reduce the number of communications between itself and the
       * remote CAS server.
       * </pre>
       *
       * <code>repeated .google.devtools.remoteworkers.v1test2.Blob inline_blobs = 4;</code>
       */
      public Builder addInlineBlobs(
          int index, com.google.devtools.remoteworkers.v1test2.Blob.Builder builderForValue) {
        if (inlineBlobsBuilder_ == null) {
          ensureInlineBlobsIsMutable();
          inlineBlobs_.add(index, builderForValue.build());
          onChanged();
        } else {
          inlineBlobsBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       * Inline contents for blobs expected to be needed by the bot to execute the
       * task. For example, contents of entries in `files` or blobs that are
       * indirectly referenced by an entry there.
       * The bot should check against this list before downloading required task
       * inputs to reduce the number of communications between itself and the
       * remote CAS server.
       * </pre>
       *
       * <code>repeated .google.devtools.remoteworkers.v1test2.Blob inline_blobs = 4;</code>
       */
      public Builder addAllInlineBlobs(
          java.lang.Iterable<? extends com.google.devtools.remoteworkers.v1test2.Blob> values) {
        if (inlineBlobsBuilder_ == null) {
          ensureInlineBlobsIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
              values, inlineBlobs_);
          onChanged();
        } else {
          inlineBlobsBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <pre>
       * Inline contents for blobs expected to be needed by the bot to execute the
       * task. For example, contents of entries in `files` or blobs that are
       * indirectly referenced by an entry there.
       * The bot should check against this list before downloading required task
       * inputs to reduce the number of communications between itself and the
       * remote CAS server.
       * </pre>
       *
       * <code>repeated .google.devtools.remoteworkers.v1test2.Blob inline_blobs = 4;</code>
       */
      public Builder clearInlineBlobs() {
        if (inlineBlobsBuilder_ == null) {
          inlineBlobs_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000004);
          onChanged();
        } else {
          inlineBlobsBuilder_.clear();
        }
        return this;
      }
      /**
       * <pre>
       * Inline contents for blobs expected to be needed by the bot to execute the
       * task. For example, contents of entries in `files` or blobs that are
       * indirectly referenced by an entry there.
       * The bot should check against this list before downloading required task
       * inputs to reduce the number of communications between itself and the
       * remote CAS server.
       * </pre>
       *
       * <code>repeated .google.devtools.remoteworkers.v1test2.Blob inline_blobs = 4;</code>
       */
      public Builder removeInlineBlobs(int index) {
        if (inlineBlobsBuilder_ == null) {
          ensureInlineBlobsIsMutable();
          inlineBlobs_.remove(index);
          onChanged();
        } else {
          inlineBlobsBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <pre>
       * Inline contents for blobs expected to be needed by the bot to execute the
       * task. For example, contents of entries in `files` or blobs that are
       * indirectly referenced by an entry there.
       * The bot should check against this list before downloading required task
       * inputs to reduce the number of communications between itself and the
       * remote CAS server.
       * </pre>
       *
       * <code>repeated .google.devtools.remoteworkers.v1test2.Blob inline_blobs = 4;</code>
       */
      public com.google.devtools.remoteworkers.v1test2.Blob.Builder getInlineBlobsBuilder(
          int index) {
        return getInlineBlobsFieldBuilder().getBuilder(index);
      }
      /**
       * <pre>
       * Inline contents for blobs expected to be needed by the bot to execute the
       * task. For example, contents of entries in `files` or blobs that are
       * indirectly referenced by an entry there.
       * The bot should check against this list before downloading required task
       * inputs to reduce the number of communications between itself and the
       * remote CAS server.
       * </pre>
       *
       * <code>repeated .google.devtools.remoteworkers.v1test2.Blob inline_blobs = 4;</code>
       */
      public com.google.devtools.remoteworkers.v1test2.BlobOrBuilder getInlineBlobsOrBuilder(
          int index) {
        if (inlineBlobsBuilder_ == null) {
          return inlineBlobs_.get(index);  } else {
          return inlineBlobsBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <pre>
       * Inline contents for blobs expected to be needed by the bot to execute the
       * task. For example, contents of entries in `files` or blobs that are
       * indirectly referenced by an entry there.
       * The bot should check against this list before downloading required task
       * inputs to reduce the number of communications between itself and the
       * remote CAS server.
       * </pre>
       *
       * <code>repeated .google.devtools.remoteworkers.v1test2.Blob inline_blobs = 4;</code>
       */
      public java.util.List<? extends com.google.devtools.remoteworkers.v1test2.BlobOrBuilder> 
           getInlineBlobsOrBuilderList() {
        if (inlineBlobsBuilder_ != null) {
          return inlineBlobsBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(inlineBlobs_);
        }
      }
      /**
       * <pre>
       * Inline contents for blobs expected to be needed by the bot to execute the
       * task. For example, contents of entries in `files` or blobs that are
       * indirectly referenced by an entry there.
       * The bot should check against this list before downloading required task
       * inputs to reduce the number of communications between itself and the
       * remote CAS server.
       * </pre>
       *
       * <code>repeated .google.devtools.remoteworkers.v1test2.Blob inline_blobs = 4;</code>
       */
      public com.google.devtools.remoteworkers.v1test2.Blob.Builder addInlineBlobsBuilder() {
        return getInlineBlobsFieldBuilder().addBuilder(
            com.google.devtools.remoteworkers.v1test2.Blob.getDefaultInstance());
      }
      /**
       * <pre>
       * Inline contents for blobs expected to be needed by the bot to execute the
       * task. For example, contents of entries in `files` or blobs that are
       * indirectly referenced by an entry there.
       * The bot should check against this list before downloading required task
       * inputs to reduce the number of communications between itself and the
       * remote CAS server.
       * </pre>
       *
       * <code>repeated .google.devtools.remoteworkers.v1test2.Blob inline_blobs = 4;</code>
       */
      public com.google.devtools.remoteworkers.v1test2.Blob.Builder addInlineBlobsBuilder(
          int index) {
        return getInlineBlobsFieldBuilder().addBuilder(
            index, com.google.devtools.remoteworkers.v1test2.Blob.getDefaultInstance());
      }
      /**
       * <pre>
       * Inline contents for blobs expected to be needed by the bot to execute the
       * task. For example, contents of entries in `files` or blobs that are
       * indirectly referenced by an entry there.
       * The bot should check against this list before downloading required task
       * inputs to reduce the number of communications between itself and the
       * remote CAS server.
       * </pre>
       *
       * <code>repeated .google.devtools.remoteworkers.v1test2.Blob inline_blobs = 4;</code>
       */
      public java.util.List<com.google.devtools.remoteworkers.v1test2.Blob.Builder> 
           getInlineBlobsBuilderList() {
        return getInlineBlobsFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilderV3<
          com.google.devtools.remoteworkers.v1test2.Blob, com.google.devtools.remoteworkers.v1test2.Blob.Builder, com.google.devtools.remoteworkers.v1test2.BlobOrBuilder> 
          getInlineBlobsFieldBuilder() {
        if (inlineBlobsBuilder_ == null) {
          inlineBlobsBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<
              com.google.devtools.remoteworkers.v1test2.Blob, com.google.devtools.remoteworkers.v1test2.Blob.Builder, com.google.devtools.remoteworkers.v1test2.BlobOrBuilder>(
                  inlineBlobs_,
                  ((bitField0_ & 0x00000004) != 0),
                  getParentForChildren(),
                  isClean());
          inlineBlobs_ = null;
        }
        return inlineBlobsBuilder_;
      }

      private java.util.List<com.google.devtools.remoteworkers.v1test2.CommandTask.Inputs.EnvironmentVariable> environmentVariables_ =
        java.util.Collections.emptyList();
      private void ensureEnvironmentVariablesIsMutable() {
        if (!((bitField0_ & 0x00000008) != 0)) {
          environmentVariables_ = new java.util.ArrayList<com.google.devtools.remoteworkers.v1test2.CommandTask.Inputs.EnvironmentVariable>(environmentVariables_);
          bitField0_ |= 0x00000008;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilderV3<
          com.google.devtools.remoteworkers.v1test2.CommandTask.Inputs.EnvironmentVariable, com.google.devtools.remoteworkers.v1test2.CommandTask.Inputs.EnvironmentVariable.Builder, com.google.devtools.remoteworkers.v1test2.CommandTask.Inputs.EnvironmentVariableOrBuilder> environmentVariablesBuilder_;

      /**
       * <pre>
       * All environment variables required by the task.
       * </pre>
       *
       * <code>repeated .google.devtools.remoteworkers.v1test2.CommandTask.Inputs.EnvironmentVariable environment_variables = 3;</code>
       */
      public java.util.List<com.google.devtools.remoteworkers.v1test2.CommandTask.Inputs.EnvironmentVariable> getEnvironmentVariablesList() {
        if (environmentVariablesBuilder_ == null) {
          return java.util.Collections.unmodifiableList(environmentVariables_);
        } else {
          return environmentVariablesBuilder_.getMessageList();
        }
      }
      /**
       * <pre>
       * All environment variables required by the task.
       * </pre>
       *
       * <code>repeated .google.devtools.remoteworkers.v1test2.CommandTask.Inputs.EnvironmentVariable environment_variables = 3;</code>
       */
      public int getEnvironmentVariablesCount() {
        if (environmentVariablesBuilder_ == null) {
          return environmentVariables_.size();
        } else {
          return environmentVariablesBuilder_.getCount();
        }
      }
      /**
       * <pre>
       * All environment variables required by the task.
       * </pre>
       *
       * <code>repeated .google.devtools.remoteworkers.v1test2.CommandTask.Inputs.EnvironmentVariable environment_variables = 3;</code>
       */
      public com.google.devtools.remoteworkers.v1test2.CommandTask.Inputs.EnvironmentVariable getEnvironmentVariables(int index) {
        if (environmentVariablesBuilder_ == null) {
          return environmentVariables_.get(index);
        } else {
          return environmentVariablesBuilder_.getMessage(index);
        }
      }
      /**
       * <pre>
       * All environment variables required by the task.
       * </pre>
       *
       * <code>repeated .google.devtools.remoteworkers.v1test2.CommandTask.Inputs.EnvironmentVariable environment_variables = 3;</code>
       */
      public Builder setEnvironmentVariables(
          int index, com.google.devtools.remoteworkers.v1test2.CommandTask.Inputs.EnvironmentVariable value) {
        if (environmentVariablesBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureEnvironmentVariablesIsMutable();
          environmentVariables_.set(index, value);
          onChanged();
        } else {
          environmentVariablesBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <pre>
       * All environment variables required by the task.
       * </pre>
       *
       * <code>repeated .google.devtools.remoteworkers.v1test2.CommandTask.Inputs.EnvironmentVariable environment_variables = 3;</code>
       */
      public Builder setEnvironmentVariables(
          int index, com.google.devtools.remoteworkers.v1test2.CommandTask.Inputs.EnvironmentVariable.Builder builderForValue) {
        if (environmentVariablesBuilder_ == null) {
          ensureEnvironmentVariablesIsMutable();
          environmentVariables_.set(index, builderForValue.build());
          onChanged();
        } else {
          environmentVariablesBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       * All environment variables required by the task.
       * </pre>
       *
       * <code>repeated .google.devtools.remoteworkers.v1test2.CommandTask.Inputs.EnvironmentVariable environment_variables = 3;</code>
       */
      public Builder addEnvironmentVariables(com.google.devtools.remoteworkers.v1test2.CommandTask.Inputs.EnvironmentVariable value) {
        if (environmentVariablesBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureEnvironmentVariablesIsMutable();
          environmentVariables_.add(value);
          onChanged();
        } else {
          environmentVariablesBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <pre>
       * All environment variables required by the task.
       * </pre>
       *
       * <code>repeated .google.devtools.remoteworkers.v1test2.CommandTask.Inputs.EnvironmentVariable environment_variables = 3;</code>
       */
      public Builder addEnvironmentVariables(
          int index, com.google.devtools.remoteworkers.v1test2.CommandTask.Inputs.EnvironmentVariable value) {
        if (environmentVariablesBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureEnvironmentVariablesIsMutable();
          environmentVariables_.add(index, value);
          onChanged();
        } else {
          environmentVariablesBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <pre>
       * All environment variables required by the task.
       * </pre>
       *
       * <code>repeated .google.devtools.remoteworkers.v1test2.CommandTask.Inputs.EnvironmentVariable environment_variables = 3;</code>
       */
      public Builder addEnvironmentVariables(
          com.google.devtools.remoteworkers.v1test2.CommandTask.Inputs.EnvironmentVariable.Builder builderForValue) {
        if (environmentVariablesBuilder_ == null) {
          ensureEnvironmentVariablesIsMutable();
          environmentVariables_.add(builderForValue.build());
          onChanged();
        } else {
          environmentVariablesBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       * All environment variables required by the task.
       * </pre>
       *
       * <code>repeated .google.devtools.remoteworkers.v1test2.CommandTask.Inputs.EnvironmentVariable environment_variables = 3;</code>
       */
      public Builder addEnvironmentVariables(
          int index, com.google.devtools.remoteworkers.v1test2.CommandTask.Inputs.EnvironmentVariable.Builder builderForValue) {
        if (environmentVariablesBuilder_ == null) {
          ensureEnvironmentVariablesIsMutable();
          environmentVariables_.add(index, builderForValue.build());
          onChanged();
        } else {
          environmentVariablesBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       * All environment variables required by the task.
       * </pre>
       *
       * <code>repeated .google.devtools.remoteworkers.v1test2.CommandTask.Inputs.EnvironmentVariable environment_variables = 3;</code>
       */
      public Builder addAllEnvironmentVariables(
          java.lang.Iterable<? extends com.google.devtools.remoteworkers.v1test2.CommandTask.Inputs.EnvironmentVariable> values) {
        if (environmentVariablesBuilder_ == null) {
          ensureEnvironmentVariablesIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
              values, environmentVariables_);
          onChanged();
        } else {
          environmentVariablesBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <pre>
       * All environment variables required by the task.
       * </pre>
       *
       * <code>repeated .google.devtools.remoteworkers.v1test2.CommandTask.Inputs.EnvironmentVariable environment_variables = 3;</code>
       */
      public Builder clearEnvironmentVariables() {
        if (environmentVariablesBuilder_ == null) {
          environmentVariables_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000008);
          onChanged();
        } else {
          environmentVariablesBuilder_.clear();
        }
        return this;
      }
      /**
       * <pre>
       * All environment variables required by the task.
       * </pre>
       *
       * <code>repeated .google.devtools.remoteworkers.v1test2.CommandTask.Inputs.EnvironmentVariable environment_variables = 3;</code>
       */
      public Builder removeEnvironmentVariables(int index) {
        if (environmentVariablesBuilder_ == null) {
          ensureEnvironmentVariablesIsMutable();
          environmentVariables_.remove(index);
          onChanged();
        } else {
          environmentVariablesBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <pre>
       * All environment variables required by the task.
       * </pre>
       *
       * <code>repeated .google.devtools.remoteworkers.v1test2.CommandTask.Inputs.EnvironmentVariable environment_variables = 3;</code>
       */
      public com.google.devtools.remoteworkers.v1test2.CommandTask.Inputs.EnvironmentVariable.Builder getEnvironmentVariablesBuilder(
          int index) {
        return getEnvironmentVariablesFieldBuilder().getBuilder(index);
      }
      /**
       * <pre>
       * All environment variables required by the task.
       * </pre>
       *
       * <code>repeated .google.devtools.remoteworkers.v1test2.CommandTask.Inputs.EnvironmentVariable environment_variables = 3;</code>
       */
      public com.google.devtools.remoteworkers.v1test2.CommandTask.Inputs.EnvironmentVariableOrBuilder getEnvironmentVariablesOrBuilder(
          int index) {
        if (environmentVariablesBuilder_ == null) {
          return environmentVariables_.get(index);  } else {
          return environmentVariablesBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <pre>
       * All environment variables required by the task.
       * </pre>
       *
       * <code>repeated .google.devtools.remoteworkers.v1test2.CommandTask.Inputs.EnvironmentVariable environment_variables = 3;</code>
       */
      public java.util.List<? extends com.google.devtools.remoteworkers.v1test2.CommandTask.Inputs.EnvironmentVariableOrBuilder> 
           getEnvironmentVariablesOrBuilderList() {
        if (environmentVariablesBuilder_ != null) {
          return environmentVariablesBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(environmentVariables_);
        }
      }
      /**
       * <pre>
       * All environment variables required by the task.
       * </pre>
       *
       * <code>repeated .google.devtools.remoteworkers.v1test2.CommandTask.Inputs.EnvironmentVariable environment_variables = 3;</code>
       */
      public com.google.devtools.remoteworkers.v1test2.CommandTask.Inputs.EnvironmentVariable.Builder addEnvironmentVariablesBuilder() {
        return getEnvironmentVariablesFieldBuilder().addBuilder(
            com.google.devtools.remoteworkers.v1test2.CommandTask.Inputs.EnvironmentVariable.getDefaultInstance());
      }
      /**
       * <pre>
       * All environment variables required by the task.
       * </pre>
       *
       * <code>repeated .google.devtools.remoteworkers.v1test2.CommandTask.Inputs.EnvironmentVariable environment_variables = 3;</code>
       */
      public com.google.devtools.remoteworkers.v1test2.CommandTask.Inputs.EnvironmentVariable.Builder addEnvironmentVariablesBuilder(
          int index) {
        return getEnvironmentVariablesFieldBuilder().addBuilder(
            index, com.google.devtools.remoteworkers.v1test2.CommandTask.Inputs.EnvironmentVariable.getDefaultInstance());
      }
      /**
       * <pre>
       * All environment variables required by the task.
       * </pre>
       *
       * <code>repeated .google.devtools.remoteworkers.v1test2.CommandTask.Inputs.EnvironmentVariable environment_variables = 3;</code>
       */
      public java.util.List<com.google.devtools.remoteworkers.v1test2.CommandTask.Inputs.EnvironmentVariable.Builder> 
           getEnvironmentVariablesBuilderList() {
        return getEnvironmentVariablesFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilderV3<
          com.google.devtools.remoteworkers.v1test2.CommandTask.Inputs.EnvironmentVariable, com.google.devtools.remoteworkers.v1test2.CommandTask.Inputs.EnvironmentVariable.Builder, com.google.devtools.remoteworkers.v1test2.CommandTask.Inputs.EnvironmentVariableOrBuilder> 
          getEnvironmentVariablesFieldBuilder() {
        if (environmentVariablesBuilder_ == null) {
          environmentVariablesBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<
              com.google.devtools.remoteworkers.v1test2.CommandTask.Inputs.EnvironmentVariable, com.google.devtools.remoteworkers.v1test2.CommandTask.Inputs.EnvironmentVariable.Builder, com.google.devtools.remoteworkers.v1test2.CommandTask.Inputs.EnvironmentVariableOrBuilder>(
                  environmentVariables_,
                  ((bitField0_ & 0x00000008) != 0),
                  getParentForChildren(),
                  isClean());
          environmentVariables_ = null;
        }
        return environmentVariablesBuilder_;
      }

      private java.lang.Object workingDirectory_ = "";
      /**
       * <pre>
       * Directory from which a command is executed. It is a relative directory
       * with respect to the bot's working directory (i.e., "./"). If it is
       * non-empty, then it must exist under "./". Otherwise, "./" will be used.
       * </pre>
       *
       * <code>string working_directory = 5;</code>
       * @return The workingDirectory.
       */
      public java.lang.String getWorkingDirectory() {
        java.lang.Object ref = workingDirectory_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          workingDirectory_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <pre>
       * Directory from which a command is executed. It is a relative directory
       * with respect to the bot's working directory (i.e., "./"). If it is
       * non-empty, then it must exist under "./". Otherwise, "./" will be used.
       * </pre>
       *
       * <code>string working_directory = 5;</code>
       * @return The bytes for workingDirectory.
       */
      public com.google.protobuf.ByteString
          getWorkingDirectoryBytes() {
        java.lang.Object ref = workingDirectory_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          workingDirectory_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       * Directory from which a command is executed. It is a relative directory
       * with respect to the bot's working directory (i.e., "./"). If it is
       * non-empty, then it must exist under "./". Otherwise, "./" will be used.
       * </pre>
       *
       * <code>string working_directory = 5;</code>
       * @param value The workingDirectory to set.
       * @return This builder for chaining.
       */
      public Builder setWorkingDirectory(
          java.lang.String value) {
        if (value == null) { throw new NullPointerException(); }
        workingDirectory_ = value;
        bitField0_ |= 0x00000010;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Directory from which a command is executed. It is a relative directory
       * with respect to the bot's working directory (i.e., "./"). If it is
       * non-empty, then it must exist under "./". Otherwise, "./" will be used.
       * </pre>
       *
       * <code>string working_directory = 5;</code>
       * @return This builder for chaining.
       */
      public Builder clearWorkingDirectory() {
        workingDirectory_ = getDefaultInstance().getWorkingDirectory();
        bitField0_ = (bitField0_ & ~0x00000010);
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Directory from which a command is executed. It is a relative directory
       * with respect to the bot's working directory (i.e., "./"). If it is
       * non-empty, then it must exist under "./". Otherwise, "./" will be used.
       * </pre>
       *
       * <code>string working_directory = 5;</code>
       * @param value The bytes for workingDirectory to set.
       * @return This builder for chaining.
       */
      public Builder setWorkingDirectoryBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) { throw new NullPointerException(); }
        checkByteStringIsUtf8(value);
        workingDirectory_ = value;
        bitField0_ |= 0x00000010;
        onChanged();
        return this;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:google.devtools.remoteworkers.v1test2.CommandTask.Inputs)
    }

    // @@protoc_insertion_point(class_scope:google.devtools.remoteworkers.v1test2.CommandTask.Inputs)
    private static final com.google.devtools.remoteworkers.v1test2.CommandTask.Inputs DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new com.google.devtools.remoteworkers.v1test2.CommandTask.Inputs();
    }

    public static com.google.devtools.remoteworkers.v1test2.CommandTask.Inputs getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<Inputs>
        PARSER = new com.google.protobuf.AbstractParser<Inputs>() {
      @java.lang.Override
      public Inputs parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        Builder builder = newBuilder();
        try {
          builder.mergeFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.setUnfinishedMessage(builder.buildPartial());
        } catch (com.google.protobuf.UninitializedMessageException e) {
          throw e.asInvalidProtocolBufferException().setUnfinishedMessage(builder.buildPartial());
        } catch (java.io.IOException e) {
          throw new com.google.protobuf.InvalidProtocolBufferException(e)
              .setUnfinishedMessage(builder.buildPartial());
        }
        return builder.buildPartial();
      }
    };

    public static com.google.protobuf.Parser<Inputs> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<Inputs> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.devtools.remoteworkers.v1test2.CommandTask.Inputs getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface OutputsOrBuilder extends
      // @@protoc_insertion_point(interface_extends:google.devtools.remoteworkers.v1test2.CommandTask.Outputs)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <pre>
     * A list of expected files, relative to the execution root. All paths
     * MUST be delimited by forward slashes.
     * </pre>
     *
     * <code>repeated string files = 1;</code>
     * @return A list containing the files.
     */
    java.util.List<java.lang.String>
        getFilesList();
    /**
     * <pre>
     * A list of expected files, relative to the execution root. All paths
     * MUST be delimited by forward slashes.
     * </pre>
     *
     * <code>repeated string files = 1;</code>
     * @return The count of files.
     */
    int getFilesCount();
    /**
     * <pre>
     * A list of expected files, relative to the execution root. All paths
     * MUST be delimited by forward slashes.
     * </pre>
     *
     * <code>repeated string files = 1;</code>
     * @param index The index of the element to return.
     * @return The files at the given index.
     */
    java.lang.String getFiles(int index);
    /**
     * <pre>
     * A list of expected files, relative to the execution root. All paths
     * MUST be delimited by forward slashes.
     * </pre>
     *
     * <code>repeated string files = 1;</code>
     * @param index The index of the value to return.
     * @return The bytes of the files at the given index.
     */
    com.google.protobuf.ByteString
        getFilesBytes(int index);

    /**
     * <pre>
     * A list of expected directories, relative to the execution root. All paths
     * MUST be delimited by forward slashes.
     * </pre>
     *
     * <code>repeated string directories = 2;</code>
     * @return A list containing the directories.
     */
    java.util.List<java.lang.String>
        getDirectoriesList();
    /**
     * <pre>
     * A list of expected directories, relative to the execution root. All paths
     * MUST be delimited by forward slashes.
     * </pre>
     *
     * <code>repeated string directories = 2;</code>
     * @return The count of directories.
     */
    int getDirectoriesCount();
    /**
     * <pre>
     * A list of expected directories, relative to the execution root. All paths
     * MUST be delimited by forward slashes.
     * </pre>
     *
     * <code>repeated string directories = 2;</code>
     * @param index The index of the element to return.
     * @return The directories at the given index.
     */
    java.lang.String getDirectories(int index);
    /**
     * <pre>
     * A list of expected directories, relative to the execution root. All paths
     * MUST be delimited by forward slashes.
     * </pre>
     *
     * <code>repeated string directories = 2;</code>
     * @param index The index of the value to return.
     * @return The bytes of the directories at the given index.
     */
    com.google.protobuf.ByteString
        getDirectoriesBytes(int index);

    /**
     * <pre>
     * The destination to which any stdout should be sent. The method by which
     * the bot should send the stream contents to that destination is not
     * defined in this API. As examples, the destination could be a file
     * referenced in the `files` field in this message, or it could be a URI
     * that must be written via the ByteStream API.
     * </pre>
     *
     * <code>string stdout_destination = 3;</code>
     * @return The stdoutDestination.
     */
    java.lang.String getStdoutDestination();
    /**
     * <pre>
     * The destination to which any stdout should be sent. The method by which
     * the bot should send the stream contents to that destination is not
     * defined in this API. As examples, the destination could be a file
     * referenced in the `files` field in this message, or it could be a URI
     * that must be written via the ByteStream API.
     * </pre>
     *
     * <code>string stdout_destination = 3;</code>
     * @return The bytes for stdoutDestination.
     */
    com.google.protobuf.ByteString
        getStdoutDestinationBytes();

    /**
     * <pre>
     * The destination to which any stderr should be sent. The method by which
     * the bot should send the stream contents to that destination is not
     * defined in this API. As examples, the destination could be a file
     * referenced in the `files` field in this message, or it could be a URI
     * that must be written via the ByteStream API.
     * </pre>
     *
     * <code>string stderr_destination = 4;</code>
     * @return The stderrDestination.
     */
    java.lang.String getStderrDestination();
    /**
     * <pre>
     * The destination to which any stderr should be sent. The method by which
     * the bot should send the stream contents to that destination is not
     * defined in this API. As examples, the destination could be a file
     * referenced in the `files` field in this message, or it could be a URI
     * that must be written via the ByteStream API.
     * </pre>
     *
     * <code>string stderr_destination = 4;</code>
     * @return The bytes for stderrDestination.
     */
    com.google.protobuf.ByteString
        getStderrDestinationBytes();
  }
  /**
   * <pre>
   * Describes the expected outputs of the command.
   * </pre>
   *
   * Protobuf type {@code google.devtools.remoteworkers.v1test2.CommandTask.Outputs}
   */
  public static final class Outputs extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:google.devtools.remoteworkers.v1test2.CommandTask.Outputs)
      OutputsOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use Outputs.newBuilder() to construct.
    private Outputs(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private Outputs() {
      files_ = com.google.protobuf.LazyStringArrayList.EMPTY;
      directories_ = com.google.protobuf.LazyStringArrayList.EMPTY;
      stdoutDestination_ = "";
      stderrDestination_ = "";
    }

    @java.lang.Override
    @SuppressWarnings({"unused"})
    protected java.lang.Object newInstance(
        UnusedPrivateParameter unused) {
      return new Outputs();
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.google.devtools.remoteworkers.v1test2.RemoteWorkersCommands.internal_static_google_devtools_remoteworkers_v1test2_CommandTask_Outputs_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.google.devtools.remoteworkers.v1test2.RemoteWorkersCommands.internal_static_google_devtools_remoteworkers_v1test2_CommandTask_Outputs_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.google.devtools.remoteworkers.v1test2.CommandTask.Outputs.class, com.google.devtools.remoteworkers.v1test2.CommandTask.Outputs.Builder.class);
    }

    public static final int FILES_FIELD_NUMBER = 1;
    @SuppressWarnings("serial")
    private com.google.protobuf.LazyStringList files_;
    /**
     * <pre>
     * A list of expected files, relative to the execution root. All paths
     * MUST be delimited by forward slashes.
     * </pre>
     *
     * <code>repeated string files = 1;</code>
     * @return A list containing the files.
     */
    public com.google.protobuf.ProtocolStringList
        getFilesList() {
      return files_;
    }
    /**
     * <pre>
     * A list of expected files, relative to the execution root. All paths
     * MUST be delimited by forward slashes.
     * </pre>
     *
     * <code>repeated string files = 1;</code>
     * @return The count of files.
     */
    public int getFilesCount() {
      return files_.size();
    }
    /**
     * <pre>
     * A list of expected files, relative to the execution root. All paths
     * MUST be delimited by forward slashes.
     * </pre>
     *
     * <code>repeated string files = 1;</code>
     * @param index The index of the element to return.
     * @return The files at the given index.
     */
    public java.lang.String getFiles(int index) {
      return files_.get(index);
    }
    /**
     * <pre>
     * A list of expected files, relative to the execution root. All paths
     * MUST be delimited by forward slashes.
     * </pre>
     *
     * <code>repeated string files = 1;</code>
     * @param index The index of the value to return.
     * @return The bytes of the files at the given index.
     */
    public com.google.protobuf.ByteString
        getFilesBytes(int index) {
      return files_.getByteString(index);
    }

    public static final int DIRECTORIES_FIELD_NUMBER = 2;
    @SuppressWarnings("serial")
    private com.google.protobuf.LazyStringList directories_;
    /**
     * <pre>
     * A list of expected directories, relative to the execution root. All paths
     * MUST be delimited by forward slashes.
     * </pre>
     *
     * <code>repeated string directories = 2;</code>
     * @return A list containing the directories.
     */
    public com.google.protobuf.ProtocolStringList
        getDirectoriesList() {
      return directories_;
    }
    /**
     * <pre>
     * A list of expected directories, relative to the execution root. All paths
     * MUST be delimited by forward slashes.
     * </pre>
     *
     * <code>repeated string directories = 2;</code>
     * @return The count of directories.
     */
    public int getDirectoriesCount() {
      return directories_.size();
    }
    /**
     * <pre>
     * A list of expected directories, relative to the execution root. All paths
     * MUST be delimited by forward slashes.
     * </pre>
     *
     * <code>repeated string directories = 2;</code>
     * @param index The index of the element to return.
     * @return The directories at the given index.
     */
    public java.lang.String getDirectories(int index) {
      return directories_.get(index);
    }
    /**
     * <pre>
     * A list of expected directories, relative to the execution root. All paths
     * MUST be delimited by forward slashes.
     * </pre>
     *
     * <code>repeated string directories = 2;</code>
     * @param index The index of the value to return.
     * @return The bytes of the directories at the given index.
     */
    public com.google.protobuf.ByteString
        getDirectoriesBytes(int index) {
      return directories_.getByteString(index);
    }

    public static final int STDOUT_DESTINATION_FIELD_NUMBER = 3;
    @SuppressWarnings("serial")
    private volatile java.lang.Object stdoutDestination_ = "";
    /**
     * <pre>
     * The destination to which any stdout should be sent. The method by which
     * the bot should send the stream contents to that destination is not
     * defined in this API. As examples, the destination could be a file
     * referenced in the `files` field in this message, or it could be a URI
     * that must be written via the ByteStream API.
     * </pre>
     *
     * <code>string stdout_destination = 3;</code>
     * @return The stdoutDestination.
     */
    @java.lang.Override
    public java.lang.String getStdoutDestination() {
      java.lang.Object ref = stdoutDestination_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        stdoutDestination_ = s;
        return s;
      }
    }
    /**
     * <pre>
     * The destination to which any stdout should be sent. The method by which
     * the bot should send the stream contents to that destination is not
     * defined in this API. As examples, the destination could be a file
     * referenced in the `files` field in this message, or it could be a URI
     * that must be written via the ByteStream API.
     * </pre>
     *
     * <code>string stdout_destination = 3;</code>
     * @return The bytes for stdoutDestination.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString
        getStdoutDestinationBytes() {
      java.lang.Object ref = stdoutDestination_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        stdoutDestination_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int STDERR_DESTINATION_FIELD_NUMBER = 4;
    @SuppressWarnings("serial")
    private volatile java.lang.Object stderrDestination_ = "";
    /**
     * <pre>
     * The destination to which any stderr should be sent. The method by which
     * the bot should send the stream contents to that destination is not
     * defined in this API. As examples, the destination could be a file
     * referenced in the `files` field in this message, or it could be a URI
     * that must be written via the ByteStream API.
     * </pre>
     *
     * <code>string stderr_destination = 4;</code>
     * @return The stderrDestination.
     */
    @java.lang.Override
    public java.lang.String getStderrDestination() {
      java.lang.Object ref = stderrDestination_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        stderrDestination_ = s;
        return s;
      }
    }
    /**
     * <pre>
     * The destination to which any stderr should be sent. The method by which
     * the bot should send the stream contents to that destination is not
     * defined in this API. As examples, the destination could be a file
     * referenced in the `files` field in this message, or it could be a URI
     * that must be written via the ByteStream API.
     * </pre>
     *
     * <code>string stderr_destination = 4;</code>
     * @return The bytes for stderrDestination.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString
        getStderrDestinationBytes() {
      java.lang.Object ref = stderrDestination_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        stderrDestination_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      for (int i = 0; i < files_.size(); i++) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 1, files_.getRaw(i));
      }
      for (int i = 0; i < directories_.size(); i++) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 2, directories_.getRaw(i));
      }
      if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(stdoutDestination_)) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 3, stdoutDestination_);
      }
      if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(stderrDestination_)) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 4, stderrDestination_);
      }
      getUnknownFields().writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      {
        int dataSize = 0;
        for (int i = 0; i < files_.size(); i++) {
          dataSize += computeStringSizeNoTag(files_.getRaw(i));
        }
        size += dataSize;
        size += 1 * getFilesList().size();
      }
      {
        int dataSize = 0;
        for (int i = 0; i < directories_.size(); i++) {
          dataSize += computeStringSizeNoTag(directories_.getRaw(i));
        }
        size += dataSize;
        size += 1 * getDirectoriesList().size();
      }
      if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(stdoutDestination_)) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(3, stdoutDestination_);
      }
      if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(stderrDestination_)) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(4, stderrDestination_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof com.google.devtools.remoteworkers.v1test2.CommandTask.Outputs)) {
        return super.equals(obj);
      }
      com.google.devtools.remoteworkers.v1test2.CommandTask.Outputs other = (com.google.devtools.remoteworkers.v1test2.CommandTask.Outputs) obj;

      if (!getFilesList()
          .equals(other.getFilesList())) return false;
      if (!getDirectoriesList()
          .equals(other.getDirectoriesList())) return false;
      if (!getStdoutDestination()
          .equals(other.getStdoutDestination())) return false;
      if (!getStderrDestination()
          .equals(other.getStderrDestination())) return false;
      if (!getUnknownFields().equals(other.getUnknownFields())) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      if (getFilesCount() > 0) {
        hash = (37 * hash) + FILES_FIELD_NUMBER;
        hash = (53 * hash) + getFilesList().hashCode();
      }
      if (getDirectoriesCount() > 0) {
        hash = (37 * hash) + DIRECTORIES_FIELD_NUMBER;
        hash = (53 * hash) + getDirectoriesList().hashCode();
      }
      hash = (37 * hash) + STDOUT_DESTINATION_FIELD_NUMBER;
      hash = (53 * hash) + getStdoutDestination().hashCode();
      hash = (37 * hash) + STDERR_DESTINATION_FIELD_NUMBER;
      hash = (53 * hash) + getStderrDestination().hashCode();
      hash = (29 * hash) + getUnknownFields().hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static com.google.devtools.remoteworkers.v1test2.CommandTask.Outputs parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.google.devtools.remoteworkers.v1test2.CommandTask.Outputs parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.google.devtools.remoteworkers.v1test2.CommandTask.Outputs parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.google.devtools.remoteworkers.v1test2.CommandTask.Outputs parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.google.devtools.remoteworkers.v1test2.CommandTask.Outputs parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.google.devtools.remoteworkers.v1test2.CommandTask.Outputs parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.google.devtools.remoteworkers.v1test2.CommandTask.Outputs parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static com.google.devtools.remoteworkers.v1test2.CommandTask.Outputs parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static com.google.devtools.remoteworkers.v1test2.CommandTask.Outputs parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static com.google.devtools.remoteworkers.v1test2.CommandTask.Outputs parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static com.google.devtools.remoteworkers.v1test2.CommandTask.Outputs parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static com.google.devtools.remoteworkers.v1test2.CommandTask.Outputs parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(com.google.devtools.remoteworkers.v1test2.CommandTask.Outputs prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * <pre>
     * Describes the expected outputs of the command.
     * </pre>
     *
     * Protobuf type {@code google.devtools.remoteworkers.v1test2.CommandTask.Outputs}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:google.devtools.remoteworkers.v1test2.CommandTask.Outputs)
        com.google.devtools.remoteworkers.v1test2.CommandTask.OutputsOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return com.google.devtools.remoteworkers.v1test2.RemoteWorkersCommands.internal_static_google_devtools_remoteworkers_v1test2_CommandTask_Outputs_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return com.google.devtools.remoteworkers.v1test2.RemoteWorkersCommands.internal_static_google_devtools_remoteworkers_v1test2_CommandTask_Outputs_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                com.google.devtools.remoteworkers.v1test2.CommandTask.Outputs.class, com.google.devtools.remoteworkers.v1test2.CommandTask.Outputs.Builder.class);
      }

      // Construct using com.google.devtools.remoteworkers.v1test2.CommandTask.Outputs.newBuilder()
      private Builder() {

      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);

      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        bitField0_ = 0;
        files_ = com.google.protobuf.LazyStringArrayList.EMPTY;
        bitField0_ = (bitField0_ & ~0x00000001);
        directories_ = com.google.protobuf.LazyStringArrayList.EMPTY;
        bitField0_ = (bitField0_ & ~0x00000002);
        stdoutDestination_ = "";
        stderrDestination_ = "";
        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.google.devtools.remoteworkers.v1test2.RemoteWorkersCommands.internal_static_google_devtools_remoteworkers_v1test2_CommandTask_Outputs_descriptor;
      }

      @java.lang.Override
      public com.google.devtools.remoteworkers.v1test2.CommandTask.Outputs getDefaultInstanceForType() {
        return com.google.devtools.remoteworkers.v1test2.CommandTask.Outputs.getDefaultInstance();
      }

      @java.lang.Override
      public com.google.devtools.remoteworkers.v1test2.CommandTask.Outputs build() {
        com.google.devtools.remoteworkers.v1test2.CommandTask.Outputs result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public com.google.devtools.remoteworkers.v1test2.CommandTask.Outputs buildPartial() {
        com.google.devtools.remoteworkers.v1test2.CommandTask.Outputs result = new com.google.devtools.remoteworkers.v1test2.CommandTask.Outputs(this);
        buildPartialRepeatedFields(result);
        if (bitField0_ != 0) { buildPartial0(result); }
        onBuilt();
        return result;
      }

      private void buildPartialRepeatedFields(com.google.devtools.remoteworkers.v1test2.CommandTask.Outputs result) {
        if (((bitField0_ & 0x00000001) != 0)) {
          files_ = files_.getUnmodifiableView();
          bitField0_ = (bitField0_ & ~0x00000001);
        }
        result.files_ = files_;
        if (((bitField0_ & 0x00000002) != 0)) {
          directories_ = directories_.getUnmodifiableView();
          bitField0_ = (bitField0_ & ~0x00000002);
        }
        result.directories_ = directories_;
      }

      private void buildPartial0(com.google.devtools.remoteworkers.v1test2.CommandTask.Outputs result) {
        int from_bitField0_ = bitField0_;
        if (((from_bitField0_ & 0x00000004) != 0)) {
          result.stdoutDestination_ = stdoutDestination_;
        }
        if (((from_bitField0_ & 0x00000008) != 0)) {
          result.stderrDestination_ = stderrDestination_;
        }
      }

      @java.lang.Override
      public Builder clone() {
        return super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.google.devtools.remoteworkers.v1test2.CommandTask.Outputs) {
          return mergeFrom((com.google.devtools.remoteworkers.v1test2.CommandTask.Outputs)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(com.google.devtools.remoteworkers.v1test2.CommandTask.Outputs other) {
        if (other == com.google.devtools.remoteworkers.v1test2.CommandTask.Outputs.getDefaultInstance()) return this;
        if (!other.files_.isEmpty()) {
          if (files_.isEmpty()) {
            files_ = other.files_;
            bitField0_ = (bitField0_ & ~0x00000001);
          } else {
            ensureFilesIsMutable();
            files_.addAll(other.files_);
          }
          onChanged();
        }
        if (!other.directories_.isEmpty()) {
          if (directories_.isEmpty()) {
            directories_ = other.directories_;
            bitField0_ = (bitField0_ & ~0x00000002);
          } else {
            ensureDirectoriesIsMutable();
            directories_.addAll(other.directories_);
          }
          onChanged();
        }
        if (!other.getStdoutDestination().isEmpty()) {
          stdoutDestination_ = other.stdoutDestination_;
          bitField0_ |= 0x00000004;
          onChanged();
        }
        if (!other.getStderrDestination().isEmpty()) {
          stderrDestination_ = other.stderrDestination_;
          bitField0_ |= 0x00000008;
          onChanged();
        }
        this.mergeUnknownFields(other.getUnknownFields());
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        if (extensionRegistry == null) {
          throw new java.lang.NullPointerException();
        }
        try {
          boolean done = false;
          while (!done) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                done = true;
                break;
              case 10: {
                java.lang.String s = input.readStringRequireUtf8();
                ensureFilesIsMutable();
                files_.add(s);
                break;
              } // case 10
              case 18: {
                java.lang.String s = input.readStringRequireUtf8();
                ensureDirectoriesIsMutable();
                directories_.add(s);
                break;
              } // case 18
              case 26: {
                stdoutDestination_ = input.readStringRequireUtf8();
                bitField0_ |= 0x00000004;
                break;
              } // case 26
              case 34: {
                stderrDestination_ = input.readStringRequireUtf8();
                bitField0_ |= 0x00000008;
                break;
              } // case 34
              default: {
                if (!super.parseUnknownField(input, extensionRegistry, tag)) {
                  done = true; // was an endgroup tag
                }
                break;
              } // default:
            } // switch (tag)
          } // while (!done)
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.unwrapIOException();
        } finally {
          onChanged();
        } // finally
        return this;
      }
      private int bitField0_;

      private com.google.protobuf.LazyStringList files_ = com.google.protobuf.LazyStringArrayList.EMPTY;
      private void ensureFilesIsMutable() {
        if (!((bitField0_ & 0x00000001) != 0)) {
          files_ = new com.google.protobuf.LazyStringArrayList(files_);
          bitField0_ |= 0x00000001;
         }
      }
      /**
       * <pre>
       * A list of expected files, relative to the execution root. All paths
       * MUST be delimited by forward slashes.
       * </pre>
       *
       * <code>repeated string files = 1;</code>
       * @return A list containing the files.
       */
      public com.google.protobuf.ProtocolStringList
          getFilesList() {
        return files_.getUnmodifiableView();
      }
      /**
       * <pre>
       * A list of expected files, relative to the execution root. All paths
       * MUST be delimited by forward slashes.
       * </pre>
       *
       * <code>repeated string files = 1;</code>
       * @return The count of files.
       */
      public int getFilesCount() {
        return files_.size();
      }
      /**
       * <pre>
       * A list of expected files, relative to the execution root. All paths
       * MUST be delimited by forward slashes.
       * </pre>
       *
       * <code>repeated string files = 1;</code>
       * @param index The index of the element to return.
       * @return The files at the given index.
       */
      public java.lang.String getFiles(int index) {
        return files_.get(index);
      }
      /**
       * <pre>
       * A list of expected files, relative to the execution root. All paths
       * MUST be delimited by forward slashes.
       * </pre>
       *
       * <code>repeated string files = 1;</code>
       * @param index The index of the value to return.
       * @return The bytes of the files at the given index.
       */
      public com.google.protobuf.ByteString
          getFilesBytes(int index) {
        return files_.getByteString(index);
      }
      /**
       * <pre>
       * A list of expected files, relative to the execution root. All paths
       * MUST be delimited by forward slashes.
       * </pre>
       *
       * <code>repeated string files = 1;</code>
       * @param index The index to set the value at.
       * @param value The files to set.
       * @return This builder for chaining.
       */
      public Builder setFiles(
          int index, java.lang.String value) {
        if (value == null) { throw new NullPointerException(); }
        ensureFilesIsMutable();
        files_.set(index, value);
        onChanged();
        return this;
      }
      /**
       * <pre>
       * A list of expected files, relative to the execution root. All paths
       * MUST be delimited by forward slashes.
       * </pre>
       *
       * <code>repeated string files = 1;</code>
       * @param value The files to add.
       * @return This builder for chaining.
       */
      public Builder addFiles(
          java.lang.String value) {
        if (value == null) { throw new NullPointerException(); }
        ensureFilesIsMutable();
        files_.add(value);
        onChanged();
        return this;
      }
      /**
       * <pre>
       * A list of expected files, relative to the execution root. All paths
       * MUST be delimited by forward slashes.
       * </pre>
       *
       * <code>repeated string files = 1;</code>
       * @param values The files to add.
       * @return This builder for chaining.
       */
      public Builder addAllFiles(
          java.lang.Iterable<java.lang.String> values) {
        ensureFilesIsMutable();
        com.google.protobuf.AbstractMessageLite.Builder.addAll(
            values, files_);
        onChanged();
        return this;
      }
      /**
       * <pre>
       * A list of expected files, relative to the execution root. All paths
       * MUST be delimited by forward slashes.
       * </pre>
       *
       * <code>repeated string files = 1;</code>
       * @return This builder for chaining.
       */
      public Builder clearFiles() {
        files_ = com.google.protobuf.LazyStringArrayList.EMPTY;
        bitField0_ = (bitField0_ & ~0x00000001);
        onChanged();
        return this;
      }
      /**
       * <pre>
       * A list of expected files, relative to the execution root. All paths
       * MUST be delimited by forward slashes.
       * </pre>
       *
       * <code>repeated string files = 1;</code>
       * @param value The bytes of the files to add.
       * @return This builder for chaining.
       */
      public Builder addFilesBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) { throw new NullPointerException(); }
        checkByteStringIsUtf8(value);
        ensureFilesIsMutable();
        files_.add(value);
        onChanged();
        return this;
      }

      private com.google.protobuf.LazyStringList directories_ = com.google.protobuf.LazyStringArrayList.EMPTY;
      private void ensureDirectoriesIsMutable() {
        if (!((bitField0_ & 0x00000002) != 0)) {
          directories_ = new com.google.protobuf.LazyStringArrayList(directories_);
          bitField0_ |= 0x00000002;
         }
      }
      /**
       * <pre>
       * A list of expected directories, relative to the execution root. All paths
       * MUST be delimited by forward slashes.
       * </pre>
       *
       * <code>repeated string directories = 2;</code>
       * @return A list containing the directories.
       */
      public com.google.protobuf.ProtocolStringList
          getDirectoriesList() {
        return directories_.getUnmodifiableView();
      }
      /**
       * <pre>
       * A list of expected directories, relative to the execution root. All paths
       * MUST be delimited by forward slashes.
       * </pre>
       *
       * <code>repeated string directories = 2;</code>
       * @return The count of directories.
       */
      public int getDirectoriesCount() {
        return directories_.size();
      }
      /**
       * <pre>
       * A list of expected directories, relative to the execution root. All paths
       * MUST be delimited by forward slashes.
       * </pre>
       *
       * <code>repeated string directories = 2;</code>
       * @param index The index of the element to return.
       * @return The directories at the given index.
       */
      public java.lang.String getDirectories(int index) {
        return directories_.get(index);
      }
      /**
       * <pre>
       * A list of expected directories, relative to the execution root. All paths
       * MUST be delimited by forward slashes.
       * </pre>
       *
       * <code>repeated string directories = 2;</code>
       * @param index The index of the value to return.
       * @return The bytes of the directories at the given index.
       */
      public com.google.protobuf.ByteString
          getDirectoriesBytes(int index) {
        return directories_.getByteString(index);
      }
      /**
       * <pre>
       * A list of expected directories, relative to the execution root. All paths
       * MUST be delimited by forward slashes.
       * </pre>
       *
       * <code>repeated string directories = 2;</code>
       * @param index The index to set the value at.
       * @param value The directories to set.
       * @return This builder for chaining.
       */
      public Builder setDirectories(
          int index, java.lang.String value) {
        if (value == null) { throw new NullPointerException(); }
        ensureDirectoriesIsMutable();
        directories_.set(index, value);
        onChanged();
        return this;
      }
      /**
       * <pre>
       * A list of expected directories, relative to the execution root. All paths
       * MUST be delimited by forward slashes.
       * </pre>
       *
       * <code>repeated string directories = 2;</code>
       * @param value The directories to add.
       * @return This builder for chaining.
       */
      public Builder addDirectories(
          java.lang.String value) {
        if (value == null) { throw new NullPointerException(); }
        ensureDirectoriesIsMutable();
        directories_.add(value);
        onChanged();
        return this;
      }
      /**
       * <pre>
       * A list of expected directories, relative to the execution root. All paths
       * MUST be delimited by forward slashes.
       * </pre>
       *
       * <code>repeated string directories = 2;</code>
       * @param values The directories to add.
       * @return This builder for chaining.
       */
      public Builder addAllDirectories(
          java.lang.Iterable<java.lang.String> values) {
        ensureDirectoriesIsMutable();
        com.google.protobuf.AbstractMessageLite.Builder.addAll(
            values, directories_);
        onChanged();
        return this;
      }
      /**
       * <pre>
       * A list of expected directories, relative to the execution root. All paths
       * MUST be delimited by forward slashes.
       * </pre>
       *
       * <code>repeated string directories = 2;</code>
       * @return This builder for chaining.
       */
      public Builder clearDirectories() {
        directories_ = com.google.protobuf.LazyStringArrayList.EMPTY;
        bitField0_ = (bitField0_ & ~0x00000002);
        onChanged();
        return this;
      }
      /**
       * <pre>
       * A list of expected directories, relative to the execution root. All paths
       * MUST be delimited by forward slashes.
       * </pre>
       *
       * <code>repeated string directories = 2;</code>
       * @param value The bytes of the directories to add.
       * @return This builder for chaining.
       */
      public Builder addDirectoriesBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) { throw new NullPointerException(); }
        checkByteStringIsUtf8(value);
        ensureDirectoriesIsMutable();
        directories_.add(value);
        onChanged();
        return this;
      }

      private java.lang.Object stdoutDestination_ = "";
      /**
       * <pre>
       * The destination to which any stdout should be sent. The method by which
       * the bot should send the stream contents to that destination is not
       * defined in this API. As examples, the destination could be a file
       * referenced in the `files` field in this message, or it could be a URI
       * that must be written via the ByteStream API.
       * </pre>
       *
       * <code>string stdout_destination = 3;</code>
       * @return The stdoutDestination.
       */
      public java.lang.String getStdoutDestination() {
        java.lang.Object ref = stdoutDestination_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          stdoutDestination_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <pre>
       * The destination to which any stdout should be sent. The method by which
       * the bot should send the stream contents to that destination is not
       * defined in this API. As examples, the destination could be a file
       * referenced in the `files` field in this message, or it could be a URI
       * that must be written via the ByteStream API.
       * </pre>
       *
       * <code>string stdout_destination = 3;</code>
       * @return The bytes for stdoutDestination.
       */
      public com.google.protobuf.ByteString
          getStdoutDestinationBytes() {
        java.lang.Object ref = stdoutDestination_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          stdoutDestination_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       * The destination to which any stdout should be sent. The method by which
       * the bot should send the stream contents to that destination is not
       * defined in this API. As examples, the destination could be a file
       * referenced in the `files` field in this message, or it could be a URI
       * that must be written via the ByteStream API.
       * </pre>
       *
       * <code>string stdout_destination = 3;</code>
       * @param value The stdoutDestination to set.
       * @return This builder for chaining.
       */
      public Builder setStdoutDestination(
          java.lang.String value) {
        if (value == null) { throw new NullPointerException(); }
        stdoutDestination_ = value;
        bitField0_ |= 0x00000004;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * The destination to which any stdout should be sent. The method by which
       * the bot should send the stream contents to that destination is not
       * defined in this API. As examples, the destination could be a file
       * referenced in the `files` field in this message, or it could be a URI
       * that must be written via the ByteStream API.
       * </pre>
       *
       * <code>string stdout_destination = 3;</code>
       * @return This builder for chaining.
       */
      public Builder clearStdoutDestination() {
        stdoutDestination_ = getDefaultInstance().getStdoutDestination();
        bitField0_ = (bitField0_ & ~0x00000004);
        onChanged();
        return this;
      }
      /**
       * <pre>
       * The destination to which any stdout should be sent. The method by which
       * the bot should send the stream contents to that destination is not
       * defined in this API. As examples, the destination could be a file
       * referenced in the `files` field in this message, or it could be a URI
       * that must be written via the ByteStream API.
       * </pre>
       *
       * <code>string stdout_destination = 3;</code>
       * @param value The bytes for stdoutDestination to set.
       * @return This builder for chaining.
       */
      public Builder setStdoutDestinationBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) { throw new NullPointerException(); }
        checkByteStringIsUtf8(value);
        stdoutDestination_ = value;
        bitField0_ |= 0x00000004;
        onChanged();
        return this;
      }

      private java.lang.Object stderrDestination_ = "";
      /**
       * <pre>
       * The destination to which any stderr should be sent. The method by which
       * the bot should send the stream contents to that destination is not
       * defined in this API. As examples, the destination could be a file
       * referenced in the `files` field in this message, or it could be a URI
       * that must be written via the ByteStream API.
       * </pre>
       *
       * <code>string stderr_destination = 4;</code>
       * @return The stderrDestination.
       */
      public java.lang.String getStderrDestination() {
        java.lang.Object ref = stderrDestination_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          stderrDestination_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <pre>
       * The destination to which any stderr should be sent. The method by which
       * the bot should send the stream contents to that destination is not
       * defined in this API. As examples, the destination could be a file
       * referenced in the `files` field in this message, or it could be a URI
       * that must be written via the ByteStream API.
       * </pre>
       *
       * <code>string stderr_destination = 4;</code>
       * @return The bytes for stderrDestination.
       */
      public com.google.protobuf.ByteString
          getStderrDestinationBytes() {
        java.lang.Object ref = stderrDestination_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          stderrDestination_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       * The destination to which any stderr should be sent. The method by which
       * the bot should send the stream contents to that destination is not
       * defined in this API. As examples, the destination could be a file
       * referenced in the `files` field in this message, or it could be a URI
       * that must be written via the ByteStream API.
       * </pre>
       *
       * <code>string stderr_destination = 4;</code>
       * @param value The stderrDestination to set.
       * @return This builder for chaining.
       */
      public Builder setStderrDestination(
          java.lang.String value) {
        if (value == null) { throw new NullPointerException(); }
        stderrDestination_ = value;
        bitField0_ |= 0x00000008;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * The destination to which any stderr should be sent. The method by which
       * the bot should send the stream contents to that destination is not
       * defined in this API. As examples, the destination could be a file
       * referenced in the `files` field in this message, or it could be a URI
       * that must be written via the ByteStream API.
       * </pre>
       *
       * <code>string stderr_destination = 4;</code>
       * @return This builder for chaining.
       */
      public Builder clearStderrDestination() {
        stderrDestination_ = getDefaultInstance().getStderrDestination();
        bitField0_ = (bitField0_ & ~0x00000008);
        onChanged();
        return this;
      }
      /**
       * <pre>
       * The destination to which any stderr should be sent. The method by which
       * the bot should send the stream contents to that destination is not
       * defined in this API. As examples, the destination could be a file
       * referenced in the `files` field in this message, or it could be a URI
       * that must be written via the ByteStream API.
       * </pre>
       *
       * <code>string stderr_destination = 4;</code>
       * @param value The bytes for stderrDestination to set.
       * @return This builder for chaining.
       */
      public Builder setStderrDestinationBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) { throw new NullPointerException(); }
        checkByteStringIsUtf8(value);
        stderrDestination_ = value;
        bitField0_ |= 0x00000008;
        onChanged();
        return this;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:google.devtools.remoteworkers.v1test2.CommandTask.Outputs)
    }

    // @@protoc_insertion_point(class_scope:google.devtools.remoteworkers.v1test2.CommandTask.Outputs)
    private static final com.google.devtools.remoteworkers.v1test2.CommandTask.Outputs DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new com.google.devtools.remoteworkers.v1test2.CommandTask.Outputs();
    }

    public static com.google.devtools.remoteworkers.v1test2.CommandTask.Outputs getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<Outputs>
        PARSER = new com.google.protobuf.AbstractParser<Outputs>() {
      @java.lang.Override
      public Outputs parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        Builder builder = newBuilder();
        try {
          builder.mergeFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.setUnfinishedMessage(builder.buildPartial());
        } catch (com.google.protobuf.UninitializedMessageException e) {
          throw e.asInvalidProtocolBufferException().setUnfinishedMessage(builder.buildPartial());
        } catch (java.io.IOException e) {
          throw new com.google.protobuf.InvalidProtocolBufferException(e)
              .setUnfinishedMessage(builder.buildPartial());
        }
        return builder.buildPartial();
      }
    };

    public static com.google.protobuf.Parser<Outputs> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<Outputs> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.devtools.remoteworkers.v1test2.CommandTask.Outputs getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface TimeoutsOrBuilder extends
      // @@protoc_insertion_point(interface_extends:google.devtools.remoteworkers.v1test2.CommandTask.Timeouts)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <pre>
     * This specifies the maximum time that the task can run, excluding the
     * time required to download inputs or upload outputs. That is, the worker
     * will terminate the task if it runs longer than this.
     * </pre>
     *
     * <code>.google.protobuf.Duration execution = 1;</code>
     * @return Whether the execution field is set.
     */
    boolean hasExecution();
    /**
     * <pre>
     * This specifies the maximum time that the task can run, excluding the
     * time required to download inputs or upload outputs. That is, the worker
     * will terminate the task if it runs longer than this.
     * </pre>
     *
     * <code>.google.protobuf.Duration execution = 1;</code>
     * @return The execution.
     */
    com.google.protobuf.Duration getExecution();
    /**
     * <pre>
     * This specifies the maximum time that the task can run, excluding the
     * time required to download inputs or upload outputs. That is, the worker
     * will terminate the task if it runs longer than this.
     * </pre>
     *
     * <code>.google.protobuf.Duration execution = 1;</code>
     */
    com.google.protobuf.DurationOrBuilder getExecutionOrBuilder();

    /**
     * <pre>
     * This specifies the maximum amount of time the task can be idle - that is,
     * go without generating some output in either stdout or stderr. If the
     * process is silent for more than the specified time, the worker will
     * terminate the task.
     * </pre>
     *
     * <code>.google.protobuf.Duration idle = 2;</code>
     * @return Whether the idle field is set.
     */
    boolean hasIdle();
    /**
     * <pre>
     * This specifies the maximum amount of time the task can be idle - that is,
     * go without generating some output in either stdout or stderr. If the
     * process is silent for more than the specified time, the worker will
     * terminate the task.
     * </pre>
     *
     * <code>.google.protobuf.Duration idle = 2;</code>
     * @return The idle.
     */
    com.google.protobuf.Duration getIdle();
    /**
     * <pre>
     * This specifies the maximum amount of time the task can be idle - that is,
     * go without generating some output in either stdout or stderr. If the
     * process is silent for more than the specified time, the worker will
     * terminate the task.
     * </pre>
     *
     * <code>.google.protobuf.Duration idle = 2;</code>
     */
    com.google.protobuf.DurationOrBuilder getIdleOrBuilder();

    /**
     * <pre>
     * If the execution or IO timeouts are exceeded, the worker will try to
     * gracefully terminate the task and return any existing logs. However,
     * tasks may be hard-frozen in which case this process will fail. This
     * timeout specifies how long to wait for a terminated task to shut down
     * gracefully (e.g. via SIGTERM) before we bring down the hammer (e.g.
     * SIGKILL on *nix, CTRL_BREAK_EVENT on Windows).
     * </pre>
     *
     * <code>.google.protobuf.Duration shutdown = 3;</code>
     * @return Whether the shutdown field is set.
     */
    boolean hasShutdown();
    /**
     * <pre>
     * If the execution or IO timeouts are exceeded, the worker will try to
     * gracefully terminate the task and return any existing logs. However,
     * tasks may be hard-frozen in which case this process will fail. This
     * timeout specifies how long to wait for a terminated task to shut down
     * gracefully (e.g. via SIGTERM) before we bring down the hammer (e.g.
     * SIGKILL on *nix, CTRL_BREAK_EVENT on Windows).
     * </pre>
     *
     * <code>.google.protobuf.Duration shutdown = 3;</code>
     * @return The shutdown.
     */
    com.google.protobuf.Duration getShutdown();
    /**
     * <pre>
     * If the execution or IO timeouts are exceeded, the worker will try to
     * gracefully terminate the task and return any existing logs. However,
     * tasks may be hard-frozen in which case this process will fail. This
     * timeout specifies how long to wait for a terminated task to shut down
     * gracefully (e.g. via SIGTERM) before we bring down the hammer (e.g.
     * SIGKILL on *nix, CTRL_BREAK_EVENT on Windows).
     * </pre>
     *
     * <code>.google.protobuf.Duration shutdown = 3;</code>
     */
    com.google.protobuf.DurationOrBuilder getShutdownOrBuilder();
  }
  /**
   * <pre>
   * Describes the timeouts associated with this task.
   * </pre>
   *
   * Protobuf type {@code google.devtools.remoteworkers.v1test2.CommandTask.Timeouts}
   */
  public static final class Timeouts extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:google.devtools.remoteworkers.v1test2.CommandTask.Timeouts)
      TimeoutsOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use Timeouts.newBuilder() to construct.
    private Timeouts(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private Timeouts() {
    }

    @java.lang.Override
    @SuppressWarnings({"unused"})
    protected java.lang.Object newInstance(
        UnusedPrivateParameter unused) {
      return new Timeouts();
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.google.devtools.remoteworkers.v1test2.RemoteWorkersCommands.internal_static_google_devtools_remoteworkers_v1test2_CommandTask_Timeouts_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.google.devtools.remoteworkers.v1test2.RemoteWorkersCommands.internal_static_google_devtools_remoteworkers_v1test2_CommandTask_Timeouts_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.google.devtools.remoteworkers.v1test2.CommandTask.Timeouts.class, com.google.devtools.remoteworkers.v1test2.CommandTask.Timeouts.Builder.class);
    }

    public static final int EXECUTION_FIELD_NUMBER = 1;
    private com.google.protobuf.Duration execution_;
    /**
     * <pre>
     * This specifies the maximum time that the task can run, excluding the
     * time required to download inputs or upload outputs. That is, the worker
     * will terminate the task if it runs longer than this.
     * </pre>
     *
     * <code>.google.protobuf.Duration execution = 1;</code>
     * @return Whether the execution field is set.
     */
    @java.lang.Override
    public boolean hasExecution() {
      return execution_ != null;
    }
    /**
     * <pre>
     * This specifies the maximum time that the task can run, excluding the
     * time required to download inputs or upload outputs. That is, the worker
     * will terminate the task if it runs longer than this.
     * </pre>
     *
     * <code>.google.protobuf.Duration execution = 1;</code>
     * @return The execution.
     */
    @java.lang.Override
    public com.google.protobuf.Duration getExecution() {
      return execution_ == null ? com.google.protobuf.Duration.getDefaultInstance() : execution_;
    }
    /**
     * <pre>
     * This specifies the maximum time that the task can run, excluding the
     * time required to download inputs or upload outputs. That is, the worker
     * will terminate the task if it runs longer than this.
     * </pre>
     *
     * <code>.google.protobuf.Duration execution = 1;</code>
     */
    @java.lang.Override
    public com.google.protobuf.DurationOrBuilder getExecutionOrBuilder() {
      return execution_ == null ? com.google.protobuf.Duration.getDefaultInstance() : execution_;
    }

    public static final int IDLE_FIELD_NUMBER = 2;
    private com.google.protobuf.Duration idle_;
    /**
     * <pre>
     * This specifies the maximum amount of time the task can be idle - that is,
     * go without generating some output in either stdout or stderr. If the
     * process is silent for more than the specified time, the worker will
     * terminate the task.
     * </pre>
     *
     * <code>.google.protobuf.Duration idle = 2;</code>
     * @return Whether the idle field is set.
     */
    @java.lang.Override
    public boolean hasIdle() {
      return idle_ != null;
    }
    /**
     * <pre>
     * This specifies the maximum amount of time the task can be idle - that is,
     * go without generating some output in either stdout or stderr. If the
     * process is silent for more than the specified time, the worker will
     * terminate the task.
     * </pre>
     *
     * <code>.google.protobuf.Duration idle = 2;</code>
     * @return The idle.
     */
    @java.lang.Override
    public com.google.protobuf.Duration getIdle() {
      return idle_ == null ? com.google.protobuf.Duration.getDefaultInstance() : idle_;
    }
    /**
     * <pre>
     * This specifies the maximum amount of time the task can be idle - that is,
     * go without generating some output in either stdout or stderr. If the
     * process is silent for more than the specified time, the worker will
     * terminate the task.
     * </pre>
     *
     * <code>.google.protobuf.Duration idle = 2;</code>
     */
    @java.lang.Override
    public com.google.protobuf.DurationOrBuilder getIdleOrBuilder() {
      return idle_ == null ? com.google.protobuf.Duration.getDefaultInstance() : idle_;
    }

    public static final int SHUTDOWN_FIELD_NUMBER = 3;
    private com.google.protobuf.Duration shutdown_;
    /**
     * <pre>
     * If the execution or IO timeouts are exceeded, the worker will try to
     * gracefully terminate the task and return any existing logs. However,
     * tasks may be hard-frozen in which case this process will fail. This
     * timeout specifies how long to wait for a terminated task to shut down
     * gracefully (e.g. via SIGTERM) before we bring down the hammer (e.g.
     * SIGKILL on *nix, CTRL_BREAK_EVENT on Windows).
     * </pre>
     *
     * <code>.google.protobuf.Duration shutdown = 3;</code>
     * @return Whether the shutdown field is set.
     */
    @java.lang.Override
    public boolean hasShutdown() {
      return shutdown_ != null;
    }
    /**
     * <pre>
     * If the execution or IO timeouts are exceeded, the worker will try to
     * gracefully terminate the task and return any existing logs. However,
     * tasks may be hard-frozen in which case this process will fail. This
     * timeout specifies how long to wait for a terminated task to shut down
     * gracefully (e.g. via SIGTERM) before we bring down the hammer (e.g.
     * SIGKILL on *nix, CTRL_BREAK_EVENT on Windows).
     * </pre>
     *
     * <code>.google.protobuf.Duration shutdown = 3;</code>
     * @return The shutdown.
     */
    @java.lang.Override
    public com.google.protobuf.Duration getShutdown() {
      return shutdown_ == null ? com.google.protobuf.Duration.getDefaultInstance() : shutdown_;
    }
    /**
     * <pre>
     * If the execution or IO timeouts are exceeded, the worker will try to
     * gracefully terminate the task and return any existing logs. However,
     * tasks may be hard-frozen in which case this process will fail. This
     * timeout specifies how long to wait for a terminated task to shut down
     * gracefully (e.g. via SIGTERM) before we bring down the hammer (e.g.
     * SIGKILL on *nix, CTRL_BREAK_EVENT on Windows).
     * </pre>
     *
     * <code>.google.protobuf.Duration shutdown = 3;</code>
     */
    @java.lang.Override
    public com.google.protobuf.DurationOrBuilder getShutdownOrBuilder() {
      return shutdown_ == null ? com.google.protobuf.Duration.getDefaultInstance() : shutdown_;
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (execution_ != null) {
        output.writeMessage(1, getExecution());
      }
      if (idle_ != null) {
        output.writeMessage(2, getIdle());
      }
      if (shutdown_ != null) {
        output.writeMessage(3, getShutdown());
      }
      getUnknownFields().writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (execution_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, getExecution());
      }
      if (idle_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(2, getIdle());
      }
      if (shutdown_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(3, getShutdown());
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof com.google.devtools.remoteworkers.v1test2.CommandTask.Timeouts)) {
        return super.equals(obj);
      }
      com.google.devtools.remoteworkers.v1test2.CommandTask.Timeouts other = (com.google.devtools.remoteworkers.v1test2.CommandTask.Timeouts) obj;

      if (hasExecution() != other.hasExecution()) return false;
      if (hasExecution()) {
        if (!getExecution()
            .equals(other.getExecution())) return false;
      }
      if (hasIdle() != other.hasIdle()) return false;
      if (hasIdle()) {
        if (!getIdle()
            .equals(other.getIdle())) return false;
      }
      if (hasShutdown() != other.hasShutdown()) return false;
      if (hasShutdown()) {
        if (!getShutdown()
            .equals(other.getShutdown())) return false;
      }
      if (!getUnknownFields().equals(other.getUnknownFields())) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      if (hasExecution()) {
        hash = (37 * hash) + EXECUTION_FIELD_NUMBER;
        hash = (53 * hash) + getExecution().hashCode();
      }
      if (hasIdle()) {
        hash = (37 * hash) + IDLE_FIELD_NUMBER;
        hash = (53 * hash) + getIdle().hashCode();
      }
      if (hasShutdown()) {
        hash = (37 * hash) + SHUTDOWN_FIELD_NUMBER;
        hash = (53 * hash) + getShutdown().hashCode();
      }
      hash = (29 * hash) + getUnknownFields().hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static com.google.devtools.remoteworkers.v1test2.CommandTask.Timeouts parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.google.devtools.remoteworkers.v1test2.CommandTask.Timeouts parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.google.devtools.remoteworkers.v1test2.CommandTask.Timeouts parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.google.devtools.remoteworkers.v1test2.CommandTask.Timeouts parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.google.devtools.remoteworkers.v1test2.CommandTask.Timeouts parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.google.devtools.remoteworkers.v1test2.CommandTask.Timeouts parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.google.devtools.remoteworkers.v1test2.CommandTask.Timeouts parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static com.google.devtools.remoteworkers.v1test2.CommandTask.Timeouts parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static com.google.devtools.remoteworkers.v1test2.CommandTask.Timeouts parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static com.google.devtools.remoteworkers.v1test2.CommandTask.Timeouts parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static com.google.devtools.remoteworkers.v1test2.CommandTask.Timeouts parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static com.google.devtools.remoteworkers.v1test2.CommandTask.Timeouts parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(com.google.devtools.remoteworkers.v1test2.CommandTask.Timeouts prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * <pre>
     * Describes the timeouts associated with this task.
     * </pre>
     *
     * Protobuf type {@code google.devtools.remoteworkers.v1test2.CommandTask.Timeouts}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:google.devtools.remoteworkers.v1test2.CommandTask.Timeouts)
        com.google.devtools.remoteworkers.v1test2.CommandTask.TimeoutsOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return com.google.devtools.remoteworkers.v1test2.RemoteWorkersCommands.internal_static_google_devtools_remoteworkers_v1test2_CommandTask_Timeouts_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return com.google.devtools.remoteworkers.v1test2.RemoteWorkersCommands.internal_static_google_devtools_remoteworkers_v1test2_CommandTask_Timeouts_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                com.google.devtools.remoteworkers.v1test2.CommandTask.Timeouts.class, com.google.devtools.remoteworkers.v1test2.CommandTask.Timeouts.Builder.class);
      }

      // Construct using com.google.devtools.remoteworkers.v1test2.CommandTask.Timeouts.newBuilder()
      private Builder() {

      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);

      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        bitField0_ = 0;
        execution_ = null;
        if (executionBuilder_ != null) {
          executionBuilder_.dispose();
          executionBuilder_ = null;
        }
        idle_ = null;
        if (idleBuilder_ != null) {
          idleBuilder_.dispose();
          idleBuilder_ = null;
        }
        shutdown_ = null;
        if (shutdownBuilder_ != null) {
          shutdownBuilder_.dispose();
          shutdownBuilder_ = null;
        }
        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.google.devtools.remoteworkers.v1test2.RemoteWorkersCommands.internal_static_google_devtools_remoteworkers_v1test2_CommandTask_Timeouts_descriptor;
      }

      @java.lang.Override
      public com.google.devtools.remoteworkers.v1test2.CommandTask.Timeouts getDefaultInstanceForType() {
        return com.google.devtools.remoteworkers.v1test2.CommandTask.Timeouts.getDefaultInstance();
      }

      @java.lang.Override
      public com.google.devtools.remoteworkers.v1test2.CommandTask.Timeouts build() {
        com.google.devtools.remoteworkers.v1test2.CommandTask.Timeouts result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public com.google.devtools.remoteworkers.v1test2.CommandTask.Timeouts buildPartial() {
        com.google.devtools.remoteworkers.v1test2.CommandTask.Timeouts result = new com.google.devtools.remoteworkers.v1test2.CommandTask.Timeouts(this);
        if (bitField0_ != 0) { buildPartial0(result); }
        onBuilt();
        return result;
      }

      private void buildPartial0(com.google.devtools.remoteworkers.v1test2.CommandTask.Timeouts result) {
        int from_bitField0_ = bitField0_;
        if (((from_bitField0_ & 0x00000001) != 0)) {
          result.execution_ = executionBuilder_ == null
              ? execution_
              : executionBuilder_.build();
        }
        if (((from_bitField0_ & 0x00000002) != 0)) {
          result.idle_ = idleBuilder_ == null
              ? idle_
              : idleBuilder_.build();
        }
        if (((from_bitField0_ & 0x00000004) != 0)) {
          result.shutdown_ = shutdownBuilder_ == null
              ? shutdown_
              : shutdownBuilder_.build();
        }
      }

      @java.lang.Override
      public Builder clone() {
        return super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.google.devtools.remoteworkers.v1test2.CommandTask.Timeouts) {
          return mergeFrom((com.google.devtools.remoteworkers.v1test2.CommandTask.Timeouts)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(com.google.devtools.remoteworkers.v1test2.CommandTask.Timeouts other) {
        if (other == com.google.devtools.remoteworkers.v1test2.CommandTask.Timeouts.getDefaultInstance()) return this;
        if (other.hasExecution()) {
          mergeExecution(other.getExecution());
        }
        if (other.hasIdle()) {
          mergeIdle(other.getIdle());
        }
        if (other.hasShutdown()) {
          mergeShutdown(other.getShutdown());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        if (extensionRegistry == null) {
          throw new java.lang.NullPointerException();
        }
        try {
          boolean done = false;
          while (!done) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                done = true;
                break;
              case 10: {
                input.readMessage(
                    getExecutionFieldBuilder().getBuilder(),
                    extensionRegistry);
                bitField0_ |= 0x00000001;
                break;
              } // case 10
              case 18: {
                input.readMessage(
                    getIdleFieldBuilder().getBuilder(),
                    extensionRegistry);
                bitField0_ |= 0x00000002;
                break;
              } // case 18
              case 26: {
                input.readMessage(
                    getShutdownFieldBuilder().getBuilder(),
                    extensionRegistry);
                bitField0_ |= 0x00000004;
                break;
              } // case 26
              default: {
                if (!super.parseUnknownField(input, extensionRegistry, tag)) {
                  done = true; // was an endgroup tag
                }
                break;
              } // default:
            } // switch (tag)
          } // while (!done)
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.unwrapIOException();
        } finally {
          onChanged();
        } // finally
        return this;
      }
      private int bitField0_;

      private com.google.protobuf.Duration execution_;
      private com.google.protobuf.SingleFieldBuilderV3<
          com.google.protobuf.Duration, com.google.protobuf.Duration.Builder, com.google.protobuf.DurationOrBuilder> executionBuilder_;
      /**
       * <pre>
       * This specifies the maximum time that the task can run, excluding the
       * time required to download inputs or upload outputs. That is, the worker
       * will terminate the task if it runs longer than this.
       * </pre>
       *
       * <code>.google.protobuf.Duration execution = 1;</code>
       * @return Whether the execution field is set.
       */
      public boolean hasExecution() {
        return ((bitField0_ & 0x00000001) != 0);
      }
      /**
       * <pre>
       * This specifies the maximum time that the task can run, excluding the
       * time required to download inputs or upload outputs. That is, the worker
       * will terminate the task if it runs longer than this.
       * </pre>
       *
       * <code>.google.protobuf.Duration execution = 1;</code>
       * @return The execution.
       */
      public com.google.protobuf.Duration getExecution() {
        if (executionBuilder_ == null) {
          return execution_ == null ? com.google.protobuf.Duration.getDefaultInstance() : execution_;
        } else {
          return executionBuilder_.getMessage();
        }
      }
      /**
       * <pre>
       * This specifies the maximum time that the task can run, excluding the
       * time required to download inputs or upload outputs. That is, the worker
       * will terminate the task if it runs longer than this.
       * </pre>
       *
       * <code>.google.protobuf.Duration execution = 1;</code>
       */
      public Builder setExecution(com.google.protobuf.Duration value) {
        if (executionBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          execution_ = value;
        } else {
          executionBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000001;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * This specifies the maximum time that the task can run, excluding the
       * time required to download inputs or upload outputs. That is, the worker
       * will terminate the task if it runs longer than this.
       * </pre>
       *
       * <code>.google.protobuf.Duration execution = 1;</code>
       */
      public Builder setExecution(
          com.google.protobuf.Duration.Builder builderForValue) {
        if (executionBuilder_ == null) {
          execution_ = builderForValue.build();
        } else {
          executionBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000001;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * This specifies the maximum time that the task can run, excluding the
       * time required to download inputs or upload outputs. That is, the worker
       * will terminate the task if it runs longer than this.
       * </pre>
       *
       * <code>.google.protobuf.Duration execution = 1;</code>
       */
      public Builder mergeExecution(com.google.protobuf.Duration value) {
        if (executionBuilder_ == null) {
          if (((bitField0_ & 0x00000001) != 0) &&
            execution_ != null &&
            execution_ != com.google.protobuf.Duration.getDefaultInstance()) {
            getExecutionBuilder().mergeFrom(value);
          } else {
            execution_ = value;
          }
        } else {
          executionBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x00000001;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * This specifies the maximum time that the task can run, excluding the
       * time required to download inputs or upload outputs. That is, the worker
       * will terminate the task if it runs longer than this.
       * </pre>
       *
       * <code>.google.protobuf.Duration execution = 1;</code>
       */
      public Builder clearExecution() {
        bitField0_ = (bitField0_ & ~0x00000001);
        execution_ = null;
        if (executionBuilder_ != null) {
          executionBuilder_.dispose();
          executionBuilder_ = null;
        }
        onChanged();
        return this;
      }
      /**
       * <pre>
       * This specifies the maximum time that the task can run, excluding the
       * time required to download inputs or upload outputs. That is, the worker
       * will terminate the task if it runs longer than this.
       * </pre>
       *
       * <code>.google.protobuf.Duration execution = 1;</code>
       */
      public com.google.protobuf.Duration.Builder getExecutionBuilder() {
        bitField0_ |= 0x00000001;
        onChanged();
        return getExecutionFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       * This specifies the maximum time that the task can run, excluding the
       * time required to download inputs or upload outputs. That is, the worker
       * will terminate the task if it runs longer than this.
       * </pre>
       *
       * <code>.google.protobuf.Duration execution = 1;</code>
       */
      public com.google.protobuf.DurationOrBuilder getExecutionOrBuilder() {
        if (executionBuilder_ != null) {
          return executionBuilder_.getMessageOrBuilder();
        } else {
          return execution_ == null ?
              com.google.protobuf.Duration.getDefaultInstance() : execution_;
        }
      }
      /**
       * <pre>
       * This specifies the maximum time that the task can run, excluding the
       * time required to download inputs or upload outputs. That is, the worker
       * will terminate the task if it runs longer than this.
       * </pre>
       *
       * <code>.google.protobuf.Duration execution = 1;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          com.google.protobuf.Duration, com.google.protobuf.Duration.Builder, com.google.protobuf.DurationOrBuilder> 
          getExecutionFieldBuilder() {
        if (executionBuilder_ == null) {
          executionBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              com.google.protobuf.Duration, com.google.protobuf.Duration.Builder, com.google.protobuf.DurationOrBuilder>(
                  getExecution(),
                  getParentForChildren(),
                  isClean());
          execution_ = null;
        }
        return executionBuilder_;
      }

      private com.google.protobuf.Duration idle_;
      private com.google.protobuf.SingleFieldBuilderV3<
          com.google.protobuf.Duration, com.google.protobuf.Duration.Builder, com.google.protobuf.DurationOrBuilder> idleBuilder_;
      /**
       * <pre>
       * This specifies the maximum amount of time the task can be idle - that is,
       * go without generating some output in either stdout or stderr. If the
       * process is silent for more than the specified time, the worker will
       * terminate the task.
       * </pre>
       *
       * <code>.google.protobuf.Duration idle = 2;</code>
       * @return Whether the idle field is set.
       */
      public boolean hasIdle() {
        return ((bitField0_ & 0x00000002) != 0);
      }
      /**
       * <pre>
       * This specifies the maximum amount of time the task can be idle - that is,
       * go without generating some output in either stdout or stderr. If the
       * process is silent for more than the specified time, the worker will
       * terminate the task.
       * </pre>
       *
       * <code>.google.protobuf.Duration idle = 2;</code>
       * @return The idle.
       */
      public com.google.protobuf.Duration getIdle() {
        if (idleBuilder_ == null) {
          return idle_ == null ? com.google.protobuf.Duration.getDefaultInstance() : idle_;
        } else {
          return idleBuilder_.getMessage();
        }
      }
      /**
       * <pre>
       * This specifies the maximum amount of time the task can be idle - that is,
       * go without generating some output in either stdout or stderr. If the
       * process is silent for more than the specified time, the worker will
       * terminate the task.
       * </pre>
       *
       * <code>.google.protobuf.Duration idle = 2;</code>
       */
      public Builder setIdle(com.google.protobuf.Duration value) {
        if (idleBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          idle_ = value;
        } else {
          idleBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000002;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * This specifies the maximum amount of time the task can be idle - that is,
       * go without generating some output in either stdout or stderr. If the
       * process is silent for more than the specified time, the worker will
       * terminate the task.
       * </pre>
       *
       * <code>.google.protobuf.Duration idle = 2;</code>
       */
      public Builder setIdle(
          com.google.protobuf.Duration.Builder builderForValue) {
        if (idleBuilder_ == null) {
          idle_ = builderForValue.build();
        } else {
          idleBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000002;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * This specifies the maximum amount of time the task can be idle - that is,
       * go without generating some output in either stdout or stderr. If the
       * process is silent for more than the specified time, the worker will
       * terminate the task.
       * </pre>
       *
       * <code>.google.protobuf.Duration idle = 2;</code>
       */
      public Builder mergeIdle(com.google.protobuf.Duration value) {
        if (idleBuilder_ == null) {
          if (((bitField0_ & 0x00000002) != 0) &&
            idle_ != null &&
            idle_ != com.google.protobuf.Duration.getDefaultInstance()) {
            getIdleBuilder().mergeFrom(value);
          } else {
            idle_ = value;
          }
        } else {
          idleBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x00000002;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * This specifies the maximum amount of time the task can be idle - that is,
       * go without generating some output in either stdout or stderr. If the
       * process is silent for more than the specified time, the worker will
       * terminate the task.
       * </pre>
       *
       * <code>.google.protobuf.Duration idle = 2;</code>
       */
      public Builder clearIdle() {
        bitField0_ = (bitField0_ & ~0x00000002);
        idle_ = null;
        if (idleBuilder_ != null) {
          idleBuilder_.dispose();
          idleBuilder_ = null;
        }
        onChanged();
        return this;
      }
      /**
       * <pre>
       * This specifies the maximum amount of time the task can be idle - that is,
       * go without generating some output in either stdout or stderr. If the
       * process is silent for more than the specified time, the worker will
       * terminate the task.
       * </pre>
       *
       * <code>.google.protobuf.Duration idle = 2;</code>
       */
      public com.google.protobuf.Duration.Builder getIdleBuilder() {
        bitField0_ |= 0x00000002;
        onChanged();
        return getIdleFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       * This specifies the maximum amount of time the task can be idle - that is,
       * go without generating some output in either stdout or stderr. If the
       * process is silent for more than the specified time, the worker will
       * terminate the task.
       * </pre>
       *
       * <code>.google.protobuf.Duration idle = 2;</code>
       */
      public com.google.protobuf.DurationOrBuilder getIdleOrBuilder() {
        if (idleBuilder_ != null) {
          return idleBuilder_.getMessageOrBuilder();
        } else {
          return idle_ == null ?
              com.google.protobuf.Duration.getDefaultInstance() : idle_;
        }
      }
      /**
       * <pre>
       * This specifies the maximum amount of time the task can be idle - that is,
       * go without generating some output in either stdout or stderr. If the
       * process is silent for more than the specified time, the worker will
       * terminate the task.
       * </pre>
       *
       * <code>.google.protobuf.Duration idle = 2;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          com.google.protobuf.Duration, com.google.protobuf.Duration.Builder, com.google.protobuf.DurationOrBuilder> 
          getIdleFieldBuilder() {
        if (idleBuilder_ == null) {
          idleBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              com.google.protobuf.Duration, com.google.protobuf.Duration.Builder, com.google.protobuf.DurationOrBuilder>(
                  getIdle(),
                  getParentForChildren(),
                  isClean());
          idle_ = null;
        }
        return idleBuilder_;
      }

      private com.google.protobuf.Duration shutdown_;
      private com.google.protobuf.SingleFieldBuilderV3<
          com.google.protobuf.Duration, com.google.protobuf.Duration.Builder, com.google.protobuf.DurationOrBuilder> shutdownBuilder_;
      /**
       * <pre>
       * If the execution or IO timeouts are exceeded, the worker will try to
       * gracefully terminate the task and return any existing logs. However,
       * tasks may be hard-frozen in which case this process will fail. This
       * timeout specifies how long to wait for a terminated task to shut down
       * gracefully (e.g. via SIGTERM) before we bring down the hammer (e.g.
       * SIGKILL on *nix, CTRL_BREAK_EVENT on Windows).
       * </pre>
       *
       * <code>.google.protobuf.Duration shutdown = 3;</code>
       * @return Whether the shutdown field is set.
       */
      public boolean hasShutdown() {
        return ((bitField0_ & 0x00000004) != 0);
      }
      /**
       * <pre>
       * If the execution or IO timeouts are exceeded, the worker will try to
       * gracefully terminate the task and return any existing logs. However,
       * tasks may be hard-frozen in which case this process will fail. This
       * timeout specifies how long to wait for a terminated task to shut down
       * gracefully (e.g. via SIGTERM) before we bring down the hammer (e.g.
       * SIGKILL on *nix, CTRL_BREAK_EVENT on Windows).
       * </pre>
       *
       * <code>.google.protobuf.Duration shutdown = 3;</code>
       * @return The shutdown.
       */
      public com.google.protobuf.Duration getShutdown() {
        if (shutdownBuilder_ == null) {
          return shutdown_ == null ? com.google.protobuf.Duration.getDefaultInstance() : shutdown_;
        } else {
          return shutdownBuilder_.getMessage();
        }
      }
      /**
       * <pre>
       * If the execution or IO timeouts are exceeded, the worker will try to
       * gracefully terminate the task and return any existing logs. However,
       * tasks may be hard-frozen in which case this process will fail. This
       * timeout specifies how long to wait for a terminated task to shut down
       * gracefully (e.g. via SIGTERM) before we bring down the hammer (e.g.
       * SIGKILL on *nix, CTRL_BREAK_EVENT on Windows).
       * </pre>
       *
       * <code>.google.protobuf.Duration shutdown = 3;</code>
       */
      public Builder setShutdown(com.google.protobuf.Duration value) {
        if (shutdownBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          shutdown_ = value;
        } else {
          shutdownBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000004;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * If the execution or IO timeouts are exceeded, the worker will try to
       * gracefully terminate the task and return any existing logs. However,
       * tasks may be hard-frozen in which case this process will fail. This
       * timeout specifies how long to wait for a terminated task to shut down
       * gracefully (e.g. via SIGTERM) before we bring down the hammer (e.g.
       * SIGKILL on *nix, CTRL_BREAK_EVENT on Windows).
       * </pre>
       *
       * <code>.google.protobuf.Duration shutdown = 3;</code>
       */
      public Builder setShutdown(
          com.google.protobuf.Duration.Builder builderForValue) {
        if (shutdownBuilder_ == null) {
          shutdown_ = builderForValue.build();
        } else {
          shutdownBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000004;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * If the execution or IO timeouts are exceeded, the worker will try to
       * gracefully terminate the task and return any existing logs. However,
       * tasks may be hard-frozen in which case this process will fail. This
       * timeout specifies how long to wait for a terminated task to shut down
       * gracefully (e.g. via SIGTERM) before we bring down the hammer (e.g.
       * SIGKILL on *nix, CTRL_BREAK_EVENT on Windows).
       * </pre>
       *
       * <code>.google.protobuf.Duration shutdown = 3;</code>
       */
      public Builder mergeShutdown(com.google.protobuf.Duration value) {
        if (shutdownBuilder_ == null) {
          if (((bitField0_ & 0x00000004) != 0) &&
            shutdown_ != null &&
            shutdown_ != com.google.protobuf.Duration.getDefaultInstance()) {
            getShutdownBuilder().mergeFrom(value);
          } else {
            shutdown_ = value;
          }
        } else {
          shutdownBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x00000004;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * If the execution or IO timeouts are exceeded, the worker will try to
       * gracefully terminate the task and return any existing logs. However,
       * tasks may be hard-frozen in which case this process will fail. This
       * timeout specifies how long to wait for a terminated task to shut down
       * gracefully (e.g. via SIGTERM) before we bring down the hammer (e.g.
       * SIGKILL on *nix, CTRL_BREAK_EVENT on Windows).
       * </pre>
       *
       * <code>.google.protobuf.Duration shutdown = 3;</code>
       */
      public Builder clearShutdown() {
        bitField0_ = (bitField0_ & ~0x00000004);
        shutdown_ = null;
        if (shutdownBuilder_ != null) {
          shutdownBuilder_.dispose();
          shutdownBuilder_ = null;
        }
        onChanged();
        return this;
      }
      /**
       * <pre>
       * If the execution or IO timeouts are exceeded, the worker will try to
       * gracefully terminate the task and return any existing logs. However,
       * tasks may be hard-frozen in which case this process will fail. This
       * timeout specifies how long to wait for a terminated task to shut down
       * gracefully (e.g. via SIGTERM) before we bring down the hammer (e.g.
       * SIGKILL on *nix, CTRL_BREAK_EVENT on Windows).
       * </pre>
       *
       * <code>.google.protobuf.Duration shutdown = 3;</code>
       */
      public com.google.protobuf.Duration.Builder getShutdownBuilder() {
        bitField0_ |= 0x00000004;
        onChanged();
        return getShutdownFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       * If the execution or IO timeouts are exceeded, the worker will try to
       * gracefully terminate the task and return any existing logs. However,
       * tasks may be hard-frozen in which case this process will fail. This
       * timeout specifies how long to wait for a terminated task to shut down
       * gracefully (e.g. via SIGTERM) before we bring down the hammer (e.g.
       * SIGKILL on *nix, CTRL_BREAK_EVENT on Windows).
       * </pre>
       *
       * <code>.google.protobuf.Duration shutdown = 3;</code>
       */
      public com.google.protobuf.DurationOrBuilder getShutdownOrBuilder() {
        if (shutdownBuilder_ != null) {
          return shutdownBuilder_.getMessageOrBuilder();
        } else {
          return shutdown_ == null ?
              com.google.protobuf.Duration.getDefaultInstance() : shutdown_;
        }
      }
      /**
       * <pre>
       * If the execution or IO timeouts are exceeded, the worker will try to
       * gracefully terminate the task and return any existing logs. However,
       * tasks may be hard-frozen in which case this process will fail. This
       * timeout specifies how long to wait for a terminated task to shut down
       * gracefully (e.g. via SIGTERM) before we bring down the hammer (e.g.
       * SIGKILL on *nix, CTRL_BREAK_EVENT on Windows).
       * </pre>
       *
       * <code>.google.protobuf.Duration shutdown = 3;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          com.google.protobuf.Duration, com.google.protobuf.Duration.Builder, com.google.protobuf.DurationOrBuilder> 
          getShutdownFieldBuilder() {
        if (shutdownBuilder_ == null) {
          shutdownBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              com.google.protobuf.Duration, com.google.protobuf.Duration.Builder, com.google.protobuf.DurationOrBuilder>(
                  getShutdown(),
                  getParentForChildren(),
                  isClean());
          shutdown_ = null;
        }
        return shutdownBuilder_;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:google.devtools.remoteworkers.v1test2.CommandTask.Timeouts)
    }

    // @@protoc_insertion_point(class_scope:google.devtools.remoteworkers.v1test2.CommandTask.Timeouts)
    private static final com.google.devtools.remoteworkers.v1test2.CommandTask.Timeouts DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new com.google.devtools.remoteworkers.v1test2.CommandTask.Timeouts();
    }

    public static com.google.devtools.remoteworkers.v1test2.CommandTask.Timeouts getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<Timeouts>
        PARSER = new com.google.protobuf.AbstractParser<Timeouts>() {
      @java.lang.Override
      public Timeouts parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        Builder builder = newBuilder();
        try {
          builder.mergeFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.setUnfinishedMessage(builder.buildPartial());
        } catch (com.google.protobuf.UninitializedMessageException e) {
          throw e.asInvalidProtocolBufferException().setUnfinishedMessage(builder.buildPartial());
        } catch (java.io.IOException e) {
          throw new com.google.protobuf.InvalidProtocolBufferException(e)
              .setUnfinishedMessage(builder.buildPartial());
        }
        return builder.buildPartial();
      }
    };

    public static com.google.protobuf.Parser<Timeouts> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<Timeouts> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.devtools.remoteworkers.v1test2.CommandTask.Timeouts getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public static final int INPUTS_FIELD_NUMBER = 1;
  private com.google.devtools.remoteworkers.v1test2.CommandTask.Inputs inputs_;
  /**
   * <pre>
   * The inputs to the task.
   * </pre>
   *
   * <code>.google.devtools.remoteworkers.v1test2.CommandTask.Inputs inputs = 1;</code>
   * @return Whether the inputs field is set.
   */
  @java.lang.Override
  public boolean hasInputs() {
    return inputs_ != null;
  }
  /**
   * <pre>
   * The inputs to the task.
   * </pre>
   *
   * <code>.google.devtools.remoteworkers.v1test2.CommandTask.Inputs inputs = 1;</code>
   * @return The inputs.
   */
  @java.lang.Override
  public com.google.devtools.remoteworkers.v1test2.CommandTask.Inputs getInputs() {
    return inputs_ == null ? com.google.devtools.remoteworkers.v1test2.CommandTask.Inputs.getDefaultInstance() : inputs_;
  }
  /**
   * <pre>
   * The inputs to the task.
   * </pre>
   *
   * <code>.google.devtools.remoteworkers.v1test2.CommandTask.Inputs inputs = 1;</code>
   */
  @java.lang.Override
  public com.google.devtools.remoteworkers.v1test2.CommandTask.InputsOrBuilder getInputsOrBuilder() {
    return inputs_ == null ? com.google.devtools.remoteworkers.v1test2.CommandTask.Inputs.getDefaultInstance() : inputs_;
  }

  public static final int EXPECTED_OUTPUTS_FIELD_NUMBER = 4;
  private com.google.devtools.remoteworkers.v1test2.CommandTask.Outputs expectedOutputs_;
  /**
   * <pre>
   * The expected outputs from the task.
   * </pre>
   *
   * <code>.google.devtools.remoteworkers.v1test2.CommandTask.Outputs expected_outputs = 4;</code>
   * @return Whether the expectedOutputs field is set.
   */
  @java.lang.Override
  public boolean hasExpectedOutputs() {
    return expectedOutputs_ != null;
  }
  /**
   * <pre>
   * The expected outputs from the task.
   * </pre>
   *
   * <code>.google.devtools.remoteworkers.v1test2.CommandTask.Outputs expected_outputs = 4;</code>
   * @return The expectedOutputs.
   */
  @java.lang.Override
  public com.google.devtools.remoteworkers.v1test2.CommandTask.Outputs getExpectedOutputs() {
    return expectedOutputs_ == null ? com.google.devtools.remoteworkers.v1test2.CommandTask.Outputs.getDefaultInstance() : expectedOutputs_;
  }
  /**
   * <pre>
   * The expected outputs from the task.
   * </pre>
   *
   * <code>.google.devtools.remoteworkers.v1test2.CommandTask.Outputs expected_outputs = 4;</code>
   */
  @java.lang.Override
  public com.google.devtools.remoteworkers.v1test2.CommandTask.OutputsOrBuilder getExpectedOutputsOrBuilder() {
    return expectedOutputs_ == null ? com.google.devtools.remoteworkers.v1test2.CommandTask.Outputs.getDefaultInstance() : expectedOutputs_;
  }

  public static final int TIMEOUTS_FIELD_NUMBER = 5;
  private com.google.devtools.remoteworkers.v1test2.CommandTask.Timeouts timeouts_;
  /**
   * <pre>
   * The timeouts of this task.
   * </pre>
   *
   * <code>.google.devtools.remoteworkers.v1test2.CommandTask.Timeouts timeouts = 5;</code>
   * @return Whether the timeouts field is set.
   */
  @java.lang.Override
  public boolean hasTimeouts() {
    return timeouts_ != null;
  }
  /**
   * <pre>
   * The timeouts of this task.
   * </pre>
   *
   * <code>.google.devtools.remoteworkers.v1test2.CommandTask.Timeouts timeouts = 5;</code>
   * @return The timeouts.
   */
  @java.lang.Override
  public com.google.devtools.remoteworkers.v1test2.CommandTask.Timeouts getTimeouts() {
    return timeouts_ == null ? com.google.devtools.remoteworkers.v1test2.CommandTask.Timeouts.getDefaultInstance() : timeouts_;
  }
  /**
   * <pre>
   * The timeouts of this task.
   * </pre>
   *
   * <code>.google.devtools.remoteworkers.v1test2.CommandTask.Timeouts timeouts = 5;</code>
   */
  @java.lang.Override
  public com.google.devtools.remoteworkers.v1test2.CommandTask.TimeoutsOrBuilder getTimeoutsOrBuilder() {
    return timeouts_ == null ? com.google.devtools.remoteworkers.v1test2.CommandTask.Timeouts.getDefaultInstance() : timeouts_;
  }

  private byte memoizedIsInitialized = -1;
  @java.lang.Override
  public final boolean isInitialized() {
    byte isInitialized = memoizedIsInitialized;
    if (isInitialized == 1) return true;
    if (isInitialized == 0) return false;

    memoizedIsInitialized = 1;
    return true;
  }

  @java.lang.Override
  public void writeTo(com.google.protobuf.CodedOutputStream output)
                      throws java.io.IOException {
    if (inputs_ != null) {
      output.writeMessage(1, getInputs());
    }
    if (expectedOutputs_ != null) {
      output.writeMessage(4, getExpectedOutputs());
    }
    if (timeouts_ != null) {
      output.writeMessage(5, getTimeouts());
    }
    getUnknownFields().writeTo(output);
  }

  @java.lang.Override
  public int getSerializedSize() {
    int size = memoizedSize;
    if (size != -1) return size;

    size = 0;
    if (inputs_ != null) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(1, getInputs());
    }
    if (expectedOutputs_ != null) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(4, getExpectedOutputs());
    }
    if (timeouts_ != null) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(5, getTimeouts());
    }
    size += getUnknownFields().getSerializedSize();
    memoizedSize = size;
    return size;
  }

  @java.lang.Override
  public boolean equals(final java.lang.Object obj) {
    if (obj == this) {
     return true;
    }
    if (!(obj instanceof com.google.devtools.remoteworkers.v1test2.CommandTask)) {
      return super.equals(obj);
    }
    com.google.devtools.remoteworkers.v1test2.CommandTask other = (com.google.devtools.remoteworkers.v1test2.CommandTask) obj;

    if (hasInputs() != other.hasInputs()) return false;
    if (hasInputs()) {
      if (!getInputs()
          .equals(other.getInputs())) return false;
    }
    if (hasExpectedOutputs() != other.hasExpectedOutputs()) return false;
    if (hasExpectedOutputs()) {
      if (!getExpectedOutputs()
          .equals(other.getExpectedOutputs())) return false;
    }
    if (hasTimeouts() != other.hasTimeouts()) return false;
    if (hasTimeouts()) {
      if (!getTimeouts()
          .equals(other.getTimeouts())) return false;
    }
    if (!getUnknownFields().equals(other.getUnknownFields())) return false;
    return true;
  }

  @java.lang.Override
  public int hashCode() {
    if (memoizedHashCode != 0) {
      return memoizedHashCode;
    }
    int hash = 41;
    hash = (19 * hash) + getDescriptor().hashCode();
    if (hasInputs()) {
      hash = (37 * hash) + INPUTS_FIELD_NUMBER;
      hash = (53 * hash) + getInputs().hashCode();
    }
    if (hasExpectedOutputs()) {
      hash = (37 * hash) + EXPECTED_OUTPUTS_FIELD_NUMBER;
      hash = (53 * hash) + getExpectedOutputs().hashCode();
    }
    if (hasTimeouts()) {
      hash = (37 * hash) + TIMEOUTS_FIELD_NUMBER;
      hash = (53 * hash) + getTimeouts().hashCode();
    }
    hash = (29 * hash) + getUnknownFields().hashCode();
    memoizedHashCode = hash;
    return hash;
  }

  public static com.google.devtools.remoteworkers.v1test2.CommandTask parseFrom(
      java.nio.ByteBuffer data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static com.google.devtools.remoteworkers.v1test2.CommandTask parseFrom(
      java.nio.ByteBuffer data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static com.google.devtools.remoteworkers.v1test2.CommandTask parseFrom(
      com.google.protobuf.ByteString data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static com.google.devtools.remoteworkers.v1test2.CommandTask parseFrom(
      com.google.protobuf.ByteString data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static com.google.devtools.remoteworkers.v1test2.CommandTask parseFrom(byte[] data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static com.google.devtools.remoteworkers.v1test2.CommandTask parseFrom(
      byte[] data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static com.google.devtools.remoteworkers.v1test2.CommandTask parseFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input);
  }
  public static com.google.devtools.remoteworkers.v1test2.CommandTask parseFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input, extensionRegistry);
  }
  public static com.google.devtools.remoteworkers.v1test2.CommandTask parseDelimitedFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseDelimitedWithIOException(PARSER, input);
  }
  public static com.google.devtools.remoteworkers.v1test2.CommandTask parseDelimitedFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
  }
  public static com.google.devtools.remoteworkers.v1test2.CommandTask parseFrom(
      com.google.protobuf.CodedInputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input);
  }
  public static com.google.devtools.remoteworkers.v1test2.CommandTask parseFrom(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input, extensionRegistry);
  }

  @java.lang.Override
  public Builder newBuilderForType() { return newBuilder(); }
  public static Builder newBuilder() {
    return DEFAULT_INSTANCE.toBuilder();
  }
  public static Builder newBuilder(com.google.devtools.remoteworkers.v1test2.CommandTask prototype) {
    return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
  }
  @java.lang.Override
  public Builder toBuilder() {
    return this == DEFAULT_INSTANCE
        ? new Builder() : new Builder().mergeFrom(this);
  }

  @java.lang.Override
  protected Builder newBuilderForType(
      com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
    Builder builder = new Builder(parent);
    return builder;
  }
  /**
   * <pre>
   * Describes a shell-style task to execute, suitable for providing as the Bots
   * interface's `Lease.payload` field.
   * </pre>
   *
   * Protobuf type {@code google.devtools.remoteworkers.v1test2.CommandTask}
   */
  public static final class Builder extends
      com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
      // @@protoc_insertion_point(builder_implements:google.devtools.remoteworkers.v1test2.CommandTask)
      com.google.devtools.remoteworkers.v1test2.CommandTaskOrBuilder {
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.google.devtools.remoteworkers.v1test2.RemoteWorkersCommands.internal_static_google_devtools_remoteworkers_v1test2_CommandTask_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.google.devtools.remoteworkers.v1test2.RemoteWorkersCommands.internal_static_google_devtools_remoteworkers_v1test2_CommandTask_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.google.devtools.remoteworkers.v1test2.CommandTask.class, com.google.devtools.remoteworkers.v1test2.CommandTask.Builder.class);
    }

    // Construct using com.google.devtools.remoteworkers.v1test2.CommandTask.newBuilder()
    private Builder() {

    }

    private Builder(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      super(parent);

    }
    @java.lang.Override
    public Builder clear() {
      super.clear();
      bitField0_ = 0;
      inputs_ = null;
      if (inputsBuilder_ != null) {
        inputsBuilder_.dispose();
        inputsBuilder_ = null;
      }
      expectedOutputs_ = null;
      if (expectedOutputsBuilder_ != null) {
        expectedOutputsBuilder_.dispose();
        expectedOutputsBuilder_ = null;
      }
      timeouts_ = null;
      if (timeoutsBuilder_ != null) {
        timeoutsBuilder_.dispose();
        timeoutsBuilder_ = null;
      }
      return this;
    }

    @java.lang.Override
    public com.google.protobuf.Descriptors.Descriptor
        getDescriptorForType() {
      return com.google.devtools.remoteworkers.v1test2.RemoteWorkersCommands.internal_static_google_devtools_remoteworkers_v1test2_CommandTask_descriptor;
    }

    @java.lang.Override
    public com.google.devtools.remoteworkers.v1test2.CommandTask getDefaultInstanceForType() {
      return com.google.devtools.remoteworkers.v1test2.CommandTask.getDefaultInstance();
    }

    @java.lang.Override
    public com.google.devtools.remoteworkers.v1test2.CommandTask build() {
      com.google.devtools.remoteworkers.v1test2.CommandTask result = buildPartial();
      if (!result.isInitialized()) {
        throw newUninitializedMessageException(result);
      }
      return result;
    }

    @java.lang.Override
    public com.google.devtools.remoteworkers.v1test2.CommandTask buildPartial() {
      com.google.devtools.remoteworkers.v1test2.CommandTask result = new com.google.devtools.remoteworkers.v1test2.CommandTask(this);
      if (bitField0_ != 0) { buildPartial0(result); }
      onBuilt();
      return result;
    }

    private void buildPartial0(com.google.devtools.remoteworkers.v1test2.CommandTask result) {
      int from_bitField0_ = bitField0_;
      if (((from_bitField0_ & 0x00000001) != 0)) {
        result.inputs_ = inputsBuilder_ == null
            ? inputs_
            : inputsBuilder_.build();
      }
      if (((from_bitField0_ & 0x00000002) != 0)) {
        result.expectedOutputs_ = expectedOutputsBuilder_ == null
            ? expectedOutputs_
            : expectedOutputsBuilder_.build();
      }
      if (((from_bitField0_ & 0x00000004) != 0)) {
        result.timeouts_ = timeoutsBuilder_ == null
            ? timeouts_
            : timeoutsBuilder_.build();
      }
    }

    @java.lang.Override
    public Builder clone() {
      return super.clone();
    }
    @java.lang.Override
    public Builder setField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        java.lang.Object value) {
      return super.setField(field, value);
    }
    @java.lang.Override
    public Builder clearField(
        com.google.protobuf.Descriptors.FieldDescriptor field) {
      return super.clearField(field);
    }
    @java.lang.Override
    public Builder clearOneof(
        com.google.protobuf.Descriptors.OneofDescriptor oneof) {
      return super.clearOneof(oneof);
    }
    @java.lang.Override
    public Builder setRepeatedField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        int index, java.lang.Object value) {
      return super.setRepeatedField(field, index, value);
    }
    @java.lang.Override
    public Builder addRepeatedField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        java.lang.Object value) {
      return super.addRepeatedField(field, value);
    }
    @java.lang.Override
    public Builder mergeFrom(com.google.protobuf.Message other) {
      if (other instanceof com.google.devtools.remoteworkers.v1test2.CommandTask) {
        return mergeFrom((com.google.devtools.remoteworkers.v1test2.CommandTask)other);
      } else {
        super.mergeFrom(other);
        return this;
      }
    }

    public Builder mergeFrom(com.google.devtools.remoteworkers.v1test2.CommandTask other) {
      if (other == com.google.devtools.remoteworkers.v1test2.CommandTask.getDefaultInstance()) return this;
      if (other.hasInputs()) {
        mergeInputs(other.getInputs());
      }
      if (other.hasExpectedOutputs()) {
        mergeExpectedOutputs(other.getExpectedOutputs());
      }
      if (other.hasTimeouts()) {
        mergeTimeouts(other.getTimeouts());
      }
      this.mergeUnknownFields(other.getUnknownFields());
      onChanged();
      return this;
    }

    @java.lang.Override
    public final boolean isInitialized() {
      return true;
    }

    @java.lang.Override
    public Builder mergeFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 10: {
              input.readMessage(
                  getInputsFieldBuilder().getBuilder(),
                  extensionRegistry);
              bitField0_ |= 0x00000001;
              break;
            } // case 10
            case 34: {
              input.readMessage(
                  getExpectedOutputsFieldBuilder().getBuilder(),
                  extensionRegistry);
              bitField0_ |= 0x00000002;
              break;
            } // case 34
            case 42: {
              input.readMessage(
                  getTimeoutsFieldBuilder().getBuilder(),
                  extensionRegistry);
              bitField0_ |= 0x00000004;
              break;
            } // case 42
            default: {
              if (!super.parseUnknownField(input, extensionRegistry, tag)) {
                done = true; // was an endgroup tag
              }
              break;
            } // default:
          } // switch (tag)
        } // while (!done)
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.unwrapIOException();
      } finally {
        onChanged();
      } // finally
      return this;
    }
    private int bitField0_;

    private com.google.devtools.remoteworkers.v1test2.CommandTask.Inputs inputs_;
    private com.google.protobuf.SingleFieldBuilderV3<
        com.google.devtools.remoteworkers.v1test2.CommandTask.Inputs, com.google.devtools.remoteworkers.v1test2.CommandTask.Inputs.Builder, com.google.devtools.remoteworkers.v1test2.CommandTask.InputsOrBuilder> inputsBuilder_;
    /**
     * <pre>
     * The inputs to the task.
     * </pre>
     *
     * <code>.google.devtools.remoteworkers.v1test2.CommandTask.Inputs inputs = 1;</code>
     * @return Whether the inputs field is set.
     */
    public boolean hasInputs() {
      return ((bitField0_ & 0x00000001) != 0);
    }
    /**
     * <pre>
     * The inputs to the task.
     * </pre>
     *
     * <code>.google.devtools.remoteworkers.v1test2.CommandTask.Inputs inputs = 1;</code>
     * @return The inputs.
     */
    public com.google.devtools.remoteworkers.v1test2.CommandTask.Inputs getInputs() {
      if (inputsBuilder_ == null) {
        return inputs_ == null ? com.google.devtools.remoteworkers.v1test2.CommandTask.Inputs.getDefaultInstance() : inputs_;
      } else {
        return inputsBuilder_.getMessage();
      }
    }
    /**
     * <pre>
     * The inputs to the task.
     * </pre>
     *
     * <code>.google.devtools.remoteworkers.v1test2.CommandTask.Inputs inputs = 1;</code>
     */
    public Builder setInputs(com.google.devtools.remoteworkers.v1test2.CommandTask.Inputs value) {
      if (inputsBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        inputs_ = value;
      } else {
        inputsBuilder_.setMessage(value);
      }
      bitField0_ |= 0x00000001;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * The inputs to the task.
     * </pre>
     *
     * <code>.google.devtools.remoteworkers.v1test2.CommandTask.Inputs inputs = 1;</code>
     */
    public Builder setInputs(
        com.google.devtools.remoteworkers.v1test2.CommandTask.Inputs.Builder builderForValue) {
      if (inputsBuilder_ == null) {
        inputs_ = builderForValue.build();
      } else {
        inputsBuilder_.setMessage(builderForValue.build());
      }
      bitField0_ |= 0x00000001;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * The inputs to the task.
     * </pre>
     *
     * <code>.google.devtools.remoteworkers.v1test2.CommandTask.Inputs inputs = 1;</code>
     */
    public Builder mergeInputs(com.google.devtools.remoteworkers.v1test2.CommandTask.Inputs value) {
      if (inputsBuilder_ == null) {
        if (((bitField0_ & 0x00000001) != 0) &&
          inputs_ != null &&
          inputs_ != com.google.devtools.remoteworkers.v1test2.CommandTask.Inputs.getDefaultInstance()) {
          getInputsBuilder().mergeFrom(value);
        } else {
          inputs_ = value;
        }
      } else {
        inputsBuilder_.mergeFrom(value);
      }
      bitField0_ |= 0x00000001;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * The inputs to the task.
     * </pre>
     *
     * <code>.google.devtools.remoteworkers.v1test2.CommandTask.Inputs inputs = 1;</code>
     */
    public Builder clearInputs() {
      bitField0_ = (bitField0_ & ~0x00000001);
      inputs_ = null;
      if (inputsBuilder_ != null) {
        inputsBuilder_.dispose();
        inputsBuilder_ = null;
      }
      onChanged();
      return this;
    }
    /**
     * <pre>
     * The inputs to the task.
     * </pre>
     *
     * <code>.google.devtools.remoteworkers.v1test2.CommandTask.Inputs inputs = 1;</code>
     */
    public com.google.devtools.remoteworkers.v1test2.CommandTask.Inputs.Builder getInputsBuilder() {
      bitField0_ |= 0x00000001;
      onChanged();
      return getInputsFieldBuilder().getBuilder();
    }
    /**
     * <pre>
     * The inputs to the task.
     * </pre>
     *
     * <code>.google.devtools.remoteworkers.v1test2.CommandTask.Inputs inputs = 1;</code>
     */
    public com.google.devtools.remoteworkers.v1test2.CommandTask.InputsOrBuilder getInputsOrBuilder() {
      if (inputsBuilder_ != null) {
        return inputsBuilder_.getMessageOrBuilder();
      } else {
        return inputs_ == null ?
            com.google.devtools.remoteworkers.v1test2.CommandTask.Inputs.getDefaultInstance() : inputs_;
      }
    }
    /**
     * <pre>
     * The inputs to the task.
     * </pre>
     *
     * <code>.google.devtools.remoteworkers.v1test2.CommandTask.Inputs inputs = 1;</code>
     */
    private com.google.protobuf.SingleFieldBuilderV3<
        com.google.devtools.remoteworkers.v1test2.CommandTask.Inputs, com.google.devtools.remoteworkers.v1test2.CommandTask.Inputs.Builder, com.google.devtools.remoteworkers.v1test2.CommandTask.InputsOrBuilder> 
        getInputsFieldBuilder() {
      if (inputsBuilder_ == null) {
        inputsBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
            com.google.devtools.remoteworkers.v1test2.CommandTask.Inputs, com.google.devtools.remoteworkers.v1test2.CommandTask.Inputs.Builder, com.google.devtools.remoteworkers.v1test2.CommandTask.InputsOrBuilder>(
                getInputs(),
                getParentForChildren(),
                isClean());
        inputs_ = null;
      }
      return inputsBuilder_;
    }

    private com.google.devtools.remoteworkers.v1test2.CommandTask.Outputs expectedOutputs_;
    private com.google.protobuf.SingleFieldBuilderV3<
        com.google.devtools.remoteworkers.v1test2.CommandTask.Outputs, com.google.devtools.remoteworkers.v1test2.CommandTask.Outputs.Builder, com.google.devtools.remoteworkers.v1test2.CommandTask.OutputsOrBuilder> expectedOutputsBuilder_;
    /**
     * <pre>
     * The expected outputs from the task.
     * </pre>
     *
     * <code>.google.devtools.remoteworkers.v1test2.CommandTask.Outputs expected_outputs = 4;</code>
     * @return Whether the expectedOutputs field is set.
     */
    public boolean hasExpectedOutputs() {
      return ((bitField0_ & 0x00000002) != 0);
    }
    /**
     * <pre>
     * The expected outputs from the task.
     * </pre>
     *
     * <code>.google.devtools.remoteworkers.v1test2.CommandTask.Outputs expected_outputs = 4;</code>
     * @return The expectedOutputs.
     */
    public com.google.devtools.remoteworkers.v1test2.CommandTask.Outputs getExpectedOutputs() {
      if (expectedOutputsBuilder_ == null) {
        return expectedOutputs_ == null ? com.google.devtools.remoteworkers.v1test2.CommandTask.Outputs.getDefaultInstance() : expectedOutputs_;
      } else {
        return expectedOutputsBuilder_.getMessage();
      }
    }
    /**
     * <pre>
     * The expected outputs from the task.
     * </pre>
     *
     * <code>.google.devtools.remoteworkers.v1test2.CommandTask.Outputs expected_outputs = 4;</code>
     */
    public Builder setExpectedOutputs(com.google.devtools.remoteworkers.v1test2.CommandTask.Outputs value) {
      if (expectedOutputsBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        expectedOutputs_ = value;
      } else {
        expectedOutputsBuilder_.setMessage(value);
      }
      bitField0_ |= 0x00000002;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * The expected outputs from the task.
     * </pre>
     *
     * <code>.google.devtools.remoteworkers.v1test2.CommandTask.Outputs expected_outputs = 4;</code>
     */
    public Builder setExpectedOutputs(
        com.google.devtools.remoteworkers.v1test2.CommandTask.Outputs.Builder builderForValue) {
      if (expectedOutputsBuilder_ == null) {
        expectedOutputs_ = builderForValue.build();
      } else {
        expectedOutputsBuilder_.setMessage(builderForValue.build());
      }
      bitField0_ |= 0x00000002;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * The expected outputs from the task.
     * </pre>
     *
     * <code>.google.devtools.remoteworkers.v1test2.CommandTask.Outputs expected_outputs = 4;</code>
     */
    public Builder mergeExpectedOutputs(com.google.devtools.remoteworkers.v1test2.CommandTask.Outputs value) {
      if (expectedOutputsBuilder_ == null) {
        if (((bitField0_ & 0x00000002) != 0) &&
          expectedOutputs_ != null &&
          expectedOutputs_ != com.google.devtools.remoteworkers.v1test2.CommandTask.Outputs.getDefaultInstance()) {
          getExpectedOutputsBuilder().mergeFrom(value);
        } else {
          expectedOutputs_ = value;
        }
      } else {
        expectedOutputsBuilder_.mergeFrom(value);
      }
      bitField0_ |= 0x00000002;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * The expected outputs from the task.
     * </pre>
     *
     * <code>.google.devtools.remoteworkers.v1test2.CommandTask.Outputs expected_outputs = 4;</code>
     */
    public Builder clearExpectedOutputs() {
      bitField0_ = (bitField0_ & ~0x00000002);
      expectedOutputs_ = null;
      if (expectedOutputsBuilder_ != null) {
        expectedOutputsBuilder_.dispose();
        expectedOutputsBuilder_ = null;
      }
      onChanged();
      return this;
    }
    /**
     * <pre>
     * The expected outputs from the task.
     * </pre>
     *
     * <code>.google.devtools.remoteworkers.v1test2.CommandTask.Outputs expected_outputs = 4;</code>
     */
    public com.google.devtools.remoteworkers.v1test2.CommandTask.Outputs.Builder getExpectedOutputsBuilder() {
      bitField0_ |= 0x00000002;
      onChanged();
      return getExpectedOutputsFieldBuilder().getBuilder();
    }
    /**
     * <pre>
     * The expected outputs from the task.
     * </pre>
     *
     * <code>.google.devtools.remoteworkers.v1test2.CommandTask.Outputs expected_outputs = 4;</code>
     */
    public com.google.devtools.remoteworkers.v1test2.CommandTask.OutputsOrBuilder getExpectedOutputsOrBuilder() {
      if (expectedOutputsBuilder_ != null) {
        return expectedOutputsBuilder_.getMessageOrBuilder();
      } else {
        return expectedOutputs_ == null ?
            com.google.devtools.remoteworkers.v1test2.CommandTask.Outputs.getDefaultInstance() : expectedOutputs_;
      }
    }
    /**
     * <pre>
     * The expected outputs from the task.
     * </pre>
     *
     * <code>.google.devtools.remoteworkers.v1test2.CommandTask.Outputs expected_outputs = 4;</code>
     */
    private com.google.protobuf.SingleFieldBuilderV3<
        com.google.devtools.remoteworkers.v1test2.CommandTask.Outputs, com.google.devtools.remoteworkers.v1test2.CommandTask.Outputs.Builder, com.google.devtools.remoteworkers.v1test2.CommandTask.OutputsOrBuilder> 
        getExpectedOutputsFieldBuilder() {
      if (expectedOutputsBuilder_ == null) {
        expectedOutputsBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
            com.google.devtools.remoteworkers.v1test2.CommandTask.Outputs, com.google.devtools.remoteworkers.v1test2.CommandTask.Outputs.Builder, com.google.devtools.remoteworkers.v1test2.CommandTask.OutputsOrBuilder>(
                getExpectedOutputs(),
                getParentForChildren(),
                isClean());
        expectedOutputs_ = null;
      }
      return expectedOutputsBuilder_;
    }

    private com.google.devtools.remoteworkers.v1test2.CommandTask.Timeouts timeouts_;
    private com.google.protobuf.SingleFieldBuilderV3<
        com.google.devtools.remoteworkers.v1test2.CommandTask.Timeouts, com.google.devtools.remoteworkers.v1test2.CommandTask.Timeouts.Builder, com.google.devtools.remoteworkers.v1test2.CommandTask.TimeoutsOrBuilder> timeoutsBuilder_;
    /**
     * <pre>
     * The timeouts of this task.
     * </pre>
     *
     * <code>.google.devtools.remoteworkers.v1test2.CommandTask.Timeouts timeouts = 5;</code>
     * @return Whether the timeouts field is set.
     */
    public boolean hasTimeouts() {
      return ((bitField0_ & 0x00000004) != 0);
    }
    /**
     * <pre>
     * The timeouts of this task.
     * </pre>
     *
     * <code>.google.devtools.remoteworkers.v1test2.CommandTask.Timeouts timeouts = 5;</code>
     * @return The timeouts.
     */
    public com.google.devtools.remoteworkers.v1test2.CommandTask.Timeouts getTimeouts() {
      if (timeoutsBuilder_ == null) {
        return timeouts_ == null ? com.google.devtools.remoteworkers.v1test2.CommandTask.Timeouts.getDefaultInstance() : timeouts_;
      } else {
        return timeoutsBuilder_.getMessage();
      }
    }
    /**
     * <pre>
     * The timeouts of this task.
     * </pre>
     *
     * <code>.google.devtools.remoteworkers.v1test2.CommandTask.Timeouts timeouts = 5;</code>
     */
    public Builder setTimeouts(com.google.devtools.remoteworkers.v1test2.CommandTask.Timeouts value) {
      if (timeoutsBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        timeouts_ = value;
      } else {
        timeoutsBuilder_.setMessage(value);
      }
      bitField0_ |= 0x00000004;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * The timeouts of this task.
     * </pre>
     *
     * <code>.google.devtools.remoteworkers.v1test2.CommandTask.Timeouts timeouts = 5;</code>
     */
    public Builder setTimeouts(
        com.google.devtools.remoteworkers.v1test2.CommandTask.Timeouts.Builder builderForValue) {
      if (timeoutsBuilder_ == null) {
        timeouts_ = builderForValue.build();
      } else {
        timeoutsBuilder_.setMessage(builderForValue.build());
      }
      bitField0_ |= 0x00000004;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * The timeouts of this task.
     * </pre>
     *
     * <code>.google.devtools.remoteworkers.v1test2.CommandTask.Timeouts timeouts = 5;</code>
     */
    public Builder mergeTimeouts(com.google.devtools.remoteworkers.v1test2.CommandTask.Timeouts value) {
      if (timeoutsBuilder_ == null) {
        if (((bitField0_ & 0x00000004) != 0) &&
          timeouts_ != null &&
          timeouts_ != com.google.devtools.remoteworkers.v1test2.CommandTask.Timeouts.getDefaultInstance()) {
          getTimeoutsBuilder().mergeFrom(value);
        } else {
          timeouts_ = value;
        }
      } else {
        timeoutsBuilder_.mergeFrom(value);
      }
      bitField0_ |= 0x00000004;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * The timeouts of this task.
     * </pre>
     *
     * <code>.google.devtools.remoteworkers.v1test2.CommandTask.Timeouts timeouts = 5;</code>
     */
    public Builder clearTimeouts() {
      bitField0_ = (bitField0_ & ~0x00000004);
      timeouts_ = null;
      if (timeoutsBuilder_ != null) {
        timeoutsBuilder_.dispose();
        timeoutsBuilder_ = null;
      }
      onChanged();
      return this;
    }
    /**
     * <pre>
     * The timeouts of this task.
     * </pre>
     *
     * <code>.google.devtools.remoteworkers.v1test2.CommandTask.Timeouts timeouts = 5;</code>
     */
    public com.google.devtools.remoteworkers.v1test2.CommandTask.Timeouts.Builder getTimeoutsBuilder() {
      bitField0_ |= 0x00000004;
      onChanged();
      return getTimeoutsFieldBuilder().getBuilder();
    }
    /**
     * <pre>
     * The timeouts of this task.
     * </pre>
     *
     * <code>.google.devtools.remoteworkers.v1test2.CommandTask.Timeouts timeouts = 5;</code>
     */
    public com.google.devtools.remoteworkers.v1test2.CommandTask.TimeoutsOrBuilder getTimeoutsOrBuilder() {
      if (timeoutsBuilder_ != null) {
        return timeoutsBuilder_.getMessageOrBuilder();
      } else {
        return timeouts_ == null ?
            com.google.devtools.remoteworkers.v1test2.CommandTask.Timeouts.getDefaultInstance() : timeouts_;
      }
    }
    /**
     * <pre>
     * The timeouts of this task.
     * </pre>
     *
     * <code>.google.devtools.remoteworkers.v1test2.CommandTask.Timeouts timeouts = 5;</code>
     */
    private com.google.protobuf.SingleFieldBuilderV3<
        com.google.devtools.remoteworkers.v1test2.CommandTask.Timeouts, com.google.devtools.remoteworkers.v1test2.CommandTask.Timeouts.Builder, com.google.devtools.remoteworkers.v1test2.CommandTask.TimeoutsOrBuilder> 
        getTimeoutsFieldBuilder() {
      if (timeoutsBuilder_ == null) {
        timeoutsBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
            com.google.devtools.remoteworkers.v1test2.CommandTask.Timeouts, com.google.devtools.remoteworkers.v1test2.CommandTask.Timeouts.Builder, com.google.devtools.remoteworkers.v1test2.CommandTask.TimeoutsOrBuilder>(
                getTimeouts(),
                getParentForChildren(),
                isClean());
        timeouts_ = null;
      }
      return timeoutsBuilder_;
    }
    @java.lang.Override
    public final Builder setUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return super.setUnknownFields(unknownFields);
    }

    @java.lang.Override
    public final Builder mergeUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return super.mergeUnknownFields(unknownFields);
    }


    // @@protoc_insertion_point(builder_scope:google.devtools.remoteworkers.v1test2.CommandTask)
  }

  // @@protoc_insertion_point(class_scope:google.devtools.remoteworkers.v1test2.CommandTask)
  private static final com.google.devtools.remoteworkers.v1test2.CommandTask DEFAULT_INSTANCE;
  static {
    DEFAULT_INSTANCE = new com.google.devtools.remoteworkers.v1test2.CommandTask();
  }

  public static com.google.devtools.remoteworkers.v1test2.CommandTask getDefaultInstance() {
    return DEFAULT_INSTANCE;
  }

  private static final com.google.protobuf.Parser<CommandTask>
      PARSER = new com.google.protobuf.AbstractParser<CommandTask>() {
    @java.lang.Override
    public CommandTask parsePartialFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      Builder builder = newBuilder();
      try {
        builder.mergeFrom(input, extensionRegistry);
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(builder.buildPartial());
      } catch (com.google.protobuf.UninitializedMessageException e) {
        throw e.asInvalidProtocolBufferException().setUnfinishedMessage(builder.buildPartial());
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(e)
            .setUnfinishedMessage(builder.buildPartial());
      }
      return builder.buildPartial();
    }
  };

  public static com.google.protobuf.Parser<CommandTask> parser() {
    return PARSER;
  }

  @java.lang.Override
  public com.google.protobuf.Parser<CommandTask> getParserForType() {
    return PARSER;
  }

  @java.lang.Override
  public com.google.devtools.remoteworkers.v1test2.CommandTask getDefaultInstanceForType() {
    return DEFAULT_INSTANCE;
  }

}

