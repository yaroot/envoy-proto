// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: google/devtools/remoteworkers/v1test2/bots.proto

package com.google.devtools.remoteworkers.v1test2;

/**
 * <pre>
 * A Lease is a lease that the scheduler has assigned to this bot. If the bot
 * notices (by UpdateBotSession) that it has any leases in the PENDING state, it
 * should call UpdateBotSession to put the leases into the ACTIVE state and
 * start executing their assignments.
 * All fields in this message are output-only, *except* the `state` and `status`
 * fields. Note that repeated fields can only be updated as a unit, so on every
 * update the bot must provide an update for *all* the leases the server expects
 * it to report on.
 * The scheduler *should* ensure that all leases scheduled to a bot can actually
 * be accepted, but race conditions may occur. In such cases, the bot should
 * attempt to accept the leases in the order they are listed by the server, to
 * allow the server to control priorities.
 * The server will remove COMPLETED leases from time to time, after which the
 * bot shouldn't report on them any more (the server will ignore superfluous
 * COMPLETED records).
 * </pre>
 *
 * Protobuf type {@code google.devtools.remoteworkers.v1test2.Lease}
 */
public final class Lease extends
    com.google.protobuf.GeneratedMessageV3 implements
    // @@protoc_insertion_point(message_implements:google.devtools.remoteworkers.v1test2.Lease)
    LeaseOrBuilder {
private static final long serialVersionUID = 0L;
  // Use Lease.newBuilder() to construct.
  private Lease(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
    super(builder);
  }
  private Lease() {
    id_ = "";
    state_ = 0;
    assignment_ = "";
  }

  @java.lang.Override
  @SuppressWarnings({"unused"})
  protected java.lang.Object newInstance(
      UnusedPrivateParameter unused) {
    return new Lease();
  }

  @java.lang.Override
  public final com.google.protobuf.UnknownFieldSet
  getUnknownFields() {
    return this.unknownFields;
  }
  private Lease(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    this();
    if (extensionRegistry == null) {
      throw new java.lang.NullPointerException();
    }
    com.google.protobuf.UnknownFieldSet.Builder unknownFields =
        com.google.protobuf.UnknownFieldSet.newBuilder();
    try {
      boolean done = false;
      while (!done) {
        int tag = input.readTag();
        switch (tag) {
          case 0:
            done = true;
            break;
          case 10: {
            java.lang.String s = input.readStringRequireUtf8();

            assignment_ = s;
            break;
          }
          case 16: {
            int rawValue = input.readEnum();

            state_ = rawValue;
            break;
          }
          case 26: {
            com.google.rpc.Status.Builder subBuilder = null;
            if (status_ != null) {
              subBuilder = status_.toBuilder();
            }
            status_ = input.readMessage(com.google.rpc.Status.parser(), extensionRegistry);
            if (subBuilder != null) {
              subBuilder.mergeFrom(status_);
              status_ = subBuilder.buildPartial();
            }

            break;
          }
          case 34: {
            com.google.devtools.remoteworkers.v1test2.Worker.Builder subBuilder = null;
            if (requirements_ != null) {
              subBuilder = requirements_.toBuilder();
            }
            requirements_ = input.readMessage(com.google.devtools.remoteworkers.v1test2.Worker.parser(), extensionRegistry);
            if (subBuilder != null) {
              subBuilder.mergeFrom(requirements_);
              requirements_ = subBuilder.buildPartial();
            }

            break;
          }
          case 42: {
            com.google.protobuf.Timestamp.Builder subBuilder = null;
            if (expireTime_ != null) {
              subBuilder = expireTime_.toBuilder();
            }
            expireTime_ = input.readMessage(com.google.protobuf.Timestamp.parser(), extensionRegistry);
            if (subBuilder != null) {
              subBuilder.mergeFrom(expireTime_);
              expireTime_ = subBuilder.buildPartial();
            }

            break;
          }
          case 50: {
            com.google.protobuf.Any.Builder subBuilder = null;
            if (inlineAssignment_ != null) {
              subBuilder = inlineAssignment_.toBuilder();
            }
            inlineAssignment_ = input.readMessage(com.google.protobuf.Any.parser(), extensionRegistry);
            if (subBuilder != null) {
              subBuilder.mergeFrom(inlineAssignment_);
              inlineAssignment_ = subBuilder.buildPartial();
            }

            break;
          }
          case 58: {
            java.lang.String s = input.readStringRequireUtf8();

            id_ = s;
            break;
          }
          case 66: {
            com.google.protobuf.Any.Builder subBuilder = null;
            if (payload_ != null) {
              subBuilder = payload_.toBuilder();
            }
            payload_ = input.readMessage(com.google.protobuf.Any.parser(), extensionRegistry);
            if (subBuilder != null) {
              subBuilder.mergeFrom(payload_);
              payload_ = subBuilder.buildPartial();
            }

            break;
          }
          case 74: {
            com.google.protobuf.Any.Builder subBuilder = null;
            if (result_ != null) {
              subBuilder = result_.toBuilder();
            }
            result_ = input.readMessage(com.google.protobuf.Any.parser(), extensionRegistry);
            if (subBuilder != null) {
              subBuilder.mergeFrom(result_);
              result_ = subBuilder.buildPartial();
            }

            break;
          }
          default: {
            if (!parseUnknownField(
                input, unknownFields, extensionRegistry, tag)) {
              done = true;
            }
            break;
          }
        }
      }
    } catch (com.google.protobuf.InvalidProtocolBufferException e) {
      throw e.setUnfinishedMessage(this);
    } catch (com.google.protobuf.UninitializedMessageException e) {
      throw e.asInvalidProtocolBufferException().setUnfinishedMessage(this);
    } catch (java.io.IOException e) {
      throw new com.google.protobuf.InvalidProtocolBufferException(
          e).setUnfinishedMessage(this);
    } finally {
      this.unknownFields = unknownFields.build();
      makeExtensionsImmutable();
    }
  }
  public static final com.google.protobuf.Descriptors.Descriptor
      getDescriptor() {
    return com.google.devtools.remoteworkers.v1test2.RemoteWorkersBots.internal_static_google_devtools_remoteworkers_v1test2_Lease_descriptor;
  }

  @java.lang.Override
  protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internalGetFieldAccessorTable() {
    return com.google.devtools.remoteworkers.v1test2.RemoteWorkersBots.internal_static_google_devtools_remoteworkers_v1test2_Lease_fieldAccessorTable
        .ensureFieldAccessorsInitialized(
            com.google.devtools.remoteworkers.v1test2.Lease.class, com.google.devtools.remoteworkers.v1test2.Lease.Builder.class);
  }

  public static final int ID_FIELD_NUMBER = 7;
  private volatile java.lang.Object id_;
  /**
   * <pre>
   * A short string uniquely identifing the lease within this bot session.
   * </pre>
   *
   * <code>string id = 7;</code>
   * @return The id.
   */
  @java.lang.Override
  public java.lang.String getId() {
    java.lang.Object ref = id_;
    if (ref instanceof java.lang.String) {
      return (java.lang.String) ref;
    } else {
      com.google.protobuf.ByteString bs = 
          (com.google.protobuf.ByteString) ref;
      java.lang.String s = bs.toStringUtf8();
      id_ = s;
      return s;
    }
  }
  /**
   * <pre>
   * A short string uniquely identifing the lease within this bot session.
   * </pre>
   *
   * <code>string id = 7;</code>
   * @return The bytes for id.
   */
  @java.lang.Override
  public com.google.protobuf.ByteString
      getIdBytes() {
    java.lang.Object ref = id_;
    if (ref instanceof java.lang.String) {
      com.google.protobuf.ByteString b = 
          com.google.protobuf.ByteString.copyFromUtf8(
              (java.lang.String) ref);
      id_ = b;
      return b;
    } else {
      return (com.google.protobuf.ByteString) ref;
    }
  }

  public static final int PAYLOAD_FIELD_NUMBER = 8;
  private com.google.protobuf.Any payload_;
  /**
   * <pre>
   * The actual work to be performed, if any. May be omitted by the server if
   * the lease is not in the `PENDING` state. The message must be meaningful to
   * the bot. Output only (must only be set by the server).
   * </pre>
   *
   * <code>.google.protobuf.Any payload = 8;</code>
   * @return Whether the payload field is set.
   */
  @java.lang.Override
  public boolean hasPayload() {
    return payload_ != null;
  }
  /**
   * <pre>
   * The actual work to be performed, if any. May be omitted by the server if
   * the lease is not in the `PENDING` state. The message must be meaningful to
   * the bot. Output only (must only be set by the server).
   * </pre>
   *
   * <code>.google.protobuf.Any payload = 8;</code>
   * @return The payload.
   */
  @java.lang.Override
  public com.google.protobuf.Any getPayload() {
    return payload_ == null ? com.google.protobuf.Any.getDefaultInstance() : payload_;
  }
  /**
   * <pre>
   * The actual work to be performed, if any. May be omitted by the server if
   * the lease is not in the `PENDING` state. The message must be meaningful to
   * the bot. Output only (must only be set by the server).
   * </pre>
   *
   * <code>.google.protobuf.Any payload = 8;</code>
   */
  @java.lang.Override
  public com.google.protobuf.AnyOrBuilder getPayloadOrBuilder() {
    return getPayload();
  }

  public static final int RESULT_FIELD_NUMBER = 9;
  private com.google.protobuf.Any result_;
  /**
   * <pre>
   * Any result the bot wishes to provide about the lease. Must not be changed
   * after the first call with the lease in the `COMPLETED` or `CANCELLED`
   * state. Input only (must only be set by the bot, will not be echoed by the
   * server).
   * </pre>
   *
   * <code>.google.protobuf.Any result = 9;</code>
   * @return Whether the result field is set.
   */
  @java.lang.Override
  public boolean hasResult() {
    return result_ != null;
  }
  /**
   * <pre>
   * Any result the bot wishes to provide about the lease. Must not be changed
   * after the first call with the lease in the `COMPLETED` or `CANCELLED`
   * state. Input only (must only be set by the bot, will not be echoed by the
   * server).
   * </pre>
   *
   * <code>.google.protobuf.Any result = 9;</code>
   * @return The result.
   */
  @java.lang.Override
  public com.google.protobuf.Any getResult() {
    return result_ == null ? com.google.protobuf.Any.getDefaultInstance() : result_;
  }
  /**
   * <pre>
   * Any result the bot wishes to provide about the lease. Must not be changed
   * after the first call with the lease in the `COMPLETED` or `CANCELLED`
   * state. Input only (must only be set by the bot, will not be echoed by the
   * server).
   * </pre>
   *
   * <code>.google.protobuf.Any result = 9;</code>
   */
  @java.lang.Override
  public com.google.protobuf.AnyOrBuilder getResultOrBuilder() {
    return getResult();
  }

  public static final int STATE_FIELD_NUMBER = 2;
  private int state_;
  /**
   * <pre>
   * The state of the lease. See LeaseState for more information.
   * </pre>
   *
   * <code>.google.devtools.remoteworkers.v1test2.LeaseState state = 2;</code>
   * @return The enum numeric value on the wire for state.
   */
  @java.lang.Override public int getStateValue() {
    return state_;
  }
  /**
   * <pre>
   * The state of the lease. See LeaseState for more information.
   * </pre>
   *
   * <code>.google.devtools.remoteworkers.v1test2.LeaseState state = 2;</code>
   * @return The state.
   */
  @java.lang.Override public com.google.devtools.remoteworkers.v1test2.LeaseState getState() {
    @SuppressWarnings("deprecation")
    com.google.devtools.remoteworkers.v1test2.LeaseState result = com.google.devtools.remoteworkers.v1test2.LeaseState.valueOf(state_);
    return result == null ? com.google.devtools.remoteworkers.v1test2.LeaseState.UNRECOGNIZED : result;
  }

  public static final int STATUS_FIELD_NUMBER = 3;
  private com.google.rpc.Status status_;
  /**
   * <pre>
   * The final status of the lease (should be populated by the bot if the state
   * is completed). This is the status of the lease, not of any task represented
   * by the lease. For example, if the bot could not accept the lease because it
   * asked for some resource the bot didn't have, this status will be
   * FAILED_PRECONDITION. But if the assignment in the lease didn't execute
   * correctly, this field will be `OK` while the failure of the assignment must
   * communicated via the `result` field.
   * </pre>
   *
   * <code>.google.rpc.Status status = 3;</code>
   * @return Whether the status field is set.
   */
  @java.lang.Override
  public boolean hasStatus() {
    return status_ != null;
  }
  /**
   * <pre>
   * The final status of the lease (should be populated by the bot if the state
   * is completed). This is the status of the lease, not of any task represented
   * by the lease. For example, if the bot could not accept the lease because it
   * asked for some resource the bot didn't have, this status will be
   * FAILED_PRECONDITION. But if the assignment in the lease didn't execute
   * correctly, this field will be `OK` while the failure of the assignment must
   * communicated via the `result` field.
   * </pre>
   *
   * <code>.google.rpc.Status status = 3;</code>
   * @return The status.
   */
  @java.lang.Override
  public com.google.rpc.Status getStatus() {
    return status_ == null ? com.google.rpc.Status.getDefaultInstance() : status_;
  }
  /**
   * <pre>
   * The final status of the lease (should be populated by the bot if the state
   * is completed). This is the status of the lease, not of any task represented
   * by the lease. For example, if the bot could not accept the lease because it
   * asked for some resource the bot didn't have, this status will be
   * FAILED_PRECONDITION. But if the assignment in the lease didn't execute
   * correctly, this field will be `OK` while the failure of the assignment must
   * communicated via the `result` field.
   * </pre>
   *
   * <code>.google.rpc.Status status = 3;</code>
   */
  @java.lang.Override
  public com.google.rpc.StatusOrBuilder getStatusOrBuilder() {
    return getStatus();
  }

  public static final int REQUIREMENTS_FIELD_NUMBER = 4;
  private com.google.devtools.remoteworkers.v1test2.Worker requirements_;
  /**
   * <pre>
   * The requirements that are being claimed by this lease. This field may be
   * omitted by the server if the lease is not pending.
   * </pre>
   *
   * <code>.google.devtools.remoteworkers.v1test2.Worker requirements = 4;</code>
   * @return Whether the requirements field is set.
   */
  @java.lang.Override
  public boolean hasRequirements() {
    return requirements_ != null;
  }
  /**
   * <pre>
   * The requirements that are being claimed by this lease. This field may be
   * omitted by the server if the lease is not pending.
   * </pre>
   *
   * <code>.google.devtools.remoteworkers.v1test2.Worker requirements = 4;</code>
   * @return The requirements.
   */
  @java.lang.Override
  public com.google.devtools.remoteworkers.v1test2.Worker getRequirements() {
    return requirements_ == null ? com.google.devtools.remoteworkers.v1test2.Worker.getDefaultInstance() : requirements_;
  }
  /**
   * <pre>
   * The requirements that are being claimed by this lease. This field may be
   * omitted by the server if the lease is not pending.
   * </pre>
   *
   * <code>.google.devtools.remoteworkers.v1test2.Worker requirements = 4;</code>
   */
  @java.lang.Override
  public com.google.devtools.remoteworkers.v1test2.WorkerOrBuilder getRequirementsOrBuilder() {
    return getRequirements();
  }

  public static final int EXPIRE_TIME_FIELD_NUMBER = 5;
  private com.google.protobuf.Timestamp expireTime_;
  /**
   * <pre>
   * The time at which this lease expires. The server *may* extend this over
   * time, but due to race conditions, the bot is not *required* to respect any
   * expiry date except the first one.
   * </pre>
   *
   * <code>.google.protobuf.Timestamp expire_time = 5;</code>
   * @return Whether the expireTime field is set.
   */
  @java.lang.Override
  public boolean hasExpireTime() {
    return expireTime_ != null;
  }
  /**
   * <pre>
   * The time at which this lease expires. The server *may* extend this over
   * time, but due to race conditions, the bot is not *required* to respect any
   * expiry date except the first one.
   * </pre>
   *
   * <code>.google.protobuf.Timestamp expire_time = 5;</code>
   * @return The expireTime.
   */
  @java.lang.Override
  public com.google.protobuf.Timestamp getExpireTime() {
    return expireTime_ == null ? com.google.protobuf.Timestamp.getDefaultInstance() : expireTime_;
  }
  /**
   * <pre>
   * The time at which this lease expires. The server *may* extend this over
   * time, but due to race conditions, the bot is not *required* to respect any
   * expiry date except the first one.
   * </pre>
   *
   * <code>.google.protobuf.Timestamp expire_time = 5;</code>
   */
  @java.lang.Override
  public com.google.protobuf.TimestampOrBuilder getExpireTimeOrBuilder() {
    return getExpireTime();
  }

  public static final int ASSIGNMENT_FIELD_NUMBER = 1;
  private volatile java.lang.Object assignment_;
  /**
   * <pre>
   * DEPRECATED. The assignment should be provided to the bot via the `payload`
   * field. Clients that wish to use a simple name (such as a queue of work
   * provided elsewhere) should define a custom message type and encode it into
   * `payload`.
   * </pre>
   *
   * <code>string assignment = 1 [deprecated = true];</code>
   * @deprecated google.devtools.remoteworkers.v1test2.Lease.assignment is deprecated.
   *     See google/devtools/remoteworkers/v1test2/bots.proto;l=208
   * @return The assignment.
   */
  @java.lang.Override
  @java.lang.Deprecated public java.lang.String getAssignment() {
    java.lang.Object ref = assignment_;
    if (ref instanceof java.lang.String) {
      return (java.lang.String) ref;
    } else {
      com.google.protobuf.ByteString bs = 
          (com.google.protobuf.ByteString) ref;
      java.lang.String s = bs.toStringUtf8();
      assignment_ = s;
      return s;
    }
  }
  /**
   * <pre>
   * DEPRECATED. The assignment should be provided to the bot via the `payload`
   * field. Clients that wish to use a simple name (such as a queue of work
   * provided elsewhere) should define a custom message type and encode it into
   * `payload`.
   * </pre>
   *
   * <code>string assignment = 1 [deprecated = true];</code>
   * @deprecated google.devtools.remoteworkers.v1test2.Lease.assignment is deprecated.
   *     See google/devtools/remoteworkers/v1test2/bots.proto;l=208
   * @return The bytes for assignment.
   */
  @java.lang.Override
  @java.lang.Deprecated public com.google.protobuf.ByteString
      getAssignmentBytes() {
    java.lang.Object ref = assignment_;
    if (ref instanceof java.lang.String) {
      com.google.protobuf.ByteString b = 
          com.google.protobuf.ByteString.copyFromUtf8(
              (java.lang.String) ref);
      assignment_ = b;
      return b;
    } else {
      return (com.google.protobuf.ByteString) ref;
    }
  }

  public static final int INLINE_ASSIGNMENT_FIELD_NUMBER = 6;
  private com.google.protobuf.Any inlineAssignment_;
  /**
   * <pre>
   * DEPRECATED. Use `payload` instead.
   * </pre>
   *
   * <code>.google.protobuf.Any inline_assignment = 6 [deprecated = true];</code>
   * @deprecated google.devtools.remoteworkers.v1test2.Lease.inline_assignment is deprecated.
   *     See google/devtools/remoteworkers/v1test2/bots.proto;l=211
   * @return Whether the inlineAssignment field is set.
   */
  @java.lang.Override
  @java.lang.Deprecated public boolean hasInlineAssignment() {
    return inlineAssignment_ != null;
  }
  /**
   * <pre>
   * DEPRECATED. Use `payload` instead.
   * </pre>
   *
   * <code>.google.protobuf.Any inline_assignment = 6 [deprecated = true];</code>
   * @deprecated google.devtools.remoteworkers.v1test2.Lease.inline_assignment is deprecated.
   *     See google/devtools/remoteworkers/v1test2/bots.proto;l=211
   * @return The inlineAssignment.
   */
  @java.lang.Override
  @java.lang.Deprecated public com.google.protobuf.Any getInlineAssignment() {
    return inlineAssignment_ == null ? com.google.protobuf.Any.getDefaultInstance() : inlineAssignment_;
  }
  /**
   * <pre>
   * DEPRECATED. Use `payload` instead.
   * </pre>
   *
   * <code>.google.protobuf.Any inline_assignment = 6 [deprecated = true];</code>
   */
  @java.lang.Override
  @java.lang.Deprecated public com.google.protobuf.AnyOrBuilder getInlineAssignmentOrBuilder() {
    return getInlineAssignment();
  }

  private byte memoizedIsInitialized = -1;
  @java.lang.Override
  public final boolean isInitialized() {
    byte isInitialized = memoizedIsInitialized;
    if (isInitialized == 1) return true;
    if (isInitialized == 0) return false;

    memoizedIsInitialized = 1;
    return true;
  }

  @java.lang.Override
  public void writeTo(com.google.protobuf.CodedOutputStream output)
                      throws java.io.IOException {
    if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(assignment_)) {
      com.google.protobuf.GeneratedMessageV3.writeString(output, 1, assignment_);
    }
    if (state_ != com.google.devtools.remoteworkers.v1test2.LeaseState.LEASE_STATE_UNSPECIFIED.getNumber()) {
      output.writeEnum(2, state_);
    }
    if (status_ != null) {
      output.writeMessage(3, getStatus());
    }
    if (requirements_ != null) {
      output.writeMessage(4, getRequirements());
    }
    if (expireTime_ != null) {
      output.writeMessage(5, getExpireTime());
    }
    if (inlineAssignment_ != null) {
      output.writeMessage(6, getInlineAssignment());
    }
    if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(id_)) {
      com.google.protobuf.GeneratedMessageV3.writeString(output, 7, id_);
    }
    if (payload_ != null) {
      output.writeMessage(8, getPayload());
    }
    if (result_ != null) {
      output.writeMessage(9, getResult());
    }
    unknownFields.writeTo(output);
  }

  @java.lang.Override
  public int getSerializedSize() {
    int size = memoizedSize;
    if (size != -1) return size;

    size = 0;
    if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(assignment_)) {
      size += com.google.protobuf.GeneratedMessageV3.computeStringSize(1, assignment_);
    }
    if (state_ != com.google.devtools.remoteworkers.v1test2.LeaseState.LEASE_STATE_UNSPECIFIED.getNumber()) {
      size += com.google.protobuf.CodedOutputStream
        .computeEnumSize(2, state_);
    }
    if (status_ != null) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(3, getStatus());
    }
    if (requirements_ != null) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(4, getRequirements());
    }
    if (expireTime_ != null) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(5, getExpireTime());
    }
    if (inlineAssignment_ != null) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(6, getInlineAssignment());
    }
    if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(id_)) {
      size += com.google.protobuf.GeneratedMessageV3.computeStringSize(7, id_);
    }
    if (payload_ != null) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(8, getPayload());
    }
    if (result_ != null) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(9, getResult());
    }
    size += unknownFields.getSerializedSize();
    memoizedSize = size;
    return size;
  }

  @java.lang.Override
  public boolean equals(final java.lang.Object obj) {
    if (obj == this) {
     return true;
    }
    if (!(obj instanceof com.google.devtools.remoteworkers.v1test2.Lease)) {
      return super.equals(obj);
    }
    com.google.devtools.remoteworkers.v1test2.Lease other = (com.google.devtools.remoteworkers.v1test2.Lease) obj;

    if (!getId()
        .equals(other.getId())) return false;
    if (hasPayload() != other.hasPayload()) return false;
    if (hasPayload()) {
      if (!getPayload()
          .equals(other.getPayload())) return false;
    }
    if (hasResult() != other.hasResult()) return false;
    if (hasResult()) {
      if (!getResult()
          .equals(other.getResult())) return false;
    }
    if (state_ != other.state_) return false;
    if (hasStatus() != other.hasStatus()) return false;
    if (hasStatus()) {
      if (!getStatus()
          .equals(other.getStatus())) return false;
    }
    if (hasRequirements() != other.hasRequirements()) return false;
    if (hasRequirements()) {
      if (!getRequirements()
          .equals(other.getRequirements())) return false;
    }
    if (hasExpireTime() != other.hasExpireTime()) return false;
    if (hasExpireTime()) {
      if (!getExpireTime()
          .equals(other.getExpireTime())) return false;
    }
    if (!getAssignment()
        .equals(other.getAssignment())) return false;
    if (hasInlineAssignment() != other.hasInlineAssignment()) return false;
    if (hasInlineAssignment()) {
      if (!getInlineAssignment()
          .equals(other.getInlineAssignment())) return false;
    }
    if (!unknownFields.equals(other.unknownFields)) return false;
    return true;
  }

  @java.lang.Override
  public int hashCode() {
    if (memoizedHashCode != 0) {
      return memoizedHashCode;
    }
    int hash = 41;
    hash = (19 * hash) + getDescriptor().hashCode();
    hash = (37 * hash) + ID_FIELD_NUMBER;
    hash = (53 * hash) + getId().hashCode();
    if (hasPayload()) {
      hash = (37 * hash) + PAYLOAD_FIELD_NUMBER;
      hash = (53 * hash) + getPayload().hashCode();
    }
    if (hasResult()) {
      hash = (37 * hash) + RESULT_FIELD_NUMBER;
      hash = (53 * hash) + getResult().hashCode();
    }
    hash = (37 * hash) + STATE_FIELD_NUMBER;
    hash = (53 * hash) + state_;
    if (hasStatus()) {
      hash = (37 * hash) + STATUS_FIELD_NUMBER;
      hash = (53 * hash) + getStatus().hashCode();
    }
    if (hasRequirements()) {
      hash = (37 * hash) + REQUIREMENTS_FIELD_NUMBER;
      hash = (53 * hash) + getRequirements().hashCode();
    }
    if (hasExpireTime()) {
      hash = (37 * hash) + EXPIRE_TIME_FIELD_NUMBER;
      hash = (53 * hash) + getExpireTime().hashCode();
    }
    hash = (37 * hash) + ASSIGNMENT_FIELD_NUMBER;
    hash = (53 * hash) + getAssignment().hashCode();
    if (hasInlineAssignment()) {
      hash = (37 * hash) + INLINE_ASSIGNMENT_FIELD_NUMBER;
      hash = (53 * hash) + getInlineAssignment().hashCode();
    }
    hash = (29 * hash) + unknownFields.hashCode();
    memoizedHashCode = hash;
    return hash;
  }

  public static com.google.devtools.remoteworkers.v1test2.Lease parseFrom(
      java.nio.ByteBuffer data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static com.google.devtools.remoteworkers.v1test2.Lease parseFrom(
      java.nio.ByteBuffer data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static com.google.devtools.remoteworkers.v1test2.Lease parseFrom(
      com.google.protobuf.ByteString data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static com.google.devtools.remoteworkers.v1test2.Lease parseFrom(
      com.google.protobuf.ByteString data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static com.google.devtools.remoteworkers.v1test2.Lease parseFrom(byte[] data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static com.google.devtools.remoteworkers.v1test2.Lease parseFrom(
      byte[] data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static com.google.devtools.remoteworkers.v1test2.Lease parseFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input);
  }
  public static com.google.devtools.remoteworkers.v1test2.Lease parseFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input, extensionRegistry);
  }
  public static com.google.devtools.remoteworkers.v1test2.Lease parseDelimitedFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseDelimitedWithIOException(PARSER, input);
  }
  public static com.google.devtools.remoteworkers.v1test2.Lease parseDelimitedFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
  }
  public static com.google.devtools.remoteworkers.v1test2.Lease parseFrom(
      com.google.protobuf.CodedInputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input);
  }
  public static com.google.devtools.remoteworkers.v1test2.Lease parseFrom(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input, extensionRegistry);
  }

  @java.lang.Override
  public Builder newBuilderForType() { return newBuilder(); }
  public static Builder newBuilder() {
    return DEFAULT_INSTANCE.toBuilder();
  }
  public static Builder newBuilder(com.google.devtools.remoteworkers.v1test2.Lease prototype) {
    return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
  }
  @java.lang.Override
  public Builder toBuilder() {
    return this == DEFAULT_INSTANCE
        ? new Builder() : new Builder().mergeFrom(this);
  }

  @java.lang.Override
  protected Builder newBuilderForType(
      com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
    Builder builder = new Builder(parent);
    return builder;
  }
  /**
   * <pre>
   * A Lease is a lease that the scheduler has assigned to this bot. If the bot
   * notices (by UpdateBotSession) that it has any leases in the PENDING state, it
   * should call UpdateBotSession to put the leases into the ACTIVE state and
   * start executing their assignments.
   * All fields in this message are output-only, *except* the `state` and `status`
   * fields. Note that repeated fields can only be updated as a unit, so on every
   * update the bot must provide an update for *all* the leases the server expects
   * it to report on.
   * The scheduler *should* ensure that all leases scheduled to a bot can actually
   * be accepted, but race conditions may occur. In such cases, the bot should
   * attempt to accept the leases in the order they are listed by the server, to
   * allow the server to control priorities.
   * The server will remove COMPLETED leases from time to time, after which the
   * bot shouldn't report on them any more (the server will ignore superfluous
   * COMPLETED records).
   * </pre>
   *
   * Protobuf type {@code google.devtools.remoteworkers.v1test2.Lease}
   */
  public static final class Builder extends
      com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
      // @@protoc_insertion_point(builder_implements:google.devtools.remoteworkers.v1test2.Lease)
      com.google.devtools.remoteworkers.v1test2.LeaseOrBuilder {
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.google.devtools.remoteworkers.v1test2.RemoteWorkersBots.internal_static_google_devtools_remoteworkers_v1test2_Lease_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.google.devtools.remoteworkers.v1test2.RemoteWorkersBots.internal_static_google_devtools_remoteworkers_v1test2_Lease_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.google.devtools.remoteworkers.v1test2.Lease.class, com.google.devtools.remoteworkers.v1test2.Lease.Builder.class);
    }

    // Construct using com.google.devtools.remoteworkers.v1test2.Lease.newBuilder()
    private Builder() {
      maybeForceBuilderInitialization();
    }

    private Builder(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      super(parent);
      maybeForceBuilderInitialization();
    }
    private void maybeForceBuilderInitialization() {
      if (com.google.protobuf.GeneratedMessageV3
              .alwaysUseFieldBuilders) {
      }
    }
    @java.lang.Override
    public Builder clear() {
      super.clear();
      id_ = "";

      if (payloadBuilder_ == null) {
        payload_ = null;
      } else {
        payload_ = null;
        payloadBuilder_ = null;
      }
      if (resultBuilder_ == null) {
        result_ = null;
      } else {
        result_ = null;
        resultBuilder_ = null;
      }
      state_ = 0;

      if (statusBuilder_ == null) {
        status_ = null;
      } else {
        status_ = null;
        statusBuilder_ = null;
      }
      if (requirementsBuilder_ == null) {
        requirements_ = null;
      } else {
        requirements_ = null;
        requirementsBuilder_ = null;
      }
      if (expireTimeBuilder_ == null) {
        expireTime_ = null;
      } else {
        expireTime_ = null;
        expireTimeBuilder_ = null;
      }
      assignment_ = "";

      if (inlineAssignmentBuilder_ == null) {
        inlineAssignment_ = null;
      } else {
        inlineAssignment_ = null;
        inlineAssignmentBuilder_ = null;
      }
      return this;
    }

    @java.lang.Override
    public com.google.protobuf.Descriptors.Descriptor
        getDescriptorForType() {
      return com.google.devtools.remoteworkers.v1test2.RemoteWorkersBots.internal_static_google_devtools_remoteworkers_v1test2_Lease_descriptor;
    }

    @java.lang.Override
    public com.google.devtools.remoteworkers.v1test2.Lease getDefaultInstanceForType() {
      return com.google.devtools.remoteworkers.v1test2.Lease.getDefaultInstance();
    }

    @java.lang.Override
    public com.google.devtools.remoteworkers.v1test2.Lease build() {
      com.google.devtools.remoteworkers.v1test2.Lease result = buildPartial();
      if (!result.isInitialized()) {
        throw newUninitializedMessageException(result);
      }
      return result;
    }

    @java.lang.Override
    public com.google.devtools.remoteworkers.v1test2.Lease buildPartial() {
      com.google.devtools.remoteworkers.v1test2.Lease result = new com.google.devtools.remoteworkers.v1test2.Lease(this);
      result.id_ = id_;
      if (payloadBuilder_ == null) {
        result.payload_ = payload_;
      } else {
        result.payload_ = payloadBuilder_.build();
      }
      if (resultBuilder_ == null) {
        result.result_ = result_;
      } else {
        result.result_ = resultBuilder_.build();
      }
      result.state_ = state_;
      if (statusBuilder_ == null) {
        result.status_ = status_;
      } else {
        result.status_ = statusBuilder_.build();
      }
      if (requirementsBuilder_ == null) {
        result.requirements_ = requirements_;
      } else {
        result.requirements_ = requirementsBuilder_.build();
      }
      if (expireTimeBuilder_ == null) {
        result.expireTime_ = expireTime_;
      } else {
        result.expireTime_ = expireTimeBuilder_.build();
      }
      result.assignment_ = assignment_;
      if (inlineAssignmentBuilder_ == null) {
        result.inlineAssignment_ = inlineAssignment_;
      } else {
        result.inlineAssignment_ = inlineAssignmentBuilder_.build();
      }
      onBuilt();
      return result;
    }

    @java.lang.Override
    public Builder clone() {
      return super.clone();
    }
    @java.lang.Override
    public Builder setField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        java.lang.Object value) {
      return super.setField(field, value);
    }
    @java.lang.Override
    public Builder clearField(
        com.google.protobuf.Descriptors.FieldDescriptor field) {
      return super.clearField(field);
    }
    @java.lang.Override
    public Builder clearOneof(
        com.google.protobuf.Descriptors.OneofDescriptor oneof) {
      return super.clearOneof(oneof);
    }
    @java.lang.Override
    public Builder setRepeatedField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        int index, java.lang.Object value) {
      return super.setRepeatedField(field, index, value);
    }
    @java.lang.Override
    public Builder addRepeatedField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        java.lang.Object value) {
      return super.addRepeatedField(field, value);
    }
    @java.lang.Override
    public Builder mergeFrom(com.google.protobuf.Message other) {
      if (other instanceof com.google.devtools.remoteworkers.v1test2.Lease) {
        return mergeFrom((com.google.devtools.remoteworkers.v1test2.Lease)other);
      } else {
        super.mergeFrom(other);
        return this;
      }
    }

    public Builder mergeFrom(com.google.devtools.remoteworkers.v1test2.Lease other) {
      if (other == com.google.devtools.remoteworkers.v1test2.Lease.getDefaultInstance()) return this;
      if (!other.getId().isEmpty()) {
        id_ = other.id_;
        onChanged();
      }
      if (other.hasPayload()) {
        mergePayload(other.getPayload());
      }
      if (other.hasResult()) {
        mergeResult(other.getResult());
      }
      if (other.state_ != 0) {
        setStateValue(other.getStateValue());
      }
      if (other.hasStatus()) {
        mergeStatus(other.getStatus());
      }
      if (other.hasRequirements()) {
        mergeRequirements(other.getRequirements());
      }
      if (other.hasExpireTime()) {
        mergeExpireTime(other.getExpireTime());
      }
      if (!other.getAssignment().isEmpty()) {
        assignment_ = other.assignment_;
        onChanged();
      }
      if (other.hasInlineAssignment()) {
        mergeInlineAssignment(other.getInlineAssignment());
      }
      this.mergeUnknownFields(other.unknownFields);
      onChanged();
      return this;
    }

    @java.lang.Override
    public final boolean isInitialized() {
      return true;
    }

    @java.lang.Override
    public Builder mergeFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      com.google.devtools.remoteworkers.v1test2.Lease parsedMessage = null;
      try {
        parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        parsedMessage = (com.google.devtools.remoteworkers.v1test2.Lease) e.getUnfinishedMessage();
        throw e.unwrapIOException();
      } finally {
        if (parsedMessage != null) {
          mergeFrom(parsedMessage);
        }
      }
      return this;
    }

    private java.lang.Object id_ = "";
    /**
     * <pre>
     * A short string uniquely identifing the lease within this bot session.
     * </pre>
     *
     * <code>string id = 7;</code>
     * @return The id.
     */
    public java.lang.String getId() {
      java.lang.Object ref = id_;
      if (!(ref instanceof java.lang.String)) {
        com.google.protobuf.ByteString bs =
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        id_ = s;
        return s;
      } else {
        return (java.lang.String) ref;
      }
    }
    /**
     * <pre>
     * A short string uniquely identifing the lease within this bot session.
     * </pre>
     *
     * <code>string id = 7;</code>
     * @return The bytes for id.
     */
    public com.google.protobuf.ByteString
        getIdBytes() {
      java.lang.Object ref = id_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        id_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }
    /**
     * <pre>
     * A short string uniquely identifing the lease within this bot session.
     * </pre>
     *
     * <code>string id = 7;</code>
     * @param value The id to set.
     * @return This builder for chaining.
     */
    public Builder setId(
        java.lang.String value) {
      if (value == null) {
    throw new NullPointerException();
  }
  
      id_ = value;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * A short string uniquely identifing the lease within this bot session.
     * </pre>
     *
     * <code>string id = 7;</code>
     * @return This builder for chaining.
     */
    public Builder clearId() {
      
      id_ = getDefaultInstance().getId();
      onChanged();
      return this;
    }
    /**
     * <pre>
     * A short string uniquely identifing the lease within this bot session.
     * </pre>
     *
     * <code>string id = 7;</code>
     * @param value The bytes for id to set.
     * @return This builder for chaining.
     */
    public Builder setIdBytes(
        com.google.protobuf.ByteString value) {
      if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
      
      id_ = value;
      onChanged();
      return this;
    }

    private com.google.protobuf.Any payload_;
    private com.google.protobuf.SingleFieldBuilderV3<
        com.google.protobuf.Any, com.google.protobuf.Any.Builder, com.google.protobuf.AnyOrBuilder> payloadBuilder_;
    /**
     * <pre>
     * The actual work to be performed, if any. May be omitted by the server if
     * the lease is not in the `PENDING` state. The message must be meaningful to
     * the bot. Output only (must only be set by the server).
     * </pre>
     *
     * <code>.google.protobuf.Any payload = 8;</code>
     * @return Whether the payload field is set.
     */
    public boolean hasPayload() {
      return payloadBuilder_ != null || payload_ != null;
    }
    /**
     * <pre>
     * The actual work to be performed, if any. May be omitted by the server if
     * the lease is not in the `PENDING` state. The message must be meaningful to
     * the bot. Output only (must only be set by the server).
     * </pre>
     *
     * <code>.google.protobuf.Any payload = 8;</code>
     * @return The payload.
     */
    public com.google.protobuf.Any getPayload() {
      if (payloadBuilder_ == null) {
        return payload_ == null ? com.google.protobuf.Any.getDefaultInstance() : payload_;
      } else {
        return payloadBuilder_.getMessage();
      }
    }
    /**
     * <pre>
     * The actual work to be performed, if any. May be omitted by the server if
     * the lease is not in the `PENDING` state. The message must be meaningful to
     * the bot. Output only (must only be set by the server).
     * </pre>
     *
     * <code>.google.protobuf.Any payload = 8;</code>
     */
    public Builder setPayload(com.google.protobuf.Any value) {
      if (payloadBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        payload_ = value;
        onChanged();
      } else {
        payloadBuilder_.setMessage(value);
      }

      return this;
    }
    /**
     * <pre>
     * The actual work to be performed, if any. May be omitted by the server if
     * the lease is not in the `PENDING` state. The message must be meaningful to
     * the bot. Output only (must only be set by the server).
     * </pre>
     *
     * <code>.google.protobuf.Any payload = 8;</code>
     */
    public Builder setPayload(
        com.google.protobuf.Any.Builder builderForValue) {
      if (payloadBuilder_ == null) {
        payload_ = builderForValue.build();
        onChanged();
      } else {
        payloadBuilder_.setMessage(builderForValue.build());
      }

      return this;
    }
    /**
     * <pre>
     * The actual work to be performed, if any. May be omitted by the server if
     * the lease is not in the `PENDING` state. The message must be meaningful to
     * the bot. Output only (must only be set by the server).
     * </pre>
     *
     * <code>.google.protobuf.Any payload = 8;</code>
     */
    public Builder mergePayload(com.google.protobuf.Any value) {
      if (payloadBuilder_ == null) {
        if (payload_ != null) {
          payload_ =
            com.google.protobuf.Any.newBuilder(payload_).mergeFrom(value).buildPartial();
        } else {
          payload_ = value;
        }
        onChanged();
      } else {
        payloadBuilder_.mergeFrom(value);
      }

      return this;
    }
    /**
     * <pre>
     * The actual work to be performed, if any. May be omitted by the server if
     * the lease is not in the `PENDING` state. The message must be meaningful to
     * the bot. Output only (must only be set by the server).
     * </pre>
     *
     * <code>.google.protobuf.Any payload = 8;</code>
     */
    public Builder clearPayload() {
      if (payloadBuilder_ == null) {
        payload_ = null;
        onChanged();
      } else {
        payload_ = null;
        payloadBuilder_ = null;
      }

      return this;
    }
    /**
     * <pre>
     * The actual work to be performed, if any. May be omitted by the server if
     * the lease is not in the `PENDING` state. The message must be meaningful to
     * the bot. Output only (must only be set by the server).
     * </pre>
     *
     * <code>.google.protobuf.Any payload = 8;</code>
     */
    public com.google.protobuf.Any.Builder getPayloadBuilder() {
      
      onChanged();
      return getPayloadFieldBuilder().getBuilder();
    }
    /**
     * <pre>
     * The actual work to be performed, if any. May be omitted by the server if
     * the lease is not in the `PENDING` state. The message must be meaningful to
     * the bot. Output only (must only be set by the server).
     * </pre>
     *
     * <code>.google.protobuf.Any payload = 8;</code>
     */
    public com.google.protobuf.AnyOrBuilder getPayloadOrBuilder() {
      if (payloadBuilder_ != null) {
        return payloadBuilder_.getMessageOrBuilder();
      } else {
        return payload_ == null ?
            com.google.protobuf.Any.getDefaultInstance() : payload_;
      }
    }
    /**
     * <pre>
     * The actual work to be performed, if any. May be omitted by the server if
     * the lease is not in the `PENDING` state. The message must be meaningful to
     * the bot. Output only (must only be set by the server).
     * </pre>
     *
     * <code>.google.protobuf.Any payload = 8;</code>
     */
    private com.google.protobuf.SingleFieldBuilderV3<
        com.google.protobuf.Any, com.google.protobuf.Any.Builder, com.google.protobuf.AnyOrBuilder> 
        getPayloadFieldBuilder() {
      if (payloadBuilder_ == null) {
        payloadBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
            com.google.protobuf.Any, com.google.protobuf.Any.Builder, com.google.protobuf.AnyOrBuilder>(
                getPayload(),
                getParentForChildren(),
                isClean());
        payload_ = null;
      }
      return payloadBuilder_;
    }

    private com.google.protobuf.Any result_;
    private com.google.protobuf.SingleFieldBuilderV3<
        com.google.protobuf.Any, com.google.protobuf.Any.Builder, com.google.protobuf.AnyOrBuilder> resultBuilder_;
    /**
     * <pre>
     * Any result the bot wishes to provide about the lease. Must not be changed
     * after the first call with the lease in the `COMPLETED` or `CANCELLED`
     * state. Input only (must only be set by the bot, will not be echoed by the
     * server).
     * </pre>
     *
     * <code>.google.protobuf.Any result = 9;</code>
     * @return Whether the result field is set.
     */
    public boolean hasResult() {
      return resultBuilder_ != null || result_ != null;
    }
    /**
     * <pre>
     * Any result the bot wishes to provide about the lease. Must not be changed
     * after the first call with the lease in the `COMPLETED` or `CANCELLED`
     * state. Input only (must only be set by the bot, will not be echoed by the
     * server).
     * </pre>
     *
     * <code>.google.protobuf.Any result = 9;</code>
     * @return The result.
     */
    public com.google.protobuf.Any getResult() {
      if (resultBuilder_ == null) {
        return result_ == null ? com.google.protobuf.Any.getDefaultInstance() : result_;
      } else {
        return resultBuilder_.getMessage();
      }
    }
    /**
     * <pre>
     * Any result the bot wishes to provide about the lease. Must not be changed
     * after the first call with the lease in the `COMPLETED` or `CANCELLED`
     * state. Input only (must only be set by the bot, will not be echoed by the
     * server).
     * </pre>
     *
     * <code>.google.protobuf.Any result = 9;</code>
     */
    public Builder setResult(com.google.protobuf.Any value) {
      if (resultBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        result_ = value;
        onChanged();
      } else {
        resultBuilder_.setMessage(value);
      }

      return this;
    }
    /**
     * <pre>
     * Any result the bot wishes to provide about the lease. Must not be changed
     * after the first call with the lease in the `COMPLETED` or `CANCELLED`
     * state. Input only (must only be set by the bot, will not be echoed by the
     * server).
     * </pre>
     *
     * <code>.google.protobuf.Any result = 9;</code>
     */
    public Builder setResult(
        com.google.protobuf.Any.Builder builderForValue) {
      if (resultBuilder_ == null) {
        result_ = builderForValue.build();
        onChanged();
      } else {
        resultBuilder_.setMessage(builderForValue.build());
      }

      return this;
    }
    /**
     * <pre>
     * Any result the bot wishes to provide about the lease. Must not be changed
     * after the first call with the lease in the `COMPLETED` or `CANCELLED`
     * state. Input only (must only be set by the bot, will not be echoed by the
     * server).
     * </pre>
     *
     * <code>.google.protobuf.Any result = 9;</code>
     */
    public Builder mergeResult(com.google.protobuf.Any value) {
      if (resultBuilder_ == null) {
        if (result_ != null) {
          result_ =
            com.google.protobuf.Any.newBuilder(result_).mergeFrom(value).buildPartial();
        } else {
          result_ = value;
        }
        onChanged();
      } else {
        resultBuilder_.mergeFrom(value);
      }

      return this;
    }
    /**
     * <pre>
     * Any result the bot wishes to provide about the lease. Must not be changed
     * after the first call with the lease in the `COMPLETED` or `CANCELLED`
     * state. Input only (must only be set by the bot, will not be echoed by the
     * server).
     * </pre>
     *
     * <code>.google.protobuf.Any result = 9;</code>
     */
    public Builder clearResult() {
      if (resultBuilder_ == null) {
        result_ = null;
        onChanged();
      } else {
        result_ = null;
        resultBuilder_ = null;
      }

      return this;
    }
    /**
     * <pre>
     * Any result the bot wishes to provide about the lease. Must not be changed
     * after the first call with the lease in the `COMPLETED` or `CANCELLED`
     * state. Input only (must only be set by the bot, will not be echoed by the
     * server).
     * </pre>
     *
     * <code>.google.protobuf.Any result = 9;</code>
     */
    public com.google.protobuf.Any.Builder getResultBuilder() {
      
      onChanged();
      return getResultFieldBuilder().getBuilder();
    }
    /**
     * <pre>
     * Any result the bot wishes to provide about the lease. Must not be changed
     * after the first call with the lease in the `COMPLETED` or `CANCELLED`
     * state. Input only (must only be set by the bot, will not be echoed by the
     * server).
     * </pre>
     *
     * <code>.google.protobuf.Any result = 9;</code>
     */
    public com.google.protobuf.AnyOrBuilder getResultOrBuilder() {
      if (resultBuilder_ != null) {
        return resultBuilder_.getMessageOrBuilder();
      } else {
        return result_ == null ?
            com.google.protobuf.Any.getDefaultInstance() : result_;
      }
    }
    /**
     * <pre>
     * Any result the bot wishes to provide about the lease. Must not be changed
     * after the first call with the lease in the `COMPLETED` or `CANCELLED`
     * state. Input only (must only be set by the bot, will not be echoed by the
     * server).
     * </pre>
     *
     * <code>.google.protobuf.Any result = 9;</code>
     */
    private com.google.protobuf.SingleFieldBuilderV3<
        com.google.protobuf.Any, com.google.protobuf.Any.Builder, com.google.protobuf.AnyOrBuilder> 
        getResultFieldBuilder() {
      if (resultBuilder_ == null) {
        resultBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
            com.google.protobuf.Any, com.google.protobuf.Any.Builder, com.google.protobuf.AnyOrBuilder>(
                getResult(),
                getParentForChildren(),
                isClean());
        result_ = null;
      }
      return resultBuilder_;
    }

    private int state_ = 0;
    /**
     * <pre>
     * The state of the lease. See LeaseState for more information.
     * </pre>
     *
     * <code>.google.devtools.remoteworkers.v1test2.LeaseState state = 2;</code>
     * @return The enum numeric value on the wire for state.
     */
    @java.lang.Override public int getStateValue() {
      return state_;
    }
    /**
     * <pre>
     * The state of the lease. See LeaseState for more information.
     * </pre>
     *
     * <code>.google.devtools.remoteworkers.v1test2.LeaseState state = 2;</code>
     * @param value The enum numeric value on the wire for state to set.
     * @return This builder for chaining.
     */
    public Builder setStateValue(int value) {
      
      state_ = value;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * The state of the lease. See LeaseState for more information.
     * </pre>
     *
     * <code>.google.devtools.remoteworkers.v1test2.LeaseState state = 2;</code>
     * @return The state.
     */
    @java.lang.Override
    public com.google.devtools.remoteworkers.v1test2.LeaseState getState() {
      @SuppressWarnings("deprecation")
      com.google.devtools.remoteworkers.v1test2.LeaseState result = com.google.devtools.remoteworkers.v1test2.LeaseState.valueOf(state_);
      return result == null ? com.google.devtools.remoteworkers.v1test2.LeaseState.UNRECOGNIZED : result;
    }
    /**
     * <pre>
     * The state of the lease. See LeaseState for more information.
     * </pre>
     *
     * <code>.google.devtools.remoteworkers.v1test2.LeaseState state = 2;</code>
     * @param value The state to set.
     * @return This builder for chaining.
     */
    public Builder setState(com.google.devtools.remoteworkers.v1test2.LeaseState value) {
      if (value == null) {
        throw new NullPointerException();
      }
      
      state_ = value.getNumber();
      onChanged();
      return this;
    }
    /**
     * <pre>
     * The state of the lease. See LeaseState for more information.
     * </pre>
     *
     * <code>.google.devtools.remoteworkers.v1test2.LeaseState state = 2;</code>
     * @return This builder for chaining.
     */
    public Builder clearState() {
      
      state_ = 0;
      onChanged();
      return this;
    }

    private com.google.rpc.Status status_;
    private com.google.protobuf.SingleFieldBuilderV3<
        com.google.rpc.Status, com.google.rpc.Status.Builder, com.google.rpc.StatusOrBuilder> statusBuilder_;
    /**
     * <pre>
     * The final status of the lease (should be populated by the bot if the state
     * is completed). This is the status of the lease, not of any task represented
     * by the lease. For example, if the bot could not accept the lease because it
     * asked for some resource the bot didn't have, this status will be
     * FAILED_PRECONDITION. But if the assignment in the lease didn't execute
     * correctly, this field will be `OK` while the failure of the assignment must
     * communicated via the `result` field.
     * </pre>
     *
     * <code>.google.rpc.Status status = 3;</code>
     * @return Whether the status field is set.
     */
    public boolean hasStatus() {
      return statusBuilder_ != null || status_ != null;
    }
    /**
     * <pre>
     * The final status of the lease (should be populated by the bot if the state
     * is completed). This is the status of the lease, not of any task represented
     * by the lease. For example, if the bot could not accept the lease because it
     * asked for some resource the bot didn't have, this status will be
     * FAILED_PRECONDITION. But if the assignment in the lease didn't execute
     * correctly, this field will be `OK` while the failure of the assignment must
     * communicated via the `result` field.
     * </pre>
     *
     * <code>.google.rpc.Status status = 3;</code>
     * @return The status.
     */
    public com.google.rpc.Status getStatus() {
      if (statusBuilder_ == null) {
        return status_ == null ? com.google.rpc.Status.getDefaultInstance() : status_;
      } else {
        return statusBuilder_.getMessage();
      }
    }
    /**
     * <pre>
     * The final status of the lease (should be populated by the bot if the state
     * is completed). This is the status of the lease, not of any task represented
     * by the lease. For example, if the bot could not accept the lease because it
     * asked for some resource the bot didn't have, this status will be
     * FAILED_PRECONDITION. But if the assignment in the lease didn't execute
     * correctly, this field will be `OK` while the failure of the assignment must
     * communicated via the `result` field.
     * </pre>
     *
     * <code>.google.rpc.Status status = 3;</code>
     */
    public Builder setStatus(com.google.rpc.Status value) {
      if (statusBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        status_ = value;
        onChanged();
      } else {
        statusBuilder_.setMessage(value);
      }

      return this;
    }
    /**
     * <pre>
     * The final status of the lease (should be populated by the bot if the state
     * is completed). This is the status of the lease, not of any task represented
     * by the lease. For example, if the bot could not accept the lease because it
     * asked for some resource the bot didn't have, this status will be
     * FAILED_PRECONDITION. But if the assignment in the lease didn't execute
     * correctly, this field will be `OK` while the failure of the assignment must
     * communicated via the `result` field.
     * </pre>
     *
     * <code>.google.rpc.Status status = 3;</code>
     */
    public Builder setStatus(
        com.google.rpc.Status.Builder builderForValue) {
      if (statusBuilder_ == null) {
        status_ = builderForValue.build();
        onChanged();
      } else {
        statusBuilder_.setMessage(builderForValue.build());
      }

      return this;
    }
    /**
     * <pre>
     * The final status of the lease (should be populated by the bot if the state
     * is completed). This is the status of the lease, not of any task represented
     * by the lease. For example, if the bot could not accept the lease because it
     * asked for some resource the bot didn't have, this status will be
     * FAILED_PRECONDITION. But if the assignment in the lease didn't execute
     * correctly, this field will be `OK` while the failure of the assignment must
     * communicated via the `result` field.
     * </pre>
     *
     * <code>.google.rpc.Status status = 3;</code>
     */
    public Builder mergeStatus(com.google.rpc.Status value) {
      if (statusBuilder_ == null) {
        if (status_ != null) {
          status_ =
            com.google.rpc.Status.newBuilder(status_).mergeFrom(value).buildPartial();
        } else {
          status_ = value;
        }
        onChanged();
      } else {
        statusBuilder_.mergeFrom(value);
      }

      return this;
    }
    /**
     * <pre>
     * The final status of the lease (should be populated by the bot if the state
     * is completed). This is the status of the lease, not of any task represented
     * by the lease. For example, if the bot could not accept the lease because it
     * asked for some resource the bot didn't have, this status will be
     * FAILED_PRECONDITION. But if the assignment in the lease didn't execute
     * correctly, this field will be `OK` while the failure of the assignment must
     * communicated via the `result` field.
     * </pre>
     *
     * <code>.google.rpc.Status status = 3;</code>
     */
    public Builder clearStatus() {
      if (statusBuilder_ == null) {
        status_ = null;
        onChanged();
      } else {
        status_ = null;
        statusBuilder_ = null;
      }

      return this;
    }
    /**
     * <pre>
     * The final status of the lease (should be populated by the bot if the state
     * is completed). This is the status of the lease, not of any task represented
     * by the lease. For example, if the bot could not accept the lease because it
     * asked for some resource the bot didn't have, this status will be
     * FAILED_PRECONDITION. But if the assignment in the lease didn't execute
     * correctly, this field will be `OK` while the failure of the assignment must
     * communicated via the `result` field.
     * </pre>
     *
     * <code>.google.rpc.Status status = 3;</code>
     */
    public com.google.rpc.Status.Builder getStatusBuilder() {
      
      onChanged();
      return getStatusFieldBuilder().getBuilder();
    }
    /**
     * <pre>
     * The final status of the lease (should be populated by the bot if the state
     * is completed). This is the status of the lease, not of any task represented
     * by the lease. For example, if the bot could not accept the lease because it
     * asked for some resource the bot didn't have, this status will be
     * FAILED_PRECONDITION. But if the assignment in the lease didn't execute
     * correctly, this field will be `OK` while the failure of the assignment must
     * communicated via the `result` field.
     * </pre>
     *
     * <code>.google.rpc.Status status = 3;</code>
     */
    public com.google.rpc.StatusOrBuilder getStatusOrBuilder() {
      if (statusBuilder_ != null) {
        return statusBuilder_.getMessageOrBuilder();
      } else {
        return status_ == null ?
            com.google.rpc.Status.getDefaultInstance() : status_;
      }
    }
    /**
     * <pre>
     * The final status of the lease (should be populated by the bot if the state
     * is completed). This is the status of the lease, not of any task represented
     * by the lease. For example, if the bot could not accept the lease because it
     * asked for some resource the bot didn't have, this status will be
     * FAILED_PRECONDITION. But if the assignment in the lease didn't execute
     * correctly, this field will be `OK` while the failure of the assignment must
     * communicated via the `result` field.
     * </pre>
     *
     * <code>.google.rpc.Status status = 3;</code>
     */
    private com.google.protobuf.SingleFieldBuilderV3<
        com.google.rpc.Status, com.google.rpc.Status.Builder, com.google.rpc.StatusOrBuilder> 
        getStatusFieldBuilder() {
      if (statusBuilder_ == null) {
        statusBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
            com.google.rpc.Status, com.google.rpc.Status.Builder, com.google.rpc.StatusOrBuilder>(
                getStatus(),
                getParentForChildren(),
                isClean());
        status_ = null;
      }
      return statusBuilder_;
    }

    private com.google.devtools.remoteworkers.v1test2.Worker requirements_;
    private com.google.protobuf.SingleFieldBuilderV3<
        com.google.devtools.remoteworkers.v1test2.Worker, com.google.devtools.remoteworkers.v1test2.Worker.Builder, com.google.devtools.remoteworkers.v1test2.WorkerOrBuilder> requirementsBuilder_;
    /**
     * <pre>
     * The requirements that are being claimed by this lease. This field may be
     * omitted by the server if the lease is not pending.
     * </pre>
     *
     * <code>.google.devtools.remoteworkers.v1test2.Worker requirements = 4;</code>
     * @return Whether the requirements field is set.
     */
    public boolean hasRequirements() {
      return requirementsBuilder_ != null || requirements_ != null;
    }
    /**
     * <pre>
     * The requirements that are being claimed by this lease. This field may be
     * omitted by the server if the lease is not pending.
     * </pre>
     *
     * <code>.google.devtools.remoteworkers.v1test2.Worker requirements = 4;</code>
     * @return The requirements.
     */
    public com.google.devtools.remoteworkers.v1test2.Worker getRequirements() {
      if (requirementsBuilder_ == null) {
        return requirements_ == null ? com.google.devtools.remoteworkers.v1test2.Worker.getDefaultInstance() : requirements_;
      } else {
        return requirementsBuilder_.getMessage();
      }
    }
    /**
     * <pre>
     * The requirements that are being claimed by this lease. This field may be
     * omitted by the server if the lease is not pending.
     * </pre>
     *
     * <code>.google.devtools.remoteworkers.v1test2.Worker requirements = 4;</code>
     */
    public Builder setRequirements(com.google.devtools.remoteworkers.v1test2.Worker value) {
      if (requirementsBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        requirements_ = value;
        onChanged();
      } else {
        requirementsBuilder_.setMessage(value);
      }

      return this;
    }
    /**
     * <pre>
     * The requirements that are being claimed by this lease. This field may be
     * omitted by the server if the lease is not pending.
     * </pre>
     *
     * <code>.google.devtools.remoteworkers.v1test2.Worker requirements = 4;</code>
     */
    public Builder setRequirements(
        com.google.devtools.remoteworkers.v1test2.Worker.Builder builderForValue) {
      if (requirementsBuilder_ == null) {
        requirements_ = builderForValue.build();
        onChanged();
      } else {
        requirementsBuilder_.setMessage(builderForValue.build());
      }

      return this;
    }
    /**
     * <pre>
     * The requirements that are being claimed by this lease. This field may be
     * omitted by the server if the lease is not pending.
     * </pre>
     *
     * <code>.google.devtools.remoteworkers.v1test2.Worker requirements = 4;</code>
     */
    public Builder mergeRequirements(com.google.devtools.remoteworkers.v1test2.Worker value) {
      if (requirementsBuilder_ == null) {
        if (requirements_ != null) {
          requirements_ =
            com.google.devtools.remoteworkers.v1test2.Worker.newBuilder(requirements_).mergeFrom(value).buildPartial();
        } else {
          requirements_ = value;
        }
        onChanged();
      } else {
        requirementsBuilder_.mergeFrom(value);
      }

      return this;
    }
    /**
     * <pre>
     * The requirements that are being claimed by this lease. This field may be
     * omitted by the server if the lease is not pending.
     * </pre>
     *
     * <code>.google.devtools.remoteworkers.v1test2.Worker requirements = 4;</code>
     */
    public Builder clearRequirements() {
      if (requirementsBuilder_ == null) {
        requirements_ = null;
        onChanged();
      } else {
        requirements_ = null;
        requirementsBuilder_ = null;
      }

      return this;
    }
    /**
     * <pre>
     * The requirements that are being claimed by this lease. This field may be
     * omitted by the server if the lease is not pending.
     * </pre>
     *
     * <code>.google.devtools.remoteworkers.v1test2.Worker requirements = 4;</code>
     */
    public com.google.devtools.remoteworkers.v1test2.Worker.Builder getRequirementsBuilder() {
      
      onChanged();
      return getRequirementsFieldBuilder().getBuilder();
    }
    /**
     * <pre>
     * The requirements that are being claimed by this lease. This field may be
     * omitted by the server if the lease is not pending.
     * </pre>
     *
     * <code>.google.devtools.remoteworkers.v1test2.Worker requirements = 4;</code>
     */
    public com.google.devtools.remoteworkers.v1test2.WorkerOrBuilder getRequirementsOrBuilder() {
      if (requirementsBuilder_ != null) {
        return requirementsBuilder_.getMessageOrBuilder();
      } else {
        return requirements_ == null ?
            com.google.devtools.remoteworkers.v1test2.Worker.getDefaultInstance() : requirements_;
      }
    }
    /**
     * <pre>
     * The requirements that are being claimed by this lease. This field may be
     * omitted by the server if the lease is not pending.
     * </pre>
     *
     * <code>.google.devtools.remoteworkers.v1test2.Worker requirements = 4;</code>
     */
    private com.google.protobuf.SingleFieldBuilderV3<
        com.google.devtools.remoteworkers.v1test2.Worker, com.google.devtools.remoteworkers.v1test2.Worker.Builder, com.google.devtools.remoteworkers.v1test2.WorkerOrBuilder> 
        getRequirementsFieldBuilder() {
      if (requirementsBuilder_ == null) {
        requirementsBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
            com.google.devtools.remoteworkers.v1test2.Worker, com.google.devtools.remoteworkers.v1test2.Worker.Builder, com.google.devtools.remoteworkers.v1test2.WorkerOrBuilder>(
                getRequirements(),
                getParentForChildren(),
                isClean());
        requirements_ = null;
      }
      return requirementsBuilder_;
    }

    private com.google.protobuf.Timestamp expireTime_;
    private com.google.protobuf.SingleFieldBuilderV3<
        com.google.protobuf.Timestamp, com.google.protobuf.Timestamp.Builder, com.google.protobuf.TimestampOrBuilder> expireTimeBuilder_;
    /**
     * <pre>
     * The time at which this lease expires. The server *may* extend this over
     * time, but due to race conditions, the bot is not *required* to respect any
     * expiry date except the first one.
     * </pre>
     *
     * <code>.google.protobuf.Timestamp expire_time = 5;</code>
     * @return Whether the expireTime field is set.
     */
    public boolean hasExpireTime() {
      return expireTimeBuilder_ != null || expireTime_ != null;
    }
    /**
     * <pre>
     * The time at which this lease expires. The server *may* extend this over
     * time, but due to race conditions, the bot is not *required* to respect any
     * expiry date except the first one.
     * </pre>
     *
     * <code>.google.protobuf.Timestamp expire_time = 5;</code>
     * @return The expireTime.
     */
    public com.google.protobuf.Timestamp getExpireTime() {
      if (expireTimeBuilder_ == null) {
        return expireTime_ == null ? com.google.protobuf.Timestamp.getDefaultInstance() : expireTime_;
      } else {
        return expireTimeBuilder_.getMessage();
      }
    }
    /**
     * <pre>
     * The time at which this lease expires. The server *may* extend this over
     * time, but due to race conditions, the bot is not *required* to respect any
     * expiry date except the first one.
     * </pre>
     *
     * <code>.google.protobuf.Timestamp expire_time = 5;</code>
     */
    public Builder setExpireTime(com.google.protobuf.Timestamp value) {
      if (expireTimeBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        expireTime_ = value;
        onChanged();
      } else {
        expireTimeBuilder_.setMessage(value);
      }

      return this;
    }
    /**
     * <pre>
     * The time at which this lease expires. The server *may* extend this over
     * time, but due to race conditions, the bot is not *required* to respect any
     * expiry date except the first one.
     * </pre>
     *
     * <code>.google.protobuf.Timestamp expire_time = 5;</code>
     */
    public Builder setExpireTime(
        com.google.protobuf.Timestamp.Builder builderForValue) {
      if (expireTimeBuilder_ == null) {
        expireTime_ = builderForValue.build();
        onChanged();
      } else {
        expireTimeBuilder_.setMessage(builderForValue.build());
      }

      return this;
    }
    /**
     * <pre>
     * The time at which this lease expires. The server *may* extend this over
     * time, but due to race conditions, the bot is not *required* to respect any
     * expiry date except the first one.
     * </pre>
     *
     * <code>.google.protobuf.Timestamp expire_time = 5;</code>
     */
    public Builder mergeExpireTime(com.google.protobuf.Timestamp value) {
      if (expireTimeBuilder_ == null) {
        if (expireTime_ != null) {
          expireTime_ =
            com.google.protobuf.Timestamp.newBuilder(expireTime_).mergeFrom(value).buildPartial();
        } else {
          expireTime_ = value;
        }
        onChanged();
      } else {
        expireTimeBuilder_.mergeFrom(value);
      }

      return this;
    }
    /**
     * <pre>
     * The time at which this lease expires. The server *may* extend this over
     * time, but due to race conditions, the bot is not *required* to respect any
     * expiry date except the first one.
     * </pre>
     *
     * <code>.google.protobuf.Timestamp expire_time = 5;</code>
     */
    public Builder clearExpireTime() {
      if (expireTimeBuilder_ == null) {
        expireTime_ = null;
        onChanged();
      } else {
        expireTime_ = null;
        expireTimeBuilder_ = null;
      }

      return this;
    }
    /**
     * <pre>
     * The time at which this lease expires. The server *may* extend this over
     * time, but due to race conditions, the bot is not *required* to respect any
     * expiry date except the first one.
     * </pre>
     *
     * <code>.google.protobuf.Timestamp expire_time = 5;</code>
     */
    public com.google.protobuf.Timestamp.Builder getExpireTimeBuilder() {
      
      onChanged();
      return getExpireTimeFieldBuilder().getBuilder();
    }
    /**
     * <pre>
     * The time at which this lease expires. The server *may* extend this over
     * time, but due to race conditions, the bot is not *required* to respect any
     * expiry date except the first one.
     * </pre>
     *
     * <code>.google.protobuf.Timestamp expire_time = 5;</code>
     */
    public com.google.protobuf.TimestampOrBuilder getExpireTimeOrBuilder() {
      if (expireTimeBuilder_ != null) {
        return expireTimeBuilder_.getMessageOrBuilder();
      } else {
        return expireTime_ == null ?
            com.google.protobuf.Timestamp.getDefaultInstance() : expireTime_;
      }
    }
    /**
     * <pre>
     * The time at which this lease expires. The server *may* extend this over
     * time, but due to race conditions, the bot is not *required* to respect any
     * expiry date except the first one.
     * </pre>
     *
     * <code>.google.protobuf.Timestamp expire_time = 5;</code>
     */
    private com.google.protobuf.SingleFieldBuilderV3<
        com.google.protobuf.Timestamp, com.google.protobuf.Timestamp.Builder, com.google.protobuf.TimestampOrBuilder> 
        getExpireTimeFieldBuilder() {
      if (expireTimeBuilder_ == null) {
        expireTimeBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
            com.google.protobuf.Timestamp, com.google.protobuf.Timestamp.Builder, com.google.protobuf.TimestampOrBuilder>(
                getExpireTime(),
                getParentForChildren(),
                isClean());
        expireTime_ = null;
      }
      return expireTimeBuilder_;
    }

    private java.lang.Object assignment_ = "";
    /**
     * <pre>
     * DEPRECATED. The assignment should be provided to the bot via the `payload`
     * field. Clients that wish to use a simple name (such as a queue of work
     * provided elsewhere) should define a custom message type and encode it into
     * `payload`.
     * </pre>
     *
     * <code>string assignment = 1 [deprecated = true];</code>
     * @deprecated google.devtools.remoteworkers.v1test2.Lease.assignment is deprecated.
     *     See google/devtools/remoteworkers/v1test2/bots.proto;l=208
     * @return The assignment.
     */
    @java.lang.Deprecated public java.lang.String getAssignment() {
      java.lang.Object ref = assignment_;
      if (!(ref instanceof java.lang.String)) {
        com.google.protobuf.ByteString bs =
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        assignment_ = s;
        return s;
      } else {
        return (java.lang.String) ref;
      }
    }
    /**
     * <pre>
     * DEPRECATED. The assignment should be provided to the bot via the `payload`
     * field. Clients that wish to use a simple name (such as a queue of work
     * provided elsewhere) should define a custom message type and encode it into
     * `payload`.
     * </pre>
     *
     * <code>string assignment = 1 [deprecated = true];</code>
     * @deprecated google.devtools.remoteworkers.v1test2.Lease.assignment is deprecated.
     *     See google/devtools/remoteworkers/v1test2/bots.proto;l=208
     * @return The bytes for assignment.
     */
    @java.lang.Deprecated public com.google.protobuf.ByteString
        getAssignmentBytes() {
      java.lang.Object ref = assignment_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        assignment_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }
    /**
     * <pre>
     * DEPRECATED. The assignment should be provided to the bot via the `payload`
     * field. Clients that wish to use a simple name (such as a queue of work
     * provided elsewhere) should define a custom message type and encode it into
     * `payload`.
     * </pre>
     *
     * <code>string assignment = 1 [deprecated = true];</code>
     * @deprecated google.devtools.remoteworkers.v1test2.Lease.assignment is deprecated.
     *     See google/devtools/remoteworkers/v1test2/bots.proto;l=208
     * @param value The assignment to set.
     * @return This builder for chaining.
     */
    @java.lang.Deprecated public Builder setAssignment(
        java.lang.String value) {
      if (value == null) {
    throw new NullPointerException();
  }
  
      assignment_ = value;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * DEPRECATED. The assignment should be provided to the bot via the `payload`
     * field. Clients that wish to use a simple name (such as a queue of work
     * provided elsewhere) should define a custom message type and encode it into
     * `payload`.
     * </pre>
     *
     * <code>string assignment = 1 [deprecated = true];</code>
     * @deprecated google.devtools.remoteworkers.v1test2.Lease.assignment is deprecated.
     *     See google/devtools/remoteworkers/v1test2/bots.proto;l=208
     * @return This builder for chaining.
     */
    @java.lang.Deprecated public Builder clearAssignment() {
      
      assignment_ = getDefaultInstance().getAssignment();
      onChanged();
      return this;
    }
    /**
     * <pre>
     * DEPRECATED. The assignment should be provided to the bot via the `payload`
     * field. Clients that wish to use a simple name (such as a queue of work
     * provided elsewhere) should define a custom message type and encode it into
     * `payload`.
     * </pre>
     *
     * <code>string assignment = 1 [deprecated = true];</code>
     * @deprecated google.devtools.remoteworkers.v1test2.Lease.assignment is deprecated.
     *     See google/devtools/remoteworkers/v1test2/bots.proto;l=208
     * @param value The bytes for assignment to set.
     * @return This builder for chaining.
     */
    @java.lang.Deprecated public Builder setAssignmentBytes(
        com.google.protobuf.ByteString value) {
      if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
      
      assignment_ = value;
      onChanged();
      return this;
    }

    private com.google.protobuf.Any inlineAssignment_;
    private com.google.protobuf.SingleFieldBuilderV3<
        com.google.protobuf.Any, com.google.protobuf.Any.Builder, com.google.protobuf.AnyOrBuilder> inlineAssignmentBuilder_;
    /**
     * <pre>
     * DEPRECATED. Use `payload` instead.
     * </pre>
     *
     * <code>.google.protobuf.Any inline_assignment = 6 [deprecated = true];</code>
     * @deprecated google.devtools.remoteworkers.v1test2.Lease.inline_assignment is deprecated.
     *     See google/devtools/remoteworkers/v1test2/bots.proto;l=211
     * @return Whether the inlineAssignment field is set.
     */
    @java.lang.Deprecated public boolean hasInlineAssignment() {
      return inlineAssignmentBuilder_ != null || inlineAssignment_ != null;
    }
    /**
     * <pre>
     * DEPRECATED. Use `payload` instead.
     * </pre>
     *
     * <code>.google.protobuf.Any inline_assignment = 6 [deprecated = true];</code>
     * @deprecated google.devtools.remoteworkers.v1test2.Lease.inline_assignment is deprecated.
     *     See google/devtools/remoteworkers/v1test2/bots.proto;l=211
     * @return The inlineAssignment.
     */
    @java.lang.Deprecated public com.google.protobuf.Any getInlineAssignment() {
      if (inlineAssignmentBuilder_ == null) {
        return inlineAssignment_ == null ? com.google.protobuf.Any.getDefaultInstance() : inlineAssignment_;
      } else {
        return inlineAssignmentBuilder_.getMessage();
      }
    }
    /**
     * <pre>
     * DEPRECATED. Use `payload` instead.
     * </pre>
     *
     * <code>.google.protobuf.Any inline_assignment = 6 [deprecated = true];</code>
     */
    @java.lang.Deprecated public Builder setInlineAssignment(com.google.protobuf.Any value) {
      if (inlineAssignmentBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        inlineAssignment_ = value;
        onChanged();
      } else {
        inlineAssignmentBuilder_.setMessage(value);
      }

      return this;
    }
    /**
     * <pre>
     * DEPRECATED. Use `payload` instead.
     * </pre>
     *
     * <code>.google.protobuf.Any inline_assignment = 6 [deprecated = true];</code>
     */
    @java.lang.Deprecated public Builder setInlineAssignment(
        com.google.protobuf.Any.Builder builderForValue) {
      if (inlineAssignmentBuilder_ == null) {
        inlineAssignment_ = builderForValue.build();
        onChanged();
      } else {
        inlineAssignmentBuilder_.setMessage(builderForValue.build());
      }

      return this;
    }
    /**
     * <pre>
     * DEPRECATED. Use `payload` instead.
     * </pre>
     *
     * <code>.google.protobuf.Any inline_assignment = 6 [deprecated = true];</code>
     */
    @java.lang.Deprecated public Builder mergeInlineAssignment(com.google.protobuf.Any value) {
      if (inlineAssignmentBuilder_ == null) {
        if (inlineAssignment_ != null) {
          inlineAssignment_ =
            com.google.protobuf.Any.newBuilder(inlineAssignment_).mergeFrom(value).buildPartial();
        } else {
          inlineAssignment_ = value;
        }
        onChanged();
      } else {
        inlineAssignmentBuilder_.mergeFrom(value);
      }

      return this;
    }
    /**
     * <pre>
     * DEPRECATED. Use `payload` instead.
     * </pre>
     *
     * <code>.google.protobuf.Any inline_assignment = 6 [deprecated = true];</code>
     */
    @java.lang.Deprecated public Builder clearInlineAssignment() {
      if (inlineAssignmentBuilder_ == null) {
        inlineAssignment_ = null;
        onChanged();
      } else {
        inlineAssignment_ = null;
        inlineAssignmentBuilder_ = null;
      }

      return this;
    }
    /**
     * <pre>
     * DEPRECATED. Use `payload` instead.
     * </pre>
     *
     * <code>.google.protobuf.Any inline_assignment = 6 [deprecated = true];</code>
     */
    @java.lang.Deprecated public com.google.protobuf.Any.Builder getInlineAssignmentBuilder() {
      
      onChanged();
      return getInlineAssignmentFieldBuilder().getBuilder();
    }
    /**
     * <pre>
     * DEPRECATED. Use `payload` instead.
     * </pre>
     *
     * <code>.google.protobuf.Any inline_assignment = 6 [deprecated = true];</code>
     */
    @java.lang.Deprecated public com.google.protobuf.AnyOrBuilder getInlineAssignmentOrBuilder() {
      if (inlineAssignmentBuilder_ != null) {
        return inlineAssignmentBuilder_.getMessageOrBuilder();
      } else {
        return inlineAssignment_ == null ?
            com.google.protobuf.Any.getDefaultInstance() : inlineAssignment_;
      }
    }
    /**
     * <pre>
     * DEPRECATED. Use `payload` instead.
     * </pre>
     *
     * <code>.google.protobuf.Any inline_assignment = 6 [deprecated = true];</code>
     */
    private com.google.protobuf.SingleFieldBuilderV3<
        com.google.protobuf.Any, com.google.protobuf.Any.Builder, com.google.protobuf.AnyOrBuilder> 
        getInlineAssignmentFieldBuilder() {
      if (inlineAssignmentBuilder_ == null) {
        inlineAssignmentBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
            com.google.protobuf.Any, com.google.protobuf.Any.Builder, com.google.protobuf.AnyOrBuilder>(
                getInlineAssignment(),
                getParentForChildren(),
                isClean());
        inlineAssignment_ = null;
      }
      return inlineAssignmentBuilder_;
    }
    @java.lang.Override
    public final Builder setUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return super.setUnknownFields(unknownFields);
    }

    @java.lang.Override
    public final Builder mergeUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return super.mergeUnknownFields(unknownFields);
    }


    // @@protoc_insertion_point(builder_scope:google.devtools.remoteworkers.v1test2.Lease)
  }

  // @@protoc_insertion_point(class_scope:google.devtools.remoteworkers.v1test2.Lease)
  private static final com.google.devtools.remoteworkers.v1test2.Lease DEFAULT_INSTANCE;
  static {
    DEFAULT_INSTANCE = new com.google.devtools.remoteworkers.v1test2.Lease();
  }

  public static com.google.devtools.remoteworkers.v1test2.Lease getDefaultInstance() {
    return DEFAULT_INSTANCE;
  }

  private static final com.google.protobuf.Parser<Lease>
      PARSER = new com.google.protobuf.AbstractParser<Lease>() {
    @java.lang.Override
    public Lease parsePartialFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return new Lease(input, extensionRegistry);
    }
  };

  public static com.google.protobuf.Parser<Lease> parser() {
    return PARSER;
  }

  @java.lang.Override
  public com.google.protobuf.Parser<Lease> getParserForType() {
    return PARSER;
  }

  @java.lang.Override
  public com.google.devtools.remoteworkers.v1test2.Lease getDefaultInstanceForType() {
    return DEFAULT_INSTANCE;
  }

}

