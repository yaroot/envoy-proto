// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: google/devtools/testing/v1/test_execution.proto

package com.google.devtools.testing.v1;

public interface TestExecutionOrBuilder extends
    // @@protoc_insertion_point(interface_extends:google.devtools.testing.v1.TestExecution)
    com.google.protobuf.MessageOrBuilder {

  /**
   * <pre>
   * Output only. Unique id set by the service.
   * </pre>
   *
   * <code>string id = 1;</code>
   * @return The id.
   */
  java.lang.String getId();
  /**
   * <pre>
   * Output only. Unique id set by the service.
   * </pre>
   *
   * <code>string id = 1;</code>
   * @return The bytes for id.
   */
  com.google.protobuf.ByteString
      getIdBytes();

  /**
   * <pre>
   * Output only. Id of the containing TestMatrix.
   * </pre>
   *
   * <code>string matrix_id = 9;</code>
   * @return The matrixId.
   */
  java.lang.String getMatrixId();
  /**
   * <pre>
   * Output only. Id of the containing TestMatrix.
   * </pre>
   *
   * <code>string matrix_id = 9;</code>
   * @return The bytes for matrixId.
   */
  com.google.protobuf.ByteString
      getMatrixIdBytes();

  /**
   * <pre>
   * Output only. The cloud project that owns the test execution.
   * </pre>
   *
   * <code>string project_id = 10;</code>
   * @return The projectId.
   */
  java.lang.String getProjectId();
  /**
   * <pre>
   * Output only. The cloud project that owns the test execution.
   * </pre>
   *
   * <code>string project_id = 10;</code>
   * @return The bytes for projectId.
   */
  com.google.protobuf.ByteString
      getProjectIdBytes();

  /**
   * <pre>
   * Output only. How to run the test.
   * </pre>
   *
   * <code>.google.devtools.testing.v1.TestSpecification test_specification = 3;</code>
   * @return Whether the testSpecification field is set.
   */
  boolean hasTestSpecification();
  /**
   * <pre>
   * Output only. How to run the test.
   * </pre>
   *
   * <code>.google.devtools.testing.v1.TestSpecification test_specification = 3;</code>
   * @return The testSpecification.
   */
  com.google.devtools.testing.v1.TestSpecification getTestSpecification();
  /**
   * <pre>
   * Output only. How to run the test.
   * </pre>
   *
   * <code>.google.devtools.testing.v1.TestSpecification test_specification = 3;</code>
   */
  com.google.devtools.testing.v1.TestSpecificationOrBuilder getTestSpecificationOrBuilder();

  /**
   * <pre>
   * Output only. Details about the shard.
   * </pre>
   *
   * <code>.google.devtools.testing.v1.Shard shard = 12;</code>
   * @return Whether the shard field is set.
   */
  boolean hasShard();
  /**
   * <pre>
   * Output only. Details about the shard.
   * </pre>
   *
   * <code>.google.devtools.testing.v1.Shard shard = 12;</code>
   * @return The shard.
   */
  com.google.devtools.testing.v1.Shard getShard();
  /**
   * <pre>
   * Output only. Details about the shard.
   * </pre>
   *
   * <code>.google.devtools.testing.v1.Shard shard = 12;</code>
   */
  com.google.devtools.testing.v1.ShardOrBuilder getShardOrBuilder();

  /**
   * <pre>
   * Output only. How the host machine(s) are configured.
   * </pre>
   *
   * <code>.google.devtools.testing.v1.Environment environment = 4;</code>
   * @return Whether the environment field is set.
   */
  boolean hasEnvironment();
  /**
   * <pre>
   * Output only. How the host machine(s) are configured.
   * </pre>
   *
   * <code>.google.devtools.testing.v1.Environment environment = 4;</code>
   * @return The environment.
   */
  com.google.devtools.testing.v1.Environment getEnvironment();
  /**
   * <pre>
   * Output only. How the host machine(s) are configured.
   * </pre>
   *
   * <code>.google.devtools.testing.v1.Environment environment = 4;</code>
   */
  com.google.devtools.testing.v1.EnvironmentOrBuilder getEnvironmentOrBuilder();

  /**
   * <pre>
   * Output only. Indicates the current progress of the test execution
   * (e.g., FINISHED).
   * </pre>
   *
   * <code>.google.devtools.testing.v1.TestState state = 5;</code>
   * @return The enum numeric value on the wire for state.
   */
  int getStateValue();
  /**
   * <pre>
   * Output only. Indicates the current progress of the test execution
   * (e.g., FINISHED).
   * </pre>
   *
   * <code>.google.devtools.testing.v1.TestState state = 5;</code>
   * @return The state.
   */
  com.google.devtools.testing.v1.TestState getState();

  /**
   * <pre>
   * Output only. Where the results for this execution are written.
   * </pre>
   *
   * <code>.google.devtools.testing.v1.ToolResultsStep tool_results_step = 11;</code>
   * @return Whether the toolResultsStep field is set.
   */
  boolean hasToolResultsStep();
  /**
   * <pre>
   * Output only. Where the results for this execution are written.
   * </pre>
   *
   * <code>.google.devtools.testing.v1.ToolResultsStep tool_results_step = 11;</code>
   * @return The toolResultsStep.
   */
  com.google.devtools.testing.v1.ToolResultsStep getToolResultsStep();
  /**
   * <pre>
   * Output only. Where the results for this execution are written.
   * </pre>
   *
   * <code>.google.devtools.testing.v1.ToolResultsStep tool_results_step = 11;</code>
   */
  com.google.devtools.testing.v1.ToolResultsStepOrBuilder getToolResultsStepOrBuilder();

  /**
   * <pre>
   * Output only. The time this test execution was initially created.
   * </pre>
   *
   * <code>.google.protobuf.Timestamp timestamp = 7;</code>
   * @return Whether the timestamp field is set.
   */
  boolean hasTimestamp();
  /**
   * <pre>
   * Output only. The time this test execution was initially created.
   * </pre>
   *
   * <code>.google.protobuf.Timestamp timestamp = 7;</code>
   * @return The timestamp.
   */
  com.google.protobuf.Timestamp getTimestamp();
  /**
   * <pre>
   * Output only. The time this test execution was initially created.
   * </pre>
   *
   * <code>.google.protobuf.Timestamp timestamp = 7;</code>
   */
  com.google.protobuf.TimestampOrBuilder getTimestampOrBuilder();

  /**
   * <pre>
   * Output only. Additional details about the running test.
   * </pre>
   *
   * <code>.google.devtools.testing.v1.TestDetails test_details = 8;</code>
   * @return Whether the testDetails field is set.
   */
  boolean hasTestDetails();
  /**
   * <pre>
   * Output only. Additional details about the running test.
   * </pre>
   *
   * <code>.google.devtools.testing.v1.TestDetails test_details = 8;</code>
   * @return The testDetails.
   */
  com.google.devtools.testing.v1.TestDetails getTestDetails();
  /**
   * <pre>
   * Output only. Additional details about the running test.
   * </pre>
   *
   * <code>.google.devtools.testing.v1.TestDetails test_details = 8;</code>
   */
  com.google.devtools.testing.v1.TestDetailsOrBuilder getTestDetailsOrBuilder();
}
