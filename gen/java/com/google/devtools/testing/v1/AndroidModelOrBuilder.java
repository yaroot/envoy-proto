// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: google/devtools/testing/v1/test_environment_discovery.proto

package com.google.devtools.testing.v1;

public interface AndroidModelOrBuilder extends
    // @@protoc_insertion_point(interface_extends:google.devtools.testing.v1.AndroidModel)
    com.google.protobuf.MessageOrBuilder {

  /**
   * <pre>
   * The unique opaque id for this model.
   * Use this for invoking the TestExecutionService.
   * </pre>
   *
   * <code>string id = 1;</code>
   * @return The id.
   */
  java.lang.String getId();
  /**
   * <pre>
   * The unique opaque id for this model.
   * Use this for invoking the TestExecutionService.
   * </pre>
   *
   * <code>string id = 1;</code>
   * @return The bytes for id.
   */
  com.google.protobuf.ByteString
      getIdBytes();

  /**
   * <pre>
   * The human-readable marketing name for this device model.
   * Examples: "Nexus 5", "Galaxy S5".
   * </pre>
   *
   * <code>string name = 2;</code>
   * @return The name.
   */
  java.lang.String getName();
  /**
   * <pre>
   * The human-readable marketing name for this device model.
   * Examples: "Nexus 5", "Galaxy S5".
   * </pre>
   *
   * <code>string name = 2;</code>
   * @return The bytes for name.
   */
  com.google.protobuf.ByteString
      getNameBytes();

  /**
   * <pre>
   * The manufacturer of this device.
   * </pre>
   *
   * <code>string manufacturer = 3;</code>
   * @return The manufacturer.
   */
  java.lang.String getManufacturer();
  /**
   * <pre>
   * The manufacturer of this device.
   * </pre>
   *
   * <code>string manufacturer = 3;</code>
   * @return The bytes for manufacturer.
   */
  com.google.protobuf.ByteString
      getManufacturerBytes();

  /**
   * <pre>
   * The company that this device is branded with.
   * Example: "Google", "Samsung".
   * </pre>
   *
   * <code>string brand = 9;</code>
   * @return The brand.
   */
  java.lang.String getBrand();
  /**
   * <pre>
   * The company that this device is branded with.
   * Example: "Google", "Samsung".
   * </pre>
   *
   * <code>string brand = 9;</code>
   * @return The bytes for brand.
   */
  com.google.protobuf.ByteString
      getBrandBytes();

  /**
   * <pre>
   * The name of the industrial design.
   * This corresponds to android.os.Build.DEVICE.
   * </pre>
   *
   * <code>string codename = 10;</code>
   * @return The codename.
   */
  java.lang.String getCodename();
  /**
   * <pre>
   * The name of the industrial design.
   * This corresponds to android.os.Build.DEVICE.
   * </pre>
   *
   * <code>string codename = 10;</code>
   * @return The bytes for codename.
   */
  com.google.protobuf.ByteString
      getCodenameBytes();

  /**
   * <pre>
   * Whether this device is virtual or physical.
   * </pre>
   *
   * <code>.google.devtools.testing.v1.DeviceForm form = 4;</code>
   * @return The enum numeric value on the wire for form.
   */
  int getFormValue();
  /**
   * <pre>
   * Whether this device is virtual or physical.
   * </pre>
   *
   * <code>.google.devtools.testing.v1.DeviceForm form = 4;</code>
   * @return The form.
   */
  com.google.devtools.testing.v1.DeviceForm getForm();

  /**
   * <pre>
   * Whether this device is a phone, tablet, wearable, etc.
   * </pre>
   *
   * <code>.google.devtools.testing.v1.DeviceFormFactor form_factor = 16;</code>
   * @return The enum numeric value on the wire for formFactor.
   */
  int getFormFactorValue();
  /**
   * <pre>
   * Whether this device is a phone, tablet, wearable, etc.
   * </pre>
   *
   * <code>.google.devtools.testing.v1.DeviceFormFactor form_factor = 16;</code>
   * @return The formFactor.
   */
  com.google.devtools.testing.v1.DeviceFormFactor getFormFactor();

  /**
   * <pre>
   * Screen size in the horizontal (X) dimension measured in pixels.
   * </pre>
   *
   * <code>int32 screen_x = 5;</code>
   * @return The screenX.
   */
  int getScreenX();

  /**
   * <pre>
   * Screen size in the vertical (Y) dimension measured in pixels.
   * </pre>
   *
   * <code>int32 screen_y = 6;</code>
   * @return The screenY.
   */
  int getScreenY();

  /**
   * <pre>
   * Screen density in DPI.
   * This corresponds to ro.sf.lcd_density
   * </pre>
   *
   * <code>int32 screen_density = 12;</code>
   * @return The screenDensity.
   */
  int getScreenDensity();

  /**
   * <pre>
   * True if and only if tests with this model are recorded by stitching
   * together screenshots. See use_low_spec_video_recording in device config.
   * </pre>
   *
   * <code>bool low_fps_video_recording = 17;</code>
   * @return The lowFpsVideoRecording.
   */
  boolean getLowFpsVideoRecording();

  /**
   * <pre>
   * The set of Android versions this device supports.
   * </pre>
   *
   * <code>repeated string supported_version_ids = 7;</code>
   * @return A list containing the supportedVersionIds.
   */
  java.util.List<java.lang.String>
      getSupportedVersionIdsList();
  /**
   * <pre>
   * The set of Android versions this device supports.
   * </pre>
   *
   * <code>repeated string supported_version_ids = 7;</code>
   * @return The count of supportedVersionIds.
   */
  int getSupportedVersionIdsCount();
  /**
   * <pre>
   * The set of Android versions this device supports.
   * </pre>
   *
   * <code>repeated string supported_version_ids = 7;</code>
   * @param index The index of the element to return.
   * @return The supportedVersionIds at the given index.
   */
  java.lang.String getSupportedVersionIds(int index);
  /**
   * <pre>
   * The set of Android versions this device supports.
   * </pre>
   *
   * <code>repeated string supported_version_ids = 7;</code>
   * @param index The index of the value to return.
   * @return The bytes of the supportedVersionIds at the given index.
   */
  com.google.protobuf.ByteString
      getSupportedVersionIdsBytes(int index);

  /**
   * <pre>
   * The list of supported ABIs for this device.
   * This corresponds to either android.os.Build.SUPPORTED_ABIS (for API level
   * 21 and above) or android.os.Build.CPU_ABI/CPU_ABI2.
   * The most preferred ABI is the first element in the list.
   * Elements are optionally prefixed by "version_id:" (where version_id is
   * the id of an AndroidVersion), denoting an ABI that is supported only on
   * a particular version.
   * </pre>
   *
   * <code>repeated string supported_abis = 11;</code>
   * @return A list containing the supportedAbis.
   */
  java.util.List<java.lang.String>
      getSupportedAbisList();
  /**
   * <pre>
   * The list of supported ABIs for this device.
   * This corresponds to either android.os.Build.SUPPORTED_ABIS (for API level
   * 21 and above) or android.os.Build.CPU_ABI/CPU_ABI2.
   * The most preferred ABI is the first element in the list.
   * Elements are optionally prefixed by "version_id:" (where version_id is
   * the id of an AndroidVersion), denoting an ABI that is supported only on
   * a particular version.
   * </pre>
   *
   * <code>repeated string supported_abis = 11;</code>
   * @return The count of supportedAbis.
   */
  int getSupportedAbisCount();
  /**
   * <pre>
   * The list of supported ABIs for this device.
   * This corresponds to either android.os.Build.SUPPORTED_ABIS (for API level
   * 21 and above) or android.os.Build.CPU_ABI/CPU_ABI2.
   * The most preferred ABI is the first element in the list.
   * Elements are optionally prefixed by "version_id:" (where version_id is
   * the id of an AndroidVersion), denoting an ABI that is supported only on
   * a particular version.
   * </pre>
   *
   * <code>repeated string supported_abis = 11;</code>
   * @param index The index of the element to return.
   * @return The supportedAbis at the given index.
   */
  java.lang.String getSupportedAbis(int index);
  /**
   * <pre>
   * The list of supported ABIs for this device.
   * This corresponds to either android.os.Build.SUPPORTED_ABIS (for API level
   * 21 and above) or android.os.Build.CPU_ABI/CPU_ABI2.
   * The most preferred ABI is the first element in the list.
   * Elements are optionally prefixed by "version_id:" (where version_id is
   * the id of an AndroidVersion), denoting an ABI that is supported only on
   * a particular version.
   * </pre>
   *
   * <code>repeated string supported_abis = 11;</code>
   * @param index The index of the value to return.
   * @return The bytes of the supportedAbis at the given index.
   */
  com.google.protobuf.ByteString
      getSupportedAbisBytes(int index);

  /**
   * <pre>
   * Tags for this dimension.
   * Examples: "default", "preview", "deprecated".
   * </pre>
   *
   * <code>repeated string tags = 8;</code>
   * @return A list containing the tags.
   */
  java.util.List<java.lang.String>
      getTagsList();
  /**
   * <pre>
   * Tags for this dimension.
   * Examples: "default", "preview", "deprecated".
   * </pre>
   *
   * <code>repeated string tags = 8;</code>
   * @return The count of tags.
   */
  int getTagsCount();
  /**
   * <pre>
   * Tags for this dimension.
   * Examples: "default", "preview", "deprecated".
   * </pre>
   *
   * <code>repeated string tags = 8;</code>
   * @param index The index of the element to return.
   * @return The tags at the given index.
   */
  java.lang.String getTags(int index);
  /**
   * <pre>
   * Tags for this dimension.
   * Examples: "default", "preview", "deprecated".
   * </pre>
   *
   * <code>repeated string tags = 8;</code>
   * @param index The index of the value to return.
   * @return The bytes of the tags at the given index.
   */
  com.google.protobuf.ByteString
      getTagsBytes(int index);

  /**
   * <pre>
   * URL of a thumbnail image (photo) of the device.
   * e.g. https://lh3.googleusercontent.com/90WcauuJiCYABEl8U0lcZeuS5STUbf2yW...
   * </pre>
   *
   * <code>string thumbnail_url = 19;</code>
   * @return The thumbnailUrl.
   */
  java.lang.String getThumbnailUrl();
  /**
   * <pre>
   * URL of a thumbnail image (photo) of the device.
   * e.g. https://lh3.googleusercontent.com/90WcauuJiCYABEl8U0lcZeuS5STUbf2yW...
   * </pre>
   *
   * <code>string thumbnail_url = 19;</code>
   * @return The bytes for thumbnailUrl.
   */
  com.google.protobuf.ByteString
      getThumbnailUrlBytes();
}
