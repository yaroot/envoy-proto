// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: google/devtools/testing/v1/test_execution.proto

package com.google.devtools.testing.v1;

/**
 * <pre>
 * Specifies how to execute the test.
 * </pre>
 *
 * Protobuf enum {@code google.devtools.testing.v1.OrchestratorOption}
 */
public enum OrchestratorOption
    implements com.google.protobuf.ProtocolMessageEnum {
  /**
   * <pre>
   * Default value: the server will choose the mode. Currently implies that
   * the test will run without the orchestrator. In the future,
   * all instrumentation tests will be run with the orchestrator.
   * Using the orchestrator is highly encouraged because of all the benefits it
   * offers.
   * </pre>
   *
   * <code>ORCHESTRATOR_OPTION_UNSPECIFIED = 0;</code>
   */
  ORCHESTRATOR_OPTION_UNSPECIFIED(0),
  /**
   * <pre>
   * Run test using orchestrator.
   * ** Only compatible with AndroidJUnitRunner version 1.0 or higher! **
   * Recommended.
   * </pre>
   *
   * <code>USE_ORCHESTRATOR = 1;</code>
   */
  USE_ORCHESTRATOR(1),
  /**
   * <pre>
   * Run test without using orchestrator.
   * </pre>
   *
   * <code>DO_NOT_USE_ORCHESTRATOR = 2;</code>
   */
  DO_NOT_USE_ORCHESTRATOR(2),
  UNRECOGNIZED(-1),
  ;

  /**
   * <pre>
   * Default value: the server will choose the mode. Currently implies that
   * the test will run without the orchestrator. In the future,
   * all instrumentation tests will be run with the orchestrator.
   * Using the orchestrator is highly encouraged because of all the benefits it
   * offers.
   * </pre>
   *
   * <code>ORCHESTRATOR_OPTION_UNSPECIFIED = 0;</code>
   */
  public static final int ORCHESTRATOR_OPTION_UNSPECIFIED_VALUE = 0;
  /**
   * <pre>
   * Run test using orchestrator.
   * ** Only compatible with AndroidJUnitRunner version 1.0 or higher! **
   * Recommended.
   * </pre>
   *
   * <code>USE_ORCHESTRATOR = 1;</code>
   */
  public static final int USE_ORCHESTRATOR_VALUE = 1;
  /**
   * <pre>
   * Run test without using orchestrator.
   * </pre>
   *
   * <code>DO_NOT_USE_ORCHESTRATOR = 2;</code>
   */
  public static final int DO_NOT_USE_ORCHESTRATOR_VALUE = 2;


  public final int getNumber() {
    if (this == UNRECOGNIZED) {
      throw new java.lang.IllegalArgumentException(
          "Can't get the number of an unknown enum value.");
    }
    return value;
  }

  /**
   * @param value The numeric wire value of the corresponding enum entry.
   * @return The enum associated with the given numeric wire value.
   * @deprecated Use {@link #forNumber(int)} instead.
   */
  @java.lang.Deprecated
  public static OrchestratorOption valueOf(int value) {
    return forNumber(value);
  }

  /**
   * @param value The numeric wire value of the corresponding enum entry.
   * @return The enum associated with the given numeric wire value.
   */
  public static OrchestratorOption forNumber(int value) {
    switch (value) {
      case 0: return ORCHESTRATOR_OPTION_UNSPECIFIED;
      case 1: return USE_ORCHESTRATOR;
      case 2: return DO_NOT_USE_ORCHESTRATOR;
      default: return null;
    }
  }

  public static com.google.protobuf.Internal.EnumLiteMap<OrchestratorOption>
      internalGetValueMap() {
    return internalValueMap;
  }
  private static final com.google.protobuf.Internal.EnumLiteMap<
      OrchestratorOption> internalValueMap =
        new com.google.protobuf.Internal.EnumLiteMap<OrchestratorOption>() {
          public OrchestratorOption findValueByNumber(int number) {
            return OrchestratorOption.forNumber(number);
          }
        };

  public final com.google.protobuf.Descriptors.EnumValueDescriptor
      getValueDescriptor() {
    if (this == UNRECOGNIZED) {
      throw new java.lang.IllegalStateException(
          "Can't get the descriptor of an unrecognized enum value.");
    }
    return getDescriptor().getValues().get(ordinal());
  }
  public final com.google.protobuf.Descriptors.EnumDescriptor
      getDescriptorForType() {
    return getDescriptor();
  }
  public static final com.google.protobuf.Descriptors.EnumDescriptor
      getDescriptor() {
    return com.google.devtools.testing.v1.TestExecutionProto.getDescriptor().getEnumTypes().get(0);
  }

  private static final OrchestratorOption[] VALUES = values();

  public static OrchestratorOption valueOf(
      com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
    if (desc.getType() != getDescriptor()) {
      throw new java.lang.IllegalArgumentException(
        "EnumValueDescriptor is not for this type.");
    }
    if (desc.getIndex() == -1) {
      return UNRECOGNIZED;
    }
    return VALUES[desc.getIndex()];
  }

  private final int value;

  private OrchestratorOption(int value) {
    this.value = value;
  }

  // @@protoc_insertion_point(enum_scope:google.devtools.testing.v1.OrchestratorOption)
}

