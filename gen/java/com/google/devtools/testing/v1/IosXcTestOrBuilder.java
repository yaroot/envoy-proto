// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: google/devtools/testing/v1/test_execution.proto

package com.google.devtools.testing.v1;

public interface IosXcTestOrBuilder extends
    // @@protoc_insertion_point(interface_extends:google.devtools.testing.v1.IosXcTest)
    com.google.protobuf.MessageOrBuilder {

  /**
   * <pre>
   * Required. The .zip containing the .xctestrun file and the contents of the
   * DerivedData/Build/Products directory.
   * The .xctestrun file in this zip is ignored if the xctestrun field is
   * specified.
   * </pre>
   *
   * <code>.google.devtools.testing.v1.FileReference tests_zip = 1;</code>
   * @return Whether the testsZip field is set.
   */
  boolean hasTestsZip();
  /**
   * <pre>
   * Required. The .zip containing the .xctestrun file and the contents of the
   * DerivedData/Build/Products directory.
   * The .xctestrun file in this zip is ignored if the xctestrun field is
   * specified.
   * </pre>
   *
   * <code>.google.devtools.testing.v1.FileReference tests_zip = 1;</code>
   * @return The testsZip.
   */
  com.google.devtools.testing.v1.FileReference getTestsZip();
  /**
   * <pre>
   * Required. The .zip containing the .xctestrun file and the contents of the
   * DerivedData/Build/Products directory.
   * The .xctestrun file in this zip is ignored if the xctestrun field is
   * specified.
   * </pre>
   *
   * <code>.google.devtools.testing.v1.FileReference tests_zip = 1;</code>
   */
  com.google.devtools.testing.v1.FileReferenceOrBuilder getTestsZipOrBuilder();

  /**
   * <pre>
   * An .xctestrun file that will override the .xctestrun file in the
   * tests zip. Because the .xctestrun file contains environment variables along
   * with test methods to run and/or ignore, this can be useful for sharding
   * tests. Default is taken from the tests zip.
   * </pre>
   *
   * <code>.google.devtools.testing.v1.FileReference xctestrun = 2;</code>
   * @return Whether the xctestrun field is set.
   */
  boolean hasXctestrun();
  /**
   * <pre>
   * An .xctestrun file that will override the .xctestrun file in the
   * tests zip. Because the .xctestrun file contains environment variables along
   * with test methods to run and/or ignore, this can be useful for sharding
   * tests. Default is taken from the tests zip.
   * </pre>
   *
   * <code>.google.devtools.testing.v1.FileReference xctestrun = 2;</code>
   * @return The xctestrun.
   */
  com.google.devtools.testing.v1.FileReference getXctestrun();
  /**
   * <pre>
   * An .xctestrun file that will override the .xctestrun file in the
   * tests zip. Because the .xctestrun file contains environment variables along
   * with test methods to run and/or ignore, this can be useful for sharding
   * tests. Default is taken from the tests zip.
   * </pre>
   *
   * <code>.google.devtools.testing.v1.FileReference xctestrun = 2;</code>
   */
  com.google.devtools.testing.v1.FileReferenceOrBuilder getXctestrunOrBuilder();

  /**
   * <pre>
   * The Xcode version that should be used for the test.
   * Use the TestEnvironmentDiscoveryService to get supported options.
   * Defaults to the latest Xcode version Firebase Test Lab supports.
   * </pre>
   *
   * <code>string xcode_version = 3;</code>
   * @return The xcodeVersion.
   */
  java.lang.String getXcodeVersion();
  /**
   * <pre>
   * The Xcode version that should be used for the test.
   * Use the TestEnvironmentDiscoveryService to get supported options.
   * Defaults to the latest Xcode version Firebase Test Lab supports.
   * </pre>
   *
   * <code>string xcode_version = 3;</code>
   * @return The bytes for xcodeVersion.
   */
  com.google.protobuf.ByteString
      getXcodeVersionBytes();

  /**
   * <pre>
   * Output only. The bundle id for the application under test.
   * </pre>
   *
   * <code>string app_bundle_id = 4;</code>
   * @return The appBundleId.
   */
  java.lang.String getAppBundleId();
  /**
   * <pre>
   * Output only. The bundle id for the application under test.
   * </pre>
   *
   * <code>string app_bundle_id = 4;</code>
   * @return The bytes for appBundleId.
   */
  com.google.protobuf.ByteString
      getAppBundleIdBytes();

  /**
   * <pre>
   * The option to test special app entitlements. Setting this would re-sign the
   * app having special entitlements with an explicit application-identifier.
   * Currently supports testing aps-environment entitlement.
   * </pre>
   *
   * <code>bool test_special_entitlements = 6;</code>
   * @return The testSpecialEntitlements.
   */
  boolean getTestSpecialEntitlements();
}
