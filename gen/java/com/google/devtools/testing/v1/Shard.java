// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: google/devtools/testing/v1/test_execution.proto

package com.google.devtools.testing.v1;

/**
 * <pre>
 * Output only. Details about the shard.
 * </pre>
 *
 * Protobuf type {@code google.devtools.testing.v1.Shard}
 */
public final class Shard extends
    com.google.protobuf.GeneratedMessageV3 implements
    // @@protoc_insertion_point(message_implements:google.devtools.testing.v1.Shard)
    ShardOrBuilder {
private static final long serialVersionUID = 0L;
  // Use Shard.newBuilder() to construct.
  private Shard(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
    super(builder);
  }
  private Shard() {
  }

  @java.lang.Override
  @SuppressWarnings({"unused"})
  protected java.lang.Object newInstance(
      UnusedPrivateParameter unused) {
    return new Shard();
  }

  @java.lang.Override
  public final com.google.protobuf.UnknownFieldSet
  getUnknownFields() {
    return this.unknownFields;
  }
  private Shard(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    this();
    if (extensionRegistry == null) {
      throw new java.lang.NullPointerException();
    }
    com.google.protobuf.UnknownFieldSet.Builder unknownFields =
        com.google.protobuf.UnknownFieldSet.newBuilder();
    try {
      boolean done = false;
      while (!done) {
        int tag = input.readTag();
        switch (tag) {
          case 0:
            done = true;
            break;
          case 8: {

            shardIndex_ = input.readInt32();
            break;
          }
          case 16: {

            numShards_ = input.readInt32();
            break;
          }
          case 26: {
            com.google.devtools.testing.v1.TestTargetsForShard.Builder subBuilder = null;
            if (testTargetsForShard_ != null) {
              subBuilder = testTargetsForShard_.toBuilder();
            }
            testTargetsForShard_ = input.readMessage(com.google.devtools.testing.v1.TestTargetsForShard.parser(), extensionRegistry);
            if (subBuilder != null) {
              subBuilder.mergeFrom(testTargetsForShard_);
              testTargetsForShard_ = subBuilder.buildPartial();
            }

            break;
          }
          default: {
            if (!parseUnknownField(
                input, unknownFields, extensionRegistry, tag)) {
              done = true;
            }
            break;
          }
        }
      }
    } catch (com.google.protobuf.InvalidProtocolBufferException e) {
      throw e.setUnfinishedMessage(this);
    } catch (com.google.protobuf.UninitializedMessageException e) {
      throw e.asInvalidProtocolBufferException().setUnfinishedMessage(this);
    } catch (java.io.IOException e) {
      throw new com.google.protobuf.InvalidProtocolBufferException(
          e).setUnfinishedMessage(this);
    } finally {
      this.unknownFields = unknownFields.build();
      makeExtensionsImmutable();
    }
  }
  public static final com.google.protobuf.Descriptors.Descriptor
      getDescriptor() {
    return com.google.devtools.testing.v1.TestExecutionProto.internal_static_google_devtools_testing_v1_Shard_descriptor;
  }

  @java.lang.Override
  protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internalGetFieldAccessorTable() {
    return com.google.devtools.testing.v1.TestExecutionProto.internal_static_google_devtools_testing_v1_Shard_fieldAccessorTable
        .ensureFieldAccessorsInitialized(
            com.google.devtools.testing.v1.Shard.class, com.google.devtools.testing.v1.Shard.Builder.class);
  }

  public static final int SHARD_INDEX_FIELD_NUMBER = 1;
  private int shardIndex_;
  /**
   * <pre>
   * Output only. The index of the shard among all the shards.
   * </pre>
   *
   * <code>int32 shard_index = 1;</code>
   * @return The shardIndex.
   */
  @java.lang.Override
  public int getShardIndex() {
    return shardIndex_;
  }

  public static final int NUM_SHARDS_FIELD_NUMBER = 2;
  private int numShards_;
  /**
   * <pre>
   * Output only. The total number of shards.
   * </pre>
   *
   * <code>int32 num_shards = 2;</code>
   * @return The numShards.
   */
  @java.lang.Override
  public int getNumShards() {
    return numShards_;
  }

  public static final int TEST_TARGETS_FOR_SHARD_FIELD_NUMBER = 3;
  private com.google.devtools.testing.v1.TestTargetsForShard testTargetsForShard_;
  /**
   * <pre>
   * Output only. Test targets for each shard.
   * </pre>
   *
   * <code>.google.devtools.testing.v1.TestTargetsForShard test_targets_for_shard = 3;</code>
   * @return Whether the testTargetsForShard field is set.
   */
  @java.lang.Override
  public boolean hasTestTargetsForShard() {
    return testTargetsForShard_ != null;
  }
  /**
   * <pre>
   * Output only. Test targets for each shard.
   * </pre>
   *
   * <code>.google.devtools.testing.v1.TestTargetsForShard test_targets_for_shard = 3;</code>
   * @return The testTargetsForShard.
   */
  @java.lang.Override
  public com.google.devtools.testing.v1.TestTargetsForShard getTestTargetsForShard() {
    return testTargetsForShard_ == null ? com.google.devtools.testing.v1.TestTargetsForShard.getDefaultInstance() : testTargetsForShard_;
  }
  /**
   * <pre>
   * Output only. Test targets for each shard.
   * </pre>
   *
   * <code>.google.devtools.testing.v1.TestTargetsForShard test_targets_for_shard = 3;</code>
   */
  @java.lang.Override
  public com.google.devtools.testing.v1.TestTargetsForShardOrBuilder getTestTargetsForShardOrBuilder() {
    return getTestTargetsForShard();
  }

  private byte memoizedIsInitialized = -1;
  @java.lang.Override
  public final boolean isInitialized() {
    byte isInitialized = memoizedIsInitialized;
    if (isInitialized == 1) return true;
    if (isInitialized == 0) return false;

    memoizedIsInitialized = 1;
    return true;
  }

  @java.lang.Override
  public void writeTo(com.google.protobuf.CodedOutputStream output)
                      throws java.io.IOException {
    if (shardIndex_ != 0) {
      output.writeInt32(1, shardIndex_);
    }
    if (numShards_ != 0) {
      output.writeInt32(2, numShards_);
    }
    if (testTargetsForShard_ != null) {
      output.writeMessage(3, getTestTargetsForShard());
    }
    unknownFields.writeTo(output);
  }

  @java.lang.Override
  public int getSerializedSize() {
    int size = memoizedSize;
    if (size != -1) return size;

    size = 0;
    if (shardIndex_ != 0) {
      size += com.google.protobuf.CodedOutputStream
        .computeInt32Size(1, shardIndex_);
    }
    if (numShards_ != 0) {
      size += com.google.protobuf.CodedOutputStream
        .computeInt32Size(2, numShards_);
    }
    if (testTargetsForShard_ != null) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(3, getTestTargetsForShard());
    }
    size += unknownFields.getSerializedSize();
    memoizedSize = size;
    return size;
  }

  @java.lang.Override
  public boolean equals(final java.lang.Object obj) {
    if (obj == this) {
     return true;
    }
    if (!(obj instanceof com.google.devtools.testing.v1.Shard)) {
      return super.equals(obj);
    }
    com.google.devtools.testing.v1.Shard other = (com.google.devtools.testing.v1.Shard) obj;

    if (getShardIndex()
        != other.getShardIndex()) return false;
    if (getNumShards()
        != other.getNumShards()) return false;
    if (hasTestTargetsForShard() != other.hasTestTargetsForShard()) return false;
    if (hasTestTargetsForShard()) {
      if (!getTestTargetsForShard()
          .equals(other.getTestTargetsForShard())) return false;
    }
    if (!unknownFields.equals(other.unknownFields)) return false;
    return true;
  }

  @java.lang.Override
  public int hashCode() {
    if (memoizedHashCode != 0) {
      return memoizedHashCode;
    }
    int hash = 41;
    hash = (19 * hash) + getDescriptor().hashCode();
    hash = (37 * hash) + SHARD_INDEX_FIELD_NUMBER;
    hash = (53 * hash) + getShardIndex();
    hash = (37 * hash) + NUM_SHARDS_FIELD_NUMBER;
    hash = (53 * hash) + getNumShards();
    if (hasTestTargetsForShard()) {
      hash = (37 * hash) + TEST_TARGETS_FOR_SHARD_FIELD_NUMBER;
      hash = (53 * hash) + getTestTargetsForShard().hashCode();
    }
    hash = (29 * hash) + unknownFields.hashCode();
    memoizedHashCode = hash;
    return hash;
  }

  public static com.google.devtools.testing.v1.Shard parseFrom(
      java.nio.ByteBuffer data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static com.google.devtools.testing.v1.Shard parseFrom(
      java.nio.ByteBuffer data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static com.google.devtools.testing.v1.Shard parseFrom(
      com.google.protobuf.ByteString data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static com.google.devtools.testing.v1.Shard parseFrom(
      com.google.protobuf.ByteString data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static com.google.devtools.testing.v1.Shard parseFrom(byte[] data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static com.google.devtools.testing.v1.Shard parseFrom(
      byte[] data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static com.google.devtools.testing.v1.Shard parseFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input);
  }
  public static com.google.devtools.testing.v1.Shard parseFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input, extensionRegistry);
  }
  public static com.google.devtools.testing.v1.Shard parseDelimitedFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseDelimitedWithIOException(PARSER, input);
  }
  public static com.google.devtools.testing.v1.Shard parseDelimitedFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
  }
  public static com.google.devtools.testing.v1.Shard parseFrom(
      com.google.protobuf.CodedInputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input);
  }
  public static com.google.devtools.testing.v1.Shard parseFrom(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input, extensionRegistry);
  }

  @java.lang.Override
  public Builder newBuilderForType() { return newBuilder(); }
  public static Builder newBuilder() {
    return DEFAULT_INSTANCE.toBuilder();
  }
  public static Builder newBuilder(com.google.devtools.testing.v1.Shard prototype) {
    return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
  }
  @java.lang.Override
  public Builder toBuilder() {
    return this == DEFAULT_INSTANCE
        ? new Builder() : new Builder().mergeFrom(this);
  }

  @java.lang.Override
  protected Builder newBuilderForType(
      com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
    Builder builder = new Builder(parent);
    return builder;
  }
  /**
   * <pre>
   * Output only. Details about the shard.
   * </pre>
   *
   * Protobuf type {@code google.devtools.testing.v1.Shard}
   */
  public static final class Builder extends
      com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
      // @@protoc_insertion_point(builder_implements:google.devtools.testing.v1.Shard)
      com.google.devtools.testing.v1.ShardOrBuilder {
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.google.devtools.testing.v1.TestExecutionProto.internal_static_google_devtools_testing_v1_Shard_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.google.devtools.testing.v1.TestExecutionProto.internal_static_google_devtools_testing_v1_Shard_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.google.devtools.testing.v1.Shard.class, com.google.devtools.testing.v1.Shard.Builder.class);
    }

    // Construct using com.google.devtools.testing.v1.Shard.newBuilder()
    private Builder() {
      maybeForceBuilderInitialization();
    }

    private Builder(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      super(parent);
      maybeForceBuilderInitialization();
    }
    private void maybeForceBuilderInitialization() {
      if (com.google.protobuf.GeneratedMessageV3
              .alwaysUseFieldBuilders) {
      }
    }
    @java.lang.Override
    public Builder clear() {
      super.clear();
      shardIndex_ = 0;

      numShards_ = 0;

      if (testTargetsForShardBuilder_ == null) {
        testTargetsForShard_ = null;
      } else {
        testTargetsForShard_ = null;
        testTargetsForShardBuilder_ = null;
      }
      return this;
    }

    @java.lang.Override
    public com.google.protobuf.Descriptors.Descriptor
        getDescriptorForType() {
      return com.google.devtools.testing.v1.TestExecutionProto.internal_static_google_devtools_testing_v1_Shard_descriptor;
    }

    @java.lang.Override
    public com.google.devtools.testing.v1.Shard getDefaultInstanceForType() {
      return com.google.devtools.testing.v1.Shard.getDefaultInstance();
    }

    @java.lang.Override
    public com.google.devtools.testing.v1.Shard build() {
      com.google.devtools.testing.v1.Shard result = buildPartial();
      if (!result.isInitialized()) {
        throw newUninitializedMessageException(result);
      }
      return result;
    }

    @java.lang.Override
    public com.google.devtools.testing.v1.Shard buildPartial() {
      com.google.devtools.testing.v1.Shard result = new com.google.devtools.testing.v1.Shard(this);
      result.shardIndex_ = shardIndex_;
      result.numShards_ = numShards_;
      if (testTargetsForShardBuilder_ == null) {
        result.testTargetsForShard_ = testTargetsForShard_;
      } else {
        result.testTargetsForShard_ = testTargetsForShardBuilder_.build();
      }
      onBuilt();
      return result;
    }

    @java.lang.Override
    public Builder clone() {
      return super.clone();
    }
    @java.lang.Override
    public Builder setField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        java.lang.Object value) {
      return super.setField(field, value);
    }
    @java.lang.Override
    public Builder clearField(
        com.google.protobuf.Descriptors.FieldDescriptor field) {
      return super.clearField(field);
    }
    @java.lang.Override
    public Builder clearOneof(
        com.google.protobuf.Descriptors.OneofDescriptor oneof) {
      return super.clearOneof(oneof);
    }
    @java.lang.Override
    public Builder setRepeatedField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        int index, java.lang.Object value) {
      return super.setRepeatedField(field, index, value);
    }
    @java.lang.Override
    public Builder addRepeatedField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        java.lang.Object value) {
      return super.addRepeatedField(field, value);
    }
    @java.lang.Override
    public Builder mergeFrom(com.google.protobuf.Message other) {
      if (other instanceof com.google.devtools.testing.v1.Shard) {
        return mergeFrom((com.google.devtools.testing.v1.Shard)other);
      } else {
        super.mergeFrom(other);
        return this;
      }
    }

    public Builder mergeFrom(com.google.devtools.testing.v1.Shard other) {
      if (other == com.google.devtools.testing.v1.Shard.getDefaultInstance()) return this;
      if (other.getShardIndex() != 0) {
        setShardIndex(other.getShardIndex());
      }
      if (other.getNumShards() != 0) {
        setNumShards(other.getNumShards());
      }
      if (other.hasTestTargetsForShard()) {
        mergeTestTargetsForShard(other.getTestTargetsForShard());
      }
      this.mergeUnknownFields(other.unknownFields);
      onChanged();
      return this;
    }

    @java.lang.Override
    public final boolean isInitialized() {
      return true;
    }

    @java.lang.Override
    public Builder mergeFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      com.google.devtools.testing.v1.Shard parsedMessage = null;
      try {
        parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        parsedMessage = (com.google.devtools.testing.v1.Shard) e.getUnfinishedMessage();
        throw e.unwrapIOException();
      } finally {
        if (parsedMessage != null) {
          mergeFrom(parsedMessage);
        }
      }
      return this;
    }

    private int shardIndex_ ;
    /**
     * <pre>
     * Output only. The index of the shard among all the shards.
     * </pre>
     *
     * <code>int32 shard_index = 1;</code>
     * @return The shardIndex.
     */
    @java.lang.Override
    public int getShardIndex() {
      return shardIndex_;
    }
    /**
     * <pre>
     * Output only. The index of the shard among all the shards.
     * </pre>
     *
     * <code>int32 shard_index = 1;</code>
     * @param value The shardIndex to set.
     * @return This builder for chaining.
     */
    public Builder setShardIndex(int value) {
      
      shardIndex_ = value;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * Output only. The index of the shard among all the shards.
     * </pre>
     *
     * <code>int32 shard_index = 1;</code>
     * @return This builder for chaining.
     */
    public Builder clearShardIndex() {
      
      shardIndex_ = 0;
      onChanged();
      return this;
    }

    private int numShards_ ;
    /**
     * <pre>
     * Output only. The total number of shards.
     * </pre>
     *
     * <code>int32 num_shards = 2;</code>
     * @return The numShards.
     */
    @java.lang.Override
    public int getNumShards() {
      return numShards_;
    }
    /**
     * <pre>
     * Output only. The total number of shards.
     * </pre>
     *
     * <code>int32 num_shards = 2;</code>
     * @param value The numShards to set.
     * @return This builder for chaining.
     */
    public Builder setNumShards(int value) {
      
      numShards_ = value;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * Output only. The total number of shards.
     * </pre>
     *
     * <code>int32 num_shards = 2;</code>
     * @return This builder for chaining.
     */
    public Builder clearNumShards() {
      
      numShards_ = 0;
      onChanged();
      return this;
    }

    private com.google.devtools.testing.v1.TestTargetsForShard testTargetsForShard_;
    private com.google.protobuf.SingleFieldBuilderV3<
        com.google.devtools.testing.v1.TestTargetsForShard, com.google.devtools.testing.v1.TestTargetsForShard.Builder, com.google.devtools.testing.v1.TestTargetsForShardOrBuilder> testTargetsForShardBuilder_;
    /**
     * <pre>
     * Output only. Test targets for each shard.
     * </pre>
     *
     * <code>.google.devtools.testing.v1.TestTargetsForShard test_targets_for_shard = 3;</code>
     * @return Whether the testTargetsForShard field is set.
     */
    public boolean hasTestTargetsForShard() {
      return testTargetsForShardBuilder_ != null || testTargetsForShard_ != null;
    }
    /**
     * <pre>
     * Output only. Test targets for each shard.
     * </pre>
     *
     * <code>.google.devtools.testing.v1.TestTargetsForShard test_targets_for_shard = 3;</code>
     * @return The testTargetsForShard.
     */
    public com.google.devtools.testing.v1.TestTargetsForShard getTestTargetsForShard() {
      if (testTargetsForShardBuilder_ == null) {
        return testTargetsForShard_ == null ? com.google.devtools.testing.v1.TestTargetsForShard.getDefaultInstance() : testTargetsForShard_;
      } else {
        return testTargetsForShardBuilder_.getMessage();
      }
    }
    /**
     * <pre>
     * Output only. Test targets for each shard.
     * </pre>
     *
     * <code>.google.devtools.testing.v1.TestTargetsForShard test_targets_for_shard = 3;</code>
     */
    public Builder setTestTargetsForShard(com.google.devtools.testing.v1.TestTargetsForShard value) {
      if (testTargetsForShardBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        testTargetsForShard_ = value;
        onChanged();
      } else {
        testTargetsForShardBuilder_.setMessage(value);
      }

      return this;
    }
    /**
     * <pre>
     * Output only. Test targets for each shard.
     * </pre>
     *
     * <code>.google.devtools.testing.v1.TestTargetsForShard test_targets_for_shard = 3;</code>
     */
    public Builder setTestTargetsForShard(
        com.google.devtools.testing.v1.TestTargetsForShard.Builder builderForValue) {
      if (testTargetsForShardBuilder_ == null) {
        testTargetsForShard_ = builderForValue.build();
        onChanged();
      } else {
        testTargetsForShardBuilder_.setMessage(builderForValue.build());
      }

      return this;
    }
    /**
     * <pre>
     * Output only. Test targets for each shard.
     * </pre>
     *
     * <code>.google.devtools.testing.v1.TestTargetsForShard test_targets_for_shard = 3;</code>
     */
    public Builder mergeTestTargetsForShard(com.google.devtools.testing.v1.TestTargetsForShard value) {
      if (testTargetsForShardBuilder_ == null) {
        if (testTargetsForShard_ != null) {
          testTargetsForShard_ =
            com.google.devtools.testing.v1.TestTargetsForShard.newBuilder(testTargetsForShard_).mergeFrom(value).buildPartial();
        } else {
          testTargetsForShard_ = value;
        }
        onChanged();
      } else {
        testTargetsForShardBuilder_.mergeFrom(value);
      }

      return this;
    }
    /**
     * <pre>
     * Output only. Test targets for each shard.
     * </pre>
     *
     * <code>.google.devtools.testing.v1.TestTargetsForShard test_targets_for_shard = 3;</code>
     */
    public Builder clearTestTargetsForShard() {
      if (testTargetsForShardBuilder_ == null) {
        testTargetsForShard_ = null;
        onChanged();
      } else {
        testTargetsForShard_ = null;
        testTargetsForShardBuilder_ = null;
      }

      return this;
    }
    /**
     * <pre>
     * Output only. Test targets for each shard.
     * </pre>
     *
     * <code>.google.devtools.testing.v1.TestTargetsForShard test_targets_for_shard = 3;</code>
     */
    public com.google.devtools.testing.v1.TestTargetsForShard.Builder getTestTargetsForShardBuilder() {
      
      onChanged();
      return getTestTargetsForShardFieldBuilder().getBuilder();
    }
    /**
     * <pre>
     * Output only. Test targets for each shard.
     * </pre>
     *
     * <code>.google.devtools.testing.v1.TestTargetsForShard test_targets_for_shard = 3;</code>
     */
    public com.google.devtools.testing.v1.TestTargetsForShardOrBuilder getTestTargetsForShardOrBuilder() {
      if (testTargetsForShardBuilder_ != null) {
        return testTargetsForShardBuilder_.getMessageOrBuilder();
      } else {
        return testTargetsForShard_ == null ?
            com.google.devtools.testing.v1.TestTargetsForShard.getDefaultInstance() : testTargetsForShard_;
      }
    }
    /**
     * <pre>
     * Output only. Test targets for each shard.
     * </pre>
     *
     * <code>.google.devtools.testing.v1.TestTargetsForShard test_targets_for_shard = 3;</code>
     */
    private com.google.protobuf.SingleFieldBuilderV3<
        com.google.devtools.testing.v1.TestTargetsForShard, com.google.devtools.testing.v1.TestTargetsForShard.Builder, com.google.devtools.testing.v1.TestTargetsForShardOrBuilder> 
        getTestTargetsForShardFieldBuilder() {
      if (testTargetsForShardBuilder_ == null) {
        testTargetsForShardBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
            com.google.devtools.testing.v1.TestTargetsForShard, com.google.devtools.testing.v1.TestTargetsForShard.Builder, com.google.devtools.testing.v1.TestTargetsForShardOrBuilder>(
                getTestTargetsForShard(),
                getParentForChildren(),
                isClean());
        testTargetsForShard_ = null;
      }
      return testTargetsForShardBuilder_;
    }
    @java.lang.Override
    public final Builder setUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return super.setUnknownFields(unknownFields);
    }

    @java.lang.Override
    public final Builder mergeUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return super.mergeUnknownFields(unknownFields);
    }


    // @@protoc_insertion_point(builder_scope:google.devtools.testing.v1.Shard)
  }

  // @@protoc_insertion_point(class_scope:google.devtools.testing.v1.Shard)
  private static final com.google.devtools.testing.v1.Shard DEFAULT_INSTANCE;
  static {
    DEFAULT_INSTANCE = new com.google.devtools.testing.v1.Shard();
  }

  public static com.google.devtools.testing.v1.Shard getDefaultInstance() {
    return DEFAULT_INSTANCE;
  }

  private static final com.google.protobuf.Parser<Shard>
      PARSER = new com.google.protobuf.AbstractParser<Shard>() {
    @java.lang.Override
    public Shard parsePartialFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return new Shard(input, extensionRegistry);
    }
  };

  public static com.google.protobuf.Parser<Shard> parser() {
    return PARSER;
  }

  @java.lang.Override
  public com.google.protobuf.Parser<Shard> getParserForType() {
    return PARSER;
  }

  @java.lang.Override
  public com.google.devtools.testing.v1.Shard getDefaultInstanceForType() {
    return DEFAULT_INSTANCE;
  }

}

