// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: google/devtools/testing/v1/test_execution.proto

package com.google.devtools.testing.v1;

public interface TestSpecificationOrBuilder extends
    // @@protoc_insertion_point(interface_extends:google.devtools.testing.v1.TestSpecification)
    com.google.protobuf.MessageOrBuilder {

  /**
   * <pre>
   * Max time a test execution is allowed to run before it is
   * automatically cancelled.
   * The default value is 5 min.
   * </pre>
   *
   * <code>.google.protobuf.Duration test_timeout = 1;</code>
   * @return Whether the testTimeout field is set.
   */
  boolean hasTestTimeout();
  /**
   * <pre>
   * Max time a test execution is allowed to run before it is
   * automatically cancelled.
   * The default value is 5 min.
   * </pre>
   *
   * <code>.google.protobuf.Duration test_timeout = 1;</code>
   * @return The testTimeout.
   */
  com.google.protobuf.Duration getTestTimeout();
  /**
   * <pre>
   * Max time a test execution is allowed to run before it is
   * automatically cancelled.
   * The default value is 5 min.
   * </pre>
   *
   * <code>.google.protobuf.Duration test_timeout = 1;</code>
   */
  com.google.protobuf.DurationOrBuilder getTestTimeoutOrBuilder();

  /**
   * <pre>
   * Test setup requirements for Android e.g. files to install, bootstrap
   * scripts.
   * </pre>
   *
   * <code>.google.devtools.testing.v1.TestSetup test_setup = 6;</code>
   * @return Whether the testSetup field is set.
   */
  boolean hasTestSetup();
  /**
   * <pre>
   * Test setup requirements for Android e.g. files to install, bootstrap
   * scripts.
   * </pre>
   *
   * <code>.google.devtools.testing.v1.TestSetup test_setup = 6;</code>
   * @return The testSetup.
   */
  com.google.devtools.testing.v1.TestSetup getTestSetup();
  /**
   * <pre>
   * Test setup requirements for Android e.g. files to install, bootstrap
   * scripts.
   * </pre>
   *
   * <code>.google.devtools.testing.v1.TestSetup test_setup = 6;</code>
   */
  com.google.devtools.testing.v1.TestSetupOrBuilder getTestSetupOrBuilder();

  /**
   * <pre>
   * Test setup requirements for iOS.
   * </pre>
   *
   * <code>.google.devtools.testing.v1.IosTestSetup ios_test_setup = 14;</code>
   * @return Whether the iosTestSetup field is set.
   */
  boolean hasIosTestSetup();
  /**
   * <pre>
   * Test setup requirements for iOS.
   * </pre>
   *
   * <code>.google.devtools.testing.v1.IosTestSetup ios_test_setup = 14;</code>
   * @return The iosTestSetup.
   */
  com.google.devtools.testing.v1.IosTestSetup getIosTestSetup();
  /**
   * <pre>
   * Test setup requirements for iOS.
   * </pre>
   *
   * <code>.google.devtools.testing.v1.IosTestSetup ios_test_setup = 14;</code>
   */
  com.google.devtools.testing.v1.IosTestSetupOrBuilder getIosTestSetupOrBuilder();

  /**
   * <pre>
   * An Android instrumentation test.
   * </pre>
   *
   * <code>.google.devtools.testing.v1.AndroidInstrumentationTest android_instrumentation_test = 2;</code>
   * @return Whether the androidInstrumentationTest field is set.
   */
  boolean hasAndroidInstrumentationTest();
  /**
   * <pre>
   * An Android instrumentation test.
   * </pre>
   *
   * <code>.google.devtools.testing.v1.AndroidInstrumentationTest android_instrumentation_test = 2;</code>
   * @return The androidInstrumentationTest.
   */
  com.google.devtools.testing.v1.AndroidInstrumentationTest getAndroidInstrumentationTest();
  /**
   * <pre>
   * An Android instrumentation test.
   * </pre>
   *
   * <code>.google.devtools.testing.v1.AndroidInstrumentationTest android_instrumentation_test = 2;</code>
   */
  com.google.devtools.testing.v1.AndroidInstrumentationTestOrBuilder getAndroidInstrumentationTestOrBuilder();

  /**
   * <pre>
   * An Android robo test.
   * </pre>
   *
   * <code>.google.devtools.testing.v1.AndroidRoboTest android_robo_test = 3;</code>
   * @return Whether the androidRoboTest field is set.
   */
  boolean hasAndroidRoboTest();
  /**
   * <pre>
   * An Android robo test.
   * </pre>
   *
   * <code>.google.devtools.testing.v1.AndroidRoboTest android_robo_test = 3;</code>
   * @return The androidRoboTest.
   */
  com.google.devtools.testing.v1.AndroidRoboTest getAndroidRoboTest();
  /**
   * <pre>
   * An Android robo test.
   * </pre>
   *
   * <code>.google.devtools.testing.v1.AndroidRoboTest android_robo_test = 3;</code>
   */
  com.google.devtools.testing.v1.AndroidRoboTestOrBuilder getAndroidRoboTestOrBuilder();

  /**
   * <pre>
   * An Android Application with a Test Loop.
   * </pre>
   *
   * <code>.google.devtools.testing.v1.AndroidTestLoop android_test_loop = 9;</code>
   * @return Whether the androidTestLoop field is set.
   */
  boolean hasAndroidTestLoop();
  /**
   * <pre>
   * An Android Application with a Test Loop.
   * </pre>
   *
   * <code>.google.devtools.testing.v1.AndroidTestLoop android_test_loop = 9;</code>
   * @return The androidTestLoop.
   */
  com.google.devtools.testing.v1.AndroidTestLoop getAndroidTestLoop();
  /**
   * <pre>
   * An Android Application with a Test Loop.
   * </pre>
   *
   * <code>.google.devtools.testing.v1.AndroidTestLoop android_test_loop = 9;</code>
   */
  com.google.devtools.testing.v1.AndroidTestLoopOrBuilder getAndroidTestLoopOrBuilder();

  /**
   * <pre>
   * An iOS XCTest, via an .xctestrun file.
   * </pre>
   *
   * <code>.google.devtools.testing.v1.IosXcTest ios_xc_test = 13;</code>
   * @return Whether the iosXcTest field is set.
   */
  boolean hasIosXcTest();
  /**
   * <pre>
   * An iOS XCTest, via an .xctestrun file.
   * </pre>
   *
   * <code>.google.devtools.testing.v1.IosXcTest ios_xc_test = 13;</code>
   * @return The iosXcTest.
   */
  com.google.devtools.testing.v1.IosXcTest getIosXcTest();
  /**
   * <pre>
   * An iOS XCTest, via an .xctestrun file.
   * </pre>
   *
   * <code>.google.devtools.testing.v1.IosXcTest ios_xc_test = 13;</code>
   */
  com.google.devtools.testing.v1.IosXcTestOrBuilder getIosXcTestOrBuilder();

  /**
   * <pre>
   * An iOS application with a test loop.
   * </pre>
   *
   * <code>.google.devtools.testing.v1.IosTestLoop ios_test_loop = 15;</code>
   * @return Whether the iosTestLoop field is set.
   */
  boolean hasIosTestLoop();
  /**
   * <pre>
   * An iOS application with a test loop.
   * </pre>
   *
   * <code>.google.devtools.testing.v1.IosTestLoop ios_test_loop = 15;</code>
   * @return The iosTestLoop.
   */
  com.google.devtools.testing.v1.IosTestLoop getIosTestLoop();
  /**
   * <pre>
   * An iOS application with a test loop.
   * </pre>
   *
   * <code>.google.devtools.testing.v1.IosTestLoop ios_test_loop = 15;</code>
   */
  com.google.devtools.testing.v1.IosTestLoopOrBuilder getIosTestLoopOrBuilder();

  /**
   * <pre>
   * Disables video recording. May reduce test latency.
   * </pre>
   *
   * <code>bool disable_video_recording = 10;</code>
   * @return The disableVideoRecording.
   */
  boolean getDisableVideoRecording();

  /**
   * <pre>
   * Disables performance metrics recording. May reduce test latency.
   * </pre>
   *
   * <code>bool disable_performance_metrics = 11;</code>
   * @return The disablePerformanceMetrics.
   */
  boolean getDisablePerformanceMetrics();

  public com.google.devtools.testing.v1.TestSpecification.SetupCase getSetupCase();

  public com.google.devtools.testing.v1.TestSpecification.TestCase getTestCase();
}
