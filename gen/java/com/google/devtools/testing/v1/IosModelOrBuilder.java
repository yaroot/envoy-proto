// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: google/devtools/testing/v1/test_environment_discovery.proto

package com.google.devtools.testing.v1;

public interface IosModelOrBuilder extends
    // @@protoc_insertion_point(interface_extends:google.devtools.testing.v1.IosModel)
    com.google.protobuf.MessageOrBuilder {

  /**
   * <pre>
   * The unique opaque id for this model.
   * Use this for invoking the TestExecutionService.
   * </pre>
   *
   * <code>string id = 1;</code>
   * @return The id.
   */
  java.lang.String getId();
  /**
   * <pre>
   * The unique opaque id for this model.
   * Use this for invoking the TestExecutionService.
   * </pre>
   *
   * <code>string id = 1;</code>
   * @return The bytes for id.
   */
  com.google.protobuf.ByteString
      getIdBytes();

  /**
   * <pre>
   * The human-readable name for this device model.
   * Examples: "iPhone 4s", "iPad Mini 2".
   * </pre>
   *
   * <code>string name = 2;</code>
   * @return The name.
   */
  java.lang.String getName();
  /**
   * <pre>
   * The human-readable name for this device model.
   * Examples: "iPhone 4s", "iPad Mini 2".
   * </pre>
   *
   * <code>string name = 2;</code>
   * @return The bytes for name.
   */
  com.google.protobuf.ByteString
      getNameBytes();

  /**
   * <pre>
   * The set of iOS major software versions this device supports.
   * </pre>
   *
   * <code>repeated string supported_version_ids = 3;</code>
   * @return A list containing the supportedVersionIds.
   */
  java.util.List<java.lang.String>
      getSupportedVersionIdsList();
  /**
   * <pre>
   * The set of iOS major software versions this device supports.
   * </pre>
   *
   * <code>repeated string supported_version_ids = 3;</code>
   * @return The count of supportedVersionIds.
   */
  int getSupportedVersionIdsCount();
  /**
   * <pre>
   * The set of iOS major software versions this device supports.
   * </pre>
   *
   * <code>repeated string supported_version_ids = 3;</code>
   * @param index The index of the element to return.
   * @return The supportedVersionIds at the given index.
   */
  java.lang.String getSupportedVersionIds(int index);
  /**
   * <pre>
   * The set of iOS major software versions this device supports.
   * </pre>
   *
   * <code>repeated string supported_version_ids = 3;</code>
   * @param index The index of the value to return.
   * @return The bytes of the supportedVersionIds at the given index.
   */
  com.google.protobuf.ByteString
      getSupportedVersionIdsBytes(int index);

  /**
   * <pre>
   * Tags for this dimension.
   * Examples: "default", "preview", "deprecated".
   * </pre>
   *
   * <code>repeated string tags = 4;</code>
   * @return A list containing the tags.
   */
  java.util.List<java.lang.String>
      getTagsList();
  /**
   * <pre>
   * Tags for this dimension.
   * Examples: "default", "preview", "deprecated".
   * </pre>
   *
   * <code>repeated string tags = 4;</code>
   * @return The count of tags.
   */
  int getTagsCount();
  /**
   * <pre>
   * Tags for this dimension.
   * Examples: "default", "preview", "deprecated".
   * </pre>
   *
   * <code>repeated string tags = 4;</code>
   * @param index The index of the element to return.
   * @return The tags at the given index.
   */
  java.lang.String getTags(int index);
  /**
   * <pre>
   * Tags for this dimension.
   * Examples: "default", "preview", "deprecated".
   * </pre>
   *
   * <code>repeated string tags = 4;</code>
   * @param index The index of the value to return.
   * @return The bytes of the tags at the given index.
   */
  com.google.protobuf.ByteString
      getTagsBytes(int index);

  /**
   * <pre>
   * Device capabilities.
   * Copied from
   * https://developer.apple.com/library/archive/documentation/DeviceInformation/Reference/iOSDeviceCompatibility/DeviceCompatibilityMatrix/DeviceCompatibilityMatrix.html
   * </pre>
   *
   * <code>repeated string device_capabilities = 5;</code>
   * @return A list containing the deviceCapabilities.
   */
  java.util.List<java.lang.String>
      getDeviceCapabilitiesList();
  /**
   * <pre>
   * Device capabilities.
   * Copied from
   * https://developer.apple.com/library/archive/documentation/DeviceInformation/Reference/iOSDeviceCompatibility/DeviceCompatibilityMatrix/DeviceCompatibilityMatrix.html
   * </pre>
   *
   * <code>repeated string device_capabilities = 5;</code>
   * @return The count of deviceCapabilities.
   */
  int getDeviceCapabilitiesCount();
  /**
   * <pre>
   * Device capabilities.
   * Copied from
   * https://developer.apple.com/library/archive/documentation/DeviceInformation/Reference/iOSDeviceCompatibility/DeviceCompatibilityMatrix/DeviceCompatibilityMatrix.html
   * </pre>
   *
   * <code>repeated string device_capabilities = 5;</code>
   * @param index The index of the element to return.
   * @return The deviceCapabilities at the given index.
   */
  java.lang.String getDeviceCapabilities(int index);
  /**
   * <pre>
   * Device capabilities.
   * Copied from
   * https://developer.apple.com/library/archive/documentation/DeviceInformation/Reference/iOSDeviceCompatibility/DeviceCompatibilityMatrix/DeviceCompatibilityMatrix.html
   * </pre>
   *
   * <code>repeated string device_capabilities = 5;</code>
   * @param index The index of the value to return.
   * @return The bytes of the deviceCapabilities at the given index.
   */
  com.google.protobuf.ByteString
      getDeviceCapabilitiesBytes(int index);

  /**
   * <pre>
   * Screen size in the horizontal (X) dimension measured in pixels.
   * </pre>
   *
   * <code>int32 screen_x = 7;</code>
   * @return The screenX.
   */
  int getScreenX();

  /**
   * <pre>
   * Screen size in the vertical (Y) dimension measured in pixels.
   * </pre>
   *
   * <code>int32 screen_y = 8;</code>
   * @return The screenY.
   */
  int getScreenY();

  /**
   * <pre>
   * Screen density in DPI.
   * </pre>
   *
   * <code>int32 screen_density = 9;</code>
   * @return The screenDensity.
   */
  int getScreenDensity();

  /**
   * <pre>
   * Whether this device is a phone, tablet, wearable, etc.
   * </pre>
   *
   * <code>.google.devtools.testing.v1.DeviceFormFactor form_factor = 6;</code>
   * @return The enum numeric value on the wire for formFactor.
   */
  int getFormFactorValue();
  /**
   * <pre>
   * Whether this device is a phone, tablet, wearable, etc.
   * </pre>
   *
   * <code>.google.devtools.testing.v1.DeviceFormFactor form_factor = 6;</code>
   * @return The formFactor.
   */
  com.google.devtools.testing.v1.DeviceFormFactor getFormFactor();
}
