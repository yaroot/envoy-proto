// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: google/devtools/testing/v1/test_environment_discovery.proto

package com.google.devtools.testing.v1;

public interface TestEnvironmentCatalogOrBuilder extends
    // @@protoc_insertion_point(interface_extends:google.devtools.testing.v1.TestEnvironmentCatalog)
    com.google.protobuf.MessageOrBuilder {

  /**
   * <pre>
   * Supported Android devices.
   * </pre>
   *
   * <code>.google.devtools.testing.v1.AndroidDeviceCatalog android_device_catalog = 1;</code>
   * @return Whether the androidDeviceCatalog field is set.
   */
  boolean hasAndroidDeviceCatalog();
  /**
   * <pre>
   * Supported Android devices.
   * </pre>
   *
   * <code>.google.devtools.testing.v1.AndroidDeviceCatalog android_device_catalog = 1;</code>
   * @return The androidDeviceCatalog.
   */
  com.google.devtools.testing.v1.AndroidDeviceCatalog getAndroidDeviceCatalog();
  /**
   * <pre>
   * Supported Android devices.
   * </pre>
   *
   * <code>.google.devtools.testing.v1.AndroidDeviceCatalog android_device_catalog = 1;</code>
   */
  com.google.devtools.testing.v1.AndroidDeviceCatalogOrBuilder getAndroidDeviceCatalogOrBuilder();

  /**
   * <pre>
   * Supported iOS devices.
   * </pre>
   *
   * <code>.google.devtools.testing.v1.IosDeviceCatalog ios_device_catalog = 3;</code>
   * @return Whether the iosDeviceCatalog field is set.
   */
  boolean hasIosDeviceCatalog();
  /**
   * <pre>
   * Supported iOS devices.
   * </pre>
   *
   * <code>.google.devtools.testing.v1.IosDeviceCatalog ios_device_catalog = 3;</code>
   * @return The iosDeviceCatalog.
   */
  com.google.devtools.testing.v1.IosDeviceCatalog getIosDeviceCatalog();
  /**
   * <pre>
   * Supported iOS devices.
   * </pre>
   *
   * <code>.google.devtools.testing.v1.IosDeviceCatalog ios_device_catalog = 3;</code>
   */
  com.google.devtools.testing.v1.IosDeviceCatalogOrBuilder getIosDeviceCatalogOrBuilder();

  /**
   * <pre>
   * Supported network configurations.
   * </pre>
   *
   * <code>.google.devtools.testing.v1.NetworkConfigurationCatalog network_configuration_catalog = 4;</code>
   * @return Whether the networkConfigurationCatalog field is set.
   */
  boolean hasNetworkConfigurationCatalog();
  /**
   * <pre>
   * Supported network configurations.
   * </pre>
   *
   * <code>.google.devtools.testing.v1.NetworkConfigurationCatalog network_configuration_catalog = 4;</code>
   * @return The networkConfigurationCatalog.
   */
  com.google.devtools.testing.v1.NetworkConfigurationCatalog getNetworkConfigurationCatalog();
  /**
   * <pre>
   * Supported network configurations.
   * </pre>
   *
   * <code>.google.devtools.testing.v1.NetworkConfigurationCatalog network_configuration_catalog = 4;</code>
   */
  com.google.devtools.testing.v1.NetworkConfigurationCatalogOrBuilder getNetworkConfigurationCatalogOrBuilder();

  /**
   * <pre>
   * The software test environment provided by TestExecutionService.
   * </pre>
   *
   * <code>.google.devtools.testing.v1.ProvidedSoftwareCatalog software_catalog = 5;</code>
   * @return Whether the softwareCatalog field is set.
   */
  boolean hasSoftwareCatalog();
  /**
   * <pre>
   * The software test environment provided by TestExecutionService.
   * </pre>
   *
   * <code>.google.devtools.testing.v1.ProvidedSoftwareCatalog software_catalog = 5;</code>
   * @return The softwareCatalog.
   */
  com.google.devtools.testing.v1.ProvidedSoftwareCatalog getSoftwareCatalog();
  /**
   * <pre>
   * The software test environment provided by TestExecutionService.
   * </pre>
   *
   * <code>.google.devtools.testing.v1.ProvidedSoftwareCatalog software_catalog = 5;</code>
   */
  com.google.devtools.testing.v1.ProvidedSoftwareCatalogOrBuilder getSoftwareCatalogOrBuilder();

  /**
   * <pre>
   * The IP blocks used by devices in the test environment.
   * </pre>
   *
   * <code>.google.devtools.testing.v1.DeviceIpBlockCatalog device_ip_block_catalog = 6;</code>
   * @return Whether the deviceIpBlockCatalog field is set.
   */
  boolean hasDeviceIpBlockCatalog();
  /**
   * <pre>
   * The IP blocks used by devices in the test environment.
   * </pre>
   *
   * <code>.google.devtools.testing.v1.DeviceIpBlockCatalog device_ip_block_catalog = 6;</code>
   * @return The deviceIpBlockCatalog.
   */
  com.google.devtools.testing.v1.DeviceIpBlockCatalog getDeviceIpBlockCatalog();
  /**
   * <pre>
   * The IP blocks used by devices in the test environment.
   * </pre>
   *
   * <code>.google.devtools.testing.v1.DeviceIpBlockCatalog device_ip_block_catalog = 6;</code>
   */
  com.google.devtools.testing.v1.DeviceIpBlockCatalogOrBuilder getDeviceIpBlockCatalogOrBuilder();

  public com.google.devtools.testing.v1.TestEnvironmentCatalog.EnvironmentCatalogCase getEnvironmentCatalogCase();
}
