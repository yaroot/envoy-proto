// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: google/devtools/testing/v1/test_execution.proto

package com.google.devtools.testing.v1;

public interface TestSetupOrBuilder extends
    // @@protoc_insertion_point(interface_extends:google.devtools.testing.v1.TestSetup)
    com.google.protobuf.MessageOrBuilder {

  /**
   * <pre>
   * List of files to push to the device before starting the test.
   * </pre>
   *
   * <code>repeated .google.devtools.testing.v1.DeviceFile files_to_push = 1;</code>
   */
  java.util.List<com.google.devtools.testing.v1.DeviceFile> 
      getFilesToPushList();
  /**
   * <pre>
   * List of files to push to the device before starting the test.
   * </pre>
   *
   * <code>repeated .google.devtools.testing.v1.DeviceFile files_to_push = 1;</code>
   */
  com.google.devtools.testing.v1.DeviceFile getFilesToPush(int index);
  /**
   * <pre>
   * List of files to push to the device before starting the test.
   * </pre>
   *
   * <code>repeated .google.devtools.testing.v1.DeviceFile files_to_push = 1;</code>
   */
  int getFilesToPushCount();
  /**
   * <pre>
   * List of files to push to the device before starting the test.
   * </pre>
   *
   * <code>repeated .google.devtools.testing.v1.DeviceFile files_to_push = 1;</code>
   */
  java.util.List<? extends com.google.devtools.testing.v1.DeviceFileOrBuilder> 
      getFilesToPushOrBuilderList();
  /**
   * <pre>
   * List of files to push to the device before starting the test.
   * </pre>
   *
   * <code>repeated .google.devtools.testing.v1.DeviceFile files_to_push = 1;</code>
   */
  com.google.devtools.testing.v1.DeviceFileOrBuilder getFilesToPushOrBuilder(
      int index);

  /**
   * <pre>
   * List of directories on the device to upload to GCS at the end of the test;
   * they must be absolute paths under /sdcard, /storage or /data/local/tmp.
   * Path names are restricted to characters a-z A-Z 0-9 _ - . + and /
   * Note: The paths /sdcard and /data will be made available and treated as
   * implicit path substitutions. E.g. if /sdcard on a particular device does
   * not map to external storage, the system will replace it with the external
   * storage path prefix for that device.
   * </pre>
   *
   * <code>repeated string directories_to_pull = 2;</code>
   * @return A list containing the directoriesToPull.
   */
  java.util.List<java.lang.String>
      getDirectoriesToPullList();
  /**
   * <pre>
   * List of directories on the device to upload to GCS at the end of the test;
   * they must be absolute paths under /sdcard, /storage or /data/local/tmp.
   * Path names are restricted to characters a-z A-Z 0-9 _ - . + and /
   * Note: The paths /sdcard and /data will be made available and treated as
   * implicit path substitutions. E.g. if /sdcard on a particular device does
   * not map to external storage, the system will replace it with the external
   * storage path prefix for that device.
   * </pre>
   *
   * <code>repeated string directories_to_pull = 2;</code>
   * @return The count of directoriesToPull.
   */
  int getDirectoriesToPullCount();
  /**
   * <pre>
   * List of directories on the device to upload to GCS at the end of the test;
   * they must be absolute paths under /sdcard, /storage or /data/local/tmp.
   * Path names are restricted to characters a-z A-Z 0-9 _ - . + and /
   * Note: The paths /sdcard and /data will be made available and treated as
   * implicit path substitutions. E.g. if /sdcard on a particular device does
   * not map to external storage, the system will replace it with the external
   * storage path prefix for that device.
   * </pre>
   *
   * <code>repeated string directories_to_pull = 2;</code>
   * @param index The index of the element to return.
   * @return The directoriesToPull at the given index.
   */
  java.lang.String getDirectoriesToPull(int index);
  /**
   * <pre>
   * List of directories on the device to upload to GCS at the end of the test;
   * they must be absolute paths under /sdcard, /storage or /data/local/tmp.
   * Path names are restricted to characters a-z A-Z 0-9 _ - . + and /
   * Note: The paths /sdcard and /data will be made available and treated as
   * implicit path substitutions. E.g. if /sdcard on a particular device does
   * not map to external storage, the system will replace it with the external
   * storage path prefix for that device.
   * </pre>
   *
   * <code>repeated string directories_to_pull = 2;</code>
   * @param index The index of the value to return.
   * @return The bytes of the directoriesToPull at the given index.
   */
  com.google.protobuf.ByteString
      getDirectoriesToPullBytes(int index);

  /**
   * <pre>
   * APKs to install in addition to those being directly tested.
   * Currently capped at 100.
   * </pre>
   *
   * <code>repeated .google.devtools.testing.v1.Apk additional_apks = 3;</code>
   */
  java.util.List<com.google.devtools.testing.v1.Apk> 
      getAdditionalApksList();
  /**
   * <pre>
   * APKs to install in addition to those being directly tested.
   * Currently capped at 100.
   * </pre>
   *
   * <code>repeated .google.devtools.testing.v1.Apk additional_apks = 3;</code>
   */
  com.google.devtools.testing.v1.Apk getAdditionalApks(int index);
  /**
   * <pre>
   * APKs to install in addition to those being directly tested.
   * Currently capped at 100.
   * </pre>
   *
   * <code>repeated .google.devtools.testing.v1.Apk additional_apks = 3;</code>
   */
  int getAdditionalApksCount();
  /**
   * <pre>
   * APKs to install in addition to those being directly tested.
   * Currently capped at 100.
   * </pre>
   *
   * <code>repeated .google.devtools.testing.v1.Apk additional_apks = 3;</code>
   */
  java.util.List<? extends com.google.devtools.testing.v1.ApkOrBuilder> 
      getAdditionalApksOrBuilderList();
  /**
   * <pre>
   * APKs to install in addition to those being directly tested.
   * Currently capped at 100.
   * </pre>
   *
   * <code>repeated .google.devtools.testing.v1.Apk additional_apks = 3;</code>
   */
  com.google.devtools.testing.v1.ApkOrBuilder getAdditionalApksOrBuilder(
      int index);

  /**
   * <pre>
   * The device will be logged in on this account for the duration of the test.
   * </pre>
   *
   * <code>.google.devtools.testing.v1.Account account = 4;</code>
   * @return Whether the account field is set.
   */
  boolean hasAccount();
  /**
   * <pre>
   * The device will be logged in on this account for the duration of the test.
   * </pre>
   *
   * <code>.google.devtools.testing.v1.Account account = 4;</code>
   * @return The account.
   */
  com.google.devtools.testing.v1.Account getAccount();
  /**
   * <pre>
   * The device will be logged in on this account for the duration of the test.
   * </pre>
   *
   * <code>.google.devtools.testing.v1.Account account = 4;</code>
   */
  com.google.devtools.testing.v1.AccountOrBuilder getAccountOrBuilder();

  /**
   * <pre>
   * The network traffic profile used for running the test.
   * Available network profiles can be queried by using the
   * NETWORK_CONFIGURATION environment type when calling
   * TestEnvironmentDiscoveryService.GetTestEnvironmentCatalog.
   * </pre>
   *
   * <code>string network_profile = 5;</code>
   * @return The networkProfile.
   */
  java.lang.String getNetworkProfile();
  /**
   * <pre>
   * The network traffic profile used for running the test.
   * Available network profiles can be queried by using the
   * NETWORK_CONFIGURATION environment type when calling
   * TestEnvironmentDiscoveryService.GetTestEnvironmentCatalog.
   * </pre>
   *
   * <code>string network_profile = 5;</code>
   * @return The bytes for networkProfile.
   */
  com.google.protobuf.ByteString
      getNetworkProfileBytes();

  /**
   * <pre>
   * Environment variables to set for the test (only applicable for
   * instrumentation tests).
   * </pre>
   *
   * <code>repeated .google.devtools.testing.v1.EnvironmentVariable environment_variables = 6;</code>
   */
  java.util.List<com.google.devtools.testing.v1.EnvironmentVariable> 
      getEnvironmentVariablesList();
  /**
   * <pre>
   * Environment variables to set for the test (only applicable for
   * instrumentation tests).
   * </pre>
   *
   * <code>repeated .google.devtools.testing.v1.EnvironmentVariable environment_variables = 6;</code>
   */
  com.google.devtools.testing.v1.EnvironmentVariable getEnvironmentVariables(int index);
  /**
   * <pre>
   * Environment variables to set for the test (only applicable for
   * instrumentation tests).
   * </pre>
   *
   * <code>repeated .google.devtools.testing.v1.EnvironmentVariable environment_variables = 6;</code>
   */
  int getEnvironmentVariablesCount();
  /**
   * <pre>
   * Environment variables to set for the test (only applicable for
   * instrumentation tests).
   * </pre>
   *
   * <code>repeated .google.devtools.testing.v1.EnvironmentVariable environment_variables = 6;</code>
   */
  java.util.List<? extends com.google.devtools.testing.v1.EnvironmentVariableOrBuilder> 
      getEnvironmentVariablesOrBuilderList();
  /**
   * <pre>
   * Environment variables to set for the test (only applicable for
   * instrumentation tests).
   * </pre>
   *
   * <code>repeated .google.devtools.testing.v1.EnvironmentVariable environment_variables = 6;</code>
   */
  com.google.devtools.testing.v1.EnvironmentVariableOrBuilder getEnvironmentVariablesOrBuilder(
      int index);

  /**
   * <pre>
   * Systrace configuration for the run.
   * If set a systrace will be taken, starting on test start and lasting for the
   * configured duration. The systrace file thus obtained is put in the results
   * bucket together with the other artifacts from the run.
   * </pre>
   *
   * <code>.google.devtools.testing.v1.SystraceSetup systrace = 9;</code>
   * @return Whether the systrace field is set.
   */
  boolean hasSystrace();
  /**
   * <pre>
   * Systrace configuration for the run.
   * If set a systrace will be taken, starting on test start and lasting for the
   * configured duration. The systrace file thus obtained is put in the results
   * bucket together with the other artifacts from the run.
   * </pre>
   *
   * <code>.google.devtools.testing.v1.SystraceSetup systrace = 9;</code>
   * @return The systrace.
   */
  com.google.devtools.testing.v1.SystraceSetup getSystrace();
  /**
   * <pre>
   * Systrace configuration for the run.
   * If set a systrace will be taken, starting on test start and lasting for the
   * configured duration. The systrace file thus obtained is put in the results
   * bucket together with the other artifacts from the run.
   * </pre>
   *
   * <code>.google.devtools.testing.v1.SystraceSetup systrace = 9;</code>
   */
  com.google.devtools.testing.v1.SystraceSetupOrBuilder getSystraceOrBuilder();

  /**
   * <pre>
   * Whether to prevent all runtime permissions to be granted at app install
   * </pre>
   *
   * <code>bool dont_autogrant_permissions = 23;</code>
   * @return The dontAutograntPermissions.
   */
  boolean getDontAutograntPermissions();
}
