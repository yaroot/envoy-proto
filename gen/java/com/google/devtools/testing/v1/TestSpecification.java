// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: google/devtools/testing/v1/test_execution.proto

package com.google.devtools.testing.v1;

/**
 * <pre>
 * A description of how to run the test.
 * </pre>
 *
 * Protobuf type {@code google.devtools.testing.v1.TestSpecification}
 */
public final class TestSpecification extends
    com.google.protobuf.GeneratedMessageV3 implements
    // @@protoc_insertion_point(message_implements:google.devtools.testing.v1.TestSpecification)
    TestSpecificationOrBuilder {
private static final long serialVersionUID = 0L;
  // Use TestSpecification.newBuilder() to construct.
  private TestSpecification(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
    super(builder);
  }
  private TestSpecification() {
  }

  @java.lang.Override
  @SuppressWarnings({"unused"})
  protected java.lang.Object newInstance(
      UnusedPrivateParameter unused) {
    return new TestSpecification();
  }

  @java.lang.Override
  public final com.google.protobuf.UnknownFieldSet
  getUnknownFields() {
    return this.unknownFields;
  }
  private TestSpecification(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    this();
    if (extensionRegistry == null) {
      throw new java.lang.NullPointerException();
    }
    com.google.protobuf.UnknownFieldSet.Builder unknownFields =
        com.google.protobuf.UnknownFieldSet.newBuilder();
    try {
      boolean done = false;
      while (!done) {
        int tag = input.readTag();
        switch (tag) {
          case 0:
            done = true;
            break;
          case 10: {
            com.google.protobuf.Duration.Builder subBuilder = null;
            if (testTimeout_ != null) {
              subBuilder = testTimeout_.toBuilder();
            }
            testTimeout_ = input.readMessage(com.google.protobuf.Duration.parser(), extensionRegistry);
            if (subBuilder != null) {
              subBuilder.mergeFrom(testTimeout_);
              testTimeout_ = subBuilder.buildPartial();
            }

            break;
          }
          case 18: {
            com.google.devtools.testing.v1.AndroidInstrumentationTest.Builder subBuilder = null;
            if (testCase_ == 2) {
              subBuilder = ((com.google.devtools.testing.v1.AndroidInstrumentationTest) test_).toBuilder();
            }
            test_ =
                input.readMessage(com.google.devtools.testing.v1.AndroidInstrumentationTest.parser(), extensionRegistry);
            if (subBuilder != null) {
              subBuilder.mergeFrom((com.google.devtools.testing.v1.AndroidInstrumentationTest) test_);
              test_ = subBuilder.buildPartial();
            }
            testCase_ = 2;
            break;
          }
          case 26: {
            com.google.devtools.testing.v1.AndroidRoboTest.Builder subBuilder = null;
            if (testCase_ == 3) {
              subBuilder = ((com.google.devtools.testing.v1.AndroidRoboTest) test_).toBuilder();
            }
            test_ =
                input.readMessage(com.google.devtools.testing.v1.AndroidRoboTest.parser(), extensionRegistry);
            if (subBuilder != null) {
              subBuilder.mergeFrom((com.google.devtools.testing.v1.AndroidRoboTest) test_);
              test_ = subBuilder.buildPartial();
            }
            testCase_ = 3;
            break;
          }
          case 50: {
            com.google.devtools.testing.v1.TestSetup.Builder subBuilder = null;
            if (setupCase_ == 6) {
              subBuilder = ((com.google.devtools.testing.v1.TestSetup) setup_).toBuilder();
            }
            setup_ =
                input.readMessage(com.google.devtools.testing.v1.TestSetup.parser(), extensionRegistry);
            if (subBuilder != null) {
              subBuilder.mergeFrom((com.google.devtools.testing.v1.TestSetup) setup_);
              setup_ = subBuilder.buildPartial();
            }
            setupCase_ = 6;
            break;
          }
          case 74: {
            com.google.devtools.testing.v1.AndroidTestLoop.Builder subBuilder = null;
            if (testCase_ == 9) {
              subBuilder = ((com.google.devtools.testing.v1.AndroidTestLoop) test_).toBuilder();
            }
            test_ =
                input.readMessage(com.google.devtools.testing.v1.AndroidTestLoop.parser(), extensionRegistry);
            if (subBuilder != null) {
              subBuilder.mergeFrom((com.google.devtools.testing.v1.AndroidTestLoop) test_);
              test_ = subBuilder.buildPartial();
            }
            testCase_ = 9;
            break;
          }
          case 80: {

            disableVideoRecording_ = input.readBool();
            break;
          }
          case 88: {

            disablePerformanceMetrics_ = input.readBool();
            break;
          }
          case 106: {
            com.google.devtools.testing.v1.IosXcTest.Builder subBuilder = null;
            if (testCase_ == 13) {
              subBuilder = ((com.google.devtools.testing.v1.IosXcTest) test_).toBuilder();
            }
            test_ =
                input.readMessage(com.google.devtools.testing.v1.IosXcTest.parser(), extensionRegistry);
            if (subBuilder != null) {
              subBuilder.mergeFrom((com.google.devtools.testing.v1.IosXcTest) test_);
              test_ = subBuilder.buildPartial();
            }
            testCase_ = 13;
            break;
          }
          case 114: {
            com.google.devtools.testing.v1.IosTestSetup.Builder subBuilder = null;
            if (setupCase_ == 14) {
              subBuilder = ((com.google.devtools.testing.v1.IosTestSetup) setup_).toBuilder();
            }
            setup_ =
                input.readMessage(com.google.devtools.testing.v1.IosTestSetup.parser(), extensionRegistry);
            if (subBuilder != null) {
              subBuilder.mergeFrom((com.google.devtools.testing.v1.IosTestSetup) setup_);
              setup_ = subBuilder.buildPartial();
            }
            setupCase_ = 14;
            break;
          }
          case 122: {
            com.google.devtools.testing.v1.IosTestLoop.Builder subBuilder = null;
            if (testCase_ == 15) {
              subBuilder = ((com.google.devtools.testing.v1.IosTestLoop) test_).toBuilder();
            }
            test_ =
                input.readMessage(com.google.devtools.testing.v1.IosTestLoop.parser(), extensionRegistry);
            if (subBuilder != null) {
              subBuilder.mergeFrom((com.google.devtools.testing.v1.IosTestLoop) test_);
              test_ = subBuilder.buildPartial();
            }
            testCase_ = 15;
            break;
          }
          default: {
            if (!parseUnknownField(
                input, unknownFields, extensionRegistry, tag)) {
              done = true;
            }
            break;
          }
        }
      }
    } catch (com.google.protobuf.InvalidProtocolBufferException e) {
      throw e.setUnfinishedMessage(this);
    } catch (com.google.protobuf.UninitializedMessageException e) {
      throw e.asInvalidProtocolBufferException().setUnfinishedMessage(this);
    } catch (java.io.IOException e) {
      throw new com.google.protobuf.InvalidProtocolBufferException(
          e).setUnfinishedMessage(this);
    } finally {
      this.unknownFields = unknownFields.build();
      makeExtensionsImmutable();
    }
  }
  public static final com.google.protobuf.Descriptors.Descriptor
      getDescriptor() {
    return com.google.devtools.testing.v1.TestExecutionProto.internal_static_google_devtools_testing_v1_TestSpecification_descriptor;
  }

  @java.lang.Override
  protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internalGetFieldAccessorTable() {
    return com.google.devtools.testing.v1.TestExecutionProto.internal_static_google_devtools_testing_v1_TestSpecification_fieldAccessorTable
        .ensureFieldAccessorsInitialized(
            com.google.devtools.testing.v1.TestSpecification.class, com.google.devtools.testing.v1.TestSpecification.Builder.class);
  }

  private int setupCase_ = 0;
  private java.lang.Object setup_;
  public enum SetupCase
      implements com.google.protobuf.Internal.EnumLite,
          com.google.protobuf.AbstractMessage.InternalOneOfEnum {
    TEST_SETUP(6),
    IOS_TEST_SETUP(14),
    SETUP_NOT_SET(0);
    private final int value;
    private SetupCase(int value) {
      this.value = value;
    }
    /**
     * @param value The number of the enum to look for.
     * @return The enum associated with the given number.
     * @deprecated Use {@link #forNumber(int)} instead.
     */
    @java.lang.Deprecated
    public static SetupCase valueOf(int value) {
      return forNumber(value);
    }

    public static SetupCase forNumber(int value) {
      switch (value) {
        case 6: return TEST_SETUP;
        case 14: return IOS_TEST_SETUP;
        case 0: return SETUP_NOT_SET;
        default: return null;
      }
    }
    public int getNumber() {
      return this.value;
    }
  };

  public SetupCase
  getSetupCase() {
    return SetupCase.forNumber(
        setupCase_);
  }

  private int testCase_ = 0;
  private java.lang.Object test_;
  public enum TestCase
      implements com.google.protobuf.Internal.EnumLite,
          com.google.protobuf.AbstractMessage.InternalOneOfEnum {
    ANDROID_INSTRUMENTATION_TEST(2),
    ANDROID_ROBO_TEST(3),
    ANDROID_TEST_LOOP(9),
    IOS_XC_TEST(13),
    IOS_TEST_LOOP(15),
    TEST_NOT_SET(0);
    private final int value;
    private TestCase(int value) {
      this.value = value;
    }
    /**
     * @param value The number of the enum to look for.
     * @return The enum associated with the given number.
     * @deprecated Use {@link #forNumber(int)} instead.
     */
    @java.lang.Deprecated
    public static TestCase valueOf(int value) {
      return forNumber(value);
    }

    public static TestCase forNumber(int value) {
      switch (value) {
        case 2: return ANDROID_INSTRUMENTATION_TEST;
        case 3: return ANDROID_ROBO_TEST;
        case 9: return ANDROID_TEST_LOOP;
        case 13: return IOS_XC_TEST;
        case 15: return IOS_TEST_LOOP;
        case 0: return TEST_NOT_SET;
        default: return null;
      }
    }
    public int getNumber() {
      return this.value;
    }
  };

  public TestCase
  getTestCase() {
    return TestCase.forNumber(
        testCase_);
  }

  public static final int TEST_TIMEOUT_FIELD_NUMBER = 1;
  private com.google.protobuf.Duration testTimeout_;
  /**
   * <pre>
   * Max time a test execution is allowed to run before it is
   * automatically cancelled.
   * The default value is 5 min.
   * </pre>
   *
   * <code>.google.protobuf.Duration test_timeout = 1;</code>
   * @return Whether the testTimeout field is set.
   */
  @java.lang.Override
  public boolean hasTestTimeout() {
    return testTimeout_ != null;
  }
  /**
   * <pre>
   * Max time a test execution is allowed to run before it is
   * automatically cancelled.
   * The default value is 5 min.
   * </pre>
   *
   * <code>.google.protobuf.Duration test_timeout = 1;</code>
   * @return The testTimeout.
   */
  @java.lang.Override
  public com.google.protobuf.Duration getTestTimeout() {
    return testTimeout_ == null ? com.google.protobuf.Duration.getDefaultInstance() : testTimeout_;
  }
  /**
   * <pre>
   * Max time a test execution is allowed to run before it is
   * automatically cancelled.
   * The default value is 5 min.
   * </pre>
   *
   * <code>.google.protobuf.Duration test_timeout = 1;</code>
   */
  @java.lang.Override
  public com.google.protobuf.DurationOrBuilder getTestTimeoutOrBuilder() {
    return getTestTimeout();
  }

  public static final int TEST_SETUP_FIELD_NUMBER = 6;
  /**
   * <pre>
   * Test setup requirements for Android e.g. files to install, bootstrap
   * scripts.
   * </pre>
   *
   * <code>.google.devtools.testing.v1.TestSetup test_setup = 6;</code>
   * @return Whether the testSetup field is set.
   */
  @java.lang.Override
  public boolean hasTestSetup() {
    return setupCase_ == 6;
  }
  /**
   * <pre>
   * Test setup requirements for Android e.g. files to install, bootstrap
   * scripts.
   * </pre>
   *
   * <code>.google.devtools.testing.v1.TestSetup test_setup = 6;</code>
   * @return The testSetup.
   */
  @java.lang.Override
  public com.google.devtools.testing.v1.TestSetup getTestSetup() {
    if (setupCase_ == 6) {
       return (com.google.devtools.testing.v1.TestSetup) setup_;
    }
    return com.google.devtools.testing.v1.TestSetup.getDefaultInstance();
  }
  /**
   * <pre>
   * Test setup requirements for Android e.g. files to install, bootstrap
   * scripts.
   * </pre>
   *
   * <code>.google.devtools.testing.v1.TestSetup test_setup = 6;</code>
   */
  @java.lang.Override
  public com.google.devtools.testing.v1.TestSetupOrBuilder getTestSetupOrBuilder() {
    if (setupCase_ == 6) {
       return (com.google.devtools.testing.v1.TestSetup) setup_;
    }
    return com.google.devtools.testing.v1.TestSetup.getDefaultInstance();
  }

  public static final int IOS_TEST_SETUP_FIELD_NUMBER = 14;
  /**
   * <pre>
   * Test setup requirements for iOS.
   * </pre>
   *
   * <code>.google.devtools.testing.v1.IosTestSetup ios_test_setup = 14;</code>
   * @return Whether the iosTestSetup field is set.
   */
  @java.lang.Override
  public boolean hasIosTestSetup() {
    return setupCase_ == 14;
  }
  /**
   * <pre>
   * Test setup requirements for iOS.
   * </pre>
   *
   * <code>.google.devtools.testing.v1.IosTestSetup ios_test_setup = 14;</code>
   * @return The iosTestSetup.
   */
  @java.lang.Override
  public com.google.devtools.testing.v1.IosTestSetup getIosTestSetup() {
    if (setupCase_ == 14) {
       return (com.google.devtools.testing.v1.IosTestSetup) setup_;
    }
    return com.google.devtools.testing.v1.IosTestSetup.getDefaultInstance();
  }
  /**
   * <pre>
   * Test setup requirements for iOS.
   * </pre>
   *
   * <code>.google.devtools.testing.v1.IosTestSetup ios_test_setup = 14;</code>
   */
  @java.lang.Override
  public com.google.devtools.testing.v1.IosTestSetupOrBuilder getIosTestSetupOrBuilder() {
    if (setupCase_ == 14) {
       return (com.google.devtools.testing.v1.IosTestSetup) setup_;
    }
    return com.google.devtools.testing.v1.IosTestSetup.getDefaultInstance();
  }

  public static final int ANDROID_INSTRUMENTATION_TEST_FIELD_NUMBER = 2;
  /**
   * <pre>
   * An Android instrumentation test.
   * </pre>
   *
   * <code>.google.devtools.testing.v1.AndroidInstrumentationTest android_instrumentation_test = 2;</code>
   * @return Whether the androidInstrumentationTest field is set.
   */
  @java.lang.Override
  public boolean hasAndroidInstrumentationTest() {
    return testCase_ == 2;
  }
  /**
   * <pre>
   * An Android instrumentation test.
   * </pre>
   *
   * <code>.google.devtools.testing.v1.AndroidInstrumentationTest android_instrumentation_test = 2;</code>
   * @return The androidInstrumentationTest.
   */
  @java.lang.Override
  public com.google.devtools.testing.v1.AndroidInstrumentationTest getAndroidInstrumentationTest() {
    if (testCase_ == 2) {
       return (com.google.devtools.testing.v1.AndroidInstrumentationTest) test_;
    }
    return com.google.devtools.testing.v1.AndroidInstrumentationTest.getDefaultInstance();
  }
  /**
   * <pre>
   * An Android instrumentation test.
   * </pre>
   *
   * <code>.google.devtools.testing.v1.AndroidInstrumentationTest android_instrumentation_test = 2;</code>
   */
  @java.lang.Override
  public com.google.devtools.testing.v1.AndroidInstrumentationTestOrBuilder getAndroidInstrumentationTestOrBuilder() {
    if (testCase_ == 2) {
       return (com.google.devtools.testing.v1.AndroidInstrumentationTest) test_;
    }
    return com.google.devtools.testing.v1.AndroidInstrumentationTest.getDefaultInstance();
  }

  public static final int ANDROID_ROBO_TEST_FIELD_NUMBER = 3;
  /**
   * <pre>
   * An Android robo test.
   * </pre>
   *
   * <code>.google.devtools.testing.v1.AndroidRoboTest android_robo_test = 3;</code>
   * @return Whether the androidRoboTest field is set.
   */
  @java.lang.Override
  public boolean hasAndroidRoboTest() {
    return testCase_ == 3;
  }
  /**
   * <pre>
   * An Android robo test.
   * </pre>
   *
   * <code>.google.devtools.testing.v1.AndroidRoboTest android_robo_test = 3;</code>
   * @return The androidRoboTest.
   */
  @java.lang.Override
  public com.google.devtools.testing.v1.AndroidRoboTest getAndroidRoboTest() {
    if (testCase_ == 3) {
       return (com.google.devtools.testing.v1.AndroidRoboTest) test_;
    }
    return com.google.devtools.testing.v1.AndroidRoboTest.getDefaultInstance();
  }
  /**
   * <pre>
   * An Android robo test.
   * </pre>
   *
   * <code>.google.devtools.testing.v1.AndroidRoboTest android_robo_test = 3;</code>
   */
  @java.lang.Override
  public com.google.devtools.testing.v1.AndroidRoboTestOrBuilder getAndroidRoboTestOrBuilder() {
    if (testCase_ == 3) {
       return (com.google.devtools.testing.v1.AndroidRoboTest) test_;
    }
    return com.google.devtools.testing.v1.AndroidRoboTest.getDefaultInstance();
  }

  public static final int ANDROID_TEST_LOOP_FIELD_NUMBER = 9;
  /**
   * <pre>
   * An Android Application with a Test Loop.
   * </pre>
   *
   * <code>.google.devtools.testing.v1.AndroidTestLoop android_test_loop = 9;</code>
   * @return Whether the androidTestLoop field is set.
   */
  @java.lang.Override
  public boolean hasAndroidTestLoop() {
    return testCase_ == 9;
  }
  /**
   * <pre>
   * An Android Application with a Test Loop.
   * </pre>
   *
   * <code>.google.devtools.testing.v1.AndroidTestLoop android_test_loop = 9;</code>
   * @return The androidTestLoop.
   */
  @java.lang.Override
  public com.google.devtools.testing.v1.AndroidTestLoop getAndroidTestLoop() {
    if (testCase_ == 9) {
       return (com.google.devtools.testing.v1.AndroidTestLoop) test_;
    }
    return com.google.devtools.testing.v1.AndroidTestLoop.getDefaultInstance();
  }
  /**
   * <pre>
   * An Android Application with a Test Loop.
   * </pre>
   *
   * <code>.google.devtools.testing.v1.AndroidTestLoop android_test_loop = 9;</code>
   */
  @java.lang.Override
  public com.google.devtools.testing.v1.AndroidTestLoopOrBuilder getAndroidTestLoopOrBuilder() {
    if (testCase_ == 9) {
       return (com.google.devtools.testing.v1.AndroidTestLoop) test_;
    }
    return com.google.devtools.testing.v1.AndroidTestLoop.getDefaultInstance();
  }

  public static final int IOS_XC_TEST_FIELD_NUMBER = 13;
  /**
   * <pre>
   * An iOS XCTest, via an .xctestrun file.
   * </pre>
   *
   * <code>.google.devtools.testing.v1.IosXcTest ios_xc_test = 13;</code>
   * @return Whether the iosXcTest field is set.
   */
  @java.lang.Override
  public boolean hasIosXcTest() {
    return testCase_ == 13;
  }
  /**
   * <pre>
   * An iOS XCTest, via an .xctestrun file.
   * </pre>
   *
   * <code>.google.devtools.testing.v1.IosXcTest ios_xc_test = 13;</code>
   * @return The iosXcTest.
   */
  @java.lang.Override
  public com.google.devtools.testing.v1.IosXcTest getIosXcTest() {
    if (testCase_ == 13) {
       return (com.google.devtools.testing.v1.IosXcTest) test_;
    }
    return com.google.devtools.testing.v1.IosXcTest.getDefaultInstance();
  }
  /**
   * <pre>
   * An iOS XCTest, via an .xctestrun file.
   * </pre>
   *
   * <code>.google.devtools.testing.v1.IosXcTest ios_xc_test = 13;</code>
   */
  @java.lang.Override
  public com.google.devtools.testing.v1.IosXcTestOrBuilder getIosXcTestOrBuilder() {
    if (testCase_ == 13) {
       return (com.google.devtools.testing.v1.IosXcTest) test_;
    }
    return com.google.devtools.testing.v1.IosXcTest.getDefaultInstance();
  }

  public static final int IOS_TEST_LOOP_FIELD_NUMBER = 15;
  /**
   * <pre>
   * An iOS application with a test loop.
   * </pre>
   *
   * <code>.google.devtools.testing.v1.IosTestLoop ios_test_loop = 15;</code>
   * @return Whether the iosTestLoop field is set.
   */
  @java.lang.Override
  public boolean hasIosTestLoop() {
    return testCase_ == 15;
  }
  /**
   * <pre>
   * An iOS application with a test loop.
   * </pre>
   *
   * <code>.google.devtools.testing.v1.IosTestLoop ios_test_loop = 15;</code>
   * @return The iosTestLoop.
   */
  @java.lang.Override
  public com.google.devtools.testing.v1.IosTestLoop getIosTestLoop() {
    if (testCase_ == 15) {
       return (com.google.devtools.testing.v1.IosTestLoop) test_;
    }
    return com.google.devtools.testing.v1.IosTestLoop.getDefaultInstance();
  }
  /**
   * <pre>
   * An iOS application with a test loop.
   * </pre>
   *
   * <code>.google.devtools.testing.v1.IosTestLoop ios_test_loop = 15;</code>
   */
  @java.lang.Override
  public com.google.devtools.testing.v1.IosTestLoopOrBuilder getIosTestLoopOrBuilder() {
    if (testCase_ == 15) {
       return (com.google.devtools.testing.v1.IosTestLoop) test_;
    }
    return com.google.devtools.testing.v1.IosTestLoop.getDefaultInstance();
  }

  public static final int DISABLE_VIDEO_RECORDING_FIELD_NUMBER = 10;
  private boolean disableVideoRecording_;
  /**
   * <pre>
   * Disables video recording. May reduce test latency.
   * </pre>
   *
   * <code>bool disable_video_recording = 10;</code>
   * @return The disableVideoRecording.
   */
  @java.lang.Override
  public boolean getDisableVideoRecording() {
    return disableVideoRecording_;
  }

  public static final int DISABLE_PERFORMANCE_METRICS_FIELD_NUMBER = 11;
  private boolean disablePerformanceMetrics_;
  /**
   * <pre>
   * Disables performance metrics recording. May reduce test latency.
   * </pre>
   *
   * <code>bool disable_performance_metrics = 11;</code>
   * @return The disablePerformanceMetrics.
   */
  @java.lang.Override
  public boolean getDisablePerformanceMetrics() {
    return disablePerformanceMetrics_;
  }

  private byte memoizedIsInitialized = -1;
  @java.lang.Override
  public final boolean isInitialized() {
    byte isInitialized = memoizedIsInitialized;
    if (isInitialized == 1) return true;
    if (isInitialized == 0) return false;

    memoizedIsInitialized = 1;
    return true;
  }

  @java.lang.Override
  public void writeTo(com.google.protobuf.CodedOutputStream output)
                      throws java.io.IOException {
    if (testTimeout_ != null) {
      output.writeMessage(1, getTestTimeout());
    }
    if (testCase_ == 2) {
      output.writeMessage(2, (com.google.devtools.testing.v1.AndroidInstrumentationTest) test_);
    }
    if (testCase_ == 3) {
      output.writeMessage(3, (com.google.devtools.testing.v1.AndroidRoboTest) test_);
    }
    if (setupCase_ == 6) {
      output.writeMessage(6, (com.google.devtools.testing.v1.TestSetup) setup_);
    }
    if (testCase_ == 9) {
      output.writeMessage(9, (com.google.devtools.testing.v1.AndroidTestLoop) test_);
    }
    if (disableVideoRecording_ != false) {
      output.writeBool(10, disableVideoRecording_);
    }
    if (disablePerformanceMetrics_ != false) {
      output.writeBool(11, disablePerformanceMetrics_);
    }
    if (testCase_ == 13) {
      output.writeMessage(13, (com.google.devtools.testing.v1.IosXcTest) test_);
    }
    if (setupCase_ == 14) {
      output.writeMessage(14, (com.google.devtools.testing.v1.IosTestSetup) setup_);
    }
    if (testCase_ == 15) {
      output.writeMessage(15, (com.google.devtools.testing.v1.IosTestLoop) test_);
    }
    unknownFields.writeTo(output);
  }

  @java.lang.Override
  public int getSerializedSize() {
    int size = memoizedSize;
    if (size != -1) return size;

    size = 0;
    if (testTimeout_ != null) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(1, getTestTimeout());
    }
    if (testCase_ == 2) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(2, (com.google.devtools.testing.v1.AndroidInstrumentationTest) test_);
    }
    if (testCase_ == 3) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(3, (com.google.devtools.testing.v1.AndroidRoboTest) test_);
    }
    if (setupCase_ == 6) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(6, (com.google.devtools.testing.v1.TestSetup) setup_);
    }
    if (testCase_ == 9) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(9, (com.google.devtools.testing.v1.AndroidTestLoop) test_);
    }
    if (disableVideoRecording_ != false) {
      size += com.google.protobuf.CodedOutputStream
        .computeBoolSize(10, disableVideoRecording_);
    }
    if (disablePerformanceMetrics_ != false) {
      size += com.google.protobuf.CodedOutputStream
        .computeBoolSize(11, disablePerformanceMetrics_);
    }
    if (testCase_ == 13) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(13, (com.google.devtools.testing.v1.IosXcTest) test_);
    }
    if (setupCase_ == 14) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(14, (com.google.devtools.testing.v1.IosTestSetup) setup_);
    }
    if (testCase_ == 15) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(15, (com.google.devtools.testing.v1.IosTestLoop) test_);
    }
    size += unknownFields.getSerializedSize();
    memoizedSize = size;
    return size;
  }

  @java.lang.Override
  public boolean equals(final java.lang.Object obj) {
    if (obj == this) {
     return true;
    }
    if (!(obj instanceof com.google.devtools.testing.v1.TestSpecification)) {
      return super.equals(obj);
    }
    com.google.devtools.testing.v1.TestSpecification other = (com.google.devtools.testing.v1.TestSpecification) obj;

    if (hasTestTimeout() != other.hasTestTimeout()) return false;
    if (hasTestTimeout()) {
      if (!getTestTimeout()
          .equals(other.getTestTimeout())) return false;
    }
    if (getDisableVideoRecording()
        != other.getDisableVideoRecording()) return false;
    if (getDisablePerformanceMetrics()
        != other.getDisablePerformanceMetrics()) return false;
    if (!getSetupCase().equals(other.getSetupCase())) return false;
    switch (setupCase_) {
      case 6:
        if (!getTestSetup()
            .equals(other.getTestSetup())) return false;
        break;
      case 14:
        if (!getIosTestSetup()
            .equals(other.getIosTestSetup())) return false;
        break;
      case 0:
      default:
    }
    if (!getTestCase().equals(other.getTestCase())) return false;
    switch (testCase_) {
      case 2:
        if (!getAndroidInstrumentationTest()
            .equals(other.getAndroidInstrumentationTest())) return false;
        break;
      case 3:
        if (!getAndroidRoboTest()
            .equals(other.getAndroidRoboTest())) return false;
        break;
      case 9:
        if (!getAndroidTestLoop()
            .equals(other.getAndroidTestLoop())) return false;
        break;
      case 13:
        if (!getIosXcTest()
            .equals(other.getIosXcTest())) return false;
        break;
      case 15:
        if (!getIosTestLoop()
            .equals(other.getIosTestLoop())) return false;
        break;
      case 0:
      default:
    }
    if (!unknownFields.equals(other.unknownFields)) return false;
    return true;
  }

  @java.lang.Override
  public int hashCode() {
    if (memoizedHashCode != 0) {
      return memoizedHashCode;
    }
    int hash = 41;
    hash = (19 * hash) + getDescriptor().hashCode();
    if (hasTestTimeout()) {
      hash = (37 * hash) + TEST_TIMEOUT_FIELD_NUMBER;
      hash = (53 * hash) + getTestTimeout().hashCode();
    }
    hash = (37 * hash) + DISABLE_VIDEO_RECORDING_FIELD_NUMBER;
    hash = (53 * hash) + com.google.protobuf.Internal.hashBoolean(
        getDisableVideoRecording());
    hash = (37 * hash) + DISABLE_PERFORMANCE_METRICS_FIELD_NUMBER;
    hash = (53 * hash) + com.google.protobuf.Internal.hashBoolean(
        getDisablePerformanceMetrics());
    switch (setupCase_) {
      case 6:
        hash = (37 * hash) + TEST_SETUP_FIELD_NUMBER;
        hash = (53 * hash) + getTestSetup().hashCode();
        break;
      case 14:
        hash = (37 * hash) + IOS_TEST_SETUP_FIELD_NUMBER;
        hash = (53 * hash) + getIosTestSetup().hashCode();
        break;
      case 0:
      default:
    }
    switch (testCase_) {
      case 2:
        hash = (37 * hash) + ANDROID_INSTRUMENTATION_TEST_FIELD_NUMBER;
        hash = (53 * hash) + getAndroidInstrumentationTest().hashCode();
        break;
      case 3:
        hash = (37 * hash) + ANDROID_ROBO_TEST_FIELD_NUMBER;
        hash = (53 * hash) + getAndroidRoboTest().hashCode();
        break;
      case 9:
        hash = (37 * hash) + ANDROID_TEST_LOOP_FIELD_NUMBER;
        hash = (53 * hash) + getAndroidTestLoop().hashCode();
        break;
      case 13:
        hash = (37 * hash) + IOS_XC_TEST_FIELD_NUMBER;
        hash = (53 * hash) + getIosXcTest().hashCode();
        break;
      case 15:
        hash = (37 * hash) + IOS_TEST_LOOP_FIELD_NUMBER;
        hash = (53 * hash) + getIosTestLoop().hashCode();
        break;
      case 0:
      default:
    }
    hash = (29 * hash) + unknownFields.hashCode();
    memoizedHashCode = hash;
    return hash;
  }

  public static com.google.devtools.testing.v1.TestSpecification parseFrom(
      java.nio.ByteBuffer data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static com.google.devtools.testing.v1.TestSpecification parseFrom(
      java.nio.ByteBuffer data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static com.google.devtools.testing.v1.TestSpecification parseFrom(
      com.google.protobuf.ByteString data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static com.google.devtools.testing.v1.TestSpecification parseFrom(
      com.google.protobuf.ByteString data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static com.google.devtools.testing.v1.TestSpecification parseFrom(byte[] data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static com.google.devtools.testing.v1.TestSpecification parseFrom(
      byte[] data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static com.google.devtools.testing.v1.TestSpecification parseFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input);
  }
  public static com.google.devtools.testing.v1.TestSpecification parseFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input, extensionRegistry);
  }
  public static com.google.devtools.testing.v1.TestSpecification parseDelimitedFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseDelimitedWithIOException(PARSER, input);
  }
  public static com.google.devtools.testing.v1.TestSpecification parseDelimitedFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
  }
  public static com.google.devtools.testing.v1.TestSpecification parseFrom(
      com.google.protobuf.CodedInputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input);
  }
  public static com.google.devtools.testing.v1.TestSpecification parseFrom(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input, extensionRegistry);
  }

  @java.lang.Override
  public Builder newBuilderForType() { return newBuilder(); }
  public static Builder newBuilder() {
    return DEFAULT_INSTANCE.toBuilder();
  }
  public static Builder newBuilder(com.google.devtools.testing.v1.TestSpecification prototype) {
    return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
  }
  @java.lang.Override
  public Builder toBuilder() {
    return this == DEFAULT_INSTANCE
        ? new Builder() : new Builder().mergeFrom(this);
  }

  @java.lang.Override
  protected Builder newBuilderForType(
      com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
    Builder builder = new Builder(parent);
    return builder;
  }
  /**
   * <pre>
   * A description of how to run the test.
   * </pre>
   *
   * Protobuf type {@code google.devtools.testing.v1.TestSpecification}
   */
  public static final class Builder extends
      com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
      // @@protoc_insertion_point(builder_implements:google.devtools.testing.v1.TestSpecification)
      com.google.devtools.testing.v1.TestSpecificationOrBuilder {
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.google.devtools.testing.v1.TestExecutionProto.internal_static_google_devtools_testing_v1_TestSpecification_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.google.devtools.testing.v1.TestExecutionProto.internal_static_google_devtools_testing_v1_TestSpecification_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.google.devtools.testing.v1.TestSpecification.class, com.google.devtools.testing.v1.TestSpecification.Builder.class);
    }

    // Construct using com.google.devtools.testing.v1.TestSpecification.newBuilder()
    private Builder() {
      maybeForceBuilderInitialization();
    }

    private Builder(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      super(parent);
      maybeForceBuilderInitialization();
    }
    private void maybeForceBuilderInitialization() {
      if (com.google.protobuf.GeneratedMessageV3
              .alwaysUseFieldBuilders) {
      }
    }
    @java.lang.Override
    public Builder clear() {
      super.clear();
      if (testTimeoutBuilder_ == null) {
        testTimeout_ = null;
      } else {
        testTimeout_ = null;
        testTimeoutBuilder_ = null;
      }
      disableVideoRecording_ = false;

      disablePerformanceMetrics_ = false;

      setupCase_ = 0;
      setup_ = null;
      testCase_ = 0;
      test_ = null;
      return this;
    }

    @java.lang.Override
    public com.google.protobuf.Descriptors.Descriptor
        getDescriptorForType() {
      return com.google.devtools.testing.v1.TestExecutionProto.internal_static_google_devtools_testing_v1_TestSpecification_descriptor;
    }

    @java.lang.Override
    public com.google.devtools.testing.v1.TestSpecification getDefaultInstanceForType() {
      return com.google.devtools.testing.v1.TestSpecification.getDefaultInstance();
    }

    @java.lang.Override
    public com.google.devtools.testing.v1.TestSpecification build() {
      com.google.devtools.testing.v1.TestSpecification result = buildPartial();
      if (!result.isInitialized()) {
        throw newUninitializedMessageException(result);
      }
      return result;
    }

    @java.lang.Override
    public com.google.devtools.testing.v1.TestSpecification buildPartial() {
      com.google.devtools.testing.v1.TestSpecification result = new com.google.devtools.testing.v1.TestSpecification(this);
      if (testTimeoutBuilder_ == null) {
        result.testTimeout_ = testTimeout_;
      } else {
        result.testTimeout_ = testTimeoutBuilder_.build();
      }
      if (setupCase_ == 6) {
        if (testSetupBuilder_ == null) {
          result.setup_ = setup_;
        } else {
          result.setup_ = testSetupBuilder_.build();
        }
      }
      if (setupCase_ == 14) {
        if (iosTestSetupBuilder_ == null) {
          result.setup_ = setup_;
        } else {
          result.setup_ = iosTestSetupBuilder_.build();
        }
      }
      if (testCase_ == 2) {
        if (androidInstrumentationTestBuilder_ == null) {
          result.test_ = test_;
        } else {
          result.test_ = androidInstrumentationTestBuilder_.build();
        }
      }
      if (testCase_ == 3) {
        if (androidRoboTestBuilder_ == null) {
          result.test_ = test_;
        } else {
          result.test_ = androidRoboTestBuilder_.build();
        }
      }
      if (testCase_ == 9) {
        if (androidTestLoopBuilder_ == null) {
          result.test_ = test_;
        } else {
          result.test_ = androidTestLoopBuilder_.build();
        }
      }
      if (testCase_ == 13) {
        if (iosXcTestBuilder_ == null) {
          result.test_ = test_;
        } else {
          result.test_ = iosXcTestBuilder_.build();
        }
      }
      if (testCase_ == 15) {
        if (iosTestLoopBuilder_ == null) {
          result.test_ = test_;
        } else {
          result.test_ = iosTestLoopBuilder_.build();
        }
      }
      result.disableVideoRecording_ = disableVideoRecording_;
      result.disablePerformanceMetrics_ = disablePerformanceMetrics_;
      result.setupCase_ = setupCase_;
      result.testCase_ = testCase_;
      onBuilt();
      return result;
    }

    @java.lang.Override
    public Builder clone() {
      return super.clone();
    }
    @java.lang.Override
    public Builder setField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        java.lang.Object value) {
      return super.setField(field, value);
    }
    @java.lang.Override
    public Builder clearField(
        com.google.protobuf.Descriptors.FieldDescriptor field) {
      return super.clearField(field);
    }
    @java.lang.Override
    public Builder clearOneof(
        com.google.protobuf.Descriptors.OneofDescriptor oneof) {
      return super.clearOneof(oneof);
    }
    @java.lang.Override
    public Builder setRepeatedField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        int index, java.lang.Object value) {
      return super.setRepeatedField(field, index, value);
    }
    @java.lang.Override
    public Builder addRepeatedField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        java.lang.Object value) {
      return super.addRepeatedField(field, value);
    }
    @java.lang.Override
    public Builder mergeFrom(com.google.protobuf.Message other) {
      if (other instanceof com.google.devtools.testing.v1.TestSpecification) {
        return mergeFrom((com.google.devtools.testing.v1.TestSpecification)other);
      } else {
        super.mergeFrom(other);
        return this;
      }
    }

    public Builder mergeFrom(com.google.devtools.testing.v1.TestSpecification other) {
      if (other == com.google.devtools.testing.v1.TestSpecification.getDefaultInstance()) return this;
      if (other.hasTestTimeout()) {
        mergeTestTimeout(other.getTestTimeout());
      }
      if (other.getDisableVideoRecording() != false) {
        setDisableVideoRecording(other.getDisableVideoRecording());
      }
      if (other.getDisablePerformanceMetrics() != false) {
        setDisablePerformanceMetrics(other.getDisablePerformanceMetrics());
      }
      switch (other.getSetupCase()) {
        case TEST_SETUP: {
          mergeTestSetup(other.getTestSetup());
          break;
        }
        case IOS_TEST_SETUP: {
          mergeIosTestSetup(other.getIosTestSetup());
          break;
        }
        case SETUP_NOT_SET: {
          break;
        }
      }
      switch (other.getTestCase()) {
        case ANDROID_INSTRUMENTATION_TEST: {
          mergeAndroidInstrumentationTest(other.getAndroidInstrumentationTest());
          break;
        }
        case ANDROID_ROBO_TEST: {
          mergeAndroidRoboTest(other.getAndroidRoboTest());
          break;
        }
        case ANDROID_TEST_LOOP: {
          mergeAndroidTestLoop(other.getAndroidTestLoop());
          break;
        }
        case IOS_XC_TEST: {
          mergeIosXcTest(other.getIosXcTest());
          break;
        }
        case IOS_TEST_LOOP: {
          mergeIosTestLoop(other.getIosTestLoop());
          break;
        }
        case TEST_NOT_SET: {
          break;
        }
      }
      this.mergeUnknownFields(other.unknownFields);
      onChanged();
      return this;
    }

    @java.lang.Override
    public final boolean isInitialized() {
      return true;
    }

    @java.lang.Override
    public Builder mergeFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      com.google.devtools.testing.v1.TestSpecification parsedMessage = null;
      try {
        parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        parsedMessage = (com.google.devtools.testing.v1.TestSpecification) e.getUnfinishedMessage();
        throw e.unwrapIOException();
      } finally {
        if (parsedMessage != null) {
          mergeFrom(parsedMessage);
        }
      }
      return this;
    }
    private int setupCase_ = 0;
    private java.lang.Object setup_;
    public SetupCase
        getSetupCase() {
      return SetupCase.forNumber(
          setupCase_);
    }

    public Builder clearSetup() {
      setupCase_ = 0;
      setup_ = null;
      onChanged();
      return this;
    }

    private int testCase_ = 0;
    private java.lang.Object test_;
    public TestCase
        getTestCase() {
      return TestCase.forNumber(
          testCase_);
    }

    public Builder clearTest() {
      testCase_ = 0;
      test_ = null;
      onChanged();
      return this;
    }


    private com.google.protobuf.Duration testTimeout_;
    private com.google.protobuf.SingleFieldBuilderV3<
        com.google.protobuf.Duration, com.google.protobuf.Duration.Builder, com.google.protobuf.DurationOrBuilder> testTimeoutBuilder_;
    /**
     * <pre>
     * Max time a test execution is allowed to run before it is
     * automatically cancelled.
     * The default value is 5 min.
     * </pre>
     *
     * <code>.google.protobuf.Duration test_timeout = 1;</code>
     * @return Whether the testTimeout field is set.
     */
    public boolean hasTestTimeout() {
      return testTimeoutBuilder_ != null || testTimeout_ != null;
    }
    /**
     * <pre>
     * Max time a test execution is allowed to run before it is
     * automatically cancelled.
     * The default value is 5 min.
     * </pre>
     *
     * <code>.google.protobuf.Duration test_timeout = 1;</code>
     * @return The testTimeout.
     */
    public com.google.protobuf.Duration getTestTimeout() {
      if (testTimeoutBuilder_ == null) {
        return testTimeout_ == null ? com.google.protobuf.Duration.getDefaultInstance() : testTimeout_;
      } else {
        return testTimeoutBuilder_.getMessage();
      }
    }
    /**
     * <pre>
     * Max time a test execution is allowed to run before it is
     * automatically cancelled.
     * The default value is 5 min.
     * </pre>
     *
     * <code>.google.protobuf.Duration test_timeout = 1;</code>
     */
    public Builder setTestTimeout(com.google.protobuf.Duration value) {
      if (testTimeoutBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        testTimeout_ = value;
        onChanged();
      } else {
        testTimeoutBuilder_.setMessage(value);
      }

      return this;
    }
    /**
     * <pre>
     * Max time a test execution is allowed to run before it is
     * automatically cancelled.
     * The default value is 5 min.
     * </pre>
     *
     * <code>.google.protobuf.Duration test_timeout = 1;</code>
     */
    public Builder setTestTimeout(
        com.google.protobuf.Duration.Builder builderForValue) {
      if (testTimeoutBuilder_ == null) {
        testTimeout_ = builderForValue.build();
        onChanged();
      } else {
        testTimeoutBuilder_.setMessage(builderForValue.build());
      }

      return this;
    }
    /**
     * <pre>
     * Max time a test execution is allowed to run before it is
     * automatically cancelled.
     * The default value is 5 min.
     * </pre>
     *
     * <code>.google.protobuf.Duration test_timeout = 1;</code>
     */
    public Builder mergeTestTimeout(com.google.protobuf.Duration value) {
      if (testTimeoutBuilder_ == null) {
        if (testTimeout_ != null) {
          testTimeout_ =
            com.google.protobuf.Duration.newBuilder(testTimeout_).mergeFrom(value).buildPartial();
        } else {
          testTimeout_ = value;
        }
        onChanged();
      } else {
        testTimeoutBuilder_.mergeFrom(value);
      }

      return this;
    }
    /**
     * <pre>
     * Max time a test execution is allowed to run before it is
     * automatically cancelled.
     * The default value is 5 min.
     * </pre>
     *
     * <code>.google.protobuf.Duration test_timeout = 1;</code>
     */
    public Builder clearTestTimeout() {
      if (testTimeoutBuilder_ == null) {
        testTimeout_ = null;
        onChanged();
      } else {
        testTimeout_ = null;
        testTimeoutBuilder_ = null;
      }

      return this;
    }
    /**
     * <pre>
     * Max time a test execution is allowed to run before it is
     * automatically cancelled.
     * The default value is 5 min.
     * </pre>
     *
     * <code>.google.protobuf.Duration test_timeout = 1;</code>
     */
    public com.google.protobuf.Duration.Builder getTestTimeoutBuilder() {
      
      onChanged();
      return getTestTimeoutFieldBuilder().getBuilder();
    }
    /**
     * <pre>
     * Max time a test execution is allowed to run before it is
     * automatically cancelled.
     * The default value is 5 min.
     * </pre>
     *
     * <code>.google.protobuf.Duration test_timeout = 1;</code>
     */
    public com.google.protobuf.DurationOrBuilder getTestTimeoutOrBuilder() {
      if (testTimeoutBuilder_ != null) {
        return testTimeoutBuilder_.getMessageOrBuilder();
      } else {
        return testTimeout_ == null ?
            com.google.protobuf.Duration.getDefaultInstance() : testTimeout_;
      }
    }
    /**
     * <pre>
     * Max time a test execution is allowed to run before it is
     * automatically cancelled.
     * The default value is 5 min.
     * </pre>
     *
     * <code>.google.protobuf.Duration test_timeout = 1;</code>
     */
    private com.google.protobuf.SingleFieldBuilderV3<
        com.google.protobuf.Duration, com.google.protobuf.Duration.Builder, com.google.protobuf.DurationOrBuilder> 
        getTestTimeoutFieldBuilder() {
      if (testTimeoutBuilder_ == null) {
        testTimeoutBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
            com.google.protobuf.Duration, com.google.protobuf.Duration.Builder, com.google.protobuf.DurationOrBuilder>(
                getTestTimeout(),
                getParentForChildren(),
                isClean());
        testTimeout_ = null;
      }
      return testTimeoutBuilder_;
    }

    private com.google.protobuf.SingleFieldBuilderV3<
        com.google.devtools.testing.v1.TestSetup, com.google.devtools.testing.v1.TestSetup.Builder, com.google.devtools.testing.v1.TestSetupOrBuilder> testSetupBuilder_;
    /**
     * <pre>
     * Test setup requirements for Android e.g. files to install, bootstrap
     * scripts.
     * </pre>
     *
     * <code>.google.devtools.testing.v1.TestSetup test_setup = 6;</code>
     * @return Whether the testSetup field is set.
     */
    @java.lang.Override
    public boolean hasTestSetup() {
      return setupCase_ == 6;
    }
    /**
     * <pre>
     * Test setup requirements for Android e.g. files to install, bootstrap
     * scripts.
     * </pre>
     *
     * <code>.google.devtools.testing.v1.TestSetup test_setup = 6;</code>
     * @return The testSetup.
     */
    @java.lang.Override
    public com.google.devtools.testing.v1.TestSetup getTestSetup() {
      if (testSetupBuilder_ == null) {
        if (setupCase_ == 6) {
          return (com.google.devtools.testing.v1.TestSetup) setup_;
        }
        return com.google.devtools.testing.v1.TestSetup.getDefaultInstance();
      } else {
        if (setupCase_ == 6) {
          return testSetupBuilder_.getMessage();
        }
        return com.google.devtools.testing.v1.TestSetup.getDefaultInstance();
      }
    }
    /**
     * <pre>
     * Test setup requirements for Android e.g. files to install, bootstrap
     * scripts.
     * </pre>
     *
     * <code>.google.devtools.testing.v1.TestSetup test_setup = 6;</code>
     */
    public Builder setTestSetup(com.google.devtools.testing.v1.TestSetup value) {
      if (testSetupBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        setup_ = value;
        onChanged();
      } else {
        testSetupBuilder_.setMessage(value);
      }
      setupCase_ = 6;
      return this;
    }
    /**
     * <pre>
     * Test setup requirements for Android e.g. files to install, bootstrap
     * scripts.
     * </pre>
     *
     * <code>.google.devtools.testing.v1.TestSetup test_setup = 6;</code>
     */
    public Builder setTestSetup(
        com.google.devtools.testing.v1.TestSetup.Builder builderForValue) {
      if (testSetupBuilder_ == null) {
        setup_ = builderForValue.build();
        onChanged();
      } else {
        testSetupBuilder_.setMessage(builderForValue.build());
      }
      setupCase_ = 6;
      return this;
    }
    /**
     * <pre>
     * Test setup requirements for Android e.g. files to install, bootstrap
     * scripts.
     * </pre>
     *
     * <code>.google.devtools.testing.v1.TestSetup test_setup = 6;</code>
     */
    public Builder mergeTestSetup(com.google.devtools.testing.v1.TestSetup value) {
      if (testSetupBuilder_ == null) {
        if (setupCase_ == 6 &&
            setup_ != com.google.devtools.testing.v1.TestSetup.getDefaultInstance()) {
          setup_ = com.google.devtools.testing.v1.TestSetup.newBuilder((com.google.devtools.testing.v1.TestSetup) setup_)
              .mergeFrom(value).buildPartial();
        } else {
          setup_ = value;
        }
        onChanged();
      } else {
        if (setupCase_ == 6) {
          testSetupBuilder_.mergeFrom(value);
        } else {
          testSetupBuilder_.setMessage(value);
        }
      }
      setupCase_ = 6;
      return this;
    }
    /**
     * <pre>
     * Test setup requirements for Android e.g. files to install, bootstrap
     * scripts.
     * </pre>
     *
     * <code>.google.devtools.testing.v1.TestSetup test_setup = 6;</code>
     */
    public Builder clearTestSetup() {
      if (testSetupBuilder_ == null) {
        if (setupCase_ == 6) {
          setupCase_ = 0;
          setup_ = null;
          onChanged();
        }
      } else {
        if (setupCase_ == 6) {
          setupCase_ = 0;
          setup_ = null;
        }
        testSetupBuilder_.clear();
      }
      return this;
    }
    /**
     * <pre>
     * Test setup requirements for Android e.g. files to install, bootstrap
     * scripts.
     * </pre>
     *
     * <code>.google.devtools.testing.v1.TestSetup test_setup = 6;</code>
     */
    public com.google.devtools.testing.v1.TestSetup.Builder getTestSetupBuilder() {
      return getTestSetupFieldBuilder().getBuilder();
    }
    /**
     * <pre>
     * Test setup requirements for Android e.g. files to install, bootstrap
     * scripts.
     * </pre>
     *
     * <code>.google.devtools.testing.v1.TestSetup test_setup = 6;</code>
     */
    @java.lang.Override
    public com.google.devtools.testing.v1.TestSetupOrBuilder getTestSetupOrBuilder() {
      if ((setupCase_ == 6) && (testSetupBuilder_ != null)) {
        return testSetupBuilder_.getMessageOrBuilder();
      } else {
        if (setupCase_ == 6) {
          return (com.google.devtools.testing.v1.TestSetup) setup_;
        }
        return com.google.devtools.testing.v1.TestSetup.getDefaultInstance();
      }
    }
    /**
     * <pre>
     * Test setup requirements for Android e.g. files to install, bootstrap
     * scripts.
     * </pre>
     *
     * <code>.google.devtools.testing.v1.TestSetup test_setup = 6;</code>
     */
    private com.google.protobuf.SingleFieldBuilderV3<
        com.google.devtools.testing.v1.TestSetup, com.google.devtools.testing.v1.TestSetup.Builder, com.google.devtools.testing.v1.TestSetupOrBuilder> 
        getTestSetupFieldBuilder() {
      if (testSetupBuilder_ == null) {
        if (!(setupCase_ == 6)) {
          setup_ = com.google.devtools.testing.v1.TestSetup.getDefaultInstance();
        }
        testSetupBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
            com.google.devtools.testing.v1.TestSetup, com.google.devtools.testing.v1.TestSetup.Builder, com.google.devtools.testing.v1.TestSetupOrBuilder>(
                (com.google.devtools.testing.v1.TestSetup) setup_,
                getParentForChildren(),
                isClean());
        setup_ = null;
      }
      setupCase_ = 6;
      onChanged();;
      return testSetupBuilder_;
    }

    private com.google.protobuf.SingleFieldBuilderV3<
        com.google.devtools.testing.v1.IosTestSetup, com.google.devtools.testing.v1.IosTestSetup.Builder, com.google.devtools.testing.v1.IosTestSetupOrBuilder> iosTestSetupBuilder_;
    /**
     * <pre>
     * Test setup requirements for iOS.
     * </pre>
     *
     * <code>.google.devtools.testing.v1.IosTestSetup ios_test_setup = 14;</code>
     * @return Whether the iosTestSetup field is set.
     */
    @java.lang.Override
    public boolean hasIosTestSetup() {
      return setupCase_ == 14;
    }
    /**
     * <pre>
     * Test setup requirements for iOS.
     * </pre>
     *
     * <code>.google.devtools.testing.v1.IosTestSetup ios_test_setup = 14;</code>
     * @return The iosTestSetup.
     */
    @java.lang.Override
    public com.google.devtools.testing.v1.IosTestSetup getIosTestSetup() {
      if (iosTestSetupBuilder_ == null) {
        if (setupCase_ == 14) {
          return (com.google.devtools.testing.v1.IosTestSetup) setup_;
        }
        return com.google.devtools.testing.v1.IosTestSetup.getDefaultInstance();
      } else {
        if (setupCase_ == 14) {
          return iosTestSetupBuilder_.getMessage();
        }
        return com.google.devtools.testing.v1.IosTestSetup.getDefaultInstance();
      }
    }
    /**
     * <pre>
     * Test setup requirements for iOS.
     * </pre>
     *
     * <code>.google.devtools.testing.v1.IosTestSetup ios_test_setup = 14;</code>
     */
    public Builder setIosTestSetup(com.google.devtools.testing.v1.IosTestSetup value) {
      if (iosTestSetupBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        setup_ = value;
        onChanged();
      } else {
        iosTestSetupBuilder_.setMessage(value);
      }
      setupCase_ = 14;
      return this;
    }
    /**
     * <pre>
     * Test setup requirements for iOS.
     * </pre>
     *
     * <code>.google.devtools.testing.v1.IosTestSetup ios_test_setup = 14;</code>
     */
    public Builder setIosTestSetup(
        com.google.devtools.testing.v1.IosTestSetup.Builder builderForValue) {
      if (iosTestSetupBuilder_ == null) {
        setup_ = builderForValue.build();
        onChanged();
      } else {
        iosTestSetupBuilder_.setMessage(builderForValue.build());
      }
      setupCase_ = 14;
      return this;
    }
    /**
     * <pre>
     * Test setup requirements for iOS.
     * </pre>
     *
     * <code>.google.devtools.testing.v1.IosTestSetup ios_test_setup = 14;</code>
     */
    public Builder mergeIosTestSetup(com.google.devtools.testing.v1.IosTestSetup value) {
      if (iosTestSetupBuilder_ == null) {
        if (setupCase_ == 14 &&
            setup_ != com.google.devtools.testing.v1.IosTestSetup.getDefaultInstance()) {
          setup_ = com.google.devtools.testing.v1.IosTestSetup.newBuilder((com.google.devtools.testing.v1.IosTestSetup) setup_)
              .mergeFrom(value).buildPartial();
        } else {
          setup_ = value;
        }
        onChanged();
      } else {
        if (setupCase_ == 14) {
          iosTestSetupBuilder_.mergeFrom(value);
        } else {
          iosTestSetupBuilder_.setMessage(value);
        }
      }
      setupCase_ = 14;
      return this;
    }
    /**
     * <pre>
     * Test setup requirements for iOS.
     * </pre>
     *
     * <code>.google.devtools.testing.v1.IosTestSetup ios_test_setup = 14;</code>
     */
    public Builder clearIosTestSetup() {
      if (iosTestSetupBuilder_ == null) {
        if (setupCase_ == 14) {
          setupCase_ = 0;
          setup_ = null;
          onChanged();
        }
      } else {
        if (setupCase_ == 14) {
          setupCase_ = 0;
          setup_ = null;
        }
        iosTestSetupBuilder_.clear();
      }
      return this;
    }
    /**
     * <pre>
     * Test setup requirements for iOS.
     * </pre>
     *
     * <code>.google.devtools.testing.v1.IosTestSetup ios_test_setup = 14;</code>
     */
    public com.google.devtools.testing.v1.IosTestSetup.Builder getIosTestSetupBuilder() {
      return getIosTestSetupFieldBuilder().getBuilder();
    }
    /**
     * <pre>
     * Test setup requirements for iOS.
     * </pre>
     *
     * <code>.google.devtools.testing.v1.IosTestSetup ios_test_setup = 14;</code>
     */
    @java.lang.Override
    public com.google.devtools.testing.v1.IosTestSetupOrBuilder getIosTestSetupOrBuilder() {
      if ((setupCase_ == 14) && (iosTestSetupBuilder_ != null)) {
        return iosTestSetupBuilder_.getMessageOrBuilder();
      } else {
        if (setupCase_ == 14) {
          return (com.google.devtools.testing.v1.IosTestSetup) setup_;
        }
        return com.google.devtools.testing.v1.IosTestSetup.getDefaultInstance();
      }
    }
    /**
     * <pre>
     * Test setup requirements for iOS.
     * </pre>
     *
     * <code>.google.devtools.testing.v1.IosTestSetup ios_test_setup = 14;</code>
     */
    private com.google.protobuf.SingleFieldBuilderV3<
        com.google.devtools.testing.v1.IosTestSetup, com.google.devtools.testing.v1.IosTestSetup.Builder, com.google.devtools.testing.v1.IosTestSetupOrBuilder> 
        getIosTestSetupFieldBuilder() {
      if (iosTestSetupBuilder_ == null) {
        if (!(setupCase_ == 14)) {
          setup_ = com.google.devtools.testing.v1.IosTestSetup.getDefaultInstance();
        }
        iosTestSetupBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
            com.google.devtools.testing.v1.IosTestSetup, com.google.devtools.testing.v1.IosTestSetup.Builder, com.google.devtools.testing.v1.IosTestSetupOrBuilder>(
                (com.google.devtools.testing.v1.IosTestSetup) setup_,
                getParentForChildren(),
                isClean());
        setup_ = null;
      }
      setupCase_ = 14;
      onChanged();;
      return iosTestSetupBuilder_;
    }

    private com.google.protobuf.SingleFieldBuilderV3<
        com.google.devtools.testing.v1.AndroidInstrumentationTest, com.google.devtools.testing.v1.AndroidInstrumentationTest.Builder, com.google.devtools.testing.v1.AndroidInstrumentationTestOrBuilder> androidInstrumentationTestBuilder_;
    /**
     * <pre>
     * An Android instrumentation test.
     * </pre>
     *
     * <code>.google.devtools.testing.v1.AndroidInstrumentationTest android_instrumentation_test = 2;</code>
     * @return Whether the androidInstrumentationTest field is set.
     */
    @java.lang.Override
    public boolean hasAndroidInstrumentationTest() {
      return testCase_ == 2;
    }
    /**
     * <pre>
     * An Android instrumentation test.
     * </pre>
     *
     * <code>.google.devtools.testing.v1.AndroidInstrumentationTest android_instrumentation_test = 2;</code>
     * @return The androidInstrumentationTest.
     */
    @java.lang.Override
    public com.google.devtools.testing.v1.AndroidInstrumentationTest getAndroidInstrumentationTest() {
      if (androidInstrumentationTestBuilder_ == null) {
        if (testCase_ == 2) {
          return (com.google.devtools.testing.v1.AndroidInstrumentationTest) test_;
        }
        return com.google.devtools.testing.v1.AndroidInstrumentationTest.getDefaultInstance();
      } else {
        if (testCase_ == 2) {
          return androidInstrumentationTestBuilder_.getMessage();
        }
        return com.google.devtools.testing.v1.AndroidInstrumentationTest.getDefaultInstance();
      }
    }
    /**
     * <pre>
     * An Android instrumentation test.
     * </pre>
     *
     * <code>.google.devtools.testing.v1.AndroidInstrumentationTest android_instrumentation_test = 2;</code>
     */
    public Builder setAndroidInstrumentationTest(com.google.devtools.testing.v1.AndroidInstrumentationTest value) {
      if (androidInstrumentationTestBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        test_ = value;
        onChanged();
      } else {
        androidInstrumentationTestBuilder_.setMessage(value);
      }
      testCase_ = 2;
      return this;
    }
    /**
     * <pre>
     * An Android instrumentation test.
     * </pre>
     *
     * <code>.google.devtools.testing.v1.AndroidInstrumentationTest android_instrumentation_test = 2;</code>
     */
    public Builder setAndroidInstrumentationTest(
        com.google.devtools.testing.v1.AndroidInstrumentationTest.Builder builderForValue) {
      if (androidInstrumentationTestBuilder_ == null) {
        test_ = builderForValue.build();
        onChanged();
      } else {
        androidInstrumentationTestBuilder_.setMessage(builderForValue.build());
      }
      testCase_ = 2;
      return this;
    }
    /**
     * <pre>
     * An Android instrumentation test.
     * </pre>
     *
     * <code>.google.devtools.testing.v1.AndroidInstrumentationTest android_instrumentation_test = 2;</code>
     */
    public Builder mergeAndroidInstrumentationTest(com.google.devtools.testing.v1.AndroidInstrumentationTest value) {
      if (androidInstrumentationTestBuilder_ == null) {
        if (testCase_ == 2 &&
            test_ != com.google.devtools.testing.v1.AndroidInstrumentationTest.getDefaultInstance()) {
          test_ = com.google.devtools.testing.v1.AndroidInstrumentationTest.newBuilder((com.google.devtools.testing.v1.AndroidInstrumentationTest) test_)
              .mergeFrom(value).buildPartial();
        } else {
          test_ = value;
        }
        onChanged();
      } else {
        if (testCase_ == 2) {
          androidInstrumentationTestBuilder_.mergeFrom(value);
        } else {
          androidInstrumentationTestBuilder_.setMessage(value);
        }
      }
      testCase_ = 2;
      return this;
    }
    /**
     * <pre>
     * An Android instrumentation test.
     * </pre>
     *
     * <code>.google.devtools.testing.v1.AndroidInstrumentationTest android_instrumentation_test = 2;</code>
     */
    public Builder clearAndroidInstrumentationTest() {
      if (androidInstrumentationTestBuilder_ == null) {
        if (testCase_ == 2) {
          testCase_ = 0;
          test_ = null;
          onChanged();
        }
      } else {
        if (testCase_ == 2) {
          testCase_ = 0;
          test_ = null;
        }
        androidInstrumentationTestBuilder_.clear();
      }
      return this;
    }
    /**
     * <pre>
     * An Android instrumentation test.
     * </pre>
     *
     * <code>.google.devtools.testing.v1.AndroidInstrumentationTest android_instrumentation_test = 2;</code>
     */
    public com.google.devtools.testing.v1.AndroidInstrumentationTest.Builder getAndroidInstrumentationTestBuilder() {
      return getAndroidInstrumentationTestFieldBuilder().getBuilder();
    }
    /**
     * <pre>
     * An Android instrumentation test.
     * </pre>
     *
     * <code>.google.devtools.testing.v1.AndroidInstrumentationTest android_instrumentation_test = 2;</code>
     */
    @java.lang.Override
    public com.google.devtools.testing.v1.AndroidInstrumentationTestOrBuilder getAndroidInstrumentationTestOrBuilder() {
      if ((testCase_ == 2) && (androidInstrumentationTestBuilder_ != null)) {
        return androidInstrumentationTestBuilder_.getMessageOrBuilder();
      } else {
        if (testCase_ == 2) {
          return (com.google.devtools.testing.v1.AndroidInstrumentationTest) test_;
        }
        return com.google.devtools.testing.v1.AndroidInstrumentationTest.getDefaultInstance();
      }
    }
    /**
     * <pre>
     * An Android instrumentation test.
     * </pre>
     *
     * <code>.google.devtools.testing.v1.AndroidInstrumentationTest android_instrumentation_test = 2;</code>
     */
    private com.google.protobuf.SingleFieldBuilderV3<
        com.google.devtools.testing.v1.AndroidInstrumentationTest, com.google.devtools.testing.v1.AndroidInstrumentationTest.Builder, com.google.devtools.testing.v1.AndroidInstrumentationTestOrBuilder> 
        getAndroidInstrumentationTestFieldBuilder() {
      if (androidInstrumentationTestBuilder_ == null) {
        if (!(testCase_ == 2)) {
          test_ = com.google.devtools.testing.v1.AndroidInstrumentationTest.getDefaultInstance();
        }
        androidInstrumentationTestBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
            com.google.devtools.testing.v1.AndroidInstrumentationTest, com.google.devtools.testing.v1.AndroidInstrumentationTest.Builder, com.google.devtools.testing.v1.AndroidInstrumentationTestOrBuilder>(
                (com.google.devtools.testing.v1.AndroidInstrumentationTest) test_,
                getParentForChildren(),
                isClean());
        test_ = null;
      }
      testCase_ = 2;
      onChanged();;
      return androidInstrumentationTestBuilder_;
    }

    private com.google.protobuf.SingleFieldBuilderV3<
        com.google.devtools.testing.v1.AndroidRoboTest, com.google.devtools.testing.v1.AndroidRoboTest.Builder, com.google.devtools.testing.v1.AndroidRoboTestOrBuilder> androidRoboTestBuilder_;
    /**
     * <pre>
     * An Android robo test.
     * </pre>
     *
     * <code>.google.devtools.testing.v1.AndroidRoboTest android_robo_test = 3;</code>
     * @return Whether the androidRoboTest field is set.
     */
    @java.lang.Override
    public boolean hasAndroidRoboTest() {
      return testCase_ == 3;
    }
    /**
     * <pre>
     * An Android robo test.
     * </pre>
     *
     * <code>.google.devtools.testing.v1.AndroidRoboTest android_robo_test = 3;</code>
     * @return The androidRoboTest.
     */
    @java.lang.Override
    public com.google.devtools.testing.v1.AndroidRoboTest getAndroidRoboTest() {
      if (androidRoboTestBuilder_ == null) {
        if (testCase_ == 3) {
          return (com.google.devtools.testing.v1.AndroidRoboTest) test_;
        }
        return com.google.devtools.testing.v1.AndroidRoboTest.getDefaultInstance();
      } else {
        if (testCase_ == 3) {
          return androidRoboTestBuilder_.getMessage();
        }
        return com.google.devtools.testing.v1.AndroidRoboTest.getDefaultInstance();
      }
    }
    /**
     * <pre>
     * An Android robo test.
     * </pre>
     *
     * <code>.google.devtools.testing.v1.AndroidRoboTest android_robo_test = 3;</code>
     */
    public Builder setAndroidRoboTest(com.google.devtools.testing.v1.AndroidRoboTest value) {
      if (androidRoboTestBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        test_ = value;
        onChanged();
      } else {
        androidRoboTestBuilder_.setMessage(value);
      }
      testCase_ = 3;
      return this;
    }
    /**
     * <pre>
     * An Android robo test.
     * </pre>
     *
     * <code>.google.devtools.testing.v1.AndroidRoboTest android_robo_test = 3;</code>
     */
    public Builder setAndroidRoboTest(
        com.google.devtools.testing.v1.AndroidRoboTest.Builder builderForValue) {
      if (androidRoboTestBuilder_ == null) {
        test_ = builderForValue.build();
        onChanged();
      } else {
        androidRoboTestBuilder_.setMessage(builderForValue.build());
      }
      testCase_ = 3;
      return this;
    }
    /**
     * <pre>
     * An Android robo test.
     * </pre>
     *
     * <code>.google.devtools.testing.v1.AndroidRoboTest android_robo_test = 3;</code>
     */
    public Builder mergeAndroidRoboTest(com.google.devtools.testing.v1.AndroidRoboTest value) {
      if (androidRoboTestBuilder_ == null) {
        if (testCase_ == 3 &&
            test_ != com.google.devtools.testing.v1.AndroidRoboTest.getDefaultInstance()) {
          test_ = com.google.devtools.testing.v1.AndroidRoboTest.newBuilder((com.google.devtools.testing.v1.AndroidRoboTest) test_)
              .mergeFrom(value).buildPartial();
        } else {
          test_ = value;
        }
        onChanged();
      } else {
        if (testCase_ == 3) {
          androidRoboTestBuilder_.mergeFrom(value);
        } else {
          androidRoboTestBuilder_.setMessage(value);
        }
      }
      testCase_ = 3;
      return this;
    }
    /**
     * <pre>
     * An Android robo test.
     * </pre>
     *
     * <code>.google.devtools.testing.v1.AndroidRoboTest android_robo_test = 3;</code>
     */
    public Builder clearAndroidRoboTest() {
      if (androidRoboTestBuilder_ == null) {
        if (testCase_ == 3) {
          testCase_ = 0;
          test_ = null;
          onChanged();
        }
      } else {
        if (testCase_ == 3) {
          testCase_ = 0;
          test_ = null;
        }
        androidRoboTestBuilder_.clear();
      }
      return this;
    }
    /**
     * <pre>
     * An Android robo test.
     * </pre>
     *
     * <code>.google.devtools.testing.v1.AndroidRoboTest android_robo_test = 3;</code>
     */
    public com.google.devtools.testing.v1.AndroidRoboTest.Builder getAndroidRoboTestBuilder() {
      return getAndroidRoboTestFieldBuilder().getBuilder();
    }
    /**
     * <pre>
     * An Android robo test.
     * </pre>
     *
     * <code>.google.devtools.testing.v1.AndroidRoboTest android_robo_test = 3;</code>
     */
    @java.lang.Override
    public com.google.devtools.testing.v1.AndroidRoboTestOrBuilder getAndroidRoboTestOrBuilder() {
      if ((testCase_ == 3) && (androidRoboTestBuilder_ != null)) {
        return androidRoboTestBuilder_.getMessageOrBuilder();
      } else {
        if (testCase_ == 3) {
          return (com.google.devtools.testing.v1.AndroidRoboTest) test_;
        }
        return com.google.devtools.testing.v1.AndroidRoboTest.getDefaultInstance();
      }
    }
    /**
     * <pre>
     * An Android robo test.
     * </pre>
     *
     * <code>.google.devtools.testing.v1.AndroidRoboTest android_robo_test = 3;</code>
     */
    private com.google.protobuf.SingleFieldBuilderV3<
        com.google.devtools.testing.v1.AndroidRoboTest, com.google.devtools.testing.v1.AndroidRoboTest.Builder, com.google.devtools.testing.v1.AndroidRoboTestOrBuilder> 
        getAndroidRoboTestFieldBuilder() {
      if (androidRoboTestBuilder_ == null) {
        if (!(testCase_ == 3)) {
          test_ = com.google.devtools.testing.v1.AndroidRoboTest.getDefaultInstance();
        }
        androidRoboTestBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
            com.google.devtools.testing.v1.AndroidRoboTest, com.google.devtools.testing.v1.AndroidRoboTest.Builder, com.google.devtools.testing.v1.AndroidRoboTestOrBuilder>(
                (com.google.devtools.testing.v1.AndroidRoboTest) test_,
                getParentForChildren(),
                isClean());
        test_ = null;
      }
      testCase_ = 3;
      onChanged();;
      return androidRoboTestBuilder_;
    }

    private com.google.protobuf.SingleFieldBuilderV3<
        com.google.devtools.testing.v1.AndroidTestLoop, com.google.devtools.testing.v1.AndroidTestLoop.Builder, com.google.devtools.testing.v1.AndroidTestLoopOrBuilder> androidTestLoopBuilder_;
    /**
     * <pre>
     * An Android Application with a Test Loop.
     * </pre>
     *
     * <code>.google.devtools.testing.v1.AndroidTestLoop android_test_loop = 9;</code>
     * @return Whether the androidTestLoop field is set.
     */
    @java.lang.Override
    public boolean hasAndroidTestLoop() {
      return testCase_ == 9;
    }
    /**
     * <pre>
     * An Android Application with a Test Loop.
     * </pre>
     *
     * <code>.google.devtools.testing.v1.AndroidTestLoop android_test_loop = 9;</code>
     * @return The androidTestLoop.
     */
    @java.lang.Override
    public com.google.devtools.testing.v1.AndroidTestLoop getAndroidTestLoop() {
      if (androidTestLoopBuilder_ == null) {
        if (testCase_ == 9) {
          return (com.google.devtools.testing.v1.AndroidTestLoop) test_;
        }
        return com.google.devtools.testing.v1.AndroidTestLoop.getDefaultInstance();
      } else {
        if (testCase_ == 9) {
          return androidTestLoopBuilder_.getMessage();
        }
        return com.google.devtools.testing.v1.AndroidTestLoop.getDefaultInstance();
      }
    }
    /**
     * <pre>
     * An Android Application with a Test Loop.
     * </pre>
     *
     * <code>.google.devtools.testing.v1.AndroidTestLoop android_test_loop = 9;</code>
     */
    public Builder setAndroidTestLoop(com.google.devtools.testing.v1.AndroidTestLoop value) {
      if (androidTestLoopBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        test_ = value;
        onChanged();
      } else {
        androidTestLoopBuilder_.setMessage(value);
      }
      testCase_ = 9;
      return this;
    }
    /**
     * <pre>
     * An Android Application with a Test Loop.
     * </pre>
     *
     * <code>.google.devtools.testing.v1.AndroidTestLoop android_test_loop = 9;</code>
     */
    public Builder setAndroidTestLoop(
        com.google.devtools.testing.v1.AndroidTestLoop.Builder builderForValue) {
      if (androidTestLoopBuilder_ == null) {
        test_ = builderForValue.build();
        onChanged();
      } else {
        androidTestLoopBuilder_.setMessage(builderForValue.build());
      }
      testCase_ = 9;
      return this;
    }
    /**
     * <pre>
     * An Android Application with a Test Loop.
     * </pre>
     *
     * <code>.google.devtools.testing.v1.AndroidTestLoop android_test_loop = 9;</code>
     */
    public Builder mergeAndroidTestLoop(com.google.devtools.testing.v1.AndroidTestLoop value) {
      if (androidTestLoopBuilder_ == null) {
        if (testCase_ == 9 &&
            test_ != com.google.devtools.testing.v1.AndroidTestLoop.getDefaultInstance()) {
          test_ = com.google.devtools.testing.v1.AndroidTestLoop.newBuilder((com.google.devtools.testing.v1.AndroidTestLoop) test_)
              .mergeFrom(value).buildPartial();
        } else {
          test_ = value;
        }
        onChanged();
      } else {
        if (testCase_ == 9) {
          androidTestLoopBuilder_.mergeFrom(value);
        } else {
          androidTestLoopBuilder_.setMessage(value);
        }
      }
      testCase_ = 9;
      return this;
    }
    /**
     * <pre>
     * An Android Application with a Test Loop.
     * </pre>
     *
     * <code>.google.devtools.testing.v1.AndroidTestLoop android_test_loop = 9;</code>
     */
    public Builder clearAndroidTestLoop() {
      if (androidTestLoopBuilder_ == null) {
        if (testCase_ == 9) {
          testCase_ = 0;
          test_ = null;
          onChanged();
        }
      } else {
        if (testCase_ == 9) {
          testCase_ = 0;
          test_ = null;
        }
        androidTestLoopBuilder_.clear();
      }
      return this;
    }
    /**
     * <pre>
     * An Android Application with a Test Loop.
     * </pre>
     *
     * <code>.google.devtools.testing.v1.AndroidTestLoop android_test_loop = 9;</code>
     */
    public com.google.devtools.testing.v1.AndroidTestLoop.Builder getAndroidTestLoopBuilder() {
      return getAndroidTestLoopFieldBuilder().getBuilder();
    }
    /**
     * <pre>
     * An Android Application with a Test Loop.
     * </pre>
     *
     * <code>.google.devtools.testing.v1.AndroidTestLoop android_test_loop = 9;</code>
     */
    @java.lang.Override
    public com.google.devtools.testing.v1.AndroidTestLoopOrBuilder getAndroidTestLoopOrBuilder() {
      if ((testCase_ == 9) && (androidTestLoopBuilder_ != null)) {
        return androidTestLoopBuilder_.getMessageOrBuilder();
      } else {
        if (testCase_ == 9) {
          return (com.google.devtools.testing.v1.AndroidTestLoop) test_;
        }
        return com.google.devtools.testing.v1.AndroidTestLoop.getDefaultInstance();
      }
    }
    /**
     * <pre>
     * An Android Application with a Test Loop.
     * </pre>
     *
     * <code>.google.devtools.testing.v1.AndroidTestLoop android_test_loop = 9;</code>
     */
    private com.google.protobuf.SingleFieldBuilderV3<
        com.google.devtools.testing.v1.AndroidTestLoop, com.google.devtools.testing.v1.AndroidTestLoop.Builder, com.google.devtools.testing.v1.AndroidTestLoopOrBuilder> 
        getAndroidTestLoopFieldBuilder() {
      if (androidTestLoopBuilder_ == null) {
        if (!(testCase_ == 9)) {
          test_ = com.google.devtools.testing.v1.AndroidTestLoop.getDefaultInstance();
        }
        androidTestLoopBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
            com.google.devtools.testing.v1.AndroidTestLoop, com.google.devtools.testing.v1.AndroidTestLoop.Builder, com.google.devtools.testing.v1.AndroidTestLoopOrBuilder>(
                (com.google.devtools.testing.v1.AndroidTestLoop) test_,
                getParentForChildren(),
                isClean());
        test_ = null;
      }
      testCase_ = 9;
      onChanged();;
      return androidTestLoopBuilder_;
    }

    private com.google.protobuf.SingleFieldBuilderV3<
        com.google.devtools.testing.v1.IosXcTest, com.google.devtools.testing.v1.IosXcTest.Builder, com.google.devtools.testing.v1.IosXcTestOrBuilder> iosXcTestBuilder_;
    /**
     * <pre>
     * An iOS XCTest, via an .xctestrun file.
     * </pre>
     *
     * <code>.google.devtools.testing.v1.IosXcTest ios_xc_test = 13;</code>
     * @return Whether the iosXcTest field is set.
     */
    @java.lang.Override
    public boolean hasIosXcTest() {
      return testCase_ == 13;
    }
    /**
     * <pre>
     * An iOS XCTest, via an .xctestrun file.
     * </pre>
     *
     * <code>.google.devtools.testing.v1.IosXcTest ios_xc_test = 13;</code>
     * @return The iosXcTest.
     */
    @java.lang.Override
    public com.google.devtools.testing.v1.IosXcTest getIosXcTest() {
      if (iosXcTestBuilder_ == null) {
        if (testCase_ == 13) {
          return (com.google.devtools.testing.v1.IosXcTest) test_;
        }
        return com.google.devtools.testing.v1.IosXcTest.getDefaultInstance();
      } else {
        if (testCase_ == 13) {
          return iosXcTestBuilder_.getMessage();
        }
        return com.google.devtools.testing.v1.IosXcTest.getDefaultInstance();
      }
    }
    /**
     * <pre>
     * An iOS XCTest, via an .xctestrun file.
     * </pre>
     *
     * <code>.google.devtools.testing.v1.IosXcTest ios_xc_test = 13;</code>
     */
    public Builder setIosXcTest(com.google.devtools.testing.v1.IosXcTest value) {
      if (iosXcTestBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        test_ = value;
        onChanged();
      } else {
        iosXcTestBuilder_.setMessage(value);
      }
      testCase_ = 13;
      return this;
    }
    /**
     * <pre>
     * An iOS XCTest, via an .xctestrun file.
     * </pre>
     *
     * <code>.google.devtools.testing.v1.IosXcTest ios_xc_test = 13;</code>
     */
    public Builder setIosXcTest(
        com.google.devtools.testing.v1.IosXcTest.Builder builderForValue) {
      if (iosXcTestBuilder_ == null) {
        test_ = builderForValue.build();
        onChanged();
      } else {
        iosXcTestBuilder_.setMessage(builderForValue.build());
      }
      testCase_ = 13;
      return this;
    }
    /**
     * <pre>
     * An iOS XCTest, via an .xctestrun file.
     * </pre>
     *
     * <code>.google.devtools.testing.v1.IosXcTest ios_xc_test = 13;</code>
     */
    public Builder mergeIosXcTest(com.google.devtools.testing.v1.IosXcTest value) {
      if (iosXcTestBuilder_ == null) {
        if (testCase_ == 13 &&
            test_ != com.google.devtools.testing.v1.IosXcTest.getDefaultInstance()) {
          test_ = com.google.devtools.testing.v1.IosXcTest.newBuilder((com.google.devtools.testing.v1.IosXcTest) test_)
              .mergeFrom(value).buildPartial();
        } else {
          test_ = value;
        }
        onChanged();
      } else {
        if (testCase_ == 13) {
          iosXcTestBuilder_.mergeFrom(value);
        } else {
          iosXcTestBuilder_.setMessage(value);
        }
      }
      testCase_ = 13;
      return this;
    }
    /**
     * <pre>
     * An iOS XCTest, via an .xctestrun file.
     * </pre>
     *
     * <code>.google.devtools.testing.v1.IosXcTest ios_xc_test = 13;</code>
     */
    public Builder clearIosXcTest() {
      if (iosXcTestBuilder_ == null) {
        if (testCase_ == 13) {
          testCase_ = 0;
          test_ = null;
          onChanged();
        }
      } else {
        if (testCase_ == 13) {
          testCase_ = 0;
          test_ = null;
        }
        iosXcTestBuilder_.clear();
      }
      return this;
    }
    /**
     * <pre>
     * An iOS XCTest, via an .xctestrun file.
     * </pre>
     *
     * <code>.google.devtools.testing.v1.IosXcTest ios_xc_test = 13;</code>
     */
    public com.google.devtools.testing.v1.IosXcTest.Builder getIosXcTestBuilder() {
      return getIosXcTestFieldBuilder().getBuilder();
    }
    /**
     * <pre>
     * An iOS XCTest, via an .xctestrun file.
     * </pre>
     *
     * <code>.google.devtools.testing.v1.IosXcTest ios_xc_test = 13;</code>
     */
    @java.lang.Override
    public com.google.devtools.testing.v1.IosXcTestOrBuilder getIosXcTestOrBuilder() {
      if ((testCase_ == 13) && (iosXcTestBuilder_ != null)) {
        return iosXcTestBuilder_.getMessageOrBuilder();
      } else {
        if (testCase_ == 13) {
          return (com.google.devtools.testing.v1.IosXcTest) test_;
        }
        return com.google.devtools.testing.v1.IosXcTest.getDefaultInstance();
      }
    }
    /**
     * <pre>
     * An iOS XCTest, via an .xctestrun file.
     * </pre>
     *
     * <code>.google.devtools.testing.v1.IosXcTest ios_xc_test = 13;</code>
     */
    private com.google.protobuf.SingleFieldBuilderV3<
        com.google.devtools.testing.v1.IosXcTest, com.google.devtools.testing.v1.IosXcTest.Builder, com.google.devtools.testing.v1.IosXcTestOrBuilder> 
        getIosXcTestFieldBuilder() {
      if (iosXcTestBuilder_ == null) {
        if (!(testCase_ == 13)) {
          test_ = com.google.devtools.testing.v1.IosXcTest.getDefaultInstance();
        }
        iosXcTestBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
            com.google.devtools.testing.v1.IosXcTest, com.google.devtools.testing.v1.IosXcTest.Builder, com.google.devtools.testing.v1.IosXcTestOrBuilder>(
                (com.google.devtools.testing.v1.IosXcTest) test_,
                getParentForChildren(),
                isClean());
        test_ = null;
      }
      testCase_ = 13;
      onChanged();;
      return iosXcTestBuilder_;
    }

    private com.google.protobuf.SingleFieldBuilderV3<
        com.google.devtools.testing.v1.IosTestLoop, com.google.devtools.testing.v1.IosTestLoop.Builder, com.google.devtools.testing.v1.IosTestLoopOrBuilder> iosTestLoopBuilder_;
    /**
     * <pre>
     * An iOS application with a test loop.
     * </pre>
     *
     * <code>.google.devtools.testing.v1.IosTestLoop ios_test_loop = 15;</code>
     * @return Whether the iosTestLoop field is set.
     */
    @java.lang.Override
    public boolean hasIosTestLoop() {
      return testCase_ == 15;
    }
    /**
     * <pre>
     * An iOS application with a test loop.
     * </pre>
     *
     * <code>.google.devtools.testing.v1.IosTestLoop ios_test_loop = 15;</code>
     * @return The iosTestLoop.
     */
    @java.lang.Override
    public com.google.devtools.testing.v1.IosTestLoop getIosTestLoop() {
      if (iosTestLoopBuilder_ == null) {
        if (testCase_ == 15) {
          return (com.google.devtools.testing.v1.IosTestLoop) test_;
        }
        return com.google.devtools.testing.v1.IosTestLoop.getDefaultInstance();
      } else {
        if (testCase_ == 15) {
          return iosTestLoopBuilder_.getMessage();
        }
        return com.google.devtools.testing.v1.IosTestLoop.getDefaultInstance();
      }
    }
    /**
     * <pre>
     * An iOS application with a test loop.
     * </pre>
     *
     * <code>.google.devtools.testing.v1.IosTestLoop ios_test_loop = 15;</code>
     */
    public Builder setIosTestLoop(com.google.devtools.testing.v1.IosTestLoop value) {
      if (iosTestLoopBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        test_ = value;
        onChanged();
      } else {
        iosTestLoopBuilder_.setMessage(value);
      }
      testCase_ = 15;
      return this;
    }
    /**
     * <pre>
     * An iOS application with a test loop.
     * </pre>
     *
     * <code>.google.devtools.testing.v1.IosTestLoop ios_test_loop = 15;</code>
     */
    public Builder setIosTestLoop(
        com.google.devtools.testing.v1.IosTestLoop.Builder builderForValue) {
      if (iosTestLoopBuilder_ == null) {
        test_ = builderForValue.build();
        onChanged();
      } else {
        iosTestLoopBuilder_.setMessage(builderForValue.build());
      }
      testCase_ = 15;
      return this;
    }
    /**
     * <pre>
     * An iOS application with a test loop.
     * </pre>
     *
     * <code>.google.devtools.testing.v1.IosTestLoop ios_test_loop = 15;</code>
     */
    public Builder mergeIosTestLoop(com.google.devtools.testing.v1.IosTestLoop value) {
      if (iosTestLoopBuilder_ == null) {
        if (testCase_ == 15 &&
            test_ != com.google.devtools.testing.v1.IosTestLoop.getDefaultInstance()) {
          test_ = com.google.devtools.testing.v1.IosTestLoop.newBuilder((com.google.devtools.testing.v1.IosTestLoop) test_)
              .mergeFrom(value).buildPartial();
        } else {
          test_ = value;
        }
        onChanged();
      } else {
        if (testCase_ == 15) {
          iosTestLoopBuilder_.mergeFrom(value);
        } else {
          iosTestLoopBuilder_.setMessage(value);
        }
      }
      testCase_ = 15;
      return this;
    }
    /**
     * <pre>
     * An iOS application with a test loop.
     * </pre>
     *
     * <code>.google.devtools.testing.v1.IosTestLoop ios_test_loop = 15;</code>
     */
    public Builder clearIosTestLoop() {
      if (iosTestLoopBuilder_ == null) {
        if (testCase_ == 15) {
          testCase_ = 0;
          test_ = null;
          onChanged();
        }
      } else {
        if (testCase_ == 15) {
          testCase_ = 0;
          test_ = null;
        }
        iosTestLoopBuilder_.clear();
      }
      return this;
    }
    /**
     * <pre>
     * An iOS application with a test loop.
     * </pre>
     *
     * <code>.google.devtools.testing.v1.IosTestLoop ios_test_loop = 15;</code>
     */
    public com.google.devtools.testing.v1.IosTestLoop.Builder getIosTestLoopBuilder() {
      return getIosTestLoopFieldBuilder().getBuilder();
    }
    /**
     * <pre>
     * An iOS application with a test loop.
     * </pre>
     *
     * <code>.google.devtools.testing.v1.IosTestLoop ios_test_loop = 15;</code>
     */
    @java.lang.Override
    public com.google.devtools.testing.v1.IosTestLoopOrBuilder getIosTestLoopOrBuilder() {
      if ((testCase_ == 15) && (iosTestLoopBuilder_ != null)) {
        return iosTestLoopBuilder_.getMessageOrBuilder();
      } else {
        if (testCase_ == 15) {
          return (com.google.devtools.testing.v1.IosTestLoop) test_;
        }
        return com.google.devtools.testing.v1.IosTestLoop.getDefaultInstance();
      }
    }
    /**
     * <pre>
     * An iOS application with a test loop.
     * </pre>
     *
     * <code>.google.devtools.testing.v1.IosTestLoop ios_test_loop = 15;</code>
     */
    private com.google.protobuf.SingleFieldBuilderV3<
        com.google.devtools.testing.v1.IosTestLoop, com.google.devtools.testing.v1.IosTestLoop.Builder, com.google.devtools.testing.v1.IosTestLoopOrBuilder> 
        getIosTestLoopFieldBuilder() {
      if (iosTestLoopBuilder_ == null) {
        if (!(testCase_ == 15)) {
          test_ = com.google.devtools.testing.v1.IosTestLoop.getDefaultInstance();
        }
        iosTestLoopBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
            com.google.devtools.testing.v1.IosTestLoop, com.google.devtools.testing.v1.IosTestLoop.Builder, com.google.devtools.testing.v1.IosTestLoopOrBuilder>(
                (com.google.devtools.testing.v1.IosTestLoop) test_,
                getParentForChildren(),
                isClean());
        test_ = null;
      }
      testCase_ = 15;
      onChanged();;
      return iosTestLoopBuilder_;
    }

    private boolean disableVideoRecording_ ;
    /**
     * <pre>
     * Disables video recording. May reduce test latency.
     * </pre>
     *
     * <code>bool disable_video_recording = 10;</code>
     * @return The disableVideoRecording.
     */
    @java.lang.Override
    public boolean getDisableVideoRecording() {
      return disableVideoRecording_;
    }
    /**
     * <pre>
     * Disables video recording. May reduce test latency.
     * </pre>
     *
     * <code>bool disable_video_recording = 10;</code>
     * @param value The disableVideoRecording to set.
     * @return This builder for chaining.
     */
    public Builder setDisableVideoRecording(boolean value) {
      
      disableVideoRecording_ = value;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * Disables video recording. May reduce test latency.
     * </pre>
     *
     * <code>bool disable_video_recording = 10;</code>
     * @return This builder for chaining.
     */
    public Builder clearDisableVideoRecording() {
      
      disableVideoRecording_ = false;
      onChanged();
      return this;
    }

    private boolean disablePerformanceMetrics_ ;
    /**
     * <pre>
     * Disables performance metrics recording. May reduce test latency.
     * </pre>
     *
     * <code>bool disable_performance_metrics = 11;</code>
     * @return The disablePerformanceMetrics.
     */
    @java.lang.Override
    public boolean getDisablePerformanceMetrics() {
      return disablePerformanceMetrics_;
    }
    /**
     * <pre>
     * Disables performance metrics recording. May reduce test latency.
     * </pre>
     *
     * <code>bool disable_performance_metrics = 11;</code>
     * @param value The disablePerformanceMetrics to set.
     * @return This builder for chaining.
     */
    public Builder setDisablePerformanceMetrics(boolean value) {
      
      disablePerformanceMetrics_ = value;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * Disables performance metrics recording. May reduce test latency.
     * </pre>
     *
     * <code>bool disable_performance_metrics = 11;</code>
     * @return This builder for chaining.
     */
    public Builder clearDisablePerformanceMetrics() {
      
      disablePerformanceMetrics_ = false;
      onChanged();
      return this;
    }
    @java.lang.Override
    public final Builder setUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return super.setUnknownFields(unknownFields);
    }

    @java.lang.Override
    public final Builder mergeUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return super.mergeUnknownFields(unknownFields);
    }


    // @@protoc_insertion_point(builder_scope:google.devtools.testing.v1.TestSpecification)
  }

  // @@protoc_insertion_point(class_scope:google.devtools.testing.v1.TestSpecification)
  private static final com.google.devtools.testing.v1.TestSpecification DEFAULT_INSTANCE;
  static {
    DEFAULT_INSTANCE = new com.google.devtools.testing.v1.TestSpecification();
  }

  public static com.google.devtools.testing.v1.TestSpecification getDefaultInstance() {
    return DEFAULT_INSTANCE;
  }

  private static final com.google.protobuf.Parser<TestSpecification>
      PARSER = new com.google.protobuf.AbstractParser<TestSpecification>() {
    @java.lang.Override
    public TestSpecification parsePartialFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return new TestSpecification(input, extensionRegistry);
    }
  };

  public static com.google.protobuf.Parser<TestSpecification> parser() {
    return PARSER;
  }

  @java.lang.Override
  public com.google.protobuf.Parser<TestSpecification> getParserForType() {
    return PARSER;
  }

  @java.lang.Override
  public com.google.devtools.testing.v1.TestSpecification getDefaultInstanceForType() {
    return DEFAULT_INSTANCE;
  }

}

