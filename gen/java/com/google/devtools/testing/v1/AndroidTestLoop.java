// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: google/devtools/testing/v1/test_execution.proto

package com.google.devtools.testing.v1;

/**
 * <pre>
 * A test of an Android Application with a Test Loop.
 * The intent &#92;&lt;intent-name&#92;&gt; will be implicitly added, since Games is the only
 * user of this api, for the time being.
 * </pre>
 *
 * Protobuf type {@code google.devtools.testing.v1.AndroidTestLoop}
 */
public final class AndroidTestLoop extends
    com.google.protobuf.GeneratedMessageV3 implements
    // @@protoc_insertion_point(message_implements:google.devtools.testing.v1.AndroidTestLoop)
    AndroidTestLoopOrBuilder {
private static final long serialVersionUID = 0L;
  // Use AndroidTestLoop.newBuilder() to construct.
  private AndroidTestLoop(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
    super(builder);
  }
  private AndroidTestLoop() {
    appPackageId_ = "";
    scenarios_ = emptyIntList();
    scenarioLabels_ = com.google.protobuf.LazyStringArrayList.EMPTY;
  }

  @java.lang.Override
  @SuppressWarnings({"unused"})
  protected java.lang.Object newInstance(
      UnusedPrivateParameter unused) {
    return new AndroidTestLoop();
  }

  @java.lang.Override
  public final com.google.protobuf.UnknownFieldSet
  getUnknownFields() {
    return this.unknownFields;
  }
  private AndroidTestLoop(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    this();
    if (extensionRegistry == null) {
      throw new java.lang.NullPointerException();
    }
    int mutable_bitField0_ = 0;
    com.google.protobuf.UnknownFieldSet.Builder unknownFields =
        com.google.protobuf.UnknownFieldSet.newBuilder();
    try {
      boolean done = false;
      while (!done) {
        int tag = input.readTag();
        switch (tag) {
          case 0:
            done = true;
            break;
          case 10: {
            com.google.devtools.testing.v1.FileReference.Builder subBuilder = null;
            if (appUnderTestCase_ == 1) {
              subBuilder = ((com.google.devtools.testing.v1.FileReference) appUnderTest_).toBuilder();
            }
            appUnderTest_ =
                input.readMessage(com.google.devtools.testing.v1.FileReference.parser(), extensionRegistry);
            if (subBuilder != null) {
              subBuilder.mergeFrom((com.google.devtools.testing.v1.FileReference) appUnderTest_);
              appUnderTest_ = subBuilder.buildPartial();
            }
            appUnderTestCase_ = 1;
            break;
          }
          case 18: {
            java.lang.String s = input.readStringRequireUtf8();

            appPackageId_ = s;
            break;
          }
          case 24: {
            if (!((mutable_bitField0_ & 0x00000001) != 0)) {
              scenarios_ = newIntList();
              mutable_bitField0_ |= 0x00000001;
            }
            scenarios_.addInt(input.readInt32());
            break;
          }
          case 26: {
            int length = input.readRawVarint32();
            int limit = input.pushLimit(length);
            if (!((mutable_bitField0_ & 0x00000001) != 0) && input.getBytesUntilLimit() > 0) {
              scenarios_ = newIntList();
              mutable_bitField0_ |= 0x00000001;
            }
            while (input.getBytesUntilLimit() > 0) {
              scenarios_.addInt(input.readInt32());
            }
            input.popLimit(limit);
            break;
          }
          case 34: {
            java.lang.String s = input.readStringRequireUtf8();
            if (!((mutable_bitField0_ & 0x00000002) != 0)) {
              scenarioLabels_ = new com.google.protobuf.LazyStringArrayList();
              mutable_bitField0_ |= 0x00000002;
            }
            scenarioLabels_.add(s);
            break;
          }
          case 42: {
            com.google.devtools.testing.v1.AppBundle.Builder subBuilder = null;
            if (appUnderTestCase_ == 5) {
              subBuilder = ((com.google.devtools.testing.v1.AppBundle) appUnderTest_).toBuilder();
            }
            appUnderTest_ =
                input.readMessage(com.google.devtools.testing.v1.AppBundle.parser(), extensionRegistry);
            if (subBuilder != null) {
              subBuilder.mergeFrom((com.google.devtools.testing.v1.AppBundle) appUnderTest_);
              appUnderTest_ = subBuilder.buildPartial();
            }
            appUnderTestCase_ = 5;
            break;
          }
          default: {
            if (!parseUnknownField(
                input, unknownFields, extensionRegistry, tag)) {
              done = true;
            }
            break;
          }
        }
      }
    } catch (com.google.protobuf.InvalidProtocolBufferException e) {
      throw e.setUnfinishedMessage(this);
    } catch (com.google.protobuf.UninitializedMessageException e) {
      throw e.asInvalidProtocolBufferException().setUnfinishedMessage(this);
    } catch (java.io.IOException e) {
      throw new com.google.protobuf.InvalidProtocolBufferException(
          e).setUnfinishedMessage(this);
    } finally {
      if (((mutable_bitField0_ & 0x00000001) != 0)) {
        scenarios_.makeImmutable(); // C
      }
      if (((mutable_bitField0_ & 0x00000002) != 0)) {
        scenarioLabels_ = scenarioLabels_.getUnmodifiableView();
      }
      this.unknownFields = unknownFields.build();
      makeExtensionsImmutable();
    }
  }
  public static final com.google.protobuf.Descriptors.Descriptor
      getDescriptor() {
    return com.google.devtools.testing.v1.TestExecutionProto.internal_static_google_devtools_testing_v1_AndroidTestLoop_descriptor;
  }

  @java.lang.Override
  protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internalGetFieldAccessorTable() {
    return com.google.devtools.testing.v1.TestExecutionProto.internal_static_google_devtools_testing_v1_AndroidTestLoop_fieldAccessorTable
        .ensureFieldAccessorsInitialized(
            com.google.devtools.testing.v1.AndroidTestLoop.class, com.google.devtools.testing.v1.AndroidTestLoop.Builder.class);
  }

  private int appUnderTestCase_ = 0;
  private java.lang.Object appUnderTest_;
  public enum AppUnderTestCase
      implements com.google.protobuf.Internal.EnumLite,
          com.google.protobuf.AbstractMessage.InternalOneOfEnum {
    APP_APK(1),
    APP_BUNDLE(5),
    APPUNDERTEST_NOT_SET(0);
    private final int value;
    private AppUnderTestCase(int value) {
      this.value = value;
    }
    /**
     * @param value The number of the enum to look for.
     * @return The enum associated with the given number.
     * @deprecated Use {@link #forNumber(int)} instead.
     */
    @java.lang.Deprecated
    public static AppUnderTestCase valueOf(int value) {
      return forNumber(value);
    }

    public static AppUnderTestCase forNumber(int value) {
      switch (value) {
        case 1: return APP_APK;
        case 5: return APP_BUNDLE;
        case 0: return APPUNDERTEST_NOT_SET;
        default: return null;
      }
    }
    public int getNumber() {
      return this.value;
    }
  };

  public AppUnderTestCase
  getAppUnderTestCase() {
    return AppUnderTestCase.forNumber(
        appUnderTestCase_);
  }

  public static final int APP_APK_FIELD_NUMBER = 1;
  /**
   * <pre>
   * The APK for the application under test.
   * </pre>
   *
   * <code>.google.devtools.testing.v1.FileReference app_apk = 1;</code>
   * @return Whether the appApk field is set.
   */
  @java.lang.Override
  public boolean hasAppApk() {
    return appUnderTestCase_ == 1;
  }
  /**
   * <pre>
   * The APK for the application under test.
   * </pre>
   *
   * <code>.google.devtools.testing.v1.FileReference app_apk = 1;</code>
   * @return The appApk.
   */
  @java.lang.Override
  public com.google.devtools.testing.v1.FileReference getAppApk() {
    if (appUnderTestCase_ == 1) {
       return (com.google.devtools.testing.v1.FileReference) appUnderTest_;
    }
    return com.google.devtools.testing.v1.FileReference.getDefaultInstance();
  }
  /**
   * <pre>
   * The APK for the application under test.
   * </pre>
   *
   * <code>.google.devtools.testing.v1.FileReference app_apk = 1;</code>
   */
  @java.lang.Override
  public com.google.devtools.testing.v1.FileReferenceOrBuilder getAppApkOrBuilder() {
    if (appUnderTestCase_ == 1) {
       return (com.google.devtools.testing.v1.FileReference) appUnderTest_;
    }
    return com.google.devtools.testing.v1.FileReference.getDefaultInstance();
  }

  public static final int APP_BUNDLE_FIELD_NUMBER = 5;
  /**
   * <pre>
   * A multi-apk app bundle for the application under test.
   * </pre>
   *
   * <code>.google.devtools.testing.v1.AppBundle app_bundle = 5;</code>
   * @return Whether the appBundle field is set.
   */
  @java.lang.Override
  public boolean hasAppBundle() {
    return appUnderTestCase_ == 5;
  }
  /**
   * <pre>
   * A multi-apk app bundle for the application under test.
   * </pre>
   *
   * <code>.google.devtools.testing.v1.AppBundle app_bundle = 5;</code>
   * @return The appBundle.
   */
  @java.lang.Override
  public com.google.devtools.testing.v1.AppBundle getAppBundle() {
    if (appUnderTestCase_ == 5) {
       return (com.google.devtools.testing.v1.AppBundle) appUnderTest_;
    }
    return com.google.devtools.testing.v1.AppBundle.getDefaultInstance();
  }
  /**
   * <pre>
   * A multi-apk app bundle for the application under test.
   * </pre>
   *
   * <code>.google.devtools.testing.v1.AppBundle app_bundle = 5;</code>
   */
  @java.lang.Override
  public com.google.devtools.testing.v1.AppBundleOrBuilder getAppBundleOrBuilder() {
    if (appUnderTestCase_ == 5) {
       return (com.google.devtools.testing.v1.AppBundle) appUnderTest_;
    }
    return com.google.devtools.testing.v1.AppBundle.getDefaultInstance();
  }

  public static final int APP_PACKAGE_ID_FIELD_NUMBER = 2;
  private volatile java.lang.Object appPackageId_;
  /**
   * <pre>
   * The java package for the application under test.
   * The default is determined by examining the application's manifest.
   * </pre>
   *
   * <code>string app_package_id = 2;</code>
   * @return The appPackageId.
   */
  @java.lang.Override
  public java.lang.String getAppPackageId() {
    java.lang.Object ref = appPackageId_;
    if (ref instanceof java.lang.String) {
      return (java.lang.String) ref;
    } else {
      com.google.protobuf.ByteString bs = 
          (com.google.protobuf.ByteString) ref;
      java.lang.String s = bs.toStringUtf8();
      appPackageId_ = s;
      return s;
    }
  }
  /**
   * <pre>
   * The java package for the application under test.
   * The default is determined by examining the application's manifest.
   * </pre>
   *
   * <code>string app_package_id = 2;</code>
   * @return The bytes for appPackageId.
   */
  @java.lang.Override
  public com.google.protobuf.ByteString
      getAppPackageIdBytes() {
    java.lang.Object ref = appPackageId_;
    if (ref instanceof java.lang.String) {
      com.google.protobuf.ByteString b = 
          com.google.protobuf.ByteString.copyFromUtf8(
              (java.lang.String) ref);
      appPackageId_ = b;
      return b;
    } else {
      return (com.google.protobuf.ByteString) ref;
    }
  }

  public static final int SCENARIOS_FIELD_NUMBER = 3;
  private com.google.protobuf.Internal.IntList scenarios_;
  /**
   * <pre>
   * The list of scenarios that should be run during the test.
   * The default is all test loops, derived from the application's
   * manifest.
   * </pre>
   *
   * <code>repeated int32 scenarios = 3;</code>
   * @return A list containing the scenarios.
   */
  @java.lang.Override
  public java.util.List<java.lang.Integer>
      getScenariosList() {
    return scenarios_;
  }
  /**
   * <pre>
   * The list of scenarios that should be run during the test.
   * The default is all test loops, derived from the application's
   * manifest.
   * </pre>
   *
   * <code>repeated int32 scenarios = 3;</code>
   * @return The count of scenarios.
   */
  public int getScenariosCount() {
    return scenarios_.size();
  }
  /**
   * <pre>
   * The list of scenarios that should be run during the test.
   * The default is all test loops, derived from the application's
   * manifest.
   * </pre>
   *
   * <code>repeated int32 scenarios = 3;</code>
   * @param index The index of the element to return.
   * @return The scenarios at the given index.
   */
  public int getScenarios(int index) {
    return scenarios_.getInt(index);
  }
  private int scenariosMemoizedSerializedSize = -1;

  public static final int SCENARIO_LABELS_FIELD_NUMBER = 4;
  private com.google.protobuf.LazyStringList scenarioLabels_;
  /**
   * <pre>
   * The list of scenario labels that should be run during the test.
   * The scenario labels should map to labels defined in the application's
   * manifest. For example, player_experience and
   * com.google.test.loops.player_experience add all of the loops labeled in the
   * manifest with the com.google.test.loops.player_experience name to the
   * execution.
   * Scenarios can also be specified in the scenarios field.
   * </pre>
   *
   * <code>repeated string scenario_labels = 4;</code>
   * @return A list containing the scenarioLabels.
   */
  public com.google.protobuf.ProtocolStringList
      getScenarioLabelsList() {
    return scenarioLabels_;
  }
  /**
   * <pre>
   * The list of scenario labels that should be run during the test.
   * The scenario labels should map to labels defined in the application's
   * manifest. For example, player_experience and
   * com.google.test.loops.player_experience add all of the loops labeled in the
   * manifest with the com.google.test.loops.player_experience name to the
   * execution.
   * Scenarios can also be specified in the scenarios field.
   * </pre>
   *
   * <code>repeated string scenario_labels = 4;</code>
   * @return The count of scenarioLabels.
   */
  public int getScenarioLabelsCount() {
    return scenarioLabels_.size();
  }
  /**
   * <pre>
   * The list of scenario labels that should be run during the test.
   * The scenario labels should map to labels defined in the application's
   * manifest. For example, player_experience and
   * com.google.test.loops.player_experience add all of the loops labeled in the
   * manifest with the com.google.test.loops.player_experience name to the
   * execution.
   * Scenarios can also be specified in the scenarios field.
   * </pre>
   *
   * <code>repeated string scenario_labels = 4;</code>
   * @param index The index of the element to return.
   * @return The scenarioLabels at the given index.
   */
  public java.lang.String getScenarioLabels(int index) {
    return scenarioLabels_.get(index);
  }
  /**
   * <pre>
   * The list of scenario labels that should be run during the test.
   * The scenario labels should map to labels defined in the application's
   * manifest. For example, player_experience and
   * com.google.test.loops.player_experience add all of the loops labeled in the
   * manifest with the com.google.test.loops.player_experience name to the
   * execution.
   * Scenarios can also be specified in the scenarios field.
   * </pre>
   *
   * <code>repeated string scenario_labels = 4;</code>
   * @param index The index of the value to return.
   * @return The bytes of the scenarioLabels at the given index.
   */
  public com.google.protobuf.ByteString
      getScenarioLabelsBytes(int index) {
    return scenarioLabels_.getByteString(index);
  }

  private byte memoizedIsInitialized = -1;
  @java.lang.Override
  public final boolean isInitialized() {
    byte isInitialized = memoizedIsInitialized;
    if (isInitialized == 1) return true;
    if (isInitialized == 0) return false;

    memoizedIsInitialized = 1;
    return true;
  }

  @java.lang.Override
  public void writeTo(com.google.protobuf.CodedOutputStream output)
                      throws java.io.IOException {
    getSerializedSize();
    if (appUnderTestCase_ == 1) {
      output.writeMessage(1, (com.google.devtools.testing.v1.FileReference) appUnderTest_);
    }
    if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(appPackageId_)) {
      com.google.protobuf.GeneratedMessageV3.writeString(output, 2, appPackageId_);
    }
    if (getScenariosList().size() > 0) {
      output.writeUInt32NoTag(26);
      output.writeUInt32NoTag(scenariosMemoizedSerializedSize);
    }
    for (int i = 0; i < scenarios_.size(); i++) {
      output.writeInt32NoTag(scenarios_.getInt(i));
    }
    for (int i = 0; i < scenarioLabels_.size(); i++) {
      com.google.protobuf.GeneratedMessageV3.writeString(output, 4, scenarioLabels_.getRaw(i));
    }
    if (appUnderTestCase_ == 5) {
      output.writeMessage(5, (com.google.devtools.testing.v1.AppBundle) appUnderTest_);
    }
    unknownFields.writeTo(output);
  }

  @java.lang.Override
  public int getSerializedSize() {
    int size = memoizedSize;
    if (size != -1) return size;

    size = 0;
    if (appUnderTestCase_ == 1) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(1, (com.google.devtools.testing.v1.FileReference) appUnderTest_);
    }
    if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(appPackageId_)) {
      size += com.google.protobuf.GeneratedMessageV3.computeStringSize(2, appPackageId_);
    }
    {
      int dataSize = 0;
      for (int i = 0; i < scenarios_.size(); i++) {
        dataSize += com.google.protobuf.CodedOutputStream
          .computeInt32SizeNoTag(scenarios_.getInt(i));
      }
      size += dataSize;
      if (!getScenariosList().isEmpty()) {
        size += 1;
        size += com.google.protobuf.CodedOutputStream
            .computeInt32SizeNoTag(dataSize);
      }
      scenariosMemoizedSerializedSize = dataSize;
    }
    {
      int dataSize = 0;
      for (int i = 0; i < scenarioLabels_.size(); i++) {
        dataSize += computeStringSizeNoTag(scenarioLabels_.getRaw(i));
      }
      size += dataSize;
      size += 1 * getScenarioLabelsList().size();
    }
    if (appUnderTestCase_ == 5) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(5, (com.google.devtools.testing.v1.AppBundle) appUnderTest_);
    }
    size += unknownFields.getSerializedSize();
    memoizedSize = size;
    return size;
  }

  @java.lang.Override
  public boolean equals(final java.lang.Object obj) {
    if (obj == this) {
     return true;
    }
    if (!(obj instanceof com.google.devtools.testing.v1.AndroidTestLoop)) {
      return super.equals(obj);
    }
    com.google.devtools.testing.v1.AndroidTestLoop other = (com.google.devtools.testing.v1.AndroidTestLoop) obj;

    if (!getAppPackageId()
        .equals(other.getAppPackageId())) return false;
    if (!getScenariosList()
        .equals(other.getScenariosList())) return false;
    if (!getScenarioLabelsList()
        .equals(other.getScenarioLabelsList())) return false;
    if (!getAppUnderTestCase().equals(other.getAppUnderTestCase())) return false;
    switch (appUnderTestCase_) {
      case 1:
        if (!getAppApk()
            .equals(other.getAppApk())) return false;
        break;
      case 5:
        if (!getAppBundle()
            .equals(other.getAppBundle())) return false;
        break;
      case 0:
      default:
    }
    if (!unknownFields.equals(other.unknownFields)) return false;
    return true;
  }

  @java.lang.Override
  public int hashCode() {
    if (memoizedHashCode != 0) {
      return memoizedHashCode;
    }
    int hash = 41;
    hash = (19 * hash) + getDescriptor().hashCode();
    hash = (37 * hash) + APP_PACKAGE_ID_FIELD_NUMBER;
    hash = (53 * hash) + getAppPackageId().hashCode();
    if (getScenariosCount() > 0) {
      hash = (37 * hash) + SCENARIOS_FIELD_NUMBER;
      hash = (53 * hash) + getScenariosList().hashCode();
    }
    if (getScenarioLabelsCount() > 0) {
      hash = (37 * hash) + SCENARIO_LABELS_FIELD_NUMBER;
      hash = (53 * hash) + getScenarioLabelsList().hashCode();
    }
    switch (appUnderTestCase_) {
      case 1:
        hash = (37 * hash) + APP_APK_FIELD_NUMBER;
        hash = (53 * hash) + getAppApk().hashCode();
        break;
      case 5:
        hash = (37 * hash) + APP_BUNDLE_FIELD_NUMBER;
        hash = (53 * hash) + getAppBundle().hashCode();
        break;
      case 0:
      default:
    }
    hash = (29 * hash) + unknownFields.hashCode();
    memoizedHashCode = hash;
    return hash;
  }

  public static com.google.devtools.testing.v1.AndroidTestLoop parseFrom(
      java.nio.ByteBuffer data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static com.google.devtools.testing.v1.AndroidTestLoop parseFrom(
      java.nio.ByteBuffer data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static com.google.devtools.testing.v1.AndroidTestLoop parseFrom(
      com.google.protobuf.ByteString data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static com.google.devtools.testing.v1.AndroidTestLoop parseFrom(
      com.google.protobuf.ByteString data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static com.google.devtools.testing.v1.AndroidTestLoop parseFrom(byte[] data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static com.google.devtools.testing.v1.AndroidTestLoop parseFrom(
      byte[] data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static com.google.devtools.testing.v1.AndroidTestLoop parseFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input);
  }
  public static com.google.devtools.testing.v1.AndroidTestLoop parseFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input, extensionRegistry);
  }
  public static com.google.devtools.testing.v1.AndroidTestLoop parseDelimitedFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseDelimitedWithIOException(PARSER, input);
  }
  public static com.google.devtools.testing.v1.AndroidTestLoop parseDelimitedFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
  }
  public static com.google.devtools.testing.v1.AndroidTestLoop parseFrom(
      com.google.protobuf.CodedInputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input);
  }
  public static com.google.devtools.testing.v1.AndroidTestLoop parseFrom(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input, extensionRegistry);
  }

  @java.lang.Override
  public Builder newBuilderForType() { return newBuilder(); }
  public static Builder newBuilder() {
    return DEFAULT_INSTANCE.toBuilder();
  }
  public static Builder newBuilder(com.google.devtools.testing.v1.AndroidTestLoop prototype) {
    return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
  }
  @java.lang.Override
  public Builder toBuilder() {
    return this == DEFAULT_INSTANCE
        ? new Builder() : new Builder().mergeFrom(this);
  }

  @java.lang.Override
  protected Builder newBuilderForType(
      com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
    Builder builder = new Builder(parent);
    return builder;
  }
  /**
   * <pre>
   * A test of an Android Application with a Test Loop.
   * The intent &#92;&lt;intent-name&#92;&gt; will be implicitly added, since Games is the only
   * user of this api, for the time being.
   * </pre>
   *
   * Protobuf type {@code google.devtools.testing.v1.AndroidTestLoop}
   */
  public static final class Builder extends
      com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
      // @@protoc_insertion_point(builder_implements:google.devtools.testing.v1.AndroidTestLoop)
      com.google.devtools.testing.v1.AndroidTestLoopOrBuilder {
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.google.devtools.testing.v1.TestExecutionProto.internal_static_google_devtools_testing_v1_AndroidTestLoop_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.google.devtools.testing.v1.TestExecutionProto.internal_static_google_devtools_testing_v1_AndroidTestLoop_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.google.devtools.testing.v1.AndroidTestLoop.class, com.google.devtools.testing.v1.AndroidTestLoop.Builder.class);
    }

    // Construct using com.google.devtools.testing.v1.AndroidTestLoop.newBuilder()
    private Builder() {
      maybeForceBuilderInitialization();
    }

    private Builder(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      super(parent);
      maybeForceBuilderInitialization();
    }
    private void maybeForceBuilderInitialization() {
      if (com.google.protobuf.GeneratedMessageV3
              .alwaysUseFieldBuilders) {
      }
    }
    @java.lang.Override
    public Builder clear() {
      super.clear();
      appPackageId_ = "";

      scenarios_ = emptyIntList();
      bitField0_ = (bitField0_ & ~0x00000001);
      scenarioLabels_ = com.google.protobuf.LazyStringArrayList.EMPTY;
      bitField0_ = (bitField0_ & ~0x00000002);
      appUnderTestCase_ = 0;
      appUnderTest_ = null;
      return this;
    }

    @java.lang.Override
    public com.google.protobuf.Descriptors.Descriptor
        getDescriptorForType() {
      return com.google.devtools.testing.v1.TestExecutionProto.internal_static_google_devtools_testing_v1_AndroidTestLoop_descriptor;
    }

    @java.lang.Override
    public com.google.devtools.testing.v1.AndroidTestLoop getDefaultInstanceForType() {
      return com.google.devtools.testing.v1.AndroidTestLoop.getDefaultInstance();
    }

    @java.lang.Override
    public com.google.devtools.testing.v1.AndroidTestLoop build() {
      com.google.devtools.testing.v1.AndroidTestLoop result = buildPartial();
      if (!result.isInitialized()) {
        throw newUninitializedMessageException(result);
      }
      return result;
    }

    @java.lang.Override
    public com.google.devtools.testing.v1.AndroidTestLoop buildPartial() {
      com.google.devtools.testing.v1.AndroidTestLoop result = new com.google.devtools.testing.v1.AndroidTestLoop(this);
      int from_bitField0_ = bitField0_;
      if (appUnderTestCase_ == 1) {
        if (appApkBuilder_ == null) {
          result.appUnderTest_ = appUnderTest_;
        } else {
          result.appUnderTest_ = appApkBuilder_.build();
        }
      }
      if (appUnderTestCase_ == 5) {
        if (appBundleBuilder_ == null) {
          result.appUnderTest_ = appUnderTest_;
        } else {
          result.appUnderTest_ = appBundleBuilder_.build();
        }
      }
      result.appPackageId_ = appPackageId_;
      if (((bitField0_ & 0x00000001) != 0)) {
        scenarios_.makeImmutable();
        bitField0_ = (bitField0_ & ~0x00000001);
      }
      result.scenarios_ = scenarios_;
      if (((bitField0_ & 0x00000002) != 0)) {
        scenarioLabels_ = scenarioLabels_.getUnmodifiableView();
        bitField0_ = (bitField0_ & ~0x00000002);
      }
      result.scenarioLabels_ = scenarioLabels_;
      result.appUnderTestCase_ = appUnderTestCase_;
      onBuilt();
      return result;
    }

    @java.lang.Override
    public Builder clone() {
      return super.clone();
    }
    @java.lang.Override
    public Builder setField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        java.lang.Object value) {
      return super.setField(field, value);
    }
    @java.lang.Override
    public Builder clearField(
        com.google.protobuf.Descriptors.FieldDescriptor field) {
      return super.clearField(field);
    }
    @java.lang.Override
    public Builder clearOneof(
        com.google.protobuf.Descriptors.OneofDescriptor oneof) {
      return super.clearOneof(oneof);
    }
    @java.lang.Override
    public Builder setRepeatedField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        int index, java.lang.Object value) {
      return super.setRepeatedField(field, index, value);
    }
    @java.lang.Override
    public Builder addRepeatedField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        java.lang.Object value) {
      return super.addRepeatedField(field, value);
    }
    @java.lang.Override
    public Builder mergeFrom(com.google.protobuf.Message other) {
      if (other instanceof com.google.devtools.testing.v1.AndroidTestLoop) {
        return mergeFrom((com.google.devtools.testing.v1.AndroidTestLoop)other);
      } else {
        super.mergeFrom(other);
        return this;
      }
    }

    public Builder mergeFrom(com.google.devtools.testing.v1.AndroidTestLoop other) {
      if (other == com.google.devtools.testing.v1.AndroidTestLoop.getDefaultInstance()) return this;
      if (!other.getAppPackageId().isEmpty()) {
        appPackageId_ = other.appPackageId_;
        onChanged();
      }
      if (!other.scenarios_.isEmpty()) {
        if (scenarios_.isEmpty()) {
          scenarios_ = other.scenarios_;
          bitField0_ = (bitField0_ & ~0x00000001);
        } else {
          ensureScenariosIsMutable();
          scenarios_.addAll(other.scenarios_);
        }
        onChanged();
      }
      if (!other.scenarioLabels_.isEmpty()) {
        if (scenarioLabels_.isEmpty()) {
          scenarioLabels_ = other.scenarioLabels_;
          bitField0_ = (bitField0_ & ~0x00000002);
        } else {
          ensureScenarioLabelsIsMutable();
          scenarioLabels_.addAll(other.scenarioLabels_);
        }
        onChanged();
      }
      switch (other.getAppUnderTestCase()) {
        case APP_APK: {
          mergeAppApk(other.getAppApk());
          break;
        }
        case APP_BUNDLE: {
          mergeAppBundle(other.getAppBundle());
          break;
        }
        case APPUNDERTEST_NOT_SET: {
          break;
        }
      }
      this.mergeUnknownFields(other.unknownFields);
      onChanged();
      return this;
    }

    @java.lang.Override
    public final boolean isInitialized() {
      return true;
    }

    @java.lang.Override
    public Builder mergeFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      com.google.devtools.testing.v1.AndroidTestLoop parsedMessage = null;
      try {
        parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        parsedMessage = (com.google.devtools.testing.v1.AndroidTestLoop) e.getUnfinishedMessage();
        throw e.unwrapIOException();
      } finally {
        if (parsedMessage != null) {
          mergeFrom(parsedMessage);
        }
      }
      return this;
    }
    private int appUnderTestCase_ = 0;
    private java.lang.Object appUnderTest_;
    public AppUnderTestCase
        getAppUnderTestCase() {
      return AppUnderTestCase.forNumber(
          appUnderTestCase_);
    }

    public Builder clearAppUnderTest() {
      appUnderTestCase_ = 0;
      appUnderTest_ = null;
      onChanged();
      return this;
    }

    private int bitField0_;

    private com.google.protobuf.SingleFieldBuilderV3<
        com.google.devtools.testing.v1.FileReference, com.google.devtools.testing.v1.FileReference.Builder, com.google.devtools.testing.v1.FileReferenceOrBuilder> appApkBuilder_;
    /**
     * <pre>
     * The APK for the application under test.
     * </pre>
     *
     * <code>.google.devtools.testing.v1.FileReference app_apk = 1;</code>
     * @return Whether the appApk field is set.
     */
    @java.lang.Override
    public boolean hasAppApk() {
      return appUnderTestCase_ == 1;
    }
    /**
     * <pre>
     * The APK for the application under test.
     * </pre>
     *
     * <code>.google.devtools.testing.v1.FileReference app_apk = 1;</code>
     * @return The appApk.
     */
    @java.lang.Override
    public com.google.devtools.testing.v1.FileReference getAppApk() {
      if (appApkBuilder_ == null) {
        if (appUnderTestCase_ == 1) {
          return (com.google.devtools.testing.v1.FileReference) appUnderTest_;
        }
        return com.google.devtools.testing.v1.FileReference.getDefaultInstance();
      } else {
        if (appUnderTestCase_ == 1) {
          return appApkBuilder_.getMessage();
        }
        return com.google.devtools.testing.v1.FileReference.getDefaultInstance();
      }
    }
    /**
     * <pre>
     * The APK for the application under test.
     * </pre>
     *
     * <code>.google.devtools.testing.v1.FileReference app_apk = 1;</code>
     */
    public Builder setAppApk(com.google.devtools.testing.v1.FileReference value) {
      if (appApkBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        appUnderTest_ = value;
        onChanged();
      } else {
        appApkBuilder_.setMessage(value);
      }
      appUnderTestCase_ = 1;
      return this;
    }
    /**
     * <pre>
     * The APK for the application under test.
     * </pre>
     *
     * <code>.google.devtools.testing.v1.FileReference app_apk = 1;</code>
     */
    public Builder setAppApk(
        com.google.devtools.testing.v1.FileReference.Builder builderForValue) {
      if (appApkBuilder_ == null) {
        appUnderTest_ = builderForValue.build();
        onChanged();
      } else {
        appApkBuilder_.setMessage(builderForValue.build());
      }
      appUnderTestCase_ = 1;
      return this;
    }
    /**
     * <pre>
     * The APK for the application under test.
     * </pre>
     *
     * <code>.google.devtools.testing.v1.FileReference app_apk = 1;</code>
     */
    public Builder mergeAppApk(com.google.devtools.testing.v1.FileReference value) {
      if (appApkBuilder_ == null) {
        if (appUnderTestCase_ == 1 &&
            appUnderTest_ != com.google.devtools.testing.v1.FileReference.getDefaultInstance()) {
          appUnderTest_ = com.google.devtools.testing.v1.FileReference.newBuilder((com.google.devtools.testing.v1.FileReference) appUnderTest_)
              .mergeFrom(value).buildPartial();
        } else {
          appUnderTest_ = value;
        }
        onChanged();
      } else {
        if (appUnderTestCase_ == 1) {
          appApkBuilder_.mergeFrom(value);
        } else {
          appApkBuilder_.setMessage(value);
        }
      }
      appUnderTestCase_ = 1;
      return this;
    }
    /**
     * <pre>
     * The APK for the application under test.
     * </pre>
     *
     * <code>.google.devtools.testing.v1.FileReference app_apk = 1;</code>
     */
    public Builder clearAppApk() {
      if (appApkBuilder_ == null) {
        if (appUnderTestCase_ == 1) {
          appUnderTestCase_ = 0;
          appUnderTest_ = null;
          onChanged();
        }
      } else {
        if (appUnderTestCase_ == 1) {
          appUnderTestCase_ = 0;
          appUnderTest_ = null;
        }
        appApkBuilder_.clear();
      }
      return this;
    }
    /**
     * <pre>
     * The APK for the application under test.
     * </pre>
     *
     * <code>.google.devtools.testing.v1.FileReference app_apk = 1;</code>
     */
    public com.google.devtools.testing.v1.FileReference.Builder getAppApkBuilder() {
      return getAppApkFieldBuilder().getBuilder();
    }
    /**
     * <pre>
     * The APK for the application under test.
     * </pre>
     *
     * <code>.google.devtools.testing.v1.FileReference app_apk = 1;</code>
     */
    @java.lang.Override
    public com.google.devtools.testing.v1.FileReferenceOrBuilder getAppApkOrBuilder() {
      if ((appUnderTestCase_ == 1) && (appApkBuilder_ != null)) {
        return appApkBuilder_.getMessageOrBuilder();
      } else {
        if (appUnderTestCase_ == 1) {
          return (com.google.devtools.testing.v1.FileReference) appUnderTest_;
        }
        return com.google.devtools.testing.v1.FileReference.getDefaultInstance();
      }
    }
    /**
     * <pre>
     * The APK for the application under test.
     * </pre>
     *
     * <code>.google.devtools.testing.v1.FileReference app_apk = 1;</code>
     */
    private com.google.protobuf.SingleFieldBuilderV3<
        com.google.devtools.testing.v1.FileReference, com.google.devtools.testing.v1.FileReference.Builder, com.google.devtools.testing.v1.FileReferenceOrBuilder> 
        getAppApkFieldBuilder() {
      if (appApkBuilder_ == null) {
        if (!(appUnderTestCase_ == 1)) {
          appUnderTest_ = com.google.devtools.testing.v1.FileReference.getDefaultInstance();
        }
        appApkBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
            com.google.devtools.testing.v1.FileReference, com.google.devtools.testing.v1.FileReference.Builder, com.google.devtools.testing.v1.FileReferenceOrBuilder>(
                (com.google.devtools.testing.v1.FileReference) appUnderTest_,
                getParentForChildren(),
                isClean());
        appUnderTest_ = null;
      }
      appUnderTestCase_ = 1;
      onChanged();;
      return appApkBuilder_;
    }

    private com.google.protobuf.SingleFieldBuilderV3<
        com.google.devtools.testing.v1.AppBundle, com.google.devtools.testing.v1.AppBundle.Builder, com.google.devtools.testing.v1.AppBundleOrBuilder> appBundleBuilder_;
    /**
     * <pre>
     * A multi-apk app bundle for the application under test.
     * </pre>
     *
     * <code>.google.devtools.testing.v1.AppBundle app_bundle = 5;</code>
     * @return Whether the appBundle field is set.
     */
    @java.lang.Override
    public boolean hasAppBundle() {
      return appUnderTestCase_ == 5;
    }
    /**
     * <pre>
     * A multi-apk app bundle for the application under test.
     * </pre>
     *
     * <code>.google.devtools.testing.v1.AppBundle app_bundle = 5;</code>
     * @return The appBundle.
     */
    @java.lang.Override
    public com.google.devtools.testing.v1.AppBundle getAppBundle() {
      if (appBundleBuilder_ == null) {
        if (appUnderTestCase_ == 5) {
          return (com.google.devtools.testing.v1.AppBundle) appUnderTest_;
        }
        return com.google.devtools.testing.v1.AppBundle.getDefaultInstance();
      } else {
        if (appUnderTestCase_ == 5) {
          return appBundleBuilder_.getMessage();
        }
        return com.google.devtools.testing.v1.AppBundle.getDefaultInstance();
      }
    }
    /**
     * <pre>
     * A multi-apk app bundle for the application under test.
     * </pre>
     *
     * <code>.google.devtools.testing.v1.AppBundle app_bundle = 5;</code>
     */
    public Builder setAppBundle(com.google.devtools.testing.v1.AppBundle value) {
      if (appBundleBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        appUnderTest_ = value;
        onChanged();
      } else {
        appBundleBuilder_.setMessage(value);
      }
      appUnderTestCase_ = 5;
      return this;
    }
    /**
     * <pre>
     * A multi-apk app bundle for the application under test.
     * </pre>
     *
     * <code>.google.devtools.testing.v1.AppBundle app_bundle = 5;</code>
     */
    public Builder setAppBundle(
        com.google.devtools.testing.v1.AppBundle.Builder builderForValue) {
      if (appBundleBuilder_ == null) {
        appUnderTest_ = builderForValue.build();
        onChanged();
      } else {
        appBundleBuilder_.setMessage(builderForValue.build());
      }
      appUnderTestCase_ = 5;
      return this;
    }
    /**
     * <pre>
     * A multi-apk app bundle for the application under test.
     * </pre>
     *
     * <code>.google.devtools.testing.v1.AppBundle app_bundle = 5;</code>
     */
    public Builder mergeAppBundle(com.google.devtools.testing.v1.AppBundle value) {
      if (appBundleBuilder_ == null) {
        if (appUnderTestCase_ == 5 &&
            appUnderTest_ != com.google.devtools.testing.v1.AppBundle.getDefaultInstance()) {
          appUnderTest_ = com.google.devtools.testing.v1.AppBundle.newBuilder((com.google.devtools.testing.v1.AppBundle) appUnderTest_)
              .mergeFrom(value).buildPartial();
        } else {
          appUnderTest_ = value;
        }
        onChanged();
      } else {
        if (appUnderTestCase_ == 5) {
          appBundleBuilder_.mergeFrom(value);
        } else {
          appBundleBuilder_.setMessage(value);
        }
      }
      appUnderTestCase_ = 5;
      return this;
    }
    /**
     * <pre>
     * A multi-apk app bundle for the application under test.
     * </pre>
     *
     * <code>.google.devtools.testing.v1.AppBundle app_bundle = 5;</code>
     */
    public Builder clearAppBundle() {
      if (appBundleBuilder_ == null) {
        if (appUnderTestCase_ == 5) {
          appUnderTestCase_ = 0;
          appUnderTest_ = null;
          onChanged();
        }
      } else {
        if (appUnderTestCase_ == 5) {
          appUnderTestCase_ = 0;
          appUnderTest_ = null;
        }
        appBundleBuilder_.clear();
      }
      return this;
    }
    /**
     * <pre>
     * A multi-apk app bundle for the application under test.
     * </pre>
     *
     * <code>.google.devtools.testing.v1.AppBundle app_bundle = 5;</code>
     */
    public com.google.devtools.testing.v1.AppBundle.Builder getAppBundleBuilder() {
      return getAppBundleFieldBuilder().getBuilder();
    }
    /**
     * <pre>
     * A multi-apk app bundle for the application under test.
     * </pre>
     *
     * <code>.google.devtools.testing.v1.AppBundle app_bundle = 5;</code>
     */
    @java.lang.Override
    public com.google.devtools.testing.v1.AppBundleOrBuilder getAppBundleOrBuilder() {
      if ((appUnderTestCase_ == 5) && (appBundleBuilder_ != null)) {
        return appBundleBuilder_.getMessageOrBuilder();
      } else {
        if (appUnderTestCase_ == 5) {
          return (com.google.devtools.testing.v1.AppBundle) appUnderTest_;
        }
        return com.google.devtools.testing.v1.AppBundle.getDefaultInstance();
      }
    }
    /**
     * <pre>
     * A multi-apk app bundle for the application under test.
     * </pre>
     *
     * <code>.google.devtools.testing.v1.AppBundle app_bundle = 5;</code>
     */
    private com.google.protobuf.SingleFieldBuilderV3<
        com.google.devtools.testing.v1.AppBundle, com.google.devtools.testing.v1.AppBundle.Builder, com.google.devtools.testing.v1.AppBundleOrBuilder> 
        getAppBundleFieldBuilder() {
      if (appBundleBuilder_ == null) {
        if (!(appUnderTestCase_ == 5)) {
          appUnderTest_ = com.google.devtools.testing.v1.AppBundle.getDefaultInstance();
        }
        appBundleBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
            com.google.devtools.testing.v1.AppBundle, com.google.devtools.testing.v1.AppBundle.Builder, com.google.devtools.testing.v1.AppBundleOrBuilder>(
                (com.google.devtools.testing.v1.AppBundle) appUnderTest_,
                getParentForChildren(),
                isClean());
        appUnderTest_ = null;
      }
      appUnderTestCase_ = 5;
      onChanged();;
      return appBundleBuilder_;
    }

    private java.lang.Object appPackageId_ = "";
    /**
     * <pre>
     * The java package for the application under test.
     * The default is determined by examining the application's manifest.
     * </pre>
     *
     * <code>string app_package_id = 2;</code>
     * @return The appPackageId.
     */
    public java.lang.String getAppPackageId() {
      java.lang.Object ref = appPackageId_;
      if (!(ref instanceof java.lang.String)) {
        com.google.protobuf.ByteString bs =
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        appPackageId_ = s;
        return s;
      } else {
        return (java.lang.String) ref;
      }
    }
    /**
     * <pre>
     * The java package for the application under test.
     * The default is determined by examining the application's manifest.
     * </pre>
     *
     * <code>string app_package_id = 2;</code>
     * @return The bytes for appPackageId.
     */
    public com.google.protobuf.ByteString
        getAppPackageIdBytes() {
      java.lang.Object ref = appPackageId_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        appPackageId_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }
    /**
     * <pre>
     * The java package for the application under test.
     * The default is determined by examining the application's manifest.
     * </pre>
     *
     * <code>string app_package_id = 2;</code>
     * @param value The appPackageId to set.
     * @return This builder for chaining.
     */
    public Builder setAppPackageId(
        java.lang.String value) {
      if (value == null) {
    throw new NullPointerException();
  }
  
      appPackageId_ = value;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * The java package for the application under test.
     * The default is determined by examining the application's manifest.
     * </pre>
     *
     * <code>string app_package_id = 2;</code>
     * @return This builder for chaining.
     */
    public Builder clearAppPackageId() {
      
      appPackageId_ = getDefaultInstance().getAppPackageId();
      onChanged();
      return this;
    }
    /**
     * <pre>
     * The java package for the application under test.
     * The default is determined by examining the application's manifest.
     * </pre>
     *
     * <code>string app_package_id = 2;</code>
     * @param value The bytes for appPackageId to set.
     * @return This builder for chaining.
     */
    public Builder setAppPackageIdBytes(
        com.google.protobuf.ByteString value) {
      if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
      
      appPackageId_ = value;
      onChanged();
      return this;
    }

    private com.google.protobuf.Internal.IntList scenarios_ = emptyIntList();
    private void ensureScenariosIsMutable() {
      if (!((bitField0_ & 0x00000001) != 0)) {
        scenarios_ = mutableCopy(scenarios_);
        bitField0_ |= 0x00000001;
       }
    }
    /**
     * <pre>
     * The list of scenarios that should be run during the test.
     * The default is all test loops, derived from the application's
     * manifest.
     * </pre>
     *
     * <code>repeated int32 scenarios = 3;</code>
     * @return A list containing the scenarios.
     */
    public java.util.List<java.lang.Integer>
        getScenariosList() {
      return ((bitField0_ & 0x00000001) != 0) ?
               java.util.Collections.unmodifiableList(scenarios_) : scenarios_;
    }
    /**
     * <pre>
     * The list of scenarios that should be run during the test.
     * The default is all test loops, derived from the application's
     * manifest.
     * </pre>
     *
     * <code>repeated int32 scenarios = 3;</code>
     * @return The count of scenarios.
     */
    public int getScenariosCount() {
      return scenarios_.size();
    }
    /**
     * <pre>
     * The list of scenarios that should be run during the test.
     * The default is all test loops, derived from the application's
     * manifest.
     * </pre>
     *
     * <code>repeated int32 scenarios = 3;</code>
     * @param index The index of the element to return.
     * @return The scenarios at the given index.
     */
    public int getScenarios(int index) {
      return scenarios_.getInt(index);
    }
    /**
     * <pre>
     * The list of scenarios that should be run during the test.
     * The default is all test loops, derived from the application's
     * manifest.
     * </pre>
     *
     * <code>repeated int32 scenarios = 3;</code>
     * @param index The index to set the value at.
     * @param value The scenarios to set.
     * @return This builder for chaining.
     */
    public Builder setScenarios(
        int index, int value) {
      ensureScenariosIsMutable();
      scenarios_.setInt(index, value);
      onChanged();
      return this;
    }
    /**
     * <pre>
     * The list of scenarios that should be run during the test.
     * The default is all test loops, derived from the application's
     * manifest.
     * </pre>
     *
     * <code>repeated int32 scenarios = 3;</code>
     * @param value The scenarios to add.
     * @return This builder for chaining.
     */
    public Builder addScenarios(int value) {
      ensureScenariosIsMutable();
      scenarios_.addInt(value);
      onChanged();
      return this;
    }
    /**
     * <pre>
     * The list of scenarios that should be run during the test.
     * The default is all test loops, derived from the application's
     * manifest.
     * </pre>
     *
     * <code>repeated int32 scenarios = 3;</code>
     * @param values The scenarios to add.
     * @return This builder for chaining.
     */
    public Builder addAllScenarios(
        java.lang.Iterable<? extends java.lang.Integer> values) {
      ensureScenariosIsMutable();
      com.google.protobuf.AbstractMessageLite.Builder.addAll(
          values, scenarios_);
      onChanged();
      return this;
    }
    /**
     * <pre>
     * The list of scenarios that should be run during the test.
     * The default is all test loops, derived from the application's
     * manifest.
     * </pre>
     *
     * <code>repeated int32 scenarios = 3;</code>
     * @return This builder for chaining.
     */
    public Builder clearScenarios() {
      scenarios_ = emptyIntList();
      bitField0_ = (bitField0_ & ~0x00000001);
      onChanged();
      return this;
    }

    private com.google.protobuf.LazyStringList scenarioLabels_ = com.google.protobuf.LazyStringArrayList.EMPTY;
    private void ensureScenarioLabelsIsMutable() {
      if (!((bitField0_ & 0x00000002) != 0)) {
        scenarioLabels_ = new com.google.protobuf.LazyStringArrayList(scenarioLabels_);
        bitField0_ |= 0x00000002;
       }
    }
    /**
     * <pre>
     * The list of scenario labels that should be run during the test.
     * The scenario labels should map to labels defined in the application's
     * manifest. For example, player_experience and
     * com.google.test.loops.player_experience add all of the loops labeled in the
     * manifest with the com.google.test.loops.player_experience name to the
     * execution.
     * Scenarios can also be specified in the scenarios field.
     * </pre>
     *
     * <code>repeated string scenario_labels = 4;</code>
     * @return A list containing the scenarioLabels.
     */
    public com.google.protobuf.ProtocolStringList
        getScenarioLabelsList() {
      return scenarioLabels_.getUnmodifiableView();
    }
    /**
     * <pre>
     * The list of scenario labels that should be run during the test.
     * The scenario labels should map to labels defined in the application's
     * manifest. For example, player_experience and
     * com.google.test.loops.player_experience add all of the loops labeled in the
     * manifest with the com.google.test.loops.player_experience name to the
     * execution.
     * Scenarios can also be specified in the scenarios field.
     * </pre>
     *
     * <code>repeated string scenario_labels = 4;</code>
     * @return The count of scenarioLabels.
     */
    public int getScenarioLabelsCount() {
      return scenarioLabels_.size();
    }
    /**
     * <pre>
     * The list of scenario labels that should be run during the test.
     * The scenario labels should map to labels defined in the application's
     * manifest. For example, player_experience and
     * com.google.test.loops.player_experience add all of the loops labeled in the
     * manifest with the com.google.test.loops.player_experience name to the
     * execution.
     * Scenarios can also be specified in the scenarios field.
     * </pre>
     *
     * <code>repeated string scenario_labels = 4;</code>
     * @param index The index of the element to return.
     * @return The scenarioLabels at the given index.
     */
    public java.lang.String getScenarioLabels(int index) {
      return scenarioLabels_.get(index);
    }
    /**
     * <pre>
     * The list of scenario labels that should be run during the test.
     * The scenario labels should map to labels defined in the application's
     * manifest. For example, player_experience and
     * com.google.test.loops.player_experience add all of the loops labeled in the
     * manifest with the com.google.test.loops.player_experience name to the
     * execution.
     * Scenarios can also be specified in the scenarios field.
     * </pre>
     *
     * <code>repeated string scenario_labels = 4;</code>
     * @param index The index of the value to return.
     * @return The bytes of the scenarioLabels at the given index.
     */
    public com.google.protobuf.ByteString
        getScenarioLabelsBytes(int index) {
      return scenarioLabels_.getByteString(index);
    }
    /**
     * <pre>
     * The list of scenario labels that should be run during the test.
     * The scenario labels should map to labels defined in the application's
     * manifest. For example, player_experience and
     * com.google.test.loops.player_experience add all of the loops labeled in the
     * manifest with the com.google.test.loops.player_experience name to the
     * execution.
     * Scenarios can also be specified in the scenarios field.
     * </pre>
     *
     * <code>repeated string scenario_labels = 4;</code>
     * @param index The index to set the value at.
     * @param value The scenarioLabels to set.
     * @return This builder for chaining.
     */
    public Builder setScenarioLabels(
        int index, java.lang.String value) {
      if (value == null) {
    throw new NullPointerException();
  }
  ensureScenarioLabelsIsMutable();
      scenarioLabels_.set(index, value);
      onChanged();
      return this;
    }
    /**
     * <pre>
     * The list of scenario labels that should be run during the test.
     * The scenario labels should map to labels defined in the application's
     * manifest. For example, player_experience and
     * com.google.test.loops.player_experience add all of the loops labeled in the
     * manifest with the com.google.test.loops.player_experience name to the
     * execution.
     * Scenarios can also be specified in the scenarios field.
     * </pre>
     *
     * <code>repeated string scenario_labels = 4;</code>
     * @param value The scenarioLabels to add.
     * @return This builder for chaining.
     */
    public Builder addScenarioLabels(
        java.lang.String value) {
      if (value == null) {
    throw new NullPointerException();
  }
  ensureScenarioLabelsIsMutable();
      scenarioLabels_.add(value);
      onChanged();
      return this;
    }
    /**
     * <pre>
     * The list of scenario labels that should be run during the test.
     * The scenario labels should map to labels defined in the application's
     * manifest. For example, player_experience and
     * com.google.test.loops.player_experience add all of the loops labeled in the
     * manifest with the com.google.test.loops.player_experience name to the
     * execution.
     * Scenarios can also be specified in the scenarios field.
     * </pre>
     *
     * <code>repeated string scenario_labels = 4;</code>
     * @param values The scenarioLabels to add.
     * @return This builder for chaining.
     */
    public Builder addAllScenarioLabels(
        java.lang.Iterable<java.lang.String> values) {
      ensureScenarioLabelsIsMutable();
      com.google.protobuf.AbstractMessageLite.Builder.addAll(
          values, scenarioLabels_);
      onChanged();
      return this;
    }
    /**
     * <pre>
     * The list of scenario labels that should be run during the test.
     * The scenario labels should map to labels defined in the application's
     * manifest. For example, player_experience and
     * com.google.test.loops.player_experience add all of the loops labeled in the
     * manifest with the com.google.test.loops.player_experience name to the
     * execution.
     * Scenarios can also be specified in the scenarios field.
     * </pre>
     *
     * <code>repeated string scenario_labels = 4;</code>
     * @return This builder for chaining.
     */
    public Builder clearScenarioLabels() {
      scenarioLabels_ = com.google.protobuf.LazyStringArrayList.EMPTY;
      bitField0_ = (bitField0_ & ~0x00000002);
      onChanged();
      return this;
    }
    /**
     * <pre>
     * The list of scenario labels that should be run during the test.
     * The scenario labels should map to labels defined in the application's
     * manifest. For example, player_experience and
     * com.google.test.loops.player_experience add all of the loops labeled in the
     * manifest with the com.google.test.loops.player_experience name to the
     * execution.
     * Scenarios can also be specified in the scenarios field.
     * </pre>
     *
     * <code>repeated string scenario_labels = 4;</code>
     * @param value The bytes of the scenarioLabels to add.
     * @return This builder for chaining.
     */
    public Builder addScenarioLabelsBytes(
        com.google.protobuf.ByteString value) {
      if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
      ensureScenarioLabelsIsMutable();
      scenarioLabels_.add(value);
      onChanged();
      return this;
    }
    @java.lang.Override
    public final Builder setUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return super.setUnknownFields(unknownFields);
    }

    @java.lang.Override
    public final Builder mergeUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return super.mergeUnknownFields(unknownFields);
    }


    // @@protoc_insertion_point(builder_scope:google.devtools.testing.v1.AndroidTestLoop)
  }

  // @@protoc_insertion_point(class_scope:google.devtools.testing.v1.AndroidTestLoop)
  private static final com.google.devtools.testing.v1.AndroidTestLoop DEFAULT_INSTANCE;
  static {
    DEFAULT_INSTANCE = new com.google.devtools.testing.v1.AndroidTestLoop();
  }

  public static com.google.devtools.testing.v1.AndroidTestLoop getDefaultInstance() {
    return DEFAULT_INSTANCE;
  }

  private static final com.google.protobuf.Parser<AndroidTestLoop>
      PARSER = new com.google.protobuf.AbstractParser<AndroidTestLoop>() {
    @java.lang.Override
    public AndroidTestLoop parsePartialFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return new AndroidTestLoop(input, extensionRegistry);
    }
  };

  public static com.google.protobuf.Parser<AndroidTestLoop> parser() {
    return PARSER;
  }

  @java.lang.Override
  public com.google.protobuf.Parser<AndroidTestLoop> getParserForType() {
    return PARSER;
  }

  @java.lang.Override
  public com.google.devtools.testing.v1.AndroidTestLoop getDefaultInstanceForType() {
    return DEFAULT_INSTANCE;
  }

}

