// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: google/devtools/testing/v1/test_execution.proto

package com.google.devtools.testing.v1;

/**
 * <pre>
 * Options for enabling sharding.
 * </pre>
 *
 * Protobuf type {@code google.devtools.testing.v1.ShardingOption}
 */
public final class ShardingOption extends
    com.google.protobuf.GeneratedMessageV3 implements
    // @@protoc_insertion_point(message_implements:google.devtools.testing.v1.ShardingOption)
    ShardingOptionOrBuilder {
private static final long serialVersionUID = 0L;
  // Use ShardingOption.newBuilder() to construct.
  private ShardingOption(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
    super(builder);
  }
  private ShardingOption() {
  }

  @java.lang.Override
  @SuppressWarnings({"unused"})
  protected java.lang.Object newInstance(
      UnusedPrivateParameter unused) {
    return new ShardingOption();
  }

  @java.lang.Override
  public final com.google.protobuf.UnknownFieldSet
  getUnknownFields() {
    return this.unknownFields;
  }
  public static final com.google.protobuf.Descriptors.Descriptor
      getDescriptor() {
    return com.google.devtools.testing.v1.TestExecutionProto.internal_static_google_devtools_testing_v1_ShardingOption_descriptor;
  }

  @java.lang.Override
  protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internalGetFieldAccessorTable() {
    return com.google.devtools.testing.v1.TestExecutionProto.internal_static_google_devtools_testing_v1_ShardingOption_fieldAccessorTable
        .ensureFieldAccessorsInitialized(
            com.google.devtools.testing.v1.ShardingOption.class, com.google.devtools.testing.v1.ShardingOption.Builder.class);
  }

  private int optionCase_ = 0;
  private java.lang.Object option_;
  public enum OptionCase
      implements com.google.protobuf.Internal.EnumLite,
          com.google.protobuf.AbstractMessage.InternalOneOfEnum {
    UNIFORM_SHARDING(1),
    MANUAL_SHARDING(2),
    OPTION_NOT_SET(0);
    private final int value;
    private OptionCase(int value) {
      this.value = value;
    }
    /**
     * @param value The number of the enum to look for.
     * @return The enum associated with the given number.
     * @deprecated Use {@link #forNumber(int)} instead.
     */
    @java.lang.Deprecated
    public static OptionCase valueOf(int value) {
      return forNumber(value);
    }

    public static OptionCase forNumber(int value) {
      switch (value) {
        case 1: return UNIFORM_SHARDING;
        case 2: return MANUAL_SHARDING;
        case 0: return OPTION_NOT_SET;
        default: return null;
      }
    }
    public int getNumber() {
      return this.value;
    }
  };

  public OptionCase
  getOptionCase() {
    return OptionCase.forNumber(
        optionCase_);
  }

  public static final int UNIFORM_SHARDING_FIELD_NUMBER = 1;
  /**
   * <pre>
   * Uniformly shards test cases given a total number of shards.
   * </pre>
   *
   * <code>.google.devtools.testing.v1.UniformSharding uniform_sharding = 1;</code>
   * @return Whether the uniformSharding field is set.
   */
  @java.lang.Override
  public boolean hasUniformSharding() {
    return optionCase_ == 1;
  }
  /**
   * <pre>
   * Uniformly shards test cases given a total number of shards.
   * </pre>
   *
   * <code>.google.devtools.testing.v1.UniformSharding uniform_sharding = 1;</code>
   * @return The uniformSharding.
   */
  @java.lang.Override
  public com.google.devtools.testing.v1.UniformSharding getUniformSharding() {
    if (optionCase_ == 1) {
       return (com.google.devtools.testing.v1.UniformSharding) option_;
    }
    return com.google.devtools.testing.v1.UniformSharding.getDefaultInstance();
  }
  /**
   * <pre>
   * Uniformly shards test cases given a total number of shards.
   * </pre>
   *
   * <code>.google.devtools.testing.v1.UniformSharding uniform_sharding = 1;</code>
   */
  @java.lang.Override
  public com.google.devtools.testing.v1.UniformShardingOrBuilder getUniformShardingOrBuilder() {
    if (optionCase_ == 1) {
       return (com.google.devtools.testing.v1.UniformSharding) option_;
    }
    return com.google.devtools.testing.v1.UniformSharding.getDefaultInstance();
  }

  public static final int MANUAL_SHARDING_FIELD_NUMBER = 2;
  /**
   * <pre>
   * Shards test cases into the specified groups of packages, classes, and/or
   * methods.
   * </pre>
   *
   * <code>.google.devtools.testing.v1.ManualSharding manual_sharding = 2;</code>
   * @return Whether the manualSharding field is set.
   */
  @java.lang.Override
  public boolean hasManualSharding() {
    return optionCase_ == 2;
  }
  /**
   * <pre>
   * Shards test cases into the specified groups of packages, classes, and/or
   * methods.
   * </pre>
   *
   * <code>.google.devtools.testing.v1.ManualSharding manual_sharding = 2;</code>
   * @return The manualSharding.
   */
  @java.lang.Override
  public com.google.devtools.testing.v1.ManualSharding getManualSharding() {
    if (optionCase_ == 2) {
       return (com.google.devtools.testing.v1.ManualSharding) option_;
    }
    return com.google.devtools.testing.v1.ManualSharding.getDefaultInstance();
  }
  /**
   * <pre>
   * Shards test cases into the specified groups of packages, classes, and/or
   * methods.
   * </pre>
   *
   * <code>.google.devtools.testing.v1.ManualSharding manual_sharding = 2;</code>
   */
  @java.lang.Override
  public com.google.devtools.testing.v1.ManualShardingOrBuilder getManualShardingOrBuilder() {
    if (optionCase_ == 2) {
       return (com.google.devtools.testing.v1.ManualSharding) option_;
    }
    return com.google.devtools.testing.v1.ManualSharding.getDefaultInstance();
  }

  private byte memoizedIsInitialized = -1;
  @java.lang.Override
  public final boolean isInitialized() {
    byte isInitialized = memoizedIsInitialized;
    if (isInitialized == 1) return true;
    if (isInitialized == 0) return false;

    memoizedIsInitialized = 1;
    return true;
  }

  @java.lang.Override
  public void writeTo(com.google.protobuf.CodedOutputStream output)
                      throws java.io.IOException {
    if (optionCase_ == 1) {
      output.writeMessage(1, (com.google.devtools.testing.v1.UniformSharding) option_);
    }
    if (optionCase_ == 2) {
      output.writeMessage(2, (com.google.devtools.testing.v1.ManualSharding) option_);
    }
    getUnknownFields().writeTo(output);
  }

  @java.lang.Override
  public int getSerializedSize() {
    int size = memoizedSize;
    if (size != -1) return size;

    size = 0;
    if (optionCase_ == 1) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(1, (com.google.devtools.testing.v1.UniformSharding) option_);
    }
    if (optionCase_ == 2) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(2, (com.google.devtools.testing.v1.ManualSharding) option_);
    }
    size += getUnknownFields().getSerializedSize();
    memoizedSize = size;
    return size;
  }

  @java.lang.Override
  public boolean equals(final java.lang.Object obj) {
    if (obj == this) {
     return true;
    }
    if (!(obj instanceof com.google.devtools.testing.v1.ShardingOption)) {
      return super.equals(obj);
    }
    com.google.devtools.testing.v1.ShardingOption other = (com.google.devtools.testing.v1.ShardingOption) obj;

    if (!getOptionCase().equals(other.getOptionCase())) return false;
    switch (optionCase_) {
      case 1:
        if (!getUniformSharding()
            .equals(other.getUniformSharding())) return false;
        break;
      case 2:
        if (!getManualSharding()
            .equals(other.getManualSharding())) return false;
        break;
      case 0:
      default:
    }
    if (!getUnknownFields().equals(other.getUnknownFields())) return false;
    return true;
  }

  @java.lang.Override
  public int hashCode() {
    if (memoizedHashCode != 0) {
      return memoizedHashCode;
    }
    int hash = 41;
    hash = (19 * hash) + getDescriptor().hashCode();
    switch (optionCase_) {
      case 1:
        hash = (37 * hash) + UNIFORM_SHARDING_FIELD_NUMBER;
        hash = (53 * hash) + getUniformSharding().hashCode();
        break;
      case 2:
        hash = (37 * hash) + MANUAL_SHARDING_FIELD_NUMBER;
        hash = (53 * hash) + getManualSharding().hashCode();
        break;
      case 0:
      default:
    }
    hash = (29 * hash) + getUnknownFields().hashCode();
    memoizedHashCode = hash;
    return hash;
  }

  public static com.google.devtools.testing.v1.ShardingOption parseFrom(
      java.nio.ByteBuffer data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static com.google.devtools.testing.v1.ShardingOption parseFrom(
      java.nio.ByteBuffer data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static com.google.devtools.testing.v1.ShardingOption parseFrom(
      com.google.protobuf.ByteString data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static com.google.devtools.testing.v1.ShardingOption parseFrom(
      com.google.protobuf.ByteString data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static com.google.devtools.testing.v1.ShardingOption parseFrom(byte[] data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static com.google.devtools.testing.v1.ShardingOption parseFrom(
      byte[] data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static com.google.devtools.testing.v1.ShardingOption parseFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input);
  }
  public static com.google.devtools.testing.v1.ShardingOption parseFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input, extensionRegistry);
  }
  public static com.google.devtools.testing.v1.ShardingOption parseDelimitedFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseDelimitedWithIOException(PARSER, input);
  }
  public static com.google.devtools.testing.v1.ShardingOption parseDelimitedFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
  }
  public static com.google.devtools.testing.v1.ShardingOption parseFrom(
      com.google.protobuf.CodedInputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input);
  }
  public static com.google.devtools.testing.v1.ShardingOption parseFrom(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input, extensionRegistry);
  }

  @java.lang.Override
  public Builder newBuilderForType() { return newBuilder(); }
  public static Builder newBuilder() {
    return DEFAULT_INSTANCE.toBuilder();
  }
  public static Builder newBuilder(com.google.devtools.testing.v1.ShardingOption prototype) {
    return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
  }
  @java.lang.Override
  public Builder toBuilder() {
    return this == DEFAULT_INSTANCE
        ? new Builder() : new Builder().mergeFrom(this);
  }

  @java.lang.Override
  protected Builder newBuilderForType(
      com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
    Builder builder = new Builder(parent);
    return builder;
  }
  /**
   * <pre>
   * Options for enabling sharding.
   * </pre>
   *
   * Protobuf type {@code google.devtools.testing.v1.ShardingOption}
   */
  public static final class Builder extends
      com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
      // @@protoc_insertion_point(builder_implements:google.devtools.testing.v1.ShardingOption)
      com.google.devtools.testing.v1.ShardingOptionOrBuilder {
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.google.devtools.testing.v1.TestExecutionProto.internal_static_google_devtools_testing_v1_ShardingOption_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.google.devtools.testing.v1.TestExecutionProto.internal_static_google_devtools_testing_v1_ShardingOption_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.google.devtools.testing.v1.ShardingOption.class, com.google.devtools.testing.v1.ShardingOption.Builder.class);
    }

    // Construct using com.google.devtools.testing.v1.ShardingOption.newBuilder()
    private Builder() {

    }

    private Builder(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      super(parent);

    }
    @java.lang.Override
    public Builder clear() {
      super.clear();
      bitField0_ = 0;
      if (uniformShardingBuilder_ != null) {
        uniformShardingBuilder_.clear();
      }
      if (manualShardingBuilder_ != null) {
        manualShardingBuilder_.clear();
      }
      optionCase_ = 0;
      option_ = null;
      return this;
    }

    @java.lang.Override
    public com.google.protobuf.Descriptors.Descriptor
        getDescriptorForType() {
      return com.google.devtools.testing.v1.TestExecutionProto.internal_static_google_devtools_testing_v1_ShardingOption_descriptor;
    }

    @java.lang.Override
    public com.google.devtools.testing.v1.ShardingOption getDefaultInstanceForType() {
      return com.google.devtools.testing.v1.ShardingOption.getDefaultInstance();
    }

    @java.lang.Override
    public com.google.devtools.testing.v1.ShardingOption build() {
      com.google.devtools.testing.v1.ShardingOption result = buildPartial();
      if (!result.isInitialized()) {
        throw newUninitializedMessageException(result);
      }
      return result;
    }

    @java.lang.Override
    public com.google.devtools.testing.v1.ShardingOption buildPartial() {
      com.google.devtools.testing.v1.ShardingOption result = new com.google.devtools.testing.v1.ShardingOption(this);
      if (bitField0_ != 0) { buildPartial0(result); }
      buildPartialOneofs(result);
      onBuilt();
      return result;
    }

    private void buildPartial0(com.google.devtools.testing.v1.ShardingOption result) {
      int from_bitField0_ = bitField0_;
    }

    private void buildPartialOneofs(com.google.devtools.testing.v1.ShardingOption result) {
      result.optionCase_ = optionCase_;
      result.option_ = this.option_;
      if (optionCase_ == 1 &&
          uniformShardingBuilder_ != null) {
        result.option_ = uniformShardingBuilder_.build();
      }
      if (optionCase_ == 2 &&
          manualShardingBuilder_ != null) {
        result.option_ = manualShardingBuilder_.build();
      }
    }

    @java.lang.Override
    public Builder clone() {
      return super.clone();
    }
    @java.lang.Override
    public Builder setField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        java.lang.Object value) {
      return super.setField(field, value);
    }
    @java.lang.Override
    public Builder clearField(
        com.google.protobuf.Descriptors.FieldDescriptor field) {
      return super.clearField(field);
    }
    @java.lang.Override
    public Builder clearOneof(
        com.google.protobuf.Descriptors.OneofDescriptor oneof) {
      return super.clearOneof(oneof);
    }
    @java.lang.Override
    public Builder setRepeatedField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        int index, java.lang.Object value) {
      return super.setRepeatedField(field, index, value);
    }
    @java.lang.Override
    public Builder addRepeatedField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        java.lang.Object value) {
      return super.addRepeatedField(field, value);
    }
    @java.lang.Override
    public Builder mergeFrom(com.google.protobuf.Message other) {
      if (other instanceof com.google.devtools.testing.v1.ShardingOption) {
        return mergeFrom((com.google.devtools.testing.v1.ShardingOption)other);
      } else {
        super.mergeFrom(other);
        return this;
      }
    }

    public Builder mergeFrom(com.google.devtools.testing.v1.ShardingOption other) {
      if (other == com.google.devtools.testing.v1.ShardingOption.getDefaultInstance()) return this;
      switch (other.getOptionCase()) {
        case UNIFORM_SHARDING: {
          mergeUniformSharding(other.getUniformSharding());
          break;
        }
        case MANUAL_SHARDING: {
          mergeManualSharding(other.getManualSharding());
          break;
        }
        case OPTION_NOT_SET: {
          break;
        }
      }
      this.mergeUnknownFields(other.getUnknownFields());
      onChanged();
      return this;
    }

    @java.lang.Override
    public final boolean isInitialized() {
      return true;
    }

    @java.lang.Override
    public Builder mergeFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 10: {
              input.readMessage(
                  getUniformShardingFieldBuilder().getBuilder(),
                  extensionRegistry);
              optionCase_ = 1;
              break;
            } // case 10
            case 18: {
              input.readMessage(
                  getManualShardingFieldBuilder().getBuilder(),
                  extensionRegistry);
              optionCase_ = 2;
              break;
            } // case 18
            default: {
              if (!super.parseUnknownField(input, extensionRegistry, tag)) {
                done = true; // was an endgroup tag
              }
              break;
            } // default:
          } // switch (tag)
        } // while (!done)
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.unwrapIOException();
      } finally {
        onChanged();
      } // finally
      return this;
    }
    private int optionCase_ = 0;
    private java.lang.Object option_;
    public OptionCase
        getOptionCase() {
      return OptionCase.forNumber(
          optionCase_);
    }

    public Builder clearOption() {
      optionCase_ = 0;
      option_ = null;
      onChanged();
      return this;
    }

    private int bitField0_;

    private com.google.protobuf.SingleFieldBuilderV3<
        com.google.devtools.testing.v1.UniformSharding, com.google.devtools.testing.v1.UniformSharding.Builder, com.google.devtools.testing.v1.UniformShardingOrBuilder> uniformShardingBuilder_;
    /**
     * <pre>
     * Uniformly shards test cases given a total number of shards.
     * </pre>
     *
     * <code>.google.devtools.testing.v1.UniformSharding uniform_sharding = 1;</code>
     * @return Whether the uniformSharding field is set.
     */
    @java.lang.Override
    public boolean hasUniformSharding() {
      return optionCase_ == 1;
    }
    /**
     * <pre>
     * Uniformly shards test cases given a total number of shards.
     * </pre>
     *
     * <code>.google.devtools.testing.v1.UniformSharding uniform_sharding = 1;</code>
     * @return The uniformSharding.
     */
    @java.lang.Override
    public com.google.devtools.testing.v1.UniformSharding getUniformSharding() {
      if (uniformShardingBuilder_ == null) {
        if (optionCase_ == 1) {
          return (com.google.devtools.testing.v1.UniformSharding) option_;
        }
        return com.google.devtools.testing.v1.UniformSharding.getDefaultInstance();
      } else {
        if (optionCase_ == 1) {
          return uniformShardingBuilder_.getMessage();
        }
        return com.google.devtools.testing.v1.UniformSharding.getDefaultInstance();
      }
    }
    /**
     * <pre>
     * Uniformly shards test cases given a total number of shards.
     * </pre>
     *
     * <code>.google.devtools.testing.v1.UniformSharding uniform_sharding = 1;</code>
     */
    public Builder setUniformSharding(com.google.devtools.testing.v1.UniformSharding value) {
      if (uniformShardingBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        option_ = value;
        onChanged();
      } else {
        uniformShardingBuilder_.setMessage(value);
      }
      optionCase_ = 1;
      return this;
    }
    /**
     * <pre>
     * Uniformly shards test cases given a total number of shards.
     * </pre>
     *
     * <code>.google.devtools.testing.v1.UniformSharding uniform_sharding = 1;</code>
     */
    public Builder setUniformSharding(
        com.google.devtools.testing.v1.UniformSharding.Builder builderForValue) {
      if (uniformShardingBuilder_ == null) {
        option_ = builderForValue.build();
        onChanged();
      } else {
        uniformShardingBuilder_.setMessage(builderForValue.build());
      }
      optionCase_ = 1;
      return this;
    }
    /**
     * <pre>
     * Uniformly shards test cases given a total number of shards.
     * </pre>
     *
     * <code>.google.devtools.testing.v1.UniformSharding uniform_sharding = 1;</code>
     */
    public Builder mergeUniformSharding(com.google.devtools.testing.v1.UniformSharding value) {
      if (uniformShardingBuilder_ == null) {
        if (optionCase_ == 1 &&
            option_ != com.google.devtools.testing.v1.UniformSharding.getDefaultInstance()) {
          option_ = com.google.devtools.testing.v1.UniformSharding.newBuilder((com.google.devtools.testing.v1.UniformSharding) option_)
              .mergeFrom(value).buildPartial();
        } else {
          option_ = value;
        }
        onChanged();
      } else {
        if (optionCase_ == 1) {
          uniformShardingBuilder_.mergeFrom(value);
        } else {
          uniformShardingBuilder_.setMessage(value);
        }
      }
      optionCase_ = 1;
      return this;
    }
    /**
     * <pre>
     * Uniformly shards test cases given a total number of shards.
     * </pre>
     *
     * <code>.google.devtools.testing.v1.UniformSharding uniform_sharding = 1;</code>
     */
    public Builder clearUniformSharding() {
      if (uniformShardingBuilder_ == null) {
        if (optionCase_ == 1) {
          optionCase_ = 0;
          option_ = null;
          onChanged();
        }
      } else {
        if (optionCase_ == 1) {
          optionCase_ = 0;
          option_ = null;
        }
        uniformShardingBuilder_.clear();
      }
      return this;
    }
    /**
     * <pre>
     * Uniformly shards test cases given a total number of shards.
     * </pre>
     *
     * <code>.google.devtools.testing.v1.UniformSharding uniform_sharding = 1;</code>
     */
    public com.google.devtools.testing.v1.UniformSharding.Builder getUniformShardingBuilder() {
      return getUniformShardingFieldBuilder().getBuilder();
    }
    /**
     * <pre>
     * Uniformly shards test cases given a total number of shards.
     * </pre>
     *
     * <code>.google.devtools.testing.v1.UniformSharding uniform_sharding = 1;</code>
     */
    @java.lang.Override
    public com.google.devtools.testing.v1.UniformShardingOrBuilder getUniformShardingOrBuilder() {
      if ((optionCase_ == 1) && (uniformShardingBuilder_ != null)) {
        return uniformShardingBuilder_.getMessageOrBuilder();
      } else {
        if (optionCase_ == 1) {
          return (com.google.devtools.testing.v1.UniformSharding) option_;
        }
        return com.google.devtools.testing.v1.UniformSharding.getDefaultInstance();
      }
    }
    /**
     * <pre>
     * Uniformly shards test cases given a total number of shards.
     * </pre>
     *
     * <code>.google.devtools.testing.v1.UniformSharding uniform_sharding = 1;</code>
     */
    private com.google.protobuf.SingleFieldBuilderV3<
        com.google.devtools.testing.v1.UniformSharding, com.google.devtools.testing.v1.UniformSharding.Builder, com.google.devtools.testing.v1.UniformShardingOrBuilder> 
        getUniformShardingFieldBuilder() {
      if (uniformShardingBuilder_ == null) {
        if (!(optionCase_ == 1)) {
          option_ = com.google.devtools.testing.v1.UniformSharding.getDefaultInstance();
        }
        uniformShardingBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
            com.google.devtools.testing.v1.UniformSharding, com.google.devtools.testing.v1.UniformSharding.Builder, com.google.devtools.testing.v1.UniformShardingOrBuilder>(
                (com.google.devtools.testing.v1.UniformSharding) option_,
                getParentForChildren(),
                isClean());
        option_ = null;
      }
      optionCase_ = 1;
      onChanged();
      return uniformShardingBuilder_;
    }

    private com.google.protobuf.SingleFieldBuilderV3<
        com.google.devtools.testing.v1.ManualSharding, com.google.devtools.testing.v1.ManualSharding.Builder, com.google.devtools.testing.v1.ManualShardingOrBuilder> manualShardingBuilder_;
    /**
     * <pre>
     * Shards test cases into the specified groups of packages, classes, and/or
     * methods.
     * </pre>
     *
     * <code>.google.devtools.testing.v1.ManualSharding manual_sharding = 2;</code>
     * @return Whether the manualSharding field is set.
     */
    @java.lang.Override
    public boolean hasManualSharding() {
      return optionCase_ == 2;
    }
    /**
     * <pre>
     * Shards test cases into the specified groups of packages, classes, and/or
     * methods.
     * </pre>
     *
     * <code>.google.devtools.testing.v1.ManualSharding manual_sharding = 2;</code>
     * @return The manualSharding.
     */
    @java.lang.Override
    public com.google.devtools.testing.v1.ManualSharding getManualSharding() {
      if (manualShardingBuilder_ == null) {
        if (optionCase_ == 2) {
          return (com.google.devtools.testing.v1.ManualSharding) option_;
        }
        return com.google.devtools.testing.v1.ManualSharding.getDefaultInstance();
      } else {
        if (optionCase_ == 2) {
          return manualShardingBuilder_.getMessage();
        }
        return com.google.devtools.testing.v1.ManualSharding.getDefaultInstance();
      }
    }
    /**
     * <pre>
     * Shards test cases into the specified groups of packages, classes, and/or
     * methods.
     * </pre>
     *
     * <code>.google.devtools.testing.v1.ManualSharding manual_sharding = 2;</code>
     */
    public Builder setManualSharding(com.google.devtools.testing.v1.ManualSharding value) {
      if (manualShardingBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        option_ = value;
        onChanged();
      } else {
        manualShardingBuilder_.setMessage(value);
      }
      optionCase_ = 2;
      return this;
    }
    /**
     * <pre>
     * Shards test cases into the specified groups of packages, classes, and/or
     * methods.
     * </pre>
     *
     * <code>.google.devtools.testing.v1.ManualSharding manual_sharding = 2;</code>
     */
    public Builder setManualSharding(
        com.google.devtools.testing.v1.ManualSharding.Builder builderForValue) {
      if (manualShardingBuilder_ == null) {
        option_ = builderForValue.build();
        onChanged();
      } else {
        manualShardingBuilder_.setMessage(builderForValue.build());
      }
      optionCase_ = 2;
      return this;
    }
    /**
     * <pre>
     * Shards test cases into the specified groups of packages, classes, and/or
     * methods.
     * </pre>
     *
     * <code>.google.devtools.testing.v1.ManualSharding manual_sharding = 2;</code>
     */
    public Builder mergeManualSharding(com.google.devtools.testing.v1.ManualSharding value) {
      if (manualShardingBuilder_ == null) {
        if (optionCase_ == 2 &&
            option_ != com.google.devtools.testing.v1.ManualSharding.getDefaultInstance()) {
          option_ = com.google.devtools.testing.v1.ManualSharding.newBuilder((com.google.devtools.testing.v1.ManualSharding) option_)
              .mergeFrom(value).buildPartial();
        } else {
          option_ = value;
        }
        onChanged();
      } else {
        if (optionCase_ == 2) {
          manualShardingBuilder_.mergeFrom(value);
        } else {
          manualShardingBuilder_.setMessage(value);
        }
      }
      optionCase_ = 2;
      return this;
    }
    /**
     * <pre>
     * Shards test cases into the specified groups of packages, classes, and/or
     * methods.
     * </pre>
     *
     * <code>.google.devtools.testing.v1.ManualSharding manual_sharding = 2;</code>
     */
    public Builder clearManualSharding() {
      if (manualShardingBuilder_ == null) {
        if (optionCase_ == 2) {
          optionCase_ = 0;
          option_ = null;
          onChanged();
        }
      } else {
        if (optionCase_ == 2) {
          optionCase_ = 0;
          option_ = null;
        }
        manualShardingBuilder_.clear();
      }
      return this;
    }
    /**
     * <pre>
     * Shards test cases into the specified groups of packages, classes, and/or
     * methods.
     * </pre>
     *
     * <code>.google.devtools.testing.v1.ManualSharding manual_sharding = 2;</code>
     */
    public com.google.devtools.testing.v1.ManualSharding.Builder getManualShardingBuilder() {
      return getManualShardingFieldBuilder().getBuilder();
    }
    /**
     * <pre>
     * Shards test cases into the specified groups of packages, classes, and/or
     * methods.
     * </pre>
     *
     * <code>.google.devtools.testing.v1.ManualSharding manual_sharding = 2;</code>
     */
    @java.lang.Override
    public com.google.devtools.testing.v1.ManualShardingOrBuilder getManualShardingOrBuilder() {
      if ((optionCase_ == 2) && (manualShardingBuilder_ != null)) {
        return manualShardingBuilder_.getMessageOrBuilder();
      } else {
        if (optionCase_ == 2) {
          return (com.google.devtools.testing.v1.ManualSharding) option_;
        }
        return com.google.devtools.testing.v1.ManualSharding.getDefaultInstance();
      }
    }
    /**
     * <pre>
     * Shards test cases into the specified groups of packages, classes, and/or
     * methods.
     * </pre>
     *
     * <code>.google.devtools.testing.v1.ManualSharding manual_sharding = 2;</code>
     */
    private com.google.protobuf.SingleFieldBuilderV3<
        com.google.devtools.testing.v1.ManualSharding, com.google.devtools.testing.v1.ManualSharding.Builder, com.google.devtools.testing.v1.ManualShardingOrBuilder> 
        getManualShardingFieldBuilder() {
      if (manualShardingBuilder_ == null) {
        if (!(optionCase_ == 2)) {
          option_ = com.google.devtools.testing.v1.ManualSharding.getDefaultInstance();
        }
        manualShardingBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
            com.google.devtools.testing.v1.ManualSharding, com.google.devtools.testing.v1.ManualSharding.Builder, com.google.devtools.testing.v1.ManualShardingOrBuilder>(
                (com.google.devtools.testing.v1.ManualSharding) option_,
                getParentForChildren(),
                isClean());
        option_ = null;
      }
      optionCase_ = 2;
      onChanged();
      return manualShardingBuilder_;
    }
    @java.lang.Override
    public final Builder setUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return super.setUnknownFields(unknownFields);
    }

    @java.lang.Override
    public final Builder mergeUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return super.mergeUnknownFields(unknownFields);
    }


    // @@protoc_insertion_point(builder_scope:google.devtools.testing.v1.ShardingOption)
  }

  // @@protoc_insertion_point(class_scope:google.devtools.testing.v1.ShardingOption)
  private static final com.google.devtools.testing.v1.ShardingOption DEFAULT_INSTANCE;
  static {
    DEFAULT_INSTANCE = new com.google.devtools.testing.v1.ShardingOption();
  }

  public static com.google.devtools.testing.v1.ShardingOption getDefaultInstance() {
    return DEFAULT_INSTANCE;
  }

  private static final com.google.protobuf.Parser<ShardingOption>
      PARSER = new com.google.protobuf.AbstractParser<ShardingOption>() {
    @java.lang.Override
    public ShardingOption parsePartialFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      Builder builder = newBuilder();
      try {
        builder.mergeFrom(input, extensionRegistry);
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(builder.buildPartial());
      } catch (com.google.protobuf.UninitializedMessageException e) {
        throw e.asInvalidProtocolBufferException().setUnfinishedMessage(builder.buildPartial());
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(e)
            .setUnfinishedMessage(builder.buildPartial());
      }
      return builder.buildPartial();
    }
  };

  public static com.google.protobuf.Parser<ShardingOption> parser() {
    return PARSER;
  }

  @java.lang.Override
  public com.google.protobuf.Parser<ShardingOption> getParserForType() {
    return PARSER;
  }

  @java.lang.Override
  public com.google.devtools.testing.v1.ShardingOption getDefaultInstanceForType() {
    return DEFAULT_INSTANCE;
  }

}

