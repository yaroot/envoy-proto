// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: google/devtools/testing/v1/test_execution.proto

package com.google.devtools.testing.v1;

/**
 * <pre>
 * A test of an android application that explores the application on a virtual
 * or physical Android Device, finding culprits and crashes as it goes.
 * Next tag: 30
 * </pre>
 *
 * Protobuf type {@code google.devtools.testing.v1.AndroidRoboTest}
 */
public final class AndroidRoboTest extends
    com.google.protobuf.GeneratedMessageV3 implements
    // @@protoc_insertion_point(message_implements:google.devtools.testing.v1.AndroidRoboTest)
    AndroidRoboTestOrBuilder {
private static final long serialVersionUID = 0L;
  // Use AndroidRoboTest.newBuilder() to construct.
  private AndroidRoboTest(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
    super(builder);
  }
  private AndroidRoboTest() {
    appPackageId_ = "";
    appInitialActivity_ = "";
    roboDirectives_ = java.util.Collections.emptyList();
    startingIntents_ = java.util.Collections.emptyList();
  }

  @java.lang.Override
  @SuppressWarnings({"unused"})
  protected java.lang.Object newInstance(
      UnusedPrivateParameter unused) {
    return new AndroidRoboTest();
  }

  @java.lang.Override
  public final com.google.protobuf.UnknownFieldSet
  getUnknownFields() {
    return this.unknownFields;
  }
  public static final com.google.protobuf.Descriptors.Descriptor
      getDescriptor() {
    return com.google.devtools.testing.v1.TestExecutionProto.internal_static_google_devtools_testing_v1_AndroidRoboTest_descriptor;
  }

  @java.lang.Override
  protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internalGetFieldAccessorTable() {
    return com.google.devtools.testing.v1.TestExecutionProto.internal_static_google_devtools_testing_v1_AndroidRoboTest_fieldAccessorTable
        .ensureFieldAccessorsInitialized(
            com.google.devtools.testing.v1.AndroidRoboTest.class, com.google.devtools.testing.v1.AndroidRoboTest.Builder.class);
  }

  private int appUnderTestCase_ = 0;
  private java.lang.Object appUnderTest_;
  public enum AppUnderTestCase
      implements com.google.protobuf.Internal.EnumLite,
          com.google.protobuf.AbstractMessage.InternalOneOfEnum {
    APP_APK(1),
    APP_BUNDLE(16),
    APPUNDERTEST_NOT_SET(0);
    private final int value;
    private AppUnderTestCase(int value) {
      this.value = value;
    }
    /**
     * @param value The number of the enum to look for.
     * @return The enum associated with the given number.
     * @deprecated Use {@link #forNumber(int)} instead.
     */
    @java.lang.Deprecated
    public static AppUnderTestCase valueOf(int value) {
      return forNumber(value);
    }

    public static AppUnderTestCase forNumber(int value) {
      switch (value) {
        case 1: return APP_APK;
        case 16: return APP_BUNDLE;
        case 0: return APPUNDERTEST_NOT_SET;
        default: return null;
      }
    }
    public int getNumber() {
      return this.value;
    }
  };

  public AppUnderTestCase
  getAppUnderTestCase() {
    return AppUnderTestCase.forNumber(
        appUnderTestCase_);
  }

  public static final int APP_APK_FIELD_NUMBER = 1;
  /**
   * <pre>
   * The APK for the application under test.
   * </pre>
   *
   * <code>.google.devtools.testing.v1.FileReference app_apk = 1;</code>
   * @return Whether the appApk field is set.
   */
  @java.lang.Override
  public boolean hasAppApk() {
    return appUnderTestCase_ == 1;
  }
  /**
   * <pre>
   * The APK for the application under test.
   * </pre>
   *
   * <code>.google.devtools.testing.v1.FileReference app_apk = 1;</code>
   * @return The appApk.
   */
  @java.lang.Override
  public com.google.devtools.testing.v1.FileReference getAppApk() {
    if (appUnderTestCase_ == 1) {
       return (com.google.devtools.testing.v1.FileReference) appUnderTest_;
    }
    return com.google.devtools.testing.v1.FileReference.getDefaultInstance();
  }
  /**
   * <pre>
   * The APK for the application under test.
   * </pre>
   *
   * <code>.google.devtools.testing.v1.FileReference app_apk = 1;</code>
   */
  @java.lang.Override
  public com.google.devtools.testing.v1.FileReferenceOrBuilder getAppApkOrBuilder() {
    if (appUnderTestCase_ == 1) {
       return (com.google.devtools.testing.v1.FileReference) appUnderTest_;
    }
    return com.google.devtools.testing.v1.FileReference.getDefaultInstance();
  }

  public static final int APP_BUNDLE_FIELD_NUMBER = 16;
  /**
   * <pre>
   * A multi-apk app bundle for the application under test.
   * </pre>
   *
   * <code>.google.devtools.testing.v1.AppBundle app_bundle = 16;</code>
   * @return Whether the appBundle field is set.
   */
  @java.lang.Override
  public boolean hasAppBundle() {
    return appUnderTestCase_ == 16;
  }
  /**
   * <pre>
   * A multi-apk app bundle for the application under test.
   * </pre>
   *
   * <code>.google.devtools.testing.v1.AppBundle app_bundle = 16;</code>
   * @return The appBundle.
   */
  @java.lang.Override
  public com.google.devtools.testing.v1.AppBundle getAppBundle() {
    if (appUnderTestCase_ == 16) {
       return (com.google.devtools.testing.v1.AppBundle) appUnderTest_;
    }
    return com.google.devtools.testing.v1.AppBundle.getDefaultInstance();
  }
  /**
   * <pre>
   * A multi-apk app bundle for the application under test.
   * </pre>
   *
   * <code>.google.devtools.testing.v1.AppBundle app_bundle = 16;</code>
   */
  @java.lang.Override
  public com.google.devtools.testing.v1.AppBundleOrBuilder getAppBundleOrBuilder() {
    if (appUnderTestCase_ == 16) {
       return (com.google.devtools.testing.v1.AppBundle) appUnderTest_;
    }
    return com.google.devtools.testing.v1.AppBundle.getDefaultInstance();
  }

  public static final int APP_PACKAGE_ID_FIELD_NUMBER = 2;
  @SuppressWarnings("serial")
  private volatile java.lang.Object appPackageId_ = "";
  /**
   * <pre>
   * The java package for the application under test.
   * The default value is determined by examining the application's manifest.
   * </pre>
   *
   * <code>string app_package_id = 2;</code>
   * @return The appPackageId.
   */
  @java.lang.Override
  public java.lang.String getAppPackageId() {
    java.lang.Object ref = appPackageId_;
    if (ref instanceof java.lang.String) {
      return (java.lang.String) ref;
    } else {
      com.google.protobuf.ByteString bs = 
          (com.google.protobuf.ByteString) ref;
      java.lang.String s = bs.toStringUtf8();
      appPackageId_ = s;
      return s;
    }
  }
  /**
   * <pre>
   * The java package for the application under test.
   * The default value is determined by examining the application's manifest.
   * </pre>
   *
   * <code>string app_package_id = 2;</code>
   * @return The bytes for appPackageId.
   */
  @java.lang.Override
  public com.google.protobuf.ByteString
      getAppPackageIdBytes() {
    java.lang.Object ref = appPackageId_;
    if (ref instanceof java.lang.String) {
      com.google.protobuf.ByteString b = 
          com.google.protobuf.ByteString.copyFromUtf8(
              (java.lang.String) ref);
      appPackageId_ = b;
      return b;
    } else {
      return (com.google.protobuf.ByteString) ref;
    }
  }

  public static final int APP_INITIAL_ACTIVITY_FIELD_NUMBER = 3;
  @SuppressWarnings("serial")
  private volatile java.lang.Object appInitialActivity_ = "";
  /**
   * <pre>
   * The initial activity that should be used to start the app.
   * </pre>
   *
   * <code>string app_initial_activity = 3;</code>
   * @return The appInitialActivity.
   */
  @java.lang.Override
  public java.lang.String getAppInitialActivity() {
    java.lang.Object ref = appInitialActivity_;
    if (ref instanceof java.lang.String) {
      return (java.lang.String) ref;
    } else {
      com.google.protobuf.ByteString bs = 
          (com.google.protobuf.ByteString) ref;
      java.lang.String s = bs.toStringUtf8();
      appInitialActivity_ = s;
      return s;
    }
  }
  /**
   * <pre>
   * The initial activity that should be used to start the app.
   * </pre>
   *
   * <code>string app_initial_activity = 3;</code>
   * @return The bytes for appInitialActivity.
   */
  @java.lang.Override
  public com.google.protobuf.ByteString
      getAppInitialActivityBytes() {
    java.lang.Object ref = appInitialActivity_;
    if (ref instanceof java.lang.String) {
      com.google.protobuf.ByteString b = 
          com.google.protobuf.ByteString.copyFromUtf8(
              (java.lang.String) ref);
      appInitialActivity_ = b;
      return b;
    } else {
      return (com.google.protobuf.ByteString) ref;
    }
  }

  public static final int MAX_DEPTH_FIELD_NUMBER = 7;
  private int maxDepth_ = 0;
  /**
   * <pre>
   * The max depth of the traversal stack Robo can explore. Needs to be at least
   * 2 to make Robo explore the app beyond the first activity.
   * Default is 50.
   * </pre>
   *
   * <code>int32 max_depth = 7 [deprecated = true];</code>
   * @deprecated google.devtools.testing.v1.AndroidRoboTest.max_depth is deprecated.
   *     See google/devtools/testing/v1/test_execution.proto;l=593
   * @return The maxDepth.
   */
  @java.lang.Override
  @java.lang.Deprecated public int getMaxDepth() {
    return maxDepth_;
  }

  public static final int MAX_STEPS_FIELD_NUMBER = 8;
  private int maxSteps_ = 0;
  /**
   * <pre>
   * The max number of steps Robo can execute.
   * Default is no limit.
   * </pre>
   *
   * <code>int32 max_steps = 8 [deprecated = true];</code>
   * @deprecated google.devtools.testing.v1.AndroidRoboTest.max_steps is deprecated.
   *     See google/devtools/testing/v1/test_execution.proto;l=597
   * @return The maxSteps.
   */
  @java.lang.Override
  @java.lang.Deprecated public int getMaxSteps() {
    return maxSteps_;
  }

  public static final int ROBO_DIRECTIVES_FIELD_NUMBER = 11;
  @SuppressWarnings("serial")
  private java.util.List<com.google.devtools.testing.v1.RoboDirective> roboDirectives_;
  /**
   * <pre>
   * A set of directives Robo should apply during the crawl.
   * This allows users to customize the crawl. For example, the username and
   * password for a test account can be provided.
   * </pre>
   *
   * <code>repeated .google.devtools.testing.v1.RoboDirective robo_directives = 11;</code>
   */
  @java.lang.Override
  public java.util.List<com.google.devtools.testing.v1.RoboDirective> getRoboDirectivesList() {
    return roboDirectives_;
  }
  /**
   * <pre>
   * A set of directives Robo should apply during the crawl.
   * This allows users to customize the crawl. For example, the username and
   * password for a test account can be provided.
   * </pre>
   *
   * <code>repeated .google.devtools.testing.v1.RoboDirective robo_directives = 11;</code>
   */
  @java.lang.Override
  public java.util.List<? extends com.google.devtools.testing.v1.RoboDirectiveOrBuilder> 
      getRoboDirectivesOrBuilderList() {
    return roboDirectives_;
  }
  /**
   * <pre>
   * A set of directives Robo should apply during the crawl.
   * This allows users to customize the crawl. For example, the username and
   * password for a test account can be provided.
   * </pre>
   *
   * <code>repeated .google.devtools.testing.v1.RoboDirective robo_directives = 11;</code>
   */
  @java.lang.Override
  public int getRoboDirectivesCount() {
    return roboDirectives_.size();
  }
  /**
   * <pre>
   * A set of directives Robo should apply during the crawl.
   * This allows users to customize the crawl. For example, the username and
   * password for a test account can be provided.
   * </pre>
   *
   * <code>repeated .google.devtools.testing.v1.RoboDirective robo_directives = 11;</code>
   */
  @java.lang.Override
  public com.google.devtools.testing.v1.RoboDirective getRoboDirectives(int index) {
    return roboDirectives_.get(index);
  }
  /**
   * <pre>
   * A set of directives Robo should apply during the crawl.
   * This allows users to customize the crawl. For example, the username and
   * password for a test account can be provided.
   * </pre>
   *
   * <code>repeated .google.devtools.testing.v1.RoboDirective robo_directives = 11;</code>
   */
  @java.lang.Override
  public com.google.devtools.testing.v1.RoboDirectiveOrBuilder getRoboDirectivesOrBuilder(
      int index) {
    return roboDirectives_.get(index);
  }

  public static final int ROBO_SCRIPT_FIELD_NUMBER = 13;
  private com.google.devtools.testing.v1.FileReference roboScript_;
  /**
   * <pre>
   * A JSON file with a sequence of actions Robo should perform as a prologue
   * for the crawl.
   * </pre>
   *
   * <code>.google.devtools.testing.v1.FileReference robo_script = 13;</code>
   * @return Whether the roboScript field is set.
   */
  @java.lang.Override
  public boolean hasRoboScript() {
    return roboScript_ != null;
  }
  /**
   * <pre>
   * A JSON file with a sequence of actions Robo should perform as a prologue
   * for the crawl.
   * </pre>
   *
   * <code>.google.devtools.testing.v1.FileReference robo_script = 13;</code>
   * @return The roboScript.
   */
  @java.lang.Override
  public com.google.devtools.testing.v1.FileReference getRoboScript() {
    return roboScript_ == null ? com.google.devtools.testing.v1.FileReference.getDefaultInstance() : roboScript_;
  }
  /**
   * <pre>
   * A JSON file with a sequence of actions Robo should perform as a prologue
   * for the crawl.
   * </pre>
   *
   * <code>.google.devtools.testing.v1.FileReference robo_script = 13;</code>
   */
  @java.lang.Override
  public com.google.devtools.testing.v1.FileReferenceOrBuilder getRoboScriptOrBuilder() {
    return roboScript_ == null ? com.google.devtools.testing.v1.FileReference.getDefaultInstance() : roboScript_;
  }

  public static final int STARTING_INTENTS_FIELD_NUMBER = 15;
  @SuppressWarnings("serial")
  private java.util.List<com.google.devtools.testing.v1.RoboStartingIntent> startingIntents_;
  /**
   * <pre>
   * The intents used to launch the app for the crawl.
   * If none are provided, then the main launcher activity is launched.
   * If some are provided, then only those provided are launched (the main
   * launcher activity must be provided explicitly).
   * </pre>
   *
   * <code>repeated .google.devtools.testing.v1.RoboStartingIntent starting_intents = 15;</code>
   */
  @java.lang.Override
  public java.util.List<com.google.devtools.testing.v1.RoboStartingIntent> getStartingIntentsList() {
    return startingIntents_;
  }
  /**
   * <pre>
   * The intents used to launch the app for the crawl.
   * If none are provided, then the main launcher activity is launched.
   * If some are provided, then only those provided are launched (the main
   * launcher activity must be provided explicitly).
   * </pre>
   *
   * <code>repeated .google.devtools.testing.v1.RoboStartingIntent starting_intents = 15;</code>
   */
  @java.lang.Override
  public java.util.List<? extends com.google.devtools.testing.v1.RoboStartingIntentOrBuilder> 
      getStartingIntentsOrBuilderList() {
    return startingIntents_;
  }
  /**
   * <pre>
   * The intents used to launch the app for the crawl.
   * If none are provided, then the main launcher activity is launched.
   * If some are provided, then only those provided are launched (the main
   * launcher activity must be provided explicitly).
   * </pre>
   *
   * <code>repeated .google.devtools.testing.v1.RoboStartingIntent starting_intents = 15;</code>
   */
  @java.lang.Override
  public int getStartingIntentsCount() {
    return startingIntents_.size();
  }
  /**
   * <pre>
   * The intents used to launch the app for the crawl.
   * If none are provided, then the main launcher activity is launched.
   * If some are provided, then only those provided are launched (the main
   * launcher activity must be provided explicitly).
   * </pre>
   *
   * <code>repeated .google.devtools.testing.v1.RoboStartingIntent starting_intents = 15;</code>
   */
  @java.lang.Override
  public com.google.devtools.testing.v1.RoboStartingIntent getStartingIntents(int index) {
    return startingIntents_.get(index);
  }
  /**
   * <pre>
   * The intents used to launch the app for the crawl.
   * If none are provided, then the main launcher activity is launched.
   * If some are provided, then only those provided are launched (the main
   * launcher activity must be provided explicitly).
   * </pre>
   *
   * <code>repeated .google.devtools.testing.v1.RoboStartingIntent starting_intents = 15;</code>
   */
  @java.lang.Override
  public com.google.devtools.testing.v1.RoboStartingIntentOrBuilder getStartingIntentsOrBuilder(
      int index) {
    return startingIntents_.get(index);
  }

  private byte memoizedIsInitialized = -1;
  @java.lang.Override
  public final boolean isInitialized() {
    byte isInitialized = memoizedIsInitialized;
    if (isInitialized == 1) return true;
    if (isInitialized == 0) return false;

    memoizedIsInitialized = 1;
    return true;
  }

  @java.lang.Override
  public void writeTo(com.google.protobuf.CodedOutputStream output)
                      throws java.io.IOException {
    if (appUnderTestCase_ == 1) {
      output.writeMessage(1, (com.google.devtools.testing.v1.FileReference) appUnderTest_);
    }
    if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(appPackageId_)) {
      com.google.protobuf.GeneratedMessageV3.writeString(output, 2, appPackageId_);
    }
    if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(appInitialActivity_)) {
      com.google.protobuf.GeneratedMessageV3.writeString(output, 3, appInitialActivity_);
    }
    if (maxDepth_ != 0) {
      output.writeInt32(7, maxDepth_);
    }
    if (maxSteps_ != 0) {
      output.writeInt32(8, maxSteps_);
    }
    for (int i = 0; i < roboDirectives_.size(); i++) {
      output.writeMessage(11, roboDirectives_.get(i));
    }
    if (roboScript_ != null) {
      output.writeMessage(13, getRoboScript());
    }
    for (int i = 0; i < startingIntents_.size(); i++) {
      output.writeMessage(15, startingIntents_.get(i));
    }
    if (appUnderTestCase_ == 16) {
      output.writeMessage(16, (com.google.devtools.testing.v1.AppBundle) appUnderTest_);
    }
    getUnknownFields().writeTo(output);
  }

  @java.lang.Override
  public int getSerializedSize() {
    int size = memoizedSize;
    if (size != -1) return size;

    size = 0;
    if (appUnderTestCase_ == 1) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(1, (com.google.devtools.testing.v1.FileReference) appUnderTest_);
    }
    if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(appPackageId_)) {
      size += com.google.protobuf.GeneratedMessageV3.computeStringSize(2, appPackageId_);
    }
    if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(appInitialActivity_)) {
      size += com.google.protobuf.GeneratedMessageV3.computeStringSize(3, appInitialActivity_);
    }
    if (maxDepth_ != 0) {
      size += com.google.protobuf.CodedOutputStream
        .computeInt32Size(7, maxDepth_);
    }
    if (maxSteps_ != 0) {
      size += com.google.protobuf.CodedOutputStream
        .computeInt32Size(8, maxSteps_);
    }
    for (int i = 0; i < roboDirectives_.size(); i++) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(11, roboDirectives_.get(i));
    }
    if (roboScript_ != null) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(13, getRoboScript());
    }
    for (int i = 0; i < startingIntents_.size(); i++) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(15, startingIntents_.get(i));
    }
    if (appUnderTestCase_ == 16) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(16, (com.google.devtools.testing.v1.AppBundle) appUnderTest_);
    }
    size += getUnknownFields().getSerializedSize();
    memoizedSize = size;
    return size;
  }

  @java.lang.Override
  public boolean equals(final java.lang.Object obj) {
    if (obj == this) {
     return true;
    }
    if (!(obj instanceof com.google.devtools.testing.v1.AndroidRoboTest)) {
      return super.equals(obj);
    }
    com.google.devtools.testing.v1.AndroidRoboTest other = (com.google.devtools.testing.v1.AndroidRoboTest) obj;

    if (!getAppPackageId()
        .equals(other.getAppPackageId())) return false;
    if (!getAppInitialActivity()
        .equals(other.getAppInitialActivity())) return false;
    if (getMaxDepth()
        != other.getMaxDepth()) return false;
    if (getMaxSteps()
        != other.getMaxSteps()) return false;
    if (!getRoboDirectivesList()
        .equals(other.getRoboDirectivesList())) return false;
    if (hasRoboScript() != other.hasRoboScript()) return false;
    if (hasRoboScript()) {
      if (!getRoboScript()
          .equals(other.getRoboScript())) return false;
    }
    if (!getStartingIntentsList()
        .equals(other.getStartingIntentsList())) return false;
    if (!getAppUnderTestCase().equals(other.getAppUnderTestCase())) return false;
    switch (appUnderTestCase_) {
      case 1:
        if (!getAppApk()
            .equals(other.getAppApk())) return false;
        break;
      case 16:
        if (!getAppBundle()
            .equals(other.getAppBundle())) return false;
        break;
      case 0:
      default:
    }
    if (!getUnknownFields().equals(other.getUnknownFields())) return false;
    return true;
  }

  @java.lang.Override
  public int hashCode() {
    if (memoizedHashCode != 0) {
      return memoizedHashCode;
    }
    int hash = 41;
    hash = (19 * hash) + getDescriptor().hashCode();
    hash = (37 * hash) + APP_PACKAGE_ID_FIELD_NUMBER;
    hash = (53 * hash) + getAppPackageId().hashCode();
    hash = (37 * hash) + APP_INITIAL_ACTIVITY_FIELD_NUMBER;
    hash = (53 * hash) + getAppInitialActivity().hashCode();
    hash = (37 * hash) + MAX_DEPTH_FIELD_NUMBER;
    hash = (53 * hash) + getMaxDepth();
    hash = (37 * hash) + MAX_STEPS_FIELD_NUMBER;
    hash = (53 * hash) + getMaxSteps();
    if (getRoboDirectivesCount() > 0) {
      hash = (37 * hash) + ROBO_DIRECTIVES_FIELD_NUMBER;
      hash = (53 * hash) + getRoboDirectivesList().hashCode();
    }
    if (hasRoboScript()) {
      hash = (37 * hash) + ROBO_SCRIPT_FIELD_NUMBER;
      hash = (53 * hash) + getRoboScript().hashCode();
    }
    if (getStartingIntentsCount() > 0) {
      hash = (37 * hash) + STARTING_INTENTS_FIELD_NUMBER;
      hash = (53 * hash) + getStartingIntentsList().hashCode();
    }
    switch (appUnderTestCase_) {
      case 1:
        hash = (37 * hash) + APP_APK_FIELD_NUMBER;
        hash = (53 * hash) + getAppApk().hashCode();
        break;
      case 16:
        hash = (37 * hash) + APP_BUNDLE_FIELD_NUMBER;
        hash = (53 * hash) + getAppBundle().hashCode();
        break;
      case 0:
      default:
    }
    hash = (29 * hash) + getUnknownFields().hashCode();
    memoizedHashCode = hash;
    return hash;
  }

  public static com.google.devtools.testing.v1.AndroidRoboTest parseFrom(
      java.nio.ByteBuffer data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static com.google.devtools.testing.v1.AndroidRoboTest parseFrom(
      java.nio.ByteBuffer data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static com.google.devtools.testing.v1.AndroidRoboTest parseFrom(
      com.google.protobuf.ByteString data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static com.google.devtools.testing.v1.AndroidRoboTest parseFrom(
      com.google.protobuf.ByteString data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static com.google.devtools.testing.v1.AndroidRoboTest parseFrom(byte[] data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static com.google.devtools.testing.v1.AndroidRoboTest parseFrom(
      byte[] data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static com.google.devtools.testing.v1.AndroidRoboTest parseFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input);
  }
  public static com.google.devtools.testing.v1.AndroidRoboTest parseFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input, extensionRegistry);
  }
  public static com.google.devtools.testing.v1.AndroidRoboTest parseDelimitedFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseDelimitedWithIOException(PARSER, input);
  }
  public static com.google.devtools.testing.v1.AndroidRoboTest parseDelimitedFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
  }
  public static com.google.devtools.testing.v1.AndroidRoboTest parseFrom(
      com.google.protobuf.CodedInputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input);
  }
  public static com.google.devtools.testing.v1.AndroidRoboTest parseFrom(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input, extensionRegistry);
  }

  @java.lang.Override
  public Builder newBuilderForType() { return newBuilder(); }
  public static Builder newBuilder() {
    return DEFAULT_INSTANCE.toBuilder();
  }
  public static Builder newBuilder(com.google.devtools.testing.v1.AndroidRoboTest prototype) {
    return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
  }
  @java.lang.Override
  public Builder toBuilder() {
    return this == DEFAULT_INSTANCE
        ? new Builder() : new Builder().mergeFrom(this);
  }

  @java.lang.Override
  protected Builder newBuilderForType(
      com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
    Builder builder = new Builder(parent);
    return builder;
  }
  /**
   * <pre>
   * A test of an android application that explores the application on a virtual
   * or physical Android Device, finding culprits and crashes as it goes.
   * Next tag: 30
   * </pre>
   *
   * Protobuf type {@code google.devtools.testing.v1.AndroidRoboTest}
   */
  public static final class Builder extends
      com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
      // @@protoc_insertion_point(builder_implements:google.devtools.testing.v1.AndroidRoboTest)
      com.google.devtools.testing.v1.AndroidRoboTestOrBuilder {
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.google.devtools.testing.v1.TestExecutionProto.internal_static_google_devtools_testing_v1_AndroidRoboTest_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.google.devtools.testing.v1.TestExecutionProto.internal_static_google_devtools_testing_v1_AndroidRoboTest_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.google.devtools.testing.v1.AndroidRoboTest.class, com.google.devtools.testing.v1.AndroidRoboTest.Builder.class);
    }

    // Construct using com.google.devtools.testing.v1.AndroidRoboTest.newBuilder()
    private Builder() {

    }

    private Builder(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      super(parent);

    }
    @java.lang.Override
    public Builder clear() {
      super.clear();
      bitField0_ = 0;
      if (appApkBuilder_ != null) {
        appApkBuilder_.clear();
      }
      if (appBundleBuilder_ != null) {
        appBundleBuilder_.clear();
      }
      appPackageId_ = "";
      appInitialActivity_ = "";
      maxDepth_ = 0;
      maxSteps_ = 0;
      if (roboDirectivesBuilder_ == null) {
        roboDirectives_ = java.util.Collections.emptyList();
      } else {
        roboDirectives_ = null;
        roboDirectivesBuilder_.clear();
      }
      bitField0_ = (bitField0_ & ~0x00000040);
      roboScript_ = null;
      if (roboScriptBuilder_ != null) {
        roboScriptBuilder_.dispose();
        roboScriptBuilder_ = null;
      }
      if (startingIntentsBuilder_ == null) {
        startingIntents_ = java.util.Collections.emptyList();
      } else {
        startingIntents_ = null;
        startingIntentsBuilder_.clear();
      }
      bitField0_ = (bitField0_ & ~0x00000100);
      appUnderTestCase_ = 0;
      appUnderTest_ = null;
      return this;
    }

    @java.lang.Override
    public com.google.protobuf.Descriptors.Descriptor
        getDescriptorForType() {
      return com.google.devtools.testing.v1.TestExecutionProto.internal_static_google_devtools_testing_v1_AndroidRoboTest_descriptor;
    }

    @java.lang.Override
    public com.google.devtools.testing.v1.AndroidRoboTest getDefaultInstanceForType() {
      return com.google.devtools.testing.v1.AndroidRoboTest.getDefaultInstance();
    }

    @java.lang.Override
    public com.google.devtools.testing.v1.AndroidRoboTest build() {
      com.google.devtools.testing.v1.AndroidRoboTest result = buildPartial();
      if (!result.isInitialized()) {
        throw newUninitializedMessageException(result);
      }
      return result;
    }

    @java.lang.Override
    public com.google.devtools.testing.v1.AndroidRoboTest buildPartial() {
      com.google.devtools.testing.v1.AndroidRoboTest result = new com.google.devtools.testing.v1.AndroidRoboTest(this);
      buildPartialRepeatedFields(result);
      if (bitField0_ != 0) { buildPartial0(result); }
      buildPartialOneofs(result);
      onBuilt();
      return result;
    }

    private void buildPartialRepeatedFields(com.google.devtools.testing.v1.AndroidRoboTest result) {
      if (roboDirectivesBuilder_ == null) {
        if (((bitField0_ & 0x00000040) != 0)) {
          roboDirectives_ = java.util.Collections.unmodifiableList(roboDirectives_);
          bitField0_ = (bitField0_ & ~0x00000040);
        }
        result.roboDirectives_ = roboDirectives_;
      } else {
        result.roboDirectives_ = roboDirectivesBuilder_.build();
      }
      if (startingIntentsBuilder_ == null) {
        if (((bitField0_ & 0x00000100) != 0)) {
          startingIntents_ = java.util.Collections.unmodifiableList(startingIntents_);
          bitField0_ = (bitField0_ & ~0x00000100);
        }
        result.startingIntents_ = startingIntents_;
      } else {
        result.startingIntents_ = startingIntentsBuilder_.build();
      }
    }

    private void buildPartial0(com.google.devtools.testing.v1.AndroidRoboTest result) {
      int from_bitField0_ = bitField0_;
      if (((from_bitField0_ & 0x00000004) != 0)) {
        result.appPackageId_ = appPackageId_;
      }
      if (((from_bitField0_ & 0x00000008) != 0)) {
        result.appInitialActivity_ = appInitialActivity_;
      }
      if (((from_bitField0_ & 0x00000010) != 0)) {
        result.maxDepth_ = maxDepth_;
      }
      if (((from_bitField0_ & 0x00000020) != 0)) {
        result.maxSteps_ = maxSteps_;
      }
      if (((from_bitField0_ & 0x00000080) != 0)) {
        result.roboScript_ = roboScriptBuilder_ == null
            ? roboScript_
            : roboScriptBuilder_.build();
      }
    }

    private void buildPartialOneofs(com.google.devtools.testing.v1.AndroidRoboTest result) {
      result.appUnderTestCase_ = appUnderTestCase_;
      result.appUnderTest_ = this.appUnderTest_;
      if (appUnderTestCase_ == 1 &&
          appApkBuilder_ != null) {
        result.appUnderTest_ = appApkBuilder_.build();
      }
      if (appUnderTestCase_ == 16 &&
          appBundleBuilder_ != null) {
        result.appUnderTest_ = appBundleBuilder_.build();
      }
    }

    @java.lang.Override
    public Builder clone() {
      return super.clone();
    }
    @java.lang.Override
    public Builder setField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        java.lang.Object value) {
      return super.setField(field, value);
    }
    @java.lang.Override
    public Builder clearField(
        com.google.protobuf.Descriptors.FieldDescriptor field) {
      return super.clearField(field);
    }
    @java.lang.Override
    public Builder clearOneof(
        com.google.protobuf.Descriptors.OneofDescriptor oneof) {
      return super.clearOneof(oneof);
    }
    @java.lang.Override
    public Builder setRepeatedField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        int index, java.lang.Object value) {
      return super.setRepeatedField(field, index, value);
    }
    @java.lang.Override
    public Builder addRepeatedField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        java.lang.Object value) {
      return super.addRepeatedField(field, value);
    }
    @java.lang.Override
    public Builder mergeFrom(com.google.protobuf.Message other) {
      if (other instanceof com.google.devtools.testing.v1.AndroidRoboTest) {
        return mergeFrom((com.google.devtools.testing.v1.AndroidRoboTest)other);
      } else {
        super.mergeFrom(other);
        return this;
      }
    }

    public Builder mergeFrom(com.google.devtools.testing.v1.AndroidRoboTest other) {
      if (other == com.google.devtools.testing.v1.AndroidRoboTest.getDefaultInstance()) return this;
      if (!other.getAppPackageId().isEmpty()) {
        appPackageId_ = other.appPackageId_;
        bitField0_ |= 0x00000004;
        onChanged();
      }
      if (!other.getAppInitialActivity().isEmpty()) {
        appInitialActivity_ = other.appInitialActivity_;
        bitField0_ |= 0x00000008;
        onChanged();
      }
      if (other.getMaxDepth() != 0) {
        setMaxDepth(other.getMaxDepth());
      }
      if (other.getMaxSteps() != 0) {
        setMaxSteps(other.getMaxSteps());
      }
      if (roboDirectivesBuilder_ == null) {
        if (!other.roboDirectives_.isEmpty()) {
          if (roboDirectives_.isEmpty()) {
            roboDirectives_ = other.roboDirectives_;
            bitField0_ = (bitField0_ & ~0x00000040);
          } else {
            ensureRoboDirectivesIsMutable();
            roboDirectives_.addAll(other.roboDirectives_);
          }
          onChanged();
        }
      } else {
        if (!other.roboDirectives_.isEmpty()) {
          if (roboDirectivesBuilder_.isEmpty()) {
            roboDirectivesBuilder_.dispose();
            roboDirectivesBuilder_ = null;
            roboDirectives_ = other.roboDirectives_;
            bitField0_ = (bitField0_ & ~0x00000040);
            roboDirectivesBuilder_ = 
              com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?
                 getRoboDirectivesFieldBuilder() : null;
          } else {
            roboDirectivesBuilder_.addAllMessages(other.roboDirectives_);
          }
        }
      }
      if (other.hasRoboScript()) {
        mergeRoboScript(other.getRoboScript());
      }
      if (startingIntentsBuilder_ == null) {
        if (!other.startingIntents_.isEmpty()) {
          if (startingIntents_.isEmpty()) {
            startingIntents_ = other.startingIntents_;
            bitField0_ = (bitField0_ & ~0x00000100);
          } else {
            ensureStartingIntentsIsMutable();
            startingIntents_.addAll(other.startingIntents_);
          }
          onChanged();
        }
      } else {
        if (!other.startingIntents_.isEmpty()) {
          if (startingIntentsBuilder_.isEmpty()) {
            startingIntentsBuilder_.dispose();
            startingIntentsBuilder_ = null;
            startingIntents_ = other.startingIntents_;
            bitField0_ = (bitField0_ & ~0x00000100);
            startingIntentsBuilder_ = 
              com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?
                 getStartingIntentsFieldBuilder() : null;
          } else {
            startingIntentsBuilder_.addAllMessages(other.startingIntents_);
          }
        }
      }
      switch (other.getAppUnderTestCase()) {
        case APP_APK: {
          mergeAppApk(other.getAppApk());
          break;
        }
        case APP_BUNDLE: {
          mergeAppBundle(other.getAppBundle());
          break;
        }
        case APPUNDERTEST_NOT_SET: {
          break;
        }
      }
      this.mergeUnknownFields(other.getUnknownFields());
      onChanged();
      return this;
    }

    @java.lang.Override
    public final boolean isInitialized() {
      return true;
    }

    @java.lang.Override
    public Builder mergeFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 10: {
              input.readMessage(
                  getAppApkFieldBuilder().getBuilder(),
                  extensionRegistry);
              appUnderTestCase_ = 1;
              break;
            } // case 10
            case 18: {
              appPackageId_ = input.readStringRequireUtf8();
              bitField0_ |= 0x00000004;
              break;
            } // case 18
            case 26: {
              appInitialActivity_ = input.readStringRequireUtf8();
              bitField0_ |= 0x00000008;
              break;
            } // case 26
            case 56: {
              maxDepth_ = input.readInt32();
              bitField0_ |= 0x00000010;
              break;
            } // case 56
            case 64: {
              maxSteps_ = input.readInt32();
              bitField0_ |= 0x00000020;
              break;
            } // case 64
            case 90: {
              com.google.devtools.testing.v1.RoboDirective m =
                  input.readMessage(
                      com.google.devtools.testing.v1.RoboDirective.parser(),
                      extensionRegistry);
              if (roboDirectivesBuilder_ == null) {
                ensureRoboDirectivesIsMutable();
                roboDirectives_.add(m);
              } else {
                roboDirectivesBuilder_.addMessage(m);
              }
              break;
            } // case 90
            case 106: {
              input.readMessage(
                  getRoboScriptFieldBuilder().getBuilder(),
                  extensionRegistry);
              bitField0_ |= 0x00000080;
              break;
            } // case 106
            case 122: {
              com.google.devtools.testing.v1.RoboStartingIntent m =
                  input.readMessage(
                      com.google.devtools.testing.v1.RoboStartingIntent.parser(),
                      extensionRegistry);
              if (startingIntentsBuilder_ == null) {
                ensureStartingIntentsIsMutable();
                startingIntents_.add(m);
              } else {
                startingIntentsBuilder_.addMessage(m);
              }
              break;
            } // case 122
            case 130: {
              input.readMessage(
                  getAppBundleFieldBuilder().getBuilder(),
                  extensionRegistry);
              appUnderTestCase_ = 16;
              break;
            } // case 130
            default: {
              if (!super.parseUnknownField(input, extensionRegistry, tag)) {
                done = true; // was an endgroup tag
              }
              break;
            } // default:
          } // switch (tag)
        } // while (!done)
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.unwrapIOException();
      } finally {
        onChanged();
      } // finally
      return this;
    }
    private int appUnderTestCase_ = 0;
    private java.lang.Object appUnderTest_;
    public AppUnderTestCase
        getAppUnderTestCase() {
      return AppUnderTestCase.forNumber(
          appUnderTestCase_);
    }

    public Builder clearAppUnderTest() {
      appUnderTestCase_ = 0;
      appUnderTest_ = null;
      onChanged();
      return this;
    }

    private int bitField0_;

    private com.google.protobuf.SingleFieldBuilderV3<
        com.google.devtools.testing.v1.FileReference, com.google.devtools.testing.v1.FileReference.Builder, com.google.devtools.testing.v1.FileReferenceOrBuilder> appApkBuilder_;
    /**
     * <pre>
     * The APK for the application under test.
     * </pre>
     *
     * <code>.google.devtools.testing.v1.FileReference app_apk = 1;</code>
     * @return Whether the appApk field is set.
     */
    @java.lang.Override
    public boolean hasAppApk() {
      return appUnderTestCase_ == 1;
    }
    /**
     * <pre>
     * The APK for the application under test.
     * </pre>
     *
     * <code>.google.devtools.testing.v1.FileReference app_apk = 1;</code>
     * @return The appApk.
     */
    @java.lang.Override
    public com.google.devtools.testing.v1.FileReference getAppApk() {
      if (appApkBuilder_ == null) {
        if (appUnderTestCase_ == 1) {
          return (com.google.devtools.testing.v1.FileReference) appUnderTest_;
        }
        return com.google.devtools.testing.v1.FileReference.getDefaultInstance();
      } else {
        if (appUnderTestCase_ == 1) {
          return appApkBuilder_.getMessage();
        }
        return com.google.devtools.testing.v1.FileReference.getDefaultInstance();
      }
    }
    /**
     * <pre>
     * The APK for the application under test.
     * </pre>
     *
     * <code>.google.devtools.testing.v1.FileReference app_apk = 1;</code>
     */
    public Builder setAppApk(com.google.devtools.testing.v1.FileReference value) {
      if (appApkBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        appUnderTest_ = value;
        onChanged();
      } else {
        appApkBuilder_.setMessage(value);
      }
      appUnderTestCase_ = 1;
      return this;
    }
    /**
     * <pre>
     * The APK for the application under test.
     * </pre>
     *
     * <code>.google.devtools.testing.v1.FileReference app_apk = 1;</code>
     */
    public Builder setAppApk(
        com.google.devtools.testing.v1.FileReference.Builder builderForValue) {
      if (appApkBuilder_ == null) {
        appUnderTest_ = builderForValue.build();
        onChanged();
      } else {
        appApkBuilder_.setMessage(builderForValue.build());
      }
      appUnderTestCase_ = 1;
      return this;
    }
    /**
     * <pre>
     * The APK for the application under test.
     * </pre>
     *
     * <code>.google.devtools.testing.v1.FileReference app_apk = 1;</code>
     */
    public Builder mergeAppApk(com.google.devtools.testing.v1.FileReference value) {
      if (appApkBuilder_ == null) {
        if (appUnderTestCase_ == 1 &&
            appUnderTest_ != com.google.devtools.testing.v1.FileReference.getDefaultInstance()) {
          appUnderTest_ = com.google.devtools.testing.v1.FileReference.newBuilder((com.google.devtools.testing.v1.FileReference) appUnderTest_)
              .mergeFrom(value).buildPartial();
        } else {
          appUnderTest_ = value;
        }
        onChanged();
      } else {
        if (appUnderTestCase_ == 1) {
          appApkBuilder_.mergeFrom(value);
        } else {
          appApkBuilder_.setMessage(value);
        }
      }
      appUnderTestCase_ = 1;
      return this;
    }
    /**
     * <pre>
     * The APK for the application under test.
     * </pre>
     *
     * <code>.google.devtools.testing.v1.FileReference app_apk = 1;</code>
     */
    public Builder clearAppApk() {
      if (appApkBuilder_ == null) {
        if (appUnderTestCase_ == 1) {
          appUnderTestCase_ = 0;
          appUnderTest_ = null;
          onChanged();
        }
      } else {
        if (appUnderTestCase_ == 1) {
          appUnderTestCase_ = 0;
          appUnderTest_ = null;
        }
        appApkBuilder_.clear();
      }
      return this;
    }
    /**
     * <pre>
     * The APK for the application under test.
     * </pre>
     *
     * <code>.google.devtools.testing.v1.FileReference app_apk = 1;</code>
     */
    public com.google.devtools.testing.v1.FileReference.Builder getAppApkBuilder() {
      return getAppApkFieldBuilder().getBuilder();
    }
    /**
     * <pre>
     * The APK for the application under test.
     * </pre>
     *
     * <code>.google.devtools.testing.v1.FileReference app_apk = 1;</code>
     */
    @java.lang.Override
    public com.google.devtools.testing.v1.FileReferenceOrBuilder getAppApkOrBuilder() {
      if ((appUnderTestCase_ == 1) && (appApkBuilder_ != null)) {
        return appApkBuilder_.getMessageOrBuilder();
      } else {
        if (appUnderTestCase_ == 1) {
          return (com.google.devtools.testing.v1.FileReference) appUnderTest_;
        }
        return com.google.devtools.testing.v1.FileReference.getDefaultInstance();
      }
    }
    /**
     * <pre>
     * The APK for the application under test.
     * </pre>
     *
     * <code>.google.devtools.testing.v1.FileReference app_apk = 1;</code>
     */
    private com.google.protobuf.SingleFieldBuilderV3<
        com.google.devtools.testing.v1.FileReference, com.google.devtools.testing.v1.FileReference.Builder, com.google.devtools.testing.v1.FileReferenceOrBuilder> 
        getAppApkFieldBuilder() {
      if (appApkBuilder_ == null) {
        if (!(appUnderTestCase_ == 1)) {
          appUnderTest_ = com.google.devtools.testing.v1.FileReference.getDefaultInstance();
        }
        appApkBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
            com.google.devtools.testing.v1.FileReference, com.google.devtools.testing.v1.FileReference.Builder, com.google.devtools.testing.v1.FileReferenceOrBuilder>(
                (com.google.devtools.testing.v1.FileReference) appUnderTest_,
                getParentForChildren(),
                isClean());
        appUnderTest_ = null;
      }
      appUnderTestCase_ = 1;
      onChanged();
      return appApkBuilder_;
    }

    private com.google.protobuf.SingleFieldBuilderV3<
        com.google.devtools.testing.v1.AppBundle, com.google.devtools.testing.v1.AppBundle.Builder, com.google.devtools.testing.v1.AppBundleOrBuilder> appBundleBuilder_;
    /**
     * <pre>
     * A multi-apk app bundle for the application under test.
     * </pre>
     *
     * <code>.google.devtools.testing.v1.AppBundle app_bundle = 16;</code>
     * @return Whether the appBundle field is set.
     */
    @java.lang.Override
    public boolean hasAppBundle() {
      return appUnderTestCase_ == 16;
    }
    /**
     * <pre>
     * A multi-apk app bundle for the application under test.
     * </pre>
     *
     * <code>.google.devtools.testing.v1.AppBundle app_bundle = 16;</code>
     * @return The appBundle.
     */
    @java.lang.Override
    public com.google.devtools.testing.v1.AppBundle getAppBundle() {
      if (appBundleBuilder_ == null) {
        if (appUnderTestCase_ == 16) {
          return (com.google.devtools.testing.v1.AppBundle) appUnderTest_;
        }
        return com.google.devtools.testing.v1.AppBundle.getDefaultInstance();
      } else {
        if (appUnderTestCase_ == 16) {
          return appBundleBuilder_.getMessage();
        }
        return com.google.devtools.testing.v1.AppBundle.getDefaultInstance();
      }
    }
    /**
     * <pre>
     * A multi-apk app bundle for the application under test.
     * </pre>
     *
     * <code>.google.devtools.testing.v1.AppBundle app_bundle = 16;</code>
     */
    public Builder setAppBundle(com.google.devtools.testing.v1.AppBundle value) {
      if (appBundleBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        appUnderTest_ = value;
        onChanged();
      } else {
        appBundleBuilder_.setMessage(value);
      }
      appUnderTestCase_ = 16;
      return this;
    }
    /**
     * <pre>
     * A multi-apk app bundle for the application under test.
     * </pre>
     *
     * <code>.google.devtools.testing.v1.AppBundle app_bundle = 16;</code>
     */
    public Builder setAppBundle(
        com.google.devtools.testing.v1.AppBundle.Builder builderForValue) {
      if (appBundleBuilder_ == null) {
        appUnderTest_ = builderForValue.build();
        onChanged();
      } else {
        appBundleBuilder_.setMessage(builderForValue.build());
      }
      appUnderTestCase_ = 16;
      return this;
    }
    /**
     * <pre>
     * A multi-apk app bundle for the application under test.
     * </pre>
     *
     * <code>.google.devtools.testing.v1.AppBundle app_bundle = 16;</code>
     */
    public Builder mergeAppBundle(com.google.devtools.testing.v1.AppBundle value) {
      if (appBundleBuilder_ == null) {
        if (appUnderTestCase_ == 16 &&
            appUnderTest_ != com.google.devtools.testing.v1.AppBundle.getDefaultInstance()) {
          appUnderTest_ = com.google.devtools.testing.v1.AppBundle.newBuilder((com.google.devtools.testing.v1.AppBundle) appUnderTest_)
              .mergeFrom(value).buildPartial();
        } else {
          appUnderTest_ = value;
        }
        onChanged();
      } else {
        if (appUnderTestCase_ == 16) {
          appBundleBuilder_.mergeFrom(value);
        } else {
          appBundleBuilder_.setMessage(value);
        }
      }
      appUnderTestCase_ = 16;
      return this;
    }
    /**
     * <pre>
     * A multi-apk app bundle for the application under test.
     * </pre>
     *
     * <code>.google.devtools.testing.v1.AppBundle app_bundle = 16;</code>
     */
    public Builder clearAppBundle() {
      if (appBundleBuilder_ == null) {
        if (appUnderTestCase_ == 16) {
          appUnderTestCase_ = 0;
          appUnderTest_ = null;
          onChanged();
        }
      } else {
        if (appUnderTestCase_ == 16) {
          appUnderTestCase_ = 0;
          appUnderTest_ = null;
        }
        appBundleBuilder_.clear();
      }
      return this;
    }
    /**
     * <pre>
     * A multi-apk app bundle for the application under test.
     * </pre>
     *
     * <code>.google.devtools.testing.v1.AppBundle app_bundle = 16;</code>
     */
    public com.google.devtools.testing.v1.AppBundle.Builder getAppBundleBuilder() {
      return getAppBundleFieldBuilder().getBuilder();
    }
    /**
     * <pre>
     * A multi-apk app bundle for the application under test.
     * </pre>
     *
     * <code>.google.devtools.testing.v1.AppBundle app_bundle = 16;</code>
     */
    @java.lang.Override
    public com.google.devtools.testing.v1.AppBundleOrBuilder getAppBundleOrBuilder() {
      if ((appUnderTestCase_ == 16) && (appBundleBuilder_ != null)) {
        return appBundleBuilder_.getMessageOrBuilder();
      } else {
        if (appUnderTestCase_ == 16) {
          return (com.google.devtools.testing.v1.AppBundle) appUnderTest_;
        }
        return com.google.devtools.testing.v1.AppBundle.getDefaultInstance();
      }
    }
    /**
     * <pre>
     * A multi-apk app bundle for the application under test.
     * </pre>
     *
     * <code>.google.devtools.testing.v1.AppBundle app_bundle = 16;</code>
     */
    private com.google.protobuf.SingleFieldBuilderV3<
        com.google.devtools.testing.v1.AppBundle, com.google.devtools.testing.v1.AppBundle.Builder, com.google.devtools.testing.v1.AppBundleOrBuilder> 
        getAppBundleFieldBuilder() {
      if (appBundleBuilder_ == null) {
        if (!(appUnderTestCase_ == 16)) {
          appUnderTest_ = com.google.devtools.testing.v1.AppBundle.getDefaultInstance();
        }
        appBundleBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
            com.google.devtools.testing.v1.AppBundle, com.google.devtools.testing.v1.AppBundle.Builder, com.google.devtools.testing.v1.AppBundleOrBuilder>(
                (com.google.devtools.testing.v1.AppBundle) appUnderTest_,
                getParentForChildren(),
                isClean());
        appUnderTest_ = null;
      }
      appUnderTestCase_ = 16;
      onChanged();
      return appBundleBuilder_;
    }

    private java.lang.Object appPackageId_ = "";
    /**
     * <pre>
     * The java package for the application under test.
     * The default value is determined by examining the application's manifest.
     * </pre>
     *
     * <code>string app_package_id = 2;</code>
     * @return The appPackageId.
     */
    public java.lang.String getAppPackageId() {
      java.lang.Object ref = appPackageId_;
      if (!(ref instanceof java.lang.String)) {
        com.google.protobuf.ByteString bs =
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        appPackageId_ = s;
        return s;
      } else {
        return (java.lang.String) ref;
      }
    }
    /**
     * <pre>
     * The java package for the application under test.
     * The default value is determined by examining the application's manifest.
     * </pre>
     *
     * <code>string app_package_id = 2;</code>
     * @return The bytes for appPackageId.
     */
    public com.google.protobuf.ByteString
        getAppPackageIdBytes() {
      java.lang.Object ref = appPackageId_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        appPackageId_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }
    /**
     * <pre>
     * The java package for the application under test.
     * The default value is determined by examining the application's manifest.
     * </pre>
     *
     * <code>string app_package_id = 2;</code>
     * @param value The appPackageId to set.
     * @return This builder for chaining.
     */
    public Builder setAppPackageId(
        java.lang.String value) {
      if (value == null) { throw new NullPointerException(); }
      appPackageId_ = value;
      bitField0_ |= 0x00000004;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * The java package for the application under test.
     * The default value is determined by examining the application's manifest.
     * </pre>
     *
     * <code>string app_package_id = 2;</code>
     * @return This builder for chaining.
     */
    public Builder clearAppPackageId() {
      appPackageId_ = getDefaultInstance().getAppPackageId();
      bitField0_ = (bitField0_ & ~0x00000004);
      onChanged();
      return this;
    }
    /**
     * <pre>
     * The java package for the application under test.
     * The default value is determined by examining the application's manifest.
     * </pre>
     *
     * <code>string app_package_id = 2;</code>
     * @param value The bytes for appPackageId to set.
     * @return This builder for chaining.
     */
    public Builder setAppPackageIdBytes(
        com.google.protobuf.ByteString value) {
      if (value == null) { throw new NullPointerException(); }
      checkByteStringIsUtf8(value);
      appPackageId_ = value;
      bitField0_ |= 0x00000004;
      onChanged();
      return this;
    }

    private java.lang.Object appInitialActivity_ = "";
    /**
     * <pre>
     * The initial activity that should be used to start the app.
     * </pre>
     *
     * <code>string app_initial_activity = 3;</code>
     * @return The appInitialActivity.
     */
    public java.lang.String getAppInitialActivity() {
      java.lang.Object ref = appInitialActivity_;
      if (!(ref instanceof java.lang.String)) {
        com.google.protobuf.ByteString bs =
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        appInitialActivity_ = s;
        return s;
      } else {
        return (java.lang.String) ref;
      }
    }
    /**
     * <pre>
     * The initial activity that should be used to start the app.
     * </pre>
     *
     * <code>string app_initial_activity = 3;</code>
     * @return The bytes for appInitialActivity.
     */
    public com.google.protobuf.ByteString
        getAppInitialActivityBytes() {
      java.lang.Object ref = appInitialActivity_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        appInitialActivity_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }
    /**
     * <pre>
     * The initial activity that should be used to start the app.
     * </pre>
     *
     * <code>string app_initial_activity = 3;</code>
     * @param value The appInitialActivity to set.
     * @return This builder for chaining.
     */
    public Builder setAppInitialActivity(
        java.lang.String value) {
      if (value == null) { throw new NullPointerException(); }
      appInitialActivity_ = value;
      bitField0_ |= 0x00000008;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * The initial activity that should be used to start the app.
     * </pre>
     *
     * <code>string app_initial_activity = 3;</code>
     * @return This builder for chaining.
     */
    public Builder clearAppInitialActivity() {
      appInitialActivity_ = getDefaultInstance().getAppInitialActivity();
      bitField0_ = (bitField0_ & ~0x00000008);
      onChanged();
      return this;
    }
    /**
     * <pre>
     * The initial activity that should be used to start the app.
     * </pre>
     *
     * <code>string app_initial_activity = 3;</code>
     * @param value The bytes for appInitialActivity to set.
     * @return This builder for chaining.
     */
    public Builder setAppInitialActivityBytes(
        com.google.protobuf.ByteString value) {
      if (value == null) { throw new NullPointerException(); }
      checkByteStringIsUtf8(value);
      appInitialActivity_ = value;
      bitField0_ |= 0x00000008;
      onChanged();
      return this;
    }

    private int maxDepth_ ;
    /**
     * <pre>
     * The max depth of the traversal stack Robo can explore. Needs to be at least
     * 2 to make Robo explore the app beyond the first activity.
     * Default is 50.
     * </pre>
     *
     * <code>int32 max_depth = 7 [deprecated = true];</code>
     * @deprecated google.devtools.testing.v1.AndroidRoboTest.max_depth is deprecated.
     *     See google/devtools/testing/v1/test_execution.proto;l=593
     * @return The maxDepth.
     */
    @java.lang.Override
    @java.lang.Deprecated public int getMaxDepth() {
      return maxDepth_;
    }
    /**
     * <pre>
     * The max depth of the traversal stack Robo can explore. Needs to be at least
     * 2 to make Robo explore the app beyond the first activity.
     * Default is 50.
     * </pre>
     *
     * <code>int32 max_depth = 7 [deprecated = true];</code>
     * @deprecated google.devtools.testing.v1.AndroidRoboTest.max_depth is deprecated.
     *     See google/devtools/testing/v1/test_execution.proto;l=593
     * @param value The maxDepth to set.
     * @return This builder for chaining.
     */
    @java.lang.Deprecated public Builder setMaxDepth(int value) {
      
      maxDepth_ = value;
      bitField0_ |= 0x00000010;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * The max depth of the traversal stack Robo can explore. Needs to be at least
     * 2 to make Robo explore the app beyond the first activity.
     * Default is 50.
     * </pre>
     *
     * <code>int32 max_depth = 7 [deprecated = true];</code>
     * @deprecated google.devtools.testing.v1.AndroidRoboTest.max_depth is deprecated.
     *     See google/devtools/testing/v1/test_execution.proto;l=593
     * @return This builder for chaining.
     */
    @java.lang.Deprecated public Builder clearMaxDepth() {
      bitField0_ = (bitField0_ & ~0x00000010);
      maxDepth_ = 0;
      onChanged();
      return this;
    }

    private int maxSteps_ ;
    /**
     * <pre>
     * The max number of steps Robo can execute.
     * Default is no limit.
     * </pre>
     *
     * <code>int32 max_steps = 8 [deprecated = true];</code>
     * @deprecated google.devtools.testing.v1.AndroidRoboTest.max_steps is deprecated.
     *     See google/devtools/testing/v1/test_execution.proto;l=597
     * @return The maxSteps.
     */
    @java.lang.Override
    @java.lang.Deprecated public int getMaxSteps() {
      return maxSteps_;
    }
    /**
     * <pre>
     * The max number of steps Robo can execute.
     * Default is no limit.
     * </pre>
     *
     * <code>int32 max_steps = 8 [deprecated = true];</code>
     * @deprecated google.devtools.testing.v1.AndroidRoboTest.max_steps is deprecated.
     *     See google/devtools/testing/v1/test_execution.proto;l=597
     * @param value The maxSteps to set.
     * @return This builder for chaining.
     */
    @java.lang.Deprecated public Builder setMaxSteps(int value) {
      
      maxSteps_ = value;
      bitField0_ |= 0x00000020;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * The max number of steps Robo can execute.
     * Default is no limit.
     * </pre>
     *
     * <code>int32 max_steps = 8 [deprecated = true];</code>
     * @deprecated google.devtools.testing.v1.AndroidRoboTest.max_steps is deprecated.
     *     See google/devtools/testing/v1/test_execution.proto;l=597
     * @return This builder for chaining.
     */
    @java.lang.Deprecated public Builder clearMaxSteps() {
      bitField0_ = (bitField0_ & ~0x00000020);
      maxSteps_ = 0;
      onChanged();
      return this;
    }

    private java.util.List<com.google.devtools.testing.v1.RoboDirective> roboDirectives_ =
      java.util.Collections.emptyList();
    private void ensureRoboDirectivesIsMutable() {
      if (!((bitField0_ & 0x00000040) != 0)) {
        roboDirectives_ = new java.util.ArrayList<com.google.devtools.testing.v1.RoboDirective>(roboDirectives_);
        bitField0_ |= 0x00000040;
       }
    }

    private com.google.protobuf.RepeatedFieldBuilderV3<
        com.google.devtools.testing.v1.RoboDirective, com.google.devtools.testing.v1.RoboDirective.Builder, com.google.devtools.testing.v1.RoboDirectiveOrBuilder> roboDirectivesBuilder_;

    /**
     * <pre>
     * A set of directives Robo should apply during the crawl.
     * This allows users to customize the crawl. For example, the username and
     * password for a test account can be provided.
     * </pre>
     *
     * <code>repeated .google.devtools.testing.v1.RoboDirective robo_directives = 11;</code>
     */
    public java.util.List<com.google.devtools.testing.v1.RoboDirective> getRoboDirectivesList() {
      if (roboDirectivesBuilder_ == null) {
        return java.util.Collections.unmodifiableList(roboDirectives_);
      } else {
        return roboDirectivesBuilder_.getMessageList();
      }
    }
    /**
     * <pre>
     * A set of directives Robo should apply during the crawl.
     * This allows users to customize the crawl. For example, the username and
     * password for a test account can be provided.
     * </pre>
     *
     * <code>repeated .google.devtools.testing.v1.RoboDirective robo_directives = 11;</code>
     */
    public int getRoboDirectivesCount() {
      if (roboDirectivesBuilder_ == null) {
        return roboDirectives_.size();
      } else {
        return roboDirectivesBuilder_.getCount();
      }
    }
    /**
     * <pre>
     * A set of directives Robo should apply during the crawl.
     * This allows users to customize the crawl. For example, the username and
     * password for a test account can be provided.
     * </pre>
     *
     * <code>repeated .google.devtools.testing.v1.RoboDirective robo_directives = 11;</code>
     */
    public com.google.devtools.testing.v1.RoboDirective getRoboDirectives(int index) {
      if (roboDirectivesBuilder_ == null) {
        return roboDirectives_.get(index);
      } else {
        return roboDirectivesBuilder_.getMessage(index);
      }
    }
    /**
     * <pre>
     * A set of directives Robo should apply during the crawl.
     * This allows users to customize the crawl. For example, the username and
     * password for a test account can be provided.
     * </pre>
     *
     * <code>repeated .google.devtools.testing.v1.RoboDirective robo_directives = 11;</code>
     */
    public Builder setRoboDirectives(
        int index, com.google.devtools.testing.v1.RoboDirective value) {
      if (roboDirectivesBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureRoboDirectivesIsMutable();
        roboDirectives_.set(index, value);
        onChanged();
      } else {
        roboDirectivesBuilder_.setMessage(index, value);
      }
      return this;
    }
    /**
     * <pre>
     * A set of directives Robo should apply during the crawl.
     * This allows users to customize the crawl. For example, the username and
     * password for a test account can be provided.
     * </pre>
     *
     * <code>repeated .google.devtools.testing.v1.RoboDirective robo_directives = 11;</code>
     */
    public Builder setRoboDirectives(
        int index, com.google.devtools.testing.v1.RoboDirective.Builder builderForValue) {
      if (roboDirectivesBuilder_ == null) {
        ensureRoboDirectivesIsMutable();
        roboDirectives_.set(index, builderForValue.build());
        onChanged();
      } else {
        roboDirectivesBuilder_.setMessage(index, builderForValue.build());
      }
      return this;
    }
    /**
     * <pre>
     * A set of directives Robo should apply during the crawl.
     * This allows users to customize the crawl. For example, the username and
     * password for a test account can be provided.
     * </pre>
     *
     * <code>repeated .google.devtools.testing.v1.RoboDirective robo_directives = 11;</code>
     */
    public Builder addRoboDirectives(com.google.devtools.testing.v1.RoboDirective value) {
      if (roboDirectivesBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureRoboDirectivesIsMutable();
        roboDirectives_.add(value);
        onChanged();
      } else {
        roboDirectivesBuilder_.addMessage(value);
      }
      return this;
    }
    /**
     * <pre>
     * A set of directives Robo should apply during the crawl.
     * This allows users to customize the crawl. For example, the username and
     * password for a test account can be provided.
     * </pre>
     *
     * <code>repeated .google.devtools.testing.v1.RoboDirective robo_directives = 11;</code>
     */
    public Builder addRoboDirectives(
        int index, com.google.devtools.testing.v1.RoboDirective value) {
      if (roboDirectivesBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureRoboDirectivesIsMutable();
        roboDirectives_.add(index, value);
        onChanged();
      } else {
        roboDirectivesBuilder_.addMessage(index, value);
      }
      return this;
    }
    /**
     * <pre>
     * A set of directives Robo should apply during the crawl.
     * This allows users to customize the crawl. For example, the username and
     * password for a test account can be provided.
     * </pre>
     *
     * <code>repeated .google.devtools.testing.v1.RoboDirective robo_directives = 11;</code>
     */
    public Builder addRoboDirectives(
        com.google.devtools.testing.v1.RoboDirective.Builder builderForValue) {
      if (roboDirectivesBuilder_ == null) {
        ensureRoboDirectivesIsMutable();
        roboDirectives_.add(builderForValue.build());
        onChanged();
      } else {
        roboDirectivesBuilder_.addMessage(builderForValue.build());
      }
      return this;
    }
    /**
     * <pre>
     * A set of directives Robo should apply during the crawl.
     * This allows users to customize the crawl. For example, the username and
     * password for a test account can be provided.
     * </pre>
     *
     * <code>repeated .google.devtools.testing.v1.RoboDirective robo_directives = 11;</code>
     */
    public Builder addRoboDirectives(
        int index, com.google.devtools.testing.v1.RoboDirective.Builder builderForValue) {
      if (roboDirectivesBuilder_ == null) {
        ensureRoboDirectivesIsMutable();
        roboDirectives_.add(index, builderForValue.build());
        onChanged();
      } else {
        roboDirectivesBuilder_.addMessage(index, builderForValue.build());
      }
      return this;
    }
    /**
     * <pre>
     * A set of directives Robo should apply during the crawl.
     * This allows users to customize the crawl. For example, the username and
     * password for a test account can be provided.
     * </pre>
     *
     * <code>repeated .google.devtools.testing.v1.RoboDirective robo_directives = 11;</code>
     */
    public Builder addAllRoboDirectives(
        java.lang.Iterable<? extends com.google.devtools.testing.v1.RoboDirective> values) {
      if (roboDirectivesBuilder_ == null) {
        ensureRoboDirectivesIsMutable();
        com.google.protobuf.AbstractMessageLite.Builder.addAll(
            values, roboDirectives_);
        onChanged();
      } else {
        roboDirectivesBuilder_.addAllMessages(values);
      }
      return this;
    }
    /**
     * <pre>
     * A set of directives Robo should apply during the crawl.
     * This allows users to customize the crawl. For example, the username and
     * password for a test account can be provided.
     * </pre>
     *
     * <code>repeated .google.devtools.testing.v1.RoboDirective robo_directives = 11;</code>
     */
    public Builder clearRoboDirectives() {
      if (roboDirectivesBuilder_ == null) {
        roboDirectives_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000040);
        onChanged();
      } else {
        roboDirectivesBuilder_.clear();
      }
      return this;
    }
    /**
     * <pre>
     * A set of directives Robo should apply during the crawl.
     * This allows users to customize the crawl. For example, the username and
     * password for a test account can be provided.
     * </pre>
     *
     * <code>repeated .google.devtools.testing.v1.RoboDirective robo_directives = 11;</code>
     */
    public Builder removeRoboDirectives(int index) {
      if (roboDirectivesBuilder_ == null) {
        ensureRoboDirectivesIsMutable();
        roboDirectives_.remove(index);
        onChanged();
      } else {
        roboDirectivesBuilder_.remove(index);
      }
      return this;
    }
    /**
     * <pre>
     * A set of directives Robo should apply during the crawl.
     * This allows users to customize the crawl. For example, the username and
     * password for a test account can be provided.
     * </pre>
     *
     * <code>repeated .google.devtools.testing.v1.RoboDirective robo_directives = 11;</code>
     */
    public com.google.devtools.testing.v1.RoboDirective.Builder getRoboDirectivesBuilder(
        int index) {
      return getRoboDirectivesFieldBuilder().getBuilder(index);
    }
    /**
     * <pre>
     * A set of directives Robo should apply during the crawl.
     * This allows users to customize the crawl. For example, the username and
     * password for a test account can be provided.
     * </pre>
     *
     * <code>repeated .google.devtools.testing.v1.RoboDirective robo_directives = 11;</code>
     */
    public com.google.devtools.testing.v1.RoboDirectiveOrBuilder getRoboDirectivesOrBuilder(
        int index) {
      if (roboDirectivesBuilder_ == null) {
        return roboDirectives_.get(index);  } else {
        return roboDirectivesBuilder_.getMessageOrBuilder(index);
      }
    }
    /**
     * <pre>
     * A set of directives Robo should apply during the crawl.
     * This allows users to customize the crawl. For example, the username and
     * password for a test account can be provided.
     * </pre>
     *
     * <code>repeated .google.devtools.testing.v1.RoboDirective robo_directives = 11;</code>
     */
    public java.util.List<? extends com.google.devtools.testing.v1.RoboDirectiveOrBuilder> 
         getRoboDirectivesOrBuilderList() {
      if (roboDirectivesBuilder_ != null) {
        return roboDirectivesBuilder_.getMessageOrBuilderList();
      } else {
        return java.util.Collections.unmodifiableList(roboDirectives_);
      }
    }
    /**
     * <pre>
     * A set of directives Robo should apply during the crawl.
     * This allows users to customize the crawl. For example, the username and
     * password for a test account can be provided.
     * </pre>
     *
     * <code>repeated .google.devtools.testing.v1.RoboDirective robo_directives = 11;</code>
     */
    public com.google.devtools.testing.v1.RoboDirective.Builder addRoboDirectivesBuilder() {
      return getRoboDirectivesFieldBuilder().addBuilder(
          com.google.devtools.testing.v1.RoboDirective.getDefaultInstance());
    }
    /**
     * <pre>
     * A set of directives Robo should apply during the crawl.
     * This allows users to customize the crawl. For example, the username and
     * password for a test account can be provided.
     * </pre>
     *
     * <code>repeated .google.devtools.testing.v1.RoboDirective robo_directives = 11;</code>
     */
    public com.google.devtools.testing.v1.RoboDirective.Builder addRoboDirectivesBuilder(
        int index) {
      return getRoboDirectivesFieldBuilder().addBuilder(
          index, com.google.devtools.testing.v1.RoboDirective.getDefaultInstance());
    }
    /**
     * <pre>
     * A set of directives Robo should apply during the crawl.
     * This allows users to customize the crawl. For example, the username and
     * password for a test account can be provided.
     * </pre>
     *
     * <code>repeated .google.devtools.testing.v1.RoboDirective robo_directives = 11;</code>
     */
    public java.util.List<com.google.devtools.testing.v1.RoboDirective.Builder> 
         getRoboDirectivesBuilderList() {
      return getRoboDirectivesFieldBuilder().getBuilderList();
    }
    private com.google.protobuf.RepeatedFieldBuilderV3<
        com.google.devtools.testing.v1.RoboDirective, com.google.devtools.testing.v1.RoboDirective.Builder, com.google.devtools.testing.v1.RoboDirectiveOrBuilder> 
        getRoboDirectivesFieldBuilder() {
      if (roboDirectivesBuilder_ == null) {
        roboDirectivesBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<
            com.google.devtools.testing.v1.RoboDirective, com.google.devtools.testing.v1.RoboDirective.Builder, com.google.devtools.testing.v1.RoboDirectiveOrBuilder>(
                roboDirectives_,
                ((bitField0_ & 0x00000040) != 0),
                getParentForChildren(),
                isClean());
        roboDirectives_ = null;
      }
      return roboDirectivesBuilder_;
    }

    private com.google.devtools.testing.v1.FileReference roboScript_;
    private com.google.protobuf.SingleFieldBuilderV3<
        com.google.devtools.testing.v1.FileReference, com.google.devtools.testing.v1.FileReference.Builder, com.google.devtools.testing.v1.FileReferenceOrBuilder> roboScriptBuilder_;
    /**
     * <pre>
     * A JSON file with a sequence of actions Robo should perform as a prologue
     * for the crawl.
     * </pre>
     *
     * <code>.google.devtools.testing.v1.FileReference robo_script = 13;</code>
     * @return Whether the roboScript field is set.
     */
    public boolean hasRoboScript() {
      return ((bitField0_ & 0x00000080) != 0);
    }
    /**
     * <pre>
     * A JSON file with a sequence of actions Robo should perform as a prologue
     * for the crawl.
     * </pre>
     *
     * <code>.google.devtools.testing.v1.FileReference robo_script = 13;</code>
     * @return The roboScript.
     */
    public com.google.devtools.testing.v1.FileReference getRoboScript() {
      if (roboScriptBuilder_ == null) {
        return roboScript_ == null ? com.google.devtools.testing.v1.FileReference.getDefaultInstance() : roboScript_;
      } else {
        return roboScriptBuilder_.getMessage();
      }
    }
    /**
     * <pre>
     * A JSON file with a sequence of actions Robo should perform as a prologue
     * for the crawl.
     * </pre>
     *
     * <code>.google.devtools.testing.v1.FileReference robo_script = 13;</code>
     */
    public Builder setRoboScript(com.google.devtools.testing.v1.FileReference value) {
      if (roboScriptBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        roboScript_ = value;
      } else {
        roboScriptBuilder_.setMessage(value);
      }
      bitField0_ |= 0x00000080;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * A JSON file with a sequence of actions Robo should perform as a prologue
     * for the crawl.
     * </pre>
     *
     * <code>.google.devtools.testing.v1.FileReference robo_script = 13;</code>
     */
    public Builder setRoboScript(
        com.google.devtools.testing.v1.FileReference.Builder builderForValue) {
      if (roboScriptBuilder_ == null) {
        roboScript_ = builderForValue.build();
      } else {
        roboScriptBuilder_.setMessage(builderForValue.build());
      }
      bitField0_ |= 0x00000080;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * A JSON file with a sequence of actions Robo should perform as a prologue
     * for the crawl.
     * </pre>
     *
     * <code>.google.devtools.testing.v1.FileReference robo_script = 13;</code>
     */
    public Builder mergeRoboScript(com.google.devtools.testing.v1.FileReference value) {
      if (roboScriptBuilder_ == null) {
        if (((bitField0_ & 0x00000080) != 0) &&
          roboScript_ != null &&
          roboScript_ != com.google.devtools.testing.v1.FileReference.getDefaultInstance()) {
          getRoboScriptBuilder().mergeFrom(value);
        } else {
          roboScript_ = value;
        }
      } else {
        roboScriptBuilder_.mergeFrom(value);
      }
      bitField0_ |= 0x00000080;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * A JSON file with a sequence of actions Robo should perform as a prologue
     * for the crawl.
     * </pre>
     *
     * <code>.google.devtools.testing.v1.FileReference robo_script = 13;</code>
     */
    public Builder clearRoboScript() {
      bitField0_ = (bitField0_ & ~0x00000080);
      roboScript_ = null;
      if (roboScriptBuilder_ != null) {
        roboScriptBuilder_.dispose();
        roboScriptBuilder_ = null;
      }
      onChanged();
      return this;
    }
    /**
     * <pre>
     * A JSON file with a sequence of actions Robo should perform as a prologue
     * for the crawl.
     * </pre>
     *
     * <code>.google.devtools.testing.v1.FileReference robo_script = 13;</code>
     */
    public com.google.devtools.testing.v1.FileReference.Builder getRoboScriptBuilder() {
      bitField0_ |= 0x00000080;
      onChanged();
      return getRoboScriptFieldBuilder().getBuilder();
    }
    /**
     * <pre>
     * A JSON file with a sequence of actions Robo should perform as a prologue
     * for the crawl.
     * </pre>
     *
     * <code>.google.devtools.testing.v1.FileReference robo_script = 13;</code>
     */
    public com.google.devtools.testing.v1.FileReferenceOrBuilder getRoboScriptOrBuilder() {
      if (roboScriptBuilder_ != null) {
        return roboScriptBuilder_.getMessageOrBuilder();
      } else {
        return roboScript_ == null ?
            com.google.devtools.testing.v1.FileReference.getDefaultInstance() : roboScript_;
      }
    }
    /**
     * <pre>
     * A JSON file with a sequence of actions Robo should perform as a prologue
     * for the crawl.
     * </pre>
     *
     * <code>.google.devtools.testing.v1.FileReference robo_script = 13;</code>
     */
    private com.google.protobuf.SingleFieldBuilderV3<
        com.google.devtools.testing.v1.FileReference, com.google.devtools.testing.v1.FileReference.Builder, com.google.devtools.testing.v1.FileReferenceOrBuilder> 
        getRoboScriptFieldBuilder() {
      if (roboScriptBuilder_ == null) {
        roboScriptBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
            com.google.devtools.testing.v1.FileReference, com.google.devtools.testing.v1.FileReference.Builder, com.google.devtools.testing.v1.FileReferenceOrBuilder>(
                getRoboScript(),
                getParentForChildren(),
                isClean());
        roboScript_ = null;
      }
      return roboScriptBuilder_;
    }

    private java.util.List<com.google.devtools.testing.v1.RoboStartingIntent> startingIntents_ =
      java.util.Collections.emptyList();
    private void ensureStartingIntentsIsMutable() {
      if (!((bitField0_ & 0x00000100) != 0)) {
        startingIntents_ = new java.util.ArrayList<com.google.devtools.testing.v1.RoboStartingIntent>(startingIntents_);
        bitField0_ |= 0x00000100;
       }
    }

    private com.google.protobuf.RepeatedFieldBuilderV3<
        com.google.devtools.testing.v1.RoboStartingIntent, com.google.devtools.testing.v1.RoboStartingIntent.Builder, com.google.devtools.testing.v1.RoboStartingIntentOrBuilder> startingIntentsBuilder_;

    /**
     * <pre>
     * The intents used to launch the app for the crawl.
     * If none are provided, then the main launcher activity is launched.
     * If some are provided, then only those provided are launched (the main
     * launcher activity must be provided explicitly).
     * </pre>
     *
     * <code>repeated .google.devtools.testing.v1.RoboStartingIntent starting_intents = 15;</code>
     */
    public java.util.List<com.google.devtools.testing.v1.RoboStartingIntent> getStartingIntentsList() {
      if (startingIntentsBuilder_ == null) {
        return java.util.Collections.unmodifiableList(startingIntents_);
      } else {
        return startingIntentsBuilder_.getMessageList();
      }
    }
    /**
     * <pre>
     * The intents used to launch the app for the crawl.
     * If none are provided, then the main launcher activity is launched.
     * If some are provided, then only those provided are launched (the main
     * launcher activity must be provided explicitly).
     * </pre>
     *
     * <code>repeated .google.devtools.testing.v1.RoboStartingIntent starting_intents = 15;</code>
     */
    public int getStartingIntentsCount() {
      if (startingIntentsBuilder_ == null) {
        return startingIntents_.size();
      } else {
        return startingIntentsBuilder_.getCount();
      }
    }
    /**
     * <pre>
     * The intents used to launch the app for the crawl.
     * If none are provided, then the main launcher activity is launched.
     * If some are provided, then only those provided are launched (the main
     * launcher activity must be provided explicitly).
     * </pre>
     *
     * <code>repeated .google.devtools.testing.v1.RoboStartingIntent starting_intents = 15;</code>
     */
    public com.google.devtools.testing.v1.RoboStartingIntent getStartingIntents(int index) {
      if (startingIntentsBuilder_ == null) {
        return startingIntents_.get(index);
      } else {
        return startingIntentsBuilder_.getMessage(index);
      }
    }
    /**
     * <pre>
     * The intents used to launch the app for the crawl.
     * If none are provided, then the main launcher activity is launched.
     * If some are provided, then only those provided are launched (the main
     * launcher activity must be provided explicitly).
     * </pre>
     *
     * <code>repeated .google.devtools.testing.v1.RoboStartingIntent starting_intents = 15;</code>
     */
    public Builder setStartingIntents(
        int index, com.google.devtools.testing.v1.RoboStartingIntent value) {
      if (startingIntentsBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureStartingIntentsIsMutable();
        startingIntents_.set(index, value);
        onChanged();
      } else {
        startingIntentsBuilder_.setMessage(index, value);
      }
      return this;
    }
    /**
     * <pre>
     * The intents used to launch the app for the crawl.
     * If none are provided, then the main launcher activity is launched.
     * If some are provided, then only those provided are launched (the main
     * launcher activity must be provided explicitly).
     * </pre>
     *
     * <code>repeated .google.devtools.testing.v1.RoboStartingIntent starting_intents = 15;</code>
     */
    public Builder setStartingIntents(
        int index, com.google.devtools.testing.v1.RoboStartingIntent.Builder builderForValue) {
      if (startingIntentsBuilder_ == null) {
        ensureStartingIntentsIsMutable();
        startingIntents_.set(index, builderForValue.build());
        onChanged();
      } else {
        startingIntentsBuilder_.setMessage(index, builderForValue.build());
      }
      return this;
    }
    /**
     * <pre>
     * The intents used to launch the app for the crawl.
     * If none are provided, then the main launcher activity is launched.
     * If some are provided, then only those provided are launched (the main
     * launcher activity must be provided explicitly).
     * </pre>
     *
     * <code>repeated .google.devtools.testing.v1.RoboStartingIntent starting_intents = 15;</code>
     */
    public Builder addStartingIntents(com.google.devtools.testing.v1.RoboStartingIntent value) {
      if (startingIntentsBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureStartingIntentsIsMutable();
        startingIntents_.add(value);
        onChanged();
      } else {
        startingIntentsBuilder_.addMessage(value);
      }
      return this;
    }
    /**
     * <pre>
     * The intents used to launch the app for the crawl.
     * If none are provided, then the main launcher activity is launched.
     * If some are provided, then only those provided are launched (the main
     * launcher activity must be provided explicitly).
     * </pre>
     *
     * <code>repeated .google.devtools.testing.v1.RoboStartingIntent starting_intents = 15;</code>
     */
    public Builder addStartingIntents(
        int index, com.google.devtools.testing.v1.RoboStartingIntent value) {
      if (startingIntentsBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureStartingIntentsIsMutable();
        startingIntents_.add(index, value);
        onChanged();
      } else {
        startingIntentsBuilder_.addMessage(index, value);
      }
      return this;
    }
    /**
     * <pre>
     * The intents used to launch the app for the crawl.
     * If none are provided, then the main launcher activity is launched.
     * If some are provided, then only those provided are launched (the main
     * launcher activity must be provided explicitly).
     * </pre>
     *
     * <code>repeated .google.devtools.testing.v1.RoboStartingIntent starting_intents = 15;</code>
     */
    public Builder addStartingIntents(
        com.google.devtools.testing.v1.RoboStartingIntent.Builder builderForValue) {
      if (startingIntentsBuilder_ == null) {
        ensureStartingIntentsIsMutable();
        startingIntents_.add(builderForValue.build());
        onChanged();
      } else {
        startingIntentsBuilder_.addMessage(builderForValue.build());
      }
      return this;
    }
    /**
     * <pre>
     * The intents used to launch the app for the crawl.
     * If none are provided, then the main launcher activity is launched.
     * If some are provided, then only those provided are launched (the main
     * launcher activity must be provided explicitly).
     * </pre>
     *
     * <code>repeated .google.devtools.testing.v1.RoboStartingIntent starting_intents = 15;</code>
     */
    public Builder addStartingIntents(
        int index, com.google.devtools.testing.v1.RoboStartingIntent.Builder builderForValue) {
      if (startingIntentsBuilder_ == null) {
        ensureStartingIntentsIsMutable();
        startingIntents_.add(index, builderForValue.build());
        onChanged();
      } else {
        startingIntentsBuilder_.addMessage(index, builderForValue.build());
      }
      return this;
    }
    /**
     * <pre>
     * The intents used to launch the app for the crawl.
     * If none are provided, then the main launcher activity is launched.
     * If some are provided, then only those provided are launched (the main
     * launcher activity must be provided explicitly).
     * </pre>
     *
     * <code>repeated .google.devtools.testing.v1.RoboStartingIntent starting_intents = 15;</code>
     */
    public Builder addAllStartingIntents(
        java.lang.Iterable<? extends com.google.devtools.testing.v1.RoboStartingIntent> values) {
      if (startingIntentsBuilder_ == null) {
        ensureStartingIntentsIsMutable();
        com.google.protobuf.AbstractMessageLite.Builder.addAll(
            values, startingIntents_);
        onChanged();
      } else {
        startingIntentsBuilder_.addAllMessages(values);
      }
      return this;
    }
    /**
     * <pre>
     * The intents used to launch the app for the crawl.
     * If none are provided, then the main launcher activity is launched.
     * If some are provided, then only those provided are launched (the main
     * launcher activity must be provided explicitly).
     * </pre>
     *
     * <code>repeated .google.devtools.testing.v1.RoboStartingIntent starting_intents = 15;</code>
     */
    public Builder clearStartingIntents() {
      if (startingIntentsBuilder_ == null) {
        startingIntents_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000100);
        onChanged();
      } else {
        startingIntentsBuilder_.clear();
      }
      return this;
    }
    /**
     * <pre>
     * The intents used to launch the app for the crawl.
     * If none are provided, then the main launcher activity is launched.
     * If some are provided, then only those provided are launched (the main
     * launcher activity must be provided explicitly).
     * </pre>
     *
     * <code>repeated .google.devtools.testing.v1.RoboStartingIntent starting_intents = 15;</code>
     */
    public Builder removeStartingIntents(int index) {
      if (startingIntentsBuilder_ == null) {
        ensureStartingIntentsIsMutable();
        startingIntents_.remove(index);
        onChanged();
      } else {
        startingIntentsBuilder_.remove(index);
      }
      return this;
    }
    /**
     * <pre>
     * The intents used to launch the app for the crawl.
     * If none are provided, then the main launcher activity is launched.
     * If some are provided, then only those provided are launched (the main
     * launcher activity must be provided explicitly).
     * </pre>
     *
     * <code>repeated .google.devtools.testing.v1.RoboStartingIntent starting_intents = 15;</code>
     */
    public com.google.devtools.testing.v1.RoboStartingIntent.Builder getStartingIntentsBuilder(
        int index) {
      return getStartingIntentsFieldBuilder().getBuilder(index);
    }
    /**
     * <pre>
     * The intents used to launch the app for the crawl.
     * If none are provided, then the main launcher activity is launched.
     * If some are provided, then only those provided are launched (the main
     * launcher activity must be provided explicitly).
     * </pre>
     *
     * <code>repeated .google.devtools.testing.v1.RoboStartingIntent starting_intents = 15;</code>
     */
    public com.google.devtools.testing.v1.RoboStartingIntentOrBuilder getStartingIntentsOrBuilder(
        int index) {
      if (startingIntentsBuilder_ == null) {
        return startingIntents_.get(index);  } else {
        return startingIntentsBuilder_.getMessageOrBuilder(index);
      }
    }
    /**
     * <pre>
     * The intents used to launch the app for the crawl.
     * If none are provided, then the main launcher activity is launched.
     * If some are provided, then only those provided are launched (the main
     * launcher activity must be provided explicitly).
     * </pre>
     *
     * <code>repeated .google.devtools.testing.v1.RoboStartingIntent starting_intents = 15;</code>
     */
    public java.util.List<? extends com.google.devtools.testing.v1.RoboStartingIntentOrBuilder> 
         getStartingIntentsOrBuilderList() {
      if (startingIntentsBuilder_ != null) {
        return startingIntentsBuilder_.getMessageOrBuilderList();
      } else {
        return java.util.Collections.unmodifiableList(startingIntents_);
      }
    }
    /**
     * <pre>
     * The intents used to launch the app for the crawl.
     * If none are provided, then the main launcher activity is launched.
     * If some are provided, then only those provided are launched (the main
     * launcher activity must be provided explicitly).
     * </pre>
     *
     * <code>repeated .google.devtools.testing.v1.RoboStartingIntent starting_intents = 15;</code>
     */
    public com.google.devtools.testing.v1.RoboStartingIntent.Builder addStartingIntentsBuilder() {
      return getStartingIntentsFieldBuilder().addBuilder(
          com.google.devtools.testing.v1.RoboStartingIntent.getDefaultInstance());
    }
    /**
     * <pre>
     * The intents used to launch the app for the crawl.
     * If none are provided, then the main launcher activity is launched.
     * If some are provided, then only those provided are launched (the main
     * launcher activity must be provided explicitly).
     * </pre>
     *
     * <code>repeated .google.devtools.testing.v1.RoboStartingIntent starting_intents = 15;</code>
     */
    public com.google.devtools.testing.v1.RoboStartingIntent.Builder addStartingIntentsBuilder(
        int index) {
      return getStartingIntentsFieldBuilder().addBuilder(
          index, com.google.devtools.testing.v1.RoboStartingIntent.getDefaultInstance());
    }
    /**
     * <pre>
     * The intents used to launch the app for the crawl.
     * If none are provided, then the main launcher activity is launched.
     * If some are provided, then only those provided are launched (the main
     * launcher activity must be provided explicitly).
     * </pre>
     *
     * <code>repeated .google.devtools.testing.v1.RoboStartingIntent starting_intents = 15;</code>
     */
    public java.util.List<com.google.devtools.testing.v1.RoboStartingIntent.Builder> 
         getStartingIntentsBuilderList() {
      return getStartingIntentsFieldBuilder().getBuilderList();
    }
    private com.google.protobuf.RepeatedFieldBuilderV3<
        com.google.devtools.testing.v1.RoboStartingIntent, com.google.devtools.testing.v1.RoboStartingIntent.Builder, com.google.devtools.testing.v1.RoboStartingIntentOrBuilder> 
        getStartingIntentsFieldBuilder() {
      if (startingIntentsBuilder_ == null) {
        startingIntentsBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<
            com.google.devtools.testing.v1.RoboStartingIntent, com.google.devtools.testing.v1.RoboStartingIntent.Builder, com.google.devtools.testing.v1.RoboStartingIntentOrBuilder>(
                startingIntents_,
                ((bitField0_ & 0x00000100) != 0),
                getParentForChildren(),
                isClean());
        startingIntents_ = null;
      }
      return startingIntentsBuilder_;
    }
    @java.lang.Override
    public final Builder setUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return super.setUnknownFields(unknownFields);
    }

    @java.lang.Override
    public final Builder mergeUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return super.mergeUnknownFields(unknownFields);
    }


    // @@protoc_insertion_point(builder_scope:google.devtools.testing.v1.AndroidRoboTest)
  }

  // @@protoc_insertion_point(class_scope:google.devtools.testing.v1.AndroidRoboTest)
  private static final com.google.devtools.testing.v1.AndroidRoboTest DEFAULT_INSTANCE;
  static {
    DEFAULT_INSTANCE = new com.google.devtools.testing.v1.AndroidRoboTest();
  }

  public static com.google.devtools.testing.v1.AndroidRoboTest getDefaultInstance() {
    return DEFAULT_INSTANCE;
  }

  private static final com.google.protobuf.Parser<AndroidRoboTest>
      PARSER = new com.google.protobuf.AbstractParser<AndroidRoboTest>() {
    @java.lang.Override
    public AndroidRoboTest parsePartialFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      Builder builder = newBuilder();
      try {
        builder.mergeFrom(input, extensionRegistry);
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(builder.buildPartial());
      } catch (com.google.protobuf.UninitializedMessageException e) {
        throw e.asInvalidProtocolBufferException().setUnfinishedMessage(builder.buildPartial());
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(e)
            .setUnfinishedMessage(builder.buildPartial());
      }
      return builder.buildPartial();
    }
  };

  public static com.google.protobuf.Parser<AndroidRoboTest> parser() {
    return PARSER;
  }

  @java.lang.Override
  public com.google.protobuf.Parser<AndroidRoboTest> getParserForType() {
    return PARSER;
  }

  @java.lang.Override
  public com.google.devtools.testing.v1.AndroidRoboTest getDefaultInstanceForType() {
    return DEFAULT_INSTANCE;
  }

}

