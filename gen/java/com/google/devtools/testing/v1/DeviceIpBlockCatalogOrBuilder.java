// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: google/devtools/testing/v1/test_environment_discovery.proto

package com.google.devtools.testing.v1;

public interface DeviceIpBlockCatalogOrBuilder extends
    // @@protoc_insertion_point(interface_extends:google.devtools.testing.v1.DeviceIpBlockCatalog)
    com.google.protobuf.MessageOrBuilder {

  /**
   * <pre>
   * The device IP blocks used by Firebase Test Lab
   * </pre>
   *
   * <code>repeated .google.devtools.testing.v1.DeviceIpBlock ip_blocks = 1;</code>
   */
  java.util.List<com.google.devtools.testing.v1.DeviceIpBlock> 
      getIpBlocksList();
  /**
   * <pre>
   * The device IP blocks used by Firebase Test Lab
   * </pre>
   *
   * <code>repeated .google.devtools.testing.v1.DeviceIpBlock ip_blocks = 1;</code>
   */
  com.google.devtools.testing.v1.DeviceIpBlock getIpBlocks(int index);
  /**
   * <pre>
   * The device IP blocks used by Firebase Test Lab
   * </pre>
   *
   * <code>repeated .google.devtools.testing.v1.DeviceIpBlock ip_blocks = 1;</code>
   */
  int getIpBlocksCount();
  /**
   * <pre>
   * The device IP blocks used by Firebase Test Lab
   * </pre>
   *
   * <code>repeated .google.devtools.testing.v1.DeviceIpBlock ip_blocks = 1;</code>
   */
  java.util.List<? extends com.google.devtools.testing.v1.DeviceIpBlockOrBuilder> 
      getIpBlocksOrBuilderList();
  /**
   * <pre>
   * The device IP blocks used by Firebase Test Lab
   * </pre>
   *
   * <code>repeated .google.devtools.testing.v1.DeviceIpBlock ip_blocks = 1;</code>
   */
  com.google.devtools.testing.v1.DeviceIpBlockOrBuilder getIpBlocksOrBuilder(
      int index);
}
