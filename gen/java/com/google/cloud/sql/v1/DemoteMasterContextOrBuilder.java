// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: google/cloud/sql/v1/cloud_sql_instances.proto

package com.google.cloud.sql.v1;

public interface DemoteMasterContextOrBuilder extends
    // @@protoc_insertion_point(interface_extends:google.cloud.sql.v1.DemoteMasterContext)
    com.google.protobuf.MessageOrBuilder {

  /**
   * <pre>
   * This is always **sql#demoteMasterContext**.
   * </pre>
   *
   * <code>string kind = 1;</code>
   * @return The kind.
   */
  java.lang.String getKind();
  /**
   * <pre>
   * This is always **sql#demoteMasterContext**.
   * </pre>
   *
   * <code>string kind = 1;</code>
   * @return The bytes for kind.
   */
  com.google.protobuf.ByteString
      getKindBytes();

  /**
   * <pre>
   * Verify GTID consistency for demote operation. Default value:
   * **True**. Setting this flag to false enables you to bypass GTID consistency
   * check between on-premises primary instance and Cloud SQL instance during
   * the demotion operation but also exposes you to the risk of future
   * replication failures. Change the value only if you know the reason for the
   * GTID divergence and are confident that doing so will not cause any
   * replication issues.
   * </pre>
   *
   * <code>.google.protobuf.BoolValue verify_gtid_consistency = 2;</code>
   * @return Whether the verifyGtidConsistency field is set.
   */
  boolean hasVerifyGtidConsistency();
  /**
   * <pre>
   * Verify GTID consistency for demote operation. Default value:
   * **True**. Setting this flag to false enables you to bypass GTID consistency
   * check between on-premises primary instance and Cloud SQL instance during
   * the demotion operation but also exposes you to the risk of future
   * replication failures. Change the value only if you know the reason for the
   * GTID divergence and are confident that doing so will not cause any
   * replication issues.
   * </pre>
   *
   * <code>.google.protobuf.BoolValue verify_gtid_consistency = 2;</code>
   * @return The verifyGtidConsistency.
   */
  com.google.protobuf.BoolValue getVerifyGtidConsistency();
  /**
   * <pre>
   * Verify GTID consistency for demote operation. Default value:
   * **True**. Setting this flag to false enables you to bypass GTID consistency
   * check between on-premises primary instance and Cloud SQL instance during
   * the demotion operation but also exposes you to the risk of future
   * replication failures. Change the value only if you know the reason for the
   * GTID divergence and are confident that doing so will not cause any
   * replication issues.
   * </pre>
   *
   * <code>.google.protobuf.BoolValue verify_gtid_consistency = 2;</code>
   */
  com.google.protobuf.BoolValueOrBuilder getVerifyGtidConsistencyOrBuilder();

  /**
   * <pre>
   * The name of the instance which will act as on-premises primary instance
   * in the replication setup.
   * </pre>
   *
   * <code>string master_instance_name = 3;</code>
   * @return The masterInstanceName.
   */
  java.lang.String getMasterInstanceName();
  /**
   * <pre>
   * The name of the instance which will act as on-premises primary instance
   * in the replication setup.
   * </pre>
   *
   * <code>string master_instance_name = 3;</code>
   * @return The bytes for masterInstanceName.
   */
  com.google.protobuf.ByteString
      getMasterInstanceNameBytes();

  /**
   * <pre>
   * Configuration specific to read-replicas replicating from the on-premises
   * primary instance.
   * </pre>
   *
   * <code>.google.cloud.sql.v1.DemoteMasterConfiguration replica_configuration = 4;</code>
   * @return Whether the replicaConfiguration field is set.
   */
  boolean hasReplicaConfiguration();
  /**
   * <pre>
   * Configuration specific to read-replicas replicating from the on-premises
   * primary instance.
   * </pre>
   *
   * <code>.google.cloud.sql.v1.DemoteMasterConfiguration replica_configuration = 4;</code>
   * @return The replicaConfiguration.
   */
  com.google.cloud.sql.v1.DemoteMasterConfiguration getReplicaConfiguration();
  /**
   * <pre>
   * Configuration specific to read-replicas replicating from the on-premises
   * primary instance.
   * </pre>
   *
   * <code>.google.cloud.sql.v1.DemoteMasterConfiguration replica_configuration = 4;</code>
   */
  com.google.cloud.sql.v1.DemoteMasterConfigurationOrBuilder getReplicaConfigurationOrBuilder();

  /**
   * <pre>
   * Flag to skip replication setup on the instance.
   * </pre>
   *
   * <code>bool skip_replication_setup = 5;</code>
   * @return The skipReplicationSetup.
   */
  boolean getSkipReplicationSetup();
}
