// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: google/cloud/sql/v1/cloud_sql_resources.proto

package com.google.cloud.sql.v1;

/**
 * <pre>
 * Read-replica configuration specific to MySQL databases.
 * </pre>
 *
 * Protobuf type {@code google.cloud.sql.v1.MySqlReplicaConfiguration}
 */
public final class MySqlReplicaConfiguration extends
    com.google.protobuf.GeneratedMessageV3 implements
    // @@protoc_insertion_point(message_implements:google.cloud.sql.v1.MySqlReplicaConfiguration)
    MySqlReplicaConfigurationOrBuilder {
private static final long serialVersionUID = 0L;
  // Use MySqlReplicaConfiguration.newBuilder() to construct.
  private MySqlReplicaConfiguration(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
    super(builder);
  }
  private MySqlReplicaConfiguration() {
    dumpFilePath_ = "";
    username_ = "";
    password_ = "";
    caCertificate_ = "";
    clientCertificate_ = "";
    clientKey_ = "";
    sslCipher_ = "";
    kind_ = "";
  }

  @java.lang.Override
  @SuppressWarnings({"unused"})
  protected java.lang.Object newInstance(
      UnusedPrivateParameter unused) {
    return new MySqlReplicaConfiguration();
  }

  @java.lang.Override
  public final com.google.protobuf.UnknownFieldSet
  getUnknownFields() {
    return this.unknownFields;
  }
  public static final com.google.protobuf.Descriptors.Descriptor
      getDescriptor() {
    return com.google.cloud.sql.v1.CloudSqlResourcesProto.internal_static_google_cloud_sql_v1_MySqlReplicaConfiguration_descriptor;
  }

  @java.lang.Override
  protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internalGetFieldAccessorTable() {
    return com.google.cloud.sql.v1.CloudSqlResourcesProto.internal_static_google_cloud_sql_v1_MySqlReplicaConfiguration_fieldAccessorTable
        .ensureFieldAccessorsInitialized(
            com.google.cloud.sql.v1.MySqlReplicaConfiguration.class, com.google.cloud.sql.v1.MySqlReplicaConfiguration.Builder.class);
  }

  public static final int DUMP_FILE_PATH_FIELD_NUMBER = 1;
  @SuppressWarnings("serial")
  private volatile java.lang.Object dumpFilePath_ = "";
  /**
   * <pre>
   * Path to a SQL dump file in Google Cloud Storage from which the replica
   * instance is to be created. The URI is in the form gs://bucketName/fileName.
   * Compressed gzip files (.gz) are also supported.
   * Dumps have the binlog co-ordinates from which replication
   * begins. This can be accomplished by setting --master-data to 1 when using
   * mysqldump.
   * </pre>
   *
   * <code>string dump_file_path = 1;</code>
   * @return The dumpFilePath.
   */
  @java.lang.Override
  public java.lang.String getDumpFilePath() {
    java.lang.Object ref = dumpFilePath_;
    if (ref instanceof java.lang.String) {
      return (java.lang.String) ref;
    } else {
      com.google.protobuf.ByteString bs = 
          (com.google.protobuf.ByteString) ref;
      java.lang.String s = bs.toStringUtf8();
      dumpFilePath_ = s;
      return s;
    }
  }
  /**
   * <pre>
   * Path to a SQL dump file in Google Cloud Storage from which the replica
   * instance is to be created. The URI is in the form gs://bucketName/fileName.
   * Compressed gzip files (.gz) are also supported.
   * Dumps have the binlog co-ordinates from which replication
   * begins. This can be accomplished by setting --master-data to 1 when using
   * mysqldump.
   * </pre>
   *
   * <code>string dump_file_path = 1;</code>
   * @return The bytes for dumpFilePath.
   */
  @java.lang.Override
  public com.google.protobuf.ByteString
      getDumpFilePathBytes() {
    java.lang.Object ref = dumpFilePath_;
    if (ref instanceof java.lang.String) {
      com.google.protobuf.ByteString b = 
          com.google.protobuf.ByteString.copyFromUtf8(
              (java.lang.String) ref);
      dumpFilePath_ = b;
      return b;
    } else {
      return (com.google.protobuf.ByteString) ref;
    }
  }

  public static final int USERNAME_FIELD_NUMBER = 2;
  @SuppressWarnings("serial")
  private volatile java.lang.Object username_ = "";
  /**
   * <pre>
   * The username for the replication connection.
   * </pre>
   *
   * <code>string username = 2;</code>
   * @return The username.
   */
  @java.lang.Override
  public java.lang.String getUsername() {
    java.lang.Object ref = username_;
    if (ref instanceof java.lang.String) {
      return (java.lang.String) ref;
    } else {
      com.google.protobuf.ByteString bs = 
          (com.google.protobuf.ByteString) ref;
      java.lang.String s = bs.toStringUtf8();
      username_ = s;
      return s;
    }
  }
  /**
   * <pre>
   * The username for the replication connection.
   * </pre>
   *
   * <code>string username = 2;</code>
   * @return The bytes for username.
   */
  @java.lang.Override
  public com.google.protobuf.ByteString
      getUsernameBytes() {
    java.lang.Object ref = username_;
    if (ref instanceof java.lang.String) {
      com.google.protobuf.ByteString b = 
          com.google.protobuf.ByteString.copyFromUtf8(
              (java.lang.String) ref);
      username_ = b;
      return b;
    } else {
      return (com.google.protobuf.ByteString) ref;
    }
  }

  public static final int PASSWORD_FIELD_NUMBER = 3;
  @SuppressWarnings("serial")
  private volatile java.lang.Object password_ = "";
  /**
   * <pre>
   * The password for the replication connection.
   * </pre>
   *
   * <code>string password = 3;</code>
   * @return The password.
   */
  @java.lang.Override
  public java.lang.String getPassword() {
    java.lang.Object ref = password_;
    if (ref instanceof java.lang.String) {
      return (java.lang.String) ref;
    } else {
      com.google.protobuf.ByteString bs = 
          (com.google.protobuf.ByteString) ref;
      java.lang.String s = bs.toStringUtf8();
      password_ = s;
      return s;
    }
  }
  /**
   * <pre>
   * The password for the replication connection.
   * </pre>
   *
   * <code>string password = 3;</code>
   * @return The bytes for password.
   */
  @java.lang.Override
  public com.google.protobuf.ByteString
      getPasswordBytes() {
    java.lang.Object ref = password_;
    if (ref instanceof java.lang.String) {
      com.google.protobuf.ByteString b = 
          com.google.protobuf.ByteString.copyFromUtf8(
              (java.lang.String) ref);
      password_ = b;
      return b;
    } else {
      return (com.google.protobuf.ByteString) ref;
    }
  }

  public static final int CONNECT_RETRY_INTERVAL_FIELD_NUMBER = 4;
  private com.google.protobuf.Int32Value connectRetryInterval_;
  /**
   * <pre>
   * Seconds to wait between connect retries. MySQL's default is 60 seconds.
   * </pre>
   *
   * <code>.google.protobuf.Int32Value connect_retry_interval = 4;</code>
   * @return Whether the connectRetryInterval field is set.
   */
  @java.lang.Override
  public boolean hasConnectRetryInterval() {
    return connectRetryInterval_ != null;
  }
  /**
   * <pre>
   * Seconds to wait between connect retries. MySQL's default is 60 seconds.
   * </pre>
   *
   * <code>.google.protobuf.Int32Value connect_retry_interval = 4;</code>
   * @return The connectRetryInterval.
   */
  @java.lang.Override
  public com.google.protobuf.Int32Value getConnectRetryInterval() {
    return connectRetryInterval_ == null ? com.google.protobuf.Int32Value.getDefaultInstance() : connectRetryInterval_;
  }
  /**
   * <pre>
   * Seconds to wait between connect retries. MySQL's default is 60 seconds.
   * </pre>
   *
   * <code>.google.protobuf.Int32Value connect_retry_interval = 4;</code>
   */
  @java.lang.Override
  public com.google.protobuf.Int32ValueOrBuilder getConnectRetryIntervalOrBuilder() {
    return connectRetryInterval_ == null ? com.google.protobuf.Int32Value.getDefaultInstance() : connectRetryInterval_;
  }

  public static final int MASTER_HEARTBEAT_PERIOD_FIELD_NUMBER = 5;
  private com.google.protobuf.Int64Value masterHeartbeatPeriod_;
  /**
   * <pre>
   * Interval in milliseconds between replication heartbeats.
   * </pre>
   *
   * <code>.google.protobuf.Int64Value master_heartbeat_period = 5;</code>
   * @return Whether the masterHeartbeatPeriod field is set.
   */
  @java.lang.Override
  public boolean hasMasterHeartbeatPeriod() {
    return masterHeartbeatPeriod_ != null;
  }
  /**
   * <pre>
   * Interval in milliseconds between replication heartbeats.
   * </pre>
   *
   * <code>.google.protobuf.Int64Value master_heartbeat_period = 5;</code>
   * @return The masterHeartbeatPeriod.
   */
  @java.lang.Override
  public com.google.protobuf.Int64Value getMasterHeartbeatPeriod() {
    return masterHeartbeatPeriod_ == null ? com.google.protobuf.Int64Value.getDefaultInstance() : masterHeartbeatPeriod_;
  }
  /**
   * <pre>
   * Interval in milliseconds between replication heartbeats.
   * </pre>
   *
   * <code>.google.protobuf.Int64Value master_heartbeat_period = 5;</code>
   */
  @java.lang.Override
  public com.google.protobuf.Int64ValueOrBuilder getMasterHeartbeatPeriodOrBuilder() {
    return masterHeartbeatPeriod_ == null ? com.google.protobuf.Int64Value.getDefaultInstance() : masterHeartbeatPeriod_;
  }

  public static final int CA_CERTIFICATE_FIELD_NUMBER = 6;
  @SuppressWarnings("serial")
  private volatile java.lang.Object caCertificate_ = "";
  /**
   * <pre>
   * PEM representation of the trusted CA's x509 certificate.
   * </pre>
   *
   * <code>string ca_certificate = 6;</code>
   * @return The caCertificate.
   */
  @java.lang.Override
  public java.lang.String getCaCertificate() {
    java.lang.Object ref = caCertificate_;
    if (ref instanceof java.lang.String) {
      return (java.lang.String) ref;
    } else {
      com.google.protobuf.ByteString bs = 
          (com.google.protobuf.ByteString) ref;
      java.lang.String s = bs.toStringUtf8();
      caCertificate_ = s;
      return s;
    }
  }
  /**
   * <pre>
   * PEM representation of the trusted CA's x509 certificate.
   * </pre>
   *
   * <code>string ca_certificate = 6;</code>
   * @return The bytes for caCertificate.
   */
  @java.lang.Override
  public com.google.protobuf.ByteString
      getCaCertificateBytes() {
    java.lang.Object ref = caCertificate_;
    if (ref instanceof java.lang.String) {
      com.google.protobuf.ByteString b = 
          com.google.protobuf.ByteString.copyFromUtf8(
              (java.lang.String) ref);
      caCertificate_ = b;
      return b;
    } else {
      return (com.google.protobuf.ByteString) ref;
    }
  }

  public static final int CLIENT_CERTIFICATE_FIELD_NUMBER = 7;
  @SuppressWarnings("serial")
  private volatile java.lang.Object clientCertificate_ = "";
  /**
   * <pre>
   * PEM representation of the replica's x509 certificate.
   * </pre>
   *
   * <code>string client_certificate = 7;</code>
   * @return The clientCertificate.
   */
  @java.lang.Override
  public java.lang.String getClientCertificate() {
    java.lang.Object ref = clientCertificate_;
    if (ref instanceof java.lang.String) {
      return (java.lang.String) ref;
    } else {
      com.google.protobuf.ByteString bs = 
          (com.google.protobuf.ByteString) ref;
      java.lang.String s = bs.toStringUtf8();
      clientCertificate_ = s;
      return s;
    }
  }
  /**
   * <pre>
   * PEM representation of the replica's x509 certificate.
   * </pre>
   *
   * <code>string client_certificate = 7;</code>
   * @return The bytes for clientCertificate.
   */
  @java.lang.Override
  public com.google.protobuf.ByteString
      getClientCertificateBytes() {
    java.lang.Object ref = clientCertificate_;
    if (ref instanceof java.lang.String) {
      com.google.protobuf.ByteString b = 
          com.google.protobuf.ByteString.copyFromUtf8(
              (java.lang.String) ref);
      clientCertificate_ = b;
      return b;
    } else {
      return (com.google.protobuf.ByteString) ref;
    }
  }

  public static final int CLIENT_KEY_FIELD_NUMBER = 8;
  @SuppressWarnings("serial")
  private volatile java.lang.Object clientKey_ = "";
  /**
   * <pre>
   * PEM representation of the replica's private key. The corresponsing public
   * key is encoded in the client's certificate.
   * </pre>
   *
   * <code>string client_key = 8;</code>
   * @return The clientKey.
   */
  @java.lang.Override
  public java.lang.String getClientKey() {
    java.lang.Object ref = clientKey_;
    if (ref instanceof java.lang.String) {
      return (java.lang.String) ref;
    } else {
      com.google.protobuf.ByteString bs = 
          (com.google.protobuf.ByteString) ref;
      java.lang.String s = bs.toStringUtf8();
      clientKey_ = s;
      return s;
    }
  }
  /**
   * <pre>
   * PEM representation of the replica's private key. The corresponsing public
   * key is encoded in the client's certificate.
   * </pre>
   *
   * <code>string client_key = 8;</code>
   * @return The bytes for clientKey.
   */
  @java.lang.Override
  public com.google.protobuf.ByteString
      getClientKeyBytes() {
    java.lang.Object ref = clientKey_;
    if (ref instanceof java.lang.String) {
      com.google.protobuf.ByteString b = 
          com.google.protobuf.ByteString.copyFromUtf8(
              (java.lang.String) ref);
      clientKey_ = b;
      return b;
    } else {
      return (com.google.protobuf.ByteString) ref;
    }
  }

  public static final int SSL_CIPHER_FIELD_NUMBER = 9;
  @SuppressWarnings("serial")
  private volatile java.lang.Object sslCipher_ = "";
  /**
   * <pre>
   * A list of permissible ciphers to use for SSL encryption.
   * </pre>
   *
   * <code>string ssl_cipher = 9;</code>
   * @return The sslCipher.
   */
  @java.lang.Override
  public java.lang.String getSslCipher() {
    java.lang.Object ref = sslCipher_;
    if (ref instanceof java.lang.String) {
      return (java.lang.String) ref;
    } else {
      com.google.protobuf.ByteString bs = 
          (com.google.protobuf.ByteString) ref;
      java.lang.String s = bs.toStringUtf8();
      sslCipher_ = s;
      return s;
    }
  }
  /**
   * <pre>
   * A list of permissible ciphers to use for SSL encryption.
   * </pre>
   *
   * <code>string ssl_cipher = 9;</code>
   * @return The bytes for sslCipher.
   */
  @java.lang.Override
  public com.google.protobuf.ByteString
      getSslCipherBytes() {
    java.lang.Object ref = sslCipher_;
    if (ref instanceof java.lang.String) {
      com.google.protobuf.ByteString b = 
          com.google.protobuf.ByteString.copyFromUtf8(
              (java.lang.String) ref);
      sslCipher_ = b;
      return b;
    } else {
      return (com.google.protobuf.ByteString) ref;
    }
  }

  public static final int VERIFY_SERVER_CERTIFICATE_FIELD_NUMBER = 10;
  private com.google.protobuf.BoolValue verifyServerCertificate_;
  /**
   * <pre>
   * Whether or not to check the primary instance's Common Name value in the
   * certificate that it sends during the SSL handshake.
   * </pre>
   *
   * <code>.google.protobuf.BoolValue verify_server_certificate = 10;</code>
   * @return Whether the verifyServerCertificate field is set.
   */
  @java.lang.Override
  public boolean hasVerifyServerCertificate() {
    return verifyServerCertificate_ != null;
  }
  /**
   * <pre>
   * Whether or not to check the primary instance's Common Name value in the
   * certificate that it sends during the SSL handshake.
   * </pre>
   *
   * <code>.google.protobuf.BoolValue verify_server_certificate = 10;</code>
   * @return The verifyServerCertificate.
   */
  @java.lang.Override
  public com.google.protobuf.BoolValue getVerifyServerCertificate() {
    return verifyServerCertificate_ == null ? com.google.protobuf.BoolValue.getDefaultInstance() : verifyServerCertificate_;
  }
  /**
   * <pre>
   * Whether or not to check the primary instance's Common Name value in the
   * certificate that it sends during the SSL handshake.
   * </pre>
   *
   * <code>.google.protobuf.BoolValue verify_server_certificate = 10;</code>
   */
  @java.lang.Override
  public com.google.protobuf.BoolValueOrBuilder getVerifyServerCertificateOrBuilder() {
    return verifyServerCertificate_ == null ? com.google.protobuf.BoolValue.getDefaultInstance() : verifyServerCertificate_;
  }

  public static final int KIND_FIELD_NUMBER = 11;
  @SuppressWarnings("serial")
  private volatile java.lang.Object kind_ = "";
  /**
   * <pre>
   * This is always **sql#mysqlReplicaConfiguration**.
   * </pre>
   *
   * <code>string kind = 11;</code>
   * @return The kind.
   */
  @java.lang.Override
  public java.lang.String getKind() {
    java.lang.Object ref = kind_;
    if (ref instanceof java.lang.String) {
      return (java.lang.String) ref;
    } else {
      com.google.protobuf.ByteString bs = 
          (com.google.protobuf.ByteString) ref;
      java.lang.String s = bs.toStringUtf8();
      kind_ = s;
      return s;
    }
  }
  /**
   * <pre>
   * This is always **sql#mysqlReplicaConfiguration**.
   * </pre>
   *
   * <code>string kind = 11;</code>
   * @return The bytes for kind.
   */
  @java.lang.Override
  public com.google.protobuf.ByteString
      getKindBytes() {
    java.lang.Object ref = kind_;
    if (ref instanceof java.lang.String) {
      com.google.protobuf.ByteString b = 
          com.google.protobuf.ByteString.copyFromUtf8(
              (java.lang.String) ref);
      kind_ = b;
      return b;
    } else {
      return (com.google.protobuf.ByteString) ref;
    }
  }

  private byte memoizedIsInitialized = -1;
  @java.lang.Override
  public final boolean isInitialized() {
    byte isInitialized = memoizedIsInitialized;
    if (isInitialized == 1) return true;
    if (isInitialized == 0) return false;

    memoizedIsInitialized = 1;
    return true;
  }

  @java.lang.Override
  public void writeTo(com.google.protobuf.CodedOutputStream output)
                      throws java.io.IOException {
    if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(dumpFilePath_)) {
      com.google.protobuf.GeneratedMessageV3.writeString(output, 1, dumpFilePath_);
    }
    if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(username_)) {
      com.google.protobuf.GeneratedMessageV3.writeString(output, 2, username_);
    }
    if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(password_)) {
      com.google.protobuf.GeneratedMessageV3.writeString(output, 3, password_);
    }
    if (connectRetryInterval_ != null) {
      output.writeMessage(4, getConnectRetryInterval());
    }
    if (masterHeartbeatPeriod_ != null) {
      output.writeMessage(5, getMasterHeartbeatPeriod());
    }
    if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(caCertificate_)) {
      com.google.protobuf.GeneratedMessageV3.writeString(output, 6, caCertificate_);
    }
    if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(clientCertificate_)) {
      com.google.protobuf.GeneratedMessageV3.writeString(output, 7, clientCertificate_);
    }
    if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(clientKey_)) {
      com.google.protobuf.GeneratedMessageV3.writeString(output, 8, clientKey_);
    }
    if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(sslCipher_)) {
      com.google.protobuf.GeneratedMessageV3.writeString(output, 9, sslCipher_);
    }
    if (verifyServerCertificate_ != null) {
      output.writeMessage(10, getVerifyServerCertificate());
    }
    if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(kind_)) {
      com.google.protobuf.GeneratedMessageV3.writeString(output, 11, kind_);
    }
    getUnknownFields().writeTo(output);
  }

  @java.lang.Override
  public int getSerializedSize() {
    int size = memoizedSize;
    if (size != -1) return size;

    size = 0;
    if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(dumpFilePath_)) {
      size += com.google.protobuf.GeneratedMessageV3.computeStringSize(1, dumpFilePath_);
    }
    if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(username_)) {
      size += com.google.protobuf.GeneratedMessageV3.computeStringSize(2, username_);
    }
    if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(password_)) {
      size += com.google.protobuf.GeneratedMessageV3.computeStringSize(3, password_);
    }
    if (connectRetryInterval_ != null) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(4, getConnectRetryInterval());
    }
    if (masterHeartbeatPeriod_ != null) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(5, getMasterHeartbeatPeriod());
    }
    if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(caCertificate_)) {
      size += com.google.protobuf.GeneratedMessageV3.computeStringSize(6, caCertificate_);
    }
    if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(clientCertificate_)) {
      size += com.google.protobuf.GeneratedMessageV3.computeStringSize(7, clientCertificate_);
    }
    if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(clientKey_)) {
      size += com.google.protobuf.GeneratedMessageV3.computeStringSize(8, clientKey_);
    }
    if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(sslCipher_)) {
      size += com.google.protobuf.GeneratedMessageV3.computeStringSize(9, sslCipher_);
    }
    if (verifyServerCertificate_ != null) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(10, getVerifyServerCertificate());
    }
    if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(kind_)) {
      size += com.google.protobuf.GeneratedMessageV3.computeStringSize(11, kind_);
    }
    size += getUnknownFields().getSerializedSize();
    memoizedSize = size;
    return size;
  }

  @java.lang.Override
  public boolean equals(final java.lang.Object obj) {
    if (obj == this) {
     return true;
    }
    if (!(obj instanceof com.google.cloud.sql.v1.MySqlReplicaConfiguration)) {
      return super.equals(obj);
    }
    com.google.cloud.sql.v1.MySqlReplicaConfiguration other = (com.google.cloud.sql.v1.MySqlReplicaConfiguration) obj;

    if (!getDumpFilePath()
        .equals(other.getDumpFilePath())) return false;
    if (!getUsername()
        .equals(other.getUsername())) return false;
    if (!getPassword()
        .equals(other.getPassword())) return false;
    if (hasConnectRetryInterval() != other.hasConnectRetryInterval()) return false;
    if (hasConnectRetryInterval()) {
      if (!getConnectRetryInterval()
          .equals(other.getConnectRetryInterval())) return false;
    }
    if (hasMasterHeartbeatPeriod() != other.hasMasterHeartbeatPeriod()) return false;
    if (hasMasterHeartbeatPeriod()) {
      if (!getMasterHeartbeatPeriod()
          .equals(other.getMasterHeartbeatPeriod())) return false;
    }
    if (!getCaCertificate()
        .equals(other.getCaCertificate())) return false;
    if (!getClientCertificate()
        .equals(other.getClientCertificate())) return false;
    if (!getClientKey()
        .equals(other.getClientKey())) return false;
    if (!getSslCipher()
        .equals(other.getSslCipher())) return false;
    if (hasVerifyServerCertificate() != other.hasVerifyServerCertificate()) return false;
    if (hasVerifyServerCertificate()) {
      if (!getVerifyServerCertificate()
          .equals(other.getVerifyServerCertificate())) return false;
    }
    if (!getKind()
        .equals(other.getKind())) return false;
    if (!getUnknownFields().equals(other.getUnknownFields())) return false;
    return true;
  }

  @java.lang.Override
  public int hashCode() {
    if (memoizedHashCode != 0) {
      return memoizedHashCode;
    }
    int hash = 41;
    hash = (19 * hash) + getDescriptor().hashCode();
    hash = (37 * hash) + DUMP_FILE_PATH_FIELD_NUMBER;
    hash = (53 * hash) + getDumpFilePath().hashCode();
    hash = (37 * hash) + USERNAME_FIELD_NUMBER;
    hash = (53 * hash) + getUsername().hashCode();
    hash = (37 * hash) + PASSWORD_FIELD_NUMBER;
    hash = (53 * hash) + getPassword().hashCode();
    if (hasConnectRetryInterval()) {
      hash = (37 * hash) + CONNECT_RETRY_INTERVAL_FIELD_NUMBER;
      hash = (53 * hash) + getConnectRetryInterval().hashCode();
    }
    if (hasMasterHeartbeatPeriod()) {
      hash = (37 * hash) + MASTER_HEARTBEAT_PERIOD_FIELD_NUMBER;
      hash = (53 * hash) + getMasterHeartbeatPeriod().hashCode();
    }
    hash = (37 * hash) + CA_CERTIFICATE_FIELD_NUMBER;
    hash = (53 * hash) + getCaCertificate().hashCode();
    hash = (37 * hash) + CLIENT_CERTIFICATE_FIELD_NUMBER;
    hash = (53 * hash) + getClientCertificate().hashCode();
    hash = (37 * hash) + CLIENT_KEY_FIELD_NUMBER;
    hash = (53 * hash) + getClientKey().hashCode();
    hash = (37 * hash) + SSL_CIPHER_FIELD_NUMBER;
    hash = (53 * hash) + getSslCipher().hashCode();
    if (hasVerifyServerCertificate()) {
      hash = (37 * hash) + VERIFY_SERVER_CERTIFICATE_FIELD_NUMBER;
      hash = (53 * hash) + getVerifyServerCertificate().hashCode();
    }
    hash = (37 * hash) + KIND_FIELD_NUMBER;
    hash = (53 * hash) + getKind().hashCode();
    hash = (29 * hash) + getUnknownFields().hashCode();
    memoizedHashCode = hash;
    return hash;
  }

  public static com.google.cloud.sql.v1.MySqlReplicaConfiguration parseFrom(
      java.nio.ByteBuffer data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static com.google.cloud.sql.v1.MySqlReplicaConfiguration parseFrom(
      java.nio.ByteBuffer data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static com.google.cloud.sql.v1.MySqlReplicaConfiguration parseFrom(
      com.google.protobuf.ByteString data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static com.google.cloud.sql.v1.MySqlReplicaConfiguration parseFrom(
      com.google.protobuf.ByteString data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static com.google.cloud.sql.v1.MySqlReplicaConfiguration parseFrom(byte[] data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static com.google.cloud.sql.v1.MySqlReplicaConfiguration parseFrom(
      byte[] data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static com.google.cloud.sql.v1.MySqlReplicaConfiguration parseFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input);
  }
  public static com.google.cloud.sql.v1.MySqlReplicaConfiguration parseFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input, extensionRegistry);
  }
  public static com.google.cloud.sql.v1.MySqlReplicaConfiguration parseDelimitedFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseDelimitedWithIOException(PARSER, input);
  }
  public static com.google.cloud.sql.v1.MySqlReplicaConfiguration parseDelimitedFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
  }
  public static com.google.cloud.sql.v1.MySqlReplicaConfiguration parseFrom(
      com.google.protobuf.CodedInputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input);
  }
  public static com.google.cloud.sql.v1.MySqlReplicaConfiguration parseFrom(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input, extensionRegistry);
  }

  @java.lang.Override
  public Builder newBuilderForType() { return newBuilder(); }
  public static Builder newBuilder() {
    return DEFAULT_INSTANCE.toBuilder();
  }
  public static Builder newBuilder(com.google.cloud.sql.v1.MySqlReplicaConfiguration prototype) {
    return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
  }
  @java.lang.Override
  public Builder toBuilder() {
    return this == DEFAULT_INSTANCE
        ? new Builder() : new Builder().mergeFrom(this);
  }

  @java.lang.Override
  protected Builder newBuilderForType(
      com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
    Builder builder = new Builder(parent);
    return builder;
  }
  /**
   * <pre>
   * Read-replica configuration specific to MySQL databases.
   * </pre>
   *
   * Protobuf type {@code google.cloud.sql.v1.MySqlReplicaConfiguration}
   */
  public static final class Builder extends
      com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
      // @@protoc_insertion_point(builder_implements:google.cloud.sql.v1.MySqlReplicaConfiguration)
      com.google.cloud.sql.v1.MySqlReplicaConfigurationOrBuilder {
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.google.cloud.sql.v1.CloudSqlResourcesProto.internal_static_google_cloud_sql_v1_MySqlReplicaConfiguration_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.google.cloud.sql.v1.CloudSqlResourcesProto.internal_static_google_cloud_sql_v1_MySqlReplicaConfiguration_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.google.cloud.sql.v1.MySqlReplicaConfiguration.class, com.google.cloud.sql.v1.MySqlReplicaConfiguration.Builder.class);
    }

    // Construct using com.google.cloud.sql.v1.MySqlReplicaConfiguration.newBuilder()
    private Builder() {

    }

    private Builder(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      super(parent);

    }
    @java.lang.Override
    public Builder clear() {
      super.clear();
      bitField0_ = 0;
      dumpFilePath_ = "";
      username_ = "";
      password_ = "";
      connectRetryInterval_ = null;
      if (connectRetryIntervalBuilder_ != null) {
        connectRetryIntervalBuilder_.dispose();
        connectRetryIntervalBuilder_ = null;
      }
      masterHeartbeatPeriod_ = null;
      if (masterHeartbeatPeriodBuilder_ != null) {
        masterHeartbeatPeriodBuilder_.dispose();
        masterHeartbeatPeriodBuilder_ = null;
      }
      caCertificate_ = "";
      clientCertificate_ = "";
      clientKey_ = "";
      sslCipher_ = "";
      verifyServerCertificate_ = null;
      if (verifyServerCertificateBuilder_ != null) {
        verifyServerCertificateBuilder_.dispose();
        verifyServerCertificateBuilder_ = null;
      }
      kind_ = "";
      return this;
    }

    @java.lang.Override
    public com.google.protobuf.Descriptors.Descriptor
        getDescriptorForType() {
      return com.google.cloud.sql.v1.CloudSqlResourcesProto.internal_static_google_cloud_sql_v1_MySqlReplicaConfiguration_descriptor;
    }

    @java.lang.Override
    public com.google.cloud.sql.v1.MySqlReplicaConfiguration getDefaultInstanceForType() {
      return com.google.cloud.sql.v1.MySqlReplicaConfiguration.getDefaultInstance();
    }

    @java.lang.Override
    public com.google.cloud.sql.v1.MySqlReplicaConfiguration build() {
      com.google.cloud.sql.v1.MySqlReplicaConfiguration result = buildPartial();
      if (!result.isInitialized()) {
        throw newUninitializedMessageException(result);
      }
      return result;
    }

    @java.lang.Override
    public com.google.cloud.sql.v1.MySqlReplicaConfiguration buildPartial() {
      com.google.cloud.sql.v1.MySqlReplicaConfiguration result = new com.google.cloud.sql.v1.MySqlReplicaConfiguration(this);
      if (bitField0_ != 0) { buildPartial0(result); }
      onBuilt();
      return result;
    }

    private void buildPartial0(com.google.cloud.sql.v1.MySqlReplicaConfiguration result) {
      int from_bitField0_ = bitField0_;
      if (((from_bitField0_ & 0x00000001) != 0)) {
        result.dumpFilePath_ = dumpFilePath_;
      }
      if (((from_bitField0_ & 0x00000002) != 0)) {
        result.username_ = username_;
      }
      if (((from_bitField0_ & 0x00000004) != 0)) {
        result.password_ = password_;
      }
      if (((from_bitField0_ & 0x00000008) != 0)) {
        result.connectRetryInterval_ = connectRetryIntervalBuilder_ == null
            ? connectRetryInterval_
            : connectRetryIntervalBuilder_.build();
      }
      if (((from_bitField0_ & 0x00000010) != 0)) {
        result.masterHeartbeatPeriod_ = masterHeartbeatPeriodBuilder_ == null
            ? masterHeartbeatPeriod_
            : masterHeartbeatPeriodBuilder_.build();
      }
      if (((from_bitField0_ & 0x00000020) != 0)) {
        result.caCertificate_ = caCertificate_;
      }
      if (((from_bitField0_ & 0x00000040) != 0)) {
        result.clientCertificate_ = clientCertificate_;
      }
      if (((from_bitField0_ & 0x00000080) != 0)) {
        result.clientKey_ = clientKey_;
      }
      if (((from_bitField0_ & 0x00000100) != 0)) {
        result.sslCipher_ = sslCipher_;
      }
      if (((from_bitField0_ & 0x00000200) != 0)) {
        result.verifyServerCertificate_ = verifyServerCertificateBuilder_ == null
            ? verifyServerCertificate_
            : verifyServerCertificateBuilder_.build();
      }
      if (((from_bitField0_ & 0x00000400) != 0)) {
        result.kind_ = kind_;
      }
    }

    @java.lang.Override
    public Builder clone() {
      return super.clone();
    }
    @java.lang.Override
    public Builder setField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        java.lang.Object value) {
      return super.setField(field, value);
    }
    @java.lang.Override
    public Builder clearField(
        com.google.protobuf.Descriptors.FieldDescriptor field) {
      return super.clearField(field);
    }
    @java.lang.Override
    public Builder clearOneof(
        com.google.protobuf.Descriptors.OneofDescriptor oneof) {
      return super.clearOneof(oneof);
    }
    @java.lang.Override
    public Builder setRepeatedField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        int index, java.lang.Object value) {
      return super.setRepeatedField(field, index, value);
    }
    @java.lang.Override
    public Builder addRepeatedField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        java.lang.Object value) {
      return super.addRepeatedField(field, value);
    }
    @java.lang.Override
    public Builder mergeFrom(com.google.protobuf.Message other) {
      if (other instanceof com.google.cloud.sql.v1.MySqlReplicaConfiguration) {
        return mergeFrom((com.google.cloud.sql.v1.MySqlReplicaConfiguration)other);
      } else {
        super.mergeFrom(other);
        return this;
      }
    }

    public Builder mergeFrom(com.google.cloud.sql.v1.MySqlReplicaConfiguration other) {
      if (other == com.google.cloud.sql.v1.MySqlReplicaConfiguration.getDefaultInstance()) return this;
      if (!other.getDumpFilePath().isEmpty()) {
        dumpFilePath_ = other.dumpFilePath_;
        bitField0_ |= 0x00000001;
        onChanged();
      }
      if (!other.getUsername().isEmpty()) {
        username_ = other.username_;
        bitField0_ |= 0x00000002;
        onChanged();
      }
      if (!other.getPassword().isEmpty()) {
        password_ = other.password_;
        bitField0_ |= 0x00000004;
        onChanged();
      }
      if (other.hasConnectRetryInterval()) {
        mergeConnectRetryInterval(other.getConnectRetryInterval());
      }
      if (other.hasMasterHeartbeatPeriod()) {
        mergeMasterHeartbeatPeriod(other.getMasterHeartbeatPeriod());
      }
      if (!other.getCaCertificate().isEmpty()) {
        caCertificate_ = other.caCertificate_;
        bitField0_ |= 0x00000020;
        onChanged();
      }
      if (!other.getClientCertificate().isEmpty()) {
        clientCertificate_ = other.clientCertificate_;
        bitField0_ |= 0x00000040;
        onChanged();
      }
      if (!other.getClientKey().isEmpty()) {
        clientKey_ = other.clientKey_;
        bitField0_ |= 0x00000080;
        onChanged();
      }
      if (!other.getSslCipher().isEmpty()) {
        sslCipher_ = other.sslCipher_;
        bitField0_ |= 0x00000100;
        onChanged();
      }
      if (other.hasVerifyServerCertificate()) {
        mergeVerifyServerCertificate(other.getVerifyServerCertificate());
      }
      if (!other.getKind().isEmpty()) {
        kind_ = other.kind_;
        bitField0_ |= 0x00000400;
        onChanged();
      }
      this.mergeUnknownFields(other.getUnknownFields());
      onChanged();
      return this;
    }

    @java.lang.Override
    public final boolean isInitialized() {
      return true;
    }

    @java.lang.Override
    public Builder mergeFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 10: {
              dumpFilePath_ = input.readStringRequireUtf8();
              bitField0_ |= 0x00000001;
              break;
            } // case 10
            case 18: {
              username_ = input.readStringRequireUtf8();
              bitField0_ |= 0x00000002;
              break;
            } // case 18
            case 26: {
              password_ = input.readStringRequireUtf8();
              bitField0_ |= 0x00000004;
              break;
            } // case 26
            case 34: {
              input.readMessage(
                  getConnectRetryIntervalFieldBuilder().getBuilder(),
                  extensionRegistry);
              bitField0_ |= 0x00000008;
              break;
            } // case 34
            case 42: {
              input.readMessage(
                  getMasterHeartbeatPeriodFieldBuilder().getBuilder(),
                  extensionRegistry);
              bitField0_ |= 0x00000010;
              break;
            } // case 42
            case 50: {
              caCertificate_ = input.readStringRequireUtf8();
              bitField0_ |= 0x00000020;
              break;
            } // case 50
            case 58: {
              clientCertificate_ = input.readStringRequireUtf8();
              bitField0_ |= 0x00000040;
              break;
            } // case 58
            case 66: {
              clientKey_ = input.readStringRequireUtf8();
              bitField0_ |= 0x00000080;
              break;
            } // case 66
            case 74: {
              sslCipher_ = input.readStringRequireUtf8();
              bitField0_ |= 0x00000100;
              break;
            } // case 74
            case 82: {
              input.readMessage(
                  getVerifyServerCertificateFieldBuilder().getBuilder(),
                  extensionRegistry);
              bitField0_ |= 0x00000200;
              break;
            } // case 82
            case 90: {
              kind_ = input.readStringRequireUtf8();
              bitField0_ |= 0x00000400;
              break;
            } // case 90
            default: {
              if (!super.parseUnknownField(input, extensionRegistry, tag)) {
                done = true; // was an endgroup tag
              }
              break;
            } // default:
          } // switch (tag)
        } // while (!done)
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.unwrapIOException();
      } finally {
        onChanged();
      } // finally
      return this;
    }
    private int bitField0_;

    private java.lang.Object dumpFilePath_ = "";
    /**
     * <pre>
     * Path to a SQL dump file in Google Cloud Storage from which the replica
     * instance is to be created. The URI is in the form gs://bucketName/fileName.
     * Compressed gzip files (.gz) are also supported.
     * Dumps have the binlog co-ordinates from which replication
     * begins. This can be accomplished by setting --master-data to 1 when using
     * mysqldump.
     * </pre>
     *
     * <code>string dump_file_path = 1;</code>
     * @return The dumpFilePath.
     */
    public java.lang.String getDumpFilePath() {
      java.lang.Object ref = dumpFilePath_;
      if (!(ref instanceof java.lang.String)) {
        com.google.protobuf.ByteString bs =
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        dumpFilePath_ = s;
        return s;
      } else {
        return (java.lang.String) ref;
      }
    }
    /**
     * <pre>
     * Path to a SQL dump file in Google Cloud Storage from which the replica
     * instance is to be created. The URI is in the form gs://bucketName/fileName.
     * Compressed gzip files (.gz) are also supported.
     * Dumps have the binlog co-ordinates from which replication
     * begins. This can be accomplished by setting --master-data to 1 when using
     * mysqldump.
     * </pre>
     *
     * <code>string dump_file_path = 1;</code>
     * @return The bytes for dumpFilePath.
     */
    public com.google.protobuf.ByteString
        getDumpFilePathBytes() {
      java.lang.Object ref = dumpFilePath_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        dumpFilePath_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }
    /**
     * <pre>
     * Path to a SQL dump file in Google Cloud Storage from which the replica
     * instance is to be created. The URI is in the form gs://bucketName/fileName.
     * Compressed gzip files (.gz) are also supported.
     * Dumps have the binlog co-ordinates from which replication
     * begins. This can be accomplished by setting --master-data to 1 when using
     * mysqldump.
     * </pre>
     *
     * <code>string dump_file_path = 1;</code>
     * @param value The dumpFilePath to set.
     * @return This builder for chaining.
     */
    public Builder setDumpFilePath(
        java.lang.String value) {
      if (value == null) { throw new NullPointerException(); }
      dumpFilePath_ = value;
      bitField0_ |= 0x00000001;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * Path to a SQL dump file in Google Cloud Storage from which the replica
     * instance is to be created. The URI is in the form gs://bucketName/fileName.
     * Compressed gzip files (.gz) are also supported.
     * Dumps have the binlog co-ordinates from which replication
     * begins. This can be accomplished by setting --master-data to 1 when using
     * mysqldump.
     * </pre>
     *
     * <code>string dump_file_path = 1;</code>
     * @return This builder for chaining.
     */
    public Builder clearDumpFilePath() {
      dumpFilePath_ = getDefaultInstance().getDumpFilePath();
      bitField0_ = (bitField0_ & ~0x00000001);
      onChanged();
      return this;
    }
    /**
     * <pre>
     * Path to a SQL dump file in Google Cloud Storage from which the replica
     * instance is to be created. The URI is in the form gs://bucketName/fileName.
     * Compressed gzip files (.gz) are also supported.
     * Dumps have the binlog co-ordinates from which replication
     * begins. This can be accomplished by setting --master-data to 1 when using
     * mysqldump.
     * </pre>
     *
     * <code>string dump_file_path = 1;</code>
     * @param value The bytes for dumpFilePath to set.
     * @return This builder for chaining.
     */
    public Builder setDumpFilePathBytes(
        com.google.protobuf.ByteString value) {
      if (value == null) { throw new NullPointerException(); }
      checkByteStringIsUtf8(value);
      dumpFilePath_ = value;
      bitField0_ |= 0x00000001;
      onChanged();
      return this;
    }

    private java.lang.Object username_ = "";
    /**
     * <pre>
     * The username for the replication connection.
     * </pre>
     *
     * <code>string username = 2;</code>
     * @return The username.
     */
    public java.lang.String getUsername() {
      java.lang.Object ref = username_;
      if (!(ref instanceof java.lang.String)) {
        com.google.protobuf.ByteString bs =
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        username_ = s;
        return s;
      } else {
        return (java.lang.String) ref;
      }
    }
    /**
     * <pre>
     * The username for the replication connection.
     * </pre>
     *
     * <code>string username = 2;</code>
     * @return The bytes for username.
     */
    public com.google.protobuf.ByteString
        getUsernameBytes() {
      java.lang.Object ref = username_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        username_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }
    /**
     * <pre>
     * The username for the replication connection.
     * </pre>
     *
     * <code>string username = 2;</code>
     * @param value The username to set.
     * @return This builder for chaining.
     */
    public Builder setUsername(
        java.lang.String value) {
      if (value == null) { throw new NullPointerException(); }
      username_ = value;
      bitField0_ |= 0x00000002;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * The username for the replication connection.
     * </pre>
     *
     * <code>string username = 2;</code>
     * @return This builder for chaining.
     */
    public Builder clearUsername() {
      username_ = getDefaultInstance().getUsername();
      bitField0_ = (bitField0_ & ~0x00000002);
      onChanged();
      return this;
    }
    /**
     * <pre>
     * The username for the replication connection.
     * </pre>
     *
     * <code>string username = 2;</code>
     * @param value The bytes for username to set.
     * @return This builder for chaining.
     */
    public Builder setUsernameBytes(
        com.google.protobuf.ByteString value) {
      if (value == null) { throw new NullPointerException(); }
      checkByteStringIsUtf8(value);
      username_ = value;
      bitField0_ |= 0x00000002;
      onChanged();
      return this;
    }

    private java.lang.Object password_ = "";
    /**
     * <pre>
     * The password for the replication connection.
     * </pre>
     *
     * <code>string password = 3;</code>
     * @return The password.
     */
    public java.lang.String getPassword() {
      java.lang.Object ref = password_;
      if (!(ref instanceof java.lang.String)) {
        com.google.protobuf.ByteString bs =
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        password_ = s;
        return s;
      } else {
        return (java.lang.String) ref;
      }
    }
    /**
     * <pre>
     * The password for the replication connection.
     * </pre>
     *
     * <code>string password = 3;</code>
     * @return The bytes for password.
     */
    public com.google.protobuf.ByteString
        getPasswordBytes() {
      java.lang.Object ref = password_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        password_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }
    /**
     * <pre>
     * The password for the replication connection.
     * </pre>
     *
     * <code>string password = 3;</code>
     * @param value The password to set.
     * @return This builder for chaining.
     */
    public Builder setPassword(
        java.lang.String value) {
      if (value == null) { throw new NullPointerException(); }
      password_ = value;
      bitField0_ |= 0x00000004;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * The password for the replication connection.
     * </pre>
     *
     * <code>string password = 3;</code>
     * @return This builder for chaining.
     */
    public Builder clearPassword() {
      password_ = getDefaultInstance().getPassword();
      bitField0_ = (bitField0_ & ~0x00000004);
      onChanged();
      return this;
    }
    /**
     * <pre>
     * The password for the replication connection.
     * </pre>
     *
     * <code>string password = 3;</code>
     * @param value The bytes for password to set.
     * @return This builder for chaining.
     */
    public Builder setPasswordBytes(
        com.google.protobuf.ByteString value) {
      if (value == null) { throw new NullPointerException(); }
      checkByteStringIsUtf8(value);
      password_ = value;
      bitField0_ |= 0x00000004;
      onChanged();
      return this;
    }

    private com.google.protobuf.Int32Value connectRetryInterval_;
    private com.google.protobuf.SingleFieldBuilderV3<
        com.google.protobuf.Int32Value, com.google.protobuf.Int32Value.Builder, com.google.protobuf.Int32ValueOrBuilder> connectRetryIntervalBuilder_;
    /**
     * <pre>
     * Seconds to wait between connect retries. MySQL's default is 60 seconds.
     * </pre>
     *
     * <code>.google.protobuf.Int32Value connect_retry_interval = 4;</code>
     * @return Whether the connectRetryInterval field is set.
     */
    public boolean hasConnectRetryInterval() {
      return ((bitField0_ & 0x00000008) != 0);
    }
    /**
     * <pre>
     * Seconds to wait between connect retries. MySQL's default is 60 seconds.
     * </pre>
     *
     * <code>.google.protobuf.Int32Value connect_retry_interval = 4;</code>
     * @return The connectRetryInterval.
     */
    public com.google.protobuf.Int32Value getConnectRetryInterval() {
      if (connectRetryIntervalBuilder_ == null) {
        return connectRetryInterval_ == null ? com.google.protobuf.Int32Value.getDefaultInstance() : connectRetryInterval_;
      } else {
        return connectRetryIntervalBuilder_.getMessage();
      }
    }
    /**
     * <pre>
     * Seconds to wait between connect retries. MySQL's default is 60 seconds.
     * </pre>
     *
     * <code>.google.protobuf.Int32Value connect_retry_interval = 4;</code>
     */
    public Builder setConnectRetryInterval(com.google.protobuf.Int32Value value) {
      if (connectRetryIntervalBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        connectRetryInterval_ = value;
      } else {
        connectRetryIntervalBuilder_.setMessage(value);
      }
      bitField0_ |= 0x00000008;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * Seconds to wait between connect retries. MySQL's default is 60 seconds.
     * </pre>
     *
     * <code>.google.protobuf.Int32Value connect_retry_interval = 4;</code>
     */
    public Builder setConnectRetryInterval(
        com.google.protobuf.Int32Value.Builder builderForValue) {
      if (connectRetryIntervalBuilder_ == null) {
        connectRetryInterval_ = builderForValue.build();
      } else {
        connectRetryIntervalBuilder_.setMessage(builderForValue.build());
      }
      bitField0_ |= 0x00000008;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * Seconds to wait between connect retries. MySQL's default is 60 seconds.
     * </pre>
     *
     * <code>.google.protobuf.Int32Value connect_retry_interval = 4;</code>
     */
    public Builder mergeConnectRetryInterval(com.google.protobuf.Int32Value value) {
      if (connectRetryIntervalBuilder_ == null) {
        if (((bitField0_ & 0x00000008) != 0) &&
          connectRetryInterval_ != null &&
          connectRetryInterval_ != com.google.protobuf.Int32Value.getDefaultInstance()) {
          getConnectRetryIntervalBuilder().mergeFrom(value);
        } else {
          connectRetryInterval_ = value;
        }
      } else {
        connectRetryIntervalBuilder_.mergeFrom(value);
      }
      bitField0_ |= 0x00000008;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * Seconds to wait between connect retries. MySQL's default is 60 seconds.
     * </pre>
     *
     * <code>.google.protobuf.Int32Value connect_retry_interval = 4;</code>
     */
    public Builder clearConnectRetryInterval() {
      bitField0_ = (bitField0_ & ~0x00000008);
      connectRetryInterval_ = null;
      if (connectRetryIntervalBuilder_ != null) {
        connectRetryIntervalBuilder_.dispose();
        connectRetryIntervalBuilder_ = null;
      }
      onChanged();
      return this;
    }
    /**
     * <pre>
     * Seconds to wait between connect retries. MySQL's default is 60 seconds.
     * </pre>
     *
     * <code>.google.protobuf.Int32Value connect_retry_interval = 4;</code>
     */
    public com.google.protobuf.Int32Value.Builder getConnectRetryIntervalBuilder() {
      bitField0_ |= 0x00000008;
      onChanged();
      return getConnectRetryIntervalFieldBuilder().getBuilder();
    }
    /**
     * <pre>
     * Seconds to wait between connect retries. MySQL's default is 60 seconds.
     * </pre>
     *
     * <code>.google.protobuf.Int32Value connect_retry_interval = 4;</code>
     */
    public com.google.protobuf.Int32ValueOrBuilder getConnectRetryIntervalOrBuilder() {
      if (connectRetryIntervalBuilder_ != null) {
        return connectRetryIntervalBuilder_.getMessageOrBuilder();
      } else {
        return connectRetryInterval_ == null ?
            com.google.protobuf.Int32Value.getDefaultInstance() : connectRetryInterval_;
      }
    }
    /**
     * <pre>
     * Seconds to wait between connect retries. MySQL's default is 60 seconds.
     * </pre>
     *
     * <code>.google.protobuf.Int32Value connect_retry_interval = 4;</code>
     */
    private com.google.protobuf.SingleFieldBuilderV3<
        com.google.protobuf.Int32Value, com.google.protobuf.Int32Value.Builder, com.google.protobuf.Int32ValueOrBuilder> 
        getConnectRetryIntervalFieldBuilder() {
      if (connectRetryIntervalBuilder_ == null) {
        connectRetryIntervalBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
            com.google.protobuf.Int32Value, com.google.protobuf.Int32Value.Builder, com.google.protobuf.Int32ValueOrBuilder>(
                getConnectRetryInterval(),
                getParentForChildren(),
                isClean());
        connectRetryInterval_ = null;
      }
      return connectRetryIntervalBuilder_;
    }

    private com.google.protobuf.Int64Value masterHeartbeatPeriod_;
    private com.google.protobuf.SingleFieldBuilderV3<
        com.google.protobuf.Int64Value, com.google.protobuf.Int64Value.Builder, com.google.protobuf.Int64ValueOrBuilder> masterHeartbeatPeriodBuilder_;
    /**
     * <pre>
     * Interval in milliseconds between replication heartbeats.
     * </pre>
     *
     * <code>.google.protobuf.Int64Value master_heartbeat_period = 5;</code>
     * @return Whether the masterHeartbeatPeriod field is set.
     */
    public boolean hasMasterHeartbeatPeriod() {
      return ((bitField0_ & 0x00000010) != 0);
    }
    /**
     * <pre>
     * Interval in milliseconds between replication heartbeats.
     * </pre>
     *
     * <code>.google.protobuf.Int64Value master_heartbeat_period = 5;</code>
     * @return The masterHeartbeatPeriod.
     */
    public com.google.protobuf.Int64Value getMasterHeartbeatPeriod() {
      if (masterHeartbeatPeriodBuilder_ == null) {
        return masterHeartbeatPeriod_ == null ? com.google.protobuf.Int64Value.getDefaultInstance() : masterHeartbeatPeriod_;
      } else {
        return masterHeartbeatPeriodBuilder_.getMessage();
      }
    }
    /**
     * <pre>
     * Interval in milliseconds between replication heartbeats.
     * </pre>
     *
     * <code>.google.protobuf.Int64Value master_heartbeat_period = 5;</code>
     */
    public Builder setMasterHeartbeatPeriod(com.google.protobuf.Int64Value value) {
      if (masterHeartbeatPeriodBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        masterHeartbeatPeriod_ = value;
      } else {
        masterHeartbeatPeriodBuilder_.setMessage(value);
      }
      bitField0_ |= 0x00000010;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * Interval in milliseconds between replication heartbeats.
     * </pre>
     *
     * <code>.google.protobuf.Int64Value master_heartbeat_period = 5;</code>
     */
    public Builder setMasterHeartbeatPeriod(
        com.google.protobuf.Int64Value.Builder builderForValue) {
      if (masterHeartbeatPeriodBuilder_ == null) {
        masterHeartbeatPeriod_ = builderForValue.build();
      } else {
        masterHeartbeatPeriodBuilder_.setMessage(builderForValue.build());
      }
      bitField0_ |= 0x00000010;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * Interval in milliseconds between replication heartbeats.
     * </pre>
     *
     * <code>.google.protobuf.Int64Value master_heartbeat_period = 5;</code>
     */
    public Builder mergeMasterHeartbeatPeriod(com.google.protobuf.Int64Value value) {
      if (masterHeartbeatPeriodBuilder_ == null) {
        if (((bitField0_ & 0x00000010) != 0) &&
          masterHeartbeatPeriod_ != null &&
          masterHeartbeatPeriod_ != com.google.protobuf.Int64Value.getDefaultInstance()) {
          getMasterHeartbeatPeriodBuilder().mergeFrom(value);
        } else {
          masterHeartbeatPeriod_ = value;
        }
      } else {
        masterHeartbeatPeriodBuilder_.mergeFrom(value);
      }
      bitField0_ |= 0x00000010;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * Interval in milliseconds between replication heartbeats.
     * </pre>
     *
     * <code>.google.protobuf.Int64Value master_heartbeat_period = 5;</code>
     */
    public Builder clearMasterHeartbeatPeriod() {
      bitField0_ = (bitField0_ & ~0x00000010);
      masterHeartbeatPeriod_ = null;
      if (masterHeartbeatPeriodBuilder_ != null) {
        masterHeartbeatPeriodBuilder_.dispose();
        masterHeartbeatPeriodBuilder_ = null;
      }
      onChanged();
      return this;
    }
    /**
     * <pre>
     * Interval in milliseconds between replication heartbeats.
     * </pre>
     *
     * <code>.google.protobuf.Int64Value master_heartbeat_period = 5;</code>
     */
    public com.google.protobuf.Int64Value.Builder getMasterHeartbeatPeriodBuilder() {
      bitField0_ |= 0x00000010;
      onChanged();
      return getMasterHeartbeatPeriodFieldBuilder().getBuilder();
    }
    /**
     * <pre>
     * Interval in milliseconds between replication heartbeats.
     * </pre>
     *
     * <code>.google.protobuf.Int64Value master_heartbeat_period = 5;</code>
     */
    public com.google.protobuf.Int64ValueOrBuilder getMasterHeartbeatPeriodOrBuilder() {
      if (masterHeartbeatPeriodBuilder_ != null) {
        return masterHeartbeatPeriodBuilder_.getMessageOrBuilder();
      } else {
        return masterHeartbeatPeriod_ == null ?
            com.google.protobuf.Int64Value.getDefaultInstance() : masterHeartbeatPeriod_;
      }
    }
    /**
     * <pre>
     * Interval in milliseconds between replication heartbeats.
     * </pre>
     *
     * <code>.google.protobuf.Int64Value master_heartbeat_period = 5;</code>
     */
    private com.google.protobuf.SingleFieldBuilderV3<
        com.google.protobuf.Int64Value, com.google.protobuf.Int64Value.Builder, com.google.protobuf.Int64ValueOrBuilder> 
        getMasterHeartbeatPeriodFieldBuilder() {
      if (masterHeartbeatPeriodBuilder_ == null) {
        masterHeartbeatPeriodBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
            com.google.protobuf.Int64Value, com.google.protobuf.Int64Value.Builder, com.google.protobuf.Int64ValueOrBuilder>(
                getMasterHeartbeatPeriod(),
                getParentForChildren(),
                isClean());
        masterHeartbeatPeriod_ = null;
      }
      return masterHeartbeatPeriodBuilder_;
    }

    private java.lang.Object caCertificate_ = "";
    /**
     * <pre>
     * PEM representation of the trusted CA's x509 certificate.
     * </pre>
     *
     * <code>string ca_certificate = 6;</code>
     * @return The caCertificate.
     */
    public java.lang.String getCaCertificate() {
      java.lang.Object ref = caCertificate_;
      if (!(ref instanceof java.lang.String)) {
        com.google.protobuf.ByteString bs =
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        caCertificate_ = s;
        return s;
      } else {
        return (java.lang.String) ref;
      }
    }
    /**
     * <pre>
     * PEM representation of the trusted CA's x509 certificate.
     * </pre>
     *
     * <code>string ca_certificate = 6;</code>
     * @return The bytes for caCertificate.
     */
    public com.google.protobuf.ByteString
        getCaCertificateBytes() {
      java.lang.Object ref = caCertificate_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        caCertificate_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }
    /**
     * <pre>
     * PEM representation of the trusted CA's x509 certificate.
     * </pre>
     *
     * <code>string ca_certificate = 6;</code>
     * @param value The caCertificate to set.
     * @return This builder for chaining.
     */
    public Builder setCaCertificate(
        java.lang.String value) {
      if (value == null) { throw new NullPointerException(); }
      caCertificate_ = value;
      bitField0_ |= 0x00000020;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * PEM representation of the trusted CA's x509 certificate.
     * </pre>
     *
     * <code>string ca_certificate = 6;</code>
     * @return This builder for chaining.
     */
    public Builder clearCaCertificate() {
      caCertificate_ = getDefaultInstance().getCaCertificate();
      bitField0_ = (bitField0_ & ~0x00000020);
      onChanged();
      return this;
    }
    /**
     * <pre>
     * PEM representation of the trusted CA's x509 certificate.
     * </pre>
     *
     * <code>string ca_certificate = 6;</code>
     * @param value The bytes for caCertificate to set.
     * @return This builder for chaining.
     */
    public Builder setCaCertificateBytes(
        com.google.protobuf.ByteString value) {
      if (value == null) { throw new NullPointerException(); }
      checkByteStringIsUtf8(value);
      caCertificate_ = value;
      bitField0_ |= 0x00000020;
      onChanged();
      return this;
    }

    private java.lang.Object clientCertificate_ = "";
    /**
     * <pre>
     * PEM representation of the replica's x509 certificate.
     * </pre>
     *
     * <code>string client_certificate = 7;</code>
     * @return The clientCertificate.
     */
    public java.lang.String getClientCertificate() {
      java.lang.Object ref = clientCertificate_;
      if (!(ref instanceof java.lang.String)) {
        com.google.protobuf.ByteString bs =
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        clientCertificate_ = s;
        return s;
      } else {
        return (java.lang.String) ref;
      }
    }
    /**
     * <pre>
     * PEM representation of the replica's x509 certificate.
     * </pre>
     *
     * <code>string client_certificate = 7;</code>
     * @return The bytes for clientCertificate.
     */
    public com.google.protobuf.ByteString
        getClientCertificateBytes() {
      java.lang.Object ref = clientCertificate_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        clientCertificate_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }
    /**
     * <pre>
     * PEM representation of the replica's x509 certificate.
     * </pre>
     *
     * <code>string client_certificate = 7;</code>
     * @param value The clientCertificate to set.
     * @return This builder for chaining.
     */
    public Builder setClientCertificate(
        java.lang.String value) {
      if (value == null) { throw new NullPointerException(); }
      clientCertificate_ = value;
      bitField0_ |= 0x00000040;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * PEM representation of the replica's x509 certificate.
     * </pre>
     *
     * <code>string client_certificate = 7;</code>
     * @return This builder for chaining.
     */
    public Builder clearClientCertificate() {
      clientCertificate_ = getDefaultInstance().getClientCertificate();
      bitField0_ = (bitField0_ & ~0x00000040);
      onChanged();
      return this;
    }
    /**
     * <pre>
     * PEM representation of the replica's x509 certificate.
     * </pre>
     *
     * <code>string client_certificate = 7;</code>
     * @param value The bytes for clientCertificate to set.
     * @return This builder for chaining.
     */
    public Builder setClientCertificateBytes(
        com.google.protobuf.ByteString value) {
      if (value == null) { throw new NullPointerException(); }
      checkByteStringIsUtf8(value);
      clientCertificate_ = value;
      bitField0_ |= 0x00000040;
      onChanged();
      return this;
    }

    private java.lang.Object clientKey_ = "";
    /**
     * <pre>
     * PEM representation of the replica's private key. The corresponsing public
     * key is encoded in the client's certificate.
     * </pre>
     *
     * <code>string client_key = 8;</code>
     * @return The clientKey.
     */
    public java.lang.String getClientKey() {
      java.lang.Object ref = clientKey_;
      if (!(ref instanceof java.lang.String)) {
        com.google.protobuf.ByteString bs =
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        clientKey_ = s;
        return s;
      } else {
        return (java.lang.String) ref;
      }
    }
    /**
     * <pre>
     * PEM representation of the replica's private key. The corresponsing public
     * key is encoded in the client's certificate.
     * </pre>
     *
     * <code>string client_key = 8;</code>
     * @return The bytes for clientKey.
     */
    public com.google.protobuf.ByteString
        getClientKeyBytes() {
      java.lang.Object ref = clientKey_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        clientKey_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }
    /**
     * <pre>
     * PEM representation of the replica's private key. The corresponsing public
     * key is encoded in the client's certificate.
     * </pre>
     *
     * <code>string client_key = 8;</code>
     * @param value The clientKey to set.
     * @return This builder for chaining.
     */
    public Builder setClientKey(
        java.lang.String value) {
      if (value == null) { throw new NullPointerException(); }
      clientKey_ = value;
      bitField0_ |= 0x00000080;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * PEM representation of the replica's private key. The corresponsing public
     * key is encoded in the client's certificate.
     * </pre>
     *
     * <code>string client_key = 8;</code>
     * @return This builder for chaining.
     */
    public Builder clearClientKey() {
      clientKey_ = getDefaultInstance().getClientKey();
      bitField0_ = (bitField0_ & ~0x00000080);
      onChanged();
      return this;
    }
    /**
     * <pre>
     * PEM representation of the replica's private key. The corresponsing public
     * key is encoded in the client's certificate.
     * </pre>
     *
     * <code>string client_key = 8;</code>
     * @param value The bytes for clientKey to set.
     * @return This builder for chaining.
     */
    public Builder setClientKeyBytes(
        com.google.protobuf.ByteString value) {
      if (value == null) { throw new NullPointerException(); }
      checkByteStringIsUtf8(value);
      clientKey_ = value;
      bitField0_ |= 0x00000080;
      onChanged();
      return this;
    }

    private java.lang.Object sslCipher_ = "";
    /**
     * <pre>
     * A list of permissible ciphers to use for SSL encryption.
     * </pre>
     *
     * <code>string ssl_cipher = 9;</code>
     * @return The sslCipher.
     */
    public java.lang.String getSslCipher() {
      java.lang.Object ref = sslCipher_;
      if (!(ref instanceof java.lang.String)) {
        com.google.protobuf.ByteString bs =
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        sslCipher_ = s;
        return s;
      } else {
        return (java.lang.String) ref;
      }
    }
    /**
     * <pre>
     * A list of permissible ciphers to use for SSL encryption.
     * </pre>
     *
     * <code>string ssl_cipher = 9;</code>
     * @return The bytes for sslCipher.
     */
    public com.google.protobuf.ByteString
        getSslCipherBytes() {
      java.lang.Object ref = sslCipher_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        sslCipher_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }
    /**
     * <pre>
     * A list of permissible ciphers to use for SSL encryption.
     * </pre>
     *
     * <code>string ssl_cipher = 9;</code>
     * @param value The sslCipher to set.
     * @return This builder for chaining.
     */
    public Builder setSslCipher(
        java.lang.String value) {
      if (value == null) { throw new NullPointerException(); }
      sslCipher_ = value;
      bitField0_ |= 0x00000100;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * A list of permissible ciphers to use for SSL encryption.
     * </pre>
     *
     * <code>string ssl_cipher = 9;</code>
     * @return This builder for chaining.
     */
    public Builder clearSslCipher() {
      sslCipher_ = getDefaultInstance().getSslCipher();
      bitField0_ = (bitField0_ & ~0x00000100);
      onChanged();
      return this;
    }
    /**
     * <pre>
     * A list of permissible ciphers to use for SSL encryption.
     * </pre>
     *
     * <code>string ssl_cipher = 9;</code>
     * @param value The bytes for sslCipher to set.
     * @return This builder for chaining.
     */
    public Builder setSslCipherBytes(
        com.google.protobuf.ByteString value) {
      if (value == null) { throw new NullPointerException(); }
      checkByteStringIsUtf8(value);
      sslCipher_ = value;
      bitField0_ |= 0x00000100;
      onChanged();
      return this;
    }

    private com.google.protobuf.BoolValue verifyServerCertificate_;
    private com.google.protobuf.SingleFieldBuilderV3<
        com.google.protobuf.BoolValue, com.google.protobuf.BoolValue.Builder, com.google.protobuf.BoolValueOrBuilder> verifyServerCertificateBuilder_;
    /**
     * <pre>
     * Whether or not to check the primary instance's Common Name value in the
     * certificate that it sends during the SSL handshake.
     * </pre>
     *
     * <code>.google.protobuf.BoolValue verify_server_certificate = 10;</code>
     * @return Whether the verifyServerCertificate field is set.
     */
    public boolean hasVerifyServerCertificate() {
      return ((bitField0_ & 0x00000200) != 0);
    }
    /**
     * <pre>
     * Whether or not to check the primary instance's Common Name value in the
     * certificate that it sends during the SSL handshake.
     * </pre>
     *
     * <code>.google.protobuf.BoolValue verify_server_certificate = 10;</code>
     * @return The verifyServerCertificate.
     */
    public com.google.protobuf.BoolValue getVerifyServerCertificate() {
      if (verifyServerCertificateBuilder_ == null) {
        return verifyServerCertificate_ == null ? com.google.protobuf.BoolValue.getDefaultInstance() : verifyServerCertificate_;
      } else {
        return verifyServerCertificateBuilder_.getMessage();
      }
    }
    /**
     * <pre>
     * Whether or not to check the primary instance's Common Name value in the
     * certificate that it sends during the SSL handshake.
     * </pre>
     *
     * <code>.google.protobuf.BoolValue verify_server_certificate = 10;</code>
     */
    public Builder setVerifyServerCertificate(com.google.protobuf.BoolValue value) {
      if (verifyServerCertificateBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        verifyServerCertificate_ = value;
      } else {
        verifyServerCertificateBuilder_.setMessage(value);
      }
      bitField0_ |= 0x00000200;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * Whether or not to check the primary instance's Common Name value in the
     * certificate that it sends during the SSL handshake.
     * </pre>
     *
     * <code>.google.protobuf.BoolValue verify_server_certificate = 10;</code>
     */
    public Builder setVerifyServerCertificate(
        com.google.protobuf.BoolValue.Builder builderForValue) {
      if (verifyServerCertificateBuilder_ == null) {
        verifyServerCertificate_ = builderForValue.build();
      } else {
        verifyServerCertificateBuilder_.setMessage(builderForValue.build());
      }
      bitField0_ |= 0x00000200;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * Whether or not to check the primary instance's Common Name value in the
     * certificate that it sends during the SSL handshake.
     * </pre>
     *
     * <code>.google.protobuf.BoolValue verify_server_certificate = 10;</code>
     */
    public Builder mergeVerifyServerCertificate(com.google.protobuf.BoolValue value) {
      if (verifyServerCertificateBuilder_ == null) {
        if (((bitField0_ & 0x00000200) != 0) &&
          verifyServerCertificate_ != null &&
          verifyServerCertificate_ != com.google.protobuf.BoolValue.getDefaultInstance()) {
          getVerifyServerCertificateBuilder().mergeFrom(value);
        } else {
          verifyServerCertificate_ = value;
        }
      } else {
        verifyServerCertificateBuilder_.mergeFrom(value);
      }
      bitField0_ |= 0x00000200;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * Whether or not to check the primary instance's Common Name value in the
     * certificate that it sends during the SSL handshake.
     * </pre>
     *
     * <code>.google.protobuf.BoolValue verify_server_certificate = 10;</code>
     */
    public Builder clearVerifyServerCertificate() {
      bitField0_ = (bitField0_ & ~0x00000200);
      verifyServerCertificate_ = null;
      if (verifyServerCertificateBuilder_ != null) {
        verifyServerCertificateBuilder_.dispose();
        verifyServerCertificateBuilder_ = null;
      }
      onChanged();
      return this;
    }
    /**
     * <pre>
     * Whether or not to check the primary instance's Common Name value in the
     * certificate that it sends during the SSL handshake.
     * </pre>
     *
     * <code>.google.protobuf.BoolValue verify_server_certificate = 10;</code>
     */
    public com.google.protobuf.BoolValue.Builder getVerifyServerCertificateBuilder() {
      bitField0_ |= 0x00000200;
      onChanged();
      return getVerifyServerCertificateFieldBuilder().getBuilder();
    }
    /**
     * <pre>
     * Whether or not to check the primary instance's Common Name value in the
     * certificate that it sends during the SSL handshake.
     * </pre>
     *
     * <code>.google.protobuf.BoolValue verify_server_certificate = 10;</code>
     */
    public com.google.protobuf.BoolValueOrBuilder getVerifyServerCertificateOrBuilder() {
      if (verifyServerCertificateBuilder_ != null) {
        return verifyServerCertificateBuilder_.getMessageOrBuilder();
      } else {
        return verifyServerCertificate_ == null ?
            com.google.protobuf.BoolValue.getDefaultInstance() : verifyServerCertificate_;
      }
    }
    /**
     * <pre>
     * Whether or not to check the primary instance's Common Name value in the
     * certificate that it sends during the SSL handshake.
     * </pre>
     *
     * <code>.google.protobuf.BoolValue verify_server_certificate = 10;</code>
     */
    private com.google.protobuf.SingleFieldBuilderV3<
        com.google.protobuf.BoolValue, com.google.protobuf.BoolValue.Builder, com.google.protobuf.BoolValueOrBuilder> 
        getVerifyServerCertificateFieldBuilder() {
      if (verifyServerCertificateBuilder_ == null) {
        verifyServerCertificateBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
            com.google.protobuf.BoolValue, com.google.protobuf.BoolValue.Builder, com.google.protobuf.BoolValueOrBuilder>(
                getVerifyServerCertificate(),
                getParentForChildren(),
                isClean());
        verifyServerCertificate_ = null;
      }
      return verifyServerCertificateBuilder_;
    }

    private java.lang.Object kind_ = "";
    /**
     * <pre>
     * This is always **sql#mysqlReplicaConfiguration**.
     * </pre>
     *
     * <code>string kind = 11;</code>
     * @return The kind.
     */
    public java.lang.String getKind() {
      java.lang.Object ref = kind_;
      if (!(ref instanceof java.lang.String)) {
        com.google.protobuf.ByteString bs =
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        kind_ = s;
        return s;
      } else {
        return (java.lang.String) ref;
      }
    }
    /**
     * <pre>
     * This is always **sql#mysqlReplicaConfiguration**.
     * </pre>
     *
     * <code>string kind = 11;</code>
     * @return The bytes for kind.
     */
    public com.google.protobuf.ByteString
        getKindBytes() {
      java.lang.Object ref = kind_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        kind_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }
    /**
     * <pre>
     * This is always **sql#mysqlReplicaConfiguration**.
     * </pre>
     *
     * <code>string kind = 11;</code>
     * @param value The kind to set.
     * @return This builder for chaining.
     */
    public Builder setKind(
        java.lang.String value) {
      if (value == null) { throw new NullPointerException(); }
      kind_ = value;
      bitField0_ |= 0x00000400;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * This is always **sql#mysqlReplicaConfiguration**.
     * </pre>
     *
     * <code>string kind = 11;</code>
     * @return This builder for chaining.
     */
    public Builder clearKind() {
      kind_ = getDefaultInstance().getKind();
      bitField0_ = (bitField0_ & ~0x00000400);
      onChanged();
      return this;
    }
    /**
     * <pre>
     * This is always **sql#mysqlReplicaConfiguration**.
     * </pre>
     *
     * <code>string kind = 11;</code>
     * @param value The bytes for kind to set.
     * @return This builder for chaining.
     */
    public Builder setKindBytes(
        com.google.protobuf.ByteString value) {
      if (value == null) { throw new NullPointerException(); }
      checkByteStringIsUtf8(value);
      kind_ = value;
      bitField0_ |= 0x00000400;
      onChanged();
      return this;
    }
    @java.lang.Override
    public final Builder setUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return super.setUnknownFields(unknownFields);
    }

    @java.lang.Override
    public final Builder mergeUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return super.mergeUnknownFields(unknownFields);
    }


    // @@protoc_insertion_point(builder_scope:google.cloud.sql.v1.MySqlReplicaConfiguration)
  }

  // @@protoc_insertion_point(class_scope:google.cloud.sql.v1.MySqlReplicaConfiguration)
  private static final com.google.cloud.sql.v1.MySqlReplicaConfiguration DEFAULT_INSTANCE;
  static {
    DEFAULT_INSTANCE = new com.google.cloud.sql.v1.MySqlReplicaConfiguration();
  }

  public static com.google.cloud.sql.v1.MySqlReplicaConfiguration getDefaultInstance() {
    return DEFAULT_INSTANCE;
  }

  private static final com.google.protobuf.Parser<MySqlReplicaConfiguration>
      PARSER = new com.google.protobuf.AbstractParser<MySqlReplicaConfiguration>() {
    @java.lang.Override
    public MySqlReplicaConfiguration parsePartialFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      Builder builder = newBuilder();
      try {
        builder.mergeFrom(input, extensionRegistry);
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(builder.buildPartial());
      } catch (com.google.protobuf.UninitializedMessageException e) {
        throw e.asInvalidProtocolBufferException().setUnfinishedMessage(builder.buildPartial());
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(e)
            .setUnfinishedMessage(builder.buildPartial());
      }
      return builder.buildPartial();
    }
  };

  public static com.google.protobuf.Parser<MySqlReplicaConfiguration> parser() {
    return PARSER;
  }

  @java.lang.Override
  public com.google.protobuf.Parser<MySqlReplicaConfiguration> getParserForType() {
    return PARSER;
  }

  @java.lang.Override
  public com.google.cloud.sql.v1.MySqlReplicaConfiguration getDefaultInstanceForType() {
    return DEFAULT_INSTANCE;
  }

}

