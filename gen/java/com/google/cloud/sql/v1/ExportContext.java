// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: google/cloud/sql/v1/cloud_sql_resources.proto

package com.google.cloud.sql.v1;

/**
 * <pre>
 * Database instance export context.
 * </pre>
 *
 * Protobuf type {@code google.cloud.sql.v1.ExportContext}
 */
public final class ExportContext extends
    com.google.protobuf.GeneratedMessageV3 implements
    // @@protoc_insertion_point(message_implements:google.cloud.sql.v1.ExportContext)
    ExportContextOrBuilder {
private static final long serialVersionUID = 0L;
  // Use ExportContext.newBuilder() to construct.
  private ExportContext(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
    super(builder);
  }
  private ExportContext() {
    uri_ = "";
    databases_ = com.google.protobuf.LazyStringArrayList.EMPTY;
    kind_ = "";
    fileType_ = 0;
  }

  @java.lang.Override
  @SuppressWarnings({"unused"})
  protected java.lang.Object newInstance(
      UnusedPrivateParameter unused) {
    return new ExportContext();
  }

  @java.lang.Override
  public final com.google.protobuf.UnknownFieldSet
  getUnknownFields() {
    return this.unknownFields;
  }
  private ExportContext(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    this();
    if (extensionRegistry == null) {
      throw new java.lang.NullPointerException();
    }
    int mutable_bitField0_ = 0;
    com.google.protobuf.UnknownFieldSet.Builder unknownFields =
        com.google.protobuf.UnknownFieldSet.newBuilder();
    try {
      boolean done = false;
      while (!done) {
        int tag = input.readTag();
        switch (tag) {
          case 0:
            done = true;
            break;
          case 10: {
            java.lang.String s = input.readStringRequireUtf8();

            uri_ = s;
            break;
          }
          case 18: {
            java.lang.String s = input.readStringRequireUtf8();
            if (!((mutable_bitField0_ & 0x00000001) != 0)) {
              databases_ = new com.google.protobuf.LazyStringArrayList();
              mutable_bitField0_ |= 0x00000001;
            }
            databases_.add(s);
            break;
          }
          case 26: {
            java.lang.String s = input.readStringRequireUtf8();

            kind_ = s;
            break;
          }
          case 34: {
            com.google.cloud.sql.v1.ExportContext.SqlExportOptions.Builder subBuilder = null;
            if (sqlExportOptions_ != null) {
              subBuilder = sqlExportOptions_.toBuilder();
            }
            sqlExportOptions_ = input.readMessage(com.google.cloud.sql.v1.ExportContext.SqlExportOptions.parser(), extensionRegistry);
            if (subBuilder != null) {
              subBuilder.mergeFrom(sqlExportOptions_);
              sqlExportOptions_ = subBuilder.buildPartial();
            }

            break;
          }
          case 42: {
            com.google.cloud.sql.v1.ExportContext.SqlCsvExportOptions.Builder subBuilder = null;
            if (csvExportOptions_ != null) {
              subBuilder = csvExportOptions_.toBuilder();
            }
            csvExportOptions_ = input.readMessage(com.google.cloud.sql.v1.ExportContext.SqlCsvExportOptions.parser(), extensionRegistry);
            if (subBuilder != null) {
              subBuilder.mergeFrom(csvExportOptions_);
              csvExportOptions_ = subBuilder.buildPartial();
            }

            break;
          }
          case 48: {
            int rawValue = input.readEnum();

            fileType_ = rawValue;
            break;
          }
          case 66: {
            com.google.protobuf.BoolValue.Builder subBuilder = null;
            if (offload_ != null) {
              subBuilder = offload_.toBuilder();
            }
            offload_ = input.readMessage(com.google.protobuf.BoolValue.parser(), extensionRegistry);
            if (subBuilder != null) {
              subBuilder.mergeFrom(offload_);
              offload_ = subBuilder.buildPartial();
            }

            break;
          }
          default: {
            if (!parseUnknownField(
                input, unknownFields, extensionRegistry, tag)) {
              done = true;
            }
            break;
          }
        }
      }
    } catch (com.google.protobuf.InvalidProtocolBufferException e) {
      throw e.setUnfinishedMessage(this);
    } catch (com.google.protobuf.UninitializedMessageException e) {
      throw e.asInvalidProtocolBufferException().setUnfinishedMessage(this);
    } catch (java.io.IOException e) {
      throw new com.google.protobuf.InvalidProtocolBufferException(
          e).setUnfinishedMessage(this);
    } finally {
      if (((mutable_bitField0_ & 0x00000001) != 0)) {
        databases_ = databases_.getUnmodifiableView();
      }
      this.unknownFields = unknownFields.build();
      makeExtensionsImmutable();
    }
  }
  public static final com.google.protobuf.Descriptors.Descriptor
      getDescriptor() {
    return com.google.cloud.sql.v1.CloudSqlResourcesProto.internal_static_google_cloud_sql_v1_ExportContext_descriptor;
  }

  @java.lang.Override
  protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internalGetFieldAccessorTable() {
    return com.google.cloud.sql.v1.CloudSqlResourcesProto.internal_static_google_cloud_sql_v1_ExportContext_fieldAccessorTable
        .ensureFieldAccessorsInitialized(
            com.google.cloud.sql.v1.ExportContext.class, com.google.cloud.sql.v1.ExportContext.Builder.class);
  }

  public interface SqlCsvExportOptionsOrBuilder extends
      // @@protoc_insertion_point(interface_extends:google.cloud.sql.v1.ExportContext.SqlCsvExportOptions)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <pre>
     * The select query used to extract the data.
     * </pre>
     *
     * <code>string select_query = 1;</code>
     * @return The selectQuery.
     */
    java.lang.String getSelectQuery();
    /**
     * <pre>
     * The select query used to extract the data.
     * </pre>
     *
     * <code>string select_query = 1;</code>
     * @return The bytes for selectQuery.
     */
    com.google.protobuf.ByteString
        getSelectQueryBytes();

    /**
     * <pre>
     * Specifies the character that should appear before a data character that
     * needs to be escaped.
     * </pre>
     *
     * <code>string escape_character = 2;</code>
     * @return The escapeCharacter.
     */
    java.lang.String getEscapeCharacter();
    /**
     * <pre>
     * Specifies the character that should appear before a data character that
     * needs to be escaped.
     * </pre>
     *
     * <code>string escape_character = 2;</code>
     * @return The bytes for escapeCharacter.
     */
    com.google.protobuf.ByteString
        getEscapeCharacterBytes();

    /**
     * <pre>
     * Specifies the quoting character to be used when a data value is quoted.
     * </pre>
     *
     * <code>string quote_character = 3;</code>
     * @return The quoteCharacter.
     */
    java.lang.String getQuoteCharacter();
    /**
     * <pre>
     * Specifies the quoting character to be used when a data value is quoted.
     * </pre>
     *
     * <code>string quote_character = 3;</code>
     * @return The bytes for quoteCharacter.
     */
    com.google.protobuf.ByteString
        getQuoteCharacterBytes();

    /**
     * <pre>
     * Specifies the character that separates columns within each row (line) of
     * the file.
     * </pre>
     *
     * <code>string fields_terminated_by = 4;</code>
     * @return The fieldsTerminatedBy.
     */
    java.lang.String getFieldsTerminatedBy();
    /**
     * <pre>
     * Specifies the character that separates columns within each row (line) of
     * the file.
     * </pre>
     *
     * <code>string fields_terminated_by = 4;</code>
     * @return The bytes for fieldsTerminatedBy.
     */
    com.google.protobuf.ByteString
        getFieldsTerminatedByBytes();

    /**
     * <pre>
     * This is used to separate lines. If a line does not contain all fields,
     * the rest of the columns are set to their default values.
     * </pre>
     *
     * <code>string lines_terminated_by = 6;</code>
     * @return The linesTerminatedBy.
     */
    java.lang.String getLinesTerminatedBy();
    /**
     * <pre>
     * This is used to separate lines. If a line does not contain all fields,
     * the rest of the columns are set to their default values.
     * </pre>
     *
     * <code>string lines_terminated_by = 6;</code>
     * @return The bytes for linesTerminatedBy.
     */
    com.google.protobuf.ByteString
        getLinesTerminatedByBytes();
  }
  /**
   * Protobuf type {@code google.cloud.sql.v1.ExportContext.SqlCsvExportOptions}
   */
  public static final class SqlCsvExportOptions extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:google.cloud.sql.v1.ExportContext.SqlCsvExportOptions)
      SqlCsvExportOptionsOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use SqlCsvExportOptions.newBuilder() to construct.
    private SqlCsvExportOptions(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private SqlCsvExportOptions() {
      selectQuery_ = "";
      escapeCharacter_ = "";
      quoteCharacter_ = "";
      fieldsTerminatedBy_ = "";
      linesTerminatedBy_ = "";
    }

    @java.lang.Override
    @SuppressWarnings({"unused"})
    protected java.lang.Object newInstance(
        UnusedPrivateParameter unused) {
      return new SqlCsvExportOptions();
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private SqlCsvExportOptions(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 10: {
              java.lang.String s = input.readStringRequireUtf8();

              selectQuery_ = s;
              break;
            }
            case 18: {
              java.lang.String s = input.readStringRequireUtf8();

              escapeCharacter_ = s;
              break;
            }
            case 26: {
              java.lang.String s = input.readStringRequireUtf8();

              quoteCharacter_ = s;
              break;
            }
            case 34: {
              java.lang.String s = input.readStringRequireUtf8();

              fieldsTerminatedBy_ = s;
              break;
            }
            case 50: {
              java.lang.String s = input.readStringRequireUtf8();

              linesTerminatedBy_ = s;
              break;
            }
            default: {
              if (!parseUnknownField(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (com.google.protobuf.UninitializedMessageException e) {
        throw e.asInvalidProtocolBufferException().setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.google.cloud.sql.v1.CloudSqlResourcesProto.internal_static_google_cloud_sql_v1_ExportContext_SqlCsvExportOptions_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.google.cloud.sql.v1.CloudSqlResourcesProto.internal_static_google_cloud_sql_v1_ExportContext_SqlCsvExportOptions_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.google.cloud.sql.v1.ExportContext.SqlCsvExportOptions.class, com.google.cloud.sql.v1.ExportContext.SqlCsvExportOptions.Builder.class);
    }

    public static final int SELECT_QUERY_FIELD_NUMBER = 1;
    private volatile java.lang.Object selectQuery_;
    /**
     * <pre>
     * The select query used to extract the data.
     * </pre>
     *
     * <code>string select_query = 1;</code>
     * @return The selectQuery.
     */
    @java.lang.Override
    public java.lang.String getSelectQuery() {
      java.lang.Object ref = selectQuery_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        selectQuery_ = s;
        return s;
      }
    }
    /**
     * <pre>
     * The select query used to extract the data.
     * </pre>
     *
     * <code>string select_query = 1;</code>
     * @return The bytes for selectQuery.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString
        getSelectQueryBytes() {
      java.lang.Object ref = selectQuery_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        selectQuery_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int ESCAPE_CHARACTER_FIELD_NUMBER = 2;
    private volatile java.lang.Object escapeCharacter_;
    /**
     * <pre>
     * Specifies the character that should appear before a data character that
     * needs to be escaped.
     * </pre>
     *
     * <code>string escape_character = 2;</code>
     * @return The escapeCharacter.
     */
    @java.lang.Override
    public java.lang.String getEscapeCharacter() {
      java.lang.Object ref = escapeCharacter_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        escapeCharacter_ = s;
        return s;
      }
    }
    /**
     * <pre>
     * Specifies the character that should appear before a data character that
     * needs to be escaped.
     * </pre>
     *
     * <code>string escape_character = 2;</code>
     * @return The bytes for escapeCharacter.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString
        getEscapeCharacterBytes() {
      java.lang.Object ref = escapeCharacter_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        escapeCharacter_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int QUOTE_CHARACTER_FIELD_NUMBER = 3;
    private volatile java.lang.Object quoteCharacter_;
    /**
     * <pre>
     * Specifies the quoting character to be used when a data value is quoted.
     * </pre>
     *
     * <code>string quote_character = 3;</code>
     * @return The quoteCharacter.
     */
    @java.lang.Override
    public java.lang.String getQuoteCharacter() {
      java.lang.Object ref = quoteCharacter_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        quoteCharacter_ = s;
        return s;
      }
    }
    /**
     * <pre>
     * Specifies the quoting character to be used when a data value is quoted.
     * </pre>
     *
     * <code>string quote_character = 3;</code>
     * @return The bytes for quoteCharacter.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString
        getQuoteCharacterBytes() {
      java.lang.Object ref = quoteCharacter_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        quoteCharacter_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int FIELDS_TERMINATED_BY_FIELD_NUMBER = 4;
    private volatile java.lang.Object fieldsTerminatedBy_;
    /**
     * <pre>
     * Specifies the character that separates columns within each row (line) of
     * the file.
     * </pre>
     *
     * <code>string fields_terminated_by = 4;</code>
     * @return The fieldsTerminatedBy.
     */
    @java.lang.Override
    public java.lang.String getFieldsTerminatedBy() {
      java.lang.Object ref = fieldsTerminatedBy_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        fieldsTerminatedBy_ = s;
        return s;
      }
    }
    /**
     * <pre>
     * Specifies the character that separates columns within each row (line) of
     * the file.
     * </pre>
     *
     * <code>string fields_terminated_by = 4;</code>
     * @return The bytes for fieldsTerminatedBy.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString
        getFieldsTerminatedByBytes() {
      java.lang.Object ref = fieldsTerminatedBy_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        fieldsTerminatedBy_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int LINES_TERMINATED_BY_FIELD_NUMBER = 6;
    private volatile java.lang.Object linesTerminatedBy_;
    /**
     * <pre>
     * This is used to separate lines. If a line does not contain all fields,
     * the rest of the columns are set to their default values.
     * </pre>
     *
     * <code>string lines_terminated_by = 6;</code>
     * @return The linesTerminatedBy.
     */
    @java.lang.Override
    public java.lang.String getLinesTerminatedBy() {
      java.lang.Object ref = linesTerminatedBy_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        linesTerminatedBy_ = s;
        return s;
      }
    }
    /**
     * <pre>
     * This is used to separate lines. If a line does not contain all fields,
     * the rest of the columns are set to their default values.
     * </pre>
     *
     * <code>string lines_terminated_by = 6;</code>
     * @return The bytes for linesTerminatedBy.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString
        getLinesTerminatedByBytes() {
      java.lang.Object ref = linesTerminatedBy_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        linesTerminatedBy_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(selectQuery_)) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 1, selectQuery_);
      }
      if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(escapeCharacter_)) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 2, escapeCharacter_);
      }
      if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(quoteCharacter_)) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 3, quoteCharacter_);
      }
      if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(fieldsTerminatedBy_)) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 4, fieldsTerminatedBy_);
      }
      if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(linesTerminatedBy_)) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 6, linesTerminatedBy_);
      }
      unknownFields.writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(selectQuery_)) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(1, selectQuery_);
      }
      if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(escapeCharacter_)) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(2, escapeCharacter_);
      }
      if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(quoteCharacter_)) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(3, quoteCharacter_);
      }
      if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(fieldsTerminatedBy_)) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(4, fieldsTerminatedBy_);
      }
      if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(linesTerminatedBy_)) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(6, linesTerminatedBy_);
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof com.google.cloud.sql.v1.ExportContext.SqlCsvExportOptions)) {
        return super.equals(obj);
      }
      com.google.cloud.sql.v1.ExportContext.SqlCsvExportOptions other = (com.google.cloud.sql.v1.ExportContext.SqlCsvExportOptions) obj;

      if (!getSelectQuery()
          .equals(other.getSelectQuery())) return false;
      if (!getEscapeCharacter()
          .equals(other.getEscapeCharacter())) return false;
      if (!getQuoteCharacter()
          .equals(other.getQuoteCharacter())) return false;
      if (!getFieldsTerminatedBy()
          .equals(other.getFieldsTerminatedBy())) return false;
      if (!getLinesTerminatedBy()
          .equals(other.getLinesTerminatedBy())) return false;
      if (!unknownFields.equals(other.unknownFields)) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      hash = (37 * hash) + SELECT_QUERY_FIELD_NUMBER;
      hash = (53 * hash) + getSelectQuery().hashCode();
      hash = (37 * hash) + ESCAPE_CHARACTER_FIELD_NUMBER;
      hash = (53 * hash) + getEscapeCharacter().hashCode();
      hash = (37 * hash) + QUOTE_CHARACTER_FIELD_NUMBER;
      hash = (53 * hash) + getQuoteCharacter().hashCode();
      hash = (37 * hash) + FIELDS_TERMINATED_BY_FIELD_NUMBER;
      hash = (53 * hash) + getFieldsTerminatedBy().hashCode();
      hash = (37 * hash) + LINES_TERMINATED_BY_FIELD_NUMBER;
      hash = (53 * hash) + getLinesTerminatedBy().hashCode();
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static com.google.cloud.sql.v1.ExportContext.SqlCsvExportOptions parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.google.cloud.sql.v1.ExportContext.SqlCsvExportOptions parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.google.cloud.sql.v1.ExportContext.SqlCsvExportOptions parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.google.cloud.sql.v1.ExportContext.SqlCsvExportOptions parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.google.cloud.sql.v1.ExportContext.SqlCsvExportOptions parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.google.cloud.sql.v1.ExportContext.SqlCsvExportOptions parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.google.cloud.sql.v1.ExportContext.SqlCsvExportOptions parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static com.google.cloud.sql.v1.ExportContext.SqlCsvExportOptions parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static com.google.cloud.sql.v1.ExportContext.SqlCsvExportOptions parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static com.google.cloud.sql.v1.ExportContext.SqlCsvExportOptions parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static com.google.cloud.sql.v1.ExportContext.SqlCsvExportOptions parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static com.google.cloud.sql.v1.ExportContext.SqlCsvExportOptions parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(com.google.cloud.sql.v1.ExportContext.SqlCsvExportOptions prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code google.cloud.sql.v1.ExportContext.SqlCsvExportOptions}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:google.cloud.sql.v1.ExportContext.SqlCsvExportOptions)
        com.google.cloud.sql.v1.ExportContext.SqlCsvExportOptionsOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return com.google.cloud.sql.v1.CloudSqlResourcesProto.internal_static_google_cloud_sql_v1_ExportContext_SqlCsvExportOptions_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return com.google.cloud.sql.v1.CloudSqlResourcesProto.internal_static_google_cloud_sql_v1_ExportContext_SqlCsvExportOptions_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                com.google.cloud.sql.v1.ExportContext.SqlCsvExportOptions.class, com.google.cloud.sql.v1.ExportContext.SqlCsvExportOptions.Builder.class);
      }

      // Construct using com.google.cloud.sql.v1.ExportContext.SqlCsvExportOptions.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        selectQuery_ = "";

        escapeCharacter_ = "";

        quoteCharacter_ = "";

        fieldsTerminatedBy_ = "";

        linesTerminatedBy_ = "";

        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.google.cloud.sql.v1.CloudSqlResourcesProto.internal_static_google_cloud_sql_v1_ExportContext_SqlCsvExportOptions_descriptor;
      }

      @java.lang.Override
      public com.google.cloud.sql.v1.ExportContext.SqlCsvExportOptions getDefaultInstanceForType() {
        return com.google.cloud.sql.v1.ExportContext.SqlCsvExportOptions.getDefaultInstance();
      }

      @java.lang.Override
      public com.google.cloud.sql.v1.ExportContext.SqlCsvExportOptions build() {
        com.google.cloud.sql.v1.ExportContext.SqlCsvExportOptions result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public com.google.cloud.sql.v1.ExportContext.SqlCsvExportOptions buildPartial() {
        com.google.cloud.sql.v1.ExportContext.SqlCsvExportOptions result = new com.google.cloud.sql.v1.ExportContext.SqlCsvExportOptions(this);
        result.selectQuery_ = selectQuery_;
        result.escapeCharacter_ = escapeCharacter_;
        result.quoteCharacter_ = quoteCharacter_;
        result.fieldsTerminatedBy_ = fieldsTerminatedBy_;
        result.linesTerminatedBy_ = linesTerminatedBy_;
        onBuilt();
        return result;
      }

      @java.lang.Override
      public Builder clone() {
        return super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.google.cloud.sql.v1.ExportContext.SqlCsvExportOptions) {
          return mergeFrom((com.google.cloud.sql.v1.ExportContext.SqlCsvExportOptions)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(com.google.cloud.sql.v1.ExportContext.SqlCsvExportOptions other) {
        if (other == com.google.cloud.sql.v1.ExportContext.SqlCsvExportOptions.getDefaultInstance()) return this;
        if (!other.getSelectQuery().isEmpty()) {
          selectQuery_ = other.selectQuery_;
          onChanged();
        }
        if (!other.getEscapeCharacter().isEmpty()) {
          escapeCharacter_ = other.escapeCharacter_;
          onChanged();
        }
        if (!other.getQuoteCharacter().isEmpty()) {
          quoteCharacter_ = other.quoteCharacter_;
          onChanged();
        }
        if (!other.getFieldsTerminatedBy().isEmpty()) {
          fieldsTerminatedBy_ = other.fieldsTerminatedBy_;
          onChanged();
        }
        if (!other.getLinesTerminatedBy().isEmpty()) {
          linesTerminatedBy_ = other.linesTerminatedBy_;
          onChanged();
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.google.cloud.sql.v1.ExportContext.SqlCsvExportOptions parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (com.google.cloud.sql.v1.ExportContext.SqlCsvExportOptions) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }

      private java.lang.Object selectQuery_ = "";
      /**
       * <pre>
       * The select query used to extract the data.
       * </pre>
       *
       * <code>string select_query = 1;</code>
       * @return The selectQuery.
       */
      public java.lang.String getSelectQuery() {
        java.lang.Object ref = selectQuery_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          selectQuery_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <pre>
       * The select query used to extract the data.
       * </pre>
       *
       * <code>string select_query = 1;</code>
       * @return The bytes for selectQuery.
       */
      public com.google.protobuf.ByteString
          getSelectQueryBytes() {
        java.lang.Object ref = selectQuery_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          selectQuery_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       * The select query used to extract the data.
       * </pre>
       *
       * <code>string select_query = 1;</code>
       * @param value The selectQuery to set.
       * @return This builder for chaining.
       */
      public Builder setSelectQuery(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        selectQuery_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * The select query used to extract the data.
       * </pre>
       *
       * <code>string select_query = 1;</code>
       * @return This builder for chaining.
       */
      public Builder clearSelectQuery() {
        
        selectQuery_ = getDefaultInstance().getSelectQuery();
        onChanged();
        return this;
      }
      /**
       * <pre>
       * The select query used to extract the data.
       * </pre>
       *
       * <code>string select_query = 1;</code>
       * @param value The bytes for selectQuery to set.
       * @return This builder for chaining.
       */
      public Builder setSelectQueryBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        selectQuery_ = value;
        onChanged();
        return this;
      }

      private java.lang.Object escapeCharacter_ = "";
      /**
       * <pre>
       * Specifies the character that should appear before a data character that
       * needs to be escaped.
       * </pre>
       *
       * <code>string escape_character = 2;</code>
       * @return The escapeCharacter.
       */
      public java.lang.String getEscapeCharacter() {
        java.lang.Object ref = escapeCharacter_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          escapeCharacter_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <pre>
       * Specifies the character that should appear before a data character that
       * needs to be escaped.
       * </pre>
       *
       * <code>string escape_character = 2;</code>
       * @return The bytes for escapeCharacter.
       */
      public com.google.protobuf.ByteString
          getEscapeCharacterBytes() {
        java.lang.Object ref = escapeCharacter_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          escapeCharacter_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       * Specifies the character that should appear before a data character that
       * needs to be escaped.
       * </pre>
       *
       * <code>string escape_character = 2;</code>
       * @param value The escapeCharacter to set.
       * @return This builder for chaining.
       */
      public Builder setEscapeCharacter(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        escapeCharacter_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Specifies the character that should appear before a data character that
       * needs to be escaped.
       * </pre>
       *
       * <code>string escape_character = 2;</code>
       * @return This builder for chaining.
       */
      public Builder clearEscapeCharacter() {
        
        escapeCharacter_ = getDefaultInstance().getEscapeCharacter();
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Specifies the character that should appear before a data character that
       * needs to be escaped.
       * </pre>
       *
       * <code>string escape_character = 2;</code>
       * @param value The bytes for escapeCharacter to set.
       * @return This builder for chaining.
       */
      public Builder setEscapeCharacterBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        escapeCharacter_ = value;
        onChanged();
        return this;
      }

      private java.lang.Object quoteCharacter_ = "";
      /**
       * <pre>
       * Specifies the quoting character to be used when a data value is quoted.
       * </pre>
       *
       * <code>string quote_character = 3;</code>
       * @return The quoteCharacter.
       */
      public java.lang.String getQuoteCharacter() {
        java.lang.Object ref = quoteCharacter_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          quoteCharacter_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <pre>
       * Specifies the quoting character to be used when a data value is quoted.
       * </pre>
       *
       * <code>string quote_character = 3;</code>
       * @return The bytes for quoteCharacter.
       */
      public com.google.protobuf.ByteString
          getQuoteCharacterBytes() {
        java.lang.Object ref = quoteCharacter_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          quoteCharacter_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       * Specifies the quoting character to be used when a data value is quoted.
       * </pre>
       *
       * <code>string quote_character = 3;</code>
       * @param value The quoteCharacter to set.
       * @return This builder for chaining.
       */
      public Builder setQuoteCharacter(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        quoteCharacter_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Specifies the quoting character to be used when a data value is quoted.
       * </pre>
       *
       * <code>string quote_character = 3;</code>
       * @return This builder for chaining.
       */
      public Builder clearQuoteCharacter() {
        
        quoteCharacter_ = getDefaultInstance().getQuoteCharacter();
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Specifies the quoting character to be used when a data value is quoted.
       * </pre>
       *
       * <code>string quote_character = 3;</code>
       * @param value The bytes for quoteCharacter to set.
       * @return This builder for chaining.
       */
      public Builder setQuoteCharacterBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        quoteCharacter_ = value;
        onChanged();
        return this;
      }

      private java.lang.Object fieldsTerminatedBy_ = "";
      /**
       * <pre>
       * Specifies the character that separates columns within each row (line) of
       * the file.
       * </pre>
       *
       * <code>string fields_terminated_by = 4;</code>
       * @return The fieldsTerminatedBy.
       */
      public java.lang.String getFieldsTerminatedBy() {
        java.lang.Object ref = fieldsTerminatedBy_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          fieldsTerminatedBy_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <pre>
       * Specifies the character that separates columns within each row (line) of
       * the file.
       * </pre>
       *
       * <code>string fields_terminated_by = 4;</code>
       * @return The bytes for fieldsTerminatedBy.
       */
      public com.google.protobuf.ByteString
          getFieldsTerminatedByBytes() {
        java.lang.Object ref = fieldsTerminatedBy_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          fieldsTerminatedBy_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       * Specifies the character that separates columns within each row (line) of
       * the file.
       * </pre>
       *
       * <code>string fields_terminated_by = 4;</code>
       * @param value The fieldsTerminatedBy to set.
       * @return This builder for chaining.
       */
      public Builder setFieldsTerminatedBy(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        fieldsTerminatedBy_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Specifies the character that separates columns within each row (line) of
       * the file.
       * </pre>
       *
       * <code>string fields_terminated_by = 4;</code>
       * @return This builder for chaining.
       */
      public Builder clearFieldsTerminatedBy() {
        
        fieldsTerminatedBy_ = getDefaultInstance().getFieldsTerminatedBy();
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Specifies the character that separates columns within each row (line) of
       * the file.
       * </pre>
       *
       * <code>string fields_terminated_by = 4;</code>
       * @param value The bytes for fieldsTerminatedBy to set.
       * @return This builder for chaining.
       */
      public Builder setFieldsTerminatedByBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        fieldsTerminatedBy_ = value;
        onChanged();
        return this;
      }

      private java.lang.Object linesTerminatedBy_ = "";
      /**
       * <pre>
       * This is used to separate lines. If a line does not contain all fields,
       * the rest of the columns are set to their default values.
       * </pre>
       *
       * <code>string lines_terminated_by = 6;</code>
       * @return The linesTerminatedBy.
       */
      public java.lang.String getLinesTerminatedBy() {
        java.lang.Object ref = linesTerminatedBy_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          linesTerminatedBy_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <pre>
       * This is used to separate lines. If a line does not contain all fields,
       * the rest of the columns are set to their default values.
       * </pre>
       *
       * <code>string lines_terminated_by = 6;</code>
       * @return The bytes for linesTerminatedBy.
       */
      public com.google.protobuf.ByteString
          getLinesTerminatedByBytes() {
        java.lang.Object ref = linesTerminatedBy_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          linesTerminatedBy_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       * This is used to separate lines. If a line does not contain all fields,
       * the rest of the columns are set to their default values.
       * </pre>
       *
       * <code>string lines_terminated_by = 6;</code>
       * @param value The linesTerminatedBy to set.
       * @return This builder for chaining.
       */
      public Builder setLinesTerminatedBy(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        linesTerminatedBy_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * This is used to separate lines. If a line does not contain all fields,
       * the rest of the columns are set to their default values.
       * </pre>
       *
       * <code>string lines_terminated_by = 6;</code>
       * @return This builder for chaining.
       */
      public Builder clearLinesTerminatedBy() {
        
        linesTerminatedBy_ = getDefaultInstance().getLinesTerminatedBy();
        onChanged();
        return this;
      }
      /**
       * <pre>
       * This is used to separate lines. If a line does not contain all fields,
       * the rest of the columns are set to their default values.
       * </pre>
       *
       * <code>string lines_terminated_by = 6;</code>
       * @param value The bytes for linesTerminatedBy to set.
       * @return This builder for chaining.
       */
      public Builder setLinesTerminatedByBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        linesTerminatedBy_ = value;
        onChanged();
        return this;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:google.cloud.sql.v1.ExportContext.SqlCsvExportOptions)
    }

    // @@protoc_insertion_point(class_scope:google.cloud.sql.v1.ExportContext.SqlCsvExportOptions)
    private static final com.google.cloud.sql.v1.ExportContext.SqlCsvExportOptions DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new com.google.cloud.sql.v1.ExportContext.SqlCsvExportOptions();
    }

    public static com.google.cloud.sql.v1.ExportContext.SqlCsvExportOptions getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<SqlCsvExportOptions>
        PARSER = new com.google.protobuf.AbstractParser<SqlCsvExportOptions>() {
      @java.lang.Override
      public SqlCsvExportOptions parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new SqlCsvExportOptions(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<SqlCsvExportOptions> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<SqlCsvExportOptions> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.cloud.sql.v1.ExportContext.SqlCsvExportOptions getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface SqlExportOptionsOrBuilder extends
      // @@protoc_insertion_point(interface_extends:google.cloud.sql.v1.ExportContext.SqlExportOptions)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <pre>
     * Tables to export, or that were exported, from the specified database. If
     * you specify tables, specify one and only one database. For PostgreSQL
     * instances, you can specify only one table.
     * </pre>
     *
     * <code>repeated string tables = 1;</code>
     * @return A list containing the tables.
     */
    java.util.List<java.lang.String>
        getTablesList();
    /**
     * <pre>
     * Tables to export, or that were exported, from the specified database. If
     * you specify tables, specify one and only one database. For PostgreSQL
     * instances, you can specify only one table.
     * </pre>
     *
     * <code>repeated string tables = 1;</code>
     * @return The count of tables.
     */
    int getTablesCount();
    /**
     * <pre>
     * Tables to export, or that were exported, from the specified database. If
     * you specify tables, specify one and only one database. For PostgreSQL
     * instances, you can specify only one table.
     * </pre>
     *
     * <code>repeated string tables = 1;</code>
     * @param index The index of the element to return.
     * @return The tables at the given index.
     */
    java.lang.String getTables(int index);
    /**
     * <pre>
     * Tables to export, or that were exported, from the specified database. If
     * you specify tables, specify one and only one database. For PostgreSQL
     * instances, you can specify only one table.
     * </pre>
     *
     * <code>repeated string tables = 1;</code>
     * @param index The index of the value to return.
     * @return The bytes of the tables at the given index.
     */
    com.google.protobuf.ByteString
        getTablesBytes(int index);

    /**
     * <pre>
     * Export only schemas.
     * </pre>
     *
     * <code>.google.protobuf.BoolValue schema_only = 2;</code>
     * @return Whether the schemaOnly field is set.
     */
    boolean hasSchemaOnly();
    /**
     * <pre>
     * Export only schemas.
     * </pre>
     *
     * <code>.google.protobuf.BoolValue schema_only = 2;</code>
     * @return The schemaOnly.
     */
    com.google.protobuf.BoolValue getSchemaOnly();
    /**
     * <pre>
     * Export only schemas.
     * </pre>
     *
     * <code>.google.protobuf.BoolValue schema_only = 2;</code>
     */
    com.google.protobuf.BoolValueOrBuilder getSchemaOnlyOrBuilder();

    /**
     * <code>.google.cloud.sql.v1.ExportContext.SqlExportOptions.MysqlExportOptions mysql_export_options = 3;</code>
     * @return Whether the mysqlExportOptions field is set.
     */
    boolean hasMysqlExportOptions();
    /**
     * <code>.google.cloud.sql.v1.ExportContext.SqlExportOptions.MysqlExportOptions mysql_export_options = 3;</code>
     * @return The mysqlExportOptions.
     */
    com.google.cloud.sql.v1.ExportContext.SqlExportOptions.MysqlExportOptions getMysqlExportOptions();
    /**
     * <code>.google.cloud.sql.v1.ExportContext.SqlExportOptions.MysqlExportOptions mysql_export_options = 3;</code>
     */
    com.google.cloud.sql.v1.ExportContext.SqlExportOptions.MysqlExportOptionsOrBuilder getMysqlExportOptionsOrBuilder();
  }
  /**
   * Protobuf type {@code google.cloud.sql.v1.ExportContext.SqlExportOptions}
   */
  public static final class SqlExportOptions extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:google.cloud.sql.v1.ExportContext.SqlExportOptions)
      SqlExportOptionsOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use SqlExportOptions.newBuilder() to construct.
    private SqlExportOptions(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private SqlExportOptions() {
      tables_ = com.google.protobuf.LazyStringArrayList.EMPTY;
    }

    @java.lang.Override
    @SuppressWarnings({"unused"})
    protected java.lang.Object newInstance(
        UnusedPrivateParameter unused) {
      return new SqlExportOptions();
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private SqlExportOptions(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 10: {
              java.lang.String s = input.readStringRequireUtf8();
              if (!((mutable_bitField0_ & 0x00000001) != 0)) {
                tables_ = new com.google.protobuf.LazyStringArrayList();
                mutable_bitField0_ |= 0x00000001;
              }
              tables_.add(s);
              break;
            }
            case 18: {
              com.google.protobuf.BoolValue.Builder subBuilder = null;
              if (schemaOnly_ != null) {
                subBuilder = schemaOnly_.toBuilder();
              }
              schemaOnly_ = input.readMessage(com.google.protobuf.BoolValue.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(schemaOnly_);
                schemaOnly_ = subBuilder.buildPartial();
              }

              break;
            }
            case 26: {
              com.google.cloud.sql.v1.ExportContext.SqlExportOptions.MysqlExportOptions.Builder subBuilder = null;
              if (mysqlExportOptions_ != null) {
                subBuilder = mysqlExportOptions_.toBuilder();
              }
              mysqlExportOptions_ = input.readMessage(com.google.cloud.sql.v1.ExportContext.SqlExportOptions.MysqlExportOptions.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(mysqlExportOptions_);
                mysqlExportOptions_ = subBuilder.buildPartial();
              }

              break;
            }
            default: {
              if (!parseUnknownField(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (com.google.protobuf.UninitializedMessageException e) {
        throw e.asInvalidProtocolBufferException().setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000001) != 0)) {
          tables_ = tables_.getUnmodifiableView();
        }
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.google.cloud.sql.v1.CloudSqlResourcesProto.internal_static_google_cloud_sql_v1_ExportContext_SqlExportOptions_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.google.cloud.sql.v1.CloudSqlResourcesProto.internal_static_google_cloud_sql_v1_ExportContext_SqlExportOptions_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.google.cloud.sql.v1.ExportContext.SqlExportOptions.class, com.google.cloud.sql.v1.ExportContext.SqlExportOptions.Builder.class);
    }

    public interface MysqlExportOptionsOrBuilder extends
        // @@protoc_insertion_point(interface_extends:google.cloud.sql.v1.ExportContext.SqlExportOptions.MysqlExportOptions)
        com.google.protobuf.MessageOrBuilder {

      /**
       * <pre>
       * Option to include SQL statement required to set up replication.
       * *  If set to **1**, the dump file includes
       *  a CHANGE MASTER TO statement with the binary log coordinates,
       *  and --set-gtid-purged is set to ON.
       * *  If set to **2**, the CHANGE MASTER TO statement is written as
       *  a SQL comment and has no effect.
       * *  If set to any value other than **1**, --set-gtid-purged is set
       * to OFF.
       * </pre>
       *
       * <code>.google.protobuf.Int32Value master_data = 1;</code>
       * @return Whether the masterData field is set.
       */
      boolean hasMasterData();
      /**
       * <pre>
       * Option to include SQL statement required to set up replication.
       * *  If set to **1**, the dump file includes
       *  a CHANGE MASTER TO statement with the binary log coordinates,
       *  and --set-gtid-purged is set to ON.
       * *  If set to **2**, the CHANGE MASTER TO statement is written as
       *  a SQL comment and has no effect.
       * *  If set to any value other than **1**, --set-gtid-purged is set
       * to OFF.
       * </pre>
       *
       * <code>.google.protobuf.Int32Value master_data = 1;</code>
       * @return The masterData.
       */
      com.google.protobuf.Int32Value getMasterData();
      /**
       * <pre>
       * Option to include SQL statement required to set up replication.
       * *  If set to **1**, the dump file includes
       *  a CHANGE MASTER TO statement with the binary log coordinates,
       *  and --set-gtid-purged is set to ON.
       * *  If set to **2**, the CHANGE MASTER TO statement is written as
       *  a SQL comment and has no effect.
       * *  If set to any value other than **1**, --set-gtid-purged is set
       * to OFF.
       * </pre>
       *
       * <code>.google.protobuf.Int32Value master_data = 1;</code>
       */
      com.google.protobuf.Int32ValueOrBuilder getMasterDataOrBuilder();
    }
    /**
     * <pre>
     * Options for exporting from MySQL.
     * </pre>
     *
     * Protobuf type {@code google.cloud.sql.v1.ExportContext.SqlExportOptions.MysqlExportOptions}
     */
    public static final class MysqlExportOptions extends
        com.google.protobuf.GeneratedMessageV3 implements
        // @@protoc_insertion_point(message_implements:google.cloud.sql.v1.ExportContext.SqlExportOptions.MysqlExportOptions)
        MysqlExportOptionsOrBuilder {
    private static final long serialVersionUID = 0L;
      // Use MysqlExportOptions.newBuilder() to construct.
      private MysqlExportOptions(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
        super(builder);
      }
      private MysqlExportOptions() {
      }

      @java.lang.Override
      @SuppressWarnings({"unused"})
      protected java.lang.Object newInstance(
          UnusedPrivateParameter unused) {
        return new MysqlExportOptions();
      }

      @java.lang.Override
      public final com.google.protobuf.UnknownFieldSet
      getUnknownFields() {
        return this.unknownFields;
      }
      private MysqlExportOptions(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        this();
        if (extensionRegistry == null) {
          throw new java.lang.NullPointerException();
        }
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
            com.google.protobuf.UnknownFieldSet.newBuilder();
        try {
          boolean done = false;
          while (!done) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                done = true;
                break;
              case 10: {
                com.google.protobuf.Int32Value.Builder subBuilder = null;
                if (masterData_ != null) {
                  subBuilder = masterData_.toBuilder();
                }
                masterData_ = input.readMessage(com.google.protobuf.Int32Value.parser(), extensionRegistry);
                if (subBuilder != null) {
                  subBuilder.mergeFrom(masterData_);
                  masterData_ = subBuilder.buildPartial();
                }

                break;
              }
              default: {
                if (!parseUnknownField(
                    input, unknownFields, extensionRegistry, tag)) {
                  done = true;
                }
                break;
              }
            }
          }
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.setUnfinishedMessage(this);
        } catch (com.google.protobuf.UninitializedMessageException e) {
          throw e.asInvalidProtocolBufferException().setUnfinishedMessage(this);
        } catch (java.io.IOException e) {
          throw new com.google.protobuf.InvalidProtocolBufferException(
              e).setUnfinishedMessage(this);
        } finally {
          this.unknownFields = unknownFields.build();
          makeExtensionsImmutable();
        }
      }
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return com.google.cloud.sql.v1.CloudSqlResourcesProto.internal_static_google_cloud_sql_v1_ExportContext_SqlExportOptions_MysqlExportOptions_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return com.google.cloud.sql.v1.CloudSqlResourcesProto.internal_static_google_cloud_sql_v1_ExportContext_SqlExportOptions_MysqlExportOptions_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                com.google.cloud.sql.v1.ExportContext.SqlExportOptions.MysqlExportOptions.class, com.google.cloud.sql.v1.ExportContext.SqlExportOptions.MysqlExportOptions.Builder.class);
      }

      public static final int MASTER_DATA_FIELD_NUMBER = 1;
      private com.google.protobuf.Int32Value masterData_;
      /**
       * <pre>
       * Option to include SQL statement required to set up replication.
       * *  If set to **1**, the dump file includes
       *  a CHANGE MASTER TO statement with the binary log coordinates,
       *  and --set-gtid-purged is set to ON.
       * *  If set to **2**, the CHANGE MASTER TO statement is written as
       *  a SQL comment and has no effect.
       * *  If set to any value other than **1**, --set-gtid-purged is set
       * to OFF.
       * </pre>
       *
       * <code>.google.protobuf.Int32Value master_data = 1;</code>
       * @return Whether the masterData field is set.
       */
      @java.lang.Override
      public boolean hasMasterData() {
        return masterData_ != null;
      }
      /**
       * <pre>
       * Option to include SQL statement required to set up replication.
       * *  If set to **1**, the dump file includes
       *  a CHANGE MASTER TO statement with the binary log coordinates,
       *  and --set-gtid-purged is set to ON.
       * *  If set to **2**, the CHANGE MASTER TO statement is written as
       *  a SQL comment and has no effect.
       * *  If set to any value other than **1**, --set-gtid-purged is set
       * to OFF.
       * </pre>
       *
       * <code>.google.protobuf.Int32Value master_data = 1;</code>
       * @return The masterData.
       */
      @java.lang.Override
      public com.google.protobuf.Int32Value getMasterData() {
        return masterData_ == null ? com.google.protobuf.Int32Value.getDefaultInstance() : masterData_;
      }
      /**
       * <pre>
       * Option to include SQL statement required to set up replication.
       * *  If set to **1**, the dump file includes
       *  a CHANGE MASTER TO statement with the binary log coordinates,
       *  and --set-gtid-purged is set to ON.
       * *  If set to **2**, the CHANGE MASTER TO statement is written as
       *  a SQL comment and has no effect.
       * *  If set to any value other than **1**, --set-gtid-purged is set
       * to OFF.
       * </pre>
       *
       * <code>.google.protobuf.Int32Value master_data = 1;</code>
       */
      @java.lang.Override
      public com.google.protobuf.Int32ValueOrBuilder getMasterDataOrBuilder() {
        return getMasterData();
      }

      private byte memoizedIsInitialized = -1;
      @java.lang.Override
      public final boolean isInitialized() {
        byte isInitialized = memoizedIsInitialized;
        if (isInitialized == 1) return true;
        if (isInitialized == 0) return false;

        memoizedIsInitialized = 1;
        return true;
      }

      @java.lang.Override
      public void writeTo(com.google.protobuf.CodedOutputStream output)
                          throws java.io.IOException {
        if (masterData_ != null) {
          output.writeMessage(1, getMasterData());
        }
        unknownFields.writeTo(output);
      }

      @java.lang.Override
      public int getSerializedSize() {
        int size = memoizedSize;
        if (size != -1) return size;

        size = 0;
        if (masterData_ != null) {
          size += com.google.protobuf.CodedOutputStream
            .computeMessageSize(1, getMasterData());
        }
        size += unknownFields.getSerializedSize();
        memoizedSize = size;
        return size;
      }

      @java.lang.Override
      public boolean equals(final java.lang.Object obj) {
        if (obj == this) {
         return true;
        }
        if (!(obj instanceof com.google.cloud.sql.v1.ExportContext.SqlExportOptions.MysqlExportOptions)) {
          return super.equals(obj);
        }
        com.google.cloud.sql.v1.ExportContext.SqlExportOptions.MysqlExportOptions other = (com.google.cloud.sql.v1.ExportContext.SqlExportOptions.MysqlExportOptions) obj;

        if (hasMasterData() != other.hasMasterData()) return false;
        if (hasMasterData()) {
          if (!getMasterData()
              .equals(other.getMasterData())) return false;
        }
        if (!unknownFields.equals(other.unknownFields)) return false;
        return true;
      }

      @java.lang.Override
      public int hashCode() {
        if (memoizedHashCode != 0) {
          return memoizedHashCode;
        }
        int hash = 41;
        hash = (19 * hash) + getDescriptor().hashCode();
        if (hasMasterData()) {
          hash = (37 * hash) + MASTER_DATA_FIELD_NUMBER;
          hash = (53 * hash) + getMasterData().hashCode();
        }
        hash = (29 * hash) + unknownFields.hashCode();
        memoizedHashCode = hash;
        return hash;
      }

      public static com.google.cloud.sql.v1.ExportContext.SqlExportOptions.MysqlExportOptions parseFrom(
          java.nio.ByteBuffer data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static com.google.cloud.sql.v1.ExportContext.SqlExportOptions.MysqlExportOptions parseFrom(
          java.nio.ByteBuffer data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static com.google.cloud.sql.v1.ExportContext.SqlExportOptions.MysqlExportOptions parseFrom(
          com.google.protobuf.ByteString data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static com.google.cloud.sql.v1.ExportContext.SqlExportOptions.MysqlExportOptions parseFrom(
          com.google.protobuf.ByteString data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static com.google.cloud.sql.v1.ExportContext.SqlExportOptions.MysqlExportOptions parseFrom(byte[] data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static com.google.cloud.sql.v1.ExportContext.SqlExportOptions.MysqlExportOptions parseFrom(
          byte[] data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static com.google.cloud.sql.v1.ExportContext.SqlExportOptions.MysqlExportOptions parseFrom(java.io.InputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input);
      }
      public static com.google.cloud.sql.v1.ExportContext.SqlExportOptions.MysqlExportOptions parseFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input, extensionRegistry);
      }
      public static com.google.cloud.sql.v1.ExportContext.SqlExportOptions.MysqlExportOptions parseDelimitedFrom(java.io.InputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseDelimitedWithIOException(PARSER, input);
      }
      public static com.google.cloud.sql.v1.ExportContext.SqlExportOptions.MysqlExportOptions parseDelimitedFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
      }
      public static com.google.cloud.sql.v1.ExportContext.SqlExportOptions.MysqlExportOptions parseFrom(
          com.google.protobuf.CodedInputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input);
      }
      public static com.google.cloud.sql.v1.ExportContext.SqlExportOptions.MysqlExportOptions parseFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input, extensionRegistry);
      }

      @java.lang.Override
      public Builder newBuilderForType() { return newBuilder(); }
      public static Builder newBuilder() {
        return DEFAULT_INSTANCE.toBuilder();
      }
      public static Builder newBuilder(com.google.cloud.sql.v1.ExportContext.SqlExportOptions.MysqlExportOptions prototype) {
        return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
      }
      @java.lang.Override
      public Builder toBuilder() {
        return this == DEFAULT_INSTANCE
            ? new Builder() : new Builder().mergeFrom(this);
      }

      @java.lang.Override
      protected Builder newBuilderForType(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        Builder builder = new Builder(parent);
        return builder;
      }
      /**
       * <pre>
       * Options for exporting from MySQL.
       * </pre>
       *
       * Protobuf type {@code google.cloud.sql.v1.ExportContext.SqlExportOptions.MysqlExportOptions}
       */
      public static final class Builder extends
          com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
          // @@protoc_insertion_point(builder_implements:google.cloud.sql.v1.ExportContext.SqlExportOptions.MysqlExportOptions)
          com.google.cloud.sql.v1.ExportContext.SqlExportOptions.MysqlExportOptionsOrBuilder {
        public static final com.google.protobuf.Descriptors.Descriptor
            getDescriptor() {
          return com.google.cloud.sql.v1.CloudSqlResourcesProto.internal_static_google_cloud_sql_v1_ExportContext_SqlExportOptions_MysqlExportOptions_descriptor;
        }

        @java.lang.Override
        protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
            internalGetFieldAccessorTable() {
          return com.google.cloud.sql.v1.CloudSqlResourcesProto.internal_static_google_cloud_sql_v1_ExportContext_SqlExportOptions_MysqlExportOptions_fieldAccessorTable
              .ensureFieldAccessorsInitialized(
                  com.google.cloud.sql.v1.ExportContext.SqlExportOptions.MysqlExportOptions.class, com.google.cloud.sql.v1.ExportContext.SqlExportOptions.MysqlExportOptions.Builder.class);
        }

        // Construct using com.google.cloud.sql.v1.ExportContext.SqlExportOptions.MysqlExportOptions.newBuilder()
        private Builder() {
          maybeForceBuilderInitialization();
        }

        private Builder(
            com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
          super(parent);
          maybeForceBuilderInitialization();
        }
        private void maybeForceBuilderInitialization() {
          if (com.google.protobuf.GeneratedMessageV3
                  .alwaysUseFieldBuilders) {
          }
        }
        @java.lang.Override
        public Builder clear() {
          super.clear();
          if (masterDataBuilder_ == null) {
            masterData_ = null;
          } else {
            masterData_ = null;
            masterDataBuilder_ = null;
          }
          return this;
        }

        @java.lang.Override
        public com.google.protobuf.Descriptors.Descriptor
            getDescriptorForType() {
          return com.google.cloud.sql.v1.CloudSqlResourcesProto.internal_static_google_cloud_sql_v1_ExportContext_SqlExportOptions_MysqlExportOptions_descriptor;
        }

        @java.lang.Override
        public com.google.cloud.sql.v1.ExportContext.SqlExportOptions.MysqlExportOptions getDefaultInstanceForType() {
          return com.google.cloud.sql.v1.ExportContext.SqlExportOptions.MysqlExportOptions.getDefaultInstance();
        }

        @java.lang.Override
        public com.google.cloud.sql.v1.ExportContext.SqlExportOptions.MysqlExportOptions build() {
          com.google.cloud.sql.v1.ExportContext.SqlExportOptions.MysqlExportOptions result = buildPartial();
          if (!result.isInitialized()) {
            throw newUninitializedMessageException(result);
          }
          return result;
        }

        @java.lang.Override
        public com.google.cloud.sql.v1.ExportContext.SqlExportOptions.MysqlExportOptions buildPartial() {
          com.google.cloud.sql.v1.ExportContext.SqlExportOptions.MysqlExportOptions result = new com.google.cloud.sql.v1.ExportContext.SqlExportOptions.MysqlExportOptions(this);
          if (masterDataBuilder_ == null) {
            result.masterData_ = masterData_;
          } else {
            result.masterData_ = masterDataBuilder_.build();
          }
          onBuilt();
          return result;
        }

        @java.lang.Override
        public Builder clone() {
          return super.clone();
        }
        @java.lang.Override
        public Builder setField(
            com.google.protobuf.Descriptors.FieldDescriptor field,
            java.lang.Object value) {
          return super.setField(field, value);
        }
        @java.lang.Override
        public Builder clearField(
            com.google.protobuf.Descriptors.FieldDescriptor field) {
          return super.clearField(field);
        }
        @java.lang.Override
        public Builder clearOneof(
            com.google.protobuf.Descriptors.OneofDescriptor oneof) {
          return super.clearOneof(oneof);
        }
        @java.lang.Override
        public Builder setRepeatedField(
            com.google.protobuf.Descriptors.FieldDescriptor field,
            int index, java.lang.Object value) {
          return super.setRepeatedField(field, index, value);
        }
        @java.lang.Override
        public Builder addRepeatedField(
            com.google.protobuf.Descriptors.FieldDescriptor field,
            java.lang.Object value) {
          return super.addRepeatedField(field, value);
        }
        @java.lang.Override
        public Builder mergeFrom(com.google.protobuf.Message other) {
          if (other instanceof com.google.cloud.sql.v1.ExportContext.SqlExportOptions.MysqlExportOptions) {
            return mergeFrom((com.google.cloud.sql.v1.ExportContext.SqlExportOptions.MysqlExportOptions)other);
          } else {
            super.mergeFrom(other);
            return this;
          }
        }

        public Builder mergeFrom(com.google.cloud.sql.v1.ExportContext.SqlExportOptions.MysqlExportOptions other) {
          if (other == com.google.cloud.sql.v1.ExportContext.SqlExportOptions.MysqlExportOptions.getDefaultInstance()) return this;
          if (other.hasMasterData()) {
            mergeMasterData(other.getMasterData());
          }
          this.mergeUnknownFields(other.unknownFields);
          onChanged();
          return this;
        }

        @java.lang.Override
        public final boolean isInitialized() {
          return true;
        }

        @java.lang.Override
        public Builder mergeFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
          com.google.cloud.sql.v1.ExportContext.SqlExportOptions.MysqlExportOptions parsedMessage = null;
          try {
            parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            parsedMessage = (com.google.cloud.sql.v1.ExportContext.SqlExportOptions.MysqlExportOptions) e.getUnfinishedMessage();
            throw e.unwrapIOException();
          } finally {
            if (parsedMessage != null) {
              mergeFrom(parsedMessage);
            }
          }
          return this;
        }

        private com.google.protobuf.Int32Value masterData_;
        private com.google.protobuf.SingleFieldBuilderV3<
            com.google.protobuf.Int32Value, com.google.protobuf.Int32Value.Builder, com.google.protobuf.Int32ValueOrBuilder> masterDataBuilder_;
        /**
         * <pre>
         * Option to include SQL statement required to set up replication.
         * *  If set to **1**, the dump file includes
         *  a CHANGE MASTER TO statement with the binary log coordinates,
         *  and --set-gtid-purged is set to ON.
         * *  If set to **2**, the CHANGE MASTER TO statement is written as
         *  a SQL comment and has no effect.
         * *  If set to any value other than **1**, --set-gtid-purged is set
         * to OFF.
         * </pre>
         *
         * <code>.google.protobuf.Int32Value master_data = 1;</code>
         * @return Whether the masterData field is set.
         */
        public boolean hasMasterData() {
          return masterDataBuilder_ != null || masterData_ != null;
        }
        /**
         * <pre>
         * Option to include SQL statement required to set up replication.
         * *  If set to **1**, the dump file includes
         *  a CHANGE MASTER TO statement with the binary log coordinates,
         *  and --set-gtid-purged is set to ON.
         * *  If set to **2**, the CHANGE MASTER TO statement is written as
         *  a SQL comment and has no effect.
         * *  If set to any value other than **1**, --set-gtid-purged is set
         * to OFF.
         * </pre>
         *
         * <code>.google.protobuf.Int32Value master_data = 1;</code>
         * @return The masterData.
         */
        public com.google.protobuf.Int32Value getMasterData() {
          if (masterDataBuilder_ == null) {
            return masterData_ == null ? com.google.protobuf.Int32Value.getDefaultInstance() : masterData_;
          } else {
            return masterDataBuilder_.getMessage();
          }
        }
        /**
         * <pre>
         * Option to include SQL statement required to set up replication.
         * *  If set to **1**, the dump file includes
         *  a CHANGE MASTER TO statement with the binary log coordinates,
         *  and --set-gtid-purged is set to ON.
         * *  If set to **2**, the CHANGE MASTER TO statement is written as
         *  a SQL comment and has no effect.
         * *  If set to any value other than **1**, --set-gtid-purged is set
         * to OFF.
         * </pre>
         *
         * <code>.google.protobuf.Int32Value master_data = 1;</code>
         */
        public Builder setMasterData(com.google.protobuf.Int32Value value) {
          if (masterDataBuilder_ == null) {
            if (value == null) {
              throw new NullPointerException();
            }
            masterData_ = value;
            onChanged();
          } else {
            masterDataBuilder_.setMessage(value);
          }

          return this;
        }
        /**
         * <pre>
         * Option to include SQL statement required to set up replication.
         * *  If set to **1**, the dump file includes
         *  a CHANGE MASTER TO statement with the binary log coordinates,
         *  and --set-gtid-purged is set to ON.
         * *  If set to **2**, the CHANGE MASTER TO statement is written as
         *  a SQL comment and has no effect.
         * *  If set to any value other than **1**, --set-gtid-purged is set
         * to OFF.
         * </pre>
         *
         * <code>.google.protobuf.Int32Value master_data = 1;</code>
         */
        public Builder setMasterData(
            com.google.protobuf.Int32Value.Builder builderForValue) {
          if (masterDataBuilder_ == null) {
            masterData_ = builderForValue.build();
            onChanged();
          } else {
            masterDataBuilder_.setMessage(builderForValue.build());
          }

          return this;
        }
        /**
         * <pre>
         * Option to include SQL statement required to set up replication.
         * *  If set to **1**, the dump file includes
         *  a CHANGE MASTER TO statement with the binary log coordinates,
         *  and --set-gtid-purged is set to ON.
         * *  If set to **2**, the CHANGE MASTER TO statement is written as
         *  a SQL comment and has no effect.
         * *  If set to any value other than **1**, --set-gtid-purged is set
         * to OFF.
         * </pre>
         *
         * <code>.google.protobuf.Int32Value master_data = 1;</code>
         */
        public Builder mergeMasterData(com.google.protobuf.Int32Value value) {
          if (masterDataBuilder_ == null) {
            if (masterData_ != null) {
              masterData_ =
                com.google.protobuf.Int32Value.newBuilder(masterData_).mergeFrom(value).buildPartial();
            } else {
              masterData_ = value;
            }
            onChanged();
          } else {
            masterDataBuilder_.mergeFrom(value);
          }

          return this;
        }
        /**
         * <pre>
         * Option to include SQL statement required to set up replication.
         * *  If set to **1**, the dump file includes
         *  a CHANGE MASTER TO statement with the binary log coordinates,
         *  and --set-gtid-purged is set to ON.
         * *  If set to **2**, the CHANGE MASTER TO statement is written as
         *  a SQL comment and has no effect.
         * *  If set to any value other than **1**, --set-gtid-purged is set
         * to OFF.
         * </pre>
         *
         * <code>.google.protobuf.Int32Value master_data = 1;</code>
         */
        public Builder clearMasterData() {
          if (masterDataBuilder_ == null) {
            masterData_ = null;
            onChanged();
          } else {
            masterData_ = null;
            masterDataBuilder_ = null;
          }

          return this;
        }
        /**
         * <pre>
         * Option to include SQL statement required to set up replication.
         * *  If set to **1**, the dump file includes
         *  a CHANGE MASTER TO statement with the binary log coordinates,
         *  and --set-gtid-purged is set to ON.
         * *  If set to **2**, the CHANGE MASTER TO statement is written as
         *  a SQL comment and has no effect.
         * *  If set to any value other than **1**, --set-gtid-purged is set
         * to OFF.
         * </pre>
         *
         * <code>.google.protobuf.Int32Value master_data = 1;</code>
         */
        public com.google.protobuf.Int32Value.Builder getMasterDataBuilder() {
          
          onChanged();
          return getMasterDataFieldBuilder().getBuilder();
        }
        /**
         * <pre>
         * Option to include SQL statement required to set up replication.
         * *  If set to **1**, the dump file includes
         *  a CHANGE MASTER TO statement with the binary log coordinates,
         *  and --set-gtid-purged is set to ON.
         * *  If set to **2**, the CHANGE MASTER TO statement is written as
         *  a SQL comment and has no effect.
         * *  If set to any value other than **1**, --set-gtid-purged is set
         * to OFF.
         * </pre>
         *
         * <code>.google.protobuf.Int32Value master_data = 1;</code>
         */
        public com.google.protobuf.Int32ValueOrBuilder getMasterDataOrBuilder() {
          if (masterDataBuilder_ != null) {
            return masterDataBuilder_.getMessageOrBuilder();
          } else {
            return masterData_ == null ?
                com.google.protobuf.Int32Value.getDefaultInstance() : masterData_;
          }
        }
        /**
         * <pre>
         * Option to include SQL statement required to set up replication.
         * *  If set to **1**, the dump file includes
         *  a CHANGE MASTER TO statement with the binary log coordinates,
         *  and --set-gtid-purged is set to ON.
         * *  If set to **2**, the CHANGE MASTER TO statement is written as
         *  a SQL comment and has no effect.
         * *  If set to any value other than **1**, --set-gtid-purged is set
         * to OFF.
         * </pre>
         *
         * <code>.google.protobuf.Int32Value master_data = 1;</code>
         */
        private com.google.protobuf.SingleFieldBuilderV3<
            com.google.protobuf.Int32Value, com.google.protobuf.Int32Value.Builder, com.google.protobuf.Int32ValueOrBuilder> 
            getMasterDataFieldBuilder() {
          if (masterDataBuilder_ == null) {
            masterDataBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
                com.google.protobuf.Int32Value, com.google.protobuf.Int32Value.Builder, com.google.protobuf.Int32ValueOrBuilder>(
                    getMasterData(),
                    getParentForChildren(),
                    isClean());
            masterData_ = null;
          }
          return masterDataBuilder_;
        }
        @java.lang.Override
        public final Builder setUnknownFields(
            final com.google.protobuf.UnknownFieldSet unknownFields) {
          return super.setUnknownFields(unknownFields);
        }

        @java.lang.Override
        public final Builder mergeUnknownFields(
            final com.google.protobuf.UnknownFieldSet unknownFields) {
          return super.mergeUnknownFields(unknownFields);
        }


        // @@protoc_insertion_point(builder_scope:google.cloud.sql.v1.ExportContext.SqlExportOptions.MysqlExportOptions)
      }

      // @@protoc_insertion_point(class_scope:google.cloud.sql.v1.ExportContext.SqlExportOptions.MysqlExportOptions)
      private static final com.google.cloud.sql.v1.ExportContext.SqlExportOptions.MysqlExportOptions DEFAULT_INSTANCE;
      static {
        DEFAULT_INSTANCE = new com.google.cloud.sql.v1.ExportContext.SqlExportOptions.MysqlExportOptions();
      }

      public static com.google.cloud.sql.v1.ExportContext.SqlExportOptions.MysqlExportOptions getDefaultInstance() {
        return DEFAULT_INSTANCE;
      }

      private static final com.google.protobuf.Parser<MysqlExportOptions>
          PARSER = new com.google.protobuf.AbstractParser<MysqlExportOptions>() {
        @java.lang.Override
        public MysqlExportOptions parsePartialFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
          return new MysqlExportOptions(input, extensionRegistry);
        }
      };

      public static com.google.protobuf.Parser<MysqlExportOptions> parser() {
        return PARSER;
      }

      @java.lang.Override
      public com.google.protobuf.Parser<MysqlExportOptions> getParserForType() {
        return PARSER;
      }

      @java.lang.Override
      public com.google.cloud.sql.v1.ExportContext.SqlExportOptions.MysqlExportOptions getDefaultInstanceForType() {
        return DEFAULT_INSTANCE;
      }

    }

    public static final int TABLES_FIELD_NUMBER = 1;
    private com.google.protobuf.LazyStringList tables_;
    /**
     * <pre>
     * Tables to export, or that were exported, from the specified database. If
     * you specify tables, specify one and only one database. For PostgreSQL
     * instances, you can specify only one table.
     * </pre>
     *
     * <code>repeated string tables = 1;</code>
     * @return A list containing the tables.
     */
    public com.google.protobuf.ProtocolStringList
        getTablesList() {
      return tables_;
    }
    /**
     * <pre>
     * Tables to export, or that were exported, from the specified database. If
     * you specify tables, specify one and only one database. For PostgreSQL
     * instances, you can specify only one table.
     * </pre>
     *
     * <code>repeated string tables = 1;</code>
     * @return The count of tables.
     */
    public int getTablesCount() {
      return tables_.size();
    }
    /**
     * <pre>
     * Tables to export, or that were exported, from the specified database. If
     * you specify tables, specify one and only one database. For PostgreSQL
     * instances, you can specify only one table.
     * </pre>
     *
     * <code>repeated string tables = 1;</code>
     * @param index The index of the element to return.
     * @return The tables at the given index.
     */
    public java.lang.String getTables(int index) {
      return tables_.get(index);
    }
    /**
     * <pre>
     * Tables to export, or that were exported, from the specified database. If
     * you specify tables, specify one and only one database. For PostgreSQL
     * instances, you can specify only one table.
     * </pre>
     *
     * <code>repeated string tables = 1;</code>
     * @param index The index of the value to return.
     * @return The bytes of the tables at the given index.
     */
    public com.google.protobuf.ByteString
        getTablesBytes(int index) {
      return tables_.getByteString(index);
    }

    public static final int SCHEMA_ONLY_FIELD_NUMBER = 2;
    private com.google.protobuf.BoolValue schemaOnly_;
    /**
     * <pre>
     * Export only schemas.
     * </pre>
     *
     * <code>.google.protobuf.BoolValue schema_only = 2;</code>
     * @return Whether the schemaOnly field is set.
     */
    @java.lang.Override
    public boolean hasSchemaOnly() {
      return schemaOnly_ != null;
    }
    /**
     * <pre>
     * Export only schemas.
     * </pre>
     *
     * <code>.google.protobuf.BoolValue schema_only = 2;</code>
     * @return The schemaOnly.
     */
    @java.lang.Override
    public com.google.protobuf.BoolValue getSchemaOnly() {
      return schemaOnly_ == null ? com.google.protobuf.BoolValue.getDefaultInstance() : schemaOnly_;
    }
    /**
     * <pre>
     * Export only schemas.
     * </pre>
     *
     * <code>.google.protobuf.BoolValue schema_only = 2;</code>
     */
    @java.lang.Override
    public com.google.protobuf.BoolValueOrBuilder getSchemaOnlyOrBuilder() {
      return getSchemaOnly();
    }

    public static final int MYSQL_EXPORT_OPTIONS_FIELD_NUMBER = 3;
    private com.google.cloud.sql.v1.ExportContext.SqlExportOptions.MysqlExportOptions mysqlExportOptions_;
    /**
     * <code>.google.cloud.sql.v1.ExportContext.SqlExportOptions.MysqlExportOptions mysql_export_options = 3;</code>
     * @return Whether the mysqlExportOptions field is set.
     */
    @java.lang.Override
    public boolean hasMysqlExportOptions() {
      return mysqlExportOptions_ != null;
    }
    /**
     * <code>.google.cloud.sql.v1.ExportContext.SqlExportOptions.MysqlExportOptions mysql_export_options = 3;</code>
     * @return The mysqlExportOptions.
     */
    @java.lang.Override
    public com.google.cloud.sql.v1.ExportContext.SqlExportOptions.MysqlExportOptions getMysqlExportOptions() {
      return mysqlExportOptions_ == null ? com.google.cloud.sql.v1.ExportContext.SqlExportOptions.MysqlExportOptions.getDefaultInstance() : mysqlExportOptions_;
    }
    /**
     * <code>.google.cloud.sql.v1.ExportContext.SqlExportOptions.MysqlExportOptions mysql_export_options = 3;</code>
     */
    @java.lang.Override
    public com.google.cloud.sql.v1.ExportContext.SqlExportOptions.MysqlExportOptionsOrBuilder getMysqlExportOptionsOrBuilder() {
      return getMysqlExportOptions();
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      for (int i = 0; i < tables_.size(); i++) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 1, tables_.getRaw(i));
      }
      if (schemaOnly_ != null) {
        output.writeMessage(2, getSchemaOnly());
      }
      if (mysqlExportOptions_ != null) {
        output.writeMessage(3, getMysqlExportOptions());
      }
      unknownFields.writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      {
        int dataSize = 0;
        for (int i = 0; i < tables_.size(); i++) {
          dataSize += computeStringSizeNoTag(tables_.getRaw(i));
        }
        size += dataSize;
        size += 1 * getTablesList().size();
      }
      if (schemaOnly_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(2, getSchemaOnly());
      }
      if (mysqlExportOptions_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(3, getMysqlExportOptions());
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof com.google.cloud.sql.v1.ExportContext.SqlExportOptions)) {
        return super.equals(obj);
      }
      com.google.cloud.sql.v1.ExportContext.SqlExportOptions other = (com.google.cloud.sql.v1.ExportContext.SqlExportOptions) obj;

      if (!getTablesList()
          .equals(other.getTablesList())) return false;
      if (hasSchemaOnly() != other.hasSchemaOnly()) return false;
      if (hasSchemaOnly()) {
        if (!getSchemaOnly()
            .equals(other.getSchemaOnly())) return false;
      }
      if (hasMysqlExportOptions() != other.hasMysqlExportOptions()) return false;
      if (hasMysqlExportOptions()) {
        if (!getMysqlExportOptions()
            .equals(other.getMysqlExportOptions())) return false;
      }
      if (!unknownFields.equals(other.unknownFields)) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      if (getTablesCount() > 0) {
        hash = (37 * hash) + TABLES_FIELD_NUMBER;
        hash = (53 * hash) + getTablesList().hashCode();
      }
      if (hasSchemaOnly()) {
        hash = (37 * hash) + SCHEMA_ONLY_FIELD_NUMBER;
        hash = (53 * hash) + getSchemaOnly().hashCode();
      }
      if (hasMysqlExportOptions()) {
        hash = (37 * hash) + MYSQL_EXPORT_OPTIONS_FIELD_NUMBER;
        hash = (53 * hash) + getMysqlExportOptions().hashCode();
      }
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static com.google.cloud.sql.v1.ExportContext.SqlExportOptions parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.google.cloud.sql.v1.ExportContext.SqlExportOptions parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.google.cloud.sql.v1.ExportContext.SqlExportOptions parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.google.cloud.sql.v1.ExportContext.SqlExportOptions parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.google.cloud.sql.v1.ExportContext.SqlExportOptions parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.google.cloud.sql.v1.ExportContext.SqlExportOptions parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.google.cloud.sql.v1.ExportContext.SqlExportOptions parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static com.google.cloud.sql.v1.ExportContext.SqlExportOptions parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static com.google.cloud.sql.v1.ExportContext.SqlExportOptions parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static com.google.cloud.sql.v1.ExportContext.SqlExportOptions parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static com.google.cloud.sql.v1.ExportContext.SqlExportOptions parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static com.google.cloud.sql.v1.ExportContext.SqlExportOptions parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(com.google.cloud.sql.v1.ExportContext.SqlExportOptions prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code google.cloud.sql.v1.ExportContext.SqlExportOptions}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:google.cloud.sql.v1.ExportContext.SqlExportOptions)
        com.google.cloud.sql.v1.ExportContext.SqlExportOptionsOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return com.google.cloud.sql.v1.CloudSqlResourcesProto.internal_static_google_cloud_sql_v1_ExportContext_SqlExportOptions_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return com.google.cloud.sql.v1.CloudSqlResourcesProto.internal_static_google_cloud_sql_v1_ExportContext_SqlExportOptions_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                com.google.cloud.sql.v1.ExportContext.SqlExportOptions.class, com.google.cloud.sql.v1.ExportContext.SqlExportOptions.Builder.class);
      }

      // Construct using com.google.cloud.sql.v1.ExportContext.SqlExportOptions.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        tables_ = com.google.protobuf.LazyStringArrayList.EMPTY;
        bitField0_ = (bitField0_ & ~0x00000001);
        if (schemaOnlyBuilder_ == null) {
          schemaOnly_ = null;
        } else {
          schemaOnly_ = null;
          schemaOnlyBuilder_ = null;
        }
        if (mysqlExportOptionsBuilder_ == null) {
          mysqlExportOptions_ = null;
        } else {
          mysqlExportOptions_ = null;
          mysqlExportOptionsBuilder_ = null;
        }
        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.google.cloud.sql.v1.CloudSqlResourcesProto.internal_static_google_cloud_sql_v1_ExportContext_SqlExportOptions_descriptor;
      }

      @java.lang.Override
      public com.google.cloud.sql.v1.ExportContext.SqlExportOptions getDefaultInstanceForType() {
        return com.google.cloud.sql.v1.ExportContext.SqlExportOptions.getDefaultInstance();
      }

      @java.lang.Override
      public com.google.cloud.sql.v1.ExportContext.SqlExportOptions build() {
        com.google.cloud.sql.v1.ExportContext.SqlExportOptions result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public com.google.cloud.sql.v1.ExportContext.SqlExportOptions buildPartial() {
        com.google.cloud.sql.v1.ExportContext.SqlExportOptions result = new com.google.cloud.sql.v1.ExportContext.SqlExportOptions(this);
        int from_bitField0_ = bitField0_;
        if (((bitField0_ & 0x00000001) != 0)) {
          tables_ = tables_.getUnmodifiableView();
          bitField0_ = (bitField0_ & ~0x00000001);
        }
        result.tables_ = tables_;
        if (schemaOnlyBuilder_ == null) {
          result.schemaOnly_ = schemaOnly_;
        } else {
          result.schemaOnly_ = schemaOnlyBuilder_.build();
        }
        if (mysqlExportOptionsBuilder_ == null) {
          result.mysqlExportOptions_ = mysqlExportOptions_;
        } else {
          result.mysqlExportOptions_ = mysqlExportOptionsBuilder_.build();
        }
        onBuilt();
        return result;
      }

      @java.lang.Override
      public Builder clone() {
        return super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.google.cloud.sql.v1.ExportContext.SqlExportOptions) {
          return mergeFrom((com.google.cloud.sql.v1.ExportContext.SqlExportOptions)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(com.google.cloud.sql.v1.ExportContext.SqlExportOptions other) {
        if (other == com.google.cloud.sql.v1.ExportContext.SqlExportOptions.getDefaultInstance()) return this;
        if (!other.tables_.isEmpty()) {
          if (tables_.isEmpty()) {
            tables_ = other.tables_;
            bitField0_ = (bitField0_ & ~0x00000001);
          } else {
            ensureTablesIsMutable();
            tables_.addAll(other.tables_);
          }
          onChanged();
        }
        if (other.hasSchemaOnly()) {
          mergeSchemaOnly(other.getSchemaOnly());
        }
        if (other.hasMysqlExportOptions()) {
          mergeMysqlExportOptions(other.getMysqlExportOptions());
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.google.cloud.sql.v1.ExportContext.SqlExportOptions parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (com.google.cloud.sql.v1.ExportContext.SqlExportOptions) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private com.google.protobuf.LazyStringList tables_ = com.google.protobuf.LazyStringArrayList.EMPTY;
      private void ensureTablesIsMutable() {
        if (!((bitField0_ & 0x00000001) != 0)) {
          tables_ = new com.google.protobuf.LazyStringArrayList(tables_);
          bitField0_ |= 0x00000001;
         }
      }
      /**
       * <pre>
       * Tables to export, or that were exported, from the specified database. If
       * you specify tables, specify one and only one database. For PostgreSQL
       * instances, you can specify only one table.
       * </pre>
       *
       * <code>repeated string tables = 1;</code>
       * @return A list containing the tables.
       */
      public com.google.protobuf.ProtocolStringList
          getTablesList() {
        return tables_.getUnmodifiableView();
      }
      /**
       * <pre>
       * Tables to export, or that were exported, from the specified database. If
       * you specify tables, specify one and only one database. For PostgreSQL
       * instances, you can specify only one table.
       * </pre>
       *
       * <code>repeated string tables = 1;</code>
       * @return The count of tables.
       */
      public int getTablesCount() {
        return tables_.size();
      }
      /**
       * <pre>
       * Tables to export, or that were exported, from the specified database. If
       * you specify tables, specify one and only one database. For PostgreSQL
       * instances, you can specify only one table.
       * </pre>
       *
       * <code>repeated string tables = 1;</code>
       * @param index The index of the element to return.
       * @return The tables at the given index.
       */
      public java.lang.String getTables(int index) {
        return tables_.get(index);
      }
      /**
       * <pre>
       * Tables to export, or that were exported, from the specified database. If
       * you specify tables, specify one and only one database. For PostgreSQL
       * instances, you can specify only one table.
       * </pre>
       *
       * <code>repeated string tables = 1;</code>
       * @param index The index of the value to return.
       * @return The bytes of the tables at the given index.
       */
      public com.google.protobuf.ByteString
          getTablesBytes(int index) {
        return tables_.getByteString(index);
      }
      /**
       * <pre>
       * Tables to export, or that were exported, from the specified database. If
       * you specify tables, specify one and only one database. For PostgreSQL
       * instances, you can specify only one table.
       * </pre>
       *
       * <code>repeated string tables = 1;</code>
       * @param index The index to set the value at.
       * @param value The tables to set.
       * @return This builder for chaining.
       */
      public Builder setTables(
          int index, java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  ensureTablesIsMutable();
        tables_.set(index, value);
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Tables to export, or that were exported, from the specified database. If
       * you specify tables, specify one and only one database. For PostgreSQL
       * instances, you can specify only one table.
       * </pre>
       *
       * <code>repeated string tables = 1;</code>
       * @param value The tables to add.
       * @return This builder for chaining.
       */
      public Builder addTables(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  ensureTablesIsMutable();
        tables_.add(value);
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Tables to export, or that were exported, from the specified database. If
       * you specify tables, specify one and only one database. For PostgreSQL
       * instances, you can specify only one table.
       * </pre>
       *
       * <code>repeated string tables = 1;</code>
       * @param values The tables to add.
       * @return This builder for chaining.
       */
      public Builder addAllTables(
          java.lang.Iterable<java.lang.String> values) {
        ensureTablesIsMutable();
        com.google.protobuf.AbstractMessageLite.Builder.addAll(
            values, tables_);
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Tables to export, or that were exported, from the specified database. If
       * you specify tables, specify one and only one database. For PostgreSQL
       * instances, you can specify only one table.
       * </pre>
       *
       * <code>repeated string tables = 1;</code>
       * @return This builder for chaining.
       */
      public Builder clearTables() {
        tables_ = com.google.protobuf.LazyStringArrayList.EMPTY;
        bitField0_ = (bitField0_ & ~0x00000001);
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Tables to export, or that were exported, from the specified database. If
       * you specify tables, specify one and only one database. For PostgreSQL
       * instances, you can specify only one table.
       * </pre>
       *
       * <code>repeated string tables = 1;</code>
       * @param value The bytes of the tables to add.
       * @return This builder for chaining.
       */
      public Builder addTablesBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        ensureTablesIsMutable();
        tables_.add(value);
        onChanged();
        return this;
      }

      private com.google.protobuf.BoolValue schemaOnly_;
      private com.google.protobuf.SingleFieldBuilderV3<
          com.google.protobuf.BoolValue, com.google.protobuf.BoolValue.Builder, com.google.protobuf.BoolValueOrBuilder> schemaOnlyBuilder_;
      /**
       * <pre>
       * Export only schemas.
       * </pre>
       *
       * <code>.google.protobuf.BoolValue schema_only = 2;</code>
       * @return Whether the schemaOnly field is set.
       */
      public boolean hasSchemaOnly() {
        return schemaOnlyBuilder_ != null || schemaOnly_ != null;
      }
      /**
       * <pre>
       * Export only schemas.
       * </pre>
       *
       * <code>.google.protobuf.BoolValue schema_only = 2;</code>
       * @return The schemaOnly.
       */
      public com.google.protobuf.BoolValue getSchemaOnly() {
        if (schemaOnlyBuilder_ == null) {
          return schemaOnly_ == null ? com.google.protobuf.BoolValue.getDefaultInstance() : schemaOnly_;
        } else {
          return schemaOnlyBuilder_.getMessage();
        }
      }
      /**
       * <pre>
       * Export only schemas.
       * </pre>
       *
       * <code>.google.protobuf.BoolValue schema_only = 2;</code>
       */
      public Builder setSchemaOnly(com.google.protobuf.BoolValue value) {
        if (schemaOnlyBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          schemaOnly_ = value;
          onChanged();
        } else {
          schemaOnlyBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <pre>
       * Export only schemas.
       * </pre>
       *
       * <code>.google.protobuf.BoolValue schema_only = 2;</code>
       */
      public Builder setSchemaOnly(
          com.google.protobuf.BoolValue.Builder builderForValue) {
        if (schemaOnlyBuilder_ == null) {
          schemaOnly_ = builderForValue.build();
          onChanged();
        } else {
          schemaOnlyBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <pre>
       * Export only schemas.
       * </pre>
       *
       * <code>.google.protobuf.BoolValue schema_only = 2;</code>
       */
      public Builder mergeSchemaOnly(com.google.protobuf.BoolValue value) {
        if (schemaOnlyBuilder_ == null) {
          if (schemaOnly_ != null) {
            schemaOnly_ =
              com.google.protobuf.BoolValue.newBuilder(schemaOnly_).mergeFrom(value).buildPartial();
          } else {
            schemaOnly_ = value;
          }
          onChanged();
        } else {
          schemaOnlyBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <pre>
       * Export only schemas.
       * </pre>
       *
       * <code>.google.protobuf.BoolValue schema_only = 2;</code>
       */
      public Builder clearSchemaOnly() {
        if (schemaOnlyBuilder_ == null) {
          schemaOnly_ = null;
          onChanged();
        } else {
          schemaOnly_ = null;
          schemaOnlyBuilder_ = null;
        }

        return this;
      }
      /**
       * <pre>
       * Export only schemas.
       * </pre>
       *
       * <code>.google.protobuf.BoolValue schema_only = 2;</code>
       */
      public com.google.protobuf.BoolValue.Builder getSchemaOnlyBuilder() {
        
        onChanged();
        return getSchemaOnlyFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       * Export only schemas.
       * </pre>
       *
       * <code>.google.protobuf.BoolValue schema_only = 2;</code>
       */
      public com.google.protobuf.BoolValueOrBuilder getSchemaOnlyOrBuilder() {
        if (schemaOnlyBuilder_ != null) {
          return schemaOnlyBuilder_.getMessageOrBuilder();
        } else {
          return schemaOnly_ == null ?
              com.google.protobuf.BoolValue.getDefaultInstance() : schemaOnly_;
        }
      }
      /**
       * <pre>
       * Export only schemas.
       * </pre>
       *
       * <code>.google.protobuf.BoolValue schema_only = 2;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          com.google.protobuf.BoolValue, com.google.protobuf.BoolValue.Builder, com.google.protobuf.BoolValueOrBuilder> 
          getSchemaOnlyFieldBuilder() {
        if (schemaOnlyBuilder_ == null) {
          schemaOnlyBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              com.google.protobuf.BoolValue, com.google.protobuf.BoolValue.Builder, com.google.protobuf.BoolValueOrBuilder>(
                  getSchemaOnly(),
                  getParentForChildren(),
                  isClean());
          schemaOnly_ = null;
        }
        return schemaOnlyBuilder_;
      }

      private com.google.cloud.sql.v1.ExportContext.SqlExportOptions.MysqlExportOptions mysqlExportOptions_;
      private com.google.protobuf.SingleFieldBuilderV3<
          com.google.cloud.sql.v1.ExportContext.SqlExportOptions.MysqlExportOptions, com.google.cloud.sql.v1.ExportContext.SqlExportOptions.MysqlExportOptions.Builder, com.google.cloud.sql.v1.ExportContext.SqlExportOptions.MysqlExportOptionsOrBuilder> mysqlExportOptionsBuilder_;
      /**
       * <code>.google.cloud.sql.v1.ExportContext.SqlExportOptions.MysqlExportOptions mysql_export_options = 3;</code>
       * @return Whether the mysqlExportOptions field is set.
       */
      public boolean hasMysqlExportOptions() {
        return mysqlExportOptionsBuilder_ != null || mysqlExportOptions_ != null;
      }
      /**
       * <code>.google.cloud.sql.v1.ExportContext.SqlExportOptions.MysqlExportOptions mysql_export_options = 3;</code>
       * @return The mysqlExportOptions.
       */
      public com.google.cloud.sql.v1.ExportContext.SqlExportOptions.MysqlExportOptions getMysqlExportOptions() {
        if (mysqlExportOptionsBuilder_ == null) {
          return mysqlExportOptions_ == null ? com.google.cloud.sql.v1.ExportContext.SqlExportOptions.MysqlExportOptions.getDefaultInstance() : mysqlExportOptions_;
        } else {
          return mysqlExportOptionsBuilder_.getMessage();
        }
      }
      /**
       * <code>.google.cloud.sql.v1.ExportContext.SqlExportOptions.MysqlExportOptions mysql_export_options = 3;</code>
       */
      public Builder setMysqlExportOptions(com.google.cloud.sql.v1.ExportContext.SqlExportOptions.MysqlExportOptions value) {
        if (mysqlExportOptionsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          mysqlExportOptions_ = value;
          onChanged();
        } else {
          mysqlExportOptionsBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <code>.google.cloud.sql.v1.ExportContext.SqlExportOptions.MysqlExportOptions mysql_export_options = 3;</code>
       */
      public Builder setMysqlExportOptions(
          com.google.cloud.sql.v1.ExportContext.SqlExportOptions.MysqlExportOptions.Builder builderForValue) {
        if (mysqlExportOptionsBuilder_ == null) {
          mysqlExportOptions_ = builderForValue.build();
          onChanged();
        } else {
          mysqlExportOptionsBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <code>.google.cloud.sql.v1.ExportContext.SqlExportOptions.MysqlExportOptions mysql_export_options = 3;</code>
       */
      public Builder mergeMysqlExportOptions(com.google.cloud.sql.v1.ExportContext.SqlExportOptions.MysqlExportOptions value) {
        if (mysqlExportOptionsBuilder_ == null) {
          if (mysqlExportOptions_ != null) {
            mysqlExportOptions_ =
              com.google.cloud.sql.v1.ExportContext.SqlExportOptions.MysqlExportOptions.newBuilder(mysqlExportOptions_).mergeFrom(value).buildPartial();
          } else {
            mysqlExportOptions_ = value;
          }
          onChanged();
        } else {
          mysqlExportOptionsBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <code>.google.cloud.sql.v1.ExportContext.SqlExportOptions.MysqlExportOptions mysql_export_options = 3;</code>
       */
      public Builder clearMysqlExportOptions() {
        if (mysqlExportOptionsBuilder_ == null) {
          mysqlExportOptions_ = null;
          onChanged();
        } else {
          mysqlExportOptions_ = null;
          mysqlExportOptionsBuilder_ = null;
        }

        return this;
      }
      /**
       * <code>.google.cloud.sql.v1.ExportContext.SqlExportOptions.MysqlExportOptions mysql_export_options = 3;</code>
       */
      public com.google.cloud.sql.v1.ExportContext.SqlExportOptions.MysqlExportOptions.Builder getMysqlExportOptionsBuilder() {
        
        onChanged();
        return getMysqlExportOptionsFieldBuilder().getBuilder();
      }
      /**
       * <code>.google.cloud.sql.v1.ExportContext.SqlExportOptions.MysqlExportOptions mysql_export_options = 3;</code>
       */
      public com.google.cloud.sql.v1.ExportContext.SqlExportOptions.MysqlExportOptionsOrBuilder getMysqlExportOptionsOrBuilder() {
        if (mysqlExportOptionsBuilder_ != null) {
          return mysqlExportOptionsBuilder_.getMessageOrBuilder();
        } else {
          return mysqlExportOptions_ == null ?
              com.google.cloud.sql.v1.ExportContext.SqlExportOptions.MysqlExportOptions.getDefaultInstance() : mysqlExportOptions_;
        }
      }
      /**
       * <code>.google.cloud.sql.v1.ExportContext.SqlExportOptions.MysqlExportOptions mysql_export_options = 3;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          com.google.cloud.sql.v1.ExportContext.SqlExportOptions.MysqlExportOptions, com.google.cloud.sql.v1.ExportContext.SqlExportOptions.MysqlExportOptions.Builder, com.google.cloud.sql.v1.ExportContext.SqlExportOptions.MysqlExportOptionsOrBuilder> 
          getMysqlExportOptionsFieldBuilder() {
        if (mysqlExportOptionsBuilder_ == null) {
          mysqlExportOptionsBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              com.google.cloud.sql.v1.ExportContext.SqlExportOptions.MysqlExportOptions, com.google.cloud.sql.v1.ExportContext.SqlExportOptions.MysqlExportOptions.Builder, com.google.cloud.sql.v1.ExportContext.SqlExportOptions.MysqlExportOptionsOrBuilder>(
                  getMysqlExportOptions(),
                  getParentForChildren(),
                  isClean());
          mysqlExportOptions_ = null;
        }
        return mysqlExportOptionsBuilder_;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:google.cloud.sql.v1.ExportContext.SqlExportOptions)
    }

    // @@protoc_insertion_point(class_scope:google.cloud.sql.v1.ExportContext.SqlExportOptions)
    private static final com.google.cloud.sql.v1.ExportContext.SqlExportOptions DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new com.google.cloud.sql.v1.ExportContext.SqlExportOptions();
    }

    public static com.google.cloud.sql.v1.ExportContext.SqlExportOptions getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<SqlExportOptions>
        PARSER = new com.google.protobuf.AbstractParser<SqlExportOptions>() {
      @java.lang.Override
      public SqlExportOptions parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new SqlExportOptions(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<SqlExportOptions> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<SqlExportOptions> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.cloud.sql.v1.ExportContext.SqlExportOptions getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public static final int URI_FIELD_NUMBER = 1;
  private volatile java.lang.Object uri_;
  /**
   * <pre>
   * The path to the file in Google Cloud Storage where the export will be
   * stored. The URI is in the form **gs://bucketName/fileName**. If the file
   * already exists, the request succeeds, but the operation fails. If
   * **fileType** is **SQL** and the filename ends with .gz,
   * the contents are compressed.
   * </pre>
   *
   * <code>string uri = 1;</code>
   * @return The uri.
   */
  @java.lang.Override
  public java.lang.String getUri() {
    java.lang.Object ref = uri_;
    if (ref instanceof java.lang.String) {
      return (java.lang.String) ref;
    } else {
      com.google.protobuf.ByteString bs = 
          (com.google.protobuf.ByteString) ref;
      java.lang.String s = bs.toStringUtf8();
      uri_ = s;
      return s;
    }
  }
  /**
   * <pre>
   * The path to the file in Google Cloud Storage where the export will be
   * stored. The URI is in the form **gs://bucketName/fileName**. If the file
   * already exists, the request succeeds, but the operation fails. If
   * **fileType** is **SQL** and the filename ends with .gz,
   * the contents are compressed.
   * </pre>
   *
   * <code>string uri = 1;</code>
   * @return The bytes for uri.
   */
  @java.lang.Override
  public com.google.protobuf.ByteString
      getUriBytes() {
    java.lang.Object ref = uri_;
    if (ref instanceof java.lang.String) {
      com.google.protobuf.ByteString b = 
          com.google.protobuf.ByteString.copyFromUtf8(
              (java.lang.String) ref);
      uri_ = b;
      return b;
    } else {
      return (com.google.protobuf.ByteString) ref;
    }
  }

  public static final int DATABASES_FIELD_NUMBER = 2;
  private com.google.protobuf.LazyStringList databases_;
  /**
   * <pre>
   * Databases to be exported.
   * *  **MySQL instances:** If **fileType** is **SQL** and no database is
   * specified, all databases are exported, except for the **mysql** system
   * database. If **fileType** is **CSV**, you can specify one database,
   * either by using this property or by using the
   * **csvExportOptions.selectQuery** property, which takes precedence
   * over this property.
   * *  **PostgreSQL instances:** You must specify one database to be exported.
   * If **fileType** is **CSV**, this database must match the one specified in
   * the **csvExportOptions.selectQuery** property.
   * *  **SQL Server instances:** You must specify one database to be exported,
   * and the **fileType** must be **BAK**.
   * </pre>
   *
   * <code>repeated string databases = 2;</code>
   * @return A list containing the databases.
   */
  public com.google.protobuf.ProtocolStringList
      getDatabasesList() {
    return databases_;
  }
  /**
   * <pre>
   * Databases to be exported.
   * *  **MySQL instances:** If **fileType** is **SQL** and no database is
   * specified, all databases are exported, except for the **mysql** system
   * database. If **fileType** is **CSV**, you can specify one database,
   * either by using this property or by using the
   * **csvExportOptions.selectQuery** property, which takes precedence
   * over this property.
   * *  **PostgreSQL instances:** You must specify one database to be exported.
   * If **fileType** is **CSV**, this database must match the one specified in
   * the **csvExportOptions.selectQuery** property.
   * *  **SQL Server instances:** You must specify one database to be exported,
   * and the **fileType** must be **BAK**.
   * </pre>
   *
   * <code>repeated string databases = 2;</code>
   * @return The count of databases.
   */
  public int getDatabasesCount() {
    return databases_.size();
  }
  /**
   * <pre>
   * Databases to be exported.
   * *  **MySQL instances:** If **fileType** is **SQL** and no database is
   * specified, all databases are exported, except for the **mysql** system
   * database. If **fileType** is **CSV**, you can specify one database,
   * either by using this property or by using the
   * **csvExportOptions.selectQuery** property, which takes precedence
   * over this property.
   * *  **PostgreSQL instances:** You must specify one database to be exported.
   * If **fileType** is **CSV**, this database must match the one specified in
   * the **csvExportOptions.selectQuery** property.
   * *  **SQL Server instances:** You must specify one database to be exported,
   * and the **fileType** must be **BAK**.
   * </pre>
   *
   * <code>repeated string databases = 2;</code>
   * @param index The index of the element to return.
   * @return The databases at the given index.
   */
  public java.lang.String getDatabases(int index) {
    return databases_.get(index);
  }
  /**
   * <pre>
   * Databases to be exported.
   * *  **MySQL instances:** If **fileType** is **SQL** and no database is
   * specified, all databases are exported, except for the **mysql** system
   * database. If **fileType** is **CSV**, you can specify one database,
   * either by using this property or by using the
   * **csvExportOptions.selectQuery** property, which takes precedence
   * over this property.
   * *  **PostgreSQL instances:** You must specify one database to be exported.
   * If **fileType** is **CSV**, this database must match the one specified in
   * the **csvExportOptions.selectQuery** property.
   * *  **SQL Server instances:** You must specify one database to be exported,
   * and the **fileType** must be **BAK**.
   * </pre>
   *
   * <code>repeated string databases = 2;</code>
   * @param index The index of the value to return.
   * @return The bytes of the databases at the given index.
   */
  public com.google.protobuf.ByteString
      getDatabasesBytes(int index) {
    return databases_.getByteString(index);
  }

  public static final int KIND_FIELD_NUMBER = 3;
  private volatile java.lang.Object kind_;
  /**
   * <pre>
   * This is always **sql#exportContext**.
   * </pre>
   *
   * <code>string kind = 3;</code>
   * @return The kind.
   */
  @java.lang.Override
  public java.lang.String getKind() {
    java.lang.Object ref = kind_;
    if (ref instanceof java.lang.String) {
      return (java.lang.String) ref;
    } else {
      com.google.protobuf.ByteString bs = 
          (com.google.protobuf.ByteString) ref;
      java.lang.String s = bs.toStringUtf8();
      kind_ = s;
      return s;
    }
  }
  /**
   * <pre>
   * This is always **sql#exportContext**.
   * </pre>
   *
   * <code>string kind = 3;</code>
   * @return The bytes for kind.
   */
  @java.lang.Override
  public com.google.protobuf.ByteString
      getKindBytes() {
    java.lang.Object ref = kind_;
    if (ref instanceof java.lang.String) {
      com.google.protobuf.ByteString b = 
          com.google.protobuf.ByteString.copyFromUtf8(
              (java.lang.String) ref);
      kind_ = b;
      return b;
    } else {
      return (com.google.protobuf.ByteString) ref;
    }
  }

  public static final int SQL_EXPORT_OPTIONS_FIELD_NUMBER = 4;
  private com.google.cloud.sql.v1.ExportContext.SqlExportOptions sqlExportOptions_;
  /**
   * <pre>
   * Options for exporting data as SQL statements.
   * </pre>
   *
   * <code>.google.cloud.sql.v1.ExportContext.SqlExportOptions sql_export_options = 4;</code>
   * @return Whether the sqlExportOptions field is set.
   */
  @java.lang.Override
  public boolean hasSqlExportOptions() {
    return sqlExportOptions_ != null;
  }
  /**
   * <pre>
   * Options for exporting data as SQL statements.
   * </pre>
   *
   * <code>.google.cloud.sql.v1.ExportContext.SqlExportOptions sql_export_options = 4;</code>
   * @return The sqlExportOptions.
   */
  @java.lang.Override
  public com.google.cloud.sql.v1.ExportContext.SqlExportOptions getSqlExportOptions() {
    return sqlExportOptions_ == null ? com.google.cloud.sql.v1.ExportContext.SqlExportOptions.getDefaultInstance() : sqlExportOptions_;
  }
  /**
   * <pre>
   * Options for exporting data as SQL statements.
   * </pre>
   *
   * <code>.google.cloud.sql.v1.ExportContext.SqlExportOptions sql_export_options = 4;</code>
   */
  @java.lang.Override
  public com.google.cloud.sql.v1.ExportContext.SqlExportOptionsOrBuilder getSqlExportOptionsOrBuilder() {
    return getSqlExportOptions();
  }

  public static final int CSV_EXPORT_OPTIONS_FIELD_NUMBER = 5;
  private com.google.cloud.sql.v1.ExportContext.SqlCsvExportOptions csvExportOptions_;
  /**
   * <pre>
   * Options for exporting data as CSV. **MySQL** and **PostgreSQL**
   * instances only.
   * </pre>
   *
   * <code>.google.cloud.sql.v1.ExportContext.SqlCsvExportOptions csv_export_options = 5;</code>
   * @return Whether the csvExportOptions field is set.
   */
  @java.lang.Override
  public boolean hasCsvExportOptions() {
    return csvExportOptions_ != null;
  }
  /**
   * <pre>
   * Options for exporting data as CSV. **MySQL** and **PostgreSQL**
   * instances only.
   * </pre>
   *
   * <code>.google.cloud.sql.v1.ExportContext.SqlCsvExportOptions csv_export_options = 5;</code>
   * @return The csvExportOptions.
   */
  @java.lang.Override
  public com.google.cloud.sql.v1.ExportContext.SqlCsvExportOptions getCsvExportOptions() {
    return csvExportOptions_ == null ? com.google.cloud.sql.v1.ExportContext.SqlCsvExportOptions.getDefaultInstance() : csvExportOptions_;
  }
  /**
   * <pre>
   * Options for exporting data as CSV. **MySQL** and **PostgreSQL**
   * instances only.
   * </pre>
   *
   * <code>.google.cloud.sql.v1.ExportContext.SqlCsvExportOptions csv_export_options = 5;</code>
   */
  @java.lang.Override
  public com.google.cloud.sql.v1.ExportContext.SqlCsvExportOptionsOrBuilder getCsvExportOptionsOrBuilder() {
    return getCsvExportOptions();
  }

  public static final int FILE_TYPE_FIELD_NUMBER = 6;
  private int fileType_;
  /**
   * <pre>
   * The file type for the specified uri.
   * *  **SQL**: The file contains SQL statements.
   * *  **CSV**: The file contains CSV data.
   * *  **BAK**: The file contains backup data for a SQL Server instance.
   * </pre>
   *
   * <code>.google.cloud.sql.v1.SqlFileType file_type = 6;</code>
   * @return The enum numeric value on the wire for fileType.
   */
  @java.lang.Override public int getFileTypeValue() {
    return fileType_;
  }
  /**
   * <pre>
   * The file type for the specified uri.
   * *  **SQL**: The file contains SQL statements.
   * *  **CSV**: The file contains CSV data.
   * *  **BAK**: The file contains backup data for a SQL Server instance.
   * </pre>
   *
   * <code>.google.cloud.sql.v1.SqlFileType file_type = 6;</code>
   * @return The fileType.
   */
  @java.lang.Override public com.google.cloud.sql.v1.SqlFileType getFileType() {
    @SuppressWarnings("deprecation")
    com.google.cloud.sql.v1.SqlFileType result = com.google.cloud.sql.v1.SqlFileType.valueOf(fileType_);
    return result == null ? com.google.cloud.sql.v1.SqlFileType.UNRECOGNIZED : result;
  }

  public static final int OFFLOAD_FIELD_NUMBER = 8;
  private com.google.protobuf.BoolValue offload_;
  /**
   * <pre>
   * Option for export offload.
   * </pre>
   *
   * <code>.google.protobuf.BoolValue offload = 8;</code>
   * @return Whether the offload field is set.
   */
  @java.lang.Override
  public boolean hasOffload() {
    return offload_ != null;
  }
  /**
   * <pre>
   * Option for export offload.
   * </pre>
   *
   * <code>.google.protobuf.BoolValue offload = 8;</code>
   * @return The offload.
   */
  @java.lang.Override
  public com.google.protobuf.BoolValue getOffload() {
    return offload_ == null ? com.google.protobuf.BoolValue.getDefaultInstance() : offload_;
  }
  /**
   * <pre>
   * Option for export offload.
   * </pre>
   *
   * <code>.google.protobuf.BoolValue offload = 8;</code>
   */
  @java.lang.Override
  public com.google.protobuf.BoolValueOrBuilder getOffloadOrBuilder() {
    return getOffload();
  }

  private byte memoizedIsInitialized = -1;
  @java.lang.Override
  public final boolean isInitialized() {
    byte isInitialized = memoizedIsInitialized;
    if (isInitialized == 1) return true;
    if (isInitialized == 0) return false;

    memoizedIsInitialized = 1;
    return true;
  }

  @java.lang.Override
  public void writeTo(com.google.protobuf.CodedOutputStream output)
                      throws java.io.IOException {
    if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(uri_)) {
      com.google.protobuf.GeneratedMessageV3.writeString(output, 1, uri_);
    }
    for (int i = 0; i < databases_.size(); i++) {
      com.google.protobuf.GeneratedMessageV3.writeString(output, 2, databases_.getRaw(i));
    }
    if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(kind_)) {
      com.google.protobuf.GeneratedMessageV3.writeString(output, 3, kind_);
    }
    if (sqlExportOptions_ != null) {
      output.writeMessage(4, getSqlExportOptions());
    }
    if (csvExportOptions_ != null) {
      output.writeMessage(5, getCsvExportOptions());
    }
    if (fileType_ != com.google.cloud.sql.v1.SqlFileType.SQL_FILE_TYPE_UNSPECIFIED.getNumber()) {
      output.writeEnum(6, fileType_);
    }
    if (offload_ != null) {
      output.writeMessage(8, getOffload());
    }
    unknownFields.writeTo(output);
  }

  @java.lang.Override
  public int getSerializedSize() {
    int size = memoizedSize;
    if (size != -1) return size;

    size = 0;
    if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(uri_)) {
      size += com.google.protobuf.GeneratedMessageV3.computeStringSize(1, uri_);
    }
    {
      int dataSize = 0;
      for (int i = 0; i < databases_.size(); i++) {
        dataSize += computeStringSizeNoTag(databases_.getRaw(i));
      }
      size += dataSize;
      size += 1 * getDatabasesList().size();
    }
    if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(kind_)) {
      size += com.google.protobuf.GeneratedMessageV3.computeStringSize(3, kind_);
    }
    if (sqlExportOptions_ != null) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(4, getSqlExportOptions());
    }
    if (csvExportOptions_ != null) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(5, getCsvExportOptions());
    }
    if (fileType_ != com.google.cloud.sql.v1.SqlFileType.SQL_FILE_TYPE_UNSPECIFIED.getNumber()) {
      size += com.google.protobuf.CodedOutputStream
        .computeEnumSize(6, fileType_);
    }
    if (offload_ != null) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(8, getOffload());
    }
    size += unknownFields.getSerializedSize();
    memoizedSize = size;
    return size;
  }

  @java.lang.Override
  public boolean equals(final java.lang.Object obj) {
    if (obj == this) {
     return true;
    }
    if (!(obj instanceof com.google.cloud.sql.v1.ExportContext)) {
      return super.equals(obj);
    }
    com.google.cloud.sql.v1.ExportContext other = (com.google.cloud.sql.v1.ExportContext) obj;

    if (!getUri()
        .equals(other.getUri())) return false;
    if (!getDatabasesList()
        .equals(other.getDatabasesList())) return false;
    if (!getKind()
        .equals(other.getKind())) return false;
    if (hasSqlExportOptions() != other.hasSqlExportOptions()) return false;
    if (hasSqlExportOptions()) {
      if (!getSqlExportOptions()
          .equals(other.getSqlExportOptions())) return false;
    }
    if (hasCsvExportOptions() != other.hasCsvExportOptions()) return false;
    if (hasCsvExportOptions()) {
      if (!getCsvExportOptions()
          .equals(other.getCsvExportOptions())) return false;
    }
    if (fileType_ != other.fileType_) return false;
    if (hasOffload() != other.hasOffload()) return false;
    if (hasOffload()) {
      if (!getOffload()
          .equals(other.getOffload())) return false;
    }
    if (!unknownFields.equals(other.unknownFields)) return false;
    return true;
  }

  @java.lang.Override
  public int hashCode() {
    if (memoizedHashCode != 0) {
      return memoizedHashCode;
    }
    int hash = 41;
    hash = (19 * hash) + getDescriptor().hashCode();
    hash = (37 * hash) + URI_FIELD_NUMBER;
    hash = (53 * hash) + getUri().hashCode();
    if (getDatabasesCount() > 0) {
      hash = (37 * hash) + DATABASES_FIELD_NUMBER;
      hash = (53 * hash) + getDatabasesList().hashCode();
    }
    hash = (37 * hash) + KIND_FIELD_NUMBER;
    hash = (53 * hash) + getKind().hashCode();
    if (hasSqlExportOptions()) {
      hash = (37 * hash) + SQL_EXPORT_OPTIONS_FIELD_NUMBER;
      hash = (53 * hash) + getSqlExportOptions().hashCode();
    }
    if (hasCsvExportOptions()) {
      hash = (37 * hash) + CSV_EXPORT_OPTIONS_FIELD_NUMBER;
      hash = (53 * hash) + getCsvExportOptions().hashCode();
    }
    hash = (37 * hash) + FILE_TYPE_FIELD_NUMBER;
    hash = (53 * hash) + fileType_;
    if (hasOffload()) {
      hash = (37 * hash) + OFFLOAD_FIELD_NUMBER;
      hash = (53 * hash) + getOffload().hashCode();
    }
    hash = (29 * hash) + unknownFields.hashCode();
    memoizedHashCode = hash;
    return hash;
  }

  public static com.google.cloud.sql.v1.ExportContext parseFrom(
      java.nio.ByteBuffer data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static com.google.cloud.sql.v1.ExportContext parseFrom(
      java.nio.ByteBuffer data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static com.google.cloud.sql.v1.ExportContext parseFrom(
      com.google.protobuf.ByteString data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static com.google.cloud.sql.v1.ExportContext parseFrom(
      com.google.protobuf.ByteString data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static com.google.cloud.sql.v1.ExportContext parseFrom(byte[] data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static com.google.cloud.sql.v1.ExportContext parseFrom(
      byte[] data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static com.google.cloud.sql.v1.ExportContext parseFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input);
  }
  public static com.google.cloud.sql.v1.ExportContext parseFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input, extensionRegistry);
  }
  public static com.google.cloud.sql.v1.ExportContext parseDelimitedFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseDelimitedWithIOException(PARSER, input);
  }
  public static com.google.cloud.sql.v1.ExportContext parseDelimitedFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
  }
  public static com.google.cloud.sql.v1.ExportContext parseFrom(
      com.google.protobuf.CodedInputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input);
  }
  public static com.google.cloud.sql.v1.ExportContext parseFrom(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input, extensionRegistry);
  }

  @java.lang.Override
  public Builder newBuilderForType() { return newBuilder(); }
  public static Builder newBuilder() {
    return DEFAULT_INSTANCE.toBuilder();
  }
  public static Builder newBuilder(com.google.cloud.sql.v1.ExportContext prototype) {
    return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
  }
  @java.lang.Override
  public Builder toBuilder() {
    return this == DEFAULT_INSTANCE
        ? new Builder() : new Builder().mergeFrom(this);
  }

  @java.lang.Override
  protected Builder newBuilderForType(
      com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
    Builder builder = new Builder(parent);
    return builder;
  }
  /**
   * <pre>
   * Database instance export context.
   * </pre>
   *
   * Protobuf type {@code google.cloud.sql.v1.ExportContext}
   */
  public static final class Builder extends
      com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
      // @@protoc_insertion_point(builder_implements:google.cloud.sql.v1.ExportContext)
      com.google.cloud.sql.v1.ExportContextOrBuilder {
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.google.cloud.sql.v1.CloudSqlResourcesProto.internal_static_google_cloud_sql_v1_ExportContext_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.google.cloud.sql.v1.CloudSqlResourcesProto.internal_static_google_cloud_sql_v1_ExportContext_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.google.cloud.sql.v1.ExportContext.class, com.google.cloud.sql.v1.ExportContext.Builder.class);
    }

    // Construct using com.google.cloud.sql.v1.ExportContext.newBuilder()
    private Builder() {
      maybeForceBuilderInitialization();
    }

    private Builder(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      super(parent);
      maybeForceBuilderInitialization();
    }
    private void maybeForceBuilderInitialization() {
      if (com.google.protobuf.GeneratedMessageV3
              .alwaysUseFieldBuilders) {
      }
    }
    @java.lang.Override
    public Builder clear() {
      super.clear();
      uri_ = "";

      databases_ = com.google.protobuf.LazyStringArrayList.EMPTY;
      bitField0_ = (bitField0_ & ~0x00000001);
      kind_ = "";

      if (sqlExportOptionsBuilder_ == null) {
        sqlExportOptions_ = null;
      } else {
        sqlExportOptions_ = null;
        sqlExportOptionsBuilder_ = null;
      }
      if (csvExportOptionsBuilder_ == null) {
        csvExportOptions_ = null;
      } else {
        csvExportOptions_ = null;
        csvExportOptionsBuilder_ = null;
      }
      fileType_ = 0;

      if (offloadBuilder_ == null) {
        offload_ = null;
      } else {
        offload_ = null;
        offloadBuilder_ = null;
      }
      return this;
    }

    @java.lang.Override
    public com.google.protobuf.Descriptors.Descriptor
        getDescriptorForType() {
      return com.google.cloud.sql.v1.CloudSqlResourcesProto.internal_static_google_cloud_sql_v1_ExportContext_descriptor;
    }

    @java.lang.Override
    public com.google.cloud.sql.v1.ExportContext getDefaultInstanceForType() {
      return com.google.cloud.sql.v1.ExportContext.getDefaultInstance();
    }

    @java.lang.Override
    public com.google.cloud.sql.v1.ExportContext build() {
      com.google.cloud.sql.v1.ExportContext result = buildPartial();
      if (!result.isInitialized()) {
        throw newUninitializedMessageException(result);
      }
      return result;
    }

    @java.lang.Override
    public com.google.cloud.sql.v1.ExportContext buildPartial() {
      com.google.cloud.sql.v1.ExportContext result = new com.google.cloud.sql.v1.ExportContext(this);
      int from_bitField0_ = bitField0_;
      result.uri_ = uri_;
      if (((bitField0_ & 0x00000001) != 0)) {
        databases_ = databases_.getUnmodifiableView();
        bitField0_ = (bitField0_ & ~0x00000001);
      }
      result.databases_ = databases_;
      result.kind_ = kind_;
      if (sqlExportOptionsBuilder_ == null) {
        result.sqlExportOptions_ = sqlExportOptions_;
      } else {
        result.sqlExportOptions_ = sqlExportOptionsBuilder_.build();
      }
      if (csvExportOptionsBuilder_ == null) {
        result.csvExportOptions_ = csvExportOptions_;
      } else {
        result.csvExportOptions_ = csvExportOptionsBuilder_.build();
      }
      result.fileType_ = fileType_;
      if (offloadBuilder_ == null) {
        result.offload_ = offload_;
      } else {
        result.offload_ = offloadBuilder_.build();
      }
      onBuilt();
      return result;
    }

    @java.lang.Override
    public Builder clone() {
      return super.clone();
    }
    @java.lang.Override
    public Builder setField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        java.lang.Object value) {
      return super.setField(field, value);
    }
    @java.lang.Override
    public Builder clearField(
        com.google.protobuf.Descriptors.FieldDescriptor field) {
      return super.clearField(field);
    }
    @java.lang.Override
    public Builder clearOneof(
        com.google.protobuf.Descriptors.OneofDescriptor oneof) {
      return super.clearOneof(oneof);
    }
    @java.lang.Override
    public Builder setRepeatedField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        int index, java.lang.Object value) {
      return super.setRepeatedField(field, index, value);
    }
    @java.lang.Override
    public Builder addRepeatedField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        java.lang.Object value) {
      return super.addRepeatedField(field, value);
    }
    @java.lang.Override
    public Builder mergeFrom(com.google.protobuf.Message other) {
      if (other instanceof com.google.cloud.sql.v1.ExportContext) {
        return mergeFrom((com.google.cloud.sql.v1.ExportContext)other);
      } else {
        super.mergeFrom(other);
        return this;
      }
    }

    public Builder mergeFrom(com.google.cloud.sql.v1.ExportContext other) {
      if (other == com.google.cloud.sql.v1.ExportContext.getDefaultInstance()) return this;
      if (!other.getUri().isEmpty()) {
        uri_ = other.uri_;
        onChanged();
      }
      if (!other.databases_.isEmpty()) {
        if (databases_.isEmpty()) {
          databases_ = other.databases_;
          bitField0_ = (bitField0_ & ~0x00000001);
        } else {
          ensureDatabasesIsMutable();
          databases_.addAll(other.databases_);
        }
        onChanged();
      }
      if (!other.getKind().isEmpty()) {
        kind_ = other.kind_;
        onChanged();
      }
      if (other.hasSqlExportOptions()) {
        mergeSqlExportOptions(other.getSqlExportOptions());
      }
      if (other.hasCsvExportOptions()) {
        mergeCsvExportOptions(other.getCsvExportOptions());
      }
      if (other.fileType_ != 0) {
        setFileTypeValue(other.getFileTypeValue());
      }
      if (other.hasOffload()) {
        mergeOffload(other.getOffload());
      }
      this.mergeUnknownFields(other.unknownFields);
      onChanged();
      return this;
    }

    @java.lang.Override
    public final boolean isInitialized() {
      return true;
    }

    @java.lang.Override
    public Builder mergeFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      com.google.cloud.sql.v1.ExportContext parsedMessage = null;
      try {
        parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        parsedMessage = (com.google.cloud.sql.v1.ExportContext) e.getUnfinishedMessage();
        throw e.unwrapIOException();
      } finally {
        if (parsedMessage != null) {
          mergeFrom(parsedMessage);
        }
      }
      return this;
    }
    private int bitField0_;

    private java.lang.Object uri_ = "";
    /**
     * <pre>
     * The path to the file in Google Cloud Storage where the export will be
     * stored. The URI is in the form **gs://bucketName/fileName**. If the file
     * already exists, the request succeeds, but the operation fails. If
     * **fileType** is **SQL** and the filename ends with .gz,
     * the contents are compressed.
     * </pre>
     *
     * <code>string uri = 1;</code>
     * @return The uri.
     */
    public java.lang.String getUri() {
      java.lang.Object ref = uri_;
      if (!(ref instanceof java.lang.String)) {
        com.google.protobuf.ByteString bs =
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        uri_ = s;
        return s;
      } else {
        return (java.lang.String) ref;
      }
    }
    /**
     * <pre>
     * The path to the file in Google Cloud Storage where the export will be
     * stored. The URI is in the form **gs://bucketName/fileName**. If the file
     * already exists, the request succeeds, but the operation fails. If
     * **fileType** is **SQL** and the filename ends with .gz,
     * the contents are compressed.
     * </pre>
     *
     * <code>string uri = 1;</code>
     * @return The bytes for uri.
     */
    public com.google.protobuf.ByteString
        getUriBytes() {
      java.lang.Object ref = uri_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        uri_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }
    /**
     * <pre>
     * The path to the file in Google Cloud Storage where the export will be
     * stored. The URI is in the form **gs://bucketName/fileName**. If the file
     * already exists, the request succeeds, but the operation fails. If
     * **fileType** is **SQL** and the filename ends with .gz,
     * the contents are compressed.
     * </pre>
     *
     * <code>string uri = 1;</code>
     * @param value The uri to set.
     * @return This builder for chaining.
     */
    public Builder setUri(
        java.lang.String value) {
      if (value == null) {
    throw new NullPointerException();
  }
  
      uri_ = value;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * The path to the file in Google Cloud Storage where the export will be
     * stored. The URI is in the form **gs://bucketName/fileName**. If the file
     * already exists, the request succeeds, but the operation fails. If
     * **fileType** is **SQL** and the filename ends with .gz,
     * the contents are compressed.
     * </pre>
     *
     * <code>string uri = 1;</code>
     * @return This builder for chaining.
     */
    public Builder clearUri() {
      
      uri_ = getDefaultInstance().getUri();
      onChanged();
      return this;
    }
    /**
     * <pre>
     * The path to the file in Google Cloud Storage where the export will be
     * stored. The URI is in the form **gs://bucketName/fileName**. If the file
     * already exists, the request succeeds, but the operation fails. If
     * **fileType** is **SQL** and the filename ends with .gz,
     * the contents are compressed.
     * </pre>
     *
     * <code>string uri = 1;</code>
     * @param value The bytes for uri to set.
     * @return This builder for chaining.
     */
    public Builder setUriBytes(
        com.google.protobuf.ByteString value) {
      if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
      
      uri_ = value;
      onChanged();
      return this;
    }

    private com.google.protobuf.LazyStringList databases_ = com.google.protobuf.LazyStringArrayList.EMPTY;
    private void ensureDatabasesIsMutable() {
      if (!((bitField0_ & 0x00000001) != 0)) {
        databases_ = new com.google.protobuf.LazyStringArrayList(databases_);
        bitField0_ |= 0x00000001;
       }
    }
    /**
     * <pre>
     * Databases to be exported.
     * *  **MySQL instances:** If **fileType** is **SQL** and no database is
     * specified, all databases are exported, except for the **mysql** system
     * database. If **fileType** is **CSV**, you can specify one database,
     * either by using this property or by using the
     * **csvExportOptions.selectQuery** property, which takes precedence
     * over this property.
     * *  **PostgreSQL instances:** You must specify one database to be exported.
     * If **fileType** is **CSV**, this database must match the one specified in
     * the **csvExportOptions.selectQuery** property.
     * *  **SQL Server instances:** You must specify one database to be exported,
     * and the **fileType** must be **BAK**.
     * </pre>
     *
     * <code>repeated string databases = 2;</code>
     * @return A list containing the databases.
     */
    public com.google.protobuf.ProtocolStringList
        getDatabasesList() {
      return databases_.getUnmodifiableView();
    }
    /**
     * <pre>
     * Databases to be exported.
     * *  **MySQL instances:** If **fileType** is **SQL** and no database is
     * specified, all databases are exported, except for the **mysql** system
     * database. If **fileType** is **CSV**, you can specify one database,
     * either by using this property or by using the
     * **csvExportOptions.selectQuery** property, which takes precedence
     * over this property.
     * *  **PostgreSQL instances:** You must specify one database to be exported.
     * If **fileType** is **CSV**, this database must match the one specified in
     * the **csvExportOptions.selectQuery** property.
     * *  **SQL Server instances:** You must specify one database to be exported,
     * and the **fileType** must be **BAK**.
     * </pre>
     *
     * <code>repeated string databases = 2;</code>
     * @return The count of databases.
     */
    public int getDatabasesCount() {
      return databases_.size();
    }
    /**
     * <pre>
     * Databases to be exported.
     * *  **MySQL instances:** If **fileType** is **SQL** and no database is
     * specified, all databases are exported, except for the **mysql** system
     * database. If **fileType** is **CSV**, you can specify one database,
     * either by using this property or by using the
     * **csvExportOptions.selectQuery** property, which takes precedence
     * over this property.
     * *  **PostgreSQL instances:** You must specify one database to be exported.
     * If **fileType** is **CSV**, this database must match the one specified in
     * the **csvExportOptions.selectQuery** property.
     * *  **SQL Server instances:** You must specify one database to be exported,
     * and the **fileType** must be **BAK**.
     * </pre>
     *
     * <code>repeated string databases = 2;</code>
     * @param index The index of the element to return.
     * @return The databases at the given index.
     */
    public java.lang.String getDatabases(int index) {
      return databases_.get(index);
    }
    /**
     * <pre>
     * Databases to be exported.
     * *  **MySQL instances:** If **fileType** is **SQL** and no database is
     * specified, all databases are exported, except for the **mysql** system
     * database. If **fileType** is **CSV**, you can specify one database,
     * either by using this property or by using the
     * **csvExportOptions.selectQuery** property, which takes precedence
     * over this property.
     * *  **PostgreSQL instances:** You must specify one database to be exported.
     * If **fileType** is **CSV**, this database must match the one specified in
     * the **csvExportOptions.selectQuery** property.
     * *  **SQL Server instances:** You must specify one database to be exported,
     * and the **fileType** must be **BAK**.
     * </pre>
     *
     * <code>repeated string databases = 2;</code>
     * @param index The index of the value to return.
     * @return The bytes of the databases at the given index.
     */
    public com.google.protobuf.ByteString
        getDatabasesBytes(int index) {
      return databases_.getByteString(index);
    }
    /**
     * <pre>
     * Databases to be exported.
     * *  **MySQL instances:** If **fileType** is **SQL** and no database is
     * specified, all databases are exported, except for the **mysql** system
     * database. If **fileType** is **CSV**, you can specify one database,
     * either by using this property or by using the
     * **csvExportOptions.selectQuery** property, which takes precedence
     * over this property.
     * *  **PostgreSQL instances:** You must specify one database to be exported.
     * If **fileType** is **CSV**, this database must match the one specified in
     * the **csvExportOptions.selectQuery** property.
     * *  **SQL Server instances:** You must specify one database to be exported,
     * and the **fileType** must be **BAK**.
     * </pre>
     *
     * <code>repeated string databases = 2;</code>
     * @param index The index to set the value at.
     * @param value The databases to set.
     * @return This builder for chaining.
     */
    public Builder setDatabases(
        int index, java.lang.String value) {
      if (value == null) {
    throw new NullPointerException();
  }
  ensureDatabasesIsMutable();
      databases_.set(index, value);
      onChanged();
      return this;
    }
    /**
     * <pre>
     * Databases to be exported.
     * *  **MySQL instances:** If **fileType** is **SQL** and no database is
     * specified, all databases are exported, except for the **mysql** system
     * database. If **fileType** is **CSV**, you can specify one database,
     * either by using this property or by using the
     * **csvExportOptions.selectQuery** property, which takes precedence
     * over this property.
     * *  **PostgreSQL instances:** You must specify one database to be exported.
     * If **fileType** is **CSV**, this database must match the one specified in
     * the **csvExportOptions.selectQuery** property.
     * *  **SQL Server instances:** You must specify one database to be exported,
     * and the **fileType** must be **BAK**.
     * </pre>
     *
     * <code>repeated string databases = 2;</code>
     * @param value The databases to add.
     * @return This builder for chaining.
     */
    public Builder addDatabases(
        java.lang.String value) {
      if (value == null) {
    throw new NullPointerException();
  }
  ensureDatabasesIsMutable();
      databases_.add(value);
      onChanged();
      return this;
    }
    /**
     * <pre>
     * Databases to be exported.
     * *  **MySQL instances:** If **fileType** is **SQL** and no database is
     * specified, all databases are exported, except for the **mysql** system
     * database. If **fileType** is **CSV**, you can specify one database,
     * either by using this property or by using the
     * **csvExportOptions.selectQuery** property, which takes precedence
     * over this property.
     * *  **PostgreSQL instances:** You must specify one database to be exported.
     * If **fileType** is **CSV**, this database must match the one specified in
     * the **csvExportOptions.selectQuery** property.
     * *  **SQL Server instances:** You must specify one database to be exported,
     * and the **fileType** must be **BAK**.
     * </pre>
     *
     * <code>repeated string databases = 2;</code>
     * @param values The databases to add.
     * @return This builder for chaining.
     */
    public Builder addAllDatabases(
        java.lang.Iterable<java.lang.String> values) {
      ensureDatabasesIsMutable();
      com.google.protobuf.AbstractMessageLite.Builder.addAll(
          values, databases_);
      onChanged();
      return this;
    }
    /**
     * <pre>
     * Databases to be exported.
     * *  **MySQL instances:** If **fileType** is **SQL** and no database is
     * specified, all databases are exported, except for the **mysql** system
     * database. If **fileType** is **CSV**, you can specify one database,
     * either by using this property or by using the
     * **csvExportOptions.selectQuery** property, which takes precedence
     * over this property.
     * *  **PostgreSQL instances:** You must specify one database to be exported.
     * If **fileType** is **CSV**, this database must match the one specified in
     * the **csvExportOptions.selectQuery** property.
     * *  **SQL Server instances:** You must specify one database to be exported,
     * and the **fileType** must be **BAK**.
     * </pre>
     *
     * <code>repeated string databases = 2;</code>
     * @return This builder for chaining.
     */
    public Builder clearDatabases() {
      databases_ = com.google.protobuf.LazyStringArrayList.EMPTY;
      bitField0_ = (bitField0_ & ~0x00000001);
      onChanged();
      return this;
    }
    /**
     * <pre>
     * Databases to be exported.
     * *  **MySQL instances:** If **fileType** is **SQL** and no database is
     * specified, all databases are exported, except for the **mysql** system
     * database. If **fileType** is **CSV**, you can specify one database,
     * either by using this property or by using the
     * **csvExportOptions.selectQuery** property, which takes precedence
     * over this property.
     * *  **PostgreSQL instances:** You must specify one database to be exported.
     * If **fileType** is **CSV**, this database must match the one specified in
     * the **csvExportOptions.selectQuery** property.
     * *  **SQL Server instances:** You must specify one database to be exported,
     * and the **fileType** must be **BAK**.
     * </pre>
     *
     * <code>repeated string databases = 2;</code>
     * @param value The bytes of the databases to add.
     * @return This builder for chaining.
     */
    public Builder addDatabasesBytes(
        com.google.protobuf.ByteString value) {
      if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
      ensureDatabasesIsMutable();
      databases_.add(value);
      onChanged();
      return this;
    }

    private java.lang.Object kind_ = "";
    /**
     * <pre>
     * This is always **sql#exportContext**.
     * </pre>
     *
     * <code>string kind = 3;</code>
     * @return The kind.
     */
    public java.lang.String getKind() {
      java.lang.Object ref = kind_;
      if (!(ref instanceof java.lang.String)) {
        com.google.protobuf.ByteString bs =
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        kind_ = s;
        return s;
      } else {
        return (java.lang.String) ref;
      }
    }
    /**
     * <pre>
     * This is always **sql#exportContext**.
     * </pre>
     *
     * <code>string kind = 3;</code>
     * @return The bytes for kind.
     */
    public com.google.protobuf.ByteString
        getKindBytes() {
      java.lang.Object ref = kind_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        kind_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }
    /**
     * <pre>
     * This is always **sql#exportContext**.
     * </pre>
     *
     * <code>string kind = 3;</code>
     * @param value The kind to set.
     * @return This builder for chaining.
     */
    public Builder setKind(
        java.lang.String value) {
      if (value == null) {
    throw new NullPointerException();
  }
  
      kind_ = value;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * This is always **sql#exportContext**.
     * </pre>
     *
     * <code>string kind = 3;</code>
     * @return This builder for chaining.
     */
    public Builder clearKind() {
      
      kind_ = getDefaultInstance().getKind();
      onChanged();
      return this;
    }
    /**
     * <pre>
     * This is always **sql#exportContext**.
     * </pre>
     *
     * <code>string kind = 3;</code>
     * @param value The bytes for kind to set.
     * @return This builder for chaining.
     */
    public Builder setKindBytes(
        com.google.protobuf.ByteString value) {
      if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
      
      kind_ = value;
      onChanged();
      return this;
    }

    private com.google.cloud.sql.v1.ExportContext.SqlExportOptions sqlExportOptions_;
    private com.google.protobuf.SingleFieldBuilderV3<
        com.google.cloud.sql.v1.ExportContext.SqlExportOptions, com.google.cloud.sql.v1.ExportContext.SqlExportOptions.Builder, com.google.cloud.sql.v1.ExportContext.SqlExportOptionsOrBuilder> sqlExportOptionsBuilder_;
    /**
     * <pre>
     * Options for exporting data as SQL statements.
     * </pre>
     *
     * <code>.google.cloud.sql.v1.ExportContext.SqlExportOptions sql_export_options = 4;</code>
     * @return Whether the sqlExportOptions field is set.
     */
    public boolean hasSqlExportOptions() {
      return sqlExportOptionsBuilder_ != null || sqlExportOptions_ != null;
    }
    /**
     * <pre>
     * Options for exporting data as SQL statements.
     * </pre>
     *
     * <code>.google.cloud.sql.v1.ExportContext.SqlExportOptions sql_export_options = 4;</code>
     * @return The sqlExportOptions.
     */
    public com.google.cloud.sql.v1.ExportContext.SqlExportOptions getSqlExportOptions() {
      if (sqlExportOptionsBuilder_ == null) {
        return sqlExportOptions_ == null ? com.google.cloud.sql.v1.ExportContext.SqlExportOptions.getDefaultInstance() : sqlExportOptions_;
      } else {
        return sqlExportOptionsBuilder_.getMessage();
      }
    }
    /**
     * <pre>
     * Options for exporting data as SQL statements.
     * </pre>
     *
     * <code>.google.cloud.sql.v1.ExportContext.SqlExportOptions sql_export_options = 4;</code>
     */
    public Builder setSqlExportOptions(com.google.cloud.sql.v1.ExportContext.SqlExportOptions value) {
      if (sqlExportOptionsBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        sqlExportOptions_ = value;
        onChanged();
      } else {
        sqlExportOptionsBuilder_.setMessage(value);
      }

      return this;
    }
    /**
     * <pre>
     * Options for exporting data as SQL statements.
     * </pre>
     *
     * <code>.google.cloud.sql.v1.ExportContext.SqlExportOptions sql_export_options = 4;</code>
     */
    public Builder setSqlExportOptions(
        com.google.cloud.sql.v1.ExportContext.SqlExportOptions.Builder builderForValue) {
      if (sqlExportOptionsBuilder_ == null) {
        sqlExportOptions_ = builderForValue.build();
        onChanged();
      } else {
        sqlExportOptionsBuilder_.setMessage(builderForValue.build());
      }

      return this;
    }
    /**
     * <pre>
     * Options for exporting data as SQL statements.
     * </pre>
     *
     * <code>.google.cloud.sql.v1.ExportContext.SqlExportOptions sql_export_options = 4;</code>
     */
    public Builder mergeSqlExportOptions(com.google.cloud.sql.v1.ExportContext.SqlExportOptions value) {
      if (sqlExportOptionsBuilder_ == null) {
        if (sqlExportOptions_ != null) {
          sqlExportOptions_ =
            com.google.cloud.sql.v1.ExportContext.SqlExportOptions.newBuilder(sqlExportOptions_).mergeFrom(value).buildPartial();
        } else {
          sqlExportOptions_ = value;
        }
        onChanged();
      } else {
        sqlExportOptionsBuilder_.mergeFrom(value);
      }

      return this;
    }
    /**
     * <pre>
     * Options for exporting data as SQL statements.
     * </pre>
     *
     * <code>.google.cloud.sql.v1.ExportContext.SqlExportOptions sql_export_options = 4;</code>
     */
    public Builder clearSqlExportOptions() {
      if (sqlExportOptionsBuilder_ == null) {
        sqlExportOptions_ = null;
        onChanged();
      } else {
        sqlExportOptions_ = null;
        sqlExportOptionsBuilder_ = null;
      }

      return this;
    }
    /**
     * <pre>
     * Options for exporting data as SQL statements.
     * </pre>
     *
     * <code>.google.cloud.sql.v1.ExportContext.SqlExportOptions sql_export_options = 4;</code>
     */
    public com.google.cloud.sql.v1.ExportContext.SqlExportOptions.Builder getSqlExportOptionsBuilder() {
      
      onChanged();
      return getSqlExportOptionsFieldBuilder().getBuilder();
    }
    /**
     * <pre>
     * Options for exporting data as SQL statements.
     * </pre>
     *
     * <code>.google.cloud.sql.v1.ExportContext.SqlExportOptions sql_export_options = 4;</code>
     */
    public com.google.cloud.sql.v1.ExportContext.SqlExportOptionsOrBuilder getSqlExportOptionsOrBuilder() {
      if (sqlExportOptionsBuilder_ != null) {
        return sqlExportOptionsBuilder_.getMessageOrBuilder();
      } else {
        return sqlExportOptions_ == null ?
            com.google.cloud.sql.v1.ExportContext.SqlExportOptions.getDefaultInstance() : sqlExportOptions_;
      }
    }
    /**
     * <pre>
     * Options for exporting data as SQL statements.
     * </pre>
     *
     * <code>.google.cloud.sql.v1.ExportContext.SqlExportOptions sql_export_options = 4;</code>
     */
    private com.google.protobuf.SingleFieldBuilderV3<
        com.google.cloud.sql.v1.ExportContext.SqlExportOptions, com.google.cloud.sql.v1.ExportContext.SqlExportOptions.Builder, com.google.cloud.sql.v1.ExportContext.SqlExportOptionsOrBuilder> 
        getSqlExportOptionsFieldBuilder() {
      if (sqlExportOptionsBuilder_ == null) {
        sqlExportOptionsBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
            com.google.cloud.sql.v1.ExportContext.SqlExportOptions, com.google.cloud.sql.v1.ExportContext.SqlExportOptions.Builder, com.google.cloud.sql.v1.ExportContext.SqlExportOptionsOrBuilder>(
                getSqlExportOptions(),
                getParentForChildren(),
                isClean());
        sqlExportOptions_ = null;
      }
      return sqlExportOptionsBuilder_;
    }

    private com.google.cloud.sql.v1.ExportContext.SqlCsvExportOptions csvExportOptions_;
    private com.google.protobuf.SingleFieldBuilderV3<
        com.google.cloud.sql.v1.ExportContext.SqlCsvExportOptions, com.google.cloud.sql.v1.ExportContext.SqlCsvExportOptions.Builder, com.google.cloud.sql.v1.ExportContext.SqlCsvExportOptionsOrBuilder> csvExportOptionsBuilder_;
    /**
     * <pre>
     * Options for exporting data as CSV. **MySQL** and **PostgreSQL**
     * instances only.
     * </pre>
     *
     * <code>.google.cloud.sql.v1.ExportContext.SqlCsvExportOptions csv_export_options = 5;</code>
     * @return Whether the csvExportOptions field is set.
     */
    public boolean hasCsvExportOptions() {
      return csvExportOptionsBuilder_ != null || csvExportOptions_ != null;
    }
    /**
     * <pre>
     * Options for exporting data as CSV. **MySQL** and **PostgreSQL**
     * instances only.
     * </pre>
     *
     * <code>.google.cloud.sql.v1.ExportContext.SqlCsvExportOptions csv_export_options = 5;</code>
     * @return The csvExportOptions.
     */
    public com.google.cloud.sql.v1.ExportContext.SqlCsvExportOptions getCsvExportOptions() {
      if (csvExportOptionsBuilder_ == null) {
        return csvExportOptions_ == null ? com.google.cloud.sql.v1.ExportContext.SqlCsvExportOptions.getDefaultInstance() : csvExportOptions_;
      } else {
        return csvExportOptionsBuilder_.getMessage();
      }
    }
    /**
     * <pre>
     * Options for exporting data as CSV. **MySQL** and **PostgreSQL**
     * instances only.
     * </pre>
     *
     * <code>.google.cloud.sql.v1.ExportContext.SqlCsvExportOptions csv_export_options = 5;</code>
     */
    public Builder setCsvExportOptions(com.google.cloud.sql.v1.ExportContext.SqlCsvExportOptions value) {
      if (csvExportOptionsBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        csvExportOptions_ = value;
        onChanged();
      } else {
        csvExportOptionsBuilder_.setMessage(value);
      }

      return this;
    }
    /**
     * <pre>
     * Options for exporting data as CSV. **MySQL** and **PostgreSQL**
     * instances only.
     * </pre>
     *
     * <code>.google.cloud.sql.v1.ExportContext.SqlCsvExportOptions csv_export_options = 5;</code>
     */
    public Builder setCsvExportOptions(
        com.google.cloud.sql.v1.ExportContext.SqlCsvExportOptions.Builder builderForValue) {
      if (csvExportOptionsBuilder_ == null) {
        csvExportOptions_ = builderForValue.build();
        onChanged();
      } else {
        csvExportOptionsBuilder_.setMessage(builderForValue.build());
      }

      return this;
    }
    /**
     * <pre>
     * Options for exporting data as CSV. **MySQL** and **PostgreSQL**
     * instances only.
     * </pre>
     *
     * <code>.google.cloud.sql.v1.ExportContext.SqlCsvExportOptions csv_export_options = 5;</code>
     */
    public Builder mergeCsvExportOptions(com.google.cloud.sql.v1.ExportContext.SqlCsvExportOptions value) {
      if (csvExportOptionsBuilder_ == null) {
        if (csvExportOptions_ != null) {
          csvExportOptions_ =
            com.google.cloud.sql.v1.ExportContext.SqlCsvExportOptions.newBuilder(csvExportOptions_).mergeFrom(value).buildPartial();
        } else {
          csvExportOptions_ = value;
        }
        onChanged();
      } else {
        csvExportOptionsBuilder_.mergeFrom(value);
      }

      return this;
    }
    /**
     * <pre>
     * Options for exporting data as CSV. **MySQL** and **PostgreSQL**
     * instances only.
     * </pre>
     *
     * <code>.google.cloud.sql.v1.ExportContext.SqlCsvExportOptions csv_export_options = 5;</code>
     */
    public Builder clearCsvExportOptions() {
      if (csvExportOptionsBuilder_ == null) {
        csvExportOptions_ = null;
        onChanged();
      } else {
        csvExportOptions_ = null;
        csvExportOptionsBuilder_ = null;
      }

      return this;
    }
    /**
     * <pre>
     * Options for exporting data as CSV. **MySQL** and **PostgreSQL**
     * instances only.
     * </pre>
     *
     * <code>.google.cloud.sql.v1.ExportContext.SqlCsvExportOptions csv_export_options = 5;</code>
     */
    public com.google.cloud.sql.v1.ExportContext.SqlCsvExportOptions.Builder getCsvExportOptionsBuilder() {
      
      onChanged();
      return getCsvExportOptionsFieldBuilder().getBuilder();
    }
    /**
     * <pre>
     * Options for exporting data as CSV. **MySQL** and **PostgreSQL**
     * instances only.
     * </pre>
     *
     * <code>.google.cloud.sql.v1.ExportContext.SqlCsvExportOptions csv_export_options = 5;</code>
     */
    public com.google.cloud.sql.v1.ExportContext.SqlCsvExportOptionsOrBuilder getCsvExportOptionsOrBuilder() {
      if (csvExportOptionsBuilder_ != null) {
        return csvExportOptionsBuilder_.getMessageOrBuilder();
      } else {
        return csvExportOptions_ == null ?
            com.google.cloud.sql.v1.ExportContext.SqlCsvExportOptions.getDefaultInstance() : csvExportOptions_;
      }
    }
    /**
     * <pre>
     * Options for exporting data as CSV. **MySQL** and **PostgreSQL**
     * instances only.
     * </pre>
     *
     * <code>.google.cloud.sql.v1.ExportContext.SqlCsvExportOptions csv_export_options = 5;</code>
     */
    private com.google.protobuf.SingleFieldBuilderV3<
        com.google.cloud.sql.v1.ExportContext.SqlCsvExportOptions, com.google.cloud.sql.v1.ExportContext.SqlCsvExportOptions.Builder, com.google.cloud.sql.v1.ExportContext.SqlCsvExportOptionsOrBuilder> 
        getCsvExportOptionsFieldBuilder() {
      if (csvExportOptionsBuilder_ == null) {
        csvExportOptionsBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
            com.google.cloud.sql.v1.ExportContext.SqlCsvExportOptions, com.google.cloud.sql.v1.ExportContext.SqlCsvExportOptions.Builder, com.google.cloud.sql.v1.ExportContext.SqlCsvExportOptionsOrBuilder>(
                getCsvExportOptions(),
                getParentForChildren(),
                isClean());
        csvExportOptions_ = null;
      }
      return csvExportOptionsBuilder_;
    }

    private int fileType_ = 0;
    /**
     * <pre>
     * The file type for the specified uri.
     * *  **SQL**: The file contains SQL statements.
     * *  **CSV**: The file contains CSV data.
     * *  **BAK**: The file contains backup data for a SQL Server instance.
     * </pre>
     *
     * <code>.google.cloud.sql.v1.SqlFileType file_type = 6;</code>
     * @return The enum numeric value on the wire for fileType.
     */
    @java.lang.Override public int getFileTypeValue() {
      return fileType_;
    }
    /**
     * <pre>
     * The file type for the specified uri.
     * *  **SQL**: The file contains SQL statements.
     * *  **CSV**: The file contains CSV data.
     * *  **BAK**: The file contains backup data for a SQL Server instance.
     * </pre>
     *
     * <code>.google.cloud.sql.v1.SqlFileType file_type = 6;</code>
     * @param value The enum numeric value on the wire for fileType to set.
     * @return This builder for chaining.
     */
    public Builder setFileTypeValue(int value) {
      
      fileType_ = value;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * The file type for the specified uri.
     * *  **SQL**: The file contains SQL statements.
     * *  **CSV**: The file contains CSV data.
     * *  **BAK**: The file contains backup data for a SQL Server instance.
     * </pre>
     *
     * <code>.google.cloud.sql.v1.SqlFileType file_type = 6;</code>
     * @return The fileType.
     */
    @java.lang.Override
    public com.google.cloud.sql.v1.SqlFileType getFileType() {
      @SuppressWarnings("deprecation")
      com.google.cloud.sql.v1.SqlFileType result = com.google.cloud.sql.v1.SqlFileType.valueOf(fileType_);
      return result == null ? com.google.cloud.sql.v1.SqlFileType.UNRECOGNIZED : result;
    }
    /**
     * <pre>
     * The file type for the specified uri.
     * *  **SQL**: The file contains SQL statements.
     * *  **CSV**: The file contains CSV data.
     * *  **BAK**: The file contains backup data for a SQL Server instance.
     * </pre>
     *
     * <code>.google.cloud.sql.v1.SqlFileType file_type = 6;</code>
     * @param value The fileType to set.
     * @return This builder for chaining.
     */
    public Builder setFileType(com.google.cloud.sql.v1.SqlFileType value) {
      if (value == null) {
        throw new NullPointerException();
      }
      
      fileType_ = value.getNumber();
      onChanged();
      return this;
    }
    /**
     * <pre>
     * The file type for the specified uri.
     * *  **SQL**: The file contains SQL statements.
     * *  **CSV**: The file contains CSV data.
     * *  **BAK**: The file contains backup data for a SQL Server instance.
     * </pre>
     *
     * <code>.google.cloud.sql.v1.SqlFileType file_type = 6;</code>
     * @return This builder for chaining.
     */
    public Builder clearFileType() {
      
      fileType_ = 0;
      onChanged();
      return this;
    }

    private com.google.protobuf.BoolValue offload_;
    private com.google.protobuf.SingleFieldBuilderV3<
        com.google.protobuf.BoolValue, com.google.protobuf.BoolValue.Builder, com.google.protobuf.BoolValueOrBuilder> offloadBuilder_;
    /**
     * <pre>
     * Option for export offload.
     * </pre>
     *
     * <code>.google.protobuf.BoolValue offload = 8;</code>
     * @return Whether the offload field is set.
     */
    public boolean hasOffload() {
      return offloadBuilder_ != null || offload_ != null;
    }
    /**
     * <pre>
     * Option for export offload.
     * </pre>
     *
     * <code>.google.protobuf.BoolValue offload = 8;</code>
     * @return The offload.
     */
    public com.google.protobuf.BoolValue getOffload() {
      if (offloadBuilder_ == null) {
        return offload_ == null ? com.google.protobuf.BoolValue.getDefaultInstance() : offload_;
      } else {
        return offloadBuilder_.getMessage();
      }
    }
    /**
     * <pre>
     * Option for export offload.
     * </pre>
     *
     * <code>.google.protobuf.BoolValue offload = 8;</code>
     */
    public Builder setOffload(com.google.protobuf.BoolValue value) {
      if (offloadBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        offload_ = value;
        onChanged();
      } else {
        offloadBuilder_.setMessage(value);
      }

      return this;
    }
    /**
     * <pre>
     * Option for export offload.
     * </pre>
     *
     * <code>.google.protobuf.BoolValue offload = 8;</code>
     */
    public Builder setOffload(
        com.google.protobuf.BoolValue.Builder builderForValue) {
      if (offloadBuilder_ == null) {
        offload_ = builderForValue.build();
        onChanged();
      } else {
        offloadBuilder_.setMessage(builderForValue.build());
      }

      return this;
    }
    /**
     * <pre>
     * Option for export offload.
     * </pre>
     *
     * <code>.google.protobuf.BoolValue offload = 8;</code>
     */
    public Builder mergeOffload(com.google.protobuf.BoolValue value) {
      if (offloadBuilder_ == null) {
        if (offload_ != null) {
          offload_ =
            com.google.protobuf.BoolValue.newBuilder(offload_).mergeFrom(value).buildPartial();
        } else {
          offload_ = value;
        }
        onChanged();
      } else {
        offloadBuilder_.mergeFrom(value);
      }

      return this;
    }
    /**
     * <pre>
     * Option for export offload.
     * </pre>
     *
     * <code>.google.protobuf.BoolValue offload = 8;</code>
     */
    public Builder clearOffload() {
      if (offloadBuilder_ == null) {
        offload_ = null;
        onChanged();
      } else {
        offload_ = null;
        offloadBuilder_ = null;
      }

      return this;
    }
    /**
     * <pre>
     * Option for export offload.
     * </pre>
     *
     * <code>.google.protobuf.BoolValue offload = 8;</code>
     */
    public com.google.protobuf.BoolValue.Builder getOffloadBuilder() {
      
      onChanged();
      return getOffloadFieldBuilder().getBuilder();
    }
    /**
     * <pre>
     * Option for export offload.
     * </pre>
     *
     * <code>.google.protobuf.BoolValue offload = 8;</code>
     */
    public com.google.protobuf.BoolValueOrBuilder getOffloadOrBuilder() {
      if (offloadBuilder_ != null) {
        return offloadBuilder_.getMessageOrBuilder();
      } else {
        return offload_ == null ?
            com.google.protobuf.BoolValue.getDefaultInstance() : offload_;
      }
    }
    /**
     * <pre>
     * Option for export offload.
     * </pre>
     *
     * <code>.google.protobuf.BoolValue offload = 8;</code>
     */
    private com.google.protobuf.SingleFieldBuilderV3<
        com.google.protobuf.BoolValue, com.google.protobuf.BoolValue.Builder, com.google.protobuf.BoolValueOrBuilder> 
        getOffloadFieldBuilder() {
      if (offloadBuilder_ == null) {
        offloadBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
            com.google.protobuf.BoolValue, com.google.protobuf.BoolValue.Builder, com.google.protobuf.BoolValueOrBuilder>(
                getOffload(),
                getParentForChildren(),
                isClean());
        offload_ = null;
      }
      return offloadBuilder_;
    }
    @java.lang.Override
    public final Builder setUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return super.setUnknownFields(unknownFields);
    }

    @java.lang.Override
    public final Builder mergeUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return super.mergeUnknownFields(unknownFields);
    }


    // @@protoc_insertion_point(builder_scope:google.cloud.sql.v1.ExportContext)
  }

  // @@protoc_insertion_point(class_scope:google.cloud.sql.v1.ExportContext)
  private static final com.google.cloud.sql.v1.ExportContext DEFAULT_INSTANCE;
  static {
    DEFAULT_INSTANCE = new com.google.cloud.sql.v1.ExportContext();
  }

  public static com.google.cloud.sql.v1.ExportContext getDefaultInstance() {
    return DEFAULT_INSTANCE;
  }

  private static final com.google.protobuf.Parser<ExportContext>
      PARSER = new com.google.protobuf.AbstractParser<ExportContext>() {
    @java.lang.Override
    public ExportContext parsePartialFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return new ExportContext(input, extensionRegistry);
    }
  };

  public static com.google.protobuf.Parser<ExportContext> parser() {
    return PARSER;
  }

  @java.lang.Override
  public com.google.protobuf.Parser<ExportContext> getParserForType() {
    return PARSER;
  }

  @java.lang.Override
  public com.google.cloud.sql.v1.ExportContext getDefaultInstanceForType() {
    return DEFAULT_INSTANCE;
  }

}

