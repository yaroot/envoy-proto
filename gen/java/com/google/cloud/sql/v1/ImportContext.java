// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: google/cloud/sql/v1/cloud_sql_resources.proto

package com.google.cloud.sql.v1;

/**
 * <pre>
 * Database instance import context.
 * </pre>
 *
 * Protobuf type {@code google.cloud.sql.v1.ImportContext}
 */
public final class ImportContext extends
    com.google.protobuf.GeneratedMessageV3 implements
    // @@protoc_insertion_point(message_implements:google.cloud.sql.v1.ImportContext)
    ImportContextOrBuilder {
private static final long serialVersionUID = 0L;
  // Use ImportContext.newBuilder() to construct.
  private ImportContext(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
    super(builder);
  }
  private ImportContext() {
    uri_ = "";
    database_ = "";
    kind_ = "";
    fileType_ = 0;
    importUser_ = "";
  }

  @java.lang.Override
  @SuppressWarnings({"unused"})
  protected java.lang.Object newInstance(
      UnusedPrivateParameter unused) {
    return new ImportContext();
  }

  @java.lang.Override
  public final com.google.protobuf.UnknownFieldSet
  getUnknownFields() {
    return this.unknownFields;
  }
  public static final com.google.protobuf.Descriptors.Descriptor
      getDescriptor() {
    return com.google.cloud.sql.v1.CloudSqlResourcesProto.internal_static_google_cloud_sql_v1_ImportContext_descriptor;
  }

  @java.lang.Override
  protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internalGetFieldAccessorTable() {
    return com.google.cloud.sql.v1.CloudSqlResourcesProto.internal_static_google_cloud_sql_v1_ImportContext_fieldAccessorTable
        .ensureFieldAccessorsInitialized(
            com.google.cloud.sql.v1.ImportContext.class, com.google.cloud.sql.v1.ImportContext.Builder.class);
  }

  public interface SqlCsvImportOptionsOrBuilder extends
      // @@protoc_insertion_point(interface_extends:google.cloud.sql.v1.ImportContext.SqlCsvImportOptions)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <pre>
     * The table to which CSV data is imported.
     * </pre>
     *
     * <code>string table = 1;</code>
     * @return The table.
     */
    java.lang.String getTable();
    /**
     * <pre>
     * The table to which CSV data is imported.
     * </pre>
     *
     * <code>string table = 1;</code>
     * @return The bytes for table.
     */
    com.google.protobuf.ByteString
        getTableBytes();

    /**
     * <pre>
     * The columns to which CSV data is imported. If not specified, all columns
     * of the database table are loaded with CSV data.
     * </pre>
     *
     * <code>repeated string columns = 2;</code>
     * @return A list containing the columns.
     */
    java.util.List<java.lang.String>
        getColumnsList();
    /**
     * <pre>
     * The columns to which CSV data is imported. If not specified, all columns
     * of the database table are loaded with CSV data.
     * </pre>
     *
     * <code>repeated string columns = 2;</code>
     * @return The count of columns.
     */
    int getColumnsCount();
    /**
     * <pre>
     * The columns to which CSV data is imported. If not specified, all columns
     * of the database table are loaded with CSV data.
     * </pre>
     *
     * <code>repeated string columns = 2;</code>
     * @param index The index of the element to return.
     * @return The columns at the given index.
     */
    java.lang.String getColumns(int index);
    /**
     * <pre>
     * The columns to which CSV data is imported. If not specified, all columns
     * of the database table are loaded with CSV data.
     * </pre>
     *
     * <code>repeated string columns = 2;</code>
     * @param index The index of the value to return.
     * @return The bytes of the columns at the given index.
     */
    com.google.protobuf.ByteString
        getColumnsBytes(int index);

    /**
     * <pre>
     * Specifies the character that should appear before a data character that
     * needs to be escaped.
     * </pre>
     *
     * <code>string escape_character = 4;</code>
     * @return The escapeCharacter.
     */
    java.lang.String getEscapeCharacter();
    /**
     * <pre>
     * Specifies the character that should appear before a data character that
     * needs to be escaped.
     * </pre>
     *
     * <code>string escape_character = 4;</code>
     * @return The bytes for escapeCharacter.
     */
    com.google.protobuf.ByteString
        getEscapeCharacterBytes();

    /**
     * <pre>
     * Specifies the quoting character to be used when a data value is quoted.
     * </pre>
     *
     * <code>string quote_character = 5;</code>
     * @return The quoteCharacter.
     */
    java.lang.String getQuoteCharacter();
    /**
     * <pre>
     * Specifies the quoting character to be used when a data value is quoted.
     * </pre>
     *
     * <code>string quote_character = 5;</code>
     * @return The bytes for quoteCharacter.
     */
    com.google.protobuf.ByteString
        getQuoteCharacterBytes();

    /**
     * <pre>
     * Specifies the character that separates columns within each row (line) of
     * the file.
     * </pre>
     *
     * <code>string fields_terminated_by = 6;</code>
     * @return The fieldsTerminatedBy.
     */
    java.lang.String getFieldsTerminatedBy();
    /**
     * <pre>
     * Specifies the character that separates columns within each row (line) of
     * the file.
     * </pre>
     *
     * <code>string fields_terminated_by = 6;</code>
     * @return The bytes for fieldsTerminatedBy.
     */
    com.google.protobuf.ByteString
        getFieldsTerminatedByBytes();

    /**
     * <pre>
     * This is used to separate lines. If a line does not contain all fields,
     * the rest of the columns are set to their default values.
     * </pre>
     *
     * <code>string lines_terminated_by = 8;</code>
     * @return The linesTerminatedBy.
     */
    java.lang.String getLinesTerminatedBy();
    /**
     * <pre>
     * This is used to separate lines. If a line does not contain all fields,
     * the rest of the columns are set to their default values.
     * </pre>
     *
     * <code>string lines_terminated_by = 8;</code>
     * @return The bytes for linesTerminatedBy.
     */
    com.google.protobuf.ByteString
        getLinesTerminatedByBytes();
  }
  /**
   * Protobuf type {@code google.cloud.sql.v1.ImportContext.SqlCsvImportOptions}
   */
  public static final class SqlCsvImportOptions extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:google.cloud.sql.v1.ImportContext.SqlCsvImportOptions)
      SqlCsvImportOptionsOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use SqlCsvImportOptions.newBuilder() to construct.
    private SqlCsvImportOptions(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private SqlCsvImportOptions() {
      table_ = "";
      columns_ = com.google.protobuf.LazyStringArrayList.EMPTY;
      escapeCharacter_ = "";
      quoteCharacter_ = "";
      fieldsTerminatedBy_ = "";
      linesTerminatedBy_ = "";
    }

    @java.lang.Override
    @SuppressWarnings({"unused"})
    protected java.lang.Object newInstance(
        UnusedPrivateParameter unused) {
      return new SqlCsvImportOptions();
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.google.cloud.sql.v1.CloudSqlResourcesProto.internal_static_google_cloud_sql_v1_ImportContext_SqlCsvImportOptions_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.google.cloud.sql.v1.CloudSqlResourcesProto.internal_static_google_cloud_sql_v1_ImportContext_SqlCsvImportOptions_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.google.cloud.sql.v1.ImportContext.SqlCsvImportOptions.class, com.google.cloud.sql.v1.ImportContext.SqlCsvImportOptions.Builder.class);
    }

    public static final int TABLE_FIELD_NUMBER = 1;
    @SuppressWarnings("serial")
    private volatile java.lang.Object table_ = "";
    /**
     * <pre>
     * The table to which CSV data is imported.
     * </pre>
     *
     * <code>string table = 1;</code>
     * @return The table.
     */
    @java.lang.Override
    public java.lang.String getTable() {
      java.lang.Object ref = table_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        table_ = s;
        return s;
      }
    }
    /**
     * <pre>
     * The table to which CSV data is imported.
     * </pre>
     *
     * <code>string table = 1;</code>
     * @return The bytes for table.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString
        getTableBytes() {
      java.lang.Object ref = table_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        table_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int COLUMNS_FIELD_NUMBER = 2;
    @SuppressWarnings("serial")
    private com.google.protobuf.LazyStringList columns_;
    /**
     * <pre>
     * The columns to which CSV data is imported. If not specified, all columns
     * of the database table are loaded with CSV data.
     * </pre>
     *
     * <code>repeated string columns = 2;</code>
     * @return A list containing the columns.
     */
    public com.google.protobuf.ProtocolStringList
        getColumnsList() {
      return columns_;
    }
    /**
     * <pre>
     * The columns to which CSV data is imported. If not specified, all columns
     * of the database table are loaded with CSV data.
     * </pre>
     *
     * <code>repeated string columns = 2;</code>
     * @return The count of columns.
     */
    public int getColumnsCount() {
      return columns_.size();
    }
    /**
     * <pre>
     * The columns to which CSV data is imported. If not specified, all columns
     * of the database table are loaded with CSV data.
     * </pre>
     *
     * <code>repeated string columns = 2;</code>
     * @param index The index of the element to return.
     * @return The columns at the given index.
     */
    public java.lang.String getColumns(int index) {
      return columns_.get(index);
    }
    /**
     * <pre>
     * The columns to which CSV data is imported. If not specified, all columns
     * of the database table are loaded with CSV data.
     * </pre>
     *
     * <code>repeated string columns = 2;</code>
     * @param index The index of the value to return.
     * @return The bytes of the columns at the given index.
     */
    public com.google.protobuf.ByteString
        getColumnsBytes(int index) {
      return columns_.getByteString(index);
    }

    public static final int ESCAPE_CHARACTER_FIELD_NUMBER = 4;
    @SuppressWarnings("serial")
    private volatile java.lang.Object escapeCharacter_ = "";
    /**
     * <pre>
     * Specifies the character that should appear before a data character that
     * needs to be escaped.
     * </pre>
     *
     * <code>string escape_character = 4;</code>
     * @return The escapeCharacter.
     */
    @java.lang.Override
    public java.lang.String getEscapeCharacter() {
      java.lang.Object ref = escapeCharacter_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        escapeCharacter_ = s;
        return s;
      }
    }
    /**
     * <pre>
     * Specifies the character that should appear before a data character that
     * needs to be escaped.
     * </pre>
     *
     * <code>string escape_character = 4;</code>
     * @return The bytes for escapeCharacter.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString
        getEscapeCharacterBytes() {
      java.lang.Object ref = escapeCharacter_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        escapeCharacter_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int QUOTE_CHARACTER_FIELD_NUMBER = 5;
    @SuppressWarnings("serial")
    private volatile java.lang.Object quoteCharacter_ = "";
    /**
     * <pre>
     * Specifies the quoting character to be used when a data value is quoted.
     * </pre>
     *
     * <code>string quote_character = 5;</code>
     * @return The quoteCharacter.
     */
    @java.lang.Override
    public java.lang.String getQuoteCharacter() {
      java.lang.Object ref = quoteCharacter_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        quoteCharacter_ = s;
        return s;
      }
    }
    /**
     * <pre>
     * Specifies the quoting character to be used when a data value is quoted.
     * </pre>
     *
     * <code>string quote_character = 5;</code>
     * @return The bytes for quoteCharacter.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString
        getQuoteCharacterBytes() {
      java.lang.Object ref = quoteCharacter_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        quoteCharacter_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int FIELDS_TERMINATED_BY_FIELD_NUMBER = 6;
    @SuppressWarnings("serial")
    private volatile java.lang.Object fieldsTerminatedBy_ = "";
    /**
     * <pre>
     * Specifies the character that separates columns within each row (line) of
     * the file.
     * </pre>
     *
     * <code>string fields_terminated_by = 6;</code>
     * @return The fieldsTerminatedBy.
     */
    @java.lang.Override
    public java.lang.String getFieldsTerminatedBy() {
      java.lang.Object ref = fieldsTerminatedBy_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        fieldsTerminatedBy_ = s;
        return s;
      }
    }
    /**
     * <pre>
     * Specifies the character that separates columns within each row (line) of
     * the file.
     * </pre>
     *
     * <code>string fields_terminated_by = 6;</code>
     * @return The bytes for fieldsTerminatedBy.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString
        getFieldsTerminatedByBytes() {
      java.lang.Object ref = fieldsTerminatedBy_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        fieldsTerminatedBy_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int LINES_TERMINATED_BY_FIELD_NUMBER = 8;
    @SuppressWarnings("serial")
    private volatile java.lang.Object linesTerminatedBy_ = "";
    /**
     * <pre>
     * This is used to separate lines. If a line does not contain all fields,
     * the rest of the columns are set to their default values.
     * </pre>
     *
     * <code>string lines_terminated_by = 8;</code>
     * @return The linesTerminatedBy.
     */
    @java.lang.Override
    public java.lang.String getLinesTerminatedBy() {
      java.lang.Object ref = linesTerminatedBy_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        linesTerminatedBy_ = s;
        return s;
      }
    }
    /**
     * <pre>
     * This is used to separate lines. If a line does not contain all fields,
     * the rest of the columns are set to their default values.
     * </pre>
     *
     * <code>string lines_terminated_by = 8;</code>
     * @return The bytes for linesTerminatedBy.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString
        getLinesTerminatedByBytes() {
      java.lang.Object ref = linesTerminatedBy_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        linesTerminatedBy_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(table_)) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 1, table_);
      }
      for (int i = 0; i < columns_.size(); i++) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 2, columns_.getRaw(i));
      }
      if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(escapeCharacter_)) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 4, escapeCharacter_);
      }
      if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(quoteCharacter_)) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 5, quoteCharacter_);
      }
      if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(fieldsTerminatedBy_)) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 6, fieldsTerminatedBy_);
      }
      if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(linesTerminatedBy_)) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 8, linesTerminatedBy_);
      }
      getUnknownFields().writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(table_)) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(1, table_);
      }
      {
        int dataSize = 0;
        for (int i = 0; i < columns_.size(); i++) {
          dataSize += computeStringSizeNoTag(columns_.getRaw(i));
        }
        size += dataSize;
        size += 1 * getColumnsList().size();
      }
      if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(escapeCharacter_)) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(4, escapeCharacter_);
      }
      if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(quoteCharacter_)) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(5, quoteCharacter_);
      }
      if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(fieldsTerminatedBy_)) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(6, fieldsTerminatedBy_);
      }
      if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(linesTerminatedBy_)) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(8, linesTerminatedBy_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof com.google.cloud.sql.v1.ImportContext.SqlCsvImportOptions)) {
        return super.equals(obj);
      }
      com.google.cloud.sql.v1.ImportContext.SqlCsvImportOptions other = (com.google.cloud.sql.v1.ImportContext.SqlCsvImportOptions) obj;

      if (!getTable()
          .equals(other.getTable())) return false;
      if (!getColumnsList()
          .equals(other.getColumnsList())) return false;
      if (!getEscapeCharacter()
          .equals(other.getEscapeCharacter())) return false;
      if (!getQuoteCharacter()
          .equals(other.getQuoteCharacter())) return false;
      if (!getFieldsTerminatedBy()
          .equals(other.getFieldsTerminatedBy())) return false;
      if (!getLinesTerminatedBy()
          .equals(other.getLinesTerminatedBy())) return false;
      if (!getUnknownFields().equals(other.getUnknownFields())) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      hash = (37 * hash) + TABLE_FIELD_NUMBER;
      hash = (53 * hash) + getTable().hashCode();
      if (getColumnsCount() > 0) {
        hash = (37 * hash) + COLUMNS_FIELD_NUMBER;
        hash = (53 * hash) + getColumnsList().hashCode();
      }
      hash = (37 * hash) + ESCAPE_CHARACTER_FIELD_NUMBER;
      hash = (53 * hash) + getEscapeCharacter().hashCode();
      hash = (37 * hash) + QUOTE_CHARACTER_FIELD_NUMBER;
      hash = (53 * hash) + getQuoteCharacter().hashCode();
      hash = (37 * hash) + FIELDS_TERMINATED_BY_FIELD_NUMBER;
      hash = (53 * hash) + getFieldsTerminatedBy().hashCode();
      hash = (37 * hash) + LINES_TERMINATED_BY_FIELD_NUMBER;
      hash = (53 * hash) + getLinesTerminatedBy().hashCode();
      hash = (29 * hash) + getUnknownFields().hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static com.google.cloud.sql.v1.ImportContext.SqlCsvImportOptions parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.google.cloud.sql.v1.ImportContext.SqlCsvImportOptions parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.google.cloud.sql.v1.ImportContext.SqlCsvImportOptions parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.google.cloud.sql.v1.ImportContext.SqlCsvImportOptions parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.google.cloud.sql.v1.ImportContext.SqlCsvImportOptions parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.google.cloud.sql.v1.ImportContext.SqlCsvImportOptions parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.google.cloud.sql.v1.ImportContext.SqlCsvImportOptions parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static com.google.cloud.sql.v1.ImportContext.SqlCsvImportOptions parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static com.google.cloud.sql.v1.ImportContext.SqlCsvImportOptions parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static com.google.cloud.sql.v1.ImportContext.SqlCsvImportOptions parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static com.google.cloud.sql.v1.ImportContext.SqlCsvImportOptions parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static com.google.cloud.sql.v1.ImportContext.SqlCsvImportOptions parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(com.google.cloud.sql.v1.ImportContext.SqlCsvImportOptions prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code google.cloud.sql.v1.ImportContext.SqlCsvImportOptions}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:google.cloud.sql.v1.ImportContext.SqlCsvImportOptions)
        com.google.cloud.sql.v1.ImportContext.SqlCsvImportOptionsOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return com.google.cloud.sql.v1.CloudSqlResourcesProto.internal_static_google_cloud_sql_v1_ImportContext_SqlCsvImportOptions_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return com.google.cloud.sql.v1.CloudSqlResourcesProto.internal_static_google_cloud_sql_v1_ImportContext_SqlCsvImportOptions_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                com.google.cloud.sql.v1.ImportContext.SqlCsvImportOptions.class, com.google.cloud.sql.v1.ImportContext.SqlCsvImportOptions.Builder.class);
      }

      // Construct using com.google.cloud.sql.v1.ImportContext.SqlCsvImportOptions.newBuilder()
      private Builder() {

      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);

      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        bitField0_ = 0;
        table_ = "";
        columns_ = com.google.protobuf.LazyStringArrayList.EMPTY;
        bitField0_ = (bitField0_ & ~0x00000002);
        escapeCharacter_ = "";
        quoteCharacter_ = "";
        fieldsTerminatedBy_ = "";
        linesTerminatedBy_ = "";
        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.google.cloud.sql.v1.CloudSqlResourcesProto.internal_static_google_cloud_sql_v1_ImportContext_SqlCsvImportOptions_descriptor;
      }

      @java.lang.Override
      public com.google.cloud.sql.v1.ImportContext.SqlCsvImportOptions getDefaultInstanceForType() {
        return com.google.cloud.sql.v1.ImportContext.SqlCsvImportOptions.getDefaultInstance();
      }

      @java.lang.Override
      public com.google.cloud.sql.v1.ImportContext.SqlCsvImportOptions build() {
        com.google.cloud.sql.v1.ImportContext.SqlCsvImportOptions result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public com.google.cloud.sql.v1.ImportContext.SqlCsvImportOptions buildPartial() {
        com.google.cloud.sql.v1.ImportContext.SqlCsvImportOptions result = new com.google.cloud.sql.v1.ImportContext.SqlCsvImportOptions(this);
        buildPartialRepeatedFields(result);
        if (bitField0_ != 0) { buildPartial0(result); }
        onBuilt();
        return result;
      }

      private void buildPartialRepeatedFields(com.google.cloud.sql.v1.ImportContext.SqlCsvImportOptions result) {
        if (((bitField0_ & 0x00000002) != 0)) {
          columns_ = columns_.getUnmodifiableView();
          bitField0_ = (bitField0_ & ~0x00000002);
        }
        result.columns_ = columns_;
      }

      private void buildPartial0(com.google.cloud.sql.v1.ImportContext.SqlCsvImportOptions result) {
        int from_bitField0_ = bitField0_;
        if (((from_bitField0_ & 0x00000001) != 0)) {
          result.table_ = table_;
        }
        if (((from_bitField0_ & 0x00000004) != 0)) {
          result.escapeCharacter_ = escapeCharacter_;
        }
        if (((from_bitField0_ & 0x00000008) != 0)) {
          result.quoteCharacter_ = quoteCharacter_;
        }
        if (((from_bitField0_ & 0x00000010) != 0)) {
          result.fieldsTerminatedBy_ = fieldsTerminatedBy_;
        }
        if (((from_bitField0_ & 0x00000020) != 0)) {
          result.linesTerminatedBy_ = linesTerminatedBy_;
        }
      }

      @java.lang.Override
      public Builder clone() {
        return super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.google.cloud.sql.v1.ImportContext.SqlCsvImportOptions) {
          return mergeFrom((com.google.cloud.sql.v1.ImportContext.SqlCsvImportOptions)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(com.google.cloud.sql.v1.ImportContext.SqlCsvImportOptions other) {
        if (other == com.google.cloud.sql.v1.ImportContext.SqlCsvImportOptions.getDefaultInstance()) return this;
        if (!other.getTable().isEmpty()) {
          table_ = other.table_;
          bitField0_ |= 0x00000001;
          onChanged();
        }
        if (!other.columns_.isEmpty()) {
          if (columns_.isEmpty()) {
            columns_ = other.columns_;
            bitField0_ = (bitField0_ & ~0x00000002);
          } else {
            ensureColumnsIsMutable();
            columns_.addAll(other.columns_);
          }
          onChanged();
        }
        if (!other.getEscapeCharacter().isEmpty()) {
          escapeCharacter_ = other.escapeCharacter_;
          bitField0_ |= 0x00000004;
          onChanged();
        }
        if (!other.getQuoteCharacter().isEmpty()) {
          quoteCharacter_ = other.quoteCharacter_;
          bitField0_ |= 0x00000008;
          onChanged();
        }
        if (!other.getFieldsTerminatedBy().isEmpty()) {
          fieldsTerminatedBy_ = other.fieldsTerminatedBy_;
          bitField0_ |= 0x00000010;
          onChanged();
        }
        if (!other.getLinesTerminatedBy().isEmpty()) {
          linesTerminatedBy_ = other.linesTerminatedBy_;
          bitField0_ |= 0x00000020;
          onChanged();
        }
        this.mergeUnknownFields(other.getUnknownFields());
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        if (extensionRegistry == null) {
          throw new java.lang.NullPointerException();
        }
        try {
          boolean done = false;
          while (!done) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                done = true;
                break;
              case 10: {
                table_ = input.readStringRequireUtf8();
                bitField0_ |= 0x00000001;
                break;
              } // case 10
              case 18: {
                java.lang.String s = input.readStringRequireUtf8();
                ensureColumnsIsMutable();
                columns_.add(s);
                break;
              } // case 18
              case 34: {
                escapeCharacter_ = input.readStringRequireUtf8();
                bitField0_ |= 0x00000004;
                break;
              } // case 34
              case 42: {
                quoteCharacter_ = input.readStringRequireUtf8();
                bitField0_ |= 0x00000008;
                break;
              } // case 42
              case 50: {
                fieldsTerminatedBy_ = input.readStringRequireUtf8();
                bitField0_ |= 0x00000010;
                break;
              } // case 50
              case 66: {
                linesTerminatedBy_ = input.readStringRequireUtf8();
                bitField0_ |= 0x00000020;
                break;
              } // case 66
              default: {
                if (!super.parseUnknownField(input, extensionRegistry, tag)) {
                  done = true; // was an endgroup tag
                }
                break;
              } // default:
            } // switch (tag)
          } // while (!done)
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.unwrapIOException();
        } finally {
          onChanged();
        } // finally
        return this;
      }
      private int bitField0_;

      private java.lang.Object table_ = "";
      /**
       * <pre>
       * The table to which CSV data is imported.
       * </pre>
       *
       * <code>string table = 1;</code>
       * @return The table.
       */
      public java.lang.String getTable() {
        java.lang.Object ref = table_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          table_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <pre>
       * The table to which CSV data is imported.
       * </pre>
       *
       * <code>string table = 1;</code>
       * @return The bytes for table.
       */
      public com.google.protobuf.ByteString
          getTableBytes() {
        java.lang.Object ref = table_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          table_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       * The table to which CSV data is imported.
       * </pre>
       *
       * <code>string table = 1;</code>
       * @param value The table to set.
       * @return This builder for chaining.
       */
      public Builder setTable(
          java.lang.String value) {
        if (value == null) { throw new NullPointerException(); }
        table_ = value;
        bitField0_ |= 0x00000001;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * The table to which CSV data is imported.
       * </pre>
       *
       * <code>string table = 1;</code>
       * @return This builder for chaining.
       */
      public Builder clearTable() {
        table_ = getDefaultInstance().getTable();
        bitField0_ = (bitField0_ & ~0x00000001);
        onChanged();
        return this;
      }
      /**
       * <pre>
       * The table to which CSV data is imported.
       * </pre>
       *
       * <code>string table = 1;</code>
       * @param value The bytes for table to set.
       * @return This builder for chaining.
       */
      public Builder setTableBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) { throw new NullPointerException(); }
        checkByteStringIsUtf8(value);
        table_ = value;
        bitField0_ |= 0x00000001;
        onChanged();
        return this;
      }

      private com.google.protobuf.LazyStringList columns_ = com.google.protobuf.LazyStringArrayList.EMPTY;
      private void ensureColumnsIsMutable() {
        if (!((bitField0_ & 0x00000002) != 0)) {
          columns_ = new com.google.protobuf.LazyStringArrayList(columns_);
          bitField0_ |= 0x00000002;
         }
      }
      /**
       * <pre>
       * The columns to which CSV data is imported. If not specified, all columns
       * of the database table are loaded with CSV data.
       * </pre>
       *
       * <code>repeated string columns = 2;</code>
       * @return A list containing the columns.
       */
      public com.google.protobuf.ProtocolStringList
          getColumnsList() {
        return columns_.getUnmodifiableView();
      }
      /**
       * <pre>
       * The columns to which CSV data is imported. If not specified, all columns
       * of the database table are loaded with CSV data.
       * </pre>
       *
       * <code>repeated string columns = 2;</code>
       * @return The count of columns.
       */
      public int getColumnsCount() {
        return columns_.size();
      }
      /**
       * <pre>
       * The columns to which CSV data is imported. If not specified, all columns
       * of the database table are loaded with CSV data.
       * </pre>
       *
       * <code>repeated string columns = 2;</code>
       * @param index The index of the element to return.
       * @return The columns at the given index.
       */
      public java.lang.String getColumns(int index) {
        return columns_.get(index);
      }
      /**
       * <pre>
       * The columns to which CSV data is imported. If not specified, all columns
       * of the database table are loaded with CSV data.
       * </pre>
       *
       * <code>repeated string columns = 2;</code>
       * @param index The index of the value to return.
       * @return The bytes of the columns at the given index.
       */
      public com.google.protobuf.ByteString
          getColumnsBytes(int index) {
        return columns_.getByteString(index);
      }
      /**
       * <pre>
       * The columns to which CSV data is imported. If not specified, all columns
       * of the database table are loaded with CSV data.
       * </pre>
       *
       * <code>repeated string columns = 2;</code>
       * @param index The index to set the value at.
       * @param value The columns to set.
       * @return This builder for chaining.
       */
      public Builder setColumns(
          int index, java.lang.String value) {
        if (value == null) { throw new NullPointerException(); }
        ensureColumnsIsMutable();
        columns_.set(index, value);
        onChanged();
        return this;
      }
      /**
       * <pre>
       * The columns to which CSV data is imported. If not specified, all columns
       * of the database table are loaded with CSV data.
       * </pre>
       *
       * <code>repeated string columns = 2;</code>
       * @param value The columns to add.
       * @return This builder for chaining.
       */
      public Builder addColumns(
          java.lang.String value) {
        if (value == null) { throw new NullPointerException(); }
        ensureColumnsIsMutable();
        columns_.add(value);
        onChanged();
        return this;
      }
      /**
       * <pre>
       * The columns to which CSV data is imported. If not specified, all columns
       * of the database table are loaded with CSV data.
       * </pre>
       *
       * <code>repeated string columns = 2;</code>
       * @param values The columns to add.
       * @return This builder for chaining.
       */
      public Builder addAllColumns(
          java.lang.Iterable<java.lang.String> values) {
        ensureColumnsIsMutable();
        com.google.protobuf.AbstractMessageLite.Builder.addAll(
            values, columns_);
        onChanged();
        return this;
      }
      /**
       * <pre>
       * The columns to which CSV data is imported. If not specified, all columns
       * of the database table are loaded with CSV data.
       * </pre>
       *
       * <code>repeated string columns = 2;</code>
       * @return This builder for chaining.
       */
      public Builder clearColumns() {
        columns_ = com.google.protobuf.LazyStringArrayList.EMPTY;
        bitField0_ = (bitField0_ & ~0x00000002);
        onChanged();
        return this;
      }
      /**
       * <pre>
       * The columns to which CSV data is imported. If not specified, all columns
       * of the database table are loaded with CSV data.
       * </pre>
       *
       * <code>repeated string columns = 2;</code>
       * @param value The bytes of the columns to add.
       * @return This builder for chaining.
       */
      public Builder addColumnsBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) { throw new NullPointerException(); }
        checkByteStringIsUtf8(value);
        ensureColumnsIsMutable();
        columns_.add(value);
        onChanged();
        return this;
      }

      private java.lang.Object escapeCharacter_ = "";
      /**
       * <pre>
       * Specifies the character that should appear before a data character that
       * needs to be escaped.
       * </pre>
       *
       * <code>string escape_character = 4;</code>
       * @return The escapeCharacter.
       */
      public java.lang.String getEscapeCharacter() {
        java.lang.Object ref = escapeCharacter_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          escapeCharacter_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <pre>
       * Specifies the character that should appear before a data character that
       * needs to be escaped.
       * </pre>
       *
       * <code>string escape_character = 4;</code>
       * @return The bytes for escapeCharacter.
       */
      public com.google.protobuf.ByteString
          getEscapeCharacterBytes() {
        java.lang.Object ref = escapeCharacter_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          escapeCharacter_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       * Specifies the character that should appear before a data character that
       * needs to be escaped.
       * </pre>
       *
       * <code>string escape_character = 4;</code>
       * @param value The escapeCharacter to set.
       * @return This builder for chaining.
       */
      public Builder setEscapeCharacter(
          java.lang.String value) {
        if (value == null) { throw new NullPointerException(); }
        escapeCharacter_ = value;
        bitField0_ |= 0x00000004;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Specifies the character that should appear before a data character that
       * needs to be escaped.
       * </pre>
       *
       * <code>string escape_character = 4;</code>
       * @return This builder for chaining.
       */
      public Builder clearEscapeCharacter() {
        escapeCharacter_ = getDefaultInstance().getEscapeCharacter();
        bitField0_ = (bitField0_ & ~0x00000004);
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Specifies the character that should appear before a data character that
       * needs to be escaped.
       * </pre>
       *
       * <code>string escape_character = 4;</code>
       * @param value The bytes for escapeCharacter to set.
       * @return This builder for chaining.
       */
      public Builder setEscapeCharacterBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) { throw new NullPointerException(); }
        checkByteStringIsUtf8(value);
        escapeCharacter_ = value;
        bitField0_ |= 0x00000004;
        onChanged();
        return this;
      }

      private java.lang.Object quoteCharacter_ = "";
      /**
       * <pre>
       * Specifies the quoting character to be used when a data value is quoted.
       * </pre>
       *
       * <code>string quote_character = 5;</code>
       * @return The quoteCharacter.
       */
      public java.lang.String getQuoteCharacter() {
        java.lang.Object ref = quoteCharacter_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          quoteCharacter_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <pre>
       * Specifies the quoting character to be used when a data value is quoted.
       * </pre>
       *
       * <code>string quote_character = 5;</code>
       * @return The bytes for quoteCharacter.
       */
      public com.google.protobuf.ByteString
          getQuoteCharacterBytes() {
        java.lang.Object ref = quoteCharacter_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          quoteCharacter_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       * Specifies the quoting character to be used when a data value is quoted.
       * </pre>
       *
       * <code>string quote_character = 5;</code>
       * @param value The quoteCharacter to set.
       * @return This builder for chaining.
       */
      public Builder setQuoteCharacter(
          java.lang.String value) {
        if (value == null) { throw new NullPointerException(); }
        quoteCharacter_ = value;
        bitField0_ |= 0x00000008;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Specifies the quoting character to be used when a data value is quoted.
       * </pre>
       *
       * <code>string quote_character = 5;</code>
       * @return This builder for chaining.
       */
      public Builder clearQuoteCharacter() {
        quoteCharacter_ = getDefaultInstance().getQuoteCharacter();
        bitField0_ = (bitField0_ & ~0x00000008);
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Specifies the quoting character to be used when a data value is quoted.
       * </pre>
       *
       * <code>string quote_character = 5;</code>
       * @param value The bytes for quoteCharacter to set.
       * @return This builder for chaining.
       */
      public Builder setQuoteCharacterBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) { throw new NullPointerException(); }
        checkByteStringIsUtf8(value);
        quoteCharacter_ = value;
        bitField0_ |= 0x00000008;
        onChanged();
        return this;
      }

      private java.lang.Object fieldsTerminatedBy_ = "";
      /**
       * <pre>
       * Specifies the character that separates columns within each row (line) of
       * the file.
       * </pre>
       *
       * <code>string fields_terminated_by = 6;</code>
       * @return The fieldsTerminatedBy.
       */
      public java.lang.String getFieldsTerminatedBy() {
        java.lang.Object ref = fieldsTerminatedBy_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          fieldsTerminatedBy_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <pre>
       * Specifies the character that separates columns within each row (line) of
       * the file.
       * </pre>
       *
       * <code>string fields_terminated_by = 6;</code>
       * @return The bytes for fieldsTerminatedBy.
       */
      public com.google.protobuf.ByteString
          getFieldsTerminatedByBytes() {
        java.lang.Object ref = fieldsTerminatedBy_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          fieldsTerminatedBy_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       * Specifies the character that separates columns within each row (line) of
       * the file.
       * </pre>
       *
       * <code>string fields_terminated_by = 6;</code>
       * @param value The fieldsTerminatedBy to set.
       * @return This builder for chaining.
       */
      public Builder setFieldsTerminatedBy(
          java.lang.String value) {
        if (value == null) { throw new NullPointerException(); }
        fieldsTerminatedBy_ = value;
        bitField0_ |= 0x00000010;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Specifies the character that separates columns within each row (line) of
       * the file.
       * </pre>
       *
       * <code>string fields_terminated_by = 6;</code>
       * @return This builder for chaining.
       */
      public Builder clearFieldsTerminatedBy() {
        fieldsTerminatedBy_ = getDefaultInstance().getFieldsTerminatedBy();
        bitField0_ = (bitField0_ & ~0x00000010);
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Specifies the character that separates columns within each row (line) of
       * the file.
       * </pre>
       *
       * <code>string fields_terminated_by = 6;</code>
       * @param value The bytes for fieldsTerminatedBy to set.
       * @return This builder for chaining.
       */
      public Builder setFieldsTerminatedByBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) { throw new NullPointerException(); }
        checkByteStringIsUtf8(value);
        fieldsTerminatedBy_ = value;
        bitField0_ |= 0x00000010;
        onChanged();
        return this;
      }

      private java.lang.Object linesTerminatedBy_ = "";
      /**
       * <pre>
       * This is used to separate lines. If a line does not contain all fields,
       * the rest of the columns are set to their default values.
       * </pre>
       *
       * <code>string lines_terminated_by = 8;</code>
       * @return The linesTerminatedBy.
       */
      public java.lang.String getLinesTerminatedBy() {
        java.lang.Object ref = linesTerminatedBy_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          linesTerminatedBy_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <pre>
       * This is used to separate lines. If a line does not contain all fields,
       * the rest of the columns are set to their default values.
       * </pre>
       *
       * <code>string lines_terminated_by = 8;</code>
       * @return The bytes for linesTerminatedBy.
       */
      public com.google.protobuf.ByteString
          getLinesTerminatedByBytes() {
        java.lang.Object ref = linesTerminatedBy_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          linesTerminatedBy_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       * This is used to separate lines. If a line does not contain all fields,
       * the rest of the columns are set to their default values.
       * </pre>
       *
       * <code>string lines_terminated_by = 8;</code>
       * @param value The linesTerminatedBy to set.
       * @return This builder for chaining.
       */
      public Builder setLinesTerminatedBy(
          java.lang.String value) {
        if (value == null) { throw new NullPointerException(); }
        linesTerminatedBy_ = value;
        bitField0_ |= 0x00000020;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * This is used to separate lines. If a line does not contain all fields,
       * the rest of the columns are set to their default values.
       * </pre>
       *
       * <code>string lines_terminated_by = 8;</code>
       * @return This builder for chaining.
       */
      public Builder clearLinesTerminatedBy() {
        linesTerminatedBy_ = getDefaultInstance().getLinesTerminatedBy();
        bitField0_ = (bitField0_ & ~0x00000020);
        onChanged();
        return this;
      }
      /**
       * <pre>
       * This is used to separate lines. If a line does not contain all fields,
       * the rest of the columns are set to their default values.
       * </pre>
       *
       * <code>string lines_terminated_by = 8;</code>
       * @param value The bytes for linesTerminatedBy to set.
       * @return This builder for chaining.
       */
      public Builder setLinesTerminatedByBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) { throw new NullPointerException(); }
        checkByteStringIsUtf8(value);
        linesTerminatedBy_ = value;
        bitField0_ |= 0x00000020;
        onChanged();
        return this;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:google.cloud.sql.v1.ImportContext.SqlCsvImportOptions)
    }

    // @@protoc_insertion_point(class_scope:google.cloud.sql.v1.ImportContext.SqlCsvImportOptions)
    private static final com.google.cloud.sql.v1.ImportContext.SqlCsvImportOptions DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new com.google.cloud.sql.v1.ImportContext.SqlCsvImportOptions();
    }

    public static com.google.cloud.sql.v1.ImportContext.SqlCsvImportOptions getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<SqlCsvImportOptions>
        PARSER = new com.google.protobuf.AbstractParser<SqlCsvImportOptions>() {
      @java.lang.Override
      public SqlCsvImportOptions parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        Builder builder = newBuilder();
        try {
          builder.mergeFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.setUnfinishedMessage(builder.buildPartial());
        } catch (com.google.protobuf.UninitializedMessageException e) {
          throw e.asInvalidProtocolBufferException().setUnfinishedMessage(builder.buildPartial());
        } catch (java.io.IOException e) {
          throw new com.google.protobuf.InvalidProtocolBufferException(e)
              .setUnfinishedMessage(builder.buildPartial());
        }
        return builder.buildPartial();
      }
    };

    public static com.google.protobuf.Parser<SqlCsvImportOptions> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<SqlCsvImportOptions> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.cloud.sql.v1.ImportContext.SqlCsvImportOptions getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface SqlBakImportOptionsOrBuilder extends
      // @@protoc_insertion_point(interface_extends:google.cloud.sql.v1.ImportContext.SqlBakImportOptions)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>.google.cloud.sql.v1.ImportContext.SqlBakImportOptions.EncryptionOptions encryption_options = 1;</code>
     * @return Whether the encryptionOptions field is set.
     */
    boolean hasEncryptionOptions();
    /**
     * <code>.google.cloud.sql.v1.ImportContext.SqlBakImportOptions.EncryptionOptions encryption_options = 1;</code>
     * @return The encryptionOptions.
     */
    com.google.cloud.sql.v1.ImportContext.SqlBakImportOptions.EncryptionOptions getEncryptionOptions();
    /**
     * <code>.google.cloud.sql.v1.ImportContext.SqlBakImportOptions.EncryptionOptions encryption_options = 1;</code>
     */
    com.google.cloud.sql.v1.ImportContext.SqlBakImportOptions.EncryptionOptionsOrBuilder getEncryptionOptionsOrBuilder();
  }
  /**
   * Protobuf type {@code google.cloud.sql.v1.ImportContext.SqlBakImportOptions}
   */
  public static final class SqlBakImportOptions extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:google.cloud.sql.v1.ImportContext.SqlBakImportOptions)
      SqlBakImportOptionsOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use SqlBakImportOptions.newBuilder() to construct.
    private SqlBakImportOptions(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private SqlBakImportOptions() {
    }

    @java.lang.Override
    @SuppressWarnings({"unused"})
    protected java.lang.Object newInstance(
        UnusedPrivateParameter unused) {
      return new SqlBakImportOptions();
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.google.cloud.sql.v1.CloudSqlResourcesProto.internal_static_google_cloud_sql_v1_ImportContext_SqlBakImportOptions_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.google.cloud.sql.v1.CloudSqlResourcesProto.internal_static_google_cloud_sql_v1_ImportContext_SqlBakImportOptions_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.google.cloud.sql.v1.ImportContext.SqlBakImportOptions.class, com.google.cloud.sql.v1.ImportContext.SqlBakImportOptions.Builder.class);
    }

    public interface EncryptionOptionsOrBuilder extends
        // @@protoc_insertion_point(interface_extends:google.cloud.sql.v1.ImportContext.SqlBakImportOptions.EncryptionOptions)
        com.google.protobuf.MessageOrBuilder {

      /**
       * <pre>
       * Path to the Certificate (.cer) in Cloud Storage, in the form
       * **gs://bucketName/fileName**. The instance must have
       * write permissions to the bucket and read access to the file.
       * </pre>
       *
       * <code>string cert_path = 1;</code>
       * @return The certPath.
       */
      java.lang.String getCertPath();
      /**
       * <pre>
       * Path to the Certificate (.cer) in Cloud Storage, in the form
       * **gs://bucketName/fileName**. The instance must have
       * write permissions to the bucket and read access to the file.
       * </pre>
       *
       * <code>string cert_path = 1;</code>
       * @return The bytes for certPath.
       */
      com.google.protobuf.ByteString
          getCertPathBytes();

      /**
       * <pre>
       * Path to the Certificate Private Key (.pvk)  in Cloud Storage, in the
       * form **gs://bucketName/fileName**. The instance must have
       * write permissions to the bucket and read access to the file.
       * </pre>
       *
       * <code>string pvk_path = 2;</code>
       * @return The pvkPath.
       */
      java.lang.String getPvkPath();
      /**
       * <pre>
       * Path to the Certificate Private Key (.pvk)  in Cloud Storage, in the
       * form **gs://bucketName/fileName**. The instance must have
       * write permissions to the bucket and read access to the file.
       * </pre>
       *
       * <code>string pvk_path = 2;</code>
       * @return The bytes for pvkPath.
       */
      com.google.protobuf.ByteString
          getPvkPathBytes();

      /**
       * <pre>
       * Password that encrypts the private key
       * </pre>
       *
       * <code>string pvk_password = 3;</code>
       * @return The pvkPassword.
       */
      java.lang.String getPvkPassword();
      /**
       * <pre>
       * Password that encrypts the private key
       * </pre>
       *
       * <code>string pvk_password = 3;</code>
       * @return The bytes for pvkPassword.
       */
      com.google.protobuf.ByteString
          getPvkPasswordBytes();
    }
    /**
     * Protobuf type {@code google.cloud.sql.v1.ImportContext.SqlBakImportOptions.EncryptionOptions}
     */
    public static final class EncryptionOptions extends
        com.google.protobuf.GeneratedMessageV3 implements
        // @@protoc_insertion_point(message_implements:google.cloud.sql.v1.ImportContext.SqlBakImportOptions.EncryptionOptions)
        EncryptionOptionsOrBuilder {
    private static final long serialVersionUID = 0L;
      // Use EncryptionOptions.newBuilder() to construct.
      private EncryptionOptions(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
        super(builder);
      }
      private EncryptionOptions() {
        certPath_ = "";
        pvkPath_ = "";
        pvkPassword_ = "";
      }

      @java.lang.Override
      @SuppressWarnings({"unused"})
      protected java.lang.Object newInstance(
          UnusedPrivateParameter unused) {
        return new EncryptionOptions();
      }

      @java.lang.Override
      public final com.google.protobuf.UnknownFieldSet
      getUnknownFields() {
        return this.unknownFields;
      }
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return com.google.cloud.sql.v1.CloudSqlResourcesProto.internal_static_google_cloud_sql_v1_ImportContext_SqlBakImportOptions_EncryptionOptions_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return com.google.cloud.sql.v1.CloudSqlResourcesProto.internal_static_google_cloud_sql_v1_ImportContext_SqlBakImportOptions_EncryptionOptions_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                com.google.cloud.sql.v1.ImportContext.SqlBakImportOptions.EncryptionOptions.class, com.google.cloud.sql.v1.ImportContext.SqlBakImportOptions.EncryptionOptions.Builder.class);
      }

      public static final int CERT_PATH_FIELD_NUMBER = 1;
      @SuppressWarnings("serial")
      private volatile java.lang.Object certPath_ = "";
      /**
       * <pre>
       * Path to the Certificate (.cer) in Cloud Storage, in the form
       * **gs://bucketName/fileName**. The instance must have
       * write permissions to the bucket and read access to the file.
       * </pre>
       *
       * <code>string cert_path = 1;</code>
       * @return The certPath.
       */
      @java.lang.Override
      public java.lang.String getCertPath() {
        java.lang.Object ref = certPath_;
        if (ref instanceof java.lang.String) {
          return (java.lang.String) ref;
        } else {
          com.google.protobuf.ByteString bs = 
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          certPath_ = s;
          return s;
        }
      }
      /**
       * <pre>
       * Path to the Certificate (.cer) in Cloud Storage, in the form
       * **gs://bucketName/fileName**. The instance must have
       * write permissions to the bucket and read access to the file.
       * </pre>
       *
       * <code>string cert_path = 1;</code>
       * @return The bytes for certPath.
       */
      @java.lang.Override
      public com.google.protobuf.ByteString
          getCertPathBytes() {
        java.lang.Object ref = certPath_;
        if (ref instanceof java.lang.String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          certPath_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }

      public static final int PVK_PATH_FIELD_NUMBER = 2;
      @SuppressWarnings("serial")
      private volatile java.lang.Object pvkPath_ = "";
      /**
       * <pre>
       * Path to the Certificate Private Key (.pvk)  in Cloud Storage, in the
       * form **gs://bucketName/fileName**. The instance must have
       * write permissions to the bucket and read access to the file.
       * </pre>
       *
       * <code>string pvk_path = 2;</code>
       * @return The pvkPath.
       */
      @java.lang.Override
      public java.lang.String getPvkPath() {
        java.lang.Object ref = pvkPath_;
        if (ref instanceof java.lang.String) {
          return (java.lang.String) ref;
        } else {
          com.google.protobuf.ByteString bs = 
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          pvkPath_ = s;
          return s;
        }
      }
      /**
       * <pre>
       * Path to the Certificate Private Key (.pvk)  in Cloud Storage, in the
       * form **gs://bucketName/fileName**. The instance must have
       * write permissions to the bucket and read access to the file.
       * </pre>
       *
       * <code>string pvk_path = 2;</code>
       * @return The bytes for pvkPath.
       */
      @java.lang.Override
      public com.google.protobuf.ByteString
          getPvkPathBytes() {
        java.lang.Object ref = pvkPath_;
        if (ref instanceof java.lang.String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          pvkPath_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }

      public static final int PVK_PASSWORD_FIELD_NUMBER = 3;
      @SuppressWarnings("serial")
      private volatile java.lang.Object pvkPassword_ = "";
      /**
       * <pre>
       * Password that encrypts the private key
       * </pre>
       *
       * <code>string pvk_password = 3;</code>
       * @return The pvkPassword.
       */
      @java.lang.Override
      public java.lang.String getPvkPassword() {
        java.lang.Object ref = pvkPassword_;
        if (ref instanceof java.lang.String) {
          return (java.lang.String) ref;
        } else {
          com.google.protobuf.ByteString bs = 
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          pvkPassword_ = s;
          return s;
        }
      }
      /**
       * <pre>
       * Password that encrypts the private key
       * </pre>
       *
       * <code>string pvk_password = 3;</code>
       * @return The bytes for pvkPassword.
       */
      @java.lang.Override
      public com.google.protobuf.ByteString
          getPvkPasswordBytes() {
        java.lang.Object ref = pvkPassword_;
        if (ref instanceof java.lang.String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          pvkPassword_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }

      private byte memoizedIsInitialized = -1;
      @java.lang.Override
      public final boolean isInitialized() {
        byte isInitialized = memoizedIsInitialized;
        if (isInitialized == 1) return true;
        if (isInitialized == 0) return false;

        memoizedIsInitialized = 1;
        return true;
      }

      @java.lang.Override
      public void writeTo(com.google.protobuf.CodedOutputStream output)
                          throws java.io.IOException {
        if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(certPath_)) {
          com.google.protobuf.GeneratedMessageV3.writeString(output, 1, certPath_);
        }
        if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(pvkPath_)) {
          com.google.protobuf.GeneratedMessageV3.writeString(output, 2, pvkPath_);
        }
        if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(pvkPassword_)) {
          com.google.protobuf.GeneratedMessageV3.writeString(output, 3, pvkPassword_);
        }
        getUnknownFields().writeTo(output);
      }

      @java.lang.Override
      public int getSerializedSize() {
        int size = memoizedSize;
        if (size != -1) return size;

        size = 0;
        if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(certPath_)) {
          size += com.google.protobuf.GeneratedMessageV3.computeStringSize(1, certPath_);
        }
        if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(pvkPath_)) {
          size += com.google.protobuf.GeneratedMessageV3.computeStringSize(2, pvkPath_);
        }
        if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(pvkPassword_)) {
          size += com.google.protobuf.GeneratedMessageV3.computeStringSize(3, pvkPassword_);
        }
        size += getUnknownFields().getSerializedSize();
        memoizedSize = size;
        return size;
      }

      @java.lang.Override
      public boolean equals(final java.lang.Object obj) {
        if (obj == this) {
         return true;
        }
        if (!(obj instanceof com.google.cloud.sql.v1.ImportContext.SqlBakImportOptions.EncryptionOptions)) {
          return super.equals(obj);
        }
        com.google.cloud.sql.v1.ImportContext.SqlBakImportOptions.EncryptionOptions other = (com.google.cloud.sql.v1.ImportContext.SqlBakImportOptions.EncryptionOptions) obj;

        if (!getCertPath()
            .equals(other.getCertPath())) return false;
        if (!getPvkPath()
            .equals(other.getPvkPath())) return false;
        if (!getPvkPassword()
            .equals(other.getPvkPassword())) return false;
        if (!getUnknownFields().equals(other.getUnknownFields())) return false;
        return true;
      }

      @java.lang.Override
      public int hashCode() {
        if (memoizedHashCode != 0) {
          return memoizedHashCode;
        }
        int hash = 41;
        hash = (19 * hash) + getDescriptor().hashCode();
        hash = (37 * hash) + CERT_PATH_FIELD_NUMBER;
        hash = (53 * hash) + getCertPath().hashCode();
        hash = (37 * hash) + PVK_PATH_FIELD_NUMBER;
        hash = (53 * hash) + getPvkPath().hashCode();
        hash = (37 * hash) + PVK_PASSWORD_FIELD_NUMBER;
        hash = (53 * hash) + getPvkPassword().hashCode();
        hash = (29 * hash) + getUnknownFields().hashCode();
        memoizedHashCode = hash;
        return hash;
      }

      public static com.google.cloud.sql.v1.ImportContext.SqlBakImportOptions.EncryptionOptions parseFrom(
          java.nio.ByteBuffer data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static com.google.cloud.sql.v1.ImportContext.SqlBakImportOptions.EncryptionOptions parseFrom(
          java.nio.ByteBuffer data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static com.google.cloud.sql.v1.ImportContext.SqlBakImportOptions.EncryptionOptions parseFrom(
          com.google.protobuf.ByteString data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static com.google.cloud.sql.v1.ImportContext.SqlBakImportOptions.EncryptionOptions parseFrom(
          com.google.protobuf.ByteString data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static com.google.cloud.sql.v1.ImportContext.SqlBakImportOptions.EncryptionOptions parseFrom(byte[] data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static com.google.cloud.sql.v1.ImportContext.SqlBakImportOptions.EncryptionOptions parseFrom(
          byte[] data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static com.google.cloud.sql.v1.ImportContext.SqlBakImportOptions.EncryptionOptions parseFrom(java.io.InputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input);
      }
      public static com.google.cloud.sql.v1.ImportContext.SqlBakImportOptions.EncryptionOptions parseFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input, extensionRegistry);
      }
      public static com.google.cloud.sql.v1.ImportContext.SqlBakImportOptions.EncryptionOptions parseDelimitedFrom(java.io.InputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseDelimitedWithIOException(PARSER, input);
      }
      public static com.google.cloud.sql.v1.ImportContext.SqlBakImportOptions.EncryptionOptions parseDelimitedFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
      }
      public static com.google.cloud.sql.v1.ImportContext.SqlBakImportOptions.EncryptionOptions parseFrom(
          com.google.protobuf.CodedInputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input);
      }
      public static com.google.cloud.sql.v1.ImportContext.SqlBakImportOptions.EncryptionOptions parseFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input, extensionRegistry);
      }

      @java.lang.Override
      public Builder newBuilderForType() { return newBuilder(); }
      public static Builder newBuilder() {
        return DEFAULT_INSTANCE.toBuilder();
      }
      public static Builder newBuilder(com.google.cloud.sql.v1.ImportContext.SqlBakImportOptions.EncryptionOptions prototype) {
        return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
      }
      @java.lang.Override
      public Builder toBuilder() {
        return this == DEFAULT_INSTANCE
            ? new Builder() : new Builder().mergeFrom(this);
      }

      @java.lang.Override
      protected Builder newBuilderForType(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        Builder builder = new Builder(parent);
        return builder;
      }
      /**
       * Protobuf type {@code google.cloud.sql.v1.ImportContext.SqlBakImportOptions.EncryptionOptions}
       */
      public static final class Builder extends
          com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
          // @@protoc_insertion_point(builder_implements:google.cloud.sql.v1.ImportContext.SqlBakImportOptions.EncryptionOptions)
          com.google.cloud.sql.v1.ImportContext.SqlBakImportOptions.EncryptionOptionsOrBuilder {
        public static final com.google.protobuf.Descriptors.Descriptor
            getDescriptor() {
          return com.google.cloud.sql.v1.CloudSqlResourcesProto.internal_static_google_cloud_sql_v1_ImportContext_SqlBakImportOptions_EncryptionOptions_descriptor;
        }

        @java.lang.Override
        protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
            internalGetFieldAccessorTable() {
          return com.google.cloud.sql.v1.CloudSqlResourcesProto.internal_static_google_cloud_sql_v1_ImportContext_SqlBakImportOptions_EncryptionOptions_fieldAccessorTable
              .ensureFieldAccessorsInitialized(
                  com.google.cloud.sql.v1.ImportContext.SqlBakImportOptions.EncryptionOptions.class, com.google.cloud.sql.v1.ImportContext.SqlBakImportOptions.EncryptionOptions.Builder.class);
        }

        // Construct using com.google.cloud.sql.v1.ImportContext.SqlBakImportOptions.EncryptionOptions.newBuilder()
        private Builder() {

        }

        private Builder(
            com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
          super(parent);

        }
        @java.lang.Override
        public Builder clear() {
          super.clear();
          bitField0_ = 0;
          certPath_ = "";
          pvkPath_ = "";
          pvkPassword_ = "";
          return this;
        }

        @java.lang.Override
        public com.google.protobuf.Descriptors.Descriptor
            getDescriptorForType() {
          return com.google.cloud.sql.v1.CloudSqlResourcesProto.internal_static_google_cloud_sql_v1_ImportContext_SqlBakImportOptions_EncryptionOptions_descriptor;
        }

        @java.lang.Override
        public com.google.cloud.sql.v1.ImportContext.SqlBakImportOptions.EncryptionOptions getDefaultInstanceForType() {
          return com.google.cloud.sql.v1.ImportContext.SqlBakImportOptions.EncryptionOptions.getDefaultInstance();
        }

        @java.lang.Override
        public com.google.cloud.sql.v1.ImportContext.SqlBakImportOptions.EncryptionOptions build() {
          com.google.cloud.sql.v1.ImportContext.SqlBakImportOptions.EncryptionOptions result = buildPartial();
          if (!result.isInitialized()) {
            throw newUninitializedMessageException(result);
          }
          return result;
        }

        @java.lang.Override
        public com.google.cloud.sql.v1.ImportContext.SqlBakImportOptions.EncryptionOptions buildPartial() {
          com.google.cloud.sql.v1.ImportContext.SqlBakImportOptions.EncryptionOptions result = new com.google.cloud.sql.v1.ImportContext.SqlBakImportOptions.EncryptionOptions(this);
          if (bitField0_ != 0) { buildPartial0(result); }
          onBuilt();
          return result;
        }

        private void buildPartial0(com.google.cloud.sql.v1.ImportContext.SqlBakImportOptions.EncryptionOptions result) {
          int from_bitField0_ = bitField0_;
          if (((from_bitField0_ & 0x00000001) != 0)) {
            result.certPath_ = certPath_;
          }
          if (((from_bitField0_ & 0x00000002) != 0)) {
            result.pvkPath_ = pvkPath_;
          }
          if (((from_bitField0_ & 0x00000004) != 0)) {
            result.pvkPassword_ = pvkPassword_;
          }
        }

        @java.lang.Override
        public Builder clone() {
          return super.clone();
        }
        @java.lang.Override
        public Builder setField(
            com.google.protobuf.Descriptors.FieldDescriptor field,
            java.lang.Object value) {
          return super.setField(field, value);
        }
        @java.lang.Override
        public Builder clearField(
            com.google.protobuf.Descriptors.FieldDescriptor field) {
          return super.clearField(field);
        }
        @java.lang.Override
        public Builder clearOneof(
            com.google.protobuf.Descriptors.OneofDescriptor oneof) {
          return super.clearOneof(oneof);
        }
        @java.lang.Override
        public Builder setRepeatedField(
            com.google.protobuf.Descriptors.FieldDescriptor field,
            int index, java.lang.Object value) {
          return super.setRepeatedField(field, index, value);
        }
        @java.lang.Override
        public Builder addRepeatedField(
            com.google.protobuf.Descriptors.FieldDescriptor field,
            java.lang.Object value) {
          return super.addRepeatedField(field, value);
        }
        @java.lang.Override
        public Builder mergeFrom(com.google.protobuf.Message other) {
          if (other instanceof com.google.cloud.sql.v1.ImportContext.SqlBakImportOptions.EncryptionOptions) {
            return mergeFrom((com.google.cloud.sql.v1.ImportContext.SqlBakImportOptions.EncryptionOptions)other);
          } else {
            super.mergeFrom(other);
            return this;
          }
        }

        public Builder mergeFrom(com.google.cloud.sql.v1.ImportContext.SqlBakImportOptions.EncryptionOptions other) {
          if (other == com.google.cloud.sql.v1.ImportContext.SqlBakImportOptions.EncryptionOptions.getDefaultInstance()) return this;
          if (!other.getCertPath().isEmpty()) {
            certPath_ = other.certPath_;
            bitField0_ |= 0x00000001;
            onChanged();
          }
          if (!other.getPvkPath().isEmpty()) {
            pvkPath_ = other.pvkPath_;
            bitField0_ |= 0x00000002;
            onChanged();
          }
          if (!other.getPvkPassword().isEmpty()) {
            pvkPassword_ = other.pvkPassword_;
            bitField0_ |= 0x00000004;
            onChanged();
          }
          this.mergeUnknownFields(other.getUnknownFields());
          onChanged();
          return this;
        }

        @java.lang.Override
        public final boolean isInitialized() {
          return true;
        }

        @java.lang.Override
        public Builder mergeFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
          if (extensionRegistry == null) {
            throw new java.lang.NullPointerException();
          }
          try {
            boolean done = false;
            while (!done) {
              int tag = input.readTag();
              switch (tag) {
                case 0:
                  done = true;
                  break;
                case 10: {
                  certPath_ = input.readStringRequireUtf8();
                  bitField0_ |= 0x00000001;
                  break;
                } // case 10
                case 18: {
                  pvkPath_ = input.readStringRequireUtf8();
                  bitField0_ |= 0x00000002;
                  break;
                } // case 18
                case 26: {
                  pvkPassword_ = input.readStringRequireUtf8();
                  bitField0_ |= 0x00000004;
                  break;
                } // case 26
                default: {
                  if (!super.parseUnknownField(input, extensionRegistry, tag)) {
                    done = true; // was an endgroup tag
                  }
                  break;
                } // default:
              } // switch (tag)
            } // while (!done)
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            throw e.unwrapIOException();
          } finally {
            onChanged();
          } // finally
          return this;
        }
        private int bitField0_;

        private java.lang.Object certPath_ = "";
        /**
         * <pre>
         * Path to the Certificate (.cer) in Cloud Storage, in the form
         * **gs://bucketName/fileName**. The instance must have
         * write permissions to the bucket and read access to the file.
         * </pre>
         *
         * <code>string cert_path = 1;</code>
         * @return The certPath.
         */
        public java.lang.String getCertPath() {
          java.lang.Object ref = certPath_;
          if (!(ref instanceof java.lang.String)) {
            com.google.protobuf.ByteString bs =
                (com.google.protobuf.ByteString) ref;
            java.lang.String s = bs.toStringUtf8();
            certPath_ = s;
            return s;
          } else {
            return (java.lang.String) ref;
          }
        }
        /**
         * <pre>
         * Path to the Certificate (.cer) in Cloud Storage, in the form
         * **gs://bucketName/fileName**. The instance must have
         * write permissions to the bucket and read access to the file.
         * </pre>
         *
         * <code>string cert_path = 1;</code>
         * @return The bytes for certPath.
         */
        public com.google.protobuf.ByteString
            getCertPathBytes() {
          java.lang.Object ref = certPath_;
          if (ref instanceof String) {
            com.google.protobuf.ByteString b = 
                com.google.protobuf.ByteString.copyFromUtf8(
                    (java.lang.String) ref);
            certPath_ = b;
            return b;
          } else {
            return (com.google.protobuf.ByteString) ref;
          }
        }
        /**
         * <pre>
         * Path to the Certificate (.cer) in Cloud Storage, in the form
         * **gs://bucketName/fileName**. The instance must have
         * write permissions to the bucket and read access to the file.
         * </pre>
         *
         * <code>string cert_path = 1;</code>
         * @param value The certPath to set.
         * @return This builder for chaining.
         */
        public Builder setCertPath(
            java.lang.String value) {
          if (value == null) { throw new NullPointerException(); }
          certPath_ = value;
          bitField0_ |= 0x00000001;
          onChanged();
          return this;
        }
        /**
         * <pre>
         * Path to the Certificate (.cer) in Cloud Storage, in the form
         * **gs://bucketName/fileName**. The instance must have
         * write permissions to the bucket and read access to the file.
         * </pre>
         *
         * <code>string cert_path = 1;</code>
         * @return This builder for chaining.
         */
        public Builder clearCertPath() {
          certPath_ = getDefaultInstance().getCertPath();
          bitField0_ = (bitField0_ & ~0x00000001);
          onChanged();
          return this;
        }
        /**
         * <pre>
         * Path to the Certificate (.cer) in Cloud Storage, in the form
         * **gs://bucketName/fileName**. The instance must have
         * write permissions to the bucket and read access to the file.
         * </pre>
         *
         * <code>string cert_path = 1;</code>
         * @param value The bytes for certPath to set.
         * @return This builder for chaining.
         */
        public Builder setCertPathBytes(
            com.google.protobuf.ByteString value) {
          if (value == null) { throw new NullPointerException(); }
          checkByteStringIsUtf8(value);
          certPath_ = value;
          bitField0_ |= 0x00000001;
          onChanged();
          return this;
        }

        private java.lang.Object pvkPath_ = "";
        /**
         * <pre>
         * Path to the Certificate Private Key (.pvk)  in Cloud Storage, in the
         * form **gs://bucketName/fileName**. The instance must have
         * write permissions to the bucket and read access to the file.
         * </pre>
         *
         * <code>string pvk_path = 2;</code>
         * @return The pvkPath.
         */
        public java.lang.String getPvkPath() {
          java.lang.Object ref = pvkPath_;
          if (!(ref instanceof java.lang.String)) {
            com.google.protobuf.ByteString bs =
                (com.google.protobuf.ByteString) ref;
            java.lang.String s = bs.toStringUtf8();
            pvkPath_ = s;
            return s;
          } else {
            return (java.lang.String) ref;
          }
        }
        /**
         * <pre>
         * Path to the Certificate Private Key (.pvk)  in Cloud Storage, in the
         * form **gs://bucketName/fileName**. The instance must have
         * write permissions to the bucket and read access to the file.
         * </pre>
         *
         * <code>string pvk_path = 2;</code>
         * @return The bytes for pvkPath.
         */
        public com.google.protobuf.ByteString
            getPvkPathBytes() {
          java.lang.Object ref = pvkPath_;
          if (ref instanceof String) {
            com.google.protobuf.ByteString b = 
                com.google.protobuf.ByteString.copyFromUtf8(
                    (java.lang.String) ref);
            pvkPath_ = b;
            return b;
          } else {
            return (com.google.protobuf.ByteString) ref;
          }
        }
        /**
         * <pre>
         * Path to the Certificate Private Key (.pvk)  in Cloud Storage, in the
         * form **gs://bucketName/fileName**. The instance must have
         * write permissions to the bucket and read access to the file.
         * </pre>
         *
         * <code>string pvk_path = 2;</code>
         * @param value The pvkPath to set.
         * @return This builder for chaining.
         */
        public Builder setPvkPath(
            java.lang.String value) {
          if (value == null) { throw new NullPointerException(); }
          pvkPath_ = value;
          bitField0_ |= 0x00000002;
          onChanged();
          return this;
        }
        /**
         * <pre>
         * Path to the Certificate Private Key (.pvk)  in Cloud Storage, in the
         * form **gs://bucketName/fileName**. The instance must have
         * write permissions to the bucket and read access to the file.
         * </pre>
         *
         * <code>string pvk_path = 2;</code>
         * @return This builder for chaining.
         */
        public Builder clearPvkPath() {
          pvkPath_ = getDefaultInstance().getPvkPath();
          bitField0_ = (bitField0_ & ~0x00000002);
          onChanged();
          return this;
        }
        /**
         * <pre>
         * Path to the Certificate Private Key (.pvk)  in Cloud Storage, in the
         * form **gs://bucketName/fileName**. The instance must have
         * write permissions to the bucket and read access to the file.
         * </pre>
         *
         * <code>string pvk_path = 2;</code>
         * @param value The bytes for pvkPath to set.
         * @return This builder for chaining.
         */
        public Builder setPvkPathBytes(
            com.google.protobuf.ByteString value) {
          if (value == null) { throw new NullPointerException(); }
          checkByteStringIsUtf8(value);
          pvkPath_ = value;
          bitField0_ |= 0x00000002;
          onChanged();
          return this;
        }

        private java.lang.Object pvkPassword_ = "";
        /**
         * <pre>
         * Password that encrypts the private key
         * </pre>
         *
         * <code>string pvk_password = 3;</code>
         * @return The pvkPassword.
         */
        public java.lang.String getPvkPassword() {
          java.lang.Object ref = pvkPassword_;
          if (!(ref instanceof java.lang.String)) {
            com.google.protobuf.ByteString bs =
                (com.google.protobuf.ByteString) ref;
            java.lang.String s = bs.toStringUtf8();
            pvkPassword_ = s;
            return s;
          } else {
            return (java.lang.String) ref;
          }
        }
        /**
         * <pre>
         * Password that encrypts the private key
         * </pre>
         *
         * <code>string pvk_password = 3;</code>
         * @return The bytes for pvkPassword.
         */
        public com.google.protobuf.ByteString
            getPvkPasswordBytes() {
          java.lang.Object ref = pvkPassword_;
          if (ref instanceof String) {
            com.google.protobuf.ByteString b = 
                com.google.protobuf.ByteString.copyFromUtf8(
                    (java.lang.String) ref);
            pvkPassword_ = b;
            return b;
          } else {
            return (com.google.protobuf.ByteString) ref;
          }
        }
        /**
         * <pre>
         * Password that encrypts the private key
         * </pre>
         *
         * <code>string pvk_password = 3;</code>
         * @param value The pvkPassword to set.
         * @return This builder for chaining.
         */
        public Builder setPvkPassword(
            java.lang.String value) {
          if (value == null) { throw new NullPointerException(); }
          pvkPassword_ = value;
          bitField0_ |= 0x00000004;
          onChanged();
          return this;
        }
        /**
         * <pre>
         * Password that encrypts the private key
         * </pre>
         *
         * <code>string pvk_password = 3;</code>
         * @return This builder for chaining.
         */
        public Builder clearPvkPassword() {
          pvkPassword_ = getDefaultInstance().getPvkPassword();
          bitField0_ = (bitField0_ & ~0x00000004);
          onChanged();
          return this;
        }
        /**
         * <pre>
         * Password that encrypts the private key
         * </pre>
         *
         * <code>string pvk_password = 3;</code>
         * @param value The bytes for pvkPassword to set.
         * @return This builder for chaining.
         */
        public Builder setPvkPasswordBytes(
            com.google.protobuf.ByteString value) {
          if (value == null) { throw new NullPointerException(); }
          checkByteStringIsUtf8(value);
          pvkPassword_ = value;
          bitField0_ |= 0x00000004;
          onChanged();
          return this;
        }
        @java.lang.Override
        public final Builder setUnknownFields(
            final com.google.protobuf.UnknownFieldSet unknownFields) {
          return super.setUnknownFields(unknownFields);
        }

        @java.lang.Override
        public final Builder mergeUnknownFields(
            final com.google.protobuf.UnknownFieldSet unknownFields) {
          return super.mergeUnknownFields(unknownFields);
        }


        // @@protoc_insertion_point(builder_scope:google.cloud.sql.v1.ImportContext.SqlBakImportOptions.EncryptionOptions)
      }

      // @@protoc_insertion_point(class_scope:google.cloud.sql.v1.ImportContext.SqlBakImportOptions.EncryptionOptions)
      private static final com.google.cloud.sql.v1.ImportContext.SqlBakImportOptions.EncryptionOptions DEFAULT_INSTANCE;
      static {
        DEFAULT_INSTANCE = new com.google.cloud.sql.v1.ImportContext.SqlBakImportOptions.EncryptionOptions();
      }

      public static com.google.cloud.sql.v1.ImportContext.SqlBakImportOptions.EncryptionOptions getDefaultInstance() {
        return DEFAULT_INSTANCE;
      }

      private static final com.google.protobuf.Parser<EncryptionOptions>
          PARSER = new com.google.protobuf.AbstractParser<EncryptionOptions>() {
        @java.lang.Override
        public EncryptionOptions parsePartialFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
          Builder builder = newBuilder();
          try {
            builder.mergeFrom(input, extensionRegistry);
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            throw e.setUnfinishedMessage(builder.buildPartial());
          } catch (com.google.protobuf.UninitializedMessageException e) {
            throw e.asInvalidProtocolBufferException().setUnfinishedMessage(builder.buildPartial());
          } catch (java.io.IOException e) {
            throw new com.google.protobuf.InvalidProtocolBufferException(e)
                .setUnfinishedMessage(builder.buildPartial());
          }
          return builder.buildPartial();
        }
      };

      public static com.google.protobuf.Parser<EncryptionOptions> parser() {
        return PARSER;
      }

      @java.lang.Override
      public com.google.protobuf.Parser<EncryptionOptions> getParserForType() {
        return PARSER;
      }

      @java.lang.Override
      public com.google.cloud.sql.v1.ImportContext.SqlBakImportOptions.EncryptionOptions getDefaultInstanceForType() {
        return DEFAULT_INSTANCE;
      }

    }

    public static final int ENCRYPTION_OPTIONS_FIELD_NUMBER = 1;
    private com.google.cloud.sql.v1.ImportContext.SqlBakImportOptions.EncryptionOptions encryptionOptions_;
    /**
     * <code>.google.cloud.sql.v1.ImportContext.SqlBakImportOptions.EncryptionOptions encryption_options = 1;</code>
     * @return Whether the encryptionOptions field is set.
     */
    @java.lang.Override
    public boolean hasEncryptionOptions() {
      return encryptionOptions_ != null;
    }
    /**
     * <code>.google.cloud.sql.v1.ImportContext.SqlBakImportOptions.EncryptionOptions encryption_options = 1;</code>
     * @return The encryptionOptions.
     */
    @java.lang.Override
    public com.google.cloud.sql.v1.ImportContext.SqlBakImportOptions.EncryptionOptions getEncryptionOptions() {
      return encryptionOptions_ == null ? com.google.cloud.sql.v1.ImportContext.SqlBakImportOptions.EncryptionOptions.getDefaultInstance() : encryptionOptions_;
    }
    /**
     * <code>.google.cloud.sql.v1.ImportContext.SqlBakImportOptions.EncryptionOptions encryption_options = 1;</code>
     */
    @java.lang.Override
    public com.google.cloud.sql.v1.ImportContext.SqlBakImportOptions.EncryptionOptionsOrBuilder getEncryptionOptionsOrBuilder() {
      return encryptionOptions_ == null ? com.google.cloud.sql.v1.ImportContext.SqlBakImportOptions.EncryptionOptions.getDefaultInstance() : encryptionOptions_;
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (encryptionOptions_ != null) {
        output.writeMessage(1, getEncryptionOptions());
      }
      getUnknownFields().writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (encryptionOptions_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, getEncryptionOptions());
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof com.google.cloud.sql.v1.ImportContext.SqlBakImportOptions)) {
        return super.equals(obj);
      }
      com.google.cloud.sql.v1.ImportContext.SqlBakImportOptions other = (com.google.cloud.sql.v1.ImportContext.SqlBakImportOptions) obj;

      if (hasEncryptionOptions() != other.hasEncryptionOptions()) return false;
      if (hasEncryptionOptions()) {
        if (!getEncryptionOptions()
            .equals(other.getEncryptionOptions())) return false;
      }
      if (!getUnknownFields().equals(other.getUnknownFields())) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      if (hasEncryptionOptions()) {
        hash = (37 * hash) + ENCRYPTION_OPTIONS_FIELD_NUMBER;
        hash = (53 * hash) + getEncryptionOptions().hashCode();
      }
      hash = (29 * hash) + getUnknownFields().hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static com.google.cloud.sql.v1.ImportContext.SqlBakImportOptions parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.google.cloud.sql.v1.ImportContext.SqlBakImportOptions parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.google.cloud.sql.v1.ImportContext.SqlBakImportOptions parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.google.cloud.sql.v1.ImportContext.SqlBakImportOptions parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.google.cloud.sql.v1.ImportContext.SqlBakImportOptions parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.google.cloud.sql.v1.ImportContext.SqlBakImportOptions parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.google.cloud.sql.v1.ImportContext.SqlBakImportOptions parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static com.google.cloud.sql.v1.ImportContext.SqlBakImportOptions parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static com.google.cloud.sql.v1.ImportContext.SqlBakImportOptions parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static com.google.cloud.sql.v1.ImportContext.SqlBakImportOptions parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static com.google.cloud.sql.v1.ImportContext.SqlBakImportOptions parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static com.google.cloud.sql.v1.ImportContext.SqlBakImportOptions parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(com.google.cloud.sql.v1.ImportContext.SqlBakImportOptions prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code google.cloud.sql.v1.ImportContext.SqlBakImportOptions}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:google.cloud.sql.v1.ImportContext.SqlBakImportOptions)
        com.google.cloud.sql.v1.ImportContext.SqlBakImportOptionsOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return com.google.cloud.sql.v1.CloudSqlResourcesProto.internal_static_google_cloud_sql_v1_ImportContext_SqlBakImportOptions_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return com.google.cloud.sql.v1.CloudSqlResourcesProto.internal_static_google_cloud_sql_v1_ImportContext_SqlBakImportOptions_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                com.google.cloud.sql.v1.ImportContext.SqlBakImportOptions.class, com.google.cloud.sql.v1.ImportContext.SqlBakImportOptions.Builder.class);
      }

      // Construct using com.google.cloud.sql.v1.ImportContext.SqlBakImportOptions.newBuilder()
      private Builder() {

      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);

      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        bitField0_ = 0;
        encryptionOptions_ = null;
        if (encryptionOptionsBuilder_ != null) {
          encryptionOptionsBuilder_.dispose();
          encryptionOptionsBuilder_ = null;
        }
        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.google.cloud.sql.v1.CloudSqlResourcesProto.internal_static_google_cloud_sql_v1_ImportContext_SqlBakImportOptions_descriptor;
      }

      @java.lang.Override
      public com.google.cloud.sql.v1.ImportContext.SqlBakImportOptions getDefaultInstanceForType() {
        return com.google.cloud.sql.v1.ImportContext.SqlBakImportOptions.getDefaultInstance();
      }

      @java.lang.Override
      public com.google.cloud.sql.v1.ImportContext.SqlBakImportOptions build() {
        com.google.cloud.sql.v1.ImportContext.SqlBakImportOptions result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public com.google.cloud.sql.v1.ImportContext.SqlBakImportOptions buildPartial() {
        com.google.cloud.sql.v1.ImportContext.SqlBakImportOptions result = new com.google.cloud.sql.v1.ImportContext.SqlBakImportOptions(this);
        if (bitField0_ != 0) { buildPartial0(result); }
        onBuilt();
        return result;
      }

      private void buildPartial0(com.google.cloud.sql.v1.ImportContext.SqlBakImportOptions result) {
        int from_bitField0_ = bitField0_;
        if (((from_bitField0_ & 0x00000001) != 0)) {
          result.encryptionOptions_ = encryptionOptionsBuilder_ == null
              ? encryptionOptions_
              : encryptionOptionsBuilder_.build();
        }
      }

      @java.lang.Override
      public Builder clone() {
        return super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.google.cloud.sql.v1.ImportContext.SqlBakImportOptions) {
          return mergeFrom((com.google.cloud.sql.v1.ImportContext.SqlBakImportOptions)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(com.google.cloud.sql.v1.ImportContext.SqlBakImportOptions other) {
        if (other == com.google.cloud.sql.v1.ImportContext.SqlBakImportOptions.getDefaultInstance()) return this;
        if (other.hasEncryptionOptions()) {
          mergeEncryptionOptions(other.getEncryptionOptions());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        if (extensionRegistry == null) {
          throw new java.lang.NullPointerException();
        }
        try {
          boolean done = false;
          while (!done) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                done = true;
                break;
              case 10: {
                input.readMessage(
                    getEncryptionOptionsFieldBuilder().getBuilder(),
                    extensionRegistry);
                bitField0_ |= 0x00000001;
                break;
              } // case 10
              default: {
                if (!super.parseUnknownField(input, extensionRegistry, tag)) {
                  done = true; // was an endgroup tag
                }
                break;
              } // default:
            } // switch (tag)
          } // while (!done)
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.unwrapIOException();
        } finally {
          onChanged();
        } // finally
        return this;
      }
      private int bitField0_;

      private com.google.cloud.sql.v1.ImportContext.SqlBakImportOptions.EncryptionOptions encryptionOptions_;
      private com.google.protobuf.SingleFieldBuilderV3<
          com.google.cloud.sql.v1.ImportContext.SqlBakImportOptions.EncryptionOptions, com.google.cloud.sql.v1.ImportContext.SqlBakImportOptions.EncryptionOptions.Builder, com.google.cloud.sql.v1.ImportContext.SqlBakImportOptions.EncryptionOptionsOrBuilder> encryptionOptionsBuilder_;
      /**
       * <code>.google.cloud.sql.v1.ImportContext.SqlBakImportOptions.EncryptionOptions encryption_options = 1;</code>
       * @return Whether the encryptionOptions field is set.
       */
      public boolean hasEncryptionOptions() {
        return ((bitField0_ & 0x00000001) != 0);
      }
      /**
       * <code>.google.cloud.sql.v1.ImportContext.SqlBakImportOptions.EncryptionOptions encryption_options = 1;</code>
       * @return The encryptionOptions.
       */
      public com.google.cloud.sql.v1.ImportContext.SqlBakImportOptions.EncryptionOptions getEncryptionOptions() {
        if (encryptionOptionsBuilder_ == null) {
          return encryptionOptions_ == null ? com.google.cloud.sql.v1.ImportContext.SqlBakImportOptions.EncryptionOptions.getDefaultInstance() : encryptionOptions_;
        } else {
          return encryptionOptionsBuilder_.getMessage();
        }
      }
      /**
       * <code>.google.cloud.sql.v1.ImportContext.SqlBakImportOptions.EncryptionOptions encryption_options = 1;</code>
       */
      public Builder setEncryptionOptions(com.google.cloud.sql.v1.ImportContext.SqlBakImportOptions.EncryptionOptions value) {
        if (encryptionOptionsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          encryptionOptions_ = value;
        } else {
          encryptionOptionsBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000001;
        onChanged();
        return this;
      }
      /**
       * <code>.google.cloud.sql.v1.ImportContext.SqlBakImportOptions.EncryptionOptions encryption_options = 1;</code>
       */
      public Builder setEncryptionOptions(
          com.google.cloud.sql.v1.ImportContext.SqlBakImportOptions.EncryptionOptions.Builder builderForValue) {
        if (encryptionOptionsBuilder_ == null) {
          encryptionOptions_ = builderForValue.build();
        } else {
          encryptionOptionsBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000001;
        onChanged();
        return this;
      }
      /**
       * <code>.google.cloud.sql.v1.ImportContext.SqlBakImportOptions.EncryptionOptions encryption_options = 1;</code>
       */
      public Builder mergeEncryptionOptions(com.google.cloud.sql.v1.ImportContext.SqlBakImportOptions.EncryptionOptions value) {
        if (encryptionOptionsBuilder_ == null) {
          if (((bitField0_ & 0x00000001) != 0) &&
            encryptionOptions_ != null &&
            encryptionOptions_ != com.google.cloud.sql.v1.ImportContext.SqlBakImportOptions.EncryptionOptions.getDefaultInstance()) {
            getEncryptionOptionsBuilder().mergeFrom(value);
          } else {
            encryptionOptions_ = value;
          }
        } else {
          encryptionOptionsBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x00000001;
        onChanged();
        return this;
      }
      /**
       * <code>.google.cloud.sql.v1.ImportContext.SqlBakImportOptions.EncryptionOptions encryption_options = 1;</code>
       */
      public Builder clearEncryptionOptions() {
        bitField0_ = (bitField0_ & ~0x00000001);
        encryptionOptions_ = null;
        if (encryptionOptionsBuilder_ != null) {
          encryptionOptionsBuilder_.dispose();
          encryptionOptionsBuilder_ = null;
        }
        onChanged();
        return this;
      }
      /**
       * <code>.google.cloud.sql.v1.ImportContext.SqlBakImportOptions.EncryptionOptions encryption_options = 1;</code>
       */
      public com.google.cloud.sql.v1.ImportContext.SqlBakImportOptions.EncryptionOptions.Builder getEncryptionOptionsBuilder() {
        bitField0_ |= 0x00000001;
        onChanged();
        return getEncryptionOptionsFieldBuilder().getBuilder();
      }
      /**
       * <code>.google.cloud.sql.v1.ImportContext.SqlBakImportOptions.EncryptionOptions encryption_options = 1;</code>
       */
      public com.google.cloud.sql.v1.ImportContext.SqlBakImportOptions.EncryptionOptionsOrBuilder getEncryptionOptionsOrBuilder() {
        if (encryptionOptionsBuilder_ != null) {
          return encryptionOptionsBuilder_.getMessageOrBuilder();
        } else {
          return encryptionOptions_ == null ?
              com.google.cloud.sql.v1.ImportContext.SqlBakImportOptions.EncryptionOptions.getDefaultInstance() : encryptionOptions_;
        }
      }
      /**
       * <code>.google.cloud.sql.v1.ImportContext.SqlBakImportOptions.EncryptionOptions encryption_options = 1;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          com.google.cloud.sql.v1.ImportContext.SqlBakImportOptions.EncryptionOptions, com.google.cloud.sql.v1.ImportContext.SqlBakImportOptions.EncryptionOptions.Builder, com.google.cloud.sql.v1.ImportContext.SqlBakImportOptions.EncryptionOptionsOrBuilder> 
          getEncryptionOptionsFieldBuilder() {
        if (encryptionOptionsBuilder_ == null) {
          encryptionOptionsBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              com.google.cloud.sql.v1.ImportContext.SqlBakImportOptions.EncryptionOptions, com.google.cloud.sql.v1.ImportContext.SqlBakImportOptions.EncryptionOptions.Builder, com.google.cloud.sql.v1.ImportContext.SqlBakImportOptions.EncryptionOptionsOrBuilder>(
                  getEncryptionOptions(),
                  getParentForChildren(),
                  isClean());
          encryptionOptions_ = null;
        }
        return encryptionOptionsBuilder_;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:google.cloud.sql.v1.ImportContext.SqlBakImportOptions)
    }

    // @@protoc_insertion_point(class_scope:google.cloud.sql.v1.ImportContext.SqlBakImportOptions)
    private static final com.google.cloud.sql.v1.ImportContext.SqlBakImportOptions DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new com.google.cloud.sql.v1.ImportContext.SqlBakImportOptions();
    }

    public static com.google.cloud.sql.v1.ImportContext.SqlBakImportOptions getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<SqlBakImportOptions>
        PARSER = new com.google.protobuf.AbstractParser<SqlBakImportOptions>() {
      @java.lang.Override
      public SqlBakImportOptions parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        Builder builder = newBuilder();
        try {
          builder.mergeFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.setUnfinishedMessage(builder.buildPartial());
        } catch (com.google.protobuf.UninitializedMessageException e) {
          throw e.asInvalidProtocolBufferException().setUnfinishedMessage(builder.buildPartial());
        } catch (java.io.IOException e) {
          throw new com.google.protobuf.InvalidProtocolBufferException(e)
              .setUnfinishedMessage(builder.buildPartial());
        }
        return builder.buildPartial();
      }
    };

    public static com.google.protobuf.Parser<SqlBakImportOptions> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<SqlBakImportOptions> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.cloud.sql.v1.ImportContext.SqlBakImportOptions getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public static final int URI_FIELD_NUMBER = 1;
  @SuppressWarnings("serial")
  private volatile java.lang.Object uri_ = "";
  /**
   * <pre>
   * Path to the import file in Cloud Storage, in the form
   * **gs://bucketName/fileName**. Compressed gzip files (.gz) are supported
   * when **fileType** is **SQL**. The instance must have
   * write permissions to the bucket and read access to the file.
   * </pre>
   *
   * <code>string uri = 1;</code>
   * @return The uri.
   */
  @java.lang.Override
  public java.lang.String getUri() {
    java.lang.Object ref = uri_;
    if (ref instanceof java.lang.String) {
      return (java.lang.String) ref;
    } else {
      com.google.protobuf.ByteString bs = 
          (com.google.protobuf.ByteString) ref;
      java.lang.String s = bs.toStringUtf8();
      uri_ = s;
      return s;
    }
  }
  /**
   * <pre>
   * Path to the import file in Cloud Storage, in the form
   * **gs://bucketName/fileName**. Compressed gzip files (.gz) are supported
   * when **fileType** is **SQL**. The instance must have
   * write permissions to the bucket and read access to the file.
   * </pre>
   *
   * <code>string uri = 1;</code>
   * @return The bytes for uri.
   */
  @java.lang.Override
  public com.google.protobuf.ByteString
      getUriBytes() {
    java.lang.Object ref = uri_;
    if (ref instanceof java.lang.String) {
      com.google.protobuf.ByteString b = 
          com.google.protobuf.ByteString.copyFromUtf8(
              (java.lang.String) ref);
      uri_ = b;
      return b;
    } else {
      return (com.google.protobuf.ByteString) ref;
    }
  }

  public static final int DATABASE_FIELD_NUMBER = 2;
  @SuppressWarnings("serial")
  private volatile java.lang.Object database_ = "";
  /**
   * <pre>
   * The target database for the import. If **fileType** is **SQL**, this field
   * is required only if the import file does not specify a database, and is
   * overridden by any database specification in the import file. If
   * **fileType** is **CSV**, one database must be specified.
   * </pre>
   *
   * <code>string database = 2;</code>
   * @return The database.
   */
  @java.lang.Override
  public java.lang.String getDatabase() {
    java.lang.Object ref = database_;
    if (ref instanceof java.lang.String) {
      return (java.lang.String) ref;
    } else {
      com.google.protobuf.ByteString bs = 
          (com.google.protobuf.ByteString) ref;
      java.lang.String s = bs.toStringUtf8();
      database_ = s;
      return s;
    }
  }
  /**
   * <pre>
   * The target database for the import. If **fileType** is **SQL**, this field
   * is required only if the import file does not specify a database, and is
   * overridden by any database specification in the import file. If
   * **fileType** is **CSV**, one database must be specified.
   * </pre>
   *
   * <code>string database = 2;</code>
   * @return The bytes for database.
   */
  @java.lang.Override
  public com.google.protobuf.ByteString
      getDatabaseBytes() {
    java.lang.Object ref = database_;
    if (ref instanceof java.lang.String) {
      com.google.protobuf.ByteString b = 
          com.google.protobuf.ByteString.copyFromUtf8(
              (java.lang.String) ref);
      database_ = b;
      return b;
    } else {
      return (com.google.protobuf.ByteString) ref;
    }
  }

  public static final int KIND_FIELD_NUMBER = 3;
  @SuppressWarnings("serial")
  private volatile java.lang.Object kind_ = "";
  /**
   * <pre>
   * This is always **sql#importContext**.
   * </pre>
   *
   * <code>string kind = 3;</code>
   * @return The kind.
   */
  @java.lang.Override
  public java.lang.String getKind() {
    java.lang.Object ref = kind_;
    if (ref instanceof java.lang.String) {
      return (java.lang.String) ref;
    } else {
      com.google.protobuf.ByteString bs = 
          (com.google.protobuf.ByteString) ref;
      java.lang.String s = bs.toStringUtf8();
      kind_ = s;
      return s;
    }
  }
  /**
   * <pre>
   * This is always **sql#importContext**.
   * </pre>
   *
   * <code>string kind = 3;</code>
   * @return The bytes for kind.
   */
  @java.lang.Override
  public com.google.protobuf.ByteString
      getKindBytes() {
    java.lang.Object ref = kind_;
    if (ref instanceof java.lang.String) {
      com.google.protobuf.ByteString b = 
          com.google.protobuf.ByteString.copyFromUtf8(
              (java.lang.String) ref);
      kind_ = b;
      return b;
    } else {
      return (com.google.protobuf.ByteString) ref;
    }
  }

  public static final int FILE_TYPE_FIELD_NUMBER = 4;
  private int fileType_ = 0;
  /**
   * <pre>
   * The file type for the specified uri. &lt;br&gt;**SQL**: The file
   * contains SQL statements. &lt;br&gt;**CSV**: The file contains CSV data.
   * </pre>
   *
   * <code>.google.cloud.sql.v1.SqlFileType file_type = 4;</code>
   * @return The enum numeric value on the wire for fileType.
   */
  @java.lang.Override public int getFileTypeValue() {
    return fileType_;
  }
  /**
   * <pre>
   * The file type for the specified uri. &lt;br&gt;**SQL**: The file
   * contains SQL statements. &lt;br&gt;**CSV**: The file contains CSV data.
   * </pre>
   *
   * <code>.google.cloud.sql.v1.SqlFileType file_type = 4;</code>
   * @return The fileType.
   */
  @java.lang.Override public com.google.cloud.sql.v1.SqlFileType getFileType() {
    com.google.cloud.sql.v1.SqlFileType result = com.google.cloud.sql.v1.SqlFileType.forNumber(fileType_);
    return result == null ? com.google.cloud.sql.v1.SqlFileType.UNRECOGNIZED : result;
  }

  public static final int CSV_IMPORT_OPTIONS_FIELD_NUMBER = 5;
  private com.google.cloud.sql.v1.ImportContext.SqlCsvImportOptions csvImportOptions_;
  /**
   * <pre>
   * Options for importing data as CSV.
   * </pre>
   *
   * <code>.google.cloud.sql.v1.ImportContext.SqlCsvImportOptions csv_import_options = 5;</code>
   * @return Whether the csvImportOptions field is set.
   */
  @java.lang.Override
  public boolean hasCsvImportOptions() {
    return csvImportOptions_ != null;
  }
  /**
   * <pre>
   * Options for importing data as CSV.
   * </pre>
   *
   * <code>.google.cloud.sql.v1.ImportContext.SqlCsvImportOptions csv_import_options = 5;</code>
   * @return The csvImportOptions.
   */
  @java.lang.Override
  public com.google.cloud.sql.v1.ImportContext.SqlCsvImportOptions getCsvImportOptions() {
    return csvImportOptions_ == null ? com.google.cloud.sql.v1.ImportContext.SqlCsvImportOptions.getDefaultInstance() : csvImportOptions_;
  }
  /**
   * <pre>
   * Options for importing data as CSV.
   * </pre>
   *
   * <code>.google.cloud.sql.v1.ImportContext.SqlCsvImportOptions csv_import_options = 5;</code>
   */
  @java.lang.Override
  public com.google.cloud.sql.v1.ImportContext.SqlCsvImportOptionsOrBuilder getCsvImportOptionsOrBuilder() {
    return csvImportOptions_ == null ? com.google.cloud.sql.v1.ImportContext.SqlCsvImportOptions.getDefaultInstance() : csvImportOptions_;
  }

  public static final int IMPORT_USER_FIELD_NUMBER = 6;
  @SuppressWarnings("serial")
  private volatile java.lang.Object importUser_ = "";
  /**
   * <pre>
   * The PostgreSQL user for this import operation. PostgreSQL instances only.
   * </pre>
   *
   * <code>string import_user = 6;</code>
   * @return The importUser.
   */
  @java.lang.Override
  public java.lang.String getImportUser() {
    java.lang.Object ref = importUser_;
    if (ref instanceof java.lang.String) {
      return (java.lang.String) ref;
    } else {
      com.google.protobuf.ByteString bs = 
          (com.google.protobuf.ByteString) ref;
      java.lang.String s = bs.toStringUtf8();
      importUser_ = s;
      return s;
    }
  }
  /**
   * <pre>
   * The PostgreSQL user for this import operation. PostgreSQL instances only.
   * </pre>
   *
   * <code>string import_user = 6;</code>
   * @return The bytes for importUser.
   */
  @java.lang.Override
  public com.google.protobuf.ByteString
      getImportUserBytes() {
    java.lang.Object ref = importUser_;
    if (ref instanceof java.lang.String) {
      com.google.protobuf.ByteString b = 
          com.google.protobuf.ByteString.copyFromUtf8(
              (java.lang.String) ref);
      importUser_ = b;
      return b;
    } else {
      return (com.google.protobuf.ByteString) ref;
    }
  }

  public static final int BAK_IMPORT_OPTIONS_FIELD_NUMBER = 7;
  private com.google.cloud.sql.v1.ImportContext.SqlBakImportOptions bakImportOptions_;
  /**
   * <pre>
   * Import parameters specific to SQL Server .BAK files
   * </pre>
   *
   * <code>.google.cloud.sql.v1.ImportContext.SqlBakImportOptions bak_import_options = 7;</code>
   * @return Whether the bakImportOptions field is set.
   */
  @java.lang.Override
  public boolean hasBakImportOptions() {
    return bakImportOptions_ != null;
  }
  /**
   * <pre>
   * Import parameters specific to SQL Server .BAK files
   * </pre>
   *
   * <code>.google.cloud.sql.v1.ImportContext.SqlBakImportOptions bak_import_options = 7;</code>
   * @return The bakImportOptions.
   */
  @java.lang.Override
  public com.google.cloud.sql.v1.ImportContext.SqlBakImportOptions getBakImportOptions() {
    return bakImportOptions_ == null ? com.google.cloud.sql.v1.ImportContext.SqlBakImportOptions.getDefaultInstance() : bakImportOptions_;
  }
  /**
   * <pre>
   * Import parameters specific to SQL Server .BAK files
   * </pre>
   *
   * <code>.google.cloud.sql.v1.ImportContext.SqlBakImportOptions bak_import_options = 7;</code>
   */
  @java.lang.Override
  public com.google.cloud.sql.v1.ImportContext.SqlBakImportOptionsOrBuilder getBakImportOptionsOrBuilder() {
    return bakImportOptions_ == null ? com.google.cloud.sql.v1.ImportContext.SqlBakImportOptions.getDefaultInstance() : bakImportOptions_;
  }

  private byte memoizedIsInitialized = -1;
  @java.lang.Override
  public final boolean isInitialized() {
    byte isInitialized = memoizedIsInitialized;
    if (isInitialized == 1) return true;
    if (isInitialized == 0) return false;

    memoizedIsInitialized = 1;
    return true;
  }

  @java.lang.Override
  public void writeTo(com.google.protobuf.CodedOutputStream output)
                      throws java.io.IOException {
    if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(uri_)) {
      com.google.protobuf.GeneratedMessageV3.writeString(output, 1, uri_);
    }
    if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(database_)) {
      com.google.protobuf.GeneratedMessageV3.writeString(output, 2, database_);
    }
    if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(kind_)) {
      com.google.protobuf.GeneratedMessageV3.writeString(output, 3, kind_);
    }
    if (fileType_ != com.google.cloud.sql.v1.SqlFileType.SQL_FILE_TYPE_UNSPECIFIED.getNumber()) {
      output.writeEnum(4, fileType_);
    }
    if (csvImportOptions_ != null) {
      output.writeMessage(5, getCsvImportOptions());
    }
    if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(importUser_)) {
      com.google.protobuf.GeneratedMessageV3.writeString(output, 6, importUser_);
    }
    if (bakImportOptions_ != null) {
      output.writeMessage(7, getBakImportOptions());
    }
    getUnknownFields().writeTo(output);
  }

  @java.lang.Override
  public int getSerializedSize() {
    int size = memoizedSize;
    if (size != -1) return size;

    size = 0;
    if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(uri_)) {
      size += com.google.protobuf.GeneratedMessageV3.computeStringSize(1, uri_);
    }
    if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(database_)) {
      size += com.google.protobuf.GeneratedMessageV3.computeStringSize(2, database_);
    }
    if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(kind_)) {
      size += com.google.protobuf.GeneratedMessageV3.computeStringSize(3, kind_);
    }
    if (fileType_ != com.google.cloud.sql.v1.SqlFileType.SQL_FILE_TYPE_UNSPECIFIED.getNumber()) {
      size += com.google.protobuf.CodedOutputStream
        .computeEnumSize(4, fileType_);
    }
    if (csvImportOptions_ != null) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(5, getCsvImportOptions());
    }
    if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(importUser_)) {
      size += com.google.protobuf.GeneratedMessageV3.computeStringSize(6, importUser_);
    }
    if (bakImportOptions_ != null) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(7, getBakImportOptions());
    }
    size += getUnknownFields().getSerializedSize();
    memoizedSize = size;
    return size;
  }

  @java.lang.Override
  public boolean equals(final java.lang.Object obj) {
    if (obj == this) {
     return true;
    }
    if (!(obj instanceof com.google.cloud.sql.v1.ImportContext)) {
      return super.equals(obj);
    }
    com.google.cloud.sql.v1.ImportContext other = (com.google.cloud.sql.v1.ImportContext) obj;

    if (!getUri()
        .equals(other.getUri())) return false;
    if (!getDatabase()
        .equals(other.getDatabase())) return false;
    if (!getKind()
        .equals(other.getKind())) return false;
    if (fileType_ != other.fileType_) return false;
    if (hasCsvImportOptions() != other.hasCsvImportOptions()) return false;
    if (hasCsvImportOptions()) {
      if (!getCsvImportOptions()
          .equals(other.getCsvImportOptions())) return false;
    }
    if (!getImportUser()
        .equals(other.getImportUser())) return false;
    if (hasBakImportOptions() != other.hasBakImportOptions()) return false;
    if (hasBakImportOptions()) {
      if (!getBakImportOptions()
          .equals(other.getBakImportOptions())) return false;
    }
    if (!getUnknownFields().equals(other.getUnknownFields())) return false;
    return true;
  }

  @java.lang.Override
  public int hashCode() {
    if (memoizedHashCode != 0) {
      return memoizedHashCode;
    }
    int hash = 41;
    hash = (19 * hash) + getDescriptor().hashCode();
    hash = (37 * hash) + URI_FIELD_NUMBER;
    hash = (53 * hash) + getUri().hashCode();
    hash = (37 * hash) + DATABASE_FIELD_NUMBER;
    hash = (53 * hash) + getDatabase().hashCode();
    hash = (37 * hash) + KIND_FIELD_NUMBER;
    hash = (53 * hash) + getKind().hashCode();
    hash = (37 * hash) + FILE_TYPE_FIELD_NUMBER;
    hash = (53 * hash) + fileType_;
    if (hasCsvImportOptions()) {
      hash = (37 * hash) + CSV_IMPORT_OPTIONS_FIELD_NUMBER;
      hash = (53 * hash) + getCsvImportOptions().hashCode();
    }
    hash = (37 * hash) + IMPORT_USER_FIELD_NUMBER;
    hash = (53 * hash) + getImportUser().hashCode();
    if (hasBakImportOptions()) {
      hash = (37 * hash) + BAK_IMPORT_OPTIONS_FIELD_NUMBER;
      hash = (53 * hash) + getBakImportOptions().hashCode();
    }
    hash = (29 * hash) + getUnknownFields().hashCode();
    memoizedHashCode = hash;
    return hash;
  }

  public static com.google.cloud.sql.v1.ImportContext parseFrom(
      java.nio.ByteBuffer data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static com.google.cloud.sql.v1.ImportContext parseFrom(
      java.nio.ByteBuffer data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static com.google.cloud.sql.v1.ImportContext parseFrom(
      com.google.protobuf.ByteString data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static com.google.cloud.sql.v1.ImportContext parseFrom(
      com.google.protobuf.ByteString data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static com.google.cloud.sql.v1.ImportContext parseFrom(byte[] data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static com.google.cloud.sql.v1.ImportContext parseFrom(
      byte[] data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static com.google.cloud.sql.v1.ImportContext parseFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input);
  }
  public static com.google.cloud.sql.v1.ImportContext parseFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input, extensionRegistry);
  }
  public static com.google.cloud.sql.v1.ImportContext parseDelimitedFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseDelimitedWithIOException(PARSER, input);
  }
  public static com.google.cloud.sql.v1.ImportContext parseDelimitedFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
  }
  public static com.google.cloud.sql.v1.ImportContext parseFrom(
      com.google.protobuf.CodedInputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input);
  }
  public static com.google.cloud.sql.v1.ImportContext parseFrom(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input, extensionRegistry);
  }

  @java.lang.Override
  public Builder newBuilderForType() { return newBuilder(); }
  public static Builder newBuilder() {
    return DEFAULT_INSTANCE.toBuilder();
  }
  public static Builder newBuilder(com.google.cloud.sql.v1.ImportContext prototype) {
    return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
  }
  @java.lang.Override
  public Builder toBuilder() {
    return this == DEFAULT_INSTANCE
        ? new Builder() : new Builder().mergeFrom(this);
  }

  @java.lang.Override
  protected Builder newBuilderForType(
      com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
    Builder builder = new Builder(parent);
    return builder;
  }
  /**
   * <pre>
   * Database instance import context.
   * </pre>
   *
   * Protobuf type {@code google.cloud.sql.v1.ImportContext}
   */
  public static final class Builder extends
      com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
      // @@protoc_insertion_point(builder_implements:google.cloud.sql.v1.ImportContext)
      com.google.cloud.sql.v1.ImportContextOrBuilder {
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.google.cloud.sql.v1.CloudSqlResourcesProto.internal_static_google_cloud_sql_v1_ImportContext_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.google.cloud.sql.v1.CloudSqlResourcesProto.internal_static_google_cloud_sql_v1_ImportContext_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.google.cloud.sql.v1.ImportContext.class, com.google.cloud.sql.v1.ImportContext.Builder.class);
    }

    // Construct using com.google.cloud.sql.v1.ImportContext.newBuilder()
    private Builder() {

    }

    private Builder(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      super(parent);

    }
    @java.lang.Override
    public Builder clear() {
      super.clear();
      bitField0_ = 0;
      uri_ = "";
      database_ = "";
      kind_ = "";
      fileType_ = 0;
      csvImportOptions_ = null;
      if (csvImportOptionsBuilder_ != null) {
        csvImportOptionsBuilder_.dispose();
        csvImportOptionsBuilder_ = null;
      }
      importUser_ = "";
      bakImportOptions_ = null;
      if (bakImportOptionsBuilder_ != null) {
        bakImportOptionsBuilder_.dispose();
        bakImportOptionsBuilder_ = null;
      }
      return this;
    }

    @java.lang.Override
    public com.google.protobuf.Descriptors.Descriptor
        getDescriptorForType() {
      return com.google.cloud.sql.v1.CloudSqlResourcesProto.internal_static_google_cloud_sql_v1_ImportContext_descriptor;
    }

    @java.lang.Override
    public com.google.cloud.sql.v1.ImportContext getDefaultInstanceForType() {
      return com.google.cloud.sql.v1.ImportContext.getDefaultInstance();
    }

    @java.lang.Override
    public com.google.cloud.sql.v1.ImportContext build() {
      com.google.cloud.sql.v1.ImportContext result = buildPartial();
      if (!result.isInitialized()) {
        throw newUninitializedMessageException(result);
      }
      return result;
    }

    @java.lang.Override
    public com.google.cloud.sql.v1.ImportContext buildPartial() {
      com.google.cloud.sql.v1.ImportContext result = new com.google.cloud.sql.v1.ImportContext(this);
      if (bitField0_ != 0) { buildPartial0(result); }
      onBuilt();
      return result;
    }

    private void buildPartial0(com.google.cloud.sql.v1.ImportContext result) {
      int from_bitField0_ = bitField0_;
      if (((from_bitField0_ & 0x00000001) != 0)) {
        result.uri_ = uri_;
      }
      if (((from_bitField0_ & 0x00000002) != 0)) {
        result.database_ = database_;
      }
      if (((from_bitField0_ & 0x00000004) != 0)) {
        result.kind_ = kind_;
      }
      if (((from_bitField0_ & 0x00000008) != 0)) {
        result.fileType_ = fileType_;
      }
      if (((from_bitField0_ & 0x00000010) != 0)) {
        result.csvImportOptions_ = csvImportOptionsBuilder_ == null
            ? csvImportOptions_
            : csvImportOptionsBuilder_.build();
      }
      if (((from_bitField0_ & 0x00000020) != 0)) {
        result.importUser_ = importUser_;
      }
      if (((from_bitField0_ & 0x00000040) != 0)) {
        result.bakImportOptions_ = bakImportOptionsBuilder_ == null
            ? bakImportOptions_
            : bakImportOptionsBuilder_.build();
      }
    }

    @java.lang.Override
    public Builder clone() {
      return super.clone();
    }
    @java.lang.Override
    public Builder setField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        java.lang.Object value) {
      return super.setField(field, value);
    }
    @java.lang.Override
    public Builder clearField(
        com.google.protobuf.Descriptors.FieldDescriptor field) {
      return super.clearField(field);
    }
    @java.lang.Override
    public Builder clearOneof(
        com.google.protobuf.Descriptors.OneofDescriptor oneof) {
      return super.clearOneof(oneof);
    }
    @java.lang.Override
    public Builder setRepeatedField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        int index, java.lang.Object value) {
      return super.setRepeatedField(field, index, value);
    }
    @java.lang.Override
    public Builder addRepeatedField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        java.lang.Object value) {
      return super.addRepeatedField(field, value);
    }
    @java.lang.Override
    public Builder mergeFrom(com.google.protobuf.Message other) {
      if (other instanceof com.google.cloud.sql.v1.ImportContext) {
        return mergeFrom((com.google.cloud.sql.v1.ImportContext)other);
      } else {
        super.mergeFrom(other);
        return this;
      }
    }

    public Builder mergeFrom(com.google.cloud.sql.v1.ImportContext other) {
      if (other == com.google.cloud.sql.v1.ImportContext.getDefaultInstance()) return this;
      if (!other.getUri().isEmpty()) {
        uri_ = other.uri_;
        bitField0_ |= 0x00000001;
        onChanged();
      }
      if (!other.getDatabase().isEmpty()) {
        database_ = other.database_;
        bitField0_ |= 0x00000002;
        onChanged();
      }
      if (!other.getKind().isEmpty()) {
        kind_ = other.kind_;
        bitField0_ |= 0x00000004;
        onChanged();
      }
      if (other.fileType_ != 0) {
        setFileTypeValue(other.getFileTypeValue());
      }
      if (other.hasCsvImportOptions()) {
        mergeCsvImportOptions(other.getCsvImportOptions());
      }
      if (!other.getImportUser().isEmpty()) {
        importUser_ = other.importUser_;
        bitField0_ |= 0x00000020;
        onChanged();
      }
      if (other.hasBakImportOptions()) {
        mergeBakImportOptions(other.getBakImportOptions());
      }
      this.mergeUnknownFields(other.getUnknownFields());
      onChanged();
      return this;
    }

    @java.lang.Override
    public final boolean isInitialized() {
      return true;
    }

    @java.lang.Override
    public Builder mergeFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 10: {
              uri_ = input.readStringRequireUtf8();
              bitField0_ |= 0x00000001;
              break;
            } // case 10
            case 18: {
              database_ = input.readStringRequireUtf8();
              bitField0_ |= 0x00000002;
              break;
            } // case 18
            case 26: {
              kind_ = input.readStringRequireUtf8();
              bitField0_ |= 0x00000004;
              break;
            } // case 26
            case 32: {
              fileType_ = input.readEnum();
              bitField0_ |= 0x00000008;
              break;
            } // case 32
            case 42: {
              input.readMessage(
                  getCsvImportOptionsFieldBuilder().getBuilder(),
                  extensionRegistry);
              bitField0_ |= 0x00000010;
              break;
            } // case 42
            case 50: {
              importUser_ = input.readStringRequireUtf8();
              bitField0_ |= 0x00000020;
              break;
            } // case 50
            case 58: {
              input.readMessage(
                  getBakImportOptionsFieldBuilder().getBuilder(),
                  extensionRegistry);
              bitField0_ |= 0x00000040;
              break;
            } // case 58
            default: {
              if (!super.parseUnknownField(input, extensionRegistry, tag)) {
                done = true; // was an endgroup tag
              }
              break;
            } // default:
          } // switch (tag)
        } // while (!done)
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.unwrapIOException();
      } finally {
        onChanged();
      } // finally
      return this;
    }
    private int bitField0_;

    private java.lang.Object uri_ = "";
    /**
     * <pre>
     * Path to the import file in Cloud Storage, in the form
     * **gs://bucketName/fileName**. Compressed gzip files (.gz) are supported
     * when **fileType** is **SQL**. The instance must have
     * write permissions to the bucket and read access to the file.
     * </pre>
     *
     * <code>string uri = 1;</code>
     * @return The uri.
     */
    public java.lang.String getUri() {
      java.lang.Object ref = uri_;
      if (!(ref instanceof java.lang.String)) {
        com.google.protobuf.ByteString bs =
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        uri_ = s;
        return s;
      } else {
        return (java.lang.String) ref;
      }
    }
    /**
     * <pre>
     * Path to the import file in Cloud Storage, in the form
     * **gs://bucketName/fileName**. Compressed gzip files (.gz) are supported
     * when **fileType** is **SQL**. The instance must have
     * write permissions to the bucket and read access to the file.
     * </pre>
     *
     * <code>string uri = 1;</code>
     * @return The bytes for uri.
     */
    public com.google.protobuf.ByteString
        getUriBytes() {
      java.lang.Object ref = uri_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        uri_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }
    /**
     * <pre>
     * Path to the import file in Cloud Storage, in the form
     * **gs://bucketName/fileName**. Compressed gzip files (.gz) are supported
     * when **fileType** is **SQL**. The instance must have
     * write permissions to the bucket and read access to the file.
     * </pre>
     *
     * <code>string uri = 1;</code>
     * @param value The uri to set.
     * @return This builder for chaining.
     */
    public Builder setUri(
        java.lang.String value) {
      if (value == null) { throw new NullPointerException(); }
      uri_ = value;
      bitField0_ |= 0x00000001;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * Path to the import file in Cloud Storage, in the form
     * **gs://bucketName/fileName**. Compressed gzip files (.gz) are supported
     * when **fileType** is **SQL**. The instance must have
     * write permissions to the bucket and read access to the file.
     * </pre>
     *
     * <code>string uri = 1;</code>
     * @return This builder for chaining.
     */
    public Builder clearUri() {
      uri_ = getDefaultInstance().getUri();
      bitField0_ = (bitField0_ & ~0x00000001);
      onChanged();
      return this;
    }
    /**
     * <pre>
     * Path to the import file in Cloud Storage, in the form
     * **gs://bucketName/fileName**. Compressed gzip files (.gz) are supported
     * when **fileType** is **SQL**. The instance must have
     * write permissions to the bucket and read access to the file.
     * </pre>
     *
     * <code>string uri = 1;</code>
     * @param value The bytes for uri to set.
     * @return This builder for chaining.
     */
    public Builder setUriBytes(
        com.google.protobuf.ByteString value) {
      if (value == null) { throw new NullPointerException(); }
      checkByteStringIsUtf8(value);
      uri_ = value;
      bitField0_ |= 0x00000001;
      onChanged();
      return this;
    }

    private java.lang.Object database_ = "";
    /**
     * <pre>
     * The target database for the import. If **fileType** is **SQL**, this field
     * is required only if the import file does not specify a database, and is
     * overridden by any database specification in the import file. If
     * **fileType** is **CSV**, one database must be specified.
     * </pre>
     *
     * <code>string database = 2;</code>
     * @return The database.
     */
    public java.lang.String getDatabase() {
      java.lang.Object ref = database_;
      if (!(ref instanceof java.lang.String)) {
        com.google.protobuf.ByteString bs =
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        database_ = s;
        return s;
      } else {
        return (java.lang.String) ref;
      }
    }
    /**
     * <pre>
     * The target database for the import. If **fileType** is **SQL**, this field
     * is required only if the import file does not specify a database, and is
     * overridden by any database specification in the import file. If
     * **fileType** is **CSV**, one database must be specified.
     * </pre>
     *
     * <code>string database = 2;</code>
     * @return The bytes for database.
     */
    public com.google.protobuf.ByteString
        getDatabaseBytes() {
      java.lang.Object ref = database_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        database_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }
    /**
     * <pre>
     * The target database for the import. If **fileType** is **SQL**, this field
     * is required only if the import file does not specify a database, and is
     * overridden by any database specification in the import file. If
     * **fileType** is **CSV**, one database must be specified.
     * </pre>
     *
     * <code>string database = 2;</code>
     * @param value The database to set.
     * @return This builder for chaining.
     */
    public Builder setDatabase(
        java.lang.String value) {
      if (value == null) { throw new NullPointerException(); }
      database_ = value;
      bitField0_ |= 0x00000002;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * The target database for the import. If **fileType** is **SQL**, this field
     * is required only if the import file does not specify a database, and is
     * overridden by any database specification in the import file. If
     * **fileType** is **CSV**, one database must be specified.
     * </pre>
     *
     * <code>string database = 2;</code>
     * @return This builder for chaining.
     */
    public Builder clearDatabase() {
      database_ = getDefaultInstance().getDatabase();
      bitField0_ = (bitField0_ & ~0x00000002);
      onChanged();
      return this;
    }
    /**
     * <pre>
     * The target database for the import. If **fileType** is **SQL**, this field
     * is required only if the import file does not specify a database, and is
     * overridden by any database specification in the import file. If
     * **fileType** is **CSV**, one database must be specified.
     * </pre>
     *
     * <code>string database = 2;</code>
     * @param value The bytes for database to set.
     * @return This builder for chaining.
     */
    public Builder setDatabaseBytes(
        com.google.protobuf.ByteString value) {
      if (value == null) { throw new NullPointerException(); }
      checkByteStringIsUtf8(value);
      database_ = value;
      bitField0_ |= 0x00000002;
      onChanged();
      return this;
    }

    private java.lang.Object kind_ = "";
    /**
     * <pre>
     * This is always **sql#importContext**.
     * </pre>
     *
     * <code>string kind = 3;</code>
     * @return The kind.
     */
    public java.lang.String getKind() {
      java.lang.Object ref = kind_;
      if (!(ref instanceof java.lang.String)) {
        com.google.protobuf.ByteString bs =
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        kind_ = s;
        return s;
      } else {
        return (java.lang.String) ref;
      }
    }
    /**
     * <pre>
     * This is always **sql#importContext**.
     * </pre>
     *
     * <code>string kind = 3;</code>
     * @return The bytes for kind.
     */
    public com.google.protobuf.ByteString
        getKindBytes() {
      java.lang.Object ref = kind_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        kind_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }
    /**
     * <pre>
     * This is always **sql#importContext**.
     * </pre>
     *
     * <code>string kind = 3;</code>
     * @param value The kind to set.
     * @return This builder for chaining.
     */
    public Builder setKind(
        java.lang.String value) {
      if (value == null) { throw new NullPointerException(); }
      kind_ = value;
      bitField0_ |= 0x00000004;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * This is always **sql#importContext**.
     * </pre>
     *
     * <code>string kind = 3;</code>
     * @return This builder for chaining.
     */
    public Builder clearKind() {
      kind_ = getDefaultInstance().getKind();
      bitField0_ = (bitField0_ & ~0x00000004);
      onChanged();
      return this;
    }
    /**
     * <pre>
     * This is always **sql#importContext**.
     * </pre>
     *
     * <code>string kind = 3;</code>
     * @param value The bytes for kind to set.
     * @return This builder for chaining.
     */
    public Builder setKindBytes(
        com.google.protobuf.ByteString value) {
      if (value == null) { throw new NullPointerException(); }
      checkByteStringIsUtf8(value);
      kind_ = value;
      bitField0_ |= 0x00000004;
      onChanged();
      return this;
    }

    private int fileType_ = 0;
    /**
     * <pre>
     * The file type for the specified uri. &lt;br&gt;**SQL**: The file
     * contains SQL statements. &lt;br&gt;**CSV**: The file contains CSV data.
     * </pre>
     *
     * <code>.google.cloud.sql.v1.SqlFileType file_type = 4;</code>
     * @return The enum numeric value on the wire for fileType.
     */
    @java.lang.Override public int getFileTypeValue() {
      return fileType_;
    }
    /**
     * <pre>
     * The file type for the specified uri. &lt;br&gt;**SQL**: The file
     * contains SQL statements. &lt;br&gt;**CSV**: The file contains CSV data.
     * </pre>
     *
     * <code>.google.cloud.sql.v1.SqlFileType file_type = 4;</code>
     * @param value The enum numeric value on the wire for fileType to set.
     * @return This builder for chaining.
     */
    public Builder setFileTypeValue(int value) {
      fileType_ = value;
      bitField0_ |= 0x00000008;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * The file type for the specified uri. &lt;br&gt;**SQL**: The file
     * contains SQL statements. &lt;br&gt;**CSV**: The file contains CSV data.
     * </pre>
     *
     * <code>.google.cloud.sql.v1.SqlFileType file_type = 4;</code>
     * @return The fileType.
     */
    @java.lang.Override
    public com.google.cloud.sql.v1.SqlFileType getFileType() {
      com.google.cloud.sql.v1.SqlFileType result = com.google.cloud.sql.v1.SqlFileType.forNumber(fileType_);
      return result == null ? com.google.cloud.sql.v1.SqlFileType.UNRECOGNIZED : result;
    }
    /**
     * <pre>
     * The file type for the specified uri. &lt;br&gt;**SQL**: The file
     * contains SQL statements. &lt;br&gt;**CSV**: The file contains CSV data.
     * </pre>
     *
     * <code>.google.cloud.sql.v1.SqlFileType file_type = 4;</code>
     * @param value The fileType to set.
     * @return This builder for chaining.
     */
    public Builder setFileType(com.google.cloud.sql.v1.SqlFileType value) {
      if (value == null) {
        throw new NullPointerException();
      }
      bitField0_ |= 0x00000008;
      fileType_ = value.getNumber();
      onChanged();
      return this;
    }
    /**
     * <pre>
     * The file type for the specified uri. &lt;br&gt;**SQL**: The file
     * contains SQL statements. &lt;br&gt;**CSV**: The file contains CSV data.
     * </pre>
     *
     * <code>.google.cloud.sql.v1.SqlFileType file_type = 4;</code>
     * @return This builder for chaining.
     */
    public Builder clearFileType() {
      bitField0_ = (bitField0_ & ~0x00000008);
      fileType_ = 0;
      onChanged();
      return this;
    }

    private com.google.cloud.sql.v1.ImportContext.SqlCsvImportOptions csvImportOptions_;
    private com.google.protobuf.SingleFieldBuilderV3<
        com.google.cloud.sql.v1.ImportContext.SqlCsvImportOptions, com.google.cloud.sql.v1.ImportContext.SqlCsvImportOptions.Builder, com.google.cloud.sql.v1.ImportContext.SqlCsvImportOptionsOrBuilder> csvImportOptionsBuilder_;
    /**
     * <pre>
     * Options for importing data as CSV.
     * </pre>
     *
     * <code>.google.cloud.sql.v1.ImportContext.SqlCsvImportOptions csv_import_options = 5;</code>
     * @return Whether the csvImportOptions field is set.
     */
    public boolean hasCsvImportOptions() {
      return ((bitField0_ & 0x00000010) != 0);
    }
    /**
     * <pre>
     * Options for importing data as CSV.
     * </pre>
     *
     * <code>.google.cloud.sql.v1.ImportContext.SqlCsvImportOptions csv_import_options = 5;</code>
     * @return The csvImportOptions.
     */
    public com.google.cloud.sql.v1.ImportContext.SqlCsvImportOptions getCsvImportOptions() {
      if (csvImportOptionsBuilder_ == null) {
        return csvImportOptions_ == null ? com.google.cloud.sql.v1.ImportContext.SqlCsvImportOptions.getDefaultInstance() : csvImportOptions_;
      } else {
        return csvImportOptionsBuilder_.getMessage();
      }
    }
    /**
     * <pre>
     * Options for importing data as CSV.
     * </pre>
     *
     * <code>.google.cloud.sql.v1.ImportContext.SqlCsvImportOptions csv_import_options = 5;</code>
     */
    public Builder setCsvImportOptions(com.google.cloud.sql.v1.ImportContext.SqlCsvImportOptions value) {
      if (csvImportOptionsBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        csvImportOptions_ = value;
      } else {
        csvImportOptionsBuilder_.setMessage(value);
      }
      bitField0_ |= 0x00000010;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * Options for importing data as CSV.
     * </pre>
     *
     * <code>.google.cloud.sql.v1.ImportContext.SqlCsvImportOptions csv_import_options = 5;</code>
     */
    public Builder setCsvImportOptions(
        com.google.cloud.sql.v1.ImportContext.SqlCsvImportOptions.Builder builderForValue) {
      if (csvImportOptionsBuilder_ == null) {
        csvImportOptions_ = builderForValue.build();
      } else {
        csvImportOptionsBuilder_.setMessage(builderForValue.build());
      }
      bitField0_ |= 0x00000010;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * Options for importing data as CSV.
     * </pre>
     *
     * <code>.google.cloud.sql.v1.ImportContext.SqlCsvImportOptions csv_import_options = 5;</code>
     */
    public Builder mergeCsvImportOptions(com.google.cloud.sql.v1.ImportContext.SqlCsvImportOptions value) {
      if (csvImportOptionsBuilder_ == null) {
        if (((bitField0_ & 0x00000010) != 0) &&
          csvImportOptions_ != null &&
          csvImportOptions_ != com.google.cloud.sql.v1.ImportContext.SqlCsvImportOptions.getDefaultInstance()) {
          getCsvImportOptionsBuilder().mergeFrom(value);
        } else {
          csvImportOptions_ = value;
        }
      } else {
        csvImportOptionsBuilder_.mergeFrom(value);
      }
      bitField0_ |= 0x00000010;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * Options for importing data as CSV.
     * </pre>
     *
     * <code>.google.cloud.sql.v1.ImportContext.SqlCsvImportOptions csv_import_options = 5;</code>
     */
    public Builder clearCsvImportOptions() {
      bitField0_ = (bitField0_ & ~0x00000010);
      csvImportOptions_ = null;
      if (csvImportOptionsBuilder_ != null) {
        csvImportOptionsBuilder_.dispose();
        csvImportOptionsBuilder_ = null;
      }
      onChanged();
      return this;
    }
    /**
     * <pre>
     * Options for importing data as CSV.
     * </pre>
     *
     * <code>.google.cloud.sql.v1.ImportContext.SqlCsvImportOptions csv_import_options = 5;</code>
     */
    public com.google.cloud.sql.v1.ImportContext.SqlCsvImportOptions.Builder getCsvImportOptionsBuilder() {
      bitField0_ |= 0x00000010;
      onChanged();
      return getCsvImportOptionsFieldBuilder().getBuilder();
    }
    /**
     * <pre>
     * Options for importing data as CSV.
     * </pre>
     *
     * <code>.google.cloud.sql.v1.ImportContext.SqlCsvImportOptions csv_import_options = 5;</code>
     */
    public com.google.cloud.sql.v1.ImportContext.SqlCsvImportOptionsOrBuilder getCsvImportOptionsOrBuilder() {
      if (csvImportOptionsBuilder_ != null) {
        return csvImportOptionsBuilder_.getMessageOrBuilder();
      } else {
        return csvImportOptions_ == null ?
            com.google.cloud.sql.v1.ImportContext.SqlCsvImportOptions.getDefaultInstance() : csvImportOptions_;
      }
    }
    /**
     * <pre>
     * Options for importing data as CSV.
     * </pre>
     *
     * <code>.google.cloud.sql.v1.ImportContext.SqlCsvImportOptions csv_import_options = 5;</code>
     */
    private com.google.protobuf.SingleFieldBuilderV3<
        com.google.cloud.sql.v1.ImportContext.SqlCsvImportOptions, com.google.cloud.sql.v1.ImportContext.SqlCsvImportOptions.Builder, com.google.cloud.sql.v1.ImportContext.SqlCsvImportOptionsOrBuilder> 
        getCsvImportOptionsFieldBuilder() {
      if (csvImportOptionsBuilder_ == null) {
        csvImportOptionsBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
            com.google.cloud.sql.v1.ImportContext.SqlCsvImportOptions, com.google.cloud.sql.v1.ImportContext.SqlCsvImportOptions.Builder, com.google.cloud.sql.v1.ImportContext.SqlCsvImportOptionsOrBuilder>(
                getCsvImportOptions(),
                getParentForChildren(),
                isClean());
        csvImportOptions_ = null;
      }
      return csvImportOptionsBuilder_;
    }

    private java.lang.Object importUser_ = "";
    /**
     * <pre>
     * The PostgreSQL user for this import operation. PostgreSQL instances only.
     * </pre>
     *
     * <code>string import_user = 6;</code>
     * @return The importUser.
     */
    public java.lang.String getImportUser() {
      java.lang.Object ref = importUser_;
      if (!(ref instanceof java.lang.String)) {
        com.google.protobuf.ByteString bs =
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        importUser_ = s;
        return s;
      } else {
        return (java.lang.String) ref;
      }
    }
    /**
     * <pre>
     * The PostgreSQL user for this import operation. PostgreSQL instances only.
     * </pre>
     *
     * <code>string import_user = 6;</code>
     * @return The bytes for importUser.
     */
    public com.google.protobuf.ByteString
        getImportUserBytes() {
      java.lang.Object ref = importUser_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        importUser_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }
    /**
     * <pre>
     * The PostgreSQL user for this import operation. PostgreSQL instances only.
     * </pre>
     *
     * <code>string import_user = 6;</code>
     * @param value The importUser to set.
     * @return This builder for chaining.
     */
    public Builder setImportUser(
        java.lang.String value) {
      if (value == null) { throw new NullPointerException(); }
      importUser_ = value;
      bitField0_ |= 0x00000020;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * The PostgreSQL user for this import operation. PostgreSQL instances only.
     * </pre>
     *
     * <code>string import_user = 6;</code>
     * @return This builder for chaining.
     */
    public Builder clearImportUser() {
      importUser_ = getDefaultInstance().getImportUser();
      bitField0_ = (bitField0_ & ~0x00000020);
      onChanged();
      return this;
    }
    /**
     * <pre>
     * The PostgreSQL user for this import operation. PostgreSQL instances only.
     * </pre>
     *
     * <code>string import_user = 6;</code>
     * @param value The bytes for importUser to set.
     * @return This builder for chaining.
     */
    public Builder setImportUserBytes(
        com.google.protobuf.ByteString value) {
      if (value == null) { throw new NullPointerException(); }
      checkByteStringIsUtf8(value);
      importUser_ = value;
      bitField0_ |= 0x00000020;
      onChanged();
      return this;
    }

    private com.google.cloud.sql.v1.ImportContext.SqlBakImportOptions bakImportOptions_;
    private com.google.protobuf.SingleFieldBuilderV3<
        com.google.cloud.sql.v1.ImportContext.SqlBakImportOptions, com.google.cloud.sql.v1.ImportContext.SqlBakImportOptions.Builder, com.google.cloud.sql.v1.ImportContext.SqlBakImportOptionsOrBuilder> bakImportOptionsBuilder_;
    /**
     * <pre>
     * Import parameters specific to SQL Server .BAK files
     * </pre>
     *
     * <code>.google.cloud.sql.v1.ImportContext.SqlBakImportOptions bak_import_options = 7;</code>
     * @return Whether the bakImportOptions field is set.
     */
    public boolean hasBakImportOptions() {
      return ((bitField0_ & 0x00000040) != 0);
    }
    /**
     * <pre>
     * Import parameters specific to SQL Server .BAK files
     * </pre>
     *
     * <code>.google.cloud.sql.v1.ImportContext.SqlBakImportOptions bak_import_options = 7;</code>
     * @return The bakImportOptions.
     */
    public com.google.cloud.sql.v1.ImportContext.SqlBakImportOptions getBakImportOptions() {
      if (bakImportOptionsBuilder_ == null) {
        return bakImportOptions_ == null ? com.google.cloud.sql.v1.ImportContext.SqlBakImportOptions.getDefaultInstance() : bakImportOptions_;
      } else {
        return bakImportOptionsBuilder_.getMessage();
      }
    }
    /**
     * <pre>
     * Import parameters specific to SQL Server .BAK files
     * </pre>
     *
     * <code>.google.cloud.sql.v1.ImportContext.SqlBakImportOptions bak_import_options = 7;</code>
     */
    public Builder setBakImportOptions(com.google.cloud.sql.v1.ImportContext.SqlBakImportOptions value) {
      if (bakImportOptionsBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        bakImportOptions_ = value;
      } else {
        bakImportOptionsBuilder_.setMessage(value);
      }
      bitField0_ |= 0x00000040;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * Import parameters specific to SQL Server .BAK files
     * </pre>
     *
     * <code>.google.cloud.sql.v1.ImportContext.SqlBakImportOptions bak_import_options = 7;</code>
     */
    public Builder setBakImportOptions(
        com.google.cloud.sql.v1.ImportContext.SqlBakImportOptions.Builder builderForValue) {
      if (bakImportOptionsBuilder_ == null) {
        bakImportOptions_ = builderForValue.build();
      } else {
        bakImportOptionsBuilder_.setMessage(builderForValue.build());
      }
      bitField0_ |= 0x00000040;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * Import parameters specific to SQL Server .BAK files
     * </pre>
     *
     * <code>.google.cloud.sql.v1.ImportContext.SqlBakImportOptions bak_import_options = 7;</code>
     */
    public Builder mergeBakImportOptions(com.google.cloud.sql.v1.ImportContext.SqlBakImportOptions value) {
      if (bakImportOptionsBuilder_ == null) {
        if (((bitField0_ & 0x00000040) != 0) &&
          bakImportOptions_ != null &&
          bakImportOptions_ != com.google.cloud.sql.v1.ImportContext.SqlBakImportOptions.getDefaultInstance()) {
          getBakImportOptionsBuilder().mergeFrom(value);
        } else {
          bakImportOptions_ = value;
        }
      } else {
        bakImportOptionsBuilder_.mergeFrom(value);
      }
      bitField0_ |= 0x00000040;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * Import parameters specific to SQL Server .BAK files
     * </pre>
     *
     * <code>.google.cloud.sql.v1.ImportContext.SqlBakImportOptions bak_import_options = 7;</code>
     */
    public Builder clearBakImportOptions() {
      bitField0_ = (bitField0_ & ~0x00000040);
      bakImportOptions_ = null;
      if (bakImportOptionsBuilder_ != null) {
        bakImportOptionsBuilder_.dispose();
        bakImportOptionsBuilder_ = null;
      }
      onChanged();
      return this;
    }
    /**
     * <pre>
     * Import parameters specific to SQL Server .BAK files
     * </pre>
     *
     * <code>.google.cloud.sql.v1.ImportContext.SqlBakImportOptions bak_import_options = 7;</code>
     */
    public com.google.cloud.sql.v1.ImportContext.SqlBakImportOptions.Builder getBakImportOptionsBuilder() {
      bitField0_ |= 0x00000040;
      onChanged();
      return getBakImportOptionsFieldBuilder().getBuilder();
    }
    /**
     * <pre>
     * Import parameters specific to SQL Server .BAK files
     * </pre>
     *
     * <code>.google.cloud.sql.v1.ImportContext.SqlBakImportOptions bak_import_options = 7;</code>
     */
    public com.google.cloud.sql.v1.ImportContext.SqlBakImportOptionsOrBuilder getBakImportOptionsOrBuilder() {
      if (bakImportOptionsBuilder_ != null) {
        return bakImportOptionsBuilder_.getMessageOrBuilder();
      } else {
        return bakImportOptions_ == null ?
            com.google.cloud.sql.v1.ImportContext.SqlBakImportOptions.getDefaultInstance() : bakImportOptions_;
      }
    }
    /**
     * <pre>
     * Import parameters specific to SQL Server .BAK files
     * </pre>
     *
     * <code>.google.cloud.sql.v1.ImportContext.SqlBakImportOptions bak_import_options = 7;</code>
     */
    private com.google.protobuf.SingleFieldBuilderV3<
        com.google.cloud.sql.v1.ImportContext.SqlBakImportOptions, com.google.cloud.sql.v1.ImportContext.SqlBakImportOptions.Builder, com.google.cloud.sql.v1.ImportContext.SqlBakImportOptionsOrBuilder> 
        getBakImportOptionsFieldBuilder() {
      if (bakImportOptionsBuilder_ == null) {
        bakImportOptionsBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
            com.google.cloud.sql.v1.ImportContext.SqlBakImportOptions, com.google.cloud.sql.v1.ImportContext.SqlBakImportOptions.Builder, com.google.cloud.sql.v1.ImportContext.SqlBakImportOptionsOrBuilder>(
                getBakImportOptions(),
                getParentForChildren(),
                isClean());
        bakImportOptions_ = null;
      }
      return bakImportOptionsBuilder_;
    }
    @java.lang.Override
    public final Builder setUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return super.setUnknownFields(unknownFields);
    }

    @java.lang.Override
    public final Builder mergeUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return super.mergeUnknownFields(unknownFields);
    }


    // @@protoc_insertion_point(builder_scope:google.cloud.sql.v1.ImportContext)
  }

  // @@protoc_insertion_point(class_scope:google.cloud.sql.v1.ImportContext)
  private static final com.google.cloud.sql.v1.ImportContext DEFAULT_INSTANCE;
  static {
    DEFAULT_INSTANCE = new com.google.cloud.sql.v1.ImportContext();
  }

  public static com.google.cloud.sql.v1.ImportContext getDefaultInstance() {
    return DEFAULT_INSTANCE;
  }

  private static final com.google.protobuf.Parser<ImportContext>
      PARSER = new com.google.protobuf.AbstractParser<ImportContext>() {
    @java.lang.Override
    public ImportContext parsePartialFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      Builder builder = newBuilder();
      try {
        builder.mergeFrom(input, extensionRegistry);
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(builder.buildPartial());
      } catch (com.google.protobuf.UninitializedMessageException e) {
        throw e.asInvalidProtocolBufferException().setUnfinishedMessage(builder.buildPartial());
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(e)
            .setUnfinishedMessage(builder.buildPartial());
      }
      return builder.buildPartial();
    }
  };

  public static com.google.protobuf.Parser<ImportContext> parser() {
    return PARSER;
  }

  @java.lang.Override
  public com.google.protobuf.Parser<ImportContext> getParserForType() {
    return PARSER;
  }

  @java.lang.Override
  public com.google.cloud.sql.v1.ImportContext getDefaultInstanceForType() {
    return DEFAULT_INSTANCE;
  }

}

