// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: google/cloud/sql/v1/cloud_sql_resources.proto

package com.google.cloud.sql.v1;

public interface DemoteMasterMySqlReplicaConfigurationOrBuilder extends
    // @@protoc_insertion_point(interface_extends:google.cloud.sql.v1.DemoteMasterMySqlReplicaConfiguration)
    com.google.protobuf.MessageOrBuilder {

  /**
   * <pre>
   * This is always **sql#demoteMasterMysqlReplicaConfiguration**.
   * </pre>
   *
   * <code>string kind = 1;</code>
   * @return The kind.
   */
  java.lang.String getKind();
  /**
   * <pre>
   * This is always **sql#demoteMasterMysqlReplicaConfiguration**.
   * </pre>
   *
   * <code>string kind = 1;</code>
   * @return The bytes for kind.
   */
  com.google.protobuf.ByteString
      getKindBytes();

  /**
   * <pre>
   * The username for the replication connection.
   * </pre>
   *
   * <code>string username = 2;</code>
   * @return The username.
   */
  java.lang.String getUsername();
  /**
   * <pre>
   * The username for the replication connection.
   * </pre>
   *
   * <code>string username = 2;</code>
   * @return The bytes for username.
   */
  com.google.protobuf.ByteString
      getUsernameBytes();

  /**
   * <pre>
   * The password for the replication connection.
   * </pre>
   *
   * <code>string password = 3;</code>
   * @return The password.
   */
  java.lang.String getPassword();
  /**
   * <pre>
   * The password for the replication connection.
   * </pre>
   *
   * <code>string password = 3;</code>
   * @return The bytes for password.
   */
  com.google.protobuf.ByteString
      getPasswordBytes();

  /**
   * <pre>
   * PEM representation of the replica's private key. The corresponsing public
   * key is encoded in the client's certificate. The format of the replica's
   * private key can be either PKCS #1 or PKCS #8.
   * </pre>
   *
   * <code>string client_key = 4;</code>
   * @return The clientKey.
   */
  java.lang.String getClientKey();
  /**
   * <pre>
   * PEM representation of the replica's private key. The corresponsing public
   * key is encoded in the client's certificate. The format of the replica's
   * private key can be either PKCS #1 or PKCS #8.
   * </pre>
   *
   * <code>string client_key = 4;</code>
   * @return The bytes for clientKey.
   */
  com.google.protobuf.ByteString
      getClientKeyBytes();

  /**
   * <pre>
   * PEM representation of the replica's x509 certificate.
   * </pre>
   *
   * <code>string client_certificate = 5;</code>
   * @return The clientCertificate.
   */
  java.lang.String getClientCertificate();
  /**
   * <pre>
   * PEM representation of the replica's x509 certificate.
   * </pre>
   *
   * <code>string client_certificate = 5;</code>
   * @return The bytes for clientCertificate.
   */
  com.google.protobuf.ByteString
      getClientCertificateBytes();

  /**
   * <pre>
   * PEM representation of the trusted CA's x509 certificate.
   * </pre>
   *
   * <code>string ca_certificate = 6;</code>
   * @return The caCertificate.
   */
  java.lang.String getCaCertificate();
  /**
   * <pre>
   * PEM representation of the trusted CA's x509 certificate.
   * </pre>
   *
   * <code>string ca_certificate = 6;</code>
   * @return The bytes for caCertificate.
   */
  com.google.protobuf.ByteString
      getCaCertificateBytes();
}
