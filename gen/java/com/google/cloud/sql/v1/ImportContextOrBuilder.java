// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: google/cloud/sql/v1/cloud_sql_resources.proto

package com.google.cloud.sql.v1;

public interface ImportContextOrBuilder extends
    // @@protoc_insertion_point(interface_extends:google.cloud.sql.v1.ImportContext)
    com.google.protobuf.MessageOrBuilder {

  /**
   * <pre>
   * Path to the import file in Cloud Storage, in the form
   * **gs://bucketName/fileName**. Compressed gzip files (.gz) are supported
   * when **fileType** is **SQL**. The instance must have
   * write permissions to the bucket and read access to the file.
   * </pre>
   *
   * <code>string uri = 1;</code>
   * @return The uri.
   */
  java.lang.String getUri();
  /**
   * <pre>
   * Path to the import file in Cloud Storage, in the form
   * **gs://bucketName/fileName**. Compressed gzip files (.gz) are supported
   * when **fileType** is **SQL**. The instance must have
   * write permissions to the bucket and read access to the file.
   * </pre>
   *
   * <code>string uri = 1;</code>
   * @return The bytes for uri.
   */
  com.google.protobuf.ByteString
      getUriBytes();

  /**
   * <pre>
   * The target database for the import. If **fileType** is **SQL**, this field
   * is required only if the import file does not specify a database, and is
   * overridden by any database specification in the import file. If
   * **fileType** is **CSV**, one database must be specified.
   * </pre>
   *
   * <code>string database = 2;</code>
   * @return The database.
   */
  java.lang.String getDatabase();
  /**
   * <pre>
   * The target database for the import. If **fileType** is **SQL**, this field
   * is required only if the import file does not specify a database, and is
   * overridden by any database specification in the import file. If
   * **fileType** is **CSV**, one database must be specified.
   * </pre>
   *
   * <code>string database = 2;</code>
   * @return The bytes for database.
   */
  com.google.protobuf.ByteString
      getDatabaseBytes();

  /**
   * <pre>
   * This is always **sql#importContext**.
   * </pre>
   *
   * <code>string kind = 3;</code>
   * @return The kind.
   */
  java.lang.String getKind();
  /**
   * <pre>
   * This is always **sql#importContext**.
   * </pre>
   *
   * <code>string kind = 3;</code>
   * @return The bytes for kind.
   */
  com.google.protobuf.ByteString
      getKindBytes();

  /**
   * <pre>
   * The file type for the specified uri. &lt;br&gt;**SQL**: The file
   * contains SQL statements. &lt;br&gt;**CSV**: The file contains CSV data.
   * </pre>
   *
   * <code>.google.cloud.sql.v1.SqlFileType file_type = 4;</code>
   * @return The enum numeric value on the wire for fileType.
   */
  int getFileTypeValue();
  /**
   * <pre>
   * The file type for the specified uri. &lt;br&gt;**SQL**: The file
   * contains SQL statements. &lt;br&gt;**CSV**: The file contains CSV data.
   * </pre>
   *
   * <code>.google.cloud.sql.v1.SqlFileType file_type = 4;</code>
   * @return The fileType.
   */
  com.google.cloud.sql.v1.SqlFileType getFileType();

  /**
   * <pre>
   * Options for importing data as CSV.
   * </pre>
   *
   * <code>.google.cloud.sql.v1.ImportContext.SqlCsvImportOptions csv_import_options = 5;</code>
   * @return Whether the csvImportOptions field is set.
   */
  boolean hasCsvImportOptions();
  /**
   * <pre>
   * Options for importing data as CSV.
   * </pre>
   *
   * <code>.google.cloud.sql.v1.ImportContext.SqlCsvImportOptions csv_import_options = 5;</code>
   * @return The csvImportOptions.
   */
  com.google.cloud.sql.v1.ImportContext.SqlCsvImportOptions getCsvImportOptions();
  /**
   * <pre>
   * Options for importing data as CSV.
   * </pre>
   *
   * <code>.google.cloud.sql.v1.ImportContext.SqlCsvImportOptions csv_import_options = 5;</code>
   */
  com.google.cloud.sql.v1.ImportContext.SqlCsvImportOptionsOrBuilder getCsvImportOptionsOrBuilder();

  /**
   * <pre>
   * The PostgreSQL user for this import operation. PostgreSQL instances only.
   * </pre>
   *
   * <code>string import_user = 6;</code>
   * @return The importUser.
   */
  java.lang.String getImportUser();
  /**
   * <pre>
   * The PostgreSQL user for this import operation. PostgreSQL instances only.
   * </pre>
   *
   * <code>string import_user = 6;</code>
   * @return The bytes for importUser.
   */
  com.google.protobuf.ByteString
      getImportUserBytes();

  /**
   * <pre>
   * Import parameters specific to SQL Server .BAK files
   * </pre>
   *
   * <code>.google.cloud.sql.v1.ImportContext.SqlBakImportOptions bak_import_options = 7;</code>
   * @return Whether the bakImportOptions field is set.
   */
  boolean hasBakImportOptions();
  /**
   * <pre>
   * Import parameters specific to SQL Server .BAK files
   * </pre>
   *
   * <code>.google.cloud.sql.v1.ImportContext.SqlBakImportOptions bak_import_options = 7;</code>
   * @return The bakImportOptions.
   */
  com.google.cloud.sql.v1.ImportContext.SqlBakImportOptions getBakImportOptions();
  /**
   * <pre>
   * Import parameters specific to SQL Server .BAK files
   * </pre>
   *
   * <code>.google.cloud.sql.v1.ImportContext.SqlBakImportOptions bak_import_options = 7;</code>
   */
  com.google.cloud.sql.v1.ImportContext.SqlBakImportOptionsOrBuilder getBakImportOptionsOrBuilder();
}
