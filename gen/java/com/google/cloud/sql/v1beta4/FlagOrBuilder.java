// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: google/cloud/sql/v1beta4/cloud_sql_resources.proto

package com.google.cloud.sql.v1beta4;

public interface FlagOrBuilder extends
    // @@protoc_insertion_point(interface_extends:google.cloud.sql.v1beta4.Flag)
    com.google.protobuf.MessageOrBuilder {

  /**
   * <pre>
   * This is the name of the flag. Flag names always use underscores, not
   * hyphens, for example: `max_allowed_packet`
   * </pre>
   *
   * <code>string name = 1;</code>
   * @return The name.
   */
  java.lang.String getName();
  /**
   * <pre>
   * This is the name of the flag. Flag names always use underscores, not
   * hyphens, for example: `max_allowed_packet`
   * </pre>
   *
   * <code>string name = 1;</code>
   * @return The bytes for name.
   */
  com.google.protobuf.ByteString
      getNameBytes();

  /**
   * <pre>
   * The type of the flag. Flags are typed to being `BOOLEAN`, `STRING`,
   * `INTEGER` or `NONE`. `NONE` is used for flags which do not take a
   * value, such as `skip_grant_tables`.
   * </pre>
   *
   * <code>.google.cloud.sql.v1beta4.SqlFlagType type = 2;</code>
   * @return The enum numeric value on the wire for type.
   */
  int getTypeValue();
  /**
   * <pre>
   * The type of the flag. Flags are typed to being `BOOLEAN`, `STRING`,
   * `INTEGER` or `NONE`. `NONE` is used for flags which do not take a
   * value, such as `skip_grant_tables`.
   * </pre>
   *
   * <code>.google.cloud.sql.v1beta4.SqlFlagType type = 2;</code>
   * @return The type.
   */
  com.google.cloud.sql.v1beta4.SqlFlagType getType();

  /**
   * <pre>
   * The database version this flag applies to. Can be
   * MySQL instances: `MYSQL_8_0`, `MYSQL_8_0_18`, `MYSQL_8_0_26`, `MYSQL_5_7`,
   * or `MYSQL_5_6`. PostgreSQL instances: `POSTGRES_9_6`, `POSTGRES_10`,
   * `POSTGRES_11` or `POSTGRES_12`. SQL Server instances:
   * `SQLSERVER_2017_STANDARD`, `SQLSERVER_2017_ENTERPRISE`,
   * `SQLSERVER_2017_EXPRESS`, `SQLSERVER_2017_WEB`, `SQLSERVER_2019_STANDARD`,
   * `SQLSERVER_2019_ENTERPRISE`, `SQLSERVER_2019_EXPRESS`, or
   * `SQLSERVER_2019_WEB`.
   * See [the complete
   * list](/sql/docs/mysql/admin-api/rest/v1/SqlDatabaseVersion).
   * </pre>
   *
   * <code>repeated .google.cloud.sql.v1beta4.SqlDatabaseVersion applies_to = 3;</code>
   * @return A list containing the appliesTo.
   */
  java.util.List<com.google.cloud.sql.v1beta4.SqlDatabaseVersion> getAppliesToList();
  /**
   * <pre>
   * The database version this flag applies to. Can be
   * MySQL instances: `MYSQL_8_0`, `MYSQL_8_0_18`, `MYSQL_8_0_26`, `MYSQL_5_7`,
   * or `MYSQL_5_6`. PostgreSQL instances: `POSTGRES_9_6`, `POSTGRES_10`,
   * `POSTGRES_11` or `POSTGRES_12`. SQL Server instances:
   * `SQLSERVER_2017_STANDARD`, `SQLSERVER_2017_ENTERPRISE`,
   * `SQLSERVER_2017_EXPRESS`, `SQLSERVER_2017_WEB`, `SQLSERVER_2019_STANDARD`,
   * `SQLSERVER_2019_ENTERPRISE`, `SQLSERVER_2019_EXPRESS`, or
   * `SQLSERVER_2019_WEB`.
   * See [the complete
   * list](/sql/docs/mysql/admin-api/rest/v1/SqlDatabaseVersion).
   * </pre>
   *
   * <code>repeated .google.cloud.sql.v1beta4.SqlDatabaseVersion applies_to = 3;</code>
   * @return The count of appliesTo.
   */
  int getAppliesToCount();
  /**
   * <pre>
   * The database version this flag applies to. Can be
   * MySQL instances: `MYSQL_8_0`, `MYSQL_8_0_18`, `MYSQL_8_0_26`, `MYSQL_5_7`,
   * or `MYSQL_5_6`. PostgreSQL instances: `POSTGRES_9_6`, `POSTGRES_10`,
   * `POSTGRES_11` or `POSTGRES_12`. SQL Server instances:
   * `SQLSERVER_2017_STANDARD`, `SQLSERVER_2017_ENTERPRISE`,
   * `SQLSERVER_2017_EXPRESS`, `SQLSERVER_2017_WEB`, `SQLSERVER_2019_STANDARD`,
   * `SQLSERVER_2019_ENTERPRISE`, `SQLSERVER_2019_EXPRESS`, or
   * `SQLSERVER_2019_WEB`.
   * See [the complete
   * list](/sql/docs/mysql/admin-api/rest/v1/SqlDatabaseVersion).
   * </pre>
   *
   * <code>repeated .google.cloud.sql.v1beta4.SqlDatabaseVersion applies_to = 3;</code>
   * @param index The index of the element to return.
   * @return The appliesTo at the given index.
   */
  com.google.cloud.sql.v1beta4.SqlDatabaseVersion getAppliesTo(int index);
  /**
   * <pre>
   * The database version this flag applies to. Can be
   * MySQL instances: `MYSQL_8_0`, `MYSQL_8_0_18`, `MYSQL_8_0_26`, `MYSQL_5_7`,
   * or `MYSQL_5_6`. PostgreSQL instances: `POSTGRES_9_6`, `POSTGRES_10`,
   * `POSTGRES_11` or `POSTGRES_12`. SQL Server instances:
   * `SQLSERVER_2017_STANDARD`, `SQLSERVER_2017_ENTERPRISE`,
   * `SQLSERVER_2017_EXPRESS`, `SQLSERVER_2017_WEB`, `SQLSERVER_2019_STANDARD`,
   * `SQLSERVER_2019_ENTERPRISE`, `SQLSERVER_2019_EXPRESS`, or
   * `SQLSERVER_2019_WEB`.
   * See [the complete
   * list](/sql/docs/mysql/admin-api/rest/v1/SqlDatabaseVersion).
   * </pre>
   *
   * <code>repeated .google.cloud.sql.v1beta4.SqlDatabaseVersion applies_to = 3;</code>
   * @return A list containing the enum numeric values on the wire for appliesTo.
   */
  java.util.List<java.lang.Integer>
  getAppliesToValueList();
  /**
   * <pre>
   * The database version this flag applies to. Can be
   * MySQL instances: `MYSQL_8_0`, `MYSQL_8_0_18`, `MYSQL_8_0_26`, `MYSQL_5_7`,
   * or `MYSQL_5_6`. PostgreSQL instances: `POSTGRES_9_6`, `POSTGRES_10`,
   * `POSTGRES_11` or `POSTGRES_12`. SQL Server instances:
   * `SQLSERVER_2017_STANDARD`, `SQLSERVER_2017_ENTERPRISE`,
   * `SQLSERVER_2017_EXPRESS`, `SQLSERVER_2017_WEB`, `SQLSERVER_2019_STANDARD`,
   * `SQLSERVER_2019_ENTERPRISE`, `SQLSERVER_2019_EXPRESS`, or
   * `SQLSERVER_2019_WEB`.
   * See [the complete
   * list](/sql/docs/mysql/admin-api/rest/v1/SqlDatabaseVersion).
   * </pre>
   *
   * <code>repeated .google.cloud.sql.v1beta4.SqlDatabaseVersion applies_to = 3;</code>
   * @param index The index of the value to return.
   * @return The enum numeric value on the wire of appliesTo at the given index.
   */
  int getAppliesToValue(int index);

  /**
   * <pre>
   * For `STRING` flags, a list of strings that the value can be set to.
   * </pre>
   *
   * <code>repeated string allowed_string_values = 4;</code>
   * @return A list containing the allowedStringValues.
   */
  java.util.List<java.lang.String>
      getAllowedStringValuesList();
  /**
   * <pre>
   * For `STRING` flags, a list of strings that the value can be set to.
   * </pre>
   *
   * <code>repeated string allowed_string_values = 4;</code>
   * @return The count of allowedStringValues.
   */
  int getAllowedStringValuesCount();
  /**
   * <pre>
   * For `STRING` flags, a list of strings that the value can be set to.
   * </pre>
   *
   * <code>repeated string allowed_string_values = 4;</code>
   * @param index The index of the element to return.
   * @return The allowedStringValues at the given index.
   */
  java.lang.String getAllowedStringValues(int index);
  /**
   * <pre>
   * For `STRING` flags, a list of strings that the value can be set to.
   * </pre>
   *
   * <code>repeated string allowed_string_values = 4;</code>
   * @param index The index of the value to return.
   * @return The bytes of the allowedStringValues at the given index.
   */
  com.google.protobuf.ByteString
      getAllowedStringValuesBytes(int index);

  /**
   * <pre>
   * For `INTEGER` flags, the minimum allowed value.
   * </pre>
   *
   * <code>.google.protobuf.Int64Value min_value = 5;</code>
   * @return Whether the minValue field is set.
   */
  boolean hasMinValue();
  /**
   * <pre>
   * For `INTEGER` flags, the minimum allowed value.
   * </pre>
   *
   * <code>.google.protobuf.Int64Value min_value = 5;</code>
   * @return The minValue.
   */
  com.google.protobuf.Int64Value getMinValue();
  /**
   * <pre>
   * For `INTEGER` flags, the minimum allowed value.
   * </pre>
   *
   * <code>.google.protobuf.Int64Value min_value = 5;</code>
   */
  com.google.protobuf.Int64ValueOrBuilder getMinValueOrBuilder();

  /**
   * <pre>
   * For `INTEGER` flags, the maximum allowed value.
   * </pre>
   *
   * <code>.google.protobuf.Int64Value max_value = 6;</code>
   * @return Whether the maxValue field is set.
   */
  boolean hasMaxValue();
  /**
   * <pre>
   * For `INTEGER` flags, the maximum allowed value.
   * </pre>
   *
   * <code>.google.protobuf.Int64Value max_value = 6;</code>
   * @return The maxValue.
   */
  com.google.protobuf.Int64Value getMaxValue();
  /**
   * <pre>
   * For `INTEGER` flags, the maximum allowed value.
   * </pre>
   *
   * <code>.google.protobuf.Int64Value max_value = 6;</code>
   */
  com.google.protobuf.Int64ValueOrBuilder getMaxValueOrBuilder();

  /**
   * <pre>
   * Indicates whether changing this flag will trigger a database restart. Only
   * applicable to Second Generation instances.
   * </pre>
   *
   * <code>.google.protobuf.BoolValue requires_restart = 7;</code>
   * @return Whether the requiresRestart field is set.
   */
  boolean hasRequiresRestart();
  /**
   * <pre>
   * Indicates whether changing this flag will trigger a database restart. Only
   * applicable to Second Generation instances.
   * </pre>
   *
   * <code>.google.protobuf.BoolValue requires_restart = 7;</code>
   * @return The requiresRestart.
   */
  com.google.protobuf.BoolValue getRequiresRestart();
  /**
   * <pre>
   * Indicates whether changing this flag will trigger a database restart. Only
   * applicable to Second Generation instances.
   * </pre>
   *
   * <code>.google.protobuf.BoolValue requires_restart = 7;</code>
   */
  com.google.protobuf.BoolValueOrBuilder getRequiresRestartOrBuilder();

  /**
   * <pre>
   * This is always `sql#flag`.
   * </pre>
   *
   * <code>string kind = 8;</code>
   * @return The kind.
   */
  java.lang.String getKind();
  /**
   * <pre>
   * This is always `sql#flag`.
   * </pre>
   *
   * <code>string kind = 8;</code>
   * @return The bytes for kind.
   */
  com.google.protobuf.ByteString
      getKindBytes();

  /**
   * <pre>
   * Whether or not the flag is considered in beta.
   * </pre>
   *
   * <code>.google.protobuf.BoolValue in_beta = 9;</code>
   * @return Whether the inBeta field is set.
   */
  boolean hasInBeta();
  /**
   * <pre>
   * Whether or not the flag is considered in beta.
   * </pre>
   *
   * <code>.google.protobuf.BoolValue in_beta = 9;</code>
   * @return The inBeta.
   */
  com.google.protobuf.BoolValue getInBeta();
  /**
   * <pre>
   * Whether or not the flag is considered in beta.
   * </pre>
   *
   * <code>.google.protobuf.BoolValue in_beta = 9;</code>
   */
  com.google.protobuf.BoolValueOrBuilder getInBetaOrBuilder();

  /**
   * <pre>
   * Use this field if only certain integers are accepted. Can be combined
   * with min_value and max_value to add additional values.
   * </pre>
   *
   * <code>repeated int64 allowed_int_values = 10;</code>
   * @return A list containing the allowedIntValues.
   */
  java.util.List<java.lang.Long> getAllowedIntValuesList();
  /**
   * <pre>
   * Use this field if only certain integers are accepted. Can be combined
   * with min_value and max_value to add additional values.
   * </pre>
   *
   * <code>repeated int64 allowed_int_values = 10;</code>
   * @return The count of allowedIntValues.
   */
  int getAllowedIntValuesCount();
  /**
   * <pre>
   * Use this field if only certain integers are accepted. Can be combined
   * with min_value and max_value to add additional values.
   * </pre>
   *
   * <code>repeated int64 allowed_int_values = 10;</code>
   * @param index The index of the element to return.
   * @return The allowedIntValues at the given index.
   */
  long getAllowedIntValues(int index);
}
