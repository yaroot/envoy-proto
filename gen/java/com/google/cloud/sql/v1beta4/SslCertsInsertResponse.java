// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: google/cloud/sql/v1beta4/cloud_sql_resources.proto

package com.google.cloud.sql.v1beta4;

/**
 * <pre>
 * SslCert insert response.
 * </pre>
 *
 * Protobuf type {@code google.cloud.sql.v1beta4.SslCertsInsertResponse}
 */
public final class SslCertsInsertResponse extends
    com.google.protobuf.GeneratedMessageV3 implements
    // @@protoc_insertion_point(message_implements:google.cloud.sql.v1beta4.SslCertsInsertResponse)
    SslCertsInsertResponseOrBuilder {
private static final long serialVersionUID = 0L;
  // Use SslCertsInsertResponse.newBuilder() to construct.
  private SslCertsInsertResponse(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
    super(builder);
  }
  private SslCertsInsertResponse() {
    kind_ = "";
  }

  @java.lang.Override
  @SuppressWarnings({"unused"})
  protected java.lang.Object newInstance(
      UnusedPrivateParameter unused) {
    return new SslCertsInsertResponse();
  }

  @java.lang.Override
  public final com.google.protobuf.UnknownFieldSet
  getUnknownFields() {
    return this.unknownFields;
  }
  public static final com.google.protobuf.Descriptors.Descriptor
      getDescriptor() {
    return com.google.cloud.sql.v1beta4.CloudSqlResourcesProto.internal_static_google_cloud_sql_v1beta4_SslCertsInsertResponse_descriptor;
  }

  @java.lang.Override
  protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internalGetFieldAccessorTable() {
    return com.google.cloud.sql.v1beta4.CloudSqlResourcesProto.internal_static_google_cloud_sql_v1beta4_SslCertsInsertResponse_fieldAccessorTable
        .ensureFieldAccessorsInitialized(
            com.google.cloud.sql.v1beta4.SslCertsInsertResponse.class, com.google.cloud.sql.v1beta4.SslCertsInsertResponse.Builder.class);
  }

  public static final int KIND_FIELD_NUMBER = 1;
  @SuppressWarnings("serial")
  private volatile java.lang.Object kind_ = "";
  /**
   * <pre>
   * This is always `sql#sslCertsInsert`.
   * </pre>
   *
   * <code>string kind = 1;</code>
   * @return The kind.
   */
  @java.lang.Override
  public java.lang.String getKind() {
    java.lang.Object ref = kind_;
    if (ref instanceof java.lang.String) {
      return (java.lang.String) ref;
    } else {
      com.google.protobuf.ByteString bs = 
          (com.google.protobuf.ByteString) ref;
      java.lang.String s = bs.toStringUtf8();
      kind_ = s;
      return s;
    }
  }
  /**
   * <pre>
   * This is always `sql#sslCertsInsert`.
   * </pre>
   *
   * <code>string kind = 1;</code>
   * @return The bytes for kind.
   */
  @java.lang.Override
  public com.google.protobuf.ByteString
      getKindBytes() {
    java.lang.Object ref = kind_;
    if (ref instanceof java.lang.String) {
      com.google.protobuf.ByteString b = 
          com.google.protobuf.ByteString.copyFromUtf8(
              (java.lang.String) ref);
      kind_ = b;
      return b;
    } else {
      return (com.google.protobuf.ByteString) ref;
    }
  }

  public static final int OPERATION_FIELD_NUMBER = 2;
  private com.google.cloud.sql.v1beta4.Operation operation_;
  /**
   * <pre>
   * The operation to track the ssl certs insert request.
   * </pre>
   *
   * <code>.google.cloud.sql.v1beta4.Operation operation = 2;</code>
   * @return Whether the operation field is set.
   */
  @java.lang.Override
  public boolean hasOperation() {
    return operation_ != null;
  }
  /**
   * <pre>
   * The operation to track the ssl certs insert request.
   * </pre>
   *
   * <code>.google.cloud.sql.v1beta4.Operation operation = 2;</code>
   * @return The operation.
   */
  @java.lang.Override
  public com.google.cloud.sql.v1beta4.Operation getOperation() {
    return operation_ == null ? com.google.cloud.sql.v1beta4.Operation.getDefaultInstance() : operation_;
  }
  /**
   * <pre>
   * The operation to track the ssl certs insert request.
   * </pre>
   *
   * <code>.google.cloud.sql.v1beta4.Operation operation = 2;</code>
   */
  @java.lang.Override
  public com.google.cloud.sql.v1beta4.OperationOrBuilder getOperationOrBuilder() {
    return operation_ == null ? com.google.cloud.sql.v1beta4.Operation.getDefaultInstance() : operation_;
  }

  public static final int SERVER_CA_CERT_FIELD_NUMBER = 3;
  private com.google.cloud.sql.v1beta4.SslCert serverCaCert_;
  /**
   * <pre>
   * The server Certificate Authority's certificate.  If this is missing you can
   * force a new one to be generated by calling resetSslConfig method on
   * instances resource.
   * </pre>
   *
   * <code>.google.cloud.sql.v1beta4.SslCert server_ca_cert = 3;</code>
   * @return Whether the serverCaCert field is set.
   */
  @java.lang.Override
  public boolean hasServerCaCert() {
    return serverCaCert_ != null;
  }
  /**
   * <pre>
   * The server Certificate Authority's certificate.  If this is missing you can
   * force a new one to be generated by calling resetSslConfig method on
   * instances resource.
   * </pre>
   *
   * <code>.google.cloud.sql.v1beta4.SslCert server_ca_cert = 3;</code>
   * @return The serverCaCert.
   */
  @java.lang.Override
  public com.google.cloud.sql.v1beta4.SslCert getServerCaCert() {
    return serverCaCert_ == null ? com.google.cloud.sql.v1beta4.SslCert.getDefaultInstance() : serverCaCert_;
  }
  /**
   * <pre>
   * The server Certificate Authority's certificate.  If this is missing you can
   * force a new one to be generated by calling resetSslConfig method on
   * instances resource.
   * </pre>
   *
   * <code>.google.cloud.sql.v1beta4.SslCert server_ca_cert = 3;</code>
   */
  @java.lang.Override
  public com.google.cloud.sql.v1beta4.SslCertOrBuilder getServerCaCertOrBuilder() {
    return serverCaCert_ == null ? com.google.cloud.sql.v1beta4.SslCert.getDefaultInstance() : serverCaCert_;
  }

  public static final int CLIENT_CERT_FIELD_NUMBER = 4;
  private com.google.cloud.sql.v1beta4.SslCertDetail clientCert_;
  /**
   * <pre>
   * The new client certificate and private key.
   * </pre>
   *
   * <code>.google.cloud.sql.v1beta4.SslCertDetail client_cert = 4;</code>
   * @return Whether the clientCert field is set.
   */
  @java.lang.Override
  public boolean hasClientCert() {
    return clientCert_ != null;
  }
  /**
   * <pre>
   * The new client certificate and private key.
   * </pre>
   *
   * <code>.google.cloud.sql.v1beta4.SslCertDetail client_cert = 4;</code>
   * @return The clientCert.
   */
  @java.lang.Override
  public com.google.cloud.sql.v1beta4.SslCertDetail getClientCert() {
    return clientCert_ == null ? com.google.cloud.sql.v1beta4.SslCertDetail.getDefaultInstance() : clientCert_;
  }
  /**
   * <pre>
   * The new client certificate and private key.
   * </pre>
   *
   * <code>.google.cloud.sql.v1beta4.SslCertDetail client_cert = 4;</code>
   */
  @java.lang.Override
  public com.google.cloud.sql.v1beta4.SslCertDetailOrBuilder getClientCertOrBuilder() {
    return clientCert_ == null ? com.google.cloud.sql.v1beta4.SslCertDetail.getDefaultInstance() : clientCert_;
  }

  private byte memoizedIsInitialized = -1;
  @java.lang.Override
  public final boolean isInitialized() {
    byte isInitialized = memoizedIsInitialized;
    if (isInitialized == 1) return true;
    if (isInitialized == 0) return false;

    memoizedIsInitialized = 1;
    return true;
  }

  @java.lang.Override
  public void writeTo(com.google.protobuf.CodedOutputStream output)
                      throws java.io.IOException {
    if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(kind_)) {
      com.google.protobuf.GeneratedMessageV3.writeString(output, 1, kind_);
    }
    if (operation_ != null) {
      output.writeMessage(2, getOperation());
    }
    if (serverCaCert_ != null) {
      output.writeMessage(3, getServerCaCert());
    }
    if (clientCert_ != null) {
      output.writeMessage(4, getClientCert());
    }
    getUnknownFields().writeTo(output);
  }

  @java.lang.Override
  public int getSerializedSize() {
    int size = memoizedSize;
    if (size != -1) return size;

    size = 0;
    if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(kind_)) {
      size += com.google.protobuf.GeneratedMessageV3.computeStringSize(1, kind_);
    }
    if (operation_ != null) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(2, getOperation());
    }
    if (serverCaCert_ != null) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(3, getServerCaCert());
    }
    if (clientCert_ != null) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(4, getClientCert());
    }
    size += getUnknownFields().getSerializedSize();
    memoizedSize = size;
    return size;
  }

  @java.lang.Override
  public boolean equals(final java.lang.Object obj) {
    if (obj == this) {
     return true;
    }
    if (!(obj instanceof com.google.cloud.sql.v1beta4.SslCertsInsertResponse)) {
      return super.equals(obj);
    }
    com.google.cloud.sql.v1beta4.SslCertsInsertResponse other = (com.google.cloud.sql.v1beta4.SslCertsInsertResponse) obj;

    if (!getKind()
        .equals(other.getKind())) return false;
    if (hasOperation() != other.hasOperation()) return false;
    if (hasOperation()) {
      if (!getOperation()
          .equals(other.getOperation())) return false;
    }
    if (hasServerCaCert() != other.hasServerCaCert()) return false;
    if (hasServerCaCert()) {
      if (!getServerCaCert()
          .equals(other.getServerCaCert())) return false;
    }
    if (hasClientCert() != other.hasClientCert()) return false;
    if (hasClientCert()) {
      if (!getClientCert()
          .equals(other.getClientCert())) return false;
    }
    if (!getUnknownFields().equals(other.getUnknownFields())) return false;
    return true;
  }

  @java.lang.Override
  public int hashCode() {
    if (memoizedHashCode != 0) {
      return memoizedHashCode;
    }
    int hash = 41;
    hash = (19 * hash) + getDescriptor().hashCode();
    hash = (37 * hash) + KIND_FIELD_NUMBER;
    hash = (53 * hash) + getKind().hashCode();
    if (hasOperation()) {
      hash = (37 * hash) + OPERATION_FIELD_NUMBER;
      hash = (53 * hash) + getOperation().hashCode();
    }
    if (hasServerCaCert()) {
      hash = (37 * hash) + SERVER_CA_CERT_FIELD_NUMBER;
      hash = (53 * hash) + getServerCaCert().hashCode();
    }
    if (hasClientCert()) {
      hash = (37 * hash) + CLIENT_CERT_FIELD_NUMBER;
      hash = (53 * hash) + getClientCert().hashCode();
    }
    hash = (29 * hash) + getUnknownFields().hashCode();
    memoizedHashCode = hash;
    return hash;
  }

  public static com.google.cloud.sql.v1beta4.SslCertsInsertResponse parseFrom(
      java.nio.ByteBuffer data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static com.google.cloud.sql.v1beta4.SslCertsInsertResponse parseFrom(
      java.nio.ByteBuffer data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static com.google.cloud.sql.v1beta4.SslCertsInsertResponse parseFrom(
      com.google.protobuf.ByteString data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static com.google.cloud.sql.v1beta4.SslCertsInsertResponse parseFrom(
      com.google.protobuf.ByteString data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static com.google.cloud.sql.v1beta4.SslCertsInsertResponse parseFrom(byte[] data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static com.google.cloud.sql.v1beta4.SslCertsInsertResponse parseFrom(
      byte[] data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static com.google.cloud.sql.v1beta4.SslCertsInsertResponse parseFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input);
  }
  public static com.google.cloud.sql.v1beta4.SslCertsInsertResponse parseFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input, extensionRegistry);
  }
  public static com.google.cloud.sql.v1beta4.SslCertsInsertResponse parseDelimitedFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseDelimitedWithIOException(PARSER, input);
  }
  public static com.google.cloud.sql.v1beta4.SslCertsInsertResponse parseDelimitedFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
  }
  public static com.google.cloud.sql.v1beta4.SslCertsInsertResponse parseFrom(
      com.google.protobuf.CodedInputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input);
  }
  public static com.google.cloud.sql.v1beta4.SslCertsInsertResponse parseFrom(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input, extensionRegistry);
  }

  @java.lang.Override
  public Builder newBuilderForType() { return newBuilder(); }
  public static Builder newBuilder() {
    return DEFAULT_INSTANCE.toBuilder();
  }
  public static Builder newBuilder(com.google.cloud.sql.v1beta4.SslCertsInsertResponse prototype) {
    return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
  }
  @java.lang.Override
  public Builder toBuilder() {
    return this == DEFAULT_INSTANCE
        ? new Builder() : new Builder().mergeFrom(this);
  }

  @java.lang.Override
  protected Builder newBuilderForType(
      com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
    Builder builder = new Builder(parent);
    return builder;
  }
  /**
   * <pre>
   * SslCert insert response.
   * </pre>
   *
   * Protobuf type {@code google.cloud.sql.v1beta4.SslCertsInsertResponse}
   */
  public static final class Builder extends
      com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
      // @@protoc_insertion_point(builder_implements:google.cloud.sql.v1beta4.SslCertsInsertResponse)
      com.google.cloud.sql.v1beta4.SslCertsInsertResponseOrBuilder {
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.google.cloud.sql.v1beta4.CloudSqlResourcesProto.internal_static_google_cloud_sql_v1beta4_SslCertsInsertResponse_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.google.cloud.sql.v1beta4.CloudSqlResourcesProto.internal_static_google_cloud_sql_v1beta4_SslCertsInsertResponse_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.google.cloud.sql.v1beta4.SslCertsInsertResponse.class, com.google.cloud.sql.v1beta4.SslCertsInsertResponse.Builder.class);
    }

    // Construct using com.google.cloud.sql.v1beta4.SslCertsInsertResponse.newBuilder()
    private Builder() {

    }

    private Builder(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      super(parent);

    }
    @java.lang.Override
    public Builder clear() {
      super.clear();
      bitField0_ = 0;
      kind_ = "";
      operation_ = null;
      if (operationBuilder_ != null) {
        operationBuilder_.dispose();
        operationBuilder_ = null;
      }
      serverCaCert_ = null;
      if (serverCaCertBuilder_ != null) {
        serverCaCertBuilder_.dispose();
        serverCaCertBuilder_ = null;
      }
      clientCert_ = null;
      if (clientCertBuilder_ != null) {
        clientCertBuilder_.dispose();
        clientCertBuilder_ = null;
      }
      return this;
    }

    @java.lang.Override
    public com.google.protobuf.Descriptors.Descriptor
        getDescriptorForType() {
      return com.google.cloud.sql.v1beta4.CloudSqlResourcesProto.internal_static_google_cloud_sql_v1beta4_SslCertsInsertResponse_descriptor;
    }

    @java.lang.Override
    public com.google.cloud.sql.v1beta4.SslCertsInsertResponse getDefaultInstanceForType() {
      return com.google.cloud.sql.v1beta4.SslCertsInsertResponse.getDefaultInstance();
    }

    @java.lang.Override
    public com.google.cloud.sql.v1beta4.SslCertsInsertResponse build() {
      com.google.cloud.sql.v1beta4.SslCertsInsertResponse result = buildPartial();
      if (!result.isInitialized()) {
        throw newUninitializedMessageException(result);
      }
      return result;
    }

    @java.lang.Override
    public com.google.cloud.sql.v1beta4.SslCertsInsertResponse buildPartial() {
      com.google.cloud.sql.v1beta4.SslCertsInsertResponse result = new com.google.cloud.sql.v1beta4.SslCertsInsertResponse(this);
      if (bitField0_ != 0) { buildPartial0(result); }
      onBuilt();
      return result;
    }

    private void buildPartial0(com.google.cloud.sql.v1beta4.SslCertsInsertResponse result) {
      int from_bitField0_ = bitField0_;
      if (((from_bitField0_ & 0x00000001) != 0)) {
        result.kind_ = kind_;
      }
      if (((from_bitField0_ & 0x00000002) != 0)) {
        result.operation_ = operationBuilder_ == null
            ? operation_
            : operationBuilder_.build();
      }
      if (((from_bitField0_ & 0x00000004) != 0)) {
        result.serverCaCert_ = serverCaCertBuilder_ == null
            ? serverCaCert_
            : serverCaCertBuilder_.build();
      }
      if (((from_bitField0_ & 0x00000008) != 0)) {
        result.clientCert_ = clientCertBuilder_ == null
            ? clientCert_
            : clientCertBuilder_.build();
      }
    }

    @java.lang.Override
    public Builder clone() {
      return super.clone();
    }
    @java.lang.Override
    public Builder setField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        java.lang.Object value) {
      return super.setField(field, value);
    }
    @java.lang.Override
    public Builder clearField(
        com.google.protobuf.Descriptors.FieldDescriptor field) {
      return super.clearField(field);
    }
    @java.lang.Override
    public Builder clearOneof(
        com.google.protobuf.Descriptors.OneofDescriptor oneof) {
      return super.clearOneof(oneof);
    }
    @java.lang.Override
    public Builder setRepeatedField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        int index, java.lang.Object value) {
      return super.setRepeatedField(field, index, value);
    }
    @java.lang.Override
    public Builder addRepeatedField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        java.lang.Object value) {
      return super.addRepeatedField(field, value);
    }
    @java.lang.Override
    public Builder mergeFrom(com.google.protobuf.Message other) {
      if (other instanceof com.google.cloud.sql.v1beta4.SslCertsInsertResponse) {
        return mergeFrom((com.google.cloud.sql.v1beta4.SslCertsInsertResponse)other);
      } else {
        super.mergeFrom(other);
        return this;
      }
    }

    public Builder mergeFrom(com.google.cloud.sql.v1beta4.SslCertsInsertResponse other) {
      if (other == com.google.cloud.sql.v1beta4.SslCertsInsertResponse.getDefaultInstance()) return this;
      if (!other.getKind().isEmpty()) {
        kind_ = other.kind_;
        bitField0_ |= 0x00000001;
        onChanged();
      }
      if (other.hasOperation()) {
        mergeOperation(other.getOperation());
      }
      if (other.hasServerCaCert()) {
        mergeServerCaCert(other.getServerCaCert());
      }
      if (other.hasClientCert()) {
        mergeClientCert(other.getClientCert());
      }
      this.mergeUnknownFields(other.getUnknownFields());
      onChanged();
      return this;
    }

    @java.lang.Override
    public final boolean isInitialized() {
      return true;
    }

    @java.lang.Override
    public Builder mergeFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 10: {
              kind_ = input.readStringRequireUtf8();
              bitField0_ |= 0x00000001;
              break;
            } // case 10
            case 18: {
              input.readMessage(
                  getOperationFieldBuilder().getBuilder(),
                  extensionRegistry);
              bitField0_ |= 0x00000002;
              break;
            } // case 18
            case 26: {
              input.readMessage(
                  getServerCaCertFieldBuilder().getBuilder(),
                  extensionRegistry);
              bitField0_ |= 0x00000004;
              break;
            } // case 26
            case 34: {
              input.readMessage(
                  getClientCertFieldBuilder().getBuilder(),
                  extensionRegistry);
              bitField0_ |= 0x00000008;
              break;
            } // case 34
            default: {
              if (!super.parseUnknownField(input, extensionRegistry, tag)) {
                done = true; // was an endgroup tag
              }
              break;
            } // default:
          } // switch (tag)
        } // while (!done)
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.unwrapIOException();
      } finally {
        onChanged();
      } // finally
      return this;
    }
    private int bitField0_;

    private java.lang.Object kind_ = "";
    /**
     * <pre>
     * This is always `sql#sslCertsInsert`.
     * </pre>
     *
     * <code>string kind = 1;</code>
     * @return The kind.
     */
    public java.lang.String getKind() {
      java.lang.Object ref = kind_;
      if (!(ref instanceof java.lang.String)) {
        com.google.protobuf.ByteString bs =
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        kind_ = s;
        return s;
      } else {
        return (java.lang.String) ref;
      }
    }
    /**
     * <pre>
     * This is always `sql#sslCertsInsert`.
     * </pre>
     *
     * <code>string kind = 1;</code>
     * @return The bytes for kind.
     */
    public com.google.protobuf.ByteString
        getKindBytes() {
      java.lang.Object ref = kind_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        kind_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }
    /**
     * <pre>
     * This is always `sql#sslCertsInsert`.
     * </pre>
     *
     * <code>string kind = 1;</code>
     * @param value The kind to set.
     * @return This builder for chaining.
     */
    public Builder setKind(
        java.lang.String value) {
      if (value == null) { throw new NullPointerException(); }
      kind_ = value;
      bitField0_ |= 0x00000001;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * This is always `sql#sslCertsInsert`.
     * </pre>
     *
     * <code>string kind = 1;</code>
     * @return This builder for chaining.
     */
    public Builder clearKind() {
      kind_ = getDefaultInstance().getKind();
      bitField0_ = (bitField0_ & ~0x00000001);
      onChanged();
      return this;
    }
    /**
     * <pre>
     * This is always `sql#sslCertsInsert`.
     * </pre>
     *
     * <code>string kind = 1;</code>
     * @param value The bytes for kind to set.
     * @return This builder for chaining.
     */
    public Builder setKindBytes(
        com.google.protobuf.ByteString value) {
      if (value == null) { throw new NullPointerException(); }
      checkByteStringIsUtf8(value);
      kind_ = value;
      bitField0_ |= 0x00000001;
      onChanged();
      return this;
    }

    private com.google.cloud.sql.v1beta4.Operation operation_;
    private com.google.protobuf.SingleFieldBuilderV3<
        com.google.cloud.sql.v1beta4.Operation, com.google.cloud.sql.v1beta4.Operation.Builder, com.google.cloud.sql.v1beta4.OperationOrBuilder> operationBuilder_;
    /**
     * <pre>
     * The operation to track the ssl certs insert request.
     * </pre>
     *
     * <code>.google.cloud.sql.v1beta4.Operation operation = 2;</code>
     * @return Whether the operation field is set.
     */
    public boolean hasOperation() {
      return ((bitField0_ & 0x00000002) != 0);
    }
    /**
     * <pre>
     * The operation to track the ssl certs insert request.
     * </pre>
     *
     * <code>.google.cloud.sql.v1beta4.Operation operation = 2;</code>
     * @return The operation.
     */
    public com.google.cloud.sql.v1beta4.Operation getOperation() {
      if (operationBuilder_ == null) {
        return operation_ == null ? com.google.cloud.sql.v1beta4.Operation.getDefaultInstance() : operation_;
      } else {
        return operationBuilder_.getMessage();
      }
    }
    /**
     * <pre>
     * The operation to track the ssl certs insert request.
     * </pre>
     *
     * <code>.google.cloud.sql.v1beta4.Operation operation = 2;</code>
     */
    public Builder setOperation(com.google.cloud.sql.v1beta4.Operation value) {
      if (operationBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        operation_ = value;
      } else {
        operationBuilder_.setMessage(value);
      }
      bitField0_ |= 0x00000002;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * The operation to track the ssl certs insert request.
     * </pre>
     *
     * <code>.google.cloud.sql.v1beta4.Operation operation = 2;</code>
     */
    public Builder setOperation(
        com.google.cloud.sql.v1beta4.Operation.Builder builderForValue) {
      if (operationBuilder_ == null) {
        operation_ = builderForValue.build();
      } else {
        operationBuilder_.setMessage(builderForValue.build());
      }
      bitField0_ |= 0x00000002;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * The operation to track the ssl certs insert request.
     * </pre>
     *
     * <code>.google.cloud.sql.v1beta4.Operation operation = 2;</code>
     */
    public Builder mergeOperation(com.google.cloud.sql.v1beta4.Operation value) {
      if (operationBuilder_ == null) {
        if (((bitField0_ & 0x00000002) != 0) &&
          operation_ != null &&
          operation_ != com.google.cloud.sql.v1beta4.Operation.getDefaultInstance()) {
          getOperationBuilder().mergeFrom(value);
        } else {
          operation_ = value;
        }
      } else {
        operationBuilder_.mergeFrom(value);
      }
      bitField0_ |= 0x00000002;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * The operation to track the ssl certs insert request.
     * </pre>
     *
     * <code>.google.cloud.sql.v1beta4.Operation operation = 2;</code>
     */
    public Builder clearOperation() {
      bitField0_ = (bitField0_ & ~0x00000002);
      operation_ = null;
      if (operationBuilder_ != null) {
        operationBuilder_.dispose();
        operationBuilder_ = null;
      }
      onChanged();
      return this;
    }
    /**
     * <pre>
     * The operation to track the ssl certs insert request.
     * </pre>
     *
     * <code>.google.cloud.sql.v1beta4.Operation operation = 2;</code>
     */
    public com.google.cloud.sql.v1beta4.Operation.Builder getOperationBuilder() {
      bitField0_ |= 0x00000002;
      onChanged();
      return getOperationFieldBuilder().getBuilder();
    }
    /**
     * <pre>
     * The operation to track the ssl certs insert request.
     * </pre>
     *
     * <code>.google.cloud.sql.v1beta4.Operation operation = 2;</code>
     */
    public com.google.cloud.sql.v1beta4.OperationOrBuilder getOperationOrBuilder() {
      if (operationBuilder_ != null) {
        return operationBuilder_.getMessageOrBuilder();
      } else {
        return operation_ == null ?
            com.google.cloud.sql.v1beta4.Operation.getDefaultInstance() : operation_;
      }
    }
    /**
     * <pre>
     * The operation to track the ssl certs insert request.
     * </pre>
     *
     * <code>.google.cloud.sql.v1beta4.Operation operation = 2;</code>
     */
    private com.google.protobuf.SingleFieldBuilderV3<
        com.google.cloud.sql.v1beta4.Operation, com.google.cloud.sql.v1beta4.Operation.Builder, com.google.cloud.sql.v1beta4.OperationOrBuilder> 
        getOperationFieldBuilder() {
      if (operationBuilder_ == null) {
        operationBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
            com.google.cloud.sql.v1beta4.Operation, com.google.cloud.sql.v1beta4.Operation.Builder, com.google.cloud.sql.v1beta4.OperationOrBuilder>(
                getOperation(),
                getParentForChildren(),
                isClean());
        operation_ = null;
      }
      return operationBuilder_;
    }

    private com.google.cloud.sql.v1beta4.SslCert serverCaCert_;
    private com.google.protobuf.SingleFieldBuilderV3<
        com.google.cloud.sql.v1beta4.SslCert, com.google.cloud.sql.v1beta4.SslCert.Builder, com.google.cloud.sql.v1beta4.SslCertOrBuilder> serverCaCertBuilder_;
    /**
     * <pre>
     * The server Certificate Authority's certificate.  If this is missing you can
     * force a new one to be generated by calling resetSslConfig method on
     * instances resource.
     * </pre>
     *
     * <code>.google.cloud.sql.v1beta4.SslCert server_ca_cert = 3;</code>
     * @return Whether the serverCaCert field is set.
     */
    public boolean hasServerCaCert() {
      return ((bitField0_ & 0x00000004) != 0);
    }
    /**
     * <pre>
     * The server Certificate Authority's certificate.  If this is missing you can
     * force a new one to be generated by calling resetSslConfig method on
     * instances resource.
     * </pre>
     *
     * <code>.google.cloud.sql.v1beta4.SslCert server_ca_cert = 3;</code>
     * @return The serverCaCert.
     */
    public com.google.cloud.sql.v1beta4.SslCert getServerCaCert() {
      if (serverCaCertBuilder_ == null) {
        return serverCaCert_ == null ? com.google.cloud.sql.v1beta4.SslCert.getDefaultInstance() : serverCaCert_;
      } else {
        return serverCaCertBuilder_.getMessage();
      }
    }
    /**
     * <pre>
     * The server Certificate Authority's certificate.  If this is missing you can
     * force a new one to be generated by calling resetSslConfig method on
     * instances resource.
     * </pre>
     *
     * <code>.google.cloud.sql.v1beta4.SslCert server_ca_cert = 3;</code>
     */
    public Builder setServerCaCert(com.google.cloud.sql.v1beta4.SslCert value) {
      if (serverCaCertBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        serverCaCert_ = value;
      } else {
        serverCaCertBuilder_.setMessage(value);
      }
      bitField0_ |= 0x00000004;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * The server Certificate Authority's certificate.  If this is missing you can
     * force a new one to be generated by calling resetSslConfig method on
     * instances resource.
     * </pre>
     *
     * <code>.google.cloud.sql.v1beta4.SslCert server_ca_cert = 3;</code>
     */
    public Builder setServerCaCert(
        com.google.cloud.sql.v1beta4.SslCert.Builder builderForValue) {
      if (serverCaCertBuilder_ == null) {
        serverCaCert_ = builderForValue.build();
      } else {
        serverCaCertBuilder_.setMessage(builderForValue.build());
      }
      bitField0_ |= 0x00000004;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * The server Certificate Authority's certificate.  If this is missing you can
     * force a new one to be generated by calling resetSslConfig method on
     * instances resource.
     * </pre>
     *
     * <code>.google.cloud.sql.v1beta4.SslCert server_ca_cert = 3;</code>
     */
    public Builder mergeServerCaCert(com.google.cloud.sql.v1beta4.SslCert value) {
      if (serverCaCertBuilder_ == null) {
        if (((bitField0_ & 0x00000004) != 0) &&
          serverCaCert_ != null &&
          serverCaCert_ != com.google.cloud.sql.v1beta4.SslCert.getDefaultInstance()) {
          getServerCaCertBuilder().mergeFrom(value);
        } else {
          serverCaCert_ = value;
        }
      } else {
        serverCaCertBuilder_.mergeFrom(value);
      }
      bitField0_ |= 0x00000004;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * The server Certificate Authority's certificate.  If this is missing you can
     * force a new one to be generated by calling resetSslConfig method on
     * instances resource.
     * </pre>
     *
     * <code>.google.cloud.sql.v1beta4.SslCert server_ca_cert = 3;</code>
     */
    public Builder clearServerCaCert() {
      bitField0_ = (bitField0_ & ~0x00000004);
      serverCaCert_ = null;
      if (serverCaCertBuilder_ != null) {
        serverCaCertBuilder_.dispose();
        serverCaCertBuilder_ = null;
      }
      onChanged();
      return this;
    }
    /**
     * <pre>
     * The server Certificate Authority's certificate.  If this is missing you can
     * force a new one to be generated by calling resetSslConfig method on
     * instances resource.
     * </pre>
     *
     * <code>.google.cloud.sql.v1beta4.SslCert server_ca_cert = 3;</code>
     */
    public com.google.cloud.sql.v1beta4.SslCert.Builder getServerCaCertBuilder() {
      bitField0_ |= 0x00000004;
      onChanged();
      return getServerCaCertFieldBuilder().getBuilder();
    }
    /**
     * <pre>
     * The server Certificate Authority's certificate.  If this is missing you can
     * force a new one to be generated by calling resetSslConfig method on
     * instances resource.
     * </pre>
     *
     * <code>.google.cloud.sql.v1beta4.SslCert server_ca_cert = 3;</code>
     */
    public com.google.cloud.sql.v1beta4.SslCertOrBuilder getServerCaCertOrBuilder() {
      if (serverCaCertBuilder_ != null) {
        return serverCaCertBuilder_.getMessageOrBuilder();
      } else {
        return serverCaCert_ == null ?
            com.google.cloud.sql.v1beta4.SslCert.getDefaultInstance() : serverCaCert_;
      }
    }
    /**
     * <pre>
     * The server Certificate Authority's certificate.  If this is missing you can
     * force a new one to be generated by calling resetSslConfig method on
     * instances resource.
     * </pre>
     *
     * <code>.google.cloud.sql.v1beta4.SslCert server_ca_cert = 3;</code>
     */
    private com.google.protobuf.SingleFieldBuilderV3<
        com.google.cloud.sql.v1beta4.SslCert, com.google.cloud.sql.v1beta4.SslCert.Builder, com.google.cloud.sql.v1beta4.SslCertOrBuilder> 
        getServerCaCertFieldBuilder() {
      if (serverCaCertBuilder_ == null) {
        serverCaCertBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
            com.google.cloud.sql.v1beta4.SslCert, com.google.cloud.sql.v1beta4.SslCert.Builder, com.google.cloud.sql.v1beta4.SslCertOrBuilder>(
                getServerCaCert(),
                getParentForChildren(),
                isClean());
        serverCaCert_ = null;
      }
      return serverCaCertBuilder_;
    }

    private com.google.cloud.sql.v1beta4.SslCertDetail clientCert_;
    private com.google.protobuf.SingleFieldBuilderV3<
        com.google.cloud.sql.v1beta4.SslCertDetail, com.google.cloud.sql.v1beta4.SslCertDetail.Builder, com.google.cloud.sql.v1beta4.SslCertDetailOrBuilder> clientCertBuilder_;
    /**
     * <pre>
     * The new client certificate and private key.
     * </pre>
     *
     * <code>.google.cloud.sql.v1beta4.SslCertDetail client_cert = 4;</code>
     * @return Whether the clientCert field is set.
     */
    public boolean hasClientCert() {
      return ((bitField0_ & 0x00000008) != 0);
    }
    /**
     * <pre>
     * The new client certificate and private key.
     * </pre>
     *
     * <code>.google.cloud.sql.v1beta4.SslCertDetail client_cert = 4;</code>
     * @return The clientCert.
     */
    public com.google.cloud.sql.v1beta4.SslCertDetail getClientCert() {
      if (clientCertBuilder_ == null) {
        return clientCert_ == null ? com.google.cloud.sql.v1beta4.SslCertDetail.getDefaultInstance() : clientCert_;
      } else {
        return clientCertBuilder_.getMessage();
      }
    }
    /**
     * <pre>
     * The new client certificate and private key.
     * </pre>
     *
     * <code>.google.cloud.sql.v1beta4.SslCertDetail client_cert = 4;</code>
     */
    public Builder setClientCert(com.google.cloud.sql.v1beta4.SslCertDetail value) {
      if (clientCertBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        clientCert_ = value;
      } else {
        clientCertBuilder_.setMessage(value);
      }
      bitField0_ |= 0x00000008;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * The new client certificate and private key.
     * </pre>
     *
     * <code>.google.cloud.sql.v1beta4.SslCertDetail client_cert = 4;</code>
     */
    public Builder setClientCert(
        com.google.cloud.sql.v1beta4.SslCertDetail.Builder builderForValue) {
      if (clientCertBuilder_ == null) {
        clientCert_ = builderForValue.build();
      } else {
        clientCertBuilder_.setMessage(builderForValue.build());
      }
      bitField0_ |= 0x00000008;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * The new client certificate and private key.
     * </pre>
     *
     * <code>.google.cloud.sql.v1beta4.SslCertDetail client_cert = 4;</code>
     */
    public Builder mergeClientCert(com.google.cloud.sql.v1beta4.SslCertDetail value) {
      if (clientCertBuilder_ == null) {
        if (((bitField0_ & 0x00000008) != 0) &&
          clientCert_ != null &&
          clientCert_ != com.google.cloud.sql.v1beta4.SslCertDetail.getDefaultInstance()) {
          getClientCertBuilder().mergeFrom(value);
        } else {
          clientCert_ = value;
        }
      } else {
        clientCertBuilder_.mergeFrom(value);
      }
      bitField0_ |= 0x00000008;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * The new client certificate and private key.
     * </pre>
     *
     * <code>.google.cloud.sql.v1beta4.SslCertDetail client_cert = 4;</code>
     */
    public Builder clearClientCert() {
      bitField0_ = (bitField0_ & ~0x00000008);
      clientCert_ = null;
      if (clientCertBuilder_ != null) {
        clientCertBuilder_.dispose();
        clientCertBuilder_ = null;
      }
      onChanged();
      return this;
    }
    /**
     * <pre>
     * The new client certificate and private key.
     * </pre>
     *
     * <code>.google.cloud.sql.v1beta4.SslCertDetail client_cert = 4;</code>
     */
    public com.google.cloud.sql.v1beta4.SslCertDetail.Builder getClientCertBuilder() {
      bitField0_ |= 0x00000008;
      onChanged();
      return getClientCertFieldBuilder().getBuilder();
    }
    /**
     * <pre>
     * The new client certificate and private key.
     * </pre>
     *
     * <code>.google.cloud.sql.v1beta4.SslCertDetail client_cert = 4;</code>
     */
    public com.google.cloud.sql.v1beta4.SslCertDetailOrBuilder getClientCertOrBuilder() {
      if (clientCertBuilder_ != null) {
        return clientCertBuilder_.getMessageOrBuilder();
      } else {
        return clientCert_ == null ?
            com.google.cloud.sql.v1beta4.SslCertDetail.getDefaultInstance() : clientCert_;
      }
    }
    /**
     * <pre>
     * The new client certificate and private key.
     * </pre>
     *
     * <code>.google.cloud.sql.v1beta4.SslCertDetail client_cert = 4;</code>
     */
    private com.google.protobuf.SingleFieldBuilderV3<
        com.google.cloud.sql.v1beta4.SslCertDetail, com.google.cloud.sql.v1beta4.SslCertDetail.Builder, com.google.cloud.sql.v1beta4.SslCertDetailOrBuilder> 
        getClientCertFieldBuilder() {
      if (clientCertBuilder_ == null) {
        clientCertBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
            com.google.cloud.sql.v1beta4.SslCertDetail, com.google.cloud.sql.v1beta4.SslCertDetail.Builder, com.google.cloud.sql.v1beta4.SslCertDetailOrBuilder>(
                getClientCert(),
                getParentForChildren(),
                isClean());
        clientCert_ = null;
      }
      return clientCertBuilder_;
    }
    @java.lang.Override
    public final Builder setUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return super.setUnknownFields(unknownFields);
    }

    @java.lang.Override
    public final Builder mergeUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return super.mergeUnknownFields(unknownFields);
    }


    // @@protoc_insertion_point(builder_scope:google.cloud.sql.v1beta4.SslCertsInsertResponse)
  }

  // @@protoc_insertion_point(class_scope:google.cloud.sql.v1beta4.SslCertsInsertResponse)
  private static final com.google.cloud.sql.v1beta4.SslCertsInsertResponse DEFAULT_INSTANCE;
  static {
    DEFAULT_INSTANCE = new com.google.cloud.sql.v1beta4.SslCertsInsertResponse();
  }

  public static com.google.cloud.sql.v1beta4.SslCertsInsertResponse getDefaultInstance() {
    return DEFAULT_INSTANCE;
  }

  private static final com.google.protobuf.Parser<SslCertsInsertResponse>
      PARSER = new com.google.protobuf.AbstractParser<SslCertsInsertResponse>() {
    @java.lang.Override
    public SslCertsInsertResponse parsePartialFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      Builder builder = newBuilder();
      try {
        builder.mergeFrom(input, extensionRegistry);
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(builder.buildPartial());
      } catch (com.google.protobuf.UninitializedMessageException e) {
        throw e.asInvalidProtocolBufferException().setUnfinishedMessage(builder.buildPartial());
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(e)
            .setUnfinishedMessage(builder.buildPartial());
      }
      return builder.buildPartial();
    }
  };

  public static com.google.protobuf.Parser<SslCertsInsertResponse> parser() {
    return PARSER;
  }

  @java.lang.Override
  public com.google.protobuf.Parser<SslCertsInsertResponse> getParserForType() {
    return PARSER;
  }

  @java.lang.Override
  public com.google.cloud.sql.v1beta4.SslCertsInsertResponse getDefaultInstanceForType() {
    return DEFAULT_INSTANCE;
  }

}

