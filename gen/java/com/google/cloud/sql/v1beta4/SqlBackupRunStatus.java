// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: google/cloud/sql/v1beta4/cloud_sql_resources.proto

package com.google.cloud.sql.v1beta4;

/**
 * <pre>
 * The status of a backup run.
 * </pre>
 *
 * Protobuf enum {@code google.cloud.sql.v1beta4.SqlBackupRunStatus}
 */
public enum SqlBackupRunStatus
    implements com.google.protobuf.ProtocolMessageEnum {
  /**
   * <pre>
   * The status of the run is unknown.
   * </pre>
   *
   * <code>SQL_BACKUP_RUN_STATUS_UNSPECIFIED = 0;</code>
   */
  SQL_BACKUP_RUN_STATUS_UNSPECIFIED(0),
  /**
   * <pre>
   * The backup operation was enqueued.
   * </pre>
   *
   * <code>ENQUEUED = 1;</code>
   */
  ENQUEUED(1),
  /**
   * <pre>
   * The backup is overdue across a given backup window. Indicates a
   * problem. Example: Long-running operation in progress during
   * the whole window.
   * </pre>
   *
   * <code>OVERDUE = 2;</code>
   */
  OVERDUE(2),
  /**
   * <pre>
   * The backup is in progress.
   * </pre>
   *
   * <code>RUNNING = 3;</code>
   */
  RUNNING(3),
  /**
   * <pre>
   * The backup failed.
   * </pre>
   *
   * <code>FAILED = 4;</code>
   */
  FAILED(4),
  /**
   * <pre>
   * The backup was successful.
   * </pre>
   *
   * <code>SUCCESSFUL = 5;</code>
   */
  SUCCESSFUL(5),
  /**
   * <pre>
   * The backup was skipped (without problems) for a given backup
   * window. Example: Instance was idle.
   * </pre>
   *
   * <code>SKIPPED = 6;</code>
   */
  SKIPPED(6),
  /**
   * <pre>
   * The backup is about to be deleted.
   * </pre>
   *
   * <code>DELETION_PENDING = 7;</code>
   */
  DELETION_PENDING(7),
  /**
   * <pre>
   * The backup deletion failed.
   * </pre>
   *
   * <code>DELETION_FAILED = 8;</code>
   */
  DELETION_FAILED(8),
  /**
   * <pre>
   * The backup has been deleted.
   * </pre>
   *
   * <code>DELETED = 9;</code>
   */
  DELETED(9),
  UNRECOGNIZED(-1),
  ;

  /**
   * <pre>
   * The status of the run is unknown.
   * </pre>
   *
   * <code>SQL_BACKUP_RUN_STATUS_UNSPECIFIED = 0;</code>
   */
  public static final int SQL_BACKUP_RUN_STATUS_UNSPECIFIED_VALUE = 0;
  /**
   * <pre>
   * The backup operation was enqueued.
   * </pre>
   *
   * <code>ENQUEUED = 1;</code>
   */
  public static final int ENQUEUED_VALUE = 1;
  /**
   * <pre>
   * The backup is overdue across a given backup window. Indicates a
   * problem. Example: Long-running operation in progress during
   * the whole window.
   * </pre>
   *
   * <code>OVERDUE = 2;</code>
   */
  public static final int OVERDUE_VALUE = 2;
  /**
   * <pre>
   * The backup is in progress.
   * </pre>
   *
   * <code>RUNNING = 3;</code>
   */
  public static final int RUNNING_VALUE = 3;
  /**
   * <pre>
   * The backup failed.
   * </pre>
   *
   * <code>FAILED = 4;</code>
   */
  public static final int FAILED_VALUE = 4;
  /**
   * <pre>
   * The backup was successful.
   * </pre>
   *
   * <code>SUCCESSFUL = 5;</code>
   */
  public static final int SUCCESSFUL_VALUE = 5;
  /**
   * <pre>
   * The backup was skipped (without problems) for a given backup
   * window. Example: Instance was idle.
   * </pre>
   *
   * <code>SKIPPED = 6;</code>
   */
  public static final int SKIPPED_VALUE = 6;
  /**
   * <pre>
   * The backup is about to be deleted.
   * </pre>
   *
   * <code>DELETION_PENDING = 7;</code>
   */
  public static final int DELETION_PENDING_VALUE = 7;
  /**
   * <pre>
   * The backup deletion failed.
   * </pre>
   *
   * <code>DELETION_FAILED = 8;</code>
   */
  public static final int DELETION_FAILED_VALUE = 8;
  /**
   * <pre>
   * The backup has been deleted.
   * </pre>
   *
   * <code>DELETED = 9;</code>
   */
  public static final int DELETED_VALUE = 9;


  public final int getNumber() {
    if (this == UNRECOGNIZED) {
      throw new java.lang.IllegalArgumentException(
          "Can't get the number of an unknown enum value.");
    }
    return value;
  }

  /**
   * @param value The numeric wire value of the corresponding enum entry.
   * @return The enum associated with the given numeric wire value.
   * @deprecated Use {@link #forNumber(int)} instead.
   */
  @java.lang.Deprecated
  public static SqlBackupRunStatus valueOf(int value) {
    return forNumber(value);
  }

  /**
   * @param value The numeric wire value of the corresponding enum entry.
   * @return The enum associated with the given numeric wire value.
   */
  public static SqlBackupRunStatus forNumber(int value) {
    switch (value) {
      case 0: return SQL_BACKUP_RUN_STATUS_UNSPECIFIED;
      case 1: return ENQUEUED;
      case 2: return OVERDUE;
      case 3: return RUNNING;
      case 4: return FAILED;
      case 5: return SUCCESSFUL;
      case 6: return SKIPPED;
      case 7: return DELETION_PENDING;
      case 8: return DELETION_FAILED;
      case 9: return DELETED;
      default: return null;
    }
  }

  public static com.google.protobuf.Internal.EnumLiteMap<SqlBackupRunStatus>
      internalGetValueMap() {
    return internalValueMap;
  }
  private static final com.google.protobuf.Internal.EnumLiteMap<
      SqlBackupRunStatus> internalValueMap =
        new com.google.protobuf.Internal.EnumLiteMap<SqlBackupRunStatus>() {
          public SqlBackupRunStatus findValueByNumber(int number) {
            return SqlBackupRunStatus.forNumber(number);
          }
        };

  public final com.google.protobuf.Descriptors.EnumValueDescriptor
      getValueDescriptor() {
    if (this == UNRECOGNIZED) {
      throw new java.lang.IllegalStateException(
          "Can't get the descriptor of an unrecognized enum value.");
    }
    return getDescriptor().getValues().get(ordinal());
  }
  public final com.google.protobuf.Descriptors.EnumDescriptor
      getDescriptorForType() {
    return getDescriptor();
  }
  public static final com.google.protobuf.Descriptors.EnumDescriptor
      getDescriptor() {
    return com.google.cloud.sql.v1beta4.CloudSqlResourcesProto.getDescriptor().getEnumTypes().get(1);
  }

  private static final SqlBackupRunStatus[] VALUES = values();

  public static SqlBackupRunStatus valueOf(
      com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
    if (desc.getType() != getDescriptor()) {
      throw new java.lang.IllegalArgumentException(
        "EnumValueDescriptor is not for this type.");
    }
    if (desc.getIndex() == -1) {
      return UNRECOGNIZED;
    }
    return VALUES[desc.getIndex()];
  }

  private final int value;

  private SqlBackupRunStatus(int value) {
    this.value = value;
  }

  // @@protoc_insertion_point(enum_scope:google.cloud.sql.v1beta4.SqlBackupRunStatus)
}

