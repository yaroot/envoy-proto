// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: google/cloud/sql/v1beta4/cloud_sql_resources.proto

package com.google.cloud.sql.v1beta4;

public interface BackupRetentionSettingsOrBuilder extends
    // @@protoc_insertion_point(interface_extends:google.cloud.sql.v1beta4.BackupRetentionSettings)
    com.google.protobuf.MessageOrBuilder {

  /**
   * <pre>
   * The unit that 'retained_backups' represents.
   * </pre>
   *
   * <code>.google.cloud.sql.v1beta4.BackupRetentionSettings.RetentionUnit retention_unit = 1;</code>
   * @return The enum numeric value on the wire for retentionUnit.
   */
  int getRetentionUnitValue();
  /**
   * <pre>
   * The unit that 'retained_backups' represents.
   * </pre>
   *
   * <code>.google.cloud.sql.v1beta4.BackupRetentionSettings.RetentionUnit retention_unit = 1;</code>
   * @return The retentionUnit.
   */
  com.google.cloud.sql.v1beta4.BackupRetentionSettings.RetentionUnit getRetentionUnit();

  /**
   * <pre>
   * Depending on the value of retention_unit, this is used to determine
   * if a backup needs to be deleted.  If retention_unit is 'COUNT', we will
   * retain this many backups.
   * </pre>
   *
   * <code>.google.protobuf.Int32Value retained_backups = 2;</code>
   * @return Whether the retainedBackups field is set.
   */
  boolean hasRetainedBackups();
  /**
   * <pre>
   * Depending on the value of retention_unit, this is used to determine
   * if a backup needs to be deleted.  If retention_unit is 'COUNT', we will
   * retain this many backups.
   * </pre>
   *
   * <code>.google.protobuf.Int32Value retained_backups = 2;</code>
   * @return The retainedBackups.
   */
  com.google.protobuf.Int32Value getRetainedBackups();
  /**
   * <pre>
   * Depending on the value of retention_unit, this is used to determine
   * if a backup needs to be deleted.  If retention_unit is 'COUNT', we will
   * retain this many backups.
   * </pre>
   *
   * <code>.google.protobuf.Int32Value retained_backups = 2;</code>
   */
  com.google.protobuf.Int32ValueOrBuilder getRetainedBackupsOrBuilder();
}
