// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: google/cloud/sql/v1beta4/cloud_sql_resources.proto

package com.google.cloud.sql.v1beta4;

/**
 * <pre>
 * Read-replica configuration for connecting to the primary instance.
 * </pre>
 *
 * Protobuf type {@code google.cloud.sql.v1beta4.ReplicaConfiguration}
 */
public final class ReplicaConfiguration extends
    com.google.protobuf.GeneratedMessageV3 implements
    // @@protoc_insertion_point(message_implements:google.cloud.sql.v1beta4.ReplicaConfiguration)
    ReplicaConfigurationOrBuilder {
private static final long serialVersionUID = 0L;
  // Use ReplicaConfiguration.newBuilder() to construct.
  private ReplicaConfiguration(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
    super(builder);
  }
  private ReplicaConfiguration() {
    kind_ = "";
  }

  @java.lang.Override
  @SuppressWarnings({"unused"})
  protected java.lang.Object newInstance(
      UnusedPrivateParameter unused) {
    return new ReplicaConfiguration();
  }

  @java.lang.Override
  public final com.google.protobuf.UnknownFieldSet
  getUnknownFields() {
    return this.unknownFields;
  }
  private ReplicaConfiguration(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    this();
    if (extensionRegistry == null) {
      throw new java.lang.NullPointerException();
    }
    com.google.protobuf.UnknownFieldSet.Builder unknownFields =
        com.google.protobuf.UnknownFieldSet.newBuilder();
    try {
      boolean done = false;
      while (!done) {
        int tag = input.readTag();
        switch (tag) {
          case 0:
            done = true;
            break;
          case 10: {
            java.lang.String s = input.readStringRequireUtf8();

            kind_ = s;
            break;
          }
          case 18: {
            com.google.cloud.sql.v1beta4.MySqlReplicaConfiguration.Builder subBuilder = null;
            if (mysqlReplicaConfiguration_ != null) {
              subBuilder = mysqlReplicaConfiguration_.toBuilder();
            }
            mysqlReplicaConfiguration_ = input.readMessage(com.google.cloud.sql.v1beta4.MySqlReplicaConfiguration.parser(), extensionRegistry);
            if (subBuilder != null) {
              subBuilder.mergeFrom(mysqlReplicaConfiguration_);
              mysqlReplicaConfiguration_ = subBuilder.buildPartial();
            }

            break;
          }
          case 26: {
            com.google.protobuf.BoolValue.Builder subBuilder = null;
            if (failoverTarget_ != null) {
              subBuilder = failoverTarget_.toBuilder();
            }
            failoverTarget_ = input.readMessage(com.google.protobuf.BoolValue.parser(), extensionRegistry);
            if (subBuilder != null) {
              subBuilder.mergeFrom(failoverTarget_);
              failoverTarget_ = subBuilder.buildPartial();
            }

            break;
          }
          default: {
            if (!parseUnknownField(
                input, unknownFields, extensionRegistry, tag)) {
              done = true;
            }
            break;
          }
        }
      }
    } catch (com.google.protobuf.InvalidProtocolBufferException e) {
      throw e.setUnfinishedMessage(this);
    } catch (com.google.protobuf.UninitializedMessageException e) {
      throw e.asInvalidProtocolBufferException().setUnfinishedMessage(this);
    } catch (java.io.IOException e) {
      throw new com.google.protobuf.InvalidProtocolBufferException(
          e).setUnfinishedMessage(this);
    } finally {
      this.unknownFields = unknownFields.build();
      makeExtensionsImmutable();
    }
  }
  public static final com.google.protobuf.Descriptors.Descriptor
      getDescriptor() {
    return com.google.cloud.sql.v1beta4.CloudSqlResourcesProto.internal_static_google_cloud_sql_v1beta4_ReplicaConfiguration_descriptor;
  }

  @java.lang.Override
  protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internalGetFieldAccessorTable() {
    return com.google.cloud.sql.v1beta4.CloudSqlResourcesProto.internal_static_google_cloud_sql_v1beta4_ReplicaConfiguration_fieldAccessorTable
        .ensureFieldAccessorsInitialized(
            com.google.cloud.sql.v1beta4.ReplicaConfiguration.class, com.google.cloud.sql.v1beta4.ReplicaConfiguration.Builder.class);
  }

  public static final int KIND_FIELD_NUMBER = 1;
  private volatile java.lang.Object kind_;
  /**
   * <pre>
   * This is always `sql#replicaConfiguration`.
   * </pre>
   *
   * <code>string kind = 1;</code>
   * @return The kind.
   */
  @java.lang.Override
  public java.lang.String getKind() {
    java.lang.Object ref = kind_;
    if (ref instanceof java.lang.String) {
      return (java.lang.String) ref;
    } else {
      com.google.protobuf.ByteString bs = 
          (com.google.protobuf.ByteString) ref;
      java.lang.String s = bs.toStringUtf8();
      kind_ = s;
      return s;
    }
  }
  /**
   * <pre>
   * This is always `sql#replicaConfiguration`.
   * </pre>
   *
   * <code>string kind = 1;</code>
   * @return The bytes for kind.
   */
  @java.lang.Override
  public com.google.protobuf.ByteString
      getKindBytes() {
    java.lang.Object ref = kind_;
    if (ref instanceof java.lang.String) {
      com.google.protobuf.ByteString b = 
          com.google.protobuf.ByteString.copyFromUtf8(
              (java.lang.String) ref);
      kind_ = b;
      return b;
    } else {
      return (com.google.protobuf.ByteString) ref;
    }
  }

  public static final int MYSQL_REPLICA_CONFIGURATION_FIELD_NUMBER = 2;
  private com.google.cloud.sql.v1beta4.MySqlReplicaConfiguration mysqlReplicaConfiguration_;
  /**
   * <pre>
   * MySQL specific configuration when replicating from a MySQL on-premises
   * primary instance. Replication configuration information such as the
   * username, password, certificates, and keys are not stored in the instance
   * metadata. The configuration information is used only to set up the
   * replication connection and is stored by MySQL in a file named
   * `master.info` in the data directory.
   * </pre>
   *
   * <code>.google.cloud.sql.v1beta4.MySqlReplicaConfiguration mysql_replica_configuration = 2;</code>
   * @return Whether the mysqlReplicaConfiguration field is set.
   */
  @java.lang.Override
  public boolean hasMysqlReplicaConfiguration() {
    return mysqlReplicaConfiguration_ != null;
  }
  /**
   * <pre>
   * MySQL specific configuration when replicating from a MySQL on-premises
   * primary instance. Replication configuration information such as the
   * username, password, certificates, and keys are not stored in the instance
   * metadata. The configuration information is used only to set up the
   * replication connection and is stored by MySQL in a file named
   * `master.info` in the data directory.
   * </pre>
   *
   * <code>.google.cloud.sql.v1beta4.MySqlReplicaConfiguration mysql_replica_configuration = 2;</code>
   * @return The mysqlReplicaConfiguration.
   */
  @java.lang.Override
  public com.google.cloud.sql.v1beta4.MySqlReplicaConfiguration getMysqlReplicaConfiguration() {
    return mysqlReplicaConfiguration_ == null ? com.google.cloud.sql.v1beta4.MySqlReplicaConfiguration.getDefaultInstance() : mysqlReplicaConfiguration_;
  }
  /**
   * <pre>
   * MySQL specific configuration when replicating from a MySQL on-premises
   * primary instance. Replication configuration information such as the
   * username, password, certificates, and keys are not stored in the instance
   * metadata. The configuration information is used only to set up the
   * replication connection and is stored by MySQL in a file named
   * `master.info` in the data directory.
   * </pre>
   *
   * <code>.google.cloud.sql.v1beta4.MySqlReplicaConfiguration mysql_replica_configuration = 2;</code>
   */
  @java.lang.Override
  public com.google.cloud.sql.v1beta4.MySqlReplicaConfigurationOrBuilder getMysqlReplicaConfigurationOrBuilder() {
    return getMysqlReplicaConfiguration();
  }

  public static final int FAILOVER_TARGET_FIELD_NUMBER = 3;
  private com.google.protobuf.BoolValue failoverTarget_;
  /**
   * <pre>
   * Specifies if the replica is the failover target. If the field is set to
   * `true` the replica will be designated as a failover replica. In case the
   * primary instance fails, the replica instance will be promoted as the new
   * primary instance. Only one replica can be specified as failover target, and
   * the replica has to be in different zone with the primary instance.
   * </pre>
   *
   * <code>.google.protobuf.BoolValue failover_target = 3;</code>
   * @return Whether the failoverTarget field is set.
   */
  @java.lang.Override
  public boolean hasFailoverTarget() {
    return failoverTarget_ != null;
  }
  /**
   * <pre>
   * Specifies if the replica is the failover target. If the field is set to
   * `true` the replica will be designated as a failover replica. In case the
   * primary instance fails, the replica instance will be promoted as the new
   * primary instance. Only one replica can be specified as failover target, and
   * the replica has to be in different zone with the primary instance.
   * </pre>
   *
   * <code>.google.protobuf.BoolValue failover_target = 3;</code>
   * @return The failoverTarget.
   */
  @java.lang.Override
  public com.google.protobuf.BoolValue getFailoverTarget() {
    return failoverTarget_ == null ? com.google.protobuf.BoolValue.getDefaultInstance() : failoverTarget_;
  }
  /**
   * <pre>
   * Specifies if the replica is the failover target. If the field is set to
   * `true` the replica will be designated as a failover replica. In case the
   * primary instance fails, the replica instance will be promoted as the new
   * primary instance. Only one replica can be specified as failover target, and
   * the replica has to be in different zone with the primary instance.
   * </pre>
   *
   * <code>.google.protobuf.BoolValue failover_target = 3;</code>
   */
  @java.lang.Override
  public com.google.protobuf.BoolValueOrBuilder getFailoverTargetOrBuilder() {
    return getFailoverTarget();
  }

  private byte memoizedIsInitialized = -1;
  @java.lang.Override
  public final boolean isInitialized() {
    byte isInitialized = memoizedIsInitialized;
    if (isInitialized == 1) return true;
    if (isInitialized == 0) return false;

    memoizedIsInitialized = 1;
    return true;
  }

  @java.lang.Override
  public void writeTo(com.google.protobuf.CodedOutputStream output)
                      throws java.io.IOException {
    if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(kind_)) {
      com.google.protobuf.GeneratedMessageV3.writeString(output, 1, kind_);
    }
    if (mysqlReplicaConfiguration_ != null) {
      output.writeMessage(2, getMysqlReplicaConfiguration());
    }
    if (failoverTarget_ != null) {
      output.writeMessage(3, getFailoverTarget());
    }
    unknownFields.writeTo(output);
  }

  @java.lang.Override
  public int getSerializedSize() {
    int size = memoizedSize;
    if (size != -1) return size;

    size = 0;
    if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(kind_)) {
      size += com.google.protobuf.GeneratedMessageV3.computeStringSize(1, kind_);
    }
    if (mysqlReplicaConfiguration_ != null) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(2, getMysqlReplicaConfiguration());
    }
    if (failoverTarget_ != null) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(3, getFailoverTarget());
    }
    size += unknownFields.getSerializedSize();
    memoizedSize = size;
    return size;
  }

  @java.lang.Override
  public boolean equals(final java.lang.Object obj) {
    if (obj == this) {
     return true;
    }
    if (!(obj instanceof com.google.cloud.sql.v1beta4.ReplicaConfiguration)) {
      return super.equals(obj);
    }
    com.google.cloud.sql.v1beta4.ReplicaConfiguration other = (com.google.cloud.sql.v1beta4.ReplicaConfiguration) obj;

    if (!getKind()
        .equals(other.getKind())) return false;
    if (hasMysqlReplicaConfiguration() != other.hasMysqlReplicaConfiguration()) return false;
    if (hasMysqlReplicaConfiguration()) {
      if (!getMysqlReplicaConfiguration()
          .equals(other.getMysqlReplicaConfiguration())) return false;
    }
    if (hasFailoverTarget() != other.hasFailoverTarget()) return false;
    if (hasFailoverTarget()) {
      if (!getFailoverTarget()
          .equals(other.getFailoverTarget())) return false;
    }
    if (!unknownFields.equals(other.unknownFields)) return false;
    return true;
  }

  @java.lang.Override
  public int hashCode() {
    if (memoizedHashCode != 0) {
      return memoizedHashCode;
    }
    int hash = 41;
    hash = (19 * hash) + getDescriptor().hashCode();
    hash = (37 * hash) + KIND_FIELD_NUMBER;
    hash = (53 * hash) + getKind().hashCode();
    if (hasMysqlReplicaConfiguration()) {
      hash = (37 * hash) + MYSQL_REPLICA_CONFIGURATION_FIELD_NUMBER;
      hash = (53 * hash) + getMysqlReplicaConfiguration().hashCode();
    }
    if (hasFailoverTarget()) {
      hash = (37 * hash) + FAILOVER_TARGET_FIELD_NUMBER;
      hash = (53 * hash) + getFailoverTarget().hashCode();
    }
    hash = (29 * hash) + unknownFields.hashCode();
    memoizedHashCode = hash;
    return hash;
  }

  public static com.google.cloud.sql.v1beta4.ReplicaConfiguration parseFrom(
      java.nio.ByteBuffer data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static com.google.cloud.sql.v1beta4.ReplicaConfiguration parseFrom(
      java.nio.ByteBuffer data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static com.google.cloud.sql.v1beta4.ReplicaConfiguration parseFrom(
      com.google.protobuf.ByteString data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static com.google.cloud.sql.v1beta4.ReplicaConfiguration parseFrom(
      com.google.protobuf.ByteString data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static com.google.cloud.sql.v1beta4.ReplicaConfiguration parseFrom(byte[] data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static com.google.cloud.sql.v1beta4.ReplicaConfiguration parseFrom(
      byte[] data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static com.google.cloud.sql.v1beta4.ReplicaConfiguration parseFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input);
  }
  public static com.google.cloud.sql.v1beta4.ReplicaConfiguration parseFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input, extensionRegistry);
  }
  public static com.google.cloud.sql.v1beta4.ReplicaConfiguration parseDelimitedFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseDelimitedWithIOException(PARSER, input);
  }
  public static com.google.cloud.sql.v1beta4.ReplicaConfiguration parseDelimitedFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
  }
  public static com.google.cloud.sql.v1beta4.ReplicaConfiguration parseFrom(
      com.google.protobuf.CodedInputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input);
  }
  public static com.google.cloud.sql.v1beta4.ReplicaConfiguration parseFrom(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input, extensionRegistry);
  }

  @java.lang.Override
  public Builder newBuilderForType() { return newBuilder(); }
  public static Builder newBuilder() {
    return DEFAULT_INSTANCE.toBuilder();
  }
  public static Builder newBuilder(com.google.cloud.sql.v1beta4.ReplicaConfiguration prototype) {
    return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
  }
  @java.lang.Override
  public Builder toBuilder() {
    return this == DEFAULT_INSTANCE
        ? new Builder() : new Builder().mergeFrom(this);
  }

  @java.lang.Override
  protected Builder newBuilderForType(
      com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
    Builder builder = new Builder(parent);
    return builder;
  }
  /**
   * <pre>
   * Read-replica configuration for connecting to the primary instance.
   * </pre>
   *
   * Protobuf type {@code google.cloud.sql.v1beta4.ReplicaConfiguration}
   */
  public static final class Builder extends
      com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
      // @@protoc_insertion_point(builder_implements:google.cloud.sql.v1beta4.ReplicaConfiguration)
      com.google.cloud.sql.v1beta4.ReplicaConfigurationOrBuilder {
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.google.cloud.sql.v1beta4.CloudSqlResourcesProto.internal_static_google_cloud_sql_v1beta4_ReplicaConfiguration_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.google.cloud.sql.v1beta4.CloudSqlResourcesProto.internal_static_google_cloud_sql_v1beta4_ReplicaConfiguration_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.google.cloud.sql.v1beta4.ReplicaConfiguration.class, com.google.cloud.sql.v1beta4.ReplicaConfiguration.Builder.class);
    }

    // Construct using com.google.cloud.sql.v1beta4.ReplicaConfiguration.newBuilder()
    private Builder() {
      maybeForceBuilderInitialization();
    }

    private Builder(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      super(parent);
      maybeForceBuilderInitialization();
    }
    private void maybeForceBuilderInitialization() {
      if (com.google.protobuf.GeneratedMessageV3
              .alwaysUseFieldBuilders) {
      }
    }
    @java.lang.Override
    public Builder clear() {
      super.clear();
      kind_ = "";

      if (mysqlReplicaConfigurationBuilder_ == null) {
        mysqlReplicaConfiguration_ = null;
      } else {
        mysqlReplicaConfiguration_ = null;
        mysqlReplicaConfigurationBuilder_ = null;
      }
      if (failoverTargetBuilder_ == null) {
        failoverTarget_ = null;
      } else {
        failoverTarget_ = null;
        failoverTargetBuilder_ = null;
      }
      return this;
    }

    @java.lang.Override
    public com.google.protobuf.Descriptors.Descriptor
        getDescriptorForType() {
      return com.google.cloud.sql.v1beta4.CloudSqlResourcesProto.internal_static_google_cloud_sql_v1beta4_ReplicaConfiguration_descriptor;
    }

    @java.lang.Override
    public com.google.cloud.sql.v1beta4.ReplicaConfiguration getDefaultInstanceForType() {
      return com.google.cloud.sql.v1beta4.ReplicaConfiguration.getDefaultInstance();
    }

    @java.lang.Override
    public com.google.cloud.sql.v1beta4.ReplicaConfiguration build() {
      com.google.cloud.sql.v1beta4.ReplicaConfiguration result = buildPartial();
      if (!result.isInitialized()) {
        throw newUninitializedMessageException(result);
      }
      return result;
    }

    @java.lang.Override
    public com.google.cloud.sql.v1beta4.ReplicaConfiguration buildPartial() {
      com.google.cloud.sql.v1beta4.ReplicaConfiguration result = new com.google.cloud.sql.v1beta4.ReplicaConfiguration(this);
      result.kind_ = kind_;
      if (mysqlReplicaConfigurationBuilder_ == null) {
        result.mysqlReplicaConfiguration_ = mysqlReplicaConfiguration_;
      } else {
        result.mysqlReplicaConfiguration_ = mysqlReplicaConfigurationBuilder_.build();
      }
      if (failoverTargetBuilder_ == null) {
        result.failoverTarget_ = failoverTarget_;
      } else {
        result.failoverTarget_ = failoverTargetBuilder_.build();
      }
      onBuilt();
      return result;
    }

    @java.lang.Override
    public Builder clone() {
      return super.clone();
    }
    @java.lang.Override
    public Builder setField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        java.lang.Object value) {
      return super.setField(field, value);
    }
    @java.lang.Override
    public Builder clearField(
        com.google.protobuf.Descriptors.FieldDescriptor field) {
      return super.clearField(field);
    }
    @java.lang.Override
    public Builder clearOneof(
        com.google.protobuf.Descriptors.OneofDescriptor oneof) {
      return super.clearOneof(oneof);
    }
    @java.lang.Override
    public Builder setRepeatedField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        int index, java.lang.Object value) {
      return super.setRepeatedField(field, index, value);
    }
    @java.lang.Override
    public Builder addRepeatedField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        java.lang.Object value) {
      return super.addRepeatedField(field, value);
    }
    @java.lang.Override
    public Builder mergeFrom(com.google.protobuf.Message other) {
      if (other instanceof com.google.cloud.sql.v1beta4.ReplicaConfiguration) {
        return mergeFrom((com.google.cloud.sql.v1beta4.ReplicaConfiguration)other);
      } else {
        super.mergeFrom(other);
        return this;
      }
    }

    public Builder mergeFrom(com.google.cloud.sql.v1beta4.ReplicaConfiguration other) {
      if (other == com.google.cloud.sql.v1beta4.ReplicaConfiguration.getDefaultInstance()) return this;
      if (!other.getKind().isEmpty()) {
        kind_ = other.kind_;
        onChanged();
      }
      if (other.hasMysqlReplicaConfiguration()) {
        mergeMysqlReplicaConfiguration(other.getMysqlReplicaConfiguration());
      }
      if (other.hasFailoverTarget()) {
        mergeFailoverTarget(other.getFailoverTarget());
      }
      this.mergeUnknownFields(other.unknownFields);
      onChanged();
      return this;
    }

    @java.lang.Override
    public final boolean isInitialized() {
      return true;
    }

    @java.lang.Override
    public Builder mergeFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      com.google.cloud.sql.v1beta4.ReplicaConfiguration parsedMessage = null;
      try {
        parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        parsedMessage = (com.google.cloud.sql.v1beta4.ReplicaConfiguration) e.getUnfinishedMessage();
        throw e.unwrapIOException();
      } finally {
        if (parsedMessage != null) {
          mergeFrom(parsedMessage);
        }
      }
      return this;
    }

    private java.lang.Object kind_ = "";
    /**
     * <pre>
     * This is always `sql#replicaConfiguration`.
     * </pre>
     *
     * <code>string kind = 1;</code>
     * @return The kind.
     */
    public java.lang.String getKind() {
      java.lang.Object ref = kind_;
      if (!(ref instanceof java.lang.String)) {
        com.google.protobuf.ByteString bs =
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        kind_ = s;
        return s;
      } else {
        return (java.lang.String) ref;
      }
    }
    /**
     * <pre>
     * This is always `sql#replicaConfiguration`.
     * </pre>
     *
     * <code>string kind = 1;</code>
     * @return The bytes for kind.
     */
    public com.google.protobuf.ByteString
        getKindBytes() {
      java.lang.Object ref = kind_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        kind_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }
    /**
     * <pre>
     * This is always `sql#replicaConfiguration`.
     * </pre>
     *
     * <code>string kind = 1;</code>
     * @param value The kind to set.
     * @return This builder for chaining.
     */
    public Builder setKind(
        java.lang.String value) {
      if (value == null) {
    throw new NullPointerException();
  }
  
      kind_ = value;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * This is always `sql#replicaConfiguration`.
     * </pre>
     *
     * <code>string kind = 1;</code>
     * @return This builder for chaining.
     */
    public Builder clearKind() {
      
      kind_ = getDefaultInstance().getKind();
      onChanged();
      return this;
    }
    /**
     * <pre>
     * This is always `sql#replicaConfiguration`.
     * </pre>
     *
     * <code>string kind = 1;</code>
     * @param value The bytes for kind to set.
     * @return This builder for chaining.
     */
    public Builder setKindBytes(
        com.google.protobuf.ByteString value) {
      if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
      
      kind_ = value;
      onChanged();
      return this;
    }

    private com.google.cloud.sql.v1beta4.MySqlReplicaConfiguration mysqlReplicaConfiguration_;
    private com.google.protobuf.SingleFieldBuilderV3<
        com.google.cloud.sql.v1beta4.MySqlReplicaConfiguration, com.google.cloud.sql.v1beta4.MySqlReplicaConfiguration.Builder, com.google.cloud.sql.v1beta4.MySqlReplicaConfigurationOrBuilder> mysqlReplicaConfigurationBuilder_;
    /**
     * <pre>
     * MySQL specific configuration when replicating from a MySQL on-premises
     * primary instance. Replication configuration information such as the
     * username, password, certificates, and keys are not stored in the instance
     * metadata. The configuration information is used only to set up the
     * replication connection and is stored by MySQL in a file named
     * `master.info` in the data directory.
     * </pre>
     *
     * <code>.google.cloud.sql.v1beta4.MySqlReplicaConfiguration mysql_replica_configuration = 2;</code>
     * @return Whether the mysqlReplicaConfiguration field is set.
     */
    public boolean hasMysqlReplicaConfiguration() {
      return mysqlReplicaConfigurationBuilder_ != null || mysqlReplicaConfiguration_ != null;
    }
    /**
     * <pre>
     * MySQL specific configuration when replicating from a MySQL on-premises
     * primary instance. Replication configuration information such as the
     * username, password, certificates, and keys are not stored in the instance
     * metadata. The configuration information is used only to set up the
     * replication connection and is stored by MySQL in a file named
     * `master.info` in the data directory.
     * </pre>
     *
     * <code>.google.cloud.sql.v1beta4.MySqlReplicaConfiguration mysql_replica_configuration = 2;</code>
     * @return The mysqlReplicaConfiguration.
     */
    public com.google.cloud.sql.v1beta4.MySqlReplicaConfiguration getMysqlReplicaConfiguration() {
      if (mysqlReplicaConfigurationBuilder_ == null) {
        return mysqlReplicaConfiguration_ == null ? com.google.cloud.sql.v1beta4.MySqlReplicaConfiguration.getDefaultInstance() : mysqlReplicaConfiguration_;
      } else {
        return mysqlReplicaConfigurationBuilder_.getMessage();
      }
    }
    /**
     * <pre>
     * MySQL specific configuration when replicating from a MySQL on-premises
     * primary instance. Replication configuration information such as the
     * username, password, certificates, and keys are not stored in the instance
     * metadata. The configuration information is used only to set up the
     * replication connection and is stored by MySQL in a file named
     * `master.info` in the data directory.
     * </pre>
     *
     * <code>.google.cloud.sql.v1beta4.MySqlReplicaConfiguration mysql_replica_configuration = 2;</code>
     */
    public Builder setMysqlReplicaConfiguration(com.google.cloud.sql.v1beta4.MySqlReplicaConfiguration value) {
      if (mysqlReplicaConfigurationBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        mysqlReplicaConfiguration_ = value;
        onChanged();
      } else {
        mysqlReplicaConfigurationBuilder_.setMessage(value);
      }

      return this;
    }
    /**
     * <pre>
     * MySQL specific configuration when replicating from a MySQL on-premises
     * primary instance. Replication configuration information such as the
     * username, password, certificates, and keys are not stored in the instance
     * metadata. The configuration information is used only to set up the
     * replication connection and is stored by MySQL in a file named
     * `master.info` in the data directory.
     * </pre>
     *
     * <code>.google.cloud.sql.v1beta4.MySqlReplicaConfiguration mysql_replica_configuration = 2;</code>
     */
    public Builder setMysqlReplicaConfiguration(
        com.google.cloud.sql.v1beta4.MySqlReplicaConfiguration.Builder builderForValue) {
      if (mysqlReplicaConfigurationBuilder_ == null) {
        mysqlReplicaConfiguration_ = builderForValue.build();
        onChanged();
      } else {
        mysqlReplicaConfigurationBuilder_.setMessage(builderForValue.build());
      }

      return this;
    }
    /**
     * <pre>
     * MySQL specific configuration when replicating from a MySQL on-premises
     * primary instance. Replication configuration information such as the
     * username, password, certificates, and keys are not stored in the instance
     * metadata. The configuration information is used only to set up the
     * replication connection and is stored by MySQL in a file named
     * `master.info` in the data directory.
     * </pre>
     *
     * <code>.google.cloud.sql.v1beta4.MySqlReplicaConfiguration mysql_replica_configuration = 2;</code>
     */
    public Builder mergeMysqlReplicaConfiguration(com.google.cloud.sql.v1beta4.MySqlReplicaConfiguration value) {
      if (mysqlReplicaConfigurationBuilder_ == null) {
        if (mysqlReplicaConfiguration_ != null) {
          mysqlReplicaConfiguration_ =
            com.google.cloud.sql.v1beta4.MySqlReplicaConfiguration.newBuilder(mysqlReplicaConfiguration_).mergeFrom(value).buildPartial();
        } else {
          mysqlReplicaConfiguration_ = value;
        }
        onChanged();
      } else {
        mysqlReplicaConfigurationBuilder_.mergeFrom(value);
      }

      return this;
    }
    /**
     * <pre>
     * MySQL specific configuration when replicating from a MySQL on-premises
     * primary instance. Replication configuration information such as the
     * username, password, certificates, and keys are not stored in the instance
     * metadata. The configuration information is used only to set up the
     * replication connection and is stored by MySQL in a file named
     * `master.info` in the data directory.
     * </pre>
     *
     * <code>.google.cloud.sql.v1beta4.MySqlReplicaConfiguration mysql_replica_configuration = 2;</code>
     */
    public Builder clearMysqlReplicaConfiguration() {
      if (mysqlReplicaConfigurationBuilder_ == null) {
        mysqlReplicaConfiguration_ = null;
        onChanged();
      } else {
        mysqlReplicaConfiguration_ = null;
        mysqlReplicaConfigurationBuilder_ = null;
      }

      return this;
    }
    /**
     * <pre>
     * MySQL specific configuration when replicating from a MySQL on-premises
     * primary instance. Replication configuration information such as the
     * username, password, certificates, and keys are not stored in the instance
     * metadata. The configuration information is used only to set up the
     * replication connection and is stored by MySQL in a file named
     * `master.info` in the data directory.
     * </pre>
     *
     * <code>.google.cloud.sql.v1beta4.MySqlReplicaConfiguration mysql_replica_configuration = 2;</code>
     */
    public com.google.cloud.sql.v1beta4.MySqlReplicaConfiguration.Builder getMysqlReplicaConfigurationBuilder() {
      
      onChanged();
      return getMysqlReplicaConfigurationFieldBuilder().getBuilder();
    }
    /**
     * <pre>
     * MySQL specific configuration when replicating from a MySQL on-premises
     * primary instance. Replication configuration information such as the
     * username, password, certificates, and keys are not stored in the instance
     * metadata. The configuration information is used only to set up the
     * replication connection and is stored by MySQL in a file named
     * `master.info` in the data directory.
     * </pre>
     *
     * <code>.google.cloud.sql.v1beta4.MySqlReplicaConfiguration mysql_replica_configuration = 2;</code>
     */
    public com.google.cloud.sql.v1beta4.MySqlReplicaConfigurationOrBuilder getMysqlReplicaConfigurationOrBuilder() {
      if (mysqlReplicaConfigurationBuilder_ != null) {
        return mysqlReplicaConfigurationBuilder_.getMessageOrBuilder();
      } else {
        return mysqlReplicaConfiguration_ == null ?
            com.google.cloud.sql.v1beta4.MySqlReplicaConfiguration.getDefaultInstance() : mysqlReplicaConfiguration_;
      }
    }
    /**
     * <pre>
     * MySQL specific configuration when replicating from a MySQL on-premises
     * primary instance. Replication configuration information such as the
     * username, password, certificates, and keys are not stored in the instance
     * metadata. The configuration information is used only to set up the
     * replication connection and is stored by MySQL in a file named
     * `master.info` in the data directory.
     * </pre>
     *
     * <code>.google.cloud.sql.v1beta4.MySqlReplicaConfiguration mysql_replica_configuration = 2;</code>
     */
    private com.google.protobuf.SingleFieldBuilderV3<
        com.google.cloud.sql.v1beta4.MySqlReplicaConfiguration, com.google.cloud.sql.v1beta4.MySqlReplicaConfiguration.Builder, com.google.cloud.sql.v1beta4.MySqlReplicaConfigurationOrBuilder> 
        getMysqlReplicaConfigurationFieldBuilder() {
      if (mysqlReplicaConfigurationBuilder_ == null) {
        mysqlReplicaConfigurationBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
            com.google.cloud.sql.v1beta4.MySqlReplicaConfiguration, com.google.cloud.sql.v1beta4.MySqlReplicaConfiguration.Builder, com.google.cloud.sql.v1beta4.MySqlReplicaConfigurationOrBuilder>(
                getMysqlReplicaConfiguration(),
                getParentForChildren(),
                isClean());
        mysqlReplicaConfiguration_ = null;
      }
      return mysqlReplicaConfigurationBuilder_;
    }

    private com.google.protobuf.BoolValue failoverTarget_;
    private com.google.protobuf.SingleFieldBuilderV3<
        com.google.protobuf.BoolValue, com.google.protobuf.BoolValue.Builder, com.google.protobuf.BoolValueOrBuilder> failoverTargetBuilder_;
    /**
     * <pre>
     * Specifies if the replica is the failover target. If the field is set to
     * `true` the replica will be designated as a failover replica. In case the
     * primary instance fails, the replica instance will be promoted as the new
     * primary instance. Only one replica can be specified as failover target, and
     * the replica has to be in different zone with the primary instance.
     * </pre>
     *
     * <code>.google.protobuf.BoolValue failover_target = 3;</code>
     * @return Whether the failoverTarget field is set.
     */
    public boolean hasFailoverTarget() {
      return failoverTargetBuilder_ != null || failoverTarget_ != null;
    }
    /**
     * <pre>
     * Specifies if the replica is the failover target. If the field is set to
     * `true` the replica will be designated as a failover replica. In case the
     * primary instance fails, the replica instance will be promoted as the new
     * primary instance. Only one replica can be specified as failover target, and
     * the replica has to be in different zone with the primary instance.
     * </pre>
     *
     * <code>.google.protobuf.BoolValue failover_target = 3;</code>
     * @return The failoverTarget.
     */
    public com.google.protobuf.BoolValue getFailoverTarget() {
      if (failoverTargetBuilder_ == null) {
        return failoverTarget_ == null ? com.google.protobuf.BoolValue.getDefaultInstance() : failoverTarget_;
      } else {
        return failoverTargetBuilder_.getMessage();
      }
    }
    /**
     * <pre>
     * Specifies if the replica is the failover target. If the field is set to
     * `true` the replica will be designated as a failover replica. In case the
     * primary instance fails, the replica instance will be promoted as the new
     * primary instance. Only one replica can be specified as failover target, and
     * the replica has to be in different zone with the primary instance.
     * </pre>
     *
     * <code>.google.protobuf.BoolValue failover_target = 3;</code>
     */
    public Builder setFailoverTarget(com.google.protobuf.BoolValue value) {
      if (failoverTargetBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        failoverTarget_ = value;
        onChanged();
      } else {
        failoverTargetBuilder_.setMessage(value);
      }

      return this;
    }
    /**
     * <pre>
     * Specifies if the replica is the failover target. If the field is set to
     * `true` the replica will be designated as a failover replica. In case the
     * primary instance fails, the replica instance will be promoted as the new
     * primary instance. Only one replica can be specified as failover target, and
     * the replica has to be in different zone with the primary instance.
     * </pre>
     *
     * <code>.google.protobuf.BoolValue failover_target = 3;</code>
     */
    public Builder setFailoverTarget(
        com.google.protobuf.BoolValue.Builder builderForValue) {
      if (failoverTargetBuilder_ == null) {
        failoverTarget_ = builderForValue.build();
        onChanged();
      } else {
        failoverTargetBuilder_.setMessage(builderForValue.build());
      }

      return this;
    }
    /**
     * <pre>
     * Specifies if the replica is the failover target. If the field is set to
     * `true` the replica will be designated as a failover replica. In case the
     * primary instance fails, the replica instance will be promoted as the new
     * primary instance. Only one replica can be specified as failover target, and
     * the replica has to be in different zone with the primary instance.
     * </pre>
     *
     * <code>.google.protobuf.BoolValue failover_target = 3;</code>
     */
    public Builder mergeFailoverTarget(com.google.protobuf.BoolValue value) {
      if (failoverTargetBuilder_ == null) {
        if (failoverTarget_ != null) {
          failoverTarget_ =
            com.google.protobuf.BoolValue.newBuilder(failoverTarget_).mergeFrom(value).buildPartial();
        } else {
          failoverTarget_ = value;
        }
        onChanged();
      } else {
        failoverTargetBuilder_.mergeFrom(value);
      }

      return this;
    }
    /**
     * <pre>
     * Specifies if the replica is the failover target. If the field is set to
     * `true` the replica will be designated as a failover replica. In case the
     * primary instance fails, the replica instance will be promoted as the new
     * primary instance. Only one replica can be specified as failover target, and
     * the replica has to be in different zone with the primary instance.
     * </pre>
     *
     * <code>.google.protobuf.BoolValue failover_target = 3;</code>
     */
    public Builder clearFailoverTarget() {
      if (failoverTargetBuilder_ == null) {
        failoverTarget_ = null;
        onChanged();
      } else {
        failoverTarget_ = null;
        failoverTargetBuilder_ = null;
      }

      return this;
    }
    /**
     * <pre>
     * Specifies if the replica is the failover target. If the field is set to
     * `true` the replica will be designated as a failover replica. In case the
     * primary instance fails, the replica instance will be promoted as the new
     * primary instance. Only one replica can be specified as failover target, and
     * the replica has to be in different zone with the primary instance.
     * </pre>
     *
     * <code>.google.protobuf.BoolValue failover_target = 3;</code>
     */
    public com.google.protobuf.BoolValue.Builder getFailoverTargetBuilder() {
      
      onChanged();
      return getFailoverTargetFieldBuilder().getBuilder();
    }
    /**
     * <pre>
     * Specifies if the replica is the failover target. If the field is set to
     * `true` the replica will be designated as a failover replica. In case the
     * primary instance fails, the replica instance will be promoted as the new
     * primary instance. Only one replica can be specified as failover target, and
     * the replica has to be in different zone with the primary instance.
     * </pre>
     *
     * <code>.google.protobuf.BoolValue failover_target = 3;</code>
     */
    public com.google.protobuf.BoolValueOrBuilder getFailoverTargetOrBuilder() {
      if (failoverTargetBuilder_ != null) {
        return failoverTargetBuilder_.getMessageOrBuilder();
      } else {
        return failoverTarget_ == null ?
            com.google.protobuf.BoolValue.getDefaultInstance() : failoverTarget_;
      }
    }
    /**
     * <pre>
     * Specifies if the replica is the failover target. If the field is set to
     * `true` the replica will be designated as a failover replica. In case the
     * primary instance fails, the replica instance will be promoted as the new
     * primary instance. Only one replica can be specified as failover target, and
     * the replica has to be in different zone with the primary instance.
     * </pre>
     *
     * <code>.google.protobuf.BoolValue failover_target = 3;</code>
     */
    private com.google.protobuf.SingleFieldBuilderV3<
        com.google.protobuf.BoolValue, com.google.protobuf.BoolValue.Builder, com.google.protobuf.BoolValueOrBuilder> 
        getFailoverTargetFieldBuilder() {
      if (failoverTargetBuilder_ == null) {
        failoverTargetBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
            com.google.protobuf.BoolValue, com.google.protobuf.BoolValue.Builder, com.google.protobuf.BoolValueOrBuilder>(
                getFailoverTarget(),
                getParentForChildren(),
                isClean());
        failoverTarget_ = null;
      }
      return failoverTargetBuilder_;
    }
    @java.lang.Override
    public final Builder setUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return super.setUnknownFields(unknownFields);
    }

    @java.lang.Override
    public final Builder mergeUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return super.mergeUnknownFields(unknownFields);
    }


    // @@protoc_insertion_point(builder_scope:google.cloud.sql.v1beta4.ReplicaConfiguration)
  }

  // @@protoc_insertion_point(class_scope:google.cloud.sql.v1beta4.ReplicaConfiguration)
  private static final com.google.cloud.sql.v1beta4.ReplicaConfiguration DEFAULT_INSTANCE;
  static {
    DEFAULT_INSTANCE = new com.google.cloud.sql.v1beta4.ReplicaConfiguration();
  }

  public static com.google.cloud.sql.v1beta4.ReplicaConfiguration getDefaultInstance() {
    return DEFAULT_INSTANCE;
  }

  private static final com.google.protobuf.Parser<ReplicaConfiguration>
      PARSER = new com.google.protobuf.AbstractParser<ReplicaConfiguration>() {
    @java.lang.Override
    public ReplicaConfiguration parsePartialFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return new ReplicaConfiguration(input, extensionRegistry);
    }
  };

  public static com.google.protobuf.Parser<ReplicaConfiguration> parser() {
    return PARSER;
  }

  @java.lang.Override
  public com.google.protobuf.Parser<ReplicaConfiguration> getParserForType() {
    return PARSER;
  }

  @java.lang.Override
  public com.google.cloud.sql.v1beta4.ReplicaConfiguration getDefaultInstanceForType() {
    return DEFAULT_INSTANCE;
  }

}

