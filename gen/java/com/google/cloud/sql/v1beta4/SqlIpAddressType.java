// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: google/cloud/sql/v1beta4/cloud_sql_resources.proto

package com.google.cloud.sql.v1beta4;

/**
 * Protobuf enum {@code google.cloud.sql.v1beta4.SqlIpAddressType}
 */
public enum SqlIpAddressType
    implements com.google.protobuf.ProtocolMessageEnum {
  /**
   * <pre>
   * This is an unknown IP address type.
   * </pre>
   *
   * <code>SQL_IP_ADDRESS_TYPE_UNSPECIFIED = 0;</code>
   */
  SQL_IP_ADDRESS_TYPE_UNSPECIFIED(0),
  /**
   * <pre>
   * IP address the customer is supposed to connect to. Usually this is the
   * load balancer's IP address
   * </pre>
   *
   * <code>PRIMARY = 1;</code>
   */
  PRIMARY(1),
  /**
   * <pre>
   * Source IP address of the connection a read replica establishes to its
   * external primary instance. This IP address can be allowlisted by the
   * customer in case it has a firewall that filters incoming connection to its
   * on premises primary instance.
   * </pre>
   *
   * <code>OUTGOING = 2;</code>
   */
  OUTGOING(2),
  /**
   * <pre>
   * Private IP used when using private IPs and network peering.
   * </pre>
   *
   * <code>PRIVATE = 3;</code>
   */
  PRIVATE(3),
  /**
   * <pre>
   * V1 IP of a migrated instance. We want the user to
   * decommission this IP as soon as the migration is complete.
   * Note: V1 instances with V1 ip addresses will be counted as PRIMARY.
   * </pre>
   *
   * <code>MIGRATED_1ST_GEN = 4;</code>
   */
  MIGRATED_1ST_GEN(4),
  UNRECOGNIZED(-1),
  ;

  /**
   * <pre>
   * This is an unknown IP address type.
   * </pre>
   *
   * <code>SQL_IP_ADDRESS_TYPE_UNSPECIFIED = 0;</code>
   */
  public static final int SQL_IP_ADDRESS_TYPE_UNSPECIFIED_VALUE = 0;
  /**
   * <pre>
   * IP address the customer is supposed to connect to. Usually this is the
   * load balancer's IP address
   * </pre>
   *
   * <code>PRIMARY = 1;</code>
   */
  public static final int PRIMARY_VALUE = 1;
  /**
   * <pre>
   * Source IP address of the connection a read replica establishes to its
   * external primary instance. This IP address can be allowlisted by the
   * customer in case it has a firewall that filters incoming connection to its
   * on premises primary instance.
   * </pre>
   *
   * <code>OUTGOING = 2;</code>
   */
  public static final int OUTGOING_VALUE = 2;
  /**
   * <pre>
   * Private IP used when using private IPs and network peering.
   * </pre>
   *
   * <code>PRIVATE = 3;</code>
   */
  public static final int PRIVATE_VALUE = 3;
  /**
   * <pre>
   * V1 IP of a migrated instance. We want the user to
   * decommission this IP as soon as the migration is complete.
   * Note: V1 instances with V1 ip addresses will be counted as PRIMARY.
   * </pre>
   *
   * <code>MIGRATED_1ST_GEN = 4;</code>
   */
  public static final int MIGRATED_1ST_GEN_VALUE = 4;


  public final int getNumber() {
    if (this == UNRECOGNIZED) {
      throw new java.lang.IllegalArgumentException(
          "Can't get the number of an unknown enum value.");
    }
    return value;
  }

  /**
   * @param value The numeric wire value of the corresponding enum entry.
   * @return The enum associated with the given numeric wire value.
   * @deprecated Use {@link #forNumber(int)} instead.
   */
  @java.lang.Deprecated
  public static SqlIpAddressType valueOf(int value) {
    return forNumber(value);
  }

  /**
   * @param value The numeric wire value of the corresponding enum entry.
   * @return The enum associated with the given numeric wire value.
   */
  public static SqlIpAddressType forNumber(int value) {
    switch (value) {
      case 0: return SQL_IP_ADDRESS_TYPE_UNSPECIFIED;
      case 1: return PRIMARY;
      case 2: return OUTGOING;
      case 3: return PRIVATE;
      case 4: return MIGRATED_1ST_GEN;
      default: return null;
    }
  }

  public static com.google.protobuf.Internal.EnumLiteMap<SqlIpAddressType>
      internalGetValueMap() {
    return internalValueMap;
  }
  private static final com.google.protobuf.Internal.EnumLiteMap<
      SqlIpAddressType> internalValueMap =
        new com.google.protobuf.Internal.EnumLiteMap<SqlIpAddressType>() {
          public SqlIpAddressType findValueByNumber(int number) {
            return SqlIpAddressType.forNumber(number);
          }
        };

  public final com.google.protobuf.Descriptors.EnumValueDescriptor
      getValueDescriptor() {
    if (this == UNRECOGNIZED) {
      throw new java.lang.IllegalStateException(
          "Can't get the descriptor of an unrecognized enum value.");
    }
    return getDescriptor().getValues().get(ordinal());
  }
  public final com.google.protobuf.Descriptors.EnumDescriptor
      getDescriptorForType() {
    return getDescriptor();
  }
  public static final com.google.protobuf.Descriptors.EnumDescriptor
      getDescriptor() {
    return com.google.cloud.sql.v1beta4.CloudSqlResourcesProto.getDescriptor().getEnumTypes().get(5);
  }

  private static final SqlIpAddressType[] VALUES = values();

  public static SqlIpAddressType valueOf(
      com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
    if (desc.getType() != getDescriptor()) {
      throw new java.lang.IllegalArgumentException(
        "EnumValueDescriptor is not for this type.");
    }
    if (desc.getIndex() == -1) {
      return UNRECOGNIZED;
    }
    return VALUES[desc.getIndex()];
  }

  private final int value;

  private SqlIpAddressType(int value) {
    this.value = value;
  }

  // @@protoc_insertion_point(enum_scope:google.cloud.sql.v1beta4.SqlIpAddressType)
}

