// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: google/cloud/sql/v1beta4/cloud_sql_resources.proto

package com.google.cloud.sql.v1beta4;

public interface ReplicaConfigurationOrBuilder extends
    // @@protoc_insertion_point(interface_extends:google.cloud.sql.v1beta4.ReplicaConfiguration)
    com.google.protobuf.MessageOrBuilder {

  /**
   * <pre>
   * This is always `sql#replicaConfiguration`.
   * </pre>
   *
   * <code>string kind = 1;</code>
   * @return The kind.
   */
  java.lang.String getKind();
  /**
   * <pre>
   * This is always `sql#replicaConfiguration`.
   * </pre>
   *
   * <code>string kind = 1;</code>
   * @return The bytes for kind.
   */
  com.google.protobuf.ByteString
      getKindBytes();

  /**
   * <pre>
   * MySQL specific configuration when replicating from a MySQL on-premises
   * primary instance. Replication configuration information such as the
   * username, password, certificates, and keys are not stored in the instance
   * metadata. The configuration information is used only to set up the
   * replication connection and is stored by MySQL in a file named
   * `master.info` in the data directory.
   * </pre>
   *
   * <code>.google.cloud.sql.v1beta4.MySqlReplicaConfiguration mysql_replica_configuration = 2;</code>
   * @return Whether the mysqlReplicaConfiguration field is set.
   */
  boolean hasMysqlReplicaConfiguration();
  /**
   * <pre>
   * MySQL specific configuration when replicating from a MySQL on-premises
   * primary instance. Replication configuration information such as the
   * username, password, certificates, and keys are not stored in the instance
   * metadata. The configuration information is used only to set up the
   * replication connection and is stored by MySQL in a file named
   * `master.info` in the data directory.
   * </pre>
   *
   * <code>.google.cloud.sql.v1beta4.MySqlReplicaConfiguration mysql_replica_configuration = 2;</code>
   * @return The mysqlReplicaConfiguration.
   */
  com.google.cloud.sql.v1beta4.MySqlReplicaConfiguration getMysqlReplicaConfiguration();
  /**
   * <pre>
   * MySQL specific configuration when replicating from a MySQL on-premises
   * primary instance. Replication configuration information such as the
   * username, password, certificates, and keys are not stored in the instance
   * metadata. The configuration information is used only to set up the
   * replication connection and is stored by MySQL in a file named
   * `master.info` in the data directory.
   * </pre>
   *
   * <code>.google.cloud.sql.v1beta4.MySqlReplicaConfiguration mysql_replica_configuration = 2;</code>
   */
  com.google.cloud.sql.v1beta4.MySqlReplicaConfigurationOrBuilder getMysqlReplicaConfigurationOrBuilder();

  /**
   * <pre>
   * Specifies if the replica is the failover target. If the field is set to
   * `true` the replica will be designated as a failover replica. In case the
   * primary instance fails, the replica instance will be promoted as the new
   * primary instance. Only one replica can be specified as failover target, and
   * the replica has to be in different zone with the primary instance.
   * </pre>
   *
   * <code>.google.protobuf.BoolValue failover_target = 3;</code>
   * @return Whether the failoverTarget field is set.
   */
  boolean hasFailoverTarget();
  /**
   * <pre>
   * Specifies if the replica is the failover target. If the field is set to
   * `true` the replica will be designated as a failover replica. In case the
   * primary instance fails, the replica instance will be promoted as the new
   * primary instance. Only one replica can be specified as failover target, and
   * the replica has to be in different zone with the primary instance.
   * </pre>
   *
   * <code>.google.protobuf.BoolValue failover_target = 3;</code>
   * @return The failoverTarget.
   */
  com.google.protobuf.BoolValue getFailoverTarget();
  /**
   * <pre>
   * Specifies if the replica is the failover target. If the field is set to
   * `true` the replica will be designated as a failover replica. In case the
   * primary instance fails, the replica instance will be promoted as the new
   * primary instance. Only one replica can be specified as failover target, and
   * the replica has to be in different zone with the primary instance.
   * </pre>
   *
   * <code>.google.protobuf.BoolValue failover_target = 3;</code>
   */
  com.google.protobuf.BoolValueOrBuilder getFailoverTargetOrBuilder();
}
