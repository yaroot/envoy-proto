// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: google/cloud/sql/v1beta4/cloud_sql_resources.proto

package com.google.cloud.sql.v1beta4;

/**
 * <pre>
 * Database instance demote primary instance context.
 * </pre>
 *
 * Protobuf type {@code google.cloud.sql.v1beta4.DemoteMasterContext}
 */
public final class DemoteMasterContext extends
    com.google.protobuf.GeneratedMessageV3 implements
    // @@protoc_insertion_point(message_implements:google.cloud.sql.v1beta4.DemoteMasterContext)
    DemoteMasterContextOrBuilder {
private static final long serialVersionUID = 0L;
  // Use DemoteMasterContext.newBuilder() to construct.
  private DemoteMasterContext(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
    super(builder);
  }
  private DemoteMasterContext() {
    kind_ = "";
    masterInstanceName_ = "";
  }

  @java.lang.Override
  @SuppressWarnings({"unused"})
  protected java.lang.Object newInstance(
      UnusedPrivateParameter unused) {
    return new DemoteMasterContext();
  }

  @java.lang.Override
  public final com.google.protobuf.UnknownFieldSet
  getUnknownFields() {
    return this.unknownFields;
  }
  private DemoteMasterContext(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    this();
    if (extensionRegistry == null) {
      throw new java.lang.NullPointerException();
    }
    com.google.protobuf.UnknownFieldSet.Builder unknownFields =
        com.google.protobuf.UnknownFieldSet.newBuilder();
    try {
      boolean done = false;
      while (!done) {
        int tag = input.readTag();
        switch (tag) {
          case 0:
            done = true;
            break;
          case 10: {
            java.lang.String s = input.readStringRequireUtf8();

            kind_ = s;
            break;
          }
          case 18: {
            com.google.protobuf.BoolValue.Builder subBuilder = null;
            if (verifyGtidConsistency_ != null) {
              subBuilder = verifyGtidConsistency_.toBuilder();
            }
            verifyGtidConsistency_ = input.readMessage(com.google.protobuf.BoolValue.parser(), extensionRegistry);
            if (subBuilder != null) {
              subBuilder.mergeFrom(verifyGtidConsistency_);
              verifyGtidConsistency_ = subBuilder.buildPartial();
            }

            break;
          }
          case 26: {
            java.lang.String s = input.readStringRequireUtf8();

            masterInstanceName_ = s;
            break;
          }
          case 34: {
            com.google.cloud.sql.v1beta4.DemoteMasterConfiguration.Builder subBuilder = null;
            if (replicaConfiguration_ != null) {
              subBuilder = replicaConfiguration_.toBuilder();
            }
            replicaConfiguration_ = input.readMessage(com.google.cloud.sql.v1beta4.DemoteMasterConfiguration.parser(), extensionRegistry);
            if (subBuilder != null) {
              subBuilder.mergeFrom(replicaConfiguration_);
              replicaConfiguration_ = subBuilder.buildPartial();
            }

            break;
          }
          case 40: {

            skipReplicationSetup_ = input.readBool();
            break;
          }
          default: {
            if (!parseUnknownField(
                input, unknownFields, extensionRegistry, tag)) {
              done = true;
            }
            break;
          }
        }
      }
    } catch (com.google.protobuf.InvalidProtocolBufferException e) {
      throw e.setUnfinishedMessage(this);
    } catch (com.google.protobuf.UninitializedMessageException e) {
      throw e.asInvalidProtocolBufferException().setUnfinishedMessage(this);
    } catch (java.io.IOException e) {
      throw new com.google.protobuf.InvalidProtocolBufferException(
          e).setUnfinishedMessage(this);
    } finally {
      this.unknownFields = unknownFields.build();
      makeExtensionsImmutable();
    }
  }
  public static final com.google.protobuf.Descriptors.Descriptor
      getDescriptor() {
    return com.google.cloud.sql.v1beta4.CloudSqlResourcesProto.internal_static_google_cloud_sql_v1beta4_DemoteMasterContext_descriptor;
  }

  @java.lang.Override
  protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internalGetFieldAccessorTable() {
    return com.google.cloud.sql.v1beta4.CloudSqlResourcesProto.internal_static_google_cloud_sql_v1beta4_DemoteMasterContext_fieldAccessorTable
        .ensureFieldAccessorsInitialized(
            com.google.cloud.sql.v1beta4.DemoteMasterContext.class, com.google.cloud.sql.v1beta4.DemoteMasterContext.Builder.class);
  }

  public static final int KIND_FIELD_NUMBER = 1;
  private volatile java.lang.Object kind_;
  /**
   * <pre>
   * This is always `sql#demoteMasterContext`.
   * </pre>
   *
   * <code>string kind = 1;</code>
   * @return The kind.
   */
  @java.lang.Override
  public java.lang.String getKind() {
    java.lang.Object ref = kind_;
    if (ref instanceof java.lang.String) {
      return (java.lang.String) ref;
    } else {
      com.google.protobuf.ByteString bs = 
          (com.google.protobuf.ByteString) ref;
      java.lang.String s = bs.toStringUtf8();
      kind_ = s;
      return s;
    }
  }
  /**
   * <pre>
   * This is always `sql#demoteMasterContext`.
   * </pre>
   *
   * <code>string kind = 1;</code>
   * @return The bytes for kind.
   */
  @java.lang.Override
  public com.google.protobuf.ByteString
      getKindBytes() {
    java.lang.Object ref = kind_;
    if (ref instanceof java.lang.String) {
      com.google.protobuf.ByteString b = 
          com.google.protobuf.ByteString.copyFromUtf8(
              (java.lang.String) ref);
      kind_ = b;
      return b;
    } else {
      return (com.google.protobuf.ByteString) ref;
    }
  }

  public static final int VERIFY_GTID_CONSISTENCY_FIELD_NUMBER = 2;
  private com.google.protobuf.BoolValue verifyGtidConsistency_;
  /**
   * <pre>
   * Verify the GTID consistency for demote operation. Default value:
   * `True`. Setting this flag to `false` enables you to bypass the GTID
   * consistency check between on-premises primary instance and Cloud SQL
   * instance during the demotion operation but also exposes you to the risk of
   * future replication failures. Change the value only if you know the reason
   * for the GTID divergence and are confident that doing so will not cause any
   * replication issues.
   * </pre>
   *
   * <code>.google.protobuf.BoolValue verify_gtid_consistency = 2;</code>
   * @return Whether the verifyGtidConsistency field is set.
   */
  @java.lang.Override
  public boolean hasVerifyGtidConsistency() {
    return verifyGtidConsistency_ != null;
  }
  /**
   * <pre>
   * Verify the GTID consistency for demote operation. Default value:
   * `True`. Setting this flag to `false` enables you to bypass the GTID
   * consistency check between on-premises primary instance and Cloud SQL
   * instance during the demotion operation but also exposes you to the risk of
   * future replication failures. Change the value only if you know the reason
   * for the GTID divergence and are confident that doing so will not cause any
   * replication issues.
   * </pre>
   *
   * <code>.google.protobuf.BoolValue verify_gtid_consistency = 2;</code>
   * @return The verifyGtidConsistency.
   */
  @java.lang.Override
  public com.google.protobuf.BoolValue getVerifyGtidConsistency() {
    return verifyGtidConsistency_ == null ? com.google.protobuf.BoolValue.getDefaultInstance() : verifyGtidConsistency_;
  }
  /**
   * <pre>
   * Verify the GTID consistency for demote operation. Default value:
   * `True`. Setting this flag to `false` enables you to bypass the GTID
   * consistency check between on-premises primary instance and Cloud SQL
   * instance during the demotion operation but also exposes you to the risk of
   * future replication failures. Change the value only if you know the reason
   * for the GTID divergence and are confident that doing so will not cause any
   * replication issues.
   * </pre>
   *
   * <code>.google.protobuf.BoolValue verify_gtid_consistency = 2;</code>
   */
  @java.lang.Override
  public com.google.protobuf.BoolValueOrBuilder getVerifyGtidConsistencyOrBuilder() {
    return getVerifyGtidConsistency();
  }

  public static final int MASTER_INSTANCE_NAME_FIELD_NUMBER = 3;
  private volatile java.lang.Object masterInstanceName_;
  /**
   * <pre>
   * The name of the instance which will act as on-premises primary instance
   * in the replication setup.
   * </pre>
   *
   * <code>string master_instance_name = 3;</code>
   * @return The masterInstanceName.
   */
  @java.lang.Override
  public java.lang.String getMasterInstanceName() {
    java.lang.Object ref = masterInstanceName_;
    if (ref instanceof java.lang.String) {
      return (java.lang.String) ref;
    } else {
      com.google.protobuf.ByteString bs = 
          (com.google.protobuf.ByteString) ref;
      java.lang.String s = bs.toStringUtf8();
      masterInstanceName_ = s;
      return s;
    }
  }
  /**
   * <pre>
   * The name of the instance which will act as on-premises primary instance
   * in the replication setup.
   * </pre>
   *
   * <code>string master_instance_name = 3;</code>
   * @return The bytes for masterInstanceName.
   */
  @java.lang.Override
  public com.google.protobuf.ByteString
      getMasterInstanceNameBytes() {
    java.lang.Object ref = masterInstanceName_;
    if (ref instanceof java.lang.String) {
      com.google.protobuf.ByteString b = 
          com.google.protobuf.ByteString.copyFromUtf8(
              (java.lang.String) ref);
      masterInstanceName_ = b;
      return b;
    } else {
      return (com.google.protobuf.ByteString) ref;
    }
  }

  public static final int REPLICA_CONFIGURATION_FIELD_NUMBER = 4;
  private com.google.cloud.sql.v1beta4.DemoteMasterConfiguration replicaConfiguration_;
  /**
   * <pre>
   * Configuration specific to read-replicas replicating from the on-premises
   * primary instance.
   * </pre>
   *
   * <code>.google.cloud.sql.v1beta4.DemoteMasterConfiguration replica_configuration = 4;</code>
   * @return Whether the replicaConfiguration field is set.
   */
  @java.lang.Override
  public boolean hasReplicaConfiguration() {
    return replicaConfiguration_ != null;
  }
  /**
   * <pre>
   * Configuration specific to read-replicas replicating from the on-premises
   * primary instance.
   * </pre>
   *
   * <code>.google.cloud.sql.v1beta4.DemoteMasterConfiguration replica_configuration = 4;</code>
   * @return The replicaConfiguration.
   */
  @java.lang.Override
  public com.google.cloud.sql.v1beta4.DemoteMasterConfiguration getReplicaConfiguration() {
    return replicaConfiguration_ == null ? com.google.cloud.sql.v1beta4.DemoteMasterConfiguration.getDefaultInstance() : replicaConfiguration_;
  }
  /**
   * <pre>
   * Configuration specific to read-replicas replicating from the on-premises
   * primary instance.
   * </pre>
   *
   * <code>.google.cloud.sql.v1beta4.DemoteMasterConfiguration replica_configuration = 4;</code>
   */
  @java.lang.Override
  public com.google.cloud.sql.v1beta4.DemoteMasterConfigurationOrBuilder getReplicaConfigurationOrBuilder() {
    return getReplicaConfiguration();
  }

  public static final int SKIP_REPLICATION_SETUP_FIELD_NUMBER = 5;
  private boolean skipReplicationSetup_;
  /**
   * <pre>
   * Flag to skip replication setup on the instance.
   * </pre>
   *
   * <code>bool skip_replication_setup = 5;</code>
   * @return The skipReplicationSetup.
   */
  @java.lang.Override
  public boolean getSkipReplicationSetup() {
    return skipReplicationSetup_;
  }

  private byte memoizedIsInitialized = -1;
  @java.lang.Override
  public final boolean isInitialized() {
    byte isInitialized = memoizedIsInitialized;
    if (isInitialized == 1) return true;
    if (isInitialized == 0) return false;

    memoizedIsInitialized = 1;
    return true;
  }

  @java.lang.Override
  public void writeTo(com.google.protobuf.CodedOutputStream output)
                      throws java.io.IOException {
    if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(kind_)) {
      com.google.protobuf.GeneratedMessageV3.writeString(output, 1, kind_);
    }
    if (verifyGtidConsistency_ != null) {
      output.writeMessage(2, getVerifyGtidConsistency());
    }
    if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(masterInstanceName_)) {
      com.google.protobuf.GeneratedMessageV3.writeString(output, 3, masterInstanceName_);
    }
    if (replicaConfiguration_ != null) {
      output.writeMessage(4, getReplicaConfiguration());
    }
    if (skipReplicationSetup_ != false) {
      output.writeBool(5, skipReplicationSetup_);
    }
    unknownFields.writeTo(output);
  }

  @java.lang.Override
  public int getSerializedSize() {
    int size = memoizedSize;
    if (size != -1) return size;

    size = 0;
    if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(kind_)) {
      size += com.google.protobuf.GeneratedMessageV3.computeStringSize(1, kind_);
    }
    if (verifyGtidConsistency_ != null) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(2, getVerifyGtidConsistency());
    }
    if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(masterInstanceName_)) {
      size += com.google.protobuf.GeneratedMessageV3.computeStringSize(3, masterInstanceName_);
    }
    if (replicaConfiguration_ != null) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(4, getReplicaConfiguration());
    }
    if (skipReplicationSetup_ != false) {
      size += com.google.protobuf.CodedOutputStream
        .computeBoolSize(5, skipReplicationSetup_);
    }
    size += unknownFields.getSerializedSize();
    memoizedSize = size;
    return size;
  }

  @java.lang.Override
  public boolean equals(final java.lang.Object obj) {
    if (obj == this) {
     return true;
    }
    if (!(obj instanceof com.google.cloud.sql.v1beta4.DemoteMasterContext)) {
      return super.equals(obj);
    }
    com.google.cloud.sql.v1beta4.DemoteMasterContext other = (com.google.cloud.sql.v1beta4.DemoteMasterContext) obj;

    if (!getKind()
        .equals(other.getKind())) return false;
    if (hasVerifyGtidConsistency() != other.hasVerifyGtidConsistency()) return false;
    if (hasVerifyGtidConsistency()) {
      if (!getVerifyGtidConsistency()
          .equals(other.getVerifyGtidConsistency())) return false;
    }
    if (!getMasterInstanceName()
        .equals(other.getMasterInstanceName())) return false;
    if (hasReplicaConfiguration() != other.hasReplicaConfiguration()) return false;
    if (hasReplicaConfiguration()) {
      if (!getReplicaConfiguration()
          .equals(other.getReplicaConfiguration())) return false;
    }
    if (getSkipReplicationSetup()
        != other.getSkipReplicationSetup()) return false;
    if (!unknownFields.equals(other.unknownFields)) return false;
    return true;
  }

  @java.lang.Override
  public int hashCode() {
    if (memoizedHashCode != 0) {
      return memoizedHashCode;
    }
    int hash = 41;
    hash = (19 * hash) + getDescriptor().hashCode();
    hash = (37 * hash) + KIND_FIELD_NUMBER;
    hash = (53 * hash) + getKind().hashCode();
    if (hasVerifyGtidConsistency()) {
      hash = (37 * hash) + VERIFY_GTID_CONSISTENCY_FIELD_NUMBER;
      hash = (53 * hash) + getVerifyGtidConsistency().hashCode();
    }
    hash = (37 * hash) + MASTER_INSTANCE_NAME_FIELD_NUMBER;
    hash = (53 * hash) + getMasterInstanceName().hashCode();
    if (hasReplicaConfiguration()) {
      hash = (37 * hash) + REPLICA_CONFIGURATION_FIELD_NUMBER;
      hash = (53 * hash) + getReplicaConfiguration().hashCode();
    }
    hash = (37 * hash) + SKIP_REPLICATION_SETUP_FIELD_NUMBER;
    hash = (53 * hash) + com.google.protobuf.Internal.hashBoolean(
        getSkipReplicationSetup());
    hash = (29 * hash) + unknownFields.hashCode();
    memoizedHashCode = hash;
    return hash;
  }

  public static com.google.cloud.sql.v1beta4.DemoteMasterContext parseFrom(
      java.nio.ByteBuffer data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static com.google.cloud.sql.v1beta4.DemoteMasterContext parseFrom(
      java.nio.ByteBuffer data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static com.google.cloud.sql.v1beta4.DemoteMasterContext parseFrom(
      com.google.protobuf.ByteString data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static com.google.cloud.sql.v1beta4.DemoteMasterContext parseFrom(
      com.google.protobuf.ByteString data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static com.google.cloud.sql.v1beta4.DemoteMasterContext parseFrom(byte[] data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static com.google.cloud.sql.v1beta4.DemoteMasterContext parseFrom(
      byte[] data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static com.google.cloud.sql.v1beta4.DemoteMasterContext parseFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input);
  }
  public static com.google.cloud.sql.v1beta4.DemoteMasterContext parseFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input, extensionRegistry);
  }
  public static com.google.cloud.sql.v1beta4.DemoteMasterContext parseDelimitedFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseDelimitedWithIOException(PARSER, input);
  }
  public static com.google.cloud.sql.v1beta4.DemoteMasterContext parseDelimitedFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
  }
  public static com.google.cloud.sql.v1beta4.DemoteMasterContext parseFrom(
      com.google.protobuf.CodedInputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input);
  }
  public static com.google.cloud.sql.v1beta4.DemoteMasterContext parseFrom(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input, extensionRegistry);
  }

  @java.lang.Override
  public Builder newBuilderForType() { return newBuilder(); }
  public static Builder newBuilder() {
    return DEFAULT_INSTANCE.toBuilder();
  }
  public static Builder newBuilder(com.google.cloud.sql.v1beta4.DemoteMasterContext prototype) {
    return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
  }
  @java.lang.Override
  public Builder toBuilder() {
    return this == DEFAULT_INSTANCE
        ? new Builder() : new Builder().mergeFrom(this);
  }

  @java.lang.Override
  protected Builder newBuilderForType(
      com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
    Builder builder = new Builder(parent);
    return builder;
  }
  /**
   * <pre>
   * Database instance demote primary instance context.
   * </pre>
   *
   * Protobuf type {@code google.cloud.sql.v1beta4.DemoteMasterContext}
   */
  public static final class Builder extends
      com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
      // @@protoc_insertion_point(builder_implements:google.cloud.sql.v1beta4.DemoteMasterContext)
      com.google.cloud.sql.v1beta4.DemoteMasterContextOrBuilder {
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.google.cloud.sql.v1beta4.CloudSqlResourcesProto.internal_static_google_cloud_sql_v1beta4_DemoteMasterContext_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.google.cloud.sql.v1beta4.CloudSqlResourcesProto.internal_static_google_cloud_sql_v1beta4_DemoteMasterContext_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.google.cloud.sql.v1beta4.DemoteMasterContext.class, com.google.cloud.sql.v1beta4.DemoteMasterContext.Builder.class);
    }

    // Construct using com.google.cloud.sql.v1beta4.DemoteMasterContext.newBuilder()
    private Builder() {
      maybeForceBuilderInitialization();
    }

    private Builder(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      super(parent);
      maybeForceBuilderInitialization();
    }
    private void maybeForceBuilderInitialization() {
      if (com.google.protobuf.GeneratedMessageV3
              .alwaysUseFieldBuilders) {
      }
    }
    @java.lang.Override
    public Builder clear() {
      super.clear();
      kind_ = "";

      if (verifyGtidConsistencyBuilder_ == null) {
        verifyGtidConsistency_ = null;
      } else {
        verifyGtidConsistency_ = null;
        verifyGtidConsistencyBuilder_ = null;
      }
      masterInstanceName_ = "";

      if (replicaConfigurationBuilder_ == null) {
        replicaConfiguration_ = null;
      } else {
        replicaConfiguration_ = null;
        replicaConfigurationBuilder_ = null;
      }
      skipReplicationSetup_ = false;

      return this;
    }

    @java.lang.Override
    public com.google.protobuf.Descriptors.Descriptor
        getDescriptorForType() {
      return com.google.cloud.sql.v1beta4.CloudSqlResourcesProto.internal_static_google_cloud_sql_v1beta4_DemoteMasterContext_descriptor;
    }

    @java.lang.Override
    public com.google.cloud.sql.v1beta4.DemoteMasterContext getDefaultInstanceForType() {
      return com.google.cloud.sql.v1beta4.DemoteMasterContext.getDefaultInstance();
    }

    @java.lang.Override
    public com.google.cloud.sql.v1beta4.DemoteMasterContext build() {
      com.google.cloud.sql.v1beta4.DemoteMasterContext result = buildPartial();
      if (!result.isInitialized()) {
        throw newUninitializedMessageException(result);
      }
      return result;
    }

    @java.lang.Override
    public com.google.cloud.sql.v1beta4.DemoteMasterContext buildPartial() {
      com.google.cloud.sql.v1beta4.DemoteMasterContext result = new com.google.cloud.sql.v1beta4.DemoteMasterContext(this);
      result.kind_ = kind_;
      if (verifyGtidConsistencyBuilder_ == null) {
        result.verifyGtidConsistency_ = verifyGtidConsistency_;
      } else {
        result.verifyGtidConsistency_ = verifyGtidConsistencyBuilder_.build();
      }
      result.masterInstanceName_ = masterInstanceName_;
      if (replicaConfigurationBuilder_ == null) {
        result.replicaConfiguration_ = replicaConfiguration_;
      } else {
        result.replicaConfiguration_ = replicaConfigurationBuilder_.build();
      }
      result.skipReplicationSetup_ = skipReplicationSetup_;
      onBuilt();
      return result;
    }

    @java.lang.Override
    public Builder clone() {
      return super.clone();
    }
    @java.lang.Override
    public Builder setField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        java.lang.Object value) {
      return super.setField(field, value);
    }
    @java.lang.Override
    public Builder clearField(
        com.google.protobuf.Descriptors.FieldDescriptor field) {
      return super.clearField(field);
    }
    @java.lang.Override
    public Builder clearOneof(
        com.google.protobuf.Descriptors.OneofDescriptor oneof) {
      return super.clearOneof(oneof);
    }
    @java.lang.Override
    public Builder setRepeatedField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        int index, java.lang.Object value) {
      return super.setRepeatedField(field, index, value);
    }
    @java.lang.Override
    public Builder addRepeatedField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        java.lang.Object value) {
      return super.addRepeatedField(field, value);
    }
    @java.lang.Override
    public Builder mergeFrom(com.google.protobuf.Message other) {
      if (other instanceof com.google.cloud.sql.v1beta4.DemoteMasterContext) {
        return mergeFrom((com.google.cloud.sql.v1beta4.DemoteMasterContext)other);
      } else {
        super.mergeFrom(other);
        return this;
      }
    }

    public Builder mergeFrom(com.google.cloud.sql.v1beta4.DemoteMasterContext other) {
      if (other == com.google.cloud.sql.v1beta4.DemoteMasterContext.getDefaultInstance()) return this;
      if (!other.getKind().isEmpty()) {
        kind_ = other.kind_;
        onChanged();
      }
      if (other.hasVerifyGtidConsistency()) {
        mergeVerifyGtidConsistency(other.getVerifyGtidConsistency());
      }
      if (!other.getMasterInstanceName().isEmpty()) {
        masterInstanceName_ = other.masterInstanceName_;
        onChanged();
      }
      if (other.hasReplicaConfiguration()) {
        mergeReplicaConfiguration(other.getReplicaConfiguration());
      }
      if (other.getSkipReplicationSetup() != false) {
        setSkipReplicationSetup(other.getSkipReplicationSetup());
      }
      this.mergeUnknownFields(other.unknownFields);
      onChanged();
      return this;
    }

    @java.lang.Override
    public final boolean isInitialized() {
      return true;
    }

    @java.lang.Override
    public Builder mergeFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      com.google.cloud.sql.v1beta4.DemoteMasterContext parsedMessage = null;
      try {
        parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        parsedMessage = (com.google.cloud.sql.v1beta4.DemoteMasterContext) e.getUnfinishedMessage();
        throw e.unwrapIOException();
      } finally {
        if (parsedMessage != null) {
          mergeFrom(parsedMessage);
        }
      }
      return this;
    }

    private java.lang.Object kind_ = "";
    /**
     * <pre>
     * This is always `sql#demoteMasterContext`.
     * </pre>
     *
     * <code>string kind = 1;</code>
     * @return The kind.
     */
    public java.lang.String getKind() {
      java.lang.Object ref = kind_;
      if (!(ref instanceof java.lang.String)) {
        com.google.protobuf.ByteString bs =
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        kind_ = s;
        return s;
      } else {
        return (java.lang.String) ref;
      }
    }
    /**
     * <pre>
     * This is always `sql#demoteMasterContext`.
     * </pre>
     *
     * <code>string kind = 1;</code>
     * @return The bytes for kind.
     */
    public com.google.protobuf.ByteString
        getKindBytes() {
      java.lang.Object ref = kind_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        kind_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }
    /**
     * <pre>
     * This is always `sql#demoteMasterContext`.
     * </pre>
     *
     * <code>string kind = 1;</code>
     * @param value The kind to set.
     * @return This builder for chaining.
     */
    public Builder setKind(
        java.lang.String value) {
      if (value == null) {
    throw new NullPointerException();
  }
  
      kind_ = value;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * This is always `sql#demoteMasterContext`.
     * </pre>
     *
     * <code>string kind = 1;</code>
     * @return This builder for chaining.
     */
    public Builder clearKind() {
      
      kind_ = getDefaultInstance().getKind();
      onChanged();
      return this;
    }
    /**
     * <pre>
     * This is always `sql#demoteMasterContext`.
     * </pre>
     *
     * <code>string kind = 1;</code>
     * @param value The bytes for kind to set.
     * @return This builder for chaining.
     */
    public Builder setKindBytes(
        com.google.protobuf.ByteString value) {
      if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
      
      kind_ = value;
      onChanged();
      return this;
    }

    private com.google.protobuf.BoolValue verifyGtidConsistency_;
    private com.google.protobuf.SingleFieldBuilderV3<
        com.google.protobuf.BoolValue, com.google.protobuf.BoolValue.Builder, com.google.protobuf.BoolValueOrBuilder> verifyGtidConsistencyBuilder_;
    /**
     * <pre>
     * Verify the GTID consistency for demote operation. Default value:
     * `True`. Setting this flag to `false` enables you to bypass the GTID
     * consistency check between on-premises primary instance and Cloud SQL
     * instance during the demotion operation but also exposes you to the risk of
     * future replication failures. Change the value only if you know the reason
     * for the GTID divergence and are confident that doing so will not cause any
     * replication issues.
     * </pre>
     *
     * <code>.google.protobuf.BoolValue verify_gtid_consistency = 2;</code>
     * @return Whether the verifyGtidConsistency field is set.
     */
    public boolean hasVerifyGtidConsistency() {
      return verifyGtidConsistencyBuilder_ != null || verifyGtidConsistency_ != null;
    }
    /**
     * <pre>
     * Verify the GTID consistency for demote operation. Default value:
     * `True`. Setting this flag to `false` enables you to bypass the GTID
     * consistency check between on-premises primary instance and Cloud SQL
     * instance during the demotion operation but also exposes you to the risk of
     * future replication failures. Change the value only if you know the reason
     * for the GTID divergence and are confident that doing so will not cause any
     * replication issues.
     * </pre>
     *
     * <code>.google.protobuf.BoolValue verify_gtid_consistency = 2;</code>
     * @return The verifyGtidConsistency.
     */
    public com.google.protobuf.BoolValue getVerifyGtidConsistency() {
      if (verifyGtidConsistencyBuilder_ == null) {
        return verifyGtidConsistency_ == null ? com.google.protobuf.BoolValue.getDefaultInstance() : verifyGtidConsistency_;
      } else {
        return verifyGtidConsistencyBuilder_.getMessage();
      }
    }
    /**
     * <pre>
     * Verify the GTID consistency for demote operation. Default value:
     * `True`. Setting this flag to `false` enables you to bypass the GTID
     * consistency check between on-premises primary instance and Cloud SQL
     * instance during the demotion operation but also exposes you to the risk of
     * future replication failures. Change the value only if you know the reason
     * for the GTID divergence and are confident that doing so will not cause any
     * replication issues.
     * </pre>
     *
     * <code>.google.protobuf.BoolValue verify_gtid_consistency = 2;</code>
     */
    public Builder setVerifyGtidConsistency(com.google.protobuf.BoolValue value) {
      if (verifyGtidConsistencyBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        verifyGtidConsistency_ = value;
        onChanged();
      } else {
        verifyGtidConsistencyBuilder_.setMessage(value);
      }

      return this;
    }
    /**
     * <pre>
     * Verify the GTID consistency for demote operation. Default value:
     * `True`. Setting this flag to `false` enables you to bypass the GTID
     * consistency check between on-premises primary instance and Cloud SQL
     * instance during the demotion operation but also exposes you to the risk of
     * future replication failures. Change the value only if you know the reason
     * for the GTID divergence and are confident that doing so will not cause any
     * replication issues.
     * </pre>
     *
     * <code>.google.protobuf.BoolValue verify_gtid_consistency = 2;</code>
     */
    public Builder setVerifyGtidConsistency(
        com.google.protobuf.BoolValue.Builder builderForValue) {
      if (verifyGtidConsistencyBuilder_ == null) {
        verifyGtidConsistency_ = builderForValue.build();
        onChanged();
      } else {
        verifyGtidConsistencyBuilder_.setMessage(builderForValue.build());
      }

      return this;
    }
    /**
     * <pre>
     * Verify the GTID consistency for demote operation. Default value:
     * `True`. Setting this flag to `false` enables you to bypass the GTID
     * consistency check between on-premises primary instance and Cloud SQL
     * instance during the demotion operation but also exposes you to the risk of
     * future replication failures. Change the value only if you know the reason
     * for the GTID divergence and are confident that doing so will not cause any
     * replication issues.
     * </pre>
     *
     * <code>.google.protobuf.BoolValue verify_gtid_consistency = 2;</code>
     */
    public Builder mergeVerifyGtidConsistency(com.google.protobuf.BoolValue value) {
      if (verifyGtidConsistencyBuilder_ == null) {
        if (verifyGtidConsistency_ != null) {
          verifyGtidConsistency_ =
            com.google.protobuf.BoolValue.newBuilder(verifyGtidConsistency_).mergeFrom(value).buildPartial();
        } else {
          verifyGtidConsistency_ = value;
        }
        onChanged();
      } else {
        verifyGtidConsistencyBuilder_.mergeFrom(value);
      }

      return this;
    }
    /**
     * <pre>
     * Verify the GTID consistency for demote operation. Default value:
     * `True`. Setting this flag to `false` enables you to bypass the GTID
     * consistency check between on-premises primary instance and Cloud SQL
     * instance during the demotion operation but also exposes you to the risk of
     * future replication failures. Change the value only if you know the reason
     * for the GTID divergence and are confident that doing so will not cause any
     * replication issues.
     * </pre>
     *
     * <code>.google.protobuf.BoolValue verify_gtid_consistency = 2;</code>
     */
    public Builder clearVerifyGtidConsistency() {
      if (verifyGtidConsistencyBuilder_ == null) {
        verifyGtidConsistency_ = null;
        onChanged();
      } else {
        verifyGtidConsistency_ = null;
        verifyGtidConsistencyBuilder_ = null;
      }

      return this;
    }
    /**
     * <pre>
     * Verify the GTID consistency for demote operation. Default value:
     * `True`. Setting this flag to `false` enables you to bypass the GTID
     * consistency check between on-premises primary instance and Cloud SQL
     * instance during the demotion operation but also exposes you to the risk of
     * future replication failures. Change the value only if you know the reason
     * for the GTID divergence and are confident that doing so will not cause any
     * replication issues.
     * </pre>
     *
     * <code>.google.protobuf.BoolValue verify_gtid_consistency = 2;</code>
     */
    public com.google.protobuf.BoolValue.Builder getVerifyGtidConsistencyBuilder() {
      
      onChanged();
      return getVerifyGtidConsistencyFieldBuilder().getBuilder();
    }
    /**
     * <pre>
     * Verify the GTID consistency for demote operation. Default value:
     * `True`. Setting this flag to `false` enables you to bypass the GTID
     * consistency check between on-premises primary instance and Cloud SQL
     * instance during the demotion operation but also exposes you to the risk of
     * future replication failures. Change the value only if you know the reason
     * for the GTID divergence and are confident that doing so will not cause any
     * replication issues.
     * </pre>
     *
     * <code>.google.protobuf.BoolValue verify_gtid_consistency = 2;</code>
     */
    public com.google.protobuf.BoolValueOrBuilder getVerifyGtidConsistencyOrBuilder() {
      if (verifyGtidConsistencyBuilder_ != null) {
        return verifyGtidConsistencyBuilder_.getMessageOrBuilder();
      } else {
        return verifyGtidConsistency_ == null ?
            com.google.protobuf.BoolValue.getDefaultInstance() : verifyGtidConsistency_;
      }
    }
    /**
     * <pre>
     * Verify the GTID consistency for demote operation. Default value:
     * `True`. Setting this flag to `false` enables you to bypass the GTID
     * consistency check between on-premises primary instance and Cloud SQL
     * instance during the demotion operation but also exposes you to the risk of
     * future replication failures. Change the value only if you know the reason
     * for the GTID divergence and are confident that doing so will not cause any
     * replication issues.
     * </pre>
     *
     * <code>.google.protobuf.BoolValue verify_gtid_consistency = 2;</code>
     */
    private com.google.protobuf.SingleFieldBuilderV3<
        com.google.protobuf.BoolValue, com.google.protobuf.BoolValue.Builder, com.google.protobuf.BoolValueOrBuilder> 
        getVerifyGtidConsistencyFieldBuilder() {
      if (verifyGtidConsistencyBuilder_ == null) {
        verifyGtidConsistencyBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
            com.google.protobuf.BoolValue, com.google.protobuf.BoolValue.Builder, com.google.protobuf.BoolValueOrBuilder>(
                getVerifyGtidConsistency(),
                getParentForChildren(),
                isClean());
        verifyGtidConsistency_ = null;
      }
      return verifyGtidConsistencyBuilder_;
    }

    private java.lang.Object masterInstanceName_ = "";
    /**
     * <pre>
     * The name of the instance which will act as on-premises primary instance
     * in the replication setup.
     * </pre>
     *
     * <code>string master_instance_name = 3;</code>
     * @return The masterInstanceName.
     */
    public java.lang.String getMasterInstanceName() {
      java.lang.Object ref = masterInstanceName_;
      if (!(ref instanceof java.lang.String)) {
        com.google.protobuf.ByteString bs =
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        masterInstanceName_ = s;
        return s;
      } else {
        return (java.lang.String) ref;
      }
    }
    /**
     * <pre>
     * The name of the instance which will act as on-premises primary instance
     * in the replication setup.
     * </pre>
     *
     * <code>string master_instance_name = 3;</code>
     * @return The bytes for masterInstanceName.
     */
    public com.google.protobuf.ByteString
        getMasterInstanceNameBytes() {
      java.lang.Object ref = masterInstanceName_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        masterInstanceName_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }
    /**
     * <pre>
     * The name of the instance which will act as on-premises primary instance
     * in the replication setup.
     * </pre>
     *
     * <code>string master_instance_name = 3;</code>
     * @param value The masterInstanceName to set.
     * @return This builder for chaining.
     */
    public Builder setMasterInstanceName(
        java.lang.String value) {
      if (value == null) {
    throw new NullPointerException();
  }
  
      masterInstanceName_ = value;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * The name of the instance which will act as on-premises primary instance
     * in the replication setup.
     * </pre>
     *
     * <code>string master_instance_name = 3;</code>
     * @return This builder for chaining.
     */
    public Builder clearMasterInstanceName() {
      
      masterInstanceName_ = getDefaultInstance().getMasterInstanceName();
      onChanged();
      return this;
    }
    /**
     * <pre>
     * The name of the instance which will act as on-premises primary instance
     * in the replication setup.
     * </pre>
     *
     * <code>string master_instance_name = 3;</code>
     * @param value The bytes for masterInstanceName to set.
     * @return This builder for chaining.
     */
    public Builder setMasterInstanceNameBytes(
        com.google.protobuf.ByteString value) {
      if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
      
      masterInstanceName_ = value;
      onChanged();
      return this;
    }

    private com.google.cloud.sql.v1beta4.DemoteMasterConfiguration replicaConfiguration_;
    private com.google.protobuf.SingleFieldBuilderV3<
        com.google.cloud.sql.v1beta4.DemoteMasterConfiguration, com.google.cloud.sql.v1beta4.DemoteMasterConfiguration.Builder, com.google.cloud.sql.v1beta4.DemoteMasterConfigurationOrBuilder> replicaConfigurationBuilder_;
    /**
     * <pre>
     * Configuration specific to read-replicas replicating from the on-premises
     * primary instance.
     * </pre>
     *
     * <code>.google.cloud.sql.v1beta4.DemoteMasterConfiguration replica_configuration = 4;</code>
     * @return Whether the replicaConfiguration field is set.
     */
    public boolean hasReplicaConfiguration() {
      return replicaConfigurationBuilder_ != null || replicaConfiguration_ != null;
    }
    /**
     * <pre>
     * Configuration specific to read-replicas replicating from the on-premises
     * primary instance.
     * </pre>
     *
     * <code>.google.cloud.sql.v1beta4.DemoteMasterConfiguration replica_configuration = 4;</code>
     * @return The replicaConfiguration.
     */
    public com.google.cloud.sql.v1beta4.DemoteMasterConfiguration getReplicaConfiguration() {
      if (replicaConfigurationBuilder_ == null) {
        return replicaConfiguration_ == null ? com.google.cloud.sql.v1beta4.DemoteMasterConfiguration.getDefaultInstance() : replicaConfiguration_;
      } else {
        return replicaConfigurationBuilder_.getMessage();
      }
    }
    /**
     * <pre>
     * Configuration specific to read-replicas replicating from the on-premises
     * primary instance.
     * </pre>
     *
     * <code>.google.cloud.sql.v1beta4.DemoteMasterConfiguration replica_configuration = 4;</code>
     */
    public Builder setReplicaConfiguration(com.google.cloud.sql.v1beta4.DemoteMasterConfiguration value) {
      if (replicaConfigurationBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        replicaConfiguration_ = value;
        onChanged();
      } else {
        replicaConfigurationBuilder_.setMessage(value);
      }

      return this;
    }
    /**
     * <pre>
     * Configuration specific to read-replicas replicating from the on-premises
     * primary instance.
     * </pre>
     *
     * <code>.google.cloud.sql.v1beta4.DemoteMasterConfiguration replica_configuration = 4;</code>
     */
    public Builder setReplicaConfiguration(
        com.google.cloud.sql.v1beta4.DemoteMasterConfiguration.Builder builderForValue) {
      if (replicaConfigurationBuilder_ == null) {
        replicaConfiguration_ = builderForValue.build();
        onChanged();
      } else {
        replicaConfigurationBuilder_.setMessage(builderForValue.build());
      }

      return this;
    }
    /**
     * <pre>
     * Configuration specific to read-replicas replicating from the on-premises
     * primary instance.
     * </pre>
     *
     * <code>.google.cloud.sql.v1beta4.DemoteMasterConfiguration replica_configuration = 4;</code>
     */
    public Builder mergeReplicaConfiguration(com.google.cloud.sql.v1beta4.DemoteMasterConfiguration value) {
      if (replicaConfigurationBuilder_ == null) {
        if (replicaConfiguration_ != null) {
          replicaConfiguration_ =
            com.google.cloud.sql.v1beta4.DemoteMasterConfiguration.newBuilder(replicaConfiguration_).mergeFrom(value).buildPartial();
        } else {
          replicaConfiguration_ = value;
        }
        onChanged();
      } else {
        replicaConfigurationBuilder_.mergeFrom(value);
      }

      return this;
    }
    /**
     * <pre>
     * Configuration specific to read-replicas replicating from the on-premises
     * primary instance.
     * </pre>
     *
     * <code>.google.cloud.sql.v1beta4.DemoteMasterConfiguration replica_configuration = 4;</code>
     */
    public Builder clearReplicaConfiguration() {
      if (replicaConfigurationBuilder_ == null) {
        replicaConfiguration_ = null;
        onChanged();
      } else {
        replicaConfiguration_ = null;
        replicaConfigurationBuilder_ = null;
      }

      return this;
    }
    /**
     * <pre>
     * Configuration specific to read-replicas replicating from the on-premises
     * primary instance.
     * </pre>
     *
     * <code>.google.cloud.sql.v1beta4.DemoteMasterConfiguration replica_configuration = 4;</code>
     */
    public com.google.cloud.sql.v1beta4.DemoteMasterConfiguration.Builder getReplicaConfigurationBuilder() {
      
      onChanged();
      return getReplicaConfigurationFieldBuilder().getBuilder();
    }
    /**
     * <pre>
     * Configuration specific to read-replicas replicating from the on-premises
     * primary instance.
     * </pre>
     *
     * <code>.google.cloud.sql.v1beta4.DemoteMasterConfiguration replica_configuration = 4;</code>
     */
    public com.google.cloud.sql.v1beta4.DemoteMasterConfigurationOrBuilder getReplicaConfigurationOrBuilder() {
      if (replicaConfigurationBuilder_ != null) {
        return replicaConfigurationBuilder_.getMessageOrBuilder();
      } else {
        return replicaConfiguration_ == null ?
            com.google.cloud.sql.v1beta4.DemoteMasterConfiguration.getDefaultInstance() : replicaConfiguration_;
      }
    }
    /**
     * <pre>
     * Configuration specific to read-replicas replicating from the on-premises
     * primary instance.
     * </pre>
     *
     * <code>.google.cloud.sql.v1beta4.DemoteMasterConfiguration replica_configuration = 4;</code>
     */
    private com.google.protobuf.SingleFieldBuilderV3<
        com.google.cloud.sql.v1beta4.DemoteMasterConfiguration, com.google.cloud.sql.v1beta4.DemoteMasterConfiguration.Builder, com.google.cloud.sql.v1beta4.DemoteMasterConfigurationOrBuilder> 
        getReplicaConfigurationFieldBuilder() {
      if (replicaConfigurationBuilder_ == null) {
        replicaConfigurationBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
            com.google.cloud.sql.v1beta4.DemoteMasterConfiguration, com.google.cloud.sql.v1beta4.DemoteMasterConfiguration.Builder, com.google.cloud.sql.v1beta4.DemoteMasterConfigurationOrBuilder>(
                getReplicaConfiguration(),
                getParentForChildren(),
                isClean());
        replicaConfiguration_ = null;
      }
      return replicaConfigurationBuilder_;
    }

    private boolean skipReplicationSetup_ ;
    /**
     * <pre>
     * Flag to skip replication setup on the instance.
     * </pre>
     *
     * <code>bool skip_replication_setup = 5;</code>
     * @return The skipReplicationSetup.
     */
    @java.lang.Override
    public boolean getSkipReplicationSetup() {
      return skipReplicationSetup_;
    }
    /**
     * <pre>
     * Flag to skip replication setup on the instance.
     * </pre>
     *
     * <code>bool skip_replication_setup = 5;</code>
     * @param value The skipReplicationSetup to set.
     * @return This builder for chaining.
     */
    public Builder setSkipReplicationSetup(boolean value) {
      
      skipReplicationSetup_ = value;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * Flag to skip replication setup on the instance.
     * </pre>
     *
     * <code>bool skip_replication_setup = 5;</code>
     * @return This builder for chaining.
     */
    public Builder clearSkipReplicationSetup() {
      
      skipReplicationSetup_ = false;
      onChanged();
      return this;
    }
    @java.lang.Override
    public final Builder setUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return super.setUnknownFields(unknownFields);
    }

    @java.lang.Override
    public final Builder mergeUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return super.mergeUnknownFields(unknownFields);
    }


    // @@protoc_insertion_point(builder_scope:google.cloud.sql.v1beta4.DemoteMasterContext)
  }

  // @@protoc_insertion_point(class_scope:google.cloud.sql.v1beta4.DemoteMasterContext)
  private static final com.google.cloud.sql.v1beta4.DemoteMasterContext DEFAULT_INSTANCE;
  static {
    DEFAULT_INSTANCE = new com.google.cloud.sql.v1beta4.DemoteMasterContext();
  }

  public static com.google.cloud.sql.v1beta4.DemoteMasterContext getDefaultInstance() {
    return DEFAULT_INSTANCE;
  }

  private static final com.google.protobuf.Parser<DemoteMasterContext>
      PARSER = new com.google.protobuf.AbstractParser<DemoteMasterContext>() {
    @java.lang.Override
    public DemoteMasterContext parsePartialFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return new DemoteMasterContext(input, extensionRegistry);
    }
  };

  public static com.google.protobuf.Parser<DemoteMasterContext> parser() {
    return PARSER;
  }

  @java.lang.Override
  public com.google.protobuf.Parser<DemoteMasterContext> getParserForType() {
    return PARSER;
  }

  @java.lang.Override
  public com.google.cloud.sql.v1beta4.DemoteMasterContext getDefaultInstanceForType() {
    return DEFAULT_INSTANCE;
  }

}

