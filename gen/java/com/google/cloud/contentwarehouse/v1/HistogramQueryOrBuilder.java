// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: google/cloud/contentwarehouse/v1/histogram.proto

package com.google.cloud.contentwarehouse.v1;

public interface HistogramQueryOrBuilder extends
    // @@protoc_insertion_point(interface_extends:google.cloud.contentwarehouse.v1.HistogramQuery)
    com.google.protobuf.MessageOrBuilder {

  /**
   * <pre>
   * An expression specifies a histogram request against matching documents for
   * searches.
   * See [SearchDocumentsRequest.histogram_queries][google.cloud.contentwarehouse.v1.SearchDocumentsRequest.histogram_queries] for details about syntax.
   * </pre>
   *
   * <code>string histogram_query = 1;</code>
   * @return The histogramQuery.
   */
  java.lang.String getHistogramQuery();
  /**
   * <pre>
   * An expression specifies a histogram request against matching documents for
   * searches.
   * See [SearchDocumentsRequest.histogram_queries][google.cloud.contentwarehouse.v1.SearchDocumentsRequest.histogram_queries] for details about syntax.
   * </pre>
   *
   * <code>string histogram_query = 1;</code>
   * @return The bytes for histogramQuery.
   */
  com.google.protobuf.ByteString
      getHistogramQueryBytes();

  /**
   * <pre>
   * Controls if the histogram query requires the return of a precise count.
   * Enable this flag may adversely impact performance.
   * Defaults to true.
   * </pre>
   *
   * <code>bool require_precise_result_size = 2;</code>
   * @return The requirePreciseResultSize.
   */
  boolean getRequirePreciseResultSize();

  /**
   * <pre>
   * Optional. Filter the result of histogram query by the property names. It only works
   * with histogram query count('FilterableProperties').
   * It is an optional. It will perform histogram on all the property names for
   * all the document schemas. Setting this field will have a better
   * performance.
   * </pre>
   *
   * <code>.google.cloud.contentwarehouse.v1.HistogramQueryPropertyNameFilter filters = 3 [(.google.api.field_behavior) = OPTIONAL];</code>
   * @return Whether the filters field is set.
   */
  boolean hasFilters();
  /**
   * <pre>
   * Optional. Filter the result of histogram query by the property names. It only works
   * with histogram query count('FilterableProperties').
   * It is an optional. It will perform histogram on all the property names for
   * all the document schemas. Setting this field will have a better
   * performance.
   * </pre>
   *
   * <code>.google.cloud.contentwarehouse.v1.HistogramQueryPropertyNameFilter filters = 3 [(.google.api.field_behavior) = OPTIONAL];</code>
   * @return The filters.
   */
  com.google.cloud.contentwarehouse.v1.HistogramQueryPropertyNameFilter getFilters();
  /**
   * <pre>
   * Optional. Filter the result of histogram query by the property names. It only works
   * with histogram query count('FilterableProperties').
   * It is an optional. It will perform histogram on all the property names for
   * all the document schemas. Setting this field will have a better
   * performance.
   * </pre>
   *
   * <code>.google.cloud.contentwarehouse.v1.HistogramQueryPropertyNameFilter filters = 3 [(.google.api.field_behavior) = OPTIONAL];</code>
   */
  com.google.cloud.contentwarehouse.v1.HistogramQueryPropertyNameFilterOrBuilder getFiltersOrBuilder();
}
