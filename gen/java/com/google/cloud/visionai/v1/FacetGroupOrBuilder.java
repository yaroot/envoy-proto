// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: google/cloud/visionai/v1/warehouse.proto

package com.google.cloud.visionai.v1;

public interface FacetGroupOrBuilder extends
    // @@protoc_insertion_point(interface_extends:google.cloud.visionai.v1.FacetGroup)
    com.google.protobuf.MessageOrBuilder {

  /**
   * <pre>
   * Unique id of the facet group.
   * </pre>
   *
   * <code>string facet_id = 1;</code>
   * @return The facetId.
   */
  java.lang.String getFacetId();
  /**
   * <pre>
   * Unique id of the facet group.
   * </pre>
   *
   * <code>string facet_id = 1;</code>
   * @return The bytes for facetId.
   */
  com.google.protobuf.ByteString
      getFacetIdBytes();

  /**
   * <pre>
   * Display name of the facet. To be used by UI for facet rendering.
   * </pre>
   *
   * <code>string display_name = 2;</code>
   * @return The displayName.
   */
  java.lang.String getDisplayName();
  /**
   * <pre>
   * Display name of the facet. To be used by UI for facet rendering.
   * </pre>
   *
   * <code>string display_name = 2;</code>
   * @return The bytes for displayName.
   */
  com.google.protobuf.ByteString
      getDisplayNameBytes();

  /**
   * <pre>
   * Buckets associated with the facet. E.g. for "Team" facet, the bucket
   * can be 49ers, patriots, etc.
   * </pre>
   *
   * <code>repeated .google.cloud.visionai.v1.FacetBucket buckets = 3;</code>
   */
  java.util.List<com.google.cloud.visionai.v1.FacetBucket> 
      getBucketsList();
  /**
   * <pre>
   * Buckets associated with the facet. E.g. for "Team" facet, the bucket
   * can be 49ers, patriots, etc.
   * </pre>
   *
   * <code>repeated .google.cloud.visionai.v1.FacetBucket buckets = 3;</code>
   */
  com.google.cloud.visionai.v1.FacetBucket getBuckets(int index);
  /**
   * <pre>
   * Buckets associated with the facet. E.g. for "Team" facet, the bucket
   * can be 49ers, patriots, etc.
   * </pre>
   *
   * <code>repeated .google.cloud.visionai.v1.FacetBucket buckets = 3;</code>
   */
  int getBucketsCount();
  /**
   * <pre>
   * Buckets associated with the facet. E.g. for "Team" facet, the bucket
   * can be 49ers, patriots, etc.
   * </pre>
   *
   * <code>repeated .google.cloud.visionai.v1.FacetBucket buckets = 3;</code>
   */
  java.util.List<? extends com.google.cloud.visionai.v1.FacetBucketOrBuilder> 
      getBucketsOrBuilderList();
  /**
   * <pre>
   * Buckets associated with the facet. E.g. for "Team" facet, the bucket
   * can be 49ers, patriots, etc.
   * </pre>
   *
   * <code>repeated .google.cloud.visionai.v1.FacetBucket buckets = 3;</code>
   */
  com.google.cloud.visionai.v1.FacetBucketOrBuilder getBucketsOrBuilder(
      int index);

  /**
   * <pre>
   * Facet bucket type.
   * </pre>
   *
   * <code>.google.cloud.visionai.v1.FacetBucketType bucket_type = 4;</code>
   * @return The enum numeric value on the wire for bucketType.
   */
  int getBucketTypeValue();
  /**
   * <pre>
   * Facet bucket type.
   * </pre>
   *
   * <code>.google.cloud.visionai.v1.FacetBucketType bucket_type = 4;</code>
   * @return The bucketType.
   */
  com.google.cloud.visionai.v1.FacetBucketType getBucketType();

  /**
   * <pre>
   * If true, return query matched annotations for this facet group's selection.
   * This option is only applicable for facets based on partition level
   * annotations. It supports the following facet values:
   *  - INTEGER
   *  - STRING (DataSchema.SearchStrategy.EXACT_SEARCH only)
   * </pre>
   *
   * <code>bool fetch_matched_annotations = 5;</code>
   * @return The fetchMatchedAnnotations.
   */
  boolean getFetchMatchedAnnotations();
}
