// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: google/cloud/visionai/v1alpha1/streaming_service.proto

package com.google.cloud.visionai.v1alpha1;

public interface ControlledModeOrBuilder extends
    // @@protoc_insertion_point(interface_extends:google.cloud.visionai.v1alpha1.ControlledMode)
    com.google.protobuf.MessageOrBuilder {

  /**
   * <pre>
   * This can be set to the following logical starting points:
   * "begin": This will read from the earliest available message.
   * "most-recent": This will read from the latest available message.
   * "end": This will read only future messages.
   * "stored": This will resume reads one past the last committed offset.
   *           It is the only option that resumes progress; all others
   *           jump unilaterally.
   * </pre>
   *
   * <code>string starting_logical_offset = 1;</code>
   * @return Whether the startingLogicalOffset field is set.
   */
  boolean hasStartingLogicalOffset();
  /**
   * <pre>
   * This can be set to the following logical starting points:
   * "begin": This will read from the earliest available message.
   * "most-recent": This will read from the latest available message.
   * "end": This will read only future messages.
   * "stored": This will resume reads one past the last committed offset.
   *           It is the only option that resumes progress; all others
   *           jump unilaterally.
   * </pre>
   *
   * <code>string starting_logical_offset = 1;</code>
   * @return The startingLogicalOffset.
   */
  java.lang.String getStartingLogicalOffset();
  /**
   * <pre>
   * This can be set to the following logical starting points:
   * "begin": This will read from the earliest available message.
   * "most-recent": This will read from the latest available message.
   * "end": This will read only future messages.
   * "stored": This will resume reads one past the last committed offset.
   *           It is the only option that resumes progress; all others
   *           jump unilaterally.
   * </pre>
   *
   * <code>string starting_logical_offset = 1;</code>
   * @return The bytes for startingLogicalOffset.
   */
  com.google.protobuf.ByteString
      getStartingLogicalOffsetBytes();

  /**
   * <pre>
   * This is the logical starting point to fallback upon should the
   * specified starting offset be unavailable.
   * This can be one of the following values:
   * "begin": This will read from the earliest available message.
   * "end": This will read only future messages.
   * </pre>
   *
   * <code>string fallback_starting_offset = 2;</code>
   * @return The fallbackStartingOffset.
   */
  java.lang.String getFallbackStartingOffset();
  /**
   * <pre>
   * This is the logical starting point to fallback upon should the
   * specified starting offset be unavailable.
   * This can be one of the following values:
   * "begin": This will read from the earliest available message.
   * "end": This will read only future messages.
   * </pre>
   *
   * <code>string fallback_starting_offset = 2;</code>
   * @return The bytes for fallbackStartingOffset.
   */
  com.google.protobuf.ByteString
      getFallbackStartingOffsetBytes();

  public com.google.cloud.visionai.v1alpha1.ControlledMode.StartingOffsetCase getStartingOffsetCase();
}
