// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: google/cloud/visionai/v1alpha1/streaming_service.proto

package com.google.cloud.visionai.v1alpha1;

public interface ReceivePacketsControlResponseOrBuilder extends
    // @@protoc_insertion_point(interface_extends:google.cloud.visionai.v1alpha1.ReceivePacketsControlResponse)
    com.google.protobuf.MessageOrBuilder {

  /**
   * <pre>
   * A server heartbeat.
   * </pre>
   *
   * <code>bool heartbeat = 1;</code>
   * @return Whether the heartbeat field is set.
   */
  boolean hasHeartbeat();
  /**
   * <pre>
   * A server heartbeat.
   * </pre>
   *
   * <code>bool heartbeat = 1;</code>
   * @return The heartbeat.
   */
  boolean getHeartbeat();

  /**
   * <pre>
   * A request to the receiver to complete any final writes followed by a
   * `WritesDone`; e.g. issue any final `CommitRequest`s.
   * May be ignored if `WritesDone` has already been issued at any point
   * prior to receiving this message.
   * If `WritesDone` does not get issued, then the server will forcefully
   * cancel the connection, and the receiver will likely receive an
   * uninformative after `Read` returns `false` and `Finish` is called.
   * </pre>
   *
   * <code>bool writes_done_request = 2;</code>
   * @return Whether the writesDoneRequest field is set.
   */
  boolean hasWritesDoneRequest();
  /**
   * <pre>
   * A request to the receiver to complete any final writes followed by a
   * `WritesDone`; e.g. issue any final `CommitRequest`s.
   * May be ignored if `WritesDone` has already been issued at any point
   * prior to receiving this message.
   * If `WritesDone` does not get issued, then the server will forcefully
   * cancel the connection, and the receiver will likely receive an
   * uninformative after `Read` returns `false` and `Finish` is called.
   * </pre>
   *
   * <code>bool writes_done_request = 2;</code>
   * @return The writesDoneRequest.
   */
  boolean getWritesDoneRequest();

  public com.google.cloud.visionai.v1alpha1.ReceivePacketsControlResponse.ControlCase getControlCase();
}
