// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: google/cloud/visionai/v1alpha1/lva_resources.proto

package com.google.cloud.visionai.v1alpha1;

public interface AnalysisOrBuilder extends
    // @@protoc_insertion_point(interface_extends:google.cloud.visionai.v1alpha1.Analysis)
    com.google.protobuf.MessageOrBuilder {

  /**
   * <pre>
   * The name of resource.
   * </pre>
   *
   * <code>string name = 1;</code>
   * @return The name.
   */
  java.lang.String getName();
  /**
   * <pre>
   * The name of resource.
   * </pre>
   *
   * <code>string name = 1;</code>
   * @return The bytes for name.
   */
  com.google.protobuf.ByteString
      getNameBytes();

  /**
   * <pre>
   * Output only. The create timestamp.
   * </pre>
   *
   * <code>.google.protobuf.Timestamp create_time = 2 [(.google.api.field_behavior) = OUTPUT_ONLY];</code>
   * @return Whether the createTime field is set.
   */
  boolean hasCreateTime();
  /**
   * <pre>
   * Output only. The create timestamp.
   * </pre>
   *
   * <code>.google.protobuf.Timestamp create_time = 2 [(.google.api.field_behavior) = OUTPUT_ONLY];</code>
   * @return The createTime.
   */
  com.google.protobuf.Timestamp getCreateTime();
  /**
   * <pre>
   * Output only. The create timestamp.
   * </pre>
   *
   * <code>.google.protobuf.Timestamp create_time = 2 [(.google.api.field_behavior) = OUTPUT_ONLY];</code>
   */
  com.google.protobuf.TimestampOrBuilder getCreateTimeOrBuilder();

  /**
   * <pre>
   * Output only. The update timestamp.
   * </pre>
   *
   * <code>.google.protobuf.Timestamp update_time = 3 [(.google.api.field_behavior) = OUTPUT_ONLY];</code>
   * @return Whether the updateTime field is set.
   */
  boolean hasUpdateTime();
  /**
   * <pre>
   * Output only. The update timestamp.
   * </pre>
   *
   * <code>.google.protobuf.Timestamp update_time = 3 [(.google.api.field_behavior) = OUTPUT_ONLY];</code>
   * @return The updateTime.
   */
  com.google.protobuf.Timestamp getUpdateTime();
  /**
   * <pre>
   * Output only. The update timestamp.
   * </pre>
   *
   * <code>.google.protobuf.Timestamp update_time = 3 [(.google.api.field_behavior) = OUTPUT_ONLY];</code>
   */
  com.google.protobuf.TimestampOrBuilder getUpdateTimeOrBuilder();

  /**
   * <pre>
   * Labels as key value pairs.
   * </pre>
   *
   * <code>map&lt;string, string&gt; labels = 4;</code>
   */
  int getLabelsCount();
  /**
   * <pre>
   * Labels as key value pairs.
   * </pre>
   *
   * <code>map&lt;string, string&gt; labels = 4;</code>
   */
  boolean containsLabels(
      java.lang.String key);
  /**
   * Use {@link #getLabelsMap()} instead.
   */
  @java.lang.Deprecated
  java.util.Map<java.lang.String, java.lang.String>
  getLabels();
  /**
   * <pre>
   * Labels as key value pairs.
   * </pre>
   *
   * <code>map&lt;string, string&gt; labels = 4;</code>
   */
  java.util.Map<java.lang.String, java.lang.String>
  getLabelsMap();
  /**
   * <pre>
   * Labels as key value pairs.
   * </pre>
   *
   * <code>map&lt;string, string&gt; labels = 4;</code>
   */
  /* nullable */
java.lang.String getLabelsOrDefault(
      java.lang.String key,
      /* nullable */
java.lang.String defaultValue);
  /**
   * <pre>
   * Labels as key value pairs.
   * </pre>
   *
   * <code>map&lt;string, string&gt; labels = 4;</code>
   */
  java.lang.String getLabelsOrThrow(
      java.lang.String key);

  /**
   * <pre>
   * The definition of the analysis.
   * </pre>
   *
   * <code>.google.cloud.visionai.v1alpha1.AnalysisDefinition analysis_definition = 5;</code>
   * @return Whether the analysisDefinition field is set.
   */
  boolean hasAnalysisDefinition();
  /**
   * <pre>
   * The definition of the analysis.
   * </pre>
   *
   * <code>.google.cloud.visionai.v1alpha1.AnalysisDefinition analysis_definition = 5;</code>
   * @return The analysisDefinition.
   */
  com.google.cloud.visionai.v1alpha1.AnalysisDefinition getAnalysisDefinition();
  /**
   * <pre>
   * The definition of the analysis.
   * </pre>
   *
   * <code>.google.cloud.visionai.v1alpha1.AnalysisDefinition analysis_definition = 5;</code>
   */
  com.google.cloud.visionai.v1alpha1.AnalysisDefinitionOrBuilder getAnalysisDefinitionOrBuilder();

  /**
   * <pre>
   * Map from the input parameter in the definition to the real stream.
   * E.g., suppose you had a stream source operator named "input-0" and you try
   * to receive from the real stream "stream-0". You can add the following
   * mapping: [input-0: stream-0].
   * </pre>
   *
   * <code>map&lt;string, string&gt; input_streams_mapping = 6;</code>
   */
  int getInputStreamsMappingCount();
  /**
   * <pre>
   * Map from the input parameter in the definition to the real stream.
   * E.g., suppose you had a stream source operator named "input-0" and you try
   * to receive from the real stream "stream-0". You can add the following
   * mapping: [input-0: stream-0].
   * </pre>
   *
   * <code>map&lt;string, string&gt; input_streams_mapping = 6;</code>
   */
  boolean containsInputStreamsMapping(
      java.lang.String key);
  /**
   * Use {@link #getInputStreamsMappingMap()} instead.
   */
  @java.lang.Deprecated
  java.util.Map<java.lang.String, java.lang.String>
  getInputStreamsMapping();
  /**
   * <pre>
   * Map from the input parameter in the definition to the real stream.
   * E.g., suppose you had a stream source operator named "input-0" and you try
   * to receive from the real stream "stream-0". You can add the following
   * mapping: [input-0: stream-0].
   * </pre>
   *
   * <code>map&lt;string, string&gt; input_streams_mapping = 6;</code>
   */
  java.util.Map<java.lang.String, java.lang.String>
  getInputStreamsMappingMap();
  /**
   * <pre>
   * Map from the input parameter in the definition to the real stream.
   * E.g., suppose you had a stream source operator named "input-0" and you try
   * to receive from the real stream "stream-0". You can add the following
   * mapping: [input-0: stream-0].
   * </pre>
   *
   * <code>map&lt;string, string&gt; input_streams_mapping = 6;</code>
   */
  /* nullable */
java.lang.String getInputStreamsMappingOrDefault(
      java.lang.String key,
      /* nullable */
java.lang.String defaultValue);
  /**
   * <pre>
   * Map from the input parameter in the definition to the real stream.
   * E.g., suppose you had a stream source operator named "input-0" and you try
   * to receive from the real stream "stream-0". You can add the following
   * mapping: [input-0: stream-0].
   * </pre>
   *
   * <code>map&lt;string, string&gt; input_streams_mapping = 6;</code>
   */
  java.lang.String getInputStreamsMappingOrThrow(
      java.lang.String key);

  /**
   * <pre>
   * Map from the output parameter in the definition to the real stream.
   * E.g., suppose you had a stream sink operator named "output-0" and you try
   * to send to the real stream "stream-0". You can add the following
   * mapping: [output-0: stream-0].
   * </pre>
   *
   * <code>map&lt;string, string&gt; output_streams_mapping = 7;</code>
   */
  int getOutputStreamsMappingCount();
  /**
   * <pre>
   * Map from the output parameter in the definition to the real stream.
   * E.g., suppose you had a stream sink operator named "output-0" and you try
   * to send to the real stream "stream-0". You can add the following
   * mapping: [output-0: stream-0].
   * </pre>
   *
   * <code>map&lt;string, string&gt; output_streams_mapping = 7;</code>
   */
  boolean containsOutputStreamsMapping(
      java.lang.String key);
  /**
   * Use {@link #getOutputStreamsMappingMap()} instead.
   */
  @java.lang.Deprecated
  java.util.Map<java.lang.String, java.lang.String>
  getOutputStreamsMapping();
  /**
   * <pre>
   * Map from the output parameter in the definition to the real stream.
   * E.g., suppose you had a stream sink operator named "output-0" and you try
   * to send to the real stream "stream-0". You can add the following
   * mapping: [output-0: stream-0].
   * </pre>
   *
   * <code>map&lt;string, string&gt; output_streams_mapping = 7;</code>
   */
  java.util.Map<java.lang.String, java.lang.String>
  getOutputStreamsMappingMap();
  /**
   * <pre>
   * Map from the output parameter in the definition to the real stream.
   * E.g., suppose you had a stream sink operator named "output-0" and you try
   * to send to the real stream "stream-0". You can add the following
   * mapping: [output-0: stream-0].
   * </pre>
   *
   * <code>map&lt;string, string&gt; output_streams_mapping = 7;</code>
   */
  /* nullable */
java.lang.String getOutputStreamsMappingOrDefault(
      java.lang.String key,
      /* nullable */
java.lang.String defaultValue);
  /**
   * <pre>
   * Map from the output parameter in the definition to the real stream.
   * E.g., suppose you had a stream sink operator named "output-0" and you try
   * to send to the real stream "stream-0". You can add the following
   * mapping: [output-0: stream-0].
   * </pre>
   *
   * <code>map&lt;string, string&gt; output_streams_mapping = 7;</code>
   */
  java.lang.String getOutputStreamsMappingOrThrow(
      java.lang.String key);
}
