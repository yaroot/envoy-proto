// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: google/cloud/networkanalyzer/logging/v1/analyzer_log.proto

package com.google.cloud.networkanalyzer.logging.v1;

/**
 * Protobuf type {@code google.cloud.networkanalyzer.logging.v1.IpUtilizationInfo}
 */
public final class IpUtilizationInfo extends
    com.google.protobuf.GeneratedMessageV3 implements
    // @@protoc_insertion_point(message_implements:google.cloud.networkanalyzer.logging.v1.IpUtilizationInfo)
    IpUtilizationInfoOrBuilder {
private static final long serialVersionUID = 0L;
  // Use IpUtilizationInfo.newBuilder() to construct.
  private IpUtilizationInfo(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
    super(builder);
  }
  private IpUtilizationInfo() {
    subnetIpUtilization_ = java.util.Collections.emptyList();
  }

  @java.lang.Override
  @SuppressWarnings({"unused"})
  protected java.lang.Object newInstance(
      UnusedPrivateParameter unused) {
    return new IpUtilizationInfo();
  }

  @java.lang.Override
  public final com.google.protobuf.UnknownFieldSet
  getUnknownFields() {
    return this.unknownFields;
  }
  private IpUtilizationInfo(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    this();
    if (extensionRegistry == null) {
      throw new java.lang.NullPointerException();
    }
    int mutable_bitField0_ = 0;
    com.google.protobuf.UnknownFieldSet.Builder unknownFields =
        com.google.protobuf.UnknownFieldSet.newBuilder();
    try {
      boolean done = false;
      while (!done) {
        int tag = input.readTag();
        switch (tag) {
          case 0:
            done = true;
            break;
          case 10: {
            if (!((mutable_bitField0_ & 0x00000001) != 0)) {
              subnetIpUtilization_ = new java.util.ArrayList<com.google.cloud.networkanalyzer.logging.v1.IpUtilizationInfo.SubnetIpUtilization>();
              mutable_bitField0_ |= 0x00000001;
            }
            subnetIpUtilization_.add(
                input.readMessage(com.google.cloud.networkanalyzer.logging.v1.IpUtilizationInfo.SubnetIpUtilization.parser(), extensionRegistry));
            break;
          }
          default: {
            if (!parseUnknownField(
                input, unknownFields, extensionRegistry, tag)) {
              done = true;
            }
            break;
          }
        }
      }
    } catch (com.google.protobuf.InvalidProtocolBufferException e) {
      throw e.setUnfinishedMessage(this);
    } catch (com.google.protobuf.UninitializedMessageException e) {
      throw e.asInvalidProtocolBufferException().setUnfinishedMessage(this);
    } catch (java.io.IOException e) {
      throw new com.google.protobuf.InvalidProtocolBufferException(
          e).setUnfinishedMessage(this);
    } finally {
      if (((mutable_bitField0_ & 0x00000001) != 0)) {
        subnetIpUtilization_ = java.util.Collections.unmodifiableList(subnetIpUtilization_);
      }
      this.unknownFields = unknownFields.build();
      makeExtensionsImmutable();
    }
  }
  public static final com.google.protobuf.Descriptors.Descriptor
      getDescriptor() {
    return com.google.cloud.networkanalyzer.logging.v1.AnalyzerLogProto.internal_static_google_cloud_networkanalyzer_logging_v1_IpUtilizationInfo_descriptor;
  }

  @java.lang.Override
  protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internalGetFieldAccessorTable() {
    return com.google.cloud.networkanalyzer.logging.v1.AnalyzerLogProto.internal_static_google_cloud_networkanalyzer_logging_v1_IpUtilizationInfo_fieldAccessorTable
        .ensureFieldAccessorsInitialized(
            com.google.cloud.networkanalyzer.logging.v1.IpUtilizationInfo.class, com.google.cloud.networkanalyzer.logging.v1.IpUtilizationInfo.Builder.class);
  }

  public interface SubnetIpUtilizationOrBuilder extends
      // @@protoc_insertion_point(interface_extends:google.cloud.networkanalyzer.logging.v1.IpUtilizationInfo.SubnetIpUtilization)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <pre>
     * URI of subnet.
     * </pre>
     *
     * <code>string subnet_uri = 1;</code>
     * @return The subnetUri.
     */
    java.lang.String getSubnetUri();
    /**
     * <pre>
     * URI of subnet.
     * </pre>
     *
     * <code>string subnet_uri = 1;</code>
     * @return The bytes for subnetUri.
     */
    com.google.protobuf.ByteString
        getSubnetUriBytes();

    /**
     * <pre>
     * Secondary range name. If the range is the primary range of the subnet,
     * this field is empty.
     * </pre>
     *
     * <code>string secondary_range_name = 2;</code>
     * @return The secondaryRangeName.
     */
    java.lang.String getSecondaryRangeName();
    /**
     * <pre>
     * Secondary range name. If the range is the primary range of the subnet,
     * this field is empty.
     * </pre>
     *
     * <code>string secondary_range_name = 2;</code>
     * @return The bytes for secondaryRangeName.
     */
    com.google.protobuf.ByteString
        getSecondaryRangeNameBytes();

    /**
     * <pre>
     * Total number of usable IP addresses in the IP range.
     * </pre>
     *
     * <code>uint64 total_usable_addresses = 3;</code>
     * @return The totalUsableAddresses.
     */
    long getTotalUsableAddresses();

    /**
     * <pre>
     * The ratio of allocated IP addresses from the total usable addresses.
     * </pre>
     *
     * <code>double allocation_ratio = 4;</code>
     * @return The allocationRatio.
     */
    double getAllocationRatio();
  }
  /**
   * Protobuf type {@code google.cloud.networkanalyzer.logging.v1.IpUtilizationInfo.SubnetIpUtilization}
   */
  public static final class SubnetIpUtilization extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:google.cloud.networkanalyzer.logging.v1.IpUtilizationInfo.SubnetIpUtilization)
      SubnetIpUtilizationOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use SubnetIpUtilization.newBuilder() to construct.
    private SubnetIpUtilization(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private SubnetIpUtilization() {
      subnetUri_ = "";
      secondaryRangeName_ = "";
    }

    @java.lang.Override
    @SuppressWarnings({"unused"})
    protected java.lang.Object newInstance(
        UnusedPrivateParameter unused) {
      return new SubnetIpUtilization();
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private SubnetIpUtilization(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 10: {
              java.lang.String s = input.readStringRequireUtf8();

              subnetUri_ = s;
              break;
            }
            case 18: {
              java.lang.String s = input.readStringRequireUtf8();

              secondaryRangeName_ = s;
              break;
            }
            case 24: {

              totalUsableAddresses_ = input.readUInt64();
              break;
            }
            case 33: {

              allocationRatio_ = input.readDouble();
              break;
            }
            default: {
              if (!parseUnknownField(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (com.google.protobuf.UninitializedMessageException e) {
        throw e.asInvalidProtocolBufferException().setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.google.cloud.networkanalyzer.logging.v1.AnalyzerLogProto.internal_static_google_cloud_networkanalyzer_logging_v1_IpUtilizationInfo_SubnetIpUtilization_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.google.cloud.networkanalyzer.logging.v1.AnalyzerLogProto.internal_static_google_cloud_networkanalyzer_logging_v1_IpUtilizationInfo_SubnetIpUtilization_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.google.cloud.networkanalyzer.logging.v1.IpUtilizationInfo.SubnetIpUtilization.class, com.google.cloud.networkanalyzer.logging.v1.IpUtilizationInfo.SubnetIpUtilization.Builder.class);
    }

    public static final int SUBNET_URI_FIELD_NUMBER = 1;
    private volatile java.lang.Object subnetUri_;
    /**
     * <pre>
     * URI of subnet.
     * </pre>
     *
     * <code>string subnet_uri = 1;</code>
     * @return The subnetUri.
     */
    @java.lang.Override
    public java.lang.String getSubnetUri() {
      java.lang.Object ref = subnetUri_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        subnetUri_ = s;
        return s;
      }
    }
    /**
     * <pre>
     * URI of subnet.
     * </pre>
     *
     * <code>string subnet_uri = 1;</code>
     * @return The bytes for subnetUri.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString
        getSubnetUriBytes() {
      java.lang.Object ref = subnetUri_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        subnetUri_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int SECONDARY_RANGE_NAME_FIELD_NUMBER = 2;
    private volatile java.lang.Object secondaryRangeName_;
    /**
     * <pre>
     * Secondary range name. If the range is the primary range of the subnet,
     * this field is empty.
     * </pre>
     *
     * <code>string secondary_range_name = 2;</code>
     * @return The secondaryRangeName.
     */
    @java.lang.Override
    public java.lang.String getSecondaryRangeName() {
      java.lang.Object ref = secondaryRangeName_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        secondaryRangeName_ = s;
        return s;
      }
    }
    /**
     * <pre>
     * Secondary range name. If the range is the primary range of the subnet,
     * this field is empty.
     * </pre>
     *
     * <code>string secondary_range_name = 2;</code>
     * @return The bytes for secondaryRangeName.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString
        getSecondaryRangeNameBytes() {
      java.lang.Object ref = secondaryRangeName_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        secondaryRangeName_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int TOTAL_USABLE_ADDRESSES_FIELD_NUMBER = 3;
    private long totalUsableAddresses_;
    /**
     * <pre>
     * Total number of usable IP addresses in the IP range.
     * </pre>
     *
     * <code>uint64 total_usable_addresses = 3;</code>
     * @return The totalUsableAddresses.
     */
    @java.lang.Override
    public long getTotalUsableAddresses() {
      return totalUsableAddresses_;
    }

    public static final int ALLOCATION_RATIO_FIELD_NUMBER = 4;
    private double allocationRatio_;
    /**
     * <pre>
     * The ratio of allocated IP addresses from the total usable addresses.
     * </pre>
     *
     * <code>double allocation_ratio = 4;</code>
     * @return The allocationRatio.
     */
    @java.lang.Override
    public double getAllocationRatio() {
      return allocationRatio_;
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(subnetUri_)) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 1, subnetUri_);
      }
      if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(secondaryRangeName_)) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 2, secondaryRangeName_);
      }
      if (totalUsableAddresses_ != 0L) {
        output.writeUInt64(3, totalUsableAddresses_);
      }
      if (java.lang.Double.doubleToRawLongBits(allocationRatio_) != 0) {
        output.writeDouble(4, allocationRatio_);
      }
      unknownFields.writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(subnetUri_)) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(1, subnetUri_);
      }
      if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(secondaryRangeName_)) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(2, secondaryRangeName_);
      }
      if (totalUsableAddresses_ != 0L) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt64Size(3, totalUsableAddresses_);
      }
      if (java.lang.Double.doubleToRawLongBits(allocationRatio_) != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeDoubleSize(4, allocationRatio_);
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof com.google.cloud.networkanalyzer.logging.v1.IpUtilizationInfo.SubnetIpUtilization)) {
        return super.equals(obj);
      }
      com.google.cloud.networkanalyzer.logging.v1.IpUtilizationInfo.SubnetIpUtilization other = (com.google.cloud.networkanalyzer.logging.v1.IpUtilizationInfo.SubnetIpUtilization) obj;

      if (!getSubnetUri()
          .equals(other.getSubnetUri())) return false;
      if (!getSecondaryRangeName()
          .equals(other.getSecondaryRangeName())) return false;
      if (getTotalUsableAddresses()
          != other.getTotalUsableAddresses()) return false;
      if (java.lang.Double.doubleToLongBits(getAllocationRatio())
          != java.lang.Double.doubleToLongBits(
              other.getAllocationRatio())) return false;
      if (!unknownFields.equals(other.unknownFields)) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      hash = (37 * hash) + SUBNET_URI_FIELD_NUMBER;
      hash = (53 * hash) + getSubnetUri().hashCode();
      hash = (37 * hash) + SECONDARY_RANGE_NAME_FIELD_NUMBER;
      hash = (53 * hash) + getSecondaryRangeName().hashCode();
      hash = (37 * hash) + TOTAL_USABLE_ADDRESSES_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
          getTotalUsableAddresses());
      hash = (37 * hash) + ALLOCATION_RATIO_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
          java.lang.Double.doubleToLongBits(getAllocationRatio()));
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static com.google.cloud.networkanalyzer.logging.v1.IpUtilizationInfo.SubnetIpUtilization parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.google.cloud.networkanalyzer.logging.v1.IpUtilizationInfo.SubnetIpUtilization parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.google.cloud.networkanalyzer.logging.v1.IpUtilizationInfo.SubnetIpUtilization parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.google.cloud.networkanalyzer.logging.v1.IpUtilizationInfo.SubnetIpUtilization parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.google.cloud.networkanalyzer.logging.v1.IpUtilizationInfo.SubnetIpUtilization parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.google.cloud.networkanalyzer.logging.v1.IpUtilizationInfo.SubnetIpUtilization parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.google.cloud.networkanalyzer.logging.v1.IpUtilizationInfo.SubnetIpUtilization parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static com.google.cloud.networkanalyzer.logging.v1.IpUtilizationInfo.SubnetIpUtilization parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static com.google.cloud.networkanalyzer.logging.v1.IpUtilizationInfo.SubnetIpUtilization parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static com.google.cloud.networkanalyzer.logging.v1.IpUtilizationInfo.SubnetIpUtilization parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static com.google.cloud.networkanalyzer.logging.v1.IpUtilizationInfo.SubnetIpUtilization parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static com.google.cloud.networkanalyzer.logging.v1.IpUtilizationInfo.SubnetIpUtilization parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(com.google.cloud.networkanalyzer.logging.v1.IpUtilizationInfo.SubnetIpUtilization prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code google.cloud.networkanalyzer.logging.v1.IpUtilizationInfo.SubnetIpUtilization}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:google.cloud.networkanalyzer.logging.v1.IpUtilizationInfo.SubnetIpUtilization)
        com.google.cloud.networkanalyzer.logging.v1.IpUtilizationInfo.SubnetIpUtilizationOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return com.google.cloud.networkanalyzer.logging.v1.AnalyzerLogProto.internal_static_google_cloud_networkanalyzer_logging_v1_IpUtilizationInfo_SubnetIpUtilization_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return com.google.cloud.networkanalyzer.logging.v1.AnalyzerLogProto.internal_static_google_cloud_networkanalyzer_logging_v1_IpUtilizationInfo_SubnetIpUtilization_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                com.google.cloud.networkanalyzer.logging.v1.IpUtilizationInfo.SubnetIpUtilization.class, com.google.cloud.networkanalyzer.logging.v1.IpUtilizationInfo.SubnetIpUtilization.Builder.class);
      }

      // Construct using com.google.cloud.networkanalyzer.logging.v1.IpUtilizationInfo.SubnetIpUtilization.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        subnetUri_ = "";

        secondaryRangeName_ = "";

        totalUsableAddresses_ = 0L;

        allocationRatio_ = 0D;

        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.google.cloud.networkanalyzer.logging.v1.AnalyzerLogProto.internal_static_google_cloud_networkanalyzer_logging_v1_IpUtilizationInfo_SubnetIpUtilization_descriptor;
      }

      @java.lang.Override
      public com.google.cloud.networkanalyzer.logging.v1.IpUtilizationInfo.SubnetIpUtilization getDefaultInstanceForType() {
        return com.google.cloud.networkanalyzer.logging.v1.IpUtilizationInfo.SubnetIpUtilization.getDefaultInstance();
      }

      @java.lang.Override
      public com.google.cloud.networkanalyzer.logging.v1.IpUtilizationInfo.SubnetIpUtilization build() {
        com.google.cloud.networkanalyzer.logging.v1.IpUtilizationInfo.SubnetIpUtilization result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public com.google.cloud.networkanalyzer.logging.v1.IpUtilizationInfo.SubnetIpUtilization buildPartial() {
        com.google.cloud.networkanalyzer.logging.v1.IpUtilizationInfo.SubnetIpUtilization result = new com.google.cloud.networkanalyzer.logging.v1.IpUtilizationInfo.SubnetIpUtilization(this);
        result.subnetUri_ = subnetUri_;
        result.secondaryRangeName_ = secondaryRangeName_;
        result.totalUsableAddresses_ = totalUsableAddresses_;
        result.allocationRatio_ = allocationRatio_;
        onBuilt();
        return result;
      }

      @java.lang.Override
      public Builder clone() {
        return super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.google.cloud.networkanalyzer.logging.v1.IpUtilizationInfo.SubnetIpUtilization) {
          return mergeFrom((com.google.cloud.networkanalyzer.logging.v1.IpUtilizationInfo.SubnetIpUtilization)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(com.google.cloud.networkanalyzer.logging.v1.IpUtilizationInfo.SubnetIpUtilization other) {
        if (other == com.google.cloud.networkanalyzer.logging.v1.IpUtilizationInfo.SubnetIpUtilization.getDefaultInstance()) return this;
        if (!other.getSubnetUri().isEmpty()) {
          subnetUri_ = other.subnetUri_;
          onChanged();
        }
        if (!other.getSecondaryRangeName().isEmpty()) {
          secondaryRangeName_ = other.secondaryRangeName_;
          onChanged();
        }
        if (other.getTotalUsableAddresses() != 0L) {
          setTotalUsableAddresses(other.getTotalUsableAddresses());
        }
        if (other.getAllocationRatio() != 0D) {
          setAllocationRatio(other.getAllocationRatio());
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.google.cloud.networkanalyzer.logging.v1.IpUtilizationInfo.SubnetIpUtilization parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (com.google.cloud.networkanalyzer.logging.v1.IpUtilizationInfo.SubnetIpUtilization) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }

      private java.lang.Object subnetUri_ = "";
      /**
       * <pre>
       * URI of subnet.
       * </pre>
       *
       * <code>string subnet_uri = 1;</code>
       * @return The subnetUri.
       */
      public java.lang.String getSubnetUri() {
        java.lang.Object ref = subnetUri_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          subnetUri_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <pre>
       * URI of subnet.
       * </pre>
       *
       * <code>string subnet_uri = 1;</code>
       * @return The bytes for subnetUri.
       */
      public com.google.protobuf.ByteString
          getSubnetUriBytes() {
        java.lang.Object ref = subnetUri_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          subnetUri_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       * URI of subnet.
       * </pre>
       *
       * <code>string subnet_uri = 1;</code>
       * @param value The subnetUri to set.
       * @return This builder for chaining.
       */
      public Builder setSubnetUri(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        subnetUri_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * URI of subnet.
       * </pre>
       *
       * <code>string subnet_uri = 1;</code>
       * @return This builder for chaining.
       */
      public Builder clearSubnetUri() {
        
        subnetUri_ = getDefaultInstance().getSubnetUri();
        onChanged();
        return this;
      }
      /**
       * <pre>
       * URI of subnet.
       * </pre>
       *
       * <code>string subnet_uri = 1;</code>
       * @param value The bytes for subnetUri to set.
       * @return This builder for chaining.
       */
      public Builder setSubnetUriBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        subnetUri_ = value;
        onChanged();
        return this;
      }

      private java.lang.Object secondaryRangeName_ = "";
      /**
       * <pre>
       * Secondary range name. If the range is the primary range of the subnet,
       * this field is empty.
       * </pre>
       *
       * <code>string secondary_range_name = 2;</code>
       * @return The secondaryRangeName.
       */
      public java.lang.String getSecondaryRangeName() {
        java.lang.Object ref = secondaryRangeName_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          secondaryRangeName_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <pre>
       * Secondary range name. If the range is the primary range of the subnet,
       * this field is empty.
       * </pre>
       *
       * <code>string secondary_range_name = 2;</code>
       * @return The bytes for secondaryRangeName.
       */
      public com.google.protobuf.ByteString
          getSecondaryRangeNameBytes() {
        java.lang.Object ref = secondaryRangeName_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          secondaryRangeName_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       * Secondary range name. If the range is the primary range of the subnet,
       * this field is empty.
       * </pre>
       *
       * <code>string secondary_range_name = 2;</code>
       * @param value The secondaryRangeName to set.
       * @return This builder for chaining.
       */
      public Builder setSecondaryRangeName(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        secondaryRangeName_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Secondary range name. If the range is the primary range of the subnet,
       * this field is empty.
       * </pre>
       *
       * <code>string secondary_range_name = 2;</code>
       * @return This builder for chaining.
       */
      public Builder clearSecondaryRangeName() {
        
        secondaryRangeName_ = getDefaultInstance().getSecondaryRangeName();
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Secondary range name. If the range is the primary range of the subnet,
       * this field is empty.
       * </pre>
       *
       * <code>string secondary_range_name = 2;</code>
       * @param value The bytes for secondaryRangeName to set.
       * @return This builder for chaining.
       */
      public Builder setSecondaryRangeNameBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        secondaryRangeName_ = value;
        onChanged();
        return this;
      }

      private long totalUsableAddresses_ ;
      /**
       * <pre>
       * Total number of usable IP addresses in the IP range.
       * </pre>
       *
       * <code>uint64 total_usable_addresses = 3;</code>
       * @return The totalUsableAddresses.
       */
      @java.lang.Override
      public long getTotalUsableAddresses() {
        return totalUsableAddresses_;
      }
      /**
       * <pre>
       * Total number of usable IP addresses in the IP range.
       * </pre>
       *
       * <code>uint64 total_usable_addresses = 3;</code>
       * @param value The totalUsableAddresses to set.
       * @return This builder for chaining.
       */
      public Builder setTotalUsableAddresses(long value) {
        
        totalUsableAddresses_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Total number of usable IP addresses in the IP range.
       * </pre>
       *
       * <code>uint64 total_usable_addresses = 3;</code>
       * @return This builder for chaining.
       */
      public Builder clearTotalUsableAddresses() {
        
        totalUsableAddresses_ = 0L;
        onChanged();
        return this;
      }

      private double allocationRatio_ ;
      /**
       * <pre>
       * The ratio of allocated IP addresses from the total usable addresses.
       * </pre>
       *
       * <code>double allocation_ratio = 4;</code>
       * @return The allocationRatio.
       */
      @java.lang.Override
      public double getAllocationRatio() {
        return allocationRatio_;
      }
      /**
       * <pre>
       * The ratio of allocated IP addresses from the total usable addresses.
       * </pre>
       *
       * <code>double allocation_ratio = 4;</code>
       * @param value The allocationRatio to set.
       * @return This builder for chaining.
       */
      public Builder setAllocationRatio(double value) {
        
        allocationRatio_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * The ratio of allocated IP addresses from the total usable addresses.
       * </pre>
       *
       * <code>double allocation_ratio = 4;</code>
       * @return This builder for chaining.
       */
      public Builder clearAllocationRatio() {
        
        allocationRatio_ = 0D;
        onChanged();
        return this;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:google.cloud.networkanalyzer.logging.v1.IpUtilizationInfo.SubnetIpUtilization)
    }

    // @@protoc_insertion_point(class_scope:google.cloud.networkanalyzer.logging.v1.IpUtilizationInfo.SubnetIpUtilization)
    private static final com.google.cloud.networkanalyzer.logging.v1.IpUtilizationInfo.SubnetIpUtilization DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new com.google.cloud.networkanalyzer.logging.v1.IpUtilizationInfo.SubnetIpUtilization();
    }

    public static com.google.cloud.networkanalyzer.logging.v1.IpUtilizationInfo.SubnetIpUtilization getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<SubnetIpUtilization>
        PARSER = new com.google.protobuf.AbstractParser<SubnetIpUtilization>() {
      @java.lang.Override
      public SubnetIpUtilization parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new SubnetIpUtilization(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<SubnetIpUtilization> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<SubnetIpUtilization> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.cloud.networkanalyzer.logging.v1.IpUtilizationInfo.SubnetIpUtilization getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public static final int SUBNET_IP_UTILIZATION_FIELD_NUMBER = 1;
  private java.util.List<com.google.cloud.networkanalyzer.logging.v1.IpUtilizationInfo.SubnetIpUtilization> subnetIpUtilization_;
  /**
   * <code>repeated .google.cloud.networkanalyzer.logging.v1.IpUtilizationInfo.SubnetIpUtilization subnet_ip_utilization = 1;</code>
   */
  @java.lang.Override
  public java.util.List<com.google.cloud.networkanalyzer.logging.v1.IpUtilizationInfo.SubnetIpUtilization> getSubnetIpUtilizationList() {
    return subnetIpUtilization_;
  }
  /**
   * <code>repeated .google.cloud.networkanalyzer.logging.v1.IpUtilizationInfo.SubnetIpUtilization subnet_ip_utilization = 1;</code>
   */
  @java.lang.Override
  public java.util.List<? extends com.google.cloud.networkanalyzer.logging.v1.IpUtilizationInfo.SubnetIpUtilizationOrBuilder> 
      getSubnetIpUtilizationOrBuilderList() {
    return subnetIpUtilization_;
  }
  /**
   * <code>repeated .google.cloud.networkanalyzer.logging.v1.IpUtilizationInfo.SubnetIpUtilization subnet_ip_utilization = 1;</code>
   */
  @java.lang.Override
  public int getSubnetIpUtilizationCount() {
    return subnetIpUtilization_.size();
  }
  /**
   * <code>repeated .google.cloud.networkanalyzer.logging.v1.IpUtilizationInfo.SubnetIpUtilization subnet_ip_utilization = 1;</code>
   */
  @java.lang.Override
  public com.google.cloud.networkanalyzer.logging.v1.IpUtilizationInfo.SubnetIpUtilization getSubnetIpUtilization(int index) {
    return subnetIpUtilization_.get(index);
  }
  /**
   * <code>repeated .google.cloud.networkanalyzer.logging.v1.IpUtilizationInfo.SubnetIpUtilization subnet_ip_utilization = 1;</code>
   */
  @java.lang.Override
  public com.google.cloud.networkanalyzer.logging.v1.IpUtilizationInfo.SubnetIpUtilizationOrBuilder getSubnetIpUtilizationOrBuilder(
      int index) {
    return subnetIpUtilization_.get(index);
  }

  private byte memoizedIsInitialized = -1;
  @java.lang.Override
  public final boolean isInitialized() {
    byte isInitialized = memoizedIsInitialized;
    if (isInitialized == 1) return true;
    if (isInitialized == 0) return false;

    memoizedIsInitialized = 1;
    return true;
  }

  @java.lang.Override
  public void writeTo(com.google.protobuf.CodedOutputStream output)
                      throws java.io.IOException {
    for (int i = 0; i < subnetIpUtilization_.size(); i++) {
      output.writeMessage(1, subnetIpUtilization_.get(i));
    }
    unknownFields.writeTo(output);
  }

  @java.lang.Override
  public int getSerializedSize() {
    int size = memoizedSize;
    if (size != -1) return size;

    size = 0;
    for (int i = 0; i < subnetIpUtilization_.size(); i++) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(1, subnetIpUtilization_.get(i));
    }
    size += unknownFields.getSerializedSize();
    memoizedSize = size;
    return size;
  }

  @java.lang.Override
  public boolean equals(final java.lang.Object obj) {
    if (obj == this) {
     return true;
    }
    if (!(obj instanceof com.google.cloud.networkanalyzer.logging.v1.IpUtilizationInfo)) {
      return super.equals(obj);
    }
    com.google.cloud.networkanalyzer.logging.v1.IpUtilizationInfo other = (com.google.cloud.networkanalyzer.logging.v1.IpUtilizationInfo) obj;

    if (!getSubnetIpUtilizationList()
        .equals(other.getSubnetIpUtilizationList())) return false;
    if (!unknownFields.equals(other.unknownFields)) return false;
    return true;
  }

  @java.lang.Override
  public int hashCode() {
    if (memoizedHashCode != 0) {
      return memoizedHashCode;
    }
    int hash = 41;
    hash = (19 * hash) + getDescriptor().hashCode();
    if (getSubnetIpUtilizationCount() > 0) {
      hash = (37 * hash) + SUBNET_IP_UTILIZATION_FIELD_NUMBER;
      hash = (53 * hash) + getSubnetIpUtilizationList().hashCode();
    }
    hash = (29 * hash) + unknownFields.hashCode();
    memoizedHashCode = hash;
    return hash;
  }

  public static com.google.cloud.networkanalyzer.logging.v1.IpUtilizationInfo parseFrom(
      java.nio.ByteBuffer data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static com.google.cloud.networkanalyzer.logging.v1.IpUtilizationInfo parseFrom(
      java.nio.ByteBuffer data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static com.google.cloud.networkanalyzer.logging.v1.IpUtilizationInfo parseFrom(
      com.google.protobuf.ByteString data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static com.google.cloud.networkanalyzer.logging.v1.IpUtilizationInfo parseFrom(
      com.google.protobuf.ByteString data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static com.google.cloud.networkanalyzer.logging.v1.IpUtilizationInfo parseFrom(byte[] data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static com.google.cloud.networkanalyzer.logging.v1.IpUtilizationInfo parseFrom(
      byte[] data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static com.google.cloud.networkanalyzer.logging.v1.IpUtilizationInfo parseFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input);
  }
  public static com.google.cloud.networkanalyzer.logging.v1.IpUtilizationInfo parseFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input, extensionRegistry);
  }
  public static com.google.cloud.networkanalyzer.logging.v1.IpUtilizationInfo parseDelimitedFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseDelimitedWithIOException(PARSER, input);
  }
  public static com.google.cloud.networkanalyzer.logging.v1.IpUtilizationInfo parseDelimitedFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
  }
  public static com.google.cloud.networkanalyzer.logging.v1.IpUtilizationInfo parseFrom(
      com.google.protobuf.CodedInputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input);
  }
  public static com.google.cloud.networkanalyzer.logging.v1.IpUtilizationInfo parseFrom(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input, extensionRegistry);
  }

  @java.lang.Override
  public Builder newBuilderForType() { return newBuilder(); }
  public static Builder newBuilder() {
    return DEFAULT_INSTANCE.toBuilder();
  }
  public static Builder newBuilder(com.google.cloud.networkanalyzer.logging.v1.IpUtilizationInfo prototype) {
    return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
  }
  @java.lang.Override
  public Builder toBuilder() {
    return this == DEFAULT_INSTANCE
        ? new Builder() : new Builder().mergeFrom(this);
  }

  @java.lang.Override
  protected Builder newBuilderForType(
      com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
    Builder builder = new Builder(parent);
    return builder;
  }
  /**
   * Protobuf type {@code google.cloud.networkanalyzer.logging.v1.IpUtilizationInfo}
   */
  public static final class Builder extends
      com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
      // @@protoc_insertion_point(builder_implements:google.cloud.networkanalyzer.logging.v1.IpUtilizationInfo)
      com.google.cloud.networkanalyzer.logging.v1.IpUtilizationInfoOrBuilder {
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.google.cloud.networkanalyzer.logging.v1.AnalyzerLogProto.internal_static_google_cloud_networkanalyzer_logging_v1_IpUtilizationInfo_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.google.cloud.networkanalyzer.logging.v1.AnalyzerLogProto.internal_static_google_cloud_networkanalyzer_logging_v1_IpUtilizationInfo_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.google.cloud.networkanalyzer.logging.v1.IpUtilizationInfo.class, com.google.cloud.networkanalyzer.logging.v1.IpUtilizationInfo.Builder.class);
    }

    // Construct using com.google.cloud.networkanalyzer.logging.v1.IpUtilizationInfo.newBuilder()
    private Builder() {
      maybeForceBuilderInitialization();
    }

    private Builder(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      super(parent);
      maybeForceBuilderInitialization();
    }
    private void maybeForceBuilderInitialization() {
      if (com.google.protobuf.GeneratedMessageV3
              .alwaysUseFieldBuilders) {
        getSubnetIpUtilizationFieldBuilder();
      }
    }
    @java.lang.Override
    public Builder clear() {
      super.clear();
      if (subnetIpUtilizationBuilder_ == null) {
        subnetIpUtilization_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000001);
      } else {
        subnetIpUtilizationBuilder_.clear();
      }
      return this;
    }

    @java.lang.Override
    public com.google.protobuf.Descriptors.Descriptor
        getDescriptorForType() {
      return com.google.cloud.networkanalyzer.logging.v1.AnalyzerLogProto.internal_static_google_cloud_networkanalyzer_logging_v1_IpUtilizationInfo_descriptor;
    }

    @java.lang.Override
    public com.google.cloud.networkanalyzer.logging.v1.IpUtilizationInfo getDefaultInstanceForType() {
      return com.google.cloud.networkanalyzer.logging.v1.IpUtilizationInfo.getDefaultInstance();
    }

    @java.lang.Override
    public com.google.cloud.networkanalyzer.logging.v1.IpUtilizationInfo build() {
      com.google.cloud.networkanalyzer.logging.v1.IpUtilizationInfo result = buildPartial();
      if (!result.isInitialized()) {
        throw newUninitializedMessageException(result);
      }
      return result;
    }

    @java.lang.Override
    public com.google.cloud.networkanalyzer.logging.v1.IpUtilizationInfo buildPartial() {
      com.google.cloud.networkanalyzer.logging.v1.IpUtilizationInfo result = new com.google.cloud.networkanalyzer.logging.v1.IpUtilizationInfo(this);
      int from_bitField0_ = bitField0_;
      if (subnetIpUtilizationBuilder_ == null) {
        if (((bitField0_ & 0x00000001) != 0)) {
          subnetIpUtilization_ = java.util.Collections.unmodifiableList(subnetIpUtilization_);
          bitField0_ = (bitField0_ & ~0x00000001);
        }
        result.subnetIpUtilization_ = subnetIpUtilization_;
      } else {
        result.subnetIpUtilization_ = subnetIpUtilizationBuilder_.build();
      }
      onBuilt();
      return result;
    }

    @java.lang.Override
    public Builder clone() {
      return super.clone();
    }
    @java.lang.Override
    public Builder setField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        java.lang.Object value) {
      return super.setField(field, value);
    }
    @java.lang.Override
    public Builder clearField(
        com.google.protobuf.Descriptors.FieldDescriptor field) {
      return super.clearField(field);
    }
    @java.lang.Override
    public Builder clearOneof(
        com.google.protobuf.Descriptors.OneofDescriptor oneof) {
      return super.clearOneof(oneof);
    }
    @java.lang.Override
    public Builder setRepeatedField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        int index, java.lang.Object value) {
      return super.setRepeatedField(field, index, value);
    }
    @java.lang.Override
    public Builder addRepeatedField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        java.lang.Object value) {
      return super.addRepeatedField(field, value);
    }
    @java.lang.Override
    public Builder mergeFrom(com.google.protobuf.Message other) {
      if (other instanceof com.google.cloud.networkanalyzer.logging.v1.IpUtilizationInfo) {
        return mergeFrom((com.google.cloud.networkanalyzer.logging.v1.IpUtilizationInfo)other);
      } else {
        super.mergeFrom(other);
        return this;
      }
    }

    public Builder mergeFrom(com.google.cloud.networkanalyzer.logging.v1.IpUtilizationInfo other) {
      if (other == com.google.cloud.networkanalyzer.logging.v1.IpUtilizationInfo.getDefaultInstance()) return this;
      if (subnetIpUtilizationBuilder_ == null) {
        if (!other.subnetIpUtilization_.isEmpty()) {
          if (subnetIpUtilization_.isEmpty()) {
            subnetIpUtilization_ = other.subnetIpUtilization_;
            bitField0_ = (bitField0_ & ~0x00000001);
          } else {
            ensureSubnetIpUtilizationIsMutable();
            subnetIpUtilization_.addAll(other.subnetIpUtilization_);
          }
          onChanged();
        }
      } else {
        if (!other.subnetIpUtilization_.isEmpty()) {
          if (subnetIpUtilizationBuilder_.isEmpty()) {
            subnetIpUtilizationBuilder_.dispose();
            subnetIpUtilizationBuilder_ = null;
            subnetIpUtilization_ = other.subnetIpUtilization_;
            bitField0_ = (bitField0_ & ~0x00000001);
            subnetIpUtilizationBuilder_ = 
              com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?
                 getSubnetIpUtilizationFieldBuilder() : null;
          } else {
            subnetIpUtilizationBuilder_.addAllMessages(other.subnetIpUtilization_);
          }
        }
      }
      this.mergeUnknownFields(other.unknownFields);
      onChanged();
      return this;
    }

    @java.lang.Override
    public final boolean isInitialized() {
      return true;
    }

    @java.lang.Override
    public Builder mergeFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      com.google.cloud.networkanalyzer.logging.v1.IpUtilizationInfo parsedMessage = null;
      try {
        parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        parsedMessage = (com.google.cloud.networkanalyzer.logging.v1.IpUtilizationInfo) e.getUnfinishedMessage();
        throw e.unwrapIOException();
      } finally {
        if (parsedMessage != null) {
          mergeFrom(parsedMessage);
        }
      }
      return this;
    }
    private int bitField0_;

    private java.util.List<com.google.cloud.networkanalyzer.logging.v1.IpUtilizationInfo.SubnetIpUtilization> subnetIpUtilization_ =
      java.util.Collections.emptyList();
    private void ensureSubnetIpUtilizationIsMutable() {
      if (!((bitField0_ & 0x00000001) != 0)) {
        subnetIpUtilization_ = new java.util.ArrayList<com.google.cloud.networkanalyzer.logging.v1.IpUtilizationInfo.SubnetIpUtilization>(subnetIpUtilization_);
        bitField0_ |= 0x00000001;
       }
    }

    private com.google.protobuf.RepeatedFieldBuilderV3<
        com.google.cloud.networkanalyzer.logging.v1.IpUtilizationInfo.SubnetIpUtilization, com.google.cloud.networkanalyzer.logging.v1.IpUtilizationInfo.SubnetIpUtilization.Builder, com.google.cloud.networkanalyzer.logging.v1.IpUtilizationInfo.SubnetIpUtilizationOrBuilder> subnetIpUtilizationBuilder_;

    /**
     * <code>repeated .google.cloud.networkanalyzer.logging.v1.IpUtilizationInfo.SubnetIpUtilization subnet_ip_utilization = 1;</code>
     */
    public java.util.List<com.google.cloud.networkanalyzer.logging.v1.IpUtilizationInfo.SubnetIpUtilization> getSubnetIpUtilizationList() {
      if (subnetIpUtilizationBuilder_ == null) {
        return java.util.Collections.unmodifiableList(subnetIpUtilization_);
      } else {
        return subnetIpUtilizationBuilder_.getMessageList();
      }
    }
    /**
     * <code>repeated .google.cloud.networkanalyzer.logging.v1.IpUtilizationInfo.SubnetIpUtilization subnet_ip_utilization = 1;</code>
     */
    public int getSubnetIpUtilizationCount() {
      if (subnetIpUtilizationBuilder_ == null) {
        return subnetIpUtilization_.size();
      } else {
        return subnetIpUtilizationBuilder_.getCount();
      }
    }
    /**
     * <code>repeated .google.cloud.networkanalyzer.logging.v1.IpUtilizationInfo.SubnetIpUtilization subnet_ip_utilization = 1;</code>
     */
    public com.google.cloud.networkanalyzer.logging.v1.IpUtilizationInfo.SubnetIpUtilization getSubnetIpUtilization(int index) {
      if (subnetIpUtilizationBuilder_ == null) {
        return subnetIpUtilization_.get(index);
      } else {
        return subnetIpUtilizationBuilder_.getMessage(index);
      }
    }
    /**
     * <code>repeated .google.cloud.networkanalyzer.logging.v1.IpUtilizationInfo.SubnetIpUtilization subnet_ip_utilization = 1;</code>
     */
    public Builder setSubnetIpUtilization(
        int index, com.google.cloud.networkanalyzer.logging.v1.IpUtilizationInfo.SubnetIpUtilization value) {
      if (subnetIpUtilizationBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureSubnetIpUtilizationIsMutable();
        subnetIpUtilization_.set(index, value);
        onChanged();
      } else {
        subnetIpUtilizationBuilder_.setMessage(index, value);
      }
      return this;
    }
    /**
     * <code>repeated .google.cloud.networkanalyzer.logging.v1.IpUtilizationInfo.SubnetIpUtilization subnet_ip_utilization = 1;</code>
     */
    public Builder setSubnetIpUtilization(
        int index, com.google.cloud.networkanalyzer.logging.v1.IpUtilizationInfo.SubnetIpUtilization.Builder builderForValue) {
      if (subnetIpUtilizationBuilder_ == null) {
        ensureSubnetIpUtilizationIsMutable();
        subnetIpUtilization_.set(index, builderForValue.build());
        onChanged();
      } else {
        subnetIpUtilizationBuilder_.setMessage(index, builderForValue.build());
      }
      return this;
    }
    /**
     * <code>repeated .google.cloud.networkanalyzer.logging.v1.IpUtilizationInfo.SubnetIpUtilization subnet_ip_utilization = 1;</code>
     */
    public Builder addSubnetIpUtilization(com.google.cloud.networkanalyzer.logging.v1.IpUtilizationInfo.SubnetIpUtilization value) {
      if (subnetIpUtilizationBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureSubnetIpUtilizationIsMutable();
        subnetIpUtilization_.add(value);
        onChanged();
      } else {
        subnetIpUtilizationBuilder_.addMessage(value);
      }
      return this;
    }
    /**
     * <code>repeated .google.cloud.networkanalyzer.logging.v1.IpUtilizationInfo.SubnetIpUtilization subnet_ip_utilization = 1;</code>
     */
    public Builder addSubnetIpUtilization(
        int index, com.google.cloud.networkanalyzer.logging.v1.IpUtilizationInfo.SubnetIpUtilization value) {
      if (subnetIpUtilizationBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureSubnetIpUtilizationIsMutable();
        subnetIpUtilization_.add(index, value);
        onChanged();
      } else {
        subnetIpUtilizationBuilder_.addMessage(index, value);
      }
      return this;
    }
    /**
     * <code>repeated .google.cloud.networkanalyzer.logging.v1.IpUtilizationInfo.SubnetIpUtilization subnet_ip_utilization = 1;</code>
     */
    public Builder addSubnetIpUtilization(
        com.google.cloud.networkanalyzer.logging.v1.IpUtilizationInfo.SubnetIpUtilization.Builder builderForValue) {
      if (subnetIpUtilizationBuilder_ == null) {
        ensureSubnetIpUtilizationIsMutable();
        subnetIpUtilization_.add(builderForValue.build());
        onChanged();
      } else {
        subnetIpUtilizationBuilder_.addMessage(builderForValue.build());
      }
      return this;
    }
    /**
     * <code>repeated .google.cloud.networkanalyzer.logging.v1.IpUtilizationInfo.SubnetIpUtilization subnet_ip_utilization = 1;</code>
     */
    public Builder addSubnetIpUtilization(
        int index, com.google.cloud.networkanalyzer.logging.v1.IpUtilizationInfo.SubnetIpUtilization.Builder builderForValue) {
      if (subnetIpUtilizationBuilder_ == null) {
        ensureSubnetIpUtilizationIsMutable();
        subnetIpUtilization_.add(index, builderForValue.build());
        onChanged();
      } else {
        subnetIpUtilizationBuilder_.addMessage(index, builderForValue.build());
      }
      return this;
    }
    /**
     * <code>repeated .google.cloud.networkanalyzer.logging.v1.IpUtilizationInfo.SubnetIpUtilization subnet_ip_utilization = 1;</code>
     */
    public Builder addAllSubnetIpUtilization(
        java.lang.Iterable<? extends com.google.cloud.networkanalyzer.logging.v1.IpUtilizationInfo.SubnetIpUtilization> values) {
      if (subnetIpUtilizationBuilder_ == null) {
        ensureSubnetIpUtilizationIsMutable();
        com.google.protobuf.AbstractMessageLite.Builder.addAll(
            values, subnetIpUtilization_);
        onChanged();
      } else {
        subnetIpUtilizationBuilder_.addAllMessages(values);
      }
      return this;
    }
    /**
     * <code>repeated .google.cloud.networkanalyzer.logging.v1.IpUtilizationInfo.SubnetIpUtilization subnet_ip_utilization = 1;</code>
     */
    public Builder clearSubnetIpUtilization() {
      if (subnetIpUtilizationBuilder_ == null) {
        subnetIpUtilization_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000001);
        onChanged();
      } else {
        subnetIpUtilizationBuilder_.clear();
      }
      return this;
    }
    /**
     * <code>repeated .google.cloud.networkanalyzer.logging.v1.IpUtilizationInfo.SubnetIpUtilization subnet_ip_utilization = 1;</code>
     */
    public Builder removeSubnetIpUtilization(int index) {
      if (subnetIpUtilizationBuilder_ == null) {
        ensureSubnetIpUtilizationIsMutable();
        subnetIpUtilization_.remove(index);
        onChanged();
      } else {
        subnetIpUtilizationBuilder_.remove(index);
      }
      return this;
    }
    /**
     * <code>repeated .google.cloud.networkanalyzer.logging.v1.IpUtilizationInfo.SubnetIpUtilization subnet_ip_utilization = 1;</code>
     */
    public com.google.cloud.networkanalyzer.logging.v1.IpUtilizationInfo.SubnetIpUtilization.Builder getSubnetIpUtilizationBuilder(
        int index) {
      return getSubnetIpUtilizationFieldBuilder().getBuilder(index);
    }
    /**
     * <code>repeated .google.cloud.networkanalyzer.logging.v1.IpUtilizationInfo.SubnetIpUtilization subnet_ip_utilization = 1;</code>
     */
    public com.google.cloud.networkanalyzer.logging.v1.IpUtilizationInfo.SubnetIpUtilizationOrBuilder getSubnetIpUtilizationOrBuilder(
        int index) {
      if (subnetIpUtilizationBuilder_ == null) {
        return subnetIpUtilization_.get(index);  } else {
        return subnetIpUtilizationBuilder_.getMessageOrBuilder(index);
      }
    }
    /**
     * <code>repeated .google.cloud.networkanalyzer.logging.v1.IpUtilizationInfo.SubnetIpUtilization subnet_ip_utilization = 1;</code>
     */
    public java.util.List<? extends com.google.cloud.networkanalyzer.logging.v1.IpUtilizationInfo.SubnetIpUtilizationOrBuilder> 
         getSubnetIpUtilizationOrBuilderList() {
      if (subnetIpUtilizationBuilder_ != null) {
        return subnetIpUtilizationBuilder_.getMessageOrBuilderList();
      } else {
        return java.util.Collections.unmodifiableList(subnetIpUtilization_);
      }
    }
    /**
     * <code>repeated .google.cloud.networkanalyzer.logging.v1.IpUtilizationInfo.SubnetIpUtilization subnet_ip_utilization = 1;</code>
     */
    public com.google.cloud.networkanalyzer.logging.v1.IpUtilizationInfo.SubnetIpUtilization.Builder addSubnetIpUtilizationBuilder() {
      return getSubnetIpUtilizationFieldBuilder().addBuilder(
          com.google.cloud.networkanalyzer.logging.v1.IpUtilizationInfo.SubnetIpUtilization.getDefaultInstance());
    }
    /**
     * <code>repeated .google.cloud.networkanalyzer.logging.v1.IpUtilizationInfo.SubnetIpUtilization subnet_ip_utilization = 1;</code>
     */
    public com.google.cloud.networkanalyzer.logging.v1.IpUtilizationInfo.SubnetIpUtilization.Builder addSubnetIpUtilizationBuilder(
        int index) {
      return getSubnetIpUtilizationFieldBuilder().addBuilder(
          index, com.google.cloud.networkanalyzer.logging.v1.IpUtilizationInfo.SubnetIpUtilization.getDefaultInstance());
    }
    /**
     * <code>repeated .google.cloud.networkanalyzer.logging.v1.IpUtilizationInfo.SubnetIpUtilization subnet_ip_utilization = 1;</code>
     */
    public java.util.List<com.google.cloud.networkanalyzer.logging.v1.IpUtilizationInfo.SubnetIpUtilization.Builder> 
         getSubnetIpUtilizationBuilderList() {
      return getSubnetIpUtilizationFieldBuilder().getBuilderList();
    }
    private com.google.protobuf.RepeatedFieldBuilderV3<
        com.google.cloud.networkanalyzer.logging.v1.IpUtilizationInfo.SubnetIpUtilization, com.google.cloud.networkanalyzer.logging.v1.IpUtilizationInfo.SubnetIpUtilization.Builder, com.google.cloud.networkanalyzer.logging.v1.IpUtilizationInfo.SubnetIpUtilizationOrBuilder> 
        getSubnetIpUtilizationFieldBuilder() {
      if (subnetIpUtilizationBuilder_ == null) {
        subnetIpUtilizationBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<
            com.google.cloud.networkanalyzer.logging.v1.IpUtilizationInfo.SubnetIpUtilization, com.google.cloud.networkanalyzer.logging.v1.IpUtilizationInfo.SubnetIpUtilization.Builder, com.google.cloud.networkanalyzer.logging.v1.IpUtilizationInfo.SubnetIpUtilizationOrBuilder>(
                subnetIpUtilization_,
                ((bitField0_ & 0x00000001) != 0),
                getParentForChildren(),
                isClean());
        subnetIpUtilization_ = null;
      }
      return subnetIpUtilizationBuilder_;
    }
    @java.lang.Override
    public final Builder setUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return super.setUnknownFields(unknownFields);
    }

    @java.lang.Override
    public final Builder mergeUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return super.mergeUnknownFields(unknownFields);
    }


    // @@protoc_insertion_point(builder_scope:google.cloud.networkanalyzer.logging.v1.IpUtilizationInfo)
  }

  // @@protoc_insertion_point(class_scope:google.cloud.networkanalyzer.logging.v1.IpUtilizationInfo)
  private static final com.google.cloud.networkanalyzer.logging.v1.IpUtilizationInfo DEFAULT_INSTANCE;
  static {
    DEFAULT_INSTANCE = new com.google.cloud.networkanalyzer.logging.v1.IpUtilizationInfo();
  }

  public static com.google.cloud.networkanalyzer.logging.v1.IpUtilizationInfo getDefaultInstance() {
    return DEFAULT_INSTANCE;
  }

  private static final com.google.protobuf.Parser<IpUtilizationInfo>
      PARSER = new com.google.protobuf.AbstractParser<IpUtilizationInfo>() {
    @java.lang.Override
    public IpUtilizationInfo parsePartialFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return new IpUtilizationInfo(input, extensionRegistry);
    }
  };

  public static com.google.protobuf.Parser<IpUtilizationInfo> parser() {
    return PARSER;
  }

  @java.lang.Override
  public com.google.protobuf.Parser<IpUtilizationInfo> getParserForType() {
    return PARSER;
  }

  @java.lang.Override
  public com.google.cloud.networkanalyzer.logging.v1.IpUtilizationInfo getDefaultInstanceForType() {
    return DEFAULT_INSTANCE;
  }

}

