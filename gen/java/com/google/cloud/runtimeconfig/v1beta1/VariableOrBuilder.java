// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: google/cloud/runtimeconfig/v1beta1/resources.proto

package com.google.cloud.runtimeconfig.v1beta1;

public interface VariableOrBuilder extends
    // @@protoc_insertion_point(interface_extends:google.cloud.runtimeconfig.v1beta1.Variable)
    com.google.protobuf.MessageOrBuilder {

  /**
   * <pre>
   * The name of the variable resource, in the format:
   *     projects/[PROJECT_ID]/configs/[CONFIG_NAME]/variables/[VARIABLE_NAME]
   * The `[PROJECT_ID]` must be a valid project ID, `[CONFIG_NAME]` must be a
   * valid RuntimeConfig reource and `[VARIABLE_NAME]` follows Unix file system
   * file path naming.
   * The `[VARIABLE_NAME]` can contain ASCII letters, numbers, slashes and
   * dashes. Slashes are used as path element separators and are not part of the
   * `[VARIABLE_NAME]` itself, so `[VARIABLE_NAME]` must contain at least one
   * non-slash character. Multiple slashes are coalesced into single slash
   * character. Each path segment should follow RFC 1035 segment specification.
   * The length of a `[VARIABLE_NAME]` must be less than 256 bytes.
   * Once you create a variable, you cannot change the variable name.
   * </pre>
   *
   * <code>string name = 1;</code>
   * @return The name.
   */
  java.lang.String getName();
  /**
   * <pre>
   * The name of the variable resource, in the format:
   *     projects/[PROJECT_ID]/configs/[CONFIG_NAME]/variables/[VARIABLE_NAME]
   * The `[PROJECT_ID]` must be a valid project ID, `[CONFIG_NAME]` must be a
   * valid RuntimeConfig reource and `[VARIABLE_NAME]` follows Unix file system
   * file path naming.
   * The `[VARIABLE_NAME]` can contain ASCII letters, numbers, slashes and
   * dashes. Slashes are used as path element separators and are not part of the
   * `[VARIABLE_NAME]` itself, so `[VARIABLE_NAME]` must contain at least one
   * non-slash character. Multiple slashes are coalesced into single slash
   * character. Each path segment should follow RFC 1035 segment specification.
   * The length of a `[VARIABLE_NAME]` must be less than 256 bytes.
   * Once you create a variable, you cannot change the variable name.
   * </pre>
   *
   * <code>string name = 1;</code>
   * @return The bytes for name.
   */
  com.google.protobuf.ByteString
      getNameBytes();

  /**
   * <pre>
   * The binary value of the variable. The length of the value must be less
   * than 4096 bytes. Empty values are also accepted. The value must be
   * base64 encoded. Only one of `value` or `text` can be set.
   * </pre>
   *
   * <code>bytes value = 2;</code>
   * @return Whether the value field is set.
   */
  boolean hasValue();
  /**
   * <pre>
   * The binary value of the variable. The length of the value must be less
   * than 4096 bytes. Empty values are also accepted. The value must be
   * base64 encoded. Only one of `value` or `text` can be set.
   * </pre>
   *
   * <code>bytes value = 2;</code>
   * @return The value.
   */
  com.google.protobuf.ByteString getValue();

  /**
   * <pre>
   * The string value of the variable. The length of the value must be less
   * than 4096 bytes. Empty values are also accepted. For example,
   * `text: "my text value"`. The string must be valid UTF-8.
   * </pre>
   *
   * <code>string text = 5;</code>
   * @return Whether the text field is set.
   */
  boolean hasText();
  /**
   * <pre>
   * The string value of the variable. The length of the value must be less
   * than 4096 bytes. Empty values are also accepted. For example,
   * `text: "my text value"`. The string must be valid UTF-8.
   * </pre>
   *
   * <code>string text = 5;</code>
   * @return The text.
   */
  java.lang.String getText();
  /**
   * <pre>
   * The string value of the variable. The length of the value must be less
   * than 4096 bytes. Empty values are also accepted. For example,
   * `text: "my text value"`. The string must be valid UTF-8.
   * </pre>
   *
   * <code>string text = 5;</code>
   * @return The bytes for text.
   */
  com.google.protobuf.ByteString
      getTextBytes();

  /**
   * <pre>
   * [Output Only] The time of the last variable update.
   * </pre>
   *
   * <code>.google.protobuf.Timestamp update_time = 3;</code>
   * @return Whether the updateTime field is set.
   */
  boolean hasUpdateTime();
  /**
   * <pre>
   * [Output Only] The time of the last variable update.
   * </pre>
   *
   * <code>.google.protobuf.Timestamp update_time = 3;</code>
   * @return The updateTime.
   */
  com.google.protobuf.Timestamp getUpdateTime();
  /**
   * <pre>
   * [Output Only] The time of the last variable update.
   * </pre>
   *
   * <code>.google.protobuf.Timestamp update_time = 3;</code>
   */
  com.google.protobuf.TimestampOrBuilder getUpdateTimeOrBuilder();

  /**
   * <pre>
   * [Ouput only] The current state of the variable. The variable state
   * indicates the outcome of the `variables().watch` call and is visible
   * through the `get` and `list` calls.
   * </pre>
   *
   * <code>.google.cloud.runtimeconfig.v1beta1.VariableState state = 4;</code>
   * @return The enum numeric value on the wire for state.
   */
  int getStateValue();
  /**
   * <pre>
   * [Ouput only] The current state of the variable. The variable state
   * indicates the outcome of the `variables().watch` call and is visible
   * through the `get` and `list` calls.
   * </pre>
   *
   * <code>.google.cloud.runtimeconfig.v1beta1.VariableState state = 4;</code>
   * @return The state.
   */
  com.google.cloud.runtimeconfig.v1beta1.VariableState getState();

  public com.google.cloud.runtimeconfig.v1beta1.Variable.ContentsCase getContentsCase();
}
