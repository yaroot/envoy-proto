// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: google/cloud/runtimeconfig/v1beta1/runtimeconfig.proto

package com.google.cloud.runtimeconfig.v1beta1;

public interface CreateConfigRequestOrBuilder extends
    // @@protoc_insertion_point(interface_extends:google.cloud.runtimeconfig.v1beta1.CreateConfigRequest)
    com.google.protobuf.MessageOrBuilder {

  /**
   * <pre>
   * The [project
   * ID](https://support.google.com/cloud/answer/6158840?hl=en&amp;ref_topic=6158848)
   * for this request, in the format `projects/[PROJECT_ID]`.
   * </pre>
   *
   * <code>string parent = 1;</code>
   * @return The parent.
   */
  java.lang.String getParent();
  /**
   * <pre>
   * The [project
   * ID](https://support.google.com/cloud/answer/6158840?hl=en&amp;ref_topic=6158848)
   * for this request, in the format `projects/[PROJECT_ID]`.
   * </pre>
   *
   * <code>string parent = 1;</code>
   * @return The bytes for parent.
   */
  com.google.protobuf.ByteString
      getParentBytes();

  /**
   * <pre>
   * The RuntimeConfig to create.
   * </pre>
   *
   * <code>.google.cloud.runtimeconfig.v1beta1.RuntimeConfig config = 2;</code>
   * @return Whether the config field is set.
   */
  boolean hasConfig();
  /**
   * <pre>
   * The RuntimeConfig to create.
   * </pre>
   *
   * <code>.google.cloud.runtimeconfig.v1beta1.RuntimeConfig config = 2;</code>
   * @return The config.
   */
  com.google.cloud.runtimeconfig.v1beta1.RuntimeConfig getConfig();
  /**
   * <pre>
   * The RuntimeConfig to create.
   * </pre>
   *
   * <code>.google.cloud.runtimeconfig.v1beta1.RuntimeConfig config = 2;</code>
   */
  com.google.cloud.runtimeconfig.v1beta1.RuntimeConfigOrBuilder getConfigOrBuilder();

  /**
   * <pre>
   * An optional but recommended unique `request_id`. If the server
   * receives two `create()` requests  with the same
   * `request_id`, then the second request will be ignored and the
   * first resource created and stored in the backend is returned.
   * Empty `request_id` fields are ignored.
   * It is responsibility of the client to ensure uniqueness of the
   * `request_id` strings.
   * `request_id` strings are limited to 64 characters.
   * </pre>
   *
   * <code>string request_id = 3;</code>
   * @return The requestId.
   */
  java.lang.String getRequestId();
  /**
   * <pre>
   * An optional but recommended unique `request_id`. If the server
   * receives two `create()` requests  with the same
   * `request_id`, then the second request will be ignored and the
   * first resource created and stored in the backend is returned.
   * Empty `request_id` fields are ignored.
   * It is responsibility of the client to ensure uniqueness of the
   * `request_id` strings.
   * `request_id` strings are limited to 64 characters.
   * </pre>
   *
   * <code>string request_id = 3;</code>
   * @return The bytes for requestId.
   */
  com.google.protobuf.ByteString
      getRequestIdBytes();
}
