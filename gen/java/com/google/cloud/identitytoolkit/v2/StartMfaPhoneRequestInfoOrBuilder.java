// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: google/cloud/identitytoolkit/v2/mfa_info.proto

package com.google.cloud.identitytoolkit.v2;

public interface StartMfaPhoneRequestInfoOrBuilder extends
    // @@protoc_insertion_point(interface_extends:google.cloud.identitytoolkit.v2.StartMfaPhoneRequestInfo)
    com.google.protobuf.MessageOrBuilder {

  /**
   * <pre>
   * Required for enrollment. Phone number to be enrolled as MFA.
   * </pre>
   *
   * <code>string phone_number = 1;</code>
   * @return The phoneNumber.
   */
  java.lang.String getPhoneNumber();
  /**
   * <pre>
   * Required for enrollment. Phone number to be enrolled as MFA.
   * </pre>
   *
   * <code>string phone_number = 1;</code>
   * @return The bytes for phoneNumber.
   */
  com.google.protobuf.ByteString
      getPhoneNumberBytes();

  /**
   * <pre>
   * iOS only. Receipt of successful app token validation with APNS.
   * </pre>
   *
   * <code>string ios_receipt = 2;</code>
   * @return The iosReceipt.
   */
  java.lang.String getIosReceipt();
  /**
   * <pre>
   * iOS only. Receipt of successful app token validation with APNS.
   * </pre>
   *
   * <code>string ios_receipt = 2;</code>
   * @return The bytes for iosReceipt.
   */
  com.google.protobuf.ByteString
      getIosReceiptBytes();

  /**
   * <pre>
   * iOS only. Secret delivered to iOS app via APNS.
   * </pre>
   *
   * <code>string ios_secret = 3;</code>
   * @return The iosSecret.
   */
  java.lang.String getIosSecret();
  /**
   * <pre>
   * iOS only. Secret delivered to iOS app via APNS.
   * </pre>
   *
   * <code>string ios_secret = 3;</code>
   * @return The bytes for iosSecret.
   */
  com.google.protobuf.ByteString
      getIosSecretBytes();

  /**
   * <pre>
   * Web only. Recaptcha solution.
   * </pre>
   *
   * <code>string recaptcha_token = 4;</code>
   * @return The recaptchaToken.
   */
  java.lang.String getRecaptchaToken();
  /**
   * <pre>
   * Web only. Recaptcha solution.
   * </pre>
   *
   * <code>string recaptcha_token = 4;</code>
   * @return The bytes for recaptchaToken.
   */
  com.google.protobuf.ByteString
      getRecaptchaTokenBytes();

  /**
   * <pre>
   * Android only. Used by Google Play Services to identify the app for
   * auto-retrieval.
   * </pre>
   *
   * <code>.google.cloud.identitytoolkit.v2.AutoRetrievalInfo auto_retrieval_info = 5;</code>
   * @return Whether the autoRetrievalInfo field is set.
   */
  boolean hasAutoRetrievalInfo();
  /**
   * <pre>
   * Android only. Used by Google Play Services to identify the app for
   * auto-retrieval.
   * </pre>
   *
   * <code>.google.cloud.identitytoolkit.v2.AutoRetrievalInfo auto_retrieval_info = 5;</code>
   * @return The autoRetrievalInfo.
   */
  com.google.cloud.identitytoolkit.v2.AutoRetrievalInfo getAutoRetrievalInfo();
  /**
   * <pre>
   * Android only. Used by Google Play Services to identify the app for
   * auto-retrieval.
   * </pre>
   *
   * <code>.google.cloud.identitytoolkit.v2.AutoRetrievalInfo auto_retrieval_info = 5;</code>
   */
  com.google.cloud.identitytoolkit.v2.AutoRetrievalInfoOrBuilder getAutoRetrievalInfoOrBuilder();

  /**
   * <pre>
   * Android only. Used to assert application identity in place of a
   * recaptcha token. A SafetyNet Token can be generated via the
   * [SafetyNet Android Attestation
   * API](https://developer.android.com/training/safetynet/attestation.html),
   * with the Base64 encoding of the `phone_number` field as the nonce.
   * </pre>
   *
   * <code>string safety_net_token = 6;</code>
   * @return The safetyNetToken.
   */
  java.lang.String getSafetyNetToken();
  /**
   * <pre>
   * Android only. Used to assert application identity in place of a
   * recaptcha token. A SafetyNet Token can be generated via the
   * [SafetyNet Android Attestation
   * API](https://developer.android.com/training/safetynet/attestation.html),
   * with the Base64 encoding of the `phone_number` field as the nonce.
   * </pre>
   *
   * <code>string safety_net_token = 6;</code>
   * @return The bytes for safetyNetToken.
   */
  com.google.protobuf.ByteString
      getSafetyNetTokenBytes();
}
