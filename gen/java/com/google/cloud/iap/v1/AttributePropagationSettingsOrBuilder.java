// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: google/cloud/iap/v1/service.proto

package com.google.cloud.iap.v1;

public interface AttributePropagationSettingsOrBuilder extends
    // @@protoc_insertion_point(interface_extends:google.cloud.iap.v1.AttributePropagationSettings)
    com.google.protobuf.MessageOrBuilder {

  /**
   * <pre>
   * Raw string CEL expression. Must return a list of attributes. Maximum of 45
   * attributes can be selected. Expressions can select different attribute
   * types from `attributes`: `attributes.saml_attributes`,
   * `attributes.iap_attributes`. Limited functions are supported:
   *  - `filter: &lt;list&gt;.filter(&lt;iter_var&gt;, &lt;predicate&gt;)` -&gt; returns a subset of
   *  `&lt;list&gt;` where `&lt;predicate&gt;` is true for every item.
   *  - `in: &lt;var&gt; in &lt;list&gt;` -&gt; returns true if `&lt;list&gt;` contains `&lt;var&gt;`
   *  - `selectByName: &lt;list&gt;.selectByName(&lt;string&gt;)` -&gt; returns the attribute
   *  in
   *  `&lt;list&gt;` with the given `&lt;string&gt;` name, otherwise returns empty.
   *  - `emitAs: &lt;attribute&gt;.emitAs(&lt;string&gt;)` -&gt; sets the `&lt;attribute&gt;` name
   *  field to the given `&lt;string&gt;` for propagation in selected output
   *  credentials.
   *  - `strict: &lt;attribute&gt;.strict()` -&gt; ignore the `x-goog-iap-attr-` prefix
   *  for the provided `&lt;attribute&gt;` when propagating via the `HEADER` output
   *  credential, i.e. request headers.
   *  - `append: &lt;target_list&gt;.append(&lt;attribute&gt;)` OR
   *  `&lt;target_list&gt;.append(&lt;list&gt;)` -&gt; append the provided `&lt;attribute&gt;` or
   *  `&lt;list&gt;` onto the end of `&lt;target_list&gt;`.
   * Example expression: `attributes.saml_attributes.filter(x, x.name in
   * ['test']).append(attributes.iap_attributes.selectByName('exact').emitAs('custom').strict())`
   * </pre>
   *
   * <code>optional string expression = 1;</code>
   * @return Whether the expression field is set.
   */
  boolean hasExpression();
  /**
   * <pre>
   * Raw string CEL expression. Must return a list of attributes. Maximum of 45
   * attributes can be selected. Expressions can select different attribute
   * types from `attributes`: `attributes.saml_attributes`,
   * `attributes.iap_attributes`. Limited functions are supported:
   *  - `filter: &lt;list&gt;.filter(&lt;iter_var&gt;, &lt;predicate&gt;)` -&gt; returns a subset of
   *  `&lt;list&gt;` where `&lt;predicate&gt;` is true for every item.
   *  - `in: &lt;var&gt; in &lt;list&gt;` -&gt; returns true if `&lt;list&gt;` contains `&lt;var&gt;`
   *  - `selectByName: &lt;list&gt;.selectByName(&lt;string&gt;)` -&gt; returns the attribute
   *  in
   *  `&lt;list&gt;` with the given `&lt;string&gt;` name, otherwise returns empty.
   *  - `emitAs: &lt;attribute&gt;.emitAs(&lt;string&gt;)` -&gt; sets the `&lt;attribute&gt;` name
   *  field to the given `&lt;string&gt;` for propagation in selected output
   *  credentials.
   *  - `strict: &lt;attribute&gt;.strict()` -&gt; ignore the `x-goog-iap-attr-` prefix
   *  for the provided `&lt;attribute&gt;` when propagating via the `HEADER` output
   *  credential, i.e. request headers.
   *  - `append: &lt;target_list&gt;.append(&lt;attribute&gt;)` OR
   *  `&lt;target_list&gt;.append(&lt;list&gt;)` -&gt; append the provided `&lt;attribute&gt;` or
   *  `&lt;list&gt;` onto the end of `&lt;target_list&gt;`.
   * Example expression: `attributes.saml_attributes.filter(x, x.name in
   * ['test']).append(attributes.iap_attributes.selectByName('exact').emitAs('custom').strict())`
   * </pre>
   *
   * <code>optional string expression = 1;</code>
   * @return The expression.
   */
  java.lang.String getExpression();
  /**
   * <pre>
   * Raw string CEL expression. Must return a list of attributes. Maximum of 45
   * attributes can be selected. Expressions can select different attribute
   * types from `attributes`: `attributes.saml_attributes`,
   * `attributes.iap_attributes`. Limited functions are supported:
   *  - `filter: &lt;list&gt;.filter(&lt;iter_var&gt;, &lt;predicate&gt;)` -&gt; returns a subset of
   *  `&lt;list&gt;` where `&lt;predicate&gt;` is true for every item.
   *  - `in: &lt;var&gt; in &lt;list&gt;` -&gt; returns true if `&lt;list&gt;` contains `&lt;var&gt;`
   *  - `selectByName: &lt;list&gt;.selectByName(&lt;string&gt;)` -&gt; returns the attribute
   *  in
   *  `&lt;list&gt;` with the given `&lt;string&gt;` name, otherwise returns empty.
   *  - `emitAs: &lt;attribute&gt;.emitAs(&lt;string&gt;)` -&gt; sets the `&lt;attribute&gt;` name
   *  field to the given `&lt;string&gt;` for propagation in selected output
   *  credentials.
   *  - `strict: &lt;attribute&gt;.strict()` -&gt; ignore the `x-goog-iap-attr-` prefix
   *  for the provided `&lt;attribute&gt;` when propagating via the `HEADER` output
   *  credential, i.e. request headers.
   *  - `append: &lt;target_list&gt;.append(&lt;attribute&gt;)` OR
   *  `&lt;target_list&gt;.append(&lt;list&gt;)` -&gt; append the provided `&lt;attribute&gt;` or
   *  `&lt;list&gt;` onto the end of `&lt;target_list&gt;`.
   * Example expression: `attributes.saml_attributes.filter(x, x.name in
   * ['test']).append(attributes.iap_attributes.selectByName('exact').emitAs('custom').strict())`
   * </pre>
   *
   * <code>optional string expression = 1;</code>
   * @return The bytes for expression.
   */
  com.google.protobuf.ByteString
      getExpressionBytes();

  /**
   * <pre>
   * Which output credentials attributes selected by the CEL expression should
   * be propagated in. All attributes will be fully duplicated in each selected
   * output credential.
   * </pre>
   *
   * <code>repeated .google.cloud.iap.v1.AttributePropagationSettings.OutputCredentials output_credentials = 2;</code>
   * @return A list containing the outputCredentials.
   */
  java.util.List<com.google.cloud.iap.v1.AttributePropagationSettings.OutputCredentials> getOutputCredentialsList();
  /**
   * <pre>
   * Which output credentials attributes selected by the CEL expression should
   * be propagated in. All attributes will be fully duplicated in each selected
   * output credential.
   * </pre>
   *
   * <code>repeated .google.cloud.iap.v1.AttributePropagationSettings.OutputCredentials output_credentials = 2;</code>
   * @return The count of outputCredentials.
   */
  int getOutputCredentialsCount();
  /**
   * <pre>
   * Which output credentials attributes selected by the CEL expression should
   * be propagated in. All attributes will be fully duplicated in each selected
   * output credential.
   * </pre>
   *
   * <code>repeated .google.cloud.iap.v1.AttributePropagationSettings.OutputCredentials output_credentials = 2;</code>
   * @param index The index of the element to return.
   * @return The outputCredentials at the given index.
   */
  com.google.cloud.iap.v1.AttributePropagationSettings.OutputCredentials getOutputCredentials(int index);
  /**
   * <pre>
   * Which output credentials attributes selected by the CEL expression should
   * be propagated in. All attributes will be fully duplicated in each selected
   * output credential.
   * </pre>
   *
   * <code>repeated .google.cloud.iap.v1.AttributePropagationSettings.OutputCredentials output_credentials = 2;</code>
   * @return A list containing the enum numeric values on the wire for outputCredentials.
   */
  java.util.List<java.lang.Integer>
  getOutputCredentialsValueList();
  /**
   * <pre>
   * Which output credentials attributes selected by the CEL expression should
   * be propagated in. All attributes will be fully duplicated in each selected
   * output credential.
   * </pre>
   *
   * <code>repeated .google.cloud.iap.v1.AttributePropagationSettings.OutputCredentials output_credentials = 2;</code>
   * @param index The index of the value to return.
   * @return The enum numeric value on the wire of outputCredentials at the given index.
   */
  int getOutputCredentialsValue(int index);

  /**
   * <pre>
   * Whether the provided attribute propagation settings should be evaluated on
   * user requests. If set to true, attributes returned from the expression will
   * be propagated in the set output credentials.
   * </pre>
   *
   * <code>optional bool enable = 3;</code>
   * @return Whether the enable field is set.
   */
  boolean hasEnable();
  /**
   * <pre>
   * Whether the provided attribute propagation settings should be evaluated on
   * user requests. If set to true, attributes returned from the expression will
   * be propagated in the set output credentials.
   * </pre>
   *
   * <code>optional bool enable = 3;</code>
   * @return The enable.
   */
  boolean getEnable();
}
