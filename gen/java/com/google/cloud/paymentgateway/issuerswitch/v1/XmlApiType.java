// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: google/cloud/paymentgateway/issuerswitch/v1/common_fields.proto

package com.google.cloud.paymentgateway.issuerswitch.v1;

/**
 * <pre>
 * XmlApiType specifies the API type of the request or response as specified in
 * the XML payload.
 * </pre>
 *
 * Protobuf enum {@code google.cloud.paymentgateway.issuerswitch.v1.XmlApiType}
 */
public enum XmlApiType
    implements com.google.protobuf.ProtocolMessageEnum {
  /**
   * <pre>
   * Unspecified API type.
   * </pre>
   *
   * <code>XML_API_TYPE_UNSPECIFIED = 0;</code>
   */
  XML_API_TYPE_UNSPECIFIED(0),
  /**
   * <pre>
   * Balance enquiry request API type. Maps to UPI's `ReqBalEnq` API.
   * </pre>
   *
   * <code>REQ_BAL_ENQ = 1;</code>
   */
  REQ_BAL_ENQ(1),
  /**
   * <pre>
   * Check transaction request API type. Maps to UPI's `ReqChkTxn` API.
   * </pre>
   *
   * <code>REQ_CHK_TXN = 2;</code>
   */
  REQ_CHK_TXN(2),
  /**
   * <pre>
   * Complaint request API type. Maps to UPI's `ReqComplaint` API.
   * </pre>
   *
   * <code>REQ_COMPLAINT = 3;</code>
   */
  REQ_COMPLAINT(3),
  /**
   * <pre>
   * Heart beat request API type. Maps to UPI's `ReqHbt` API.
   * </pre>
   *
   * <code>REQ_HBT = 4;</code>
   */
  REQ_HBT(4),
  /**
   * <pre>
   * List accounts request API type. Maps to UPI's `ReqListAccount` API.
   * </pre>
   *
   * <code>REQ_LIST_ACCOUNT = 5;</code>
   */
  REQ_LIST_ACCOUNT(5),
  /**
   * <pre>
   * Mandate request  API. Maps to UPI's `ReqMandate` API.
   * </pre>
   *
   * <code>REQ_MANDATE = 6;</code>
   */
  REQ_MANDATE(6),
  /**
   * <pre>
   * Mandate confirmation request API type. Maps to UPI's
   * `ReqMandateConfirmation` API.
   * </pre>
   *
   * <code>REQ_MANDATE_CONFIRMATION = 7;</code>
   */
  REQ_MANDATE_CONFIRMATION(7),
  /**
   * <pre>
   * OTP request API. Maps to UPI's `ReqOtp` API.
   * </pre>
   *
   * <code>REQ_OTP = 8;</code>
   */
  REQ_OTP(8),
  /**
   * <pre>
   * Payment settlement request API type. Maps to UPI's `ReqPay` API.
   * </pre>
   *
   * <code>REQ_PAY = 9;</code>
   */
  REQ_PAY(9),
  /**
   * <pre>
   * Register mobile request API type. Maps to UPI's `ReqRegMob` API.
   * </pre>
   *
   * <code>REQ_REG_MOB = 10;</code>
   */
  REQ_REG_MOB(10),
  /**
   * <pre>
   * Update credentials request API type. Maps to UPI's `ReqSetCre` API.
   * </pre>
   *
   * <code>REQ_SET_CRE = 11;</code>
   */
  REQ_SET_CRE(11),
  /**
   * <pre>
   * Validate customer request API type. Maps to UPI's `ReqValCust`.
   * </pre>
   *
   * <code>REQ_VAL_CUST = 12;</code>
   */
  REQ_VAL_CUST(12),
  /**
   * <pre>
   * Create voucher request API type. Maps to UPI's `ReqVoucher`.
   * </pre>
   *
   * <code>REQ_VOUCHER = 13;</code>
   */
  REQ_VOUCHER(13),
  /**
   * <pre>
   * Voucher confirmation request API type. Maps to UPI's
   * `ReqVoucherConfirmation` API.
   * </pre>
   *
   * <code>REQ_VOUCHER_CONFIRMATION = 14;</code>
   */
  REQ_VOUCHER_CONFIRMATION(14),
  /**
   * <pre>
   * Transaction confirmation request API type. Maps to UPI's
   * `ReqTxnConfirmation` API.
   * </pre>
   *
   * <code>REQ_TXN_CONFIRMATION = 15;</code>
   */
  REQ_TXN_CONFIRMATION(15),
  /**
   * <pre>
   * Balance enquiry response API type. Maps to UPI's `RespBalEnq` API.
   * </pre>
   *
   * <code>RESP_BAL_ENQ = 16;</code>
   */
  RESP_BAL_ENQ(16),
  /**
   * <pre>
   * Check transaction response API type. Maps to UPI's `RespChkTxn` API.
   * </pre>
   *
   * <code>RESP_CHK_TXN = 17;</code>
   */
  RESP_CHK_TXN(17),
  /**
   * <pre>
   * Complaint response API type. Maps to UPI's `RespComplaint` API.
   * </pre>
   *
   * <code>RESP_COMPLAINT = 18;</code>
   */
  RESP_COMPLAINT(18),
  /**
   * <pre>
   * Heart beat response API type. Maps to UPI's `RespHbt` API.
   * </pre>
   *
   * <code>RESP_HBT = 19;</code>
   */
  RESP_HBT(19),
  /**
   * <pre>
   * List accounts response API type. Maps to UPI's `RespListAccount` API.
   * </pre>
   *
   * <code>RESP_LIST_ACCOUNT = 20;</code>
   */
  RESP_LIST_ACCOUNT(20),
  /**
   * <pre>
   * Mandate response API type. Maps to UPI's `RespMandate` API.
   * </pre>
   *
   * <code>RESP_MANDATE = 21;</code>
   */
  RESP_MANDATE(21),
  /**
   * <pre>
   * Mandate confirmation response API type. Maps to UPI's
   * `RespMandateConfirmation` API.
   * </pre>
   *
   * <code>RESP_MANDATE_CONFIRMATION = 22;</code>
   */
  RESP_MANDATE_CONFIRMATION(22),
  /**
   * <pre>
   * OTP response API. Maps to UPI's `RespOtp` API.
   * </pre>
   *
   * <code>RESP_OTP = 23;</code>
   */
  RESP_OTP(23),
  /**
   * <pre>
   * Payment settlement response API type. Maps to UPI's `RespPay` API.
   * </pre>
   *
   * <code>RESP_PAY = 24;</code>
   */
  RESP_PAY(24),
  /**
   * <pre>
   * Register mobile response API type. Maps to UPI's `RespRegMob` API.
   * </pre>
   *
   * <code>RESP_REG_MOB = 25;</code>
   */
  RESP_REG_MOB(25),
  /**
   * <pre>
   * Update credentials response API type. Maps to UPI's `RespSetCre` API.
   * </pre>
   *
   * <code>RESP_SET_CRE = 26;</code>
   */
  RESP_SET_CRE(26),
  /**
   * <pre>
   * Validate customer response API type. Maps to UPI's `RespValCust`.
   * </pre>
   *
   * <code>RESP_VAL_CUST = 27;</code>
   */
  RESP_VAL_CUST(27),
  /**
   * <pre>
   * Create voucher response API type. Maps to UPI's `RespVoucher`.
   * </pre>
   *
   * <code>RESP_VOUCHER = 28;</code>
   */
  RESP_VOUCHER(28),
  /**
   * <pre>
   * Voucher confirmation responseAPI type. Maps to UPI's
   * `RespVoucherConfirmation` API.
   * </pre>
   *
   * <code>RESP_VOUCHER_CONFIRMATION = 29;</code>
   */
  RESP_VOUCHER_CONFIRMATION(29),
  /**
   * <pre>
   * Transaction confirmation response API type. Maps to UPI's
   * `RespTxnConfirmation` API.
   * </pre>
   *
   * <code>RESP_TXN_CONFIRMATION = 30;</code>
   */
  RESP_TXN_CONFIRMATION(30),
  UNRECOGNIZED(-1),
  ;

  /**
   * <pre>
   * Unspecified API type.
   * </pre>
   *
   * <code>XML_API_TYPE_UNSPECIFIED = 0;</code>
   */
  public static final int XML_API_TYPE_UNSPECIFIED_VALUE = 0;
  /**
   * <pre>
   * Balance enquiry request API type. Maps to UPI's `ReqBalEnq` API.
   * </pre>
   *
   * <code>REQ_BAL_ENQ = 1;</code>
   */
  public static final int REQ_BAL_ENQ_VALUE = 1;
  /**
   * <pre>
   * Check transaction request API type. Maps to UPI's `ReqChkTxn` API.
   * </pre>
   *
   * <code>REQ_CHK_TXN = 2;</code>
   */
  public static final int REQ_CHK_TXN_VALUE = 2;
  /**
   * <pre>
   * Complaint request API type. Maps to UPI's `ReqComplaint` API.
   * </pre>
   *
   * <code>REQ_COMPLAINT = 3;</code>
   */
  public static final int REQ_COMPLAINT_VALUE = 3;
  /**
   * <pre>
   * Heart beat request API type. Maps to UPI's `ReqHbt` API.
   * </pre>
   *
   * <code>REQ_HBT = 4;</code>
   */
  public static final int REQ_HBT_VALUE = 4;
  /**
   * <pre>
   * List accounts request API type. Maps to UPI's `ReqListAccount` API.
   * </pre>
   *
   * <code>REQ_LIST_ACCOUNT = 5;</code>
   */
  public static final int REQ_LIST_ACCOUNT_VALUE = 5;
  /**
   * <pre>
   * Mandate request  API. Maps to UPI's `ReqMandate` API.
   * </pre>
   *
   * <code>REQ_MANDATE = 6;</code>
   */
  public static final int REQ_MANDATE_VALUE = 6;
  /**
   * <pre>
   * Mandate confirmation request API type. Maps to UPI's
   * `ReqMandateConfirmation` API.
   * </pre>
   *
   * <code>REQ_MANDATE_CONFIRMATION = 7;</code>
   */
  public static final int REQ_MANDATE_CONFIRMATION_VALUE = 7;
  /**
   * <pre>
   * OTP request API. Maps to UPI's `ReqOtp` API.
   * </pre>
   *
   * <code>REQ_OTP = 8;</code>
   */
  public static final int REQ_OTP_VALUE = 8;
  /**
   * <pre>
   * Payment settlement request API type. Maps to UPI's `ReqPay` API.
   * </pre>
   *
   * <code>REQ_PAY = 9;</code>
   */
  public static final int REQ_PAY_VALUE = 9;
  /**
   * <pre>
   * Register mobile request API type. Maps to UPI's `ReqRegMob` API.
   * </pre>
   *
   * <code>REQ_REG_MOB = 10;</code>
   */
  public static final int REQ_REG_MOB_VALUE = 10;
  /**
   * <pre>
   * Update credentials request API type. Maps to UPI's `ReqSetCre` API.
   * </pre>
   *
   * <code>REQ_SET_CRE = 11;</code>
   */
  public static final int REQ_SET_CRE_VALUE = 11;
  /**
   * <pre>
   * Validate customer request API type. Maps to UPI's `ReqValCust`.
   * </pre>
   *
   * <code>REQ_VAL_CUST = 12;</code>
   */
  public static final int REQ_VAL_CUST_VALUE = 12;
  /**
   * <pre>
   * Create voucher request API type. Maps to UPI's `ReqVoucher`.
   * </pre>
   *
   * <code>REQ_VOUCHER = 13;</code>
   */
  public static final int REQ_VOUCHER_VALUE = 13;
  /**
   * <pre>
   * Voucher confirmation request API type. Maps to UPI's
   * `ReqVoucherConfirmation` API.
   * </pre>
   *
   * <code>REQ_VOUCHER_CONFIRMATION = 14;</code>
   */
  public static final int REQ_VOUCHER_CONFIRMATION_VALUE = 14;
  /**
   * <pre>
   * Transaction confirmation request API type. Maps to UPI's
   * `ReqTxnConfirmation` API.
   * </pre>
   *
   * <code>REQ_TXN_CONFIRMATION = 15;</code>
   */
  public static final int REQ_TXN_CONFIRMATION_VALUE = 15;
  /**
   * <pre>
   * Balance enquiry response API type. Maps to UPI's `RespBalEnq` API.
   * </pre>
   *
   * <code>RESP_BAL_ENQ = 16;</code>
   */
  public static final int RESP_BAL_ENQ_VALUE = 16;
  /**
   * <pre>
   * Check transaction response API type. Maps to UPI's `RespChkTxn` API.
   * </pre>
   *
   * <code>RESP_CHK_TXN = 17;</code>
   */
  public static final int RESP_CHK_TXN_VALUE = 17;
  /**
   * <pre>
   * Complaint response API type. Maps to UPI's `RespComplaint` API.
   * </pre>
   *
   * <code>RESP_COMPLAINT = 18;</code>
   */
  public static final int RESP_COMPLAINT_VALUE = 18;
  /**
   * <pre>
   * Heart beat response API type. Maps to UPI's `RespHbt` API.
   * </pre>
   *
   * <code>RESP_HBT = 19;</code>
   */
  public static final int RESP_HBT_VALUE = 19;
  /**
   * <pre>
   * List accounts response API type. Maps to UPI's `RespListAccount` API.
   * </pre>
   *
   * <code>RESP_LIST_ACCOUNT = 20;</code>
   */
  public static final int RESP_LIST_ACCOUNT_VALUE = 20;
  /**
   * <pre>
   * Mandate response API type. Maps to UPI's `RespMandate` API.
   * </pre>
   *
   * <code>RESP_MANDATE = 21;</code>
   */
  public static final int RESP_MANDATE_VALUE = 21;
  /**
   * <pre>
   * Mandate confirmation response API type. Maps to UPI's
   * `RespMandateConfirmation` API.
   * </pre>
   *
   * <code>RESP_MANDATE_CONFIRMATION = 22;</code>
   */
  public static final int RESP_MANDATE_CONFIRMATION_VALUE = 22;
  /**
   * <pre>
   * OTP response API. Maps to UPI's `RespOtp` API.
   * </pre>
   *
   * <code>RESP_OTP = 23;</code>
   */
  public static final int RESP_OTP_VALUE = 23;
  /**
   * <pre>
   * Payment settlement response API type. Maps to UPI's `RespPay` API.
   * </pre>
   *
   * <code>RESP_PAY = 24;</code>
   */
  public static final int RESP_PAY_VALUE = 24;
  /**
   * <pre>
   * Register mobile response API type. Maps to UPI's `RespRegMob` API.
   * </pre>
   *
   * <code>RESP_REG_MOB = 25;</code>
   */
  public static final int RESP_REG_MOB_VALUE = 25;
  /**
   * <pre>
   * Update credentials response API type. Maps to UPI's `RespSetCre` API.
   * </pre>
   *
   * <code>RESP_SET_CRE = 26;</code>
   */
  public static final int RESP_SET_CRE_VALUE = 26;
  /**
   * <pre>
   * Validate customer response API type. Maps to UPI's `RespValCust`.
   * </pre>
   *
   * <code>RESP_VAL_CUST = 27;</code>
   */
  public static final int RESP_VAL_CUST_VALUE = 27;
  /**
   * <pre>
   * Create voucher response API type. Maps to UPI's `RespVoucher`.
   * </pre>
   *
   * <code>RESP_VOUCHER = 28;</code>
   */
  public static final int RESP_VOUCHER_VALUE = 28;
  /**
   * <pre>
   * Voucher confirmation responseAPI type. Maps to UPI's
   * `RespVoucherConfirmation` API.
   * </pre>
   *
   * <code>RESP_VOUCHER_CONFIRMATION = 29;</code>
   */
  public static final int RESP_VOUCHER_CONFIRMATION_VALUE = 29;
  /**
   * <pre>
   * Transaction confirmation response API type. Maps to UPI's
   * `RespTxnConfirmation` API.
   * </pre>
   *
   * <code>RESP_TXN_CONFIRMATION = 30;</code>
   */
  public static final int RESP_TXN_CONFIRMATION_VALUE = 30;


  public final int getNumber() {
    if (this == UNRECOGNIZED) {
      throw new java.lang.IllegalArgumentException(
          "Can't get the number of an unknown enum value.");
    }
    return value;
  }

  /**
   * @param value The numeric wire value of the corresponding enum entry.
   * @return The enum associated with the given numeric wire value.
   * @deprecated Use {@link #forNumber(int)} instead.
   */
  @java.lang.Deprecated
  public static XmlApiType valueOf(int value) {
    return forNumber(value);
  }

  /**
   * @param value The numeric wire value of the corresponding enum entry.
   * @return The enum associated with the given numeric wire value.
   */
  public static XmlApiType forNumber(int value) {
    switch (value) {
      case 0: return XML_API_TYPE_UNSPECIFIED;
      case 1: return REQ_BAL_ENQ;
      case 2: return REQ_CHK_TXN;
      case 3: return REQ_COMPLAINT;
      case 4: return REQ_HBT;
      case 5: return REQ_LIST_ACCOUNT;
      case 6: return REQ_MANDATE;
      case 7: return REQ_MANDATE_CONFIRMATION;
      case 8: return REQ_OTP;
      case 9: return REQ_PAY;
      case 10: return REQ_REG_MOB;
      case 11: return REQ_SET_CRE;
      case 12: return REQ_VAL_CUST;
      case 13: return REQ_VOUCHER;
      case 14: return REQ_VOUCHER_CONFIRMATION;
      case 15: return REQ_TXN_CONFIRMATION;
      case 16: return RESP_BAL_ENQ;
      case 17: return RESP_CHK_TXN;
      case 18: return RESP_COMPLAINT;
      case 19: return RESP_HBT;
      case 20: return RESP_LIST_ACCOUNT;
      case 21: return RESP_MANDATE;
      case 22: return RESP_MANDATE_CONFIRMATION;
      case 23: return RESP_OTP;
      case 24: return RESP_PAY;
      case 25: return RESP_REG_MOB;
      case 26: return RESP_SET_CRE;
      case 27: return RESP_VAL_CUST;
      case 28: return RESP_VOUCHER;
      case 29: return RESP_VOUCHER_CONFIRMATION;
      case 30: return RESP_TXN_CONFIRMATION;
      default: return null;
    }
  }

  public static com.google.protobuf.Internal.EnumLiteMap<XmlApiType>
      internalGetValueMap() {
    return internalValueMap;
  }
  private static final com.google.protobuf.Internal.EnumLiteMap<
      XmlApiType> internalValueMap =
        new com.google.protobuf.Internal.EnumLiteMap<XmlApiType>() {
          public XmlApiType findValueByNumber(int number) {
            return XmlApiType.forNumber(number);
          }
        };

  public final com.google.protobuf.Descriptors.EnumValueDescriptor
      getValueDescriptor() {
    if (this == UNRECOGNIZED) {
      throw new java.lang.IllegalStateException(
          "Can't get the descriptor of an unrecognized enum value.");
    }
    return getDescriptor().getValues().get(ordinal());
  }
  public final com.google.protobuf.Descriptors.EnumDescriptor
      getDescriptorForType() {
    return getDescriptor();
  }
  public static final com.google.protobuf.Descriptors.EnumDescriptor
      getDescriptor() {
    return com.google.cloud.paymentgateway.issuerswitch.v1.CommonFieldsProto.getDescriptor().getEnumTypes().get(2);
  }

  private static final XmlApiType[] VALUES = values();

  public static XmlApiType valueOf(
      com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
    if (desc.getType() != getDescriptor()) {
      throw new java.lang.IllegalArgumentException(
        "EnumValueDescriptor is not for this type.");
    }
    if (desc.getIndex() == -1) {
      return UNRECOGNIZED;
    }
    return VALUES[desc.getIndex()];
  }

  private final int value;

  private XmlApiType(int value) {
    this.value = value;
  }

  // @@protoc_insertion_point(enum_scope:google.cloud.paymentgateway.issuerswitch.v1.XmlApiType)
}

