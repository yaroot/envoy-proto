// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: google/cloud/paymentgateway/issuerswitch/v1/resolutions.proto

package com.google.cloud.paymentgateway.issuerswitch.v1;

/**
 * <pre>
 * A dispute processed by the issuer switch.
 * </pre>
 *
 * Protobuf type {@code google.cloud.paymentgateway.issuerswitch.v1.Dispute}
 */
public final class Dispute extends
    com.google.protobuf.GeneratedMessageV3 implements
    // @@protoc_insertion_point(message_implements:google.cloud.paymentgateway.issuerswitch.v1.Dispute)
    DisputeOrBuilder {
private static final long serialVersionUID = 0L;
  // Use Dispute.newBuilder() to construct.
  private Dispute(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
    super(builder);
  }
  private Dispute() {
    name_ = "";
  }

  @java.lang.Override
  @SuppressWarnings({"unused"})
  protected java.lang.Object newInstance(
      UnusedPrivateParameter unused) {
    return new Dispute();
  }

  @java.lang.Override
  public final com.google.protobuf.UnknownFieldSet
  getUnknownFields() {
    return this.unknownFields;
  }
  private Dispute(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    this();
    if (extensionRegistry == null) {
      throw new java.lang.NullPointerException();
    }
    com.google.protobuf.UnknownFieldSet.Builder unknownFields =
        com.google.protobuf.UnknownFieldSet.newBuilder();
    try {
      boolean done = false;
      while (!done) {
        int tag = input.readTag();
        switch (tag) {
          case 0:
            done = true;
            break;
          case 10: {
            java.lang.String s = input.readStringRequireUtf8();

            name_ = s;
            break;
          }
          case 18: {
            com.google.cloud.paymentgateway.issuerswitch.v1.RaiseDisputeAdjustment.Builder subBuilder = null;
            if (raiseDisputeAdjustment_ != null) {
              subBuilder = raiseDisputeAdjustment_.toBuilder();
            }
            raiseDisputeAdjustment_ = input.readMessage(com.google.cloud.paymentgateway.issuerswitch.v1.RaiseDisputeAdjustment.parser(), extensionRegistry);
            if (subBuilder != null) {
              subBuilder.mergeFrom(raiseDisputeAdjustment_);
              raiseDisputeAdjustment_ = subBuilder.buildPartial();
            }

            break;
          }
          case 34: {
            com.google.cloud.paymentgateway.issuerswitch.v1.CaseDetails.Builder subBuilder = null;
            if (details_ != null) {
              subBuilder = details_.toBuilder();
            }
            details_ = input.readMessage(com.google.cloud.paymentgateway.issuerswitch.v1.CaseDetails.parser(), extensionRegistry);
            if (subBuilder != null) {
              subBuilder.mergeFrom(details_);
              details_ = subBuilder.buildPartial();
            }

            break;
          }
          case 42: {
            com.google.cloud.paymentgateway.issuerswitch.v1.CaseResponse.Builder subBuilder = null;
            if (response_ != null) {
              subBuilder = response_.toBuilder();
            }
            response_ = input.readMessage(com.google.cloud.paymentgateway.issuerswitch.v1.CaseResponse.parser(), extensionRegistry);
            if (subBuilder != null) {
              subBuilder.mergeFrom(response_);
              response_ = subBuilder.buildPartial();
            }

            break;
          }
          case 50: {
            com.google.cloud.paymentgateway.issuerswitch.v1.ResolveDisputeAdjustment.Builder subBuilder = null;
            if (resolveDisputeAdjustment_ != null) {
              subBuilder = resolveDisputeAdjustment_.toBuilder();
            }
            resolveDisputeAdjustment_ = input.readMessage(com.google.cloud.paymentgateway.issuerswitch.v1.ResolveDisputeAdjustment.parser(), extensionRegistry);
            if (subBuilder != null) {
              subBuilder.mergeFrom(resolveDisputeAdjustment_);
              resolveDisputeAdjustment_ = subBuilder.buildPartial();
            }

            break;
          }
          default: {
            if (!parseUnknownField(
                input, unknownFields, extensionRegistry, tag)) {
              done = true;
            }
            break;
          }
        }
      }
    } catch (com.google.protobuf.InvalidProtocolBufferException e) {
      throw e.setUnfinishedMessage(this);
    } catch (com.google.protobuf.UninitializedMessageException e) {
      throw e.asInvalidProtocolBufferException().setUnfinishedMessage(this);
    } catch (java.io.IOException e) {
      throw new com.google.protobuf.InvalidProtocolBufferException(
          e).setUnfinishedMessage(this);
    } finally {
      this.unknownFields = unknownFields.build();
      makeExtensionsImmutable();
    }
  }
  public static final com.google.protobuf.Descriptors.Descriptor
      getDescriptor() {
    return com.google.cloud.paymentgateway.issuerswitch.v1.ResolutionsProto.internal_static_google_cloud_paymentgateway_issuerswitch_v1_Dispute_descriptor;
  }

  @java.lang.Override
  protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internalGetFieldAccessorTable() {
    return com.google.cloud.paymentgateway.issuerswitch.v1.ResolutionsProto.internal_static_google_cloud_paymentgateway_issuerswitch_v1_Dispute_fieldAccessorTable
        .ensureFieldAccessorsInitialized(
            com.google.cloud.paymentgateway.issuerswitch.v1.Dispute.class, com.google.cloud.paymentgateway.issuerswitch.v1.Dispute.Builder.class);
  }

  public static final int NAME_FIELD_NUMBER = 1;
  private volatile java.lang.Object name_;
  /**
   * <pre>
   * The name of the dispute. This uniquely identifies the dispute.
   * Format of name is
   * projects/{project_id}/disputes/{dispute_id}.
   * </pre>
   *
   * <code>string name = 1;</code>
   * @return The name.
   */
  @java.lang.Override
  public java.lang.String getName() {
    java.lang.Object ref = name_;
    if (ref instanceof java.lang.String) {
      return (java.lang.String) ref;
    } else {
      com.google.protobuf.ByteString bs = 
          (com.google.protobuf.ByteString) ref;
      java.lang.String s = bs.toStringUtf8();
      name_ = s;
      return s;
    }
  }
  /**
   * <pre>
   * The name of the dispute. This uniquely identifies the dispute.
   * Format of name is
   * projects/{project_id}/disputes/{dispute_id}.
   * </pre>
   *
   * <code>string name = 1;</code>
   * @return The bytes for name.
   */
  @java.lang.Override
  public com.google.protobuf.ByteString
      getNameBytes() {
    java.lang.Object ref = name_;
    if (ref instanceof java.lang.String) {
      com.google.protobuf.ByteString b = 
          com.google.protobuf.ByteString.copyFromUtf8(
              (java.lang.String) ref);
      name_ = b;
      return b;
    } else {
      return (com.google.protobuf.ByteString) ref;
    }
  }

  public static final int RAISE_DISPUTE_ADJUSTMENT_FIELD_NUMBER = 2;
  private com.google.cloud.paymentgateway.issuerswitch.v1.RaiseDisputeAdjustment raiseDisputeAdjustment_;
  /**
   * <pre>
   * The reason for raising the dispute. This maps adjustment flag
   * and reason code for the dispute to `reqAdjFlag` and `reqAdjCode` in
   * complaint request respectively while raising a dispute.
   * </pre>
   *
   * <code>.google.cloud.paymentgateway.issuerswitch.v1.RaiseDisputeAdjustment raise_dispute_adjustment = 2;</code>
   * @return Whether the raiseDisputeAdjustment field is set.
   */
  @java.lang.Override
  public boolean hasRaiseDisputeAdjustment() {
    return raiseDisputeAdjustment_ != null;
  }
  /**
   * <pre>
   * The reason for raising the dispute. This maps adjustment flag
   * and reason code for the dispute to `reqAdjFlag` and `reqAdjCode` in
   * complaint request respectively while raising a dispute.
   * </pre>
   *
   * <code>.google.cloud.paymentgateway.issuerswitch.v1.RaiseDisputeAdjustment raise_dispute_adjustment = 2;</code>
   * @return The raiseDisputeAdjustment.
   */
  @java.lang.Override
  public com.google.cloud.paymentgateway.issuerswitch.v1.RaiseDisputeAdjustment getRaiseDisputeAdjustment() {
    return raiseDisputeAdjustment_ == null ? com.google.cloud.paymentgateway.issuerswitch.v1.RaiseDisputeAdjustment.getDefaultInstance() : raiseDisputeAdjustment_;
  }
  /**
   * <pre>
   * The reason for raising the dispute. This maps adjustment flag
   * and reason code for the dispute to `reqAdjFlag` and `reqAdjCode` in
   * complaint request respectively while raising a dispute.
   * </pre>
   *
   * <code>.google.cloud.paymentgateway.issuerswitch.v1.RaiseDisputeAdjustment raise_dispute_adjustment = 2;</code>
   */
  @java.lang.Override
  public com.google.cloud.paymentgateway.issuerswitch.v1.RaiseDisputeAdjustmentOrBuilder getRaiseDisputeAdjustmentOrBuilder() {
    return getRaiseDisputeAdjustment();
  }

  public static final int DETAILS_FIELD_NUMBER = 4;
  private com.google.cloud.paymentgateway.issuerswitch.v1.CaseDetails details_;
  /**
   * <pre>
   * Required. Details required for raising/resolving dispute.
   * </pre>
   *
   * <code>.google.cloud.paymentgateway.issuerswitch.v1.CaseDetails details = 4 [(.google.api.field_behavior) = REQUIRED];</code>
   * @return Whether the details field is set.
   */
  @java.lang.Override
  public boolean hasDetails() {
    return details_ != null;
  }
  /**
   * <pre>
   * Required. Details required for raising/resolving dispute.
   * </pre>
   *
   * <code>.google.cloud.paymentgateway.issuerswitch.v1.CaseDetails details = 4 [(.google.api.field_behavior) = REQUIRED];</code>
   * @return The details.
   */
  @java.lang.Override
  public com.google.cloud.paymentgateway.issuerswitch.v1.CaseDetails getDetails() {
    return details_ == null ? com.google.cloud.paymentgateway.issuerswitch.v1.CaseDetails.getDefaultInstance() : details_;
  }
  /**
   * <pre>
   * Required. Details required for raising/resolving dispute.
   * </pre>
   *
   * <code>.google.cloud.paymentgateway.issuerswitch.v1.CaseDetails details = 4 [(.google.api.field_behavior) = REQUIRED];</code>
   */
  @java.lang.Override
  public com.google.cloud.paymentgateway.issuerswitch.v1.CaseDetailsOrBuilder getDetailsOrBuilder() {
    return getDetails();
  }

  public static final int RESPONSE_FIELD_NUMBER = 5;
  private com.google.cloud.paymentgateway.issuerswitch.v1.CaseResponse response_;
  /**
   * <pre>
   * Output only. Response to the raised/resolved dispute.
   * </pre>
   *
   * <code>.google.cloud.paymentgateway.issuerswitch.v1.CaseResponse response = 5 [(.google.api.field_behavior) = OUTPUT_ONLY];</code>
   * @return Whether the response field is set.
   */
  @java.lang.Override
  public boolean hasResponse() {
    return response_ != null;
  }
  /**
   * <pre>
   * Output only. Response to the raised/resolved dispute.
   * </pre>
   *
   * <code>.google.cloud.paymentgateway.issuerswitch.v1.CaseResponse response = 5 [(.google.api.field_behavior) = OUTPUT_ONLY];</code>
   * @return The response.
   */
  @java.lang.Override
  public com.google.cloud.paymentgateway.issuerswitch.v1.CaseResponse getResponse() {
    return response_ == null ? com.google.cloud.paymentgateway.issuerswitch.v1.CaseResponse.getDefaultInstance() : response_;
  }
  /**
   * <pre>
   * Output only. Response to the raised/resolved dispute.
   * </pre>
   *
   * <code>.google.cloud.paymentgateway.issuerswitch.v1.CaseResponse response = 5 [(.google.api.field_behavior) = OUTPUT_ONLY];</code>
   */
  @java.lang.Override
  public com.google.cloud.paymentgateway.issuerswitch.v1.CaseResponseOrBuilder getResponseOrBuilder() {
    return getResponse();
  }

  public static final int RESOLVE_DISPUTE_ADJUSTMENT_FIELD_NUMBER = 6;
  private com.google.cloud.paymentgateway.issuerswitch.v1.ResolveDisputeAdjustment resolveDisputeAdjustment_;
  /**
   * <pre>
   * The reason for resolving the dispute. It provides adjustment values while
   * resolving and for already resolved disputes. This maps adjustment flag
   * and reason code for the dispute to `reqAdjFlag` and `reqAdjCode` in
   * dispute request respectively while resolving a dispute.
   * </pre>
   *
   * <code>.google.cloud.paymentgateway.issuerswitch.v1.ResolveDisputeAdjustment resolve_dispute_adjustment = 6;</code>
   * @return Whether the resolveDisputeAdjustment field is set.
   */
  @java.lang.Override
  public boolean hasResolveDisputeAdjustment() {
    return resolveDisputeAdjustment_ != null;
  }
  /**
   * <pre>
   * The reason for resolving the dispute. It provides adjustment values while
   * resolving and for already resolved disputes. This maps adjustment flag
   * and reason code for the dispute to `reqAdjFlag` and `reqAdjCode` in
   * dispute request respectively while resolving a dispute.
   * </pre>
   *
   * <code>.google.cloud.paymentgateway.issuerswitch.v1.ResolveDisputeAdjustment resolve_dispute_adjustment = 6;</code>
   * @return The resolveDisputeAdjustment.
   */
  @java.lang.Override
  public com.google.cloud.paymentgateway.issuerswitch.v1.ResolveDisputeAdjustment getResolveDisputeAdjustment() {
    return resolveDisputeAdjustment_ == null ? com.google.cloud.paymentgateway.issuerswitch.v1.ResolveDisputeAdjustment.getDefaultInstance() : resolveDisputeAdjustment_;
  }
  /**
   * <pre>
   * The reason for resolving the dispute. It provides adjustment values while
   * resolving and for already resolved disputes. This maps adjustment flag
   * and reason code for the dispute to `reqAdjFlag` and `reqAdjCode` in
   * dispute request respectively while resolving a dispute.
   * </pre>
   *
   * <code>.google.cloud.paymentgateway.issuerswitch.v1.ResolveDisputeAdjustment resolve_dispute_adjustment = 6;</code>
   */
  @java.lang.Override
  public com.google.cloud.paymentgateway.issuerswitch.v1.ResolveDisputeAdjustmentOrBuilder getResolveDisputeAdjustmentOrBuilder() {
    return getResolveDisputeAdjustment();
  }

  private byte memoizedIsInitialized = -1;
  @java.lang.Override
  public final boolean isInitialized() {
    byte isInitialized = memoizedIsInitialized;
    if (isInitialized == 1) return true;
    if (isInitialized == 0) return false;

    memoizedIsInitialized = 1;
    return true;
  }

  @java.lang.Override
  public void writeTo(com.google.protobuf.CodedOutputStream output)
                      throws java.io.IOException {
    if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(name_)) {
      com.google.protobuf.GeneratedMessageV3.writeString(output, 1, name_);
    }
    if (raiseDisputeAdjustment_ != null) {
      output.writeMessage(2, getRaiseDisputeAdjustment());
    }
    if (details_ != null) {
      output.writeMessage(4, getDetails());
    }
    if (response_ != null) {
      output.writeMessage(5, getResponse());
    }
    if (resolveDisputeAdjustment_ != null) {
      output.writeMessage(6, getResolveDisputeAdjustment());
    }
    unknownFields.writeTo(output);
  }

  @java.lang.Override
  public int getSerializedSize() {
    int size = memoizedSize;
    if (size != -1) return size;

    size = 0;
    if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(name_)) {
      size += com.google.protobuf.GeneratedMessageV3.computeStringSize(1, name_);
    }
    if (raiseDisputeAdjustment_ != null) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(2, getRaiseDisputeAdjustment());
    }
    if (details_ != null) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(4, getDetails());
    }
    if (response_ != null) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(5, getResponse());
    }
    if (resolveDisputeAdjustment_ != null) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(6, getResolveDisputeAdjustment());
    }
    size += unknownFields.getSerializedSize();
    memoizedSize = size;
    return size;
  }

  @java.lang.Override
  public boolean equals(final java.lang.Object obj) {
    if (obj == this) {
     return true;
    }
    if (!(obj instanceof com.google.cloud.paymentgateway.issuerswitch.v1.Dispute)) {
      return super.equals(obj);
    }
    com.google.cloud.paymentgateway.issuerswitch.v1.Dispute other = (com.google.cloud.paymentgateway.issuerswitch.v1.Dispute) obj;

    if (!getName()
        .equals(other.getName())) return false;
    if (hasRaiseDisputeAdjustment() != other.hasRaiseDisputeAdjustment()) return false;
    if (hasRaiseDisputeAdjustment()) {
      if (!getRaiseDisputeAdjustment()
          .equals(other.getRaiseDisputeAdjustment())) return false;
    }
    if (hasDetails() != other.hasDetails()) return false;
    if (hasDetails()) {
      if (!getDetails()
          .equals(other.getDetails())) return false;
    }
    if (hasResponse() != other.hasResponse()) return false;
    if (hasResponse()) {
      if (!getResponse()
          .equals(other.getResponse())) return false;
    }
    if (hasResolveDisputeAdjustment() != other.hasResolveDisputeAdjustment()) return false;
    if (hasResolveDisputeAdjustment()) {
      if (!getResolveDisputeAdjustment()
          .equals(other.getResolveDisputeAdjustment())) return false;
    }
    if (!unknownFields.equals(other.unknownFields)) return false;
    return true;
  }

  @java.lang.Override
  public int hashCode() {
    if (memoizedHashCode != 0) {
      return memoizedHashCode;
    }
    int hash = 41;
    hash = (19 * hash) + getDescriptor().hashCode();
    hash = (37 * hash) + NAME_FIELD_NUMBER;
    hash = (53 * hash) + getName().hashCode();
    if (hasRaiseDisputeAdjustment()) {
      hash = (37 * hash) + RAISE_DISPUTE_ADJUSTMENT_FIELD_NUMBER;
      hash = (53 * hash) + getRaiseDisputeAdjustment().hashCode();
    }
    if (hasDetails()) {
      hash = (37 * hash) + DETAILS_FIELD_NUMBER;
      hash = (53 * hash) + getDetails().hashCode();
    }
    if (hasResponse()) {
      hash = (37 * hash) + RESPONSE_FIELD_NUMBER;
      hash = (53 * hash) + getResponse().hashCode();
    }
    if (hasResolveDisputeAdjustment()) {
      hash = (37 * hash) + RESOLVE_DISPUTE_ADJUSTMENT_FIELD_NUMBER;
      hash = (53 * hash) + getResolveDisputeAdjustment().hashCode();
    }
    hash = (29 * hash) + unknownFields.hashCode();
    memoizedHashCode = hash;
    return hash;
  }

  public static com.google.cloud.paymentgateway.issuerswitch.v1.Dispute parseFrom(
      java.nio.ByteBuffer data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static com.google.cloud.paymentgateway.issuerswitch.v1.Dispute parseFrom(
      java.nio.ByteBuffer data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static com.google.cloud.paymentgateway.issuerswitch.v1.Dispute parseFrom(
      com.google.protobuf.ByteString data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static com.google.cloud.paymentgateway.issuerswitch.v1.Dispute parseFrom(
      com.google.protobuf.ByteString data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static com.google.cloud.paymentgateway.issuerswitch.v1.Dispute parseFrom(byte[] data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static com.google.cloud.paymentgateway.issuerswitch.v1.Dispute parseFrom(
      byte[] data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static com.google.cloud.paymentgateway.issuerswitch.v1.Dispute parseFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input);
  }
  public static com.google.cloud.paymentgateway.issuerswitch.v1.Dispute parseFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input, extensionRegistry);
  }
  public static com.google.cloud.paymentgateway.issuerswitch.v1.Dispute parseDelimitedFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseDelimitedWithIOException(PARSER, input);
  }
  public static com.google.cloud.paymentgateway.issuerswitch.v1.Dispute parseDelimitedFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
  }
  public static com.google.cloud.paymentgateway.issuerswitch.v1.Dispute parseFrom(
      com.google.protobuf.CodedInputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input);
  }
  public static com.google.cloud.paymentgateway.issuerswitch.v1.Dispute parseFrom(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input, extensionRegistry);
  }

  @java.lang.Override
  public Builder newBuilderForType() { return newBuilder(); }
  public static Builder newBuilder() {
    return DEFAULT_INSTANCE.toBuilder();
  }
  public static Builder newBuilder(com.google.cloud.paymentgateway.issuerswitch.v1.Dispute prototype) {
    return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
  }
  @java.lang.Override
  public Builder toBuilder() {
    return this == DEFAULT_INSTANCE
        ? new Builder() : new Builder().mergeFrom(this);
  }

  @java.lang.Override
  protected Builder newBuilderForType(
      com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
    Builder builder = new Builder(parent);
    return builder;
  }
  /**
   * <pre>
   * A dispute processed by the issuer switch.
   * </pre>
   *
   * Protobuf type {@code google.cloud.paymentgateway.issuerswitch.v1.Dispute}
   */
  public static final class Builder extends
      com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
      // @@protoc_insertion_point(builder_implements:google.cloud.paymentgateway.issuerswitch.v1.Dispute)
      com.google.cloud.paymentgateway.issuerswitch.v1.DisputeOrBuilder {
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.google.cloud.paymentgateway.issuerswitch.v1.ResolutionsProto.internal_static_google_cloud_paymentgateway_issuerswitch_v1_Dispute_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.google.cloud.paymentgateway.issuerswitch.v1.ResolutionsProto.internal_static_google_cloud_paymentgateway_issuerswitch_v1_Dispute_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.google.cloud.paymentgateway.issuerswitch.v1.Dispute.class, com.google.cloud.paymentgateway.issuerswitch.v1.Dispute.Builder.class);
    }

    // Construct using com.google.cloud.paymentgateway.issuerswitch.v1.Dispute.newBuilder()
    private Builder() {
      maybeForceBuilderInitialization();
    }

    private Builder(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      super(parent);
      maybeForceBuilderInitialization();
    }
    private void maybeForceBuilderInitialization() {
      if (com.google.protobuf.GeneratedMessageV3
              .alwaysUseFieldBuilders) {
      }
    }
    @java.lang.Override
    public Builder clear() {
      super.clear();
      name_ = "";

      if (raiseDisputeAdjustmentBuilder_ == null) {
        raiseDisputeAdjustment_ = null;
      } else {
        raiseDisputeAdjustment_ = null;
        raiseDisputeAdjustmentBuilder_ = null;
      }
      if (detailsBuilder_ == null) {
        details_ = null;
      } else {
        details_ = null;
        detailsBuilder_ = null;
      }
      if (responseBuilder_ == null) {
        response_ = null;
      } else {
        response_ = null;
        responseBuilder_ = null;
      }
      if (resolveDisputeAdjustmentBuilder_ == null) {
        resolveDisputeAdjustment_ = null;
      } else {
        resolveDisputeAdjustment_ = null;
        resolveDisputeAdjustmentBuilder_ = null;
      }
      return this;
    }

    @java.lang.Override
    public com.google.protobuf.Descriptors.Descriptor
        getDescriptorForType() {
      return com.google.cloud.paymentgateway.issuerswitch.v1.ResolutionsProto.internal_static_google_cloud_paymentgateway_issuerswitch_v1_Dispute_descriptor;
    }

    @java.lang.Override
    public com.google.cloud.paymentgateway.issuerswitch.v1.Dispute getDefaultInstanceForType() {
      return com.google.cloud.paymentgateway.issuerswitch.v1.Dispute.getDefaultInstance();
    }

    @java.lang.Override
    public com.google.cloud.paymentgateway.issuerswitch.v1.Dispute build() {
      com.google.cloud.paymentgateway.issuerswitch.v1.Dispute result = buildPartial();
      if (!result.isInitialized()) {
        throw newUninitializedMessageException(result);
      }
      return result;
    }

    @java.lang.Override
    public com.google.cloud.paymentgateway.issuerswitch.v1.Dispute buildPartial() {
      com.google.cloud.paymentgateway.issuerswitch.v1.Dispute result = new com.google.cloud.paymentgateway.issuerswitch.v1.Dispute(this);
      result.name_ = name_;
      if (raiseDisputeAdjustmentBuilder_ == null) {
        result.raiseDisputeAdjustment_ = raiseDisputeAdjustment_;
      } else {
        result.raiseDisputeAdjustment_ = raiseDisputeAdjustmentBuilder_.build();
      }
      if (detailsBuilder_ == null) {
        result.details_ = details_;
      } else {
        result.details_ = detailsBuilder_.build();
      }
      if (responseBuilder_ == null) {
        result.response_ = response_;
      } else {
        result.response_ = responseBuilder_.build();
      }
      if (resolveDisputeAdjustmentBuilder_ == null) {
        result.resolveDisputeAdjustment_ = resolveDisputeAdjustment_;
      } else {
        result.resolveDisputeAdjustment_ = resolveDisputeAdjustmentBuilder_.build();
      }
      onBuilt();
      return result;
    }

    @java.lang.Override
    public Builder clone() {
      return super.clone();
    }
    @java.lang.Override
    public Builder setField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        java.lang.Object value) {
      return super.setField(field, value);
    }
    @java.lang.Override
    public Builder clearField(
        com.google.protobuf.Descriptors.FieldDescriptor field) {
      return super.clearField(field);
    }
    @java.lang.Override
    public Builder clearOneof(
        com.google.protobuf.Descriptors.OneofDescriptor oneof) {
      return super.clearOneof(oneof);
    }
    @java.lang.Override
    public Builder setRepeatedField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        int index, java.lang.Object value) {
      return super.setRepeatedField(field, index, value);
    }
    @java.lang.Override
    public Builder addRepeatedField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        java.lang.Object value) {
      return super.addRepeatedField(field, value);
    }
    @java.lang.Override
    public Builder mergeFrom(com.google.protobuf.Message other) {
      if (other instanceof com.google.cloud.paymentgateway.issuerswitch.v1.Dispute) {
        return mergeFrom((com.google.cloud.paymentgateway.issuerswitch.v1.Dispute)other);
      } else {
        super.mergeFrom(other);
        return this;
      }
    }

    public Builder mergeFrom(com.google.cloud.paymentgateway.issuerswitch.v1.Dispute other) {
      if (other == com.google.cloud.paymentgateway.issuerswitch.v1.Dispute.getDefaultInstance()) return this;
      if (!other.getName().isEmpty()) {
        name_ = other.name_;
        onChanged();
      }
      if (other.hasRaiseDisputeAdjustment()) {
        mergeRaiseDisputeAdjustment(other.getRaiseDisputeAdjustment());
      }
      if (other.hasDetails()) {
        mergeDetails(other.getDetails());
      }
      if (other.hasResponse()) {
        mergeResponse(other.getResponse());
      }
      if (other.hasResolveDisputeAdjustment()) {
        mergeResolveDisputeAdjustment(other.getResolveDisputeAdjustment());
      }
      this.mergeUnknownFields(other.unknownFields);
      onChanged();
      return this;
    }

    @java.lang.Override
    public final boolean isInitialized() {
      return true;
    }

    @java.lang.Override
    public Builder mergeFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      com.google.cloud.paymentgateway.issuerswitch.v1.Dispute parsedMessage = null;
      try {
        parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        parsedMessage = (com.google.cloud.paymentgateway.issuerswitch.v1.Dispute) e.getUnfinishedMessage();
        throw e.unwrapIOException();
      } finally {
        if (parsedMessage != null) {
          mergeFrom(parsedMessage);
        }
      }
      return this;
    }

    private java.lang.Object name_ = "";
    /**
     * <pre>
     * The name of the dispute. This uniquely identifies the dispute.
     * Format of name is
     * projects/{project_id}/disputes/{dispute_id}.
     * </pre>
     *
     * <code>string name = 1;</code>
     * @return The name.
     */
    public java.lang.String getName() {
      java.lang.Object ref = name_;
      if (!(ref instanceof java.lang.String)) {
        com.google.protobuf.ByteString bs =
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        name_ = s;
        return s;
      } else {
        return (java.lang.String) ref;
      }
    }
    /**
     * <pre>
     * The name of the dispute. This uniquely identifies the dispute.
     * Format of name is
     * projects/{project_id}/disputes/{dispute_id}.
     * </pre>
     *
     * <code>string name = 1;</code>
     * @return The bytes for name.
     */
    public com.google.protobuf.ByteString
        getNameBytes() {
      java.lang.Object ref = name_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        name_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }
    /**
     * <pre>
     * The name of the dispute. This uniquely identifies the dispute.
     * Format of name is
     * projects/{project_id}/disputes/{dispute_id}.
     * </pre>
     *
     * <code>string name = 1;</code>
     * @param value The name to set.
     * @return This builder for chaining.
     */
    public Builder setName(
        java.lang.String value) {
      if (value == null) {
    throw new NullPointerException();
  }
  
      name_ = value;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * The name of the dispute. This uniquely identifies the dispute.
     * Format of name is
     * projects/{project_id}/disputes/{dispute_id}.
     * </pre>
     *
     * <code>string name = 1;</code>
     * @return This builder for chaining.
     */
    public Builder clearName() {
      
      name_ = getDefaultInstance().getName();
      onChanged();
      return this;
    }
    /**
     * <pre>
     * The name of the dispute. This uniquely identifies the dispute.
     * Format of name is
     * projects/{project_id}/disputes/{dispute_id}.
     * </pre>
     *
     * <code>string name = 1;</code>
     * @param value The bytes for name to set.
     * @return This builder for chaining.
     */
    public Builder setNameBytes(
        com.google.protobuf.ByteString value) {
      if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
      
      name_ = value;
      onChanged();
      return this;
    }

    private com.google.cloud.paymentgateway.issuerswitch.v1.RaiseDisputeAdjustment raiseDisputeAdjustment_;
    private com.google.protobuf.SingleFieldBuilderV3<
        com.google.cloud.paymentgateway.issuerswitch.v1.RaiseDisputeAdjustment, com.google.cloud.paymentgateway.issuerswitch.v1.RaiseDisputeAdjustment.Builder, com.google.cloud.paymentgateway.issuerswitch.v1.RaiseDisputeAdjustmentOrBuilder> raiseDisputeAdjustmentBuilder_;
    /**
     * <pre>
     * The reason for raising the dispute. This maps adjustment flag
     * and reason code for the dispute to `reqAdjFlag` and `reqAdjCode` in
     * complaint request respectively while raising a dispute.
     * </pre>
     *
     * <code>.google.cloud.paymentgateway.issuerswitch.v1.RaiseDisputeAdjustment raise_dispute_adjustment = 2;</code>
     * @return Whether the raiseDisputeAdjustment field is set.
     */
    public boolean hasRaiseDisputeAdjustment() {
      return raiseDisputeAdjustmentBuilder_ != null || raiseDisputeAdjustment_ != null;
    }
    /**
     * <pre>
     * The reason for raising the dispute. This maps adjustment flag
     * and reason code for the dispute to `reqAdjFlag` and `reqAdjCode` in
     * complaint request respectively while raising a dispute.
     * </pre>
     *
     * <code>.google.cloud.paymentgateway.issuerswitch.v1.RaiseDisputeAdjustment raise_dispute_adjustment = 2;</code>
     * @return The raiseDisputeAdjustment.
     */
    public com.google.cloud.paymentgateway.issuerswitch.v1.RaiseDisputeAdjustment getRaiseDisputeAdjustment() {
      if (raiseDisputeAdjustmentBuilder_ == null) {
        return raiseDisputeAdjustment_ == null ? com.google.cloud.paymentgateway.issuerswitch.v1.RaiseDisputeAdjustment.getDefaultInstance() : raiseDisputeAdjustment_;
      } else {
        return raiseDisputeAdjustmentBuilder_.getMessage();
      }
    }
    /**
     * <pre>
     * The reason for raising the dispute. This maps adjustment flag
     * and reason code for the dispute to `reqAdjFlag` and `reqAdjCode` in
     * complaint request respectively while raising a dispute.
     * </pre>
     *
     * <code>.google.cloud.paymentgateway.issuerswitch.v1.RaiseDisputeAdjustment raise_dispute_adjustment = 2;</code>
     */
    public Builder setRaiseDisputeAdjustment(com.google.cloud.paymentgateway.issuerswitch.v1.RaiseDisputeAdjustment value) {
      if (raiseDisputeAdjustmentBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        raiseDisputeAdjustment_ = value;
        onChanged();
      } else {
        raiseDisputeAdjustmentBuilder_.setMessage(value);
      }

      return this;
    }
    /**
     * <pre>
     * The reason for raising the dispute. This maps adjustment flag
     * and reason code for the dispute to `reqAdjFlag` and `reqAdjCode` in
     * complaint request respectively while raising a dispute.
     * </pre>
     *
     * <code>.google.cloud.paymentgateway.issuerswitch.v1.RaiseDisputeAdjustment raise_dispute_adjustment = 2;</code>
     */
    public Builder setRaiseDisputeAdjustment(
        com.google.cloud.paymentgateway.issuerswitch.v1.RaiseDisputeAdjustment.Builder builderForValue) {
      if (raiseDisputeAdjustmentBuilder_ == null) {
        raiseDisputeAdjustment_ = builderForValue.build();
        onChanged();
      } else {
        raiseDisputeAdjustmentBuilder_.setMessage(builderForValue.build());
      }

      return this;
    }
    /**
     * <pre>
     * The reason for raising the dispute. This maps adjustment flag
     * and reason code for the dispute to `reqAdjFlag` and `reqAdjCode` in
     * complaint request respectively while raising a dispute.
     * </pre>
     *
     * <code>.google.cloud.paymentgateway.issuerswitch.v1.RaiseDisputeAdjustment raise_dispute_adjustment = 2;</code>
     */
    public Builder mergeRaiseDisputeAdjustment(com.google.cloud.paymentgateway.issuerswitch.v1.RaiseDisputeAdjustment value) {
      if (raiseDisputeAdjustmentBuilder_ == null) {
        if (raiseDisputeAdjustment_ != null) {
          raiseDisputeAdjustment_ =
            com.google.cloud.paymentgateway.issuerswitch.v1.RaiseDisputeAdjustment.newBuilder(raiseDisputeAdjustment_).mergeFrom(value).buildPartial();
        } else {
          raiseDisputeAdjustment_ = value;
        }
        onChanged();
      } else {
        raiseDisputeAdjustmentBuilder_.mergeFrom(value);
      }

      return this;
    }
    /**
     * <pre>
     * The reason for raising the dispute. This maps adjustment flag
     * and reason code for the dispute to `reqAdjFlag` and `reqAdjCode` in
     * complaint request respectively while raising a dispute.
     * </pre>
     *
     * <code>.google.cloud.paymentgateway.issuerswitch.v1.RaiseDisputeAdjustment raise_dispute_adjustment = 2;</code>
     */
    public Builder clearRaiseDisputeAdjustment() {
      if (raiseDisputeAdjustmentBuilder_ == null) {
        raiseDisputeAdjustment_ = null;
        onChanged();
      } else {
        raiseDisputeAdjustment_ = null;
        raiseDisputeAdjustmentBuilder_ = null;
      }

      return this;
    }
    /**
     * <pre>
     * The reason for raising the dispute. This maps adjustment flag
     * and reason code for the dispute to `reqAdjFlag` and `reqAdjCode` in
     * complaint request respectively while raising a dispute.
     * </pre>
     *
     * <code>.google.cloud.paymentgateway.issuerswitch.v1.RaiseDisputeAdjustment raise_dispute_adjustment = 2;</code>
     */
    public com.google.cloud.paymentgateway.issuerswitch.v1.RaiseDisputeAdjustment.Builder getRaiseDisputeAdjustmentBuilder() {
      
      onChanged();
      return getRaiseDisputeAdjustmentFieldBuilder().getBuilder();
    }
    /**
     * <pre>
     * The reason for raising the dispute. This maps adjustment flag
     * and reason code for the dispute to `reqAdjFlag` and `reqAdjCode` in
     * complaint request respectively while raising a dispute.
     * </pre>
     *
     * <code>.google.cloud.paymentgateway.issuerswitch.v1.RaiseDisputeAdjustment raise_dispute_adjustment = 2;</code>
     */
    public com.google.cloud.paymentgateway.issuerswitch.v1.RaiseDisputeAdjustmentOrBuilder getRaiseDisputeAdjustmentOrBuilder() {
      if (raiseDisputeAdjustmentBuilder_ != null) {
        return raiseDisputeAdjustmentBuilder_.getMessageOrBuilder();
      } else {
        return raiseDisputeAdjustment_ == null ?
            com.google.cloud.paymentgateway.issuerswitch.v1.RaiseDisputeAdjustment.getDefaultInstance() : raiseDisputeAdjustment_;
      }
    }
    /**
     * <pre>
     * The reason for raising the dispute. This maps adjustment flag
     * and reason code for the dispute to `reqAdjFlag` and `reqAdjCode` in
     * complaint request respectively while raising a dispute.
     * </pre>
     *
     * <code>.google.cloud.paymentgateway.issuerswitch.v1.RaiseDisputeAdjustment raise_dispute_adjustment = 2;</code>
     */
    private com.google.protobuf.SingleFieldBuilderV3<
        com.google.cloud.paymentgateway.issuerswitch.v1.RaiseDisputeAdjustment, com.google.cloud.paymentgateway.issuerswitch.v1.RaiseDisputeAdjustment.Builder, com.google.cloud.paymentgateway.issuerswitch.v1.RaiseDisputeAdjustmentOrBuilder> 
        getRaiseDisputeAdjustmentFieldBuilder() {
      if (raiseDisputeAdjustmentBuilder_ == null) {
        raiseDisputeAdjustmentBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
            com.google.cloud.paymentgateway.issuerswitch.v1.RaiseDisputeAdjustment, com.google.cloud.paymentgateway.issuerswitch.v1.RaiseDisputeAdjustment.Builder, com.google.cloud.paymentgateway.issuerswitch.v1.RaiseDisputeAdjustmentOrBuilder>(
                getRaiseDisputeAdjustment(),
                getParentForChildren(),
                isClean());
        raiseDisputeAdjustment_ = null;
      }
      return raiseDisputeAdjustmentBuilder_;
    }

    private com.google.cloud.paymentgateway.issuerswitch.v1.CaseDetails details_;
    private com.google.protobuf.SingleFieldBuilderV3<
        com.google.cloud.paymentgateway.issuerswitch.v1.CaseDetails, com.google.cloud.paymentgateway.issuerswitch.v1.CaseDetails.Builder, com.google.cloud.paymentgateway.issuerswitch.v1.CaseDetailsOrBuilder> detailsBuilder_;
    /**
     * <pre>
     * Required. Details required for raising/resolving dispute.
     * </pre>
     *
     * <code>.google.cloud.paymentgateway.issuerswitch.v1.CaseDetails details = 4 [(.google.api.field_behavior) = REQUIRED];</code>
     * @return Whether the details field is set.
     */
    public boolean hasDetails() {
      return detailsBuilder_ != null || details_ != null;
    }
    /**
     * <pre>
     * Required. Details required for raising/resolving dispute.
     * </pre>
     *
     * <code>.google.cloud.paymentgateway.issuerswitch.v1.CaseDetails details = 4 [(.google.api.field_behavior) = REQUIRED];</code>
     * @return The details.
     */
    public com.google.cloud.paymentgateway.issuerswitch.v1.CaseDetails getDetails() {
      if (detailsBuilder_ == null) {
        return details_ == null ? com.google.cloud.paymentgateway.issuerswitch.v1.CaseDetails.getDefaultInstance() : details_;
      } else {
        return detailsBuilder_.getMessage();
      }
    }
    /**
     * <pre>
     * Required. Details required for raising/resolving dispute.
     * </pre>
     *
     * <code>.google.cloud.paymentgateway.issuerswitch.v1.CaseDetails details = 4 [(.google.api.field_behavior) = REQUIRED];</code>
     */
    public Builder setDetails(com.google.cloud.paymentgateway.issuerswitch.v1.CaseDetails value) {
      if (detailsBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        details_ = value;
        onChanged();
      } else {
        detailsBuilder_.setMessage(value);
      }

      return this;
    }
    /**
     * <pre>
     * Required. Details required for raising/resolving dispute.
     * </pre>
     *
     * <code>.google.cloud.paymentgateway.issuerswitch.v1.CaseDetails details = 4 [(.google.api.field_behavior) = REQUIRED];</code>
     */
    public Builder setDetails(
        com.google.cloud.paymentgateway.issuerswitch.v1.CaseDetails.Builder builderForValue) {
      if (detailsBuilder_ == null) {
        details_ = builderForValue.build();
        onChanged();
      } else {
        detailsBuilder_.setMessage(builderForValue.build());
      }

      return this;
    }
    /**
     * <pre>
     * Required. Details required for raising/resolving dispute.
     * </pre>
     *
     * <code>.google.cloud.paymentgateway.issuerswitch.v1.CaseDetails details = 4 [(.google.api.field_behavior) = REQUIRED];</code>
     */
    public Builder mergeDetails(com.google.cloud.paymentgateway.issuerswitch.v1.CaseDetails value) {
      if (detailsBuilder_ == null) {
        if (details_ != null) {
          details_ =
            com.google.cloud.paymentgateway.issuerswitch.v1.CaseDetails.newBuilder(details_).mergeFrom(value).buildPartial();
        } else {
          details_ = value;
        }
        onChanged();
      } else {
        detailsBuilder_.mergeFrom(value);
      }

      return this;
    }
    /**
     * <pre>
     * Required. Details required for raising/resolving dispute.
     * </pre>
     *
     * <code>.google.cloud.paymentgateway.issuerswitch.v1.CaseDetails details = 4 [(.google.api.field_behavior) = REQUIRED];</code>
     */
    public Builder clearDetails() {
      if (detailsBuilder_ == null) {
        details_ = null;
        onChanged();
      } else {
        details_ = null;
        detailsBuilder_ = null;
      }

      return this;
    }
    /**
     * <pre>
     * Required. Details required for raising/resolving dispute.
     * </pre>
     *
     * <code>.google.cloud.paymentgateway.issuerswitch.v1.CaseDetails details = 4 [(.google.api.field_behavior) = REQUIRED];</code>
     */
    public com.google.cloud.paymentgateway.issuerswitch.v1.CaseDetails.Builder getDetailsBuilder() {
      
      onChanged();
      return getDetailsFieldBuilder().getBuilder();
    }
    /**
     * <pre>
     * Required. Details required for raising/resolving dispute.
     * </pre>
     *
     * <code>.google.cloud.paymentgateway.issuerswitch.v1.CaseDetails details = 4 [(.google.api.field_behavior) = REQUIRED];</code>
     */
    public com.google.cloud.paymentgateway.issuerswitch.v1.CaseDetailsOrBuilder getDetailsOrBuilder() {
      if (detailsBuilder_ != null) {
        return detailsBuilder_.getMessageOrBuilder();
      } else {
        return details_ == null ?
            com.google.cloud.paymentgateway.issuerswitch.v1.CaseDetails.getDefaultInstance() : details_;
      }
    }
    /**
     * <pre>
     * Required. Details required for raising/resolving dispute.
     * </pre>
     *
     * <code>.google.cloud.paymentgateway.issuerswitch.v1.CaseDetails details = 4 [(.google.api.field_behavior) = REQUIRED];</code>
     */
    private com.google.protobuf.SingleFieldBuilderV3<
        com.google.cloud.paymentgateway.issuerswitch.v1.CaseDetails, com.google.cloud.paymentgateway.issuerswitch.v1.CaseDetails.Builder, com.google.cloud.paymentgateway.issuerswitch.v1.CaseDetailsOrBuilder> 
        getDetailsFieldBuilder() {
      if (detailsBuilder_ == null) {
        detailsBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
            com.google.cloud.paymentgateway.issuerswitch.v1.CaseDetails, com.google.cloud.paymentgateway.issuerswitch.v1.CaseDetails.Builder, com.google.cloud.paymentgateway.issuerswitch.v1.CaseDetailsOrBuilder>(
                getDetails(),
                getParentForChildren(),
                isClean());
        details_ = null;
      }
      return detailsBuilder_;
    }

    private com.google.cloud.paymentgateway.issuerswitch.v1.CaseResponse response_;
    private com.google.protobuf.SingleFieldBuilderV3<
        com.google.cloud.paymentgateway.issuerswitch.v1.CaseResponse, com.google.cloud.paymentgateway.issuerswitch.v1.CaseResponse.Builder, com.google.cloud.paymentgateway.issuerswitch.v1.CaseResponseOrBuilder> responseBuilder_;
    /**
     * <pre>
     * Output only. Response to the raised/resolved dispute.
     * </pre>
     *
     * <code>.google.cloud.paymentgateway.issuerswitch.v1.CaseResponse response = 5 [(.google.api.field_behavior) = OUTPUT_ONLY];</code>
     * @return Whether the response field is set.
     */
    public boolean hasResponse() {
      return responseBuilder_ != null || response_ != null;
    }
    /**
     * <pre>
     * Output only. Response to the raised/resolved dispute.
     * </pre>
     *
     * <code>.google.cloud.paymentgateway.issuerswitch.v1.CaseResponse response = 5 [(.google.api.field_behavior) = OUTPUT_ONLY];</code>
     * @return The response.
     */
    public com.google.cloud.paymentgateway.issuerswitch.v1.CaseResponse getResponse() {
      if (responseBuilder_ == null) {
        return response_ == null ? com.google.cloud.paymentgateway.issuerswitch.v1.CaseResponse.getDefaultInstance() : response_;
      } else {
        return responseBuilder_.getMessage();
      }
    }
    /**
     * <pre>
     * Output only. Response to the raised/resolved dispute.
     * </pre>
     *
     * <code>.google.cloud.paymentgateway.issuerswitch.v1.CaseResponse response = 5 [(.google.api.field_behavior) = OUTPUT_ONLY];</code>
     */
    public Builder setResponse(com.google.cloud.paymentgateway.issuerswitch.v1.CaseResponse value) {
      if (responseBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        response_ = value;
        onChanged();
      } else {
        responseBuilder_.setMessage(value);
      }

      return this;
    }
    /**
     * <pre>
     * Output only. Response to the raised/resolved dispute.
     * </pre>
     *
     * <code>.google.cloud.paymentgateway.issuerswitch.v1.CaseResponse response = 5 [(.google.api.field_behavior) = OUTPUT_ONLY];</code>
     */
    public Builder setResponse(
        com.google.cloud.paymentgateway.issuerswitch.v1.CaseResponse.Builder builderForValue) {
      if (responseBuilder_ == null) {
        response_ = builderForValue.build();
        onChanged();
      } else {
        responseBuilder_.setMessage(builderForValue.build());
      }

      return this;
    }
    /**
     * <pre>
     * Output only. Response to the raised/resolved dispute.
     * </pre>
     *
     * <code>.google.cloud.paymentgateway.issuerswitch.v1.CaseResponse response = 5 [(.google.api.field_behavior) = OUTPUT_ONLY];</code>
     */
    public Builder mergeResponse(com.google.cloud.paymentgateway.issuerswitch.v1.CaseResponse value) {
      if (responseBuilder_ == null) {
        if (response_ != null) {
          response_ =
            com.google.cloud.paymentgateway.issuerswitch.v1.CaseResponse.newBuilder(response_).mergeFrom(value).buildPartial();
        } else {
          response_ = value;
        }
        onChanged();
      } else {
        responseBuilder_.mergeFrom(value);
      }

      return this;
    }
    /**
     * <pre>
     * Output only. Response to the raised/resolved dispute.
     * </pre>
     *
     * <code>.google.cloud.paymentgateway.issuerswitch.v1.CaseResponse response = 5 [(.google.api.field_behavior) = OUTPUT_ONLY];</code>
     */
    public Builder clearResponse() {
      if (responseBuilder_ == null) {
        response_ = null;
        onChanged();
      } else {
        response_ = null;
        responseBuilder_ = null;
      }

      return this;
    }
    /**
     * <pre>
     * Output only. Response to the raised/resolved dispute.
     * </pre>
     *
     * <code>.google.cloud.paymentgateway.issuerswitch.v1.CaseResponse response = 5 [(.google.api.field_behavior) = OUTPUT_ONLY];</code>
     */
    public com.google.cloud.paymentgateway.issuerswitch.v1.CaseResponse.Builder getResponseBuilder() {
      
      onChanged();
      return getResponseFieldBuilder().getBuilder();
    }
    /**
     * <pre>
     * Output only. Response to the raised/resolved dispute.
     * </pre>
     *
     * <code>.google.cloud.paymentgateway.issuerswitch.v1.CaseResponse response = 5 [(.google.api.field_behavior) = OUTPUT_ONLY];</code>
     */
    public com.google.cloud.paymentgateway.issuerswitch.v1.CaseResponseOrBuilder getResponseOrBuilder() {
      if (responseBuilder_ != null) {
        return responseBuilder_.getMessageOrBuilder();
      } else {
        return response_ == null ?
            com.google.cloud.paymentgateway.issuerswitch.v1.CaseResponse.getDefaultInstance() : response_;
      }
    }
    /**
     * <pre>
     * Output only. Response to the raised/resolved dispute.
     * </pre>
     *
     * <code>.google.cloud.paymentgateway.issuerswitch.v1.CaseResponse response = 5 [(.google.api.field_behavior) = OUTPUT_ONLY];</code>
     */
    private com.google.protobuf.SingleFieldBuilderV3<
        com.google.cloud.paymentgateway.issuerswitch.v1.CaseResponse, com.google.cloud.paymentgateway.issuerswitch.v1.CaseResponse.Builder, com.google.cloud.paymentgateway.issuerswitch.v1.CaseResponseOrBuilder> 
        getResponseFieldBuilder() {
      if (responseBuilder_ == null) {
        responseBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
            com.google.cloud.paymentgateway.issuerswitch.v1.CaseResponse, com.google.cloud.paymentgateway.issuerswitch.v1.CaseResponse.Builder, com.google.cloud.paymentgateway.issuerswitch.v1.CaseResponseOrBuilder>(
                getResponse(),
                getParentForChildren(),
                isClean());
        response_ = null;
      }
      return responseBuilder_;
    }

    private com.google.cloud.paymentgateway.issuerswitch.v1.ResolveDisputeAdjustment resolveDisputeAdjustment_;
    private com.google.protobuf.SingleFieldBuilderV3<
        com.google.cloud.paymentgateway.issuerswitch.v1.ResolveDisputeAdjustment, com.google.cloud.paymentgateway.issuerswitch.v1.ResolveDisputeAdjustment.Builder, com.google.cloud.paymentgateway.issuerswitch.v1.ResolveDisputeAdjustmentOrBuilder> resolveDisputeAdjustmentBuilder_;
    /**
     * <pre>
     * The reason for resolving the dispute. It provides adjustment values while
     * resolving and for already resolved disputes. This maps adjustment flag
     * and reason code for the dispute to `reqAdjFlag` and `reqAdjCode` in
     * dispute request respectively while resolving a dispute.
     * </pre>
     *
     * <code>.google.cloud.paymentgateway.issuerswitch.v1.ResolveDisputeAdjustment resolve_dispute_adjustment = 6;</code>
     * @return Whether the resolveDisputeAdjustment field is set.
     */
    public boolean hasResolveDisputeAdjustment() {
      return resolveDisputeAdjustmentBuilder_ != null || resolveDisputeAdjustment_ != null;
    }
    /**
     * <pre>
     * The reason for resolving the dispute. It provides adjustment values while
     * resolving and for already resolved disputes. This maps adjustment flag
     * and reason code for the dispute to `reqAdjFlag` and `reqAdjCode` in
     * dispute request respectively while resolving a dispute.
     * </pre>
     *
     * <code>.google.cloud.paymentgateway.issuerswitch.v1.ResolveDisputeAdjustment resolve_dispute_adjustment = 6;</code>
     * @return The resolveDisputeAdjustment.
     */
    public com.google.cloud.paymentgateway.issuerswitch.v1.ResolveDisputeAdjustment getResolveDisputeAdjustment() {
      if (resolveDisputeAdjustmentBuilder_ == null) {
        return resolveDisputeAdjustment_ == null ? com.google.cloud.paymentgateway.issuerswitch.v1.ResolveDisputeAdjustment.getDefaultInstance() : resolveDisputeAdjustment_;
      } else {
        return resolveDisputeAdjustmentBuilder_.getMessage();
      }
    }
    /**
     * <pre>
     * The reason for resolving the dispute. It provides adjustment values while
     * resolving and for already resolved disputes. This maps adjustment flag
     * and reason code for the dispute to `reqAdjFlag` and `reqAdjCode` in
     * dispute request respectively while resolving a dispute.
     * </pre>
     *
     * <code>.google.cloud.paymentgateway.issuerswitch.v1.ResolveDisputeAdjustment resolve_dispute_adjustment = 6;</code>
     */
    public Builder setResolveDisputeAdjustment(com.google.cloud.paymentgateway.issuerswitch.v1.ResolveDisputeAdjustment value) {
      if (resolveDisputeAdjustmentBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        resolveDisputeAdjustment_ = value;
        onChanged();
      } else {
        resolveDisputeAdjustmentBuilder_.setMessage(value);
      }

      return this;
    }
    /**
     * <pre>
     * The reason for resolving the dispute. It provides adjustment values while
     * resolving and for already resolved disputes. This maps adjustment flag
     * and reason code for the dispute to `reqAdjFlag` and `reqAdjCode` in
     * dispute request respectively while resolving a dispute.
     * </pre>
     *
     * <code>.google.cloud.paymentgateway.issuerswitch.v1.ResolveDisputeAdjustment resolve_dispute_adjustment = 6;</code>
     */
    public Builder setResolveDisputeAdjustment(
        com.google.cloud.paymentgateway.issuerswitch.v1.ResolveDisputeAdjustment.Builder builderForValue) {
      if (resolveDisputeAdjustmentBuilder_ == null) {
        resolveDisputeAdjustment_ = builderForValue.build();
        onChanged();
      } else {
        resolveDisputeAdjustmentBuilder_.setMessage(builderForValue.build());
      }

      return this;
    }
    /**
     * <pre>
     * The reason for resolving the dispute. It provides adjustment values while
     * resolving and for already resolved disputes. This maps adjustment flag
     * and reason code for the dispute to `reqAdjFlag` and `reqAdjCode` in
     * dispute request respectively while resolving a dispute.
     * </pre>
     *
     * <code>.google.cloud.paymentgateway.issuerswitch.v1.ResolveDisputeAdjustment resolve_dispute_adjustment = 6;</code>
     */
    public Builder mergeResolveDisputeAdjustment(com.google.cloud.paymentgateway.issuerswitch.v1.ResolveDisputeAdjustment value) {
      if (resolveDisputeAdjustmentBuilder_ == null) {
        if (resolveDisputeAdjustment_ != null) {
          resolveDisputeAdjustment_ =
            com.google.cloud.paymentgateway.issuerswitch.v1.ResolveDisputeAdjustment.newBuilder(resolveDisputeAdjustment_).mergeFrom(value).buildPartial();
        } else {
          resolveDisputeAdjustment_ = value;
        }
        onChanged();
      } else {
        resolveDisputeAdjustmentBuilder_.mergeFrom(value);
      }

      return this;
    }
    /**
     * <pre>
     * The reason for resolving the dispute. It provides adjustment values while
     * resolving and for already resolved disputes. This maps adjustment flag
     * and reason code for the dispute to `reqAdjFlag` and `reqAdjCode` in
     * dispute request respectively while resolving a dispute.
     * </pre>
     *
     * <code>.google.cloud.paymentgateway.issuerswitch.v1.ResolveDisputeAdjustment resolve_dispute_adjustment = 6;</code>
     */
    public Builder clearResolveDisputeAdjustment() {
      if (resolveDisputeAdjustmentBuilder_ == null) {
        resolveDisputeAdjustment_ = null;
        onChanged();
      } else {
        resolveDisputeAdjustment_ = null;
        resolveDisputeAdjustmentBuilder_ = null;
      }

      return this;
    }
    /**
     * <pre>
     * The reason for resolving the dispute. It provides adjustment values while
     * resolving and for already resolved disputes. This maps adjustment flag
     * and reason code for the dispute to `reqAdjFlag` and `reqAdjCode` in
     * dispute request respectively while resolving a dispute.
     * </pre>
     *
     * <code>.google.cloud.paymentgateway.issuerswitch.v1.ResolveDisputeAdjustment resolve_dispute_adjustment = 6;</code>
     */
    public com.google.cloud.paymentgateway.issuerswitch.v1.ResolveDisputeAdjustment.Builder getResolveDisputeAdjustmentBuilder() {
      
      onChanged();
      return getResolveDisputeAdjustmentFieldBuilder().getBuilder();
    }
    /**
     * <pre>
     * The reason for resolving the dispute. It provides adjustment values while
     * resolving and for already resolved disputes. This maps adjustment flag
     * and reason code for the dispute to `reqAdjFlag` and `reqAdjCode` in
     * dispute request respectively while resolving a dispute.
     * </pre>
     *
     * <code>.google.cloud.paymentgateway.issuerswitch.v1.ResolveDisputeAdjustment resolve_dispute_adjustment = 6;</code>
     */
    public com.google.cloud.paymentgateway.issuerswitch.v1.ResolveDisputeAdjustmentOrBuilder getResolveDisputeAdjustmentOrBuilder() {
      if (resolveDisputeAdjustmentBuilder_ != null) {
        return resolveDisputeAdjustmentBuilder_.getMessageOrBuilder();
      } else {
        return resolveDisputeAdjustment_ == null ?
            com.google.cloud.paymentgateway.issuerswitch.v1.ResolveDisputeAdjustment.getDefaultInstance() : resolveDisputeAdjustment_;
      }
    }
    /**
     * <pre>
     * The reason for resolving the dispute. It provides adjustment values while
     * resolving and for already resolved disputes. This maps adjustment flag
     * and reason code for the dispute to `reqAdjFlag` and `reqAdjCode` in
     * dispute request respectively while resolving a dispute.
     * </pre>
     *
     * <code>.google.cloud.paymentgateway.issuerswitch.v1.ResolveDisputeAdjustment resolve_dispute_adjustment = 6;</code>
     */
    private com.google.protobuf.SingleFieldBuilderV3<
        com.google.cloud.paymentgateway.issuerswitch.v1.ResolveDisputeAdjustment, com.google.cloud.paymentgateway.issuerswitch.v1.ResolveDisputeAdjustment.Builder, com.google.cloud.paymentgateway.issuerswitch.v1.ResolveDisputeAdjustmentOrBuilder> 
        getResolveDisputeAdjustmentFieldBuilder() {
      if (resolveDisputeAdjustmentBuilder_ == null) {
        resolveDisputeAdjustmentBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
            com.google.cloud.paymentgateway.issuerswitch.v1.ResolveDisputeAdjustment, com.google.cloud.paymentgateway.issuerswitch.v1.ResolveDisputeAdjustment.Builder, com.google.cloud.paymentgateway.issuerswitch.v1.ResolveDisputeAdjustmentOrBuilder>(
                getResolveDisputeAdjustment(),
                getParentForChildren(),
                isClean());
        resolveDisputeAdjustment_ = null;
      }
      return resolveDisputeAdjustmentBuilder_;
    }
    @java.lang.Override
    public final Builder setUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return super.setUnknownFields(unknownFields);
    }

    @java.lang.Override
    public final Builder mergeUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return super.mergeUnknownFields(unknownFields);
    }


    // @@protoc_insertion_point(builder_scope:google.cloud.paymentgateway.issuerswitch.v1.Dispute)
  }

  // @@protoc_insertion_point(class_scope:google.cloud.paymentgateway.issuerswitch.v1.Dispute)
  private static final com.google.cloud.paymentgateway.issuerswitch.v1.Dispute DEFAULT_INSTANCE;
  static {
    DEFAULT_INSTANCE = new com.google.cloud.paymentgateway.issuerswitch.v1.Dispute();
  }

  public static com.google.cloud.paymentgateway.issuerswitch.v1.Dispute getDefaultInstance() {
    return DEFAULT_INSTANCE;
  }

  private static final com.google.protobuf.Parser<Dispute>
      PARSER = new com.google.protobuf.AbstractParser<Dispute>() {
    @java.lang.Override
    public Dispute parsePartialFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return new Dispute(input, extensionRegistry);
    }
  };

  public static com.google.protobuf.Parser<Dispute> parser() {
    return PARSER;
  }

  @java.lang.Override
  public com.google.protobuf.Parser<Dispute> getParserForType() {
    return PARSER;
  }

  @java.lang.Override
  public com.google.cloud.paymentgateway.issuerswitch.v1.Dispute getDefaultInstanceForType() {
    return DEFAULT_INSTANCE;
  }

}

