// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: google/cloud/paymentgateway/issuerswitch/v1/resolutions.proto

package com.google.cloud.paymentgateway.issuerswitch.v1;

/**
 * <pre>
 * The adjusment flag and reason code for resolving the complaint.
 * </pre>
 *
 * Protobuf type {@code google.cloud.paymentgateway.issuerswitch.v1.ResolveComplaintAdjustment}
 */
public final class ResolveComplaintAdjustment extends
    com.google.protobuf.GeneratedMessageV3 implements
    // @@protoc_insertion_point(message_implements:google.cloud.paymentgateway.issuerswitch.v1.ResolveComplaintAdjustment)
    ResolveComplaintAdjustmentOrBuilder {
private static final long serialVersionUID = 0L;
  // Use ResolveComplaintAdjustment.newBuilder() to construct.
  private ResolveComplaintAdjustment(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
    super(builder);
  }
  private ResolveComplaintAdjustment() {
    adjustmentFlag_ = 0;
    adjustmentCode_ = 0;
  }

  @java.lang.Override
  @SuppressWarnings({"unused"})
  protected java.lang.Object newInstance(
      UnusedPrivateParameter unused) {
    return new ResolveComplaintAdjustment();
  }

  @java.lang.Override
  public final com.google.protobuf.UnknownFieldSet
  getUnknownFields() {
    return this.unknownFields;
  }
  private ResolveComplaintAdjustment(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    this();
    if (extensionRegistry == null) {
      throw new java.lang.NullPointerException();
    }
    com.google.protobuf.UnknownFieldSet.Builder unknownFields =
        com.google.protobuf.UnknownFieldSet.newBuilder();
    try {
      boolean done = false;
      while (!done) {
        int tag = input.readTag();
        switch (tag) {
          case 0:
            done = true;
            break;
          case 8: {
            int rawValue = input.readEnum();

            adjustmentFlag_ = rawValue;
            break;
          }
          case 16: {
            int rawValue = input.readEnum();

            adjustmentCode_ = rawValue;
            break;
          }
          default: {
            if (!parseUnknownField(
                input, unknownFields, extensionRegistry, tag)) {
              done = true;
            }
            break;
          }
        }
      }
    } catch (com.google.protobuf.InvalidProtocolBufferException e) {
      throw e.setUnfinishedMessage(this);
    } catch (com.google.protobuf.UninitializedMessageException e) {
      throw e.asInvalidProtocolBufferException().setUnfinishedMessage(this);
    } catch (java.io.IOException e) {
      throw new com.google.protobuf.InvalidProtocolBufferException(
          e).setUnfinishedMessage(this);
    } finally {
      this.unknownFields = unknownFields.build();
      makeExtensionsImmutable();
    }
  }
  public static final com.google.protobuf.Descriptors.Descriptor
      getDescriptor() {
    return com.google.cloud.paymentgateway.issuerswitch.v1.ResolutionsProto.internal_static_google_cloud_paymentgateway_issuerswitch_v1_ResolveComplaintAdjustment_descriptor;
  }

  @java.lang.Override
  protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internalGetFieldAccessorTable() {
    return com.google.cloud.paymentgateway.issuerswitch.v1.ResolutionsProto.internal_static_google_cloud_paymentgateway_issuerswitch_v1_ResolveComplaintAdjustment_fieldAccessorTable
        .ensureFieldAccessorsInitialized(
            com.google.cloud.paymentgateway.issuerswitch.v1.ResolveComplaintAdjustment.class, com.google.cloud.paymentgateway.issuerswitch.v1.ResolveComplaintAdjustment.Builder.class);
  }

  /**
   * <pre>
   * The adjusment flag for resolving the complaint.
   * </pre>
   *
   * Protobuf enum {@code google.cloud.paymentgateway.issuerswitch.v1.ResolveComplaintAdjustment.AdjustmentFlag}
   */
  public enum AdjustmentFlag
      implements com.google.protobuf.ProtocolMessageEnum {
    /**
     * <pre>
     * Unspecified adjustment flag.
     * </pre>
     *
     * <code>ADJUSTMENT_FLAG_UNSPECIFIED = 0;</code>
     */
    ADJUSTMENT_FLAG_UNSPECIFIED(0),
    /**
     * <pre>
     * Debit Reversal Confirmation. This flag maps to the `DRC` adjustment flag
     * as defined in NPCI's `UDIR` specification.
     * </pre>
     *
     * <code>DEBIT_REVERSAL_CONFIRMATION = 1;</code>
     */
    DEBIT_REVERSAL_CONFIRMATION(1),
    /**
     * <pre>
     * Return. This flag maps to the `RET` adjustment flag as defined in NPCI's
     * `UDIR` specification.
     * </pre>
     *
     * <code>RETURN = 2;</code>
     */
    RETURN(2),
    /**
     * <pre>
     * Refund Reversal Confirmation. This flag maps to the `RRC` adjustment
     * flag as defined in NPCI's `UDIR` specification.
     * </pre>
     *
     * <code>REFUND_REVERSAL_CONFIRMATION = 3;</code>
     */
    REFUND_REVERSAL_CONFIRMATION(3),
    /**
     * <pre>
     * Transaction Credit Confirmation. This flag maps to the `TCC` adjustment
     * flag as defined in NPCI's `UDIR` specification.
     * </pre>
     *
     * <code>TRANSACTION_CREDIT_CONFIRMATION = 4;</code>
     */
    TRANSACTION_CREDIT_CONFIRMATION(4),
    UNRECOGNIZED(-1),
    ;

    /**
     * <pre>
     * Unspecified adjustment flag.
     * </pre>
     *
     * <code>ADJUSTMENT_FLAG_UNSPECIFIED = 0;</code>
     */
    public static final int ADJUSTMENT_FLAG_UNSPECIFIED_VALUE = 0;
    /**
     * <pre>
     * Debit Reversal Confirmation. This flag maps to the `DRC` adjustment flag
     * as defined in NPCI's `UDIR` specification.
     * </pre>
     *
     * <code>DEBIT_REVERSAL_CONFIRMATION = 1;</code>
     */
    public static final int DEBIT_REVERSAL_CONFIRMATION_VALUE = 1;
    /**
     * <pre>
     * Return. This flag maps to the `RET` adjustment flag as defined in NPCI's
     * `UDIR` specification.
     * </pre>
     *
     * <code>RETURN = 2;</code>
     */
    public static final int RETURN_VALUE = 2;
    /**
     * <pre>
     * Refund Reversal Confirmation. This flag maps to the `RRC` adjustment
     * flag as defined in NPCI's `UDIR` specification.
     * </pre>
     *
     * <code>REFUND_REVERSAL_CONFIRMATION = 3;</code>
     */
    public static final int REFUND_REVERSAL_CONFIRMATION_VALUE = 3;
    /**
     * <pre>
     * Transaction Credit Confirmation. This flag maps to the `TCC` adjustment
     * flag as defined in NPCI's `UDIR` specification.
     * </pre>
     *
     * <code>TRANSACTION_CREDIT_CONFIRMATION = 4;</code>
     */
    public static final int TRANSACTION_CREDIT_CONFIRMATION_VALUE = 4;


    public final int getNumber() {
      if (this == UNRECOGNIZED) {
        throw new java.lang.IllegalArgumentException(
            "Can't get the number of an unknown enum value.");
      }
      return value;
    }

    /**
     * @param value The numeric wire value of the corresponding enum entry.
     * @return The enum associated with the given numeric wire value.
     * @deprecated Use {@link #forNumber(int)} instead.
     */
    @java.lang.Deprecated
    public static AdjustmentFlag valueOf(int value) {
      return forNumber(value);
    }

    /**
     * @param value The numeric wire value of the corresponding enum entry.
     * @return The enum associated with the given numeric wire value.
     */
    public static AdjustmentFlag forNumber(int value) {
      switch (value) {
        case 0: return ADJUSTMENT_FLAG_UNSPECIFIED;
        case 1: return DEBIT_REVERSAL_CONFIRMATION;
        case 2: return RETURN;
        case 3: return REFUND_REVERSAL_CONFIRMATION;
        case 4: return TRANSACTION_CREDIT_CONFIRMATION;
        default: return null;
      }
    }

    public static com.google.protobuf.Internal.EnumLiteMap<AdjustmentFlag>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static final com.google.protobuf.Internal.EnumLiteMap<
        AdjustmentFlag> internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<AdjustmentFlag>() {
            public AdjustmentFlag findValueByNumber(int number) {
              return AdjustmentFlag.forNumber(number);
            }
          };

    public final com.google.protobuf.Descriptors.EnumValueDescriptor
        getValueDescriptor() {
      if (this == UNRECOGNIZED) {
        throw new java.lang.IllegalStateException(
            "Can't get the descriptor of an unrecognized enum value.");
      }
      return getDescriptor().getValues().get(ordinal());
    }
    public final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptorForType() {
      return getDescriptor();
    }
    public static final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptor() {
      return com.google.cloud.paymentgateway.issuerswitch.v1.ResolveComplaintAdjustment.getDescriptor().getEnumTypes().get(0);
    }

    private static final AdjustmentFlag[] VALUES = values();

    public static AdjustmentFlag valueOf(
        com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
      if (desc.getType() != getDescriptor()) {
        throw new java.lang.IllegalArgumentException(
          "EnumValueDescriptor is not for this type.");
      }
      if (desc.getIndex() == -1) {
        return UNRECOGNIZED;
      }
      return VALUES[desc.getIndex()];
    }

    private final int value;

    private AdjustmentFlag(int value) {
      this.value = value;
    }

    // @@protoc_insertion_point(enum_scope:google.cloud.paymentgateway.issuerswitch.v1.ResolveComplaintAdjustment.AdjustmentFlag)
  }

  /**
   * <pre>
   * The complaint resolution reason code.
   * </pre>
   *
   * Protobuf enum {@code google.cloud.paymentgateway.issuerswitch.v1.ResolveComplaintAdjustment.ReasonCode}
   */
  public enum ReasonCode
      implements com.google.protobuf.ProtocolMessageEnum {
    /**
     * <pre>
     * Unspecified reason code.
     * </pre>
     *
     * <code>REASON_CODE_UNSPECIFIED = 0;</code>
     */
    REASON_CODE_UNSPECIFIED(0),
    /**
     * <pre>
     * Customer account has been reversed online for DRC dispute or beneficiary
     * account has been credited online for TCC dispute. This reason code maps
     * to the `102` reason code as defined in NPCI's `UDIR` specification.
     * </pre>
     *
     * <code>COMPLAINT_RESOLVED_ONLINE = 1;</code>
     */
    COMPLAINT_RESOLVED_ONLINE(1),
    /**
     * <pre>
     * Customer account has been reversed now or manually post reconciliation
     * for DRC dispute or beneficiary account has been credited now or manually
     * post reconciliation for TCC dispute. This reason code maps to the `103`
     * reason code as defined in NPCI's `UDIR` specification.
     * </pre>
     *
     * <code>COMPLAINT_RESOLVED_NOW_OR_MANUALLY = 2;</code>
     */
    COMPLAINT_RESOLVED_NOW_OR_MANUALLY(2),
    /**
     * <pre>
     * Online decline response failed. This reason code maps to the
     * `104` reason code as defined in NPCI's `UDIR` specification.
     * </pre>
     *
     * <code>ORIGINAL_TRANSACTION_NOT_DONE = 3;</code>
     */
    ORIGINAL_TRANSACTION_NOT_DONE(3),
    /**
     * <pre>
     * Account closed. This reason code maps to the `114` reason code for
     * RET dispute as defined in NPCI's `UDIR` specification.
     * </pre>
     *
     * <code>RET_ACCOUNT_CLOSED = 4;</code>
     */
    RET_ACCOUNT_CLOSED(4),
    /**
     * <pre>
     * Account does not exist. This reason code maps to the `115` reason code
     * for RET dispute as defined in NPCI's `UDIR` specification.
     * </pre>
     *
     * <code>RET_ACCOUNT_DOES_NOT_EXIST = 5;</code>
     */
    RET_ACCOUNT_DOES_NOT_EXIST(5),
    /**
     * <pre>
     * Party instructions. This reason code maps to the `116` reason code for
     * RET dispute as defined in NPCI's `UDIR` specification.
     * </pre>
     *
     * <code>RET_PARTY_INSTRUCTIONS = 6;</code>
     */
    RET_PARTY_INSTRUCTIONS(6),
    /**
     * <pre>
     * NRI account. This reason code maps to the `117` reason code for RET
     * dispute as defined in NPCI's `UDIR` specification.
     * </pre>
     *
     * <code>RET_NRI_ACCOUNT = 7;</code>
     */
    RET_NRI_ACCOUNT(7),
    /**
     * <pre>
     * Credit freezed. This reason code maps to the `118` reason code for RET
     * dispute as defined in NPCI's `UDIR` specification.
     * </pre>
     *
     * <code>RET_CREDIT_FREEZED = 8;</code>
     */
    RET_CREDIT_FREEZED(8),
    /**
     * <pre>
     * Invalid beneficiary details. This reason code maps to the `119` reason
     * code for RET dispute as defined in NPCI's `UDIR` specification.
     * </pre>
     *
     * <code>RET_INVALID_BENEFICIARY_DETAILS = 9;</code>
     */
    RET_INVALID_BENEFICIARY_DETAILS(9),
    /**
     * <pre>
     * Any other reason. This reason code maps to the `120` reason code for RET
     * dispute as defined in NPCI's `UDIR` specification.
     * </pre>
     *
     * <code>RET_ANY_OTHER_REASON = 10;</code>
     */
    RET_ANY_OTHER_REASON(10),
    /**
     * <pre>
     * Beneficiary bank unable to credit their customer account.
     * This reason code maps to the `1094` reason code for RET dispute as
     * defined in NPCI's `UDIR` specification.
     * </pre>
     *
     * <code>RET_BENEFICIARY_CANNOT_CREDIT = 11;</code>
     */
    RET_BENEFICIARY_CANNOT_CREDIT(11),
    /**
     * <pre>
     * Account debited but transaction confirmation not received at merchant
     * location. This reason code maps to the `1065` reason code for Credit
     * adjustment and RET dispute as defined in NPCI's `UDIR` specification.
     * </pre>
     *
     * <code>RET_MERCHANT_NOT_RECEIVED_CONFIRMATION = 12;</code>
     */
    RET_MERCHANT_NOT_RECEIVED_CONFIRMATION(12),
    /**
     * <pre>
     * Customer account has been credited. This reason code maps to the `501`
     * reason code for Refund reversal confirmation dispute as defined in NPCI's
     * `UDIR` specification.
     * </pre>
     *
     * <code>RRC_CUSTOMER_ACCOUNT_CREDITED = 13;</code>
     */
    RRC_CUSTOMER_ACCOUNT_CREDITED(13),
    UNRECOGNIZED(-1),
    ;

    /**
     * <pre>
     * Unspecified reason code.
     * </pre>
     *
     * <code>REASON_CODE_UNSPECIFIED = 0;</code>
     */
    public static final int REASON_CODE_UNSPECIFIED_VALUE = 0;
    /**
     * <pre>
     * Customer account has been reversed online for DRC dispute or beneficiary
     * account has been credited online for TCC dispute. This reason code maps
     * to the `102` reason code as defined in NPCI's `UDIR` specification.
     * </pre>
     *
     * <code>COMPLAINT_RESOLVED_ONLINE = 1;</code>
     */
    public static final int COMPLAINT_RESOLVED_ONLINE_VALUE = 1;
    /**
     * <pre>
     * Customer account has been reversed now or manually post reconciliation
     * for DRC dispute or beneficiary account has been credited now or manually
     * post reconciliation for TCC dispute. This reason code maps to the `103`
     * reason code as defined in NPCI's `UDIR` specification.
     * </pre>
     *
     * <code>COMPLAINT_RESOLVED_NOW_OR_MANUALLY = 2;</code>
     */
    public static final int COMPLAINT_RESOLVED_NOW_OR_MANUALLY_VALUE = 2;
    /**
     * <pre>
     * Online decline response failed. This reason code maps to the
     * `104` reason code as defined in NPCI's `UDIR` specification.
     * </pre>
     *
     * <code>ORIGINAL_TRANSACTION_NOT_DONE = 3;</code>
     */
    public static final int ORIGINAL_TRANSACTION_NOT_DONE_VALUE = 3;
    /**
     * <pre>
     * Account closed. This reason code maps to the `114` reason code for
     * RET dispute as defined in NPCI's `UDIR` specification.
     * </pre>
     *
     * <code>RET_ACCOUNT_CLOSED = 4;</code>
     */
    public static final int RET_ACCOUNT_CLOSED_VALUE = 4;
    /**
     * <pre>
     * Account does not exist. This reason code maps to the `115` reason code
     * for RET dispute as defined in NPCI's `UDIR` specification.
     * </pre>
     *
     * <code>RET_ACCOUNT_DOES_NOT_EXIST = 5;</code>
     */
    public static final int RET_ACCOUNT_DOES_NOT_EXIST_VALUE = 5;
    /**
     * <pre>
     * Party instructions. This reason code maps to the `116` reason code for
     * RET dispute as defined in NPCI's `UDIR` specification.
     * </pre>
     *
     * <code>RET_PARTY_INSTRUCTIONS = 6;</code>
     */
    public static final int RET_PARTY_INSTRUCTIONS_VALUE = 6;
    /**
     * <pre>
     * NRI account. This reason code maps to the `117` reason code for RET
     * dispute as defined in NPCI's `UDIR` specification.
     * </pre>
     *
     * <code>RET_NRI_ACCOUNT = 7;</code>
     */
    public static final int RET_NRI_ACCOUNT_VALUE = 7;
    /**
     * <pre>
     * Credit freezed. This reason code maps to the `118` reason code for RET
     * dispute as defined in NPCI's `UDIR` specification.
     * </pre>
     *
     * <code>RET_CREDIT_FREEZED = 8;</code>
     */
    public static final int RET_CREDIT_FREEZED_VALUE = 8;
    /**
     * <pre>
     * Invalid beneficiary details. This reason code maps to the `119` reason
     * code for RET dispute as defined in NPCI's `UDIR` specification.
     * </pre>
     *
     * <code>RET_INVALID_BENEFICIARY_DETAILS = 9;</code>
     */
    public static final int RET_INVALID_BENEFICIARY_DETAILS_VALUE = 9;
    /**
     * <pre>
     * Any other reason. This reason code maps to the `120` reason code for RET
     * dispute as defined in NPCI's `UDIR` specification.
     * </pre>
     *
     * <code>RET_ANY_OTHER_REASON = 10;</code>
     */
    public static final int RET_ANY_OTHER_REASON_VALUE = 10;
    /**
     * <pre>
     * Beneficiary bank unable to credit their customer account.
     * This reason code maps to the `1094` reason code for RET dispute as
     * defined in NPCI's `UDIR` specification.
     * </pre>
     *
     * <code>RET_BENEFICIARY_CANNOT_CREDIT = 11;</code>
     */
    public static final int RET_BENEFICIARY_CANNOT_CREDIT_VALUE = 11;
    /**
     * <pre>
     * Account debited but transaction confirmation not received at merchant
     * location. This reason code maps to the `1065` reason code for Credit
     * adjustment and RET dispute as defined in NPCI's `UDIR` specification.
     * </pre>
     *
     * <code>RET_MERCHANT_NOT_RECEIVED_CONFIRMATION = 12;</code>
     */
    public static final int RET_MERCHANT_NOT_RECEIVED_CONFIRMATION_VALUE = 12;
    /**
     * <pre>
     * Customer account has been credited. This reason code maps to the `501`
     * reason code for Refund reversal confirmation dispute as defined in NPCI's
     * `UDIR` specification.
     * </pre>
     *
     * <code>RRC_CUSTOMER_ACCOUNT_CREDITED = 13;</code>
     */
    public static final int RRC_CUSTOMER_ACCOUNT_CREDITED_VALUE = 13;


    public final int getNumber() {
      if (this == UNRECOGNIZED) {
        throw new java.lang.IllegalArgumentException(
            "Can't get the number of an unknown enum value.");
      }
      return value;
    }

    /**
     * @param value The numeric wire value of the corresponding enum entry.
     * @return The enum associated with the given numeric wire value.
     * @deprecated Use {@link #forNumber(int)} instead.
     */
    @java.lang.Deprecated
    public static ReasonCode valueOf(int value) {
      return forNumber(value);
    }

    /**
     * @param value The numeric wire value of the corresponding enum entry.
     * @return The enum associated with the given numeric wire value.
     */
    public static ReasonCode forNumber(int value) {
      switch (value) {
        case 0: return REASON_CODE_UNSPECIFIED;
        case 1: return COMPLAINT_RESOLVED_ONLINE;
        case 2: return COMPLAINT_RESOLVED_NOW_OR_MANUALLY;
        case 3: return ORIGINAL_TRANSACTION_NOT_DONE;
        case 4: return RET_ACCOUNT_CLOSED;
        case 5: return RET_ACCOUNT_DOES_NOT_EXIST;
        case 6: return RET_PARTY_INSTRUCTIONS;
        case 7: return RET_NRI_ACCOUNT;
        case 8: return RET_CREDIT_FREEZED;
        case 9: return RET_INVALID_BENEFICIARY_DETAILS;
        case 10: return RET_ANY_OTHER_REASON;
        case 11: return RET_BENEFICIARY_CANNOT_CREDIT;
        case 12: return RET_MERCHANT_NOT_RECEIVED_CONFIRMATION;
        case 13: return RRC_CUSTOMER_ACCOUNT_CREDITED;
        default: return null;
      }
    }

    public static com.google.protobuf.Internal.EnumLiteMap<ReasonCode>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static final com.google.protobuf.Internal.EnumLiteMap<
        ReasonCode> internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<ReasonCode>() {
            public ReasonCode findValueByNumber(int number) {
              return ReasonCode.forNumber(number);
            }
          };

    public final com.google.protobuf.Descriptors.EnumValueDescriptor
        getValueDescriptor() {
      if (this == UNRECOGNIZED) {
        throw new java.lang.IllegalStateException(
            "Can't get the descriptor of an unrecognized enum value.");
      }
      return getDescriptor().getValues().get(ordinal());
    }
    public final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptorForType() {
      return getDescriptor();
    }
    public static final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptor() {
      return com.google.cloud.paymentgateway.issuerswitch.v1.ResolveComplaintAdjustment.getDescriptor().getEnumTypes().get(1);
    }

    private static final ReasonCode[] VALUES = values();

    public static ReasonCode valueOf(
        com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
      if (desc.getType() != getDescriptor()) {
        throw new java.lang.IllegalArgumentException(
          "EnumValueDescriptor is not for this type.");
      }
      if (desc.getIndex() == -1) {
        return UNRECOGNIZED;
      }
      return VALUES[desc.getIndex()];
    }

    private final int value;

    private ReasonCode(int value) {
      this.value = value;
    }

    // @@protoc_insertion_point(enum_scope:google.cloud.paymentgateway.issuerswitch.v1.ResolveComplaintAdjustment.ReasonCode)
  }

  public static final int ADJUSTMENT_FLAG_FIELD_NUMBER = 1;
  private int adjustmentFlag_;
  /**
   * <pre>
   * Required. The adjustment flag in URCS for the complaint transaction. This maps to
   * `reqAdjFlag` in complaint request and `respAdjFlag` in complaint response.
   * </pre>
   *
   * <code>.google.cloud.paymentgateway.issuerswitch.v1.ResolveComplaintAdjustment.AdjustmentFlag adjustment_flag = 1 [(.google.api.field_behavior) = REQUIRED];</code>
   * @return The enum numeric value on the wire for adjustmentFlag.
   */
  @java.lang.Override public int getAdjustmentFlagValue() {
    return adjustmentFlag_;
  }
  /**
   * <pre>
   * Required. The adjustment flag in URCS for the complaint transaction. This maps to
   * `reqAdjFlag` in complaint request and `respAdjFlag` in complaint response.
   * </pre>
   *
   * <code>.google.cloud.paymentgateway.issuerswitch.v1.ResolveComplaintAdjustment.AdjustmentFlag adjustment_flag = 1 [(.google.api.field_behavior) = REQUIRED];</code>
   * @return The adjustmentFlag.
   */
  @java.lang.Override public com.google.cloud.paymentgateway.issuerswitch.v1.ResolveComplaintAdjustment.AdjustmentFlag getAdjustmentFlag() {
    @SuppressWarnings("deprecation")
    com.google.cloud.paymentgateway.issuerswitch.v1.ResolveComplaintAdjustment.AdjustmentFlag result = com.google.cloud.paymentgateway.issuerswitch.v1.ResolveComplaintAdjustment.AdjustmentFlag.valueOf(adjustmentFlag_);
    return result == null ? com.google.cloud.paymentgateway.issuerswitch.v1.ResolveComplaintAdjustment.AdjustmentFlag.UNRECOGNIZED : result;
  }

  public static final int ADJUSTMENT_CODE_FIELD_NUMBER = 2;
  private int adjustmentCode_;
  /**
   * <pre>
   * Required. The adjustment code in URCS for the complaint transaction. This maps to
   * `reqAdjCode` in complaint request.
   * </pre>
   *
   * <code>.google.cloud.paymentgateway.issuerswitch.v1.ResolveComplaintAdjustment.ReasonCode adjustment_code = 2 [(.google.api.field_behavior) = REQUIRED];</code>
   * @return The enum numeric value on the wire for adjustmentCode.
   */
  @java.lang.Override public int getAdjustmentCodeValue() {
    return adjustmentCode_;
  }
  /**
   * <pre>
   * Required. The adjustment code in URCS for the complaint transaction. This maps to
   * `reqAdjCode` in complaint request.
   * </pre>
   *
   * <code>.google.cloud.paymentgateway.issuerswitch.v1.ResolveComplaintAdjustment.ReasonCode adjustment_code = 2 [(.google.api.field_behavior) = REQUIRED];</code>
   * @return The adjustmentCode.
   */
  @java.lang.Override public com.google.cloud.paymentgateway.issuerswitch.v1.ResolveComplaintAdjustment.ReasonCode getAdjustmentCode() {
    @SuppressWarnings("deprecation")
    com.google.cloud.paymentgateway.issuerswitch.v1.ResolveComplaintAdjustment.ReasonCode result = com.google.cloud.paymentgateway.issuerswitch.v1.ResolveComplaintAdjustment.ReasonCode.valueOf(adjustmentCode_);
    return result == null ? com.google.cloud.paymentgateway.issuerswitch.v1.ResolveComplaintAdjustment.ReasonCode.UNRECOGNIZED : result;
  }

  private byte memoizedIsInitialized = -1;
  @java.lang.Override
  public final boolean isInitialized() {
    byte isInitialized = memoizedIsInitialized;
    if (isInitialized == 1) return true;
    if (isInitialized == 0) return false;

    memoizedIsInitialized = 1;
    return true;
  }

  @java.lang.Override
  public void writeTo(com.google.protobuf.CodedOutputStream output)
                      throws java.io.IOException {
    if (adjustmentFlag_ != com.google.cloud.paymentgateway.issuerswitch.v1.ResolveComplaintAdjustment.AdjustmentFlag.ADJUSTMENT_FLAG_UNSPECIFIED.getNumber()) {
      output.writeEnum(1, adjustmentFlag_);
    }
    if (adjustmentCode_ != com.google.cloud.paymentgateway.issuerswitch.v1.ResolveComplaintAdjustment.ReasonCode.REASON_CODE_UNSPECIFIED.getNumber()) {
      output.writeEnum(2, adjustmentCode_);
    }
    unknownFields.writeTo(output);
  }

  @java.lang.Override
  public int getSerializedSize() {
    int size = memoizedSize;
    if (size != -1) return size;

    size = 0;
    if (adjustmentFlag_ != com.google.cloud.paymentgateway.issuerswitch.v1.ResolveComplaintAdjustment.AdjustmentFlag.ADJUSTMENT_FLAG_UNSPECIFIED.getNumber()) {
      size += com.google.protobuf.CodedOutputStream
        .computeEnumSize(1, adjustmentFlag_);
    }
    if (adjustmentCode_ != com.google.cloud.paymentgateway.issuerswitch.v1.ResolveComplaintAdjustment.ReasonCode.REASON_CODE_UNSPECIFIED.getNumber()) {
      size += com.google.protobuf.CodedOutputStream
        .computeEnumSize(2, adjustmentCode_);
    }
    size += unknownFields.getSerializedSize();
    memoizedSize = size;
    return size;
  }

  @java.lang.Override
  public boolean equals(final java.lang.Object obj) {
    if (obj == this) {
     return true;
    }
    if (!(obj instanceof com.google.cloud.paymentgateway.issuerswitch.v1.ResolveComplaintAdjustment)) {
      return super.equals(obj);
    }
    com.google.cloud.paymentgateway.issuerswitch.v1.ResolveComplaintAdjustment other = (com.google.cloud.paymentgateway.issuerswitch.v1.ResolveComplaintAdjustment) obj;

    if (adjustmentFlag_ != other.adjustmentFlag_) return false;
    if (adjustmentCode_ != other.adjustmentCode_) return false;
    if (!unknownFields.equals(other.unknownFields)) return false;
    return true;
  }

  @java.lang.Override
  public int hashCode() {
    if (memoizedHashCode != 0) {
      return memoizedHashCode;
    }
    int hash = 41;
    hash = (19 * hash) + getDescriptor().hashCode();
    hash = (37 * hash) + ADJUSTMENT_FLAG_FIELD_NUMBER;
    hash = (53 * hash) + adjustmentFlag_;
    hash = (37 * hash) + ADJUSTMENT_CODE_FIELD_NUMBER;
    hash = (53 * hash) + adjustmentCode_;
    hash = (29 * hash) + unknownFields.hashCode();
    memoizedHashCode = hash;
    return hash;
  }

  public static com.google.cloud.paymentgateway.issuerswitch.v1.ResolveComplaintAdjustment parseFrom(
      java.nio.ByteBuffer data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static com.google.cloud.paymentgateway.issuerswitch.v1.ResolveComplaintAdjustment parseFrom(
      java.nio.ByteBuffer data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static com.google.cloud.paymentgateway.issuerswitch.v1.ResolveComplaintAdjustment parseFrom(
      com.google.protobuf.ByteString data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static com.google.cloud.paymentgateway.issuerswitch.v1.ResolveComplaintAdjustment parseFrom(
      com.google.protobuf.ByteString data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static com.google.cloud.paymentgateway.issuerswitch.v1.ResolveComplaintAdjustment parseFrom(byte[] data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static com.google.cloud.paymentgateway.issuerswitch.v1.ResolveComplaintAdjustment parseFrom(
      byte[] data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static com.google.cloud.paymentgateway.issuerswitch.v1.ResolveComplaintAdjustment parseFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input);
  }
  public static com.google.cloud.paymentgateway.issuerswitch.v1.ResolveComplaintAdjustment parseFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input, extensionRegistry);
  }
  public static com.google.cloud.paymentgateway.issuerswitch.v1.ResolveComplaintAdjustment parseDelimitedFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseDelimitedWithIOException(PARSER, input);
  }
  public static com.google.cloud.paymentgateway.issuerswitch.v1.ResolveComplaintAdjustment parseDelimitedFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
  }
  public static com.google.cloud.paymentgateway.issuerswitch.v1.ResolveComplaintAdjustment parseFrom(
      com.google.protobuf.CodedInputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input);
  }
  public static com.google.cloud.paymentgateway.issuerswitch.v1.ResolveComplaintAdjustment parseFrom(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input, extensionRegistry);
  }

  @java.lang.Override
  public Builder newBuilderForType() { return newBuilder(); }
  public static Builder newBuilder() {
    return DEFAULT_INSTANCE.toBuilder();
  }
  public static Builder newBuilder(com.google.cloud.paymentgateway.issuerswitch.v1.ResolveComplaintAdjustment prototype) {
    return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
  }
  @java.lang.Override
  public Builder toBuilder() {
    return this == DEFAULT_INSTANCE
        ? new Builder() : new Builder().mergeFrom(this);
  }

  @java.lang.Override
  protected Builder newBuilderForType(
      com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
    Builder builder = new Builder(parent);
    return builder;
  }
  /**
   * <pre>
   * The adjusment flag and reason code for resolving the complaint.
   * </pre>
   *
   * Protobuf type {@code google.cloud.paymentgateway.issuerswitch.v1.ResolveComplaintAdjustment}
   */
  public static final class Builder extends
      com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
      // @@protoc_insertion_point(builder_implements:google.cloud.paymentgateway.issuerswitch.v1.ResolveComplaintAdjustment)
      com.google.cloud.paymentgateway.issuerswitch.v1.ResolveComplaintAdjustmentOrBuilder {
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.google.cloud.paymentgateway.issuerswitch.v1.ResolutionsProto.internal_static_google_cloud_paymentgateway_issuerswitch_v1_ResolveComplaintAdjustment_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.google.cloud.paymentgateway.issuerswitch.v1.ResolutionsProto.internal_static_google_cloud_paymentgateway_issuerswitch_v1_ResolveComplaintAdjustment_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.google.cloud.paymentgateway.issuerswitch.v1.ResolveComplaintAdjustment.class, com.google.cloud.paymentgateway.issuerswitch.v1.ResolveComplaintAdjustment.Builder.class);
    }

    // Construct using com.google.cloud.paymentgateway.issuerswitch.v1.ResolveComplaintAdjustment.newBuilder()
    private Builder() {
      maybeForceBuilderInitialization();
    }

    private Builder(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      super(parent);
      maybeForceBuilderInitialization();
    }
    private void maybeForceBuilderInitialization() {
      if (com.google.protobuf.GeneratedMessageV3
              .alwaysUseFieldBuilders) {
      }
    }
    @java.lang.Override
    public Builder clear() {
      super.clear();
      adjustmentFlag_ = 0;

      adjustmentCode_ = 0;

      return this;
    }

    @java.lang.Override
    public com.google.protobuf.Descriptors.Descriptor
        getDescriptorForType() {
      return com.google.cloud.paymentgateway.issuerswitch.v1.ResolutionsProto.internal_static_google_cloud_paymentgateway_issuerswitch_v1_ResolveComplaintAdjustment_descriptor;
    }

    @java.lang.Override
    public com.google.cloud.paymentgateway.issuerswitch.v1.ResolveComplaintAdjustment getDefaultInstanceForType() {
      return com.google.cloud.paymentgateway.issuerswitch.v1.ResolveComplaintAdjustment.getDefaultInstance();
    }

    @java.lang.Override
    public com.google.cloud.paymentgateway.issuerswitch.v1.ResolveComplaintAdjustment build() {
      com.google.cloud.paymentgateway.issuerswitch.v1.ResolveComplaintAdjustment result = buildPartial();
      if (!result.isInitialized()) {
        throw newUninitializedMessageException(result);
      }
      return result;
    }

    @java.lang.Override
    public com.google.cloud.paymentgateway.issuerswitch.v1.ResolveComplaintAdjustment buildPartial() {
      com.google.cloud.paymentgateway.issuerswitch.v1.ResolveComplaintAdjustment result = new com.google.cloud.paymentgateway.issuerswitch.v1.ResolveComplaintAdjustment(this);
      result.adjustmentFlag_ = adjustmentFlag_;
      result.adjustmentCode_ = adjustmentCode_;
      onBuilt();
      return result;
    }

    @java.lang.Override
    public Builder clone() {
      return super.clone();
    }
    @java.lang.Override
    public Builder setField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        java.lang.Object value) {
      return super.setField(field, value);
    }
    @java.lang.Override
    public Builder clearField(
        com.google.protobuf.Descriptors.FieldDescriptor field) {
      return super.clearField(field);
    }
    @java.lang.Override
    public Builder clearOneof(
        com.google.protobuf.Descriptors.OneofDescriptor oneof) {
      return super.clearOneof(oneof);
    }
    @java.lang.Override
    public Builder setRepeatedField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        int index, java.lang.Object value) {
      return super.setRepeatedField(field, index, value);
    }
    @java.lang.Override
    public Builder addRepeatedField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        java.lang.Object value) {
      return super.addRepeatedField(field, value);
    }
    @java.lang.Override
    public Builder mergeFrom(com.google.protobuf.Message other) {
      if (other instanceof com.google.cloud.paymentgateway.issuerswitch.v1.ResolveComplaintAdjustment) {
        return mergeFrom((com.google.cloud.paymentgateway.issuerswitch.v1.ResolveComplaintAdjustment)other);
      } else {
        super.mergeFrom(other);
        return this;
      }
    }

    public Builder mergeFrom(com.google.cloud.paymentgateway.issuerswitch.v1.ResolveComplaintAdjustment other) {
      if (other == com.google.cloud.paymentgateway.issuerswitch.v1.ResolveComplaintAdjustment.getDefaultInstance()) return this;
      if (other.adjustmentFlag_ != 0) {
        setAdjustmentFlagValue(other.getAdjustmentFlagValue());
      }
      if (other.adjustmentCode_ != 0) {
        setAdjustmentCodeValue(other.getAdjustmentCodeValue());
      }
      this.mergeUnknownFields(other.unknownFields);
      onChanged();
      return this;
    }

    @java.lang.Override
    public final boolean isInitialized() {
      return true;
    }

    @java.lang.Override
    public Builder mergeFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      com.google.cloud.paymentgateway.issuerswitch.v1.ResolveComplaintAdjustment parsedMessage = null;
      try {
        parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        parsedMessage = (com.google.cloud.paymentgateway.issuerswitch.v1.ResolveComplaintAdjustment) e.getUnfinishedMessage();
        throw e.unwrapIOException();
      } finally {
        if (parsedMessage != null) {
          mergeFrom(parsedMessage);
        }
      }
      return this;
    }

    private int adjustmentFlag_ = 0;
    /**
     * <pre>
     * Required. The adjustment flag in URCS for the complaint transaction. This maps to
     * `reqAdjFlag` in complaint request and `respAdjFlag` in complaint response.
     * </pre>
     *
     * <code>.google.cloud.paymentgateway.issuerswitch.v1.ResolveComplaintAdjustment.AdjustmentFlag adjustment_flag = 1 [(.google.api.field_behavior) = REQUIRED];</code>
     * @return The enum numeric value on the wire for adjustmentFlag.
     */
    @java.lang.Override public int getAdjustmentFlagValue() {
      return adjustmentFlag_;
    }
    /**
     * <pre>
     * Required. The adjustment flag in URCS for the complaint transaction. This maps to
     * `reqAdjFlag` in complaint request and `respAdjFlag` in complaint response.
     * </pre>
     *
     * <code>.google.cloud.paymentgateway.issuerswitch.v1.ResolveComplaintAdjustment.AdjustmentFlag adjustment_flag = 1 [(.google.api.field_behavior) = REQUIRED];</code>
     * @param value The enum numeric value on the wire for adjustmentFlag to set.
     * @return This builder for chaining.
     */
    public Builder setAdjustmentFlagValue(int value) {
      
      adjustmentFlag_ = value;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * Required. The adjustment flag in URCS for the complaint transaction. This maps to
     * `reqAdjFlag` in complaint request and `respAdjFlag` in complaint response.
     * </pre>
     *
     * <code>.google.cloud.paymentgateway.issuerswitch.v1.ResolveComplaintAdjustment.AdjustmentFlag adjustment_flag = 1 [(.google.api.field_behavior) = REQUIRED];</code>
     * @return The adjustmentFlag.
     */
    @java.lang.Override
    public com.google.cloud.paymentgateway.issuerswitch.v1.ResolveComplaintAdjustment.AdjustmentFlag getAdjustmentFlag() {
      @SuppressWarnings("deprecation")
      com.google.cloud.paymentgateway.issuerswitch.v1.ResolveComplaintAdjustment.AdjustmentFlag result = com.google.cloud.paymentgateway.issuerswitch.v1.ResolveComplaintAdjustment.AdjustmentFlag.valueOf(adjustmentFlag_);
      return result == null ? com.google.cloud.paymentgateway.issuerswitch.v1.ResolveComplaintAdjustment.AdjustmentFlag.UNRECOGNIZED : result;
    }
    /**
     * <pre>
     * Required. The adjustment flag in URCS for the complaint transaction. This maps to
     * `reqAdjFlag` in complaint request and `respAdjFlag` in complaint response.
     * </pre>
     *
     * <code>.google.cloud.paymentgateway.issuerswitch.v1.ResolveComplaintAdjustment.AdjustmentFlag adjustment_flag = 1 [(.google.api.field_behavior) = REQUIRED];</code>
     * @param value The adjustmentFlag to set.
     * @return This builder for chaining.
     */
    public Builder setAdjustmentFlag(com.google.cloud.paymentgateway.issuerswitch.v1.ResolveComplaintAdjustment.AdjustmentFlag value) {
      if (value == null) {
        throw new NullPointerException();
      }
      
      adjustmentFlag_ = value.getNumber();
      onChanged();
      return this;
    }
    /**
     * <pre>
     * Required. The adjustment flag in URCS for the complaint transaction. This maps to
     * `reqAdjFlag` in complaint request and `respAdjFlag` in complaint response.
     * </pre>
     *
     * <code>.google.cloud.paymentgateway.issuerswitch.v1.ResolveComplaintAdjustment.AdjustmentFlag adjustment_flag = 1 [(.google.api.field_behavior) = REQUIRED];</code>
     * @return This builder for chaining.
     */
    public Builder clearAdjustmentFlag() {
      
      adjustmentFlag_ = 0;
      onChanged();
      return this;
    }

    private int adjustmentCode_ = 0;
    /**
     * <pre>
     * Required. The adjustment code in URCS for the complaint transaction. This maps to
     * `reqAdjCode` in complaint request.
     * </pre>
     *
     * <code>.google.cloud.paymentgateway.issuerswitch.v1.ResolveComplaintAdjustment.ReasonCode adjustment_code = 2 [(.google.api.field_behavior) = REQUIRED];</code>
     * @return The enum numeric value on the wire for adjustmentCode.
     */
    @java.lang.Override public int getAdjustmentCodeValue() {
      return adjustmentCode_;
    }
    /**
     * <pre>
     * Required. The adjustment code in URCS for the complaint transaction. This maps to
     * `reqAdjCode` in complaint request.
     * </pre>
     *
     * <code>.google.cloud.paymentgateway.issuerswitch.v1.ResolveComplaintAdjustment.ReasonCode adjustment_code = 2 [(.google.api.field_behavior) = REQUIRED];</code>
     * @param value The enum numeric value on the wire for adjustmentCode to set.
     * @return This builder for chaining.
     */
    public Builder setAdjustmentCodeValue(int value) {
      
      adjustmentCode_ = value;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * Required. The adjustment code in URCS for the complaint transaction. This maps to
     * `reqAdjCode` in complaint request.
     * </pre>
     *
     * <code>.google.cloud.paymentgateway.issuerswitch.v1.ResolveComplaintAdjustment.ReasonCode adjustment_code = 2 [(.google.api.field_behavior) = REQUIRED];</code>
     * @return The adjustmentCode.
     */
    @java.lang.Override
    public com.google.cloud.paymentgateway.issuerswitch.v1.ResolveComplaintAdjustment.ReasonCode getAdjustmentCode() {
      @SuppressWarnings("deprecation")
      com.google.cloud.paymentgateway.issuerswitch.v1.ResolveComplaintAdjustment.ReasonCode result = com.google.cloud.paymentgateway.issuerswitch.v1.ResolveComplaintAdjustment.ReasonCode.valueOf(adjustmentCode_);
      return result == null ? com.google.cloud.paymentgateway.issuerswitch.v1.ResolveComplaintAdjustment.ReasonCode.UNRECOGNIZED : result;
    }
    /**
     * <pre>
     * Required. The adjustment code in URCS for the complaint transaction. This maps to
     * `reqAdjCode` in complaint request.
     * </pre>
     *
     * <code>.google.cloud.paymentgateway.issuerswitch.v1.ResolveComplaintAdjustment.ReasonCode adjustment_code = 2 [(.google.api.field_behavior) = REQUIRED];</code>
     * @param value The adjustmentCode to set.
     * @return This builder for chaining.
     */
    public Builder setAdjustmentCode(com.google.cloud.paymentgateway.issuerswitch.v1.ResolveComplaintAdjustment.ReasonCode value) {
      if (value == null) {
        throw new NullPointerException();
      }
      
      adjustmentCode_ = value.getNumber();
      onChanged();
      return this;
    }
    /**
     * <pre>
     * Required. The adjustment code in URCS for the complaint transaction. This maps to
     * `reqAdjCode` in complaint request.
     * </pre>
     *
     * <code>.google.cloud.paymentgateway.issuerswitch.v1.ResolveComplaintAdjustment.ReasonCode adjustment_code = 2 [(.google.api.field_behavior) = REQUIRED];</code>
     * @return This builder for chaining.
     */
    public Builder clearAdjustmentCode() {
      
      adjustmentCode_ = 0;
      onChanged();
      return this;
    }
    @java.lang.Override
    public final Builder setUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return super.setUnknownFields(unknownFields);
    }

    @java.lang.Override
    public final Builder mergeUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return super.mergeUnknownFields(unknownFields);
    }


    // @@protoc_insertion_point(builder_scope:google.cloud.paymentgateway.issuerswitch.v1.ResolveComplaintAdjustment)
  }

  // @@protoc_insertion_point(class_scope:google.cloud.paymentgateway.issuerswitch.v1.ResolveComplaintAdjustment)
  private static final com.google.cloud.paymentgateway.issuerswitch.v1.ResolveComplaintAdjustment DEFAULT_INSTANCE;
  static {
    DEFAULT_INSTANCE = new com.google.cloud.paymentgateway.issuerswitch.v1.ResolveComplaintAdjustment();
  }

  public static com.google.cloud.paymentgateway.issuerswitch.v1.ResolveComplaintAdjustment getDefaultInstance() {
    return DEFAULT_INSTANCE;
  }

  private static final com.google.protobuf.Parser<ResolveComplaintAdjustment>
      PARSER = new com.google.protobuf.AbstractParser<ResolveComplaintAdjustment>() {
    @java.lang.Override
    public ResolveComplaintAdjustment parsePartialFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return new ResolveComplaintAdjustment(input, extensionRegistry);
    }
  };

  public static com.google.protobuf.Parser<ResolveComplaintAdjustment> parser() {
    return PARSER;
  }

  @java.lang.Override
  public com.google.protobuf.Parser<ResolveComplaintAdjustment> getParserForType() {
    return PARSER;
  }

  @java.lang.Override
  public com.google.cloud.paymentgateway.issuerswitch.v1.ResolveComplaintAdjustment getDefaultInstanceForType() {
    return DEFAULT_INSTANCE;
  }

}

