// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: google/cloud/timeseriesinsights/v1/timeseries_insights.proto

package com.google.cloud.timeseriesinsights.v1;

public interface EvaluateTimeseriesRequestOrBuilder extends
    // @@protoc_insertion_point(interface_extends:google.cloud.timeseriesinsights.v1.EvaluateTimeseriesRequest)
    com.google.protobuf.MessageOrBuilder {

  /**
   * <pre>
   * Required. Client project name in the format of 'projects/{project}'.
   * </pre>
   *
   * <code>string parent = 1 [(.google.api.field_behavior) = REQUIRED, (.google.api.resource_reference) = { ... }</code>
   * @return The parent.
   */
  java.lang.String getParent();
  /**
   * <pre>
   * Required. Client project name in the format of 'projects/{project}'.
   * </pre>
   *
   * <code>string parent = 1 [(.google.api.field_behavior) = REQUIRED, (.google.api.resource_reference) = { ... }</code>
   * @return The bytes for parent.
   */
  com.google.protobuf.ByteString
      getParentBytes();

  /**
   * <pre>
   * Evaluate this time series without requiring it was previously loaded in
   * a data set.
   * The evaluated time series point is the last one, analogous to calling
   * evaluateSlice or query with
   * [detectionTime][google.cloud.timeseriesinsights.v1.EvaluateSliceRequest.detection_time] set to
   * `timeseries.point(timeseries.point_size() - 1).time`.
   * The length of the time series must be at least 10.
   * All points must have the same time offset relative to the granularity. For
   * example, if the [granularity][google.cloud.timeseriesinsights.v1.EvaluateTimeseriesRequest.granularity] is "5s", then the following
   * point.time sequences are valid:
   * - "100s", "105s", "120s", "125s" (no offset)
   * - "102s", "107s", "122s", "127s" (offset is "2s")
   * However, the following sequence is invalid as it has inconsistent offsets:
   * - "100s", "105s", "122s", "127s" (offsets are either "0s" or "2s")
   * </pre>
   *
   * <code>.google.cloud.timeseriesinsights.v1.Timeseries timeseries = 2;</code>
   * @return Whether the timeseries field is set.
   */
  boolean hasTimeseries();
  /**
   * <pre>
   * Evaluate this time series without requiring it was previously loaded in
   * a data set.
   * The evaluated time series point is the last one, analogous to calling
   * evaluateSlice or query with
   * [detectionTime][google.cloud.timeseriesinsights.v1.EvaluateSliceRequest.detection_time] set to
   * `timeseries.point(timeseries.point_size() - 1).time`.
   * The length of the time series must be at least 10.
   * All points must have the same time offset relative to the granularity. For
   * example, if the [granularity][google.cloud.timeseriesinsights.v1.EvaluateTimeseriesRequest.granularity] is "5s", then the following
   * point.time sequences are valid:
   * - "100s", "105s", "120s", "125s" (no offset)
   * - "102s", "107s", "122s", "127s" (offset is "2s")
   * However, the following sequence is invalid as it has inconsistent offsets:
   * - "100s", "105s", "122s", "127s" (offsets are either "0s" or "2s")
   * </pre>
   *
   * <code>.google.cloud.timeseriesinsights.v1.Timeseries timeseries = 2;</code>
   * @return The timeseries.
   */
  com.google.cloud.timeseriesinsights.v1.Timeseries getTimeseries();
  /**
   * <pre>
   * Evaluate this time series without requiring it was previously loaded in
   * a data set.
   * The evaluated time series point is the last one, analogous to calling
   * evaluateSlice or query with
   * [detectionTime][google.cloud.timeseriesinsights.v1.EvaluateSliceRequest.detection_time] set to
   * `timeseries.point(timeseries.point_size() - 1).time`.
   * The length of the time series must be at least 10.
   * All points must have the same time offset relative to the granularity. For
   * example, if the [granularity][google.cloud.timeseriesinsights.v1.EvaluateTimeseriesRequest.granularity] is "5s", then the following
   * point.time sequences are valid:
   * - "100s", "105s", "120s", "125s" (no offset)
   * - "102s", "107s", "122s", "127s" (offset is "2s")
   * However, the following sequence is invalid as it has inconsistent offsets:
   * - "100s", "105s", "122s", "127s" (offsets are either "0s" or "2s")
   * </pre>
   *
   * <code>.google.cloud.timeseriesinsights.v1.Timeseries timeseries = 2;</code>
   */
  com.google.cloud.timeseriesinsights.v1.TimeseriesOrBuilder getTimeseriesOrBuilder();

  /**
   * <pre>
   * The granularity of the time series (time distance between two consecutive
   * points).
   * </pre>
   *
   * <code>.google.protobuf.Duration granularity = 3;</code>
   * @return Whether the granularity field is set.
   */
  boolean hasGranularity();
  /**
   * <pre>
   * The granularity of the time series (time distance between two consecutive
   * points).
   * </pre>
   *
   * <code>.google.protobuf.Duration granularity = 3;</code>
   * @return The granularity.
   */
  com.google.protobuf.Duration getGranularity();
  /**
   * <pre>
   * The granularity of the time series (time distance between two consecutive
   * points).
   * </pre>
   *
   * <code>.google.protobuf.Duration granularity = 3;</code>
   */
  com.google.protobuf.DurationOrBuilder getGranularityOrBuilder();

  /**
   * <pre>
   * The forecast parameters.
   * </pre>
   *
   * <code>.google.cloud.timeseriesinsights.v1.ForecastParams forecast_params = 4;</code>
   * @return Whether the forecastParams field is set.
   */
  boolean hasForecastParams();
  /**
   * <pre>
   * The forecast parameters.
   * </pre>
   *
   * <code>.google.cloud.timeseriesinsights.v1.ForecastParams forecast_params = 4;</code>
   * @return The forecastParams.
   */
  com.google.cloud.timeseriesinsights.v1.ForecastParams getForecastParams();
  /**
   * <pre>
   * The forecast parameters.
   * </pre>
   *
   * <code>.google.cloud.timeseriesinsights.v1.ForecastParams forecast_params = 4;</code>
   */
  com.google.cloud.timeseriesinsights.v1.ForecastParamsOrBuilder getForecastParamsOrBuilder();
}
