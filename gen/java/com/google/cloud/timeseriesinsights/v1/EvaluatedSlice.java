// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: google/cloud/timeseriesinsights/v1/timeseries_insights.proto

package com.google.cloud.timeseriesinsights.v1;

/**
 * <pre>
 * Forecast result for a given slice.
 * </pre>
 *
 * Protobuf type {@code google.cloud.timeseriesinsights.v1.EvaluatedSlice}
 */
public final class EvaluatedSlice extends
    com.google.protobuf.GeneratedMessageV3 implements
    // @@protoc_insertion_point(message_implements:google.cloud.timeseriesinsights.v1.EvaluatedSlice)
    EvaluatedSliceOrBuilder {
private static final long serialVersionUID = 0L;
  // Use EvaluatedSlice.newBuilder() to construct.
  private EvaluatedSlice(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
    super(builder);
  }
  private EvaluatedSlice() {
    dimensions_ = java.util.Collections.emptyList();
  }

  @java.lang.Override
  @SuppressWarnings({"unused"})
  protected java.lang.Object newInstance(
      UnusedPrivateParameter unused) {
    return new EvaluatedSlice();
  }

  @java.lang.Override
  public final com.google.protobuf.UnknownFieldSet
  getUnknownFields() {
    return this.unknownFields;
  }
  public static final com.google.protobuf.Descriptors.Descriptor
      getDescriptor() {
    return com.google.cloud.timeseriesinsights.v1.TimeseriesInsightsProto.internal_static_google_cloud_timeseriesinsights_v1_EvaluatedSlice_descriptor;
  }

  @java.lang.Override
  protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internalGetFieldAccessorTable() {
    return com.google.cloud.timeseriesinsights.v1.TimeseriesInsightsProto.internal_static_google_cloud_timeseriesinsights_v1_EvaluatedSlice_fieldAccessorTable
        .ensureFieldAccessorsInitialized(
            com.google.cloud.timeseriesinsights.v1.EvaluatedSlice.class, com.google.cloud.timeseriesinsights.v1.EvaluatedSlice.Builder.class);
  }

  private int bitField0_;
  public static final int DIMENSIONS_FIELD_NUMBER = 1;
  @SuppressWarnings("serial")
  private java.util.List<com.google.cloud.timeseriesinsights.v1.PinnedDimension> dimensions_;
  /**
   * <pre>
   * Values for all categorical dimensions that uniquely identify this slice.
   * </pre>
   *
   * <code>repeated .google.cloud.timeseriesinsights.v1.PinnedDimension dimensions = 1;</code>
   */
  @java.lang.Override
  public java.util.List<com.google.cloud.timeseriesinsights.v1.PinnedDimension> getDimensionsList() {
    return dimensions_;
  }
  /**
   * <pre>
   * Values for all categorical dimensions that uniquely identify this slice.
   * </pre>
   *
   * <code>repeated .google.cloud.timeseriesinsights.v1.PinnedDimension dimensions = 1;</code>
   */
  @java.lang.Override
  public java.util.List<? extends com.google.cloud.timeseriesinsights.v1.PinnedDimensionOrBuilder> 
      getDimensionsOrBuilderList() {
    return dimensions_;
  }
  /**
   * <pre>
   * Values for all categorical dimensions that uniquely identify this slice.
   * </pre>
   *
   * <code>repeated .google.cloud.timeseriesinsights.v1.PinnedDimension dimensions = 1;</code>
   */
  @java.lang.Override
  public int getDimensionsCount() {
    return dimensions_.size();
  }
  /**
   * <pre>
   * Values for all categorical dimensions that uniquely identify this slice.
   * </pre>
   *
   * <code>repeated .google.cloud.timeseriesinsights.v1.PinnedDimension dimensions = 1;</code>
   */
  @java.lang.Override
  public com.google.cloud.timeseriesinsights.v1.PinnedDimension getDimensions(int index) {
    return dimensions_.get(index);
  }
  /**
   * <pre>
   * Values for all categorical dimensions that uniquely identify this slice.
   * </pre>
   *
   * <code>repeated .google.cloud.timeseriesinsights.v1.PinnedDimension dimensions = 1;</code>
   */
  @java.lang.Override
  public com.google.cloud.timeseriesinsights.v1.PinnedDimensionOrBuilder getDimensionsOrBuilder(
      int index) {
    return dimensions_.get(index);
  }

  public static final int DETECTION_POINT_ACTUAL_FIELD_NUMBER = 11;
  private double detectionPointActual_ = 0D;
  /**
   * <pre>
   * The actual value at the detection time (see
   * [detectionTime][google.cloud.timeseriesinsights.v1.QueryDataSetRequest.detection_time]).
   * **NOTE**: This value can be an estimate, so it should not be used as a
   * source of truth.
   * </pre>
   *
   * <code>optional double detection_point_actual = 11;</code>
   * @return Whether the detectionPointActual field is set.
   */
  @java.lang.Override
  public boolean hasDetectionPointActual() {
    return ((bitField0_ & 0x00000001) != 0);
  }
  /**
   * <pre>
   * The actual value at the detection time (see
   * [detectionTime][google.cloud.timeseriesinsights.v1.QueryDataSetRequest.detection_time]).
   * **NOTE**: This value can be an estimate, so it should not be used as a
   * source of truth.
   * </pre>
   *
   * <code>optional double detection_point_actual = 11;</code>
   * @return The detectionPointActual.
   */
  @java.lang.Override
  public double getDetectionPointActual() {
    return detectionPointActual_;
  }

  public static final int DETECTION_POINT_FORECAST_FIELD_NUMBER = 12;
  private double detectionPointForecast_ = 0D;
  /**
   * <pre>
   * The expected value at the detection time, which is obtained by forecasting
   * on the historical time series.
   * </pre>
   *
   * <code>optional double detection_point_forecast = 12;</code>
   * @return Whether the detectionPointForecast field is set.
   */
  @java.lang.Override
  public boolean hasDetectionPointForecast() {
    return ((bitField0_ & 0x00000002) != 0);
  }
  /**
   * <pre>
   * The expected value at the detection time, which is obtained by forecasting
   * on the historical time series.
   * </pre>
   *
   * <code>optional double detection_point_forecast = 12;</code>
   * @return The detectionPointForecast.
   */
  @java.lang.Override
  public double getDetectionPointForecast() {
    return detectionPointForecast_;
  }

  public static final int EXPECTED_DEVIATION_FIELD_NUMBER = 16;
  private double expectedDeviation_ = 0D;
  /**
   * <pre>
   * How much our forecast model expects the detection point actual will
   * deviate from its forecasted value based on how well it fit the input time
   * series.
   * In general, we expect the `detectionPointActual` to
   * be in the `[detectionPointForecast - expectedDeviation,
   * detectionPointForecast + expectedDeviation]` range. The more the actual
   * value is outside this range, the more statistically significant the
   * anomaly is.
   * The expected deviation is always positive.
   * </pre>
   *
   * <code>optional double expected_deviation = 16;</code>
   * @return Whether the expectedDeviation field is set.
   */
  @java.lang.Override
  public boolean hasExpectedDeviation() {
    return ((bitField0_ & 0x00000004) != 0);
  }
  /**
   * <pre>
   * How much our forecast model expects the detection point actual will
   * deviate from its forecasted value based on how well it fit the input time
   * series.
   * In general, we expect the `detectionPointActual` to
   * be in the `[detectionPointForecast - expectedDeviation,
   * detectionPointForecast + expectedDeviation]` range. The more the actual
   * value is outside this range, the more statistically significant the
   * anomaly is.
   * The expected deviation is always positive.
   * </pre>
   *
   * <code>optional double expected_deviation = 16;</code>
   * @return The expectedDeviation.
   */
  @java.lang.Override
  public double getExpectedDeviation() {
    return expectedDeviation_;
  }

  public static final int ANOMALY_SCORE_FIELD_NUMBER = 17;
  private double anomalyScore_ = 0D;
  /**
   * <pre>
   * Summarizes how significant the change between the actual and forecasted
   * detection points are compared with the historical patterns observed on the
   * [history][google.cloud.timeseriesinsights.v1.EvaluatedSlice.history] time series.
   * Defined as *|a - f| / (e + nt)*, where:
   * - *a* is the [detectionPointActual][google.cloud.timeseriesinsights.v1.EvaluatedSlice.detection_point_actual].
   * - *f* is the [detectionPointForecast][google.cloud.timeseriesinsights.v1.EvaluatedSlice.detection_point_forecast].
   * - *e* is the [expectedDeviation][google.cloud.timeseriesinsights.v1.EvaluatedSlice.expected_deviation].
   * - *nt` is the [noiseThreshold][google.cloud.timeseriesinsights.v1.ForecastParams.noise_threshold].
   * Anomaly scores between different requests and datasets are comparable. As
   * a guideline, the risk of a slice being an anomaly based on the anomaly
   * score is:
   * - **Very High** if `anomalyScore` &gt; 5.
   * - **High** if the `anomalyScore` is in the [2, 5] range.
   * - **Medium** if the `anomalyScore` is in the [1, 2) range.
   * - **Low** if the `anomalyScore` is &lt; 1.
   * If there were issues evaluating this slice, then the anomaly score will be
   * set to -1.0 and the [status][google.cloud.timeseriesinsights.v1.EvaluatedSlice.status] field will contain details on what
   * went wrong.
   * </pre>
   *
   * <code>optional double anomaly_score = 17;</code>
   * @return Whether the anomalyScore field is set.
   */
  @java.lang.Override
  public boolean hasAnomalyScore() {
    return ((bitField0_ & 0x00000008) != 0);
  }
  /**
   * <pre>
   * Summarizes how significant the change between the actual and forecasted
   * detection points are compared with the historical patterns observed on the
   * [history][google.cloud.timeseriesinsights.v1.EvaluatedSlice.history] time series.
   * Defined as *|a - f| / (e + nt)*, where:
   * - *a* is the [detectionPointActual][google.cloud.timeseriesinsights.v1.EvaluatedSlice.detection_point_actual].
   * - *f* is the [detectionPointForecast][google.cloud.timeseriesinsights.v1.EvaluatedSlice.detection_point_forecast].
   * - *e* is the [expectedDeviation][google.cloud.timeseriesinsights.v1.EvaluatedSlice.expected_deviation].
   * - *nt` is the [noiseThreshold][google.cloud.timeseriesinsights.v1.ForecastParams.noise_threshold].
   * Anomaly scores between different requests and datasets are comparable. As
   * a guideline, the risk of a slice being an anomaly based on the anomaly
   * score is:
   * - **Very High** if `anomalyScore` &gt; 5.
   * - **High** if the `anomalyScore` is in the [2, 5] range.
   * - **Medium** if the `anomalyScore` is in the [1, 2) range.
   * - **Low** if the `anomalyScore` is &lt; 1.
   * If there were issues evaluating this slice, then the anomaly score will be
   * set to -1.0 and the [status][google.cloud.timeseriesinsights.v1.EvaluatedSlice.status] field will contain details on what
   * went wrong.
   * </pre>
   *
   * <code>optional double anomaly_score = 17;</code>
   * @return The anomalyScore.
   */
  @java.lang.Override
  public double getAnomalyScore() {
    return anomalyScore_;
  }

  public static final int HISTORY_FIELD_NUMBER = 5;
  private com.google.cloud.timeseriesinsights.v1.Timeseries history_;
  /**
   * <pre>
   * The actual values in the `[`
   * [detectionTime][google.cloud.timeseriesinsights.v1.QueryDataSetRequest.detection_time] `-`
   * [forecastHistory][google.cloud.timeseriesinsights.v1.TimeseriesParams.forecast_history]`,`
   * [detectionTime][google.cloud.timeseriesinsights.v1.QueryDataSetRequest.detection_time] `]` time
   * range.
   * **NOTE**: This field is only populated if
   * [returnTimeseries][google.cloud.timeseriesinsights.v1.QueryDataSetRequest.return_timeseries] is true.
   * </pre>
   *
   * <code>.google.cloud.timeseriesinsights.v1.Timeseries history = 5;</code>
   * @return Whether the history field is set.
   */
  @java.lang.Override
  public boolean hasHistory() {
    return history_ != null;
  }
  /**
   * <pre>
   * The actual values in the `[`
   * [detectionTime][google.cloud.timeseriesinsights.v1.QueryDataSetRequest.detection_time] `-`
   * [forecastHistory][google.cloud.timeseriesinsights.v1.TimeseriesParams.forecast_history]`,`
   * [detectionTime][google.cloud.timeseriesinsights.v1.QueryDataSetRequest.detection_time] `]` time
   * range.
   * **NOTE**: This field is only populated if
   * [returnTimeseries][google.cloud.timeseriesinsights.v1.QueryDataSetRequest.return_timeseries] is true.
   * </pre>
   *
   * <code>.google.cloud.timeseriesinsights.v1.Timeseries history = 5;</code>
   * @return The history.
   */
  @java.lang.Override
  public com.google.cloud.timeseriesinsights.v1.Timeseries getHistory() {
    return history_ == null ? com.google.cloud.timeseriesinsights.v1.Timeseries.getDefaultInstance() : history_;
  }
  /**
   * <pre>
   * The actual values in the `[`
   * [detectionTime][google.cloud.timeseriesinsights.v1.QueryDataSetRequest.detection_time] `-`
   * [forecastHistory][google.cloud.timeseriesinsights.v1.TimeseriesParams.forecast_history]`,`
   * [detectionTime][google.cloud.timeseriesinsights.v1.QueryDataSetRequest.detection_time] `]` time
   * range.
   * **NOTE**: This field is only populated if
   * [returnTimeseries][google.cloud.timeseriesinsights.v1.QueryDataSetRequest.return_timeseries] is true.
   * </pre>
   *
   * <code>.google.cloud.timeseriesinsights.v1.Timeseries history = 5;</code>
   */
  @java.lang.Override
  public com.google.cloud.timeseriesinsights.v1.TimeseriesOrBuilder getHistoryOrBuilder() {
    return history_ == null ? com.google.cloud.timeseriesinsights.v1.Timeseries.getDefaultInstance() : history_;
  }

  public static final int FORECAST_FIELD_NUMBER = 10;
  private com.google.cloud.timeseriesinsights.v1.Timeseries forecast_;
  /**
   * <pre>
   * The forecasted values in the `[`
   * [detectionTime][google.cloud.timeseriesinsights.v1.QueryDataSetRequest.detection_time] `+`
   * [granularity][google.cloud.timeseriesinsights.v1.TimeseriesParams.granularity]`,`
   * [forecastParams.horizonTime][google.cloud.timeseriesinsights.v1.QueryDataSetRequest.forecast_params] `]` time
   * range.
   * **NOTE**: This field is only populated if
   * [returnTimeseries][google.cloud.timeseriesinsights.v1.QueryDataSetRequest.return_timeseries] is true.
   * </pre>
   *
   * <code>.google.cloud.timeseriesinsights.v1.Timeseries forecast = 10;</code>
   * @return Whether the forecast field is set.
   */
  @java.lang.Override
  public boolean hasForecast() {
    return forecast_ != null;
  }
  /**
   * <pre>
   * The forecasted values in the `[`
   * [detectionTime][google.cloud.timeseriesinsights.v1.QueryDataSetRequest.detection_time] `+`
   * [granularity][google.cloud.timeseriesinsights.v1.TimeseriesParams.granularity]`,`
   * [forecastParams.horizonTime][google.cloud.timeseriesinsights.v1.QueryDataSetRequest.forecast_params] `]` time
   * range.
   * **NOTE**: This field is only populated if
   * [returnTimeseries][google.cloud.timeseriesinsights.v1.QueryDataSetRequest.return_timeseries] is true.
   * </pre>
   *
   * <code>.google.cloud.timeseriesinsights.v1.Timeseries forecast = 10;</code>
   * @return The forecast.
   */
  @java.lang.Override
  public com.google.cloud.timeseriesinsights.v1.Timeseries getForecast() {
    return forecast_ == null ? com.google.cloud.timeseriesinsights.v1.Timeseries.getDefaultInstance() : forecast_;
  }
  /**
   * <pre>
   * The forecasted values in the `[`
   * [detectionTime][google.cloud.timeseriesinsights.v1.QueryDataSetRequest.detection_time] `+`
   * [granularity][google.cloud.timeseriesinsights.v1.TimeseriesParams.granularity]`,`
   * [forecastParams.horizonTime][google.cloud.timeseriesinsights.v1.QueryDataSetRequest.forecast_params] `]` time
   * range.
   * **NOTE**: This field is only populated if
   * [returnTimeseries][google.cloud.timeseriesinsights.v1.QueryDataSetRequest.return_timeseries] is true.
   * </pre>
   *
   * <code>.google.cloud.timeseriesinsights.v1.Timeseries forecast = 10;</code>
   */
  @java.lang.Override
  public com.google.cloud.timeseriesinsights.v1.TimeseriesOrBuilder getForecastOrBuilder() {
    return forecast_ == null ? com.google.cloud.timeseriesinsights.v1.Timeseries.getDefaultInstance() : forecast_;
  }

  public static final int STATUS_FIELD_NUMBER = 18;
  private com.google.rpc.Status status_;
  /**
   * <pre>
   * Evaluation status. Contains an error message if the `anomalyScore` is &lt; 0.
   * Possible error messages:
   * - **"Time series too sparse"**: The returned time series for this slice did
   * not contain enough data points (we require a minimum of 10).
   * - **"Not enough recent time series points"**: The time series contains the
   * minimum of 10 points, but there are not enough close in time to the
   * detection point.
   * - **"Missing detection point data"**: There were not events to be
   * aggregated within the `[detectionTime, detectionTime + granularity]` time
   * interval, so we don't have an actual value with which we can compare our
   * prediction.
   * - **"Data retrieval error"**: We failed to retrieve the time series data
   * for this slice and could not evaluate it successfully. Should be a
   * transient error.
   * - **"Internal server error"**: Internal unexpected error.
   * </pre>
   *
   * <code>.google.rpc.Status status = 18;</code>
   * @return Whether the status field is set.
   */
  @java.lang.Override
  public boolean hasStatus() {
    return status_ != null;
  }
  /**
   * <pre>
   * Evaluation status. Contains an error message if the `anomalyScore` is &lt; 0.
   * Possible error messages:
   * - **"Time series too sparse"**: The returned time series for this slice did
   * not contain enough data points (we require a minimum of 10).
   * - **"Not enough recent time series points"**: The time series contains the
   * minimum of 10 points, but there are not enough close in time to the
   * detection point.
   * - **"Missing detection point data"**: There were not events to be
   * aggregated within the `[detectionTime, detectionTime + granularity]` time
   * interval, so we don't have an actual value with which we can compare our
   * prediction.
   * - **"Data retrieval error"**: We failed to retrieve the time series data
   * for this slice and could not evaluate it successfully. Should be a
   * transient error.
   * - **"Internal server error"**: Internal unexpected error.
   * </pre>
   *
   * <code>.google.rpc.Status status = 18;</code>
   * @return The status.
   */
  @java.lang.Override
  public com.google.rpc.Status getStatus() {
    return status_ == null ? com.google.rpc.Status.getDefaultInstance() : status_;
  }
  /**
   * <pre>
   * Evaluation status. Contains an error message if the `anomalyScore` is &lt; 0.
   * Possible error messages:
   * - **"Time series too sparse"**: The returned time series for this slice did
   * not contain enough data points (we require a minimum of 10).
   * - **"Not enough recent time series points"**: The time series contains the
   * minimum of 10 points, but there are not enough close in time to the
   * detection point.
   * - **"Missing detection point data"**: There were not events to be
   * aggregated within the `[detectionTime, detectionTime + granularity]` time
   * interval, so we don't have an actual value with which we can compare our
   * prediction.
   * - **"Data retrieval error"**: We failed to retrieve the time series data
   * for this slice and could not evaluate it successfully. Should be a
   * transient error.
   * - **"Internal server error"**: Internal unexpected error.
   * </pre>
   *
   * <code>.google.rpc.Status status = 18;</code>
   */
  @java.lang.Override
  public com.google.rpc.StatusOrBuilder getStatusOrBuilder() {
    return status_ == null ? com.google.rpc.Status.getDefaultInstance() : status_;
  }

  private byte memoizedIsInitialized = -1;
  @java.lang.Override
  public final boolean isInitialized() {
    byte isInitialized = memoizedIsInitialized;
    if (isInitialized == 1) return true;
    if (isInitialized == 0) return false;

    memoizedIsInitialized = 1;
    return true;
  }

  @java.lang.Override
  public void writeTo(com.google.protobuf.CodedOutputStream output)
                      throws java.io.IOException {
    for (int i = 0; i < dimensions_.size(); i++) {
      output.writeMessage(1, dimensions_.get(i));
    }
    if (history_ != null) {
      output.writeMessage(5, getHistory());
    }
    if (forecast_ != null) {
      output.writeMessage(10, getForecast());
    }
    if (((bitField0_ & 0x00000001) != 0)) {
      output.writeDouble(11, detectionPointActual_);
    }
    if (((bitField0_ & 0x00000002) != 0)) {
      output.writeDouble(12, detectionPointForecast_);
    }
    if (((bitField0_ & 0x00000004) != 0)) {
      output.writeDouble(16, expectedDeviation_);
    }
    if (((bitField0_ & 0x00000008) != 0)) {
      output.writeDouble(17, anomalyScore_);
    }
    if (status_ != null) {
      output.writeMessage(18, getStatus());
    }
    getUnknownFields().writeTo(output);
  }

  @java.lang.Override
  public int getSerializedSize() {
    int size = memoizedSize;
    if (size != -1) return size;

    size = 0;
    for (int i = 0; i < dimensions_.size(); i++) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(1, dimensions_.get(i));
    }
    if (history_ != null) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(5, getHistory());
    }
    if (forecast_ != null) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(10, getForecast());
    }
    if (((bitField0_ & 0x00000001) != 0)) {
      size += com.google.protobuf.CodedOutputStream
        .computeDoubleSize(11, detectionPointActual_);
    }
    if (((bitField0_ & 0x00000002) != 0)) {
      size += com.google.protobuf.CodedOutputStream
        .computeDoubleSize(12, detectionPointForecast_);
    }
    if (((bitField0_ & 0x00000004) != 0)) {
      size += com.google.protobuf.CodedOutputStream
        .computeDoubleSize(16, expectedDeviation_);
    }
    if (((bitField0_ & 0x00000008) != 0)) {
      size += com.google.protobuf.CodedOutputStream
        .computeDoubleSize(17, anomalyScore_);
    }
    if (status_ != null) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(18, getStatus());
    }
    size += getUnknownFields().getSerializedSize();
    memoizedSize = size;
    return size;
  }

  @java.lang.Override
  public boolean equals(final java.lang.Object obj) {
    if (obj == this) {
     return true;
    }
    if (!(obj instanceof com.google.cloud.timeseriesinsights.v1.EvaluatedSlice)) {
      return super.equals(obj);
    }
    com.google.cloud.timeseriesinsights.v1.EvaluatedSlice other = (com.google.cloud.timeseriesinsights.v1.EvaluatedSlice) obj;

    if (!getDimensionsList()
        .equals(other.getDimensionsList())) return false;
    if (hasDetectionPointActual() != other.hasDetectionPointActual()) return false;
    if (hasDetectionPointActual()) {
      if (java.lang.Double.doubleToLongBits(getDetectionPointActual())
          != java.lang.Double.doubleToLongBits(
              other.getDetectionPointActual())) return false;
    }
    if (hasDetectionPointForecast() != other.hasDetectionPointForecast()) return false;
    if (hasDetectionPointForecast()) {
      if (java.lang.Double.doubleToLongBits(getDetectionPointForecast())
          != java.lang.Double.doubleToLongBits(
              other.getDetectionPointForecast())) return false;
    }
    if (hasExpectedDeviation() != other.hasExpectedDeviation()) return false;
    if (hasExpectedDeviation()) {
      if (java.lang.Double.doubleToLongBits(getExpectedDeviation())
          != java.lang.Double.doubleToLongBits(
              other.getExpectedDeviation())) return false;
    }
    if (hasAnomalyScore() != other.hasAnomalyScore()) return false;
    if (hasAnomalyScore()) {
      if (java.lang.Double.doubleToLongBits(getAnomalyScore())
          != java.lang.Double.doubleToLongBits(
              other.getAnomalyScore())) return false;
    }
    if (hasHistory() != other.hasHistory()) return false;
    if (hasHistory()) {
      if (!getHistory()
          .equals(other.getHistory())) return false;
    }
    if (hasForecast() != other.hasForecast()) return false;
    if (hasForecast()) {
      if (!getForecast()
          .equals(other.getForecast())) return false;
    }
    if (hasStatus() != other.hasStatus()) return false;
    if (hasStatus()) {
      if (!getStatus()
          .equals(other.getStatus())) return false;
    }
    if (!getUnknownFields().equals(other.getUnknownFields())) return false;
    return true;
  }

  @java.lang.Override
  public int hashCode() {
    if (memoizedHashCode != 0) {
      return memoizedHashCode;
    }
    int hash = 41;
    hash = (19 * hash) + getDescriptor().hashCode();
    if (getDimensionsCount() > 0) {
      hash = (37 * hash) + DIMENSIONS_FIELD_NUMBER;
      hash = (53 * hash) + getDimensionsList().hashCode();
    }
    if (hasDetectionPointActual()) {
      hash = (37 * hash) + DETECTION_POINT_ACTUAL_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
          java.lang.Double.doubleToLongBits(getDetectionPointActual()));
    }
    if (hasDetectionPointForecast()) {
      hash = (37 * hash) + DETECTION_POINT_FORECAST_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
          java.lang.Double.doubleToLongBits(getDetectionPointForecast()));
    }
    if (hasExpectedDeviation()) {
      hash = (37 * hash) + EXPECTED_DEVIATION_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
          java.lang.Double.doubleToLongBits(getExpectedDeviation()));
    }
    if (hasAnomalyScore()) {
      hash = (37 * hash) + ANOMALY_SCORE_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
          java.lang.Double.doubleToLongBits(getAnomalyScore()));
    }
    if (hasHistory()) {
      hash = (37 * hash) + HISTORY_FIELD_NUMBER;
      hash = (53 * hash) + getHistory().hashCode();
    }
    if (hasForecast()) {
      hash = (37 * hash) + FORECAST_FIELD_NUMBER;
      hash = (53 * hash) + getForecast().hashCode();
    }
    if (hasStatus()) {
      hash = (37 * hash) + STATUS_FIELD_NUMBER;
      hash = (53 * hash) + getStatus().hashCode();
    }
    hash = (29 * hash) + getUnknownFields().hashCode();
    memoizedHashCode = hash;
    return hash;
  }

  public static com.google.cloud.timeseriesinsights.v1.EvaluatedSlice parseFrom(
      java.nio.ByteBuffer data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static com.google.cloud.timeseriesinsights.v1.EvaluatedSlice parseFrom(
      java.nio.ByteBuffer data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static com.google.cloud.timeseriesinsights.v1.EvaluatedSlice parseFrom(
      com.google.protobuf.ByteString data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static com.google.cloud.timeseriesinsights.v1.EvaluatedSlice parseFrom(
      com.google.protobuf.ByteString data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static com.google.cloud.timeseriesinsights.v1.EvaluatedSlice parseFrom(byte[] data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static com.google.cloud.timeseriesinsights.v1.EvaluatedSlice parseFrom(
      byte[] data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static com.google.cloud.timeseriesinsights.v1.EvaluatedSlice parseFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input);
  }
  public static com.google.cloud.timeseriesinsights.v1.EvaluatedSlice parseFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input, extensionRegistry);
  }
  public static com.google.cloud.timeseriesinsights.v1.EvaluatedSlice parseDelimitedFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseDelimitedWithIOException(PARSER, input);
  }
  public static com.google.cloud.timeseriesinsights.v1.EvaluatedSlice parseDelimitedFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
  }
  public static com.google.cloud.timeseriesinsights.v1.EvaluatedSlice parseFrom(
      com.google.protobuf.CodedInputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input);
  }
  public static com.google.cloud.timeseriesinsights.v1.EvaluatedSlice parseFrom(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input, extensionRegistry);
  }

  @java.lang.Override
  public Builder newBuilderForType() { return newBuilder(); }
  public static Builder newBuilder() {
    return DEFAULT_INSTANCE.toBuilder();
  }
  public static Builder newBuilder(com.google.cloud.timeseriesinsights.v1.EvaluatedSlice prototype) {
    return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
  }
  @java.lang.Override
  public Builder toBuilder() {
    return this == DEFAULT_INSTANCE
        ? new Builder() : new Builder().mergeFrom(this);
  }

  @java.lang.Override
  protected Builder newBuilderForType(
      com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
    Builder builder = new Builder(parent);
    return builder;
  }
  /**
   * <pre>
   * Forecast result for a given slice.
   * </pre>
   *
   * Protobuf type {@code google.cloud.timeseriesinsights.v1.EvaluatedSlice}
   */
  public static final class Builder extends
      com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
      // @@protoc_insertion_point(builder_implements:google.cloud.timeseriesinsights.v1.EvaluatedSlice)
      com.google.cloud.timeseriesinsights.v1.EvaluatedSliceOrBuilder {
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.google.cloud.timeseriesinsights.v1.TimeseriesInsightsProto.internal_static_google_cloud_timeseriesinsights_v1_EvaluatedSlice_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.google.cloud.timeseriesinsights.v1.TimeseriesInsightsProto.internal_static_google_cloud_timeseriesinsights_v1_EvaluatedSlice_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.google.cloud.timeseriesinsights.v1.EvaluatedSlice.class, com.google.cloud.timeseriesinsights.v1.EvaluatedSlice.Builder.class);
    }

    // Construct using com.google.cloud.timeseriesinsights.v1.EvaluatedSlice.newBuilder()
    private Builder() {

    }

    private Builder(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      super(parent);

    }
    @java.lang.Override
    public Builder clear() {
      super.clear();
      bitField0_ = 0;
      if (dimensionsBuilder_ == null) {
        dimensions_ = java.util.Collections.emptyList();
      } else {
        dimensions_ = null;
        dimensionsBuilder_.clear();
      }
      bitField0_ = (bitField0_ & ~0x00000001);
      detectionPointActual_ = 0D;
      detectionPointForecast_ = 0D;
      expectedDeviation_ = 0D;
      anomalyScore_ = 0D;
      history_ = null;
      if (historyBuilder_ != null) {
        historyBuilder_.dispose();
        historyBuilder_ = null;
      }
      forecast_ = null;
      if (forecastBuilder_ != null) {
        forecastBuilder_.dispose();
        forecastBuilder_ = null;
      }
      status_ = null;
      if (statusBuilder_ != null) {
        statusBuilder_.dispose();
        statusBuilder_ = null;
      }
      return this;
    }

    @java.lang.Override
    public com.google.protobuf.Descriptors.Descriptor
        getDescriptorForType() {
      return com.google.cloud.timeseriesinsights.v1.TimeseriesInsightsProto.internal_static_google_cloud_timeseriesinsights_v1_EvaluatedSlice_descriptor;
    }

    @java.lang.Override
    public com.google.cloud.timeseriesinsights.v1.EvaluatedSlice getDefaultInstanceForType() {
      return com.google.cloud.timeseriesinsights.v1.EvaluatedSlice.getDefaultInstance();
    }

    @java.lang.Override
    public com.google.cloud.timeseriesinsights.v1.EvaluatedSlice build() {
      com.google.cloud.timeseriesinsights.v1.EvaluatedSlice result = buildPartial();
      if (!result.isInitialized()) {
        throw newUninitializedMessageException(result);
      }
      return result;
    }

    @java.lang.Override
    public com.google.cloud.timeseriesinsights.v1.EvaluatedSlice buildPartial() {
      com.google.cloud.timeseriesinsights.v1.EvaluatedSlice result = new com.google.cloud.timeseriesinsights.v1.EvaluatedSlice(this);
      buildPartialRepeatedFields(result);
      if (bitField0_ != 0) { buildPartial0(result); }
      onBuilt();
      return result;
    }

    private void buildPartialRepeatedFields(com.google.cloud.timeseriesinsights.v1.EvaluatedSlice result) {
      if (dimensionsBuilder_ == null) {
        if (((bitField0_ & 0x00000001) != 0)) {
          dimensions_ = java.util.Collections.unmodifiableList(dimensions_);
          bitField0_ = (bitField0_ & ~0x00000001);
        }
        result.dimensions_ = dimensions_;
      } else {
        result.dimensions_ = dimensionsBuilder_.build();
      }
    }

    private void buildPartial0(com.google.cloud.timeseriesinsights.v1.EvaluatedSlice result) {
      int from_bitField0_ = bitField0_;
      int to_bitField0_ = 0;
      if (((from_bitField0_ & 0x00000002) != 0)) {
        result.detectionPointActual_ = detectionPointActual_;
        to_bitField0_ |= 0x00000001;
      }
      if (((from_bitField0_ & 0x00000004) != 0)) {
        result.detectionPointForecast_ = detectionPointForecast_;
        to_bitField0_ |= 0x00000002;
      }
      if (((from_bitField0_ & 0x00000008) != 0)) {
        result.expectedDeviation_ = expectedDeviation_;
        to_bitField0_ |= 0x00000004;
      }
      if (((from_bitField0_ & 0x00000010) != 0)) {
        result.anomalyScore_ = anomalyScore_;
        to_bitField0_ |= 0x00000008;
      }
      if (((from_bitField0_ & 0x00000020) != 0)) {
        result.history_ = historyBuilder_ == null
            ? history_
            : historyBuilder_.build();
      }
      if (((from_bitField0_ & 0x00000040) != 0)) {
        result.forecast_ = forecastBuilder_ == null
            ? forecast_
            : forecastBuilder_.build();
      }
      if (((from_bitField0_ & 0x00000080) != 0)) {
        result.status_ = statusBuilder_ == null
            ? status_
            : statusBuilder_.build();
      }
      result.bitField0_ |= to_bitField0_;
    }

    @java.lang.Override
    public Builder clone() {
      return super.clone();
    }
    @java.lang.Override
    public Builder setField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        java.lang.Object value) {
      return super.setField(field, value);
    }
    @java.lang.Override
    public Builder clearField(
        com.google.protobuf.Descriptors.FieldDescriptor field) {
      return super.clearField(field);
    }
    @java.lang.Override
    public Builder clearOneof(
        com.google.protobuf.Descriptors.OneofDescriptor oneof) {
      return super.clearOneof(oneof);
    }
    @java.lang.Override
    public Builder setRepeatedField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        int index, java.lang.Object value) {
      return super.setRepeatedField(field, index, value);
    }
    @java.lang.Override
    public Builder addRepeatedField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        java.lang.Object value) {
      return super.addRepeatedField(field, value);
    }
    @java.lang.Override
    public Builder mergeFrom(com.google.protobuf.Message other) {
      if (other instanceof com.google.cloud.timeseriesinsights.v1.EvaluatedSlice) {
        return mergeFrom((com.google.cloud.timeseriesinsights.v1.EvaluatedSlice)other);
      } else {
        super.mergeFrom(other);
        return this;
      }
    }

    public Builder mergeFrom(com.google.cloud.timeseriesinsights.v1.EvaluatedSlice other) {
      if (other == com.google.cloud.timeseriesinsights.v1.EvaluatedSlice.getDefaultInstance()) return this;
      if (dimensionsBuilder_ == null) {
        if (!other.dimensions_.isEmpty()) {
          if (dimensions_.isEmpty()) {
            dimensions_ = other.dimensions_;
            bitField0_ = (bitField0_ & ~0x00000001);
          } else {
            ensureDimensionsIsMutable();
            dimensions_.addAll(other.dimensions_);
          }
          onChanged();
        }
      } else {
        if (!other.dimensions_.isEmpty()) {
          if (dimensionsBuilder_.isEmpty()) {
            dimensionsBuilder_.dispose();
            dimensionsBuilder_ = null;
            dimensions_ = other.dimensions_;
            bitField0_ = (bitField0_ & ~0x00000001);
            dimensionsBuilder_ = 
              com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?
                 getDimensionsFieldBuilder() : null;
          } else {
            dimensionsBuilder_.addAllMessages(other.dimensions_);
          }
        }
      }
      if (other.hasDetectionPointActual()) {
        setDetectionPointActual(other.getDetectionPointActual());
      }
      if (other.hasDetectionPointForecast()) {
        setDetectionPointForecast(other.getDetectionPointForecast());
      }
      if (other.hasExpectedDeviation()) {
        setExpectedDeviation(other.getExpectedDeviation());
      }
      if (other.hasAnomalyScore()) {
        setAnomalyScore(other.getAnomalyScore());
      }
      if (other.hasHistory()) {
        mergeHistory(other.getHistory());
      }
      if (other.hasForecast()) {
        mergeForecast(other.getForecast());
      }
      if (other.hasStatus()) {
        mergeStatus(other.getStatus());
      }
      this.mergeUnknownFields(other.getUnknownFields());
      onChanged();
      return this;
    }

    @java.lang.Override
    public final boolean isInitialized() {
      return true;
    }

    @java.lang.Override
    public Builder mergeFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 10: {
              com.google.cloud.timeseriesinsights.v1.PinnedDimension m =
                  input.readMessage(
                      com.google.cloud.timeseriesinsights.v1.PinnedDimension.parser(),
                      extensionRegistry);
              if (dimensionsBuilder_ == null) {
                ensureDimensionsIsMutable();
                dimensions_.add(m);
              } else {
                dimensionsBuilder_.addMessage(m);
              }
              break;
            } // case 10
            case 42: {
              input.readMessage(
                  getHistoryFieldBuilder().getBuilder(),
                  extensionRegistry);
              bitField0_ |= 0x00000020;
              break;
            } // case 42
            case 82: {
              input.readMessage(
                  getForecastFieldBuilder().getBuilder(),
                  extensionRegistry);
              bitField0_ |= 0x00000040;
              break;
            } // case 82
            case 89: {
              detectionPointActual_ = input.readDouble();
              bitField0_ |= 0x00000002;
              break;
            } // case 89
            case 97: {
              detectionPointForecast_ = input.readDouble();
              bitField0_ |= 0x00000004;
              break;
            } // case 97
            case 129: {
              expectedDeviation_ = input.readDouble();
              bitField0_ |= 0x00000008;
              break;
            } // case 129
            case 137: {
              anomalyScore_ = input.readDouble();
              bitField0_ |= 0x00000010;
              break;
            } // case 137
            case 146: {
              input.readMessage(
                  getStatusFieldBuilder().getBuilder(),
                  extensionRegistry);
              bitField0_ |= 0x00000080;
              break;
            } // case 146
            default: {
              if (!super.parseUnknownField(input, extensionRegistry, tag)) {
                done = true; // was an endgroup tag
              }
              break;
            } // default:
          } // switch (tag)
        } // while (!done)
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.unwrapIOException();
      } finally {
        onChanged();
      } // finally
      return this;
    }
    private int bitField0_;

    private java.util.List<com.google.cloud.timeseriesinsights.v1.PinnedDimension> dimensions_ =
      java.util.Collections.emptyList();
    private void ensureDimensionsIsMutable() {
      if (!((bitField0_ & 0x00000001) != 0)) {
        dimensions_ = new java.util.ArrayList<com.google.cloud.timeseriesinsights.v1.PinnedDimension>(dimensions_);
        bitField0_ |= 0x00000001;
       }
    }

    private com.google.protobuf.RepeatedFieldBuilderV3<
        com.google.cloud.timeseriesinsights.v1.PinnedDimension, com.google.cloud.timeseriesinsights.v1.PinnedDimension.Builder, com.google.cloud.timeseriesinsights.v1.PinnedDimensionOrBuilder> dimensionsBuilder_;

    /**
     * <pre>
     * Values for all categorical dimensions that uniquely identify this slice.
     * </pre>
     *
     * <code>repeated .google.cloud.timeseriesinsights.v1.PinnedDimension dimensions = 1;</code>
     */
    public java.util.List<com.google.cloud.timeseriesinsights.v1.PinnedDimension> getDimensionsList() {
      if (dimensionsBuilder_ == null) {
        return java.util.Collections.unmodifiableList(dimensions_);
      } else {
        return dimensionsBuilder_.getMessageList();
      }
    }
    /**
     * <pre>
     * Values for all categorical dimensions that uniquely identify this slice.
     * </pre>
     *
     * <code>repeated .google.cloud.timeseriesinsights.v1.PinnedDimension dimensions = 1;</code>
     */
    public int getDimensionsCount() {
      if (dimensionsBuilder_ == null) {
        return dimensions_.size();
      } else {
        return dimensionsBuilder_.getCount();
      }
    }
    /**
     * <pre>
     * Values for all categorical dimensions that uniquely identify this slice.
     * </pre>
     *
     * <code>repeated .google.cloud.timeseriesinsights.v1.PinnedDimension dimensions = 1;</code>
     */
    public com.google.cloud.timeseriesinsights.v1.PinnedDimension getDimensions(int index) {
      if (dimensionsBuilder_ == null) {
        return dimensions_.get(index);
      } else {
        return dimensionsBuilder_.getMessage(index);
      }
    }
    /**
     * <pre>
     * Values for all categorical dimensions that uniquely identify this slice.
     * </pre>
     *
     * <code>repeated .google.cloud.timeseriesinsights.v1.PinnedDimension dimensions = 1;</code>
     */
    public Builder setDimensions(
        int index, com.google.cloud.timeseriesinsights.v1.PinnedDimension value) {
      if (dimensionsBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureDimensionsIsMutable();
        dimensions_.set(index, value);
        onChanged();
      } else {
        dimensionsBuilder_.setMessage(index, value);
      }
      return this;
    }
    /**
     * <pre>
     * Values for all categorical dimensions that uniquely identify this slice.
     * </pre>
     *
     * <code>repeated .google.cloud.timeseriesinsights.v1.PinnedDimension dimensions = 1;</code>
     */
    public Builder setDimensions(
        int index, com.google.cloud.timeseriesinsights.v1.PinnedDimension.Builder builderForValue) {
      if (dimensionsBuilder_ == null) {
        ensureDimensionsIsMutable();
        dimensions_.set(index, builderForValue.build());
        onChanged();
      } else {
        dimensionsBuilder_.setMessage(index, builderForValue.build());
      }
      return this;
    }
    /**
     * <pre>
     * Values for all categorical dimensions that uniquely identify this slice.
     * </pre>
     *
     * <code>repeated .google.cloud.timeseriesinsights.v1.PinnedDimension dimensions = 1;</code>
     */
    public Builder addDimensions(com.google.cloud.timeseriesinsights.v1.PinnedDimension value) {
      if (dimensionsBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureDimensionsIsMutable();
        dimensions_.add(value);
        onChanged();
      } else {
        dimensionsBuilder_.addMessage(value);
      }
      return this;
    }
    /**
     * <pre>
     * Values for all categorical dimensions that uniquely identify this slice.
     * </pre>
     *
     * <code>repeated .google.cloud.timeseriesinsights.v1.PinnedDimension dimensions = 1;</code>
     */
    public Builder addDimensions(
        int index, com.google.cloud.timeseriesinsights.v1.PinnedDimension value) {
      if (dimensionsBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureDimensionsIsMutable();
        dimensions_.add(index, value);
        onChanged();
      } else {
        dimensionsBuilder_.addMessage(index, value);
      }
      return this;
    }
    /**
     * <pre>
     * Values for all categorical dimensions that uniquely identify this slice.
     * </pre>
     *
     * <code>repeated .google.cloud.timeseriesinsights.v1.PinnedDimension dimensions = 1;</code>
     */
    public Builder addDimensions(
        com.google.cloud.timeseriesinsights.v1.PinnedDimension.Builder builderForValue) {
      if (dimensionsBuilder_ == null) {
        ensureDimensionsIsMutable();
        dimensions_.add(builderForValue.build());
        onChanged();
      } else {
        dimensionsBuilder_.addMessage(builderForValue.build());
      }
      return this;
    }
    /**
     * <pre>
     * Values for all categorical dimensions that uniquely identify this slice.
     * </pre>
     *
     * <code>repeated .google.cloud.timeseriesinsights.v1.PinnedDimension dimensions = 1;</code>
     */
    public Builder addDimensions(
        int index, com.google.cloud.timeseriesinsights.v1.PinnedDimension.Builder builderForValue) {
      if (dimensionsBuilder_ == null) {
        ensureDimensionsIsMutable();
        dimensions_.add(index, builderForValue.build());
        onChanged();
      } else {
        dimensionsBuilder_.addMessage(index, builderForValue.build());
      }
      return this;
    }
    /**
     * <pre>
     * Values for all categorical dimensions that uniquely identify this slice.
     * </pre>
     *
     * <code>repeated .google.cloud.timeseriesinsights.v1.PinnedDimension dimensions = 1;</code>
     */
    public Builder addAllDimensions(
        java.lang.Iterable<? extends com.google.cloud.timeseriesinsights.v1.PinnedDimension> values) {
      if (dimensionsBuilder_ == null) {
        ensureDimensionsIsMutable();
        com.google.protobuf.AbstractMessageLite.Builder.addAll(
            values, dimensions_);
        onChanged();
      } else {
        dimensionsBuilder_.addAllMessages(values);
      }
      return this;
    }
    /**
     * <pre>
     * Values for all categorical dimensions that uniquely identify this slice.
     * </pre>
     *
     * <code>repeated .google.cloud.timeseriesinsights.v1.PinnedDimension dimensions = 1;</code>
     */
    public Builder clearDimensions() {
      if (dimensionsBuilder_ == null) {
        dimensions_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000001);
        onChanged();
      } else {
        dimensionsBuilder_.clear();
      }
      return this;
    }
    /**
     * <pre>
     * Values for all categorical dimensions that uniquely identify this slice.
     * </pre>
     *
     * <code>repeated .google.cloud.timeseriesinsights.v1.PinnedDimension dimensions = 1;</code>
     */
    public Builder removeDimensions(int index) {
      if (dimensionsBuilder_ == null) {
        ensureDimensionsIsMutable();
        dimensions_.remove(index);
        onChanged();
      } else {
        dimensionsBuilder_.remove(index);
      }
      return this;
    }
    /**
     * <pre>
     * Values for all categorical dimensions that uniquely identify this slice.
     * </pre>
     *
     * <code>repeated .google.cloud.timeseriesinsights.v1.PinnedDimension dimensions = 1;</code>
     */
    public com.google.cloud.timeseriesinsights.v1.PinnedDimension.Builder getDimensionsBuilder(
        int index) {
      return getDimensionsFieldBuilder().getBuilder(index);
    }
    /**
     * <pre>
     * Values for all categorical dimensions that uniquely identify this slice.
     * </pre>
     *
     * <code>repeated .google.cloud.timeseriesinsights.v1.PinnedDimension dimensions = 1;</code>
     */
    public com.google.cloud.timeseriesinsights.v1.PinnedDimensionOrBuilder getDimensionsOrBuilder(
        int index) {
      if (dimensionsBuilder_ == null) {
        return dimensions_.get(index);  } else {
        return dimensionsBuilder_.getMessageOrBuilder(index);
      }
    }
    /**
     * <pre>
     * Values for all categorical dimensions that uniquely identify this slice.
     * </pre>
     *
     * <code>repeated .google.cloud.timeseriesinsights.v1.PinnedDimension dimensions = 1;</code>
     */
    public java.util.List<? extends com.google.cloud.timeseriesinsights.v1.PinnedDimensionOrBuilder> 
         getDimensionsOrBuilderList() {
      if (dimensionsBuilder_ != null) {
        return dimensionsBuilder_.getMessageOrBuilderList();
      } else {
        return java.util.Collections.unmodifiableList(dimensions_);
      }
    }
    /**
     * <pre>
     * Values for all categorical dimensions that uniquely identify this slice.
     * </pre>
     *
     * <code>repeated .google.cloud.timeseriesinsights.v1.PinnedDimension dimensions = 1;</code>
     */
    public com.google.cloud.timeseriesinsights.v1.PinnedDimension.Builder addDimensionsBuilder() {
      return getDimensionsFieldBuilder().addBuilder(
          com.google.cloud.timeseriesinsights.v1.PinnedDimension.getDefaultInstance());
    }
    /**
     * <pre>
     * Values for all categorical dimensions that uniquely identify this slice.
     * </pre>
     *
     * <code>repeated .google.cloud.timeseriesinsights.v1.PinnedDimension dimensions = 1;</code>
     */
    public com.google.cloud.timeseriesinsights.v1.PinnedDimension.Builder addDimensionsBuilder(
        int index) {
      return getDimensionsFieldBuilder().addBuilder(
          index, com.google.cloud.timeseriesinsights.v1.PinnedDimension.getDefaultInstance());
    }
    /**
     * <pre>
     * Values for all categorical dimensions that uniquely identify this slice.
     * </pre>
     *
     * <code>repeated .google.cloud.timeseriesinsights.v1.PinnedDimension dimensions = 1;</code>
     */
    public java.util.List<com.google.cloud.timeseriesinsights.v1.PinnedDimension.Builder> 
         getDimensionsBuilderList() {
      return getDimensionsFieldBuilder().getBuilderList();
    }
    private com.google.protobuf.RepeatedFieldBuilderV3<
        com.google.cloud.timeseriesinsights.v1.PinnedDimension, com.google.cloud.timeseriesinsights.v1.PinnedDimension.Builder, com.google.cloud.timeseriesinsights.v1.PinnedDimensionOrBuilder> 
        getDimensionsFieldBuilder() {
      if (dimensionsBuilder_ == null) {
        dimensionsBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<
            com.google.cloud.timeseriesinsights.v1.PinnedDimension, com.google.cloud.timeseriesinsights.v1.PinnedDimension.Builder, com.google.cloud.timeseriesinsights.v1.PinnedDimensionOrBuilder>(
                dimensions_,
                ((bitField0_ & 0x00000001) != 0),
                getParentForChildren(),
                isClean());
        dimensions_ = null;
      }
      return dimensionsBuilder_;
    }

    private double detectionPointActual_ ;
    /**
     * <pre>
     * The actual value at the detection time (see
     * [detectionTime][google.cloud.timeseriesinsights.v1.QueryDataSetRequest.detection_time]).
     * **NOTE**: This value can be an estimate, so it should not be used as a
     * source of truth.
     * </pre>
     *
     * <code>optional double detection_point_actual = 11;</code>
     * @return Whether the detectionPointActual field is set.
     */
    @java.lang.Override
    public boolean hasDetectionPointActual() {
      return ((bitField0_ & 0x00000002) != 0);
    }
    /**
     * <pre>
     * The actual value at the detection time (see
     * [detectionTime][google.cloud.timeseriesinsights.v1.QueryDataSetRequest.detection_time]).
     * **NOTE**: This value can be an estimate, so it should not be used as a
     * source of truth.
     * </pre>
     *
     * <code>optional double detection_point_actual = 11;</code>
     * @return The detectionPointActual.
     */
    @java.lang.Override
    public double getDetectionPointActual() {
      return detectionPointActual_;
    }
    /**
     * <pre>
     * The actual value at the detection time (see
     * [detectionTime][google.cloud.timeseriesinsights.v1.QueryDataSetRequest.detection_time]).
     * **NOTE**: This value can be an estimate, so it should not be used as a
     * source of truth.
     * </pre>
     *
     * <code>optional double detection_point_actual = 11;</code>
     * @param value The detectionPointActual to set.
     * @return This builder for chaining.
     */
    public Builder setDetectionPointActual(double value) {
      
      detectionPointActual_ = value;
      bitField0_ |= 0x00000002;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * The actual value at the detection time (see
     * [detectionTime][google.cloud.timeseriesinsights.v1.QueryDataSetRequest.detection_time]).
     * **NOTE**: This value can be an estimate, so it should not be used as a
     * source of truth.
     * </pre>
     *
     * <code>optional double detection_point_actual = 11;</code>
     * @return This builder for chaining.
     */
    public Builder clearDetectionPointActual() {
      bitField0_ = (bitField0_ & ~0x00000002);
      detectionPointActual_ = 0D;
      onChanged();
      return this;
    }

    private double detectionPointForecast_ ;
    /**
     * <pre>
     * The expected value at the detection time, which is obtained by forecasting
     * on the historical time series.
     * </pre>
     *
     * <code>optional double detection_point_forecast = 12;</code>
     * @return Whether the detectionPointForecast field is set.
     */
    @java.lang.Override
    public boolean hasDetectionPointForecast() {
      return ((bitField0_ & 0x00000004) != 0);
    }
    /**
     * <pre>
     * The expected value at the detection time, which is obtained by forecasting
     * on the historical time series.
     * </pre>
     *
     * <code>optional double detection_point_forecast = 12;</code>
     * @return The detectionPointForecast.
     */
    @java.lang.Override
    public double getDetectionPointForecast() {
      return detectionPointForecast_;
    }
    /**
     * <pre>
     * The expected value at the detection time, which is obtained by forecasting
     * on the historical time series.
     * </pre>
     *
     * <code>optional double detection_point_forecast = 12;</code>
     * @param value The detectionPointForecast to set.
     * @return This builder for chaining.
     */
    public Builder setDetectionPointForecast(double value) {
      
      detectionPointForecast_ = value;
      bitField0_ |= 0x00000004;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * The expected value at the detection time, which is obtained by forecasting
     * on the historical time series.
     * </pre>
     *
     * <code>optional double detection_point_forecast = 12;</code>
     * @return This builder for chaining.
     */
    public Builder clearDetectionPointForecast() {
      bitField0_ = (bitField0_ & ~0x00000004);
      detectionPointForecast_ = 0D;
      onChanged();
      return this;
    }

    private double expectedDeviation_ ;
    /**
     * <pre>
     * How much our forecast model expects the detection point actual will
     * deviate from its forecasted value based on how well it fit the input time
     * series.
     * In general, we expect the `detectionPointActual` to
     * be in the `[detectionPointForecast - expectedDeviation,
     * detectionPointForecast + expectedDeviation]` range. The more the actual
     * value is outside this range, the more statistically significant the
     * anomaly is.
     * The expected deviation is always positive.
     * </pre>
     *
     * <code>optional double expected_deviation = 16;</code>
     * @return Whether the expectedDeviation field is set.
     */
    @java.lang.Override
    public boolean hasExpectedDeviation() {
      return ((bitField0_ & 0x00000008) != 0);
    }
    /**
     * <pre>
     * How much our forecast model expects the detection point actual will
     * deviate from its forecasted value based on how well it fit the input time
     * series.
     * In general, we expect the `detectionPointActual` to
     * be in the `[detectionPointForecast - expectedDeviation,
     * detectionPointForecast + expectedDeviation]` range. The more the actual
     * value is outside this range, the more statistically significant the
     * anomaly is.
     * The expected deviation is always positive.
     * </pre>
     *
     * <code>optional double expected_deviation = 16;</code>
     * @return The expectedDeviation.
     */
    @java.lang.Override
    public double getExpectedDeviation() {
      return expectedDeviation_;
    }
    /**
     * <pre>
     * How much our forecast model expects the detection point actual will
     * deviate from its forecasted value based on how well it fit the input time
     * series.
     * In general, we expect the `detectionPointActual` to
     * be in the `[detectionPointForecast - expectedDeviation,
     * detectionPointForecast + expectedDeviation]` range. The more the actual
     * value is outside this range, the more statistically significant the
     * anomaly is.
     * The expected deviation is always positive.
     * </pre>
     *
     * <code>optional double expected_deviation = 16;</code>
     * @param value The expectedDeviation to set.
     * @return This builder for chaining.
     */
    public Builder setExpectedDeviation(double value) {
      
      expectedDeviation_ = value;
      bitField0_ |= 0x00000008;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * How much our forecast model expects the detection point actual will
     * deviate from its forecasted value based on how well it fit the input time
     * series.
     * In general, we expect the `detectionPointActual` to
     * be in the `[detectionPointForecast - expectedDeviation,
     * detectionPointForecast + expectedDeviation]` range. The more the actual
     * value is outside this range, the more statistically significant the
     * anomaly is.
     * The expected deviation is always positive.
     * </pre>
     *
     * <code>optional double expected_deviation = 16;</code>
     * @return This builder for chaining.
     */
    public Builder clearExpectedDeviation() {
      bitField0_ = (bitField0_ & ~0x00000008);
      expectedDeviation_ = 0D;
      onChanged();
      return this;
    }

    private double anomalyScore_ ;
    /**
     * <pre>
     * Summarizes how significant the change between the actual and forecasted
     * detection points are compared with the historical patterns observed on the
     * [history][google.cloud.timeseriesinsights.v1.EvaluatedSlice.history] time series.
     * Defined as *|a - f| / (e + nt)*, where:
     * - *a* is the [detectionPointActual][google.cloud.timeseriesinsights.v1.EvaluatedSlice.detection_point_actual].
     * - *f* is the [detectionPointForecast][google.cloud.timeseriesinsights.v1.EvaluatedSlice.detection_point_forecast].
     * - *e* is the [expectedDeviation][google.cloud.timeseriesinsights.v1.EvaluatedSlice.expected_deviation].
     * - *nt` is the [noiseThreshold][google.cloud.timeseriesinsights.v1.ForecastParams.noise_threshold].
     * Anomaly scores between different requests and datasets are comparable. As
     * a guideline, the risk of a slice being an anomaly based on the anomaly
     * score is:
     * - **Very High** if `anomalyScore` &gt; 5.
     * - **High** if the `anomalyScore` is in the [2, 5] range.
     * - **Medium** if the `anomalyScore` is in the [1, 2) range.
     * - **Low** if the `anomalyScore` is &lt; 1.
     * If there were issues evaluating this slice, then the anomaly score will be
     * set to -1.0 and the [status][google.cloud.timeseriesinsights.v1.EvaluatedSlice.status] field will contain details on what
     * went wrong.
     * </pre>
     *
     * <code>optional double anomaly_score = 17;</code>
     * @return Whether the anomalyScore field is set.
     */
    @java.lang.Override
    public boolean hasAnomalyScore() {
      return ((bitField0_ & 0x00000010) != 0);
    }
    /**
     * <pre>
     * Summarizes how significant the change between the actual and forecasted
     * detection points are compared with the historical patterns observed on the
     * [history][google.cloud.timeseriesinsights.v1.EvaluatedSlice.history] time series.
     * Defined as *|a - f| / (e + nt)*, where:
     * - *a* is the [detectionPointActual][google.cloud.timeseriesinsights.v1.EvaluatedSlice.detection_point_actual].
     * - *f* is the [detectionPointForecast][google.cloud.timeseriesinsights.v1.EvaluatedSlice.detection_point_forecast].
     * - *e* is the [expectedDeviation][google.cloud.timeseriesinsights.v1.EvaluatedSlice.expected_deviation].
     * - *nt` is the [noiseThreshold][google.cloud.timeseriesinsights.v1.ForecastParams.noise_threshold].
     * Anomaly scores between different requests and datasets are comparable. As
     * a guideline, the risk of a slice being an anomaly based on the anomaly
     * score is:
     * - **Very High** if `anomalyScore` &gt; 5.
     * - **High** if the `anomalyScore` is in the [2, 5] range.
     * - **Medium** if the `anomalyScore` is in the [1, 2) range.
     * - **Low** if the `anomalyScore` is &lt; 1.
     * If there were issues evaluating this slice, then the anomaly score will be
     * set to -1.0 and the [status][google.cloud.timeseriesinsights.v1.EvaluatedSlice.status] field will contain details on what
     * went wrong.
     * </pre>
     *
     * <code>optional double anomaly_score = 17;</code>
     * @return The anomalyScore.
     */
    @java.lang.Override
    public double getAnomalyScore() {
      return anomalyScore_;
    }
    /**
     * <pre>
     * Summarizes how significant the change between the actual and forecasted
     * detection points are compared with the historical patterns observed on the
     * [history][google.cloud.timeseriesinsights.v1.EvaluatedSlice.history] time series.
     * Defined as *|a - f| / (e + nt)*, where:
     * - *a* is the [detectionPointActual][google.cloud.timeseriesinsights.v1.EvaluatedSlice.detection_point_actual].
     * - *f* is the [detectionPointForecast][google.cloud.timeseriesinsights.v1.EvaluatedSlice.detection_point_forecast].
     * - *e* is the [expectedDeviation][google.cloud.timeseriesinsights.v1.EvaluatedSlice.expected_deviation].
     * - *nt` is the [noiseThreshold][google.cloud.timeseriesinsights.v1.ForecastParams.noise_threshold].
     * Anomaly scores between different requests and datasets are comparable. As
     * a guideline, the risk of a slice being an anomaly based on the anomaly
     * score is:
     * - **Very High** if `anomalyScore` &gt; 5.
     * - **High** if the `anomalyScore` is in the [2, 5] range.
     * - **Medium** if the `anomalyScore` is in the [1, 2) range.
     * - **Low** if the `anomalyScore` is &lt; 1.
     * If there were issues evaluating this slice, then the anomaly score will be
     * set to -1.0 and the [status][google.cloud.timeseriesinsights.v1.EvaluatedSlice.status] field will contain details on what
     * went wrong.
     * </pre>
     *
     * <code>optional double anomaly_score = 17;</code>
     * @param value The anomalyScore to set.
     * @return This builder for chaining.
     */
    public Builder setAnomalyScore(double value) {
      
      anomalyScore_ = value;
      bitField0_ |= 0x00000010;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * Summarizes how significant the change between the actual and forecasted
     * detection points are compared with the historical patterns observed on the
     * [history][google.cloud.timeseriesinsights.v1.EvaluatedSlice.history] time series.
     * Defined as *|a - f| / (e + nt)*, where:
     * - *a* is the [detectionPointActual][google.cloud.timeseriesinsights.v1.EvaluatedSlice.detection_point_actual].
     * - *f* is the [detectionPointForecast][google.cloud.timeseriesinsights.v1.EvaluatedSlice.detection_point_forecast].
     * - *e* is the [expectedDeviation][google.cloud.timeseriesinsights.v1.EvaluatedSlice.expected_deviation].
     * - *nt` is the [noiseThreshold][google.cloud.timeseriesinsights.v1.ForecastParams.noise_threshold].
     * Anomaly scores between different requests and datasets are comparable. As
     * a guideline, the risk of a slice being an anomaly based on the anomaly
     * score is:
     * - **Very High** if `anomalyScore` &gt; 5.
     * - **High** if the `anomalyScore` is in the [2, 5] range.
     * - **Medium** if the `anomalyScore` is in the [1, 2) range.
     * - **Low** if the `anomalyScore` is &lt; 1.
     * If there were issues evaluating this slice, then the anomaly score will be
     * set to -1.0 and the [status][google.cloud.timeseriesinsights.v1.EvaluatedSlice.status] field will contain details on what
     * went wrong.
     * </pre>
     *
     * <code>optional double anomaly_score = 17;</code>
     * @return This builder for chaining.
     */
    public Builder clearAnomalyScore() {
      bitField0_ = (bitField0_ & ~0x00000010);
      anomalyScore_ = 0D;
      onChanged();
      return this;
    }

    private com.google.cloud.timeseriesinsights.v1.Timeseries history_;
    private com.google.protobuf.SingleFieldBuilderV3<
        com.google.cloud.timeseriesinsights.v1.Timeseries, com.google.cloud.timeseriesinsights.v1.Timeseries.Builder, com.google.cloud.timeseriesinsights.v1.TimeseriesOrBuilder> historyBuilder_;
    /**
     * <pre>
     * The actual values in the `[`
     * [detectionTime][google.cloud.timeseriesinsights.v1.QueryDataSetRequest.detection_time] `-`
     * [forecastHistory][google.cloud.timeseriesinsights.v1.TimeseriesParams.forecast_history]`,`
     * [detectionTime][google.cloud.timeseriesinsights.v1.QueryDataSetRequest.detection_time] `]` time
     * range.
     * **NOTE**: This field is only populated if
     * [returnTimeseries][google.cloud.timeseriesinsights.v1.QueryDataSetRequest.return_timeseries] is true.
     * </pre>
     *
     * <code>.google.cloud.timeseriesinsights.v1.Timeseries history = 5;</code>
     * @return Whether the history field is set.
     */
    public boolean hasHistory() {
      return ((bitField0_ & 0x00000020) != 0);
    }
    /**
     * <pre>
     * The actual values in the `[`
     * [detectionTime][google.cloud.timeseriesinsights.v1.QueryDataSetRequest.detection_time] `-`
     * [forecastHistory][google.cloud.timeseriesinsights.v1.TimeseriesParams.forecast_history]`,`
     * [detectionTime][google.cloud.timeseriesinsights.v1.QueryDataSetRequest.detection_time] `]` time
     * range.
     * **NOTE**: This field is only populated if
     * [returnTimeseries][google.cloud.timeseriesinsights.v1.QueryDataSetRequest.return_timeseries] is true.
     * </pre>
     *
     * <code>.google.cloud.timeseriesinsights.v1.Timeseries history = 5;</code>
     * @return The history.
     */
    public com.google.cloud.timeseriesinsights.v1.Timeseries getHistory() {
      if (historyBuilder_ == null) {
        return history_ == null ? com.google.cloud.timeseriesinsights.v1.Timeseries.getDefaultInstance() : history_;
      } else {
        return historyBuilder_.getMessage();
      }
    }
    /**
     * <pre>
     * The actual values in the `[`
     * [detectionTime][google.cloud.timeseriesinsights.v1.QueryDataSetRequest.detection_time] `-`
     * [forecastHistory][google.cloud.timeseriesinsights.v1.TimeseriesParams.forecast_history]`,`
     * [detectionTime][google.cloud.timeseriesinsights.v1.QueryDataSetRequest.detection_time] `]` time
     * range.
     * **NOTE**: This field is only populated if
     * [returnTimeseries][google.cloud.timeseriesinsights.v1.QueryDataSetRequest.return_timeseries] is true.
     * </pre>
     *
     * <code>.google.cloud.timeseriesinsights.v1.Timeseries history = 5;</code>
     */
    public Builder setHistory(com.google.cloud.timeseriesinsights.v1.Timeseries value) {
      if (historyBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        history_ = value;
      } else {
        historyBuilder_.setMessage(value);
      }
      bitField0_ |= 0x00000020;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * The actual values in the `[`
     * [detectionTime][google.cloud.timeseriesinsights.v1.QueryDataSetRequest.detection_time] `-`
     * [forecastHistory][google.cloud.timeseriesinsights.v1.TimeseriesParams.forecast_history]`,`
     * [detectionTime][google.cloud.timeseriesinsights.v1.QueryDataSetRequest.detection_time] `]` time
     * range.
     * **NOTE**: This field is only populated if
     * [returnTimeseries][google.cloud.timeseriesinsights.v1.QueryDataSetRequest.return_timeseries] is true.
     * </pre>
     *
     * <code>.google.cloud.timeseriesinsights.v1.Timeseries history = 5;</code>
     */
    public Builder setHistory(
        com.google.cloud.timeseriesinsights.v1.Timeseries.Builder builderForValue) {
      if (historyBuilder_ == null) {
        history_ = builderForValue.build();
      } else {
        historyBuilder_.setMessage(builderForValue.build());
      }
      bitField0_ |= 0x00000020;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * The actual values in the `[`
     * [detectionTime][google.cloud.timeseriesinsights.v1.QueryDataSetRequest.detection_time] `-`
     * [forecastHistory][google.cloud.timeseriesinsights.v1.TimeseriesParams.forecast_history]`,`
     * [detectionTime][google.cloud.timeseriesinsights.v1.QueryDataSetRequest.detection_time] `]` time
     * range.
     * **NOTE**: This field is only populated if
     * [returnTimeseries][google.cloud.timeseriesinsights.v1.QueryDataSetRequest.return_timeseries] is true.
     * </pre>
     *
     * <code>.google.cloud.timeseriesinsights.v1.Timeseries history = 5;</code>
     */
    public Builder mergeHistory(com.google.cloud.timeseriesinsights.v1.Timeseries value) {
      if (historyBuilder_ == null) {
        if (((bitField0_ & 0x00000020) != 0) &&
          history_ != null &&
          history_ != com.google.cloud.timeseriesinsights.v1.Timeseries.getDefaultInstance()) {
          getHistoryBuilder().mergeFrom(value);
        } else {
          history_ = value;
        }
      } else {
        historyBuilder_.mergeFrom(value);
      }
      bitField0_ |= 0x00000020;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * The actual values in the `[`
     * [detectionTime][google.cloud.timeseriesinsights.v1.QueryDataSetRequest.detection_time] `-`
     * [forecastHistory][google.cloud.timeseriesinsights.v1.TimeseriesParams.forecast_history]`,`
     * [detectionTime][google.cloud.timeseriesinsights.v1.QueryDataSetRequest.detection_time] `]` time
     * range.
     * **NOTE**: This field is only populated if
     * [returnTimeseries][google.cloud.timeseriesinsights.v1.QueryDataSetRequest.return_timeseries] is true.
     * </pre>
     *
     * <code>.google.cloud.timeseriesinsights.v1.Timeseries history = 5;</code>
     */
    public Builder clearHistory() {
      bitField0_ = (bitField0_ & ~0x00000020);
      history_ = null;
      if (historyBuilder_ != null) {
        historyBuilder_.dispose();
        historyBuilder_ = null;
      }
      onChanged();
      return this;
    }
    /**
     * <pre>
     * The actual values in the `[`
     * [detectionTime][google.cloud.timeseriesinsights.v1.QueryDataSetRequest.detection_time] `-`
     * [forecastHistory][google.cloud.timeseriesinsights.v1.TimeseriesParams.forecast_history]`,`
     * [detectionTime][google.cloud.timeseriesinsights.v1.QueryDataSetRequest.detection_time] `]` time
     * range.
     * **NOTE**: This field is only populated if
     * [returnTimeseries][google.cloud.timeseriesinsights.v1.QueryDataSetRequest.return_timeseries] is true.
     * </pre>
     *
     * <code>.google.cloud.timeseriesinsights.v1.Timeseries history = 5;</code>
     */
    public com.google.cloud.timeseriesinsights.v1.Timeseries.Builder getHistoryBuilder() {
      bitField0_ |= 0x00000020;
      onChanged();
      return getHistoryFieldBuilder().getBuilder();
    }
    /**
     * <pre>
     * The actual values in the `[`
     * [detectionTime][google.cloud.timeseriesinsights.v1.QueryDataSetRequest.detection_time] `-`
     * [forecastHistory][google.cloud.timeseriesinsights.v1.TimeseriesParams.forecast_history]`,`
     * [detectionTime][google.cloud.timeseriesinsights.v1.QueryDataSetRequest.detection_time] `]` time
     * range.
     * **NOTE**: This field is only populated if
     * [returnTimeseries][google.cloud.timeseriesinsights.v1.QueryDataSetRequest.return_timeseries] is true.
     * </pre>
     *
     * <code>.google.cloud.timeseriesinsights.v1.Timeseries history = 5;</code>
     */
    public com.google.cloud.timeseriesinsights.v1.TimeseriesOrBuilder getHistoryOrBuilder() {
      if (historyBuilder_ != null) {
        return historyBuilder_.getMessageOrBuilder();
      } else {
        return history_ == null ?
            com.google.cloud.timeseriesinsights.v1.Timeseries.getDefaultInstance() : history_;
      }
    }
    /**
     * <pre>
     * The actual values in the `[`
     * [detectionTime][google.cloud.timeseriesinsights.v1.QueryDataSetRequest.detection_time] `-`
     * [forecastHistory][google.cloud.timeseriesinsights.v1.TimeseriesParams.forecast_history]`,`
     * [detectionTime][google.cloud.timeseriesinsights.v1.QueryDataSetRequest.detection_time] `]` time
     * range.
     * **NOTE**: This field is only populated if
     * [returnTimeseries][google.cloud.timeseriesinsights.v1.QueryDataSetRequest.return_timeseries] is true.
     * </pre>
     *
     * <code>.google.cloud.timeseriesinsights.v1.Timeseries history = 5;</code>
     */
    private com.google.protobuf.SingleFieldBuilderV3<
        com.google.cloud.timeseriesinsights.v1.Timeseries, com.google.cloud.timeseriesinsights.v1.Timeseries.Builder, com.google.cloud.timeseriesinsights.v1.TimeseriesOrBuilder> 
        getHistoryFieldBuilder() {
      if (historyBuilder_ == null) {
        historyBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
            com.google.cloud.timeseriesinsights.v1.Timeseries, com.google.cloud.timeseriesinsights.v1.Timeseries.Builder, com.google.cloud.timeseriesinsights.v1.TimeseriesOrBuilder>(
                getHistory(),
                getParentForChildren(),
                isClean());
        history_ = null;
      }
      return historyBuilder_;
    }

    private com.google.cloud.timeseriesinsights.v1.Timeseries forecast_;
    private com.google.protobuf.SingleFieldBuilderV3<
        com.google.cloud.timeseriesinsights.v1.Timeseries, com.google.cloud.timeseriesinsights.v1.Timeseries.Builder, com.google.cloud.timeseriesinsights.v1.TimeseriesOrBuilder> forecastBuilder_;
    /**
     * <pre>
     * The forecasted values in the `[`
     * [detectionTime][google.cloud.timeseriesinsights.v1.QueryDataSetRequest.detection_time] `+`
     * [granularity][google.cloud.timeseriesinsights.v1.TimeseriesParams.granularity]`,`
     * [forecastParams.horizonTime][google.cloud.timeseriesinsights.v1.QueryDataSetRequest.forecast_params] `]` time
     * range.
     * **NOTE**: This field is only populated if
     * [returnTimeseries][google.cloud.timeseriesinsights.v1.QueryDataSetRequest.return_timeseries] is true.
     * </pre>
     *
     * <code>.google.cloud.timeseriesinsights.v1.Timeseries forecast = 10;</code>
     * @return Whether the forecast field is set.
     */
    public boolean hasForecast() {
      return ((bitField0_ & 0x00000040) != 0);
    }
    /**
     * <pre>
     * The forecasted values in the `[`
     * [detectionTime][google.cloud.timeseriesinsights.v1.QueryDataSetRequest.detection_time] `+`
     * [granularity][google.cloud.timeseriesinsights.v1.TimeseriesParams.granularity]`,`
     * [forecastParams.horizonTime][google.cloud.timeseriesinsights.v1.QueryDataSetRequest.forecast_params] `]` time
     * range.
     * **NOTE**: This field is only populated if
     * [returnTimeseries][google.cloud.timeseriesinsights.v1.QueryDataSetRequest.return_timeseries] is true.
     * </pre>
     *
     * <code>.google.cloud.timeseriesinsights.v1.Timeseries forecast = 10;</code>
     * @return The forecast.
     */
    public com.google.cloud.timeseriesinsights.v1.Timeseries getForecast() {
      if (forecastBuilder_ == null) {
        return forecast_ == null ? com.google.cloud.timeseriesinsights.v1.Timeseries.getDefaultInstance() : forecast_;
      } else {
        return forecastBuilder_.getMessage();
      }
    }
    /**
     * <pre>
     * The forecasted values in the `[`
     * [detectionTime][google.cloud.timeseriesinsights.v1.QueryDataSetRequest.detection_time] `+`
     * [granularity][google.cloud.timeseriesinsights.v1.TimeseriesParams.granularity]`,`
     * [forecastParams.horizonTime][google.cloud.timeseriesinsights.v1.QueryDataSetRequest.forecast_params] `]` time
     * range.
     * **NOTE**: This field is only populated if
     * [returnTimeseries][google.cloud.timeseriesinsights.v1.QueryDataSetRequest.return_timeseries] is true.
     * </pre>
     *
     * <code>.google.cloud.timeseriesinsights.v1.Timeseries forecast = 10;</code>
     */
    public Builder setForecast(com.google.cloud.timeseriesinsights.v1.Timeseries value) {
      if (forecastBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        forecast_ = value;
      } else {
        forecastBuilder_.setMessage(value);
      }
      bitField0_ |= 0x00000040;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * The forecasted values in the `[`
     * [detectionTime][google.cloud.timeseriesinsights.v1.QueryDataSetRequest.detection_time] `+`
     * [granularity][google.cloud.timeseriesinsights.v1.TimeseriesParams.granularity]`,`
     * [forecastParams.horizonTime][google.cloud.timeseriesinsights.v1.QueryDataSetRequest.forecast_params] `]` time
     * range.
     * **NOTE**: This field is only populated if
     * [returnTimeseries][google.cloud.timeseriesinsights.v1.QueryDataSetRequest.return_timeseries] is true.
     * </pre>
     *
     * <code>.google.cloud.timeseriesinsights.v1.Timeseries forecast = 10;</code>
     */
    public Builder setForecast(
        com.google.cloud.timeseriesinsights.v1.Timeseries.Builder builderForValue) {
      if (forecastBuilder_ == null) {
        forecast_ = builderForValue.build();
      } else {
        forecastBuilder_.setMessage(builderForValue.build());
      }
      bitField0_ |= 0x00000040;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * The forecasted values in the `[`
     * [detectionTime][google.cloud.timeseriesinsights.v1.QueryDataSetRequest.detection_time] `+`
     * [granularity][google.cloud.timeseriesinsights.v1.TimeseriesParams.granularity]`,`
     * [forecastParams.horizonTime][google.cloud.timeseriesinsights.v1.QueryDataSetRequest.forecast_params] `]` time
     * range.
     * **NOTE**: This field is only populated if
     * [returnTimeseries][google.cloud.timeseriesinsights.v1.QueryDataSetRequest.return_timeseries] is true.
     * </pre>
     *
     * <code>.google.cloud.timeseriesinsights.v1.Timeseries forecast = 10;</code>
     */
    public Builder mergeForecast(com.google.cloud.timeseriesinsights.v1.Timeseries value) {
      if (forecastBuilder_ == null) {
        if (((bitField0_ & 0x00000040) != 0) &&
          forecast_ != null &&
          forecast_ != com.google.cloud.timeseriesinsights.v1.Timeseries.getDefaultInstance()) {
          getForecastBuilder().mergeFrom(value);
        } else {
          forecast_ = value;
        }
      } else {
        forecastBuilder_.mergeFrom(value);
      }
      bitField0_ |= 0x00000040;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * The forecasted values in the `[`
     * [detectionTime][google.cloud.timeseriesinsights.v1.QueryDataSetRequest.detection_time] `+`
     * [granularity][google.cloud.timeseriesinsights.v1.TimeseriesParams.granularity]`,`
     * [forecastParams.horizonTime][google.cloud.timeseriesinsights.v1.QueryDataSetRequest.forecast_params] `]` time
     * range.
     * **NOTE**: This field is only populated if
     * [returnTimeseries][google.cloud.timeseriesinsights.v1.QueryDataSetRequest.return_timeseries] is true.
     * </pre>
     *
     * <code>.google.cloud.timeseriesinsights.v1.Timeseries forecast = 10;</code>
     */
    public Builder clearForecast() {
      bitField0_ = (bitField0_ & ~0x00000040);
      forecast_ = null;
      if (forecastBuilder_ != null) {
        forecastBuilder_.dispose();
        forecastBuilder_ = null;
      }
      onChanged();
      return this;
    }
    /**
     * <pre>
     * The forecasted values in the `[`
     * [detectionTime][google.cloud.timeseriesinsights.v1.QueryDataSetRequest.detection_time] `+`
     * [granularity][google.cloud.timeseriesinsights.v1.TimeseriesParams.granularity]`,`
     * [forecastParams.horizonTime][google.cloud.timeseriesinsights.v1.QueryDataSetRequest.forecast_params] `]` time
     * range.
     * **NOTE**: This field is only populated if
     * [returnTimeseries][google.cloud.timeseriesinsights.v1.QueryDataSetRequest.return_timeseries] is true.
     * </pre>
     *
     * <code>.google.cloud.timeseriesinsights.v1.Timeseries forecast = 10;</code>
     */
    public com.google.cloud.timeseriesinsights.v1.Timeseries.Builder getForecastBuilder() {
      bitField0_ |= 0x00000040;
      onChanged();
      return getForecastFieldBuilder().getBuilder();
    }
    /**
     * <pre>
     * The forecasted values in the `[`
     * [detectionTime][google.cloud.timeseriesinsights.v1.QueryDataSetRequest.detection_time] `+`
     * [granularity][google.cloud.timeseriesinsights.v1.TimeseriesParams.granularity]`,`
     * [forecastParams.horizonTime][google.cloud.timeseriesinsights.v1.QueryDataSetRequest.forecast_params] `]` time
     * range.
     * **NOTE**: This field is only populated if
     * [returnTimeseries][google.cloud.timeseriesinsights.v1.QueryDataSetRequest.return_timeseries] is true.
     * </pre>
     *
     * <code>.google.cloud.timeseriesinsights.v1.Timeseries forecast = 10;</code>
     */
    public com.google.cloud.timeseriesinsights.v1.TimeseriesOrBuilder getForecastOrBuilder() {
      if (forecastBuilder_ != null) {
        return forecastBuilder_.getMessageOrBuilder();
      } else {
        return forecast_ == null ?
            com.google.cloud.timeseriesinsights.v1.Timeseries.getDefaultInstance() : forecast_;
      }
    }
    /**
     * <pre>
     * The forecasted values in the `[`
     * [detectionTime][google.cloud.timeseriesinsights.v1.QueryDataSetRequest.detection_time] `+`
     * [granularity][google.cloud.timeseriesinsights.v1.TimeseriesParams.granularity]`,`
     * [forecastParams.horizonTime][google.cloud.timeseriesinsights.v1.QueryDataSetRequest.forecast_params] `]` time
     * range.
     * **NOTE**: This field is only populated if
     * [returnTimeseries][google.cloud.timeseriesinsights.v1.QueryDataSetRequest.return_timeseries] is true.
     * </pre>
     *
     * <code>.google.cloud.timeseriesinsights.v1.Timeseries forecast = 10;</code>
     */
    private com.google.protobuf.SingleFieldBuilderV3<
        com.google.cloud.timeseriesinsights.v1.Timeseries, com.google.cloud.timeseriesinsights.v1.Timeseries.Builder, com.google.cloud.timeseriesinsights.v1.TimeseriesOrBuilder> 
        getForecastFieldBuilder() {
      if (forecastBuilder_ == null) {
        forecastBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
            com.google.cloud.timeseriesinsights.v1.Timeseries, com.google.cloud.timeseriesinsights.v1.Timeseries.Builder, com.google.cloud.timeseriesinsights.v1.TimeseriesOrBuilder>(
                getForecast(),
                getParentForChildren(),
                isClean());
        forecast_ = null;
      }
      return forecastBuilder_;
    }

    private com.google.rpc.Status status_;
    private com.google.protobuf.SingleFieldBuilderV3<
        com.google.rpc.Status, com.google.rpc.Status.Builder, com.google.rpc.StatusOrBuilder> statusBuilder_;
    /**
     * <pre>
     * Evaluation status. Contains an error message if the `anomalyScore` is &lt; 0.
     * Possible error messages:
     * - **"Time series too sparse"**: The returned time series for this slice did
     * not contain enough data points (we require a minimum of 10).
     * - **"Not enough recent time series points"**: The time series contains the
     * minimum of 10 points, but there are not enough close in time to the
     * detection point.
     * - **"Missing detection point data"**: There were not events to be
     * aggregated within the `[detectionTime, detectionTime + granularity]` time
     * interval, so we don't have an actual value with which we can compare our
     * prediction.
     * - **"Data retrieval error"**: We failed to retrieve the time series data
     * for this slice and could not evaluate it successfully. Should be a
     * transient error.
     * - **"Internal server error"**: Internal unexpected error.
     * </pre>
     *
     * <code>.google.rpc.Status status = 18;</code>
     * @return Whether the status field is set.
     */
    public boolean hasStatus() {
      return ((bitField0_ & 0x00000080) != 0);
    }
    /**
     * <pre>
     * Evaluation status. Contains an error message if the `anomalyScore` is &lt; 0.
     * Possible error messages:
     * - **"Time series too sparse"**: The returned time series for this slice did
     * not contain enough data points (we require a minimum of 10).
     * - **"Not enough recent time series points"**: The time series contains the
     * minimum of 10 points, but there are not enough close in time to the
     * detection point.
     * - **"Missing detection point data"**: There were not events to be
     * aggregated within the `[detectionTime, detectionTime + granularity]` time
     * interval, so we don't have an actual value with which we can compare our
     * prediction.
     * - **"Data retrieval error"**: We failed to retrieve the time series data
     * for this slice and could not evaluate it successfully. Should be a
     * transient error.
     * - **"Internal server error"**: Internal unexpected error.
     * </pre>
     *
     * <code>.google.rpc.Status status = 18;</code>
     * @return The status.
     */
    public com.google.rpc.Status getStatus() {
      if (statusBuilder_ == null) {
        return status_ == null ? com.google.rpc.Status.getDefaultInstance() : status_;
      } else {
        return statusBuilder_.getMessage();
      }
    }
    /**
     * <pre>
     * Evaluation status. Contains an error message if the `anomalyScore` is &lt; 0.
     * Possible error messages:
     * - **"Time series too sparse"**: The returned time series for this slice did
     * not contain enough data points (we require a minimum of 10).
     * - **"Not enough recent time series points"**: The time series contains the
     * minimum of 10 points, but there are not enough close in time to the
     * detection point.
     * - **"Missing detection point data"**: There were not events to be
     * aggregated within the `[detectionTime, detectionTime + granularity]` time
     * interval, so we don't have an actual value with which we can compare our
     * prediction.
     * - **"Data retrieval error"**: We failed to retrieve the time series data
     * for this slice and could not evaluate it successfully. Should be a
     * transient error.
     * - **"Internal server error"**: Internal unexpected error.
     * </pre>
     *
     * <code>.google.rpc.Status status = 18;</code>
     */
    public Builder setStatus(com.google.rpc.Status value) {
      if (statusBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        status_ = value;
      } else {
        statusBuilder_.setMessage(value);
      }
      bitField0_ |= 0x00000080;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * Evaluation status. Contains an error message if the `anomalyScore` is &lt; 0.
     * Possible error messages:
     * - **"Time series too sparse"**: The returned time series for this slice did
     * not contain enough data points (we require a minimum of 10).
     * - **"Not enough recent time series points"**: The time series contains the
     * minimum of 10 points, but there are not enough close in time to the
     * detection point.
     * - **"Missing detection point data"**: There were not events to be
     * aggregated within the `[detectionTime, detectionTime + granularity]` time
     * interval, so we don't have an actual value with which we can compare our
     * prediction.
     * - **"Data retrieval error"**: We failed to retrieve the time series data
     * for this slice and could not evaluate it successfully. Should be a
     * transient error.
     * - **"Internal server error"**: Internal unexpected error.
     * </pre>
     *
     * <code>.google.rpc.Status status = 18;</code>
     */
    public Builder setStatus(
        com.google.rpc.Status.Builder builderForValue) {
      if (statusBuilder_ == null) {
        status_ = builderForValue.build();
      } else {
        statusBuilder_.setMessage(builderForValue.build());
      }
      bitField0_ |= 0x00000080;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * Evaluation status. Contains an error message if the `anomalyScore` is &lt; 0.
     * Possible error messages:
     * - **"Time series too sparse"**: The returned time series for this slice did
     * not contain enough data points (we require a minimum of 10).
     * - **"Not enough recent time series points"**: The time series contains the
     * minimum of 10 points, but there are not enough close in time to the
     * detection point.
     * - **"Missing detection point data"**: There were not events to be
     * aggregated within the `[detectionTime, detectionTime + granularity]` time
     * interval, so we don't have an actual value with which we can compare our
     * prediction.
     * - **"Data retrieval error"**: We failed to retrieve the time series data
     * for this slice and could not evaluate it successfully. Should be a
     * transient error.
     * - **"Internal server error"**: Internal unexpected error.
     * </pre>
     *
     * <code>.google.rpc.Status status = 18;</code>
     */
    public Builder mergeStatus(com.google.rpc.Status value) {
      if (statusBuilder_ == null) {
        if (((bitField0_ & 0x00000080) != 0) &&
          status_ != null &&
          status_ != com.google.rpc.Status.getDefaultInstance()) {
          getStatusBuilder().mergeFrom(value);
        } else {
          status_ = value;
        }
      } else {
        statusBuilder_.mergeFrom(value);
      }
      bitField0_ |= 0x00000080;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * Evaluation status. Contains an error message if the `anomalyScore` is &lt; 0.
     * Possible error messages:
     * - **"Time series too sparse"**: The returned time series for this slice did
     * not contain enough data points (we require a minimum of 10).
     * - **"Not enough recent time series points"**: The time series contains the
     * minimum of 10 points, but there are not enough close in time to the
     * detection point.
     * - **"Missing detection point data"**: There were not events to be
     * aggregated within the `[detectionTime, detectionTime + granularity]` time
     * interval, so we don't have an actual value with which we can compare our
     * prediction.
     * - **"Data retrieval error"**: We failed to retrieve the time series data
     * for this slice and could not evaluate it successfully. Should be a
     * transient error.
     * - **"Internal server error"**: Internal unexpected error.
     * </pre>
     *
     * <code>.google.rpc.Status status = 18;</code>
     */
    public Builder clearStatus() {
      bitField0_ = (bitField0_ & ~0x00000080);
      status_ = null;
      if (statusBuilder_ != null) {
        statusBuilder_.dispose();
        statusBuilder_ = null;
      }
      onChanged();
      return this;
    }
    /**
     * <pre>
     * Evaluation status. Contains an error message if the `anomalyScore` is &lt; 0.
     * Possible error messages:
     * - **"Time series too sparse"**: The returned time series for this slice did
     * not contain enough data points (we require a minimum of 10).
     * - **"Not enough recent time series points"**: The time series contains the
     * minimum of 10 points, but there are not enough close in time to the
     * detection point.
     * - **"Missing detection point data"**: There were not events to be
     * aggregated within the `[detectionTime, detectionTime + granularity]` time
     * interval, so we don't have an actual value with which we can compare our
     * prediction.
     * - **"Data retrieval error"**: We failed to retrieve the time series data
     * for this slice and could not evaluate it successfully. Should be a
     * transient error.
     * - **"Internal server error"**: Internal unexpected error.
     * </pre>
     *
     * <code>.google.rpc.Status status = 18;</code>
     */
    public com.google.rpc.Status.Builder getStatusBuilder() {
      bitField0_ |= 0x00000080;
      onChanged();
      return getStatusFieldBuilder().getBuilder();
    }
    /**
     * <pre>
     * Evaluation status. Contains an error message if the `anomalyScore` is &lt; 0.
     * Possible error messages:
     * - **"Time series too sparse"**: The returned time series for this slice did
     * not contain enough data points (we require a minimum of 10).
     * - **"Not enough recent time series points"**: The time series contains the
     * minimum of 10 points, but there are not enough close in time to the
     * detection point.
     * - **"Missing detection point data"**: There were not events to be
     * aggregated within the `[detectionTime, detectionTime + granularity]` time
     * interval, so we don't have an actual value with which we can compare our
     * prediction.
     * - **"Data retrieval error"**: We failed to retrieve the time series data
     * for this slice and could not evaluate it successfully. Should be a
     * transient error.
     * - **"Internal server error"**: Internal unexpected error.
     * </pre>
     *
     * <code>.google.rpc.Status status = 18;</code>
     */
    public com.google.rpc.StatusOrBuilder getStatusOrBuilder() {
      if (statusBuilder_ != null) {
        return statusBuilder_.getMessageOrBuilder();
      } else {
        return status_ == null ?
            com.google.rpc.Status.getDefaultInstance() : status_;
      }
    }
    /**
     * <pre>
     * Evaluation status. Contains an error message if the `anomalyScore` is &lt; 0.
     * Possible error messages:
     * - **"Time series too sparse"**: The returned time series for this slice did
     * not contain enough data points (we require a minimum of 10).
     * - **"Not enough recent time series points"**: The time series contains the
     * minimum of 10 points, but there are not enough close in time to the
     * detection point.
     * - **"Missing detection point data"**: There were not events to be
     * aggregated within the `[detectionTime, detectionTime + granularity]` time
     * interval, so we don't have an actual value with which we can compare our
     * prediction.
     * - **"Data retrieval error"**: We failed to retrieve the time series data
     * for this slice and could not evaluate it successfully. Should be a
     * transient error.
     * - **"Internal server error"**: Internal unexpected error.
     * </pre>
     *
     * <code>.google.rpc.Status status = 18;</code>
     */
    private com.google.protobuf.SingleFieldBuilderV3<
        com.google.rpc.Status, com.google.rpc.Status.Builder, com.google.rpc.StatusOrBuilder> 
        getStatusFieldBuilder() {
      if (statusBuilder_ == null) {
        statusBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
            com.google.rpc.Status, com.google.rpc.Status.Builder, com.google.rpc.StatusOrBuilder>(
                getStatus(),
                getParentForChildren(),
                isClean());
        status_ = null;
      }
      return statusBuilder_;
    }
    @java.lang.Override
    public final Builder setUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return super.setUnknownFields(unknownFields);
    }

    @java.lang.Override
    public final Builder mergeUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return super.mergeUnknownFields(unknownFields);
    }


    // @@protoc_insertion_point(builder_scope:google.cloud.timeseriesinsights.v1.EvaluatedSlice)
  }

  // @@protoc_insertion_point(class_scope:google.cloud.timeseriesinsights.v1.EvaluatedSlice)
  private static final com.google.cloud.timeseriesinsights.v1.EvaluatedSlice DEFAULT_INSTANCE;
  static {
    DEFAULT_INSTANCE = new com.google.cloud.timeseriesinsights.v1.EvaluatedSlice();
  }

  public static com.google.cloud.timeseriesinsights.v1.EvaluatedSlice getDefaultInstance() {
    return DEFAULT_INSTANCE;
  }

  private static final com.google.protobuf.Parser<EvaluatedSlice>
      PARSER = new com.google.protobuf.AbstractParser<EvaluatedSlice>() {
    @java.lang.Override
    public EvaluatedSlice parsePartialFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      Builder builder = newBuilder();
      try {
        builder.mergeFrom(input, extensionRegistry);
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(builder.buildPartial());
      } catch (com.google.protobuf.UninitializedMessageException e) {
        throw e.asInvalidProtocolBufferException().setUnfinishedMessage(builder.buildPartial());
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(e)
            .setUnfinishedMessage(builder.buildPartial());
      }
      return builder.buildPartial();
    }
  };

  public static com.google.protobuf.Parser<EvaluatedSlice> parser() {
    return PARSER;
  }

  @java.lang.Override
  public com.google.protobuf.Parser<EvaluatedSlice> getParserForType() {
    return PARSER;
  }

  @java.lang.Override
  public com.google.cloud.timeseriesinsights.v1.EvaluatedSlice getDefaultInstanceForType() {
    return DEFAULT_INSTANCE;
  }

}

