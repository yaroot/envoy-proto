// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: google/cloud/timeseriesinsights/v1/timeseries_insights.proto

package com.google.cloud.timeseriesinsights.v1;

/**
 * <pre>
 * Mapping of BigQuery columns to timestamp, group_id and dimensions.
 * </pre>
 *
 * Protobuf type {@code google.cloud.timeseriesinsights.v1.BigqueryMapping}
 */
public final class BigqueryMapping extends
    com.google.protobuf.GeneratedMessageV3 implements
    // @@protoc_insertion_point(message_implements:google.cloud.timeseriesinsights.v1.BigqueryMapping)
    BigqueryMappingOrBuilder {
private static final long serialVersionUID = 0L;
  // Use BigqueryMapping.newBuilder() to construct.
  private BigqueryMapping(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
    super(builder);
  }
  private BigqueryMapping() {
    timestampColumn_ = "";
    groupIdColumn_ = "";
    dimensionColumn_ = com.google.protobuf.LazyStringArrayList.EMPTY;
  }

  @java.lang.Override
  @SuppressWarnings({"unused"})
  protected java.lang.Object newInstance(
      UnusedPrivateParameter unused) {
    return new BigqueryMapping();
  }

  @java.lang.Override
  public final com.google.protobuf.UnknownFieldSet
  getUnknownFields() {
    return this.unknownFields;
  }
  public static final com.google.protobuf.Descriptors.Descriptor
      getDescriptor() {
    return com.google.cloud.timeseriesinsights.v1.TimeseriesInsightsProto.internal_static_google_cloud_timeseriesinsights_v1_BigqueryMapping_descriptor;
  }

  @java.lang.Override
  protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internalGetFieldAccessorTable() {
    return com.google.cloud.timeseriesinsights.v1.TimeseriesInsightsProto.internal_static_google_cloud_timeseriesinsights_v1_BigqueryMapping_fieldAccessorTable
        .ensureFieldAccessorsInitialized(
            com.google.cloud.timeseriesinsights.v1.BigqueryMapping.class, com.google.cloud.timeseriesinsights.v1.BigqueryMapping.Builder.class);
  }

  public static final int TIMESTAMP_COLUMN_FIELD_NUMBER = 1;
  @SuppressWarnings("serial")
  private volatile java.lang.Object timestampColumn_ = "";
  /**
   * <pre>
   * The column which should be used as the event timestamps. If not specified
   * 'Timestamp' is used by default. The column may have TIMESTAMP or INT64
   * type (the latter is interpreted as microseconds since the Unix epoch).
   * </pre>
   *
   * <code>string timestamp_column = 1;</code>
   * @return The timestampColumn.
   */
  @java.lang.Override
  public java.lang.String getTimestampColumn() {
    java.lang.Object ref = timestampColumn_;
    if (ref instanceof java.lang.String) {
      return (java.lang.String) ref;
    } else {
      com.google.protobuf.ByteString bs = 
          (com.google.protobuf.ByteString) ref;
      java.lang.String s = bs.toStringUtf8();
      timestampColumn_ = s;
      return s;
    }
  }
  /**
   * <pre>
   * The column which should be used as the event timestamps. If not specified
   * 'Timestamp' is used by default. The column may have TIMESTAMP or INT64
   * type (the latter is interpreted as microseconds since the Unix epoch).
   * </pre>
   *
   * <code>string timestamp_column = 1;</code>
   * @return The bytes for timestampColumn.
   */
  @java.lang.Override
  public com.google.protobuf.ByteString
      getTimestampColumnBytes() {
    java.lang.Object ref = timestampColumn_;
    if (ref instanceof java.lang.String) {
      com.google.protobuf.ByteString b = 
          com.google.protobuf.ByteString.copyFromUtf8(
              (java.lang.String) ref);
      timestampColumn_ = b;
      return b;
    } else {
      return (com.google.protobuf.ByteString) ref;
    }
  }

  public static final int GROUP_ID_COLUMN_FIELD_NUMBER = 2;
  @SuppressWarnings("serial")
  private volatile java.lang.Object groupIdColumn_ = "";
  /**
   * <pre>
   * The column which should be used as the group ID (grouping events into
   * sessions). If not specified 'GroupId' is used by default, if the input
   * table does not have such a column, random unique group IDs are
   * generated automatically (different group ID per input row).
   * </pre>
   *
   * <code>string group_id_column = 2;</code>
   * @return The groupIdColumn.
   */
  @java.lang.Override
  public java.lang.String getGroupIdColumn() {
    java.lang.Object ref = groupIdColumn_;
    if (ref instanceof java.lang.String) {
      return (java.lang.String) ref;
    } else {
      com.google.protobuf.ByteString bs = 
          (com.google.protobuf.ByteString) ref;
      java.lang.String s = bs.toStringUtf8();
      groupIdColumn_ = s;
      return s;
    }
  }
  /**
   * <pre>
   * The column which should be used as the group ID (grouping events into
   * sessions). If not specified 'GroupId' is used by default, if the input
   * table does not have such a column, random unique group IDs are
   * generated automatically (different group ID per input row).
   * </pre>
   *
   * <code>string group_id_column = 2;</code>
   * @return The bytes for groupIdColumn.
   */
  @java.lang.Override
  public com.google.protobuf.ByteString
      getGroupIdColumnBytes() {
    java.lang.Object ref = groupIdColumn_;
    if (ref instanceof java.lang.String) {
      com.google.protobuf.ByteString b = 
          com.google.protobuf.ByteString.copyFromUtf8(
              (java.lang.String) ref);
      groupIdColumn_ = b;
      return b;
    } else {
      return (com.google.protobuf.ByteString) ref;
    }
  }

  public static final int DIMENSION_COLUMN_FIELD_NUMBER = 3;
  @SuppressWarnings("serial")
  private com.google.protobuf.LazyStringList dimensionColumn_;
  /**
   * <pre>
   * The list of columns that should be translated to dimensions. If empty,
   * all columns are translated to dimensions. The timestamp and group_id
   * columns should not be listed here again. Columns are expected to have
   * primitive types (STRING, INT64, FLOAT64 or NUMERIC).
   * </pre>
   *
   * <code>repeated string dimension_column = 3;</code>
   * @return A list containing the dimensionColumn.
   */
  public com.google.protobuf.ProtocolStringList
      getDimensionColumnList() {
    return dimensionColumn_;
  }
  /**
   * <pre>
   * The list of columns that should be translated to dimensions. If empty,
   * all columns are translated to dimensions. The timestamp and group_id
   * columns should not be listed here again. Columns are expected to have
   * primitive types (STRING, INT64, FLOAT64 or NUMERIC).
   * </pre>
   *
   * <code>repeated string dimension_column = 3;</code>
   * @return The count of dimensionColumn.
   */
  public int getDimensionColumnCount() {
    return dimensionColumn_.size();
  }
  /**
   * <pre>
   * The list of columns that should be translated to dimensions. If empty,
   * all columns are translated to dimensions. The timestamp and group_id
   * columns should not be listed here again. Columns are expected to have
   * primitive types (STRING, INT64, FLOAT64 or NUMERIC).
   * </pre>
   *
   * <code>repeated string dimension_column = 3;</code>
   * @param index The index of the element to return.
   * @return The dimensionColumn at the given index.
   */
  public java.lang.String getDimensionColumn(int index) {
    return dimensionColumn_.get(index);
  }
  /**
   * <pre>
   * The list of columns that should be translated to dimensions. If empty,
   * all columns are translated to dimensions. The timestamp and group_id
   * columns should not be listed here again. Columns are expected to have
   * primitive types (STRING, INT64, FLOAT64 or NUMERIC).
   * </pre>
   *
   * <code>repeated string dimension_column = 3;</code>
   * @param index The index of the value to return.
   * @return The bytes of the dimensionColumn at the given index.
   */
  public com.google.protobuf.ByteString
      getDimensionColumnBytes(int index) {
    return dimensionColumn_.getByteString(index);
  }

  private byte memoizedIsInitialized = -1;
  @java.lang.Override
  public final boolean isInitialized() {
    byte isInitialized = memoizedIsInitialized;
    if (isInitialized == 1) return true;
    if (isInitialized == 0) return false;

    memoizedIsInitialized = 1;
    return true;
  }

  @java.lang.Override
  public void writeTo(com.google.protobuf.CodedOutputStream output)
                      throws java.io.IOException {
    if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(timestampColumn_)) {
      com.google.protobuf.GeneratedMessageV3.writeString(output, 1, timestampColumn_);
    }
    if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(groupIdColumn_)) {
      com.google.protobuf.GeneratedMessageV3.writeString(output, 2, groupIdColumn_);
    }
    for (int i = 0; i < dimensionColumn_.size(); i++) {
      com.google.protobuf.GeneratedMessageV3.writeString(output, 3, dimensionColumn_.getRaw(i));
    }
    getUnknownFields().writeTo(output);
  }

  @java.lang.Override
  public int getSerializedSize() {
    int size = memoizedSize;
    if (size != -1) return size;

    size = 0;
    if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(timestampColumn_)) {
      size += com.google.protobuf.GeneratedMessageV3.computeStringSize(1, timestampColumn_);
    }
    if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(groupIdColumn_)) {
      size += com.google.protobuf.GeneratedMessageV3.computeStringSize(2, groupIdColumn_);
    }
    {
      int dataSize = 0;
      for (int i = 0; i < dimensionColumn_.size(); i++) {
        dataSize += computeStringSizeNoTag(dimensionColumn_.getRaw(i));
      }
      size += dataSize;
      size += 1 * getDimensionColumnList().size();
    }
    size += getUnknownFields().getSerializedSize();
    memoizedSize = size;
    return size;
  }

  @java.lang.Override
  public boolean equals(final java.lang.Object obj) {
    if (obj == this) {
     return true;
    }
    if (!(obj instanceof com.google.cloud.timeseriesinsights.v1.BigqueryMapping)) {
      return super.equals(obj);
    }
    com.google.cloud.timeseriesinsights.v1.BigqueryMapping other = (com.google.cloud.timeseriesinsights.v1.BigqueryMapping) obj;

    if (!getTimestampColumn()
        .equals(other.getTimestampColumn())) return false;
    if (!getGroupIdColumn()
        .equals(other.getGroupIdColumn())) return false;
    if (!getDimensionColumnList()
        .equals(other.getDimensionColumnList())) return false;
    if (!getUnknownFields().equals(other.getUnknownFields())) return false;
    return true;
  }

  @java.lang.Override
  public int hashCode() {
    if (memoizedHashCode != 0) {
      return memoizedHashCode;
    }
    int hash = 41;
    hash = (19 * hash) + getDescriptor().hashCode();
    hash = (37 * hash) + TIMESTAMP_COLUMN_FIELD_NUMBER;
    hash = (53 * hash) + getTimestampColumn().hashCode();
    hash = (37 * hash) + GROUP_ID_COLUMN_FIELD_NUMBER;
    hash = (53 * hash) + getGroupIdColumn().hashCode();
    if (getDimensionColumnCount() > 0) {
      hash = (37 * hash) + DIMENSION_COLUMN_FIELD_NUMBER;
      hash = (53 * hash) + getDimensionColumnList().hashCode();
    }
    hash = (29 * hash) + getUnknownFields().hashCode();
    memoizedHashCode = hash;
    return hash;
  }

  public static com.google.cloud.timeseriesinsights.v1.BigqueryMapping parseFrom(
      java.nio.ByteBuffer data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static com.google.cloud.timeseriesinsights.v1.BigqueryMapping parseFrom(
      java.nio.ByteBuffer data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static com.google.cloud.timeseriesinsights.v1.BigqueryMapping parseFrom(
      com.google.protobuf.ByteString data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static com.google.cloud.timeseriesinsights.v1.BigqueryMapping parseFrom(
      com.google.protobuf.ByteString data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static com.google.cloud.timeseriesinsights.v1.BigqueryMapping parseFrom(byte[] data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static com.google.cloud.timeseriesinsights.v1.BigqueryMapping parseFrom(
      byte[] data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static com.google.cloud.timeseriesinsights.v1.BigqueryMapping parseFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input);
  }
  public static com.google.cloud.timeseriesinsights.v1.BigqueryMapping parseFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input, extensionRegistry);
  }
  public static com.google.cloud.timeseriesinsights.v1.BigqueryMapping parseDelimitedFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseDelimitedWithIOException(PARSER, input);
  }
  public static com.google.cloud.timeseriesinsights.v1.BigqueryMapping parseDelimitedFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
  }
  public static com.google.cloud.timeseriesinsights.v1.BigqueryMapping parseFrom(
      com.google.protobuf.CodedInputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input);
  }
  public static com.google.cloud.timeseriesinsights.v1.BigqueryMapping parseFrom(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input, extensionRegistry);
  }

  @java.lang.Override
  public Builder newBuilderForType() { return newBuilder(); }
  public static Builder newBuilder() {
    return DEFAULT_INSTANCE.toBuilder();
  }
  public static Builder newBuilder(com.google.cloud.timeseriesinsights.v1.BigqueryMapping prototype) {
    return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
  }
  @java.lang.Override
  public Builder toBuilder() {
    return this == DEFAULT_INSTANCE
        ? new Builder() : new Builder().mergeFrom(this);
  }

  @java.lang.Override
  protected Builder newBuilderForType(
      com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
    Builder builder = new Builder(parent);
    return builder;
  }
  /**
   * <pre>
   * Mapping of BigQuery columns to timestamp, group_id and dimensions.
   * </pre>
   *
   * Protobuf type {@code google.cloud.timeseriesinsights.v1.BigqueryMapping}
   */
  public static final class Builder extends
      com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
      // @@protoc_insertion_point(builder_implements:google.cloud.timeseriesinsights.v1.BigqueryMapping)
      com.google.cloud.timeseriesinsights.v1.BigqueryMappingOrBuilder {
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.google.cloud.timeseriesinsights.v1.TimeseriesInsightsProto.internal_static_google_cloud_timeseriesinsights_v1_BigqueryMapping_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.google.cloud.timeseriesinsights.v1.TimeseriesInsightsProto.internal_static_google_cloud_timeseriesinsights_v1_BigqueryMapping_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.google.cloud.timeseriesinsights.v1.BigqueryMapping.class, com.google.cloud.timeseriesinsights.v1.BigqueryMapping.Builder.class);
    }

    // Construct using com.google.cloud.timeseriesinsights.v1.BigqueryMapping.newBuilder()
    private Builder() {

    }

    private Builder(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      super(parent);

    }
    @java.lang.Override
    public Builder clear() {
      super.clear();
      bitField0_ = 0;
      timestampColumn_ = "";
      groupIdColumn_ = "";
      dimensionColumn_ = com.google.protobuf.LazyStringArrayList.EMPTY;
      bitField0_ = (bitField0_ & ~0x00000004);
      return this;
    }

    @java.lang.Override
    public com.google.protobuf.Descriptors.Descriptor
        getDescriptorForType() {
      return com.google.cloud.timeseriesinsights.v1.TimeseriesInsightsProto.internal_static_google_cloud_timeseriesinsights_v1_BigqueryMapping_descriptor;
    }

    @java.lang.Override
    public com.google.cloud.timeseriesinsights.v1.BigqueryMapping getDefaultInstanceForType() {
      return com.google.cloud.timeseriesinsights.v1.BigqueryMapping.getDefaultInstance();
    }

    @java.lang.Override
    public com.google.cloud.timeseriesinsights.v1.BigqueryMapping build() {
      com.google.cloud.timeseriesinsights.v1.BigqueryMapping result = buildPartial();
      if (!result.isInitialized()) {
        throw newUninitializedMessageException(result);
      }
      return result;
    }

    @java.lang.Override
    public com.google.cloud.timeseriesinsights.v1.BigqueryMapping buildPartial() {
      com.google.cloud.timeseriesinsights.v1.BigqueryMapping result = new com.google.cloud.timeseriesinsights.v1.BigqueryMapping(this);
      buildPartialRepeatedFields(result);
      if (bitField0_ != 0) { buildPartial0(result); }
      onBuilt();
      return result;
    }

    private void buildPartialRepeatedFields(com.google.cloud.timeseriesinsights.v1.BigqueryMapping result) {
      if (((bitField0_ & 0x00000004) != 0)) {
        dimensionColumn_ = dimensionColumn_.getUnmodifiableView();
        bitField0_ = (bitField0_ & ~0x00000004);
      }
      result.dimensionColumn_ = dimensionColumn_;
    }

    private void buildPartial0(com.google.cloud.timeseriesinsights.v1.BigqueryMapping result) {
      int from_bitField0_ = bitField0_;
      if (((from_bitField0_ & 0x00000001) != 0)) {
        result.timestampColumn_ = timestampColumn_;
      }
      if (((from_bitField0_ & 0x00000002) != 0)) {
        result.groupIdColumn_ = groupIdColumn_;
      }
    }

    @java.lang.Override
    public Builder clone() {
      return super.clone();
    }
    @java.lang.Override
    public Builder setField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        java.lang.Object value) {
      return super.setField(field, value);
    }
    @java.lang.Override
    public Builder clearField(
        com.google.protobuf.Descriptors.FieldDescriptor field) {
      return super.clearField(field);
    }
    @java.lang.Override
    public Builder clearOneof(
        com.google.protobuf.Descriptors.OneofDescriptor oneof) {
      return super.clearOneof(oneof);
    }
    @java.lang.Override
    public Builder setRepeatedField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        int index, java.lang.Object value) {
      return super.setRepeatedField(field, index, value);
    }
    @java.lang.Override
    public Builder addRepeatedField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        java.lang.Object value) {
      return super.addRepeatedField(field, value);
    }
    @java.lang.Override
    public Builder mergeFrom(com.google.protobuf.Message other) {
      if (other instanceof com.google.cloud.timeseriesinsights.v1.BigqueryMapping) {
        return mergeFrom((com.google.cloud.timeseriesinsights.v1.BigqueryMapping)other);
      } else {
        super.mergeFrom(other);
        return this;
      }
    }

    public Builder mergeFrom(com.google.cloud.timeseriesinsights.v1.BigqueryMapping other) {
      if (other == com.google.cloud.timeseriesinsights.v1.BigqueryMapping.getDefaultInstance()) return this;
      if (!other.getTimestampColumn().isEmpty()) {
        timestampColumn_ = other.timestampColumn_;
        bitField0_ |= 0x00000001;
        onChanged();
      }
      if (!other.getGroupIdColumn().isEmpty()) {
        groupIdColumn_ = other.groupIdColumn_;
        bitField0_ |= 0x00000002;
        onChanged();
      }
      if (!other.dimensionColumn_.isEmpty()) {
        if (dimensionColumn_.isEmpty()) {
          dimensionColumn_ = other.dimensionColumn_;
          bitField0_ = (bitField0_ & ~0x00000004);
        } else {
          ensureDimensionColumnIsMutable();
          dimensionColumn_.addAll(other.dimensionColumn_);
        }
        onChanged();
      }
      this.mergeUnknownFields(other.getUnknownFields());
      onChanged();
      return this;
    }

    @java.lang.Override
    public final boolean isInitialized() {
      return true;
    }

    @java.lang.Override
    public Builder mergeFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 10: {
              timestampColumn_ = input.readStringRequireUtf8();
              bitField0_ |= 0x00000001;
              break;
            } // case 10
            case 18: {
              groupIdColumn_ = input.readStringRequireUtf8();
              bitField0_ |= 0x00000002;
              break;
            } // case 18
            case 26: {
              java.lang.String s = input.readStringRequireUtf8();
              ensureDimensionColumnIsMutable();
              dimensionColumn_.add(s);
              break;
            } // case 26
            default: {
              if (!super.parseUnknownField(input, extensionRegistry, tag)) {
                done = true; // was an endgroup tag
              }
              break;
            } // default:
          } // switch (tag)
        } // while (!done)
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.unwrapIOException();
      } finally {
        onChanged();
      } // finally
      return this;
    }
    private int bitField0_;

    private java.lang.Object timestampColumn_ = "";
    /**
     * <pre>
     * The column which should be used as the event timestamps. If not specified
     * 'Timestamp' is used by default. The column may have TIMESTAMP or INT64
     * type (the latter is interpreted as microseconds since the Unix epoch).
     * </pre>
     *
     * <code>string timestamp_column = 1;</code>
     * @return The timestampColumn.
     */
    public java.lang.String getTimestampColumn() {
      java.lang.Object ref = timestampColumn_;
      if (!(ref instanceof java.lang.String)) {
        com.google.protobuf.ByteString bs =
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        timestampColumn_ = s;
        return s;
      } else {
        return (java.lang.String) ref;
      }
    }
    /**
     * <pre>
     * The column which should be used as the event timestamps. If not specified
     * 'Timestamp' is used by default. The column may have TIMESTAMP or INT64
     * type (the latter is interpreted as microseconds since the Unix epoch).
     * </pre>
     *
     * <code>string timestamp_column = 1;</code>
     * @return The bytes for timestampColumn.
     */
    public com.google.protobuf.ByteString
        getTimestampColumnBytes() {
      java.lang.Object ref = timestampColumn_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        timestampColumn_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }
    /**
     * <pre>
     * The column which should be used as the event timestamps. If not specified
     * 'Timestamp' is used by default. The column may have TIMESTAMP or INT64
     * type (the latter is interpreted as microseconds since the Unix epoch).
     * </pre>
     *
     * <code>string timestamp_column = 1;</code>
     * @param value The timestampColumn to set.
     * @return This builder for chaining.
     */
    public Builder setTimestampColumn(
        java.lang.String value) {
      if (value == null) { throw new NullPointerException(); }
      timestampColumn_ = value;
      bitField0_ |= 0x00000001;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * The column which should be used as the event timestamps. If not specified
     * 'Timestamp' is used by default. The column may have TIMESTAMP or INT64
     * type (the latter is interpreted as microseconds since the Unix epoch).
     * </pre>
     *
     * <code>string timestamp_column = 1;</code>
     * @return This builder for chaining.
     */
    public Builder clearTimestampColumn() {
      timestampColumn_ = getDefaultInstance().getTimestampColumn();
      bitField0_ = (bitField0_ & ~0x00000001);
      onChanged();
      return this;
    }
    /**
     * <pre>
     * The column which should be used as the event timestamps. If not specified
     * 'Timestamp' is used by default. The column may have TIMESTAMP or INT64
     * type (the latter is interpreted as microseconds since the Unix epoch).
     * </pre>
     *
     * <code>string timestamp_column = 1;</code>
     * @param value The bytes for timestampColumn to set.
     * @return This builder for chaining.
     */
    public Builder setTimestampColumnBytes(
        com.google.protobuf.ByteString value) {
      if (value == null) { throw new NullPointerException(); }
      checkByteStringIsUtf8(value);
      timestampColumn_ = value;
      bitField0_ |= 0x00000001;
      onChanged();
      return this;
    }

    private java.lang.Object groupIdColumn_ = "";
    /**
     * <pre>
     * The column which should be used as the group ID (grouping events into
     * sessions). If not specified 'GroupId' is used by default, if the input
     * table does not have such a column, random unique group IDs are
     * generated automatically (different group ID per input row).
     * </pre>
     *
     * <code>string group_id_column = 2;</code>
     * @return The groupIdColumn.
     */
    public java.lang.String getGroupIdColumn() {
      java.lang.Object ref = groupIdColumn_;
      if (!(ref instanceof java.lang.String)) {
        com.google.protobuf.ByteString bs =
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        groupIdColumn_ = s;
        return s;
      } else {
        return (java.lang.String) ref;
      }
    }
    /**
     * <pre>
     * The column which should be used as the group ID (grouping events into
     * sessions). If not specified 'GroupId' is used by default, if the input
     * table does not have such a column, random unique group IDs are
     * generated automatically (different group ID per input row).
     * </pre>
     *
     * <code>string group_id_column = 2;</code>
     * @return The bytes for groupIdColumn.
     */
    public com.google.protobuf.ByteString
        getGroupIdColumnBytes() {
      java.lang.Object ref = groupIdColumn_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        groupIdColumn_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }
    /**
     * <pre>
     * The column which should be used as the group ID (grouping events into
     * sessions). If not specified 'GroupId' is used by default, if the input
     * table does not have such a column, random unique group IDs are
     * generated automatically (different group ID per input row).
     * </pre>
     *
     * <code>string group_id_column = 2;</code>
     * @param value The groupIdColumn to set.
     * @return This builder for chaining.
     */
    public Builder setGroupIdColumn(
        java.lang.String value) {
      if (value == null) { throw new NullPointerException(); }
      groupIdColumn_ = value;
      bitField0_ |= 0x00000002;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * The column which should be used as the group ID (grouping events into
     * sessions). If not specified 'GroupId' is used by default, if the input
     * table does not have such a column, random unique group IDs are
     * generated automatically (different group ID per input row).
     * </pre>
     *
     * <code>string group_id_column = 2;</code>
     * @return This builder for chaining.
     */
    public Builder clearGroupIdColumn() {
      groupIdColumn_ = getDefaultInstance().getGroupIdColumn();
      bitField0_ = (bitField0_ & ~0x00000002);
      onChanged();
      return this;
    }
    /**
     * <pre>
     * The column which should be used as the group ID (grouping events into
     * sessions). If not specified 'GroupId' is used by default, if the input
     * table does not have such a column, random unique group IDs are
     * generated automatically (different group ID per input row).
     * </pre>
     *
     * <code>string group_id_column = 2;</code>
     * @param value The bytes for groupIdColumn to set.
     * @return This builder for chaining.
     */
    public Builder setGroupIdColumnBytes(
        com.google.protobuf.ByteString value) {
      if (value == null) { throw new NullPointerException(); }
      checkByteStringIsUtf8(value);
      groupIdColumn_ = value;
      bitField0_ |= 0x00000002;
      onChanged();
      return this;
    }

    private com.google.protobuf.LazyStringList dimensionColumn_ = com.google.protobuf.LazyStringArrayList.EMPTY;
    private void ensureDimensionColumnIsMutable() {
      if (!((bitField0_ & 0x00000004) != 0)) {
        dimensionColumn_ = new com.google.protobuf.LazyStringArrayList(dimensionColumn_);
        bitField0_ |= 0x00000004;
       }
    }
    /**
     * <pre>
     * The list of columns that should be translated to dimensions. If empty,
     * all columns are translated to dimensions. The timestamp and group_id
     * columns should not be listed here again. Columns are expected to have
     * primitive types (STRING, INT64, FLOAT64 or NUMERIC).
     * </pre>
     *
     * <code>repeated string dimension_column = 3;</code>
     * @return A list containing the dimensionColumn.
     */
    public com.google.protobuf.ProtocolStringList
        getDimensionColumnList() {
      return dimensionColumn_.getUnmodifiableView();
    }
    /**
     * <pre>
     * The list of columns that should be translated to dimensions. If empty,
     * all columns are translated to dimensions. The timestamp and group_id
     * columns should not be listed here again. Columns are expected to have
     * primitive types (STRING, INT64, FLOAT64 or NUMERIC).
     * </pre>
     *
     * <code>repeated string dimension_column = 3;</code>
     * @return The count of dimensionColumn.
     */
    public int getDimensionColumnCount() {
      return dimensionColumn_.size();
    }
    /**
     * <pre>
     * The list of columns that should be translated to dimensions. If empty,
     * all columns are translated to dimensions. The timestamp and group_id
     * columns should not be listed here again. Columns are expected to have
     * primitive types (STRING, INT64, FLOAT64 or NUMERIC).
     * </pre>
     *
     * <code>repeated string dimension_column = 3;</code>
     * @param index The index of the element to return.
     * @return The dimensionColumn at the given index.
     */
    public java.lang.String getDimensionColumn(int index) {
      return dimensionColumn_.get(index);
    }
    /**
     * <pre>
     * The list of columns that should be translated to dimensions. If empty,
     * all columns are translated to dimensions. The timestamp and group_id
     * columns should not be listed here again. Columns are expected to have
     * primitive types (STRING, INT64, FLOAT64 or NUMERIC).
     * </pre>
     *
     * <code>repeated string dimension_column = 3;</code>
     * @param index The index of the value to return.
     * @return The bytes of the dimensionColumn at the given index.
     */
    public com.google.protobuf.ByteString
        getDimensionColumnBytes(int index) {
      return dimensionColumn_.getByteString(index);
    }
    /**
     * <pre>
     * The list of columns that should be translated to dimensions. If empty,
     * all columns are translated to dimensions. The timestamp and group_id
     * columns should not be listed here again. Columns are expected to have
     * primitive types (STRING, INT64, FLOAT64 or NUMERIC).
     * </pre>
     *
     * <code>repeated string dimension_column = 3;</code>
     * @param index The index to set the value at.
     * @param value The dimensionColumn to set.
     * @return This builder for chaining.
     */
    public Builder setDimensionColumn(
        int index, java.lang.String value) {
      if (value == null) { throw new NullPointerException(); }
      ensureDimensionColumnIsMutable();
      dimensionColumn_.set(index, value);
      onChanged();
      return this;
    }
    /**
     * <pre>
     * The list of columns that should be translated to dimensions. If empty,
     * all columns are translated to dimensions. The timestamp and group_id
     * columns should not be listed here again. Columns are expected to have
     * primitive types (STRING, INT64, FLOAT64 or NUMERIC).
     * </pre>
     *
     * <code>repeated string dimension_column = 3;</code>
     * @param value The dimensionColumn to add.
     * @return This builder for chaining.
     */
    public Builder addDimensionColumn(
        java.lang.String value) {
      if (value == null) { throw new NullPointerException(); }
      ensureDimensionColumnIsMutable();
      dimensionColumn_.add(value);
      onChanged();
      return this;
    }
    /**
     * <pre>
     * The list of columns that should be translated to dimensions. If empty,
     * all columns are translated to dimensions. The timestamp and group_id
     * columns should not be listed here again. Columns are expected to have
     * primitive types (STRING, INT64, FLOAT64 or NUMERIC).
     * </pre>
     *
     * <code>repeated string dimension_column = 3;</code>
     * @param values The dimensionColumn to add.
     * @return This builder for chaining.
     */
    public Builder addAllDimensionColumn(
        java.lang.Iterable<java.lang.String> values) {
      ensureDimensionColumnIsMutable();
      com.google.protobuf.AbstractMessageLite.Builder.addAll(
          values, dimensionColumn_);
      onChanged();
      return this;
    }
    /**
     * <pre>
     * The list of columns that should be translated to dimensions. If empty,
     * all columns are translated to dimensions. The timestamp and group_id
     * columns should not be listed here again. Columns are expected to have
     * primitive types (STRING, INT64, FLOAT64 or NUMERIC).
     * </pre>
     *
     * <code>repeated string dimension_column = 3;</code>
     * @return This builder for chaining.
     */
    public Builder clearDimensionColumn() {
      dimensionColumn_ = com.google.protobuf.LazyStringArrayList.EMPTY;
      bitField0_ = (bitField0_ & ~0x00000004);
      onChanged();
      return this;
    }
    /**
     * <pre>
     * The list of columns that should be translated to dimensions. If empty,
     * all columns are translated to dimensions. The timestamp and group_id
     * columns should not be listed here again. Columns are expected to have
     * primitive types (STRING, INT64, FLOAT64 or NUMERIC).
     * </pre>
     *
     * <code>repeated string dimension_column = 3;</code>
     * @param value The bytes of the dimensionColumn to add.
     * @return This builder for chaining.
     */
    public Builder addDimensionColumnBytes(
        com.google.protobuf.ByteString value) {
      if (value == null) { throw new NullPointerException(); }
      checkByteStringIsUtf8(value);
      ensureDimensionColumnIsMutable();
      dimensionColumn_.add(value);
      onChanged();
      return this;
    }
    @java.lang.Override
    public final Builder setUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return super.setUnknownFields(unknownFields);
    }

    @java.lang.Override
    public final Builder mergeUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return super.mergeUnknownFields(unknownFields);
    }


    // @@protoc_insertion_point(builder_scope:google.cloud.timeseriesinsights.v1.BigqueryMapping)
  }

  // @@protoc_insertion_point(class_scope:google.cloud.timeseriesinsights.v1.BigqueryMapping)
  private static final com.google.cloud.timeseriesinsights.v1.BigqueryMapping DEFAULT_INSTANCE;
  static {
    DEFAULT_INSTANCE = new com.google.cloud.timeseriesinsights.v1.BigqueryMapping();
  }

  public static com.google.cloud.timeseriesinsights.v1.BigqueryMapping getDefaultInstance() {
    return DEFAULT_INSTANCE;
  }

  private static final com.google.protobuf.Parser<BigqueryMapping>
      PARSER = new com.google.protobuf.AbstractParser<BigqueryMapping>() {
    @java.lang.Override
    public BigqueryMapping parsePartialFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      Builder builder = newBuilder();
      try {
        builder.mergeFrom(input, extensionRegistry);
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(builder.buildPartial());
      } catch (com.google.protobuf.UninitializedMessageException e) {
        throw e.asInvalidProtocolBufferException().setUnfinishedMessage(builder.buildPartial());
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(e)
            .setUnfinishedMessage(builder.buildPartial());
      }
      return builder.buildPartial();
    }
  };

  public static com.google.protobuf.Parser<BigqueryMapping> parser() {
    return PARSER;
  }

  @java.lang.Override
  public com.google.protobuf.Parser<BigqueryMapping> getParserForType() {
    return PARSER;
  }

  @java.lang.Override
  public com.google.cloud.timeseriesinsights.v1.BigqueryMapping getDefaultInstanceForType() {
    return DEFAULT_INSTANCE;
  }

}

