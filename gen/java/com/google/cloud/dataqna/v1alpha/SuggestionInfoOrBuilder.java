// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: google/cloud/dataqna/v1alpha/auto_suggestion_service.proto

package com.google.cloud.dataqna.v1alpha;

public interface SuggestionInfoOrBuilder extends
    // @@protoc_insertion_point(interface_extends:google.cloud.dataqna.v1alpha.SuggestionInfo)
    com.google.protobuf.MessageOrBuilder {

  /**
   * <pre>
   * Annotations for the suggestion. This provides information about which part
   * of the suggestion corresponds to what semantic meaning (e.g. a metric).
   * </pre>
   *
   * <code>.google.cloud.dataqna.v1alpha.AnnotatedString annotated_suggestion = 1;</code>
   * @return Whether the annotatedSuggestion field is set.
   */
  boolean hasAnnotatedSuggestion();
  /**
   * <pre>
   * Annotations for the suggestion. This provides information about which part
   * of the suggestion corresponds to what semantic meaning (e.g. a metric).
   * </pre>
   *
   * <code>.google.cloud.dataqna.v1alpha.AnnotatedString annotated_suggestion = 1;</code>
   * @return The annotatedSuggestion.
   */
  com.google.cloud.dataqna.v1alpha.AnnotatedString getAnnotatedSuggestion();
  /**
   * <pre>
   * Annotations for the suggestion. This provides information about which part
   * of the suggestion corresponds to what semantic meaning (e.g. a metric).
   * </pre>
   *
   * <code>.google.cloud.dataqna.v1alpha.AnnotatedString annotated_suggestion = 1;</code>
   */
  com.google.cloud.dataqna.v1alpha.AnnotatedStringOrBuilder getAnnotatedSuggestionOrBuilder();

  /**
   * <pre>
   * Matches between user query and the annotated string.
   * </pre>
   *
   * <code>repeated .google.cloud.dataqna.v1alpha.SuggestionInfo.MatchInfo query_matches = 2;</code>
   */
  java.util.List<com.google.cloud.dataqna.v1alpha.SuggestionInfo.MatchInfo> 
      getQueryMatchesList();
  /**
   * <pre>
   * Matches between user query and the annotated string.
   * </pre>
   *
   * <code>repeated .google.cloud.dataqna.v1alpha.SuggestionInfo.MatchInfo query_matches = 2;</code>
   */
  com.google.cloud.dataqna.v1alpha.SuggestionInfo.MatchInfo getQueryMatches(int index);
  /**
   * <pre>
   * Matches between user query and the annotated string.
   * </pre>
   *
   * <code>repeated .google.cloud.dataqna.v1alpha.SuggestionInfo.MatchInfo query_matches = 2;</code>
   */
  int getQueryMatchesCount();
  /**
   * <pre>
   * Matches between user query and the annotated string.
   * </pre>
   *
   * <code>repeated .google.cloud.dataqna.v1alpha.SuggestionInfo.MatchInfo query_matches = 2;</code>
   */
  java.util.List<? extends com.google.cloud.dataqna.v1alpha.SuggestionInfo.MatchInfoOrBuilder> 
      getQueryMatchesOrBuilderList();
  /**
   * <pre>
   * Matches between user query and the annotated string.
   * </pre>
   *
   * <code>repeated .google.cloud.dataqna.v1alpha.SuggestionInfo.MatchInfo query_matches = 2;</code>
   */
  com.google.cloud.dataqna.v1alpha.SuggestionInfo.MatchInfoOrBuilder getQueryMatchesOrBuilder(
      int index);
}
