// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: google/cloud/dataqna/v1alpha/question.proto

package com.google.cloud.dataqna.v1alpha;

public interface QuestionOrBuilder extends
    // @@protoc_insertion_point(interface_extends:google.cloud.dataqna.v1alpha.Question)
    com.google.protobuf.MessageOrBuilder {

  /**
   * <pre>
   * Output only. Immutable. The unique identifier for the Question. The ID is server-generated.
   * Example: `projects/foo/locations/bar/questions/123`
   * </pre>
   *
   * <code>string name = 1 [(.google.api.field_behavior) = OUTPUT_ONLY, (.google.api.field_behavior) = IMMUTABLE];</code>
   * @return The name.
   */
  java.lang.String getName();
  /**
   * <pre>
   * Output only. Immutable. The unique identifier for the Question. The ID is server-generated.
   * Example: `projects/foo/locations/bar/questions/123`
   * </pre>
   *
   * <code>string name = 1 [(.google.api.field_behavior) = OUTPUT_ONLY, (.google.api.field_behavior) = IMMUTABLE];</code>
   * @return The bytes for name.
   */
  com.google.protobuf.ByteString
      getNameBytes();

  /**
   * <pre>
   * Required. Immutable. Scopes to be used for the question. A scope defines the relevant data set
   * scope. It can be a reference to a specific data source or a collection of
   * data sources. Currently, support is limited to a single BigQuery table.
   * There must be exactly one `scopes` element.
   * Example:
   * `//bigquery.googleapis.com/projects/test-project/datasets/foo/tables/bar`
   * </pre>
   *
   * <code>repeated string scopes = 2 [(.google.api.field_behavior) = REQUIRED, (.google.api.field_behavior) = IMMUTABLE];</code>
   * @return A list containing the scopes.
   */
  java.util.List<java.lang.String>
      getScopesList();
  /**
   * <pre>
   * Required. Immutable. Scopes to be used for the question. A scope defines the relevant data set
   * scope. It can be a reference to a specific data source or a collection of
   * data sources. Currently, support is limited to a single BigQuery table.
   * There must be exactly one `scopes` element.
   * Example:
   * `//bigquery.googleapis.com/projects/test-project/datasets/foo/tables/bar`
   * </pre>
   *
   * <code>repeated string scopes = 2 [(.google.api.field_behavior) = REQUIRED, (.google.api.field_behavior) = IMMUTABLE];</code>
   * @return The count of scopes.
   */
  int getScopesCount();
  /**
   * <pre>
   * Required. Immutable. Scopes to be used for the question. A scope defines the relevant data set
   * scope. It can be a reference to a specific data source or a collection of
   * data sources. Currently, support is limited to a single BigQuery table.
   * There must be exactly one `scopes` element.
   * Example:
   * `//bigquery.googleapis.com/projects/test-project/datasets/foo/tables/bar`
   * </pre>
   *
   * <code>repeated string scopes = 2 [(.google.api.field_behavior) = REQUIRED, (.google.api.field_behavior) = IMMUTABLE];</code>
   * @param index The index of the element to return.
   * @return The scopes at the given index.
   */
  java.lang.String getScopes(int index);
  /**
   * <pre>
   * Required. Immutable. Scopes to be used for the question. A scope defines the relevant data set
   * scope. It can be a reference to a specific data source or a collection of
   * data sources. Currently, support is limited to a single BigQuery table.
   * There must be exactly one `scopes` element.
   * Example:
   * `//bigquery.googleapis.com/projects/test-project/datasets/foo/tables/bar`
   * </pre>
   *
   * <code>repeated string scopes = 2 [(.google.api.field_behavior) = REQUIRED, (.google.api.field_behavior) = IMMUTABLE];</code>
   * @param index The index of the value to return.
   * @return The bytes of the scopes at the given index.
   */
  com.google.protobuf.ByteString
      getScopesBytes(int index);

  /**
   * <pre>
   * Required. Immutable. The query in natural language.
   * </pre>
   *
   * <code>string query = 3 [(.google.api.field_behavior) = REQUIRED, (.google.api.field_behavior) = IMMUTABLE];</code>
   * @return The query.
   */
  java.lang.String getQuery();
  /**
   * <pre>
   * Required. Immutable. The query in natural language.
   * </pre>
   *
   * <code>string query = 3 [(.google.api.field_behavior) = REQUIRED, (.google.api.field_behavior) = IMMUTABLE];</code>
   * @return The bytes for query.
   */
  com.google.protobuf.ByteString
      getQueryBytes();

  /**
   * <pre>
   * A list of annotations to use instead of the default annotation of a data
   * source (set in the data source reference resource). There must not be
   * more than one annotation with the same data source reference.
   * </pre>
   *
   * <code>repeated string data_source_annotations = 4;</code>
   * @return A list containing the dataSourceAnnotations.
   */
  java.util.List<java.lang.String>
      getDataSourceAnnotationsList();
  /**
   * <pre>
   * A list of annotations to use instead of the default annotation of a data
   * source (set in the data source reference resource). There must not be
   * more than one annotation with the same data source reference.
   * </pre>
   *
   * <code>repeated string data_source_annotations = 4;</code>
   * @return The count of dataSourceAnnotations.
   */
  int getDataSourceAnnotationsCount();
  /**
   * <pre>
   * A list of annotations to use instead of the default annotation of a data
   * source (set in the data source reference resource). There must not be
   * more than one annotation with the same data source reference.
   * </pre>
   *
   * <code>repeated string data_source_annotations = 4;</code>
   * @param index The index of the element to return.
   * @return The dataSourceAnnotations at the given index.
   */
  java.lang.String getDataSourceAnnotations(int index);
  /**
   * <pre>
   * A list of annotations to use instead of the default annotation of a data
   * source (set in the data source reference resource). There must not be
   * more than one annotation with the same data source reference.
   * </pre>
   *
   * <code>repeated string data_source_annotations = 4;</code>
   * @param index The index of the value to return.
   * @return The bytes of the dataSourceAnnotations at the given index.
   */
  com.google.protobuf.ByteString
      getDataSourceAnnotationsBytes(int index);

  /**
   * <pre>
   * An error field explaining why interpretation failed. This is only populated
   * if the interpretation failed.
   * Note: This is different from getting a status error on the request itself.
   * This is not a client or server error and the Question resource is still
   * persisted, but the service could not interpret the question. Clients should
   * present the error to the user so the user can rephrase the question.
   * </pre>
   *
   * <code>.google.cloud.dataqna.v1alpha.InterpretError interpret_error = 5;</code>
   * @return Whether the interpretError field is set.
   */
  boolean hasInterpretError();
  /**
   * <pre>
   * An error field explaining why interpretation failed. This is only populated
   * if the interpretation failed.
   * Note: This is different from getting a status error on the request itself.
   * This is not a client or server error and the Question resource is still
   * persisted, but the service could not interpret the question. Clients should
   * present the error to the user so the user can rephrase the question.
   * </pre>
   *
   * <code>.google.cloud.dataqna.v1alpha.InterpretError interpret_error = 5;</code>
   * @return The interpretError.
   */
  com.google.cloud.dataqna.v1alpha.InterpretError getInterpretError();
  /**
   * <pre>
   * An error field explaining why interpretation failed. This is only populated
   * if the interpretation failed.
   * Note: This is different from getting a status error on the request itself.
   * This is not a client or server error and the Question resource is still
   * persisted, but the service could not interpret the question. Clients should
   * present the error to the user so the user can rephrase the question.
   * </pre>
   *
   * <code>.google.cloud.dataqna.v1alpha.InterpretError interpret_error = 5;</code>
   */
  com.google.cloud.dataqna.v1alpha.InterpretErrorOrBuilder getInterpretErrorOrBuilder();

  /**
   * <pre>
   * A list of interpretations for this question.
   * </pre>
   *
   * <code>repeated .google.cloud.dataqna.v1alpha.Interpretation interpretations = 6;</code>
   */
  java.util.List<com.google.cloud.dataqna.v1alpha.Interpretation> 
      getInterpretationsList();
  /**
   * <pre>
   * A list of interpretations for this question.
   * </pre>
   *
   * <code>repeated .google.cloud.dataqna.v1alpha.Interpretation interpretations = 6;</code>
   */
  com.google.cloud.dataqna.v1alpha.Interpretation getInterpretations(int index);
  /**
   * <pre>
   * A list of interpretations for this question.
   * </pre>
   *
   * <code>repeated .google.cloud.dataqna.v1alpha.Interpretation interpretations = 6;</code>
   */
  int getInterpretationsCount();
  /**
   * <pre>
   * A list of interpretations for this question.
   * </pre>
   *
   * <code>repeated .google.cloud.dataqna.v1alpha.Interpretation interpretations = 6;</code>
   */
  java.util.List<? extends com.google.cloud.dataqna.v1alpha.InterpretationOrBuilder> 
      getInterpretationsOrBuilderList();
  /**
   * <pre>
   * A list of interpretations for this question.
   * </pre>
   *
   * <code>repeated .google.cloud.dataqna.v1alpha.Interpretation interpretations = 6;</code>
   */
  com.google.cloud.dataqna.v1alpha.InterpretationOrBuilder getInterpretationsOrBuilder(
      int index);

  /**
   * <pre>
   * Time when the question was created.
   * </pre>
   *
   * <code>.google.protobuf.Timestamp create_time = 7;</code>
   * @return Whether the createTime field is set.
   */
  boolean hasCreateTime();
  /**
   * <pre>
   * Time when the question was created.
   * </pre>
   *
   * <code>.google.protobuf.Timestamp create_time = 7;</code>
   * @return The createTime.
   */
  com.google.protobuf.Timestamp getCreateTime();
  /**
   * <pre>
   * Time when the question was created.
   * </pre>
   *
   * <code>.google.protobuf.Timestamp create_time = 7;</code>
   */
  com.google.protobuf.TimestampOrBuilder getCreateTimeOrBuilder();

  /**
   * <pre>
   * Output only. The e-mail address of the user that created this question.
   * </pre>
   *
   * <code>string user_email = 8 [(.google.api.field_behavior) = OUTPUT_ONLY];</code>
   * @return The userEmail.
   */
  java.lang.String getUserEmail();
  /**
   * <pre>
   * Output only. The e-mail address of the user that created this question.
   * </pre>
   *
   * <code>string user_email = 8 [(.google.api.field_behavior) = OUTPUT_ONLY];</code>
   * @return The bytes for userEmail.
   */
  com.google.protobuf.ByteString
      getUserEmailBytes();

  /**
   * <pre>
   * Input only. Immutable. Flags to request additional information for debugging purposes.
   * </pre>
   *
   * <code>.google.cloud.dataqna.v1alpha.DebugFlags debug_flags = 9 [(.google.api.field_behavior) = IMMUTABLE, (.google.api.field_behavior) = INPUT_ONLY];</code>
   * @return Whether the debugFlags field is set.
   */
  boolean hasDebugFlags();
  /**
   * <pre>
   * Input only. Immutable. Flags to request additional information for debugging purposes.
   * </pre>
   *
   * <code>.google.cloud.dataqna.v1alpha.DebugFlags debug_flags = 9 [(.google.api.field_behavior) = IMMUTABLE, (.google.api.field_behavior) = INPUT_ONLY];</code>
   * @return The debugFlags.
   */
  com.google.cloud.dataqna.v1alpha.DebugFlags getDebugFlags();
  /**
   * <pre>
   * Input only. Immutable. Flags to request additional information for debugging purposes.
   * </pre>
   *
   * <code>.google.cloud.dataqna.v1alpha.DebugFlags debug_flags = 9 [(.google.api.field_behavior) = IMMUTABLE, (.google.api.field_behavior) = INPUT_ONLY];</code>
   */
  com.google.cloud.dataqna.v1alpha.DebugFlagsOrBuilder getDebugFlagsOrBuilder();

  /**
   * <pre>
   * Top level debug information.
   * This will be stored as the type DebugInformation.
   * Using Any so clients don't need to pull in anything
   * inside the debug message.
   * </pre>
   *
   * <code>.google.protobuf.Any debug_info = 10;</code>
   * @return Whether the debugInfo field is set.
   */
  boolean hasDebugInfo();
  /**
   * <pre>
   * Top level debug information.
   * This will be stored as the type DebugInformation.
   * Using Any so clients don't need to pull in anything
   * inside the debug message.
   * </pre>
   *
   * <code>.google.protobuf.Any debug_info = 10;</code>
   * @return The debugInfo.
   */
  com.google.protobuf.Any getDebugInfo();
  /**
   * <pre>
   * Top level debug information.
   * This will be stored as the type DebugInformation.
   * Using Any so clients don't need to pull in anything
   * inside the debug message.
   * </pre>
   *
   * <code>.google.protobuf.Any debug_info = 10;</code>
   */
  com.google.protobuf.AnyOrBuilder getDebugInfoOrBuilder();
}
