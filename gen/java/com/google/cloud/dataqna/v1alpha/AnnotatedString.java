// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: google/cloud/dataqna/v1alpha/annotated_string.proto

package com.google.cloud.dataqna.v1alpha;

/**
 * <pre>
 * Describes string annotation from both semantic and formatting perspectives.
 * Example:
 * User Query:
 *   top countries by population in Africa
 *   0   4         14 17         28 31    37
 * Table Data:
 * + "country" - dimension
 * + "population" - metric
 * + "Africa" - value in the "continent" column
 * text_formatted = `"top countries by population in Africa"`
 * html_formatted =
 *   `"top &lt;b&gt;countries&lt;/b&gt; by &lt;b&gt;population&lt;/b&gt; in &lt;i&gt;Africa&lt;/i&gt;"`
 * ```
 * markups = [
 *   {DIMENSION, 4, 12}, // 'countries'
 *   {METRIC, 17, 26}, // 'population'
 *   {FILTER, 31, 36}  // 'Africa'
 * ]
 * ```
 * Note that html formattings for 'DIMENSION' and 'METRIC' are the same, while
 * semantic markups are different.
 * </pre>
 *
 * Protobuf type {@code google.cloud.dataqna.v1alpha.AnnotatedString}
 */
public final class AnnotatedString extends
    com.google.protobuf.GeneratedMessageV3 implements
    // @@protoc_insertion_point(message_implements:google.cloud.dataqna.v1alpha.AnnotatedString)
    AnnotatedStringOrBuilder {
private static final long serialVersionUID = 0L;
  // Use AnnotatedString.newBuilder() to construct.
  private AnnotatedString(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
    super(builder);
  }
  private AnnotatedString() {
    textFormatted_ = "";
    htmlFormatted_ = "";
    markups_ = java.util.Collections.emptyList();
  }

  @java.lang.Override
  @SuppressWarnings({"unused"})
  protected java.lang.Object newInstance(
      UnusedPrivateParameter unused) {
    return new AnnotatedString();
  }

  @java.lang.Override
  public final com.google.protobuf.UnknownFieldSet
  getUnknownFields() {
    return this.unknownFields;
  }
  private AnnotatedString(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    this();
    if (extensionRegistry == null) {
      throw new java.lang.NullPointerException();
    }
    int mutable_bitField0_ = 0;
    com.google.protobuf.UnknownFieldSet.Builder unknownFields =
        com.google.protobuf.UnknownFieldSet.newBuilder();
    try {
      boolean done = false;
      while (!done) {
        int tag = input.readTag();
        switch (tag) {
          case 0:
            done = true;
            break;
          case 10: {
            java.lang.String s = input.readStringRequireUtf8();

            textFormatted_ = s;
            break;
          }
          case 18: {
            java.lang.String s = input.readStringRequireUtf8();

            htmlFormatted_ = s;
            break;
          }
          case 26: {
            if (!((mutable_bitField0_ & 0x00000001) != 0)) {
              markups_ = new java.util.ArrayList<com.google.cloud.dataqna.v1alpha.AnnotatedString.SemanticMarkup>();
              mutable_bitField0_ |= 0x00000001;
            }
            markups_.add(
                input.readMessage(com.google.cloud.dataqna.v1alpha.AnnotatedString.SemanticMarkup.parser(), extensionRegistry));
            break;
          }
          default: {
            if (!parseUnknownField(
                input, unknownFields, extensionRegistry, tag)) {
              done = true;
            }
            break;
          }
        }
      }
    } catch (com.google.protobuf.InvalidProtocolBufferException e) {
      throw e.setUnfinishedMessage(this);
    } catch (com.google.protobuf.UninitializedMessageException e) {
      throw e.asInvalidProtocolBufferException().setUnfinishedMessage(this);
    } catch (java.io.IOException e) {
      throw new com.google.protobuf.InvalidProtocolBufferException(
          e).setUnfinishedMessage(this);
    } finally {
      if (((mutable_bitField0_ & 0x00000001) != 0)) {
        markups_ = java.util.Collections.unmodifiableList(markups_);
      }
      this.unknownFields = unknownFields.build();
      makeExtensionsImmutable();
    }
  }
  public static final com.google.protobuf.Descriptors.Descriptor
      getDescriptor() {
    return com.google.cloud.dataqna.v1alpha.AnnotatedStringProto.internal_static_google_cloud_dataqna_v1alpha_AnnotatedString_descriptor;
  }

  @java.lang.Override
  protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internalGetFieldAccessorTable() {
    return com.google.cloud.dataqna.v1alpha.AnnotatedStringProto.internal_static_google_cloud_dataqna_v1alpha_AnnotatedString_fieldAccessorTable
        .ensureFieldAccessorsInitialized(
            com.google.cloud.dataqna.v1alpha.AnnotatedString.class, com.google.cloud.dataqna.v1alpha.AnnotatedString.Builder.class);
  }

  /**
   * <pre>
   * Semantic markup types.
   * </pre>
   *
   * Protobuf enum {@code google.cloud.dataqna.v1alpha.AnnotatedString.SemanticMarkupType}
   */
  public enum SemanticMarkupType
      implements com.google.protobuf.ProtocolMessageEnum {
    /**
     * <pre>
     * No markup type was specified.
     * </pre>
     *
     * <code>MARKUP_TYPE_UNSPECIFIED = 0;</code>
     */
    MARKUP_TYPE_UNSPECIFIED(0),
    /**
     * <pre>
     * Markup for a substring denoting a metric.
     * </pre>
     *
     * <code>METRIC = 1;</code>
     */
    METRIC(1),
    /**
     * <pre>
     * Markup for a substring denoting a dimension.
     * </pre>
     *
     * <code>DIMENSION = 2;</code>
     */
    DIMENSION(2),
    /**
     * <pre>
     * Markup for a substring denoting a filter.
     * </pre>
     *
     * <code>FILTER = 3;</code>
     */
    FILTER(3),
    /**
     * <pre>
     * Markup for an unused substring.
     * </pre>
     *
     * <code>UNUSED = 4;</code>
     */
    UNUSED(4),
    /**
     * <pre>
     * Markup for a substring containing blocked phrases.
     * </pre>
     *
     * <code>BLOCKED = 5;</code>
     */
    BLOCKED(5),
    /**
     * <pre>
     * Markup for a substring that contains terms for row.
     * </pre>
     *
     * <code>ROW = 6;</code>
     */
    ROW(6),
    UNRECOGNIZED(-1),
    ;

    /**
     * <pre>
     * No markup type was specified.
     * </pre>
     *
     * <code>MARKUP_TYPE_UNSPECIFIED = 0;</code>
     */
    public static final int MARKUP_TYPE_UNSPECIFIED_VALUE = 0;
    /**
     * <pre>
     * Markup for a substring denoting a metric.
     * </pre>
     *
     * <code>METRIC = 1;</code>
     */
    public static final int METRIC_VALUE = 1;
    /**
     * <pre>
     * Markup for a substring denoting a dimension.
     * </pre>
     *
     * <code>DIMENSION = 2;</code>
     */
    public static final int DIMENSION_VALUE = 2;
    /**
     * <pre>
     * Markup for a substring denoting a filter.
     * </pre>
     *
     * <code>FILTER = 3;</code>
     */
    public static final int FILTER_VALUE = 3;
    /**
     * <pre>
     * Markup for an unused substring.
     * </pre>
     *
     * <code>UNUSED = 4;</code>
     */
    public static final int UNUSED_VALUE = 4;
    /**
     * <pre>
     * Markup for a substring containing blocked phrases.
     * </pre>
     *
     * <code>BLOCKED = 5;</code>
     */
    public static final int BLOCKED_VALUE = 5;
    /**
     * <pre>
     * Markup for a substring that contains terms for row.
     * </pre>
     *
     * <code>ROW = 6;</code>
     */
    public static final int ROW_VALUE = 6;


    public final int getNumber() {
      if (this == UNRECOGNIZED) {
        throw new java.lang.IllegalArgumentException(
            "Can't get the number of an unknown enum value.");
      }
      return value;
    }

    /**
     * @param value The numeric wire value of the corresponding enum entry.
     * @return The enum associated with the given numeric wire value.
     * @deprecated Use {@link #forNumber(int)} instead.
     */
    @java.lang.Deprecated
    public static SemanticMarkupType valueOf(int value) {
      return forNumber(value);
    }

    /**
     * @param value The numeric wire value of the corresponding enum entry.
     * @return The enum associated with the given numeric wire value.
     */
    public static SemanticMarkupType forNumber(int value) {
      switch (value) {
        case 0: return MARKUP_TYPE_UNSPECIFIED;
        case 1: return METRIC;
        case 2: return DIMENSION;
        case 3: return FILTER;
        case 4: return UNUSED;
        case 5: return BLOCKED;
        case 6: return ROW;
        default: return null;
      }
    }

    public static com.google.protobuf.Internal.EnumLiteMap<SemanticMarkupType>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static final com.google.protobuf.Internal.EnumLiteMap<
        SemanticMarkupType> internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<SemanticMarkupType>() {
            public SemanticMarkupType findValueByNumber(int number) {
              return SemanticMarkupType.forNumber(number);
            }
          };

    public final com.google.protobuf.Descriptors.EnumValueDescriptor
        getValueDescriptor() {
      if (this == UNRECOGNIZED) {
        throw new java.lang.IllegalStateException(
            "Can't get the descriptor of an unrecognized enum value.");
      }
      return getDescriptor().getValues().get(ordinal());
    }
    public final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptorForType() {
      return getDescriptor();
    }
    public static final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptor() {
      return com.google.cloud.dataqna.v1alpha.AnnotatedString.getDescriptor().getEnumTypes().get(0);
    }

    private static final SemanticMarkupType[] VALUES = values();

    public static SemanticMarkupType valueOf(
        com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
      if (desc.getType() != getDescriptor()) {
        throw new java.lang.IllegalArgumentException(
          "EnumValueDescriptor is not for this type.");
      }
      if (desc.getIndex() == -1) {
        return UNRECOGNIZED;
      }
      return VALUES[desc.getIndex()];
    }

    private final int value;

    private SemanticMarkupType(int value) {
      this.value = value;
    }

    // @@protoc_insertion_point(enum_scope:google.cloud.dataqna.v1alpha.AnnotatedString.SemanticMarkupType)
  }

  public interface SemanticMarkupOrBuilder extends
      // @@protoc_insertion_point(interface_extends:google.cloud.dataqna.v1alpha.AnnotatedString.SemanticMarkup)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <pre>
     * The semantic type of the markup substring.
     * </pre>
     *
     * <code>.google.cloud.dataqna.v1alpha.AnnotatedString.SemanticMarkupType type = 1;</code>
     * @return The enum numeric value on the wire for type.
     */
    int getTypeValue();
    /**
     * <pre>
     * The semantic type of the markup substring.
     * </pre>
     *
     * <code>.google.cloud.dataqna.v1alpha.AnnotatedString.SemanticMarkupType type = 1;</code>
     * @return The type.
     */
    com.google.cloud.dataqna.v1alpha.AnnotatedString.SemanticMarkupType getType();

    /**
     * <pre>
     * Unicode character index of the query.
     * </pre>
     *
     * <code>int32 start_char_index = 2;</code>
     * @return The startCharIndex.
     */
    int getStartCharIndex();

    /**
     * <pre>
     * The length (number of unicode characters) of the markup substring.
     * </pre>
     *
     * <code>int32 length = 3;</code>
     * @return The length.
     */
    int getLength();
  }
  /**
   * <pre>
   * Semantic markup denotes a substring (by index and length) with markup
   * information.
   * </pre>
   *
   * Protobuf type {@code google.cloud.dataqna.v1alpha.AnnotatedString.SemanticMarkup}
   */
  public static final class SemanticMarkup extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:google.cloud.dataqna.v1alpha.AnnotatedString.SemanticMarkup)
      SemanticMarkupOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use SemanticMarkup.newBuilder() to construct.
    private SemanticMarkup(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private SemanticMarkup() {
      type_ = 0;
    }

    @java.lang.Override
    @SuppressWarnings({"unused"})
    protected java.lang.Object newInstance(
        UnusedPrivateParameter unused) {
      return new SemanticMarkup();
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private SemanticMarkup(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 8: {
              int rawValue = input.readEnum();

              type_ = rawValue;
              break;
            }
            case 16: {

              startCharIndex_ = input.readInt32();
              break;
            }
            case 24: {

              length_ = input.readInt32();
              break;
            }
            default: {
              if (!parseUnknownField(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (com.google.protobuf.UninitializedMessageException e) {
        throw e.asInvalidProtocolBufferException().setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.google.cloud.dataqna.v1alpha.AnnotatedStringProto.internal_static_google_cloud_dataqna_v1alpha_AnnotatedString_SemanticMarkup_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.google.cloud.dataqna.v1alpha.AnnotatedStringProto.internal_static_google_cloud_dataqna_v1alpha_AnnotatedString_SemanticMarkup_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.google.cloud.dataqna.v1alpha.AnnotatedString.SemanticMarkup.class, com.google.cloud.dataqna.v1alpha.AnnotatedString.SemanticMarkup.Builder.class);
    }

    public static final int TYPE_FIELD_NUMBER = 1;
    private int type_;
    /**
     * <pre>
     * The semantic type of the markup substring.
     * </pre>
     *
     * <code>.google.cloud.dataqna.v1alpha.AnnotatedString.SemanticMarkupType type = 1;</code>
     * @return The enum numeric value on the wire for type.
     */
    @java.lang.Override public int getTypeValue() {
      return type_;
    }
    /**
     * <pre>
     * The semantic type of the markup substring.
     * </pre>
     *
     * <code>.google.cloud.dataqna.v1alpha.AnnotatedString.SemanticMarkupType type = 1;</code>
     * @return The type.
     */
    @java.lang.Override public com.google.cloud.dataqna.v1alpha.AnnotatedString.SemanticMarkupType getType() {
      @SuppressWarnings("deprecation")
      com.google.cloud.dataqna.v1alpha.AnnotatedString.SemanticMarkupType result = com.google.cloud.dataqna.v1alpha.AnnotatedString.SemanticMarkupType.valueOf(type_);
      return result == null ? com.google.cloud.dataqna.v1alpha.AnnotatedString.SemanticMarkupType.UNRECOGNIZED : result;
    }

    public static final int START_CHAR_INDEX_FIELD_NUMBER = 2;
    private int startCharIndex_;
    /**
     * <pre>
     * Unicode character index of the query.
     * </pre>
     *
     * <code>int32 start_char_index = 2;</code>
     * @return The startCharIndex.
     */
    @java.lang.Override
    public int getStartCharIndex() {
      return startCharIndex_;
    }

    public static final int LENGTH_FIELD_NUMBER = 3;
    private int length_;
    /**
     * <pre>
     * The length (number of unicode characters) of the markup substring.
     * </pre>
     *
     * <code>int32 length = 3;</code>
     * @return The length.
     */
    @java.lang.Override
    public int getLength() {
      return length_;
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (type_ != com.google.cloud.dataqna.v1alpha.AnnotatedString.SemanticMarkupType.MARKUP_TYPE_UNSPECIFIED.getNumber()) {
        output.writeEnum(1, type_);
      }
      if (startCharIndex_ != 0) {
        output.writeInt32(2, startCharIndex_);
      }
      if (length_ != 0) {
        output.writeInt32(3, length_);
      }
      unknownFields.writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (type_ != com.google.cloud.dataqna.v1alpha.AnnotatedString.SemanticMarkupType.MARKUP_TYPE_UNSPECIFIED.getNumber()) {
        size += com.google.protobuf.CodedOutputStream
          .computeEnumSize(1, type_);
      }
      if (startCharIndex_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(2, startCharIndex_);
      }
      if (length_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(3, length_);
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof com.google.cloud.dataqna.v1alpha.AnnotatedString.SemanticMarkup)) {
        return super.equals(obj);
      }
      com.google.cloud.dataqna.v1alpha.AnnotatedString.SemanticMarkup other = (com.google.cloud.dataqna.v1alpha.AnnotatedString.SemanticMarkup) obj;

      if (type_ != other.type_) return false;
      if (getStartCharIndex()
          != other.getStartCharIndex()) return false;
      if (getLength()
          != other.getLength()) return false;
      if (!unknownFields.equals(other.unknownFields)) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      hash = (37 * hash) + TYPE_FIELD_NUMBER;
      hash = (53 * hash) + type_;
      hash = (37 * hash) + START_CHAR_INDEX_FIELD_NUMBER;
      hash = (53 * hash) + getStartCharIndex();
      hash = (37 * hash) + LENGTH_FIELD_NUMBER;
      hash = (53 * hash) + getLength();
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static com.google.cloud.dataqna.v1alpha.AnnotatedString.SemanticMarkup parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.google.cloud.dataqna.v1alpha.AnnotatedString.SemanticMarkup parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.google.cloud.dataqna.v1alpha.AnnotatedString.SemanticMarkup parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.google.cloud.dataqna.v1alpha.AnnotatedString.SemanticMarkup parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.google.cloud.dataqna.v1alpha.AnnotatedString.SemanticMarkup parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.google.cloud.dataqna.v1alpha.AnnotatedString.SemanticMarkup parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.google.cloud.dataqna.v1alpha.AnnotatedString.SemanticMarkup parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static com.google.cloud.dataqna.v1alpha.AnnotatedString.SemanticMarkup parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static com.google.cloud.dataqna.v1alpha.AnnotatedString.SemanticMarkup parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static com.google.cloud.dataqna.v1alpha.AnnotatedString.SemanticMarkup parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static com.google.cloud.dataqna.v1alpha.AnnotatedString.SemanticMarkup parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static com.google.cloud.dataqna.v1alpha.AnnotatedString.SemanticMarkup parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(com.google.cloud.dataqna.v1alpha.AnnotatedString.SemanticMarkup prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * <pre>
     * Semantic markup denotes a substring (by index and length) with markup
     * information.
     * </pre>
     *
     * Protobuf type {@code google.cloud.dataqna.v1alpha.AnnotatedString.SemanticMarkup}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:google.cloud.dataqna.v1alpha.AnnotatedString.SemanticMarkup)
        com.google.cloud.dataqna.v1alpha.AnnotatedString.SemanticMarkupOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return com.google.cloud.dataqna.v1alpha.AnnotatedStringProto.internal_static_google_cloud_dataqna_v1alpha_AnnotatedString_SemanticMarkup_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return com.google.cloud.dataqna.v1alpha.AnnotatedStringProto.internal_static_google_cloud_dataqna_v1alpha_AnnotatedString_SemanticMarkup_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                com.google.cloud.dataqna.v1alpha.AnnotatedString.SemanticMarkup.class, com.google.cloud.dataqna.v1alpha.AnnotatedString.SemanticMarkup.Builder.class);
      }

      // Construct using com.google.cloud.dataqna.v1alpha.AnnotatedString.SemanticMarkup.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        type_ = 0;

        startCharIndex_ = 0;

        length_ = 0;

        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.google.cloud.dataqna.v1alpha.AnnotatedStringProto.internal_static_google_cloud_dataqna_v1alpha_AnnotatedString_SemanticMarkup_descriptor;
      }

      @java.lang.Override
      public com.google.cloud.dataqna.v1alpha.AnnotatedString.SemanticMarkup getDefaultInstanceForType() {
        return com.google.cloud.dataqna.v1alpha.AnnotatedString.SemanticMarkup.getDefaultInstance();
      }

      @java.lang.Override
      public com.google.cloud.dataqna.v1alpha.AnnotatedString.SemanticMarkup build() {
        com.google.cloud.dataqna.v1alpha.AnnotatedString.SemanticMarkup result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public com.google.cloud.dataqna.v1alpha.AnnotatedString.SemanticMarkup buildPartial() {
        com.google.cloud.dataqna.v1alpha.AnnotatedString.SemanticMarkup result = new com.google.cloud.dataqna.v1alpha.AnnotatedString.SemanticMarkup(this);
        result.type_ = type_;
        result.startCharIndex_ = startCharIndex_;
        result.length_ = length_;
        onBuilt();
        return result;
      }

      @java.lang.Override
      public Builder clone() {
        return super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.google.cloud.dataqna.v1alpha.AnnotatedString.SemanticMarkup) {
          return mergeFrom((com.google.cloud.dataqna.v1alpha.AnnotatedString.SemanticMarkup)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(com.google.cloud.dataqna.v1alpha.AnnotatedString.SemanticMarkup other) {
        if (other == com.google.cloud.dataqna.v1alpha.AnnotatedString.SemanticMarkup.getDefaultInstance()) return this;
        if (other.type_ != 0) {
          setTypeValue(other.getTypeValue());
        }
        if (other.getStartCharIndex() != 0) {
          setStartCharIndex(other.getStartCharIndex());
        }
        if (other.getLength() != 0) {
          setLength(other.getLength());
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.google.cloud.dataqna.v1alpha.AnnotatedString.SemanticMarkup parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (com.google.cloud.dataqna.v1alpha.AnnotatedString.SemanticMarkup) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }

      private int type_ = 0;
      /**
       * <pre>
       * The semantic type of the markup substring.
       * </pre>
       *
       * <code>.google.cloud.dataqna.v1alpha.AnnotatedString.SemanticMarkupType type = 1;</code>
       * @return The enum numeric value on the wire for type.
       */
      @java.lang.Override public int getTypeValue() {
        return type_;
      }
      /**
       * <pre>
       * The semantic type of the markup substring.
       * </pre>
       *
       * <code>.google.cloud.dataqna.v1alpha.AnnotatedString.SemanticMarkupType type = 1;</code>
       * @param value The enum numeric value on the wire for type to set.
       * @return This builder for chaining.
       */
      public Builder setTypeValue(int value) {
        
        type_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * The semantic type of the markup substring.
       * </pre>
       *
       * <code>.google.cloud.dataqna.v1alpha.AnnotatedString.SemanticMarkupType type = 1;</code>
       * @return The type.
       */
      @java.lang.Override
      public com.google.cloud.dataqna.v1alpha.AnnotatedString.SemanticMarkupType getType() {
        @SuppressWarnings("deprecation")
        com.google.cloud.dataqna.v1alpha.AnnotatedString.SemanticMarkupType result = com.google.cloud.dataqna.v1alpha.AnnotatedString.SemanticMarkupType.valueOf(type_);
        return result == null ? com.google.cloud.dataqna.v1alpha.AnnotatedString.SemanticMarkupType.UNRECOGNIZED : result;
      }
      /**
       * <pre>
       * The semantic type of the markup substring.
       * </pre>
       *
       * <code>.google.cloud.dataqna.v1alpha.AnnotatedString.SemanticMarkupType type = 1;</code>
       * @param value The type to set.
       * @return This builder for chaining.
       */
      public Builder setType(com.google.cloud.dataqna.v1alpha.AnnotatedString.SemanticMarkupType value) {
        if (value == null) {
          throw new NullPointerException();
        }
        
        type_ = value.getNumber();
        onChanged();
        return this;
      }
      /**
       * <pre>
       * The semantic type of the markup substring.
       * </pre>
       *
       * <code>.google.cloud.dataqna.v1alpha.AnnotatedString.SemanticMarkupType type = 1;</code>
       * @return This builder for chaining.
       */
      public Builder clearType() {
        
        type_ = 0;
        onChanged();
        return this;
      }

      private int startCharIndex_ ;
      /**
       * <pre>
       * Unicode character index of the query.
       * </pre>
       *
       * <code>int32 start_char_index = 2;</code>
       * @return The startCharIndex.
       */
      @java.lang.Override
      public int getStartCharIndex() {
        return startCharIndex_;
      }
      /**
       * <pre>
       * Unicode character index of the query.
       * </pre>
       *
       * <code>int32 start_char_index = 2;</code>
       * @param value The startCharIndex to set.
       * @return This builder for chaining.
       */
      public Builder setStartCharIndex(int value) {
        
        startCharIndex_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Unicode character index of the query.
       * </pre>
       *
       * <code>int32 start_char_index = 2;</code>
       * @return This builder for chaining.
       */
      public Builder clearStartCharIndex() {
        
        startCharIndex_ = 0;
        onChanged();
        return this;
      }

      private int length_ ;
      /**
       * <pre>
       * The length (number of unicode characters) of the markup substring.
       * </pre>
       *
       * <code>int32 length = 3;</code>
       * @return The length.
       */
      @java.lang.Override
      public int getLength() {
        return length_;
      }
      /**
       * <pre>
       * The length (number of unicode characters) of the markup substring.
       * </pre>
       *
       * <code>int32 length = 3;</code>
       * @param value The length to set.
       * @return This builder for chaining.
       */
      public Builder setLength(int value) {
        
        length_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * The length (number of unicode characters) of the markup substring.
       * </pre>
       *
       * <code>int32 length = 3;</code>
       * @return This builder for chaining.
       */
      public Builder clearLength() {
        
        length_ = 0;
        onChanged();
        return this;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:google.cloud.dataqna.v1alpha.AnnotatedString.SemanticMarkup)
    }

    // @@protoc_insertion_point(class_scope:google.cloud.dataqna.v1alpha.AnnotatedString.SemanticMarkup)
    private static final com.google.cloud.dataqna.v1alpha.AnnotatedString.SemanticMarkup DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new com.google.cloud.dataqna.v1alpha.AnnotatedString.SemanticMarkup();
    }

    public static com.google.cloud.dataqna.v1alpha.AnnotatedString.SemanticMarkup getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<SemanticMarkup>
        PARSER = new com.google.protobuf.AbstractParser<SemanticMarkup>() {
      @java.lang.Override
      public SemanticMarkup parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new SemanticMarkup(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<SemanticMarkup> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<SemanticMarkup> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.cloud.dataqna.v1alpha.AnnotatedString.SemanticMarkup getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public static final int TEXT_FORMATTED_FIELD_NUMBER = 1;
  private volatile java.lang.Object textFormatted_;
  /**
   * <pre>
   * Text version of the string.
   * </pre>
   *
   * <code>string text_formatted = 1;</code>
   * @return The textFormatted.
   */
  @java.lang.Override
  public java.lang.String getTextFormatted() {
    java.lang.Object ref = textFormatted_;
    if (ref instanceof java.lang.String) {
      return (java.lang.String) ref;
    } else {
      com.google.protobuf.ByteString bs = 
          (com.google.protobuf.ByteString) ref;
      java.lang.String s = bs.toStringUtf8();
      textFormatted_ = s;
      return s;
    }
  }
  /**
   * <pre>
   * Text version of the string.
   * </pre>
   *
   * <code>string text_formatted = 1;</code>
   * @return The bytes for textFormatted.
   */
  @java.lang.Override
  public com.google.protobuf.ByteString
      getTextFormattedBytes() {
    java.lang.Object ref = textFormatted_;
    if (ref instanceof java.lang.String) {
      com.google.protobuf.ByteString b = 
          com.google.protobuf.ByteString.copyFromUtf8(
              (java.lang.String) ref);
      textFormatted_ = b;
      return b;
    } else {
      return (com.google.protobuf.ByteString) ref;
    }
  }

  public static final int HTML_FORMATTED_FIELD_NUMBER = 2;
  private volatile java.lang.Object htmlFormatted_;
  /**
   * <pre>
   * HTML version of the string annotation.
   * </pre>
   *
   * <code>string html_formatted = 2;</code>
   * @return The htmlFormatted.
   */
  @java.lang.Override
  public java.lang.String getHtmlFormatted() {
    java.lang.Object ref = htmlFormatted_;
    if (ref instanceof java.lang.String) {
      return (java.lang.String) ref;
    } else {
      com.google.protobuf.ByteString bs = 
          (com.google.protobuf.ByteString) ref;
      java.lang.String s = bs.toStringUtf8();
      htmlFormatted_ = s;
      return s;
    }
  }
  /**
   * <pre>
   * HTML version of the string annotation.
   * </pre>
   *
   * <code>string html_formatted = 2;</code>
   * @return The bytes for htmlFormatted.
   */
  @java.lang.Override
  public com.google.protobuf.ByteString
      getHtmlFormattedBytes() {
    java.lang.Object ref = htmlFormatted_;
    if (ref instanceof java.lang.String) {
      com.google.protobuf.ByteString b = 
          com.google.protobuf.ByteString.copyFromUtf8(
              (java.lang.String) ref);
      htmlFormatted_ = b;
      return b;
    } else {
      return (com.google.protobuf.ByteString) ref;
    }
  }

  public static final int MARKUPS_FIELD_NUMBER = 3;
  private java.util.List<com.google.cloud.dataqna.v1alpha.AnnotatedString.SemanticMarkup> markups_;
  /**
   * <pre>
   * Semantic version of the string annotation.
   * </pre>
   *
   * <code>repeated .google.cloud.dataqna.v1alpha.AnnotatedString.SemanticMarkup markups = 3;</code>
   */
  @java.lang.Override
  public java.util.List<com.google.cloud.dataqna.v1alpha.AnnotatedString.SemanticMarkup> getMarkupsList() {
    return markups_;
  }
  /**
   * <pre>
   * Semantic version of the string annotation.
   * </pre>
   *
   * <code>repeated .google.cloud.dataqna.v1alpha.AnnotatedString.SemanticMarkup markups = 3;</code>
   */
  @java.lang.Override
  public java.util.List<? extends com.google.cloud.dataqna.v1alpha.AnnotatedString.SemanticMarkupOrBuilder> 
      getMarkupsOrBuilderList() {
    return markups_;
  }
  /**
   * <pre>
   * Semantic version of the string annotation.
   * </pre>
   *
   * <code>repeated .google.cloud.dataqna.v1alpha.AnnotatedString.SemanticMarkup markups = 3;</code>
   */
  @java.lang.Override
  public int getMarkupsCount() {
    return markups_.size();
  }
  /**
   * <pre>
   * Semantic version of the string annotation.
   * </pre>
   *
   * <code>repeated .google.cloud.dataqna.v1alpha.AnnotatedString.SemanticMarkup markups = 3;</code>
   */
  @java.lang.Override
  public com.google.cloud.dataqna.v1alpha.AnnotatedString.SemanticMarkup getMarkups(int index) {
    return markups_.get(index);
  }
  /**
   * <pre>
   * Semantic version of the string annotation.
   * </pre>
   *
   * <code>repeated .google.cloud.dataqna.v1alpha.AnnotatedString.SemanticMarkup markups = 3;</code>
   */
  @java.lang.Override
  public com.google.cloud.dataqna.v1alpha.AnnotatedString.SemanticMarkupOrBuilder getMarkupsOrBuilder(
      int index) {
    return markups_.get(index);
  }

  private byte memoizedIsInitialized = -1;
  @java.lang.Override
  public final boolean isInitialized() {
    byte isInitialized = memoizedIsInitialized;
    if (isInitialized == 1) return true;
    if (isInitialized == 0) return false;

    memoizedIsInitialized = 1;
    return true;
  }

  @java.lang.Override
  public void writeTo(com.google.protobuf.CodedOutputStream output)
                      throws java.io.IOException {
    if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(textFormatted_)) {
      com.google.protobuf.GeneratedMessageV3.writeString(output, 1, textFormatted_);
    }
    if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(htmlFormatted_)) {
      com.google.protobuf.GeneratedMessageV3.writeString(output, 2, htmlFormatted_);
    }
    for (int i = 0; i < markups_.size(); i++) {
      output.writeMessage(3, markups_.get(i));
    }
    unknownFields.writeTo(output);
  }

  @java.lang.Override
  public int getSerializedSize() {
    int size = memoizedSize;
    if (size != -1) return size;

    size = 0;
    if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(textFormatted_)) {
      size += com.google.protobuf.GeneratedMessageV3.computeStringSize(1, textFormatted_);
    }
    if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(htmlFormatted_)) {
      size += com.google.protobuf.GeneratedMessageV3.computeStringSize(2, htmlFormatted_);
    }
    for (int i = 0; i < markups_.size(); i++) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(3, markups_.get(i));
    }
    size += unknownFields.getSerializedSize();
    memoizedSize = size;
    return size;
  }

  @java.lang.Override
  public boolean equals(final java.lang.Object obj) {
    if (obj == this) {
     return true;
    }
    if (!(obj instanceof com.google.cloud.dataqna.v1alpha.AnnotatedString)) {
      return super.equals(obj);
    }
    com.google.cloud.dataqna.v1alpha.AnnotatedString other = (com.google.cloud.dataqna.v1alpha.AnnotatedString) obj;

    if (!getTextFormatted()
        .equals(other.getTextFormatted())) return false;
    if (!getHtmlFormatted()
        .equals(other.getHtmlFormatted())) return false;
    if (!getMarkupsList()
        .equals(other.getMarkupsList())) return false;
    if (!unknownFields.equals(other.unknownFields)) return false;
    return true;
  }

  @java.lang.Override
  public int hashCode() {
    if (memoizedHashCode != 0) {
      return memoizedHashCode;
    }
    int hash = 41;
    hash = (19 * hash) + getDescriptor().hashCode();
    hash = (37 * hash) + TEXT_FORMATTED_FIELD_NUMBER;
    hash = (53 * hash) + getTextFormatted().hashCode();
    hash = (37 * hash) + HTML_FORMATTED_FIELD_NUMBER;
    hash = (53 * hash) + getHtmlFormatted().hashCode();
    if (getMarkupsCount() > 0) {
      hash = (37 * hash) + MARKUPS_FIELD_NUMBER;
      hash = (53 * hash) + getMarkupsList().hashCode();
    }
    hash = (29 * hash) + unknownFields.hashCode();
    memoizedHashCode = hash;
    return hash;
  }

  public static com.google.cloud.dataqna.v1alpha.AnnotatedString parseFrom(
      java.nio.ByteBuffer data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static com.google.cloud.dataqna.v1alpha.AnnotatedString parseFrom(
      java.nio.ByteBuffer data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static com.google.cloud.dataqna.v1alpha.AnnotatedString parseFrom(
      com.google.protobuf.ByteString data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static com.google.cloud.dataqna.v1alpha.AnnotatedString parseFrom(
      com.google.protobuf.ByteString data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static com.google.cloud.dataqna.v1alpha.AnnotatedString parseFrom(byte[] data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static com.google.cloud.dataqna.v1alpha.AnnotatedString parseFrom(
      byte[] data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static com.google.cloud.dataqna.v1alpha.AnnotatedString parseFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input);
  }
  public static com.google.cloud.dataqna.v1alpha.AnnotatedString parseFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input, extensionRegistry);
  }
  public static com.google.cloud.dataqna.v1alpha.AnnotatedString parseDelimitedFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseDelimitedWithIOException(PARSER, input);
  }
  public static com.google.cloud.dataqna.v1alpha.AnnotatedString parseDelimitedFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
  }
  public static com.google.cloud.dataqna.v1alpha.AnnotatedString parseFrom(
      com.google.protobuf.CodedInputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input);
  }
  public static com.google.cloud.dataqna.v1alpha.AnnotatedString parseFrom(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input, extensionRegistry);
  }

  @java.lang.Override
  public Builder newBuilderForType() { return newBuilder(); }
  public static Builder newBuilder() {
    return DEFAULT_INSTANCE.toBuilder();
  }
  public static Builder newBuilder(com.google.cloud.dataqna.v1alpha.AnnotatedString prototype) {
    return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
  }
  @java.lang.Override
  public Builder toBuilder() {
    return this == DEFAULT_INSTANCE
        ? new Builder() : new Builder().mergeFrom(this);
  }

  @java.lang.Override
  protected Builder newBuilderForType(
      com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
    Builder builder = new Builder(parent);
    return builder;
  }
  /**
   * <pre>
   * Describes string annotation from both semantic and formatting perspectives.
   * Example:
   * User Query:
   *   top countries by population in Africa
   *   0   4         14 17         28 31    37
   * Table Data:
   * + "country" - dimension
   * + "population" - metric
   * + "Africa" - value in the "continent" column
   * text_formatted = `"top countries by population in Africa"`
   * html_formatted =
   *   `"top &lt;b&gt;countries&lt;/b&gt; by &lt;b&gt;population&lt;/b&gt; in &lt;i&gt;Africa&lt;/i&gt;"`
   * ```
   * markups = [
   *   {DIMENSION, 4, 12}, // 'countries'
   *   {METRIC, 17, 26}, // 'population'
   *   {FILTER, 31, 36}  // 'Africa'
   * ]
   * ```
   * Note that html formattings for 'DIMENSION' and 'METRIC' are the same, while
   * semantic markups are different.
   * </pre>
   *
   * Protobuf type {@code google.cloud.dataqna.v1alpha.AnnotatedString}
   */
  public static final class Builder extends
      com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
      // @@protoc_insertion_point(builder_implements:google.cloud.dataqna.v1alpha.AnnotatedString)
      com.google.cloud.dataqna.v1alpha.AnnotatedStringOrBuilder {
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.google.cloud.dataqna.v1alpha.AnnotatedStringProto.internal_static_google_cloud_dataqna_v1alpha_AnnotatedString_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.google.cloud.dataqna.v1alpha.AnnotatedStringProto.internal_static_google_cloud_dataqna_v1alpha_AnnotatedString_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.google.cloud.dataqna.v1alpha.AnnotatedString.class, com.google.cloud.dataqna.v1alpha.AnnotatedString.Builder.class);
    }

    // Construct using com.google.cloud.dataqna.v1alpha.AnnotatedString.newBuilder()
    private Builder() {
      maybeForceBuilderInitialization();
    }

    private Builder(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      super(parent);
      maybeForceBuilderInitialization();
    }
    private void maybeForceBuilderInitialization() {
      if (com.google.protobuf.GeneratedMessageV3
              .alwaysUseFieldBuilders) {
        getMarkupsFieldBuilder();
      }
    }
    @java.lang.Override
    public Builder clear() {
      super.clear();
      textFormatted_ = "";

      htmlFormatted_ = "";

      if (markupsBuilder_ == null) {
        markups_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000001);
      } else {
        markupsBuilder_.clear();
      }
      return this;
    }

    @java.lang.Override
    public com.google.protobuf.Descriptors.Descriptor
        getDescriptorForType() {
      return com.google.cloud.dataqna.v1alpha.AnnotatedStringProto.internal_static_google_cloud_dataqna_v1alpha_AnnotatedString_descriptor;
    }

    @java.lang.Override
    public com.google.cloud.dataqna.v1alpha.AnnotatedString getDefaultInstanceForType() {
      return com.google.cloud.dataqna.v1alpha.AnnotatedString.getDefaultInstance();
    }

    @java.lang.Override
    public com.google.cloud.dataqna.v1alpha.AnnotatedString build() {
      com.google.cloud.dataqna.v1alpha.AnnotatedString result = buildPartial();
      if (!result.isInitialized()) {
        throw newUninitializedMessageException(result);
      }
      return result;
    }

    @java.lang.Override
    public com.google.cloud.dataqna.v1alpha.AnnotatedString buildPartial() {
      com.google.cloud.dataqna.v1alpha.AnnotatedString result = new com.google.cloud.dataqna.v1alpha.AnnotatedString(this);
      int from_bitField0_ = bitField0_;
      result.textFormatted_ = textFormatted_;
      result.htmlFormatted_ = htmlFormatted_;
      if (markupsBuilder_ == null) {
        if (((bitField0_ & 0x00000001) != 0)) {
          markups_ = java.util.Collections.unmodifiableList(markups_);
          bitField0_ = (bitField0_ & ~0x00000001);
        }
        result.markups_ = markups_;
      } else {
        result.markups_ = markupsBuilder_.build();
      }
      onBuilt();
      return result;
    }

    @java.lang.Override
    public Builder clone() {
      return super.clone();
    }
    @java.lang.Override
    public Builder setField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        java.lang.Object value) {
      return super.setField(field, value);
    }
    @java.lang.Override
    public Builder clearField(
        com.google.protobuf.Descriptors.FieldDescriptor field) {
      return super.clearField(field);
    }
    @java.lang.Override
    public Builder clearOneof(
        com.google.protobuf.Descriptors.OneofDescriptor oneof) {
      return super.clearOneof(oneof);
    }
    @java.lang.Override
    public Builder setRepeatedField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        int index, java.lang.Object value) {
      return super.setRepeatedField(field, index, value);
    }
    @java.lang.Override
    public Builder addRepeatedField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        java.lang.Object value) {
      return super.addRepeatedField(field, value);
    }
    @java.lang.Override
    public Builder mergeFrom(com.google.protobuf.Message other) {
      if (other instanceof com.google.cloud.dataqna.v1alpha.AnnotatedString) {
        return mergeFrom((com.google.cloud.dataqna.v1alpha.AnnotatedString)other);
      } else {
        super.mergeFrom(other);
        return this;
      }
    }

    public Builder mergeFrom(com.google.cloud.dataqna.v1alpha.AnnotatedString other) {
      if (other == com.google.cloud.dataqna.v1alpha.AnnotatedString.getDefaultInstance()) return this;
      if (!other.getTextFormatted().isEmpty()) {
        textFormatted_ = other.textFormatted_;
        onChanged();
      }
      if (!other.getHtmlFormatted().isEmpty()) {
        htmlFormatted_ = other.htmlFormatted_;
        onChanged();
      }
      if (markupsBuilder_ == null) {
        if (!other.markups_.isEmpty()) {
          if (markups_.isEmpty()) {
            markups_ = other.markups_;
            bitField0_ = (bitField0_ & ~0x00000001);
          } else {
            ensureMarkupsIsMutable();
            markups_.addAll(other.markups_);
          }
          onChanged();
        }
      } else {
        if (!other.markups_.isEmpty()) {
          if (markupsBuilder_.isEmpty()) {
            markupsBuilder_.dispose();
            markupsBuilder_ = null;
            markups_ = other.markups_;
            bitField0_ = (bitField0_ & ~0x00000001);
            markupsBuilder_ = 
              com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?
                 getMarkupsFieldBuilder() : null;
          } else {
            markupsBuilder_.addAllMessages(other.markups_);
          }
        }
      }
      this.mergeUnknownFields(other.unknownFields);
      onChanged();
      return this;
    }

    @java.lang.Override
    public final boolean isInitialized() {
      return true;
    }

    @java.lang.Override
    public Builder mergeFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      com.google.cloud.dataqna.v1alpha.AnnotatedString parsedMessage = null;
      try {
        parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        parsedMessage = (com.google.cloud.dataqna.v1alpha.AnnotatedString) e.getUnfinishedMessage();
        throw e.unwrapIOException();
      } finally {
        if (parsedMessage != null) {
          mergeFrom(parsedMessage);
        }
      }
      return this;
    }
    private int bitField0_;

    private java.lang.Object textFormatted_ = "";
    /**
     * <pre>
     * Text version of the string.
     * </pre>
     *
     * <code>string text_formatted = 1;</code>
     * @return The textFormatted.
     */
    public java.lang.String getTextFormatted() {
      java.lang.Object ref = textFormatted_;
      if (!(ref instanceof java.lang.String)) {
        com.google.protobuf.ByteString bs =
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        textFormatted_ = s;
        return s;
      } else {
        return (java.lang.String) ref;
      }
    }
    /**
     * <pre>
     * Text version of the string.
     * </pre>
     *
     * <code>string text_formatted = 1;</code>
     * @return The bytes for textFormatted.
     */
    public com.google.protobuf.ByteString
        getTextFormattedBytes() {
      java.lang.Object ref = textFormatted_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        textFormatted_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }
    /**
     * <pre>
     * Text version of the string.
     * </pre>
     *
     * <code>string text_formatted = 1;</code>
     * @param value The textFormatted to set.
     * @return This builder for chaining.
     */
    public Builder setTextFormatted(
        java.lang.String value) {
      if (value == null) {
    throw new NullPointerException();
  }
  
      textFormatted_ = value;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * Text version of the string.
     * </pre>
     *
     * <code>string text_formatted = 1;</code>
     * @return This builder for chaining.
     */
    public Builder clearTextFormatted() {
      
      textFormatted_ = getDefaultInstance().getTextFormatted();
      onChanged();
      return this;
    }
    /**
     * <pre>
     * Text version of the string.
     * </pre>
     *
     * <code>string text_formatted = 1;</code>
     * @param value The bytes for textFormatted to set.
     * @return This builder for chaining.
     */
    public Builder setTextFormattedBytes(
        com.google.protobuf.ByteString value) {
      if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
      
      textFormatted_ = value;
      onChanged();
      return this;
    }

    private java.lang.Object htmlFormatted_ = "";
    /**
     * <pre>
     * HTML version of the string annotation.
     * </pre>
     *
     * <code>string html_formatted = 2;</code>
     * @return The htmlFormatted.
     */
    public java.lang.String getHtmlFormatted() {
      java.lang.Object ref = htmlFormatted_;
      if (!(ref instanceof java.lang.String)) {
        com.google.protobuf.ByteString bs =
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        htmlFormatted_ = s;
        return s;
      } else {
        return (java.lang.String) ref;
      }
    }
    /**
     * <pre>
     * HTML version of the string annotation.
     * </pre>
     *
     * <code>string html_formatted = 2;</code>
     * @return The bytes for htmlFormatted.
     */
    public com.google.protobuf.ByteString
        getHtmlFormattedBytes() {
      java.lang.Object ref = htmlFormatted_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        htmlFormatted_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }
    /**
     * <pre>
     * HTML version of the string annotation.
     * </pre>
     *
     * <code>string html_formatted = 2;</code>
     * @param value The htmlFormatted to set.
     * @return This builder for chaining.
     */
    public Builder setHtmlFormatted(
        java.lang.String value) {
      if (value == null) {
    throw new NullPointerException();
  }
  
      htmlFormatted_ = value;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * HTML version of the string annotation.
     * </pre>
     *
     * <code>string html_formatted = 2;</code>
     * @return This builder for chaining.
     */
    public Builder clearHtmlFormatted() {
      
      htmlFormatted_ = getDefaultInstance().getHtmlFormatted();
      onChanged();
      return this;
    }
    /**
     * <pre>
     * HTML version of the string annotation.
     * </pre>
     *
     * <code>string html_formatted = 2;</code>
     * @param value The bytes for htmlFormatted to set.
     * @return This builder for chaining.
     */
    public Builder setHtmlFormattedBytes(
        com.google.protobuf.ByteString value) {
      if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
      
      htmlFormatted_ = value;
      onChanged();
      return this;
    }

    private java.util.List<com.google.cloud.dataqna.v1alpha.AnnotatedString.SemanticMarkup> markups_ =
      java.util.Collections.emptyList();
    private void ensureMarkupsIsMutable() {
      if (!((bitField0_ & 0x00000001) != 0)) {
        markups_ = new java.util.ArrayList<com.google.cloud.dataqna.v1alpha.AnnotatedString.SemanticMarkup>(markups_);
        bitField0_ |= 0x00000001;
       }
    }

    private com.google.protobuf.RepeatedFieldBuilderV3<
        com.google.cloud.dataqna.v1alpha.AnnotatedString.SemanticMarkup, com.google.cloud.dataqna.v1alpha.AnnotatedString.SemanticMarkup.Builder, com.google.cloud.dataqna.v1alpha.AnnotatedString.SemanticMarkupOrBuilder> markupsBuilder_;

    /**
     * <pre>
     * Semantic version of the string annotation.
     * </pre>
     *
     * <code>repeated .google.cloud.dataqna.v1alpha.AnnotatedString.SemanticMarkup markups = 3;</code>
     */
    public java.util.List<com.google.cloud.dataqna.v1alpha.AnnotatedString.SemanticMarkup> getMarkupsList() {
      if (markupsBuilder_ == null) {
        return java.util.Collections.unmodifiableList(markups_);
      } else {
        return markupsBuilder_.getMessageList();
      }
    }
    /**
     * <pre>
     * Semantic version of the string annotation.
     * </pre>
     *
     * <code>repeated .google.cloud.dataqna.v1alpha.AnnotatedString.SemanticMarkup markups = 3;</code>
     */
    public int getMarkupsCount() {
      if (markupsBuilder_ == null) {
        return markups_.size();
      } else {
        return markupsBuilder_.getCount();
      }
    }
    /**
     * <pre>
     * Semantic version of the string annotation.
     * </pre>
     *
     * <code>repeated .google.cloud.dataqna.v1alpha.AnnotatedString.SemanticMarkup markups = 3;</code>
     */
    public com.google.cloud.dataqna.v1alpha.AnnotatedString.SemanticMarkup getMarkups(int index) {
      if (markupsBuilder_ == null) {
        return markups_.get(index);
      } else {
        return markupsBuilder_.getMessage(index);
      }
    }
    /**
     * <pre>
     * Semantic version of the string annotation.
     * </pre>
     *
     * <code>repeated .google.cloud.dataqna.v1alpha.AnnotatedString.SemanticMarkup markups = 3;</code>
     */
    public Builder setMarkups(
        int index, com.google.cloud.dataqna.v1alpha.AnnotatedString.SemanticMarkup value) {
      if (markupsBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureMarkupsIsMutable();
        markups_.set(index, value);
        onChanged();
      } else {
        markupsBuilder_.setMessage(index, value);
      }
      return this;
    }
    /**
     * <pre>
     * Semantic version of the string annotation.
     * </pre>
     *
     * <code>repeated .google.cloud.dataqna.v1alpha.AnnotatedString.SemanticMarkup markups = 3;</code>
     */
    public Builder setMarkups(
        int index, com.google.cloud.dataqna.v1alpha.AnnotatedString.SemanticMarkup.Builder builderForValue) {
      if (markupsBuilder_ == null) {
        ensureMarkupsIsMutable();
        markups_.set(index, builderForValue.build());
        onChanged();
      } else {
        markupsBuilder_.setMessage(index, builderForValue.build());
      }
      return this;
    }
    /**
     * <pre>
     * Semantic version of the string annotation.
     * </pre>
     *
     * <code>repeated .google.cloud.dataqna.v1alpha.AnnotatedString.SemanticMarkup markups = 3;</code>
     */
    public Builder addMarkups(com.google.cloud.dataqna.v1alpha.AnnotatedString.SemanticMarkup value) {
      if (markupsBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureMarkupsIsMutable();
        markups_.add(value);
        onChanged();
      } else {
        markupsBuilder_.addMessage(value);
      }
      return this;
    }
    /**
     * <pre>
     * Semantic version of the string annotation.
     * </pre>
     *
     * <code>repeated .google.cloud.dataqna.v1alpha.AnnotatedString.SemanticMarkup markups = 3;</code>
     */
    public Builder addMarkups(
        int index, com.google.cloud.dataqna.v1alpha.AnnotatedString.SemanticMarkup value) {
      if (markupsBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureMarkupsIsMutable();
        markups_.add(index, value);
        onChanged();
      } else {
        markupsBuilder_.addMessage(index, value);
      }
      return this;
    }
    /**
     * <pre>
     * Semantic version of the string annotation.
     * </pre>
     *
     * <code>repeated .google.cloud.dataqna.v1alpha.AnnotatedString.SemanticMarkup markups = 3;</code>
     */
    public Builder addMarkups(
        com.google.cloud.dataqna.v1alpha.AnnotatedString.SemanticMarkup.Builder builderForValue) {
      if (markupsBuilder_ == null) {
        ensureMarkupsIsMutable();
        markups_.add(builderForValue.build());
        onChanged();
      } else {
        markupsBuilder_.addMessage(builderForValue.build());
      }
      return this;
    }
    /**
     * <pre>
     * Semantic version of the string annotation.
     * </pre>
     *
     * <code>repeated .google.cloud.dataqna.v1alpha.AnnotatedString.SemanticMarkup markups = 3;</code>
     */
    public Builder addMarkups(
        int index, com.google.cloud.dataqna.v1alpha.AnnotatedString.SemanticMarkup.Builder builderForValue) {
      if (markupsBuilder_ == null) {
        ensureMarkupsIsMutable();
        markups_.add(index, builderForValue.build());
        onChanged();
      } else {
        markupsBuilder_.addMessage(index, builderForValue.build());
      }
      return this;
    }
    /**
     * <pre>
     * Semantic version of the string annotation.
     * </pre>
     *
     * <code>repeated .google.cloud.dataqna.v1alpha.AnnotatedString.SemanticMarkup markups = 3;</code>
     */
    public Builder addAllMarkups(
        java.lang.Iterable<? extends com.google.cloud.dataqna.v1alpha.AnnotatedString.SemanticMarkup> values) {
      if (markupsBuilder_ == null) {
        ensureMarkupsIsMutable();
        com.google.protobuf.AbstractMessageLite.Builder.addAll(
            values, markups_);
        onChanged();
      } else {
        markupsBuilder_.addAllMessages(values);
      }
      return this;
    }
    /**
     * <pre>
     * Semantic version of the string annotation.
     * </pre>
     *
     * <code>repeated .google.cloud.dataqna.v1alpha.AnnotatedString.SemanticMarkup markups = 3;</code>
     */
    public Builder clearMarkups() {
      if (markupsBuilder_ == null) {
        markups_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000001);
        onChanged();
      } else {
        markupsBuilder_.clear();
      }
      return this;
    }
    /**
     * <pre>
     * Semantic version of the string annotation.
     * </pre>
     *
     * <code>repeated .google.cloud.dataqna.v1alpha.AnnotatedString.SemanticMarkup markups = 3;</code>
     */
    public Builder removeMarkups(int index) {
      if (markupsBuilder_ == null) {
        ensureMarkupsIsMutable();
        markups_.remove(index);
        onChanged();
      } else {
        markupsBuilder_.remove(index);
      }
      return this;
    }
    /**
     * <pre>
     * Semantic version of the string annotation.
     * </pre>
     *
     * <code>repeated .google.cloud.dataqna.v1alpha.AnnotatedString.SemanticMarkup markups = 3;</code>
     */
    public com.google.cloud.dataqna.v1alpha.AnnotatedString.SemanticMarkup.Builder getMarkupsBuilder(
        int index) {
      return getMarkupsFieldBuilder().getBuilder(index);
    }
    /**
     * <pre>
     * Semantic version of the string annotation.
     * </pre>
     *
     * <code>repeated .google.cloud.dataqna.v1alpha.AnnotatedString.SemanticMarkup markups = 3;</code>
     */
    public com.google.cloud.dataqna.v1alpha.AnnotatedString.SemanticMarkupOrBuilder getMarkupsOrBuilder(
        int index) {
      if (markupsBuilder_ == null) {
        return markups_.get(index);  } else {
        return markupsBuilder_.getMessageOrBuilder(index);
      }
    }
    /**
     * <pre>
     * Semantic version of the string annotation.
     * </pre>
     *
     * <code>repeated .google.cloud.dataqna.v1alpha.AnnotatedString.SemanticMarkup markups = 3;</code>
     */
    public java.util.List<? extends com.google.cloud.dataqna.v1alpha.AnnotatedString.SemanticMarkupOrBuilder> 
         getMarkupsOrBuilderList() {
      if (markupsBuilder_ != null) {
        return markupsBuilder_.getMessageOrBuilderList();
      } else {
        return java.util.Collections.unmodifiableList(markups_);
      }
    }
    /**
     * <pre>
     * Semantic version of the string annotation.
     * </pre>
     *
     * <code>repeated .google.cloud.dataqna.v1alpha.AnnotatedString.SemanticMarkup markups = 3;</code>
     */
    public com.google.cloud.dataqna.v1alpha.AnnotatedString.SemanticMarkup.Builder addMarkupsBuilder() {
      return getMarkupsFieldBuilder().addBuilder(
          com.google.cloud.dataqna.v1alpha.AnnotatedString.SemanticMarkup.getDefaultInstance());
    }
    /**
     * <pre>
     * Semantic version of the string annotation.
     * </pre>
     *
     * <code>repeated .google.cloud.dataqna.v1alpha.AnnotatedString.SemanticMarkup markups = 3;</code>
     */
    public com.google.cloud.dataqna.v1alpha.AnnotatedString.SemanticMarkup.Builder addMarkupsBuilder(
        int index) {
      return getMarkupsFieldBuilder().addBuilder(
          index, com.google.cloud.dataqna.v1alpha.AnnotatedString.SemanticMarkup.getDefaultInstance());
    }
    /**
     * <pre>
     * Semantic version of the string annotation.
     * </pre>
     *
     * <code>repeated .google.cloud.dataqna.v1alpha.AnnotatedString.SemanticMarkup markups = 3;</code>
     */
    public java.util.List<com.google.cloud.dataqna.v1alpha.AnnotatedString.SemanticMarkup.Builder> 
         getMarkupsBuilderList() {
      return getMarkupsFieldBuilder().getBuilderList();
    }
    private com.google.protobuf.RepeatedFieldBuilderV3<
        com.google.cloud.dataqna.v1alpha.AnnotatedString.SemanticMarkup, com.google.cloud.dataqna.v1alpha.AnnotatedString.SemanticMarkup.Builder, com.google.cloud.dataqna.v1alpha.AnnotatedString.SemanticMarkupOrBuilder> 
        getMarkupsFieldBuilder() {
      if (markupsBuilder_ == null) {
        markupsBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<
            com.google.cloud.dataqna.v1alpha.AnnotatedString.SemanticMarkup, com.google.cloud.dataqna.v1alpha.AnnotatedString.SemanticMarkup.Builder, com.google.cloud.dataqna.v1alpha.AnnotatedString.SemanticMarkupOrBuilder>(
                markups_,
                ((bitField0_ & 0x00000001) != 0),
                getParentForChildren(),
                isClean());
        markups_ = null;
      }
      return markupsBuilder_;
    }
    @java.lang.Override
    public final Builder setUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return super.setUnknownFields(unknownFields);
    }

    @java.lang.Override
    public final Builder mergeUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return super.mergeUnknownFields(unknownFields);
    }


    // @@protoc_insertion_point(builder_scope:google.cloud.dataqna.v1alpha.AnnotatedString)
  }

  // @@protoc_insertion_point(class_scope:google.cloud.dataqna.v1alpha.AnnotatedString)
  private static final com.google.cloud.dataqna.v1alpha.AnnotatedString DEFAULT_INSTANCE;
  static {
    DEFAULT_INSTANCE = new com.google.cloud.dataqna.v1alpha.AnnotatedString();
  }

  public static com.google.cloud.dataqna.v1alpha.AnnotatedString getDefaultInstance() {
    return DEFAULT_INSTANCE;
  }

  private static final com.google.protobuf.Parser<AnnotatedString>
      PARSER = new com.google.protobuf.AbstractParser<AnnotatedString>() {
    @java.lang.Override
    public AnnotatedString parsePartialFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return new AnnotatedString(input, extensionRegistry);
    }
  };

  public static com.google.protobuf.Parser<AnnotatedString> parser() {
    return PARSER;
  }

  @java.lang.Override
  public com.google.protobuf.Parser<AnnotatedString> getParserForType() {
    return PARSER;
  }

  @java.lang.Override
  public com.google.cloud.dataqna.v1alpha.AnnotatedString getDefaultInstanceForType() {
    return DEFAULT_INSTANCE;
  }

}

