// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: google/cloud/bigquery/logging/v1/audit_data.proto

package com.google.cloud.bigquery.logging.v1;

public interface TableInfoOrBuilder extends
    // @@protoc_insertion_point(interface_extends:google.cloud.bigquery.logging.v1.TableInfo)
    com.google.protobuf.MessageOrBuilder {

  /**
   * <pre>
   * A short name for the table, such as`"Analytics Data - Jan 2011"`.
   * </pre>
   *
   * <code>string friendly_name = 1;</code>
   * @return The friendlyName.
   */
  java.lang.String getFriendlyName();
  /**
   * <pre>
   * A short name for the table, such as`"Analytics Data - Jan 2011"`.
   * </pre>
   *
   * <code>string friendly_name = 1;</code>
   * @return The bytes for friendlyName.
   */
  com.google.protobuf.ByteString
      getFriendlyNameBytes();

  /**
   * <pre>
   * A long description, perhaps several paragraphs,
   * describing the table contents in detail.
   * </pre>
   *
   * <code>string description = 2;</code>
   * @return The description.
   */
  java.lang.String getDescription();
  /**
   * <pre>
   * A long description, perhaps several paragraphs,
   * describing the table contents in detail.
   * </pre>
   *
   * <code>string description = 2;</code>
   * @return The bytes for description.
   */
  com.google.protobuf.ByteString
      getDescriptionBytes();

  /**
   * <pre>
   * Labels provided for the table.
   * </pre>
   *
   * <code>map&lt;string, string&gt; labels = 3;</code>
   */
  int getLabelsCount();
  /**
   * <pre>
   * Labels provided for the table.
   * </pre>
   *
   * <code>map&lt;string, string&gt; labels = 3;</code>
   */
  boolean containsLabels(
      java.lang.String key);
  /**
   * Use {@link #getLabelsMap()} instead.
   */
  @java.lang.Deprecated
  java.util.Map<java.lang.String, java.lang.String>
  getLabels();
  /**
   * <pre>
   * Labels provided for the table.
   * </pre>
   *
   * <code>map&lt;string, string&gt; labels = 3;</code>
   */
  java.util.Map<java.lang.String, java.lang.String>
  getLabelsMap();
  /**
   * <pre>
   * Labels provided for the table.
   * </pre>
   *
   * <code>map&lt;string, string&gt; labels = 3;</code>
   */
  /* nullable */
java.lang.String getLabelsOrDefault(
      java.lang.String key,
      /* nullable */
java.lang.String defaultValue);
  /**
   * <pre>
   * Labels provided for the table.
   * </pre>
   *
   * <code>map&lt;string, string&gt; labels = 3;</code>
   */
  java.lang.String getLabelsOrThrow(
      java.lang.String key);
}
