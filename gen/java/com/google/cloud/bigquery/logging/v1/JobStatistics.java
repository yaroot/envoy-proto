// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: google/cloud/bigquery/logging/v1/audit_data.proto

package com.google.cloud.bigquery.logging.v1;

/**
 * <pre>
 * Job statistics that may change after a job starts.
 * </pre>
 *
 * Protobuf type {@code google.cloud.bigquery.logging.v1.JobStatistics}
 */
public final class JobStatistics extends
    com.google.protobuf.GeneratedMessageV3 implements
    // @@protoc_insertion_point(message_implements:google.cloud.bigquery.logging.v1.JobStatistics)
    JobStatisticsOrBuilder {
private static final long serialVersionUID = 0L;
  // Use JobStatistics.newBuilder() to construct.
  private JobStatistics(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
    super(builder);
  }
  private JobStatistics() {
    reservationUsage_ = java.util.Collections.emptyList();
    referencedTables_ = java.util.Collections.emptyList();
    referencedViews_ = java.util.Collections.emptyList();
  }

  @java.lang.Override
  @SuppressWarnings({"unused"})
  protected java.lang.Object newInstance(
      UnusedPrivateParameter unused) {
    return new JobStatistics();
  }

  @java.lang.Override
  public final com.google.protobuf.UnknownFieldSet
  getUnknownFields() {
    return this.unknownFields;
  }
  private JobStatistics(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    this();
    if (extensionRegistry == null) {
      throw new java.lang.NullPointerException();
    }
    int mutable_bitField0_ = 0;
    com.google.protobuf.UnknownFieldSet.Builder unknownFields =
        com.google.protobuf.UnknownFieldSet.newBuilder();
    try {
      boolean done = false;
      while (!done) {
        int tag = input.readTag();
        switch (tag) {
          case 0:
            done = true;
            break;
          case 10: {
            com.google.protobuf.Timestamp.Builder subBuilder = null;
            if (createTime_ != null) {
              subBuilder = createTime_.toBuilder();
            }
            createTime_ = input.readMessage(com.google.protobuf.Timestamp.parser(), extensionRegistry);
            if (subBuilder != null) {
              subBuilder.mergeFrom(createTime_);
              createTime_ = subBuilder.buildPartial();
            }

            break;
          }
          case 18: {
            com.google.protobuf.Timestamp.Builder subBuilder = null;
            if (startTime_ != null) {
              subBuilder = startTime_.toBuilder();
            }
            startTime_ = input.readMessage(com.google.protobuf.Timestamp.parser(), extensionRegistry);
            if (subBuilder != null) {
              subBuilder.mergeFrom(startTime_);
              startTime_ = subBuilder.buildPartial();
            }

            break;
          }
          case 26: {
            com.google.protobuf.Timestamp.Builder subBuilder = null;
            if (endTime_ != null) {
              subBuilder = endTime_.toBuilder();
            }
            endTime_ = input.readMessage(com.google.protobuf.Timestamp.parser(), extensionRegistry);
            if (subBuilder != null) {
              subBuilder.mergeFrom(endTime_);
              endTime_ = subBuilder.buildPartial();
            }

            break;
          }
          case 32: {

            totalProcessedBytes_ = input.readInt64();
            break;
          }
          case 40: {

            totalBilledBytes_ = input.readInt64();
            break;
          }
          case 56: {

            billingTier_ = input.readInt32();
            break;
          }
          case 64: {

            totalSlotMs_ = input.readInt64();
            break;
          }
          case 74: {
            if (!((mutable_bitField0_ & 0x00000002) != 0)) {
              referencedTables_ = new java.util.ArrayList<com.google.cloud.bigquery.logging.v1.TableName>();
              mutable_bitField0_ |= 0x00000002;
            }
            referencedTables_.add(
                input.readMessage(com.google.cloud.bigquery.logging.v1.TableName.parser(), extensionRegistry));
            break;
          }
          case 80: {

            totalTablesProcessed_ = input.readInt32();
            break;
          }
          case 90: {
            if (!((mutable_bitField0_ & 0x00000004) != 0)) {
              referencedViews_ = new java.util.ArrayList<com.google.cloud.bigquery.logging.v1.TableName>();
              mutable_bitField0_ |= 0x00000004;
            }
            referencedViews_.add(
                input.readMessage(com.google.cloud.bigquery.logging.v1.TableName.parser(), extensionRegistry));
            break;
          }
          case 96: {

            totalViewsProcessed_ = input.readInt32();
            break;
          }
          case 104: {

            totalLoadOutputBytes_ = input.readInt64();
            break;
          }
          case 114: {
            if (!((mutable_bitField0_ & 0x00000001) != 0)) {
              reservationUsage_ = new java.util.ArrayList<com.google.cloud.bigquery.logging.v1.JobStatistics.ReservationResourceUsage>();
              mutable_bitField0_ |= 0x00000001;
            }
            reservationUsage_.add(
                input.readMessage(com.google.cloud.bigquery.logging.v1.JobStatistics.ReservationResourceUsage.parser(), extensionRegistry));
            break;
          }
          case 120: {

            queryOutputRowCount_ = input.readInt64();
            break;
          }
          default: {
            if (!parseUnknownField(
                input, unknownFields, extensionRegistry, tag)) {
              done = true;
            }
            break;
          }
        }
      }
    } catch (com.google.protobuf.InvalidProtocolBufferException e) {
      throw e.setUnfinishedMessage(this);
    } catch (com.google.protobuf.UninitializedMessageException e) {
      throw e.asInvalidProtocolBufferException().setUnfinishedMessage(this);
    } catch (java.io.IOException e) {
      throw new com.google.protobuf.InvalidProtocolBufferException(
          e).setUnfinishedMessage(this);
    } finally {
      if (((mutable_bitField0_ & 0x00000002) != 0)) {
        referencedTables_ = java.util.Collections.unmodifiableList(referencedTables_);
      }
      if (((mutable_bitField0_ & 0x00000004) != 0)) {
        referencedViews_ = java.util.Collections.unmodifiableList(referencedViews_);
      }
      if (((mutable_bitField0_ & 0x00000001) != 0)) {
        reservationUsage_ = java.util.Collections.unmodifiableList(reservationUsage_);
      }
      this.unknownFields = unknownFields.build();
      makeExtensionsImmutable();
    }
  }
  public static final com.google.protobuf.Descriptors.Descriptor
      getDescriptor() {
    return com.google.cloud.bigquery.logging.v1.AuditDataProto.internal_static_google_cloud_bigquery_logging_v1_JobStatistics_descriptor;
  }

  @java.lang.Override
  protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internalGetFieldAccessorTable() {
    return com.google.cloud.bigquery.logging.v1.AuditDataProto.internal_static_google_cloud_bigquery_logging_v1_JobStatistics_fieldAccessorTable
        .ensureFieldAccessorsInitialized(
            com.google.cloud.bigquery.logging.v1.JobStatistics.class, com.google.cloud.bigquery.logging.v1.JobStatistics.Builder.class);
  }

  public interface ReservationResourceUsageOrBuilder extends
      // @@protoc_insertion_point(interface_extends:google.cloud.bigquery.logging.v1.JobStatistics.ReservationResourceUsage)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <pre>
     * Reservation name or "unreserved" for on-demand resources usage.
     * </pre>
     *
     * <code>string name = 1;</code>
     * @return The name.
     */
    java.lang.String getName();
    /**
     * <pre>
     * Reservation name or "unreserved" for on-demand resources usage.
     * </pre>
     *
     * <code>string name = 1;</code>
     * @return The bytes for name.
     */
    com.google.protobuf.ByteString
        getNameBytes();

    /**
     * <pre>
     * Total slot milliseconds used by the reservation for a particular job.
     * </pre>
     *
     * <code>int64 slot_ms = 2;</code>
     * @return The slotMs.
     */
    long getSlotMs();
  }
  /**
   * <pre>
   * Job resource usage breakdown by reservation.
   * </pre>
   *
   * Protobuf type {@code google.cloud.bigquery.logging.v1.JobStatistics.ReservationResourceUsage}
   */
  public static final class ReservationResourceUsage extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:google.cloud.bigquery.logging.v1.JobStatistics.ReservationResourceUsage)
      ReservationResourceUsageOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use ReservationResourceUsage.newBuilder() to construct.
    private ReservationResourceUsage(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private ReservationResourceUsage() {
      name_ = "";
    }

    @java.lang.Override
    @SuppressWarnings({"unused"})
    protected java.lang.Object newInstance(
        UnusedPrivateParameter unused) {
      return new ReservationResourceUsage();
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private ReservationResourceUsage(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 10: {
              java.lang.String s = input.readStringRequireUtf8();

              name_ = s;
              break;
            }
            case 16: {

              slotMs_ = input.readInt64();
              break;
            }
            default: {
              if (!parseUnknownField(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (com.google.protobuf.UninitializedMessageException e) {
        throw e.asInvalidProtocolBufferException().setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.google.cloud.bigquery.logging.v1.AuditDataProto.internal_static_google_cloud_bigquery_logging_v1_JobStatistics_ReservationResourceUsage_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.google.cloud.bigquery.logging.v1.AuditDataProto.internal_static_google_cloud_bigquery_logging_v1_JobStatistics_ReservationResourceUsage_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.google.cloud.bigquery.logging.v1.JobStatistics.ReservationResourceUsage.class, com.google.cloud.bigquery.logging.v1.JobStatistics.ReservationResourceUsage.Builder.class);
    }

    public static final int NAME_FIELD_NUMBER = 1;
    private volatile java.lang.Object name_;
    /**
     * <pre>
     * Reservation name or "unreserved" for on-demand resources usage.
     * </pre>
     *
     * <code>string name = 1;</code>
     * @return The name.
     */
    @java.lang.Override
    public java.lang.String getName() {
      java.lang.Object ref = name_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        name_ = s;
        return s;
      }
    }
    /**
     * <pre>
     * Reservation name or "unreserved" for on-demand resources usage.
     * </pre>
     *
     * <code>string name = 1;</code>
     * @return The bytes for name.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString
        getNameBytes() {
      java.lang.Object ref = name_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        name_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int SLOT_MS_FIELD_NUMBER = 2;
    private long slotMs_;
    /**
     * <pre>
     * Total slot milliseconds used by the reservation for a particular job.
     * </pre>
     *
     * <code>int64 slot_ms = 2;</code>
     * @return The slotMs.
     */
    @java.lang.Override
    public long getSlotMs() {
      return slotMs_;
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(name_)) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 1, name_);
      }
      if (slotMs_ != 0L) {
        output.writeInt64(2, slotMs_);
      }
      unknownFields.writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(name_)) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(1, name_);
      }
      if (slotMs_ != 0L) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(2, slotMs_);
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof com.google.cloud.bigquery.logging.v1.JobStatistics.ReservationResourceUsage)) {
        return super.equals(obj);
      }
      com.google.cloud.bigquery.logging.v1.JobStatistics.ReservationResourceUsage other = (com.google.cloud.bigquery.logging.v1.JobStatistics.ReservationResourceUsage) obj;

      if (!getName()
          .equals(other.getName())) return false;
      if (getSlotMs()
          != other.getSlotMs()) return false;
      if (!unknownFields.equals(other.unknownFields)) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      hash = (37 * hash) + NAME_FIELD_NUMBER;
      hash = (53 * hash) + getName().hashCode();
      hash = (37 * hash) + SLOT_MS_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
          getSlotMs());
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static com.google.cloud.bigquery.logging.v1.JobStatistics.ReservationResourceUsage parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.google.cloud.bigquery.logging.v1.JobStatistics.ReservationResourceUsage parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.google.cloud.bigquery.logging.v1.JobStatistics.ReservationResourceUsage parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.google.cloud.bigquery.logging.v1.JobStatistics.ReservationResourceUsage parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.google.cloud.bigquery.logging.v1.JobStatistics.ReservationResourceUsage parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.google.cloud.bigquery.logging.v1.JobStatistics.ReservationResourceUsage parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.google.cloud.bigquery.logging.v1.JobStatistics.ReservationResourceUsage parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static com.google.cloud.bigquery.logging.v1.JobStatistics.ReservationResourceUsage parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static com.google.cloud.bigquery.logging.v1.JobStatistics.ReservationResourceUsage parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static com.google.cloud.bigquery.logging.v1.JobStatistics.ReservationResourceUsage parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static com.google.cloud.bigquery.logging.v1.JobStatistics.ReservationResourceUsage parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static com.google.cloud.bigquery.logging.v1.JobStatistics.ReservationResourceUsage parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(com.google.cloud.bigquery.logging.v1.JobStatistics.ReservationResourceUsage prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * <pre>
     * Job resource usage breakdown by reservation.
     * </pre>
     *
     * Protobuf type {@code google.cloud.bigquery.logging.v1.JobStatistics.ReservationResourceUsage}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:google.cloud.bigquery.logging.v1.JobStatistics.ReservationResourceUsage)
        com.google.cloud.bigquery.logging.v1.JobStatistics.ReservationResourceUsageOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return com.google.cloud.bigquery.logging.v1.AuditDataProto.internal_static_google_cloud_bigquery_logging_v1_JobStatistics_ReservationResourceUsage_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return com.google.cloud.bigquery.logging.v1.AuditDataProto.internal_static_google_cloud_bigquery_logging_v1_JobStatistics_ReservationResourceUsage_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                com.google.cloud.bigquery.logging.v1.JobStatistics.ReservationResourceUsage.class, com.google.cloud.bigquery.logging.v1.JobStatistics.ReservationResourceUsage.Builder.class);
      }

      // Construct using com.google.cloud.bigquery.logging.v1.JobStatistics.ReservationResourceUsage.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        name_ = "";

        slotMs_ = 0L;

        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.google.cloud.bigquery.logging.v1.AuditDataProto.internal_static_google_cloud_bigquery_logging_v1_JobStatistics_ReservationResourceUsage_descriptor;
      }

      @java.lang.Override
      public com.google.cloud.bigquery.logging.v1.JobStatistics.ReservationResourceUsage getDefaultInstanceForType() {
        return com.google.cloud.bigquery.logging.v1.JobStatistics.ReservationResourceUsage.getDefaultInstance();
      }

      @java.lang.Override
      public com.google.cloud.bigquery.logging.v1.JobStatistics.ReservationResourceUsage build() {
        com.google.cloud.bigquery.logging.v1.JobStatistics.ReservationResourceUsage result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public com.google.cloud.bigquery.logging.v1.JobStatistics.ReservationResourceUsage buildPartial() {
        com.google.cloud.bigquery.logging.v1.JobStatistics.ReservationResourceUsage result = new com.google.cloud.bigquery.logging.v1.JobStatistics.ReservationResourceUsage(this);
        result.name_ = name_;
        result.slotMs_ = slotMs_;
        onBuilt();
        return result;
      }

      @java.lang.Override
      public Builder clone() {
        return super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.google.cloud.bigquery.logging.v1.JobStatistics.ReservationResourceUsage) {
          return mergeFrom((com.google.cloud.bigquery.logging.v1.JobStatistics.ReservationResourceUsage)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(com.google.cloud.bigquery.logging.v1.JobStatistics.ReservationResourceUsage other) {
        if (other == com.google.cloud.bigquery.logging.v1.JobStatistics.ReservationResourceUsage.getDefaultInstance()) return this;
        if (!other.getName().isEmpty()) {
          name_ = other.name_;
          onChanged();
        }
        if (other.getSlotMs() != 0L) {
          setSlotMs(other.getSlotMs());
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.google.cloud.bigquery.logging.v1.JobStatistics.ReservationResourceUsage parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (com.google.cloud.bigquery.logging.v1.JobStatistics.ReservationResourceUsage) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }

      private java.lang.Object name_ = "";
      /**
       * <pre>
       * Reservation name or "unreserved" for on-demand resources usage.
       * </pre>
       *
       * <code>string name = 1;</code>
       * @return The name.
       */
      public java.lang.String getName() {
        java.lang.Object ref = name_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          name_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <pre>
       * Reservation name or "unreserved" for on-demand resources usage.
       * </pre>
       *
       * <code>string name = 1;</code>
       * @return The bytes for name.
       */
      public com.google.protobuf.ByteString
          getNameBytes() {
        java.lang.Object ref = name_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          name_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       * Reservation name or "unreserved" for on-demand resources usage.
       * </pre>
       *
       * <code>string name = 1;</code>
       * @param value The name to set.
       * @return This builder for chaining.
       */
      public Builder setName(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        name_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Reservation name or "unreserved" for on-demand resources usage.
       * </pre>
       *
       * <code>string name = 1;</code>
       * @return This builder for chaining.
       */
      public Builder clearName() {
        
        name_ = getDefaultInstance().getName();
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Reservation name or "unreserved" for on-demand resources usage.
       * </pre>
       *
       * <code>string name = 1;</code>
       * @param value The bytes for name to set.
       * @return This builder for chaining.
       */
      public Builder setNameBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        name_ = value;
        onChanged();
        return this;
      }

      private long slotMs_ ;
      /**
       * <pre>
       * Total slot milliseconds used by the reservation for a particular job.
       * </pre>
       *
       * <code>int64 slot_ms = 2;</code>
       * @return The slotMs.
       */
      @java.lang.Override
      public long getSlotMs() {
        return slotMs_;
      }
      /**
       * <pre>
       * Total slot milliseconds used by the reservation for a particular job.
       * </pre>
       *
       * <code>int64 slot_ms = 2;</code>
       * @param value The slotMs to set.
       * @return This builder for chaining.
       */
      public Builder setSlotMs(long value) {
        
        slotMs_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Total slot milliseconds used by the reservation for a particular job.
       * </pre>
       *
       * <code>int64 slot_ms = 2;</code>
       * @return This builder for chaining.
       */
      public Builder clearSlotMs() {
        
        slotMs_ = 0L;
        onChanged();
        return this;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:google.cloud.bigquery.logging.v1.JobStatistics.ReservationResourceUsage)
    }

    // @@protoc_insertion_point(class_scope:google.cloud.bigquery.logging.v1.JobStatistics.ReservationResourceUsage)
    private static final com.google.cloud.bigquery.logging.v1.JobStatistics.ReservationResourceUsage DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new com.google.cloud.bigquery.logging.v1.JobStatistics.ReservationResourceUsage();
    }

    public static com.google.cloud.bigquery.logging.v1.JobStatistics.ReservationResourceUsage getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<ReservationResourceUsage>
        PARSER = new com.google.protobuf.AbstractParser<ReservationResourceUsage>() {
      @java.lang.Override
      public ReservationResourceUsage parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new ReservationResourceUsage(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<ReservationResourceUsage> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<ReservationResourceUsage> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.cloud.bigquery.logging.v1.JobStatistics.ReservationResourceUsage getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public static final int CREATE_TIME_FIELD_NUMBER = 1;
  private com.google.protobuf.Timestamp createTime_;
  /**
   * <pre>
   * Time when the job was created.
   * </pre>
   *
   * <code>.google.protobuf.Timestamp create_time = 1;</code>
   * @return Whether the createTime field is set.
   */
  @java.lang.Override
  public boolean hasCreateTime() {
    return createTime_ != null;
  }
  /**
   * <pre>
   * Time when the job was created.
   * </pre>
   *
   * <code>.google.protobuf.Timestamp create_time = 1;</code>
   * @return The createTime.
   */
  @java.lang.Override
  public com.google.protobuf.Timestamp getCreateTime() {
    return createTime_ == null ? com.google.protobuf.Timestamp.getDefaultInstance() : createTime_;
  }
  /**
   * <pre>
   * Time when the job was created.
   * </pre>
   *
   * <code>.google.protobuf.Timestamp create_time = 1;</code>
   */
  @java.lang.Override
  public com.google.protobuf.TimestampOrBuilder getCreateTimeOrBuilder() {
    return getCreateTime();
  }

  public static final int START_TIME_FIELD_NUMBER = 2;
  private com.google.protobuf.Timestamp startTime_;
  /**
   * <pre>
   * Time when the job started.
   * </pre>
   *
   * <code>.google.protobuf.Timestamp start_time = 2;</code>
   * @return Whether the startTime field is set.
   */
  @java.lang.Override
  public boolean hasStartTime() {
    return startTime_ != null;
  }
  /**
   * <pre>
   * Time when the job started.
   * </pre>
   *
   * <code>.google.protobuf.Timestamp start_time = 2;</code>
   * @return The startTime.
   */
  @java.lang.Override
  public com.google.protobuf.Timestamp getStartTime() {
    return startTime_ == null ? com.google.protobuf.Timestamp.getDefaultInstance() : startTime_;
  }
  /**
   * <pre>
   * Time when the job started.
   * </pre>
   *
   * <code>.google.protobuf.Timestamp start_time = 2;</code>
   */
  @java.lang.Override
  public com.google.protobuf.TimestampOrBuilder getStartTimeOrBuilder() {
    return getStartTime();
  }

  public static final int END_TIME_FIELD_NUMBER = 3;
  private com.google.protobuf.Timestamp endTime_;
  /**
   * <pre>
   * Time when the job ended.
   * </pre>
   *
   * <code>.google.protobuf.Timestamp end_time = 3;</code>
   * @return Whether the endTime field is set.
   */
  @java.lang.Override
  public boolean hasEndTime() {
    return endTime_ != null;
  }
  /**
   * <pre>
   * Time when the job ended.
   * </pre>
   *
   * <code>.google.protobuf.Timestamp end_time = 3;</code>
   * @return The endTime.
   */
  @java.lang.Override
  public com.google.protobuf.Timestamp getEndTime() {
    return endTime_ == null ? com.google.protobuf.Timestamp.getDefaultInstance() : endTime_;
  }
  /**
   * <pre>
   * Time when the job ended.
   * </pre>
   *
   * <code>.google.protobuf.Timestamp end_time = 3;</code>
   */
  @java.lang.Override
  public com.google.protobuf.TimestampOrBuilder getEndTimeOrBuilder() {
    return getEndTime();
  }

  public static final int TOTAL_PROCESSED_BYTES_FIELD_NUMBER = 4;
  private long totalProcessedBytes_;
  /**
   * <pre>
   * Total bytes processed for a job.
   * </pre>
   *
   * <code>int64 total_processed_bytes = 4;</code>
   * @return The totalProcessedBytes.
   */
  @java.lang.Override
  public long getTotalProcessedBytes() {
    return totalProcessedBytes_;
  }

  public static final int TOTAL_BILLED_BYTES_FIELD_NUMBER = 5;
  private long totalBilledBytes_;
  /**
   * <pre>
   * Processed bytes, adjusted by the job's CPU usage.
   * </pre>
   *
   * <code>int64 total_billed_bytes = 5;</code>
   * @return The totalBilledBytes.
   */
  @java.lang.Override
  public long getTotalBilledBytes() {
    return totalBilledBytes_;
  }

  public static final int BILLING_TIER_FIELD_NUMBER = 7;
  private int billingTier_;
  /**
   * <pre>
   * The tier assigned by CPU-based billing.
   * </pre>
   *
   * <code>int32 billing_tier = 7;</code>
   * @return The billingTier.
   */
  @java.lang.Override
  public int getBillingTier() {
    return billingTier_;
  }

  public static final int TOTAL_SLOT_MS_FIELD_NUMBER = 8;
  private long totalSlotMs_;
  /**
   * <pre>
   * The total number of slot-ms consumed by the query job.
   * </pre>
   *
   * <code>int64 total_slot_ms = 8;</code>
   * @return The totalSlotMs.
   */
  @java.lang.Override
  public long getTotalSlotMs() {
    return totalSlotMs_;
  }

  public static final int RESERVATION_USAGE_FIELD_NUMBER = 14;
  private java.util.List<com.google.cloud.bigquery.logging.v1.JobStatistics.ReservationResourceUsage> reservationUsage_;
  /**
   * <pre>
   * Reservation usage.
   * </pre>
   *
   * <code>repeated .google.cloud.bigquery.logging.v1.JobStatistics.ReservationResourceUsage reservation_usage = 14;</code>
   */
  @java.lang.Override
  public java.util.List<com.google.cloud.bigquery.logging.v1.JobStatistics.ReservationResourceUsage> getReservationUsageList() {
    return reservationUsage_;
  }
  /**
   * <pre>
   * Reservation usage.
   * </pre>
   *
   * <code>repeated .google.cloud.bigquery.logging.v1.JobStatistics.ReservationResourceUsage reservation_usage = 14;</code>
   */
  @java.lang.Override
  public java.util.List<? extends com.google.cloud.bigquery.logging.v1.JobStatistics.ReservationResourceUsageOrBuilder> 
      getReservationUsageOrBuilderList() {
    return reservationUsage_;
  }
  /**
   * <pre>
   * Reservation usage.
   * </pre>
   *
   * <code>repeated .google.cloud.bigquery.logging.v1.JobStatistics.ReservationResourceUsage reservation_usage = 14;</code>
   */
  @java.lang.Override
  public int getReservationUsageCount() {
    return reservationUsage_.size();
  }
  /**
   * <pre>
   * Reservation usage.
   * </pre>
   *
   * <code>repeated .google.cloud.bigquery.logging.v1.JobStatistics.ReservationResourceUsage reservation_usage = 14;</code>
   */
  @java.lang.Override
  public com.google.cloud.bigquery.logging.v1.JobStatistics.ReservationResourceUsage getReservationUsage(int index) {
    return reservationUsage_.get(index);
  }
  /**
   * <pre>
   * Reservation usage.
   * </pre>
   *
   * <code>repeated .google.cloud.bigquery.logging.v1.JobStatistics.ReservationResourceUsage reservation_usage = 14;</code>
   */
  @java.lang.Override
  public com.google.cloud.bigquery.logging.v1.JobStatistics.ReservationResourceUsageOrBuilder getReservationUsageOrBuilder(
      int index) {
    return reservationUsage_.get(index);
  }

  public static final int REFERENCED_TABLES_FIELD_NUMBER = 9;
  private java.util.List<com.google.cloud.bigquery.logging.v1.TableName> referencedTables_;
  /**
   * <pre>
   * The first N tables accessed by the query job. Older queries that
   * reference a large number of tables may not have all of their
   * tables in this list. You can use the total_tables_processed count to
   * know how many total tables were read in the query. For new queries,
   * there is currently no limit.
   * </pre>
   *
   * <code>repeated .google.cloud.bigquery.logging.v1.TableName referenced_tables = 9;</code>
   */
  @java.lang.Override
  public java.util.List<com.google.cloud.bigquery.logging.v1.TableName> getReferencedTablesList() {
    return referencedTables_;
  }
  /**
   * <pre>
   * The first N tables accessed by the query job. Older queries that
   * reference a large number of tables may not have all of their
   * tables in this list. You can use the total_tables_processed count to
   * know how many total tables were read in the query. For new queries,
   * there is currently no limit.
   * </pre>
   *
   * <code>repeated .google.cloud.bigquery.logging.v1.TableName referenced_tables = 9;</code>
   */
  @java.lang.Override
  public java.util.List<? extends com.google.cloud.bigquery.logging.v1.TableNameOrBuilder> 
      getReferencedTablesOrBuilderList() {
    return referencedTables_;
  }
  /**
   * <pre>
   * The first N tables accessed by the query job. Older queries that
   * reference a large number of tables may not have all of their
   * tables in this list. You can use the total_tables_processed count to
   * know how many total tables were read in the query. For new queries,
   * there is currently no limit.
   * </pre>
   *
   * <code>repeated .google.cloud.bigquery.logging.v1.TableName referenced_tables = 9;</code>
   */
  @java.lang.Override
  public int getReferencedTablesCount() {
    return referencedTables_.size();
  }
  /**
   * <pre>
   * The first N tables accessed by the query job. Older queries that
   * reference a large number of tables may not have all of their
   * tables in this list. You can use the total_tables_processed count to
   * know how many total tables were read in the query. For new queries,
   * there is currently no limit.
   * </pre>
   *
   * <code>repeated .google.cloud.bigquery.logging.v1.TableName referenced_tables = 9;</code>
   */
  @java.lang.Override
  public com.google.cloud.bigquery.logging.v1.TableName getReferencedTables(int index) {
    return referencedTables_.get(index);
  }
  /**
   * <pre>
   * The first N tables accessed by the query job. Older queries that
   * reference a large number of tables may not have all of their
   * tables in this list. You can use the total_tables_processed count to
   * know how many total tables were read in the query. For new queries,
   * there is currently no limit.
   * </pre>
   *
   * <code>repeated .google.cloud.bigquery.logging.v1.TableName referenced_tables = 9;</code>
   */
  @java.lang.Override
  public com.google.cloud.bigquery.logging.v1.TableNameOrBuilder getReferencedTablesOrBuilder(
      int index) {
    return referencedTables_.get(index);
  }

  public static final int TOTAL_TABLES_PROCESSED_FIELD_NUMBER = 10;
  private int totalTablesProcessed_;
  /**
   * <pre>
   * Total number of unique tables referenced in the query.
   * </pre>
   *
   * <code>int32 total_tables_processed = 10;</code>
   * @return The totalTablesProcessed.
   */
  @java.lang.Override
  public int getTotalTablesProcessed() {
    return totalTablesProcessed_;
  }

  public static final int REFERENCED_VIEWS_FIELD_NUMBER = 11;
  private java.util.List<com.google.cloud.bigquery.logging.v1.TableName> referencedViews_;
  /**
   * <pre>
   * The first N views accessed by the query job. Older queries that
   * reference a large number of views may not have all of their
   * views in this list. You can use the total_tables_processed count to
   * know how many total tables were read in the query. For new queries,
   * there is currently no limit.
   * </pre>
   *
   * <code>repeated .google.cloud.bigquery.logging.v1.TableName referenced_views = 11;</code>
   */
  @java.lang.Override
  public java.util.List<com.google.cloud.bigquery.logging.v1.TableName> getReferencedViewsList() {
    return referencedViews_;
  }
  /**
   * <pre>
   * The first N views accessed by the query job. Older queries that
   * reference a large number of views may not have all of their
   * views in this list. You can use the total_tables_processed count to
   * know how many total tables were read in the query. For new queries,
   * there is currently no limit.
   * </pre>
   *
   * <code>repeated .google.cloud.bigquery.logging.v1.TableName referenced_views = 11;</code>
   */
  @java.lang.Override
  public java.util.List<? extends com.google.cloud.bigquery.logging.v1.TableNameOrBuilder> 
      getReferencedViewsOrBuilderList() {
    return referencedViews_;
  }
  /**
   * <pre>
   * The first N views accessed by the query job. Older queries that
   * reference a large number of views may not have all of their
   * views in this list. You can use the total_tables_processed count to
   * know how many total tables were read in the query. For new queries,
   * there is currently no limit.
   * </pre>
   *
   * <code>repeated .google.cloud.bigquery.logging.v1.TableName referenced_views = 11;</code>
   */
  @java.lang.Override
  public int getReferencedViewsCount() {
    return referencedViews_.size();
  }
  /**
   * <pre>
   * The first N views accessed by the query job. Older queries that
   * reference a large number of views may not have all of their
   * views in this list. You can use the total_tables_processed count to
   * know how many total tables were read in the query. For new queries,
   * there is currently no limit.
   * </pre>
   *
   * <code>repeated .google.cloud.bigquery.logging.v1.TableName referenced_views = 11;</code>
   */
  @java.lang.Override
  public com.google.cloud.bigquery.logging.v1.TableName getReferencedViews(int index) {
    return referencedViews_.get(index);
  }
  /**
   * <pre>
   * The first N views accessed by the query job. Older queries that
   * reference a large number of views may not have all of their
   * views in this list. You can use the total_tables_processed count to
   * know how many total tables were read in the query. For new queries,
   * there is currently no limit.
   * </pre>
   *
   * <code>repeated .google.cloud.bigquery.logging.v1.TableName referenced_views = 11;</code>
   */
  @java.lang.Override
  public com.google.cloud.bigquery.logging.v1.TableNameOrBuilder getReferencedViewsOrBuilder(
      int index) {
    return referencedViews_.get(index);
  }

  public static final int TOTAL_VIEWS_PROCESSED_FIELD_NUMBER = 12;
  private int totalViewsProcessed_;
  /**
   * <pre>
   * Total number of unique views referenced in the query.
   * </pre>
   *
   * <code>int32 total_views_processed = 12;</code>
   * @return The totalViewsProcessed.
   */
  @java.lang.Override
  public int getTotalViewsProcessed() {
    return totalViewsProcessed_;
  }

  public static final int QUERY_OUTPUT_ROW_COUNT_FIELD_NUMBER = 15;
  private long queryOutputRowCount_;
  /**
   * <pre>
   * Number of output rows produced by the query job.
   * </pre>
   *
   * <code>int64 query_output_row_count = 15;</code>
   * @return The queryOutputRowCount.
   */
  @java.lang.Override
  public long getQueryOutputRowCount() {
    return queryOutputRowCount_;
  }

  public static final int TOTAL_LOAD_OUTPUT_BYTES_FIELD_NUMBER = 13;
  private long totalLoadOutputBytes_;
  /**
   * <pre>
   * Total bytes loaded for an import job.
   * </pre>
   *
   * <code>int64 total_load_output_bytes = 13;</code>
   * @return The totalLoadOutputBytes.
   */
  @java.lang.Override
  public long getTotalLoadOutputBytes() {
    return totalLoadOutputBytes_;
  }

  private byte memoizedIsInitialized = -1;
  @java.lang.Override
  public final boolean isInitialized() {
    byte isInitialized = memoizedIsInitialized;
    if (isInitialized == 1) return true;
    if (isInitialized == 0) return false;

    memoizedIsInitialized = 1;
    return true;
  }

  @java.lang.Override
  public void writeTo(com.google.protobuf.CodedOutputStream output)
                      throws java.io.IOException {
    if (createTime_ != null) {
      output.writeMessage(1, getCreateTime());
    }
    if (startTime_ != null) {
      output.writeMessage(2, getStartTime());
    }
    if (endTime_ != null) {
      output.writeMessage(3, getEndTime());
    }
    if (totalProcessedBytes_ != 0L) {
      output.writeInt64(4, totalProcessedBytes_);
    }
    if (totalBilledBytes_ != 0L) {
      output.writeInt64(5, totalBilledBytes_);
    }
    if (billingTier_ != 0) {
      output.writeInt32(7, billingTier_);
    }
    if (totalSlotMs_ != 0L) {
      output.writeInt64(8, totalSlotMs_);
    }
    for (int i = 0; i < referencedTables_.size(); i++) {
      output.writeMessage(9, referencedTables_.get(i));
    }
    if (totalTablesProcessed_ != 0) {
      output.writeInt32(10, totalTablesProcessed_);
    }
    for (int i = 0; i < referencedViews_.size(); i++) {
      output.writeMessage(11, referencedViews_.get(i));
    }
    if (totalViewsProcessed_ != 0) {
      output.writeInt32(12, totalViewsProcessed_);
    }
    if (totalLoadOutputBytes_ != 0L) {
      output.writeInt64(13, totalLoadOutputBytes_);
    }
    for (int i = 0; i < reservationUsage_.size(); i++) {
      output.writeMessage(14, reservationUsage_.get(i));
    }
    if (queryOutputRowCount_ != 0L) {
      output.writeInt64(15, queryOutputRowCount_);
    }
    unknownFields.writeTo(output);
  }

  @java.lang.Override
  public int getSerializedSize() {
    int size = memoizedSize;
    if (size != -1) return size;

    size = 0;
    if (createTime_ != null) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(1, getCreateTime());
    }
    if (startTime_ != null) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(2, getStartTime());
    }
    if (endTime_ != null) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(3, getEndTime());
    }
    if (totalProcessedBytes_ != 0L) {
      size += com.google.protobuf.CodedOutputStream
        .computeInt64Size(4, totalProcessedBytes_);
    }
    if (totalBilledBytes_ != 0L) {
      size += com.google.protobuf.CodedOutputStream
        .computeInt64Size(5, totalBilledBytes_);
    }
    if (billingTier_ != 0) {
      size += com.google.protobuf.CodedOutputStream
        .computeInt32Size(7, billingTier_);
    }
    if (totalSlotMs_ != 0L) {
      size += com.google.protobuf.CodedOutputStream
        .computeInt64Size(8, totalSlotMs_);
    }
    for (int i = 0; i < referencedTables_.size(); i++) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(9, referencedTables_.get(i));
    }
    if (totalTablesProcessed_ != 0) {
      size += com.google.protobuf.CodedOutputStream
        .computeInt32Size(10, totalTablesProcessed_);
    }
    for (int i = 0; i < referencedViews_.size(); i++) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(11, referencedViews_.get(i));
    }
    if (totalViewsProcessed_ != 0) {
      size += com.google.protobuf.CodedOutputStream
        .computeInt32Size(12, totalViewsProcessed_);
    }
    if (totalLoadOutputBytes_ != 0L) {
      size += com.google.protobuf.CodedOutputStream
        .computeInt64Size(13, totalLoadOutputBytes_);
    }
    for (int i = 0; i < reservationUsage_.size(); i++) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(14, reservationUsage_.get(i));
    }
    if (queryOutputRowCount_ != 0L) {
      size += com.google.protobuf.CodedOutputStream
        .computeInt64Size(15, queryOutputRowCount_);
    }
    size += unknownFields.getSerializedSize();
    memoizedSize = size;
    return size;
  }

  @java.lang.Override
  public boolean equals(final java.lang.Object obj) {
    if (obj == this) {
     return true;
    }
    if (!(obj instanceof com.google.cloud.bigquery.logging.v1.JobStatistics)) {
      return super.equals(obj);
    }
    com.google.cloud.bigquery.logging.v1.JobStatistics other = (com.google.cloud.bigquery.logging.v1.JobStatistics) obj;

    if (hasCreateTime() != other.hasCreateTime()) return false;
    if (hasCreateTime()) {
      if (!getCreateTime()
          .equals(other.getCreateTime())) return false;
    }
    if (hasStartTime() != other.hasStartTime()) return false;
    if (hasStartTime()) {
      if (!getStartTime()
          .equals(other.getStartTime())) return false;
    }
    if (hasEndTime() != other.hasEndTime()) return false;
    if (hasEndTime()) {
      if (!getEndTime()
          .equals(other.getEndTime())) return false;
    }
    if (getTotalProcessedBytes()
        != other.getTotalProcessedBytes()) return false;
    if (getTotalBilledBytes()
        != other.getTotalBilledBytes()) return false;
    if (getBillingTier()
        != other.getBillingTier()) return false;
    if (getTotalSlotMs()
        != other.getTotalSlotMs()) return false;
    if (!getReservationUsageList()
        .equals(other.getReservationUsageList())) return false;
    if (!getReferencedTablesList()
        .equals(other.getReferencedTablesList())) return false;
    if (getTotalTablesProcessed()
        != other.getTotalTablesProcessed()) return false;
    if (!getReferencedViewsList()
        .equals(other.getReferencedViewsList())) return false;
    if (getTotalViewsProcessed()
        != other.getTotalViewsProcessed()) return false;
    if (getQueryOutputRowCount()
        != other.getQueryOutputRowCount()) return false;
    if (getTotalLoadOutputBytes()
        != other.getTotalLoadOutputBytes()) return false;
    if (!unknownFields.equals(other.unknownFields)) return false;
    return true;
  }

  @java.lang.Override
  public int hashCode() {
    if (memoizedHashCode != 0) {
      return memoizedHashCode;
    }
    int hash = 41;
    hash = (19 * hash) + getDescriptor().hashCode();
    if (hasCreateTime()) {
      hash = (37 * hash) + CREATE_TIME_FIELD_NUMBER;
      hash = (53 * hash) + getCreateTime().hashCode();
    }
    if (hasStartTime()) {
      hash = (37 * hash) + START_TIME_FIELD_NUMBER;
      hash = (53 * hash) + getStartTime().hashCode();
    }
    if (hasEndTime()) {
      hash = (37 * hash) + END_TIME_FIELD_NUMBER;
      hash = (53 * hash) + getEndTime().hashCode();
    }
    hash = (37 * hash) + TOTAL_PROCESSED_BYTES_FIELD_NUMBER;
    hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
        getTotalProcessedBytes());
    hash = (37 * hash) + TOTAL_BILLED_BYTES_FIELD_NUMBER;
    hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
        getTotalBilledBytes());
    hash = (37 * hash) + BILLING_TIER_FIELD_NUMBER;
    hash = (53 * hash) + getBillingTier();
    hash = (37 * hash) + TOTAL_SLOT_MS_FIELD_NUMBER;
    hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
        getTotalSlotMs());
    if (getReservationUsageCount() > 0) {
      hash = (37 * hash) + RESERVATION_USAGE_FIELD_NUMBER;
      hash = (53 * hash) + getReservationUsageList().hashCode();
    }
    if (getReferencedTablesCount() > 0) {
      hash = (37 * hash) + REFERENCED_TABLES_FIELD_NUMBER;
      hash = (53 * hash) + getReferencedTablesList().hashCode();
    }
    hash = (37 * hash) + TOTAL_TABLES_PROCESSED_FIELD_NUMBER;
    hash = (53 * hash) + getTotalTablesProcessed();
    if (getReferencedViewsCount() > 0) {
      hash = (37 * hash) + REFERENCED_VIEWS_FIELD_NUMBER;
      hash = (53 * hash) + getReferencedViewsList().hashCode();
    }
    hash = (37 * hash) + TOTAL_VIEWS_PROCESSED_FIELD_NUMBER;
    hash = (53 * hash) + getTotalViewsProcessed();
    hash = (37 * hash) + QUERY_OUTPUT_ROW_COUNT_FIELD_NUMBER;
    hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
        getQueryOutputRowCount());
    hash = (37 * hash) + TOTAL_LOAD_OUTPUT_BYTES_FIELD_NUMBER;
    hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
        getTotalLoadOutputBytes());
    hash = (29 * hash) + unknownFields.hashCode();
    memoizedHashCode = hash;
    return hash;
  }

  public static com.google.cloud.bigquery.logging.v1.JobStatistics parseFrom(
      java.nio.ByteBuffer data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static com.google.cloud.bigquery.logging.v1.JobStatistics parseFrom(
      java.nio.ByteBuffer data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static com.google.cloud.bigquery.logging.v1.JobStatistics parseFrom(
      com.google.protobuf.ByteString data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static com.google.cloud.bigquery.logging.v1.JobStatistics parseFrom(
      com.google.protobuf.ByteString data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static com.google.cloud.bigquery.logging.v1.JobStatistics parseFrom(byte[] data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static com.google.cloud.bigquery.logging.v1.JobStatistics parseFrom(
      byte[] data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static com.google.cloud.bigquery.logging.v1.JobStatistics parseFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input);
  }
  public static com.google.cloud.bigquery.logging.v1.JobStatistics parseFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input, extensionRegistry);
  }
  public static com.google.cloud.bigquery.logging.v1.JobStatistics parseDelimitedFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseDelimitedWithIOException(PARSER, input);
  }
  public static com.google.cloud.bigquery.logging.v1.JobStatistics parseDelimitedFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
  }
  public static com.google.cloud.bigquery.logging.v1.JobStatistics parseFrom(
      com.google.protobuf.CodedInputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input);
  }
  public static com.google.cloud.bigquery.logging.v1.JobStatistics parseFrom(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input, extensionRegistry);
  }

  @java.lang.Override
  public Builder newBuilderForType() { return newBuilder(); }
  public static Builder newBuilder() {
    return DEFAULT_INSTANCE.toBuilder();
  }
  public static Builder newBuilder(com.google.cloud.bigquery.logging.v1.JobStatistics prototype) {
    return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
  }
  @java.lang.Override
  public Builder toBuilder() {
    return this == DEFAULT_INSTANCE
        ? new Builder() : new Builder().mergeFrom(this);
  }

  @java.lang.Override
  protected Builder newBuilderForType(
      com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
    Builder builder = new Builder(parent);
    return builder;
  }
  /**
   * <pre>
   * Job statistics that may change after a job starts.
   * </pre>
   *
   * Protobuf type {@code google.cloud.bigquery.logging.v1.JobStatistics}
   */
  public static final class Builder extends
      com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
      // @@protoc_insertion_point(builder_implements:google.cloud.bigquery.logging.v1.JobStatistics)
      com.google.cloud.bigquery.logging.v1.JobStatisticsOrBuilder {
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.google.cloud.bigquery.logging.v1.AuditDataProto.internal_static_google_cloud_bigquery_logging_v1_JobStatistics_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.google.cloud.bigquery.logging.v1.AuditDataProto.internal_static_google_cloud_bigquery_logging_v1_JobStatistics_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.google.cloud.bigquery.logging.v1.JobStatistics.class, com.google.cloud.bigquery.logging.v1.JobStatistics.Builder.class);
    }

    // Construct using com.google.cloud.bigquery.logging.v1.JobStatistics.newBuilder()
    private Builder() {
      maybeForceBuilderInitialization();
    }

    private Builder(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      super(parent);
      maybeForceBuilderInitialization();
    }
    private void maybeForceBuilderInitialization() {
      if (com.google.protobuf.GeneratedMessageV3
              .alwaysUseFieldBuilders) {
        getReservationUsageFieldBuilder();
        getReferencedTablesFieldBuilder();
        getReferencedViewsFieldBuilder();
      }
    }
    @java.lang.Override
    public Builder clear() {
      super.clear();
      if (createTimeBuilder_ == null) {
        createTime_ = null;
      } else {
        createTime_ = null;
        createTimeBuilder_ = null;
      }
      if (startTimeBuilder_ == null) {
        startTime_ = null;
      } else {
        startTime_ = null;
        startTimeBuilder_ = null;
      }
      if (endTimeBuilder_ == null) {
        endTime_ = null;
      } else {
        endTime_ = null;
        endTimeBuilder_ = null;
      }
      totalProcessedBytes_ = 0L;

      totalBilledBytes_ = 0L;

      billingTier_ = 0;

      totalSlotMs_ = 0L;

      if (reservationUsageBuilder_ == null) {
        reservationUsage_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000001);
      } else {
        reservationUsageBuilder_.clear();
      }
      if (referencedTablesBuilder_ == null) {
        referencedTables_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000002);
      } else {
        referencedTablesBuilder_.clear();
      }
      totalTablesProcessed_ = 0;

      if (referencedViewsBuilder_ == null) {
        referencedViews_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000004);
      } else {
        referencedViewsBuilder_.clear();
      }
      totalViewsProcessed_ = 0;

      queryOutputRowCount_ = 0L;

      totalLoadOutputBytes_ = 0L;

      return this;
    }

    @java.lang.Override
    public com.google.protobuf.Descriptors.Descriptor
        getDescriptorForType() {
      return com.google.cloud.bigquery.logging.v1.AuditDataProto.internal_static_google_cloud_bigquery_logging_v1_JobStatistics_descriptor;
    }

    @java.lang.Override
    public com.google.cloud.bigquery.logging.v1.JobStatistics getDefaultInstanceForType() {
      return com.google.cloud.bigquery.logging.v1.JobStatistics.getDefaultInstance();
    }

    @java.lang.Override
    public com.google.cloud.bigquery.logging.v1.JobStatistics build() {
      com.google.cloud.bigquery.logging.v1.JobStatistics result = buildPartial();
      if (!result.isInitialized()) {
        throw newUninitializedMessageException(result);
      }
      return result;
    }

    @java.lang.Override
    public com.google.cloud.bigquery.logging.v1.JobStatistics buildPartial() {
      com.google.cloud.bigquery.logging.v1.JobStatistics result = new com.google.cloud.bigquery.logging.v1.JobStatistics(this);
      int from_bitField0_ = bitField0_;
      if (createTimeBuilder_ == null) {
        result.createTime_ = createTime_;
      } else {
        result.createTime_ = createTimeBuilder_.build();
      }
      if (startTimeBuilder_ == null) {
        result.startTime_ = startTime_;
      } else {
        result.startTime_ = startTimeBuilder_.build();
      }
      if (endTimeBuilder_ == null) {
        result.endTime_ = endTime_;
      } else {
        result.endTime_ = endTimeBuilder_.build();
      }
      result.totalProcessedBytes_ = totalProcessedBytes_;
      result.totalBilledBytes_ = totalBilledBytes_;
      result.billingTier_ = billingTier_;
      result.totalSlotMs_ = totalSlotMs_;
      if (reservationUsageBuilder_ == null) {
        if (((bitField0_ & 0x00000001) != 0)) {
          reservationUsage_ = java.util.Collections.unmodifiableList(reservationUsage_);
          bitField0_ = (bitField0_ & ~0x00000001);
        }
        result.reservationUsage_ = reservationUsage_;
      } else {
        result.reservationUsage_ = reservationUsageBuilder_.build();
      }
      if (referencedTablesBuilder_ == null) {
        if (((bitField0_ & 0x00000002) != 0)) {
          referencedTables_ = java.util.Collections.unmodifiableList(referencedTables_);
          bitField0_ = (bitField0_ & ~0x00000002);
        }
        result.referencedTables_ = referencedTables_;
      } else {
        result.referencedTables_ = referencedTablesBuilder_.build();
      }
      result.totalTablesProcessed_ = totalTablesProcessed_;
      if (referencedViewsBuilder_ == null) {
        if (((bitField0_ & 0x00000004) != 0)) {
          referencedViews_ = java.util.Collections.unmodifiableList(referencedViews_);
          bitField0_ = (bitField0_ & ~0x00000004);
        }
        result.referencedViews_ = referencedViews_;
      } else {
        result.referencedViews_ = referencedViewsBuilder_.build();
      }
      result.totalViewsProcessed_ = totalViewsProcessed_;
      result.queryOutputRowCount_ = queryOutputRowCount_;
      result.totalLoadOutputBytes_ = totalLoadOutputBytes_;
      onBuilt();
      return result;
    }

    @java.lang.Override
    public Builder clone() {
      return super.clone();
    }
    @java.lang.Override
    public Builder setField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        java.lang.Object value) {
      return super.setField(field, value);
    }
    @java.lang.Override
    public Builder clearField(
        com.google.protobuf.Descriptors.FieldDescriptor field) {
      return super.clearField(field);
    }
    @java.lang.Override
    public Builder clearOneof(
        com.google.protobuf.Descriptors.OneofDescriptor oneof) {
      return super.clearOneof(oneof);
    }
    @java.lang.Override
    public Builder setRepeatedField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        int index, java.lang.Object value) {
      return super.setRepeatedField(field, index, value);
    }
    @java.lang.Override
    public Builder addRepeatedField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        java.lang.Object value) {
      return super.addRepeatedField(field, value);
    }
    @java.lang.Override
    public Builder mergeFrom(com.google.protobuf.Message other) {
      if (other instanceof com.google.cloud.bigquery.logging.v1.JobStatistics) {
        return mergeFrom((com.google.cloud.bigquery.logging.v1.JobStatistics)other);
      } else {
        super.mergeFrom(other);
        return this;
      }
    }

    public Builder mergeFrom(com.google.cloud.bigquery.logging.v1.JobStatistics other) {
      if (other == com.google.cloud.bigquery.logging.v1.JobStatistics.getDefaultInstance()) return this;
      if (other.hasCreateTime()) {
        mergeCreateTime(other.getCreateTime());
      }
      if (other.hasStartTime()) {
        mergeStartTime(other.getStartTime());
      }
      if (other.hasEndTime()) {
        mergeEndTime(other.getEndTime());
      }
      if (other.getTotalProcessedBytes() != 0L) {
        setTotalProcessedBytes(other.getTotalProcessedBytes());
      }
      if (other.getTotalBilledBytes() != 0L) {
        setTotalBilledBytes(other.getTotalBilledBytes());
      }
      if (other.getBillingTier() != 0) {
        setBillingTier(other.getBillingTier());
      }
      if (other.getTotalSlotMs() != 0L) {
        setTotalSlotMs(other.getTotalSlotMs());
      }
      if (reservationUsageBuilder_ == null) {
        if (!other.reservationUsage_.isEmpty()) {
          if (reservationUsage_.isEmpty()) {
            reservationUsage_ = other.reservationUsage_;
            bitField0_ = (bitField0_ & ~0x00000001);
          } else {
            ensureReservationUsageIsMutable();
            reservationUsage_.addAll(other.reservationUsage_);
          }
          onChanged();
        }
      } else {
        if (!other.reservationUsage_.isEmpty()) {
          if (reservationUsageBuilder_.isEmpty()) {
            reservationUsageBuilder_.dispose();
            reservationUsageBuilder_ = null;
            reservationUsage_ = other.reservationUsage_;
            bitField0_ = (bitField0_ & ~0x00000001);
            reservationUsageBuilder_ = 
              com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?
                 getReservationUsageFieldBuilder() : null;
          } else {
            reservationUsageBuilder_.addAllMessages(other.reservationUsage_);
          }
        }
      }
      if (referencedTablesBuilder_ == null) {
        if (!other.referencedTables_.isEmpty()) {
          if (referencedTables_.isEmpty()) {
            referencedTables_ = other.referencedTables_;
            bitField0_ = (bitField0_ & ~0x00000002);
          } else {
            ensureReferencedTablesIsMutable();
            referencedTables_.addAll(other.referencedTables_);
          }
          onChanged();
        }
      } else {
        if (!other.referencedTables_.isEmpty()) {
          if (referencedTablesBuilder_.isEmpty()) {
            referencedTablesBuilder_.dispose();
            referencedTablesBuilder_ = null;
            referencedTables_ = other.referencedTables_;
            bitField0_ = (bitField0_ & ~0x00000002);
            referencedTablesBuilder_ = 
              com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?
                 getReferencedTablesFieldBuilder() : null;
          } else {
            referencedTablesBuilder_.addAllMessages(other.referencedTables_);
          }
        }
      }
      if (other.getTotalTablesProcessed() != 0) {
        setTotalTablesProcessed(other.getTotalTablesProcessed());
      }
      if (referencedViewsBuilder_ == null) {
        if (!other.referencedViews_.isEmpty()) {
          if (referencedViews_.isEmpty()) {
            referencedViews_ = other.referencedViews_;
            bitField0_ = (bitField0_ & ~0x00000004);
          } else {
            ensureReferencedViewsIsMutable();
            referencedViews_.addAll(other.referencedViews_);
          }
          onChanged();
        }
      } else {
        if (!other.referencedViews_.isEmpty()) {
          if (referencedViewsBuilder_.isEmpty()) {
            referencedViewsBuilder_.dispose();
            referencedViewsBuilder_ = null;
            referencedViews_ = other.referencedViews_;
            bitField0_ = (bitField0_ & ~0x00000004);
            referencedViewsBuilder_ = 
              com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?
                 getReferencedViewsFieldBuilder() : null;
          } else {
            referencedViewsBuilder_.addAllMessages(other.referencedViews_);
          }
        }
      }
      if (other.getTotalViewsProcessed() != 0) {
        setTotalViewsProcessed(other.getTotalViewsProcessed());
      }
      if (other.getQueryOutputRowCount() != 0L) {
        setQueryOutputRowCount(other.getQueryOutputRowCount());
      }
      if (other.getTotalLoadOutputBytes() != 0L) {
        setTotalLoadOutputBytes(other.getTotalLoadOutputBytes());
      }
      this.mergeUnknownFields(other.unknownFields);
      onChanged();
      return this;
    }

    @java.lang.Override
    public final boolean isInitialized() {
      return true;
    }

    @java.lang.Override
    public Builder mergeFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      com.google.cloud.bigquery.logging.v1.JobStatistics parsedMessage = null;
      try {
        parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        parsedMessage = (com.google.cloud.bigquery.logging.v1.JobStatistics) e.getUnfinishedMessage();
        throw e.unwrapIOException();
      } finally {
        if (parsedMessage != null) {
          mergeFrom(parsedMessage);
        }
      }
      return this;
    }
    private int bitField0_;

    private com.google.protobuf.Timestamp createTime_;
    private com.google.protobuf.SingleFieldBuilderV3<
        com.google.protobuf.Timestamp, com.google.protobuf.Timestamp.Builder, com.google.protobuf.TimestampOrBuilder> createTimeBuilder_;
    /**
     * <pre>
     * Time when the job was created.
     * </pre>
     *
     * <code>.google.protobuf.Timestamp create_time = 1;</code>
     * @return Whether the createTime field is set.
     */
    public boolean hasCreateTime() {
      return createTimeBuilder_ != null || createTime_ != null;
    }
    /**
     * <pre>
     * Time when the job was created.
     * </pre>
     *
     * <code>.google.protobuf.Timestamp create_time = 1;</code>
     * @return The createTime.
     */
    public com.google.protobuf.Timestamp getCreateTime() {
      if (createTimeBuilder_ == null) {
        return createTime_ == null ? com.google.protobuf.Timestamp.getDefaultInstance() : createTime_;
      } else {
        return createTimeBuilder_.getMessage();
      }
    }
    /**
     * <pre>
     * Time when the job was created.
     * </pre>
     *
     * <code>.google.protobuf.Timestamp create_time = 1;</code>
     */
    public Builder setCreateTime(com.google.protobuf.Timestamp value) {
      if (createTimeBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        createTime_ = value;
        onChanged();
      } else {
        createTimeBuilder_.setMessage(value);
      }

      return this;
    }
    /**
     * <pre>
     * Time when the job was created.
     * </pre>
     *
     * <code>.google.protobuf.Timestamp create_time = 1;</code>
     */
    public Builder setCreateTime(
        com.google.protobuf.Timestamp.Builder builderForValue) {
      if (createTimeBuilder_ == null) {
        createTime_ = builderForValue.build();
        onChanged();
      } else {
        createTimeBuilder_.setMessage(builderForValue.build());
      }

      return this;
    }
    /**
     * <pre>
     * Time when the job was created.
     * </pre>
     *
     * <code>.google.protobuf.Timestamp create_time = 1;</code>
     */
    public Builder mergeCreateTime(com.google.protobuf.Timestamp value) {
      if (createTimeBuilder_ == null) {
        if (createTime_ != null) {
          createTime_ =
            com.google.protobuf.Timestamp.newBuilder(createTime_).mergeFrom(value).buildPartial();
        } else {
          createTime_ = value;
        }
        onChanged();
      } else {
        createTimeBuilder_.mergeFrom(value);
      }

      return this;
    }
    /**
     * <pre>
     * Time when the job was created.
     * </pre>
     *
     * <code>.google.protobuf.Timestamp create_time = 1;</code>
     */
    public Builder clearCreateTime() {
      if (createTimeBuilder_ == null) {
        createTime_ = null;
        onChanged();
      } else {
        createTime_ = null;
        createTimeBuilder_ = null;
      }

      return this;
    }
    /**
     * <pre>
     * Time when the job was created.
     * </pre>
     *
     * <code>.google.protobuf.Timestamp create_time = 1;</code>
     */
    public com.google.protobuf.Timestamp.Builder getCreateTimeBuilder() {
      
      onChanged();
      return getCreateTimeFieldBuilder().getBuilder();
    }
    /**
     * <pre>
     * Time when the job was created.
     * </pre>
     *
     * <code>.google.protobuf.Timestamp create_time = 1;</code>
     */
    public com.google.protobuf.TimestampOrBuilder getCreateTimeOrBuilder() {
      if (createTimeBuilder_ != null) {
        return createTimeBuilder_.getMessageOrBuilder();
      } else {
        return createTime_ == null ?
            com.google.protobuf.Timestamp.getDefaultInstance() : createTime_;
      }
    }
    /**
     * <pre>
     * Time when the job was created.
     * </pre>
     *
     * <code>.google.protobuf.Timestamp create_time = 1;</code>
     */
    private com.google.protobuf.SingleFieldBuilderV3<
        com.google.protobuf.Timestamp, com.google.protobuf.Timestamp.Builder, com.google.protobuf.TimestampOrBuilder> 
        getCreateTimeFieldBuilder() {
      if (createTimeBuilder_ == null) {
        createTimeBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
            com.google.protobuf.Timestamp, com.google.protobuf.Timestamp.Builder, com.google.protobuf.TimestampOrBuilder>(
                getCreateTime(),
                getParentForChildren(),
                isClean());
        createTime_ = null;
      }
      return createTimeBuilder_;
    }

    private com.google.protobuf.Timestamp startTime_;
    private com.google.protobuf.SingleFieldBuilderV3<
        com.google.protobuf.Timestamp, com.google.protobuf.Timestamp.Builder, com.google.protobuf.TimestampOrBuilder> startTimeBuilder_;
    /**
     * <pre>
     * Time when the job started.
     * </pre>
     *
     * <code>.google.protobuf.Timestamp start_time = 2;</code>
     * @return Whether the startTime field is set.
     */
    public boolean hasStartTime() {
      return startTimeBuilder_ != null || startTime_ != null;
    }
    /**
     * <pre>
     * Time when the job started.
     * </pre>
     *
     * <code>.google.protobuf.Timestamp start_time = 2;</code>
     * @return The startTime.
     */
    public com.google.protobuf.Timestamp getStartTime() {
      if (startTimeBuilder_ == null) {
        return startTime_ == null ? com.google.protobuf.Timestamp.getDefaultInstance() : startTime_;
      } else {
        return startTimeBuilder_.getMessage();
      }
    }
    /**
     * <pre>
     * Time when the job started.
     * </pre>
     *
     * <code>.google.protobuf.Timestamp start_time = 2;</code>
     */
    public Builder setStartTime(com.google.protobuf.Timestamp value) {
      if (startTimeBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        startTime_ = value;
        onChanged();
      } else {
        startTimeBuilder_.setMessage(value);
      }

      return this;
    }
    /**
     * <pre>
     * Time when the job started.
     * </pre>
     *
     * <code>.google.protobuf.Timestamp start_time = 2;</code>
     */
    public Builder setStartTime(
        com.google.protobuf.Timestamp.Builder builderForValue) {
      if (startTimeBuilder_ == null) {
        startTime_ = builderForValue.build();
        onChanged();
      } else {
        startTimeBuilder_.setMessage(builderForValue.build());
      }

      return this;
    }
    /**
     * <pre>
     * Time when the job started.
     * </pre>
     *
     * <code>.google.protobuf.Timestamp start_time = 2;</code>
     */
    public Builder mergeStartTime(com.google.protobuf.Timestamp value) {
      if (startTimeBuilder_ == null) {
        if (startTime_ != null) {
          startTime_ =
            com.google.protobuf.Timestamp.newBuilder(startTime_).mergeFrom(value).buildPartial();
        } else {
          startTime_ = value;
        }
        onChanged();
      } else {
        startTimeBuilder_.mergeFrom(value);
      }

      return this;
    }
    /**
     * <pre>
     * Time when the job started.
     * </pre>
     *
     * <code>.google.protobuf.Timestamp start_time = 2;</code>
     */
    public Builder clearStartTime() {
      if (startTimeBuilder_ == null) {
        startTime_ = null;
        onChanged();
      } else {
        startTime_ = null;
        startTimeBuilder_ = null;
      }

      return this;
    }
    /**
     * <pre>
     * Time when the job started.
     * </pre>
     *
     * <code>.google.protobuf.Timestamp start_time = 2;</code>
     */
    public com.google.protobuf.Timestamp.Builder getStartTimeBuilder() {
      
      onChanged();
      return getStartTimeFieldBuilder().getBuilder();
    }
    /**
     * <pre>
     * Time when the job started.
     * </pre>
     *
     * <code>.google.protobuf.Timestamp start_time = 2;</code>
     */
    public com.google.protobuf.TimestampOrBuilder getStartTimeOrBuilder() {
      if (startTimeBuilder_ != null) {
        return startTimeBuilder_.getMessageOrBuilder();
      } else {
        return startTime_ == null ?
            com.google.protobuf.Timestamp.getDefaultInstance() : startTime_;
      }
    }
    /**
     * <pre>
     * Time when the job started.
     * </pre>
     *
     * <code>.google.protobuf.Timestamp start_time = 2;</code>
     */
    private com.google.protobuf.SingleFieldBuilderV3<
        com.google.protobuf.Timestamp, com.google.protobuf.Timestamp.Builder, com.google.protobuf.TimestampOrBuilder> 
        getStartTimeFieldBuilder() {
      if (startTimeBuilder_ == null) {
        startTimeBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
            com.google.protobuf.Timestamp, com.google.protobuf.Timestamp.Builder, com.google.protobuf.TimestampOrBuilder>(
                getStartTime(),
                getParentForChildren(),
                isClean());
        startTime_ = null;
      }
      return startTimeBuilder_;
    }

    private com.google.protobuf.Timestamp endTime_;
    private com.google.protobuf.SingleFieldBuilderV3<
        com.google.protobuf.Timestamp, com.google.protobuf.Timestamp.Builder, com.google.protobuf.TimestampOrBuilder> endTimeBuilder_;
    /**
     * <pre>
     * Time when the job ended.
     * </pre>
     *
     * <code>.google.protobuf.Timestamp end_time = 3;</code>
     * @return Whether the endTime field is set.
     */
    public boolean hasEndTime() {
      return endTimeBuilder_ != null || endTime_ != null;
    }
    /**
     * <pre>
     * Time when the job ended.
     * </pre>
     *
     * <code>.google.protobuf.Timestamp end_time = 3;</code>
     * @return The endTime.
     */
    public com.google.protobuf.Timestamp getEndTime() {
      if (endTimeBuilder_ == null) {
        return endTime_ == null ? com.google.protobuf.Timestamp.getDefaultInstance() : endTime_;
      } else {
        return endTimeBuilder_.getMessage();
      }
    }
    /**
     * <pre>
     * Time when the job ended.
     * </pre>
     *
     * <code>.google.protobuf.Timestamp end_time = 3;</code>
     */
    public Builder setEndTime(com.google.protobuf.Timestamp value) {
      if (endTimeBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        endTime_ = value;
        onChanged();
      } else {
        endTimeBuilder_.setMessage(value);
      }

      return this;
    }
    /**
     * <pre>
     * Time when the job ended.
     * </pre>
     *
     * <code>.google.protobuf.Timestamp end_time = 3;</code>
     */
    public Builder setEndTime(
        com.google.protobuf.Timestamp.Builder builderForValue) {
      if (endTimeBuilder_ == null) {
        endTime_ = builderForValue.build();
        onChanged();
      } else {
        endTimeBuilder_.setMessage(builderForValue.build());
      }

      return this;
    }
    /**
     * <pre>
     * Time when the job ended.
     * </pre>
     *
     * <code>.google.protobuf.Timestamp end_time = 3;</code>
     */
    public Builder mergeEndTime(com.google.protobuf.Timestamp value) {
      if (endTimeBuilder_ == null) {
        if (endTime_ != null) {
          endTime_ =
            com.google.protobuf.Timestamp.newBuilder(endTime_).mergeFrom(value).buildPartial();
        } else {
          endTime_ = value;
        }
        onChanged();
      } else {
        endTimeBuilder_.mergeFrom(value);
      }

      return this;
    }
    /**
     * <pre>
     * Time when the job ended.
     * </pre>
     *
     * <code>.google.protobuf.Timestamp end_time = 3;</code>
     */
    public Builder clearEndTime() {
      if (endTimeBuilder_ == null) {
        endTime_ = null;
        onChanged();
      } else {
        endTime_ = null;
        endTimeBuilder_ = null;
      }

      return this;
    }
    /**
     * <pre>
     * Time when the job ended.
     * </pre>
     *
     * <code>.google.protobuf.Timestamp end_time = 3;</code>
     */
    public com.google.protobuf.Timestamp.Builder getEndTimeBuilder() {
      
      onChanged();
      return getEndTimeFieldBuilder().getBuilder();
    }
    /**
     * <pre>
     * Time when the job ended.
     * </pre>
     *
     * <code>.google.protobuf.Timestamp end_time = 3;</code>
     */
    public com.google.protobuf.TimestampOrBuilder getEndTimeOrBuilder() {
      if (endTimeBuilder_ != null) {
        return endTimeBuilder_.getMessageOrBuilder();
      } else {
        return endTime_ == null ?
            com.google.protobuf.Timestamp.getDefaultInstance() : endTime_;
      }
    }
    /**
     * <pre>
     * Time when the job ended.
     * </pre>
     *
     * <code>.google.protobuf.Timestamp end_time = 3;</code>
     */
    private com.google.protobuf.SingleFieldBuilderV3<
        com.google.protobuf.Timestamp, com.google.protobuf.Timestamp.Builder, com.google.protobuf.TimestampOrBuilder> 
        getEndTimeFieldBuilder() {
      if (endTimeBuilder_ == null) {
        endTimeBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
            com.google.protobuf.Timestamp, com.google.protobuf.Timestamp.Builder, com.google.protobuf.TimestampOrBuilder>(
                getEndTime(),
                getParentForChildren(),
                isClean());
        endTime_ = null;
      }
      return endTimeBuilder_;
    }

    private long totalProcessedBytes_ ;
    /**
     * <pre>
     * Total bytes processed for a job.
     * </pre>
     *
     * <code>int64 total_processed_bytes = 4;</code>
     * @return The totalProcessedBytes.
     */
    @java.lang.Override
    public long getTotalProcessedBytes() {
      return totalProcessedBytes_;
    }
    /**
     * <pre>
     * Total bytes processed for a job.
     * </pre>
     *
     * <code>int64 total_processed_bytes = 4;</code>
     * @param value The totalProcessedBytes to set.
     * @return This builder for chaining.
     */
    public Builder setTotalProcessedBytes(long value) {
      
      totalProcessedBytes_ = value;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * Total bytes processed for a job.
     * </pre>
     *
     * <code>int64 total_processed_bytes = 4;</code>
     * @return This builder for chaining.
     */
    public Builder clearTotalProcessedBytes() {
      
      totalProcessedBytes_ = 0L;
      onChanged();
      return this;
    }

    private long totalBilledBytes_ ;
    /**
     * <pre>
     * Processed bytes, adjusted by the job's CPU usage.
     * </pre>
     *
     * <code>int64 total_billed_bytes = 5;</code>
     * @return The totalBilledBytes.
     */
    @java.lang.Override
    public long getTotalBilledBytes() {
      return totalBilledBytes_;
    }
    /**
     * <pre>
     * Processed bytes, adjusted by the job's CPU usage.
     * </pre>
     *
     * <code>int64 total_billed_bytes = 5;</code>
     * @param value The totalBilledBytes to set.
     * @return This builder for chaining.
     */
    public Builder setTotalBilledBytes(long value) {
      
      totalBilledBytes_ = value;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * Processed bytes, adjusted by the job's CPU usage.
     * </pre>
     *
     * <code>int64 total_billed_bytes = 5;</code>
     * @return This builder for chaining.
     */
    public Builder clearTotalBilledBytes() {
      
      totalBilledBytes_ = 0L;
      onChanged();
      return this;
    }

    private int billingTier_ ;
    /**
     * <pre>
     * The tier assigned by CPU-based billing.
     * </pre>
     *
     * <code>int32 billing_tier = 7;</code>
     * @return The billingTier.
     */
    @java.lang.Override
    public int getBillingTier() {
      return billingTier_;
    }
    /**
     * <pre>
     * The tier assigned by CPU-based billing.
     * </pre>
     *
     * <code>int32 billing_tier = 7;</code>
     * @param value The billingTier to set.
     * @return This builder for chaining.
     */
    public Builder setBillingTier(int value) {
      
      billingTier_ = value;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * The tier assigned by CPU-based billing.
     * </pre>
     *
     * <code>int32 billing_tier = 7;</code>
     * @return This builder for chaining.
     */
    public Builder clearBillingTier() {
      
      billingTier_ = 0;
      onChanged();
      return this;
    }

    private long totalSlotMs_ ;
    /**
     * <pre>
     * The total number of slot-ms consumed by the query job.
     * </pre>
     *
     * <code>int64 total_slot_ms = 8;</code>
     * @return The totalSlotMs.
     */
    @java.lang.Override
    public long getTotalSlotMs() {
      return totalSlotMs_;
    }
    /**
     * <pre>
     * The total number of slot-ms consumed by the query job.
     * </pre>
     *
     * <code>int64 total_slot_ms = 8;</code>
     * @param value The totalSlotMs to set.
     * @return This builder for chaining.
     */
    public Builder setTotalSlotMs(long value) {
      
      totalSlotMs_ = value;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * The total number of slot-ms consumed by the query job.
     * </pre>
     *
     * <code>int64 total_slot_ms = 8;</code>
     * @return This builder for chaining.
     */
    public Builder clearTotalSlotMs() {
      
      totalSlotMs_ = 0L;
      onChanged();
      return this;
    }

    private java.util.List<com.google.cloud.bigquery.logging.v1.JobStatistics.ReservationResourceUsage> reservationUsage_ =
      java.util.Collections.emptyList();
    private void ensureReservationUsageIsMutable() {
      if (!((bitField0_ & 0x00000001) != 0)) {
        reservationUsage_ = new java.util.ArrayList<com.google.cloud.bigquery.logging.v1.JobStatistics.ReservationResourceUsage>(reservationUsage_);
        bitField0_ |= 0x00000001;
       }
    }

    private com.google.protobuf.RepeatedFieldBuilderV3<
        com.google.cloud.bigquery.logging.v1.JobStatistics.ReservationResourceUsage, com.google.cloud.bigquery.logging.v1.JobStatistics.ReservationResourceUsage.Builder, com.google.cloud.bigquery.logging.v1.JobStatistics.ReservationResourceUsageOrBuilder> reservationUsageBuilder_;

    /**
     * <pre>
     * Reservation usage.
     * </pre>
     *
     * <code>repeated .google.cloud.bigquery.logging.v1.JobStatistics.ReservationResourceUsage reservation_usage = 14;</code>
     */
    public java.util.List<com.google.cloud.bigquery.logging.v1.JobStatistics.ReservationResourceUsage> getReservationUsageList() {
      if (reservationUsageBuilder_ == null) {
        return java.util.Collections.unmodifiableList(reservationUsage_);
      } else {
        return reservationUsageBuilder_.getMessageList();
      }
    }
    /**
     * <pre>
     * Reservation usage.
     * </pre>
     *
     * <code>repeated .google.cloud.bigquery.logging.v1.JobStatistics.ReservationResourceUsage reservation_usage = 14;</code>
     */
    public int getReservationUsageCount() {
      if (reservationUsageBuilder_ == null) {
        return reservationUsage_.size();
      } else {
        return reservationUsageBuilder_.getCount();
      }
    }
    /**
     * <pre>
     * Reservation usage.
     * </pre>
     *
     * <code>repeated .google.cloud.bigquery.logging.v1.JobStatistics.ReservationResourceUsage reservation_usage = 14;</code>
     */
    public com.google.cloud.bigquery.logging.v1.JobStatistics.ReservationResourceUsage getReservationUsage(int index) {
      if (reservationUsageBuilder_ == null) {
        return reservationUsage_.get(index);
      } else {
        return reservationUsageBuilder_.getMessage(index);
      }
    }
    /**
     * <pre>
     * Reservation usage.
     * </pre>
     *
     * <code>repeated .google.cloud.bigquery.logging.v1.JobStatistics.ReservationResourceUsage reservation_usage = 14;</code>
     */
    public Builder setReservationUsage(
        int index, com.google.cloud.bigquery.logging.v1.JobStatistics.ReservationResourceUsage value) {
      if (reservationUsageBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureReservationUsageIsMutable();
        reservationUsage_.set(index, value);
        onChanged();
      } else {
        reservationUsageBuilder_.setMessage(index, value);
      }
      return this;
    }
    /**
     * <pre>
     * Reservation usage.
     * </pre>
     *
     * <code>repeated .google.cloud.bigquery.logging.v1.JobStatistics.ReservationResourceUsage reservation_usage = 14;</code>
     */
    public Builder setReservationUsage(
        int index, com.google.cloud.bigquery.logging.v1.JobStatistics.ReservationResourceUsage.Builder builderForValue) {
      if (reservationUsageBuilder_ == null) {
        ensureReservationUsageIsMutable();
        reservationUsage_.set(index, builderForValue.build());
        onChanged();
      } else {
        reservationUsageBuilder_.setMessage(index, builderForValue.build());
      }
      return this;
    }
    /**
     * <pre>
     * Reservation usage.
     * </pre>
     *
     * <code>repeated .google.cloud.bigquery.logging.v1.JobStatistics.ReservationResourceUsage reservation_usage = 14;</code>
     */
    public Builder addReservationUsage(com.google.cloud.bigquery.logging.v1.JobStatistics.ReservationResourceUsage value) {
      if (reservationUsageBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureReservationUsageIsMutable();
        reservationUsage_.add(value);
        onChanged();
      } else {
        reservationUsageBuilder_.addMessage(value);
      }
      return this;
    }
    /**
     * <pre>
     * Reservation usage.
     * </pre>
     *
     * <code>repeated .google.cloud.bigquery.logging.v1.JobStatistics.ReservationResourceUsage reservation_usage = 14;</code>
     */
    public Builder addReservationUsage(
        int index, com.google.cloud.bigquery.logging.v1.JobStatistics.ReservationResourceUsage value) {
      if (reservationUsageBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureReservationUsageIsMutable();
        reservationUsage_.add(index, value);
        onChanged();
      } else {
        reservationUsageBuilder_.addMessage(index, value);
      }
      return this;
    }
    /**
     * <pre>
     * Reservation usage.
     * </pre>
     *
     * <code>repeated .google.cloud.bigquery.logging.v1.JobStatistics.ReservationResourceUsage reservation_usage = 14;</code>
     */
    public Builder addReservationUsage(
        com.google.cloud.bigquery.logging.v1.JobStatistics.ReservationResourceUsage.Builder builderForValue) {
      if (reservationUsageBuilder_ == null) {
        ensureReservationUsageIsMutable();
        reservationUsage_.add(builderForValue.build());
        onChanged();
      } else {
        reservationUsageBuilder_.addMessage(builderForValue.build());
      }
      return this;
    }
    /**
     * <pre>
     * Reservation usage.
     * </pre>
     *
     * <code>repeated .google.cloud.bigquery.logging.v1.JobStatistics.ReservationResourceUsage reservation_usage = 14;</code>
     */
    public Builder addReservationUsage(
        int index, com.google.cloud.bigquery.logging.v1.JobStatistics.ReservationResourceUsage.Builder builderForValue) {
      if (reservationUsageBuilder_ == null) {
        ensureReservationUsageIsMutable();
        reservationUsage_.add(index, builderForValue.build());
        onChanged();
      } else {
        reservationUsageBuilder_.addMessage(index, builderForValue.build());
      }
      return this;
    }
    /**
     * <pre>
     * Reservation usage.
     * </pre>
     *
     * <code>repeated .google.cloud.bigquery.logging.v1.JobStatistics.ReservationResourceUsage reservation_usage = 14;</code>
     */
    public Builder addAllReservationUsage(
        java.lang.Iterable<? extends com.google.cloud.bigquery.logging.v1.JobStatistics.ReservationResourceUsage> values) {
      if (reservationUsageBuilder_ == null) {
        ensureReservationUsageIsMutable();
        com.google.protobuf.AbstractMessageLite.Builder.addAll(
            values, reservationUsage_);
        onChanged();
      } else {
        reservationUsageBuilder_.addAllMessages(values);
      }
      return this;
    }
    /**
     * <pre>
     * Reservation usage.
     * </pre>
     *
     * <code>repeated .google.cloud.bigquery.logging.v1.JobStatistics.ReservationResourceUsage reservation_usage = 14;</code>
     */
    public Builder clearReservationUsage() {
      if (reservationUsageBuilder_ == null) {
        reservationUsage_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000001);
        onChanged();
      } else {
        reservationUsageBuilder_.clear();
      }
      return this;
    }
    /**
     * <pre>
     * Reservation usage.
     * </pre>
     *
     * <code>repeated .google.cloud.bigquery.logging.v1.JobStatistics.ReservationResourceUsage reservation_usage = 14;</code>
     */
    public Builder removeReservationUsage(int index) {
      if (reservationUsageBuilder_ == null) {
        ensureReservationUsageIsMutable();
        reservationUsage_.remove(index);
        onChanged();
      } else {
        reservationUsageBuilder_.remove(index);
      }
      return this;
    }
    /**
     * <pre>
     * Reservation usage.
     * </pre>
     *
     * <code>repeated .google.cloud.bigquery.logging.v1.JobStatistics.ReservationResourceUsage reservation_usage = 14;</code>
     */
    public com.google.cloud.bigquery.logging.v1.JobStatistics.ReservationResourceUsage.Builder getReservationUsageBuilder(
        int index) {
      return getReservationUsageFieldBuilder().getBuilder(index);
    }
    /**
     * <pre>
     * Reservation usage.
     * </pre>
     *
     * <code>repeated .google.cloud.bigquery.logging.v1.JobStatistics.ReservationResourceUsage reservation_usage = 14;</code>
     */
    public com.google.cloud.bigquery.logging.v1.JobStatistics.ReservationResourceUsageOrBuilder getReservationUsageOrBuilder(
        int index) {
      if (reservationUsageBuilder_ == null) {
        return reservationUsage_.get(index);  } else {
        return reservationUsageBuilder_.getMessageOrBuilder(index);
      }
    }
    /**
     * <pre>
     * Reservation usage.
     * </pre>
     *
     * <code>repeated .google.cloud.bigquery.logging.v1.JobStatistics.ReservationResourceUsage reservation_usage = 14;</code>
     */
    public java.util.List<? extends com.google.cloud.bigquery.logging.v1.JobStatistics.ReservationResourceUsageOrBuilder> 
         getReservationUsageOrBuilderList() {
      if (reservationUsageBuilder_ != null) {
        return reservationUsageBuilder_.getMessageOrBuilderList();
      } else {
        return java.util.Collections.unmodifiableList(reservationUsage_);
      }
    }
    /**
     * <pre>
     * Reservation usage.
     * </pre>
     *
     * <code>repeated .google.cloud.bigquery.logging.v1.JobStatistics.ReservationResourceUsage reservation_usage = 14;</code>
     */
    public com.google.cloud.bigquery.logging.v1.JobStatistics.ReservationResourceUsage.Builder addReservationUsageBuilder() {
      return getReservationUsageFieldBuilder().addBuilder(
          com.google.cloud.bigquery.logging.v1.JobStatistics.ReservationResourceUsage.getDefaultInstance());
    }
    /**
     * <pre>
     * Reservation usage.
     * </pre>
     *
     * <code>repeated .google.cloud.bigquery.logging.v1.JobStatistics.ReservationResourceUsage reservation_usage = 14;</code>
     */
    public com.google.cloud.bigquery.logging.v1.JobStatistics.ReservationResourceUsage.Builder addReservationUsageBuilder(
        int index) {
      return getReservationUsageFieldBuilder().addBuilder(
          index, com.google.cloud.bigquery.logging.v1.JobStatistics.ReservationResourceUsage.getDefaultInstance());
    }
    /**
     * <pre>
     * Reservation usage.
     * </pre>
     *
     * <code>repeated .google.cloud.bigquery.logging.v1.JobStatistics.ReservationResourceUsage reservation_usage = 14;</code>
     */
    public java.util.List<com.google.cloud.bigquery.logging.v1.JobStatistics.ReservationResourceUsage.Builder> 
         getReservationUsageBuilderList() {
      return getReservationUsageFieldBuilder().getBuilderList();
    }
    private com.google.protobuf.RepeatedFieldBuilderV3<
        com.google.cloud.bigquery.logging.v1.JobStatistics.ReservationResourceUsage, com.google.cloud.bigquery.logging.v1.JobStatistics.ReservationResourceUsage.Builder, com.google.cloud.bigquery.logging.v1.JobStatistics.ReservationResourceUsageOrBuilder> 
        getReservationUsageFieldBuilder() {
      if (reservationUsageBuilder_ == null) {
        reservationUsageBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<
            com.google.cloud.bigquery.logging.v1.JobStatistics.ReservationResourceUsage, com.google.cloud.bigquery.logging.v1.JobStatistics.ReservationResourceUsage.Builder, com.google.cloud.bigquery.logging.v1.JobStatistics.ReservationResourceUsageOrBuilder>(
                reservationUsage_,
                ((bitField0_ & 0x00000001) != 0),
                getParentForChildren(),
                isClean());
        reservationUsage_ = null;
      }
      return reservationUsageBuilder_;
    }

    private java.util.List<com.google.cloud.bigquery.logging.v1.TableName> referencedTables_ =
      java.util.Collections.emptyList();
    private void ensureReferencedTablesIsMutable() {
      if (!((bitField0_ & 0x00000002) != 0)) {
        referencedTables_ = new java.util.ArrayList<com.google.cloud.bigquery.logging.v1.TableName>(referencedTables_);
        bitField0_ |= 0x00000002;
       }
    }

    private com.google.protobuf.RepeatedFieldBuilderV3<
        com.google.cloud.bigquery.logging.v1.TableName, com.google.cloud.bigquery.logging.v1.TableName.Builder, com.google.cloud.bigquery.logging.v1.TableNameOrBuilder> referencedTablesBuilder_;

    /**
     * <pre>
     * The first N tables accessed by the query job. Older queries that
     * reference a large number of tables may not have all of their
     * tables in this list. You can use the total_tables_processed count to
     * know how many total tables were read in the query. For new queries,
     * there is currently no limit.
     * </pre>
     *
     * <code>repeated .google.cloud.bigquery.logging.v1.TableName referenced_tables = 9;</code>
     */
    public java.util.List<com.google.cloud.bigquery.logging.v1.TableName> getReferencedTablesList() {
      if (referencedTablesBuilder_ == null) {
        return java.util.Collections.unmodifiableList(referencedTables_);
      } else {
        return referencedTablesBuilder_.getMessageList();
      }
    }
    /**
     * <pre>
     * The first N tables accessed by the query job. Older queries that
     * reference a large number of tables may not have all of their
     * tables in this list. You can use the total_tables_processed count to
     * know how many total tables were read in the query. For new queries,
     * there is currently no limit.
     * </pre>
     *
     * <code>repeated .google.cloud.bigquery.logging.v1.TableName referenced_tables = 9;</code>
     */
    public int getReferencedTablesCount() {
      if (referencedTablesBuilder_ == null) {
        return referencedTables_.size();
      } else {
        return referencedTablesBuilder_.getCount();
      }
    }
    /**
     * <pre>
     * The first N tables accessed by the query job. Older queries that
     * reference a large number of tables may not have all of their
     * tables in this list. You can use the total_tables_processed count to
     * know how many total tables were read in the query. For new queries,
     * there is currently no limit.
     * </pre>
     *
     * <code>repeated .google.cloud.bigquery.logging.v1.TableName referenced_tables = 9;</code>
     */
    public com.google.cloud.bigquery.logging.v1.TableName getReferencedTables(int index) {
      if (referencedTablesBuilder_ == null) {
        return referencedTables_.get(index);
      } else {
        return referencedTablesBuilder_.getMessage(index);
      }
    }
    /**
     * <pre>
     * The first N tables accessed by the query job. Older queries that
     * reference a large number of tables may not have all of their
     * tables in this list. You can use the total_tables_processed count to
     * know how many total tables were read in the query. For new queries,
     * there is currently no limit.
     * </pre>
     *
     * <code>repeated .google.cloud.bigquery.logging.v1.TableName referenced_tables = 9;</code>
     */
    public Builder setReferencedTables(
        int index, com.google.cloud.bigquery.logging.v1.TableName value) {
      if (referencedTablesBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureReferencedTablesIsMutable();
        referencedTables_.set(index, value);
        onChanged();
      } else {
        referencedTablesBuilder_.setMessage(index, value);
      }
      return this;
    }
    /**
     * <pre>
     * The first N tables accessed by the query job. Older queries that
     * reference a large number of tables may not have all of their
     * tables in this list. You can use the total_tables_processed count to
     * know how many total tables were read in the query. For new queries,
     * there is currently no limit.
     * </pre>
     *
     * <code>repeated .google.cloud.bigquery.logging.v1.TableName referenced_tables = 9;</code>
     */
    public Builder setReferencedTables(
        int index, com.google.cloud.bigquery.logging.v1.TableName.Builder builderForValue) {
      if (referencedTablesBuilder_ == null) {
        ensureReferencedTablesIsMutable();
        referencedTables_.set(index, builderForValue.build());
        onChanged();
      } else {
        referencedTablesBuilder_.setMessage(index, builderForValue.build());
      }
      return this;
    }
    /**
     * <pre>
     * The first N tables accessed by the query job. Older queries that
     * reference a large number of tables may not have all of their
     * tables in this list. You can use the total_tables_processed count to
     * know how many total tables were read in the query. For new queries,
     * there is currently no limit.
     * </pre>
     *
     * <code>repeated .google.cloud.bigquery.logging.v1.TableName referenced_tables = 9;</code>
     */
    public Builder addReferencedTables(com.google.cloud.bigquery.logging.v1.TableName value) {
      if (referencedTablesBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureReferencedTablesIsMutable();
        referencedTables_.add(value);
        onChanged();
      } else {
        referencedTablesBuilder_.addMessage(value);
      }
      return this;
    }
    /**
     * <pre>
     * The first N tables accessed by the query job. Older queries that
     * reference a large number of tables may not have all of their
     * tables in this list. You can use the total_tables_processed count to
     * know how many total tables were read in the query. For new queries,
     * there is currently no limit.
     * </pre>
     *
     * <code>repeated .google.cloud.bigquery.logging.v1.TableName referenced_tables = 9;</code>
     */
    public Builder addReferencedTables(
        int index, com.google.cloud.bigquery.logging.v1.TableName value) {
      if (referencedTablesBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureReferencedTablesIsMutable();
        referencedTables_.add(index, value);
        onChanged();
      } else {
        referencedTablesBuilder_.addMessage(index, value);
      }
      return this;
    }
    /**
     * <pre>
     * The first N tables accessed by the query job. Older queries that
     * reference a large number of tables may not have all of their
     * tables in this list. You can use the total_tables_processed count to
     * know how many total tables were read in the query. For new queries,
     * there is currently no limit.
     * </pre>
     *
     * <code>repeated .google.cloud.bigquery.logging.v1.TableName referenced_tables = 9;</code>
     */
    public Builder addReferencedTables(
        com.google.cloud.bigquery.logging.v1.TableName.Builder builderForValue) {
      if (referencedTablesBuilder_ == null) {
        ensureReferencedTablesIsMutable();
        referencedTables_.add(builderForValue.build());
        onChanged();
      } else {
        referencedTablesBuilder_.addMessage(builderForValue.build());
      }
      return this;
    }
    /**
     * <pre>
     * The first N tables accessed by the query job. Older queries that
     * reference a large number of tables may not have all of their
     * tables in this list. You can use the total_tables_processed count to
     * know how many total tables were read in the query. For new queries,
     * there is currently no limit.
     * </pre>
     *
     * <code>repeated .google.cloud.bigquery.logging.v1.TableName referenced_tables = 9;</code>
     */
    public Builder addReferencedTables(
        int index, com.google.cloud.bigquery.logging.v1.TableName.Builder builderForValue) {
      if (referencedTablesBuilder_ == null) {
        ensureReferencedTablesIsMutable();
        referencedTables_.add(index, builderForValue.build());
        onChanged();
      } else {
        referencedTablesBuilder_.addMessage(index, builderForValue.build());
      }
      return this;
    }
    /**
     * <pre>
     * The first N tables accessed by the query job. Older queries that
     * reference a large number of tables may not have all of their
     * tables in this list. You can use the total_tables_processed count to
     * know how many total tables were read in the query. For new queries,
     * there is currently no limit.
     * </pre>
     *
     * <code>repeated .google.cloud.bigquery.logging.v1.TableName referenced_tables = 9;</code>
     */
    public Builder addAllReferencedTables(
        java.lang.Iterable<? extends com.google.cloud.bigquery.logging.v1.TableName> values) {
      if (referencedTablesBuilder_ == null) {
        ensureReferencedTablesIsMutable();
        com.google.protobuf.AbstractMessageLite.Builder.addAll(
            values, referencedTables_);
        onChanged();
      } else {
        referencedTablesBuilder_.addAllMessages(values);
      }
      return this;
    }
    /**
     * <pre>
     * The first N tables accessed by the query job. Older queries that
     * reference a large number of tables may not have all of their
     * tables in this list. You can use the total_tables_processed count to
     * know how many total tables were read in the query. For new queries,
     * there is currently no limit.
     * </pre>
     *
     * <code>repeated .google.cloud.bigquery.logging.v1.TableName referenced_tables = 9;</code>
     */
    public Builder clearReferencedTables() {
      if (referencedTablesBuilder_ == null) {
        referencedTables_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000002);
        onChanged();
      } else {
        referencedTablesBuilder_.clear();
      }
      return this;
    }
    /**
     * <pre>
     * The first N tables accessed by the query job. Older queries that
     * reference a large number of tables may not have all of their
     * tables in this list. You can use the total_tables_processed count to
     * know how many total tables were read in the query. For new queries,
     * there is currently no limit.
     * </pre>
     *
     * <code>repeated .google.cloud.bigquery.logging.v1.TableName referenced_tables = 9;</code>
     */
    public Builder removeReferencedTables(int index) {
      if (referencedTablesBuilder_ == null) {
        ensureReferencedTablesIsMutable();
        referencedTables_.remove(index);
        onChanged();
      } else {
        referencedTablesBuilder_.remove(index);
      }
      return this;
    }
    /**
     * <pre>
     * The first N tables accessed by the query job. Older queries that
     * reference a large number of tables may not have all of their
     * tables in this list. You can use the total_tables_processed count to
     * know how many total tables were read in the query. For new queries,
     * there is currently no limit.
     * </pre>
     *
     * <code>repeated .google.cloud.bigquery.logging.v1.TableName referenced_tables = 9;</code>
     */
    public com.google.cloud.bigquery.logging.v1.TableName.Builder getReferencedTablesBuilder(
        int index) {
      return getReferencedTablesFieldBuilder().getBuilder(index);
    }
    /**
     * <pre>
     * The first N tables accessed by the query job. Older queries that
     * reference a large number of tables may not have all of their
     * tables in this list. You can use the total_tables_processed count to
     * know how many total tables were read in the query. For new queries,
     * there is currently no limit.
     * </pre>
     *
     * <code>repeated .google.cloud.bigquery.logging.v1.TableName referenced_tables = 9;</code>
     */
    public com.google.cloud.bigquery.logging.v1.TableNameOrBuilder getReferencedTablesOrBuilder(
        int index) {
      if (referencedTablesBuilder_ == null) {
        return referencedTables_.get(index);  } else {
        return referencedTablesBuilder_.getMessageOrBuilder(index);
      }
    }
    /**
     * <pre>
     * The first N tables accessed by the query job. Older queries that
     * reference a large number of tables may not have all of their
     * tables in this list. You can use the total_tables_processed count to
     * know how many total tables were read in the query. For new queries,
     * there is currently no limit.
     * </pre>
     *
     * <code>repeated .google.cloud.bigquery.logging.v1.TableName referenced_tables = 9;</code>
     */
    public java.util.List<? extends com.google.cloud.bigquery.logging.v1.TableNameOrBuilder> 
         getReferencedTablesOrBuilderList() {
      if (referencedTablesBuilder_ != null) {
        return referencedTablesBuilder_.getMessageOrBuilderList();
      } else {
        return java.util.Collections.unmodifiableList(referencedTables_);
      }
    }
    /**
     * <pre>
     * The first N tables accessed by the query job. Older queries that
     * reference a large number of tables may not have all of their
     * tables in this list. You can use the total_tables_processed count to
     * know how many total tables were read in the query. For new queries,
     * there is currently no limit.
     * </pre>
     *
     * <code>repeated .google.cloud.bigquery.logging.v1.TableName referenced_tables = 9;</code>
     */
    public com.google.cloud.bigquery.logging.v1.TableName.Builder addReferencedTablesBuilder() {
      return getReferencedTablesFieldBuilder().addBuilder(
          com.google.cloud.bigquery.logging.v1.TableName.getDefaultInstance());
    }
    /**
     * <pre>
     * The first N tables accessed by the query job. Older queries that
     * reference a large number of tables may not have all of their
     * tables in this list. You can use the total_tables_processed count to
     * know how many total tables were read in the query. For new queries,
     * there is currently no limit.
     * </pre>
     *
     * <code>repeated .google.cloud.bigquery.logging.v1.TableName referenced_tables = 9;</code>
     */
    public com.google.cloud.bigquery.logging.v1.TableName.Builder addReferencedTablesBuilder(
        int index) {
      return getReferencedTablesFieldBuilder().addBuilder(
          index, com.google.cloud.bigquery.logging.v1.TableName.getDefaultInstance());
    }
    /**
     * <pre>
     * The first N tables accessed by the query job. Older queries that
     * reference a large number of tables may not have all of their
     * tables in this list. You can use the total_tables_processed count to
     * know how many total tables were read in the query. For new queries,
     * there is currently no limit.
     * </pre>
     *
     * <code>repeated .google.cloud.bigquery.logging.v1.TableName referenced_tables = 9;</code>
     */
    public java.util.List<com.google.cloud.bigquery.logging.v1.TableName.Builder> 
         getReferencedTablesBuilderList() {
      return getReferencedTablesFieldBuilder().getBuilderList();
    }
    private com.google.protobuf.RepeatedFieldBuilderV3<
        com.google.cloud.bigquery.logging.v1.TableName, com.google.cloud.bigquery.logging.v1.TableName.Builder, com.google.cloud.bigquery.logging.v1.TableNameOrBuilder> 
        getReferencedTablesFieldBuilder() {
      if (referencedTablesBuilder_ == null) {
        referencedTablesBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<
            com.google.cloud.bigquery.logging.v1.TableName, com.google.cloud.bigquery.logging.v1.TableName.Builder, com.google.cloud.bigquery.logging.v1.TableNameOrBuilder>(
                referencedTables_,
                ((bitField0_ & 0x00000002) != 0),
                getParentForChildren(),
                isClean());
        referencedTables_ = null;
      }
      return referencedTablesBuilder_;
    }

    private int totalTablesProcessed_ ;
    /**
     * <pre>
     * Total number of unique tables referenced in the query.
     * </pre>
     *
     * <code>int32 total_tables_processed = 10;</code>
     * @return The totalTablesProcessed.
     */
    @java.lang.Override
    public int getTotalTablesProcessed() {
      return totalTablesProcessed_;
    }
    /**
     * <pre>
     * Total number of unique tables referenced in the query.
     * </pre>
     *
     * <code>int32 total_tables_processed = 10;</code>
     * @param value The totalTablesProcessed to set.
     * @return This builder for chaining.
     */
    public Builder setTotalTablesProcessed(int value) {
      
      totalTablesProcessed_ = value;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * Total number of unique tables referenced in the query.
     * </pre>
     *
     * <code>int32 total_tables_processed = 10;</code>
     * @return This builder for chaining.
     */
    public Builder clearTotalTablesProcessed() {
      
      totalTablesProcessed_ = 0;
      onChanged();
      return this;
    }

    private java.util.List<com.google.cloud.bigquery.logging.v1.TableName> referencedViews_ =
      java.util.Collections.emptyList();
    private void ensureReferencedViewsIsMutable() {
      if (!((bitField0_ & 0x00000004) != 0)) {
        referencedViews_ = new java.util.ArrayList<com.google.cloud.bigquery.logging.v1.TableName>(referencedViews_);
        bitField0_ |= 0x00000004;
       }
    }

    private com.google.protobuf.RepeatedFieldBuilderV3<
        com.google.cloud.bigquery.logging.v1.TableName, com.google.cloud.bigquery.logging.v1.TableName.Builder, com.google.cloud.bigquery.logging.v1.TableNameOrBuilder> referencedViewsBuilder_;

    /**
     * <pre>
     * The first N views accessed by the query job. Older queries that
     * reference a large number of views may not have all of their
     * views in this list. You can use the total_tables_processed count to
     * know how many total tables were read in the query. For new queries,
     * there is currently no limit.
     * </pre>
     *
     * <code>repeated .google.cloud.bigquery.logging.v1.TableName referenced_views = 11;</code>
     */
    public java.util.List<com.google.cloud.bigquery.logging.v1.TableName> getReferencedViewsList() {
      if (referencedViewsBuilder_ == null) {
        return java.util.Collections.unmodifiableList(referencedViews_);
      } else {
        return referencedViewsBuilder_.getMessageList();
      }
    }
    /**
     * <pre>
     * The first N views accessed by the query job. Older queries that
     * reference a large number of views may not have all of their
     * views in this list. You can use the total_tables_processed count to
     * know how many total tables were read in the query. For new queries,
     * there is currently no limit.
     * </pre>
     *
     * <code>repeated .google.cloud.bigquery.logging.v1.TableName referenced_views = 11;</code>
     */
    public int getReferencedViewsCount() {
      if (referencedViewsBuilder_ == null) {
        return referencedViews_.size();
      } else {
        return referencedViewsBuilder_.getCount();
      }
    }
    /**
     * <pre>
     * The first N views accessed by the query job. Older queries that
     * reference a large number of views may not have all of their
     * views in this list. You can use the total_tables_processed count to
     * know how many total tables were read in the query. For new queries,
     * there is currently no limit.
     * </pre>
     *
     * <code>repeated .google.cloud.bigquery.logging.v1.TableName referenced_views = 11;</code>
     */
    public com.google.cloud.bigquery.logging.v1.TableName getReferencedViews(int index) {
      if (referencedViewsBuilder_ == null) {
        return referencedViews_.get(index);
      } else {
        return referencedViewsBuilder_.getMessage(index);
      }
    }
    /**
     * <pre>
     * The first N views accessed by the query job. Older queries that
     * reference a large number of views may not have all of their
     * views in this list. You can use the total_tables_processed count to
     * know how many total tables were read in the query. For new queries,
     * there is currently no limit.
     * </pre>
     *
     * <code>repeated .google.cloud.bigquery.logging.v1.TableName referenced_views = 11;</code>
     */
    public Builder setReferencedViews(
        int index, com.google.cloud.bigquery.logging.v1.TableName value) {
      if (referencedViewsBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureReferencedViewsIsMutable();
        referencedViews_.set(index, value);
        onChanged();
      } else {
        referencedViewsBuilder_.setMessage(index, value);
      }
      return this;
    }
    /**
     * <pre>
     * The first N views accessed by the query job. Older queries that
     * reference a large number of views may not have all of their
     * views in this list. You can use the total_tables_processed count to
     * know how many total tables were read in the query. For new queries,
     * there is currently no limit.
     * </pre>
     *
     * <code>repeated .google.cloud.bigquery.logging.v1.TableName referenced_views = 11;</code>
     */
    public Builder setReferencedViews(
        int index, com.google.cloud.bigquery.logging.v1.TableName.Builder builderForValue) {
      if (referencedViewsBuilder_ == null) {
        ensureReferencedViewsIsMutable();
        referencedViews_.set(index, builderForValue.build());
        onChanged();
      } else {
        referencedViewsBuilder_.setMessage(index, builderForValue.build());
      }
      return this;
    }
    /**
     * <pre>
     * The first N views accessed by the query job. Older queries that
     * reference a large number of views may not have all of their
     * views in this list. You can use the total_tables_processed count to
     * know how many total tables were read in the query. For new queries,
     * there is currently no limit.
     * </pre>
     *
     * <code>repeated .google.cloud.bigquery.logging.v1.TableName referenced_views = 11;</code>
     */
    public Builder addReferencedViews(com.google.cloud.bigquery.logging.v1.TableName value) {
      if (referencedViewsBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureReferencedViewsIsMutable();
        referencedViews_.add(value);
        onChanged();
      } else {
        referencedViewsBuilder_.addMessage(value);
      }
      return this;
    }
    /**
     * <pre>
     * The first N views accessed by the query job. Older queries that
     * reference a large number of views may not have all of their
     * views in this list. You can use the total_tables_processed count to
     * know how many total tables were read in the query. For new queries,
     * there is currently no limit.
     * </pre>
     *
     * <code>repeated .google.cloud.bigquery.logging.v1.TableName referenced_views = 11;</code>
     */
    public Builder addReferencedViews(
        int index, com.google.cloud.bigquery.logging.v1.TableName value) {
      if (referencedViewsBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureReferencedViewsIsMutable();
        referencedViews_.add(index, value);
        onChanged();
      } else {
        referencedViewsBuilder_.addMessage(index, value);
      }
      return this;
    }
    /**
     * <pre>
     * The first N views accessed by the query job. Older queries that
     * reference a large number of views may not have all of their
     * views in this list. You can use the total_tables_processed count to
     * know how many total tables were read in the query. For new queries,
     * there is currently no limit.
     * </pre>
     *
     * <code>repeated .google.cloud.bigquery.logging.v1.TableName referenced_views = 11;</code>
     */
    public Builder addReferencedViews(
        com.google.cloud.bigquery.logging.v1.TableName.Builder builderForValue) {
      if (referencedViewsBuilder_ == null) {
        ensureReferencedViewsIsMutable();
        referencedViews_.add(builderForValue.build());
        onChanged();
      } else {
        referencedViewsBuilder_.addMessage(builderForValue.build());
      }
      return this;
    }
    /**
     * <pre>
     * The first N views accessed by the query job. Older queries that
     * reference a large number of views may not have all of their
     * views in this list. You can use the total_tables_processed count to
     * know how many total tables were read in the query. For new queries,
     * there is currently no limit.
     * </pre>
     *
     * <code>repeated .google.cloud.bigquery.logging.v1.TableName referenced_views = 11;</code>
     */
    public Builder addReferencedViews(
        int index, com.google.cloud.bigquery.logging.v1.TableName.Builder builderForValue) {
      if (referencedViewsBuilder_ == null) {
        ensureReferencedViewsIsMutable();
        referencedViews_.add(index, builderForValue.build());
        onChanged();
      } else {
        referencedViewsBuilder_.addMessage(index, builderForValue.build());
      }
      return this;
    }
    /**
     * <pre>
     * The first N views accessed by the query job. Older queries that
     * reference a large number of views may not have all of their
     * views in this list. You can use the total_tables_processed count to
     * know how many total tables were read in the query. For new queries,
     * there is currently no limit.
     * </pre>
     *
     * <code>repeated .google.cloud.bigquery.logging.v1.TableName referenced_views = 11;</code>
     */
    public Builder addAllReferencedViews(
        java.lang.Iterable<? extends com.google.cloud.bigquery.logging.v1.TableName> values) {
      if (referencedViewsBuilder_ == null) {
        ensureReferencedViewsIsMutable();
        com.google.protobuf.AbstractMessageLite.Builder.addAll(
            values, referencedViews_);
        onChanged();
      } else {
        referencedViewsBuilder_.addAllMessages(values);
      }
      return this;
    }
    /**
     * <pre>
     * The first N views accessed by the query job. Older queries that
     * reference a large number of views may not have all of their
     * views in this list. You can use the total_tables_processed count to
     * know how many total tables were read in the query. For new queries,
     * there is currently no limit.
     * </pre>
     *
     * <code>repeated .google.cloud.bigquery.logging.v1.TableName referenced_views = 11;</code>
     */
    public Builder clearReferencedViews() {
      if (referencedViewsBuilder_ == null) {
        referencedViews_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000004);
        onChanged();
      } else {
        referencedViewsBuilder_.clear();
      }
      return this;
    }
    /**
     * <pre>
     * The first N views accessed by the query job. Older queries that
     * reference a large number of views may not have all of their
     * views in this list. You can use the total_tables_processed count to
     * know how many total tables were read in the query. For new queries,
     * there is currently no limit.
     * </pre>
     *
     * <code>repeated .google.cloud.bigquery.logging.v1.TableName referenced_views = 11;</code>
     */
    public Builder removeReferencedViews(int index) {
      if (referencedViewsBuilder_ == null) {
        ensureReferencedViewsIsMutable();
        referencedViews_.remove(index);
        onChanged();
      } else {
        referencedViewsBuilder_.remove(index);
      }
      return this;
    }
    /**
     * <pre>
     * The first N views accessed by the query job. Older queries that
     * reference a large number of views may not have all of their
     * views in this list. You can use the total_tables_processed count to
     * know how many total tables were read in the query. For new queries,
     * there is currently no limit.
     * </pre>
     *
     * <code>repeated .google.cloud.bigquery.logging.v1.TableName referenced_views = 11;</code>
     */
    public com.google.cloud.bigquery.logging.v1.TableName.Builder getReferencedViewsBuilder(
        int index) {
      return getReferencedViewsFieldBuilder().getBuilder(index);
    }
    /**
     * <pre>
     * The first N views accessed by the query job. Older queries that
     * reference a large number of views may not have all of their
     * views in this list. You can use the total_tables_processed count to
     * know how many total tables were read in the query. For new queries,
     * there is currently no limit.
     * </pre>
     *
     * <code>repeated .google.cloud.bigquery.logging.v1.TableName referenced_views = 11;</code>
     */
    public com.google.cloud.bigquery.logging.v1.TableNameOrBuilder getReferencedViewsOrBuilder(
        int index) {
      if (referencedViewsBuilder_ == null) {
        return referencedViews_.get(index);  } else {
        return referencedViewsBuilder_.getMessageOrBuilder(index);
      }
    }
    /**
     * <pre>
     * The first N views accessed by the query job. Older queries that
     * reference a large number of views may not have all of their
     * views in this list. You can use the total_tables_processed count to
     * know how many total tables were read in the query. For new queries,
     * there is currently no limit.
     * </pre>
     *
     * <code>repeated .google.cloud.bigquery.logging.v1.TableName referenced_views = 11;</code>
     */
    public java.util.List<? extends com.google.cloud.bigquery.logging.v1.TableNameOrBuilder> 
         getReferencedViewsOrBuilderList() {
      if (referencedViewsBuilder_ != null) {
        return referencedViewsBuilder_.getMessageOrBuilderList();
      } else {
        return java.util.Collections.unmodifiableList(referencedViews_);
      }
    }
    /**
     * <pre>
     * The first N views accessed by the query job. Older queries that
     * reference a large number of views may not have all of their
     * views in this list. You can use the total_tables_processed count to
     * know how many total tables were read in the query. For new queries,
     * there is currently no limit.
     * </pre>
     *
     * <code>repeated .google.cloud.bigquery.logging.v1.TableName referenced_views = 11;</code>
     */
    public com.google.cloud.bigquery.logging.v1.TableName.Builder addReferencedViewsBuilder() {
      return getReferencedViewsFieldBuilder().addBuilder(
          com.google.cloud.bigquery.logging.v1.TableName.getDefaultInstance());
    }
    /**
     * <pre>
     * The first N views accessed by the query job. Older queries that
     * reference a large number of views may not have all of their
     * views in this list. You can use the total_tables_processed count to
     * know how many total tables were read in the query. For new queries,
     * there is currently no limit.
     * </pre>
     *
     * <code>repeated .google.cloud.bigquery.logging.v1.TableName referenced_views = 11;</code>
     */
    public com.google.cloud.bigquery.logging.v1.TableName.Builder addReferencedViewsBuilder(
        int index) {
      return getReferencedViewsFieldBuilder().addBuilder(
          index, com.google.cloud.bigquery.logging.v1.TableName.getDefaultInstance());
    }
    /**
     * <pre>
     * The first N views accessed by the query job. Older queries that
     * reference a large number of views may not have all of their
     * views in this list. You can use the total_tables_processed count to
     * know how many total tables were read in the query. For new queries,
     * there is currently no limit.
     * </pre>
     *
     * <code>repeated .google.cloud.bigquery.logging.v1.TableName referenced_views = 11;</code>
     */
    public java.util.List<com.google.cloud.bigquery.logging.v1.TableName.Builder> 
         getReferencedViewsBuilderList() {
      return getReferencedViewsFieldBuilder().getBuilderList();
    }
    private com.google.protobuf.RepeatedFieldBuilderV3<
        com.google.cloud.bigquery.logging.v1.TableName, com.google.cloud.bigquery.logging.v1.TableName.Builder, com.google.cloud.bigquery.logging.v1.TableNameOrBuilder> 
        getReferencedViewsFieldBuilder() {
      if (referencedViewsBuilder_ == null) {
        referencedViewsBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<
            com.google.cloud.bigquery.logging.v1.TableName, com.google.cloud.bigquery.logging.v1.TableName.Builder, com.google.cloud.bigquery.logging.v1.TableNameOrBuilder>(
                referencedViews_,
                ((bitField0_ & 0x00000004) != 0),
                getParentForChildren(),
                isClean());
        referencedViews_ = null;
      }
      return referencedViewsBuilder_;
    }

    private int totalViewsProcessed_ ;
    /**
     * <pre>
     * Total number of unique views referenced in the query.
     * </pre>
     *
     * <code>int32 total_views_processed = 12;</code>
     * @return The totalViewsProcessed.
     */
    @java.lang.Override
    public int getTotalViewsProcessed() {
      return totalViewsProcessed_;
    }
    /**
     * <pre>
     * Total number of unique views referenced in the query.
     * </pre>
     *
     * <code>int32 total_views_processed = 12;</code>
     * @param value The totalViewsProcessed to set.
     * @return This builder for chaining.
     */
    public Builder setTotalViewsProcessed(int value) {
      
      totalViewsProcessed_ = value;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * Total number of unique views referenced in the query.
     * </pre>
     *
     * <code>int32 total_views_processed = 12;</code>
     * @return This builder for chaining.
     */
    public Builder clearTotalViewsProcessed() {
      
      totalViewsProcessed_ = 0;
      onChanged();
      return this;
    }

    private long queryOutputRowCount_ ;
    /**
     * <pre>
     * Number of output rows produced by the query job.
     * </pre>
     *
     * <code>int64 query_output_row_count = 15;</code>
     * @return The queryOutputRowCount.
     */
    @java.lang.Override
    public long getQueryOutputRowCount() {
      return queryOutputRowCount_;
    }
    /**
     * <pre>
     * Number of output rows produced by the query job.
     * </pre>
     *
     * <code>int64 query_output_row_count = 15;</code>
     * @param value The queryOutputRowCount to set.
     * @return This builder for chaining.
     */
    public Builder setQueryOutputRowCount(long value) {
      
      queryOutputRowCount_ = value;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * Number of output rows produced by the query job.
     * </pre>
     *
     * <code>int64 query_output_row_count = 15;</code>
     * @return This builder for chaining.
     */
    public Builder clearQueryOutputRowCount() {
      
      queryOutputRowCount_ = 0L;
      onChanged();
      return this;
    }

    private long totalLoadOutputBytes_ ;
    /**
     * <pre>
     * Total bytes loaded for an import job.
     * </pre>
     *
     * <code>int64 total_load_output_bytes = 13;</code>
     * @return The totalLoadOutputBytes.
     */
    @java.lang.Override
    public long getTotalLoadOutputBytes() {
      return totalLoadOutputBytes_;
    }
    /**
     * <pre>
     * Total bytes loaded for an import job.
     * </pre>
     *
     * <code>int64 total_load_output_bytes = 13;</code>
     * @param value The totalLoadOutputBytes to set.
     * @return This builder for chaining.
     */
    public Builder setTotalLoadOutputBytes(long value) {
      
      totalLoadOutputBytes_ = value;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * Total bytes loaded for an import job.
     * </pre>
     *
     * <code>int64 total_load_output_bytes = 13;</code>
     * @return This builder for chaining.
     */
    public Builder clearTotalLoadOutputBytes() {
      
      totalLoadOutputBytes_ = 0L;
      onChanged();
      return this;
    }
    @java.lang.Override
    public final Builder setUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return super.setUnknownFields(unknownFields);
    }

    @java.lang.Override
    public final Builder mergeUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return super.mergeUnknownFields(unknownFields);
    }


    // @@protoc_insertion_point(builder_scope:google.cloud.bigquery.logging.v1.JobStatistics)
  }

  // @@protoc_insertion_point(class_scope:google.cloud.bigquery.logging.v1.JobStatistics)
  private static final com.google.cloud.bigquery.logging.v1.JobStatistics DEFAULT_INSTANCE;
  static {
    DEFAULT_INSTANCE = new com.google.cloud.bigquery.logging.v1.JobStatistics();
  }

  public static com.google.cloud.bigquery.logging.v1.JobStatistics getDefaultInstance() {
    return DEFAULT_INSTANCE;
  }

  private static final com.google.protobuf.Parser<JobStatistics>
      PARSER = new com.google.protobuf.AbstractParser<JobStatistics>() {
    @java.lang.Override
    public JobStatistics parsePartialFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return new JobStatistics(input, extensionRegistry);
    }
  };

  public static com.google.protobuf.Parser<JobStatistics> parser() {
    return PARSER;
  }

  @java.lang.Override
  public com.google.protobuf.Parser<JobStatistics> getParserForType() {
    return PARSER;
  }

  @java.lang.Override
  public com.google.cloud.bigquery.logging.v1.JobStatistics getDefaultInstanceForType() {
    return DEFAULT_INSTANCE;
  }

}

