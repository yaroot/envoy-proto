// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: google/cloud/bigquery/logging/v1/audit_data.proto

package com.google.cloud.bigquery.logging.v1;

public interface JobQueryRequestOrBuilder extends
    // @@protoc_insertion_point(interface_extends:google.cloud.bigquery.logging.v1.JobQueryRequest)
    com.google.protobuf.MessageOrBuilder {

  /**
   * <pre>
   * The query.
   * </pre>
   *
   * <code>string query = 1;</code>
   * @return The query.
   */
  java.lang.String getQuery();
  /**
   * <pre>
   * The query.
   * </pre>
   *
   * <code>string query = 1;</code>
   * @return The bytes for query.
   */
  com.google.protobuf.ByteString
      getQueryBytes();

  /**
   * <pre>
   * The maximum number of results.
   * </pre>
   *
   * <code>uint32 max_results = 2;</code>
   * @return The maxResults.
   */
  int getMaxResults();

  /**
   * <pre>
   * The default dataset for tables that do not have a dataset specified.
   * </pre>
   *
   * <code>.google.cloud.bigquery.logging.v1.DatasetName default_dataset = 3;</code>
   * @return Whether the defaultDataset field is set.
   */
  boolean hasDefaultDataset();
  /**
   * <pre>
   * The default dataset for tables that do not have a dataset specified.
   * </pre>
   *
   * <code>.google.cloud.bigquery.logging.v1.DatasetName default_dataset = 3;</code>
   * @return The defaultDataset.
   */
  com.google.cloud.bigquery.logging.v1.DatasetName getDefaultDataset();
  /**
   * <pre>
   * The default dataset for tables that do not have a dataset specified.
   * </pre>
   *
   * <code>.google.cloud.bigquery.logging.v1.DatasetName default_dataset = 3;</code>
   */
  com.google.cloud.bigquery.logging.v1.DatasetNameOrBuilder getDefaultDatasetOrBuilder();

  /**
   * <pre>
   * Project that the query should be charged to.
   * </pre>
   *
   * <code>string project_id = 4;</code>
   * @return The projectId.
   */
  java.lang.String getProjectId();
  /**
   * <pre>
   * Project that the query should be charged to.
   * </pre>
   *
   * <code>string project_id = 4;</code>
   * @return The bytes for projectId.
   */
  com.google.protobuf.ByteString
      getProjectIdBytes();

  /**
   * <pre>
   * If true, don't actually run the job. Just check that it would run.
   * </pre>
   *
   * <code>bool dry_run = 5;</code>
   * @return The dryRun.
   */
  boolean getDryRun();
}
