// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: google/cloud/bigquery/v2/standard_sql.proto

package com.google.cloud.bigquery.v2;

public final class StandardSqlProto {
  private StandardSqlProto() {}
  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistryLite registry) {
  }

  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistry registry) {
    registerAllExtensions(
        (com.google.protobuf.ExtensionRegistryLite) registry);
  }
  public interface StandardSqlDataTypeOrBuilder extends
      // @@protoc_insertion_point(interface_extends:google.cloud.bigquery.v2.StandardSqlDataType)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <pre>
     * Required. The top level type of this field.
     * Can be any standard SQL data type (e.g., "INT64", "DATE", "ARRAY").
     * </pre>
     *
     * <code>.google.cloud.bigquery.v2.StandardSqlDataType.TypeKind type_kind = 1 [(.google.api.field_behavior) = REQUIRED];</code>
     * @return The enum numeric value on the wire for typeKind.
     */
    int getTypeKindValue();
    /**
     * <pre>
     * Required. The top level type of this field.
     * Can be any standard SQL data type (e.g., "INT64", "DATE", "ARRAY").
     * </pre>
     *
     * <code>.google.cloud.bigquery.v2.StandardSqlDataType.TypeKind type_kind = 1 [(.google.api.field_behavior) = REQUIRED];</code>
     * @return The typeKind.
     */
    com.google.cloud.bigquery.v2.StandardSqlProto.StandardSqlDataType.TypeKind getTypeKind();

    /**
     * <pre>
     * The type of the array's elements, if type_kind = "ARRAY".
     * </pre>
     *
     * <code>.google.cloud.bigquery.v2.StandardSqlDataType array_element_type = 2;</code>
     * @return Whether the arrayElementType field is set.
     */
    boolean hasArrayElementType();
    /**
     * <pre>
     * The type of the array's elements, if type_kind = "ARRAY".
     * </pre>
     *
     * <code>.google.cloud.bigquery.v2.StandardSqlDataType array_element_type = 2;</code>
     * @return The arrayElementType.
     */
    com.google.cloud.bigquery.v2.StandardSqlProto.StandardSqlDataType getArrayElementType();
    /**
     * <pre>
     * The type of the array's elements, if type_kind = "ARRAY".
     * </pre>
     *
     * <code>.google.cloud.bigquery.v2.StandardSqlDataType array_element_type = 2;</code>
     */
    com.google.cloud.bigquery.v2.StandardSqlProto.StandardSqlDataTypeOrBuilder getArrayElementTypeOrBuilder();

    /**
     * <pre>
     * The fields of this struct, in order, if type_kind = "STRUCT".
     * </pre>
     *
     * <code>.google.cloud.bigquery.v2.StandardSqlStructType struct_type = 3;</code>
     * @return Whether the structType field is set.
     */
    boolean hasStructType();
    /**
     * <pre>
     * The fields of this struct, in order, if type_kind = "STRUCT".
     * </pre>
     *
     * <code>.google.cloud.bigquery.v2.StandardSqlStructType struct_type = 3;</code>
     * @return The structType.
     */
    com.google.cloud.bigquery.v2.StandardSqlProto.StandardSqlStructType getStructType();
    /**
     * <pre>
     * The fields of this struct, in order, if type_kind = "STRUCT".
     * </pre>
     *
     * <code>.google.cloud.bigquery.v2.StandardSqlStructType struct_type = 3;</code>
     */
    com.google.cloud.bigquery.v2.StandardSqlProto.StandardSqlStructTypeOrBuilder getStructTypeOrBuilder();

    public com.google.cloud.bigquery.v2.StandardSqlProto.StandardSqlDataType.SubTypeCase getSubTypeCase();
  }
  /**
   * <pre>
   * The type of a variable, e.g., a function argument.
   * Examples:
   * INT64: {type_kind="INT64"}
   * ARRAY&lt;STRING&gt;: {type_kind="ARRAY", array_element_type="STRING"}
   * STRUCT&lt;x STRING, y ARRAY&lt;DATE&gt;&gt;:
   *   {type_kind="STRUCT",
   *    struct_type={fields=[
   *      {name="x", type={type_kind="STRING"}},
   *      {name="y", type={type_kind="ARRAY", array_element_type="DATE"}}
   *    ]}}
   * </pre>
   *
   * Protobuf type {@code google.cloud.bigquery.v2.StandardSqlDataType}
   */
  public static final class StandardSqlDataType extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:google.cloud.bigquery.v2.StandardSqlDataType)
      StandardSqlDataTypeOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use StandardSqlDataType.newBuilder() to construct.
    private StandardSqlDataType(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private StandardSqlDataType() {
      typeKind_ = 0;
    }

    @java.lang.Override
    @SuppressWarnings({"unused"})
    protected java.lang.Object newInstance(
        UnusedPrivateParameter unused) {
      return new StandardSqlDataType();
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.google.cloud.bigquery.v2.StandardSqlProto.internal_static_google_cloud_bigquery_v2_StandardSqlDataType_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.google.cloud.bigquery.v2.StandardSqlProto.internal_static_google_cloud_bigquery_v2_StandardSqlDataType_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.google.cloud.bigquery.v2.StandardSqlProto.StandardSqlDataType.class, com.google.cloud.bigquery.v2.StandardSqlProto.StandardSqlDataType.Builder.class);
    }

    /**
     * Protobuf enum {@code google.cloud.bigquery.v2.StandardSqlDataType.TypeKind}
     */
    public enum TypeKind
        implements com.google.protobuf.ProtocolMessageEnum {
      /**
       * <pre>
       * Invalid type.
       * </pre>
       *
       * <code>TYPE_KIND_UNSPECIFIED = 0;</code>
       */
      TYPE_KIND_UNSPECIFIED(0),
      /**
       * <pre>
       * Encoded as a string in decimal format.
       * </pre>
       *
       * <code>INT64 = 2;</code>
       */
      INT64(2),
      /**
       * <pre>
       * Encoded as a boolean "false" or "true".
       * </pre>
       *
       * <code>BOOL = 5;</code>
       */
      BOOL(5),
      /**
       * <pre>
       * Encoded as a number, or string "NaN", "Infinity" or "-Infinity".
       * </pre>
       *
       * <code>FLOAT64 = 7;</code>
       */
      FLOAT64(7),
      /**
       * <pre>
       * Encoded as a string value.
       * </pre>
       *
       * <code>STRING = 8;</code>
       */
      STRING(8),
      /**
       * <pre>
       * Encoded as a base64 string per RFC 4648, section 4.
       * </pre>
       *
       * <code>BYTES = 9;</code>
       */
      BYTES(9),
      /**
       * <pre>
       * Encoded as an RFC 3339 timestamp with mandatory "Z" time zone string:
       * 1985-04-12T23:20:50.52Z
       * </pre>
       *
       * <code>TIMESTAMP = 19;</code>
       */
      TIMESTAMP(19),
      /**
       * <pre>
       * Encoded as RFC 3339 full-date format string: 1985-04-12
       * </pre>
       *
       * <code>DATE = 10;</code>
       */
      DATE(10),
      /**
       * <pre>
       * Encoded as RFC 3339 partial-time format string: 23:20:50.52
       * </pre>
       *
       * <code>TIME = 20;</code>
       */
      TIME(20),
      /**
       * <pre>
       * Encoded as RFC 3339 full-date "T" partial-time: 1985-04-12T23:20:50.52
       * </pre>
       *
       * <code>DATETIME = 21;</code>
       */
      DATETIME(21),
      /**
       * <pre>
       * Encoded as fully qualified 3 part: 0-5 15 2:30:45.6
       * </pre>
       *
       * <code>INTERVAL = 26;</code>
       */
      INTERVAL(26),
      /**
       * <pre>
       * Encoded as WKT
       * </pre>
       *
       * <code>GEOGRAPHY = 22;</code>
       */
      GEOGRAPHY(22),
      /**
       * <pre>
       * Encoded as a decimal string.
       * </pre>
       *
       * <code>NUMERIC = 23;</code>
       */
      NUMERIC(23),
      /**
       * <pre>
       * Encoded as a decimal string.
       * </pre>
       *
       * <code>BIGNUMERIC = 24;</code>
       */
      BIGNUMERIC(24),
      /**
       * <pre>
       * Encoded as a string.
       * </pre>
       *
       * <code>JSON = 25;</code>
       */
      JSON(25),
      /**
       * <pre>
       * Encoded as a list with types matching Type.array_type.
       * </pre>
       *
       * <code>ARRAY = 16;</code>
       */
      ARRAY(16),
      /**
       * <pre>
       * Encoded as a list with fields of type Type.struct_type[i]. List is used
       * because a JSON object cannot have duplicate field names.
       * </pre>
       *
       * <code>STRUCT = 17;</code>
       */
      STRUCT(17),
      UNRECOGNIZED(-1),
      ;

      /**
       * <pre>
       * Invalid type.
       * </pre>
       *
       * <code>TYPE_KIND_UNSPECIFIED = 0;</code>
       */
      public static final int TYPE_KIND_UNSPECIFIED_VALUE = 0;
      /**
       * <pre>
       * Encoded as a string in decimal format.
       * </pre>
       *
       * <code>INT64 = 2;</code>
       */
      public static final int INT64_VALUE = 2;
      /**
       * <pre>
       * Encoded as a boolean "false" or "true".
       * </pre>
       *
       * <code>BOOL = 5;</code>
       */
      public static final int BOOL_VALUE = 5;
      /**
       * <pre>
       * Encoded as a number, or string "NaN", "Infinity" or "-Infinity".
       * </pre>
       *
       * <code>FLOAT64 = 7;</code>
       */
      public static final int FLOAT64_VALUE = 7;
      /**
       * <pre>
       * Encoded as a string value.
       * </pre>
       *
       * <code>STRING = 8;</code>
       */
      public static final int STRING_VALUE = 8;
      /**
       * <pre>
       * Encoded as a base64 string per RFC 4648, section 4.
       * </pre>
       *
       * <code>BYTES = 9;</code>
       */
      public static final int BYTES_VALUE = 9;
      /**
       * <pre>
       * Encoded as an RFC 3339 timestamp with mandatory "Z" time zone string:
       * 1985-04-12T23:20:50.52Z
       * </pre>
       *
       * <code>TIMESTAMP = 19;</code>
       */
      public static final int TIMESTAMP_VALUE = 19;
      /**
       * <pre>
       * Encoded as RFC 3339 full-date format string: 1985-04-12
       * </pre>
       *
       * <code>DATE = 10;</code>
       */
      public static final int DATE_VALUE = 10;
      /**
       * <pre>
       * Encoded as RFC 3339 partial-time format string: 23:20:50.52
       * </pre>
       *
       * <code>TIME = 20;</code>
       */
      public static final int TIME_VALUE = 20;
      /**
       * <pre>
       * Encoded as RFC 3339 full-date "T" partial-time: 1985-04-12T23:20:50.52
       * </pre>
       *
       * <code>DATETIME = 21;</code>
       */
      public static final int DATETIME_VALUE = 21;
      /**
       * <pre>
       * Encoded as fully qualified 3 part: 0-5 15 2:30:45.6
       * </pre>
       *
       * <code>INTERVAL = 26;</code>
       */
      public static final int INTERVAL_VALUE = 26;
      /**
       * <pre>
       * Encoded as WKT
       * </pre>
       *
       * <code>GEOGRAPHY = 22;</code>
       */
      public static final int GEOGRAPHY_VALUE = 22;
      /**
       * <pre>
       * Encoded as a decimal string.
       * </pre>
       *
       * <code>NUMERIC = 23;</code>
       */
      public static final int NUMERIC_VALUE = 23;
      /**
       * <pre>
       * Encoded as a decimal string.
       * </pre>
       *
       * <code>BIGNUMERIC = 24;</code>
       */
      public static final int BIGNUMERIC_VALUE = 24;
      /**
       * <pre>
       * Encoded as a string.
       * </pre>
       *
       * <code>JSON = 25;</code>
       */
      public static final int JSON_VALUE = 25;
      /**
       * <pre>
       * Encoded as a list with types matching Type.array_type.
       * </pre>
       *
       * <code>ARRAY = 16;</code>
       */
      public static final int ARRAY_VALUE = 16;
      /**
       * <pre>
       * Encoded as a list with fields of type Type.struct_type[i]. List is used
       * because a JSON object cannot have duplicate field names.
       * </pre>
       *
       * <code>STRUCT = 17;</code>
       */
      public static final int STRUCT_VALUE = 17;


      public final int getNumber() {
        if (this == UNRECOGNIZED) {
          throw new java.lang.IllegalArgumentException(
              "Can't get the number of an unknown enum value.");
        }
        return value;
      }

      /**
       * @param value The numeric wire value of the corresponding enum entry.
       * @return The enum associated with the given numeric wire value.
       * @deprecated Use {@link #forNumber(int)} instead.
       */
      @java.lang.Deprecated
      public static TypeKind valueOf(int value) {
        return forNumber(value);
      }

      /**
       * @param value The numeric wire value of the corresponding enum entry.
       * @return The enum associated with the given numeric wire value.
       */
      public static TypeKind forNumber(int value) {
        switch (value) {
          case 0: return TYPE_KIND_UNSPECIFIED;
          case 2: return INT64;
          case 5: return BOOL;
          case 7: return FLOAT64;
          case 8: return STRING;
          case 9: return BYTES;
          case 19: return TIMESTAMP;
          case 10: return DATE;
          case 20: return TIME;
          case 21: return DATETIME;
          case 26: return INTERVAL;
          case 22: return GEOGRAPHY;
          case 23: return NUMERIC;
          case 24: return BIGNUMERIC;
          case 25: return JSON;
          case 16: return ARRAY;
          case 17: return STRUCT;
          default: return null;
        }
      }

      public static com.google.protobuf.Internal.EnumLiteMap<TypeKind>
          internalGetValueMap() {
        return internalValueMap;
      }
      private static final com.google.protobuf.Internal.EnumLiteMap<
          TypeKind> internalValueMap =
            new com.google.protobuf.Internal.EnumLiteMap<TypeKind>() {
              public TypeKind findValueByNumber(int number) {
                return TypeKind.forNumber(number);
              }
            };

      public final com.google.protobuf.Descriptors.EnumValueDescriptor
          getValueDescriptor() {
        if (this == UNRECOGNIZED) {
          throw new java.lang.IllegalStateException(
              "Can't get the descriptor of an unrecognized enum value.");
        }
        return getDescriptor().getValues().get(ordinal());
      }
      public final com.google.protobuf.Descriptors.EnumDescriptor
          getDescriptorForType() {
        return getDescriptor();
      }
      public static final com.google.protobuf.Descriptors.EnumDescriptor
          getDescriptor() {
        return com.google.cloud.bigquery.v2.StandardSqlProto.StandardSqlDataType.getDescriptor().getEnumTypes().get(0);
      }

      private static final TypeKind[] VALUES = values();

      public static TypeKind valueOf(
          com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
        if (desc.getType() != getDescriptor()) {
          throw new java.lang.IllegalArgumentException(
            "EnumValueDescriptor is not for this type.");
        }
        if (desc.getIndex() == -1) {
          return UNRECOGNIZED;
        }
        return VALUES[desc.getIndex()];
      }

      private final int value;

      private TypeKind(int value) {
        this.value = value;
      }

      // @@protoc_insertion_point(enum_scope:google.cloud.bigquery.v2.StandardSqlDataType.TypeKind)
    }

    private int subTypeCase_ = 0;
    private java.lang.Object subType_;
    public enum SubTypeCase
        implements com.google.protobuf.Internal.EnumLite,
            com.google.protobuf.AbstractMessage.InternalOneOfEnum {
      ARRAY_ELEMENT_TYPE(2),
      STRUCT_TYPE(3),
      SUBTYPE_NOT_SET(0);
      private final int value;
      private SubTypeCase(int value) {
        this.value = value;
      }
      /**
       * @param value The number of the enum to look for.
       * @return The enum associated with the given number.
       * @deprecated Use {@link #forNumber(int)} instead.
       */
      @java.lang.Deprecated
      public static SubTypeCase valueOf(int value) {
        return forNumber(value);
      }

      public static SubTypeCase forNumber(int value) {
        switch (value) {
          case 2: return ARRAY_ELEMENT_TYPE;
          case 3: return STRUCT_TYPE;
          case 0: return SUBTYPE_NOT_SET;
          default: return null;
        }
      }
      public int getNumber() {
        return this.value;
      }
    };

    public SubTypeCase
    getSubTypeCase() {
      return SubTypeCase.forNumber(
          subTypeCase_);
    }

    public static final int TYPE_KIND_FIELD_NUMBER = 1;
    private int typeKind_ = 0;
    /**
     * <pre>
     * Required. The top level type of this field.
     * Can be any standard SQL data type (e.g., "INT64", "DATE", "ARRAY").
     * </pre>
     *
     * <code>.google.cloud.bigquery.v2.StandardSqlDataType.TypeKind type_kind = 1 [(.google.api.field_behavior) = REQUIRED];</code>
     * @return The enum numeric value on the wire for typeKind.
     */
    @java.lang.Override public int getTypeKindValue() {
      return typeKind_;
    }
    /**
     * <pre>
     * Required. The top level type of this field.
     * Can be any standard SQL data type (e.g., "INT64", "DATE", "ARRAY").
     * </pre>
     *
     * <code>.google.cloud.bigquery.v2.StandardSqlDataType.TypeKind type_kind = 1 [(.google.api.field_behavior) = REQUIRED];</code>
     * @return The typeKind.
     */
    @java.lang.Override public com.google.cloud.bigquery.v2.StandardSqlProto.StandardSqlDataType.TypeKind getTypeKind() {
      com.google.cloud.bigquery.v2.StandardSqlProto.StandardSqlDataType.TypeKind result = com.google.cloud.bigquery.v2.StandardSqlProto.StandardSqlDataType.TypeKind.forNumber(typeKind_);
      return result == null ? com.google.cloud.bigquery.v2.StandardSqlProto.StandardSqlDataType.TypeKind.UNRECOGNIZED : result;
    }

    public static final int ARRAY_ELEMENT_TYPE_FIELD_NUMBER = 2;
    /**
     * <pre>
     * The type of the array's elements, if type_kind = "ARRAY".
     * </pre>
     *
     * <code>.google.cloud.bigquery.v2.StandardSqlDataType array_element_type = 2;</code>
     * @return Whether the arrayElementType field is set.
     */
    @java.lang.Override
    public boolean hasArrayElementType() {
      return subTypeCase_ == 2;
    }
    /**
     * <pre>
     * The type of the array's elements, if type_kind = "ARRAY".
     * </pre>
     *
     * <code>.google.cloud.bigquery.v2.StandardSqlDataType array_element_type = 2;</code>
     * @return The arrayElementType.
     */
    @java.lang.Override
    public com.google.cloud.bigquery.v2.StandardSqlProto.StandardSqlDataType getArrayElementType() {
      if (subTypeCase_ == 2) {
         return (com.google.cloud.bigquery.v2.StandardSqlProto.StandardSqlDataType) subType_;
      }
      return com.google.cloud.bigquery.v2.StandardSqlProto.StandardSqlDataType.getDefaultInstance();
    }
    /**
     * <pre>
     * The type of the array's elements, if type_kind = "ARRAY".
     * </pre>
     *
     * <code>.google.cloud.bigquery.v2.StandardSqlDataType array_element_type = 2;</code>
     */
    @java.lang.Override
    public com.google.cloud.bigquery.v2.StandardSqlProto.StandardSqlDataTypeOrBuilder getArrayElementTypeOrBuilder() {
      if (subTypeCase_ == 2) {
         return (com.google.cloud.bigquery.v2.StandardSqlProto.StandardSqlDataType) subType_;
      }
      return com.google.cloud.bigquery.v2.StandardSqlProto.StandardSqlDataType.getDefaultInstance();
    }

    public static final int STRUCT_TYPE_FIELD_NUMBER = 3;
    /**
     * <pre>
     * The fields of this struct, in order, if type_kind = "STRUCT".
     * </pre>
     *
     * <code>.google.cloud.bigquery.v2.StandardSqlStructType struct_type = 3;</code>
     * @return Whether the structType field is set.
     */
    @java.lang.Override
    public boolean hasStructType() {
      return subTypeCase_ == 3;
    }
    /**
     * <pre>
     * The fields of this struct, in order, if type_kind = "STRUCT".
     * </pre>
     *
     * <code>.google.cloud.bigquery.v2.StandardSqlStructType struct_type = 3;</code>
     * @return The structType.
     */
    @java.lang.Override
    public com.google.cloud.bigquery.v2.StandardSqlProto.StandardSqlStructType getStructType() {
      if (subTypeCase_ == 3) {
         return (com.google.cloud.bigquery.v2.StandardSqlProto.StandardSqlStructType) subType_;
      }
      return com.google.cloud.bigquery.v2.StandardSqlProto.StandardSqlStructType.getDefaultInstance();
    }
    /**
     * <pre>
     * The fields of this struct, in order, if type_kind = "STRUCT".
     * </pre>
     *
     * <code>.google.cloud.bigquery.v2.StandardSqlStructType struct_type = 3;</code>
     */
    @java.lang.Override
    public com.google.cloud.bigquery.v2.StandardSqlProto.StandardSqlStructTypeOrBuilder getStructTypeOrBuilder() {
      if (subTypeCase_ == 3) {
         return (com.google.cloud.bigquery.v2.StandardSqlProto.StandardSqlStructType) subType_;
      }
      return com.google.cloud.bigquery.v2.StandardSqlProto.StandardSqlStructType.getDefaultInstance();
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (typeKind_ != com.google.cloud.bigquery.v2.StandardSqlProto.StandardSqlDataType.TypeKind.TYPE_KIND_UNSPECIFIED.getNumber()) {
        output.writeEnum(1, typeKind_);
      }
      if (subTypeCase_ == 2) {
        output.writeMessage(2, (com.google.cloud.bigquery.v2.StandardSqlProto.StandardSqlDataType) subType_);
      }
      if (subTypeCase_ == 3) {
        output.writeMessage(3, (com.google.cloud.bigquery.v2.StandardSqlProto.StandardSqlStructType) subType_);
      }
      getUnknownFields().writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (typeKind_ != com.google.cloud.bigquery.v2.StandardSqlProto.StandardSqlDataType.TypeKind.TYPE_KIND_UNSPECIFIED.getNumber()) {
        size += com.google.protobuf.CodedOutputStream
          .computeEnumSize(1, typeKind_);
      }
      if (subTypeCase_ == 2) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(2, (com.google.cloud.bigquery.v2.StandardSqlProto.StandardSqlDataType) subType_);
      }
      if (subTypeCase_ == 3) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(3, (com.google.cloud.bigquery.v2.StandardSqlProto.StandardSqlStructType) subType_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof com.google.cloud.bigquery.v2.StandardSqlProto.StandardSqlDataType)) {
        return super.equals(obj);
      }
      com.google.cloud.bigquery.v2.StandardSqlProto.StandardSqlDataType other = (com.google.cloud.bigquery.v2.StandardSqlProto.StandardSqlDataType) obj;

      if (typeKind_ != other.typeKind_) return false;
      if (!getSubTypeCase().equals(other.getSubTypeCase())) return false;
      switch (subTypeCase_) {
        case 2:
          if (!getArrayElementType()
              .equals(other.getArrayElementType())) return false;
          break;
        case 3:
          if (!getStructType()
              .equals(other.getStructType())) return false;
          break;
        case 0:
        default:
      }
      if (!getUnknownFields().equals(other.getUnknownFields())) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      hash = (37 * hash) + TYPE_KIND_FIELD_NUMBER;
      hash = (53 * hash) + typeKind_;
      switch (subTypeCase_) {
        case 2:
          hash = (37 * hash) + ARRAY_ELEMENT_TYPE_FIELD_NUMBER;
          hash = (53 * hash) + getArrayElementType().hashCode();
          break;
        case 3:
          hash = (37 * hash) + STRUCT_TYPE_FIELD_NUMBER;
          hash = (53 * hash) + getStructType().hashCode();
          break;
        case 0:
        default:
      }
      hash = (29 * hash) + getUnknownFields().hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static com.google.cloud.bigquery.v2.StandardSqlProto.StandardSqlDataType parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.google.cloud.bigquery.v2.StandardSqlProto.StandardSqlDataType parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.google.cloud.bigquery.v2.StandardSqlProto.StandardSqlDataType parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.google.cloud.bigquery.v2.StandardSqlProto.StandardSqlDataType parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.google.cloud.bigquery.v2.StandardSqlProto.StandardSqlDataType parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.google.cloud.bigquery.v2.StandardSqlProto.StandardSqlDataType parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.google.cloud.bigquery.v2.StandardSqlProto.StandardSqlDataType parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static com.google.cloud.bigquery.v2.StandardSqlProto.StandardSqlDataType parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static com.google.cloud.bigquery.v2.StandardSqlProto.StandardSqlDataType parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static com.google.cloud.bigquery.v2.StandardSqlProto.StandardSqlDataType parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static com.google.cloud.bigquery.v2.StandardSqlProto.StandardSqlDataType parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static com.google.cloud.bigquery.v2.StandardSqlProto.StandardSqlDataType parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(com.google.cloud.bigquery.v2.StandardSqlProto.StandardSqlDataType prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * <pre>
     * The type of a variable, e.g., a function argument.
     * Examples:
     * INT64: {type_kind="INT64"}
     * ARRAY&lt;STRING&gt;: {type_kind="ARRAY", array_element_type="STRING"}
     * STRUCT&lt;x STRING, y ARRAY&lt;DATE&gt;&gt;:
     *   {type_kind="STRUCT",
     *    struct_type={fields=[
     *      {name="x", type={type_kind="STRING"}},
     *      {name="y", type={type_kind="ARRAY", array_element_type="DATE"}}
     *    ]}}
     * </pre>
     *
     * Protobuf type {@code google.cloud.bigquery.v2.StandardSqlDataType}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:google.cloud.bigquery.v2.StandardSqlDataType)
        com.google.cloud.bigquery.v2.StandardSqlProto.StandardSqlDataTypeOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return com.google.cloud.bigquery.v2.StandardSqlProto.internal_static_google_cloud_bigquery_v2_StandardSqlDataType_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return com.google.cloud.bigquery.v2.StandardSqlProto.internal_static_google_cloud_bigquery_v2_StandardSqlDataType_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                com.google.cloud.bigquery.v2.StandardSqlProto.StandardSqlDataType.class, com.google.cloud.bigquery.v2.StandardSqlProto.StandardSqlDataType.Builder.class);
      }

      // Construct using com.google.cloud.bigquery.v2.StandardSqlProto.StandardSqlDataType.newBuilder()
      private Builder() {

      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);

      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        bitField0_ = 0;
        typeKind_ = 0;
        if (arrayElementTypeBuilder_ != null) {
          arrayElementTypeBuilder_.clear();
        }
        if (structTypeBuilder_ != null) {
          structTypeBuilder_.clear();
        }
        subTypeCase_ = 0;
        subType_ = null;
        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.google.cloud.bigquery.v2.StandardSqlProto.internal_static_google_cloud_bigquery_v2_StandardSqlDataType_descriptor;
      }

      @java.lang.Override
      public com.google.cloud.bigquery.v2.StandardSqlProto.StandardSqlDataType getDefaultInstanceForType() {
        return com.google.cloud.bigquery.v2.StandardSqlProto.StandardSqlDataType.getDefaultInstance();
      }

      @java.lang.Override
      public com.google.cloud.bigquery.v2.StandardSqlProto.StandardSqlDataType build() {
        com.google.cloud.bigquery.v2.StandardSqlProto.StandardSqlDataType result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public com.google.cloud.bigquery.v2.StandardSqlProto.StandardSqlDataType buildPartial() {
        com.google.cloud.bigquery.v2.StandardSqlProto.StandardSqlDataType result = new com.google.cloud.bigquery.v2.StandardSqlProto.StandardSqlDataType(this);
        if (bitField0_ != 0) { buildPartial0(result); }
        buildPartialOneofs(result);
        onBuilt();
        return result;
      }

      private void buildPartial0(com.google.cloud.bigquery.v2.StandardSqlProto.StandardSqlDataType result) {
        int from_bitField0_ = bitField0_;
        if (((from_bitField0_ & 0x00000001) != 0)) {
          result.typeKind_ = typeKind_;
        }
      }

      private void buildPartialOneofs(com.google.cloud.bigquery.v2.StandardSqlProto.StandardSqlDataType result) {
        result.subTypeCase_ = subTypeCase_;
        result.subType_ = this.subType_;
        if (subTypeCase_ == 2 &&
            arrayElementTypeBuilder_ != null) {
          result.subType_ = arrayElementTypeBuilder_.build();
        }
        if (subTypeCase_ == 3 &&
            structTypeBuilder_ != null) {
          result.subType_ = structTypeBuilder_.build();
        }
      }

      @java.lang.Override
      public Builder clone() {
        return super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.google.cloud.bigquery.v2.StandardSqlProto.StandardSqlDataType) {
          return mergeFrom((com.google.cloud.bigquery.v2.StandardSqlProto.StandardSqlDataType)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(com.google.cloud.bigquery.v2.StandardSqlProto.StandardSqlDataType other) {
        if (other == com.google.cloud.bigquery.v2.StandardSqlProto.StandardSqlDataType.getDefaultInstance()) return this;
        if (other.typeKind_ != 0) {
          setTypeKindValue(other.getTypeKindValue());
        }
        switch (other.getSubTypeCase()) {
          case ARRAY_ELEMENT_TYPE: {
            mergeArrayElementType(other.getArrayElementType());
            break;
          }
          case STRUCT_TYPE: {
            mergeStructType(other.getStructType());
            break;
          }
          case SUBTYPE_NOT_SET: {
            break;
          }
        }
        this.mergeUnknownFields(other.getUnknownFields());
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        if (extensionRegistry == null) {
          throw new java.lang.NullPointerException();
        }
        try {
          boolean done = false;
          while (!done) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                done = true;
                break;
              case 8: {
                typeKind_ = input.readEnum();
                bitField0_ |= 0x00000001;
                break;
              } // case 8
              case 18: {
                input.readMessage(
                    getArrayElementTypeFieldBuilder().getBuilder(),
                    extensionRegistry);
                subTypeCase_ = 2;
                break;
              } // case 18
              case 26: {
                input.readMessage(
                    getStructTypeFieldBuilder().getBuilder(),
                    extensionRegistry);
                subTypeCase_ = 3;
                break;
              } // case 26
              default: {
                if (!super.parseUnknownField(input, extensionRegistry, tag)) {
                  done = true; // was an endgroup tag
                }
                break;
              } // default:
            } // switch (tag)
          } // while (!done)
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.unwrapIOException();
        } finally {
          onChanged();
        } // finally
        return this;
      }
      private int subTypeCase_ = 0;
      private java.lang.Object subType_;
      public SubTypeCase
          getSubTypeCase() {
        return SubTypeCase.forNumber(
            subTypeCase_);
      }

      public Builder clearSubType() {
        subTypeCase_ = 0;
        subType_ = null;
        onChanged();
        return this;
      }

      private int bitField0_;

      private int typeKind_ = 0;
      /**
       * <pre>
       * Required. The top level type of this field.
       * Can be any standard SQL data type (e.g., "INT64", "DATE", "ARRAY").
       * </pre>
       *
       * <code>.google.cloud.bigquery.v2.StandardSqlDataType.TypeKind type_kind = 1 [(.google.api.field_behavior) = REQUIRED];</code>
       * @return The enum numeric value on the wire for typeKind.
       */
      @java.lang.Override public int getTypeKindValue() {
        return typeKind_;
      }
      /**
       * <pre>
       * Required. The top level type of this field.
       * Can be any standard SQL data type (e.g., "INT64", "DATE", "ARRAY").
       * </pre>
       *
       * <code>.google.cloud.bigquery.v2.StandardSqlDataType.TypeKind type_kind = 1 [(.google.api.field_behavior) = REQUIRED];</code>
       * @param value The enum numeric value on the wire for typeKind to set.
       * @return This builder for chaining.
       */
      public Builder setTypeKindValue(int value) {
        typeKind_ = value;
        bitField0_ |= 0x00000001;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Required. The top level type of this field.
       * Can be any standard SQL data type (e.g., "INT64", "DATE", "ARRAY").
       * </pre>
       *
       * <code>.google.cloud.bigquery.v2.StandardSqlDataType.TypeKind type_kind = 1 [(.google.api.field_behavior) = REQUIRED];</code>
       * @return The typeKind.
       */
      @java.lang.Override
      public com.google.cloud.bigquery.v2.StandardSqlProto.StandardSqlDataType.TypeKind getTypeKind() {
        com.google.cloud.bigquery.v2.StandardSqlProto.StandardSqlDataType.TypeKind result = com.google.cloud.bigquery.v2.StandardSqlProto.StandardSqlDataType.TypeKind.forNumber(typeKind_);
        return result == null ? com.google.cloud.bigquery.v2.StandardSqlProto.StandardSqlDataType.TypeKind.UNRECOGNIZED : result;
      }
      /**
       * <pre>
       * Required. The top level type of this field.
       * Can be any standard SQL data type (e.g., "INT64", "DATE", "ARRAY").
       * </pre>
       *
       * <code>.google.cloud.bigquery.v2.StandardSqlDataType.TypeKind type_kind = 1 [(.google.api.field_behavior) = REQUIRED];</code>
       * @param value The typeKind to set.
       * @return This builder for chaining.
       */
      public Builder setTypeKind(com.google.cloud.bigquery.v2.StandardSqlProto.StandardSqlDataType.TypeKind value) {
        if (value == null) {
          throw new NullPointerException();
        }
        bitField0_ |= 0x00000001;
        typeKind_ = value.getNumber();
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Required. The top level type of this field.
       * Can be any standard SQL data type (e.g., "INT64", "DATE", "ARRAY").
       * </pre>
       *
       * <code>.google.cloud.bigquery.v2.StandardSqlDataType.TypeKind type_kind = 1 [(.google.api.field_behavior) = REQUIRED];</code>
       * @return This builder for chaining.
       */
      public Builder clearTypeKind() {
        bitField0_ = (bitField0_ & ~0x00000001);
        typeKind_ = 0;
        onChanged();
        return this;
      }

      private com.google.protobuf.SingleFieldBuilderV3<
          com.google.cloud.bigquery.v2.StandardSqlProto.StandardSqlDataType, com.google.cloud.bigquery.v2.StandardSqlProto.StandardSqlDataType.Builder, com.google.cloud.bigquery.v2.StandardSqlProto.StandardSqlDataTypeOrBuilder> arrayElementTypeBuilder_;
      /**
       * <pre>
       * The type of the array's elements, if type_kind = "ARRAY".
       * </pre>
       *
       * <code>.google.cloud.bigquery.v2.StandardSqlDataType array_element_type = 2;</code>
       * @return Whether the arrayElementType field is set.
       */
      @java.lang.Override
      public boolean hasArrayElementType() {
        return subTypeCase_ == 2;
      }
      /**
       * <pre>
       * The type of the array's elements, if type_kind = "ARRAY".
       * </pre>
       *
       * <code>.google.cloud.bigquery.v2.StandardSqlDataType array_element_type = 2;</code>
       * @return The arrayElementType.
       */
      @java.lang.Override
      public com.google.cloud.bigquery.v2.StandardSqlProto.StandardSqlDataType getArrayElementType() {
        if (arrayElementTypeBuilder_ == null) {
          if (subTypeCase_ == 2) {
            return (com.google.cloud.bigquery.v2.StandardSqlProto.StandardSqlDataType) subType_;
          }
          return com.google.cloud.bigquery.v2.StandardSqlProto.StandardSqlDataType.getDefaultInstance();
        } else {
          if (subTypeCase_ == 2) {
            return arrayElementTypeBuilder_.getMessage();
          }
          return com.google.cloud.bigquery.v2.StandardSqlProto.StandardSqlDataType.getDefaultInstance();
        }
      }
      /**
       * <pre>
       * The type of the array's elements, if type_kind = "ARRAY".
       * </pre>
       *
       * <code>.google.cloud.bigquery.v2.StandardSqlDataType array_element_type = 2;</code>
       */
      public Builder setArrayElementType(com.google.cloud.bigquery.v2.StandardSqlProto.StandardSqlDataType value) {
        if (arrayElementTypeBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          subType_ = value;
          onChanged();
        } else {
          arrayElementTypeBuilder_.setMessage(value);
        }
        subTypeCase_ = 2;
        return this;
      }
      /**
       * <pre>
       * The type of the array's elements, if type_kind = "ARRAY".
       * </pre>
       *
       * <code>.google.cloud.bigquery.v2.StandardSqlDataType array_element_type = 2;</code>
       */
      public Builder setArrayElementType(
          com.google.cloud.bigquery.v2.StandardSqlProto.StandardSqlDataType.Builder builderForValue) {
        if (arrayElementTypeBuilder_ == null) {
          subType_ = builderForValue.build();
          onChanged();
        } else {
          arrayElementTypeBuilder_.setMessage(builderForValue.build());
        }
        subTypeCase_ = 2;
        return this;
      }
      /**
       * <pre>
       * The type of the array's elements, if type_kind = "ARRAY".
       * </pre>
       *
       * <code>.google.cloud.bigquery.v2.StandardSqlDataType array_element_type = 2;</code>
       */
      public Builder mergeArrayElementType(com.google.cloud.bigquery.v2.StandardSqlProto.StandardSqlDataType value) {
        if (arrayElementTypeBuilder_ == null) {
          if (subTypeCase_ == 2 &&
              subType_ != com.google.cloud.bigquery.v2.StandardSqlProto.StandardSqlDataType.getDefaultInstance()) {
            subType_ = com.google.cloud.bigquery.v2.StandardSqlProto.StandardSqlDataType.newBuilder((com.google.cloud.bigquery.v2.StandardSqlProto.StandardSqlDataType) subType_)
                .mergeFrom(value).buildPartial();
          } else {
            subType_ = value;
          }
          onChanged();
        } else {
          if (subTypeCase_ == 2) {
            arrayElementTypeBuilder_.mergeFrom(value);
          } else {
            arrayElementTypeBuilder_.setMessage(value);
          }
        }
        subTypeCase_ = 2;
        return this;
      }
      /**
       * <pre>
       * The type of the array's elements, if type_kind = "ARRAY".
       * </pre>
       *
       * <code>.google.cloud.bigquery.v2.StandardSqlDataType array_element_type = 2;</code>
       */
      public Builder clearArrayElementType() {
        if (arrayElementTypeBuilder_ == null) {
          if (subTypeCase_ == 2) {
            subTypeCase_ = 0;
            subType_ = null;
            onChanged();
          }
        } else {
          if (subTypeCase_ == 2) {
            subTypeCase_ = 0;
            subType_ = null;
          }
          arrayElementTypeBuilder_.clear();
        }
        return this;
      }
      /**
       * <pre>
       * The type of the array's elements, if type_kind = "ARRAY".
       * </pre>
       *
       * <code>.google.cloud.bigquery.v2.StandardSqlDataType array_element_type = 2;</code>
       */
      public com.google.cloud.bigquery.v2.StandardSqlProto.StandardSqlDataType.Builder getArrayElementTypeBuilder() {
        return getArrayElementTypeFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       * The type of the array's elements, if type_kind = "ARRAY".
       * </pre>
       *
       * <code>.google.cloud.bigquery.v2.StandardSqlDataType array_element_type = 2;</code>
       */
      @java.lang.Override
      public com.google.cloud.bigquery.v2.StandardSqlProto.StandardSqlDataTypeOrBuilder getArrayElementTypeOrBuilder() {
        if ((subTypeCase_ == 2) && (arrayElementTypeBuilder_ != null)) {
          return arrayElementTypeBuilder_.getMessageOrBuilder();
        } else {
          if (subTypeCase_ == 2) {
            return (com.google.cloud.bigquery.v2.StandardSqlProto.StandardSqlDataType) subType_;
          }
          return com.google.cloud.bigquery.v2.StandardSqlProto.StandardSqlDataType.getDefaultInstance();
        }
      }
      /**
       * <pre>
       * The type of the array's elements, if type_kind = "ARRAY".
       * </pre>
       *
       * <code>.google.cloud.bigquery.v2.StandardSqlDataType array_element_type = 2;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          com.google.cloud.bigquery.v2.StandardSqlProto.StandardSqlDataType, com.google.cloud.bigquery.v2.StandardSqlProto.StandardSqlDataType.Builder, com.google.cloud.bigquery.v2.StandardSqlProto.StandardSqlDataTypeOrBuilder> 
          getArrayElementTypeFieldBuilder() {
        if (arrayElementTypeBuilder_ == null) {
          if (!(subTypeCase_ == 2)) {
            subType_ = com.google.cloud.bigquery.v2.StandardSqlProto.StandardSqlDataType.getDefaultInstance();
          }
          arrayElementTypeBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              com.google.cloud.bigquery.v2.StandardSqlProto.StandardSqlDataType, com.google.cloud.bigquery.v2.StandardSqlProto.StandardSqlDataType.Builder, com.google.cloud.bigquery.v2.StandardSqlProto.StandardSqlDataTypeOrBuilder>(
                  (com.google.cloud.bigquery.v2.StandardSqlProto.StandardSqlDataType) subType_,
                  getParentForChildren(),
                  isClean());
          subType_ = null;
        }
        subTypeCase_ = 2;
        onChanged();
        return arrayElementTypeBuilder_;
      }

      private com.google.protobuf.SingleFieldBuilderV3<
          com.google.cloud.bigquery.v2.StandardSqlProto.StandardSqlStructType, com.google.cloud.bigquery.v2.StandardSqlProto.StandardSqlStructType.Builder, com.google.cloud.bigquery.v2.StandardSqlProto.StandardSqlStructTypeOrBuilder> structTypeBuilder_;
      /**
       * <pre>
       * The fields of this struct, in order, if type_kind = "STRUCT".
       * </pre>
       *
       * <code>.google.cloud.bigquery.v2.StandardSqlStructType struct_type = 3;</code>
       * @return Whether the structType field is set.
       */
      @java.lang.Override
      public boolean hasStructType() {
        return subTypeCase_ == 3;
      }
      /**
       * <pre>
       * The fields of this struct, in order, if type_kind = "STRUCT".
       * </pre>
       *
       * <code>.google.cloud.bigquery.v2.StandardSqlStructType struct_type = 3;</code>
       * @return The structType.
       */
      @java.lang.Override
      public com.google.cloud.bigquery.v2.StandardSqlProto.StandardSqlStructType getStructType() {
        if (structTypeBuilder_ == null) {
          if (subTypeCase_ == 3) {
            return (com.google.cloud.bigquery.v2.StandardSqlProto.StandardSqlStructType) subType_;
          }
          return com.google.cloud.bigquery.v2.StandardSqlProto.StandardSqlStructType.getDefaultInstance();
        } else {
          if (subTypeCase_ == 3) {
            return structTypeBuilder_.getMessage();
          }
          return com.google.cloud.bigquery.v2.StandardSqlProto.StandardSqlStructType.getDefaultInstance();
        }
      }
      /**
       * <pre>
       * The fields of this struct, in order, if type_kind = "STRUCT".
       * </pre>
       *
       * <code>.google.cloud.bigquery.v2.StandardSqlStructType struct_type = 3;</code>
       */
      public Builder setStructType(com.google.cloud.bigquery.v2.StandardSqlProto.StandardSqlStructType value) {
        if (structTypeBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          subType_ = value;
          onChanged();
        } else {
          structTypeBuilder_.setMessage(value);
        }
        subTypeCase_ = 3;
        return this;
      }
      /**
       * <pre>
       * The fields of this struct, in order, if type_kind = "STRUCT".
       * </pre>
       *
       * <code>.google.cloud.bigquery.v2.StandardSqlStructType struct_type = 3;</code>
       */
      public Builder setStructType(
          com.google.cloud.bigquery.v2.StandardSqlProto.StandardSqlStructType.Builder builderForValue) {
        if (structTypeBuilder_ == null) {
          subType_ = builderForValue.build();
          onChanged();
        } else {
          structTypeBuilder_.setMessage(builderForValue.build());
        }
        subTypeCase_ = 3;
        return this;
      }
      /**
       * <pre>
       * The fields of this struct, in order, if type_kind = "STRUCT".
       * </pre>
       *
       * <code>.google.cloud.bigquery.v2.StandardSqlStructType struct_type = 3;</code>
       */
      public Builder mergeStructType(com.google.cloud.bigquery.v2.StandardSqlProto.StandardSqlStructType value) {
        if (structTypeBuilder_ == null) {
          if (subTypeCase_ == 3 &&
              subType_ != com.google.cloud.bigquery.v2.StandardSqlProto.StandardSqlStructType.getDefaultInstance()) {
            subType_ = com.google.cloud.bigquery.v2.StandardSqlProto.StandardSqlStructType.newBuilder((com.google.cloud.bigquery.v2.StandardSqlProto.StandardSqlStructType) subType_)
                .mergeFrom(value).buildPartial();
          } else {
            subType_ = value;
          }
          onChanged();
        } else {
          if (subTypeCase_ == 3) {
            structTypeBuilder_.mergeFrom(value);
          } else {
            structTypeBuilder_.setMessage(value);
          }
        }
        subTypeCase_ = 3;
        return this;
      }
      /**
       * <pre>
       * The fields of this struct, in order, if type_kind = "STRUCT".
       * </pre>
       *
       * <code>.google.cloud.bigquery.v2.StandardSqlStructType struct_type = 3;</code>
       */
      public Builder clearStructType() {
        if (structTypeBuilder_ == null) {
          if (subTypeCase_ == 3) {
            subTypeCase_ = 0;
            subType_ = null;
            onChanged();
          }
        } else {
          if (subTypeCase_ == 3) {
            subTypeCase_ = 0;
            subType_ = null;
          }
          structTypeBuilder_.clear();
        }
        return this;
      }
      /**
       * <pre>
       * The fields of this struct, in order, if type_kind = "STRUCT".
       * </pre>
       *
       * <code>.google.cloud.bigquery.v2.StandardSqlStructType struct_type = 3;</code>
       */
      public com.google.cloud.bigquery.v2.StandardSqlProto.StandardSqlStructType.Builder getStructTypeBuilder() {
        return getStructTypeFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       * The fields of this struct, in order, if type_kind = "STRUCT".
       * </pre>
       *
       * <code>.google.cloud.bigquery.v2.StandardSqlStructType struct_type = 3;</code>
       */
      @java.lang.Override
      public com.google.cloud.bigquery.v2.StandardSqlProto.StandardSqlStructTypeOrBuilder getStructTypeOrBuilder() {
        if ((subTypeCase_ == 3) && (structTypeBuilder_ != null)) {
          return structTypeBuilder_.getMessageOrBuilder();
        } else {
          if (subTypeCase_ == 3) {
            return (com.google.cloud.bigquery.v2.StandardSqlProto.StandardSqlStructType) subType_;
          }
          return com.google.cloud.bigquery.v2.StandardSqlProto.StandardSqlStructType.getDefaultInstance();
        }
      }
      /**
       * <pre>
       * The fields of this struct, in order, if type_kind = "STRUCT".
       * </pre>
       *
       * <code>.google.cloud.bigquery.v2.StandardSqlStructType struct_type = 3;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          com.google.cloud.bigquery.v2.StandardSqlProto.StandardSqlStructType, com.google.cloud.bigquery.v2.StandardSqlProto.StandardSqlStructType.Builder, com.google.cloud.bigquery.v2.StandardSqlProto.StandardSqlStructTypeOrBuilder> 
          getStructTypeFieldBuilder() {
        if (structTypeBuilder_ == null) {
          if (!(subTypeCase_ == 3)) {
            subType_ = com.google.cloud.bigquery.v2.StandardSqlProto.StandardSqlStructType.getDefaultInstance();
          }
          structTypeBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              com.google.cloud.bigquery.v2.StandardSqlProto.StandardSqlStructType, com.google.cloud.bigquery.v2.StandardSqlProto.StandardSqlStructType.Builder, com.google.cloud.bigquery.v2.StandardSqlProto.StandardSqlStructTypeOrBuilder>(
                  (com.google.cloud.bigquery.v2.StandardSqlProto.StandardSqlStructType) subType_,
                  getParentForChildren(),
                  isClean());
          subType_ = null;
        }
        subTypeCase_ = 3;
        onChanged();
        return structTypeBuilder_;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:google.cloud.bigquery.v2.StandardSqlDataType)
    }

    // @@protoc_insertion_point(class_scope:google.cloud.bigquery.v2.StandardSqlDataType)
    private static final com.google.cloud.bigquery.v2.StandardSqlProto.StandardSqlDataType DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new com.google.cloud.bigquery.v2.StandardSqlProto.StandardSqlDataType();
    }

    public static com.google.cloud.bigquery.v2.StandardSqlProto.StandardSqlDataType getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<StandardSqlDataType>
        PARSER = new com.google.protobuf.AbstractParser<StandardSqlDataType>() {
      @java.lang.Override
      public StandardSqlDataType parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        Builder builder = newBuilder();
        try {
          builder.mergeFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.setUnfinishedMessage(builder.buildPartial());
        } catch (com.google.protobuf.UninitializedMessageException e) {
          throw e.asInvalidProtocolBufferException().setUnfinishedMessage(builder.buildPartial());
        } catch (java.io.IOException e) {
          throw new com.google.protobuf.InvalidProtocolBufferException(e)
              .setUnfinishedMessage(builder.buildPartial());
        }
        return builder.buildPartial();
      }
    };

    public static com.google.protobuf.Parser<StandardSqlDataType> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<StandardSqlDataType> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.cloud.bigquery.v2.StandardSqlProto.StandardSqlDataType getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface StandardSqlFieldOrBuilder extends
      // @@protoc_insertion_point(interface_extends:google.cloud.bigquery.v2.StandardSqlField)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <pre>
     * Optional. The name of this field. Can be absent for struct fields.
     * </pre>
     *
     * <code>string name = 1 [(.google.api.field_behavior) = OPTIONAL];</code>
     * @return The name.
     */
    java.lang.String getName();
    /**
     * <pre>
     * Optional. The name of this field. Can be absent for struct fields.
     * </pre>
     *
     * <code>string name = 1 [(.google.api.field_behavior) = OPTIONAL];</code>
     * @return The bytes for name.
     */
    com.google.protobuf.ByteString
        getNameBytes();

    /**
     * <pre>
     * Optional. The type of this parameter. Absent if not explicitly
     * specified (e.g., CREATE FUNCTION statement can omit the return type;
     * in this case the output parameter does not have this "type" field).
     * </pre>
     *
     * <code>.google.cloud.bigquery.v2.StandardSqlDataType type = 2 [(.google.api.field_behavior) = OPTIONAL];</code>
     * @return Whether the type field is set.
     */
    boolean hasType();
    /**
     * <pre>
     * Optional. The type of this parameter. Absent if not explicitly
     * specified (e.g., CREATE FUNCTION statement can omit the return type;
     * in this case the output parameter does not have this "type" field).
     * </pre>
     *
     * <code>.google.cloud.bigquery.v2.StandardSqlDataType type = 2 [(.google.api.field_behavior) = OPTIONAL];</code>
     * @return The type.
     */
    com.google.cloud.bigquery.v2.StandardSqlProto.StandardSqlDataType getType();
    /**
     * <pre>
     * Optional. The type of this parameter. Absent if not explicitly
     * specified (e.g., CREATE FUNCTION statement can omit the return type;
     * in this case the output parameter does not have this "type" field).
     * </pre>
     *
     * <code>.google.cloud.bigquery.v2.StandardSqlDataType type = 2 [(.google.api.field_behavior) = OPTIONAL];</code>
     */
    com.google.cloud.bigquery.v2.StandardSqlProto.StandardSqlDataTypeOrBuilder getTypeOrBuilder();
  }
  /**
   * <pre>
   * A field or a column.
   * </pre>
   *
   * Protobuf type {@code google.cloud.bigquery.v2.StandardSqlField}
   */
  public static final class StandardSqlField extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:google.cloud.bigquery.v2.StandardSqlField)
      StandardSqlFieldOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use StandardSqlField.newBuilder() to construct.
    private StandardSqlField(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private StandardSqlField() {
      name_ = "";
    }

    @java.lang.Override
    @SuppressWarnings({"unused"})
    protected java.lang.Object newInstance(
        UnusedPrivateParameter unused) {
      return new StandardSqlField();
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.google.cloud.bigquery.v2.StandardSqlProto.internal_static_google_cloud_bigquery_v2_StandardSqlField_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.google.cloud.bigquery.v2.StandardSqlProto.internal_static_google_cloud_bigquery_v2_StandardSqlField_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.google.cloud.bigquery.v2.StandardSqlProto.StandardSqlField.class, com.google.cloud.bigquery.v2.StandardSqlProto.StandardSqlField.Builder.class);
    }

    public static final int NAME_FIELD_NUMBER = 1;
    @SuppressWarnings("serial")
    private volatile java.lang.Object name_ = "";
    /**
     * <pre>
     * Optional. The name of this field. Can be absent for struct fields.
     * </pre>
     *
     * <code>string name = 1 [(.google.api.field_behavior) = OPTIONAL];</code>
     * @return The name.
     */
    @java.lang.Override
    public java.lang.String getName() {
      java.lang.Object ref = name_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        name_ = s;
        return s;
      }
    }
    /**
     * <pre>
     * Optional. The name of this field. Can be absent for struct fields.
     * </pre>
     *
     * <code>string name = 1 [(.google.api.field_behavior) = OPTIONAL];</code>
     * @return The bytes for name.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString
        getNameBytes() {
      java.lang.Object ref = name_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        name_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int TYPE_FIELD_NUMBER = 2;
    private com.google.cloud.bigquery.v2.StandardSqlProto.StandardSqlDataType type_;
    /**
     * <pre>
     * Optional. The type of this parameter. Absent if not explicitly
     * specified (e.g., CREATE FUNCTION statement can omit the return type;
     * in this case the output parameter does not have this "type" field).
     * </pre>
     *
     * <code>.google.cloud.bigquery.v2.StandardSqlDataType type = 2 [(.google.api.field_behavior) = OPTIONAL];</code>
     * @return Whether the type field is set.
     */
    @java.lang.Override
    public boolean hasType() {
      return type_ != null;
    }
    /**
     * <pre>
     * Optional. The type of this parameter. Absent if not explicitly
     * specified (e.g., CREATE FUNCTION statement can omit the return type;
     * in this case the output parameter does not have this "type" field).
     * </pre>
     *
     * <code>.google.cloud.bigquery.v2.StandardSqlDataType type = 2 [(.google.api.field_behavior) = OPTIONAL];</code>
     * @return The type.
     */
    @java.lang.Override
    public com.google.cloud.bigquery.v2.StandardSqlProto.StandardSqlDataType getType() {
      return type_ == null ? com.google.cloud.bigquery.v2.StandardSqlProto.StandardSqlDataType.getDefaultInstance() : type_;
    }
    /**
     * <pre>
     * Optional. The type of this parameter. Absent if not explicitly
     * specified (e.g., CREATE FUNCTION statement can omit the return type;
     * in this case the output parameter does not have this "type" field).
     * </pre>
     *
     * <code>.google.cloud.bigquery.v2.StandardSqlDataType type = 2 [(.google.api.field_behavior) = OPTIONAL];</code>
     */
    @java.lang.Override
    public com.google.cloud.bigquery.v2.StandardSqlProto.StandardSqlDataTypeOrBuilder getTypeOrBuilder() {
      return type_ == null ? com.google.cloud.bigquery.v2.StandardSqlProto.StandardSqlDataType.getDefaultInstance() : type_;
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(name_)) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 1, name_);
      }
      if (type_ != null) {
        output.writeMessage(2, getType());
      }
      getUnknownFields().writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(name_)) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(1, name_);
      }
      if (type_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(2, getType());
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof com.google.cloud.bigquery.v2.StandardSqlProto.StandardSqlField)) {
        return super.equals(obj);
      }
      com.google.cloud.bigquery.v2.StandardSqlProto.StandardSqlField other = (com.google.cloud.bigquery.v2.StandardSqlProto.StandardSqlField) obj;

      if (!getName()
          .equals(other.getName())) return false;
      if (hasType() != other.hasType()) return false;
      if (hasType()) {
        if (!getType()
            .equals(other.getType())) return false;
      }
      if (!getUnknownFields().equals(other.getUnknownFields())) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      hash = (37 * hash) + NAME_FIELD_NUMBER;
      hash = (53 * hash) + getName().hashCode();
      if (hasType()) {
        hash = (37 * hash) + TYPE_FIELD_NUMBER;
        hash = (53 * hash) + getType().hashCode();
      }
      hash = (29 * hash) + getUnknownFields().hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static com.google.cloud.bigquery.v2.StandardSqlProto.StandardSqlField parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.google.cloud.bigquery.v2.StandardSqlProto.StandardSqlField parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.google.cloud.bigquery.v2.StandardSqlProto.StandardSqlField parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.google.cloud.bigquery.v2.StandardSqlProto.StandardSqlField parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.google.cloud.bigquery.v2.StandardSqlProto.StandardSqlField parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.google.cloud.bigquery.v2.StandardSqlProto.StandardSqlField parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.google.cloud.bigquery.v2.StandardSqlProto.StandardSqlField parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static com.google.cloud.bigquery.v2.StandardSqlProto.StandardSqlField parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static com.google.cloud.bigquery.v2.StandardSqlProto.StandardSqlField parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static com.google.cloud.bigquery.v2.StandardSqlProto.StandardSqlField parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static com.google.cloud.bigquery.v2.StandardSqlProto.StandardSqlField parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static com.google.cloud.bigquery.v2.StandardSqlProto.StandardSqlField parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(com.google.cloud.bigquery.v2.StandardSqlProto.StandardSqlField prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * <pre>
     * A field or a column.
     * </pre>
     *
     * Protobuf type {@code google.cloud.bigquery.v2.StandardSqlField}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:google.cloud.bigquery.v2.StandardSqlField)
        com.google.cloud.bigquery.v2.StandardSqlProto.StandardSqlFieldOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return com.google.cloud.bigquery.v2.StandardSqlProto.internal_static_google_cloud_bigquery_v2_StandardSqlField_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return com.google.cloud.bigquery.v2.StandardSqlProto.internal_static_google_cloud_bigquery_v2_StandardSqlField_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                com.google.cloud.bigquery.v2.StandardSqlProto.StandardSqlField.class, com.google.cloud.bigquery.v2.StandardSqlProto.StandardSqlField.Builder.class);
      }

      // Construct using com.google.cloud.bigquery.v2.StandardSqlProto.StandardSqlField.newBuilder()
      private Builder() {

      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);

      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        bitField0_ = 0;
        name_ = "";
        type_ = null;
        if (typeBuilder_ != null) {
          typeBuilder_.dispose();
          typeBuilder_ = null;
        }
        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.google.cloud.bigquery.v2.StandardSqlProto.internal_static_google_cloud_bigquery_v2_StandardSqlField_descriptor;
      }

      @java.lang.Override
      public com.google.cloud.bigquery.v2.StandardSqlProto.StandardSqlField getDefaultInstanceForType() {
        return com.google.cloud.bigquery.v2.StandardSqlProto.StandardSqlField.getDefaultInstance();
      }

      @java.lang.Override
      public com.google.cloud.bigquery.v2.StandardSqlProto.StandardSqlField build() {
        com.google.cloud.bigquery.v2.StandardSqlProto.StandardSqlField result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public com.google.cloud.bigquery.v2.StandardSqlProto.StandardSqlField buildPartial() {
        com.google.cloud.bigquery.v2.StandardSqlProto.StandardSqlField result = new com.google.cloud.bigquery.v2.StandardSqlProto.StandardSqlField(this);
        if (bitField0_ != 0) { buildPartial0(result); }
        onBuilt();
        return result;
      }

      private void buildPartial0(com.google.cloud.bigquery.v2.StandardSqlProto.StandardSqlField result) {
        int from_bitField0_ = bitField0_;
        if (((from_bitField0_ & 0x00000001) != 0)) {
          result.name_ = name_;
        }
        if (((from_bitField0_ & 0x00000002) != 0)) {
          result.type_ = typeBuilder_ == null
              ? type_
              : typeBuilder_.build();
        }
      }

      @java.lang.Override
      public Builder clone() {
        return super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.google.cloud.bigquery.v2.StandardSqlProto.StandardSqlField) {
          return mergeFrom((com.google.cloud.bigquery.v2.StandardSqlProto.StandardSqlField)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(com.google.cloud.bigquery.v2.StandardSqlProto.StandardSqlField other) {
        if (other == com.google.cloud.bigquery.v2.StandardSqlProto.StandardSqlField.getDefaultInstance()) return this;
        if (!other.getName().isEmpty()) {
          name_ = other.name_;
          bitField0_ |= 0x00000001;
          onChanged();
        }
        if (other.hasType()) {
          mergeType(other.getType());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        if (extensionRegistry == null) {
          throw new java.lang.NullPointerException();
        }
        try {
          boolean done = false;
          while (!done) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                done = true;
                break;
              case 10: {
                name_ = input.readStringRequireUtf8();
                bitField0_ |= 0x00000001;
                break;
              } // case 10
              case 18: {
                input.readMessage(
                    getTypeFieldBuilder().getBuilder(),
                    extensionRegistry);
                bitField0_ |= 0x00000002;
                break;
              } // case 18
              default: {
                if (!super.parseUnknownField(input, extensionRegistry, tag)) {
                  done = true; // was an endgroup tag
                }
                break;
              } // default:
            } // switch (tag)
          } // while (!done)
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.unwrapIOException();
        } finally {
          onChanged();
        } // finally
        return this;
      }
      private int bitField0_;

      private java.lang.Object name_ = "";
      /**
       * <pre>
       * Optional. The name of this field. Can be absent for struct fields.
       * </pre>
       *
       * <code>string name = 1 [(.google.api.field_behavior) = OPTIONAL];</code>
       * @return The name.
       */
      public java.lang.String getName() {
        java.lang.Object ref = name_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          name_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <pre>
       * Optional. The name of this field. Can be absent for struct fields.
       * </pre>
       *
       * <code>string name = 1 [(.google.api.field_behavior) = OPTIONAL];</code>
       * @return The bytes for name.
       */
      public com.google.protobuf.ByteString
          getNameBytes() {
        java.lang.Object ref = name_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          name_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       * Optional. The name of this field. Can be absent for struct fields.
       * </pre>
       *
       * <code>string name = 1 [(.google.api.field_behavior) = OPTIONAL];</code>
       * @param value The name to set.
       * @return This builder for chaining.
       */
      public Builder setName(
          java.lang.String value) {
        if (value == null) { throw new NullPointerException(); }
        name_ = value;
        bitField0_ |= 0x00000001;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Optional. The name of this field. Can be absent for struct fields.
       * </pre>
       *
       * <code>string name = 1 [(.google.api.field_behavior) = OPTIONAL];</code>
       * @return This builder for chaining.
       */
      public Builder clearName() {
        name_ = getDefaultInstance().getName();
        bitField0_ = (bitField0_ & ~0x00000001);
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Optional. The name of this field. Can be absent for struct fields.
       * </pre>
       *
       * <code>string name = 1 [(.google.api.field_behavior) = OPTIONAL];</code>
       * @param value The bytes for name to set.
       * @return This builder for chaining.
       */
      public Builder setNameBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) { throw new NullPointerException(); }
        checkByteStringIsUtf8(value);
        name_ = value;
        bitField0_ |= 0x00000001;
        onChanged();
        return this;
      }

      private com.google.cloud.bigquery.v2.StandardSqlProto.StandardSqlDataType type_;
      private com.google.protobuf.SingleFieldBuilderV3<
          com.google.cloud.bigquery.v2.StandardSqlProto.StandardSqlDataType, com.google.cloud.bigquery.v2.StandardSqlProto.StandardSqlDataType.Builder, com.google.cloud.bigquery.v2.StandardSqlProto.StandardSqlDataTypeOrBuilder> typeBuilder_;
      /**
       * <pre>
       * Optional. The type of this parameter. Absent if not explicitly
       * specified (e.g., CREATE FUNCTION statement can omit the return type;
       * in this case the output parameter does not have this "type" field).
       * </pre>
       *
       * <code>.google.cloud.bigquery.v2.StandardSqlDataType type = 2 [(.google.api.field_behavior) = OPTIONAL];</code>
       * @return Whether the type field is set.
       */
      public boolean hasType() {
        return ((bitField0_ & 0x00000002) != 0);
      }
      /**
       * <pre>
       * Optional. The type of this parameter. Absent if not explicitly
       * specified (e.g., CREATE FUNCTION statement can omit the return type;
       * in this case the output parameter does not have this "type" field).
       * </pre>
       *
       * <code>.google.cloud.bigquery.v2.StandardSqlDataType type = 2 [(.google.api.field_behavior) = OPTIONAL];</code>
       * @return The type.
       */
      public com.google.cloud.bigquery.v2.StandardSqlProto.StandardSqlDataType getType() {
        if (typeBuilder_ == null) {
          return type_ == null ? com.google.cloud.bigquery.v2.StandardSqlProto.StandardSqlDataType.getDefaultInstance() : type_;
        } else {
          return typeBuilder_.getMessage();
        }
      }
      /**
       * <pre>
       * Optional. The type of this parameter. Absent if not explicitly
       * specified (e.g., CREATE FUNCTION statement can omit the return type;
       * in this case the output parameter does not have this "type" field).
       * </pre>
       *
       * <code>.google.cloud.bigquery.v2.StandardSqlDataType type = 2 [(.google.api.field_behavior) = OPTIONAL];</code>
       */
      public Builder setType(com.google.cloud.bigquery.v2.StandardSqlProto.StandardSqlDataType value) {
        if (typeBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          type_ = value;
        } else {
          typeBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000002;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Optional. The type of this parameter. Absent if not explicitly
       * specified (e.g., CREATE FUNCTION statement can omit the return type;
       * in this case the output parameter does not have this "type" field).
       * </pre>
       *
       * <code>.google.cloud.bigquery.v2.StandardSqlDataType type = 2 [(.google.api.field_behavior) = OPTIONAL];</code>
       */
      public Builder setType(
          com.google.cloud.bigquery.v2.StandardSqlProto.StandardSqlDataType.Builder builderForValue) {
        if (typeBuilder_ == null) {
          type_ = builderForValue.build();
        } else {
          typeBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000002;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Optional. The type of this parameter. Absent if not explicitly
       * specified (e.g., CREATE FUNCTION statement can omit the return type;
       * in this case the output parameter does not have this "type" field).
       * </pre>
       *
       * <code>.google.cloud.bigquery.v2.StandardSqlDataType type = 2 [(.google.api.field_behavior) = OPTIONAL];</code>
       */
      public Builder mergeType(com.google.cloud.bigquery.v2.StandardSqlProto.StandardSqlDataType value) {
        if (typeBuilder_ == null) {
          if (((bitField0_ & 0x00000002) != 0) &&
            type_ != null &&
            type_ != com.google.cloud.bigquery.v2.StandardSqlProto.StandardSqlDataType.getDefaultInstance()) {
            getTypeBuilder().mergeFrom(value);
          } else {
            type_ = value;
          }
        } else {
          typeBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x00000002;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Optional. The type of this parameter. Absent if not explicitly
       * specified (e.g., CREATE FUNCTION statement can omit the return type;
       * in this case the output parameter does not have this "type" field).
       * </pre>
       *
       * <code>.google.cloud.bigquery.v2.StandardSqlDataType type = 2 [(.google.api.field_behavior) = OPTIONAL];</code>
       */
      public Builder clearType() {
        bitField0_ = (bitField0_ & ~0x00000002);
        type_ = null;
        if (typeBuilder_ != null) {
          typeBuilder_.dispose();
          typeBuilder_ = null;
        }
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Optional. The type of this parameter. Absent if not explicitly
       * specified (e.g., CREATE FUNCTION statement can omit the return type;
       * in this case the output parameter does not have this "type" field).
       * </pre>
       *
       * <code>.google.cloud.bigquery.v2.StandardSqlDataType type = 2 [(.google.api.field_behavior) = OPTIONAL];</code>
       */
      public com.google.cloud.bigquery.v2.StandardSqlProto.StandardSqlDataType.Builder getTypeBuilder() {
        bitField0_ |= 0x00000002;
        onChanged();
        return getTypeFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       * Optional. The type of this parameter. Absent if not explicitly
       * specified (e.g., CREATE FUNCTION statement can omit the return type;
       * in this case the output parameter does not have this "type" field).
       * </pre>
       *
       * <code>.google.cloud.bigquery.v2.StandardSqlDataType type = 2 [(.google.api.field_behavior) = OPTIONAL];</code>
       */
      public com.google.cloud.bigquery.v2.StandardSqlProto.StandardSqlDataTypeOrBuilder getTypeOrBuilder() {
        if (typeBuilder_ != null) {
          return typeBuilder_.getMessageOrBuilder();
        } else {
          return type_ == null ?
              com.google.cloud.bigquery.v2.StandardSqlProto.StandardSqlDataType.getDefaultInstance() : type_;
        }
      }
      /**
       * <pre>
       * Optional. The type of this parameter. Absent if not explicitly
       * specified (e.g., CREATE FUNCTION statement can omit the return type;
       * in this case the output parameter does not have this "type" field).
       * </pre>
       *
       * <code>.google.cloud.bigquery.v2.StandardSqlDataType type = 2 [(.google.api.field_behavior) = OPTIONAL];</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          com.google.cloud.bigquery.v2.StandardSqlProto.StandardSqlDataType, com.google.cloud.bigquery.v2.StandardSqlProto.StandardSqlDataType.Builder, com.google.cloud.bigquery.v2.StandardSqlProto.StandardSqlDataTypeOrBuilder> 
          getTypeFieldBuilder() {
        if (typeBuilder_ == null) {
          typeBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              com.google.cloud.bigquery.v2.StandardSqlProto.StandardSqlDataType, com.google.cloud.bigquery.v2.StandardSqlProto.StandardSqlDataType.Builder, com.google.cloud.bigquery.v2.StandardSqlProto.StandardSqlDataTypeOrBuilder>(
                  getType(),
                  getParentForChildren(),
                  isClean());
          type_ = null;
        }
        return typeBuilder_;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:google.cloud.bigquery.v2.StandardSqlField)
    }

    // @@protoc_insertion_point(class_scope:google.cloud.bigquery.v2.StandardSqlField)
    private static final com.google.cloud.bigquery.v2.StandardSqlProto.StandardSqlField DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new com.google.cloud.bigquery.v2.StandardSqlProto.StandardSqlField();
    }

    public static com.google.cloud.bigquery.v2.StandardSqlProto.StandardSqlField getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<StandardSqlField>
        PARSER = new com.google.protobuf.AbstractParser<StandardSqlField>() {
      @java.lang.Override
      public StandardSqlField parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        Builder builder = newBuilder();
        try {
          builder.mergeFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.setUnfinishedMessage(builder.buildPartial());
        } catch (com.google.protobuf.UninitializedMessageException e) {
          throw e.asInvalidProtocolBufferException().setUnfinishedMessage(builder.buildPartial());
        } catch (java.io.IOException e) {
          throw new com.google.protobuf.InvalidProtocolBufferException(e)
              .setUnfinishedMessage(builder.buildPartial());
        }
        return builder.buildPartial();
      }
    };

    public static com.google.protobuf.Parser<StandardSqlField> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<StandardSqlField> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.cloud.bigquery.v2.StandardSqlProto.StandardSqlField getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface StandardSqlStructTypeOrBuilder extends
      // @@protoc_insertion_point(interface_extends:google.cloud.bigquery.v2.StandardSqlStructType)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>repeated .google.cloud.bigquery.v2.StandardSqlField fields = 1;</code>
     */
    java.util.List<com.google.cloud.bigquery.v2.StandardSqlProto.StandardSqlField> 
        getFieldsList();
    /**
     * <code>repeated .google.cloud.bigquery.v2.StandardSqlField fields = 1;</code>
     */
    com.google.cloud.bigquery.v2.StandardSqlProto.StandardSqlField getFields(int index);
    /**
     * <code>repeated .google.cloud.bigquery.v2.StandardSqlField fields = 1;</code>
     */
    int getFieldsCount();
    /**
     * <code>repeated .google.cloud.bigquery.v2.StandardSqlField fields = 1;</code>
     */
    java.util.List<? extends com.google.cloud.bigquery.v2.StandardSqlProto.StandardSqlFieldOrBuilder> 
        getFieldsOrBuilderList();
    /**
     * <code>repeated .google.cloud.bigquery.v2.StandardSqlField fields = 1;</code>
     */
    com.google.cloud.bigquery.v2.StandardSqlProto.StandardSqlFieldOrBuilder getFieldsOrBuilder(
        int index);
  }
  /**
   * Protobuf type {@code google.cloud.bigquery.v2.StandardSqlStructType}
   */
  public static final class StandardSqlStructType extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:google.cloud.bigquery.v2.StandardSqlStructType)
      StandardSqlStructTypeOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use StandardSqlStructType.newBuilder() to construct.
    private StandardSqlStructType(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private StandardSqlStructType() {
      fields_ = java.util.Collections.emptyList();
    }

    @java.lang.Override
    @SuppressWarnings({"unused"})
    protected java.lang.Object newInstance(
        UnusedPrivateParameter unused) {
      return new StandardSqlStructType();
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.google.cloud.bigquery.v2.StandardSqlProto.internal_static_google_cloud_bigquery_v2_StandardSqlStructType_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.google.cloud.bigquery.v2.StandardSqlProto.internal_static_google_cloud_bigquery_v2_StandardSqlStructType_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.google.cloud.bigquery.v2.StandardSqlProto.StandardSqlStructType.class, com.google.cloud.bigquery.v2.StandardSqlProto.StandardSqlStructType.Builder.class);
    }

    public static final int FIELDS_FIELD_NUMBER = 1;
    @SuppressWarnings("serial")
    private java.util.List<com.google.cloud.bigquery.v2.StandardSqlProto.StandardSqlField> fields_;
    /**
     * <code>repeated .google.cloud.bigquery.v2.StandardSqlField fields = 1;</code>
     */
    @java.lang.Override
    public java.util.List<com.google.cloud.bigquery.v2.StandardSqlProto.StandardSqlField> getFieldsList() {
      return fields_;
    }
    /**
     * <code>repeated .google.cloud.bigquery.v2.StandardSqlField fields = 1;</code>
     */
    @java.lang.Override
    public java.util.List<? extends com.google.cloud.bigquery.v2.StandardSqlProto.StandardSqlFieldOrBuilder> 
        getFieldsOrBuilderList() {
      return fields_;
    }
    /**
     * <code>repeated .google.cloud.bigquery.v2.StandardSqlField fields = 1;</code>
     */
    @java.lang.Override
    public int getFieldsCount() {
      return fields_.size();
    }
    /**
     * <code>repeated .google.cloud.bigquery.v2.StandardSqlField fields = 1;</code>
     */
    @java.lang.Override
    public com.google.cloud.bigquery.v2.StandardSqlProto.StandardSqlField getFields(int index) {
      return fields_.get(index);
    }
    /**
     * <code>repeated .google.cloud.bigquery.v2.StandardSqlField fields = 1;</code>
     */
    @java.lang.Override
    public com.google.cloud.bigquery.v2.StandardSqlProto.StandardSqlFieldOrBuilder getFieldsOrBuilder(
        int index) {
      return fields_.get(index);
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      for (int i = 0; i < fields_.size(); i++) {
        output.writeMessage(1, fields_.get(i));
      }
      getUnknownFields().writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      for (int i = 0; i < fields_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, fields_.get(i));
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof com.google.cloud.bigquery.v2.StandardSqlProto.StandardSqlStructType)) {
        return super.equals(obj);
      }
      com.google.cloud.bigquery.v2.StandardSqlProto.StandardSqlStructType other = (com.google.cloud.bigquery.v2.StandardSqlProto.StandardSqlStructType) obj;

      if (!getFieldsList()
          .equals(other.getFieldsList())) return false;
      if (!getUnknownFields().equals(other.getUnknownFields())) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      if (getFieldsCount() > 0) {
        hash = (37 * hash) + FIELDS_FIELD_NUMBER;
        hash = (53 * hash) + getFieldsList().hashCode();
      }
      hash = (29 * hash) + getUnknownFields().hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static com.google.cloud.bigquery.v2.StandardSqlProto.StandardSqlStructType parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.google.cloud.bigquery.v2.StandardSqlProto.StandardSqlStructType parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.google.cloud.bigquery.v2.StandardSqlProto.StandardSqlStructType parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.google.cloud.bigquery.v2.StandardSqlProto.StandardSqlStructType parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.google.cloud.bigquery.v2.StandardSqlProto.StandardSqlStructType parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.google.cloud.bigquery.v2.StandardSqlProto.StandardSqlStructType parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.google.cloud.bigquery.v2.StandardSqlProto.StandardSqlStructType parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static com.google.cloud.bigquery.v2.StandardSqlProto.StandardSqlStructType parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static com.google.cloud.bigquery.v2.StandardSqlProto.StandardSqlStructType parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static com.google.cloud.bigquery.v2.StandardSqlProto.StandardSqlStructType parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static com.google.cloud.bigquery.v2.StandardSqlProto.StandardSqlStructType parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static com.google.cloud.bigquery.v2.StandardSqlProto.StandardSqlStructType parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(com.google.cloud.bigquery.v2.StandardSqlProto.StandardSqlStructType prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code google.cloud.bigquery.v2.StandardSqlStructType}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:google.cloud.bigquery.v2.StandardSqlStructType)
        com.google.cloud.bigquery.v2.StandardSqlProto.StandardSqlStructTypeOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return com.google.cloud.bigquery.v2.StandardSqlProto.internal_static_google_cloud_bigquery_v2_StandardSqlStructType_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return com.google.cloud.bigquery.v2.StandardSqlProto.internal_static_google_cloud_bigquery_v2_StandardSqlStructType_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                com.google.cloud.bigquery.v2.StandardSqlProto.StandardSqlStructType.class, com.google.cloud.bigquery.v2.StandardSqlProto.StandardSqlStructType.Builder.class);
      }

      // Construct using com.google.cloud.bigquery.v2.StandardSqlProto.StandardSqlStructType.newBuilder()
      private Builder() {

      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);

      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        bitField0_ = 0;
        if (fieldsBuilder_ == null) {
          fields_ = java.util.Collections.emptyList();
        } else {
          fields_ = null;
          fieldsBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000001);
        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.google.cloud.bigquery.v2.StandardSqlProto.internal_static_google_cloud_bigquery_v2_StandardSqlStructType_descriptor;
      }

      @java.lang.Override
      public com.google.cloud.bigquery.v2.StandardSqlProto.StandardSqlStructType getDefaultInstanceForType() {
        return com.google.cloud.bigquery.v2.StandardSqlProto.StandardSqlStructType.getDefaultInstance();
      }

      @java.lang.Override
      public com.google.cloud.bigquery.v2.StandardSqlProto.StandardSqlStructType build() {
        com.google.cloud.bigquery.v2.StandardSqlProto.StandardSqlStructType result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public com.google.cloud.bigquery.v2.StandardSqlProto.StandardSqlStructType buildPartial() {
        com.google.cloud.bigquery.v2.StandardSqlProto.StandardSqlStructType result = new com.google.cloud.bigquery.v2.StandardSqlProto.StandardSqlStructType(this);
        buildPartialRepeatedFields(result);
        if (bitField0_ != 0) { buildPartial0(result); }
        onBuilt();
        return result;
      }

      private void buildPartialRepeatedFields(com.google.cloud.bigquery.v2.StandardSqlProto.StandardSqlStructType result) {
        if (fieldsBuilder_ == null) {
          if (((bitField0_ & 0x00000001) != 0)) {
            fields_ = java.util.Collections.unmodifiableList(fields_);
            bitField0_ = (bitField0_ & ~0x00000001);
          }
          result.fields_ = fields_;
        } else {
          result.fields_ = fieldsBuilder_.build();
        }
      }

      private void buildPartial0(com.google.cloud.bigquery.v2.StandardSqlProto.StandardSqlStructType result) {
        int from_bitField0_ = bitField0_;
      }

      @java.lang.Override
      public Builder clone() {
        return super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.google.cloud.bigquery.v2.StandardSqlProto.StandardSqlStructType) {
          return mergeFrom((com.google.cloud.bigquery.v2.StandardSqlProto.StandardSqlStructType)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(com.google.cloud.bigquery.v2.StandardSqlProto.StandardSqlStructType other) {
        if (other == com.google.cloud.bigquery.v2.StandardSqlProto.StandardSqlStructType.getDefaultInstance()) return this;
        if (fieldsBuilder_ == null) {
          if (!other.fields_.isEmpty()) {
            if (fields_.isEmpty()) {
              fields_ = other.fields_;
              bitField0_ = (bitField0_ & ~0x00000001);
            } else {
              ensureFieldsIsMutable();
              fields_.addAll(other.fields_);
            }
            onChanged();
          }
        } else {
          if (!other.fields_.isEmpty()) {
            if (fieldsBuilder_.isEmpty()) {
              fieldsBuilder_.dispose();
              fieldsBuilder_ = null;
              fields_ = other.fields_;
              bitField0_ = (bitField0_ & ~0x00000001);
              fieldsBuilder_ = 
                com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?
                   getFieldsFieldBuilder() : null;
            } else {
              fieldsBuilder_.addAllMessages(other.fields_);
            }
          }
        }
        this.mergeUnknownFields(other.getUnknownFields());
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        if (extensionRegistry == null) {
          throw new java.lang.NullPointerException();
        }
        try {
          boolean done = false;
          while (!done) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                done = true;
                break;
              case 10: {
                com.google.cloud.bigquery.v2.StandardSqlProto.StandardSqlField m =
                    input.readMessage(
                        com.google.cloud.bigquery.v2.StandardSqlProto.StandardSqlField.parser(),
                        extensionRegistry);
                if (fieldsBuilder_ == null) {
                  ensureFieldsIsMutable();
                  fields_.add(m);
                } else {
                  fieldsBuilder_.addMessage(m);
                }
                break;
              } // case 10
              default: {
                if (!super.parseUnknownField(input, extensionRegistry, tag)) {
                  done = true; // was an endgroup tag
                }
                break;
              } // default:
            } // switch (tag)
          } // while (!done)
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.unwrapIOException();
        } finally {
          onChanged();
        } // finally
        return this;
      }
      private int bitField0_;

      private java.util.List<com.google.cloud.bigquery.v2.StandardSqlProto.StandardSqlField> fields_ =
        java.util.Collections.emptyList();
      private void ensureFieldsIsMutable() {
        if (!((bitField0_ & 0x00000001) != 0)) {
          fields_ = new java.util.ArrayList<com.google.cloud.bigquery.v2.StandardSqlProto.StandardSqlField>(fields_);
          bitField0_ |= 0x00000001;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilderV3<
          com.google.cloud.bigquery.v2.StandardSqlProto.StandardSqlField, com.google.cloud.bigquery.v2.StandardSqlProto.StandardSqlField.Builder, com.google.cloud.bigquery.v2.StandardSqlProto.StandardSqlFieldOrBuilder> fieldsBuilder_;

      /**
       * <code>repeated .google.cloud.bigquery.v2.StandardSqlField fields = 1;</code>
       */
      public java.util.List<com.google.cloud.bigquery.v2.StandardSqlProto.StandardSqlField> getFieldsList() {
        if (fieldsBuilder_ == null) {
          return java.util.Collections.unmodifiableList(fields_);
        } else {
          return fieldsBuilder_.getMessageList();
        }
      }
      /**
       * <code>repeated .google.cloud.bigquery.v2.StandardSqlField fields = 1;</code>
       */
      public int getFieldsCount() {
        if (fieldsBuilder_ == null) {
          return fields_.size();
        } else {
          return fieldsBuilder_.getCount();
        }
      }
      /**
       * <code>repeated .google.cloud.bigquery.v2.StandardSqlField fields = 1;</code>
       */
      public com.google.cloud.bigquery.v2.StandardSqlProto.StandardSqlField getFields(int index) {
        if (fieldsBuilder_ == null) {
          return fields_.get(index);
        } else {
          return fieldsBuilder_.getMessage(index);
        }
      }
      /**
       * <code>repeated .google.cloud.bigquery.v2.StandardSqlField fields = 1;</code>
       */
      public Builder setFields(
          int index, com.google.cloud.bigquery.v2.StandardSqlProto.StandardSqlField value) {
        if (fieldsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureFieldsIsMutable();
          fields_.set(index, value);
          onChanged();
        } else {
          fieldsBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .google.cloud.bigquery.v2.StandardSqlField fields = 1;</code>
       */
      public Builder setFields(
          int index, com.google.cloud.bigquery.v2.StandardSqlProto.StandardSqlField.Builder builderForValue) {
        if (fieldsBuilder_ == null) {
          ensureFieldsIsMutable();
          fields_.set(index, builderForValue.build());
          onChanged();
        } else {
          fieldsBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .google.cloud.bigquery.v2.StandardSqlField fields = 1;</code>
       */
      public Builder addFields(com.google.cloud.bigquery.v2.StandardSqlProto.StandardSqlField value) {
        if (fieldsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureFieldsIsMutable();
          fields_.add(value);
          onChanged();
        } else {
          fieldsBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <code>repeated .google.cloud.bigquery.v2.StandardSqlField fields = 1;</code>
       */
      public Builder addFields(
          int index, com.google.cloud.bigquery.v2.StandardSqlProto.StandardSqlField value) {
        if (fieldsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureFieldsIsMutable();
          fields_.add(index, value);
          onChanged();
        } else {
          fieldsBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .google.cloud.bigquery.v2.StandardSqlField fields = 1;</code>
       */
      public Builder addFields(
          com.google.cloud.bigquery.v2.StandardSqlProto.StandardSqlField.Builder builderForValue) {
        if (fieldsBuilder_ == null) {
          ensureFieldsIsMutable();
          fields_.add(builderForValue.build());
          onChanged();
        } else {
          fieldsBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .google.cloud.bigquery.v2.StandardSqlField fields = 1;</code>
       */
      public Builder addFields(
          int index, com.google.cloud.bigquery.v2.StandardSqlProto.StandardSqlField.Builder builderForValue) {
        if (fieldsBuilder_ == null) {
          ensureFieldsIsMutable();
          fields_.add(index, builderForValue.build());
          onChanged();
        } else {
          fieldsBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .google.cloud.bigquery.v2.StandardSqlField fields = 1;</code>
       */
      public Builder addAllFields(
          java.lang.Iterable<? extends com.google.cloud.bigquery.v2.StandardSqlProto.StandardSqlField> values) {
        if (fieldsBuilder_ == null) {
          ensureFieldsIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
              values, fields_);
          onChanged();
        } else {
          fieldsBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <code>repeated .google.cloud.bigquery.v2.StandardSqlField fields = 1;</code>
       */
      public Builder clearFields() {
        if (fieldsBuilder_ == null) {
          fields_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000001);
          onChanged();
        } else {
          fieldsBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>repeated .google.cloud.bigquery.v2.StandardSqlField fields = 1;</code>
       */
      public Builder removeFields(int index) {
        if (fieldsBuilder_ == null) {
          ensureFieldsIsMutable();
          fields_.remove(index);
          onChanged();
        } else {
          fieldsBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <code>repeated .google.cloud.bigquery.v2.StandardSqlField fields = 1;</code>
       */
      public com.google.cloud.bigquery.v2.StandardSqlProto.StandardSqlField.Builder getFieldsBuilder(
          int index) {
        return getFieldsFieldBuilder().getBuilder(index);
      }
      /**
       * <code>repeated .google.cloud.bigquery.v2.StandardSqlField fields = 1;</code>
       */
      public com.google.cloud.bigquery.v2.StandardSqlProto.StandardSqlFieldOrBuilder getFieldsOrBuilder(
          int index) {
        if (fieldsBuilder_ == null) {
          return fields_.get(index);  } else {
          return fieldsBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <code>repeated .google.cloud.bigquery.v2.StandardSqlField fields = 1;</code>
       */
      public java.util.List<? extends com.google.cloud.bigquery.v2.StandardSqlProto.StandardSqlFieldOrBuilder> 
           getFieldsOrBuilderList() {
        if (fieldsBuilder_ != null) {
          return fieldsBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(fields_);
        }
      }
      /**
       * <code>repeated .google.cloud.bigquery.v2.StandardSqlField fields = 1;</code>
       */
      public com.google.cloud.bigquery.v2.StandardSqlProto.StandardSqlField.Builder addFieldsBuilder() {
        return getFieldsFieldBuilder().addBuilder(
            com.google.cloud.bigquery.v2.StandardSqlProto.StandardSqlField.getDefaultInstance());
      }
      /**
       * <code>repeated .google.cloud.bigquery.v2.StandardSqlField fields = 1;</code>
       */
      public com.google.cloud.bigquery.v2.StandardSqlProto.StandardSqlField.Builder addFieldsBuilder(
          int index) {
        return getFieldsFieldBuilder().addBuilder(
            index, com.google.cloud.bigquery.v2.StandardSqlProto.StandardSqlField.getDefaultInstance());
      }
      /**
       * <code>repeated .google.cloud.bigquery.v2.StandardSqlField fields = 1;</code>
       */
      public java.util.List<com.google.cloud.bigquery.v2.StandardSqlProto.StandardSqlField.Builder> 
           getFieldsBuilderList() {
        return getFieldsFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilderV3<
          com.google.cloud.bigquery.v2.StandardSqlProto.StandardSqlField, com.google.cloud.bigquery.v2.StandardSqlProto.StandardSqlField.Builder, com.google.cloud.bigquery.v2.StandardSqlProto.StandardSqlFieldOrBuilder> 
          getFieldsFieldBuilder() {
        if (fieldsBuilder_ == null) {
          fieldsBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<
              com.google.cloud.bigquery.v2.StandardSqlProto.StandardSqlField, com.google.cloud.bigquery.v2.StandardSqlProto.StandardSqlField.Builder, com.google.cloud.bigquery.v2.StandardSqlProto.StandardSqlFieldOrBuilder>(
                  fields_,
                  ((bitField0_ & 0x00000001) != 0),
                  getParentForChildren(),
                  isClean());
          fields_ = null;
        }
        return fieldsBuilder_;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:google.cloud.bigquery.v2.StandardSqlStructType)
    }

    // @@protoc_insertion_point(class_scope:google.cloud.bigquery.v2.StandardSqlStructType)
    private static final com.google.cloud.bigquery.v2.StandardSqlProto.StandardSqlStructType DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new com.google.cloud.bigquery.v2.StandardSqlProto.StandardSqlStructType();
    }

    public static com.google.cloud.bigquery.v2.StandardSqlProto.StandardSqlStructType getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<StandardSqlStructType>
        PARSER = new com.google.protobuf.AbstractParser<StandardSqlStructType>() {
      @java.lang.Override
      public StandardSqlStructType parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        Builder builder = newBuilder();
        try {
          builder.mergeFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.setUnfinishedMessage(builder.buildPartial());
        } catch (com.google.protobuf.UninitializedMessageException e) {
          throw e.asInvalidProtocolBufferException().setUnfinishedMessage(builder.buildPartial());
        } catch (java.io.IOException e) {
          throw new com.google.protobuf.InvalidProtocolBufferException(e)
              .setUnfinishedMessage(builder.buildPartial());
        }
        return builder.buildPartial();
      }
    };

    public static com.google.protobuf.Parser<StandardSqlStructType> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<StandardSqlStructType> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.cloud.bigquery.v2.StandardSqlProto.StandardSqlStructType getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface StandardSqlTableTypeOrBuilder extends
      // @@protoc_insertion_point(interface_extends:google.cloud.bigquery.v2.StandardSqlTableType)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <pre>
     * The columns in this table type
     * </pre>
     *
     * <code>repeated .google.cloud.bigquery.v2.StandardSqlField columns = 1;</code>
     */
    java.util.List<com.google.cloud.bigquery.v2.StandardSqlProto.StandardSqlField> 
        getColumnsList();
    /**
     * <pre>
     * The columns in this table type
     * </pre>
     *
     * <code>repeated .google.cloud.bigquery.v2.StandardSqlField columns = 1;</code>
     */
    com.google.cloud.bigquery.v2.StandardSqlProto.StandardSqlField getColumns(int index);
    /**
     * <pre>
     * The columns in this table type
     * </pre>
     *
     * <code>repeated .google.cloud.bigquery.v2.StandardSqlField columns = 1;</code>
     */
    int getColumnsCount();
    /**
     * <pre>
     * The columns in this table type
     * </pre>
     *
     * <code>repeated .google.cloud.bigquery.v2.StandardSqlField columns = 1;</code>
     */
    java.util.List<? extends com.google.cloud.bigquery.v2.StandardSqlProto.StandardSqlFieldOrBuilder> 
        getColumnsOrBuilderList();
    /**
     * <pre>
     * The columns in this table type
     * </pre>
     *
     * <code>repeated .google.cloud.bigquery.v2.StandardSqlField columns = 1;</code>
     */
    com.google.cloud.bigquery.v2.StandardSqlProto.StandardSqlFieldOrBuilder getColumnsOrBuilder(
        int index);
  }
  /**
   * <pre>
   * A table type
   * </pre>
   *
   * Protobuf type {@code google.cloud.bigquery.v2.StandardSqlTableType}
   */
  public static final class StandardSqlTableType extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:google.cloud.bigquery.v2.StandardSqlTableType)
      StandardSqlTableTypeOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use StandardSqlTableType.newBuilder() to construct.
    private StandardSqlTableType(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private StandardSqlTableType() {
      columns_ = java.util.Collections.emptyList();
    }

    @java.lang.Override
    @SuppressWarnings({"unused"})
    protected java.lang.Object newInstance(
        UnusedPrivateParameter unused) {
      return new StandardSqlTableType();
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.google.cloud.bigquery.v2.StandardSqlProto.internal_static_google_cloud_bigquery_v2_StandardSqlTableType_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.google.cloud.bigquery.v2.StandardSqlProto.internal_static_google_cloud_bigquery_v2_StandardSqlTableType_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.google.cloud.bigquery.v2.StandardSqlProto.StandardSqlTableType.class, com.google.cloud.bigquery.v2.StandardSqlProto.StandardSqlTableType.Builder.class);
    }

    public static final int COLUMNS_FIELD_NUMBER = 1;
    @SuppressWarnings("serial")
    private java.util.List<com.google.cloud.bigquery.v2.StandardSqlProto.StandardSqlField> columns_;
    /**
     * <pre>
     * The columns in this table type
     * </pre>
     *
     * <code>repeated .google.cloud.bigquery.v2.StandardSqlField columns = 1;</code>
     */
    @java.lang.Override
    public java.util.List<com.google.cloud.bigquery.v2.StandardSqlProto.StandardSqlField> getColumnsList() {
      return columns_;
    }
    /**
     * <pre>
     * The columns in this table type
     * </pre>
     *
     * <code>repeated .google.cloud.bigquery.v2.StandardSqlField columns = 1;</code>
     */
    @java.lang.Override
    public java.util.List<? extends com.google.cloud.bigquery.v2.StandardSqlProto.StandardSqlFieldOrBuilder> 
        getColumnsOrBuilderList() {
      return columns_;
    }
    /**
     * <pre>
     * The columns in this table type
     * </pre>
     *
     * <code>repeated .google.cloud.bigquery.v2.StandardSqlField columns = 1;</code>
     */
    @java.lang.Override
    public int getColumnsCount() {
      return columns_.size();
    }
    /**
     * <pre>
     * The columns in this table type
     * </pre>
     *
     * <code>repeated .google.cloud.bigquery.v2.StandardSqlField columns = 1;</code>
     */
    @java.lang.Override
    public com.google.cloud.bigquery.v2.StandardSqlProto.StandardSqlField getColumns(int index) {
      return columns_.get(index);
    }
    /**
     * <pre>
     * The columns in this table type
     * </pre>
     *
     * <code>repeated .google.cloud.bigquery.v2.StandardSqlField columns = 1;</code>
     */
    @java.lang.Override
    public com.google.cloud.bigquery.v2.StandardSqlProto.StandardSqlFieldOrBuilder getColumnsOrBuilder(
        int index) {
      return columns_.get(index);
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      for (int i = 0; i < columns_.size(); i++) {
        output.writeMessage(1, columns_.get(i));
      }
      getUnknownFields().writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      for (int i = 0; i < columns_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, columns_.get(i));
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof com.google.cloud.bigquery.v2.StandardSqlProto.StandardSqlTableType)) {
        return super.equals(obj);
      }
      com.google.cloud.bigquery.v2.StandardSqlProto.StandardSqlTableType other = (com.google.cloud.bigquery.v2.StandardSqlProto.StandardSqlTableType) obj;

      if (!getColumnsList()
          .equals(other.getColumnsList())) return false;
      if (!getUnknownFields().equals(other.getUnknownFields())) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      if (getColumnsCount() > 0) {
        hash = (37 * hash) + COLUMNS_FIELD_NUMBER;
        hash = (53 * hash) + getColumnsList().hashCode();
      }
      hash = (29 * hash) + getUnknownFields().hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static com.google.cloud.bigquery.v2.StandardSqlProto.StandardSqlTableType parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.google.cloud.bigquery.v2.StandardSqlProto.StandardSqlTableType parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.google.cloud.bigquery.v2.StandardSqlProto.StandardSqlTableType parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.google.cloud.bigquery.v2.StandardSqlProto.StandardSqlTableType parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.google.cloud.bigquery.v2.StandardSqlProto.StandardSqlTableType parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.google.cloud.bigquery.v2.StandardSqlProto.StandardSqlTableType parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.google.cloud.bigquery.v2.StandardSqlProto.StandardSqlTableType parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static com.google.cloud.bigquery.v2.StandardSqlProto.StandardSqlTableType parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static com.google.cloud.bigquery.v2.StandardSqlProto.StandardSqlTableType parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static com.google.cloud.bigquery.v2.StandardSqlProto.StandardSqlTableType parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static com.google.cloud.bigquery.v2.StandardSqlProto.StandardSqlTableType parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static com.google.cloud.bigquery.v2.StandardSqlProto.StandardSqlTableType parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(com.google.cloud.bigquery.v2.StandardSqlProto.StandardSqlTableType prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * <pre>
     * A table type
     * </pre>
     *
     * Protobuf type {@code google.cloud.bigquery.v2.StandardSqlTableType}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:google.cloud.bigquery.v2.StandardSqlTableType)
        com.google.cloud.bigquery.v2.StandardSqlProto.StandardSqlTableTypeOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return com.google.cloud.bigquery.v2.StandardSqlProto.internal_static_google_cloud_bigquery_v2_StandardSqlTableType_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return com.google.cloud.bigquery.v2.StandardSqlProto.internal_static_google_cloud_bigquery_v2_StandardSqlTableType_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                com.google.cloud.bigquery.v2.StandardSqlProto.StandardSqlTableType.class, com.google.cloud.bigquery.v2.StandardSqlProto.StandardSqlTableType.Builder.class);
      }

      // Construct using com.google.cloud.bigquery.v2.StandardSqlProto.StandardSqlTableType.newBuilder()
      private Builder() {

      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);

      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        bitField0_ = 0;
        if (columnsBuilder_ == null) {
          columns_ = java.util.Collections.emptyList();
        } else {
          columns_ = null;
          columnsBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000001);
        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.google.cloud.bigquery.v2.StandardSqlProto.internal_static_google_cloud_bigquery_v2_StandardSqlTableType_descriptor;
      }

      @java.lang.Override
      public com.google.cloud.bigquery.v2.StandardSqlProto.StandardSqlTableType getDefaultInstanceForType() {
        return com.google.cloud.bigquery.v2.StandardSqlProto.StandardSqlTableType.getDefaultInstance();
      }

      @java.lang.Override
      public com.google.cloud.bigquery.v2.StandardSqlProto.StandardSqlTableType build() {
        com.google.cloud.bigquery.v2.StandardSqlProto.StandardSqlTableType result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public com.google.cloud.bigquery.v2.StandardSqlProto.StandardSqlTableType buildPartial() {
        com.google.cloud.bigquery.v2.StandardSqlProto.StandardSqlTableType result = new com.google.cloud.bigquery.v2.StandardSqlProto.StandardSqlTableType(this);
        buildPartialRepeatedFields(result);
        if (bitField0_ != 0) { buildPartial0(result); }
        onBuilt();
        return result;
      }

      private void buildPartialRepeatedFields(com.google.cloud.bigquery.v2.StandardSqlProto.StandardSqlTableType result) {
        if (columnsBuilder_ == null) {
          if (((bitField0_ & 0x00000001) != 0)) {
            columns_ = java.util.Collections.unmodifiableList(columns_);
            bitField0_ = (bitField0_ & ~0x00000001);
          }
          result.columns_ = columns_;
        } else {
          result.columns_ = columnsBuilder_.build();
        }
      }

      private void buildPartial0(com.google.cloud.bigquery.v2.StandardSqlProto.StandardSqlTableType result) {
        int from_bitField0_ = bitField0_;
      }

      @java.lang.Override
      public Builder clone() {
        return super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.google.cloud.bigquery.v2.StandardSqlProto.StandardSqlTableType) {
          return mergeFrom((com.google.cloud.bigquery.v2.StandardSqlProto.StandardSqlTableType)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(com.google.cloud.bigquery.v2.StandardSqlProto.StandardSqlTableType other) {
        if (other == com.google.cloud.bigquery.v2.StandardSqlProto.StandardSqlTableType.getDefaultInstance()) return this;
        if (columnsBuilder_ == null) {
          if (!other.columns_.isEmpty()) {
            if (columns_.isEmpty()) {
              columns_ = other.columns_;
              bitField0_ = (bitField0_ & ~0x00000001);
            } else {
              ensureColumnsIsMutable();
              columns_.addAll(other.columns_);
            }
            onChanged();
          }
        } else {
          if (!other.columns_.isEmpty()) {
            if (columnsBuilder_.isEmpty()) {
              columnsBuilder_.dispose();
              columnsBuilder_ = null;
              columns_ = other.columns_;
              bitField0_ = (bitField0_ & ~0x00000001);
              columnsBuilder_ = 
                com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?
                   getColumnsFieldBuilder() : null;
            } else {
              columnsBuilder_.addAllMessages(other.columns_);
            }
          }
        }
        this.mergeUnknownFields(other.getUnknownFields());
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        if (extensionRegistry == null) {
          throw new java.lang.NullPointerException();
        }
        try {
          boolean done = false;
          while (!done) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                done = true;
                break;
              case 10: {
                com.google.cloud.bigquery.v2.StandardSqlProto.StandardSqlField m =
                    input.readMessage(
                        com.google.cloud.bigquery.v2.StandardSqlProto.StandardSqlField.parser(),
                        extensionRegistry);
                if (columnsBuilder_ == null) {
                  ensureColumnsIsMutable();
                  columns_.add(m);
                } else {
                  columnsBuilder_.addMessage(m);
                }
                break;
              } // case 10
              default: {
                if (!super.parseUnknownField(input, extensionRegistry, tag)) {
                  done = true; // was an endgroup tag
                }
                break;
              } // default:
            } // switch (tag)
          } // while (!done)
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.unwrapIOException();
        } finally {
          onChanged();
        } // finally
        return this;
      }
      private int bitField0_;

      private java.util.List<com.google.cloud.bigquery.v2.StandardSqlProto.StandardSqlField> columns_ =
        java.util.Collections.emptyList();
      private void ensureColumnsIsMutable() {
        if (!((bitField0_ & 0x00000001) != 0)) {
          columns_ = new java.util.ArrayList<com.google.cloud.bigquery.v2.StandardSqlProto.StandardSqlField>(columns_);
          bitField0_ |= 0x00000001;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilderV3<
          com.google.cloud.bigquery.v2.StandardSqlProto.StandardSqlField, com.google.cloud.bigquery.v2.StandardSqlProto.StandardSqlField.Builder, com.google.cloud.bigquery.v2.StandardSqlProto.StandardSqlFieldOrBuilder> columnsBuilder_;

      /**
       * <pre>
       * The columns in this table type
       * </pre>
       *
       * <code>repeated .google.cloud.bigquery.v2.StandardSqlField columns = 1;</code>
       */
      public java.util.List<com.google.cloud.bigquery.v2.StandardSqlProto.StandardSqlField> getColumnsList() {
        if (columnsBuilder_ == null) {
          return java.util.Collections.unmodifiableList(columns_);
        } else {
          return columnsBuilder_.getMessageList();
        }
      }
      /**
       * <pre>
       * The columns in this table type
       * </pre>
       *
       * <code>repeated .google.cloud.bigquery.v2.StandardSqlField columns = 1;</code>
       */
      public int getColumnsCount() {
        if (columnsBuilder_ == null) {
          return columns_.size();
        } else {
          return columnsBuilder_.getCount();
        }
      }
      /**
       * <pre>
       * The columns in this table type
       * </pre>
       *
       * <code>repeated .google.cloud.bigquery.v2.StandardSqlField columns = 1;</code>
       */
      public com.google.cloud.bigquery.v2.StandardSqlProto.StandardSqlField getColumns(int index) {
        if (columnsBuilder_ == null) {
          return columns_.get(index);
        } else {
          return columnsBuilder_.getMessage(index);
        }
      }
      /**
       * <pre>
       * The columns in this table type
       * </pre>
       *
       * <code>repeated .google.cloud.bigquery.v2.StandardSqlField columns = 1;</code>
       */
      public Builder setColumns(
          int index, com.google.cloud.bigquery.v2.StandardSqlProto.StandardSqlField value) {
        if (columnsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureColumnsIsMutable();
          columns_.set(index, value);
          onChanged();
        } else {
          columnsBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <pre>
       * The columns in this table type
       * </pre>
       *
       * <code>repeated .google.cloud.bigquery.v2.StandardSqlField columns = 1;</code>
       */
      public Builder setColumns(
          int index, com.google.cloud.bigquery.v2.StandardSqlProto.StandardSqlField.Builder builderForValue) {
        if (columnsBuilder_ == null) {
          ensureColumnsIsMutable();
          columns_.set(index, builderForValue.build());
          onChanged();
        } else {
          columnsBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       * The columns in this table type
       * </pre>
       *
       * <code>repeated .google.cloud.bigquery.v2.StandardSqlField columns = 1;</code>
       */
      public Builder addColumns(com.google.cloud.bigquery.v2.StandardSqlProto.StandardSqlField value) {
        if (columnsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureColumnsIsMutable();
          columns_.add(value);
          onChanged();
        } else {
          columnsBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <pre>
       * The columns in this table type
       * </pre>
       *
       * <code>repeated .google.cloud.bigquery.v2.StandardSqlField columns = 1;</code>
       */
      public Builder addColumns(
          int index, com.google.cloud.bigquery.v2.StandardSqlProto.StandardSqlField value) {
        if (columnsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureColumnsIsMutable();
          columns_.add(index, value);
          onChanged();
        } else {
          columnsBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <pre>
       * The columns in this table type
       * </pre>
       *
       * <code>repeated .google.cloud.bigquery.v2.StandardSqlField columns = 1;</code>
       */
      public Builder addColumns(
          com.google.cloud.bigquery.v2.StandardSqlProto.StandardSqlField.Builder builderForValue) {
        if (columnsBuilder_ == null) {
          ensureColumnsIsMutable();
          columns_.add(builderForValue.build());
          onChanged();
        } else {
          columnsBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       * The columns in this table type
       * </pre>
       *
       * <code>repeated .google.cloud.bigquery.v2.StandardSqlField columns = 1;</code>
       */
      public Builder addColumns(
          int index, com.google.cloud.bigquery.v2.StandardSqlProto.StandardSqlField.Builder builderForValue) {
        if (columnsBuilder_ == null) {
          ensureColumnsIsMutable();
          columns_.add(index, builderForValue.build());
          onChanged();
        } else {
          columnsBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       * The columns in this table type
       * </pre>
       *
       * <code>repeated .google.cloud.bigquery.v2.StandardSqlField columns = 1;</code>
       */
      public Builder addAllColumns(
          java.lang.Iterable<? extends com.google.cloud.bigquery.v2.StandardSqlProto.StandardSqlField> values) {
        if (columnsBuilder_ == null) {
          ensureColumnsIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
              values, columns_);
          onChanged();
        } else {
          columnsBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <pre>
       * The columns in this table type
       * </pre>
       *
       * <code>repeated .google.cloud.bigquery.v2.StandardSqlField columns = 1;</code>
       */
      public Builder clearColumns() {
        if (columnsBuilder_ == null) {
          columns_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000001);
          onChanged();
        } else {
          columnsBuilder_.clear();
        }
        return this;
      }
      /**
       * <pre>
       * The columns in this table type
       * </pre>
       *
       * <code>repeated .google.cloud.bigquery.v2.StandardSqlField columns = 1;</code>
       */
      public Builder removeColumns(int index) {
        if (columnsBuilder_ == null) {
          ensureColumnsIsMutable();
          columns_.remove(index);
          onChanged();
        } else {
          columnsBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <pre>
       * The columns in this table type
       * </pre>
       *
       * <code>repeated .google.cloud.bigquery.v2.StandardSqlField columns = 1;</code>
       */
      public com.google.cloud.bigquery.v2.StandardSqlProto.StandardSqlField.Builder getColumnsBuilder(
          int index) {
        return getColumnsFieldBuilder().getBuilder(index);
      }
      /**
       * <pre>
       * The columns in this table type
       * </pre>
       *
       * <code>repeated .google.cloud.bigquery.v2.StandardSqlField columns = 1;</code>
       */
      public com.google.cloud.bigquery.v2.StandardSqlProto.StandardSqlFieldOrBuilder getColumnsOrBuilder(
          int index) {
        if (columnsBuilder_ == null) {
          return columns_.get(index);  } else {
          return columnsBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <pre>
       * The columns in this table type
       * </pre>
       *
       * <code>repeated .google.cloud.bigquery.v2.StandardSqlField columns = 1;</code>
       */
      public java.util.List<? extends com.google.cloud.bigquery.v2.StandardSqlProto.StandardSqlFieldOrBuilder> 
           getColumnsOrBuilderList() {
        if (columnsBuilder_ != null) {
          return columnsBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(columns_);
        }
      }
      /**
       * <pre>
       * The columns in this table type
       * </pre>
       *
       * <code>repeated .google.cloud.bigquery.v2.StandardSqlField columns = 1;</code>
       */
      public com.google.cloud.bigquery.v2.StandardSqlProto.StandardSqlField.Builder addColumnsBuilder() {
        return getColumnsFieldBuilder().addBuilder(
            com.google.cloud.bigquery.v2.StandardSqlProto.StandardSqlField.getDefaultInstance());
      }
      /**
       * <pre>
       * The columns in this table type
       * </pre>
       *
       * <code>repeated .google.cloud.bigquery.v2.StandardSqlField columns = 1;</code>
       */
      public com.google.cloud.bigquery.v2.StandardSqlProto.StandardSqlField.Builder addColumnsBuilder(
          int index) {
        return getColumnsFieldBuilder().addBuilder(
            index, com.google.cloud.bigquery.v2.StandardSqlProto.StandardSqlField.getDefaultInstance());
      }
      /**
       * <pre>
       * The columns in this table type
       * </pre>
       *
       * <code>repeated .google.cloud.bigquery.v2.StandardSqlField columns = 1;</code>
       */
      public java.util.List<com.google.cloud.bigquery.v2.StandardSqlProto.StandardSqlField.Builder> 
           getColumnsBuilderList() {
        return getColumnsFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilderV3<
          com.google.cloud.bigquery.v2.StandardSqlProto.StandardSqlField, com.google.cloud.bigquery.v2.StandardSqlProto.StandardSqlField.Builder, com.google.cloud.bigquery.v2.StandardSqlProto.StandardSqlFieldOrBuilder> 
          getColumnsFieldBuilder() {
        if (columnsBuilder_ == null) {
          columnsBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<
              com.google.cloud.bigquery.v2.StandardSqlProto.StandardSqlField, com.google.cloud.bigquery.v2.StandardSqlProto.StandardSqlField.Builder, com.google.cloud.bigquery.v2.StandardSqlProto.StandardSqlFieldOrBuilder>(
                  columns_,
                  ((bitField0_ & 0x00000001) != 0),
                  getParentForChildren(),
                  isClean());
          columns_ = null;
        }
        return columnsBuilder_;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:google.cloud.bigquery.v2.StandardSqlTableType)
    }

    // @@protoc_insertion_point(class_scope:google.cloud.bigquery.v2.StandardSqlTableType)
    private static final com.google.cloud.bigquery.v2.StandardSqlProto.StandardSqlTableType DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new com.google.cloud.bigquery.v2.StandardSqlProto.StandardSqlTableType();
    }

    public static com.google.cloud.bigquery.v2.StandardSqlProto.StandardSqlTableType getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<StandardSqlTableType>
        PARSER = new com.google.protobuf.AbstractParser<StandardSqlTableType>() {
      @java.lang.Override
      public StandardSqlTableType parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        Builder builder = newBuilder();
        try {
          builder.mergeFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.setUnfinishedMessage(builder.buildPartial());
        } catch (com.google.protobuf.UninitializedMessageException e) {
          throw e.asInvalidProtocolBufferException().setUnfinishedMessage(builder.buildPartial());
        } catch (java.io.IOException e) {
          throw new com.google.protobuf.InvalidProtocolBufferException(e)
              .setUnfinishedMessage(builder.buildPartial());
        }
        return builder.buildPartial();
      }
    };

    public static com.google.protobuf.Parser<StandardSqlTableType> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<StandardSqlTableType> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.cloud.bigquery.v2.StandardSqlProto.StandardSqlTableType getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_google_cloud_bigquery_v2_StandardSqlDataType_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_google_cloud_bigquery_v2_StandardSqlDataType_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_google_cloud_bigquery_v2_StandardSqlField_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_google_cloud_bigquery_v2_StandardSqlField_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_google_cloud_bigquery_v2_StandardSqlStructType_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_google_cloud_bigquery_v2_StandardSqlStructType_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_google_cloud_bigquery_v2_StandardSqlTableType_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_google_cloud_bigquery_v2_StandardSqlTableType_fieldAccessorTable;

  public static com.google.protobuf.Descriptors.FileDescriptor
      getDescriptor() {
    return descriptor;
  }
  private static  com.google.protobuf.Descriptors.FileDescriptor
      descriptor;
  static {
    java.lang.String[] descriptorData = {
      "\n+google/cloud/bigquery/v2/standard_sql." +
      "proto\022\030google.cloud.bigquery.v2\032\037google/" +
      "api/field_behavior.proto\"\363\003\n\023StandardSql" +
      "DataType\022N\n\ttype_kind\030\001 \001(\01626.google.clo" +
      "ud.bigquery.v2.StandardSqlDataType.TypeK" +
      "indB\003\340A\002\022K\n\022array_element_type\030\002 \001(\0132-.g" +
      "oogle.cloud.bigquery.v2.StandardSqlDataT" +
      "ypeH\000\022F\n\013struct_type\030\003 \001(\0132/.google.clou" +
      "d.bigquery.v2.StandardSqlStructTypeH\000\"\352\001" +
      "\n\010TypeKind\022\031\n\025TYPE_KIND_UNSPECIFIED\020\000\022\t\n" +
      "\005INT64\020\002\022\010\n\004BOOL\020\005\022\013\n\007FLOAT64\020\007\022\n\n\006STRIN" +
      "G\020\010\022\t\n\005BYTES\020\t\022\r\n\tTIMESTAMP\020\023\022\010\n\004DATE\020\n\022" +
      "\010\n\004TIME\020\024\022\014\n\010DATETIME\020\025\022\014\n\010INTERVAL\020\032\022\r\n" +
      "\tGEOGRAPHY\020\026\022\013\n\007NUMERIC\020\027\022\016\n\nBIGNUMERIC\020" +
      "\030\022\010\n\004JSON\020\031\022\t\n\005ARRAY\020\020\022\n\n\006STRUCT\020\021B\n\n\010su" +
      "b_type\"g\n\020StandardSqlField\022\021\n\004name\030\001 \001(\t" +
      "B\003\340A\001\022@\n\004type\030\002 \001(\0132-.google.cloud.bigqu" +
      "ery.v2.StandardSqlDataTypeB\003\340A\001\"S\n\025Stand" +
      "ardSqlStructType\022:\n\006fields\030\001 \003(\0132*.googl" +
      "e.cloud.bigquery.v2.StandardSqlField\"S\n\024" +
      "StandardSqlTableType\022;\n\007columns\030\001 \003(\0132*." +
      "google.cloud.bigquery.v2.StandardSqlFiel" +
      "dBr\n\034com.google.cloud.bigquery.v2B\020Stand" +
      "ardSqlProtoZ@google.golang.org/genproto/" +
      "googleapis/cloud/bigquery/v2;bigqueryb\006p" +
      "roto3"
    };
    descriptor = com.google.protobuf.Descriptors.FileDescriptor
      .internalBuildGeneratedFileFrom(descriptorData,
        new com.google.protobuf.Descriptors.FileDescriptor[] {
          com.google.api.FieldBehaviorProto.getDescriptor(),
        });
    internal_static_google_cloud_bigquery_v2_StandardSqlDataType_descriptor =
      getDescriptor().getMessageTypes().get(0);
    internal_static_google_cloud_bigquery_v2_StandardSqlDataType_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_google_cloud_bigquery_v2_StandardSqlDataType_descriptor,
        new java.lang.String[] { "TypeKind", "ArrayElementType", "StructType", "SubType", });
    internal_static_google_cloud_bigquery_v2_StandardSqlField_descriptor =
      getDescriptor().getMessageTypes().get(1);
    internal_static_google_cloud_bigquery_v2_StandardSqlField_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_google_cloud_bigquery_v2_StandardSqlField_descriptor,
        new java.lang.String[] { "Name", "Type", });
    internal_static_google_cloud_bigquery_v2_StandardSqlStructType_descriptor =
      getDescriptor().getMessageTypes().get(2);
    internal_static_google_cloud_bigquery_v2_StandardSqlStructType_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_google_cloud_bigquery_v2_StandardSqlStructType_descriptor,
        new java.lang.String[] { "Fields", });
    internal_static_google_cloud_bigquery_v2_StandardSqlTableType_descriptor =
      getDescriptor().getMessageTypes().get(3);
    internal_static_google_cloud_bigquery_v2_StandardSqlTableType_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_google_cloud_bigquery_v2_StandardSqlTableType_descriptor,
        new java.lang.String[] { "Columns", });
    com.google.protobuf.ExtensionRegistry registry =
        com.google.protobuf.ExtensionRegistry.newInstance();
    registry.add(com.google.api.FieldBehaviorProto.fieldBehavior);
    com.google.protobuf.Descriptors.FileDescriptor
        .internalUpdateFileDescriptor(descriptor, registry);
    com.google.api.FieldBehaviorProto.getDescriptor();
  }

  // @@protoc_insertion_point(outer_class_scope)
}
