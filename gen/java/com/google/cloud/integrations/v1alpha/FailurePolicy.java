// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: google/cloud/integrations/v1alpha/task_config.proto

package com.google.cloud.integrations.v1alpha;

/**
 * <pre>
 * Policy that defines the task retry logic and failure type. If no
 * FailurePolicy is defined for a task, all its dependent tasks will not be
 * executed (i.e, a `retry_strategy` of NONE will be applied).
 * </pre>
 *
 * Protobuf type {@code google.cloud.integrations.v1alpha.FailurePolicy}
 */
public final class FailurePolicy extends
    com.google.protobuf.GeneratedMessageV3 implements
    // @@protoc_insertion_point(message_implements:google.cloud.integrations.v1alpha.FailurePolicy)
    FailurePolicyOrBuilder {
private static final long serialVersionUID = 0L;
  // Use FailurePolicy.newBuilder() to construct.
  private FailurePolicy(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
    super(builder);
  }
  private FailurePolicy() {
    retryStrategy_ = 0;
  }

  @java.lang.Override
  @SuppressWarnings({"unused"})
  protected java.lang.Object newInstance(
      UnusedPrivateParameter unused) {
    return new FailurePolicy();
  }

  @java.lang.Override
  public final com.google.protobuf.UnknownFieldSet
  getUnknownFields() {
    return this.unknownFields;
  }
  private FailurePolicy(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    this();
    if (extensionRegistry == null) {
      throw new java.lang.NullPointerException();
    }
    com.google.protobuf.UnknownFieldSet.Builder unknownFields =
        com.google.protobuf.UnknownFieldSet.newBuilder();
    try {
      boolean done = false;
      while (!done) {
        int tag = input.readTag();
        switch (tag) {
          case 0:
            done = true;
            break;
          case 8: {
            int rawValue = input.readEnum();

            retryStrategy_ = rawValue;
            break;
          }
          case 16: {

            maxRetries_ = input.readInt32();
            break;
          }
          case 26: {
            com.google.protobuf.Timestamp.Builder subBuilder = null;
            if (intervalTime_ != null) {
              subBuilder = intervalTime_.toBuilder();
            }
            intervalTime_ = input.readMessage(com.google.protobuf.Timestamp.parser(), extensionRegistry);
            if (subBuilder != null) {
              subBuilder.mergeFrom(intervalTime_);
              intervalTime_ = subBuilder.buildPartial();
            }

            break;
          }
          default: {
            if (!parseUnknownField(
                input, unknownFields, extensionRegistry, tag)) {
              done = true;
            }
            break;
          }
        }
      }
    } catch (com.google.protobuf.InvalidProtocolBufferException e) {
      throw e.setUnfinishedMessage(this);
    } catch (com.google.protobuf.UninitializedMessageException e) {
      throw e.asInvalidProtocolBufferException().setUnfinishedMessage(this);
    } catch (java.io.IOException e) {
      throw new com.google.protobuf.InvalidProtocolBufferException(
          e).setUnfinishedMessage(this);
    } finally {
      this.unknownFields = unknownFields.build();
      makeExtensionsImmutable();
    }
  }
  public static final com.google.protobuf.Descriptors.Descriptor
      getDescriptor() {
    return com.google.cloud.integrations.v1alpha.TaskConfigProto.internal_static_google_cloud_integrations_v1alpha_FailurePolicy_descriptor;
  }

  @java.lang.Override
  protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internalGetFieldAccessorTable() {
    return com.google.cloud.integrations.v1alpha.TaskConfigProto.internal_static_google_cloud_integrations_v1alpha_FailurePolicy_fieldAccessorTable
        .ensureFieldAccessorsInitialized(
            com.google.cloud.integrations.v1alpha.FailurePolicy.class, com.google.cloud.integrations.v1alpha.FailurePolicy.Builder.class);
  }

  /**
   * <pre>
   * The behavior when the taks failed.
   * </pre>
   *
   * Protobuf enum {@code google.cloud.integrations.v1alpha.FailurePolicy.RetryStrategy}
   */
  public enum RetryStrategy
      implements com.google.protobuf.ProtocolMessageEnum {
    /**
     * <pre>
     * UNSPECIFIED.
     * </pre>
     *
     * <code>RETRY_STRATEGY_UNSPECIFIED = 0;</code>
     */
    RETRY_STRATEGY_UNSPECIFIED(0),
    /**
     * <pre>
     * Ignores the failure of this task. The rest of the integration will be
     * executed Assuming this task succeeded.
     * </pre>
     *
     * <code>IGNORE = 1;</code>
     */
    IGNORE(1),
    /**
     * <pre>
     * Causes a permanent failure of the task. However, if the last task(s)
     * of event was successfully completed despite the failure of this task,
     * it has no impact on the integration.
     * </pre>
     *
     * <code>NONE = 2;</code>
     */
    NONE(2),
    /**
     * <pre>
     * Causes a permanent failure of the event. It is different from NONE
     * because this will mark the event as FAILED by shutting down the
     * event execution.
     * </pre>
     *
     * <code>FATAL = 3;</code>
     */
    FATAL(3),
    /**
     * <pre>
     * The task will be retried from the failed task onwards after a fixed
     * delay. A max-retry count is required to be specified with this
     * strategy. A jitter is added to each exponential interval so that
     * concurrently failing tasks of the same type do not end up retrying
     * after the exact same exponential interval. max_retries and
     * interval_in_seconds must be specified.
     * </pre>
     *
     * <code>FIXED_INTERVAL = 4;</code>
     */
    FIXED_INTERVAL(4),
    /**
     * <pre>
     * The task will be retried from the failed task onwards after a fixed
     * delay that linearly increases with each retry attempt. A jitter is
     * added to each exponential interval so that concurrently failing tasks
     * of the same type do not end up retrying after the exact same
     * exponential interval. A max-retry count is required to be specified
     * with this strategy. max_retries and interval_in_seconds must be
     * specified.
     * </pre>
     *
     * <code>LINEAR_BACKOFF = 5;</code>
     */
    LINEAR_BACKOFF(5),
    /**
     * <pre>
     * The task will be retried after an exponentially increasing period of
     * time with each failure. A jitter is added to each exponential interval
     * so that concurrently failing tasks of the same type do not end up
     * retrying after the exact same exponential interval. A max-retry count
     * is required to be specified with this strategy. `max_retries` and
     * `interval_in_seconds` must be specified.
     * </pre>
     *
     * <code>EXPONENTIAL_BACKOFF = 6;</code>
     */
    EXPONENTIAL_BACKOFF(6),
    /**
     * <pre>
     * The entire integration will be restarted with the initial parameters that
     * were set when the event was fired. A max-retry count is required to be
     * specified with this strategy. `max_retries` and `interval_in_seconds`
     * must be specified.
     * </pre>
     *
     * <code>RESTART_INTEGRATION_WITH_BACKOFF = 7;</code>
     */
    RESTART_INTEGRATION_WITH_BACKOFF(7),
    UNRECOGNIZED(-1),
    ;

    /**
     * <pre>
     * UNSPECIFIED.
     * </pre>
     *
     * <code>RETRY_STRATEGY_UNSPECIFIED = 0;</code>
     */
    public static final int RETRY_STRATEGY_UNSPECIFIED_VALUE = 0;
    /**
     * <pre>
     * Ignores the failure of this task. The rest of the integration will be
     * executed Assuming this task succeeded.
     * </pre>
     *
     * <code>IGNORE = 1;</code>
     */
    public static final int IGNORE_VALUE = 1;
    /**
     * <pre>
     * Causes a permanent failure of the task. However, if the last task(s)
     * of event was successfully completed despite the failure of this task,
     * it has no impact on the integration.
     * </pre>
     *
     * <code>NONE = 2;</code>
     */
    public static final int NONE_VALUE = 2;
    /**
     * <pre>
     * Causes a permanent failure of the event. It is different from NONE
     * because this will mark the event as FAILED by shutting down the
     * event execution.
     * </pre>
     *
     * <code>FATAL = 3;</code>
     */
    public static final int FATAL_VALUE = 3;
    /**
     * <pre>
     * The task will be retried from the failed task onwards after a fixed
     * delay. A max-retry count is required to be specified with this
     * strategy. A jitter is added to each exponential interval so that
     * concurrently failing tasks of the same type do not end up retrying
     * after the exact same exponential interval. max_retries and
     * interval_in_seconds must be specified.
     * </pre>
     *
     * <code>FIXED_INTERVAL = 4;</code>
     */
    public static final int FIXED_INTERVAL_VALUE = 4;
    /**
     * <pre>
     * The task will be retried from the failed task onwards after a fixed
     * delay that linearly increases with each retry attempt. A jitter is
     * added to each exponential interval so that concurrently failing tasks
     * of the same type do not end up retrying after the exact same
     * exponential interval. A max-retry count is required to be specified
     * with this strategy. max_retries and interval_in_seconds must be
     * specified.
     * </pre>
     *
     * <code>LINEAR_BACKOFF = 5;</code>
     */
    public static final int LINEAR_BACKOFF_VALUE = 5;
    /**
     * <pre>
     * The task will be retried after an exponentially increasing period of
     * time with each failure. A jitter is added to each exponential interval
     * so that concurrently failing tasks of the same type do not end up
     * retrying after the exact same exponential interval. A max-retry count
     * is required to be specified with this strategy. `max_retries` and
     * `interval_in_seconds` must be specified.
     * </pre>
     *
     * <code>EXPONENTIAL_BACKOFF = 6;</code>
     */
    public static final int EXPONENTIAL_BACKOFF_VALUE = 6;
    /**
     * <pre>
     * The entire integration will be restarted with the initial parameters that
     * were set when the event was fired. A max-retry count is required to be
     * specified with this strategy. `max_retries` and `interval_in_seconds`
     * must be specified.
     * </pre>
     *
     * <code>RESTART_INTEGRATION_WITH_BACKOFF = 7;</code>
     */
    public static final int RESTART_INTEGRATION_WITH_BACKOFF_VALUE = 7;


    public final int getNumber() {
      if (this == UNRECOGNIZED) {
        throw new java.lang.IllegalArgumentException(
            "Can't get the number of an unknown enum value.");
      }
      return value;
    }

    /**
     * @param value The numeric wire value of the corresponding enum entry.
     * @return The enum associated with the given numeric wire value.
     * @deprecated Use {@link #forNumber(int)} instead.
     */
    @java.lang.Deprecated
    public static RetryStrategy valueOf(int value) {
      return forNumber(value);
    }

    /**
     * @param value The numeric wire value of the corresponding enum entry.
     * @return The enum associated with the given numeric wire value.
     */
    public static RetryStrategy forNumber(int value) {
      switch (value) {
        case 0: return RETRY_STRATEGY_UNSPECIFIED;
        case 1: return IGNORE;
        case 2: return NONE;
        case 3: return FATAL;
        case 4: return FIXED_INTERVAL;
        case 5: return LINEAR_BACKOFF;
        case 6: return EXPONENTIAL_BACKOFF;
        case 7: return RESTART_INTEGRATION_WITH_BACKOFF;
        default: return null;
      }
    }

    public static com.google.protobuf.Internal.EnumLiteMap<RetryStrategy>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static final com.google.protobuf.Internal.EnumLiteMap<
        RetryStrategy> internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<RetryStrategy>() {
            public RetryStrategy findValueByNumber(int number) {
              return RetryStrategy.forNumber(number);
            }
          };

    public final com.google.protobuf.Descriptors.EnumValueDescriptor
        getValueDescriptor() {
      if (this == UNRECOGNIZED) {
        throw new java.lang.IllegalStateException(
            "Can't get the descriptor of an unrecognized enum value.");
      }
      return getDescriptor().getValues().get(ordinal());
    }
    public final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptorForType() {
      return getDescriptor();
    }
    public static final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptor() {
      return com.google.cloud.integrations.v1alpha.FailurePolicy.getDescriptor().getEnumTypes().get(0);
    }

    private static final RetryStrategy[] VALUES = values();

    public static RetryStrategy valueOf(
        com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
      if (desc.getType() != getDescriptor()) {
        throw new java.lang.IllegalArgumentException(
          "EnumValueDescriptor is not for this type.");
      }
      if (desc.getIndex() == -1) {
        return UNRECOGNIZED;
      }
      return VALUES[desc.getIndex()];
    }

    private final int value;

    private RetryStrategy(int value) {
      this.value = value;
    }

    // @@protoc_insertion_point(enum_scope:google.cloud.integrations.v1alpha.FailurePolicy.RetryStrategy)
  }

  public static final int RETRY_STRATEGY_FIELD_NUMBER = 1;
  private int retryStrategy_;
  /**
   * <pre>
   * Defines what happens to the task upon failure.
   * </pre>
   *
   * <code>.google.cloud.integrations.v1alpha.FailurePolicy.RetryStrategy retry_strategy = 1;</code>
   * @return The enum numeric value on the wire for retryStrategy.
   */
  @java.lang.Override public int getRetryStrategyValue() {
    return retryStrategy_;
  }
  /**
   * <pre>
   * Defines what happens to the task upon failure.
   * </pre>
   *
   * <code>.google.cloud.integrations.v1alpha.FailurePolicy.RetryStrategy retry_strategy = 1;</code>
   * @return The retryStrategy.
   */
  @java.lang.Override public com.google.cloud.integrations.v1alpha.FailurePolicy.RetryStrategy getRetryStrategy() {
    @SuppressWarnings("deprecation")
    com.google.cloud.integrations.v1alpha.FailurePolicy.RetryStrategy result = com.google.cloud.integrations.v1alpha.FailurePolicy.RetryStrategy.valueOf(retryStrategy_);
    return result == null ? com.google.cloud.integrations.v1alpha.FailurePolicy.RetryStrategy.UNRECOGNIZED : result;
  }

  public static final int MAX_RETRIES_FIELD_NUMBER = 2;
  private int maxRetries_;
  /**
   * <pre>
   * Required if retry_strategy is FIXED_INTERVAL or
   * LINEAR/EXPONENTIAL_BACKOFF/RESTART_INTEGRATION_WITH_BACKOFF. Defines the
   * number of times the task will be retried if failed.
   * </pre>
   *
   * <code>int32 max_retries = 2;</code>
   * @return The maxRetries.
   */
  @java.lang.Override
  public int getMaxRetries() {
    return maxRetries_;
  }

  public static final int INTERVAL_TIME_FIELD_NUMBER = 3;
  private com.google.protobuf.Timestamp intervalTime_;
  /**
   * <pre>
   * Required if retry_strategy is FIXED_INTERVAL or
   * LINEAR/EXPONENTIAL_BACKOFF/RESTART_INTEGRATION_WITH_BACKOFF. Defines the
   * initial interval in seconds for backoff.
   * </pre>
   *
   * <code>.google.protobuf.Timestamp interval_time = 3;</code>
   * @return Whether the intervalTime field is set.
   */
  @java.lang.Override
  public boolean hasIntervalTime() {
    return intervalTime_ != null;
  }
  /**
   * <pre>
   * Required if retry_strategy is FIXED_INTERVAL or
   * LINEAR/EXPONENTIAL_BACKOFF/RESTART_INTEGRATION_WITH_BACKOFF. Defines the
   * initial interval in seconds for backoff.
   * </pre>
   *
   * <code>.google.protobuf.Timestamp interval_time = 3;</code>
   * @return The intervalTime.
   */
  @java.lang.Override
  public com.google.protobuf.Timestamp getIntervalTime() {
    return intervalTime_ == null ? com.google.protobuf.Timestamp.getDefaultInstance() : intervalTime_;
  }
  /**
   * <pre>
   * Required if retry_strategy is FIXED_INTERVAL or
   * LINEAR/EXPONENTIAL_BACKOFF/RESTART_INTEGRATION_WITH_BACKOFF. Defines the
   * initial interval in seconds for backoff.
   * </pre>
   *
   * <code>.google.protobuf.Timestamp interval_time = 3;</code>
   */
  @java.lang.Override
  public com.google.protobuf.TimestampOrBuilder getIntervalTimeOrBuilder() {
    return getIntervalTime();
  }

  private byte memoizedIsInitialized = -1;
  @java.lang.Override
  public final boolean isInitialized() {
    byte isInitialized = memoizedIsInitialized;
    if (isInitialized == 1) return true;
    if (isInitialized == 0) return false;

    memoizedIsInitialized = 1;
    return true;
  }

  @java.lang.Override
  public void writeTo(com.google.protobuf.CodedOutputStream output)
                      throws java.io.IOException {
    if (retryStrategy_ != com.google.cloud.integrations.v1alpha.FailurePolicy.RetryStrategy.RETRY_STRATEGY_UNSPECIFIED.getNumber()) {
      output.writeEnum(1, retryStrategy_);
    }
    if (maxRetries_ != 0) {
      output.writeInt32(2, maxRetries_);
    }
    if (intervalTime_ != null) {
      output.writeMessage(3, getIntervalTime());
    }
    unknownFields.writeTo(output);
  }

  @java.lang.Override
  public int getSerializedSize() {
    int size = memoizedSize;
    if (size != -1) return size;

    size = 0;
    if (retryStrategy_ != com.google.cloud.integrations.v1alpha.FailurePolicy.RetryStrategy.RETRY_STRATEGY_UNSPECIFIED.getNumber()) {
      size += com.google.protobuf.CodedOutputStream
        .computeEnumSize(1, retryStrategy_);
    }
    if (maxRetries_ != 0) {
      size += com.google.protobuf.CodedOutputStream
        .computeInt32Size(2, maxRetries_);
    }
    if (intervalTime_ != null) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(3, getIntervalTime());
    }
    size += unknownFields.getSerializedSize();
    memoizedSize = size;
    return size;
  }

  @java.lang.Override
  public boolean equals(final java.lang.Object obj) {
    if (obj == this) {
     return true;
    }
    if (!(obj instanceof com.google.cloud.integrations.v1alpha.FailurePolicy)) {
      return super.equals(obj);
    }
    com.google.cloud.integrations.v1alpha.FailurePolicy other = (com.google.cloud.integrations.v1alpha.FailurePolicy) obj;

    if (retryStrategy_ != other.retryStrategy_) return false;
    if (getMaxRetries()
        != other.getMaxRetries()) return false;
    if (hasIntervalTime() != other.hasIntervalTime()) return false;
    if (hasIntervalTime()) {
      if (!getIntervalTime()
          .equals(other.getIntervalTime())) return false;
    }
    if (!unknownFields.equals(other.unknownFields)) return false;
    return true;
  }

  @java.lang.Override
  public int hashCode() {
    if (memoizedHashCode != 0) {
      return memoizedHashCode;
    }
    int hash = 41;
    hash = (19 * hash) + getDescriptor().hashCode();
    hash = (37 * hash) + RETRY_STRATEGY_FIELD_NUMBER;
    hash = (53 * hash) + retryStrategy_;
    hash = (37 * hash) + MAX_RETRIES_FIELD_NUMBER;
    hash = (53 * hash) + getMaxRetries();
    if (hasIntervalTime()) {
      hash = (37 * hash) + INTERVAL_TIME_FIELD_NUMBER;
      hash = (53 * hash) + getIntervalTime().hashCode();
    }
    hash = (29 * hash) + unknownFields.hashCode();
    memoizedHashCode = hash;
    return hash;
  }

  public static com.google.cloud.integrations.v1alpha.FailurePolicy parseFrom(
      java.nio.ByteBuffer data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static com.google.cloud.integrations.v1alpha.FailurePolicy parseFrom(
      java.nio.ByteBuffer data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static com.google.cloud.integrations.v1alpha.FailurePolicy parseFrom(
      com.google.protobuf.ByteString data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static com.google.cloud.integrations.v1alpha.FailurePolicy parseFrom(
      com.google.protobuf.ByteString data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static com.google.cloud.integrations.v1alpha.FailurePolicy parseFrom(byte[] data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static com.google.cloud.integrations.v1alpha.FailurePolicy parseFrom(
      byte[] data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static com.google.cloud.integrations.v1alpha.FailurePolicy parseFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input);
  }
  public static com.google.cloud.integrations.v1alpha.FailurePolicy parseFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input, extensionRegistry);
  }
  public static com.google.cloud.integrations.v1alpha.FailurePolicy parseDelimitedFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseDelimitedWithIOException(PARSER, input);
  }
  public static com.google.cloud.integrations.v1alpha.FailurePolicy parseDelimitedFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
  }
  public static com.google.cloud.integrations.v1alpha.FailurePolicy parseFrom(
      com.google.protobuf.CodedInputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input);
  }
  public static com.google.cloud.integrations.v1alpha.FailurePolicy parseFrom(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input, extensionRegistry);
  }

  @java.lang.Override
  public Builder newBuilderForType() { return newBuilder(); }
  public static Builder newBuilder() {
    return DEFAULT_INSTANCE.toBuilder();
  }
  public static Builder newBuilder(com.google.cloud.integrations.v1alpha.FailurePolicy prototype) {
    return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
  }
  @java.lang.Override
  public Builder toBuilder() {
    return this == DEFAULT_INSTANCE
        ? new Builder() : new Builder().mergeFrom(this);
  }

  @java.lang.Override
  protected Builder newBuilderForType(
      com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
    Builder builder = new Builder(parent);
    return builder;
  }
  /**
   * <pre>
   * Policy that defines the task retry logic and failure type. If no
   * FailurePolicy is defined for a task, all its dependent tasks will not be
   * executed (i.e, a `retry_strategy` of NONE will be applied).
   * </pre>
   *
   * Protobuf type {@code google.cloud.integrations.v1alpha.FailurePolicy}
   */
  public static final class Builder extends
      com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
      // @@protoc_insertion_point(builder_implements:google.cloud.integrations.v1alpha.FailurePolicy)
      com.google.cloud.integrations.v1alpha.FailurePolicyOrBuilder {
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.google.cloud.integrations.v1alpha.TaskConfigProto.internal_static_google_cloud_integrations_v1alpha_FailurePolicy_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.google.cloud.integrations.v1alpha.TaskConfigProto.internal_static_google_cloud_integrations_v1alpha_FailurePolicy_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.google.cloud.integrations.v1alpha.FailurePolicy.class, com.google.cloud.integrations.v1alpha.FailurePolicy.Builder.class);
    }

    // Construct using com.google.cloud.integrations.v1alpha.FailurePolicy.newBuilder()
    private Builder() {
      maybeForceBuilderInitialization();
    }

    private Builder(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      super(parent);
      maybeForceBuilderInitialization();
    }
    private void maybeForceBuilderInitialization() {
      if (com.google.protobuf.GeneratedMessageV3
              .alwaysUseFieldBuilders) {
      }
    }
    @java.lang.Override
    public Builder clear() {
      super.clear();
      retryStrategy_ = 0;

      maxRetries_ = 0;

      if (intervalTimeBuilder_ == null) {
        intervalTime_ = null;
      } else {
        intervalTime_ = null;
        intervalTimeBuilder_ = null;
      }
      return this;
    }

    @java.lang.Override
    public com.google.protobuf.Descriptors.Descriptor
        getDescriptorForType() {
      return com.google.cloud.integrations.v1alpha.TaskConfigProto.internal_static_google_cloud_integrations_v1alpha_FailurePolicy_descriptor;
    }

    @java.lang.Override
    public com.google.cloud.integrations.v1alpha.FailurePolicy getDefaultInstanceForType() {
      return com.google.cloud.integrations.v1alpha.FailurePolicy.getDefaultInstance();
    }

    @java.lang.Override
    public com.google.cloud.integrations.v1alpha.FailurePolicy build() {
      com.google.cloud.integrations.v1alpha.FailurePolicy result = buildPartial();
      if (!result.isInitialized()) {
        throw newUninitializedMessageException(result);
      }
      return result;
    }

    @java.lang.Override
    public com.google.cloud.integrations.v1alpha.FailurePolicy buildPartial() {
      com.google.cloud.integrations.v1alpha.FailurePolicy result = new com.google.cloud.integrations.v1alpha.FailurePolicy(this);
      result.retryStrategy_ = retryStrategy_;
      result.maxRetries_ = maxRetries_;
      if (intervalTimeBuilder_ == null) {
        result.intervalTime_ = intervalTime_;
      } else {
        result.intervalTime_ = intervalTimeBuilder_.build();
      }
      onBuilt();
      return result;
    }

    @java.lang.Override
    public Builder clone() {
      return super.clone();
    }
    @java.lang.Override
    public Builder setField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        java.lang.Object value) {
      return super.setField(field, value);
    }
    @java.lang.Override
    public Builder clearField(
        com.google.protobuf.Descriptors.FieldDescriptor field) {
      return super.clearField(field);
    }
    @java.lang.Override
    public Builder clearOneof(
        com.google.protobuf.Descriptors.OneofDescriptor oneof) {
      return super.clearOneof(oneof);
    }
    @java.lang.Override
    public Builder setRepeatedField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        int index, java.lang.Object value) {
      return super.setRepeatedField(field, index, value);
    }
    @java.lang.Override
    public Builder addRepeatedField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        java.lang.Object value) {
      return super.addRepeatedField(field, value);
    }
    @java.lang.Override
    public Builder mergeFrom(com.google.protobuf.Message other) {
      if (other instanceof com.google.cloud.integrations.v1alpha.FailurePolicy) {
        return mergeFrom((com.google.cloud.integrations.v1alpha.FailurePolicy)other);
      } else {
        super.mergeFrom(other);
        return this;
      }
    }

    public Builder mergeFrom(com.google.cloud.integrations.v1alpha.FailurePolicy other) {
      if (other == com.google.cloud.integrations.v1alpha.FailurePolicy.getDefaultInstance()) return this;
      if (other.retryStrategy_ != 0) {
        setRetryStrategyValue(other.getRetryStrategyValue());
      }
      if (other.getMaxRetries() != 0) {
        setMaxRetries(other.getMaxRetries());
      }
      if (other.hasIntervalTime()) {
        mergeIntervalTime(other.getIntervalTime());
      }
      this.mergeUnknownFields(other.unknownFields);
      onChanged();
      return this;
    }

    @java.lang.Override
    public final boolean isInitialized() {
      return true;
    }

    @java.lang.Override
    public Builder mergeFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      com.google.cloud.integrations.v1alpha.FailurePolicy parsedMessage = null;
      try {
        parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        parsedMessage = (com.google.cloud.integrations.v1alpha.FailurePolicy) e.getUnfinishedMessage();
        throw e.unwrapIOException();
      } finally {
        if (parsedMessage != null) {
          mergeFrom(parsedMessage);
        }
      }
      return this;
    }

    private int retryStrategy_ = 0;
    /**
     * <pre>
     * Defines what happens to the task upon failure.
     * </pre>
     *
     * <code>.google.cloud.integrations.v1alpha.FailurePolicy.RetryStrategy retry_strategy = 1;</code>
     * @return The enum numeric value on the wire for retryStrategy.
     */
    @java.lang.Override public int getRetryStrategyValue() {
      return retryStrategy_;
    }
    /**
     * <pre>
     * Defines what happens to the task upon failure.
     * </pre>
     *
     * <code>.google.cloud.integrations.v1alpha.FailurePolicy.RetryStrategy retry_strategy = 1;</code>
     * @param value The enum numeric value on the wire for retryStrategy to set.
     * @return This builder for chaining.
     */
    public Builder setRetryStrategyValue(int value) {
      
      retryStrategy_ = value;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * Defines what happens to the task upon failure.
     * </pre>
     *
     * <code>.google.cloud.integrations.v1alpha.FailurePolicy.RetryStrategy retry_strategy = 1;</code>
     * @return The retryStrategy.
     */
    @java.lang.Override
    public com.google.cloud.integrations.v1alpha.FailurePolicy.RetryStrategy getRetryStrategy() {
      @SuppressWarnings("deprecation")
      com.google.cloud.integrations.v1alpha.FailurePolicy.RetryStrategy result = com.google.cloud.integrations.v1alpha.FailurePolicy.RetryStrategy.valueOf(retryStrategy_);
      return result == null ? com.google.cloud.integrations.v1alpha.FailurePolicy.RetryStrategy.UNRECOGNIZED : result;
    }
    /**
     * <pre>
     * Defines what happens to the task upon failure.
     * </pre>
     *
     * <code>.google.cloud.integrations.v1alpha.FailurePolicy.RetryStrategy retry_strategy = 1;</code>
     * @param value The retryStrategy to set.
     * @return This builder for chaining.
     */
    public Builder setRetryStrategy(com.google.cloud.integrations.v1alpha.FailurePolicy.RetryStrategy value) {
      if (value == null) {
        throw new NullPointerException();
      }
      
      retryStrategy_ = value.getNumber();
      onChanged();
      return this;
    }
    /**
     * <pre>
     * Defines what happens to the task upon failure.
     * </pre>
     *
     * <code>.google.cloud.integrations.v1alpha.FailurePolicy.RetryStrategy retry_strategy = 1;</code>
     * @return This builder for chaining.
     */
    public Builder clearRetryStrategy() {
      
      retryStrategy_ = 0;
      onChanged();
      return this;
    }

    private int maxRetries_ ;
    /**
     * <pre>
     * Required if retry_strategy is FIXED_INTERVAL or
     * LINEAR/EXPONENTIAL_BACKOFF/RESTART_INTEGRATION_WITH_BACKOFF. Defines the
     * number of times the task will be retried if failed.
     * </pre>
     *
     * <code>int32 max_retries = 2;</code>
     * @return The maxRetries.
     */
    @java.lang.Override
    public int getMaxRetries() {
      return maxRetries_;
    }
    /**
     * <pre>
     * Required if retry_strategy is FIXED_INTERVAL or
     * LINEAR/EXPONENTIAL_BACKOFF/RESTART_INTEGRATION_WITH_BACKOFF. Defines the
     * number of times the task will be retried if failed.
     * </pre>
     *
     * <code>int32 max_retries = 2;</code>
     * @param value The maxRetries to set.
     * @return This builder for chaining.
     */
    public Builder setMaxRetries(int value) {
      
      maxRetries_ = value;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * Required if retry_strategy is FIXED_INTERVAL or
     * LINEAR/EXPONENTIAL_BACKOFF/RESTART_INTEGRATION_WITH_BACKOFF. Defines the
     * number of times the task will be retried if failed.
     * </pre>
     *
     * <code>int32 max_retries = 2;</code>
     * @return This builder for chaining.
     */
    public Builder clearMaxRetries() {
      
      maxRetries_ = 0;
      onChanged();
      return this;
    }

    private com.google.protobuf.Timestamp intervalTime_;
    private com.google.protobuf.SingleFieldBuilderV3<
        com.google.protobuf.Timestamp, com.google.protobuf.Timestamp.Builder, com.google.protobuf.TimestampOrBuilder> intervalTimeBuilder_;
    /**
     * <pre>
     * Required if retry_strategy is FIXED_INTERVAL or
     * LINEAR/EXPONENTIAL_BACKOFF/RESTART_INTEGRATION_WITH_BACKOFF. Defines the
     * initial interval in seconds for backoff.
     * </pre>
     *
     * <code>.google.protobuf.Timestamp interval_time = 3;</code>
     * @return Whether the intervalTime field is set.
     */
    public boolean hasIntervalTime() {
      return intervalTimeBuilder_ != null || intervalTime_ != null;
    }
    /**
     * <pre>
     * Required if retry_strategy is FIXED_INTERVAL or
     * LINEAR/EXPONENTIAL_BACKOFF/RESTART_INTEGRATION_WITH_BACKOFF. Defines the
     * initial interval in seconds for backoff.
     * </pre>
     *
     * <code>.google.protobuf.Timestamp interval_time = 3;</code>
     * @return The intervalTime.
     */
    public com.google.protobuf.Timestamp getIntervalTime() {
      if (intervalTimeBuilder_ == null) {
        return intervalTime_ == null ? com.google.protobuf.Timestamp.getDefaultInstance() : intervalTime_;
      } else {
        return intervalTimeBuilder_.getMessage();
      }
    }
    /**
     * <pre>
     * Required if retry_strategy is FIXED_INTERVAL or
     * LINEAR/EXPONENTIAL_BACKOFF/RESTART_INTEGRATION_WITH_BACKOFF. Defines the
     * initial interval in seconds for backoff.
     * </pre>
     *
     * <code>.google.protobuf.Timestamp interval_time = 3;</code>
     */
    public Builder setIntervalTime(com.google.protobuf.Timestamp value) {
      if (intervalTimeBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        intervalTime_ = value;
        onChanged();
      } else {
        intervalTimeBuilder_.setMessage(value);
      }

      return this;
    }
    /**
     * <pre>
     * Required if retry_strategy is FIXED_INTERVAL or
     * LINEAR/EXPONENTIAL_BACKOFF/RESTART_INTEGRATION_WITH_BACKOFF. Defines the
     * initial interval in seconds for backoff.
     * </pre>
     *
     * <code>.google.protobuf.Timestamp interval_time = 3;</code>
     */
    public Builder setIntervalTime(
        com.google.protobuf.Timestamp.Builder builderForValue) {
      if (intervalTimeBuilder_ == null) {
        intervalTime_ = builderForValue.build();
        onChanged();
      } else {
        intervalTimeBuilder_.setMessage(builderForValue.build());
      }

      return this;
    }
    /**
     * <pre>
     * Required if retry_strategy is FIXED_INTERVAL or
     * LINEAR/EXPONENTIAL_BACKOFF/RESTART_INTEGRATION_WITH_BACKOFF. Defines the
     * initial interval in seconds for backoff.
     * </pre>
     *
     * <code>.google.protobuf.Timestamp interval_time = 3;</code>
     */
    public Builder mergeIntervalTime(com.google.protobuf.Timestamp value) {
      if (intervalTimeBuilder_ == null) {
        if (intervalTime_ != null) {
          intervalTime_ =
            com.google.protobuf.Timestamp.newBuilder(intervalTime_).mergeFrom(value).buildPartial();
        } else {
          intervalTime_ = value;
        }
        onChanged();
      } else {
        intervalTimeBuilder_.mergeFrom(value);
      }

      return this;
    }
    /**
     * <pre>
     * Required if retry_strategy is FIXED_INTERVAL or
     * LINEAR/EXPONENTIAL_BACKOFF/RESTART_INTEGRATION_WITH_BACKOFF. Defines the
     * initial interval in seconds for backoff.
     * </pre>
     *
     * <code>.google.protobuf.Timestamp interval_time = 3;</code>
     */
    public Builder clearIntervalTime() {
      if (intervalTimeBuilder_ == null) {
        intervalTime_ = null;
        onChanged();
      } else {
        intervalTime_ = null;
        intervalTimeBuilder_ = null;
      }

      return this;
    }
    /**
     * <pre>
     * Required if retry_strategy is FIXED_INTERVAL or
     * LINEAR/EXPONENTIAL_BACKOFF/RESTART_INTEGRATION_WITH_BACKOFF. Defines the
     * initial interval in seconds for backoff.
     * </pre>
     *
     * <code>.google.protobuf.Timestamp interval_time = 3;</code>
     */
    public com.google.protobuf.Timestamp.Builder getIntervalTimeBuilder() {
      
      onChanged();
      return getIntervalTimeFieldBuilder().getBuilder();
    }
    /**
     * <pre>
     * Required if retry_strategy is FIXED_INTERVAL or
     * LINEAR/EXPONENTIAL_BACKOFF/RESTART_INTEGRATION_WITH_BACKOFF. Defines the
     * initial interval in seconds for backoff.
     * </pre>
     *
     * <code>.google.protobuf.Timestamp interval_time = 3;</code>
     */
    public com.google.protobuf.TimestampOrBuilder getIntervalTimeOrBuilder() {
      if (intervalTimeBuilder_ != null) {
        return intervalTimeBuilder_.getMessageOrBuilder();
      } else {
        return intervalTime_ == null ?
            com.google.protobuf.Timestamp.getDefaultInstance() : intervalTime_;
      }
    }
    /**
     * <pre>
     * Required if retry_strategy is FIXED_INTERVAL or
     * LINEAR/EXPONENTIAL_BACKOFF/RESTART_INTEGRATION_WITH_BACKOFF. Defines the
     * initial interval in seconds for backoff.
     * </pre>
     *
     * <code>.google.protobuf.Timestamp interval_time = 3;</code>
     */
    private com.google.protobuf.SingleFieldBuilderV3<
        com.google.protobuf.Timestamp, com.google.protobuf.Timestamp.Builder, com.google.protobuf.TimestampOrBuilder> 
        getIntervalTimeFieldBuilder() {
      if (intervalTimeBuilder_ == null) {
        intervalTimeBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
            com.google.protobuf.Timestamp, com.google.protobuf.Timestamp.Builder, com.google.protobuf.TimestampOrBuilder>(
                getIntervalTime(),
                getParentForChildren(),
                isClean());
        intervalTime_ = null;
      }
      return intervalTimeBuilder_;
    }
    @java.lang.Override
    public final Builder setUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return super.setUnknownFields(unknownFields);
    }

    @java.lang.Override
    public final Builder mergeUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return super.mergeUnknownFields(unknownFields);
    }


    // @@protoc_insertion_point(builder_scope:google.cloud.integrations.v1alpha.FailurePolicy)
  }

  // @@protoc_insertion_point(class_scope:google.cloud.integrations.v1alpha.FailurePolicy)
  private static final com.google.cloud.integrations.v1alpha.FailurePolicy DEFAULT_INSTANCE;
  static {
    DEFAULT_INSTANCE = new com.google.cloud.integrations.v1alpha.FailurePolicy();
  }

  public static com.google.cloud.integrations.v1alpha.FailurePolicy getDefaultInstance() {
    return DEFAULT_INSTANCE;
  }

  private static final com.google.protobuf.Parser<FailurePolicy>
      PARSER = new com.google.protobuf.AbstractParser<FailurePolicy>() {
    @java.lang.Override
    public FailurePolicy parsePartialFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return new FailurePolicy(input, extensionRegistry);
    }
  };

  public static com.google.protobuf.Parser<FailurePolicy> parser() {
    return PARSER;
  }

  @java.lang.Override
  public com.google.protobuf.Parser<FailurePolicy> getParserForType() {
    return PARSER;
  }

  @java.lang.Override
  public com.google.cloud.integrations.v1alpha.FailurePolicy getDefaultInstanceForType() {
    return DEFAULT_INSTANCE;
  }

}

