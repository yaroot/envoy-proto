// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: google/cloud/video/livestream/logging/v1/logs.proto

package com.google.cloud.video.livestream.logging.v1;

/**
 * <pre>
 * Logs of activities related to the Channels.
 * </pre>
 *
 * Protobuf type {@code google.cloud.video.livestream.logging.v1.ChannelActivity}
 */
public final class ChannelActivity extends
    com.google.protobuf.GeneratedMessageV3 implements
    // @@protoc_insertion_point(message_implements:google.cloud.video.livestream.logging.v1.ChannelActivity)
    ChannelActivityOrBuilder {
private static final long serialVersionUID = 0L;
  // Use ChannelActivity.newBuilder() to construct.
  private ChannelActivity(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
    super(builder);
  }
  private ChannelActivity() {
    message_ = "";
  }

  @java.lang.Override
  @SuppressWarnings({"unused"})
  protected java.lang.Object newInstance(
      UnusedPrivateParameter unused) {
    return new ChannelActivity();
  }

  @java.lang.Override
  public final com.google.protobuf.UnknownFieldSet
  getUnknownFields() {
    return this.unknownFields;
  }
  public static final com.google.protobuf.Descriptors.Descriptor
      getDescriptor() {
    return com.google.cloud.video.livestream.logging.v1.LogsProto.internal_static_google_cloud_video_livestream_logging_v1_ChannelActivity_descriptor;
  }

  @java.lang.Override
  protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internalGetFieldAccessorTable() {
    return com.google.cloud.video.livestream.logging.v1.LogsProto.internal_static_google_cloud_video_livestream_logging_v1_ChannelActivity_fieldAccessorTable
        .ensureFieldAccessorsInitialized(
            com.google.cloud.video.livestream.logging.v1.ChannelActivity.class, com.google.cloud.video.livestream.logging.v1.ChannelActivity.Builder.class);
  }

  private int activityTypeCase_ = 0;
  private java.lang.Object activityType_;
  public enum ActivityTypeCase
      implements com.google.protobuf.Internal.EnumLite,
          com.google.protobuf.AbstractMessage.InternalOneOfEnum {
    STREAMING_STATE_CHANGE(2),
    STREAMING_ERROR(3),
    INPUT_ACCEPT(4),
    INPUT_ERROR(5),
    INPUT_DISCONNECT(6),
    ACTIVITYTYPE_NOT_SET(0);
    private final int value;
    private ActivityTypeCase(int value) {
      this.value = value;
    }
    /**
     * @param value The number of the enum to look for.
     * @return The enum associated with the given number.
     * @deprecated Use {@link #forNumber(int)} instead.
     */
    @java.lang.Deprecated
    public static ActivityTypeCase valueOf(int value) {
      return forNumber(value);
    }

    public static ActivityTypeCase forNumber(int value) {
      switch (value) {
        case 2: return STREAMING_STATE_CHANGE;
        case 3: return STREAMING_ERROR;
        case 4: return INPUT_ACCEPT;
        case 5: return INPUT_ERROR;
        case 6: return INPUT_DISCONNECT;
        case 0: return ACTIVITYTYPE_NOT_SET;
        default: return null;
      }
    }
    public int getNumber() {
      return this.value;
    }
  };

  public ActivityTypeCase
  getActivityTypeCase() {
    return ActivityTypeCase.forNumber(
        activityTypeCase_);
  }

  public static final int MESSAGE_FIELD_NUMBER = 1;
  @SuppressWarnings("serial")
  private volatile java.lang.Object message_ = "";
  /**
   * <pre>
   * Message is for more details of the log and instructions to users.
   * </pre>
   *
   * <code>string message = 1;</code>
   * @return The message.
   */
  @java.lang.Override
  public java.lang.String getMessage() {
    java.lang.Object ref = message_;
    if (ref instanceof java.lang.String) {
      return (java.lang.String) ref;
    } else {
      com.google.protobuf.ByteString bs = 
          (com.google.protobuf.ByteString) ref;
      java.lang.String s = bs.toStringUtf8();
      message_ = s;
      return s;
    }
  }
  /**
   * <pre>
   * Message is for more details of the log and instructions to users.
   * </pre>
   *
   * <code>string message = 1;</code>
   * @return The bytes for message.
   */
  @java.lang.Override
  public com.google.protobuf.ByteString
      getMessageBytes() {
    java.lang.Object ref = message_;
    if (ref instanceof java.lang.String) {
      com.google.protobuf.ByteString b = 
          com.google.protobuf.ByteString.copyFromUtf8(
              (java.lang.String) ref);
      message_ = b;
      return b;
    } else {
      return (com.google.protobuf.ByteString) ref;
    }
  }

  public static final int STREAMING_STATE_CHANGE_FIELD_NUMBER = 2;
  /**
   * <pre>
   * The channel streaming state changes.
   * </pre>
   *
   * <code>.google.cloud.video.livestream.logging.v1.StreamingStateChange streaming_state_change = 2;</code>
   * @return Whether the streamingStateChange field is set.
   */
  @java.lang.Override
  public boolean hasStreamingStateChange() {
    return activityTypeCase_ == 2;
  }
  /**
   * <pre>
   * The channel streaming state changes.
   * </pre>
   *
   * <code>.google.cloud.video.livestream.logging.v1.StreamingStateChange streaming_state_change = 2;</code>
   * @return The streamingStateChange.
   */
  @java.lang.Override
  public com.google.cloud.video.livestream.logging.v1.StreamingStateChange getStreamingStateChange() {
    if (activityTypeCase_ == 2) {
       return (com.google.cloud.video.livestream.logging.v1.StreamingStateChange) activityType_;
    }
    return com.google.cloud.video.livestream.logging.v1.StreamingStateChange.getDefaultInstance();
  }
  /**
   * <pre>
   * The channel streaming state changes.
   * </pre>
   *
   * <code>.google.cloud.video.livestream.logging.v1.StreamingStateChange streaming_state_change = 2;</code>
   */
  @java.lang.Override
  public com.google.cloud.video.livestream.logging.v1.StreamingStateChangeOrBuilder getStreamingStateChangeOrBuilder() {
    if (activityTypeCase_ == 2) {
       return (com.google.cloud.video.livestream.logging.v1.StreamingStateChange) activityType_;
    }
    return com.google.cloud.video.livestream.logging.v1.StreamingStateChange.getDefaultInstance();
  }

  public static final int STREAMING_ERROR_FIELD_NUMBER = 3;
  /**
   * <pre>
   * An error happens with the video pipeline.
   * </pre>
   *
   * <code>.google.cloud.video.livestream.logging.v1.StreamingError streaming_error = 3;</code>
   * @return Whether the streamingError field is set.
   */
  @java.lang.Override
  public boolean hasStreamingError() {
    return activityTypeCase_ == 3;
  }
  /**
   * <pre>
   * An error happens with the video pipeline.
   * </pre>
   *
   * <code>.google.cloud.video.livestream.logging.v1.StreamingError streaming_error = 3;</code>
   * @return The streamingError.
   */
  @java.lang.Override
  public com.google.cloud.video.livestream.logging.v1.StreamingError getStreamingError() {
    if (activityTypeCase_ == 3) {
       return (com.google.cloud.video.livestream.logging.v1.StreamingError) activityType_;
    }
    return com.google.cloud.video.livestream.logging.v1.StreamingError.getDefaultInstance();
  }
  /**
   * <pre>
   * An error happens with the video pipeline.
   * </pre>
   *
   * <code>.google.cloud.video.livestream.logging.v1.StreamingError streaming_error = 3;</code>
   */
  @java.lang.Override
  public com.google.cloud.video.livestream.logging.v1.StreamingErrorOrBuilder getStreamingErrorOrBuilder() {
    if (activityTypeCase_ == 3) {
       return (com.google.cloud.video.livestream.logging.v1.StreamingError) activityType_;
    }
    return com.google.cloud.video.livestream.logging.v1.StreamingError.getDefaultInstance();
  }

  public static final int INPUT_ACCEPT_FIELD_NUMBER = 4;
  /**
   * <pre>
   * The channel has accepted an input stream.
   * </pre>
   *
   * <code>.google.cloud.video.livestream.logging.v1.InputAccept input_accept = 4;</code>
   * @return Whether the inputAccept field is set.
   */
  @java.lang.Override
  public boolean hasInputAccept() {
    return activityTypeCase_ == 4;
  }
  /**
   * <pre>
   * The channel has accepted an input stream.
   * </pre>
   *
   * <code>.google.cloud.video.livestream.logging.v1.InputAccept input_accept = 4;</code>
   * @return The inputAccept.
   */
  @java.lang.Override
  public com.google.cloud.video.livestream.logging.v1.InputAccept getInputAccept() {
    if (activityTypeCase_ == 4) {
       return (com.google.cloud.video.livestream.logging.v1.InputAccept) activityType_;
    }
    return com.google.cloud.video.livestream.logging.v1.InputAccept.getDefaultInstance();
  }
  /**
   * <pre>
   * The channel has accepted an input stream.
   * </pre>
   *
   * <code>.google.cloud.video.livestream.logging.v1.InputAccept input_accept = 4;</code>
   */
  @java.lang.Override
  public com.google.cloud.video.livestream.logging.v1.InputAcceptOrBuilder getInputAcceptOrBuilder() {
    if (activityTypeCase_ == 4) {
       return (com.google.cloud.video.livestream.logging.v1.InputAccept) activityType_;
    }
    return com.google.cloud.video.livestream.logging.v1.InputAccept.getDefaultInstance();
  }

  public static final int INPUT_ERROR_FIELD_NUMBER = 5;
  /**
   * <pre>
   * An error happens with the input stream.
   * </pre>
   *
   * <code>.google.cloud.video.livestream.logging.v1.InputError input_error = 5;</code>
   * @return Whether the inputError field is set.
   */
  @java.lang.Override
  public boolean hasInputError() {
    return activityTypeCase_ == 5;
  }
  /**
   * <pre>
   * An error happens with the input stream.
   * </pre>
   *
   * <code>.google.cloud.video.livestream.logging.v1.InputError input_error = 5;</code>
   * @return The inputError.
   */
  @java.lang.Override
  public com.google.cloud.video.livestream.logging.v1.InputError getInputError() {
    if (activityTypeCase_ == 5) {
       return (com.google.cloud.video.livestream.logging.v1.InputError) activityType_;
    }
    return com.google.cloud.video.livestream.logging.v1.InputError.getDefaultInstance();
  }
  /**
   * <pre>
   * An error happens with the input stream.
   * </pre>
   *
   * <code>.google.cloud.video.livestream.logging.v1.InputError input_error = 5;</code>
   */
  @java.lang.Override
  public com.google.cloud.video.livestream.logging.v1.InputErrorOrBuilder getInputErrorOrBuilder() {
    if (activityTypeCase_ == 5) {
       return (com.google.cloud.video.livestream.logging.v1.InputError) activityType_;
    }
    return com.google.cloud.video.livestream.logging.v1.InputError.getDefaultInstance();
  }

  public static final int INPUT_DISCONNECT_FIELD_NUMBER = 6;
  /**
   * <pre>
   * An input stream disconnects.
   * </pre>
   *
   * <code>.google.cloud.video.livestream.logging.v1.InputDisconnect input_disconnect = 6;</code>
   * @return Whether the inputDisconnect field is set.
   */
  @java.lang.Override
  public boolean hasInputDisconnect() {
    return activityTypeCase_ == 6;
  }
  /**
   * <pre>
   * An input stream disconnects.
   * </pre>
   *
   * <code>.google.cloud.video.livestream.logging.v1.InputDisconnect input_disconnect = 6;</code>
   * @return The inputDisconnect.
   */
  @java.lang.Override
  public com.google.cloud.video.livestream.logging.v1.InputDisconnect getInputDisconnect() {
    if (activityTypeCase_ == 6) {
       return (com.google.cloud.video.livestream.logging.v1.InputDisconnect) activityType_;
    }
    return com.google.cloud.video.livestream.logging.v1.InputDisconnect.getDefaultInstance();
  }
  /**
   * <pre>
   * An input stream disconnects.
   * </pre>
   *
   * <code>.google.cloud.video.livestream.logging.v1.InputDisconnect input_disconnect = 6;</code>
   */
  @java.lang.Override
  public com.google.cloud.video.livestream.logging.v1.InputDisconnectOrBuilder getInputDisconnectOrBuilder() {
    if (activityTypeCase_ == 6) {
       return (com.google.cloud.video.livestream.logging.v1.InputDisconnect) activityType_;
    }
    return com.google.cloud.video.livestream.logging.v1.InputDisconnect.getDefaultInstance();
  }

  private byte memoizedIsInitialized = -1;
  @java.lang.Override
  public final boolean isInitialized() {
    byte isInitialized = memoizedIsInitialized;
    if (isInitialized == 1) return true;
    if (isInitialized == 0) return false;

    memoizedIsInitialized = 1;
    return true;
  }

  @java.lang.Override
  public void writeTo(com.google.protobuf.CodedOutputStream output)
                      throws java.io.IOException {
    if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(message_)) {
      com.google.protobuf.GeneratedMessageV3.writeString(output, 1, message_);
    }
    if (activityTypeCase_ == 2) {
      output.writeMessage(2, (com.google.cloud.video.livestream.logging.v1.StreamingStateChange) activityType_);
    }
    if (activityTypeCase_ == 3) {
      output.writeMessage(3, (com.google.cloud.video.livestream.logging.v1.StreamingError) activityType_);
    }
    if (activityTypeCase_ == 4) {
      output.writeMessage(4, (com.google.cloud.video.livestream.logging.v1.InputAccept) activityType_);
    }
    if (activityTypeCase_ == 5) {
      output.writeMessage(5, (com.google.cloud.video.livestream.logging.v1.InputError) activityType_);
    }
    if (activityTypeCase_ == 6) {
      output.writeMessage(6, (com.google.cloud.video.livestream.logging.v1.InputDisconnect) activityType_);
    }
    getUnknownFields().writeTo(output);
  }

  @java.lang.Override
  public int getSerializedSize() {
    int size = memoizedSize;
    if (size != -1) return size;

    size = 0;
    if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(message_)) {
      size += com.google.protobuf.GeneratedMessageV3.computeStringSize(1, message_);
    }
    if (activityTypeCase_ == 2) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(2, (com.google.cloud.video.livestream.logging.v1.StreamingStateChange) activityType_);
    }
    if (activityTypeCase_ == 3) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(3, (com.google.cloud.video.livestream.logging.v1.StreamingError) activityType_);
    }
    if (activityTypeCase_ == 4) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(4, (com.google.cloud.video.livestream.logging.v1.InputAccept) activityType_);
    }
    if (activityTypeCase_ == 5) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(5, (com.google.cloud.video.livestream.logging.v1.InputError) activityType_);
    }
    if (activityTypeCase_ == 6) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(6, (com.google.cloud.video.livestream.logging.v1.InputDisconnect) activityType_);
    }
    size += getUnknownFields().getSerializedSize();
    memoizedSize = size;
    return size;
  }

  @java.lang.Override
  public boolean equals(final java.lang.Object obj) {
    if (obj == this) {
     return true;
    }
    if (!(obj instanceof com.google.cloud.video.livestream.logging.v1.ChannelActivity)) {
      return super.equals(obj);
    }
    com.google.cloud.video.livestream.logging.v1.ChannelActivity other = (com.google.cloud.video.livestream.logging.v1.ChannelActivity) obj;

    if (!getMessage()
        .equals(other.getMessage())) return false;
    if (!getActivityTypeCase().equals(other.getActivityTypeCase())) return false;
    switch (activityTypeCase_) {
      case 2:
        if (!getStreamingStateChange()
            .equals(other.getStreamingStateChange())) return false;
        break;
      case 3:
        if (!getStreamingError()
            .equals(other.getStreamingError())) return false;
        break;
      case 4:
        if (!getInputAccept()
            .equals(other.getInputAccept())) return false;
        break;
      case 5:
        if (!getInputError()
            .equals(other.getInputError())) return false;
        break;
      case 6:
        if (!getInputDisconnect()
            .equals(other.getInputDisconnect())) return false;
        break;
      case 0:
      default:
    }
    if (!getUnknownFields().equals(other.getUnknownFields())) return false;
    return true;
  }

  @java.lang.Override
  public int hashCode() {
    if (memoizedHashCode != 0) {
      return memoizedHashCode;
    }
    int hash = 41;
    hash = (19 * hash) + getDescriptor().hashCode();
    hash = (37 * hash) + MESSAGE_FIELD_NUMBER;
    hash = (53 * hash) + getMessage().hashCode();
    switch (activityTypeCase_) {
      case 2:
        hash = (37 * hash) + STREAMING_STATE_CHANGE_FIELD_NUMBER;
        hash = (53 * hash) + getStreamingStateChange().hashCode();
        break;
      case 3:
        hash = (37 * hash) + STREAMING_ERROR_FIELD_NUMBER;
        hash = (53 * hash) + getStreamingError().hashCode();
        break;
      case 4:
        hash = (37 * hash) + INPUT_ACCEPT_FIELD_NUMBER;
        hash = (53 * hash) + getInputAccept().hashCode();
        break;
      case 5:
        hash = (37 * hash) + INPUT_ERROR_FIELD_NUMBER;
        hash = (53 * hash) + getInputError().hashCode();
        break;
      case 6:
        hash = (37 * hash) + INPUT_DISCONNECT_FIELD_NUMBER;
        hash = (53 * hash) + getInputDisconnect().hashCode();
        break;
      case 0:
      default:
    }
    hash = (29 * hash) + getUnknownFields().hashCode();
    memoizedHashCode = hash;
    return hash;
  }

  public static com.google.cloud.video.livestream.logging.v1.ChannelActivity parseFrom(
      java.nio.ByteBuffer data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static com.google.cloud.video.livestream.logging.v1.ChannelActivity parseFrom(
      java.nio.ByteBuffer data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static com.google.cloud.video.livestream.logging.v1.ChannelActivity parseFrom(
      com.google.protobuf.ByteString data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static com.google.cloud.video.livestream.logging.v1.ChannelActivity parseFrom(
      com.google.protobuf.ByteString data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static com.google.cloud.video.livestream.logging.v1.ChannelActivity parseFrom(byte[] data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static com.google.cloud.video.livestream.logging.v1.ChannelActivity parseFrom(
      byte[] data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static com.google.cloud.video.livestream.logging.v1.ChannelActivity parseFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input);
  }
  public static com.google.cloud.video.livestream.logging.v1.ChannelActivity parseFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input, extensionRegistry);
  }
  public static com.google.cloud.video.livestream.logging.v1.ChannelActivity parseDelimitedFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseDelimitedWithIOException(PARSER, input);
  }
  public static com.google.cloud.video.livestream.logging.v1.ChannelActivity parseDelimitedFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
  }
  public static com.google.cloud.video.livestream.logging.v1.ChannelActivity parseFrom(
      com.google.protobuf.CodedInputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input);
  }
  public static com.google.cloud.video.livestream.logging.v1.ChannelActivity parseFrom(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input, extensionRegistry);
  }

  @java.lang.Override
  public Builder newBuilderForType() { return newBuilder(); }
  public static Builder newBuilder() {
    return DEFAULT_INSTANCE.toBuilder();
  }
  public static Builder newBuilder(com.google.cloud.video.livestream.logging.v1.ChannelActivity prototype) {
    return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
  }
  @java.lang.Override
  public Builder toBuilder() {
    return this == DEFAULT_INSTANCE
        ? new Builder() : new Builder().mergeFrom(this);
  }

  @java.lang.Override
  protected Builder newBuilderForType(
      com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
    Builder builder = new Builder(parent);
    return builder;
  }
  /**
   * <pre>
   * Logs of activities related to the Channels.
   * </pre>
   *
   * Protobuf type {@code google.cloud.video.livestream.logging.v1.ChannelActivity}
   */
  public static final class Builder extends
      com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
      // @@protoc_insertion_point(builder_implements:google.cloud.video.livestream.logging.v1.ChannelActivity)
      com.google.cloud.video.livestream.logging.v1.ChannelActivityOrBuilder {
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.google.cloud.video.livestream.logging.v1.LogsProto.internal_static_google_cloud_video_livestream_logging_v1_ChannelActivity_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.google.cloud.video.livestream.logging.v1.LogsProto.internal_static_google_cloud_video_livestream_logging_v1_ChannelActivity_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.google.cloud.video.livestream.logging.v1.ChannelActivity.class, com.google.cloud.video.livestream.logging.v1.ChannelActivity.Builder.class);
    }

    // Construct using com.google.cloud.video.livestream.logging.v1.ChannelActivity.newBuilder()
    private Builder() {

    }

    private Builder(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      super(parent);

    }
    @java.lang.Override
    public Builder clear() {
      super.clear();
      bitField0_ = 0;
      message_ = "";
      if (streamingStateChangeBuilder_ != null) {
        streamingStateChangeBuilder_.clear();
      }
      if (streamingErrorBuilder_ != null) {
        streamingErrorBuilder_.clear();
      }
      if (inputAcceptBuilder_ != null) {
        inputAcceptBuilder_.clear();
      }
      if (inputErrorBuilder_ != null) {
        inputErrorBuilder_.clear();
      }
      if (inputDisconnectBuilder_ != null) {
        inputDisconnectBuilder_.clear();
      }
      activityTypeCase_ = 0;
      activityType_ = null;
      return this;
    }

    @java.lang.Override
    public com.google.protobuf.Descriptors.Descriptor
        getDescriptorForType() {
      return com.google.cloud.video.livestream.logging.v1.LogsProto.internal_static_google_cloud_video_livestream_logging_v1_ChannelActivity_descriptor;
    }

    @java.lang.Override
    public com.google.cloud.video.livestream.logging.v1.ChannelActivity getDefaultInstanceForType() {
      return com.google.cloud.video.livestream.logging.v1.ChannelActivity.getDefaultInstance();
    }

    @java.lang.Override
    public com.google.cloud.video.livestream.logging.v1.ChannelActivity build() {
      com.google.cloud.video.livestream.logging.v1.ChannelActivity result = buildPartial();
      if (!result.isInitialized()) {
        throw newUninitializedMessageException(result);
      }
      return result;
    }

    @java.lang.Override
    public com.google.cloud.video.livestream.logging.v1.ChannelActivity buildPartial() {
      com.google.cloud.video.livestream.logging.v1.ChannelActivity result = new com.google.cloud.video.livestream.logging.v1.ChannelActivity(this);
      if (bitField0_ != 0) { buildPartial0(result); }
      buildPartialOneofs(result);
      onBuilt();
      return result;
    }

    private void buildPartial0(com.google.cloud.video.livestream.logging.v1.ChannelActivity result) {
      int from_bitField0_ = bitField0_;
      if (((from_bitField0_ & 0x00000001) != 0)) {
        result.message_ = message_;
      }
    }

    private void buildPartialOneofs(com.google.cloud.video.livestream.logging.v1.ChannelActivity result) {
      result.activityTypeCase_ = activityTypeCase_;
      result.activityType_ = this.activityType_;
      if (activityTypeCase_ == 2 &&
          streamingStateChangeBuilder_ != null) {
        result.activityType_ = streamingStateChangeBuilder_.build();
      }
      if (activityTypeCase_ == 3 &&
          streamingErrorBuilder_ != null) {
        result.activityType_ = streamingErrorBuilder_.build();
      }
      if (activityTypeCase_ == 4 &&
          inputAcceptBuilder_ != null) {
        result.activityType_ = inputAcceptBuilder_.build();
      }
      if (activityTypeCase_ == 5 &&
          inputErrorBuilder_ != null) {
        result.activityType_ = inputErrorBuilder_.build();
      }
      if (activityTypeCase_ == 6 &&
          inputDisconnectBuilder_ != null) {
        result.activityType_ = inputDisconnectBuilder_.build();
      }
    }

    @java.lang.Override
    public Builder clone() {
      return super.clone();
    }
    @java.lang.Override
    public Builder setField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        java.lang.Object value) {
      return super.setField(field, value);
    }
    @java.lang.Override
    public Builder clearField(
        com.google.protobuf.Descriptors.FieldDescriptor field) {
      return super.clearField(field);
    }
    @java.lang.Override
    public Builder clearOneof(
        com.google.protobuf.Descriptors.OneofDescriptor oneof) {
      return super.clearOneof(oneof);
    }
    @java.lang.Override
    public Builder setRepeatedField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        int index, java.lang.Object value) {
      return super.setRepeatedField(field, index, value);
    }
    @java.lang.Override
    public Builder addRepeatedField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        java.lang.Object value) {
      return super.addRepeatedField(field, value);
    }
    @java.lang.Override
    public Builder mergeFrom(com.google.protobuf.Message other) {
      if (other instanceof com.google.cloud.video.livestream.logging.v1.ChannelActivity) {
        return mergeFrom((com.google.cloud.video.livestream.logging.v1.ChannelActivity)other);
      } else {
        super.mergeFrom(other);
        return this;
      }
    }

    public Builder mergeFrom(com.google.cloud.video.livestream.logging.v1.ChannelActivity other) {
      if (other == com.google.cloud.video.livestream.logging.v1.ChannelActivity.getDefaultInstance()) return this;
      if (!other.getMessage().isEmpty()) {
        message_ = other.message_;
        bitField0_ |= 0x00000001;
        onChanged();
      }
      switch (other.getActivityTypeCase()) {
        case STREAMING_STATE_CHANGE: {
          mergeStreamingStateChange(other.getStreamingStateChange());
          break;
        }
        case STREAMING_ERROR: {
          mergeStreamingError(other.getStreamingError());
          break;
        }
        case INPUT_ACCEPT: {
          mergeInputAccept(other.getInputAccept());
          break;
        }
        case INPUT_ERROR: {
          mergeInputError(other.getInputError());
          break;
        }
        case INPUT_DISCONNECT: {
          mergeInputDisconnect(other.getInputDisconnect());
          break;
        }
        case ACTIVITYTYPE_NOT_SET: {
          break;
        }
      }
      this.mergeUnknownFields(other.getUnknownFields());
      onChanged();
      return this;
    }

    @java.lang.Override
    public final boolean isInitialized() {
      return true;
    }

    @java.lang.Override
    public Builder mergeFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 10: {
              message_ = input.readStringRequireUtf8();
              bitField0_ |= 0x00000001;
              break;
            } // case 10
            case 18: {
              input.readMessage(
                  getStreamingStateChangeFieldBuilder().getBuilder(),
                  extensionRegistry);
              activityTypeCase_ = 2;
              break;
            } // case 18
            case 26: {
              input.readMessage(
                  getStreamingErrorFieldBuilder().getBuilder(),
                  extensionRegistry);
              activityTypeCase_ = 3;
              break;
            } // case 26
            case 34: {
              input.readMessage(
                  getInputAcceptFieldBuilder().getBuilder(),
                  extensionRegistry);
              activityTypeCase_ = 4;
              break;
            } // case 34
            case 42: {
              input.readMessage(
                  getInputErrorFieldBuilder().getBuilder(),
                  extensionRegistry);
              activityTypeCase_ = 5;
              break;
            } // case 42
            case 50: {
              input.readMessage(
                  getInputDisconnectFieldBuilder().getBuilder(),
                  extensionRegistry);
              activityTypeCase_ = 6;
              break;
            } // case 50
            default: {
              if (!super.parseUnknownField(input, extensionRegistry, tag)) {
                done = true; // was an endgroup tag
              }
              break;
            } // default:
          } // switch (tag)
        } // while (!done)
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.unwrapIOException();
      } finally {
        onChanged();
      } // finally
      return this;
    }
    private int activityTypeCase_ = 0;
    private java.lang.Object activityType_;
    public ActivityTypeCase
        getActivityTypeCase() {
      return ActivityTypeCase.forNumber(
          activityTypeCase_);
    }

    public Builder clearActivityType() {
      activityTypeCase_ = 0;
      activityType_ = null;
      onChanged();
      return this;
    }

    private int bitField0_;

    private java.lang.Object message_ = "";
    /**
     * <pre>
     * Message is for more details of the log and instructions to users.
     * </pre>
     *
     * <code>string message = 1;</code>
     * @return The message.
     */
    public java.lang.String getMessage() {
      java.lang.Object ref = message_;
      if (!(ref instanceof java.lang.String)) {
        com.google.protobuf.ByteString bs =
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        message_ = s;
        return s;
      } else {
        return (java.lang.String) ref;
      }
    }
    /**
     * <pre>
     * Message is for more details of the log and instructions to users.
     * </pre>
     *
     * <code>string message = 1;</code>
     * @return The bytes for message.
     */
    public com.google.protobuf.ByteString
        getMessageBytes() {
      java.lang.Object ref = message_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        message_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }
    /**
     * <pre>
     * Message is for more details of the log and instructions to users.
     * </pre>
     *
     * <code>string message = 1;</code>
     * @param value The message to set.
     * @return This builder for chaining.
     */
    public Builder setMessage(
        java.lang.String value) {
      if (value == null) { throw new NullPointerException(); }
      message_ = value;
      bitField0_ |= 0x00000001;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * Message is for more details of the log and instructions to users.
     * </pre>
     *
     * <code>string message = 1;</code>
     * @return This builder for chaining.
     */
    public Builder clearMessage() {
      message_ = getDefaultInstance().getMessage();
      bitField0_ = (bitField0_ & ~0x00000001);
      onChanged();
      return this;
    }
    /**
     * <pre>
     * Message is for more details of the log and instructions to users.
     * </pre>
     *
     * <code>string message = 1;</code>
     * @param value The bytes for message to set.
     * @return This builder for chaining.
     */
    public Builder setMessageBytes(
        com.google.protobuf.ByteString value) {
      if (value == null) { throw new NullPointerException(); }
      checkByteStringIsUtf8(value);
      message_ = value;
      bitField0_ |= 0x00000001;
      onChanged();
      return this;
    }

    private com.google.protobuf.SingleFieldBuilderV3<
        com.google.cloud.video.livestream.logging.v1.StreamingStateChange, com.google.cloud.video.livestream.logging.v1.StreamingStateChange.Builder, com.google.cloud.video.livestream.logging.v1.StreamingStateChangeOrBuilder> streamingStateChangeBuilder_;
    /**
     * <pre>
     * The channel streaming state changes.
     * </pre>
     *
     * <code>.google.cloud.video.livestream.logging.v1.StreamingStateChange streaming_state_change = 2;</code>
     * @return Whether the streamingStateChange field is set.
     */
    @java.lang.Override
    public boolean hasStreamingStateChange() {
      return activityTypeCase_ == 2;
    }
    /**
     * <pre>
     * The channel streaming state changes.
     * </pre>
     *
     * <code>.google.cloud.video.livestream.logging.v1.StreamingStateChange streaming_state_change = 2;</code>
     * @return The streamingStateChange.
     */
    @java.lang.Override
    public com.google.cloud.video.livestream.logging.v1.StreamingStateChange getStreamingStateChange() {
      if (streamingStateChangeBuilder_ == null) {
        if (activityTypeCase_ == 2) {
          return (com.google.cloud.video.livestream.logging.v1.StreamingStateChange) activityType_;
        }
        return com.google.cloud.video.livestream.logging.v1.StreamingStateChange.getDefaultInstance();
      } else {
        if (activityTypeCase_ == 2) {
          return streamingStateChangeBuilder_.getMessage();
        }
        return com.google.cloud.video.livestream.logging.v1.StreamingStateChange.getDefaultInstance();
      }
    }
    /**
     * <pre>
     * The channel streaming state changes.
     * </pre>
     *
     * <code>.google.cloud.video.livestream.logging.v1.StreamingStateChange streaming_state_change = 2;</code>
     */
    public Builder setStreamingStateChange(com.google.cloud.video.livestream.logging.v1.StreamingStateChange value) {
      if (streamingStateChangeBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        activityType_ = value;
        onChanged();
      } else {
        streamingStateChangeBuilder_.setMessage(value);
      }
      activityTypeCase_ = 2;
      return this;
    }
    /**
     * <pre>
     * The channel streaming state changes.
     * </pre>
     *
     * <code>.google.cloud.video.livestream.logging.v1.StreamingStateChange streaming_state_change = 2;</code>
     */
    public Builder setStreamingStateChange(
        com.google.cloud.video.livestream.logging.v1.StreamingStateChange.Builder builderForValue) {
      if (streamingStateChangeBuilder_ == null) {
        activityType_ = builderForValue.build();
        onChanged();
      } else {
        streamingStateChangeBuilder_.setMessage(builderForValue.build());
      }
      activityTypeCase_ = 2;
      return this;
    }
    /**
     * <pre>
     * The channel streaming state changes.
     * </pre>
     *
     * <code>.google.cloud.video.livestream.logging.v1.StreamingStateChange streaming_state_change = 2;</code>
     */
    public Builder mergeStreamingStateChange(com.google.cloud.video.livestream.logging.v1.StreamingStateChange value) {
      if (streamingStateChangeBuilder_ == null) {
        if (activityTypeCase_ == 2 &&
            activityType_ != com.google.cloud.video.livestream.logging.v1.StreamingStateChange.getDefaultInstance()) {
          activityType_ = com.google.cloud.video.livestream.logging.v1.StreamingStateChange.newBuilder((com.google.cloud.video.livestream.logging.v1.StreamingStateChange) activityType_)
              .mergeFrom(value).buildPartial();
        } else {
          activityType_ = value;
        }
        onChanged();
      } else {
        if (activityTypeCase_ == 2) {
          streamingStateChangeBuilder_.mergeFrom(value);
        } else {
          streamingStateChangeBuilder_.setMessage(value);
        }
      }
      activityTypeCase_ = 2;
      return this;
    }
    /**
     * <pre>
     * The channel streaming state changes.
     * </pre>
     *
     * <code>.google.cloud.video.livestream.logging.v1.StreamingStateChange streaming_state_change = 2;</code>
     */
    public Builder clearStreamingStateChange() {
      if (streamingStateChangeBuilder_ == null) {
        if (activityTypeCase_ == 2) {
          activityTypeCase_ = 0;
          activityType_ = null;
          onChanged();
        }
      } else {
        if (activityTypeCase_ == 2) {
          activityTypeCase_ = 0;
          activityType_ = null;
        }
        streamingStateChangeBuilder_.clear();
      }
      return this;
    }
    /**
     * <pre>
     * The channel streaming state changes.
     * </pre>
     *
     * <code>.google.cloud.video.livestream.logging.v1.StreamingStateChange streaming_state_change = 2;</code>
     */
    public com.google.cloud.video.livestream.logging.v1.StreamingStateChange.Builder getStreamingStateChangeBuilder() {
      return getStreamingStateChangeFieldBuilder().getBuilder();
    }
    /**
     * <pre>
     * The channel streaming state changes.
     * </pre>
     *
     * <code>.google.cloud.video.livestream.logging.v1.StreamingStateChange streaming_state_change = 2;</code>
     */
    @java.lang.Override
    public com.google.cloud.video.livestream.logging.v1.StreamingStateChangeOrBuilder getStreamingStateChangeOrBuilder() {
      if ((activityTypeCase_ == 2) && (streamingStateChangeBuilder_ != null)) {
        return streamingStateChangeBuilder_.getMessageOrBuilder();
      } else {
        if (activityTypeCase_ == 2) {
          return (com.google.cloud.video.livestream.logging.v1.StreamingStateChange) activityType_;
        }
        return com.google.cloud.video.livestream.logging.v1.StreamingStateChange.getDefaultInstance();
      }
    }
    /**
     * <pre>
     * The channel streaming state changes.
     * </pre>
     *
     * <code>.google.cloud.video.livestream.logging.v1.StreamingStateChange streaming_state_change = 2;</code>
     */
    private com.google.protobuf.SingleFieldBuilderV3<
        com.google.cloud.video.livestream.logging.v1.StreamingStateChange, com.google.cloud.video.livestream.logging.v1.StreamingStateChange.Builder, com.google.cloud.video.livestream.logging.v1.StreamingStateChangeOrBuilder> 
        getStreamingStateChangeFieldBuilder() {
      if (streamingStateChangeBuilder_ == null) {
        if (!(activityTypeCase_ == 2)) {
          activityType_ = com.google.cloud.video.livestream.logging.v1.StreamingStateChange.getDefaultInstance();
        }
        streamingStateChangeBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
            com.google.cloud.video.livestream.logging.v1.StreamingStateChange, com.google.cloud.video.livestream.logging.v1.StreamingStateChange.Builder, com.google.cloud.video.livestream.logging.v1.StreamingStateChangeOrBuilder>(
                (com.google.cloud.video.livestream.logging.v1.StreamingStateChange) activityType_,
                getParentForChildren(),
                isClean());
        activityType_ = null;
      }
      activityTypeCase_ = 2;
      onChanged();
      return streamingStateChangeBuilder_;
    }

    private com.google.protobuf.SingleFieldBuilderV3<
        com.google.cloud.video.livestream.logging.v1.StreamingError, com.google.cloud.video.livestream.logging.v1.StreamingError.Builder, com.google.cloud.video.livestream.logging.v1.StreamingErrorOrBuilder> streamingErrorBuilder_;
    /**
     * <pre>
     * An error happens with the video pipeline.
     * </pre>
     *
     * <code>.google.cloud.video.livestream.logging.v1.StreamingError streaming_error = 3;</code>
     * @return Whether the streamingError field is set.
     */
    @java.lang.Override
    public boolean hasStreamingError() {
      return activityTypeCase_ == 3;
    }
    /**
     * <pre>
     * An error happens with the video pipeline.
     * </pre>
     *
     * <code>.google.cloud.video.livestream.logging.v1.StreamingError streaming_error = 3;</code>
     * @return The streamingError.
     */
    @java.lang.Override
    public com.google.cloud.video.livestream.logging.v1.StreamingError getStreamingError() {
      if (streamingErrorBuilder_ == null) {
        if (activityTypeCase_ == 3) {
          return (com.google.cloud.video.livestream.logging.v1.StreamingError) activityType_;
        }
        return com.google.cloud.video.livestream.logging.v1.StreamingError.getDefaultInstance();
      } else {
        if (activityTypeCase_ == 3) {
          return streamingErrorBuilder_.getMessage();
        }
        return com.google.cloud.video.livestream.logging.v1.StreamingError.getDefaultInstance();
      }
    }
    /**
     * <pre>
     * An error happens with the video pipeline.
     * </pre>
     *
     * <code>.google.cloud.video.livestream.logging.v1.StreamingError streaming_error = 3;</code>
     */
    public Builder setStreamingError(com.google.cloud.video.livestream.logging.v1.StreamingError value) {
      if (streamingErrorBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        activityType_ = value;
        onChanged();
      } else {
        streamingErrorBuilder_.setMessage(value);
      }
      activityTypeCase_ = 3;
      return this;
    }
    /**
     * <pre>
     * An error happens with the video pipeline.
     * </pre>
     *
     * <code>.google.cloud.video.livestream.logging.v1.StreamingError streaming_error = 3;</code>
     */
    public Builder setStreamingError(
        com.google.cloud.video.livestream.logging.v1.StreamingError.Builder builderForValue) {
      if (streamingErrorBuilder_ == null) {
        activityType_ = builderForValue.build();
        onChanged();
      } else {
        streamingErrorBuilder_.setMessage(builderForValue.build());
      }
      activityTypeCase_ = 3;
      return this;
    }
    /**
     * <pre>
     * An error happens with the video pipeline.
     * </pre>
     *
     * <code>.google.cloud.video.livestream.logging.v1.StreamingError streaming_error = 3;</code>
     */
    public Builder mergeStreamingError(com.google.cloud.video.livestream.logging.v1.StreamingError value) {
      if (streamingErrorBuilder_ == null) {
        if (activityTypeCase_ == 3 &&
            activityType_ != com.google.cloud.video.livestream.logging.v1.StreamingError.getDefaultInstance()) {
          activityType_ = com.google.cloud.video.livestream.logging.v1.StreamingError.newBuilder((com.google.cloud.video.livestream.logging.v1.StreamingError) activityType_)
              .mergeFrom(value).buildPartial();
        } else {
          activityType_ = value;
        }
        onChanged();
      } else {
        if (activityTypeCase_ == 3) {
          streamingErrorBuilder_.mergeFrom(value);
        } else {
          streamingErrorBuilder_.setMessage(value);
        }
      }
      activityTypeCase_ = 3;
      return this;
    }
    /**
     * <pre>
     * An error happens with the video pipeline.
     * </pre>
     *
     * <code>.google.cloud.video.livestream.logging.v1.StreamingError streaming_error = 3;</code>
     */
    public Builder clearStreamingError() {
      if (streamingErrorBuilder_ == null) {
        if (activityTypeCase_ == 3) {
          activityTypeCase_ = 0;
          activityType_ = null;
          onChanged();
        }
      } else {
        if (activityTypeCase_ == 3) {
          activityTypeCase_ = 0;
          activityType_ = null;
        }
        streamingErrorBuilder_.clear();
      }
      return this;
    }
    /**
     * <pre>
     * An error happens with the video pipeline.
     * </pre>
     *
     * <code>.google.cloud.video.livestream.logging.v1.StreamingError streaming_error = 3;</code>
     */
    public com.google.cloud.video.livestream.logging.v1.StreamingError.Builder getStreamingErrorBuilder() {
      return getStreamingErrorFieldBuilder().getBuilder();
    }
    /**
     * <pre>
     * An error happens with the video pipeline.
     * </pre>
     *
     * <code>.google.cloud.video.livestream.logging.v1.StreamingError streaming_error = 3;</code>
     */
    @java.lang.Override
    public com.google.cloud.video.livestream.logging.v1.StreamingErrorOrBuilder getStreamingErrorOrBuilder() {
      if ((activityTypeCase_ == 3) && (streamingErrorBuilder_ != null)) {
        return streamingErrorBuilder_.getMessageOrBuilder();
      } else {
        if (activityTypeCase_ == 3) {
          return (com.google.cloud.video.livestream.logging.v1.StreamingError) activityType_;
        }
        return com.google.cloud.video.livestream.logging.v1.StreamingError.getDefaultInstance();
      }
    }
    /**
     * <pre>
     * An error happens with the video pipeline.
     * </pre>
     *
     * <code>.google.cloud.video.livestream.logging.v1.StreamingError streaming_error = 3;</code>
     */
    private com.google.protobuf.SingleFieldBuilderV3<
        com.google.cloud.video.livestream.logging.v1.StreamingError, com.google.cloud.video.livestream.logging.v1.StreamingError.Builder, com.google.cloud.video.livestream.logging.v1.StreamingErrorOrBuilder> 
        getStreamingErrorFieldBuilder() {
      if (streamingErrorBuilder_ == null) {
        if (!(activityTypeCase_ == 3)) {
          activityType_ = com.google.cloud.video.livestream.logging.v1.StreamingError.getDefaultInstance();
        }
        streamingErrorBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
            com.google.cloud.video.livestream.logging.v1.StreamingError, com.google.cloud.video.livestream.logging.v1.StreamingError.Builder, com.google.cloud.video.livestream.logging.v1.StreamingErrorOrBuilder>(
                (com.google.cloud.video.livestream.logging.v1.StreamingError) activityType_,
                getParentForChildren(),
                isClean());
        activityType_ = null;
      }
      activityTypeCase_ = 3;
      onChanged();
      return streamingErrorBuilder_;
    }

    private com.google.protobuf.SingleFieldBuilderV3<
        com.google.cloud.video.livestream.logging.v1.InputAccept, com.google.cloud.video.livestream.logging.v1.InputAccept.Builder, com.google.cloud.video.livestream.logging.v1.InputAcceptOrBuilder> inputAcceptBuilder_;
    /**
     * <pre>
     * The channel has accepted an input stream.
     * </pre>
     *
     * <code>.google.cloud.video.livestream.logging.v1.InputAccept input_accept = 4;</code>
     * @return Whether the inputAccept field is set.
     */
    @java.lang.Override
    public boolean hasInputAccept() {
      return activityTypeCase_ == 4;
    }
    /**
     * <pre>
     * The channel has accepted an input stream.
     * </pre>
     *
     * <code>.google.cloud.video.livestream.logging.v1.InputAccept input_accept = 4;</code>
     * @return The inputAccept.
     */
    @java.lang.Override
    public com.google.cloud.video.livestream.logging.v1.InputAccept getInputAccept() {
      if (inputAcceptBuilder_ == null) {
        if (activityTypeCase_ == 4) {
          return (com.google.cloud.video.livestream.logging.v1.InputAccept) activityType_;
        }
        return com.google.cloud.video.livestream.logging.v1.InputAccept.getDefaultInstance();
      } else {
        if (activityTypeCase_ == 4) {
          return inputAcceptBuilder_.getMessage();
        }
        return com.google.cloud.video.livestream.logging.v1.InputAccept.getDefaultInstance();
      }
    }
    /**
     * <pre>
     * The channel has accepted an input stream.
     * </pre>
     *
     * <code>.google.cloud.video.livestream.logging.v1.InputAccept input_accept = 4;</code>
     */
    public Builder setInputAccept(com.google.cloud.video.livestream.logging.v1.InputAccept value) {
      if (inputAcceptBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        activityType_ = value;
        onChanged();
      } else {
        inputAcceptBuilder_.setMessage(value);
      }
      activityTypeCase_ = 4;
      return this;
    }
    /**
     * <pre>
     * The channel has accepted an input stream.
     * </pre>
     *
     * <code>.google.cloud.video.livestream.logging.v1.InputAccept input_accept = 4;</code>
     */
    public Builder setInputAccept(
        com.google.cloud.video.livestream.logging.v1.InputAccept.Builder builderForValue) {
      if (inputAcceptBuilder_ == null) {
        activityType_ = builderForValue.build();
        onChanged();
      } else {
        inputAcceptBuilder_.setMessage(builderForValue.build());
      }
      activityTypeCase_ = 4;
      return this;
    }
    /**
     * <pre>
     * The channel has accepted an input stream.
     * </pre>
     *
     * <code>.google.cloud.video.livestream.logging.v1.InputAccept input_accept = 4;</code>
     */
    public Builder mergeInputAccept(com.google.cloud.video.livestream.logging.v1.InputAccept value) {
      if (inputAcceptBuilder_ == null) {
        if (activityTypeCase_ == 4 &&
            activityType_ != com.google.cloud.video.livestream.logging.v1.InputAccept.getDefaultInstance()) {
          activityType_ = com.google.cloud.video.livestream.logging.v1.InputAccept.newBuilder((com.google.cloud.video.livestream.logging.v1.InputAccept) activityType_)
              .mergeFrom(value).buildPartial();
        } else {
          activityType_ = value;
        }
        onChanged();
      } else {
        if (activityTypeCase_ == 4) {
          inputAcceptBuilder_.mergeFrom(value);
        } else {
          inputAcceptBuilder_.setMessage(value);
        }
      }
      activityTypeCase_ = 4;
      return this;
    }
    /**
     * <pre>
     * The channel has accepted an input stream.
     * </pre>
     *
     * <code>.google.cloud.video.livestream.logging.v1.InputAccept input_accept = 4;</code>
     */
    public Builder clearInputAccept() {
      if (inputAcceptBuilder_ == null) {
        if (activityTypeCase_ == 4) {
          activityTypeCase_ = 0;
          activityType_ = null;
          onChanged();
        }
      } else {
        if (activityTypeCase_ == 4) {
          activityTypeCase_ = 0;
          activityType_ = null;
        }
        inputAcceptBuilder_.clear();
      }
      return this;
    }
    /**
     * <pre>
     * The channel has accepted an input stream.
     * </pre>
     *
     * <code>.google.cloud.video.livestream.logging.v1.InputAccept input_accept = 4;</code>
     */
    public com.google.cloud.video.livestream.logging.v1.InputAccept.Builder getInputAcceptBuilder() {
      return getInputAcceptFieldBuilder().getBuilder();
    }
    /**
     * <pre>
     * The channel has accepted an input stream.
     * </pre>
     *
     * <code>.google.cloud.video.livestream.logging.v1.InputAccept input_accept = 4;</code>
     */
    @java.lang.Override
    public com.google.cloud.video.livestream.logging.v1.InputAcceptOrBuilder getInputAcceptOrBuilder() {
      if ((activityTypeCase_ == 4) && (inputAcceptBuilder_ != null)) {
        return inputAcceptBuilder_.getMessageOrBuilder();
      } else {
        if (activityTypeCase_ == 4) {
          return (com.google.cloud.video.livestream.logging.v1.InputAccept) activityType_;
        }
        return com.google.cloud.video.livestream.logging.v1.InputAccept.getDefaultInstance();
      }
    }
    /**
     * <pre>
     * The channel has accepted an input stream.
     * </pre>
     *
     * <code>.google.cloud.video.livestream.logging.v1.InputAccept input_accept = 4;</code>
     */
    private com.google.protobuf.SingleFieldBuilderV3<
        com.google.cloud.video.livestream.logging.v1.InputAccept, com.google.cloud.video.livestream.logging.v1.InputAccept.Builder, com.google.cloud.video.livestream.logging.v1.InputAcceptOrBuilder> 
        getInputAcceptFieldBuilder() {
      if (inputAcceptBuilder_ == null) {
        if (!(activityTypeCase_ == 4)) {
          activityType_ = com.google.cloud.video.livestream.logging.v1.InputAccept.getDefaultInstance();
        }
        inputAcceptBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
            com.google.cloud.video.livestream.logging.v1.InputAccept, com.google.cloud.video.livestream.logging.v1.InputAccept.Builder, com.google.cloud.video.livestream.logging.v1.InputAcceptOrBuilder>(
                (com.google.cloud.video.livestream.logging.v1.InputAccept) activityType_,
                getParentForChildren(),
                isClean());
        activityType_ = null;
      }
      activityTypeCase_ = 4;
      onChanged();
      return inputAcceptBuilder_;
    }

    private com.google.protobuf.SingleFieldBuilderV3<
        com.google.cloud.video.livestream.logging.v1.InputError, com.google.cloud.video.livestream.logging.v1.InputError.Builder, com.google.cloud.video.livestream.logging.v1.InputErrorOrBuilder> inputErrorBuilder_;
    /**
     * <pre>
     * An error happens with the input stream.
     * </pre>
     *
     * <code>.google.cloud.video.livestream.logging.v1.InputError input_error = 5;</code>
     * @return Whether the inputError field is set.
     */
    @java.lang.Override
    public boolean hasInputError() {
      return activityTypeCase_ == 5;
    }
    /**
     * <pre>
     * An error happens with the input stream.
     * </pre>
     *
     * <code>.google.cloud.video.livestream.logging.v1.InputError input_error = 5;</code>
     * @return The inputError.
     */
    @java.lang.Override
    public com.google.cloud.video.livestream.logging.v1.InputError getInputError() {
      if (inputErrorBuilder_ == null) {
        if (activityTypeCase_ == 5) {
          return (com.google.cloud.video.livestream.logging.v1.InputError) activityType_;
        }
        return com.google.cloud.video.livestream.logging.v1.InputError.getDefaultInstance();
      } else {
        if (activityTypeCase_ == 5) {
          return inputErrorBuilder_.getMessage();
        }
        return com.google.cloud.video.livestream.logging.v1.InputError.getDefaultInstance();
      }
    }
    /**
     * <pre>
     * An error happens with the input stream.
     * </pre>
     *
     * <code>.google.cloud.video.livestream.logging.v1.InputError input_error = 5;</code>
     */
    public Builder setInputError(com.google.cloud.video.livestream.logging.v1.InputError value) {
      if (inputErrorBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        activityType_ = value;
        onChanged();
      } else {
        inputErrorBuilder_.setMessage(value);
      }
      activityTypeCase_ = 5;
      return this;
    }
    /**
     * <pre>
     * An error happens with the input stream.
     * </pre>
     *
     * <code>.google.cloud.video.livestream.logging.v1.InputError input_error = 5;</code>
     */
    public Builder setInputError(
        com.google.cloud.video.livestream.logging.v1.InputError.Builder builderForValue) {
      if (inputErrorBuilder_ == null) {
        activityType_ = builderForValue.build();
        onChanged();
      } else {
        inputErrorBuilder_.setMessage(builderForValue.build());
      }
      activityTypeCase_ = 5;
      return this;
    }
    /**
     * <pre>
     * An error happens with the input stream.
     * </pre>
     *
     * <code>.google.cloud.video.livestream.logging.v1.InputError input_error = 5;</code>
     */
    public Builder mergeInputError(com.google.cloud.video.livestream.logging.v1.InputError value) {
      if (inputErrorBuilder_ == null) {
        if (activityTypeCase_ == 5 &&
            activityType_ != com.google.cloud.video.livestream.logging.v1.InputError.getDefaultInstance()) {
          activityType_ = com.google.cloud.video.livestream.logging.v1.InputError.newBuilder((com.google.cloud.video.livestream.logging.v1.InputError) activityType_)
              .mergeFrom(value).buildPartial();
        } else {
          activityType_ = value;
        }
        onChanged();
      } else {
        if (activityTypeCase_ == 5) {
          inputErrorBuilder_.mergeFrom(value);
        } else {
          inputErrorBuilder_.setMessage(value);
        }
      }
      activityTypeCase_ = 5;
      return this;
    }
    /**
     * <pre>
     * An error happens with the input stream.
     * </pre>
     *
     * <code>.google.cloud.video.livestream.logging.v1.InputError input_error = 5;</code>
     */
    public Builder clearInputError() {
      if (inputErrorBuilder_ == null) {
        if (activityTypeCase_ == 5) {
          activityTypeCase_ = 0;
          activityType_ = null;
          onChanged();
        }
      } else {
        if (activityTypeCase_ == 5) {
          activityTypeCase_ = 0;
          activityType_ = null;
        }
        inputErrorBuilder_.clear();
      }
      return this;
    }
    /**
     * <pre>
     * An error happens with the input stream.
     * </pre>
     *
     * <code>.google.cloud.video.livestream.logging.v1.InputError input_error = 5;</code>
     */
    public com.google.cloud.video.livestream.logging.v1.InputError.Builder getInputErrorBuilder() {
      return getInputErrorFieldBuilder().getBuilder();
    }
    /**
     * <pre>
     * An error happens with the input stream.
     * </pre>
     *
     * <code>.google.cloud.video.livestream.logging.v1.InputError input_error = 5;</code>
     */
    @java.lang.Override
    public com.google.cloud.video.livestream.logging.v1.InputErrorOrBuilder getInputErrorOrBuilder() {
      if ((activityTypeCase_ == 5) && (inputErrorBuilder_ != null)) {
        return inputErrorBuilder_.getMessageOrBuilder();
      } else {
        if (activityTypeCase_ == 5) {
          return (com.google.cloud.video.livestream.logging.v1.InputError) activityType_;
        }
        return com.google.cloud.video.livestream.logging.v1.InputError.getDefaultInstance();
      }
    }
    /**
     * <pre>
     * An error happens with the input stream.
     * </pre>
     *
     * <code>.google.cloud.video.livestream.logging.v1.InputError input_error = 5;</code>
     */
    private com.google.protobuf.SingleFieldBuilderV3<
        com.google.cloud.video.livestream.logging.v1.InputError, com.google.cloud.video.livestream.logging.v1.InputError.Builder, com.google.cloud.video.livestream.logging.v1.InputErrorOrBuilder> 
        getInputErrorFieldBuilder() {
      if (inputErrorBuilder_ == null) {
        if (!(activityTypeCase_ == 5)) {
          activityType_ = com.google.cloud.video.livestream.logging.v1.InputError.getDefaultInstance();
        }
        inputErrorBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
            com.google.cloud.video.livestream.logging.v1.InputError, com.google.cloud.video.livestream.logging.v1.InputError.Builder, com.google.cloud.video.livestream.logging.v1.InputErrorOrBuilder>(
                (com.google.cloud.video.livestream.logging.v1.InputError) activityType_,
                getParentForChildren(),
                isClean());
        activityType_ = null;
      }
      activityTypeCase_ = 5;
      onChanged();
      return inputErrorBuilder_;
    }

    private com.google.protobuf.SingleFieldBuilderV3<
        com.google.cloud.video.livestream.logging.v1.InputDisconnect, com.google.cloud.video.livestream.logging.v1.InputDisconnect.Builder, com.google.cloud.video.livestream.logging.v1.InputDisconnectOrBuilder> inputDisconnectBuilder_;
    /**
     * <pre>
     * An input stream disconnects.
     * </pre>
     *
     * <code>.google.cloud.video.livestream.logging.v1.InputDisconnect input_disconnect = 6;</code>
     * @return Whether the inputDisconnect field is set.
     */
    @java.lang.Override
    public boolean hasInputDisconnect() {
      return activityTypeCase_ == 6;
    }
    /**
     * <pre>
     * An input stream disconnects.
     * </pre>
     *
     * <code>.google.cloud.video.livestream.logging.v1.InputDisconnect input_disconnect = 6;</code>
     * @return The inputDisconnect.
     */
    @java.lang.Override
    public com.google.cloud.video.livestream.logging.v1.InputDisconnect getInputDisconnect() {
      if (inputDisconnectBuilder_ == null) {
        if (activityTypeCase_ == 6) {
          return (com.google.cloud.video.livestream.logging.v1.InputDisconnect) activityType_;
        }
        return com.google.cloud.video.livestream.logging.v1.InputDisconnect.getDefaultInstance();
      } else {
        if (activityTypeCase_ == 6) {
          return inputDisconnectBuilder_.getMessage();
        }
        return com.google.cloud.video.livestream.logging.v1.InputDisconnect.getDefaultInstance();
      }
    }
    /**
     * <pre>
     * An input stream disconnects.
     * </pre>
     *
     * <code>.google.cloud.video.livestream.logging.v1.InputDisconnect input_disconnect = 6;</code>
     */
    public Builder setInputDisconnect(com.google.cloud.video.livestream.logging.v1.InputDisconnect value) {
      if (inputDisconnectBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        activityType_ = value;
        onChanged();
      } else {
        inputDisconnectBuilder_.setMessage(value);
      }
      activityTypeCase_ = 6;
      return this;
    }
    /**
     * <pre>
     * An input stream disconnects.
     * </pre>
     *
     * <code>.google.cloud.video.livestream.logging.v1.InputDisconnect input_disconnect = 6;</code>
     */
    public Builder setInputDisconnect(
        com.google.cloud.video.livestream.logging.v1.InputDisconnect.Builder builderForValue) {
      if (inputDisconnectBuilder_ == null) {
        activityType_ = builderForValue.build();
        onChanged();
      } else {
        inputDisconnectBuilder_.setMessage(builderForValue.build());
      }
      activityTypeCase_ = 6;
      return this;
    }
    /**
     * <pre>
     * An input stream disconnects.
     * </pre>
     *
     * <code>.google.cloud.video.livestream.logging.v1.InputDisconnect input_disconnect = 6;</code>
     */
    public Builder mergeInputDisconnect(com.google.cloud.video.livestream.logging.v1.InputDisconnect value) {
      if (inputDisconnectBuilder_ == null) {
        if (activityTypeCase_ == 6 &&
            activityType_ != com.google.cloud.video.livestream.logging.v1.InputDisconnect.getDefaultInstance()) {
          activityType_ = com.google.cloud.video.livestream.logging.v1.InputDisconnect.newBuilder((com.google.cloud.video.livestream.logging.v1.InputDisconnect) activityType_)
              .mergeFrom(value).buildPartial();
        } else {
          activityType_ = value;
        }
        onChanged();
      } else {
        if (activityTypeCase_ == 6) {
          inputDisconnectBuilder_.mergeFrom(value);
        } else {
          inputDisconnectBuilder_.setMessage(value);
        }
      }
      activityTypeCase_ = 6;
      return this;
    }
    /**
     * <pre>
     * An input stream disconnects.
     * </pre>
     *
     * <code>.google.cloud.video.livestream.logging.v1.InputDisconnect input_disconnect = 6;</code>
     */
    public Builder clearInputDisconnect() {
      if (inputDisconnectBuilder_ == null) {
        if (activityTypeCase_ == 6) {
          activityTypeCase_ = 0;
          activityType_ = null;
          onChanged();
        }
      } else {
        if (activityTypeCase_ == 6) {
          activityTypeCase_ = 0;
          activityType_ = null;
        }
        inputDisconnectBuilder_.clear();
      }
      return this;
    }
    /**
     * <pre>
     * An input stream disconnects.
     * </pre>
     *
     * <code>.google.cloud.video.livestream.logging.v1.InputDisconnect input_disconnect = 6;</code>
     */
    public com.google.cloud.video.livestream.logging.v1.InputDisconnect.Builder getInputDisconnectBuilder() {
      return getInputDisconnectFieldBuilder().getBuilder();
    }
    /**
     * <pre>
     * An input stream disconnects.
     * </pre>
     *
     * <code>.google.cloud.video.livestream.logging.v1.InputDisconnect input_disconnect = 6;</code>
     */
    @java.lang.Override
    public com.google.cloud.video.livestream.logging.v1.InputDisconnectOrBuilder getInputDisconnectOrBuilder() {
      if ((activityTypeCase_ == 6) && (inputDisconnectBuilder_ != null)) {
        return inputDisconnectBuilder_.getMessageOrBuilder();
      } else {
        if (activityTypeCase_ == 6) {
          return (com.google.cloud.video.livestream.logging.v1.InputDisconnect) activityType_;
        }
        return com.google.cloud.video.livestream.logging.v1.InputDisconnect.getDefaultInstance();
      }
    }
    /**
     * <pre>
     * An input stream disconnects.
     * </pre>
     *
     * <code>.google.cloud.video.livestream.logging.v1.InputDisconnect input_disconnect = 6;</code>
     */
    private com.google.protobuf.SingleFieldBuilderV3<
        com.google.cloud.video.livestream.logging.v1.InputDisconnect, com.google.cloud.video.livestream.logging.v1.InputDisconnect.Builder, com.google.cloud.video.livestream.logging.v1.InputDisconnectOrBuilder> 
        getInputDisconnectFieldBuilder() {
      if (inputDisconnectBuilder_ == null) {
        if (!(activityTypeCase_ == 6)) {
          activityType_ = com.google.cloud.video.livestream.logging.v1.InputDisconnect.getDefaultInstance();
        }
        inputDisconnectBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
            com.google.cloud.video.livestream.logging.v1.InputDisconnect, com.google.cloud.video.livestream.logging.v1.InputDisconnect.Builder, com.google.cloud.video.livestream.logging.v1.InputDisconnectOrBuilder>(
                (com.google.cloud.video.livestream.logging.v1.InputDisconnect) activityType_,
                getParentForChildren(),
                isClean());
        activityType_ = null;
      }
      activityTypeCase_ = 6;
      onChanged();
      return inputDisconnectBuilder_;
    }
    @java.lang.Override
    public final Builder setUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return super.setUnknownFields(unknownFields);
    }

    @java.lang.Override
    public final Builder mergeUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return super.mergeUnknownFields(unknownFields);
    }


    // @@protoc_insertion_point(builder_scope:google.cloud.video.livestream.logging.v1.ChannelActivity)
  }

  // @@protoc_insertion_point(class_scope:google.cloud.video.livestream.logging.v1.ChannelActivity)
  private static final com.google.cloud.video.livestream.logging.v1.ChannelActivity DEFAULT_INSTANCE;
  static {
    DEFAULT_INSTANCE = new com.google.cloud.video.livestream.logging.v1.ChannelActivity();
  }

  public static com.google.cloud.video.livestream.logging.v1.ChannelActivity getDefaultInstance() {
    return DEFAULT_INSTANCE;
  }

  private static final com.google.protobuf.Parser<ChannelActivity>
      PARSER = new com.google.protobuf.AbstractParser<ChannelActivity>() {
    @java.lang.Override
    public ChannelActivity parsePartialFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      Builder builder = newBuilder();
      try {
        builder.mergeFrom(input, extensionRegistry);
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(builder.buildPartial());
      } catch (com.google.protobuf.UninitializedMessageException e) {
        throw e.asInvalidProtocolBufferException().setUnfinishedMessage(builder.buildPartial());
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(e)
            .setUnfinishedMessage(builder.buildPartial());
      }
      return builder.buildPartial();
    }
  };

  public static com.google.protobuf.Parser<ChannelActivity> parser() {
    return PARSER;
  }

  @java.lang.Override
  public com.google.protobuf.Parser<ChannelActivity> getParserForType() {
    return PARSER;
  }

  @java.lang.Override
  public com.google.cloud.video.livestream.logging.v1.ChannelActivity getDefaultInstanceForType() {
    return DEFAULT_INSTANCE;
  }

}

