// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: google/api/expr/conformance/v1alpha1/conformance_service.proto

package com.google.api.expr.conformance.v1alpha1;

public interface EvalResponseOrBuilder extends
    // @@protoc_insertion_point(interface_extends:google.api.expr.conformance.v1alpha1.EvalResponse)
    com.google.protobuf.MessageOrBuilder {

  /**
   * <pre>
   * The execution result, or unset if execution couldn't start.
   * </pre>
   *
   * <code>.google.api.expr.v1alpha1.ExprValue result = 1;</code>
   * @return Whether the result field is set.
   */
  boolean hasResult();
  /**
   * <pre>
   * The execution result, or unset if execution couldn't start.
   * </pre>
   *
   * <code>.google.api.expr.v1alpha1.ExprValue result = 1;</code>
   * @return The result.
   */
  com.google.api.expr.v1alpha1.ExprValue getResult();
  /**
   * <pre>
   * The execution result, or unset if execution couldn't start.
   * </pre>
   *
   * <code>.google.api.expr.v1alpha1.ExprValue result = 1;</code>
   */
  com.google.api.expr.v1alpha1.ExprValueOrBuilder getResultOrBuilder();

  /**
   * <pre>
   * Any number of issues with [StatusDetails][] as the details.
   * Note that CEL execution errors are reified into [ExprValue][].
   * Nevertheless, we'll allow out-of-band issues to be raised,
   * which also makes the replies more regular.
   * </pre>
   *
   * <code>repeated .google.rpc.Status issues = 2;</code>
   */
  java.util.List<com.google.rpc.Status> 
      getIssuesList();
  /**
   * <pre>
   * Any number of issues with [StatusDetails][] as the details.
   * Note that CEL execution errors are reified into [ExprValue][].
   * Nevertheless, we'll allow out-of-band issues to be raised,
   * which also makes the replies more regular.
   * </pre>
   *
   * <code>repeated .google.rpc.Status issues = 2;</code>
   */
  com.google.rpc.Status getIssues(int index);
  /**
   * <pre>
   * Any number of issues with [StatusDetails][] as the details.
   * Note that CEL execution errors are reified into [ExprValue][].
   * Nevertheless, we'll allow out-of-band issues to be raised,
   * which also makes the replies more regular.
   * </pre>
   *
   * <code>repeated .google.rpc.Status issues = 2;</code>
   */
  int getIssuesCount();
  /**
   * <pre>
   * Any number of issues with [StatusDetails][] as the details.
   * Note that CEL execution errors are reified into [ExprValue][].
   * Nevertheless, we'll allow out-of-band issues to be raised,
   * which also makes the replies more regular.
   * </pre>
   *
   * <code>repeated .google.rpc.Status issues = 2;</code>
   */
  java.util.List<? extends com.google.rpc.StatusOrBuilder> 
      getIssuesOrBuilderList();
  /**
   * <pre>
   * Any number of issues with [StatusDetails][] as the details.
   * Note that CEL execution errors are reified into [ExprValue][].
   * Nevertheless, we'll allow out-of-band issues to be raised,
   * which also makes the replies more regular.
   * </pre>
   *
   * <code>repeated .google.rpc.Status issues = 2;</code>
   */
  com.google.rpc.StatusOrBuilder getIssuesOrBuilder(
      int index);
}
