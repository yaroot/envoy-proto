// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: google/maps/routes/v1/compute_routes_request.proto

package com.google.maps.routes.v1;

public final class ComputeRoutesRequestProto {
  private ComputeRoutesRequestProto() {}
  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistryLite registry) {
  }

  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistry registry) {
    registerAllExtensions(
        (com.google.protobuf.ExtensionRegistryLite) registry);
  }
  static final com.google.protobuf.Descriptors.Descriptor
    internal_static_google_maps_routes_v1_ComputeRoutesRequest_descriptor;
  static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_google_maps_routes_v1_ComputeRoutesRequest_fieldAccessorTable;
  static final com.google.protobuf.Descriptors.Descriptor
    internal_static_google_maps_routes_v1_RouteModifiers_descriptor;
  static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_google_maps_routes_v1_RouteModifiers_fieldAccessorTable;
  static final com.google.protobuf.Descriptors.Descriptor
    internal_static_google_maps_routes_v1_VehicleInfo_descriptor;
  static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_google_maps_routes_v1_VehicleInfo_fieldAccessorTable;

  public static com.google.protobuf.Descriptors.FileDescriptor
      getDescriptor() {
    return descriptor;
  }
  private static  com.google.protobuf.Descriptors.FileDescriptor
      descriptor;
  static {
    java.lang.String[] descriptorData = {
      "\n2google/maps/routes/v1/compute_routes_r" +
      "equest.proto\022\025google.maps.routes.v1\032$goo" +
      "gle/maps/routes/v1/polyline.proto\032\'googl" +
      "e/maps/routes/v1/toll_passes.proto\0321goog" +
      "le/maps/routes/v1/vehicle_emission_type." +
      "proto\032$google/maps/routes/v1/waypoint.pr" +
      "oto\032\037google/protobuf/timestamp.proto\"\273\005\n" +
      "\024ComputeRoutesRequest\022/\n\006origin\030\001 \001(\0132\037." +
      "google.maps.routes.v1.Waypoint\0224\n\013destin" +
      "ation\030\002 \001(\0132\037.google.maps.routes.v1.Wayp" +
      "oint\0226\n\rintermediates\030\003 \003(\0132\037.google.map" +
      "s.routes.v1.Waypoint\022;\n\013travel_mode\030\004 \001(" +
      "\0162&.google.maps.routes.v1.RouteTravelMod" +
      "e\022D\n\022routing_preference\030\005 \001(\0162(.google.m" +
      "aps.routes.v1.RoutingPreference\022@\n\020polyl" +
      "ine_quality\030\006 \001(\0162&.google.maps.routes.v" +
      "1.PolylineQuality\022B\n\021polyline_encoding\030\014" +
      " \001(\0162\'.google.maps.routes.v1.PolylineEnc" +
      "oding\0222\n\016departure_time\030\007 \001(\0132\032.google.p" +
      "rotobuf.Timestamp\022\"\n\032compute_alternative" +
      "_routes\030\010 \001(\010\022>\n\017route_modifiers\030\t \001(\0132%" +
      ".google.maps.routes.v1.RouteModifiers\022\025\n" +
      "\rlanguage_code\030\n \001(\t\022+\n\005units\030\013 \001(\0162\034.go" +
      "ogle.maps.routes.v1.Units\022\037\n\027optimize_wa" +
      "ypoint_order\030\r \001(\010\"\332\001\n\016RouteModifiers\022\023\n" +
      "\013avoid_tolls\030\001 \001(\010\022\026\n\016avoid_highways\030\002 \001" +
      "(\010\022\025\n\ravoid_ferries\030\003 \001(\010\022\024\n\014avoid_indoo" +
      "r\030\004 \001(\010\0228\n\014vehicle_info\030\005 \001(\0132\".google.m" +
      "aps.routes.v1.VehicleInfo\0224\n\013toll_passes" +
      "\030\006 \003(\0162\037.google.maps.routes.v1.TollPass\"" +
      "v\n\013VehicleInfo\022$\n\034license_plate_last_cha" +
      "racter\030\001 \001(\t\022A\n\remission_type\030\002 \001(\0162*.go" +
      "ogle.maps.routes.v1.VehicleEmissionType*" +
      "k\n\017RouteTravelMode\022\033\n\027TRAVEL_MODE_UNSPEC" +
      "IFIED\020\000\022\t\n\005DRIVE\020\001\022\013\n\007BICYCLE\020\002\022\010\n\004WALK\020" +
      "\003\022\017\n\013TWO_WHEELER\020\004\022\010\n\004TAXI\020\005*z\n\021RoutingP" +
      "reference\022\"\n\036ROUTING_PREFERENCE_UNSPECIF" +
      "IED\020\000\022\023\n\017TRAFFIC_UNAWARE\020\001\022\021\n\rTRAFFIC_AW" +
      "ARE\020\002\022\031\n\025TRAFFIC_AWARE_OPTIMAL\020\003*8\n\005Unit" +
      "s\022\025\n\021UNITS_UNSPECIFIED\020\000\022\n\n\006METRIC\020\001\022\014\n\010" +
      "IMPERIAL\020\002B\257\001\n\031com.google.maps.routes.v1" +
      "B\031ComputeRoutesRequestProtoP\001Z;google.go" +
      "lang.org/genproto/googleapis/maps/routes" +
      "/v1;routes\370\001\001\242\002\004GMRS\252\002\025Google.Maps.Route" +
      "s.V1\312\002\025Google\\Maps\\Routes\\V1b\006proto3"
    };
    descriptor = com.google.protobuf.Descriptors.FileDescriptor
      .internalBuildGeneratedFileFrom(descriptorData,
        new com.google.protobuf.Descriptors.FileDescriptor[] {
          com.google.maps.routes.v1.PolylineProto.getDescriptor(),
          com.google.maps.routes.v1.TollPassesProto.getDescriptor(),
          com.google.maps.routes.v1.VehicleEmissionTypeProto.getDescriptor(),
          com.google.maps.routes.v1.WaypointProto.getDescriptor(),
          com.google.protobuf.TimestampProto.getDescriptor(),
        });
    internal_static_google_maps_routes_v1_ComputeRoutesRequest_descriptor =
      getDescriptor().getMessageTypes().get(0);
    internal_static_google_maps_routes_v1_ComputeRoutesRequest_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_google_maps_routes_v1_ComputeRoutesRequest_descriptor,
        new java.lang.String[] { "Origin", "Destination", "Intermediates", "TravelMode", "RoutingPreference", "PolylineQuality", "PolylineEncoding", "DepartureTime", "ComputeAlternativeRoutes", "RouteModifiers", "LanguageCode", "Units", "OptimizeWaypointOrder", });
    internal_static_google_maps_routes_v1_RouteModifiers_descriptor =
      getDescriptor().getMessageTypes().get(1);
    internal_static_google_maps_routes_v1_RouteModifiers_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_google_maps_routes_v1_RouteModifiers_descriptor,
        new java.lang.String[] { "AvoidTolls", "AvoidHighways", "AvoidFerries", "AvoidIndoor", "VehicleInfo", "TollPasses", });
    internal_static_google_maps_routes_v1_VehicleInfo_descriptor =
      getDescriptor().getMessageTypes().get(2);
    internal_static_google_maps_routes_v1_VehicleInfo_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_google_maps_routes_v1_VehicleInfo_descriptor,
        new java.lang.String[] { "LicensePlateLastCharacter", "EmissionType", });
    com.google.maps.routes.v1.PolylineProto.getDescriptor();
    com.google.maps.routes.v1.TollPassesProto.getDescriptor();
    com.google.maps.routes.v1.VehicleEmissionTypeProto.getDescriptor();
    com.google.maps.routes.v1.WaypointProto.getDescriptor();
    com.google.protobuf.TimestampProto.getDescriptor();
  }

  // @@protoc_insertion_point(outer_class_scope)
}
