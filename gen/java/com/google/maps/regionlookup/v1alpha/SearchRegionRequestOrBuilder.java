// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: google/maps/regionlookup/v1alpha/region_lookup_service.proto

package com.google.maps.regionlookup.v1alpha;

public interface SearchRegionRequestOrBuilder extends
    // @@protoc_insertion_point(interface_extends:google.maps.regionlookup.v1alpha.SearchRegionRequest)
    com.google.protobuf.MessageOrBuilder {

  /**
   * <pre>
   * Each value represents desired search values of a single region to match.
   * The API tries to match them to Place IDs. See `RegionSearchValue`
   * proto for more info and examples.
   * </pre>
   *
   * <code>repeated .google.maps.regionlookup.v1alpha.RegionSearchValue search_values = 1;</code>
   */
  java.util.List<com.google.maps.regionlookup.v1alpha.RegionSearchValue> 
      getSearchValuesList();
  /**
   * <pre>
   * Each value represents desired search values of a single region to match.
   * The API tries to match them to Place IDs. See `RegionSearchValue`
   * proto for more info and examples.
   * </pre>
   *
   * <code>repeated .google.maps.regionlookup.v1alpha.RegionSearchValue search_values = 1;</code>
   */
  com.google.maps.regionlookup.v1alpha.RegionSearchValue getSearchValues(int index);
  /**
   * <pre>
   * Each value represents desired search values of a single region to match.
   * The API tries to match them to Place IDs. See `RegionSearchValue`
   * proto for more info and examples.
   * </pre>
   *
   * <code>repeated .google.maps.regionlookup.v1alpha.RegionSearchValue search_values = 1;</code>
   */
  int getSearchValuesCount();
  /**
   * <pre>
   * Each value represents desired search values of a single region to match.
   * The API tries to match them to Place IDs. See `RegionSearchValue`
   * proto for more info and examples.
   * </pre>
   *
   * <code>repeated .google.maps.regionlookup.v1alpha.RegionSearchValue search_values = 1;</code>
   */
  java.util.List<? extends com.google.maps.regionlookup.v1alpha.RegionSearchValueOrBuilder> 
      getSearchValuesOrBuilderList();
  /**
   * <pre>
   * Each value represents desired search values of a single region to match.
   * The API tries to match them to Place IDs. See `RegionSearchValue`
   * proto for more info and examples.
   * </pre>
   *
   * <code>repeated .google.maps.regionlookup.v1alpha.RegionSearchValue search_values = 1;</code>
   */
  com.google.maps.regionlookup.v1alpha.RegionSearchValueOrBuilder getSearchValuesOrBuilder(
      int index);

  /**
   * <pre>
   * The maximum number of matches to return. The service may return fewer than
   * this value.
   * If unspecified, at most 50 matches will be returned. The maximum value is
   * 1000; values above 1000 will be coerced to 1000.
   * </pre>
   *
   * <code>int32 page_size = 2;</code>
   * @return The pageSize.
   */
  int getPageSize();

  /**
   * <pre>
   * A page token, received from a previous `SearchRegion` call. Provide this to
   * retrieve the subsequent page.
   * When paginating, all other parameters provided to `LookupRegion` must match
   * the call that provided the page token.
   * </pre>
   *
   * <code>string page_token = 3;</code>
   * @return The pageToken.
   */
  java.lang.String getPageToken();
  /**
   * <pre>
   * A page token, received from a previous `SearchRegion` call. Provide this to
   * retrieve the subsequent page.
   * When paginating, all other parameters provided to `LookupRegion` must match
   * the call that provided the page token.
   * </pre>
   *
   * <code>string page_token = 3;</code>
   * @return The bytes for pageToken.
   */
  com.google.protobuf.ByteString
      getPageTokenBytes();
}
