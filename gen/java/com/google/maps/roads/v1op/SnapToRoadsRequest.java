// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: google/maps/roads/v1op/roads.proto

package com.google.maps.roads.v1op;

/**
 * <pre>
 * A request to the SnapToRoads method, requesting that a sequence of points be
 * snapped to road segments.
 * </pre>
 *
 * Protobuf type {@code google.maps.roads.v1op.SnapToRoadsRequest}
 */
public final class SnapToRoadsRequest extends
    com.google.protobuf.GeneratedMessageV3 implements
    // @@protoc_insertion_point(message_implements:google.maps.roads.v1op.SnapToRoadsRequest)
    SnapToRoadsRequestOrBuilder {
private static final long serialVersionUID = 0L;
  // Use SnapToRoadsRequest.newBuilder() to construct.
  private SnapToRoadsRequest(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
    super(builder);
  }
  private SnapToRoadsRequest() {
    path_ = "";
    assetId_ = "";
    travelMode_ = 0;
  }

  @java.lang.Override
  @SuppressWarnings({"unused"})
  protected java.lang.Object newInstance(
      UnusedPrivateParameter unused) {
    return new SnapToRoadsRequest();
  }

  @java.lang.Override
  public final com.google.protobuf.UnknownFieldSet
  getUnknownFields() {
    return this.unknownFields;
  }
  public static final com.google.protobuf.Descriptors.Descriptor
      getDescriptor() {
    return com.google.maps.roads.v1op.RoadsProto.internal_static_google_maps_roads_v1op_SnapToRoadsRequest_descriptor;
  }

  @java.lang.Override
  protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internalGetFieldAccessorTable() {
    return com.google.maps.roads.v1op.RoadsProto.internal_static_google_maps_roads_v1op_SnapToRoadsRequest_fieldAccessorTable
        .ensureFieldAccessorsInitialized(
            com.google.maps.roads.v1op.SnapToRoadsRequest.class, com.google.maps.roads.v1op.SnapToRoadsRequest.Builder.class);
  }

  public static final int PATH_FIELD_NUMBER = 1;
  @SuppressWarnings("serial")
  private volatile java.lang.Object path_ = "";
  /**
   * <pre>
   * The path to be snapped as a series of lat, lng points. Specified as
   * a string of the format: lat,lng|lat,lng|...
   * </pre>
   *
   * <code>string path = 1;</code>
   * @return The path.
   */
  @java.lang.Override
  public java.lang.String getPath() {
    java.lang.Object ref = path_;
    if (ref instanceof java.lang.String) {
      return (java.lang.String) ref;
    } else {
      com.google.protobuf.ByteString bs = 
          (com.google.protobuf.ByteString) ref;
      java.lang.String s = bs.toStringUtf8();
      path_ = s;
      return s;
    }
  }
  /**
   * <pre>
   * The path to be snapped as a series of lat, lng points. Specified as
   * a string of the format: lat,lng|lat,lng|...
   * </pre>
   *
   * <code>string path = 1;</code>
   * @return The bytes for path.
   */
  @java.lang.Override
  public com.google.protobuf.ByteString
      getPathBytes() {
    java.lang.Object ref = path_;
    if (ref instanceof java.lang.String) {
      com.google.protobuf.ByteString b = 
          com.google.protobuf.ByteString.copyFromUtf8(
              (java.lang.String) ref);
      path_ = b;
      return b;
    } else {
      return (com.google.protobuf.ByteString) ref;
    }
  }

  public static final int INTERPOLATE_FIELD_NUMBER = 2;
  private boolean interpolate_ = false;
  /**
   * <pre>
   * Whether to interpolate the points to return full road geometry.
   * </pre>
   *
   * <code>bool interpolate = 2;</code>
   * @return The interpolate.
   */
  @java.lang.Override
  public boolean getInterpolate() {
    return interpolate_;
  }

  public static final int ASSET_ID_FIELD_NUMBER = 3;
  @SuppressWarnings("serial")
  private volatile java.lang.Object assetId_ = "";
  /**
   * <pre>
   * The asset ID of the asset to which this path relates. This is used for
   * abuse detection purposes for clients with asset-based SKUs.
   * </pre>
   *
   * <code>string asset_id = 3;</code>
   * @return The assetId.
   */
  @java.lang.Override
  public java.lang.String getAssetId() {
    java.lang.Object ref = assetId_;
    if (ref instanceof java.lang.String) {
      return (java.lang.String) ref;
    } else {
      com.google.protobuf.ByteString bs = 
          (com.google.protobuf.ByteString) ref;
      java.lang.String s = bs.toStringUtf8();
      assetId_ = s;
      return s;
    }
  }
  /**
   * <pre>
   * The asset ID of the asset to which this path relates. This is used for
   * abuse detection purposes for clients with asset-based SKUs.
   * </pre>
   *
   * <code>string asset_id = 3;</code>
   * @return The bytes for assetId.
   */
  @java.lang.Override
  public com.google.protobuf.ByteString
      getAssetIdBytes() {
    java.lang.Object ref = assetId_;
    if (ref instanceof java.lang.String) {
      com.google.protobuf.ByteString b = 
          com.google.protobuf.ByteString.copyFromUtf8(
              (java.lang.String) ref);
      assetId_ = b;
      return b;
    } else {
      return (com.google.protobuf.ByteString) ref;
    }
  }

  public static final int TRAVEL_MODE_FIELD_NUMBER = 4;
  private int travelMode_ = 0;
  /**
   * <pre>
   * The type of travel being tracked. This will constrain the paths we snap to.
   * </pre>
   *
   * <code>.google.maps.roads.v1op.TravelMode travel_mode = 4;</code>
   * @return The enum numeric value on the wire for travelMode.
   */
  @java.lang.Override public int getTravelModeValue() {
    return travelMode_;
  }
  /**
   * <pre>
   * The type of travel being tracked. This will constrain the paths we snap to.
   * </pre>
   *
   * <code>.google.maps.roads.v1op.TravelMode travel_mode = 4;</code>
   * @return The travelMode.
   */
  @java.lang.Override public com.google.maps.roads.v1op.TravelMode getTravelMode() {
    com.google.maps.roads.v1op.TravelMode result = com.google.maps.roads.v1op.TravelMode.forNumber(travelMode_);
    return result == null ? com.google.maps.roads.v1op.TravelMode.UNRECOGNIZED : result;
  }

  private byte memoizedIsInitialized = -1;
  @java.lang.Override
  public final boolean isInitialized() {
    byte isInitialized = memoizedIsInitialized;
    if (isInitialized == 1) return true;
    if (isInitialized == 0) return false;

    memoizedIsInitialized = 1;
    return true;
  }

  @java.lang.Override
  public void writeTo(com.google.protobuf.CodedOutputStream output)
                      throws java.io.IOException {
    if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(path_)) {
      com.google.protobuf.GeneratedMessageV3.writeString(output, 1, path_);
    }
    if (interpolate_ != false) {
      output.writeBool(2, interpolate_);
    }
    if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(assetId_)) {
      com.google.protobuf.GeneratedMessageV3.writeString(output, 3, assetId_);
    }
    if (travelMode_ != com.google.maps.roads.v1op.TravelMode.TRAVEL_MODE_UNSPECIFIED.getNumber()) {
      output.writeEnum(4, travelMode_);
    }
    getUnknownFields().writeTo(output);
  }

  @java.lang.Override
  public int getSerializedSize() {
    int size = memoizedSize;
    if (size != -1) return size;

    size = 0;
    if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(path_)) {
      size += com.google.protobuf.GeneratedMessageV3.computeStringSize(1, path_);
    }
    if (interpolate_ != false) {
      size += com.google.protobuf.CodedOutputStream
        .computeBoolSize(2, interpolate_);
    }
    if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(assetId_)) {
      size += com.google.protobuf.GeneratedMessageV3.computeStringSize(3, assetId_);
    }
    if (travelMode_ != com.google.maps.roads.v1op.TravelMode.TRAVEL_MODE_UNSPECIFIED.getNumber()) {
      size += com.google.protobuf.CodedOutputStream
        .computeEnumSize(4, travelMode_);
    }
    size += getUnknownFields().getSerializedSize();
    memoizedSize = size;
    return size;
  }

  @java.lang.Override
  public boolean equals(final java.lang.Object obj) {
    if (obj == this) {
     return true;
    }
    if (!(obj instanceof com.google.maps.roads.v1op.SnapToRoadsRequest)) {
      return super.equals(obj);
    }
    com.google.maps.roads.v1op.SnapToRoadsRequest other = (com.google.maps.roads.v1op.SnapToRoadsRequest) obj;

    if (!getPath()
        .equals(other.getPath())) return false;
    if (getInterpolate()
        != other.getInterpolate()) return false;
    if (!getAssetId()
        .equals(other.getAssetId())) return false;
    if (travelMode_ != other.travelMode_) return false;
    if (!getUnknownFields().equals(other.getUnknownFields())) return false;
    return true;
  }

  @java.lang.Override
  public int hashCode() {
    if (memoizedHashCode != 0) {
      return memoizedHashCode;
    }
    int hash = 41;
    hash = (19 * hash) + getDescriptor().hashCode();
    hash = (37 * hash) + PATH_FIELD_NUMBER;
    hash = (53 * hash) + getPath().hashCode();
    hash = (37 * hash) + INTERPOLATE_FIELD_NUMBER;
    hash = (53 * hash) + com.google.protobuf.Internal.hashBoolean(
        getInterpolate());
    hash = (37 * hash) + ASSET_ID_FIELD_NUMBER;
    hash = (53 * hash) + getAssetId().hashCode();
    hash = (37 * hash) + TRAVEL_MODE_FIELD_NUMBER;
    hash = (53 * hash) + travelMode_;
    hash = (29 * hash) + getUnknownFields().hashCode();
    memoizedHashCode = hash;
    return hash;
  }

  public static com.google.maps.roads.v1op.SnapToRoadsRequest parseFrom(
      java.nio.ByteBuffer data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static com.google.maps.roads.v1op.SnapToRoadsRequest parseFrom(
      java.nio.ByteBuffer data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static com.google.maps.roads.v1op.SnapToRoadsRequest parseFrom(
      com.google.protobuf.ByteString data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static com.google.maps.roads.v1op.SnapToRoadsRequest parseFrom(
      com.google.protobuf.ByteString data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static com.google.maps.roads.v1op.SnapToRoadsRequest parseFrom(byte[] data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static com.google.maps.roads.v1op.SnapToRoadsRequest parseFrom(
      byte[] data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static com.google.maps.roads.v1op.SnapToRoadsRequest parseFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input);
  }
  public static com.google.maps.roads.v1op.SnapToRoadsRequest parseFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input, extensionRegistry);
  }
  public static com.google.maps.roads.v1op.SnapToRoadsRequest parseDelimitedFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseDelimitedWithIOException(PARSER, input);
  }
  public static com.google.maps.roads.v1op.SnapToRoadsRequest parseDelimitedFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
  }
  public static com.google.maps.roads.v1op.SnapToRoadsRequest parseFrom(
      com.google.protobuf.CodedInputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input);
  }
  public static com.google.maps.roads.v1op.SnapToRoadsRequest parseFrom(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input, extensionRegistry);
  }

  @java.lang.Override
  public Builder newBuilderForType() { return newBuilder(); }
  public static Builder newBuilder() {
    return DEFAULT_INSTANCE.toBuilder();
  }
  public static Builder newBuilder(com.google.maps.roads.v1op.SnapToRoadsRequest prototype) {
    return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
  }
  @java.lang.Override
  public Builder toBuilder() {
    return this == DEFAULT_INSTANCE
        ? new Builder() : new Builder().mergeFrom(this);
  }

  @java.lang.Override
  protected Builder newBuilderForType(
      com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
    Builder builder = new Builder(parent);
    return builder;
  }
  /**
   * <pre>
   * A request to the SnapToRoads method, requesting that a sequence of points be
   * snapped to road segments.
   * </pre>
   *
   * Protobuf type {@code google.maps.roads.v1op.SnapToRoadsRequest}
   */
  public static final class Builder extends
      com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
      // @@protoc_insertion_point(builder_implements:google.maps.roads.v1op.SnapToRoadsRequest)
      com.google.maps.roads.v1op.SnapToRoadsRequestOrBuilder {
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.google.maps.roads.v1op.RoadsProto.internal_static_google_maps_roads_v1op_SnapToRoadsRequest_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.google.maps.roads.v1op.RoadsProto.internal_static_google_maps_roads_v1op_SnapToRoadsRequest_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.google.maps.roads.v1op.SnapToRoadsRequest.class, com.google.maps.roads.v1op.SnapToRoadsRequest.Builder.class);
    }

    // Construct using com.google.maps.roads.v1op.SnapToRoadsRequest.newBuilder()
    private Builder() {

    }

    private Builder(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      super(parent);

    }
    @java.lang.Override
    public Builder clear() {
      super.clear();
      bitField0_ = 0;
      path_ = "";
      interpolate_ = false;
      assetId_ = "";
      travelMode_ = 0;
      return this;
    }

    @java.lang.Override
    public com.google.protobuf.Descriptors.Descriptor
        getDescriptorForType() {
      return com.google.maps.roads.v1op.RoadsProto.internal_static_google_maps_roads_v1op_SnapToRoadsRequest_descriptor;
    }

    @java.lang.Override
    public com.google.maps.roads.v1op.SnapToRoadsRequest getDefaultInstanceForType() {
      return com.google.maps.roads.v1op.SnapToRoadsRequest.getDefaultInstance();
    }

    @java.lang.Override
    public com.google.maps.roads.v1op.SnapToRoadsRequest build() {
      com.google.maps.roads.v1op.SnapToRoadsRequest result = buildPartial();
      if (!result.isInitialized()) {
        throw newUninitializedMessageException(result);
      }
      return result;
    }

    @java.lang.Override
    public com.google.maps.roads.v1op.SnapToRoadsRequest buildPartial() {
      com.google.maps.roads.v1op.SnapToRoadsRequest result = new com.google.maps.roads.v1op.SnapToRoadsRequest(this);
      if (bitField0_ != 0) { buildPartial0(result); }
      onBuilt();
      return result;
    }

    private void buildPartial0(com.google.maps.roads.v1op.SnapToRoadsRequest result) {
      int from_bitField0_ = bitField0_;
      if (((from_bitField0_ & 0x00000001) != 0)) {
        result.path_ = path_;
      }
      if (((from_bitField0_ & 0x00000002) != 0)) {
        result.interpolate_ = interpolate_;
      }
      if (((from_bitField0_ & 0x00000004) != 0)) {
        result.assetId_ = assetId_;
      }
      if (((from_bitField0_ & 0x00000008) != 0)) {
        result.travelMode_ = travelMode_;
      }
    }

    @java.lang.Override
    public Builder clone() {
      return super.clone();
    }
    @java.lang.Override
    public Builder setField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        java.lang.Object value) {
      return super.setField(field, value);
    }
    @java.lang.Override
    public Builder clearField(
        com.google.protobuf.Descriptors.FieldDescriptor field) {
      return super.clearField(field);
    }
    @java.lang.Override
    public Builder clearOneof(
        com.google.protobuf.Descriptors.OneofDescriptor oneof) {
      return super.clearOneof(oneof);
    }
    @java.lang.Override
    public Builder setRepeatedField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        int index, java.lang.Object value) {
      return super.setRepeatedField(field, index, value);
    }
    @java.lang.Override
    public Builder addRepeatedField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        java.lang.Object value) {
      return super.addRepeatedField(field, value);
    }
    @java.lang.Override
    public Builder mergeFrom(com.google.protobuf.Message other) {
      if (other instanceof com.google.maps.roads.v1op.SnapToRoadsRequest) {
        return mergeFrom((com.google.maps.roads.v1op.SnapToRoadsRequest)other);
      } else {
        super.mergeFrom(other);
        return this;
      }
    }

    public Builder mergeFrom(com.google.maps.roads.v1op.SnapToRoadsRequest other) {
      if (other == com.google.maps.roads.v1op.SnapToRoadsRequest.getDefaultInstance()) return this;
      if (!other.getPath().isEmpty()) {
        path_ = other.path_;
        bitField0_ |= 0x00000001;
        onChanged();
      }
      if (other.getInterpolate() != false) {
        setInterpolate(other.getInterpolate());
      }
      if (!other.getAssetId().isEmpty()) {
        assetId_ = other.assetId_;
        bitField0_ |= 0x00000004;
        onChanged();
      }
      if (other.travelMode_ != 0) {
        setTravelModeValue(other.getTravelModeValue());
      }
      this.mergeUnknownFields(other.getUnknownFields());
      onChanged();
      return this;
    }

    @java.lang.Override
    public final boolean isInitialized() {
      return true;
    }

    @java.lang.Override
    public Builder mergeFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 10: {
              path_ = input.readStringRequireUtf8();
              bitField0_ |= 0x00000001;
              break;
            } // case 10
            case 16: {
              interpolate_ = input.readBool();
              bitField0_ |= 0x00000002;
              break;
            } // case 16
            case 26: {
              assetId_ = input.readStringRequireUtf8();
              bitField0_ |= 0x00000004;
              break;
            } // case 26
            case 32: {
              travelMode_ = input.readEnum();
              bitField0_ |= 0x00000008;
              break;
            } // case 32
            default: {
              if (!super.parseUnknownField(input, extensionRegistry, tag)) {
                done = true; // was an endgroup tag
              }
              break;
            } // default:
          } // switch (tag)
        } // while (!done)
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.unwrapIOException();
      } finally {
        onChanged();
      } // finally
      return this;
    }
    private int bitField0_;

    private java.lang.Object path_ = "";
    /**
     * <pre>
     * The path to be snapped as a series of lat, lng points. Specified as
     * a string of the format: lat,lng|lat,lng|...
     * </pre>
     *
     * <code>string path = 1;</code>
     * @return The path.
     */
    public java.lang.String getPath() {
      java.lang.Object ref = path_;
      if (!(ref instanceof java.lang.String)) {
        com.google.protobuf.ByteString bs =
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        path_ = s;
        return s;
      } else {
        return (java.lang.String) ref;
      }
    }
    /**
     * <pre>
     * The path to be snapped as a series of lat, lng points. Specified as
     * a string of the format: lat,lng|lat,lng|...
     * </pre>
     *
     * <code>string path = 1;</code>
     * @return The bytes for path.
     */
    public com.google.protobuf.ByteString
        getPathBytes() {
      java.lang.Object ref = path_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        path_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }
    /**
     * <pre>
     * The path to be snapped as a series of lat, lng points. Specified as
     * a string of the format: lat,lng|lat,lng|...
     * </pre>
     *
     * <code>string path = 1;</code>
     * @param value The path to set.
     * @return This builder for chaining.
     */
    public Builder setPath(
        java.lang.String value) {
      if (value == null) { throw new NullPointerException(); }
      path_ = value;
      bitField0_ |= 0x00000001;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * The path to be snapped as a series of lat, lng points. Specified as
     * a string of the format: lat,lng|lat,lng|...
     * </pre>
     *
     * <code>string path = 1;</code>
     * @return This builder for chaining.
     */
    public Builder clearPath() {
      path_ = getDefaultInstance().getPath();
      bitField0_ = (bitField0_ & ~0x00000001);
      onChanged();
      return this;
    }
    /**
     * <pre>
     * The path to be snapped as a series of lat, lng points. Specified as
     * a string of the format: lat,lng|lat,lng|...
     * </pre>
     *
     * <code>string path = 1;</code>
     * @param value The bytes for path to set.
     * @return This builder for chaining.
     */
    public Builder setPathBytes(
        com.google.protobuf.ByteString value) {
      if (value == null) { throw new NullPointerException(); }
      checkByteStringIsUtf8(value);
      path_ = value;
      bitField0_ |= 0x00000001;
      onChanged();
      return this;
    }

    private boolean interpolate_ ;
    /**
     * <pre>
     * Whether to interpolate the points to return full road geometry.
     * </pre>
     *
     * <code>bool interpolate = 2;</code>
     * @return The interpolate.
     */
    @java.lang.Override
    public boolean getInterpolate() {
      return interpolate_;
    }
    /**
     * <pre>
     * Whether to interpolate the points to return full road geometry.
     * </pre>
     *
     * <code>bool interpolate = 2;</code>
     * @param value The interpolate to set.
     * @return This builder for chaining.
     */
    public Builder setInterpolate(boolean value) {
      
      interpolate_ = value;
      bitField0_ |= 0x00000002;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * Whether to interpolate the points to return full road geometry.
     * </pre>
     *
     * <code>bool interpolate = 2;</code>
     * @return This builder for chaining.
     */
    public Builder clearInterpolate() {
      bitField0_ = (bitField0_ & ~0x00000002);
      interpolate_ = false;
      onChanged();
      return this;
    }

    private java.lang.Object assetId_ = "";
    /**
     * <pre>
     * The asset ID of the asset to which this path relates. This is used for
     * abuse detection purposes for clients with asset-based SKUs.
     * </pre>
     *
     * <code>string asset_id = 3;</code>
     * @return The assetId.
     */
    public java.lang.String getAssetId() {
      java.lang.Object ref = assetId_;
      if (!(ref instanceof java.lang.String)) {
        com.google.protobuf.ByteString bs =
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        assetId_ = s;
        return s;
      } else {
        return (java.lang.String) ref;
      }
    }
    /**
     * <pre>
     * The asset ID of the asset to which this path relates. This is used for
     * abuse detection purposes for clients with asset-based SKUs.
     * </pre>
     *
     * <code>string asset_id = 3;</code>
     * @return The bytes for assetId.
     */
    public com.google.protobuf.ByteString
        getAssetIdBytes() {
      java.lang.Object ref = assetId_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        assetId_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }
    /**
     * <pre>
     * The asset ID of the asset to which this path relates. This is used for
     * abuse detection purposes for clients with asset-based SKUs.
     * </pre>
     *
     * <code>string asset_id = 3;</code>
     * @param value The assetId to set.
     * @return This builder for chaining.
     */
    public Builder setAssetId(
        java.lang.String value) {
      if (value == null) { throw new NullPointerException(); }
      assetId_ = value;
      bitField0_ |= 0x00000004;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * The asset ID of the asset to which this path relates. This is used for
     * abuse detection purposes for clients with asset-based SKUs.
     * </pre>
     *
     * <code>string asset_id = 3;</code>
     * @return This builder for chaining.
     */
    public Builder clearAssetId() {
      assetId_ = getDefaultInstance().getAssetId();
      bitField0_ = (bitField0_ & ~0x00000004);
      onChanged();
      return this;
    }
    /**
     * <pre>
     * The asset ID of the asset to which this path relates. This is used for
     * abuse detection purposes for clients with asset-based SKUs.
     * </pre>
     *
     * <code>string asset_id = 3;</code>
     * @param value The bytes for assetId to set.
     * @return This builder for chaining.
     */
    public Builder setAssetIdBytes(
        com.google.protobuf.ByteString value) {
      if (value == null) { throw new NullPointerException(); }
      checkByteStringIsUtf8(value);
      assetId_ = value;
      bitField0_ |= 0x00000004;
      onChanged();
      return this;
    }

    private int travelMode_ = 0;
    /**
     * <pre>
     * The type of travel being tracked. This will constrain the paths we snap to.
     * </pre>
     *
     * <code>.google.maps.roads.v1op.TravelMode travel_mode = 4;</code>
     * @return The enum numeric value on the wire for travelMode.
     */
    @java.lang.Override public int getTravelModeValue() {
      return travelMode_;
    }
    /**
     * <pre>
     * The type of travel being tracked. This will constrain the paths we snap to.
     * </pre>
     *
     * <code>.google.maps.roads.v1op.TravelMode travel_mode = 4;</code>
     * @param value The enum numeric value on the wire for travelMode to set.
     * @return This builder for chaining.
     */
    public Builder setTravelModeValue(int value) {
      travelMode_ = value;
      bitField0_ |= 0x00000008;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * The type of travel being tracked. This will constrain the paths we snap to.
     * </pre>
     *
     * <code>.google.maps.roads.v1op.TravelMode travel_mode = 4;</code>
     * @return The travelMode.
     */
    @java.lang.Override
    public com.google.maps.roads.v1op.TravelMode getTravelMode() {
      com.google.maps.roads.v1op.TravelMode result = com.google.maps.roads.v1op.TravelMode.forNumber(travelMode_);
      return result == null ? com.google.maps.roads.v1op.TravelMode.UNRECOGNIZED : result;
    }
    /**
     * <pre>
     * The type of travel being tracked. This will constrain the paths we snap to.
     * </pre>
     *
     * <code>.google.maps.roads.v1op.TravelMode travel_mode = 4;</code>
     * @param value The travelMode to set.
     * @return This builder for chaining.
     */
    public Builder setTravelMode(com.google.maps.roads.v1op.TravelMode value) {
      if (value == null) {
        throw new NullPointerException();
      }
      bitField0_ |= 0x00000008;
      travelMode_ = value.getNumber();
      onChanged();
      return this;
    }
    /**
     * <pre>
     * The type of travel being tracked. This will constrain the paths we snap to.
     * </pre>
     *
     * <code>.google.maps.roads.v1op.TravelMode travel_mode = 4;</code>
     * @return This builder for chaining.
     */
    public Builder clearTravelMode() {
      bitField0_ = (bitField0_ & ~0x00000008);
      travelMode_ = 0;
      onChanged();
      return this;
    }
    @java.lang.Override
    public final Builder setUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return super.setUnknownFields(unknownFields);
    }

    @java.lang.Override
    public final Builder mergeUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return super.mergeUnknownFields(unknownFields);
    }


    // @@protoc_insertion_point(builder_scope:google.maps.roads.v1op.SnapToRoadsRequest)
  }

  // @@protoc_insertion_point(class_scope:google.maps.roads.v1op.SnapToRoadsRequest)
  private static final com.google.maps.roads.v1op.SnapToRoadsRequest DEFAULT_INSTANCE;
  static {
    DEFAULT_INSTANCE = new com.google.maps.roads.v1op.SnapToRoadsRequest();
  }

  public static com.google.maps.roads.v1op.SnapToRoadsRequest getDefaultInstance() {
    return DEFAULT_INSTANCE;
  }

  private static final com.google.protobuf.Parser<SnapToRoadsRequest>
      PARSER = new com.google.protobuf.AbstractParser<SnapToRoadsRequest>() {
    @java.lang.Override
    public SnapToRoadsRequest parsePartialFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      Builder builder = newBuilder();
      try {
        builder.mergeFrom(input, extensionRegistry);
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(builder.buildPartial());
      } catch (com.google.protobuf.UninitializedMessageException e) {
        throw e.asInvalidProtocolBufferException().setUnfinishedMessage(builder.buildPartial());
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(e)
            .setUnfinishedMessage(builder.buildPartial());
      }
      return builder.buildPartial();
    }
  };

  public static com.google.protobuf.Parser<SnapToRoadsRequest> parser() {
    return PARSER;
  }

  @java.lang.Override
  public com.google.protobuf.Parser<SnapToRoadsRequest> getParserForType() {
    return PARSER;
  }

  @java.lang.Override
  public com.google.maps.roads.v1op.SnapToRoadsRequest getDefaultInstanceForType() {
    return DEFAULT_INSTANCE;
  }

}

