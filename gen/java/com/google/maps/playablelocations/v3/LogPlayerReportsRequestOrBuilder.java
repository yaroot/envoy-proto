// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: google/maps/playablelocations/v3/playablelocations.proto

package com.google.maps.playablelocations.v3;

public interface LogPlayerReportsRequestOrBuilder extends
    // @@protoc_insertion_point(interface_extends:google.maps.playablelocations.v3.LogPlayerReportsRequest)
    com.google.protobuf.MessageOrBuilder {

  /**
   * <pre>
   * Required. Player reports. The maximum number of player reports that you can
   * log at once is 50.
   * </pre>
   *
   * <code>repeated .google.maps.playablelocations.v3.PlayerReport player_reports = 1 [(.google.api.field_behavior) = REQUIRED];</code>
   */
  java.util.List<com.google.maps.playablelocations.v3.PlayerReport> 
      getPlayerReportsList();
  /**
   * <pre>
   * Required. Player reports. The maximum number of player reports that you can
   * log at once is 50.
   * </pre>
   *
   * <code>repeated .google.maps.playablelocations.v3.PlayerReport player_reports = 1 [(.google.api.field_behavior) = REQUIRED];</code>
   */
  com.google.maps.playablelocations.v3.PlayerReport getPlayerReports(int index);
  /**
   * <pre>
   * Required. Player reports. The maximum number of player reports that you can
   * log at once is 50.
   * </pre>
   *
   * <code>repeated .google.maps.playablelocations.v3.PlayerReport player_reports = 1 [(.google.api.field_behavior) = REQUIRED];</code>
   */
  int getPlayerReportsCount();
  /**
   * <pre>
   * Required. Player reports. The maximum number of player reports that you can
   * log at once is 50.
   * </pre>
   *
   * <code>repeated .google.maps.playablelocations.v3.PlayerReport player_reports = 1 [(.google.api.field_behavior) = REQUIRED];</code>
   */
  java.util.List<? extends com.google.maps.playablelocations.v3.PlayerReportOrBuilder> 
      getPlayerReportsOrBuilderList();
  /**
   * <pre>
   * Required. Player reports. The maximum number of player reports that you can
   * log at once is 50.
   * </pre>
   *
   * <code>repeated .google.maps.playablelocations.v3.PlayerReport player_reports = 1 [(.google.api.field_behavior) = REQUIRED];</code>
   */
  com.google.maps.playablelocations.v3.PlayerReportOrBuilder getPlayerReportsOrBuilder(
      int index);

  /**
   * <pre>
   * Required. A string that uniquely identifies the log player reports request.
   * This allows you to detect duplicate requests. We recommend that you use
   * UUIDs for this value. The value must not exceed 50 characters.
   * You should reuse the `request_id` only when retrying a request in the case
   * of a failure. In that case, the request must be identical to the one that
   * failed.
   * </pre>
   *
   * <code>string request_id = 2 [(.google.api.field_behavior) = REQUIRED];</code>
   * @return The requestId.
   */
  java.lang.String getRequestId();
  /**
   * <pre>
   * Required. A string that uniquely identifies the log player reports request.
   * This allows you to detect duplicate requests. We recommend that you use
   * UUIDs for this value. The value must not exceed 50 characters.
   * You should reuse the `request_id` only when retrying a request in the case
   * of a failure. In that case, the request must be identical to the one that
   * failed.
   * </pre>
   *
   * <code>string request_id = 2 [(.google.api.field_behavior) = REQUIRED];</code>
   * @return The bytes for requestId.
   */
  com.google.protobuf.ByteString
      getRequestIdBytes();

  /**
   * <pre>
   * Required. Information about the client device (for example, device model
   * and operating system).
   * </pre>
   *
   * <code>.google.maps.unity.ClientInfo client_info = 3 [(.google.api.field_behavior) = REQUIRED];</code>
   * @return Whether the clientInfo field is set.
   */
  boolean hasClientInfo();
  /**
   * <pre>
   * Required. Information about the client device (for example, device model
   * and operating system).
   * </pre>
   *
   * <code>.google.maps.unity.ClientInfo client_info = 3 [(.google.api.field_behavior) = REQUIRED];</code>
   * @return The clientInfo.
   */
  com.google.maps.unity.ClientInfo getClientInfo();
  /**
   * <pre>
   * Required. Information about the client device (for example, device model
   * and operating system).
   * </pre>
   *
   * <code>.google.maps.unity.ClientInfo client_info = 3 [(.google.api.field_behavior) = REQUIRED];</code>
   */
  com.google.maps.unity.ClientInfoOrBuilder getClientInfoOrBuilder();
}
