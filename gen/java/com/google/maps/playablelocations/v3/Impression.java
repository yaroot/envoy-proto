// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: google/maps/playablelocations/v3/resources.proto

package com.google.maps.playablelocations.v3;

/**
 * <pre>
 * Encapsulates impression event details.
 * </pre>
 *
 * Protobuf type {@code google.maps.playablelocations.v3.Impression}
 */
public final class Impression extends
    com.google.protobuf.GeneratedMessageV3 implements
    // @@protoc_insertion_point(message_implements:google.maps.playablelocations.v3.Impression)
    ImpressionOrBuilder {
private static final long serialVersionUID = 0L;
  // Use Impression.newBuilder() to construct.
  private Impression(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
    super(builder);
  }
  private Impression() {
    locationName_ = "";
    impressionType_ = 0;
  }

  @java.lang.Override
  @SuppressWarnings({"unused"})
  protected java.lang.Object newInstance(
      UnusedPrivateParameter unused) {
    return new Impression();
  }

  @java.lang.Override
  public final com.google.protobuf.UnknownFieldSet
  getUnknownFields() {
    return this.unknownFields;
  }
  public static final com.google.protobuf.Descriptors.Descriptor
      getDescriptor() {
    return com.google.maps.playablelocations.v3.ResourcesProto.internal_static_google_maps_playablelocations_v3_Impression_descriptor;
  }

  @java.lang.Override
  protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internalGetFieldAccessorTable() {
    return com.google.maps.playablelocations.v3.ResourcesProto.internal_static_google_maps_playablelocations_v3_Impression_fieldAccessorTable
        .ensureFieldAccessorsInitialized(
            com.google.maps.playablelocations.v3.Impression.class, com.google.maps.playablelocations.v3.Impression.Builder.class);
  }

  /**
   * <pre>
   * The type of impression event.
   * </pre>
   *
   * Protobuf enum {@code google.maps.playablelocations.v3.Impression.ImpressionType}
   */
  public enum ImpressionType
      implements com.google.protobuf.ProtocolMessageEnum {
    /**
     * <pre>
     * Unspecified type. Do not use.
     * </pre>
     *
     * <code>IMPRESSION_TYPE_UNSPECIFIED = 0;</code>
     */
    IMPRESSION_TYPE_UNSPECIFIED(0),
    /**
     * <pre>
     * The playable location was presented to a player.
     * </pre>
     *
     * <code>PRESENTED = 1;</code>
     */
    PRESENTED(1),
    /**
     * <pre>
     * A player interacted with the playable location.
     * </pre>
     *
     * <code>INTERACTED = 2;</code>
     */
    INTERACTED(2),
    UNRECOGNIZED(-1),
    ;

    /**
     * <pre>
     * Unspecified type. Do not use.
     * </pre>
     *
     * <code>IMPRESSION_TYPE_UNSPECIFIED = 0;</code>
     */
    public static final int IMPRESSION_TYPE_UNSPECIFIED_VALUE = 0;
    /**
     * <pre>
     * The playable location was presented to a player.
     * </pre>
     *
     * <code>PRESENTED = 1;</code>
     */
    public static final int PRESENTED_VALUE = 1;
    /**
     * <pre>
     * A player interacted with the playable location.
     * </pre>
     *
     * <code>INTERACTED = 2;</code>
     */
    public static final int INTERACTED_VALUE = 2;


    public final int getNumber() {
      if (this == UNRECOGNIZED) {
        throw new java.lang.IllegalArgumentException(
            "Can't get the number of an unknown enum value.");
      }
      return value;
    }

    /**
     * @param value The numeric wire value of the corresponding enum entry.
     * @return The enum associated with the given numeric wire value.
     * @deprecated Use {@link #forNumber(int)} instead.
     */
    @java.lang.Deprecated
    public static ImpressionType valueOf(int value) {
      return forNumber(value);
    }

    /**
     * @param value The numeric wire value of the corresponding enum entry.
     * @return The enum associated with the given numeric wire value.
     */
    public static ImpressionType forNumber(int value) {
      switch (value) {
        case 0: return IMPRESSION_TYPE_UNSPECIFIED;
        case 1: return PRESENTED;
        case 2: return INTERACTED;
        default: return null;
      }
    }

    public static com.google.protobuf.Internal.EnumLiteMap<ImpressionType>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static final com.google.protobuf.Internal.EnumLiteMap<
        ImpressionType> internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<ImpressionType>() {
            public ImpressionType findValueByNumber(int number) {
              return ImpressionType.forNumber(number);
            }
          };

    public final com.google.protobuf.Descriptors.EnumValueDescriptor
        getValueDescriptor() {
      if (this == UNRECOGNIZED) {
        throw new java.lang.IllegalStateException(
            "Can't get the descriptor of an unrecognized enum value.");
      }
      return getDescriptor().getValues().get(ordinal());
    }
    public final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptorForType() {
      return getDescriptor();
    }
    public static final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptor() {
      return com.google.maps.playablelocations.v3.Impression.getDescriptor().getEnumTypes().get(0);
    }

    private static final ImpressionType[] VALUES = values();

    public static ImpressionType valueOf(
        com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
      if (desc.getType() != getDescriptor()) {
        throw new java.lang.IllegalArgumentException(
          "EnumValueDescriptor is not for this type.");
      }
      if (desc.getIndex() == -1) {
        return UNRECOGNIZED;
      }
      return VALUES[desc.getIndex()];
    }

    private final int value;

    private ImpressionType(int value) {
      this.value = value;
    }

    // @@protoc_insertion_point(enum_scope:google.maps.playablelocations.v3.Impression.ImpressionType)
  }

  public static final int LOCATION_NAME_FIELD_NUMBER = 1;
  @SuppressWarnings("serial")
  private volatile java.lang.Object locationName_ = "";
  /**
   * <pre>
   * Required. The name of the playable location.
   * </pre>
   *
   * <code>string location_name = 1 [(.google.api.field_behavior) = REQUIRED];</code>
   * @return The locationName.
   */
  @java.lang.Override
  public java.lang.String getLocationName() {
    java.lang.Object ref = locationName_;
    if (ref instanceof java.lang.String) {
      return (java.lang.String) ref;
    } else {
      com.google.protobuf.ByteString bs = 
          (com.google.protobuf.ByteString) ref;
      java.lang.String s = bs.toStringUtf8();
      locationName_ = s;
      return s;
    }
  }
  /**
   * <pre>
   * Required. The name of the playable location.
   * </pre>
   *
   * <code>string location_name = 1 [(.google.api.field_behavior) = REQUIRED];</code>
   * @return The bytes for locationName.
   */
  @java.lang.Override
  public com.google.protobuf.ByteString
      getLocationNameBytes() {
    java.lang.Object ref = locationName_;
    if (ref instanceof java.lang.String) {
      com.google.protobuf.ByteString b = 
          com.google.protobuf.ByteString.copyFromUtf8(
              (java.lang.String) ref);
      locationName_ = b;
      return b;
    } else {
      return (com.google.protobuf.ByteString) ref;
    }
  }

  public static final int IMPRESSION_TYPE_FIELD_NUMBER = 2;
  private int impressionType_ = 0;
  /**
   * <pre>
   * Required. The type of impression event.
   * </pre>
   *
   * <code>.google.maps.playablelocations.v3.Impression.ImpressionType impression_type = 2 [(.google.api.field_behavior) = REQUIRED];</code>
   * @return The enum numeric value on the wire for impressionType.
   */
  @java.lang.Override public int getImpressionTypeValue() {
    return impressionType_;
  }
  /**
   * <pre>
   * Required. The type of impression event.
   * </pre>
   *
   * <code>.google.maps.playablelocations.v3.Impression.ImpressionType impression_type = 2 [(.google.api.field_behavior) = REQUIRED];</code>
   * @return The impressionType.
   */
  @java.lang.Override public com.google.maps.playablelocations.v3.Impression.ImpressionType getImpressionType() {
    com.google.maps.playablelocations.v3.Impression.ImpressionType result = com.google.maps.playablelocations.v3.Impression.ImpressionType.forNumber(impressionType_);
    return result == null ? com.google.maps.playablelocations.v3.Impression.ImpressionType.UNRECOGNIZED : result;
  }

  public static final int GAME_OBJECT_TYPE_FIELD_NUMBER = 4;
  private int gameObjectType_ = 0;
  /**
   * <pre>
   * An arbitrary, developer-defined type identifier for each type of game
   * object used in your game.
   * Since players interact with differ types of game objects in different ways,
   * this field allows you to segregate impression data by type for analysis.
   * You should assign a unique `game_object_type` ID to represent a distinct
   * type of game object in your game.
   * For example, 1=monster location, 2=powerup location.
   * </pre>
   *
   * <code>int32 game_object_type = 4;</code>
   * @return The gameObjectType.
   */
  @java.lang.Override
  public int getGameObjectType() {
    return gameObjectType_;
  }

  private byte memoizedIsInitialized = -1;
  @java.lang.Override
  public final boolean isInitialized() {
    byte isInitialized = memoizedIsInitialized;
    if (isInitialized == 1) return true;
    if (isInitialized == 0) return false;

    memoizedIsInitialized = 1;
    return true;
  }

  @java.lang.Override
  public void writeTo(com.google.protobuf.CodedOutputStream output)
                      throws java.io.IOException {
    if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(locationName_)) {
      com.google.protobuf.GeneratedMessageV3.writeString(output, 1, locationName_);
    }
    if (impressionType_ != com.google.maps.playablelocations.v3.Impression.ImpressionType.IMPRESSION_TYPE_UNSPECIFIED.getNumber()) {
      output.writeEnum(2, impressionType_);
    }
    if (gameObjectType_ != 0) {
      output.writeInt32(4, gameObjectType_);
    }
    getUnknownFields().writeTo(output);
  }

  @java.lang.Override
  public int getSerializedSize() {
    int size = memoizedSize;
    if (size != -1) return size;

    size = 0;
    if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(locationName_)) {
      size += com.google.protobuf.GeneratedMessageV3.computeStringSize(1, locationName_);
    }
    if (impressionType_ != com.google.maps.playablelocations.v3.Impression.ImpressionType.IMPRESSION_TYPE_UNSPECIFIED.getNumber()) {
      size += com.google.protobuf.CodedOutputStream
        .computeEnumSize(2, impressionType_);
    }
    if (gameObjectType_ != 0) {
      size += com.google.protobuf.CodedOutputStream
        .computeInt32Size(4, gameObjectType_);
    }
    size += getUnknownFields().getSerializedSize();
    memoizedSize = size;
    return size;
  }

  @java.lang.Override
  public boolean equals(final java.lang.Object obj) {
    if (obj == this) {
     return true;
    }
    if (!(obj instanceof com.google.maps.playablelocations.v3.Impression)) {
      return super.equals(obj);
    }
    com.google.maps.playablelocations.v3.Impression other = (com.google.maps.playablelocations.v3.Impression) obj;

    if (!getLocationName()
        .equals(other.getLocationName())) return false;
    if (impressionType_ != other.impressionType_) return false;
    if (getGameObjectType()
        != other.getGameObjectType()) return false;
    if (!getUnknownFields().equals(other.getUnknownFields())) return false;
    return true;
  }

  @java.lang.Override
  public int hashCode() {
    if (memoizedHashCode != 0) {
      return memoizedHashCode;
    }
    int hash = 41;
    hash = (19 * hash) + getDescriptor().hashCode();
    hash = (37 * hash) + LOCATION_NAME_FIELD_NUMBER;
    hash = (53 * hash) + getLocationName().hashCode();
    hash = (37 * hash) + IMPRESSION_TYPE_FIELD_NUMBER;
    hash = (53 * hash) + impressionType_;
    hash = (37 * hash) + GAME_OBJECT_TYPE_FIELD_NUMBER;
    hash = (53 * hash) + getGameObjectType();
    hash = (29 * hash) + getUnknownFields().hashCode();
    memoizedHashCode = hash;
    return hash;
  }

  public static com.google.maps.playablelocations.v3.Impression parseFrom(
      java.nio.ByteBuffer data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static com.google.maps.playablelocations.v3.Impression parseFrom(
      java.nio.ByteBuffer data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static com.google.maps.playablelocations.v3.Impression parseFrom(
      com.google.protobuf.ByteString data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static com.google.maps.playablelocations.v3.Impression parseFrom(
      com.google.protobuf.ByteString data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static com.google.maps.playablelocations.v3.Impression parseFrom(byte[] data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static com.google.maps.playablelocations.v3.Impression parseFrom(
      byte[] data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static com.google.maps.playablelocations.v3.Impression parseFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input);
  }
  public static com.google.maps.playablelocations.v3.Impression parseFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input, extensionRegistry);
  }
  public static com.google.maps.playablelocations.v3.Impression parseDelimitedFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseDelimitedWithIOException(PARSER, input);
  }
  public static com.google.maps.playablelocations.v3.Impression parseDelimitedFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
  }
  public static com.google.maps.playablelocations.v3.Impression parseFrom(
      com.google.protobuf.CodedInputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input);
  }
  public static com.google.maps.playablelocations.v3.Impression parseFrom(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input, extensionRegistry);
  }

  @java.lang.Override
  public Builder newBuilderForType() { return newBuilder(); }
  public static Builder newBuilder() {
    return DEFAULT_INSTANCE.toBuilder();
  }
  public static Builder newBuilder(com.google.maps.playablelocations.v3.Impression prototype) {
    return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
  }
  @java.lang.Override
  public Builder toBuilder() {
    return this == DEFAULT_INSTANCE
        ? new Builder() : new Builder().mergeFrom(this);
  }

  @java.lang.Override
  protected Builder newBuilderForType(
      com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
    Builder builder = new Builder(parent);
    return builder;
  }
  /**
   * <pre>
   * Encapsulates impression event details.
   * </pre>
   *
   * Protobuf type {@code google.maps.playablelocations.v3.Impression}
   */
  public static final class Builder extends
      com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
      // @@protoc_insertion_point(builder_implements:google.maps.playablelocations.v3.Impression)
      com.google.maps.playablelocations.v3.ImpressionOrBuilder {
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.google.maps.playablelocations.v3.ResourcesProto.internal_static_google_maps_playablelocations_v3_Impression_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.google.maps.playablelocations.v3.ResourcesProto.internal_static_google_maps_playablelocations_v3_Impression_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.google.maps.playablelocations.v3.Impression.class, com.google.maps.playablelocations.v3.Impression.Builder.class);
    }

    // Construct using com.google.maps.playablelocations.v3.Impression.newBuilder()
    private Builder() {

    }

    private Builder(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      super(parent);

    }
    @java.lang.Override
    public Builder clear() {
      super.clear();
      bitField0_ = 0;
      locationName_ = "";
      impressionType_ = 0;
      gameObjectType_ = 0;
      return this;
    }

    @java.lang.Override
    public com.google.protobuf.Descriptors.Descriptor
        getDescriptorForType() {
      return com.google.maps.playablelocations.v3.ResourcesProto.internal_static_google_maps_playablelocations_v3_Impression_descriptor;
    }

    @java.lang.Override
    public com.google.maps.playablelocations.v3.Impression getDefaultInstanceForType() {
      return com.google.maps.playablelocations.v3.Impression.getDefaultInstance();
    }

    @java.lang.Override
    public com.google.maps.playablelocations.v3.Impression build() {
      com.google.maps.playablelocations.v3.Impression result = buildPartial();
      if (!result.isInitialized()) {
        throw newUninitializedMessageException(result);
      }
      return result;
    }

    @java.lang.Override
    public com.google.maps.playablelocations.v3.Impression buildPartial() {
      com.google.maps.playablelocations.v3.Impression result = new com.google.maps.playablelocations.v3.Impression(this);
      if (bitField0_ != 0) { buildPartial0(result); }
      onBuilt();
      return result;
    }

    private void buildPartial0(com.google.maps.playablelocations.v3.Impression result) {
      int from_bitField0_ = bitField0_;
      if (((from_bitField0_ & 0x00000001) != 0)) {
        result.locationName_ = locationName_;
      }
      if (((from_bitField0_ & 0x00000002) != 0)) {
        result.impressionType_ = impressionType_;
      }
      if (((from_bitField0_ & 0x00000004) != 0)) {
        result.gameObjectType_ = gameObjectType_;
      }
    }

    @java.lang.Override
    public Builder clone() {
      return super.clone();
    }
    @java.lang.Override
    public Builder setField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        java.lang.Object value) {
      return super.setField(field, value);
    }
    @java.lang.Override
    public Builder clearField(
        com.google.protobuf.Descriptors.FieldDescriptor field) {
      return super.clearField(field);
    }
    @java.lang.Override
    public Builder clearOneof(
        com.google.protobuf.Descriptors.OneofDescriptor oneof) {
      return super.clearOneof(oneof);
    }
    @java.lang.Override
    public Builder setRepeatedField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        int index, java.lang.Object value) {
      return super.setRepeatedField(field, index, value);
    }
    @java.lang.Override
    public Builder addRepeatedField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        java.lang.Object value) {
      return super.addRepeatedField(field, value);
    }
    @java.lang.Override
    public Builder mergeFrom(com.google.protobuf.Message other) {
      if (other instanceof com.google.maps.playablelocations.v3.Impression) {
        return mergeFrom((com.google.maps.playablelocations.v3.Impression)other);
      } else {
        super.mergeFrom(other);
        return this;
      }
    }

    public Builder mergeFrom(com.google.maps.playablelocations.v3.Impression other) {
      if (other == com.google.maps.playablelocations.v3.Impression.getDefaultInstance()) return this;
      if (!other.getLocationName().isEmpty()) {
        locationName_ = other.locationName_;
        bitField0_ |= 0x00000001;
        onChanged();
      }
      if (other.impressionType_ != 0) {
        setImpressionTypeValue(other.getImpressionTypeValue());
      }
      if (other.getGameObjectType() != 0) {
        setGameObjectType(other.getGameObjectType());
      }
      this.mergeUnknownFields(other.getUnknownFields());
      onChanged();
      return this;
    }

    @java.lang.Override
    public final boolean isInitialized() {
      return true;
    }

    @java.lang.Override
    public Builder mergeFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 10: {
              locationName_ = input.readStringRequireUtf8();
              bitField0_ |= 0x00000001;
              break;
            } // case 10
            case 16: {
              impressionType_ = input.readEnum();
              bitField0_ |= 0x00000002;
              break;
            } // case 16
            case 32: {
              gameObjectType_ = input.readInt32();
              bitField0_ |= 0x00000004;
              break;
            } // case 32
            default: {
              if (!super.parseUnknownField(input, extensionRegistry, tag)) {
                done = true; // was an endgroup tag
              }
              break;
            } // default:
          } // switch (tag)
        } // while (!done)
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.unwrapIOException();
      } finally {
        onChanged();
      } // finally
      return this;
    }
    private int bitField0_;

    private java.lang.Object locationName_ = "";
    /**
     * <pre>
     * Required. The name of the playable location.
     * </pre>
     *
     * <code>string location_name = 1 [(.google.api.field_behavior) = REQUIRED];</code>
     * @return The locationName.
     */
    public java.lang.String getLocationName() {
      java.lang.Object ref = locationName_;
      if (!(ref instanceof java.lang.String)) {
        com.google.protobuf.ByteString bs =
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        locationName_ = s;
        return s;
      } else {
        return (java.lang.String) ref;
      }
    }
    /**
     * <pre>
     * Required. The name of the playable location.
     * </pre>
     *
     * <code>string location_name = 1 [(.google.api.field_behavior) = REQUIRED];</code>
     * @return The bytes for locationName.
     */
    public com.google.protobuf.ByteString
        getLocationNameBytes() {
      java.lang.Object ref = locationName_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        locationName_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }
    /**
     * <pre>
     * Required. The name of the playable location.
     * </pre>
     *
     * <code>string location_name = 1 [(.google.api.field_behavior) = REQUIRED];</code>
     * @param value The locationName to set.
     * @return This builder for chaining.
     */
    public Builder setLocationName(
        java.lang.String value) {
      if (value == null) { throw new NullPointerException(); }
      locationName_ = value;
      bitField0_ |= 0x00000001;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * Required. The name of the playable location.
     * </pre>
     *
     * <code>string location_name = 1 [(.google.api.field_behavior) = REQUIRED];</code>
     * @return This builder for chaining.
     */
    public Builder clearLocationName() {
      locationName_ = getDefaultInstance().getLocationName();
      bitField0_ = (bitField0_ & ~0x00000001);
      onChanged();
      return this;
    }
    /**
     * <pre>
     * Required. The name of the playable location.
     * </pre>
     *
     * <code>string location_name = 1 [(.google.api.field_behavior) = REQUIRED];</code>
     * @param value The bytes for locationName to set.
     * @return This builder for chaining.
     */
    public Builder setLocationNameBytes(
        com.google.protobuf.ByteString value) {
      if (value == null) { throw new NullPointerException(); }
      checkByteStringIsUtf8(value);
      locationName_ = value;
      bitField0_ |= 0x00000001;
      onChanged();
      return this;
    }

    private int impressionType_ = 0;
    /**
     * <pre>
     * Required. The type of impression event.
     * </pre>
     *
     * <code>.google.maps.playablelocations.v3.Impression.ImpressionType impression_type = 2 [(.google.api.field_behavior) = REQUIRED];</code>
     * @return The enum numeric value on the wire for impressionType.
     */
    @java.lang.Override public int getImpressionTypeValue() {
      return impressionType_;
    }
    /**
     * <pre>
     * Required. The type of impression event.
     * </pre>
     *
     * <code>.google.maps.playablelocations.v3.Impression.ImpressionType impression_type = 2 [(.google.api.field_behavior) = REQUIRED];</code>
     * @param value The enum numeric value on the wire for impressionType to set.
     * @return This builder for chaining.
     */
    public Builder setImpressionTypeValue(int value) {
      impressionType_ = value;
      bitField0_ |= 0x00000002;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * Required. The type of impression event.
     * </pre>
     *
     * <code>.google.maps.playablelocations.v3.Impression.ImpressionType impression_type = 2 [(.google.api.field_behavior) = REQUIRED];</code>
     * @return The impressionType.
     */
    @java.lang.Override
    public com.google.maps.playablelocations.v3.Impression.ImpressionType getImpressionType() {
      com.google.maps.playablelocations.v3.Impression.ImpressionType result = com.google.maps.playablelocations.v3.Impression.ImpressionType.forNumber(impressionType_);
      return result == null ? com.google.maps.playablelocations.v3.Impression.ImpressionType.UNRECOGNIZED : result;
    }
    /**
     * <pre>
     * Required. The type of impression event.
     * </pre>
     *
     * <code>.google.maps.playablelocations.v3.Impression.ImpressionType impression_type = 2 [(.google.api.field_behavior) = REQUIRED];</code>
     * @param value The impressionType to set.
     * @return This builder for chaining.
     */
    public Builder setImpressionType(com.google.maps.playablelocations.v3.Impression.ImpressionType value) {
      if (value == null) {
        throw new NullPointerException();
      }
      bitField0_ |= 0x00000002;
      impressionType_ = value.getNumber();
      onChanged();
      return this;
    }
    /**
     * <pre>
     * Required. The type of impression event.
     * </pre>
     *
     * <code>.google.maps.playablelocations.v3.Impression.ImpressionType impression_type = 2 [(.google.api.field_behavior) = REQUIRED];</code>
     * @return This builder for chaining.
     */
    public Builder clearImpressionType() {
      bitField0_ = (bitField0_ & ~0x00000002);
      impressionType_ = 0;
      onChanged();
      return this;
    }

    private int gameObjectType_ ;
    /**
     * <pre>
     * An arbitrary, developer-defined type identifier for each type of game
     * object used in your game.
     * Since players interact with differ types of game objects in different ways,
     * this field allows you to segregate impression data by type for analysis.
     * You should assign a unique `game_object_type` ID to represent a distinct
     * type of game object in your game.
     * For example, 1=monster location, 2=powerup location.
     * </pre>
     *
     * <code>int32 game_object_type = 4;</code>
     * @return The gameObjectType.
     */
    @java.lang.Override
    public int getGameObjectType() {
      return gameObjectType_;
    }
    /**
     * <pre>
     * An arbitrary, developer-defined type identifier for each type of game
     * object used in your game.
     * Since players interact with differ types of game objects in different ways,
     * this field allows you to segregate impression data by type for analysis.
     * You should assign a unique `game_object_type` ID to represent a distinct
     * type of game object in your game.
     * For example, 1=monster location, 2=powerup location.
     * </pre>
     *
     * <code>int32 game_object_type = 4;</code>
     * @param value The gameObjectType to set.
     * @return This builder for chaining.
     */
    public Builder setGameObjectType(int value) {
      
      gameObjectType_ = value;
      bitField0_ |= 0x00000004;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * An arbitrary, developer-defined type identifier for each type of game
     * object used in your game.
     * Since players interact with differ types of game objects in different ways,
     * this field allows you to segregate impression data by type for analysis.
     * You should assign a unique `game_object_type` ID to represent a distinct
     * type of game object in your game.
     * For example, 1=monster location, 2=powerup location.
     * </pre>
     *
     * <code>int32 game_object_type = 4;</code>
     * @return This builder for chaining.
     */
    public Builder clearGameObjectType() {
      bitField0_ = (bitField0_ & ~0x00000004);
      gameObjectType_ = 0;
      onChanged();
      return this;
    }
    @java.lang.Override
    public final Builder setUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return super.setUnknownFields(unknownFields);
    }

    @java.lang.Override
    public final Builder mergeUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return super.mergeUnknownFields(unknownFields);
    }


    // @@protoc_insertion_point(builder_scope:google.maps.playablelocations.v3.Impression)
  }

  // @@protoc_insertion_point(class_scope:google.maps.playablelocations.v3.Impression)
  private static final com.google.maps.playablelocations.v3.Impression DEFAULT_INSTANCE;
  static {
    DEFAULT_INSTANCE = new com.google.maps.playablelocations.v3.Impression();
  }

  public static com.google.maps.playablelocations.v3.Impression getDefaultInstance() {
    return DEFAULT_INSTANCE;
  }

  private static final com.google.protobuf.Parser<Impression>
      PARSER = new com.google.protobuf.AbstractParser<Impression>() {
    @java.lang.Override
    public Impression parsePartialFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      Builder builder = newBuilder();
      try {
        builder.mergeFrom(input, extensionRegistry);
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(builder.buildPartial());
      } catch (com.google.protobuf.UninitializedMessageException e) {
        throw e.asInvalidProtocolBufferException().setUnfinishedMessage(builder.buildPartial());
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(e)
            .setUnfinishedMessage(builder.buildPartial());
      }
      return builder.buildPartial();
    }
  };

  public static com.google.protobuf.Parser<Impression> parser() {
    return PARSER;
  }

  @java.lang.Override
  public com.google.protobuf.Parser<Impression> getParserForType() {
    return PARSER;
  }

  @java.lang.Override
  public com.google.maps.playablelocations.v3.Impression getDefaultInstanceForType() {
    return DEFAULT_INSTANCE;
  }

}

