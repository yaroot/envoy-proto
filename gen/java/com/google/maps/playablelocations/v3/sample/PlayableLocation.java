// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: google/maps/playablelocations/v3/sample/resources.proto

package com.google.maps.playablelocations.v3.sample;

/**
 * <pre>
 * A geographical point suitable for placing game objects in location-based
 * games.
 * </pre>
 *
 * Protobuf type {@code google.maps.playablelocations.v3.sample.PlayableLocation}
 */
public final class PlayableLocation extends
    com.google.protobuf.GeneratedMessageV3 implements
    // @@protoc_insertion_point(message_implements:google.maps.playablelocations.v3.sample.PlayableLocation)
    PlayableLocationOrBuilder {
private static final long serialVersionUID = 0L;
  // Use PlayableLocation.newBuilder() to construct.
  private PlayableLocation(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
    super(builder);
  }
  private PlayableLocation() {
    name_ = "";
    types_ = com.google.protobuf.LazyStringArrayList.EMPTY;
  }

  @java.lang.Override
  @SuppressWarnings({"unused"})
  protected java.lang.Object newInstance(
      UnusedPrivateParameter unused) {
    return new PlayableLocation();
  }

  @java.lang.Override
  public final com.google.protobuf.UnknownFieldSet
  getUnknownFields() {
    return this.unknownFields;
  }
  public static final com.google.protobuf.Descriptors.Descriptor
      getDescriptor() {
    return com.google.maps.playablelocations.v3.sample.ResourcesProto.internal_static_google_maps_playablelocations_v3_sample_PlayableLocation_descriptor;
  }

  @java.lang.Override
  protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internalGetFieldAccessorTable() {
    return com.google.maps.playablelocations.v3.sample.ResourcesProto.internal_static_google_maps_playablelocations_v3_sample_PlayableLocation_fieldAccessorTable
        .ensureFieldAccessorsInitialized(
            com.google.maps.playablelocations.v3.sample.PlayableLocation.class, com.google.maps.playablelocations.v3.sample.PlayableLocation.Builder.class);
  }

  private int locationIdCase_ = 0;
  private java.lang.Object locationId_;
  public enum LocationIdCase
      implements com.google.protobuf.Internal.EnumLite,
          com.google.protobuf.AbstractMessage.InternalOneOfEnum {
    PLACE_ID(2),
    PLUS_CODE(3),
    LOCATIONID_NOT_SET(0);
    private final int value;
    private LocationIdCase(int value) {
      this.value = value;
    }
    /**
     * @param value The number of the enum to look for.
     * @return The enum associated with the given number.
     * @deprecated Use {@link #forNumber(int)} instead.
     */
    @java.lang.Deprecated
    public static LocationIdCase valueOf(int value) {
      return forNumber(value);
    }

    public static LocationIdCase forNumber(int value) {
      switch (value) {
        case 2: return PLACE_ID;
        case 3: return PLUS_CODE;
        case 0: return LOCATIONID_NOT_SET;
        default: return null;
      }
    }
    public int getNumber() {
      return this.value;
    }
  };

  public LocationIdCase
  getLocationIdCase() {
    return LocationIdCase.forNumber(
        locationIdCase_);
  }

  public static final int NAME_FIELD_NUMBER = 1;
  @SuppressWarnings("serial")
  private volatile java.lang.Object name_ = "";
  /**
   * <pre>
   * Required. The name of this playable location.
   * </pre>
   *
   * <code>string name = 1;</code>
   * @return The name.
   */
  @java.lang.Override
  public java.lang.String getName() {
    java.lang.Object ref = name_;
    if (ref instanceof java.lang.String) {
      return (java.lang.String) ref;
    } else {
      com.google.protobuf.ByteString bs = 
          (com.google.protobuf.ByteString) ref;
      java.lang.String s = bs.toStringUtf8();
      name_ = s;
      return s;
    }
  }
  /**
   * <pre>
   * Required. The name of this playable location.
   * </pre>
   *
   * <code>string name = 1;</code>
   * @return The bytes for name.
   */
  @java.lang.Override
  public com.google.protobuf.ByteString
      getNameBytes() {
    java.lang.Object ref = name_;
    if (ref instanceof java.lang.String) {
      com.google.protobuf.ByteString b = 
          com.google.protobuf.ByteString.copyFromUtf8(
              (java.lang.String) ref);
      name_ = b;
      return b;
    } else {
      return (com.google.protobuf.ByteString) ref;
    }
  }

  public static final int PLACE_ID_FIELD_NUMBER = 2;
  /**
   * <pre>
   * A [place ID] (https://developers.google.com/places/place-id)
   * </pre>
   *
   * <code>string place_id = 2;</code>
   * @return Whether the placeId field is set.
   */
  public boolean hasPlaceId() {
    return locationIdCase_ == 2;
  }
  /**
   * <pre>
   * A [place ID] (https://developers.google.com/places/place-id)
   * </pre>
   *
   * <code>string place_id = 2;</code>
   * @return The placeId.
   */
  public java.lang.String getPlaceId() {
    java.lang.Object ref = "";
    if (locationIdCase_ == 2) {
      ref = locationId_;
    }
    if (ref instanceof java.lang.String) {
      return (java.lang.String) ref;
    } else {
      com.google.protobuf.ByteString bs = 
          (com.google.protobuf.ByteString) ref;
      java.lang.String s = bs.toStringUtf8();
      if (locationIdCase_ == 2) {
        locationId_ = s;
      }
      return s;
    }
  }
  /**
   * <pre>
   * A [place ID] (https://developers.google.com/places/place-id)
   * </pre>
   *
   * <code>string place_id = 2;</code>
   * @return The bytes for placeId.
   */
  public com.google.protobuf.ByteString
      getPlaceIdBytes() {
    java.lang.Object ref = "";
    if (locationIdCase_ == 2) {
      ref = locationId_;
    }
    if (ref instanceof java.lang.String) {
      com.google.protobuf.ByteString b = 
          com.google.protobuf.ByteString.copyFromUtf8(
              (java.lang.String) ref);
      if (locationIdCase_ == 2) {
        locationId_ = b;
      }
      return b;
    } else {
      return (com.google.protobuf.ByteString) ref;
    }
  }

  public static final int PLUS_CODE_FIELD_NUMBER = 3;
  /**
   * <pre>
   * A [plus code] (http://openlocationcode.com)
   * </pre>
   *
   * <code>string plus_code = 3;</code>
   * @return Whether the plusCode field is set.
   */
  public boolean hasPlusCode() {
    return locationIdCase_ == 3;
  }
  /**
   * <pre>
   * A [plus code] (http://openlocationcode.com)
   * </pre>
   *
   * <code>string plus_code = 3;</code>
   * @return The plusCode.
   */
  public java.lang.String getPlusCode() {
    java.lang.Object ref = "";
    if (locationIdCase_ == 3) {
      ref = locationId_;
    }
    if (ref instanceof java.lang.String) {
      return (java.lang.String) ref;
    } else {
      com.google.protobuf.ByteString bs = 
          (com.google.protobuf.ByteString) ref;
      java.lang.String s = bs.toStringUtf8();
      if (locationIdCase_ == 3) {
        locationId_ = s;
      }
      return s;
    }
  }
  /**
   * <pre>
   * A [plus code] (http://openlocationcode.com)
   * </pre>
   *
   * <code>string plus_code = 3;</code>
   * @return The bytes for plusCode.
   */
  public com.google.protobuf.ByteString
      getPlusCodeBytes() {
    java.lang.Object ref = "";
    if (locationIdCase_ == 3) {
      ref = locationId_;
    }
    if (ref instanceof java.lang.String) {
      com.google.protobuf.ByteString b = 
          com.google.protobuf.ByteString.copyFromUtf8(
              (java.lang.String) ref);
      if (locationIdCase_ == 3) {
        locationId_ = b;
      }
      return b;
    } else {
      return (com.google.protobuf.ByteString) ref;
    }
  }

  public static final int TYPES_FIELD_NUMBER = 4;
  @SuppressWarnings("serial")
  private com.google.protobuf.LazyStringList types_;
  /**
   * <pre>
   * A collection of [Playable Location Types](/maps/tt/games/types) for this
   * playable location. The first type in the collection is the primary type.
   * Type information might not be available for all playable locations.
   * </pre>
   *
   * <code>repeated string types = 4;</code>
   * @return A list containing the types.
   */
  public com.google.protobuf.ProtocolStringList
      getTypesList() {
    return types_;
  }
  /**
   * <pre>
   * A collection of [Playable Location Types](/maps/tt/games/types) for this
   * playable location. The first type in the collection is the primary type.
   * Type information might not be available for all playable locations.
   * </pre>
   *
   * <code>repeated string types = 4;</code>
   * @return The count of types.
   */
  public int getTypesCount() {
    return types_.size();
  }
  /**
   * <pre>
   * A collection of [Playable Location Types](/maps/tt/games/types) for this
   * playable location. The first type in the collection is the primary type.
   * Type information might not be available for all playable locations.
   * </pre>
   *
   * <code>repeated string types = 4;</code>
   * @param index The index of the element to return.
   * @return The types at the given index.
   */
  public java.lang.String getTypes(int index) {
    return types_.get(index);
  }
  /**
   * <pre>
   * A collection of [Playable Location Types](/maps/tt/games/types) for this
   * playable location. The first type in the collection is the primary type.
   * Type information might not be available for all playable locations.
   * </pre>
   *
   * <code>repeated string types = 4;</code>
   * @param index The index of the value to return.
   * @return The bytes of the types at the given index.
   */
  public com.google.protobuf.ByteString
      getTypesBytes(int index) {
    return types_.getByteString(index);
  }

  public static final int CENTER_POINT_FIELD_NUMBER = 5;
  private com.google.type.LatLng centerPoint_;
  /**
   * <pre>
   * Required. The latitude and longitude associated with the center of the
   * playable location.
   * By default, the set of playable locations returned from
   * [SamplePlayableLocations][google.maps.playablelocations.v3.PlayableLocations.SamplePlayableLocations]
   * use center-point coordinates.
   * </pre>
   *
   * <code>.google.type.LatLng center_point = 5;</code>
   * @return Whether the centerPoint field is set.
   */
  @java.lang.Override
  public boolean hasCenterPoint() {
    return centerPoint_ != null;
  }
  /**
   * <pre>
   * Required. The latitude and longitude associated with the center of the
   * playable location.
   * By default, the set of playable locations returned from
   * [SamplePlayableLocations][google.maps.playablelocations.v3.PlayableLocations.SamplePlayableLocations]
   * use center-point coordinates.
   * </pre>
   *
   * <code>.google.type.LatLng center_point = 5;</code>
   * @return The centerPoint.
   */
  @java.lang.Override
  public com.google.type.LatLng getCenterPoint() {
    return centerPoint_ == null ? com.google.type.LatLng.getDefaultInstance() : centerPoint_;
  }
  /**
   * <pre>
   * Required. The latitude and longitude associated with the center of the
   * playable location.
   * By default, the set of playable locations returned from
   * [SamplePlayableLocations][google.maps.playablelocations.v3.PlayableLocations.SamplePlayableLocations]
   * use center-point coordinates.
   * </pre>
   *
   * <code>.google.type.LatLng center_point = 5;</code>
   */
  @java.lang.Override
  public com.google.type.LatLngOrBuilder getCenterPointOrBuilder() {
    return centerPoint_ == null ? com.google.type.LatLng.getDefaultInstance() : centerPoint_;
  }

  public static final int SNAPPED_POINT_FIELD_NUMBER = 6;
  private com.google.type.LatLng snappedPoint_;
  /**
   * <pre>
   * The playable location's coordinates, snapped to the sidewalk of the
   * nearest road, if a nearby road exists.
   * </pre>
   *
   * <code>.google.type.LatLng snapped_point = 6;</code>
   * @return Whether the snappedPoint field is set.
   */
  @java.lang.Override
  public boolean hasSnappedPoint() {
    return snappedPoint_ != null;
  }
  /**
   * <pre>
   * The playable location's coordinates, snapped to the sidewalk of the
   * nearest road, if a nearby road exists.
   * </pre>
   *
   * <code>.google.type.LatLng snapped_point = 6;</code>
   * @return The snappedPoint.
   */
  @java.lang.Override
  public com.google.type.LatLng getSnappedPoint() {
    return snappedPoint_ == null ? com.google.type.LatLng.getDefaultInstance() : snappedPoint_;
  }
  /**
   * <pre>
   * The playable location's coordinates, snapped to the sidewalk of the
   * nearest road, if a nearby road exists.
   * </pre>
   *
   * <code>.google.type.LatLng snapped_point = 6;</code>
   */
  @java.lang.Override
  public com.google.type.LatLngOrBuilder getSnappedPointOrBuilder() {
    return snappedPoint_ == null ? com.google.type.LatLng.getDefaultInstance() : snappedPoint_;
  }

  private byte memoizedIsInitialized = -1;
  @java.lang.Override
  public final boolean isInitialized() {
    byte isInitialized = memoizedIsInitialized;
    if (isInitialized == 1) return true;
    if (isInitialized == 0) return false;

    memoizedIsInitialized = 1;
    return true;
  }

  @java.lang.Override
  public void writeTo(com.google.protobuf.CodedOutputStream output)
                      throws java.io.IOException {
    if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(name_)) {
      com.google.protobuf.GeneratedMessageV3.writeString(output, 1, name_);
    }
    if (locationIdCase_ == 2) {
      com.google.protobuf.GeneratedMessageV3.writeString(output, 2, locationId_);
    }
    if (locationIdCase_ == 3) {
      com.google.protobuf.GeneratedMessageV3.writeString(output, 3, locationId_);
    }
    for (int i = 0; i < types_.size(); i++) {
      com.google.protobuf.GeneratedMessageV3.writeString(output, 4, types_.getRaw(i));
    }
    if (centerPoint_ != null) {
      output.writeMessage(5, getCenterPoint());
    }
    if (snappedPoint_ != null) {
      output.writeMessage(6, getSnappedPoint());
    }
    getUnknownFields().writeTo(output);
  }

  @java.lang.Override
  public int getSerializedSize() {
    int size = memoizedSize;
    if (size != -1) return size;

    size = 0;
    if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(name_)) {
      size += com.google.protobuf.GeneratedMessageV3.computeStringSize(1, name_);
    }
    if (locationIdCase_ == 2) {
      size += com.google.protobuf.GeneratedMessageV3.computeStringSize(2, locationId_);
    }
    if (locationIdCase_ == 3) {
      size += com.google.protobuf.GeneratedMessageV3.computeStringSize(3, locationId_);
    }
    {
      int dataSize = 0;
      for (int i = 0; i < types_.size(); i++) {
        dataSize += computeStringSizeNoTag(types_.getRaw(i));
      }
      size += dataSize;
      size += 1 * getTypesList().size();
    }
    if (centerPoint_ != null) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(5, getCenterPoint());
    }
    if (snappedPoint_ != null) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(6, getSnappedPoint());
    }
    size += getUnknownFields().getSerializedSize();
    memoizedSize = size;
    return size;
  }

  @java.lang.Override
  public boolean equals(final java.lang.Object obj) {
    if (obj == this) {
     return true;
    }
    if (!(obj instanceof com.google.maps.playablelocations.v3.sample.PlayableLocation)) {
      return super.equals(obj);
    }
    com.google.maps.playablelocations.v3.sample.PlayableLocation other = (com.google.maps.playablelocations.v3.sample.PlayableLocation) obj;

    if (!getName()
        .equals(other.getName())) return false;
    if (!getTypesList()
        .equals(other.getTypesList())) return false;
    if (hasCenterPoint() != other.hasCenterPoint()) return false;
    if (hasCenterPoint()) {
      if (!getCenterPoint()
          .equals(other.getCenterPoint())) return false;
    }
    if (hasSnappedPoint() != other.hasSnappedPoint()) return false;
    if (hasSnappedPoint()) {
      if (!getSnappedPoint()
          .equals(other.getSnappedPoint())) return false;
    }
    if (!getLocationIdCase().equals(other.getLocationIdCase())) return false;
    switch (locationIdCase_) {
      case 2:
        if (!getPlaceId()
            .equals(other.getPlaceId())) return false;
        break;
      case 3:
        if (!getPlusCode()
            .equals(other.getPlusCode())) return false;
        break;
      case 0:
      default:
    }
    if (!getUnknownFields().equals(other.getUnknownFields())) return false;
    return true;
  }

  @java.lang.Override
  public int hashCode() {
    if (memoizedHashCode != 0) {
      return memoizedHashCode;
    }
    int hash = 41;
    hash = (19 * hash) + getDescriptor().hashCode();
    hash = (37 * hash) + NAME_FIELD_NUMBER;
    hash = (53 * hash) + getName().hashCode();
    if (getTypesCount() > 0) {
      hash = (37 * hash) + TYPES_FIELD_NUMBER;
      hash = (53 * hash) + getTypesList().hashCode();
    }
    if (hasCenterPoint()) {
      hash = (37 * hash) + CENTER_POINT_FIELD_NUMBER;
      hash = (53 * hash) + getCenterPoint().hashCode();
    }
    if (hasSnappedPoint()) {
      hash = (37 * hash) + SNAPPED_POINT_FIELD_NUMBER;
      hash = (53 * hash) + getSnappedPoint().hashCode();
    }
    switch (locationIdCase_) {
      case 2:
        hash = (37 * hash) + PLACE_ID_FIELD_NUMBER;
        hash = (53 * hash) + getPlaceId().hashCode();
        break;
      case 3:
        hash = (37 * hash) + PLUS_CODE_FIELD_NUMBER;
        hash = (53 * hash) + getPlusCode().hashCode();
        break;
      case 0:
      default:
    }
    hash = (29 * hash) + getUnknownFields().hashCode();
    memoizedHashCode = hash;
    return hash;
  }

  public static com.google.maps.playablelocations.v3.sample.PlayableLocation parseFrom(
      java.nio.ByteBuffer data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static com.google.maps.playablelocations.v3.sample.PlayableLocation parseFrom(
      java.nio.ByteBuffer data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static com.google.maps.playablelocations.v3.sample.PlayableLocation parseFrom(
      com.google.protobuf.ByteString data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static com.google.maps.playablelocations.v3.sample.PlayableLocation parseFrom(
      com.google.protobuf.ByteString data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static com.google.maps.playablelocations.v3.sample.PlayableLocation parseFrom(byte[] data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static com.google.maps.playablelocations.v3.sample.PlayableLocation parseFrom(
      byte[] data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static com.google.maps.playablelocations.v3.sample.PlayableLocation parseFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input);
  }
  public static com.google.maps.playablelocations.v3.sample.PlayableLocation parseFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input, extensionRegistry);
  }
  public static com.google.maps.playablelocations.v3.sample.PlayableLocation parseDelimitedFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseDelimitedWithIOException(PARSER, input);
  }
  public static com.google.maps.playablelocations.v3.sample.PlayableLocation parseDelimitedFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
  }
  public static com.google.maps.playablelocations.v3.sample.PlayableLocation parseFrom(
      com.google.protobuf.CodedInputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input);
  }
  public static com.google.maps.playablelocations.v3.sample.PlayableLocation parseFrom(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input, extensionRegistry);
  }

  @java.lang.Override
  public Builder newBuilderForType() { return newBuilder(); }
  public static Builder newBuilder() {
    return DEFAULT_INSTANCE.toBuilder();
  }
  public static Builder newBuilder(com.google.maps.playablelocations.v3.sample.PlayableLocation prototype) {
    return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
  }
  @java.lang.Override
  public Builder toBuilder() {
    return this == DEFAULT_INSTANCE
        ? new Builder() : new Builder().mergeFrom(this);
  }

  @java.lang.Override
  protected Builder newBuilderForType(
      com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
    Builder builder = new Builder(parent);
    return builder;
  }
  /**
   * <pre>
   * A geographical point suitable for placing game objects in location-based
   * games.
   * </pre>
   *
   * Protobuf type {@code google.maps.playablelocations.v3.sample.PlayableLocation}
   */
  public static final class Builder extends
      com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
      // @@protoc_insertion_point(builder_implements:google.maps.playablelocations.v3.sample.PlayableLocation)
      com.google.maps.playablelocations.v3.sample.PlayableLocationOrBuilder {
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.google.maps.playablelocations.v3.sample.ResourcesProto.internal_static_google_maps_playablelocations_v3_sample_PlayableLocation_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.google.maps.playablelocations.v3.sample.ResourcesProto.internal_static_google_maps_playablelocations_v3_sample_PlayableLocation_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.google.maps.playablelocations.v3.sample.PlayableLocation.class, com.google.maps.playablelocations.v3.sample.PlayableLocation.Builder.class);
    }

    // Construct using com.google.maps.playablelocations.v3.sample.PlayableLocation.newBuilder()
    private Builder() {

    }

    private Builder(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      super(parent);

    }
    @java.lang.Override
    public Builder clear() {
      super.clear();
      bitField0_ = 0;
      name_ = "";
      types_ = com.google.protobuf.LazyStringArrayList.EMPTY;
      bitField0_ = (bitField0_ & ~0x00000008);
      centerPoint_ = null;
      if (centerPointBuilder_ != null) {
        centerPointBuilder_.dispose();
        centerPointBuilder_ = null;
      }
      snappedPoint_ = null;
      if (snappedPointBuilder_ != null) {
        snappedPointBuilder_.dispose();
        snappedPointBuilder_ = null;
      }
      locationIdCase_ = 0;
      locationId_ = null;
      return this;
    }

    @java.lang.Override
    public com.google.protobuf.Descriptors.Descriptor
        getDescriptorForType() {
      return com.google.maps.playablelocations.v3.sample.ResourcesProto.internal_static_google_maps_playablelocations_v3_sample_PlayableLocation_descriptor;
    }

    @java.lang.Override
    public com.google.maps.playablelocations.v3.sample.PlayableLocation getDefaultInstanceForType() {
      return com.google.maps.playablelocations.v3.sample.PlayableLocation.getDefaultInstance();
    }

    @java.lang.Override
    public com.google.maps.playablelocations.v3.sample.PlayableLocation build() {
      com.google.maps.playablelocations.v3.sample.PlayableLocation result = buildPartial();
      if (!result.isInitialized()) {
        throw newUninitializedMessageException(result);
      }
      return result;
    }

    @java.lang.Override
    public com.google.maps.playablelocations.v3.sample.PlayableLocation buildPartial() {
      com.google.maps.playablelocations.v3.sample.PlayableLocation result = new com.google.maps.playablelocations.v3.sample.PlayableLocation(this);
      buildPartialRepeatedFields(result);
      if (bitField0_ != 0) { buildPartial0(result); }
      buildPartialOneofs(result);
      onBuilt();
      return result;
    }

    private void buildPartialRepeatedFields(com.google.maps.playablelocations.v3.sample.PlayableLocation result) {
      if (((bitField0_ & 0x00000008) != 0)) {
        types_ = types_.getUnmodifiableView();
        bitField0_ = (bitField0_ & ~0x00000008);
      }
      result.types_ = types_;
    }

    private void buildPartial0(com.google.maps.playablelocations.v3.sample.PlayableLocation result) {
      int from_bitField0_ = bitField0_;
      if (((from_bitField0_ & 0x00000001) != 0)) {
        result.name_ = name_;
      }
      if (((from_bitField0_ & 0x00000010) != 0)) {
        result.centerPoint_ = centerPointBuilder_ == null
            ? centerPoint_
            : centerPointBuilder_.build();
      }
      if (((from_bitField0_ & 0x00000020) != 0)) {
        result.snappedPoint_ = snappedPointBuilder_ == null
            ? snappedPoint_
            : snappedPointBuilder_.build();
      }
    }

    private void buildPartialOneofs(com.google.maps.playablelocations.v3.sample.PlayableLocation result) {
      result.locationIdCase_ = locationIdCase_;
      result.locationId_ = this.locationId_;
    }

    @java.lang.Override
    public Builder clone() {
      return super.clone();
    }
    @java.lang.Override
    public Builder setField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        java.lang.Object value) {
      return super.setField(field, value);
    }
    @java.lang.Override
    public Builder clearField(
        com.google.protobuf.Descriptors.FieldDescriptor field) {
      return super.clearField(field);
    }
    @java.lang.Override
    public Builder clearOneof(
        com.google.protobuf.Descriptors.OneofDescriptor oneof) {
      return super.clearOneof(oneof);
    }
    @java.lang.Override
    public Builder setRepeatedField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        int index, java.lang.Object value) {
      return super.setRepeatedField(field, index, value);
    }
    @java.lang.Override
    public Builder addRepeatedField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        java.lang.Object value) {
      return super.addRepeatedField(field, value);
    }
    @java.lang.Override
    public Builder mergeFrom(com.google.protobuf.Message other) {
      if (other instanceof com.google.maps.playablelocations.v3.sample.PlayableLocation) {
        return mergeFrom((com.google.maps.playablelocations.v3.sample.PlayableLocation)other);
      } else {
        super.mergeFrom(other);
        return this;
      }
    }

    public Builder mergeFrom(com.google.maps.playablelocations.v3.sample.PlayableLocation other) {
      if (other == com.google.maps.playablelocations.v3.sample.PlayableLocation.getDefaultInstance()) return this;
      if (!other.getName().isEmpty()) {
        name_ = other.name_;
        bitField0_ |= 0x00000001;
        onChanged();
      }
      if (!other.types_.isEmpty()) {
        if (types_.isEmpty()) {
          types_ = other.types_;
          bitField0_ = (bitField0_ & ~0x00000008);
        } else {
          ensureTypesIsMutable();
          types_.addAll(other.types_);
        }
        onChanged();
      }
      if (other.hasCenterPoint()) {
        mergeCenterPoint(other.getCenterPoint());
      }
      if (other.hasSnappedPoint()) {
        mergeSnappedPoint(other.getSnappedPoint());
      }
      switch (other.getLocationIdCase()) {
        case PLACE_ID: {
          locationIdCase_ = 2;
          locationId_ = other.locationId_;
          onChanged();
          break;
        }
        case PLUS_CODE: {
          locationIdCase_ = 3;
          locationId_ = other.locationId_;
          onChanged();
          break;
        }
        case LOCATIONID_NOT_SET: {
          break;
        }
      }
      this.mergeUnknownFields(other.getUnknownFields());
      onChanged();
      return this;
    }

    @java.lang.Override
    public final boolean isInitialized() {
      return true;
    }

    @java.lang.Override
    public Builder mergeFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 10: {
              name_ = input.readStringRequireUtf8();
              bitField0_ |= 0x00000001;
              break;
            } // case 10
            case 18: {
              java.lang.String s = input.readStringRequireUtf8();
              locationIdCase_ = 2;
              locationId_ = s;
              break;
            } // case 18
            case 26: {
              java.lang.String s = input.readStringRequireUtf8();
              locationIdCase_ = 3;
              locationId_ = s;
              break;
            } // case 26
            case 34: {
              java.lang.String s = input.readStringRequireUtf8();
              ensureTypesIsMutable();
              types_.add(s);
              break;
            } // case 34
            case 42: {
              input.readMessage(
                  getCenterPointFieldBuilder().getBuilder(),
                  extensionRegistry);
              bitField0_ |= 0x00000010;
              break;
            } // case 42
            case 50: {
              input.readMessage(
                  getSnappedPointFieldBuilder().getBuilder(),
                  extensionRegistry);
              bitField0_ |= 0x00000020;
              break;
            } // case 50
            default: {
              if (!super.parseUnknownField(input, extensionRegistry, tag)) {
                done = true; // was an endgroup tag
              }
              break;
            } // default:
          } // switch (tag)
        } // while (!done)
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.unwrapIOException();
      } finally {
        onChanged();
      } // finally
      return this;
    }
    private int locationIdCase_ = 0;
    private java.lang.Object locationId_;
    public LocationIdCase
        getLocationIdCase() {
      return LocationIdCase.forNumber(
          locationIdCase_);
    }

    public Builder clearLocationId() {
      locationIdCase_ = 0;
      locationId_ = null;
      onChanged();
      return this;
    }

    private int bitField0_;

    private java.lang.Object name_ = "";
    /**
     * <pre>
     * Required. The name of this playable location.
     * </pre>
     *
     * <code>string name = 1;</code>
     * @return The name.
     */
    public java.lang.String getName() {
      java.lang.Object ref = name_;
      if (!(ref instanceof java.lang.String)) {
        com.google.protobuf.ByteString bs =
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        name_ = s;
        return s;
      } else {
        return (java.lang.String) ref;
      }
    }
    /**
     * <pre>
     * Required. The name of this playable location.
     * </pre>
     *
     * <code>string name = 1;</code>
     * @return The bytes for name.
     */
    public com.google.protobuf.ByteString
        getNameBytes() {
      java.lang.Object ref = name_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        name_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }
    /**
     * <pre>
     * Required. The name of this playable location.
     * </pre>
     *
     * <code>string name = 1;</code>
     * @param value The name to set.
     * @return This builder for chaining.
     */
    public Builder setName(
        java.lang.String value) {
      if (value == null) { throw new NullPointerException(); }
      name_ = value;
      bitField0_ |= 0x00000001;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * Required. The name of this playable location.
     * </pre>
     *
     * <code>string name = 1;</code>
     * @return This builder for chaining.
     */
    public Builder clearName() {
      name_ = getDefaultInstance().getName();
      bitField0_ = (bitField0_ & ~0x00000001);
      onChanged();
      return this;
    }
    /**
     * <pre>
     * Required. The name of this playable location.
     * </pre>
     *
     * <code>string name = 1;</code>
     * @param value The bytes for name to set.
     * @return This builder for chaining.
     */
    public Builder setNameBytes(
        com.google.protobuf.ByteString value) {
      if (value == null) { throw new NullPointerException(); }
      checkByteStringIsUtf8(value);
      name_ = value;
      bitField0_ |= 0x00000001;
      onChanged();
      return this;
    }

    /**
     * <pre>
     * A [place ID] (https://developers.google.com/places/place-id)
     * </pre>
     *
     * <code>string place_id = 2;</code>
     * @return Whether the placeId field is set.
     */
    @java.lang.Override
    public boolean hasPlaceId() {
      return locationIdCase_ == 2;
    }
    /**
     * <pre>
     * A [place ID] (https://developers.google.com/places/place-id)
     * </pre>
     *
     * <code>string place_id = 2;</code>
     * @return The placeId.
     */
    @java.lang.Override
    public java.lang.String getPlaceId() {
      java.lang.Object ref = "";
      if (locationIdCase_ == 2) {
        ref = locationId_;
      }
      if (!(ref instanceof java.lang.String)) {
        com.google.protobuf.ByteString bs =
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (locationIdCase_ == 2) {
          locationId_ = s;
        }
        return s;
      } else {
        return (java.lang.String) ref;
      }
    }
    /**
     * <pre>
     * A [place ID] (https://developers.google.com/places/place-id)
     * </pre>
     *
     * <code>string place_id = 2;</code>
     * @return The bytes for placeId.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString
        getPlaceIdBytes() {
      java.lang.Object ref = "";
      if (locationIdCase_ == 2) {
        ref = locationId_;
      }
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        if (locationIdCase_ == 2) {
          locationId_ = b;
        }
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }
    /**
     * <pre>
     * A [place ID] (https://developers.google.com/places/place-id)
     * </pre>
     *
     * <code>string place_id = 2;</code>
     * @param value The placeId to set.
     * @return This builder for chaining.
     */
    public Builder setPlaceId(
        java.lang.String value) {
      if (value == null) { throw new NullPointerException(); }
      locationIdCase_ = 2;
      locationId_ = value;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * A [place ID] (https://developers.google.com/places/place-id)
     * </pre>
     *
     * <code>string place_id = 2;</code>
     * @return This builder for chaining.
     */
    public Builder clearPlaceId() {
      if (locationIdCase_ == 2) {
        locationIdCase_ = 0;
        locationId_ = null;
        onChanged();
      }
      return this;
    }
    /**
     * <pre>
     * A [place ID] (https://developers.google.com/places/place-id)
     * </pre>
     *
     * <code>string place_id = 2;</code>
     * @param value The bytes for placeId to set.
     * @return This builder for chaining.
     */
    public Builder setPlaceIdBytes(
        com.google.protobuf.ByteString value) {
      if (value == null) { throw new NullPointerException(); }
      checkByteStringIsUtf8(value);
      locationIdCase_ = 2;
      locationId_ = value;
      onChanged();
      return this;
    }

    /**
     * <pre>
     * A [plus code] (http://openlocationcode.com)
     * </pre>
     *
     * <code>string plus_code = 3;</code>
     * @return Whether the plusCode field is set.
     */
    @java.lang.Override
    public boolean hasPlusCode() {
      return locationIdCase_ == 3;
    }
    /**
     * <pre>
     * A [plus code] (http://openlocationcode.com)
     * </pre>
     *
     * <code>string plus_code = 3;</code>
     * @return The plusCode.
     */
    @java.lang.Override
    public java.lang.String getPlusCode() {
      java.lang.Object ref = "";
      if (locationIdCase_ == 3) {
        ref = locationId_;
      }
      if (!(ref instanceof java.lang.String)) {
        com.google.protobuf.ByteString bs =
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (locationIdCase_ == 3) {
          locationId_ = s;
        }
        return s;
      } else {
        return (java.lang.String) ref;
      }
    }
    /**
     * <pre>
     * A [plus code] (http://openlocationcode.com)
     * </pre>
     *
     * <code>string plus_code = 3;</code>
     * @return The bytes for plusCode.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString
        getPlusCodeBytes() {
      java.lang.Object ref = "";
      if (locationIdCase_ == 3) {
        ref = locationId_;
      }
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        if (locationIdCase_ == 3) {
          locationId_ = b;
        }
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }
    /**
     * <pre>
     * A [plus code] (http://openlocationcode.com)
     * </pre>
     *
     * <code>string plus_code = 3;</code>
     * @param value The plusCode to set.
     * @return This builder for chaining.
     */
    public Builder setPlusCode(
        java.lang.String value) {
      if (value == null) { throw new NullPointerException(); }
      locationIdCase_ = 3;
      locationId_ = value;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * A [plus code] (http://openlocationcode.com)
     * </pre>
     *
     * <code>string plus_code = 3;</code>
     * @return This builder for chaining.
     */
    public Builder clearPlusCode() {
      if (locationIdCase_ == 3) {
        locationIdCase_ = 0;
        locationId_ = null;
        onChanged();
      }
      return this;
    }
    /**
     * <pre>
     * A [plus code] (http://openlocationcode.com)
     * </pre>
     *
     * <code>string plus_code = 3;</code>
     * @param value The bytes for plusCode to set.
     * @return This builder for chaining.
     */
    public Builder setPlusCodeBytes(
        com.google.protobuf.ByteString value) {
      if (value == null) { throw new NullPointerException(); }
      checkByteStringIsUtf8(value);
      locationIdCase_ = 3;
      locationId_ = value;
      onChanged();
      return this;
    }

    private com.google.protobuf.LazyStringList types_ = com.google.protobuf.LazyStringArrayList.EMPTY;
    private void ensureTypesIsMutable() {
      if (!((bitField0_ & 0x00000008) != 0)) {
        types_ = new com.google.protobuf.LazyStringArrayList(types_);
        bitField0_ |= 0x00000008;
       }
    }
    /**
     * <pre>
     * A collection of [Playable Location Types](/maps/tt/games/types) for this
     * playable location. The first type in the collection is the primary type.
     * Type information might not be available for all playable locations.
     * </pre>
     *
     * <code>repeated string types = 4;</code>
     * @return A list containing the types.
     */
    public com.google.protobuf.ProtocolStringList
        getTypesList() {
      return types_.getUnmodifiableView();
    }
    /**
     * <pre>
     * A collection of [Playable Location Types](/maps/tt/games/types) for this
     * playable location. The first type in the collection is the primary type.
     * Type information might not be available for all playable locations.
     * </pre>
     *
     * <code>repeated string types = 4;</code>
     * @return The count of types.
     */
    public int getTypesCount() {
      return types_.size();
    }
    /**
     * <pre>
     * A collection of [Playable Location Types](/maps/tt/games/types) for this
     * playable location. The first type in the collection is the primary type.
     * Type information might not be available for all playable locations.
     * </pre>
     *
     * <code>repeated string types = 4;</code>
     * @param index The index of the element to return.
     * @return The types at the given index.
     */
    public java.lang.String getTypes(int index) {
      return types_.get(index);
    }
    /**
     * <pre>
     * A collection of [Playable Location Types](/maps/tt/games/types) for this
     * playable location. The first type in the collection is the primary type.
     * Type information might not be available for all playable locations.
     * </pre>
     *
     * <code>repeated string types = 4;</code>
     * @param index The index of the value to return.
     * @return The bytes of the types at the given index.
     */
    public com.google.protobuf.ByteString
        getTypesBytes(int index) {
      return types_.getByteString(index);
    }
    /**
     * <pre>
     * A collection of [Playable Location Types](/maps/tt/games/types) for this
     * playable location. The first type in the collection is the primary type.
     * Type information might not be available for all playable locations.
     * </pre>
     *
     * <code>repeated string types = 4;</code>
     * @param index The index to set the value at.
     * @param value The types to set.
     * @return This builder for chaining.
     */
    public Builder setTypes(
        int index, java.lang.String value) {
      if (value == null) { throw new NullPointerException(); }
      ensureTypesIsMutable();
      types_.set(index, value);
      onChanged();
      return this;
    }
    /**
     * <pre>
     * A collection of [Playable Location Types](/maps/tt/games/types) for this
     * playable location. The first type in the collection is the primary type.
     * Type information might not be available for all playable locations.
     * </pre>
     *
     * <code>repeated string types = 4;</code>
     * @param value The types to add.
     * @return This builder for chaining.
     */
    public Builder addTypes(
        java.lang.String value) {
      if (value == null) { throw new NullPointerException(); }
      ensureTypesIsMutable();
      types_.add(value);
      onChanged();
      return this;
    }
    /**
     * <pre>
     * A collection of [Playable Location Types](/maps/tt/games/types) for this
     * playable location. The first type in the collection is the primary type.
     * Type information might not be available for all playable locations.
     * </pre>
     *
     * <code>repeated string types = 4;</code>
     * @param values The types to add.
     * @return This builder for chaining.
     */
    public Builder addAllTypes(
        java.lang.Iterable<java.lang.String> values) {
      ensureTypesIsMutable();
      com.google.protobuf.AbstractMessageLite.Builder.addAll(
          values, types_);
      onChanged();
      return this;
    }
    /**
     * <pre>
     * A collection of [Playable Location Types](/maps/tt/games/types) for this
     * playable location. The first type in the collection is the primary type.
     * Type information might not be available for all playable locations.
     * </pre>
     *
     * <code>repeated string types = 4;</code>
     * @return This builder for chaining.
     */
    public Builder clearTypes() {
      types_ = com.google.protobuf.LazyStringArrayList.EMPTY;
      bitField0_ = (bitField0_ & ~0x00000008);
      onChanged();
      return this;
    }
    /**
     * <pre>
     * A collection of [Playable Location Types](/maps/tt/games/types) for this
     * playable location. The first type in the collection is the primary type.
     * Type information might not be available for all playable locations.
     * </pre>
     *
     * <code>repeated string types = 4;</code>
     * @param value The bytes of the types to add.
     * @return This builder for chaining.
     */
    public Builder addTypesBytes(
        com.google.protobuf.ByteString value) {
      if (value == null) { throw new NullPointerException(); }
      checkByteStringIsUtf8(value);
      ensureTypesIsMutable();
      types_.add(value);
      onChanged();
      return this;
    }

    private com.google.type.LatLng centerPoint_;
    private com.google.protobuf.SingleFieldBuilderV3<
        com.google.type.LatLng, com.google.type.LatLng.Builder, com.google.type.LatLngOrBuilder> centerPointBuilder_;
    /**
     * <pre>
     * Required. The latitude and longitude associated with the center of the
     * playable location.
     * By default, the set of playable locations returned from
     * [SamplePlayableLocations][google.maps.playablelocations.v3.PlayableLocations.SamplePlayableLocations]
     * use center-point coordinates.
     * </pre>
     *
     * <code>.google.type.LatLng center_point = 5;</code>
     * @return Whether the centerPoint field is set.
     */
    public boolean hasCenterPoint() {
      return ((bitField0_ & 0x00000010) != 0);
    }
    /**
     * <pre>
     * Required. The latitude and longitude associated with the center of the
     * playable location.
     * By default, the set of playable locations returned from
     * [SamplePlayableLocations][google.maps.playablelocations.v3.PlayableLocations.SamplePlayableLocations]
     * use center-point coordinates.
     * </pre>
     *
     * <code>.google.type.LatLng center_point = 5;</code>
     * @return The centerPoint.
     */
    public com.google.type.LatLng getCenterPoint() {
      if (centerPointBuilder_ == null) {
        return centerPoint_ == null ? com.google.type.LatLng.getDefaultInstance() : centerPoint_;
      } else {
        return centerPointBuilder_.getMessage();
      }
    }
    /**
     * <pre>
     * Required. The latitude and longitude associated with the center of the
     * playable location.
     * By default, the set of playable locations returned from
     * [SamplePlayableLocations][google.maps.playablelocations.v3.PlayableLocations.SamplePlayableLocations]
     * use center-point coordinates.
     * </pre>
     *
     * <code>.google.type.LatLng center_point = 5;</code>
     */
    public Builder setCenterPoint(com.google.type.LatLng value) {
      if (centerPointBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        centerPoint_ = value;
      } else {
        centerPointBuilder_.setMessage(value);
      }
      bitField0_ |= 0x00000010;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * Required. The latitude and longitude associated with the center of the
     * playable location.
     * By default, the set of playable locations returned from
     * [SamplePlayableLocations][google.maps.playablelocations.v3.PlayableLocations.SamplePlayableLocations]
     * use center-point coordinates.
     * </pre>
     *
     * <code>.google.type.LatLng center_point = 5;</code>
     */
    public Builder setCenterPoint(
        com.google.type.LatLng.Builder builderForValue) {
      if (centerPointBuilder_ == null) {
        centerPoint_ = builderForValue.build();
      } else {
        centerPointBuilder_.setMessage(builderForValue.build());
      }
      bitField0_ |= 0x00000010;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * Required. The latitude and longitude associated with the center of the
     * playable location.
     * By default, the set of playable locations returned from
     * [SamplePlayableLocations][google.maps.playablelocations.v3.PlayableLocations.SamplePlayableLocations]
     * use center-point coordinates.
     * </pre>
     *
     * <code>.google.type.LatLng center_point = 5;</code>
     */
    public Builder mergeCenterPoint(com.google.type.LatLng value) {
      if (centerPointBuilder_ == null) {
        if (((bitField0_ & 0x00000010) != 0) &&
          centerPoint_ != null &&
          centerPoint_ != com.google.type.LatLng.getDefaultInstance()) {
          getCenterPointBuilder().mergeFrom(value);
        } else {
          centerPoint_ = value;
        }
      } else {
        centerPointBuilder_.mergeFrom(value);
      }
      bitField0_ |= 0x00000010;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * Required. The latitude and longitude associated with the center of the
     * playable location.
     * By default, the set of playable locations returned from
     * [SamplePlayableLocations][google.maps.playablelocations.v3.PlayableLocations.SamplePlayableLocations]
     * use center-point coordinates.
     * </pre>
     *
     * <code>.google.type.LatLng center_point = 5;</code>
     */
    public Builder clearCenterPoint() {
      bitField0_ = (bitField0_ & ~0x00000010);
      centerPoint_ = null;
      if (centerPointBuilder_ != null) {
        centerPointBuilder_.dispose();
        centerPointBuilder_ = null;
      }
      onChanged();
      return this;
    }
    /**
     * <pre>
     * Required. The latitude and longitude associated with the center of the
     * playable location.
     * By default, the set of playable locations returned from
     * [SamplePlayableLocations][google.maps.playablelocations.v3.PlayableLocations.SamplePlayableLocations]
     * use center-point coordinates.
     * </pre>
     *
     * <code>.google.type.LatLng center_point = 5;</code>
     */
    public com.google.type.LatLng.Builder getCenterPointBuilder() {
      bitField0_ |= 0x00000010;
      onChanged();
      return getCenterPointFieldBuilder().getBuilder();
    }
    /**
     * <pre>
     * Required. The latitude and longitude associated with the center of the
     * playable location.
     * By default, the set of playable locations returned from
     * [SamplePlayableLocations][google.maps.playablelocations.v3.PlayableLocations.SamplePlayableLocations]
     * use center-point coordinates.
     * </pre>
     *
     * <code>.google.type.LatLng center_point = 5;</code>
     */
    public com.google.type.LatLngOrBuilder getCenterPointOrBuilder() {
      if (centerPointBuilder_ != null) {
        return centerPointBuilder_.getMessageOrBuilder();
      } else {
        return centerPoint_ == null ?
            com.google.type.LatLng.getDefaultInstance() : centerPoint_;
      }
    }
    /**
     * <pre>
     * Required. The latitude and longitude associated with the center of the
     * playable location.
     * By default, the set of playable locations returned from
     * [SamplePlayableLocations][google.maps.playablelocations.v3.PlayableLocations.SamplePlayableLocations]
     * use center-point coordinates.
     * </pre>
     *
     * <code>.google.type.LatLng center_point = 5;</code>
     */
    private com.google.protobuf.SingleFieldBuilderV3<
        com.google.type.LatLng, com.google.type.LatLng.Builder, com.google.type.LatLngOrBuilder> 
        getCenterPointFieldBuilder() {
      if (centerPointBuilder_ == null) {
        centerPointBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
            com.google.type.LatLng, com.google.type.LatLng.Builder, com.google.type.LatLngOrBuilder>(
                getCenterPoint(),
                getParentForChildren(),
                isClean());
        centerPoint_ = null;
      }
      return centerPointBuilder_;
    }

    private com.google.type.LatLng snappedPoint_;
    private com.google.protobuf.SingleFieldBuilderV3<
        com.google.type.LatLng, com.google.type.LatLng.Builder, com.google.type.LatLngOrBuilder> snappedPointBuilder_;
    /**
     * <pre>
     * The playable location's coordinates, snapped to the sidewalk of the
     * nearest road, if a nearby road exists.
     * </pre>
     *
     * <code>.google.type.LatLng snapped_point = 6;</code>
     * @return Whether the snappedPoint field is set.
     */
    public boolean hasSnappedPoint() {
      return ((bitField0_ & 0x00000020) != 0);
    }
    /**
     * <pre>
     * The playable location's coordinates, snapped to the sidewalk of the
     * nearest road, if a nearby road exists.
     * </pre>
     *
     * <code>.google.type.LatLng snapped_point = 6;</code>
     * @return The snappedPoint.
     */
    public com.google.type.LatLng getSnappedPoint() {
      if (snappedPointBuilder_ == null) {
        return snappedPoint_ == null ? com.google.type.LatLng.getDefaultInstance() : snappedPoint_;
      } else {
        return snappedPointBuilder_.getMessage();
      }
    }
    /**
     * <pre>
     * The playable location's coordinates, snapped to the sidewalk of the
     * nearest road, if a nearby road exists.
     * </pre>
     *
     * <code>.google.type.LatLng snapped_point = 6;</code>
     */
    public Builder setSnappedPoint(com.google.type.LatLng value) {
      if (snappedPointBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        snappedPoint_ = value;
      } else {
        snappedPointBuilder_.setMessage(value);
      }
      bitField0_ |= 0x00000020;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * The playable location's coordinates, snapped to the sidewalk of the
     * nearest road, if a nearby road exists.
     * </pre>
     *
     * <code>.google.type.LatLng snapped_point = 6;</code>
     */
    public Builder setSnappedPoint(
        com.google.type.LatLng.Builder builderForValue) {
      if (snappedPointBuilder_ == null) {
        snappedPoint_ = builderForValue.build();
      } else {
        snappedPointBuilder_.setMessage(builderForValue.build());
      }
      bitField0_ |= 0x00000020;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * The playable location's coordinates, snapped to the sidewalk of the
     * nearest road, if a nearby road exists.
     * </pre>
     *
     * <code>.google.type.LatLng snapped_point = 6;</code>
     */
    public Builder mergeSnappedPoint(com.google.type.LatLng value) {
      if (snappedPointBuilder_ == null) {
        if (((bitField0_ & 0x00000020) != 0) &&
          snappedPoint_ != null &&
          snappedPoint_ != com.google.type.LatLng.getDefaultInstance()) {
          getSnappedPointBuilder().mergeFrom(value);
        } else {
          snappedPoint_ = value;
        }
      } else {
        snappedPointBuilder_.mergeFrom(value);
      }
      bitField0_ |= 0x00000020;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * The playable location's coordinates, snapped to the sidewalk of the
     * nearest road, if a nearby road exists.
     * </pre>
     *
     * <code>.google.type.LatLng snapped_point = 6;</code>
     */
    public Builder clearSnappedPoint() {
      bitField0_ = (bitField0_ & ~0x00000020);
      snappedPoint_ = null;
      if (snappedPointBuilder_ != null) {
        snappedPointBuilder_.dispose();
        snappedPointBuilder_ = null;
      }
      onChanged();
      return this;
    }
    /**
     * <pre>
     * The playable location's coordinates, snapped to the sidewalk of the
     * nearest road, if a nearby road exists.
     * </pre>
     *
     * <code>.google.type.LatLng snapped_point = 6;</code>
     */
    public com.google.type.LatLng.Builder getSnappedPointBuilder() {
      bitField0_ |= 0x00000020;
      onChanged();
      return getSnappedPointFieldBuilder().getBuilder();
    }
    /**
     * <pre>
     * The playable location's coordinates, snapped to the sidewalk of the
     * nearest road, if a nearby road exists.
     * </pre>
     *
     * <code>.google.type.LatLng snapped_point = 6;</code>
     */
    public com.google.type.LatLngOrBuilder getSnappedPointOrBuilder() {
      if (snappedPointBuilder_ != null) {
        return snappedPointBuilder_.getMessageOrBuilder();
      } else {
        return snappedPoint_ == null ?
            com.google.type.LatLng.getDefaultInstance() : snappedPoint_;
      }
    }
    /**
     * <pre>
     * The playable location's coordinates, snapped to the sidewalk of the
     * nearest road, if a nearby road exists.
     * </pre>
     *
     * <code>.google.type.LatLng snapped_point = 6;</code>
     */
    private com.google.protobuf.SingleFieldBuilderV3<
        com.google.type.LatLng, com.google.type.LatLng.Builder, com.google.type.LatLngOrBuilder> 
        getSnappedPointFieldBuilder() {
      if (snappedPointBuilder_ == null) {
        snappedPointBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
            com.google.type.LatLng, com.google.type.LatLng.Builder, com.google.type.LatLngOrBuilder>(
                getSnappedPoint(),
                getParentForChildren(),
                isClean());
        snappedPoint_ = null;
      }
      return snappedPointBuilder_;
    }
    @java.lang.Override
    public final Builder setUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return super.setUnknownFields(unknownFields);
    }

    @java.lang.Override
    public final Builder mergeUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return super.mergeUnknownFields(unknownFields);
    }


    // @@protoc_insertion_point(builder_scope:google.maps.playablelocations.v3.sample.PlayableLocation)
  }

  // @@protoc_insertion_point(class_scope:google.maps.playablelocations.v3.sample.PlayableLocation)
  private static final com.google.maps.playablelocations.v3.sample.PlayableLocation DEFAULT_INSTANCE;
  static {
    DEFAULT_INSTANCE = new com.google.maps.playablelocations.v3.sample.PlayableLocation();
  }

  public static com.google.maps.playablelocations.v3.sample.PlayableLocation getDefaultInstance() {
    return DEFAULT_INSTANCE;
  }

  private static final com.google.protobuf.Parser<PlayableLocation>
      PARSER = new com.google.protobuf.AbstractParser<PlayableLocation>() {
    @java.lang.Override
    public PlayableLocation parsePartialFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      Builder builder = newBuilder();
      try {
        builder.mergeFrom(input, extensionRegistry);
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(builder.buildPartial());
      } catch (com.google.protobuf.UninitializedMessageException e) {
        throw e.asInvalidProtocolBufferException().setUnfinishedMessage(builder.buildPartial());
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(e)
            .setUnfinishedMessage(builder.buildPartial());
      }
      return builder.buildPartial();
    }
  };

  public static com.google.protobuf.Parser<PlayableLocation> parser() {
    return PARSER;
  }

  @java.lang.Override
  public com.google.protobuf.Parser<PlayableLocation> getParserForType() {
    return PARSER;
  }

  @java.lang.Override
  public com.google.maps.playablelocations.v3.sample.PlayableLocation getDefaultInstanceForType() {
    return DEFAULT_INSTANCE;
  }

}

