// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: google/maps/playablelocations/v3/playablelocations.proto

package com.google.maps.playablelocations.v3;

/**
 * <pre>
 * Response for the
 * [SamplePlayableLocations][google.maps.playablelocations.v3.PlayableLocations.SamplePlayableLocations]
 * method.
 * </pre>
 *
 * Protobuf type {@code google.maps.playablelocations.v3.SamplePlayableLocationsResponse}
 */
public final class SamplePlayableLocationsResponse extends
    com.google.protobuf.GeneratedMessageV3 implements
    // @@protoc_insertion_point(message_implements:google.maps.playablelocations.v3.SamplePlayableLocationsResponse)
    SamplePlayableLocationsResponseOrBuilder {
private static final long serialVersionUID = 0L;
  // Use SamplePlayableLocationsResponse.newBuilder() to construct.
  private SamplePlayableLocationsResponse(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
    super(builder);
  }
  private SamplePlayableLocationsResponse() {
  }

  @java.lang.Override
  @SuppressWarnings({"unused"})
  protected java.lang.Object newInstance(
      UnusedPrivateParameter unused) {
    return new SamplePlayableLocationsResponse();
  }

  @java.lang.Override
  public final com.google.protobuf.UnknownFieldSet
  getUnknownFields() {
    return this.unknownFields;
  }
  private SamplePlayableLocationsResponse(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    this();
    if (extensionRegistry == null) {
      throw new java.lang.NullPointerException();
    }
    int mutable_bitField0_ = 0;
    com.google.protobuf.UnknownFieldSet.Builder unknownFields =
        com.google.protobuf.UnknownFieldSet.newBuilder();
    try {
      boolean done = false;
      while (!done) {
        int tag = input.readTag();
        switch (tag) {
          case 0:
            done = true;
            break;
          case 10: {
            if (!((mutable_bitField0_ & 0x00000001) != 0)) {
              locationsPerGameObjectType_ = com.google.protobuf.MapField.newMapField(
                  LocationsPerGameObjectTypeDefaultEntryHolder.defaultEntry);
              mutable_bitField0_ |= 0x00000001;
            }
            com.google.protobuf.MapEntry<java.lang.Integer, com.google.maps.playablelocations.v3.sample.PlayableLocationList>
            locationsPerGameObjectType__ = input.readMessage(
                LocationsPerGameObjectTypeDefaultEntryHolder.defaultEntry.getParserForType(), extensionRegistry);
            locationsPerGameObjectType_.getMutableMap().put(
                locationsPerGameObjectType__.getKey(), locationsPerGameObjectType__.getValue());
            break;
          }
          case 74: {
            com.google.protobuf.Duration.Builder subBuilder = null;
            if (ttl_ != null) {
              subBuilder = ttl_.toBuilder();
            }
            ttl_ = input.readMessage(com.google.protobuf.Duration.parser(), extensionRegistry);
            if (subBuilder != null) {
              subBuilder.mergeFrom(ttl_);
              ttl_ = subBuilder.buildPartial();
            }

            break;
          }
          default: {
            if (!parseUnknownField(
                input, unknownFields, extensionRegistry, tag)) {
              done = true;
            }
            break;
          }
        }
      }
    } catch (com.google.protobuf.InvalidProtocolBufferException e) {
      throw e.setUnfinishedMessage(this);
    } catch (com.google.protobuf.UninitializedMessageException e) {
      throw e.asInvalidProtocolBufferException().setUnfinishedMessage(this);
    } catch (java.io.IOException e) {
      throw new com.google.protobuf.InvalidProtocolBufferException(
          e).setUnfinishedMessage(this);
    } finally {
      this.unknownFields = unknownFields.build();
      makeExtensionsImmutable();
    }
  }
  public static final com.google.protobuf.Descriptors.Descriptor
      getDescriptor() {
    return com.google.maps.playablelocations.v3.PlayableLocationsProto.internal_static_google_maps_playablelocations_v3_SamplePlayableLocationsResponse_descriptor;
  }

  @SuppressWarnings({"rawtypes"})
  @java.lang.Override
  protected com.google.protobuf.MapField internalGetMapField(
      int number) {
    switch (number) {
      case 1:
        return internalGetLocationsPerGameObjectType();
      default:
        throw new RuntimeException(
            "Invalid map field number: " + number);
    }
  }
  @java.lang.Override
  protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internalGetFieldAccessorTable() {
    return com.google.maps.playablelocations.v3.PlayableLocationsProto.internal_static_google_maps_playablelocations_v3_SamplePlayableLocationsResponse_fieldAccessorTable
        .ensureFieldAccessorsInitialized(
            com.google.maps.playablelocations.v3.SamplePlayableLocationsResponse.class, com.google.maps.playablelocations.v3.SamplePlayableLocationsResponse.Builder.class);
  }

  public static final int LOCATIONS_PER_GAME_OBJECT_TYPE_FIELD_NUMBER = 1;
  private static final class LocationsPerGameObjectTypeDefaultEntryHolder {
    static final com.google.protobuf.MapEntry<
        java.lang.Integer, com.google.maps.playablelocations.v3.sample.PlayableLocationList> defaultEntry =
            com.google.protobuf.MapEntry
            .<java.lang.Integer, com.google.maps.playablelocations.v3.sample.PlayableLocationList>newDefaultInstance(
                com.google.maps.playablelocations.v3.PlayableLocationsProto.internal_static_google_maps_playablelocations_v3_SamplePlayableLocationsResponse_LocationsPerGameObjectTypeEntry_descriptor, 
                com.google.protobuf.WireFormat.FieldType.INT32,
                0,
                com.google.protobuf.WireFormat.FieldType.MESSAGE,
                com.google.maps.playablelocations.v3.sample.PlayableLocationList.getDefaultInstance());
  }
  private com.google.protobuf.MapField<
      java.lang.Integer, com.google.maps.playablelocations.v3.sample.PlayableLocationList> locationsPerGameObjectType_;
  private com.google.protobuf.MapField<java.lang.Integer, com.google.maps.playablelocations.v3.sample.PlayableLocationList>
  internalGetLocationsPerGameObjectType() {
    if (locationsPerGameObjectType_ == null) {
      return com.google.protobuf.MapField.emptyMapField(
          LocationsPerGameObjectTypeDefaultEntryHolder.defaultEntry);
    }
    return locationsPerGameObjectType_;
  }

  public int getLocationsPerGameObjectTypeCount() {
    return internalGetLocationsPerGameObjectType().getMap().size();
  }
  /**
   * <pre>
   * Each PlayableLocation object corresponds to a game_object_type specified
   * in the request.
   * </pre>
   *
   * <code>map&lt;int32, .google.maps.playablelocations.v3.sample.PlayableLocationList&gt; locations_per_game_object_type = 1;</code>
   */

  @java.lang.Override
  public boolean containsLocationsPerGameObjectType(
      int key) {
    
    return internalGetLocationsPerGameObjectType().getMap().containsKey(key);
  }
  /**
   * Use {@link #getLocationsPerGameObjectTypeMap()} instead.
   */
  @java.lang.Override
  @java.lang.Deprecated
  public java.util.Map<java.lang.Integer, com.google.maps.playablelocations.v3.sample.PlayableLocationList> getLocationsPerGameObjectType() {
    return getLocationsPerGameObjectTypeMap();
  }
  /**
   * <pre>
   * Each PlayableLocation object corresponds to a game_object_type specified
   * in the request.
   * </pre>
   *
   * <code>map&lt;int32, .google.maps.playablelocations.v3.sample.PlayableLocationList&gt; locations_per_game_object_type = 1;</code>
   */
  @java.lang.Override

  public java.util.Map<java.lang.Integer, com.google.maps.playablelocations.v3.sample.PlayableLocationList> getLocationsPerGameObjectTypeMap() {
    return internalGetLocationsPerGameObjectType().getMap();
  }
  /**
   * <pre>
   * Each PlayableLocation object corresponds to a game_object_type specified
   * in the request.
   * </pre>
   *
   * <code>map&lt;int32, .google.maps.playablelocations.v3.sample.PlayableLocationList&gt; locations_per_game_object_type = 1;</code>
   */
  @java.lang.Override

  public com.google.maps.playablelocations.v3.sample.PlayableLocationList getLocationsPerGameObjectTypeOrDefault(
      int key,
      com.google.maps.playablelocations.v3.sample.PlayableLocationList defaultValue) {
    
    java.util.Map<java.lang.Integer, com.google.maps.playablelocations.v3.sample.PlayableLocationList> map =
        internalGetLocationsPerGameObjectType().getMap();
    return map.containsKey(key) ? map.get(key) : defaultValue;
  }
  /**
   * <pre>
   * Each PlayableLocation object corresponds to a game_object_type specified
   * in the request.
   * </pre>
   *
   * <code>map&lt;int32, .google.maps.playablelocations.v3.sample.PlayableLocationList&gt; locations_per_game_object_type = 1;</code>
   */
  @java.lang.Override

  public com.google.maps.playablelocations.v3.sample.PlayableLocationList getLocationsPerGameObjectTypeOrThrow(
      int key) {
    
    java.util.Map<java.lang.Integer, com.google.maps.playablelocations.v3.sample.PlayableLocationList> map =
        internalGetLocationsPerGameObjectType().getMap();
    if (!map.containsKey(key)) {
      throw new java.lang.IllegalArgumentException();
    }
    return map.get(key);
  }

  public static final int TTL_FIELD_NUMBER = 9;
  private com.google.protobuf.Duration ttl_;
  /**
   * <pre>
   * Required. Specifies the "time-to-live" for the set of playable locations.
   * You can use this value to determine how long to cache the set of playable
   * locations. After this length of time, your back-end game server should
   * issue a new
   * [SamplePlayableLocations][google.maps.playablelocations.v3.PlayableLocations.SamplePlayableLocations]
   * request to get a fresh set of playable locations (because for example, they
   * might have been removed, a park might have closed for the day, a
   * business might have closed permanently).
   * </pre>
   *
   * <code>.google.protobuf.Duration ttl = 9;</code>
   * @return Whether the ttl field is set.
   */
  @java.lang.Override
  public boolean hasTtl() {
    return ttl_ != null;
  }
  /**
   * <pre>
   * Required. Specifies the "time-to-live" for the set of playable locations.
   * You can use this value to determine how long to cache the set of playable
   * locations. After this length of time, your back-end game server should
   * issue a new
   * [SamplePlayableLocations][google.maps.playablelocations.v3.PlayableLocations.SamplePlayableLocations]
   * request to get a fresh set of playable locations (because for example, they
   * might have been removed, a park might have closed for the day, a
   * business might have closed permanently).
   * </pre>
   *
   * <code>.google.protobuf.Duration ttl = 9;</code>
   * @return The ttl.
   */
  @java.lang.Override
  public com.google.protobuf.Duration getTtl() {
    return ttl_ == null ? com.google.protobuf.Duration.getDefaultInstance() : ttl_;
  }
  /**
   * <pre>
   * Required. Specifies the "time-to-live" for the set of playable locations.
   * You can use this value to determine how long to cache the set of playable
   * locations. After this length of time, your back-end game server should
   * issue a new
   * [SamplePlayableLocations][google.maps.playablelocations.v3.PlayableLocations.SamplePlayableLocations]
   * request to get a fresh set of playable locations (because for example, they
   * might have been removed, a park might have closed for the day, a
   * business might have closed permanently).
   * </pre>
   *
   * <code>.google.protobuf.Duration ttl = 9;</code>
   */
  @java.lang.Override
  public com.google.protobuf.DurationOrBuilder getTtlOrBuilder() {
    return getTtl();
  }

  private byte memoizedIsInitialized = -1;
  @java.lang.Override
  public final boolean isInitialized() {
    byte isInitialized = memoizedIsInitialized;
    if (isInitialized == 1) return true;
    if (isInitialized == 0) return false;

    memoizedIsInitialized = 1;
    return true;
  }

  @java.lang.Override
  public void writeTo(com.google.protobuf.CodedOutputStream output)
                      throws java.io.IOException {
    com.google.protobuf.GeneratedMessageV3
      .serializeIntegerMapTo(
        output,
        internalGetLocationsPerGameObjectType(),
        LocationsPerGameObjectTypeDefaultEntryHolder.defaultEntry,
        1);
    if (ttl_ != null) {
      output.writeMessage(9, getTtl());
    }
    unknownFields.writeTo(output);
  }

  @java.lang.Override
  public int getSerializedSize() {
    int size = memoizedSize;
    if (size != -1) return size;

    size = 0;
    for (java.util.Map.Entry<java.lang.Integer, com.google.maps.playablelocations.v3.sample.PlayableLocationList> entry
         : internalGetLocationsPerGameObjectType().getMap().entrySet()) {
      com.google.protobuf.MapEntry<java.lang.Integer, com.google.maps.playablelocations.v3.sample.PlayableLocationList>
      locationsPerGameObjectType__ = LocationsPerGameObjectTypeDefaultEntryHolder.defaultEntry.newBuilderForType()
          .setKey(entry.getKey())
          .setValue(entry.getValue())
          .build();
      size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, locationsPerGameObjectType__);
    }
    if (ttl_ != null) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(9, getTtl());
    }
    size += unknownFields.getSerializedSize();
    memoizedSize = size;
    return size;
  }

  @java.lang.Override
  public boolean equals(final java.lang.Object obj) {
    if (obj == this) {
     return true;
    }
    if (!(obj instanceof com.google.maps.playablelocations.v3.SamplePlayableLocationsResponse)) {
      return super.equals(obj);
    }
    com.google.maps.playablelocations.v3.SamplePlayableLocationsResponse other = (com.google.maps.playablelocations.v3.SamplePlayableLocationsResponse) obj;

    if (!internalGetLocationsPerGameObjectType().equals(
        other.internalGetLocationsPerGameObjectType())) return false;
    if (hasTtl() != other.hasTtl()) return false;
    if (hasTtl()) {
      if (!getTtl()
          .equals(other.getTtl())) return false;
    }
    if (!unknownFields.equals(other.unknownFields)) return false;
    return true;
  }

  @java.lang.Override
  public int hashCode() {
    if (memoizedHashCode != 0) {
      return memoizedHashCode;
    }
    int hash = 41;
    hash = (19 * hash) + getDescriptor().hashCode();
    if (!internalGetLocationsPerGameObjectType().getMap().isEmpty()) {
      hash = (37 * hash) + LOCATIONS_PER_GAME_OBJECT_TYPE_FIELD_NUMBER;
      hash = (53 * hash) + internalGetLocationsPerGameObjectType().hashCode();
    }
    if (hasTtl()) {
      hash = (37 * hash) + TTL_FIELD_NUMBER;
      hash = (53 * hash) + getTtl().hashCode();
    }
    hash = (29 * hash) + unknownFields.hashCode();
    memoizedHashCode = hash;
    return hash;
  }

  public static com.google.maps.playablelocations.v3.SamplePlayableLocationsResponse parseFrom(
      java.nio.ByteBuffer data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static com.google.maps.playablelocations.v3.SamplePlayableLocationsResponse parseFrom(
      java.nio.ByteBuffer data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static com.google.maps.playablelocations.v3.SamplePlayableLocationsResponse parseFrom(
      com.google.protobuf.ByteString data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static com.google.maps.playablelocations.v3.SamplePlayableLocationsResponse parseFrom(
      com.google.protobuf.ByteString data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static com.google.maps.playablelocations.v3.SamplePlayableLocationsResponse parseFrom(byte[] data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static com.google.maps.playablelocations.v3.SamplePlayableLocationsResponse parseFrom(
      byte[] data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static com.google.maps.playablelocations.v3.SamplePlayableLocationsResponse parseFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input);
  }
  public static com.google.maps.playablelocations.v3.SamplePlayableLocationsResponse parseFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input, extensionRegistry);
  }
  public static com.google.maps.playablelocations.v3.SamplePlayableLocationsResponse parseDelimitedFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseDelimitedWithIOException(PARSER, input);
  }
  public static com.google.maps.playablelocations.v3.SamplePlayableLocationsResponse parseDelimitedFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
  }
  public static com.google.maps.playablelocations.v3.SamplePlayableLocationsResponse parseFrom(
      com.google.protobuf.CodedInputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input);
  }
  public static com.google.maps.playablelocations.v3.SamplePlayableLocationsResponse parseFrom(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input, extensionRegistry);
  }

  @java.lang.Override
  public Builder newBuilderForType() { return newBuilder(); }
  public static Builder newBuilder() {
    return DEFAULT_INSTANCE.toBuilder();
  }
  public static Builder newBuilder(com.google.maps.playablelocations.v3.SamplePlayableLocationsResponse prototype) {
    return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
  }
  @java.lang.Override
  public Builder toBuilder() {
    return this == DEFAULT_INSTANCE
        ? new Builder() : new Builder().mergeFrom(this);
  }

  @java.lang.Override
  protected Builder newBuilderForType(
      com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
    Builder builder = new Builder(parent);
    return builder;
  }
  /**
   * <pre>
   * Response for the
   * [SamplePlayableLocations][google.maps.playablelocations.v3.PlayableLocations.SamplePlayableLocations]
   * method.
   * </pre>
   *
   * Protobuf type {@code google.maps.playablelocations.v3.SamplePlayableLocationsResponse}
   */
  public static final class Builder extends
      com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
      // @@protoc_insertion_point(builder_implements:google.maps.playablelocations.v3.SamplePlayableLocationsResponse)
      com.google.maps.playablelocations.v3.SamplePlayableLocationsResponseOrBuilder {
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.google.maps.playablelocations.v3.PlayableLocationsProto.internal_static_google_maps_playablelocations_v3_SamplePlayableLocationsResponse_descriptor;
    }

    @SuppressWarnings({"rawtypes"})
    protected com.google.protobuf.MapField internalGetMapField(
        int number) {
      switch (number) {
        case 1:
          return internalGetLocationsPerGameObjectType();
        default:
          throw new RuntimeException(
              "Invalid map field number: " + number);
      }
    }
    @SuppressWarnings({"rawtypes"})
    protected com.google.protobuf.MapField internalGetMutableMapField(
        int number) {
      switch (number) {
        case 1:
          return internalGetMutableLocationsPerGameObjectType();
        default:
          throw new RuntimeException(
              "Invalid map field number: " + number);
      }
    }
    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.google.maps.playablelocations.v3.PlayableLocationsProto.internal_static_google_maps_playablelocations_v3_SamplePlayableLocationsResponse_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.google.maps.playablelocations.v3.SamplePlayableLocationsResponse.class, com.google.maps.playablelocations.v3.SamplePlayableLocationsResponse.Builder.class);
    }

    // Construct using com.google.maps.playablelocations.v3.SamplePlayableLocationsResponse.newBuilder()
    private Builder() {
      maybeForceBuilderInitialization();
    }

    private Builder(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      super(parent);
      maybeForceBuilderInitialization();
    }
    private void maybeForceBuilderInitialization() {
      if (com.google.protobuf.GeneratedMessageV3
              .alwaysUseFieldBuilders) {
      }
    }
    @java.lang.Override
    public Builder clear() {
      super.clear();
      internalGetMutableLocationsPerGameObjectType().clear();
      if (ttlBuilder_ == null) {
        ttl_ = null;
      } else {
        ttl_ = null;
        ttlBuilder_ = null;
      }
      return this;
    }

    @java.lang.Override
    public com.google.protobuf.Descriptors.Descriptor
        getDescriptorForType() {
      return com.google.maps.playablelocations.v3.PlayableLocationsProto.internal_static_google_maps_playablelocations_v3_SamplePlayableLocationsResponse_descriptor;
    }

    @java.lang.Override
    public com.google.maps.playablelocations.v3.SamplePlayableLocationsResponse getDefaultInstanceForType() {
      return com.google.maps.playablelocations.v3.SamplePlayableLocationsResponse.getDefaultInstance();
    }

    @java.lang.Override
    public com.google.maps.playablelocations.v3.SamplePlayableLocationsResponse build() {
      com.google.maps.playablelocations.v3.SamplePlayableLocationsResponse result = buildPartial();
      if (!result.isInitialized()) {
        throw newUninitializedMessageException(result);
      }
      return result;
    }

    @java.lang.Override
    public com.google.maps.playablelocations.v3.SamplePlayableLocationsResponse buildPartial() {
      com.google.maps.playablelocations.v3.SamplePlayableLocationsResponse result = new com.google.maps.playablelocations.v3.SamplePlayableLocationsResponse(this);
      int from_bitField0_ = bitField0_;
      result.locationsPerGameObjectType_ = internalGetLocationsPerGameObjectType();
      result.locationsPerGameObjectType_.makeImmutable();
      if (ttlBuilder_ == null) {
        result.ttl_ = ttl_;
      } else {
        result.ttl_ = ttlBuilder_.build();
      }
      onBuilt();
      return result;
    }

    @java.lang.Override
    public Builder clone() {
      return super.clone();
    }
    @java.lang.Override
    public Builder setField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        java.lang.Object value) {
      return super.setField(field, value);
    }
    @java.lang.Override
    public Builder clearField(
        com.google.protobuf.Descriptors.FieldDescriptor field) {
      return super.clearField(field);
    }
    @java.lang.Override
    public Builder clearOneof(
        com.google.protobuf.Descriptors.OneofDescriptor oneof) {
      return super.clearOneof(oneof);
    }
    @java.lang.Override
    public Builder setRepeatedField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        int index, java.lang.Object value) {
      return super.setRepeatedField(field, index, value);
    }
    @java.lang.Override
    public Builder addRepeatedField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        java.lang.Object value) {
      return super.addRepeatedField(field, value);
    }
    @java.lang.Override
    public Builder mergeFrom(com.google.protobuf.Message other) {
      if (other instanceof com.google.maps.playablelocations.v3.SamplePlayableLocationsResponse) {
        return mergeFrom((com.google.maps.playablelocations.v3.SamplePlayableLocationsResponse)other);
      } else {
        super.mergeFrom(other);
        return this;
      }
    }

    public Builder mergeFrom(com.google.maps.playablelocations.v3.SamplePlayableLocationsResponse other) {
      if (other == com.google.maps.playablelocations.v3.SamplePlayableLocationsResponse.getDefaultInstance()) return this;
      internalGetMutableLocationsPerGameObjectType().mergeFrom(
          other.internalGetLocationsPerGameObjectType());
      if (other.hasTtl()) {
        mergeTtl(other.getTtl());
      }
      this.mergeUnknownFields(other.unknownFields);
      onChanged();
      return this;
    }

    @java.lang.Override
    public final boolean isInitialized() {
      return true;
    }

    @java.lang.Override
    public Builder mergeFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      com.google.maps.playablelocations.v3.SamplePlayableLocationsResponse parsedMessage = null;
      try {
        parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        parsedMessage = (com.google.maps.playablelocations.v3.SamplePlayableLocationsResponse) e.getUnfinishedMessage();
        throw e.unwrapIOException();
      } finally {
        if (parsedMessage != null) {
          mergeFrom(parsedMessage);
        }
      }
      return this;
    }
    private int bitField0_;

    private com.google.protobuf.MapField<
        java.lang.Integer, com.google.maps.playablelocations.v3.sample.PlayableLocationList> locationsPerGameObjectType_;
    private com.google.protobuf.MapField<java.lang.Integer, com.google.maps.playablelocations.v3.sample.PlayableLocationList>
    internalGetLocationsPerGameObjectType() {
      if (locationsPerGameObjectType_ == null) {
        return com.google.protobuf.MapField.emptyMapField(
            LocationsPerGameObjectTypeDefaultEntryHolder.defaultEntry);
      }
      return locationsPerGameObjectType_;
    }
    private com.google.protobuf.MapField<java.lang.Integer, com.google.maps.playablelocations.v3.sample.PlayableLocationList>
    internalGetMutableLocationsPerGameObjectType() {
      onChanged();;
      if (locationsPerGameObjectType_ == null) {
        locationsPerGameObjectType_ = com.google.protobuf.MapField.newMapField(
            LocationsPerGameObjectTypeDefaultEntryHolder.defaultEntry);
      }
      if (!locationsPerGameObjectType_.isMutable()) {
        locationsPerGameObjectType_ = locationsPerGameObjectType_.copy();
      }
      return locationsPerGameObjectType_;
    }

    public int getLocationsPerGameObjectTypeCount() {
      return internalGetLocationsPerGameObjectType().getMap().size();
    }
    /**
     * <pre>
     * Each PlayableLocation object corresponds to a game_object_type specified
     * in the request.
     * </pre>
     *
     * <code>map&lt;int32, .google.maps.playablelocations.v3.sample.PlayableLocationList&gt; locations_per_game_object_type = 1;</code>
     */

    @java.lang.Override
    public boolean containsLocationsPerGameObjectType(
        int key) {
      
      return internalGetLocationsPerGameObjectType().getMap().containsKey(key);
    }
    /**
     * Use {@link #getLocationsPerGameObjectTypeMap()} instead.
     */
    @java.lang.Override
    @java.lang.Deprecated
    public java.util.Map<java.lang.Integer, com.google.maps.playablelocations.v3.sample.PlayableLocationList> getLocationsPerGameObjectType() {
      return getLocationsPerGameObjectTypeMap();
    }
    /**
     * <pre>
     * Each PlayableLocation object corresponds to a game_object_type specified
     * in the request.
     * </pre>
     *
     * <code>map&lt;int32, .google.maps.playablelocations.v3.sample.PlayableLocationList&gt; locations_per_game_object_type = 1;</code>
     */
    @java.lang.Override

    public java.util.Map<java.lang.Integer, com.google.maps.playablelocations.v3.sample.PlayableLocationList> getLocationsPerGameObjectTypeMap() {
      return internalGetLocationsPerGameObjectType().getMap();
    }
    /**
     * <pre>
     * Each PlayableLocation object corresponds to a game_object_type specified
     * in the request.
     * </pre>
     *
     * <code>map&lt;int32, .google.maps.playablelocations.v3.sample.PlayableLocationList&gt; locations_per_game_object_type = 1;</code>
     */
    @java.lang.Override

    public com.google.maps.playablelocations.v3.sample.PlayableLocationList getLocationsPerGameObjectTypeOrDefault(
        int key,
        com.google.maps.playablelocations.v3.sample.PlayableLocationList defaultValue) {
      
      java.util.Map<java.lang.Integer, com.google.maps.playablelocations.v3.sample.PlayableLocationList> map =
          internalGetLocationsPerGameObjectType().getMap();
      return map.containsKey(key) ? map.get(key) : defaultValue;
    }
    /**
     * <pre>
     * Each PlayableLocation object corresponds to a game_object_type specified
     * in the request.
     * </pre>
     *
     * <code>map&lt;int32, .google.maps.playablelocations.v3.sample.PlayableLocationList&gt; locations_per_game_object_type = 1;</code>
     */
    @java.lang.Override

    public com.google.maps.playablelocations.v3.sample.PlayableLocationList getLocationsPerGameObjectTypeOrThrow(
        int key) {
      
      java.util.Map<java.lang.Integer, com.google.maps.playablelocations.v3.sample.PlayableLocationList> map =
          internalGetLocationsPerGameObjectType().getMap();
      if (!map.containsKey(key)) {
        throw new java.lang.IllegalArgumentException();
      }
      return map.get(key);
    }

    public Builder clearLocationsPerGameObjectType() {
      internalGetMutableLocationsPerGameObjectType().getMutableMap()
          .clear();
      return this;
    }
    /**
     * <pre>
     * Each PlayableLocation object corresponds to a game_object_type specified
     * in the request.
     * </pre>
     *
     * <code>map&lt;int32, .google.maps.playablelocations.v3.sample.PlayableLocationList&gt; locations_per_game_object_type = 1;</code>
     */

    public Builder removeLocationsPerGameObjectType(
        int key) {
      
      internalGetMutableLocationsPerGameObjectType().getMutableMap()
          .remove(key);
      return this;
    }
    /**
     * Use alternate mutation accessors instead.
     */
    @java.lang.Deprecated
    public java.util.Map<java.lang.Integer, com.google.maps.playablelocations.v3.sample.PlayableLocationList>
    getMutableLocationsPerGameObjectType() {
      return internalGetMutableLocationsPerGameObjectType().getMutableMap();
    }
    /**
     * <pre>
     * Each PlayableLocation object corresponds to a game_object_type specified
     * in the request.
     * </pre>
     *
     * <code>map&lt;int32, .google.maps.playablelocations.v3.sample.PlayableLocationList&gt; locations_per_game_object_type = 1;</code>
     */
    public Builder putLocationsPerGameObjectType(
        int key,
        com.google.maps.playablelocations.v3.sample.PlayableLocationList value) {
      
      if (value == null) {
  throw new NullPointerException("map value");
}

      internalGetMutableLocationsPerGameObjectType().getMutableMap()
          .put(key, value);
      return this;
    }
    /**
     * <pre>
     * Each PlayableLocation object corresponds to a game_object_type specified
     * in the request.
     * </pre>
     *
     * <code>map&lt;int32, .google.maps.playablelocations.v3.sample.PlayableLocationList&gt; locations_per_game_object_type = 1;</code>
     */

    public Builder putAllLocationsPerGameObjectType(
        java.util.Map<java.lang.Integer, com.google.maps.playablelocations.v3.sample.PlayableLocationList> values) {
      internalGetMutableLocationsPerGameObjectType().getMutableMap()
          .putAll(values);
      return this;
    }

    private com.google.protobuf.Duration ttl_;
    private com.google.protobuf.SingleFieldBuilderV3<
        com.google.protobuf.Duration, com.google.protobuf.Duration.Builder, com.google.protobuf.DurationOrBuilder> ttlBuilder_;
    /**
     * <pre>
     * Required. Specifies the "time-to-live" for the set of playable locations.
     * You can use this value to determine how long to cache the set of playable
     * locations. After this length of time, your back-end game server should
     * issue a new
     * [SamplePlayableLocations][google.maps.playablelocations.v3.PlayableLocations.SamplePlayableLocations]
     * request to get a fresh set of playable locations (because for example, they
     * might have been removed, a park might have closed for the day, a
     * business might have closed permanently).
     * </pre>
     *
     * <code>.google.protobuf.Duration ttl = 9;</code>
     * @return Whether the ttl field is set.
     */
    public boolean hasTtl() {
      return ttlBuilder_ != null || ttl_ != null;
    }
    /**
     * <pre>
     * Required. Specifies the "time-to-live" for the set of playable locations.
     * You can use this value to determine how long to cache the set of playable
     * locations. After this length of time, your back-end game server should
     * issue a new
     * [SamplePlayableLocations][google.maps.playablelocations.v3.PlayableLocations.SamplePlayableLocations]
     * request to get a fresh set of playable locations (because for example, they
     * might have been removed, a park might have closed for the day, a
     * business might have closed permanently).
     * </pre>
     *
     * <code>.google.protobuf.Duration ttl = 9;</code>
     * @return The ttl.
     */
    public com.google.protobuf.Duration getTtl() {
      if (ttlBuilder_ == null) {
        return ttl_ == null ? com.google.protobuf.Duration.getDefaultInstance() : ttl_;
      } else {
        return ttlBuilder_.getMessage();
      }
    }
    /**
     * <pre>
     * Required. Specifies the "time-to-live" for the set of playable locations.
     * You can use this value to determine how long to cache the set of playable
     * locations. After this length of time, your back-end game server should
     * issue a new
     * [SamplePlayableLocations][google.maps.playablelocations.v3.PlayableLocations.SamplePlayableLocations]
     * request to get a fresh set of playable locations (because for example, they
     * might have been removed, a park might have closed for the day, a
     * business might have closed permanently).
     * </pre>
     *
     * <code>.google.protobuf.Duration ttl = 9;</code>
     */
    public Builder setTtl(com.google.protobuf.Duration value) {
      if (ttlBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ttl_ = value;
        onChanged();
      } else {
        ttlBuilder_.setMessage(value);
      }

      return this;
    }
    /**
     * <pre>
     * Required. Specifies the "time-to-live" for the set of playable locations.
     * You can use this value to determine how long to cache the set of playable
     * locations. After this length of time, your back-end game server should
     * issue a new
     * [SamplePlayableLocations][google.maps.playablelocations.v3.PlayableLocations.SamplePlayableLocations]
     * request to get a fresh set of playable locations (because for example, they
     * might have been removed, a park might have closed for the day, a
     * business might have closed permanently).
     * </pre>
     *
     * <code>.google.protobuf.Duration ttl = 9;</code>
     */
    public Builder setTtl(
        com.google.protobuf.Duration.Builder builderForValue) {
      if (ttlBuilder_ == null) {
        ttl_ = builderForValue.build();
        onChanged();
      } else {
        ttlBuilder_.setMessage(builderForValue.build());
      }

      return this;
    }
    /**
     * <pre>
     * Required. Specifies the "time-to-live" for the set of playable locations.
     * You can use this value to determine how long to cache the set of playable
     * locations. After this length of time, your back-end game server should
     * issue a new
     * [SamplePlayableLocations][google.maps.playablelocations.v3.PlayableLocations.SamplePlayableLocations]
     * request to get a fresh set of playable locations (because for example, they
     * might have been removed, a park might have closed for the day, a
     * business might have closed permanently).
     * </pre>
     *
     * <code>.google.protobuf.Duration ttl = 9;</code>
     */
    public Builder mergeTtl(com.google.protobuf.Duration value) {
      if (ttlBuilder_ == null) {
        if (ttl_ != null) {
          ttl_ =
            com.google.protobuf.Duration.newBuilder(ttl_).mergeFrom(value).buildPartial();
        } else {
          ttl_ = value;
        }
        onChanged();
      } else {
        ttlBuilder_.mergeFrom(value);
      }

      return this;
    }
    /**
     * <pre>
     * Required. Specifies the "time-to-live" for the set of playable locations.
     * You can use this value to determine how long to cache the set of playable
     * locations. After this length of time, your back-end game server should
     * issue a new
     * [SamplePlayableLocations][google.maps.playablelocations.v3.PlayableLocations.SamplePlayableLocations]
     * request to get a fresh set of playable locations (because for example, they
     * might have been removed, a park might have closed for the day, a
     * business might have closed permanently).
     * </pre>
     *
     * <code>.google.protobuf.Duration ttl = 9;</code>
     */
    public Builder clearTtl() {
      if (ttlBuilder_ == null) {
        ttl_ = null;
        onChanged();
      } else {
        ttl_ = null;
        ttlBuilder_ = null;
      }

      return this;
    }
    /**
     * <pre>
     * Required. Specifies the "time-to-live" for the set of playable locations.
     * You can use this value to determine how long to cache the set of playable
     * locations. After this length of time, your back-end game server should
     * issue a new
     * [SamplePlayableLocations][google.maps.playablelocations.v3.PlayableLocations.SamplePlayableLocations]
     * request to get a fresh set of playable locations (because for example, they
     * might have been removed, a park might have closed for the day, a
     * business might have closed permanently).
     * </pre>
     *
     * <code>.google.protobuf.Duration ttl = 9;</code>
     */
    public com.google.protobuf.Duration.Builder getTtlBuilder() {
      
      onChanged();
      return getTtlFieldBuilder().getBuilder();
    }
    /**
     * <pre>
     * Required. Specifies the "time-to-live" for the set of playable locations.
     * You can use this value to determine how long to cache the set of playable
     * locations. After this length of time, your back-end game server should
     * issue a new
     * [SamplePlayableLocations][google.maps.playablelocations.v3.PlayableLocations.SamplePlayableLocations]
     * request to get a fresh set of playable locations (because for example, they
     * might have been removed, a park might have closed for the day, a
     * business might have closed permanently).
     * </pre>
     *
     * <code>.google.protobuf.Duration ttl = 9;</code>
     */
    public com.google.protobuf.DurationOrBuilder getTtlOrBuilder() {
      if (ttlBuilder_ != null) {
        return ttlBuilder_.getMessageOrBuilder();
      } else {
        return ttl_ == null ?
            com.google.protobuf.Duration.getDefaultInstance() : ttl_;
      }
    }
    /**
     * <pre>
     * Required. Specifies the "time-to-live" for the set of playable locations.
     * You can use this value to determine how long to cache the set of playable
     * locations. After this length of time, your back-end game server should
     * issue a new
     * [SamplePlayableLocations][google.maps.playablelocations.v3.PlayableLocations.SamplePlayableLocations]
     * request to get a fresh set of playable locations (because for example, they
     * might have been removed, a park might have closed for the day, a
     * business might have closed permanently).
     * </pre>
     *
     * <code>.google.protobuf.Duration ttl = 9;</code>
     */
    private com.google.protobuf.SingleFieldBuilderV3<
        com.google.protobuf.Duration, com.google.protobuf.Duration.Builder, com.google.protobuf.DurationOrBuilder> 
        getTtlFieldBuilder() {
      if (ttlBuilder_ == null) {
        ttlBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
            com.google.protobuf.Duration, com.google.protobuf.Duration.Builder, com.google.protobuf.DurationOrBuilder>(
                getTtl(),
                getParentForChildren(),
                isClean());
        ttl_ = null;
      }
      return ttlBuilder_;
    }
    @java.lang.Override
    public final Builder setUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return super.setUnknownFields(unknownFields);
    }

    @java.lang.Override
    public final Builder mergeUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return super.mergeUnknownFields(unknownFields);
    }


    // @@protoc_insertion_point(builder_scope:google.maps.playablelocations.v3.SamplePlayableLocationsResponse)
  }

  // @@protoc_insertion_point(class_scope:google.maps.playablelocations.v3.SamplePlayableLocationsResponse)
  private static final com.google.maps.playablelocations.v3.SamplePlayableLocationsResponse DEFAULT_INSTANCE;
  static {
    DEFAULT_INSTANCE = new com.google.maps.playablelocations.v3.SamplePlayableLocationsResponse();
  }

  public static com.google.maps.playablelocations.v3.SamplePlayableLocationsResponse getDefaultInstance() {
    return DEFAULT_INSTANCE;
  }

  private static final com.google.protobuf.Parser<SamplePlayableLocationsResponse>
      PARSER = new com.google.protobuf.AbstractParser<SamplePlayableLocationsResponse>() {
    @java.lang.Override
    public SamplePlayableLocationsResponse parsePartialFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return new SamplePlayableLocationsResponse(input, extensionRegistry);
    }
  };

  public static com.google.protobuf.Parser<SamplePlayableLocationsResponse> parser() {
    return PARSER;
  }

  @java.lang.Override
  public com.google.protobuf.Parser<SamplePlayableLocationsResponse> getParserForType() {
    return PARSER;
  }

  @java.lang.Override
  public com.google.maps.playablelocations.v3.SamplePlayableLocationsResponse getDefaultInstanceForType() {
    return DEFAULT_INSTANCE;
  }

}

