// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: google/maps/playablelocations/v3/playablelocations.proto

package com.google.maps.playablelocations.v3;

public interface SamplePlayableLocationsRequestOrBuilder extends
    // @@protoc_insertion_point(interface_extends:google.maps.playablelocations.v3.SamplePlayableLocationsRequest)
    com.google.protobuf.MessageOrBuilder {

  /**
   * <pre>
   * Required. Specifies the area to search within for playable locations.
   * </pre>
   *
   * <code>.google.maps.playablelocations.v3.sample.AreaFilter area_filter = 1 [(.google.api.field_behavior) = REQUIRED];</code>
   * @return Whether the areaFilter field is set.
   */
  boolean hasAreaFilter();
  /**
   * <pre>
   * Required. Specifies the area to search within for playable locations.
   * </pre>
   *
   * <code>.google.maps.playablelocations.v3.sample.AreaFilter area_filter = 1 [(.google.api.field_behavior) = REQUIRED];</code>
   * @return The areaFilter.
   */
  com.google.maps.playablelocations.v3.sample.AreaFilter getAreaFilter();
  /**
   * <pre>
   * Required. Specifies the area to search within for playable locations.
   * </pre>
   *
   * <code>.google.maps.playablelocations.v3.sample.AreaFilter area_filter = 1 [(.google.api.field_behavior) = REQUIRED];</code>
   */
  com.google.maps.playablelocations.v3.sample.AreaFilterOrBuilder getAreaFilterOrBuilder();

  /**
   * <pre>
   * Required. Specifies one or more (up to 5) criteria for filtering the
   * returned playable locations.
   * </pre>
   *
   * <code>repeated .google.maps.playablelocations.v3.sample.Criterion criteria = 2 [(.google.api.field_behavior) = REQUIRED];</code>
   */
  java.util.List<com.google.maps.playablelocations.v3.sample.Criterion> 
      getCriteriaList();
  /**
   * <pre>
   * Required. Specifies one or more (up to 5) criteria for filtering the
   * returned playable locations.
   * </pre>
   *
   * <code>repeated .google.maps.playablelocations.v3.sample.Criterion criteria = 2 [(.google.api.field_behavior) = REQUIRED];</code>
   */
  com.google.maps.playablelocations.v3.sample.Criterion getCriteria(int index);
  /**
   * <pre>
   * Required. Specifies one or more (up to 5) criteria for filtering the
   * returned playable locations.
   * </pre>
   *
   * <code>repeated .google.maps.playablelocations.v3.sample.Criterion criteria = 2 [(.google.api.field_behavior) = REQUIRED];</code>
   */
  int getCriteriaCount();
  /**
   * <pre>
   * Required. Specifies one or more (up to 5) criteria for filtering the
   * returned playable locations.
   * </pre>
   *
   * <code>repeated .google.maps.playablelocations.v3.sample.Criterion criteria = 2 [(.google.api.field_behavior) = REQUIRED];</code>
   */
  java.util.List<? extends com.google.maps.playablelocations.v3.sample.CriterionOrBuilder> 
      getCriteriaOrBuilderList();
  /**
   * <pre>
   * Required. Specifies one or more (up to 5) criteria for filtering the
   * returned playable locations.
   * </pre>
   *
   * <code>repeated .google.maps.playablelocations.v3.sample.Criterion criteria = 2 [(.google.api.field_behavior) = REQUIRED];</code>
   */
  com.google.maps.playablelocations.v3.sample.CriterionOrBuilder getCriteriaOrBuilder(
      int index);
}
