// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: google/protobuf/unittest_proto3_optional.proto

package com.google.protobuf.testing.proto;

/**
 * Protobuf type {@code protobuf_unittest.TestProto3Optional}
 */
public final class TestProto3Optional extends
    com.google.protobuf.GeneratedMessageV3 implements
    // @@protoc_insertion_point(message_implements:protobuf_unittest.TestProto3Optional)
    TestProto3OptionalOrBuilder {
private static final long serialVersionUID = 0L;
  // Use TestProto3Optional.newBuilder() to construct.
  private TestProto3Optional(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
    super(builder);
  }
  private TestProto3Optional() {
    optionalString_ = "";
    optionalBytes_ = com.google.protobuf.ByteString.EMPTY;
    optionalCord_ = "";
    optionalNestedEnum_ = 0;
  }

  @java.lang.Override
  @SuppressWarnings({"unused"})
  protected java.lang.Object newInstance(
      UnusedPrivateParameter unused) {
    return new TestProto3Optional();
  }

  @java.lang.Override
  public final com.google.protobuf.UnknownFieldSet
  getUnknownFields() {
    return this.unknownFields;
  }
  private TestProto3Optional(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    this();
    if (extensionRegistry == null) {
      throw new java.lang.NullPointerException();
    }
    int mutable_bitField0_ = 0;
    com.google.protobuf.UnknownFieldSet.Builder unknownFields =
        com.google.protobuf.UnknownFieldSet.newBuilder();
    try {
      boolean done = false;
      while (!done) {
        int tag = input.readTag();
        switch (tag) {
          case 0:
            done = true;
            break;
          case 8: {
            bitField0_ |= 0x00000001;
            optionalInt32_ = input.readInt32();
            break;
          }
          case 16: {
            bitField0_ |= 0x00000002;
            optionalInt64_ = input.readInt64();
            break;
          }
          case 24: {
            bitField0_ |= 0x00000004;
            optionalUint32_ = input.readUInt32();
            break;
          }
          case 32: {
            bitField0_ |= 0x00000008;
            optionalUint64_ = input.readUInt64();
            break;
          }
          case 40: {
            bitField0_ |= 0x00000010;
            optionalSint32_ = input.readSInt32();
            break;
          }
          case 48: {
            bitField0_ |= 0x00000020;
            optionalSint64_ = input.readSInt64();
            break;
          }
          case 61: {
            bitField0_ |= 0x00000040;
            optionalFixed32_ = input.readFixed32();
            break;
          }
          case 65: {
            bitField0_ |= 0x00000080;
            optionalFixed64_ = input.readFixed64();
            break;
          }
          case 77: {
            bitField0_ |= 0x00000100;
            optionalSfixed32_ = input.readSFixed32();
            break;
          }
          case 81: {
            bitField0_ |= 0x00000200;
            optionalSfixed64_ = input.readSFixed64();
            break;
          }
          case 93: {
            bitField0_ |= 0x00000400;
            optionalFloat_ = input.readFloat();
            break;
          }
          case 97: {
            bitField0_ |= 0x00000800;
            optionalDouble_ = input.readDouble();
            break;
          }
          case 104: {
            bitField0_ |= 0x00001000;
            optionalBool_ = input.readBool();
            break;
          }
          case 114: {
            java.lang.String s = input.readStringRequireUtf8();
            bitField0_ |= 0x00002000;
            optionalString_ = s;
            break;
          }
          case 122: {
            bitField0_ |= 0x00004000;
            optionalBytes_ = input.readBytes();
            break;
          }
          case 130: {
            java.lang.String s = input.readStringRequireUtf8();
            bitField0_ |= 0x00008000;
            optionalCord_ = s;
            break;
          }
          case 146: {
            com.google.protobuf.testing.proto.TestProto3Optional.NestedMessage.Builder subBuilder = null;
            if (((bitField0_ & 0x00010000) != 0)) {
              subBuilder = optionalNestedMessage_.toBuilder();
            }
            optionalNestedMessage_ = input.readMessage(com.google.protobuf.testing.proto.TestProto3Optional.NestedMessage.parser(), extensionRegistry);
            if (subBuilder != null) {
              subBuilder.mergeFrom(optionalNestedMessage_);
              optionalNestedMessage_ = subBuilder.buildPartial();
            }
            bitField0_ |= 0x00010000;
            break;
          }
          case 154: {
            com.google.protobuf.testing.proto.TestProto3Optional.NestedMessage.Builder subBuilder = null;
            if (((bitField0_ & 0x00020000) != 0)) {
              subBuilder = lazyNestedMessage_.toBuilder();
            }
            lazyNestedMessage_ = input.readMessage(com.google.protobuf.testing.proto.TestProto3Optional.NestedMessage.parser(), extensionRegistry);
            if (subBuilder != null) {
              subBuilder.mergeFrom(lazyNestedMessage_);
              lazyNestedMessage_ = subBuilder.buildPartial();
            }
            bitField0_ |= 0x00020000;
            break;
          }
          case 168: {
            int rawValue = input.readEnum();
            bitField0_ |= 0x00040000;
            optionalNestedEnum_ = rawValue;
            break;
          }
          case 176: {

            singularInt32_ = input.readInt32();
            break;
          }
          case 184: {

            singularInt64_ = input.readInt64();
            break;
          }
          default: {
            if (!parseUnknownField(
                input, unknownFields, extensionRegistry, tag)) {
              done = true;
            }
            break;
          }
        }
      }
    } catch (com.google.protobuf.InvalidProtocolBufferException e) {
      throw e.setUnfinishedMessage(this);
    } catch (com.google.protobuf.UninitializedMessageException e) {
      throw e.asInvalidProtocolBufferException().setUnfinishedMessage(this);
    } catch (java.io.IOException e) {
      throw new com.google.protobuf.InvalidProtocolBufferException(
          e).setUnfinishedMessage(this);
    } finally {
      this.unknownFields = unknownFields.build();
      makeExtensionsImmutable();
    }
  }
  public static final com.google.protobuf.Descriptors.Descriptor
      getDescriptor() {
    return com.google.protobuf.testing.proto.UnittestProto3Optional.internal_static_protobuf_unittest_TestProto3Optional_descriptor;
  }

  @java.lang.Override
  protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internalGetFieldAccessorTable() {
    return com.google.protobuf.testing.proto.UnittestProto3Optional.internal_static_protobuf_unittest_TestProto3Optional_fieldAccessorTable
        .ensureFieldAccessorsInitialized(
            com.google.protobuf.testing.proto.TestProto3Optional.class, com.google.protobuf.testing.proto.TestProto3Optional.Builder.class);
  }

  /**
   * Protobuf enum {@code protobuf_unittest.TestProto3Optional.NestedEnum}
   */
  public enum NestedEnum
      implements com.google.protobuf.ProtocolMessageEnum {
    /**
     * <code>UNSPECIFIED = 0;</code>
     */
    UNSPECIFIED(0),
    /**
     * <code>FOO = 1;</code>
     */
    FOO(1),
    /**
     * <code>BAR = 2;</code>
     */
    BAR(2),
    /**
     * <code>BAZ = 3;</code>
     */
    BAZ(3),
    /**
     * <pre>
     * Intentionally negative.
     * </pre>
     *
     * <code>NEG = -1;</code>
     */
    NEG(-1),
    UNRECOGNIZED(-1),
    ;

    /**
     * <code>UNSPECIFIED = 0;</code>
     */
    public static final int UNSPECIFIED_VALUE = 0;
    /**
     * <code>FOO = 1;</code>
     */
    public static final int FOO_VALUE = 1;
    /**
     * <code>BAR = 2;</code>
     */
    public static final int BAR_VALUE = 2;
    /**
     * <code>BAZ = 3;</code>
     */
    public static final int BAZ_VALUE = 3;
    /**
     * <pre>
     * Intentionally negative.
     * </pre>
     *
     * <code>NEG = -1;</code>
     */
    public static final int NEG_VALUE = -1;


    public final int getNumber() {
      if (this == UNRECOGNIZED) {
        throw new java.lang.IllegalArgumentException(
            "Can't get the number of an unknown enum value.");
      }
      return value;
    }

    /**
     * @param value The numeric wire value of the corresponding enum entry.
     * @return The enum associated with the given numeric wire value.
     * @deprecated Use {@link #forNumber(int)} instead.
     */
    @java.lang.Deprecated
    public static NestedEnum valueOf(int value) {
      return forNumber(value);
    }

    /**
     * @param value The numeric wire value of the corresponding enum entry.
     * @return The enum associated with the given numeric wire value.
     */
    public static NestedEnum forNumber(int value) {
      switch (value) {
        case 0: return UNSPECIFIED;
        case 1: return FOO;
        case 2: return BAR;
        case 3: return BAZ;
        case -1: return NEG;
        default: return null;
      }
    }

    public static com.google.protobuf.Internal.EnumLiteMap<NestedEnum>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static final com.google.protobuf.Internal.EnumLiteMap<
        NestedEnum> internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<NestedEnum>() {
            public NestedEnum findValueByNumber(int number) {
              return NestedEnum.forNumber(number);
            }
          };

    public final com.google.protobuf.Descriptors.EnumValueDescriptor
        getValueDescriptor() {
      if (this == UNRECOGNIZED) {
        throw new java.lang.IllegalStateException(
            "Can't get the descriptor of an unrecognized enum value.");
      }
      return getDescriptor().getValues().get(ordinal());
    }
    public final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptorForType() {
      return getDescriptor();
    }
    public static final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptor() {
      return com.google.protobuf.testing.proto.TestProto3Optional.getDescriptor().getEnumTypes().get(0);
    }

    private static final NestedEnum[] VALUES = values();

    public static NestedEnum valueOf(
        com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
      if (desc.getType() != getDescriptor()) {
        throw new java.lang.IllegalArgumentException(
          "EnumValueDescriptor is not for this type.");
      }
      if (desc.getIndex() == -1) {
        return UNRECOGNIZED;
      }
      return VALUES[desc.getIndex()];
    }

    private final int value;

    private NestedEnum(int value) {
      this.value = value;
    }

    // @@protoc_insertion_point(enum_scope:protobuf_unittest.TestProto3Optional.NestedEnum)
  }

  public interface NestedMessageOrBuilder extends
      // @@protoc_insertion_point(interface_extends:protobuf_unittest.TestProto3Optional.NestedMessage)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <pre>
     * The field name "b" fails to compile in proto1 because it conflicts with
     * a local variable named "b" in one of the generated methods.  Doh.
     * This file needs to compile in proto1 to test backwards-compatibility.
     * </pre>
     *
     * <code>optional int32 bb = 1;</code>
     * @return Whether the bb field is set.
     */
    boolean hasBb();
    /**
     * <pre>
     * The field name "b" fails to compile in proto1 because it conflicts with
     * a local variable named "b" in one of the generated methods.  Doh.
     * This file needs to compile in proto1 to test backwards-compatibility.
     * </pre>
     *
     * <code>optional int32 bb = 1;</code>
     * @return The bb.
     */
    int getBb();
  }
  /**
   * Protobuf type {@code protobuf_unittest.TestProto3Optional.NestedMessage}
   */
  public static final class NestedMessage extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:protobuf_unittest.TestProto3Optional.NestedMessage)
      NestedMessageOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use NestedMessage.newBuilder() to construct.
    private NestedMessage(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private NestedMessage() {
    }

    @java.lang.Override
    @SuppressWarnings({"unused"})
    protected java.lang.Object newInstance(
        UnusedPrivateParameter unused) {
      return new NestedMessage();
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private NestedMessage(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 8: {
              bitField0_ |= 0x00000001;
              bb_ = input.readInt32();
              break;
            }
            default: {
              if (!parseUnknownField(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (com.google.protobuf.UninitializedMessageException e) {
        throw e.asInvalidProtocolBufferException().setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.google.protobuf.testing.proto.UnittestProto3Optional.internal_static_protobuf_unittest_TestProto3Optional_NestedMessage_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.google.protobuf.testing.proto.UnittestProto3Optional.internal_static_protobuf_unittest_TestProto3Optional_NestedMessage_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.google.protobuf.testing.proto.TestProto3Optional.NestedMessage.class, com.google.protobuf.testing.proto.TestProto3Optional.NestedMessage.Builder.class);
    }

    private int bitField0_;
    public static final int BB_FIELD_NUMBER = 1;
    private int bb_;
    /**
     * <pre>
     * The field name "b" fails to compile in proto1 because it conflicts with
     * a local variable named "b" in one of the generated methods.  Doh.
     * This file needs to compile in proto1 to test backwards-compatibility.
     * </pre>
     *
     * <code>optional int32 bb = 1;</code>
     * @return Whether the bb field is set.
     */
    @java.lang.Override
    public boolean hasBb() {
      return ((bitField0_ & 0x00000001) != 0);
    }
    /**
     * <pre>
     * The field name "b" fails to compile in proto1 because it conflicts with
     * a local variable named "b" in one of the generated methods.  Doh.
     * This file needs to compile in proto1 to test backwards-compatibility.
     * </pre>
     *
     * <code>optional int32 bb = 1;</code>
     * @return The bb.
     */
    @java.lang.Override
    public int getBb() {
      return bb_;
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (((bitField0_ & 0x00000001) != 0)) {
        output.writeInt32(1, bb_);
      }
      unknownFields.writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(1, bb_);
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof com.google.protobuf.testing.proto.TestProto3Optional.NestedMessage)) {
        return super.equals(obj);
      }
      com.google.protobuf.testing.proto.TestProto3Optional.NestedMessage other = (com.google.protobuf.testing.proto.TestProto3Optional.NestedMessage) obj;

      if (hasBb() != other.hasBb()) return false;
      if (hasBb()) {
        if (getBb()
            != other.getBb()) return false;
      }
      if (!unknownFields.equals(other.unknownFields)) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      if (hasBb()) {
        hash = (37 * hash) + BB_FIELD_NUMBER;
        hash = (53 * hash) + getBb();
      }
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static com.google.protobuf.testing.proto.TestProto3Optional.NestedMessage parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.google.protobuf.testing.proto.TestProto3Optional.NestedMessage parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.google.protobuf.testing.proto.TestProto3Optional.NestedMessage parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.google.protobuf.testing.proto.TestProto3Optional.NestedMessage parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.google.protobuf.testing.proto.TestProto3Optional.NestedMessage parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.google.protobuf.testing.proto.TestProto3Optional.NestedMessage parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.google.protobuf.testing.proto.TestProto3Optional.NestedMessage parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static com.google.protobuf.testing.proto.TestProto3Optional.NestedMessage parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static com.google.protobuf.testing.proto.TestProto3Optional.NestedMessage parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static com.google.protobuf.testing.proto.TestProto3Optional.NestedMessage parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static com.google.protobuf.testing.proto.TestProto3Optional.NestedMessage parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static com.google.protobuf.testing.proto.TestProto3Optional.NestedMessage parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(com.google.protobuf.testing.proto.TestProto3Optional.NestedMessage prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code protobuf_unittest.TestProto3Optional.NestedMessage}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:protobuf_unittest.TestProto3Optional.NestedMessage)
        com.google.protobuf.testing.proto.TestProto3Optional.NestedMessageOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return com.google.protobuf.testing.proto.UnittestProto3Optional.internal_static_protobuf_unittest_TestProto3Optional_NestedMessage_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return com.google.protobuf.testing.proto.UnittestProto3Optional.internal_static_protobuf_unittest_TestProto3Optional_NestedMessage_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                com.google.protobuf.testing.proto.TestProto3Optional.NestedMessage.class, com.google.protobuf.testing.proto.TestProto3Optional.NestedMessage.Builder.class);
      }

      // Construct using com.google.protobuf.testing.proto.TestProto3Optional.NestedMessage.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        bb_ = 0;
        bitField0_ = (bitField0_ & ~0x00000001);
        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.google.protobuf.testing.proto.UnittestProto3Optional.internal_static_protobuf_unittest_TestProto3Optional_NestedMessage_descriptor;
      }

      @java.lang.Override
      public com.google.protobuf.testing.proto.TestProto3Optional.NestedMessage getDefaultInstanceForType() {
        return com.google.protobuf.testing.proto.TestProto3Optional.NestedMessage.getDefaultInstance();
      }

      @java.lang.Override
      public com.google.protobuf.testing.proto.TestProto3Optional.NestedMessage build() {
        com.google.protobuf.testing.proto.TestProto3Optional.NestedMessage result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public com.google.protobuf.testing.proto.TestProto3Optional.NestedMessage buildPartial() {
        com.google.protobuf.testing.proto.TestProto3Optional.NestedMessage result = new com.google.protobuf.testing.proto.TestProto3Optional.NestedMessage(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) != 0)) {
          result.bb_ = bb_;
          to_bitField0_ |= 0x00000001;
        }
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      @java.lang.Override
      public Builder clone() {
        return super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.google.protobuf.testing.proto.TestProto3Optional.NestedMessage) {
          return mergeFrom((com.google.protobuf.testing.proto.TestProto3Optional.NestedMessage)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(com.google.protobuf.testing.proto.TestProto3Optional.NestedMessage other) {
        if (other == com.google.protobuf.testing.proto.TestProto3Optional.NestedMessage.getDefaultInstance()) return this;
        if (other.hasBb()) {
          setBb(other.getBb());
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.google.protobuf.testing.proto.TestProto3Optional.NestedMessage parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (com.google.protobuf.testing.proto.TestProto3Optional.NestedMessage) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private int bb_ ;
      /**
       * <pre>
       * The field name "b" fails to compile in proto1 because it conflicts with
       * a local variable named "b" in one of the generated methods.  Doh.
       * This file needs to compile in proto1 to test backwards-compatibility.
       * </pre>
       *
       * <code>optional int32 bb = 1;</code>
       * @return Whether the bb field is set.
       */
      @java.lang.Override
      public boolean hasBb() {
        return ((bitField0_ & 0x00000001) != 0);
      }
      /**
       * <pre>
       * The field name "b" fails to compile in proto1 because it conflicts with
       * a local variable named "b" in one of the generated methods.  Doh.
       * This file needs to compile in proto1 to test backwards-compatibility.
       * </pre>
       *
       * <code>optional int32 bb = 1;</code>
       * @return The bb.
       */
      @java.lang.Override
      public int getBb() {
        return bb_;
      }
      /**
       * <pre>
       * The field name "b" fails to compile in proto1 because it conflicts with
       * a local variable named "b" in one of the generated methods.  Doh.
       * This file needs to compile in proto1 to test backwards-compatibility.
       * </pre>
       *
       * <code>optional int32 bb = 1;</code>
       * @param value The bb to set.
       * @return This builder for chaining.
       */
      public Builder setBb(int value) {
        bitField0_ |= 0x00000001;
        bb_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * The field name "b" fails to compile in proto1 because it conflicts with
       * a local variable named "b" in one of the generated methods.  Doh.
       * This file needs to compile in proto1 to test backwards-compatibility.
       * </pre>
       *
       * <code>optional int32 bb = 1;</code>
       * @return This builder for chaining.
       */
      public Builder clearBb() {
        bitField0_ = (bitField0_ & ~0x00000001);
        bb_ = 0;
        onChanged();
        return this;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:protobuf_unittest.TestProto3Optional.NestedMessage)
    }

    // @@protoc_insertion_point(class_scope:protobuf_unittest.TestProto3Optional.NestedMessage)
    private static final com.google.protobuf.testing.proto.TestProto3Optional.NestedMessage DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new com.google.protobuf.testing.proto.TestProto3Optional.NestedMessage();
    }

    public static com.google.protobuf.testing.proto.TestProto3Optional.NestedMessage getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<NestedMessage>
        PARSER = new com.google.protobuf.AbstractParser<NestedMessage>() {
      @java.lang.Override
      public NestedMessage parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new NestedMessage(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<NestedMessage> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<NestedMessage> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.testing.proto.TestProto3Optional.NestedMessage getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  private int bitField0_;
  public static final int OPTIONAL_INT32_FIELD_NUMBER = 1;
  private int optionalInt32_;
  /**
   * <pre>
   * Singular
   * </pre>
   *
   * <code>optional int32 optional_int32 = 1;</code>
   * @return Whether the optionalInt32 field is set.
   */
  @java.lang.Override
  public boolean hasOptionalInt32() {
    return ((bitField0_ & 0x00000001) != 0);
  }
  /**
   * <pre>
   * Singular
   * </pre>
   *
   * <code>optional int32 optional_int32 = 1;</code>
   * @return The optionalInt32.
   */
  @java.lang.Override
  public int getOptionalInt32() {
    return optionalInt32_;
  }

  public static final int OPTIONAL_INT64_FIELD_NUMBER = 2;
  private long optionalInt64_;
  /**
   * <code>optional int64 optional_int64 = 2;</code>
   * @return Whether the optionalInt64 field is set.
   */
  @java.lang.Override
  public boolean hasOptionalInt64() {
    return ((bitField0_ & 0x00000002) != 0);
  }
  /**
   * <code>optional int64 optional_int64 = 2;</code>
   * @return The optionalInt64.
   */
  @java.lang.Override
  public long getOptionalInt64() {
    return optionalInt64_;
  }

  public static final int OPTIONAL_UINT32_FIELD_NUMBER = 3;
  private int optionalUint32_;
  /**
   * <code>optional uint32 optional_uint32 = 3;</code>
   * @return Whether the optionalUint32 field is set.
   */
  @java.lang.Override
  public boolean hasOptionalUint32() {
    return ((bitField0_ & 0x00000004) != 0);
  }
  /**
   * <code>optional uint32 optional_uint32 = 3;</code>
   * @return The optionalUint32.
   */
  @java.lang.Override
  public int getOptionalUint32() {
    return optionalUint32_;
  }

  public static final int OPTIONAL_UINT64_FIELD_NUMBER = 4;
  private long optionalUint64_;
  /**
   * <code>optional uint64 optional_uint64 = 4;</code>
   * @return Whether the optionalUint64 field is set.
   */
  @java.lang.Override
  public boolean hasOptionalUint64() {
    return ((bitField0_ & 0x00000008) != 0);
  }
  /**
   * <code>optional uint64 optional_uint64 = 4;</code>
   * @return The optionalUint64.
   */
  @java.lang.Override
  public long getOptionalUint64() {
    return optionalUint64_;
  }

  public static final int OPTIONAL_SINT32_FIELD_NUMBER = 5;
  private int optionalSint32_;
  /**
   * <code>optional sint32 optional_sint32 = 5;</code>
   * @return Whether the optionalSint32 field is set.
   */
  @java.lang.Override
  public boolean hasOptionalSint32() {
    return ((bitField0_ & 0x00000010) != 0);
  }
  /**
   * <code>optional sint32 optional_sint32 = 5;</code>
   * @return The optionalSint32.
   */
  @java.lang.Override
  public int getOptionalSint32() {
    return optionalSint32_;
  }

  public static final int OPTIONAL_SINT64_FIELD_NUMBER = 6;
  private long optionalSint64_;
  /**
   * <code>optional sint64 optional_sint64 = 6;</code>
   * @return Whether the optionalSint64 field is set.
   */
  @java.lang.Override
  public boolean hasOptionalSint64() {
    return ((bitField0_ & 0x00000020) != 0);
  }
  /**
   * <code>optional sint64 optional_sint64 = 6;</code>
   * @return The optionalSint64.
   */
  @java.lang.Override
  public long getOptionalSint64() {
    return optionalSint64_;
  }

  public static final int OPTIONAL_FIXED32_FIELD_NUMBER = 7;
  private int optionalFixed32_;
  /**
   * <code>optional fixed32 optional_fixed32 = 7;</code>
   * @return Whether the optionalFixed32 field is set.
   */
  @java.lang.Override
  public boolean hasOptionalFixed32() {
    return ((bitField0_ & 0x00000040) != 0);
  }
  /**
   * <code>optional fixed32 optional_fixed32 = 7;</code>
   * @return The optionalFixed32.
   */
  @java.lang.Override
  public int getOptionalFixed32() {
    return optionalFixed32_;
  }

  public static final int OPTIONAL_FIXED64_FIELD_NUMBER = 8;
  private long optionalFixed64_;
  /**
   * <code>optional fixed64 optional_fixed64 = 8;</code>
   * @return Whether the optionalFixed64 field is set.
   */
  @java.lang.Override
  public boolean hasOptionalFixed64() {
    return ((bitField0_ & 0x00000080) != 0);
  }
  /**
   * <code>optional fixed64 optional_fixed64 = 8;</code>
   * @return The optionalFixed64.
   */
  @java.lang.Override
  public long getOptionalFixed64() {
    return optionalFixed64_;
  }

  public static final int OPTIONAL_SFIXED32_FIELD_NUMBER = 9;
  private int optionalSfixed32_;
  /**
   * <code>optional sfixed32 optional_sfixed32 = 9;</code>
   * @return Whether the optionalSfixed32 field is set.
   */
  @java.lang.Override
  public boolean hasOptionalSfixed32() {
    return ((bitField0_ & 0x00000100) != 0);
  }
  /**
   * <code>optional sfixed32 optional_sfixed32 = 9;</code>
   * @return The optionalSfixed32.
   */
  @java.lang.Override
  public int getOptionalSfixed32() {
    return optionalSfixed32_;
  }

  public static final int OPTIONAL_SFIXED64_FIELD_NUMBER = 10;
  private long optionalSfixed64_;
  /**
   * <code>optional sfixed64 optional_sfixed64 = 10;</code>
   * @return Whether the optionalSfixed64 field is set.
   */
  @java.lang.Override
  public boolean hasOptionalSfixed64() {
    return ((bitField0_ & 0x00000200) != 0);
  }
  /**
   * <code>optional sfixed64 optional_sfixed64 = 10;</code>
   * @return The optionalSfixed64.
   */
  @java.lang.Override
  public long getOptionalSfixed64() {
    return optionalSfixed64_;
  }

  public static final int OPTIONAL_FLOAT_FIELD_NUMBER = 11;
  private float optionalFloat_;
  /**
   * <code>optional float optional_float = 11;</code>
   * @return Whether the optionalFloat field is set.
   */
  @java.lang.Override
  public boolean hasOptionalFloat() {
    return ((bitField0_ & 0x00000400) != 0);
  }
  /**
   * <code>optional float optional_float = 11;</code>
   * @return The optionalFloat.
   */
  @java.lang.Override
  public float getOptionalFloat() {
    return optionalFloat_;
  }

  public static final int OPTIONAL_DOUBLE_FIELD_NUMBER = 12;
  private double optionalDouble_;
  /**
   * <code>optional double optional_double = 12;</code>
   * @return Whether the optionalDouble field is set.
   */
  @java.lang.Override
  public boolean hasOptionalDouble() {
    return ((bitField0_ & 0x00000800) != 0);
  }
  /**
   * <code>optional double optional_double = 12;</code>
   * @return The optionalDouble.
   */
  @java.lang.Override
  public double getOptionalDouble() {
    return optionalDouble_;
  }

  public static final int OPTIONAL_BOOL_FIELD_NUMBER = 13;
  private boolean optionalBool_;
  /**
   * <code>optional bool optional_bool = 13;</code>
   * @return Whether the optionalBool field is set.
   */
  @java.lang.Override
  public boolean hasOptionalBool() {
    return ((bitField0_ & 0x00001000) != 0);
  }
  /**
   * <code>optional bool optional_bool = 13;</code>
   * @return The optionalBool.
   */
  @java.lang.Override
  public boolean getOptionalBool() {
    return optionalBool_;
  }

  public static final int OPTIONAL_STRING_FIELD_NUMBER = 14;
  private volatile java.lang.Object optionalString_;
  /**
   * <code>optional string optional_string = 14;</code>
   * @return Whether the optionalString field is set.
   */
  @java.lang.Override
  public boolean hasOptionalString() {
    return ((bitField0_ & 0x00002000) != 0);
  }
  /**
   * <code>optional string optional_string = 14;</code>
   * @return The optionalString.
   */
  @java.lang.Override
  public java.lang.String getOptionalString() {
    java.lang.Object ref = optionalString_;
    if (ref instanceof java.lang.String) {
      return (java.lang.String) ref;
    } else {
      com.google.protobuf.ByteString bs = 
          (com.google.protobuf.ByteString) ref;
      java.lang.String s = bs.toStringUtf8();
      optionalString_ = s;
      return s;
    }
  }
  /**
   * <code>optional string optional_string = 14;</code>
   * @return The bytes for optionalString.
   */
  @java.lang.Override
  public com.google.protobuf.ByteString
      getOptionalStringBytes() {
    java.lang.Object ref = optionalString_;
    if (ref instanceof java.lang.String) {
      com.google.protobuf.ByteString b = 
          com.google.protobuf.ByteString.copyFromUtf8(
              (java.lang.String) ref);
      optionalString_ = b;
      return b;
    } else {
      return (com.google.protobuf.ByteString) ref;
    }
  }

  public static final int OPTIONAL_BYTES_FIELD_NUMBER = 15;
  private com.google.protobuf.ByteString optionalBytes_;
  /**
   * <code>optional bytes optional_bytes = 15;</code>
   * @return Whether the optionalBytes field is set.
   */
  @java.lang.Override
  public boolean hasOptionalBytes() {
    return ((bitField0_ & 0x00004000) != 0);
  }
  /**
   * <code>optional bytes optional_bytes = 15;</code>
   * @return The optionalBytes.
   */
  @java.lang.Override
  public com.google.protobuf.ByteString getOptionalBytes() {
    return optionalBytes_;
  }

  public static final int OPTIONAL_CORD_FIELD_NUMBER = 16;
  private volatile java.lang.Object optionalCord_;
  /**
   * <code>optional string optional_cord = 16 [ctype = CORD];</code>
   * @return Whether the optionalCord field is set.
   */
  @java.lang.Override
  public boolean hasOptionalCord() {
    return ((bitField0_ & 0x00008000) != 0);
  }
  /**
   * <code>optional string optional_cord = 16 [ctype = CORD];</code>
   * @return The optionalCord.
   */
  @java.lang.Override
  public java.lang.String getOptionalCord() {
    java.lang.Object ref = optionalCord_;
    if (ref instanceof java.lang.String) {
      return (java.lang.String) ref;
    } else {
      com.google.protobuf.ByteString bs = 
          (com.google.protobuf.ByteString) ref;
      java.lang.String s = bs.toStringUtf8();
      optionalCord_ = s;
      return s;
    }
  }
  /**
   * <code>optional string optional_cord = 16 [ctype = CORD];</code>
   * @return The bytes for optionalCord.
   */
  @java.lang.Override
  public com.google.protobuf.ByteString
      getOptionalCordBytes() {
    java.lang.Object ref = optionalCord_;
    if (ref instanceof java.lang.String) {
      com.google.protobuf.ByteString b = 
          com.google.protobuf.ByteString.copyFromUtf8(
              (java.lang.String) ref);
      optionalCord_ = b;
      return b;
    } else {
      return (com.google.protobuf.ByteString) ref;
    }
  }

  public static final int OPTIONAL_NESTED_MESSAGE_FIELD_NUMBER = 18;
  private com.google.protobuf.testing.proto.TestProto3Optional.NestedMessage optionalNestedMessage_;
  /**
   * <code>optional .protobuf_unittest.TestProto3Optional.NestedMessage optional_nested_message = 18;</code>
   * @return Whether the optionalNestedMessage field is set.
   */
  @java.lang.Override
  public boolean hasOptionalNestedMessage() {
    return ((bitField0_ & 0x00010000) != 0);
  }
  /**
   * <code>optional .protobuf_unittest.TestProto3Optional.NestedMessage optional_nested_message = 18;</code>
   * @return The optionalNestedMessage.
   */
  @java.lang.Override
  public com.google.protobuf.testing.proto.TestProto3Optional.NestedMessage getOptionalNestedMessage() {
    return optionalNestedMessage_ == null ? com.google.protobuf.testing.proto.TestProto3Optional.NestedMessage.getDefaultInstance() : optionalNestedMessage_;
  }
  /**
   * <code>optional .protobuf_unittest.TestProto3Optional.NestedMessage optional_nested_message = 18;</code>
   */
  @java.lang.Override
  public com.google.protobuf.testing.proto.TestProto3Optional.NestedMessageOrBuilder getOptionalNestedMessageOrBuilder() {
    return optionalNestedMessage_ == null ? com.google.protobuf.testing.proto.TestProto3Optional.NestedMessage.getDefaultInstance() : optionalNestedMessage_;
  }

  public static final int LAZY_NESTED_MESSAGE_FIELD_NUMBER = 19;
  private com.google.protobuf.testing.proto.TestProto3Optional.NestedMessage lazyNestedMessage_;
  /**
   * <code>optional .protobuf_unittest.TestProto3Optional.NestedMessage lazy_nested_message = 19 [lazy = true];</code>
   * @return Whether the lazyNestedMessage field is set.
   */
  @java.lang.Override
  public boolean hasLazyNestedMessage() {
    return ((bitField0_ & 0x00020000) != 0);
  }
  /**
   * <code>optional .protobuf_unittest.TestProto3Optional.NestedMessage lazy_nested_message = 19 [lazy = true];</code>
   * @return The lazyNestedMessage.
   */
  @java.lang.Override
  public com.google.protobuf.testing.proto.TestProto3Optional.NestedMessage getLazyNestedMessage() {
    return lazyNestedMessage_ == null ? com.google.protobuf.testing.proto.TestProto3Optional.NestedMessage.getDefaultInstance() : lazyNestedMessage_;
  }
  /**
   * <code>optional .protobuf_unittest.TestProto3Optional.NestedMessage lazy_nested_message = 19 [lazy = true];</code>
   */
  @java.lang.Override
  public com.google.protobuf.testing.proto.TestProto3Optional.NestedMessageOrBuilder getLazyNestedMessageOrBuilder() {
    return lazyNestedMessage_ == null ? com.google.protobuf.testing.proto.TestProto3Optional.NestedMessage.getDefaultInstance() : lazyNestedMessage_;
  }

  public static final int OPTIONAL_NESTED_ENUM_FIELD_NUMBER = 21;
  private int optionalNestedEnum_;
  /**
   * <code>optional .protobuf_unittest.TestProto3Optional.NestedEnum optional_nested_enum = 21;</code>
   * @return Whether the optionalNestedEnum field is set.
   */
  @java.lang.Override public boolean hasOptionalNestedEnum() {
    return ((bitField0_ & 0x00040000) != 0);
  }
  /**
   * <code>optional .protobuf_unittest.TestProto3Optional.NestedEnum optional_nested_enum = 21;</code>
   * @return The enum numeric value on the wire for optionalNestedEnum.
   */
  @java.lang.Override public int getOptionalNestedEnumValue() {
    return optionalNestedEnum_;
  }
  /**
   * <code>optional .protobuf_unittest.TestProto3Optional.NestedEnum optional_nested_enum = 21;</code>
   * @return The optionalNestedEnum.
   */
  @java.lang.Override public com.google.protobuf.testing.proto.TestProto3Optional.NestedEnum getOptionalNestedEnum() {
    @SuppressWarnings("deprecation")
    com.google.protobuf.testing.proto.TestProto3Optional.NestedEnum result = com.google.protobuf.testing.proto.TestProto3Optional.NestedEnum.valueOf(optionalNestedEnum_);
    return result == null ? com.google.protobuf.testing.proto.TestProto3Optional.NestedEnum.UNRECOGNIZED : result;
  }

  public static final int SINGULAR_INT32_FIELD_NUMBER = 22;
  private int singularInt32_;
  /**
   * <pre>
   * Add some non-optional fields to verify we can mix them.
   * </pre>
   *
   * <code>int32 singular_int32 = 22;</code>
   * @return The singularInt32.
   */
  @java.lang.Override
  public int getSingularInt32() {
    return singularInt32_;
  }

  public static final int SINGULAR_INT64_FIELD_NUMBER = 23;
  private long singularInt64_;
  /**
   * <code>int64 singular_int64 = 23;</code>
   * @return The singularInt64.
   */
  @java.lang.Override
  public long getSingularInt64() {
    return singularInt64_;
  }

  private byte memoizedIsInitialized = -1;
  @java.lang.Override
  public final boolean isInitialized() {
    byte isInitialized = memoizedIsInitialized;
    if (isInitialized == 1) return true;
    if (isInitialized == 0) return false;

    memoizedIsInitialized = 1;
    return true;
  }

  @java.lang.Override
  public void writeTo(com.google.protobuf.CodedOutputStream output)
                      throws java.io.IOException {
    if (((bitField0_ & 0x00000001) != 0)) {
      output.writeInt32(1, optionalInt32_);
    }
    if (((bitField0_ & 0x00000002) != 0)) {
      output.writeInt64(2, optionalInt64_);
    }
    if (((bitField0_ & 0x00000004) != 0)) {
      output.writeUInt32(3, optionalUint32_);
    }
    if (((bitField0_ & 0x00000008) != 0)) {
      output.writeUInt64(4, optionalUint64_);
    }
    if (((bitField0_ & 0x00000010) != 0)) {
      output.writeSInt32(5, optionalSint32_);
    }
    if (((bitField0_ & 0x00000020) != 0)) {
      output.writeSInt64(6, optionalSint64_);
    }
    if (((bitField0_ & 0x00000040) != 0)) {
      output.writeFixed32(7, optionalFixed32_);
    }
    if (((bitField0_ & 0x00000080) != 0)) {
      output.writeFixed64(8, optionalFixed64_);
    }
    if (((bitField0_ & 0x00000100) != 0)) {
      output.writeSFixed32(9, optionalSfixed32_);
    }
    if (((bitField0_ & 0x00000200) != 0)) {
      output.writeSFixed64(10, optionalSfixed64_);
    }
    if (((bitField0_ & 0x00000400) != 0)) {
      output.writeFloat(11, optionalFloat_);
    }
    if (((bitField0_ & 0x00000800) != 0)) {
      output.writeDouble(12, optionalDouble_);
    }
    if (((bitField0_ & 0x00001000) != 0)) {
      output.writeBool(13, optionalBool_);
    }
    if (((bitField0_ & 0x00002000) != 0)) {
      com.google.protobuf.GeneratedMessageV3.writeString(output, 14, optionalString_);
    }
    if (((bitField0_ & 0x00004000) != 0)) {
      output.writeBytes(15, optionalBytes_);
    }
    if (((bitField0_ & 0x00008000) != 0)) {
      com.google.protobuf.GeneratedMessageV3.writeString(output, 16, optionalCord_);
    }
    if (((bitField0_ & 0x00010000) != 0)) {
      output.writeMessage(18, getOptionalNestedMessage());
    }
    if (((bitField0_ & 0x00020000) != 0)) {
      output.writeMessage(19, getLazyNestedMessage());
    }
    if (((bitField0_ & 0x00040000) != 0)) {
      output.writeEnum(21, optionalNestedEnum_);
    }
    if (singularInt32_ != 0) {
      output.writeInt32(22, singularInt32_);
    }
    if (singularInt64_ != 0L) {
      output.writeInt64(23, singularInt64_);
    }
    unknownFields.writeTo(output);
  }

  @java.lang.Override
  public int getSerializedSize() {
    int size = memoizedSize;
    if (size != -1) return size;

    size = 0;
    if (((bitField0_ & 0x00000001) != 0)) {
      size += com.google.protobuf.CodedOutputStream
        .computeInt32Size(1, optionalInt32_);
    }
    if (((bitField0_ & 0x00000002) != 0)) {
      size += com.google.protobuf.CodedOutputStream
        .computeInt64Size(2, optionalInt64_);
    }
    if (((bitField0_ & 0x00000004) != 0)) {
      size += com.google.protobuf.CodedOutputStream
        .computeUInt32Size(3, optionalUint32_);
    }
    if (((bitField0_ & 0x00000008) != 0)) {
      size += com.google.protobuf.CodedOutputStream
        .computeUInt64Size(4, optionalUint64_);
    }
    if (((bitField0_ & 0x00000010) != 0)) {
      size += com.google.protobuf.CodedOutputStream
        .computeSInt32Size(5, optionalSint32_);
    }
    if (((bitField0_ & 0x00000020) != 0)) {
      size += com.google.protobuf.CodedOutputStream
        .computeSInt64Size(6, optionalSint64_);
    }
    if (((bitField0_ & 0x00000040) != 0)) {
      size += com.google.protobuf.CodedOutputStream
        .computeFixed32Size(7, optionalFixed32_);
    }
    if (((bitField0_ & 0x00000080) != 0)) {
      size += com.google.protobuf.CodedOutputStream
        .computeFixed64Size(8, optionalFixed64_);
    }
    if (((bitField0_ & 0x00000100) != 0)) {
      size += com.google.protobuf.CodedOutputStream
        .computeSFixed32Size(9, optionalSfixed32_);
    }
    if (((bitField0_ & 0x00000200) != 0)) {
      size += com.google.protobuf.CodedOutputStream
        .computeSFixed64Size(10, optionalSfixed64_);
    }
    if (((bitField0_ & 0x00000400) != 0)) {
      size += com.google.protobuf.CodedOutputStream
        .computeFloatSize(11, optionalFloat_);
    }
    if (((bitField0_ & 0x00000800) != 0)) {
      size += com.google.protobuf.CodedOutputStream
        .computeDoubleSize(12, optionalDouble_);
    }
    if (((bitField0_ & 0x00001000) != 0)) {
      size += com.google.protobuf.CodedOutputStream
        .computeBoolSize(13, optionalBool_);
    }
    if (((bitField0_ & 0x00002000) != 0)) {
      size += com.google.protobuf.GeneratedMessageV3.computeStringSize(14, optionalString_);
    }
    if (((bitField0_ & 0x00004000) != 0)) {
      size += com.google.protobuf.CodedOutputStream
        .computeBytesSize(15, optionalBytes_);
    }
    if (((bitField0_ & 0x00008000) != 0)) {
      size += com.google.protobuf.GeneratedMessageV3.computeStringSize(16, optionalCord_);
    }
    if (((bitField0_ & 0x00010000) != 0)) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(18, getOptionalNestedMessage());
    }
    if (((bitField0_ & 0x00020000) != 0)) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(19, getLazyNestedMessage());
    }
    if (((bitField0_ & 0x00040000) != 0)) {
      size += com.google.protobuf.CodedOutputStream
        .computeEnumSize(21, optionalNestedEnum_);
    }
    if (singularInt32_ != 0) {
      size += com.google.protobuf.CodedOutputStream
        .computeInt32Size(22, singularInt32_);
    }
    if (singularInt64_ != 0L) {
      size += com.google.protobuf.CodedOutputStream
        .computeInt64Size(23, singularInt64_);
    }
    size += unknownFields.getSerializedSize();
    memoizedSize = size;
    return size;
  }

  @java.lang.Override
  public boolean equals(final java.lang.Object obj) {
    if (obj == this) {
     return true;
    }
    if (!(obj instanceof com.google.protobuf.testing.proto.TestProto3Optional)) {
      return super.equals(obj);
    }
    com.google.protobuf.testing.proto.TestProto3Optional other = (com.google.protobuf.testing.proto.TestProto3Optional) obj;

    if (hasOptionalInt32() != other.hasOptionalInt32()) return false;
    if (hasOptionalInt32()) {
      if (getOptionalInt32()
          != other.getOptionalInt32()) return false;
    }
    if (hasOptionalInt64() != other.hasOptionalInt64()) return false;
    if (hasOptionalInt64()) {
      if (getOptionalInt64()
          != other.getOptionalInt64()) return false;
    }
    if (hasOptionalUint32() != other.hasOptionalUint32()) return false;
    if (hasOptionalUint32()) {
      if (getOptionalUint32()
          != other.getOptionalUint32()) return false;
    }
    if (hasOptionalUint64() != other.hasOptionalUint64()) return false;
    if (hasOptionalUint64()) {
      if (getOptionalUint64()
          != other.getOptionalUint64()) return false;
    }
    if (hasOptionalSint32() != other.hasOptionalSint32()) return false;
    if (hasOptionalSint32()) {
      if (getOptionalSint32()
          != other.getOptionalSint32()) return false;
    }
    if (hasOptionalSint64() != other.hasOptionalSint64()) return false;
    if (hasOptionalSint64()) {
      if (getOptionalSint64()
          != other.getOptionalSint64()) return false;
    }
    if (hasOptionalFixed32() != other.hasOptionalFixed32()) return false;
    if (hasOptionalFixed32()) {
      if (getOptionalFixed32()
          != other.getOptionalFixed32()) return false;
    }
    if (hasOptionalFixed64() != other.hasOptionalFixed64()) return false;
    if (hasOptionalFixed64()) {
      if (getOptionalFixed64()
          != other.getOptionalFixed64()) return false;
    }
    if (hasOptionalSfixed32() != other.hasOptionalSfixed32()) return false;
    if (hasOptionalSfixed32()) {
      if (getOptionalSfixed32()
          != other.getOptionalSfixed32()) return false;
    }
    if (hasOptionalSfixed64() != other.hasOptionalSfixed64()) return false;
    if (hasOptionalSfixed64()) {
      if (getOptionalSfixed64()
          != other.getOptionalSfixed64()) return false;
    }
    if (hasOptionalFloat() != other.hasOptionalFloat()) return false;
    if (hasOptionalFloat()) {
      if (java.lang.Float.floatToIntBits(getOptionalFloat())
          != java.lang.Float.floatToIntBits(
              other.getOptionalFloat())) return false;
    }
    if (hasOptionalDouble() != other.hasOptionalDouble()) return false;
    if (hasOptionalDouble()) {
      if (java.lang.Double.doubleToLongBits(getOptionalDouble())
          != java.lang.Double.doubleToLongBits(
              other.getOptionalDouble())) return false;
    }
    if (hasOptionalBool() != other.hasOptionalBool()) return false;
    if (hasOptionalBool()) {
      if (getOptionalBool()
          != other.getOptionalBool()) return false;
    }
    if (hasOptionalString() != other.hasOptionalString()) return false;
    if (hasOptionalString()) {
      if (!getOptionalString()
          .equals(other.getOptionalString())) return false;
    }
    if (hasOptionalBytes() != other.hasOptionalBytes()) return false;
    if (hasOptionalBytes()) {
      if (!getOptionalBytes()
          .equals(other.getOptionalBytes())) return false;
    }
    if (hasOptionalCord() != other.hasOptionalCord()) return false;
    if (hasOptionalCord()) {
      if (!getOptionalCord()
          .equals(other.getOptionalCord())) return false;
    }
    if (hasOptionalNestedMessage() != other.hasOptionalNestedMessage()) return false;
    if (hasOptionalNestedMessage()) {
      if (!getOptionalNestedMessage()
          .equals(other.getOptionalNestedMessage())) return false;
    }
    if (hasLazyNestedMessage() != other.hasLazyNestedMessage()) return false;
    if (hasLazyNestedMessage()) {
      if (!getLazyNestedMessage()
          .equals(other.getLazyNestedMessage())) return false;
    }
    if (hasOptionalNestedEnum() != other.hasOptionalNestedEnum()) return false;
    if (hasOptionalNestedEnum()) {
      if (optionalNestedEnum_ != other.optionalNestedEnum_) return false;
    }
    if (getSingularInt32()
        != other.getSingularInt32()) return false;
    if (getSingularInt64()
        != other.getSingularInt64()) return false;
    if (!unknownFields.equals(other.unknownFields)) return false;
    return true;
  }

  @java.lang.Override
  public int hashCode() {
    if (memoizedHashCode != 0) {
      return memoizedHashCode;
    }
    int hash = 41;
    hash = (19 * hash) + getDescriptor().hashCode();
    if (hasOptionalInt32()) {
      hash = (37 * hash) + OPTIONAL_INT32_FIELD_NUMBER;
      hash = (53 * hash) + getOptionalInt32();
    }
    if (hasOptionalInt64()) {
      hash = (37 * hash) + OPTIONAL_INT64_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
          getOptionalInt64());
    }
    if (hasOptionalUint32()) {
      hash = (37 * hash) + OPTIONAL_UINT32_FIELD_NUMBER;
      hash = (53 * hash) + getOptionalUint32();
    }
    if (hasOptionalUint64()) {
      hash = (37 * hash) + OPTIONAL_UINT64_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
          getOptionalUint64());
    }
    if (hasOptionalSint32()) {
      hash = (37 * hash) + OPTIONAL_SINT32_FIELD_NUMBER;
      hash = (53 * hash) + getOptionalSint32();
    }
    if (hasOptionalSint64()) {
      hash = (37 * hash) + OPTIONAL_SINT64_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
          getOptionalSint64());
    }
    if (hasOptionalFixed32()) {
      hash = (37 * hash) + OPTIONAL_FIXED32_FIELD_NUMBER;
      hash = (53 * hash) + getOptionalFixed32();
    }
    if (hasOptionalFixed64()) {
      hash = (37 * hash) + OPTIONAL_FIXED64_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
          getOptionalFixed64());
    }
    if (hasOptionalSfixed32()) {
      hash = (37 * hash) + OPTIONAL_SFIXED32_FIELD_NUMBER;
      hash = (53 * hash) + getOptionalSfixed32();
    }
    if (hasOptionalSfixed64()) {
      hash = (37 * hash) + OPTIONAL_SFIXED64_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
          getOptionalSfixed64());
    }
    if (hasOptionalFloat()) {
      hash = (37 * hash) + OPTIONAL_FLOAT_FIELD_NUMBER;
      hash = (53 * hash) + java.lang.Float.floatToIntBits(
          getOptionalFloat());
    }
    if (hasOptionalDouble()) {
      hash = (37 * hash) + OPTIONAL_DOUBLE_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
          java.lang.Double.doubleToLongBits(getOptionalDouble()));
    }
    if (hasOptionalBool()) {
      hash = (37 * hash) + OPTIONAL_BOOL_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashBoolean(
          getOptionalBool());
    }
    if (hasOptionalString()) {
      hash = (37 * hash) + OPTIONAL_STRING_FIELD_NUMBER;
      hash = (53 * hash) + getOptionalString().hashCode();
    }
    if (hasOptionalBytes()) {
      hash = (37 * hash) + OPTIONAL_BYTES_FIELD_NUMBER;
      hash = (53 * hash) + getOptionalBytes().hashCode();
    }
    if (hasOptionalCord()) {
      hash = (37 * hash) + OPTIONAL_CORD_FIELD_NUMBER;
      hash = (53 * hash) + getOptionalCord().hashCode();
    }
    if (hasOptionalNestedMessage()) {
      hash = (37 * hash) + OPTIONAL_NESTED_MESSAGE_FIELD_NUMBER;
      hash = (53 * hash) + getOptionalNestedMessage().hashCode();
    }
    if (hasLazyNestedMessage()) {
      hash = (37 * hash) + LAZY_NESTED_MESSAGE_FIELD_NUMBER;
      hash = (53 * hash) + getLazyNestedMessage().hashCode();
    }
    if (hasOptionalNestedEnum()) {
      hash = (37 * hash) + OPTIONAL_NESTED_ENUM_FIELD_NUMBER;
      hash = (53 * hash) + optionalNestedEnum_;
    }
    hash = (37 * hash) + SINGULAR_INT32_FIELD_NUMBER;
    hash = (53 * hash) + getSingularInt32();
    hash = (37 * hash) + SINGULAR_INT64_FIELD_NUMBER;
    hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
        getSingularInt64());
    hash = (29 * hash) + unknownFields.hashCode();
    memoizedHashCode = hash;
    return hash;
  }

  public static com.google.protobuf.testing.proto.TestProto3Optional parseFrom(
      java.nio.ByteBuffer data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static com.google.protobuf.testing.proto.TestProto3Optional parseFrom(
      java.nio.ByteBuffer data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static com.google.protobuf.testing.proto.TestProto3Optional parseFrom(
      com.google.protobuf.ByteString data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static com.google.protobuf.testing.proto.TestProto3Optional parseFrom(
      com.google.protobuf.ByteString data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static com.google.protobuf.testing.proto.TestProto3Optional parseFrom(byte[] data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static com.google.protobuf.testing.proto.TestProto3Optional parseFrom(
      byte[] data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static com.google.protobuf.testing.proto.TestProto3Optional parseFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input);
  }
  public static com.google.protobuf.testing.proto.TestProto3Optional parseFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input, extensionRegistry);
  }
  public static com.google.protobuf.testing.proto.TestProto3Optional parseDelimitedFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseDelimitedWithIOException(PARSER, input);
  }
  public static com.google.protobuf.testing.proto.TestProto3Optional parseDelimitedFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
  }
  public static com.google.protobuf.testing.proto.TestProto3Optional parseFrom(
      com.google.protobuf.CodedInputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input);
  }
  public static com.google.protobuf.testing.proto.TestProto3Optional parseFrom(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input, extensionRegistry);
  }

  @java.lang.Override
  public Builder newBuilderForType() { return newBuilder(); }
  public static Builder newBuilder() {
    return DEFAULT_INSTANCE.toBuilder();
  }
  public static Builder newBuilder(com.google.protobuf.testing.proto.TestProto3Optional prototype) {
    return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
  }
  @java.lang.Override
  public Builder toBuilder() {
    return this == DEFAULT_INSTANCE
        ? new Builder() : new Builder().mergeFrom(this);
  }

  @java.lang.Override
  protected Builder newBuilderForType(
      com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
    Builder builder = new Builder(parent);
    return builder;
  }
  /**
   * Protobuf type {@code protobuf_unittest.TestProto3Optional}
   */
  public static final class Builder extends
      com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
      // @@protoc_insertion_point(builder_implements:protobuf_unittest.TestProto3Optional)
      com.google.protobuf.testing.proto.TestProto3OptionalOrBuilder {
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.google.protobuf.testing.proto.UnittestProto3Optional.internal_static_protobuf_unittest_TestProto3Optional_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.google.protobuf.testing.proto.UnittestProto3Optional.internal_static_protobuf_unittest_TestProto3Optional_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.google.protobuf.testing.proto.TestProto3Optional.class, com.google.protobuf.testing.proto.TestProto3Optional.Builder.class);
    }

    // Construct using com.google.protobuf.testing.proto.TestProto3Optional.newBuilder()
    private Builder() {
      maybeForceBuilderInitialization();
    }

    private Builder(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      super(parent);
      maybeForceBuilderInitialization();
    }
    private void maybeForceBuilderInitialization() {
      if (com.google.protobuf.GeneratedMessageV3
              .alwaysUseFieldBuilders) {
        getOptionalNestedMessageFieldBuilder();
        getLazyNestedMessageFieldBuilder();
      }
    }
    @java.lang.Override
    public Builder clear() {
      super.clear();
      optionalInt32_ = 0;
      bitField0_ = (bitField0_ & ~0x00000001);
      optionalInt64_ = 0L;
      bitField0_ = (bitField0_ & ~0x00000002);
      optionalUint32_ = 0;
      bitField0_ = (bitField0_ & ~0x00000004);
      optionalUint64_ = 0L;
      bitField0_ = (bitField0_ & ~0x00000008);
      optionalSint32_ = 0;
      bitField0_ = (bitField0_ & ~0x00000010);
      optionalSint64_ = 0L;
      bitField0_ = (bitField0_ & ~0x00000020);
      optionalFixed32_ = 0;
      bitField0_ = (bitField0_ & ~0x00000040);
      optionalFixed64_ = 0L;
      bitField0_ = (bitField0_ & ~0x00000080);
      optionalSfixed32_ = 0;
      bitField0_ = (bitField0_ & ~0x00000100);
      optionalSfixed64_ = 0L;
      bitField0_ = (bitField0_ & ~0x00000200);
      optionalFloat_ = 0F;
      bitField0_ = (bitField0_ & ~0x00000400);
      optionalDouble_ = 0D;
      bitField0_ = (bitField0_ & ~0x00000800);
      optionalBool_ = false;
      bitField0_ = (bitField0_ & ~0x00001000);
      optionalString_ = "";
      bitField0_ = (bitField0_ & ~0x00002000);
      optionalBytes_ = com.google.protobuf.ByteString.EMPTY;
      bitField0_ = (bitField0_ & ~0x00004000);
      optionalCord_ = "";
      bitField0_ = (bitField0_ & ~0x00008000);
      if (optionalNestedMessageBuilder_ == null) {
        optionalNestedMessage_ = null;
      } else {
        optionalNestedMessageBuilder_.clear();
      }
      bitField0_ = (bitField0_ & ~0x00010000);
      if (lazyNestedMessageBuilder_ == null) {
        lazyNestedMessage_ = null;
      } else {
        lazyNestedMessageBuilder_.clear();
      }
      bitField0_ = (bitField0_ & ~0x00020000);
      optionalNestedEnum_ = 0;
      bitField0_ = (bitField0_ & ~0x00040000);
      singularInt32_ = 0;

      singularInt64_ = 0L;

      return this;
    }

    @java.lang.Override
    public com.google.protobuf.Descriptors.Descriptor
        getDescriptorForType() {
      return com.google.protobuf.testing.proto.UnittestProto3Optional.internal_static_protobuf_unittest_TestProto3Optional_descriptor;
    }

    @java.lang.Override
    public com.google.protobuf.testing.proto.TestProto3Optional getDefaultInstanceForType() {
      return com.google.protobuf.testing.proto.TestProto3Optional.getDefaultInstance();
    }

    @java.lang.Override
    public com.google.protobuf.testing.proto.TestProto3Optional build() {
      com.google.protobuf.testing.proto.TestProto3Optional result = buildPartial();
      if (!result.isInitialized()) {
        throw newUninitializedMessageException(result);
      }
      return result;
    }

    @java.lang.Override
    public com.google.protobuf.testing.proto.TestProto3Optional buildPartial() {
      com.google.protobuf.testing.proto.TestProto3Optional result = new com.google.protobuf.testing.proto.TestProto3Optional(this);
      int from_bitField0_ = bitField0_;
      int to_bitField0_ = 0;
      if (((from_bitField0_ & 0x00000001) != 0)) {
        result.optionalInt32_ = optionalInt32_;
        to_bitField0_ |= 0x00000001;
      }
      if (((from_bitField0_ & 0x00000002) != 0)) {
        result.optionalInt64_ = optionalInt64_;
        to_bitField0_ |= 0x00000002;
      }
      if (((from_bitField0_ & 0x00000004) != 0)) {
        result.optionalUint32_ = optionalUint32_;
        to_bitField0_ |= 0x00000004;
      }
      if (((from_bitField0_ & 0x00000008) != 0)) {
        result.optionalUint64_ = optionalUint64_;
        to_bitField0_ |= 0x00000008;
      }
      if (((from_bitField0_ & 0x00000010) != 0)) {
        result.optionalSint32_ = optionalSint32_;
        to_bitField0_ |= 0x00000010;
      }
      if (((from_bitField0_ & 0x00000020) != 0)) {
        result.optionalSint64_ = optionalSint64_;
        to_bitField0_ |= 0x00000020;
      }
      if (((from_bitField0_ & 0x00000040) != 0)) {
        result.optionalFixed32_ = optionalFixed32_;
        to_bitField0_ |= 0x00000040;
      }
      if (((from_bitField0_ & 0x00000080) != 0)) {
        result.optionalFixed64_ = optionalFixed64_;
        to_bitField0_ |= 0x00000080;
      }
      if (((from_bitField0_ & 0x00000100) != 0)) {
        result.optionalSfixed32_ = optionalSfixed32_;
        to_bitField0_ |= 0x00000100;
      }
      if (((from_bitField0_ & 0x00000200) != 0)) {
        result.optionalSfixed64_ = optionalSfixed64_;
        to_bitField0_ |= 0x00000200;
      }
      if (((from_bitField0_ & 0x00000400) != 0)) {
        result.optionalFloat_ = optionalFloat_;
        to_bitField0_ |= 0x00000400;
      }
      if (((from_bitField0_ & 0x00000800) != 0)) {
        result.optionalDouble_ = optionalDouble_;
        to_bitField0_ |= 0x00000800;
      }
      if (((from_bitField0_ & 0x00001000) != 0)) {
        result.optionalBool_ = optionalBool_;
        to_bitField0_ |= 0x00001000;
      }
      if (((from_bitField0_ & 0x00002000) != 0)) {
        to_bitField0_ |= 0x00002000;
      }
      result.optionalString_ = optionalString_;
      if (((from_bitField0_ & 0x00004000) != 0)) {
        to_bitField0_ |= 0x00004000;
      }
      result.optionalBytes_ = optionalBytes_;
      if (((from_bitField0_ & 0x00008000) != 0)) {
        to_bitField0_ |= 0x00008000;
      }
      result.optionalCord_ = optionalCord_;
      if (((from_bitField0_ & 0x00010000) != 0)) {
        if (optionalNestedMessageBuilder_ == null) {
          result.optionalNestedMessage_ = optionalNestedMessage_;
        } else {
          result.optionalNestedMessage_ = optionalNestedMessageBuilder_.build();
        }
        to_bitField0_ |= 0x00010000;
      }
      if (((from_bitField0_ & 0x00020000) != 0)) {
        if (lazyNestedMessageBuilder_ == null) {
          result.lazyNestedMessage_ = lazyNestedMessage_;
        } else {
          result.lazyNestedMessage_ = lazyNestedMessageBuilder_.build();
        }
        to_bitField0_ |= 0x00020000;
      }
      if (((from_bitField0_ & 0x00040000) != 0)) {
        to_bitField0_ |= 0x00040000;
      }
      result.optionalNestedEnum_ = optionalNestedEnum_;
      result.singularInt32_ = singularInt32_;
      result.singularInt64_ = singularInt64_;
      result.bitField0_ = to_bitField0_;
      onBuilt();
      return result;
    }

    @java.lang.Override
    public Builder clone() {
      return super.clone();
    }
    @java.lang.Override
    public Builder setField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        java.lang.Object value) {
      return super.setField(field, value);
    }
    @java.lang.Override
    public Builder clearField(
        com.google.protobuf.Descriptors.FieldDescriptor field) {
      return super.clearField(field);
    }
    @java.lang.Override
    public Builder clearOneof(
        com.google.protobuf.Descriptors.OneofDescriptor oneof) {
      return super.clearOneof(oneof);
    }
    @java.lang.Override
    public Builder setRepeatedField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        int index, java.lang.Object value) {
      return super.setRepeatedField(field, index, value);
    }
    @java.lang.Override
    public Builder addRepeatedField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        java.lang.Object value) {
      return super.addRepeatedField(field, value);
    }
    @java.lang.Override
    public Builder mergeFrom(com.google.protobuf.Message other) {
      if (other instanceof com.google.protobuf.testing.proto.TestProto3Optional) {
        return mergeFrom((com.google.protobuf.testing.proto.TestProto3Optional)other);
      } else {
        super.mergeFrom(other);
        return this;
      }
    }

    public Builder mergeFrom(com.google.protobuf.testing.proto.TestProto3Optional other) {
      if (other == com.google.protobuf.testing.proto.TestProto3Optional.getDefaultInstance()) return this;
      if (other.hasOptionalInt32()) {
        setOptionalInt32(other.getOptionalInt32());
      }
      if (other.hasOptionalInt64()) {
        setOptionalInt64(other.getOptionalInt64());
      }
      if (other.hasOptionalUint32()) {
        setOptionalUint32(other.getOptionalUint32());
      }
      if (other.hasOptionalUint64()) {
        setOptionalUint64(other.getOptionalUint64());
      }
      if (other.hasOptionalSint32()) {
        setOptionalSint32(other.getOptionalSint32());
      }
      if (other.hasOptionalSint64()) {
        setOptionalSint64(other.getOptionalSint64());
      }
      if (other.hasOptionalFixed32()) {
        setOptionalFixed32(other.getOptionalFixed32());
      }
      if (other.hasOptionalFixed64()) {
        setOptionalFixed64(other.getOptionalFixed64());
      }
      if (other.hasOptionalSfixed32()) {
        setOptionalSfixed32(other.getOptionalSfixed32());
      }
      if (other.hasOptionalSfixed64()) {
        setOptionalSfixed64(other.getOptionalSfixed64());
      }
      if (other.hasOptionalFloat()) {
        setOptionalFloat(other.getOptionalFloat());
      }
      if (other.hasOptionalDouble()) {
        setOptionalDouble(other.getOptionalDouble());
      }
      if (other.hasOptionalBool()) {
        setOptionalBool(other.getOptionalBool());
      }
      if (other.hasOptionalString()) {
        bitField0_ |= 0x00002000;
        optionalString_ = other.optionalString_;
        onChanged();
      }
      if (other.hasOptionalBytes()) {
        setOptionalBytes(other.getOptionalBytes());
      }
      if (other.hasOptionalCord()) {
        bitField0_ |= 0x00008000;
        optionalCord_ = other.optionalCord_;
        onChanged();
      }
      if (other.hasOptionalNestedMessage()) {
        mergeOptionalNestedMessage(other.getOptionalNestedMessage());
      }
      if (other.hasLazyNestedMessage()) {
        mergeLazyNestedMessage(other.getLazyNestedMessage());
      }
      if (other.hasOptionalNestedEnum()) {
        setOptionalNestedEnum(other.getOptionalNestedEnum());
      }
      if (other.getSingularInt32() != 0) {
        setSingularInt32(other.getSingularInt32());
      }
      if (other.getSingularInt64() != 0L) {
        setSingularInt64(other.getSingularInt64());
      }
      this.mergeUnknownFields(other.unknownFields);
      onChanged();
      return this;
    }

    @java.lang.Override
    public final boolean isInitialized() {
      return true;
    }

    @java.lang.Override
    public Builder mergeFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      com.google.protobuf.testing.proto.TestProto3Optional parsedMessage = null;
      try {
        parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        parsedMessage = (com.google.protobuf.testing.proto.TestProto3Optional) e.getUnfinishedMessage();
        throw e.unwrapIOException();
      } finally {
        if (parsedMessage != null) {
          mergeFrom(parsedMessage);
        }
      }
      return this;
    }
    private int bitField0_;

    private int optionalInt32_ ;
    /**
     * <pre>
     * Singular
     * </pre>
     *
     * <code>optional int32 optional_int32 = 1;</code>
     * @return Whether the optionalInt32 field is set.
     */
    @java.lang.Override
    public boolean hasOptionalInt32() {
      return ((bitField0_ & 0x00000001) != 0);
    }
    /**
     * <pre>
     * Singular
     * </pre>
     *
     * <code>optional int32 optional_int32 = 1;</code>
     * @return The optionalInt32.
     */
    @java.lang.Override
    public int getOptionalInt32() {
      return optionalInt32_;
    }
    /**
     * <pre>
     * Singular
     * </pre>
     *
     * <code>optional int32 optional_int32 = 1;</code>
     * @param value The optionalInt32 to set.
     * @return This builder for chaining.
     */
    public Builder setOptionalInt32(int value) {
      bitField0_ |= 0x00000001;
      optionalInt32_ = value;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * Singular
     * </pre>
     *
     * <code>optional int32 optional_int32 = 1;</code>
     * @return This builder for chaining.
     */
    public Builder clearOptionalInt32() {
      bitField0_ = (bitField0_ & ~0x00000001);
      optionalInt32_ = 0;
      onChanged();
      return this;
    }

    private long optionalInt64_ ;
    /**
     * <code>optional int64 optional_int64 = 2;</code>
     * @return Whether the optionalInt64 field is set.
     */
    @java.lang.Override
    public boolean hasOptionalInt64() {
      return ((bitField0_ & 0x00000002) != 0);
    }
    /**
     * <code>optional int64 optional_int64 = 2;</code>
     * @return The optionalInt64.
     */
    @java.lang.Override
    public long getOptionalInt64() {
      return optionalInt64_;
    }
    /**
     * <code>optional int64 optional_int64 = 2;</code>
     * @param value The optionalInt64 to set.
     * @return This builder for chaining.
     */
    public Builder setOptionalInt64(long value) {
      bitField0_ |= 0x00000002;
      optionalInt64_ = value;
      onChanged();
      return this;
    }
    /**
     * <code>optional int64 optional_int64 = 2;</code>
     * @return This builder for chaining.
     */
    public Builder clearOptionalInt64() {
      bitField0_ = (bitField0_ & ~0x00000002);
      optionalInt64_ = 0L;
      onChanged();
      return this;
    }

    private int optionalUint32_ ;
    /**
     * <code>optional uint32 optional_uint32 = 3;</code>
     * @return Whether the optionalUint32 field is set.
     */
    @java.lang.Override
    public boolean hasOptionalUint32() {
      return ((bitField0_ & 0x00000004) != 0);
    }
    /**
     * <code>optional uint32 optional_uint32 = 3;</code>
     * @return The optionalUint32.
     */
    @java.lang.Override
    public int getOptionalUint32() {
      return optionalUint32_;
    }
    /**
     * <code>optional uint32 optional_uint32 = 3;</code>
     * @param value The optionalUint32 to set.
     * @return This builder for chaining.
     */
    public Builder setOptionalUint32(int value) {
      bitField0_ |= 0x00000004;
      optionalUint32_ = value;
      onChanged();
      return this;
    }
    /**
     * <code>optional uint32 optional_uint32 = 3;</code>
     * @return This builder for chaining.
     */
    public Builder clearOptionalUint32() {
      bitField0_ = (bitField0_ & ~0x00000004);
      optionalUint32_ = 0;
      onChanged();
      return this;
    }

    private long optionalUint64_ ;
    /**
     * <code>optional uint64 optional_uint64 = 4;</code>
     * @return Whether the optionalUint64 field is set.
     */
    @java.lang.Override
    public boolean hasOptionalUint64() {
      return ((bitField0_ & 0x00000008) != 0);
    }
    /**
     * <code>optional uint64 optional_uint64 = 4;</code>
     * @return The optionalUint64.
     */
    @java.lang.Override
    public long getOptionalUint64() {
      return optionalUint64_;
    }
    /**
     * <code>optional uint64 optional_uint64 = 4;</code>
     * @param value The optionalUint64 to set.
     * @return This builder for chaining.
     */
    public Builder setOptionalUint64(long value) {
      bitField0_ |= 0x00000008;
      optionalUint64_ = value;
      onChanged();
      return this;
    }
    /**
     * <code>optional uint64 optional_uint64 = 4;</code>
     * @return This builder for chaining.
     */
    public Builder clearOptionalUint64() {
      bitField0_ = (bitField0_ & ~0x00000008);
      optionalUint64_ = 0L;
      onChanged();
      return this;
    }

    private int optionalSint32_ ;
    /**
     * <code>optional sint32 optional_sint32 = 5;</code>
     * @return Whether the optionalSint32 field is set.
     */
    @java.lang.Override
    public boolean hasOptionalSint32() {
      return ((bitField0_ & 0x00000010) != 0);
    }
    /**
     * <code>optional sint32 optional_sint32 = 5;</code>
     * @return The optionalSint32.
     */
    @java.lang.Override
    public int getOptionalSint32() {
      return optionalSint32_;
    }
    /**
     * <code>optional sint32 optional_sint32 = 5;</code>
     * @param value The optionalSint32 to set.
     * @return This builder for chaining.
     */
    public Builder setOptionalSint32(int value) {
      bitField0_ |= 0x00000010;
      optionalSint32_ = value;
      onChanged();
      return this;
    }
    /**
     * <code>optional sint32 optional_sint32 = 5;</code>
     * @return This builder for chaining.
     */
    public Builder clearOptionalSint32() {
      bitField0_ = (bitField0_ & ~0x00000010);
      optionalSint32_ = 0;
      onChanged();
      return this;
    }

    private long optionalSint64_ ;
    /**
     * <code>optional sint64 optional_sint64 = 6;</code>
     * @return Whether the optionalSint64 field is set.
     */
    @java.lang.Override
    public boolean hasOptionalSint64() {
      return ((bitField0_ & 0x00000020) != 0);
    }
    /**
     * <code>optional sint64 optional_sint64 = 6;</code>
     * @return The optionalSint64.
     */
    @java.lang.Override
    public long getOptionalSint64() {
      return optionalSint64_;
    }
    /**
     * <code>optional sint64 optional_sint64 = 6;</code>
     * @param value The optionalSint64 to set.
     * @return This builder for chaining.
     */
    public Builder setOptionalSint64(long value) {
      bitField0_ |= 0x00000020;
      optionalSint64_ = value;
      onChanged();
      return this;
    }
    /**
     * <code>optional sint64 optional_sint64 = 6;</code>
     * @return This builder for chaining.
     */
    public Builder clearOptionalSint64() {
      bitField0_ = (bitField0_ & ~0x00000020);
      optionalSint64_ = 0L;
      onChanged();
      return this;
    }

    private int optionalFixed32_ ;
    /**
     * <code>optional fixed32 optional_fixed32 = 7;</code>
     * @return Whether the optionalFixed32 field is set.
     */
    @java.lang.Override
    public boolean hasOptionalFixed32() {
      return ((bitField0_ & 0x00000040) != 0);
    }
    /**
     * <code>optional fixed32 optional_fixed32 = 7;</code>
     * @return The optionalFixed32.
     */
    @java.lang.Override
    public int getOptionalFixed32() {
      return optionalFixed32_;
    }
    /**
     * <code>optional fixed32 optional_fixed32 = 7;</code>
     * @param value The optionalFixed32 to set.
     * @return This builder for chaining.
     */
    public Builder setOptionalFixed32(int value) {
      bitField0_ |= 0x00000040;
      optionalFixed32_ = value;
      onChanged();
      return this;
    }
    /**
     * <code>optional fixed32 optional_fixed32 = 7;</code>
     * @return This builder for chaining.
     */
    public Builder clearOptionalFixed32() {
      bitField0_ = (bitField0_ & ~0x00000040);
      optionalFixed32_ = 0;
      onChanged();
      return this;
    }

    private long optionalFixed64_ ;
    /**
     * <code>optional fixed64 optional_fixed64 = 8;</code>
     * @return Whether the optionalFixed64 field is set.
     */
    @java.lang.Override
    public boolean hasOptionalFixed64() {
      return ((bitField0_ & 0x00000080) != 0);
    }
    /**
     * <code>optional fixed64 optional_fixed64 = 8;</code>
     * @return The optionalFixed64.
     */
    @java.lang.Override
    public long getOptionalFixed64() {
      return optionalFixed64_;
    }
    /**
     * <code>optional fixed64 optional_fixed64 = 8;</code>
     * @param value The optionalFixed64 to set.
     * @return This builder for chaining.
     */
    public Builder setOptionalFixed64(long value) {
      bitField0_ |= 0x00000080;
      optionalFixed64_ = value;
      onChanged();
      return this;
    }
    /**
     * <code>optional fixed64 optional_fixed64 = 8;</code>
     * @return This builder for chaining.
     */
    public Builder clearOptionalFixed64() {
      bitField0_ = (bitField0_ & ~0x00000080);
      optionalFixed64_ = 0L;
      onChanged();
      return this;
    }

    private int optionalSfixed32_ ;
    /**
     * <code>optional sfixed32 optional_sfixed32 = 9;</code>
     * @return Whether the optionalSfixed32 field is set.
     */
    @java.lang.Override
    public boolean hasOptionalSfixed32() {
      return ((bitField0_ & 0x00000100) != 0);
    }
    /**
     * <code>optional sfixed32 optional_sfixed32 = 9;</code>
     * @return The optionalSfixed32.
     */
    @java.lang.Override
    public int getOptionalSfixed32() {
      return optionalSfixed32_;
    }
    /**
     * <code>optional sfixed32 optional_sfixed32 = 9;</code>
     * @param value The optionalSfixed32 to set.
     * @return This builder for chaining.
     */
    public Builder setOptionalSfixed32(int value) {
      bitField0_ |= 0x00000100;
      optionalSfixed32_ = value;
      onChanged();
      return this;
    }
    /**
     * <code>optional sfixed32 optional_sfixed32 = 9;</code>
     * @return This builder for chaining.
     */
    public Builder clearOptionalSfixed32() {
      bitField0_ = (bitField0_ & ~0x00000100);
      optionalSfixed32_ = 0;
      onChanged();
      return this;
    }

    private long optionalSfixed64_ ;
    /**
     * <code>optional sfixed64 optional_sfixed64 = 10;</code>
     * @return Whether the optionalSfixed64 field is set.
     */
    @java.lang.Override
    public boolean hasOptionalSfixed64() {
      return ((bitField0_ & 0x00000200) != 0);
    }
    /**
     * <code>optional sfixed64 optional_sfixed64 = 10;</code>
     * @return The optionalSfixed64.
     */
    @java.lang.Override
    public long getOptionalSfixed64() {
      return optionalSfixed64_;
    }
    /**
     * <code>optional sfixed64 optional_sfixed64 = 10;</code>
     * @param value The optionalSfixed64 to set.
     * @return This builder for chaining.
     */
    public Builder setOptionalSfixed64(long value) {
      bitField0_ |= 0x00000200;
      optionalSfixed64_ = value;
      onChanged();
      return this;
    }
    /**
     * <code>optional sfixed64 optional_sfixed64 = 10;</code>
     * @return This builder for chaining.
     */
    public Builder clearOptionalSfixed64() {
      bitField0_ = (bitField0_ & ~0x00000200);
      optionalSfixed64_ = 0L;
      onChanged();
      return this;
    }

    private float optionalFloat_ ;
    /**
     * <code>optional float optional_float = 11;</code>
     * @return Whether the optionalFloat field is set.
     */
    @java.lang.Override
    public boolean hasOptionalFloat() {
      return ((bitField0_ & 0x00000400) != 0);
    }
    /**
     * <code>optional float optional_float = 11;</code>
     * @return The optionalFloat.
     */
    @java.lang.Override
    public float getOptionalFloat() {
      return optionalFloat_;
    }
    /**
     * <code>optional float optional_float = 11;</code>
     * @param value The optionalFloat to set.
     * @return This builder for chaining.
     */
    public Builder setOptionalFloat(float value) {
      bitField0_ |= 0x00000400;
      optionalFloat_ = value;
      onChanged();
      return this;
    }
    /**
     * <code>optional float optional_float = 11;</code>
     * @return This builder for chaining.
     */
    public Builder clearOptionalFloat() {
      bitField0_ = (bitField0_ & ~0x00000400);
      optionalFloat_ = 0F;
      onChanged();
      return this;
    }

    private double optionalDouble_ ;
    /**
     * <code>optional double optional_double = 12;</code>
     * @return Whether the optionalDouble field is set.
     */
    @java.lang.Override
    public boolean hasOptionalDouble() {
      return ((bitField0_ & 0x00000800) != 0);
    }
    /**
     * <code>optional double optional_double = 12;</code>
     * @return The optionalDouble.
     */
    @java.lang.Override
    public double getOptionalDouble() {
      return optionalDouble_;
    }
    /**
     * <code>optional double optional_double = 12;</code>
     * @param value The optionalDouble to set.
     * @return This builder for chaining.
     */
    public Builder setOptionalDouble(double value) {
      bitField0_ |= 0x00000800;
      optionalDouble_ = value;
      onChanged();
      return this;
    }
    /**
     * <code>optional double optional_double = 12;</code>
     * @return This builder for chaining.
     */
    public Builder clearOptionalDouble() {
      bitField0_ = (bitField0_ & ~0x00000800);
      optionalDouble_ = 0D;
      onChanged();
      return this;
    }

    private boolean optionalBool_ ;
    /**
     * <code>optional bool optional_bool = 13;</code>
     * @return Whether the optionalBool field is set.
     */
    @java.lang.Override
    public boolean hasOptionalBool() {
      return ((bitField0_ & 0x00001000) != 0);
    }
    /**
     * <code>optional bool optional_bool = 13;</code>
     * @return The optionalBool.
     */
    @java.lang.Override
    public boolean getOptionalBool() {
      return optionalBool_;
    }
    /**
     * <code>optional bool optional_bool = 13;</code>
     * @param value The optionalBool to set.
     * @return This builder for chaining.
     */
    public Builder setOptionalBool(boolean value) {
      bitField0_ |= 0x00001000;
      optionalBool_ = value;
      onChanged();
      return this;
    }
    /**
     * <code>optional bool optional_bool = 13;</code>
     * @return This builder for chaining.
     */
    public Builder clearOptionalBool() {
      bitField0_ = (bitField0_ & ~0x00001000);
      optionalBool_ = false;
      onChanged();
      return this;
    }

    private java.lang.Object optionalString_ = "";
    /**
     * <code>optional string optional_string = 14;</code>
     * @return Whether the optionalString field is set.
     */
    public boolean hasOptionalString() {
      return ((bitField0_ & 0x00002000) != 0);
    }
    /**
     * <code>optional string optional_string = 14;</code>
     * @return The optionalString.
     */
    public java.lang.String getOptionalString() {
      java.lang.Object ref = optionalString_;
      if (!(ref instanceof java.lang.String)) {
        com.google.protobuf.ByteString bs =
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        optionalString_ = s;
        return s;
      } else {
        return (java.lang.String) ref;
      }
    }
    /**
     * <code>optional string optional_string = 14;</code>
     * @return The bytes for optionalString.
     */
    public com.google.protobuf.ByteString
        getOptionalStringBytes() {
      java.lang.Object ref = optionalString_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        optionalString_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }
    /**
     * <code>optional string optional_string = 14;</code>
     * @param value The optionalString to set.
     * @return This builder for chaining.
     */
    public Builder setOptionalString(
        java.lang.String value) {
      if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00002000;
      optionalString_ = value;
      onChanged();
      return this;
    }
    /**
     * <code>optional string optional_string = 14;</code>
     * @return This builder for chaining.
     */
    public Builder clearOptionalString() {
      bitField0_ = (bitField0_ & ~0x00002000);
      optionalString_ = getDefaultInstance().getOptionalString();
      onChanged();
      return this;
    }
    /**
     * <code>optional string optional_string = 14;</code>
     * @param value The bytes for optionalString to set.
     * @return This builder for chaining.
     */
    public Builder setOptionalStringBytes(
        com.google.protobuf.ByteString value) {
      if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
      bitField0_ |= 0x00002000;
      optionalString_ = value;
      onChanged();
      return this;
    }

    private com.google.protobuf.ByteString optionalBytes_ = com.google.protobuf.ByteString.EMPTY;
    /**
     * <code>optional bytes optional_bytes = 15;</code>
     * @return Whether the optionalBytes field is set.
     */
    @java.lang.Override
    public boolean hasOptionalBytes() {
      return ((bitField0_ & 0x00004000) != 0);
    }
    /**
     * <code>optional bytes optional_bytes = 15;</code>
     * @return The optionalBytes.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString getOptionalBytes() {
      return optionalBytes_;
    }
    /**
     * <code>optional bytes optional_bytes = 15;</code>
     * @param value The optionalBytes to set.
     * @return This builder for chaining.
     */
    public Builder setOptionalBytes(com.google.protobuf.ByteString value) {
      if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00004000;
      optionalBytes_ = value;
      onChanged();
      return this;
    }
    /**
     * <code>optional bytes optional_bytes = 15;</code>
     * @return This builder for chaining.
     */
    public Builder clearOptionalBytes() {
      bitField0_ = (bitField0_ & ~0x00004000);
      optionalBytes_ = getDefaultInstance().getOptionalBytes();
      onChanged();
      return this;
    }

    private java.lang.Object optionalCord_ = "";
    /**
     * <code>optional string optional_cord = 16 [ctype = CORD];</code>
     * @return Whether the optionalCord field is set.
     */
    public boolean hasOptionalCord() {
      return ((bitField0_ & 0x00008000) != 0);
    }
    /**
     * <code>optional string optional_cord = 16 [ctype = CORD];</code>
     * @return The optionalCord.
     */
    public java.lang.String getOptionalCord() {
      java.lang.Object ref = optionalCord_;
      if (!(ref instanceof java.lang.String)) {
        com.google.protobuf.ByteString bs =
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        optionalCord_ = s;
        return s;
      } else {
        return (java.lang.String) ref;
      }
    }
    /**
     * <code>optional string optional_cord = 16 [ctype = CORD];</code>
     * @return The bytes for optionalCord.
     */
    public com.google.protobuf.ByteString
        getOptionalCordBytes() {
      java.lang.Object ref = optionalCord_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        optionalCord_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }
    /**
     * <code>optional string optional_cord = 16 [ctype = CORD];</code>
     * @param value The optionalCord to set.
     * @return This builder for chaining.
     */
    public Builder setOptionalCord(
        java.lang.String value) {
      if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00008000;
      optionalCord_ = value;
      onChanged();
      return this;
    }
    /**
     * <code>optional string optional_cord = 16 [ctype = CORD];</code>
     * @return This builder for chaining.
     */
    public Builder clearOptionalCord() {
      bitField0_ = (bitField0_ & ~0x00008000);
      optionalCord_ = getDefaultInstance().getOptionalCord();
      onChanged();
      return this;
    }
    /**
     * <code>optional string optional_cord = 16 [ctype = CORD];</code>
     * @param value The bytes for optionalCord to set.
     * @return This builder for chaining.
     */
    public Builder setOptionalCordBytes(
        com.google.protobuf.ByteString value) {
      if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
      bitField0_ |= 0x00008000;
      optionalCord_ = value;
      onChanged();
      return this;
    }

    private com.google.protobuf.testing.proto.TestProto3Optional.NestedMessage optionalNestedMessage_;
    private com.google.protobuf.SingleFieldBuilderV3<
        com.google.protobuf.testing.proto.TestProto3Optional.NestedMessage, com.google.protobuf.testing.proto.TestProto3Optional.NestedMessage.Builder, com.google.protobuf.testing.proto.TestProto3Optional.NestedMessageOrBuilder> optionalNestedMessageBuilder_;
    /**
     * <code>optional .protobuf_unittest.TestProto3Optional.NestedMessage optional_nested_message = 18;</code>
     * @return Whether the optionalNestedMessage field is set.
     */
    public boolean hasOptionalNestedMessage() {
      return ((bitField0_ & 0x00010000) != 0);
    }
    /**
     * <code>optional .protobuf_unittest.TestProto3Optional.NestedMessage optional_nested_message = 18;</code>
     * @return The optionalNestedMessage.
     */
    public com.google.protobuf.testing.proto.TestProto3Optional.NestedMessage getOptionalNestedMessage() {
      if (optionalNestedMessageBuilder_ == null) {
        return optionalNestedMessage_ == null ? com.google.protobuf.testing.proto.TestProto3Optional.NestedMessage.getDefaultInstance() : optionalNestedMessage_;
      } else {
        return optionalNestedMessageBuilder_.getMessage();
      }
    }
    /**
     * <code>optional .protobuf_unittest.TestProto3Optional.NestedMessage optional_nested_message = 18;</code>
     */
    public Builder setOptionalNestedMessage(com.google.protobuf.testing.proto.TestProto3Optional.NestedMessage value) {
      if (optionalNestedMessageBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        optionalNestedMessage_ = value;
        onChanged();
      } else {
        optionalNestedMessageBuilder_.setMessage(value);
      }
      bitField0_ |= 0x00010000;
      return this;
    }
    /**
     * <code>optional .protobuf_unittest.TestProto3Optional.NestedMessage optional_nested_message = 18;</code>
     */
    public Builder setOptionalNestedMessage(
        com.google.protobuf.testing.proto.TestProto3Optional.NestedMessage.Builder builderForValue) {
      if (optionalNestedMessageBuilder_ == null) {
        optionalNestedMessage_ = builderForValue.build();
        onChanged();
      } else {
        optionalNestedMessageBuilder_.setMessage(builderForValue.build());
      }
      bitField0_ |= 0x00010000;
      return this;
    }
    /**
     * <code>optional .protobuf_unittest.TestProto3Optional.NestedMessage optional_nested_message = 18;</code>
     */
    public Builder mergeOptionalNestedMessage(com.google.protobuf.testing.proto.TestProto3Optional.NestedMessage value) {
      if (optionalNestedMessageBuilder_ == null) {
        if (((bitField0_ & 0x00010000) != 0) &&
            optionalNestedMessage_ != null &&
            optionalNestedMessage_ != com.google.protobuf.testing.proto.TestProto3Optional.NestedMessage.getDefaultInstance()) {
          optionalNestedMessage_ =
            com.google.protobuf.testing.proto.TestProto3Optional.NestedMessage.newBuilder(optionalNestedMessage_).mergeFrom(value).buildPartial();
        } else {
          optionalNestedMessage_ = value;
        }
        onChanged();
      } else {
        optionalNestedMessageBuilder_.mergeFrom(value);
      }
      bitField0_ |= 0x00010000;
      return this;
    }
    /**
     * <code>optional .protobuf_unittest.TestProto3Optional.NestedMessage optional_nested_message = 18;</code>
     */
    public Builder clearOptionalNestedMessage() {
      if (optionalNestedMessageBuilder_ == null) {
        optionalNestedMessage_ = null;
        onChanged();
      } else {
        optionalNestedMessageBuilder_.clear();
      }
      bitField0_ = (bitField0_ & ~0x00010000);
      return this;
    }
    /**
     * <code>optional .protobuf_unittest.TestProto3Optional.NestedMessage optional_nested_message = 18;</code>
     */
    public com.google.protobuf.testing.proto.TestProto3Optional.NestedMessage.Builder getOptionalNestedMessageBuilder() {
      bitField0_ |= 0x00010000;
      onChanged();
      return getOptionalNestedMessageFieldBuilder().getBuilder();
    }
    /**
     * <code>optional .protobuf_unittest.TestProto3Optional.NestedMessage optional_nested_message = 18;</code>
     */
    public com.google.protobuf.testing.proto.TestProto3Optional.NestedMessageOrBuilder getOptionalNestedMessageOrBuilder() {
      if (optionalNestedMessageBuilder_ != null) {
        return optionalNestedMessageBuilder_.getMessageOrBuilder();
      } else {
        return optionalNestedMessage_ == null ?
            com.google.protobuf.testing.proto.TestProto3Optional.NestedMessage.getDefaultInstance() : optionalNestedMessage_;
      }
    }
    /**
     * <code>optional .protobuf_unittest.TestProto3Optional.NestedMessage optional_nested_message = 18;</code>
     */
    private com.google.protobuf.SingleFieldBuilderV3<
        com.google.protobuf.testing.proto.TestProto3Optional.NestedMessage, com.google.protobuf.testing.proto.TestProto3Optional.NestedMessage.Builder, com.google.protobuf.testing.proto.TestProto3Optional.NestedMessageOrBuilder> 
        getOptionalNestedMessageFieldBuilder() {
      if (optionalNestedMessageBuilder_ == null) {
        optionalNestedMessageBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
            com.google.protobuf.testing.proto.TestProto3Optional.NestedMessage, com.google.protobuf.testing.proto.TestProto3Optional.NestedMessage.Builder, com.google.protobuf.testing.proto.TestProto3Optional.NestedMessageOrBuilder>(
                getOptionalNestedMessage(),
                getParentForChildren(),
                isClean());
        optionalNestedMessage_ = null;
      }
      return optionalNestedMessageBuilder_;
    }

    private com.google.protobuf.testing.proto.TestProto3Optional.NestedMessage lazyNestedMessage_;
    private com.google.protobuf.SingleFieldBuilderV3<
        com.google.protobuf.testing.proto.TestProto3Optional.NestedMessage, com.google.protobuf.testing.proto.TestProto3Optional.NestedMessage.Builder, com.google.protobuf.testing.proto.TestProto3Optional.NestedMessageOrBuilder> lazyNestedMessageBuilder_;
    /**
     * <code>optional .protobuf_unittest.TestProto3Optional.NestedMessage lazy_nested_message = 19 [lazy = true];</code>
     * @return Whether the lazyNestedMessage field is set.
     */
    public boolean hasLazyNestedMessage() {
      return ((bitField0_ & 0x00020000) != 0);
    }
    /**
     * <code>optional .protobuf_unittest.TestProto3Optional.NestedMessage lazy_nested_message = 19 [lazy = true];</code>
     * @return The lazyNestedMessage.
     */
    public com.google.protobuf.testing.proto.TestProto3Optional.NestedMessage getLazyNestedMessage() {
      if (lazyNestedMessageBuilder_ == null) {
        return lazyNestedMessage_ == null ? com.google.protobuf.testing.proto.TestProto3Optional.NestedMessage.getDefaultInstance() : lazyNestedMessage_;
      } else {
        return lazyNestedMessageBuilder_.getMessage();
      }
    }
    /**
     * <code>optional .protobuf_unittest.TestProto3Optional.NestedMessage lazy_nested_message = 19 [lazy = true];</code>
     */
    public Builder setLazyNestedMessage(com.google.protobuf.testing.proto.TestProto3Optional.NestedMessage value) {
      if (lazyNestedMessageBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        lazyNestedMessage_ = value;
        onChanged();
      } else {
        lazyNestedMessageBuilder_.setMessage(value);
      }
      bitField0_ |= 0x00020000;
      return this;
    }
    /**
     * <code>optional .protobuf_unittest.TestProto3Optional.NestedMessage lazy_nested_message = 19 [lazy = true];</code>
     */
    public Builder setLazyNestedMessage(
        com.google.protobuf.testing.proto.TestProto3Optional.NestedMessage.Builder builderForValue) {
      if (lazyNestedMessageBuilder_ == null) {
        lazyNestedMessage_ = builderForValue.build();
        onChanged();
      } else {
        lazyNestedMessageBuilder_.setMessage(builderForValue.build());
      }
      bitField0_ |= 0x00020000;
      return this;
    }
    /**
     * <code>optional .protobuf_unittest.TestProto3Optional.NestedMessage lazy_nested_message = 19 [lazy = true];</code>
     */
    public Builder mergeLazyNestedMessage(com.google.protobuf.testing.proto.TestProto3Optional.NestedMessage value) {
      if (lazyNestedMessageBuilder_ == null) {
        if (((bitField0_ & 0x00020000) != 0) &&
            lazyNestedMessage_ != null &&
            lazyNestedMessage_ != com.google.protobuf.testing.proto.TestProto3Optional.NestedMessage.getDefaultInstance()) {
          lazyNestedMessage_ =
            com.google.protobuf.testing.proto.TestProto3Optional.NestedMessage.newBuilder(lazyNestedMessage_).mergeFrom(value).buildPartial();
        } else {
          lazyNestedMessage_ = value;
        }
        onChanged();
      } else {
        lazyNestedMessageBuilder_.mergeFrom(value);
      }
      bitField0_ |= 0x00020000;
      return this;
    }
    /**
     * <code>optional .protobuf_unittest.TestProto3Optional.NestedMessage lazy_nested_message = 19 [lazy = true];</code>
     */
    public Builder clearLazyNestedMessage() {
      if (lazyNestedMessageBuilder_ == null) {
        lazyNestedMessage_ = null;
        onChanged();
      } else {
        lazyNestedMessageBuilder_.clear();
      }
      bitField0_ = (bitField0_ & ~0x00020000);
      return this;
    }
    /**
     * <code>optional .protobuf_unittest.TestProto3Optional.NestedMessage lazy_nested_message = 19 [lazy = true];</code>
     */
    public com.google.protobuf.testing.proto.TestProto3Optional.NestedMessage.Builder getLazyNestedMessageBuilder() {
      bitField0_ |= 0x00020000;
      onChanged();
      return getLazyNestedMessageFieldBuilder().getBuilder();
    }
    /**
     * <code>optional .protobuf_unittest.TestProto3Optional.NestedMessage lazy_nested_message = 19 [lazy = true];</code>
     */
    public com.google.protobuf.testing.proto.TestProto3Optional.NestedMessageOrBuilder getLazyNestedMessageOrBuilder() {
      if (lazyNestedMessageBuilder_ != null) {
        return lazyNestedMessageBuilder_.getMessageOrBuilder();
      } else {
        return lazyNestedMessage_ == null ?
            com.google.protobuf.testing.proto.TestProto3Optional.NestedMessage.getDefaultInstance() : lazyNestedMessage_;
      }
    }
    /**
     * <code>optional .protobuf_unittest.TestProto3Optional.NestedMessage lazy_nested_message = 19 [lazy = true];</code>
     */
    private com.google.protobuf.SingleFieldBuilderV3<
        com.google.protobuf.testing.proto.TestProto3Optional.NestedMessage, com.google.protobuf.testing.proto.TestProto3Optional.NestedMessage.Builder, com.google.protobuf.testing.proto.TestProto3Optional.NestedMessageOrBuilder> 
        getLazyNestedMessageFieldBuilder() {
      if (lazyNestedMessageBuilder_ == null) {
        lazyNestedMessageBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
            com.google.protobuf.testing.proto.TestProto3Optional.NestedMessage, com.google.protobuf.testing.proto.TestProto3Optional.NestedMessage.Builder, com.google.protobuf.testing.proto.TestProto3Optional.NestedMessageOrBuilder>(
                getLazyNestedMessage(),
                getParentForChildren(),
                isClean());
        lazyNestedMessage_ = null;
      }
      return lazyNestedMessageBuilder_;
    }

    private int optionalNestedEnum_ = 0;
    /**
     * <code>optional .protobuf_unittest.TestProto3Optional.NestedEnum optional_nested_enum = 21;</code>
     * @return Whether the optionalNestedEnum field is set.
     */
    @java.lang.Override public boolean hasOptionalNestedEnum() {
      return ((bitField0_ & 0x00040000) != 0);
    }
    /**
     * <code>optional .protobuf_unittest.TestProto3Optional.NestedEnum optional_nested_enum = 21;</code>
     * @return The enum numeric value on the wire for optionalNestedEnum.
     */
    @java.lang.Override public int getOptionalNestedEnumValue() {
      return optionalNestedEnum_;
    }
    /**
     * <code>optional .protobuf_unittest.TestProto3Optional.NestedEnum optional_nested_enum = 21;</code>
     * @param value The enum numeric value on the wire for optionalNestedEnum to set.
     * @return This builder for chaining.
     */
    public Builder setOptionalNestedEnumValue(int value) {
      bitField0_ |= 0x00040000;
      optionalNestedEnum_ = value;
      onChanged();
      return this;
    }
    /**
     * <code>optional .protobuf_unittest.TestProto3Optional.NestedEnum optional_nested_enum = 21;</code>
     * @return The optionalNestedEnum.
     */
    @java.lang.Override
    public com.google.protobuf.testing.proto.TestProto3Optional.NestedEnum getOptionalNestedEnum() {
      @SuppressWarnings("deprecation")
      com.google.protobuf.testing.proto.TestProto3Optional.NestedEnum result = com.google.protobuf.testing.proto.TestProto3Optional.NestedEnum.valueOf(optionalNestedEnum_);
      return result == null ? com.google.protobuf.testing.proto.TestProto3Optional.NestedEnum.UNRECOGNIZED : result;
    }
    /**
     * <code>optional .protobuf_unittest.TestProto3Optional.NestedEnum optional_nested_enum = 21;</code>
     * @param value The optionalNestedEnum to set.
     * @return This builder for chaining.
     */
    public Builder setOptionalNestedEnum(com.google.protobuf.testing.proto.TestProto3Optional.NestedEnum value) {
      if (value == null) {
        throw new NullPointerException();
      }
      bitField0_ |= 0x00040000;
      optionalNestedEnum_ = value.getNumber();
      onChanged();
      return this;
    }
    /**
     * <code>optional .protobuf_unittest.TestProto3Optional.NestedEnum optional_nested_enum = 21;</code>
     * @return This builder for chaining.
     */
    public Builder clearOptionalNestedEnum() {
      bitField0_ = (bitField0_ & ~0x00040000);
      optionalNestedEnum_ = 0;
      onChanged();
      return this;
    }

    private int singularInt32_ ;
    /**
     * <pre>
     * Add some non-optional fields to verify we can mix them.
     * </pre>
     *
     * <code>int32 singular_int32 = 22;</code>
     * @return The singularInt32.
     */
    @java.lang.Override
    public int getSingularInt32() {
      return singularInt32_;
    }
    /**
     * <pre>
     * Add some non-optional fields to verify we can mix them.
     * </pre>
     *
     * <code>int32 singular_int32 = 22;</code>
     * @param value The singularInt32 to set.
     * @return This builder for chaining.
     */
    public Builder setSingularInt32(int value) {
      
      singularInt32_ = value;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * Add some non-optional fields to verify we can mix them.
     * </pre>
     *
     * <code>int32 singular_int32 = 22;</code>
     * @return This builder for chaining.
     */
    public Builder clearSingularInt32() {
      
      singularInt32_ = 0;
      onChanged();
      return this;
    }

    private long singularInt64_ ;
    /**
     * <code>int64 singular_int64 = 23;</code>
     * @return The singularInt64.
     */
    @java.lang.Override
    public long getSingularInt64() {
      return singularInt64_;
    }
    /**
     * <code>int64 singular_int64 = 23;</code>
     * @param value The singularInt64 to set.
     * @return This builder for chaining.
     */
    public Builder setSingularInt64(long value) {
      
      singularInt64_ = value;
      onChanged();
      return this;
    }
    /**
     * <code>int64 singular_int64 = 23;</code>
     * @return This builder for chaining.
     */
    public Builder clearSingularInt64() {
      
      singularInt64_ = 0L;
      onChanged();
      return this;
    }
    @java.lang.Override
    public final Builder setUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return super.setUnknownFields(unknownFields);
    }

    @java.lang.Override
    public final Builder mergeUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return super.mergeUnknownFields(unknownFields);
    }


    // @@protoc_insertion_point(builder_scope:protobuf_unittest.TestProto3Optional)
  }

  // @@protoc_insertion_point(class_scope:protobuf_unittest.TestProto3Optional)
  private static final com.google.protobuf.testing.proto.TestProto3Optional DEFAULT_INSTANCE;
  static {
    DEFAULT_INSTANCE = new com.google.protobuf.testing.proto.TestProto3Optional();
  }

  public static com.google.protobuf.testing.proto.TestProto3Optional getDefaultInstance() {
    return DEFAULT_INSTANCE;
  }

  private static final com.google.protobuf.Parser<TestProto3Optional>
      PARSER = new com.google.protobuf.AbstractParser<TestProto3Optional>() {
    @java.lang.Override
    public TestProto3Optional parsePartialFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return new TestProto3Optional(input, extensionRegistry);
    }
  };

  public static com.google.protobuf.Parser<TestProto3Optional> parser() {
    return PARSER;
  }

  @java.lang.Override
  public com.google.protobuf.Parser<TestProto3Optional> getParserForType() {
    return PARSER;
  }

  @java.lang.Override
  public com.google.protobuf.testing.proto.TestProto3Optional getDefaultInstanceForType() {
    return DEFAULT_INSTANCE;
  }

}

