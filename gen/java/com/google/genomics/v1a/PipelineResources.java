// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: google/genomics/v1alpha2/pipelines.proto

package com.google.genomics.v1a;

/**
 * <pre>
 * The system resources for the pipeline run.
 * </pre>
 *
 * Protobuf type {@code google.genomics.v1alpha2.PipelineResources}
 */
public final class PipelineResources extends
    com.google.protobuf.GeneratedMessageV3 implements
    // @@protoc_insertion_point(message_implements:google.genomics.v1alpha2.PipelineResources)
    PipelineResourcesOrBuilder {
private static final long serialVersionUID = 0L;
  // Use PipelineResources.newBuilder() to construct.
  private PipelineResources(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
    super(builder);
  }
  private PipelineResources() {
    disks_ = java.util.Collections.emptyList();
    zones_ = com.google.protobuf.LazyStringArrayList.EMPTY;
  }

  @java.lang.Override
  @SuppressWarnings({"unused"})
  protected java.lang.Object newInstance(
      UnusedPrivateParameter unused) {
    return new PipelineResources();
  }

  @java.lang.Override
  public final com.google.protobuf.UnknownFieldSet
  getUnknownFields() {
    return this.unknownFields;
  }
  public static final com.google.protobuf.Descriptors.Descriptor
      getDescriptor() {
    return com.google.genomics.v1a.PipelinesProto.internal_static_google_genomics_v1alpha2_PipelineResources_descriptor;
  }

  @java.lang.Override
  protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internalGetFieldAccessorTable() {
    return com.google.genomics.v1a.PipelinesProto.internal_static_google_genomics_v1alpha2_PipelineResources_fieldAccessorTable
        .ensureFieldAccessorsInitialized(
            com.google.genomics.v1a.PipelineResources.class, com.google.genomics.v1a.PipelineResources.Builder.class);
  }

  public interface DiskOrBuilder extends
      // @@protoc_insertion_point(interface_extends:google.genomics.v1alpha2.PipelineResources.Disk)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <pre>
     * Required. The name of the disk that can be used in the pipeline
     * parameters. Must be 1 - 63 characters.
     * The name "boot" is reserved for system use.
     * </pre>
     *
     * <code>string name = 1;</code>
     * @return The name.
     */
    java.lang.String getName();
    /**
     * <pre>
     * Required. The name of the disk that can be used in the pipeline
     * parameters. Must be 1 - 63 characters.
     * The name "boot" is reserved for system use.
     * </pre>
     *
     * <code>string name = 1;</code>
     * @return The bytes for name.
     */
    com.google.protobuf.ByteString
        getNameBytes();

    /**
     * <pre>
     * Required. The type of the disk to create.
     * </pre>
     *
     * <code>.google.genomics.v1alpha2.PipelineResources.Disk.Type type = 2;</code>
     * @return The enum numeric value on the wire for type.
     */
    int getTypeValue();
    /**
     * <pre>
     * Required. The type of the disk to create.
     * </pre>
     *
     * <code>.google.genomics.v1alpha2.PipelineResources.Disk.Type type = 2;</code>
     * @return The type.
     */
    com.google.genomics.v1a.PipelineResources.Disk.Type getType();

    /**
     * <pre>
     * The size of the disk. Defaults to 500 (GB).
     * This field is not applicable for local SSD.
     * </pre>
     *
     * <code>int32 size_gb = 3;</code>
     * @return The sizeGb.
     */
    int getSizeGb();

    /**
     * <pre>
     * The full or partial URL of the persistent disk to attach. See
     * https://cloud.google.com/compute/docs/reference/latest/instances#resource
     * and
     * https://cloud.google.com/compute/docs/disks/persistent-disks#snapshots
     * for more details.
     * </pre>
     *
     * <code>string source = 4;</code>
     * @return The source.
     */
    java.lang.String getSource();
    /**
     * <pre>
     * The full or partial URL of the persistent disk to attach. See
     * https://cloud.google.com/compute/docs/reference/latest/instances#resource
     * and
     * https://cloud.google.com/compute/docs/disks/persistent-disks#snapshots
     * for more details.
     * </pre>
     *
     * <code>string source = 4;</code>
     * @return The bytes for source.
     */
    com.google.protobuf.ByteString
        getSourceBytes();

    /**
     * <pre>
     * Deprecated. Disks created by the Pipelines API will be deleted at the end
     * of the pipeline run, regardless of what this field is set to.
     * </pre>
     *
     * <code>bool auto_delete = 6;</code>
     * @return The autoDelete.
     */
    boolean getAutoDelete();

    /**
     * <pre>
     * Required at create time and cannot be overridden at run time.
     * Specifies the path in the docker container where files on
     * this disk should be located. For example, if `mountPoint`
     * is `/mnt/disk`, and the parameter has `localPath`
     * `inputs/file.txt`, the docker container can access the data at
     * `/mnt/disk/inputs/file.txt`.
     * </pre>
     *
     * <code>string mount_point = 8;</code>
     * @return The mountPoint.
     */
    java.lang.String getMountPoint();
    /**
     * <pre>
     * Required at create time and cannot be overridden at run time.
     * Specifies the path in the docker container where files on
     * this disk should be located. For example, if `mountPoint`
     * is `/mnt/disk`, and the parameter has `localPath`
     * `inputs/file.txt`, the docker container can access the data at
     * `/mnt/disk/inputs/file.txt`.
     * </pre>
     *
     * <code>string mount_point = 8;</code>
     * @return The bytes for mountPoint.
     */
    com.google.protobuf.ByteString
        getMountPointBytes();
  }
  /**
   * <pre>
   * A Google Compute Engine disk resource specification.
   * </pre>
   *
   * Protobuf type {@code google.genomics.v1alpha2.PipelineResources.Disk}
   */
  public static final class Disk extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:google.genomics.v1alpha2.PipelineResources.Disk)
      DiskOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use Disk.newBuilder() to construct.
    private Disk(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private Disk() {
      name_ = "";
      type_ = 0;
      source_ = "";
      mountPoint_ = "";
    }

    @java.lang.Override
    @SuppressWarnings({"unused"})
    protected java.lang.Object newInstance(
        UnusedPrivateParameter unused) {
      return new Disk();
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.google.genomics.v1a.PipelinesProto.internal_static_google_genomics_v1alpha2_PipelineResources_Disk_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.google.genomics.v1a.PipelinesProto.internal_static_google_genomics_v1alpha2_PipelineResources_Disk_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.google.genomics.v1a.PipelineResources.Disk.class, com.google.genomics.v1a.PipelineResources.Disk.Builder.class);
    }

    /**
     * <pre>
     * The types of disks that may be attached to VMs.
     * </pre>
     *
     * Protobuf enum {@code google.genomics.v1alpha2.PipelineResources.Disk.Type}
     */
    public enum Type
        implements com.google.protobuf.ProtocolMessageEnum {
      /**
       * <pre>
       * Default disk type. Use one of the other options below.
       * </pre>
       *
       * <code>TYPE_UNSPECIFIED = 0;</code>
       */
      TYPE_UNSPECIFIED(0),
      /**
       * <pre>
       * Specifies a Google Compute Engine persistent hard disk. See
       * https://cloud.google.com/compute/docs/disks/#pdspecs for details.
       * </pre>
       *
       * <code>PERSISTENT_HDD = 1;</code>
       */
      PERSISTENT_HDD(1),
      /**
       * <pre>
       * Specifies a Google Compute Engine persistent solid-state disk. See
       * https://cloud.google.com/compute/docs/disks/#pdspecs for details.
       * </pre>
       *
       * <code>PERSISTENT_SSD = 2;</code>
       */
      PERSISTENT_SSD(2),
      /**
       * <pre>
       * Specifies a Google Compute Engine local SSD.
       * See https://cloud.google.com/compute/docs/disks/local-ssd for details.
       * </pre>
       *
       * <code>LOCAL_SSD = 3;</code>
       */
      LOCAL_SSD(3),
      UNRECOGNIZED(-1),
      ;

      /**
       * <pre>
       * Default disk type. Use one of the other options below.
       * </pre>
       *
       * <code>TYPE_UNSPECIFIED = 0;</code>
       */
      public static final int TYPE_UNSPECIFIED_VALUE = 0;
      /**
       * <pre>
       * Specifies a Google Compute Engine persistent hard disk. See
       * https://cloud.google.com/compute/docs/disks/#pdspecs for details.
       * </pre>
       *
       * <code>PERSISTENT_HDD = 1;</code>
       */
      public static final int PERSISTENT_HDD_VALUE = 1;
      /**
       * <pre>
       * Specifies a Google Compute Engine persistent solid-state disk. See
       * https://cloud.google.com/compute/docs/disks/#pdspecs for details.
       * </pre>
       *
       * <code>PERSISTENT_SSD = 2;</code>
       */
      public static final int PERSISTENT_SSD_VALUE = 2;
      /**
       * <pre>
       * Specifies a Google Compute Engine local SSD.
       * See https://cloud.google.com/compute/docs/disks/local-ssd for details.
       * </pre>
       *
       * <code>LOCAL_SSD = 3;</code>
       */
      public static final int LOCAL_SSD_VALUE = 3;


      public final int getNumber() {
        if (this == UNRECOGNIZED) {
          throw new java.lang.IllegalArgumentException(
              "Can't get the number of an unknown enum value.");
        }
        return value;
      }

      /**
       * @param value The numeric wire value of the corresponding enum entry.
       * @return The enum associated with the given numeric wire value.
       * @deprecated Use {@link #forNumber(int)} instead.
       */
      @java.lang.Deprecated
      public static Type valueOf(int value) {
        return forNumber(value);
      }

      /**
       * @param value The numeric wire value of the corresponding enum entry.
       * @return The enum associated with the given numeric wire value.
       */
      public static Type forNumber(int value) {
        switch (value) {
          case 0: return TYPE_UNSPECIFIED;
          case 1: return PERSISTENT_HDD;
          case 2: return PERSISTENT_SSD;
          case 3: return LOCAL_SSD;
          default: return null;
        }
      }

      public static com.google.protobuf.Internal.EnumLiteMap<Type>
          internalGetValueMap() {
        return internalValueMap;
      }
      private static final com.google.protobuf.Internal.EnumLiteMap<
          Type> internalValueMap =
            new com.google.protobuf.Internal.EnumLiteMap<Type>() {
              public Type findValueByNumber(int number) {
                return Type.forNumber(number);
              }
            };

      public final com.google.protobuf.Descriptors.EnumValueDescriptor
          getValueDescriptor() {
        if (this == UNRECOGNIZED) {
          throw new java.lang.IllegalStateException(
              "Can't get the descriptor of an unrecognized enum value.");
        }
        return getDescriptor().getValues().get(ordinal());
      }
      public final com.google.protobuf.Descriptors.EnumDescriptor
          getDescriptorForType() {
        return getDescriptor();
      }
      public static final com.google.protobuf.Descriptors.EnumDescriptor
          getDescriptor() {
        return com.google.genomics.v1a.PipelineResources.Disk.getDescriptor().getEnumTypes().get(0);
      }

      private static final Type[] VALUES = values();

      public static Type valueOf(
          com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
        if (desc.getType() != getDescriptor()) {
          throw new java.lang.IllegalArgumentException(
            "EnumValueDescriptor is not for this type.");
        }
        if (desc.getIndex() == -1) {
          return UNRECOGNIZED;
        }
        return VALUES[desc.getIndex()];
      }

      private final int value;

      private Type(int value) {
        this.value = value;
      }

      // @@protoc_insertion_point(enum_scope:google.genomics.v1alpha2.PipelineResources.Disk.Type)
    }

    public static final int NAME_FIELD_NUMBER = 1;
    @SuppressWarnings("serial")
    private volatile java.lang.Object name_ = "";
    /**
     * <pre>
     * Required. The name of the disk that can be used in the pipeline
     * parameters. Must be 1 - 63 characters.
     * The name "boot" is reserved for system use.
     * </pre>
     *
     * <code>string name = 1;</code>
     * @return The name.
     */
    @java.lang.Override
    public java.lang.String getName() {
      java.lang.Object ref = name_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        name_ = s;
        return s;
      }
    }
    /**
     * <pre>
     * Required. The name of the disk that can be used in the pipeline
     * parameters. Must be 1 - 63 characters.
     * The name "boot" is reserved for system use.
     * </pre>
     *
     * <code>string name = 1;</code>
     * @return The bytes for name.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString
        getNameBytes() {
      java.lang.Object ref = name_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        name_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int TYPE_FIELD_NUMBER = 2;
    private int type_ = 0;
    /**
     * <pre>
     * Required. The type of the disk to create.
     * </pre>
     *
     * <code>.google.genomics.v1alpha2.PipelineResources.Disk.Type type = 2;</code>
     * @return The enum numeric value on the wire for type.
     */
    @java.lang.Override public int getTypeValue() {
      return type_;
    }
    /**
     * <pre>
     * Required. The type of the disk to create.
     * </pre>
     *
     * <code>.google.genomics.v1alpha2.PipelineResources.Disk.Type type = 2;</code>
     * @return The type.
     */
    @java.lang.Override public com.google.genomics.v1a.PipelineResources.Disk.Type getType() {
      com.google.genomics.v1a.PipelineResources.Disk.Type result = com.google.genomics.v1a.PipelineResources.Disk.Type.forNumber(type_);
      return result == null ? com.google.genomics.v1a.PipelineResources.Disk.Type.UNRECOGNIZED : result;
    }

    public static final int SIZE_GB_FIELD_NUMBER = 3;
    private int sizeGb_ = 0;
    /**
     * <pre>
     * The size of the disk. Defaults to 500 (GB).
     * This field is not applicable for local SSD.
     * </pre>
     *
     * <code>int32 size_gb = 3;</code>
     * @return The sizeGb.
     */
    @java.lang.Override
    public int getSizeGb() {
      return sizeGb_;
    }

    public static final int SOURCE_FIELD_NUMBER = 4;
    @SuppressWarnings("serial")
    private volatile java.lang.Object source_ = "";
    /**
     * <pre>
     * The full or partial URL of the persistent disk to attach. See
     * https://cloud.google.com/compute/docs/reference/latest/instances#resource
     * and
     * https://cloud.google.com/compute/docs/disks/persistent-disks#snapshots
     * for more details.
     * </pre>
     *
     * <code>string source = 4;</code>
     * @return The source.
     */
    @java.lang.Override
    public java.lang.String getSource() {
      java.lang.Object ref = source_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        source_ = s;
        return s;
      }
    }
    /**
     * <pre>
     * The full or partial URL of the persistent disk to attach. See
     * https://cloud.google.com/compute/docs/reference/latest/instances#resource
     * and
     * https://cloud.google.com/compute/docs/disks/persistent-disks#snapshots
     * for more details.
     * </pre>
     *
     * <code>string source = 4;</code>
     * @return The bytes for source.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString
        getSourceBytes() {
      java.lang.Object ref = source_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        source_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int AUTO_DELETE_FIELD_NUMBER = 6;
    private boolean autoDelete_ = false;
    /**
     * <pre>
     * Deprecated. Disks created by the Pipelines API will be deleted at the end
     * of the pipeline run, regardless of what this field is set to.
     * </pre>
     *
     * <code>bool auto_delete = 6;</code>
     * @return The autoDelete.
     */
    @java.lang.Override
    public boolean getAutoDelete() {
      return autoDelete_;
    }

    public static final int MOUNT_POINT_FIELD_NUMBER = 8;
    @SuppressWarnings("serial")
    private volatile java.lang.Object mountPoint_ = "";
    /**
     * <pre>
     * Required at create time and cannot be overridden at run time.
     * Specifies the path in the docker container where files on
     * this disk should be located. For example, if `mountPoint`
     * is `/mnt/disk`, and the parameter has `localPath`
     * `inputs/file.txt`, the docker container can access the data at
     * `/mnt/disk/inputs/file.txt`.
     * </pre>
     *
     * <code>string mount_point = 8;</code>
     * @return The mountPoint.
     */
    @java.lang.Override
    public java.lang.String getMountPoint() {
      java.lang.Object ref = mountPoint_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        mountPoint_ = s;
        return s;
      }
    }
    /**
     * <pre>
     * Required at create time and cannot be overridden at run time.
     * Specifies the path in the docker container where files on
     * this disk should be located. For example, if `mountPoint`
     * is `/mnt/disk`, and the parameter has `localPath`
     * `inputs/file.txt`, the docker container can access the data at
     * `/mnt/disk/inputs/file.txt`.
     * </pre>
     *
     * <code>string mount_point = 8;</code>
     * @return The bytes for mountPoint.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString
        getMountPointBytes() {
      java.lang.Object ref = mountPoint_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        mountPoint_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(name_)) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 1, name_);
      }
      if (type_ != com.google.genomics.v1a.PipelineResources.Disk.Type.TYPE_UNSPECIFIED.getNumber()) {
        output.writeEnum(2, type_);
      }
      if (sizeGb_ != 0) {
        output.writeInt32(3, sizeGb_);
      }
      if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(source_)) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 4, source_);
      }
      if (autoDelete_ != false) {
        output.writeBool(6, autoDelete_);
      }
      if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(mountPoint_)) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 8, mountPoint_);
      }
      getUnknownFields().writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(name_)) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(1, name_);
      }
      if (type_ != com.google.genomics.v1a.PipelineResources.Disk.Type.TYPE_UNSPECIFIED.getNumber()) {
        size += com.google.protobuf.CodedOutputStream
          .computeEnumSize(2, type_);
      }
      if (sizeGb_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(3, sizeGb_);
      }
      if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(source_)) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(4, source_);
      }
      if (autoDelete_ != false) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(6, autoDelete_);
      }
      if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(mountPoint_)) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(8, mountPoint_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof com.google.genomics.v1a.PipelineResources.Disk)) {
        return super.equals(obj);
      }
      com.google.genomics.v1a.PipelineResources.Disk other = (com.google.genomics.v1a.PipelineResources.Disk) obj;

      if (!getName()
          .equals(other.getName())) return false;
      if (type_ != other.type_) return false;
      if (getSizeGb()
          != other.getSizeGb()) return false;
      if (!getSource()
          .equals(other.getSource())) return false;
      if (getAutoDelete()
          != other.getAutoDelete()) return false;
      if (!getMountPoint()
          .equals(other.getMountPoint())) return false;
      if (!getUnknownFields().equals(other.getUnknownFields())) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      hash = (37 * hash) + NAME_FIELD_NUMBER;
      hash = (53 * hash) + getName().hashCode();
      hash = (37 * hash) + TYPE_FIELD_NUMBER;
      hash = (53 * hash) + type_;
      hash = (37 * hash) + SIZE_GB_FIELD_NUMBER;
      hash = (53 * hash) + getSizeGb();
      hash = (37 * hash) + SOURCE_FIELD_NUMBER;
      hash = (53 * hash) + getSource().hashCode();
      hash = (37 * hash) + AUTO_DELETE_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashBoolean(
          getAutoDelete());
      hash = (37 * hash) + MOUNT_POINT_FIELD_NUMBER;
      hash = (53 * hash) + getMountPoint().hashCode();
      hash = (29 * hash) + getUnknownFields().hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static com.google.genomics.v1a.PipelineResources.Disk parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.google.genomics.v1a.PipelineResources.Disk parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.google.genomics.v1a.PipelineResources.Disk parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.google.genomics.v1a.PipelineResources.Disk parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.google.genomics.v1a.PipelineResources.Disk parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.google.genomics.v1a.PipelineResources.Disk parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.google.genomics.v1a.PipelineResources.Disk parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static com.google.genomics.v1a.PipelineResources.Disk parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static com.google.genomics.v1a.PipelineResources.Disk parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static com.google.genomics.v1a.PipelineResources.Disk parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static com.google.genomics.v1a.PipelineResources.Disk parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static com.google.genomics.v1a.PipelineResources.Disk parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(com.google.genomics.v1a.PipelineResources.Disk prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * <pre>
     * A Google Compute Engine disk resource specification.
     * </pre>
     *
     * Protobuf type {@code google.genomics.v1alpha2.PipelineResources.Disk}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:google.genomics.v1alpha2.PipelineResources.Disk)
        com.google.genomics.v1a.PipelineResources.DiskOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return com.google.genomics.v1a.PipelinesProto.internal_static_google_genomics_v1alpha2_PipelineResources_Disk_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return com.google.genomics.v1a.PipelinesProto.internal_static_google_genomics_v1alpha2_PipelineResources_Disk_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                com.google.genomics.v1a.PipelineResources.Disk.class, com.google.genomics.v1a.PipelineResources.Disk.Builder.class);
      }

      // Construct using com.google.genomics.v1a.PipelineResources.Disk.newBuilder()
      private Builder() {

      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);

      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        bitField0_ = 0;
        name_ = "";
        type_ = 0;
        sizeGb_ = 0;
        source_ = "";
        autoDelete_ = false;
        mountPoint_ = "";
        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.google.genomics.v1a.PipelinesProto.internal_static_google_genomics_v1alpha2_PipelineResources_Disk_descriptor;
      }

      @java.lang.Override
      public com.google.genomics.v1a.PipelineResources.Disk getDefaultInstanceForType() {
        return com.google.genomics.v1a.PipelineResources.Disk.getDefaultInstance();
      }

      @java.lang.Override
      public com.google.genomics.v1a.PipelineResources.Disk build() {
        com.google.genomics.v1a.PipelineResources.Disk result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public com.google.genomics.v1a.PipelineResources.Disk buildPartial() {
        com.google.genomics.v1a.PipelineResources.Disk result = new com.google.genomics.v1a.PipelineResources.Disk(this);
        if (bitField0_ != 0) { buildPartial0(result); }
        onBuilt();
        return result;
      }

      private void buildPartial0(com.google.genomics.v1a.PipelineResources.Disk result) {
        int from_bitField0_ = bitField0_;
        if (((from_bitField0_ & 0x00000001) != 0)) {
          result.name_ = name_;
        }
        if (((from_bitField0_ & 0x00000002) != 0)) {
          result.type_ = type_;
        }
        if (((from_bitField0_ & 0x00000004) != 0)) {
          result.sizeGb_ = sizeGb_;
        }
        if (((from_bitField0_ & 0x00000008) != 0)) {
          result.source_ = source_;
        }
        if (((from_bitField0_ & 0x00000010) != 0)) {
          result.autoDelete_ = autoDelete_;
        }
        if (((from_bitField0_ & 0x00000020) != 0)) {
          result.mountPoint_ = mountPoint_;
        }
      }

      @java.lang.Override
      public Builder clone() {
        return super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.google.genomics.v1a.PipelineResources.Disk) {
          return mergeFrom((com.google.genomics.v1a.PipelineResources.Disk)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(com.google.genomics.v1a.PipelineResources.Disk other) {
        if (other == com.google.genomics.v1a.PipelineResources.Disk.getDefaultInstance()) return this;
        if (!other.getName().isEmpty()) {
          name_ = other.name_;
          bitField0_ |= 0x00000001;
          onChanged();
        }
        if (other.type_ != 0) {
          setTypeValue(other.getTypeValue());
        }
        if (other.getSizeGb() != 0) {
          setSizeGb(other.getSizeGb());
        }
        if (!other.getSource().isEmpty()) {
          source_ = other.source_;
          bitField0_ |= 0x00000008;
          onChanged();
        }
        if (other.getAutoDelete() != false) {
          setAutoDelete(other.getAutoDelete());
        }
        if (!other.getMountPoint().isEmpty()) {
          mountPoint_ = other.mountPoint_;
          bitField0_ |= 0x00000020;
          onChanged();
        }
        this.mergeUnknownFields(other.getUnknownFields());
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        if (extensionRegistry == null) {
          throw new java.lang.NullPointerException();
        }
        try {
          boolean done = false;
          while (!done) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                done = true;
                break;
              case 10: {
                name_ = input.readStringRequireUtf8();
                bitField0_ |= 0x00000001;
                break;
              } // case 10
              case 16: {
                type_ = input.readEnum();
                bitField0_ |= 0x00000002;
                break;
              } // case 16
              case 24: {
                sizeGb_ = input.readInt32();
                bitField0_ |= 0x00000004;
                break;
              } // case 24
              case 34: {
                source_ = input.readStringRequireUtf8();
                bitField0_ |= 0x00000008;
                break;
              } // case 34
              case 48: {
                autoDelete_ = input.readBool();
                bitField0_ |= 0x00000010;
                break;
              } // case 48
              case 66: {
                mountPoint_ = input.readStringRequireUtf8();
                bitField0_ |= 0x00000020;
                break;
              } // case 66
              default: {
                if (!super.parseUnknownField(input, extensionRegistry, tag)) {
                  done = true; // was an endgroup tag
                }
                break;
              } // default:
            } // switch (tag)
          } // while (!done)
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.unwrapIOException();
        } finally {
          onChanged();
        } // finally
        return this;
      }
      private int bitField0_;

      private java.lang.Object name_ = "";
      /**
       * <pre>
       * Required. The name of the disk that can be used in the pipeline
       * parameters. Must be 1 - 63 characters.
       * The name "boot" is reserved for system use.
       * </pre>
       *
       * <code>string name = 1;</code>
       * @return The name.
       */
      public java.lang.String getName() {
        java.lang.Object ref = name_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          name_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <pre>
       * Required. The name of the disk that can be used in the pipeline
       * parameters. Must be 1 - 63 characters.
       * The name "boot" is reserved for system use.
       * </pre>
       *
       * <code>string name = 1;</code>
       * @return The bytes for name.
       */
      public com.google.protobuf.ByteString
          getNameBytes() {
        java.lang.Object ref = name_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          name_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       * Required. The name of the disk that can be used in the pipeline
       * parameters. Must be 1 - 63 characters.
       * The name "boot" is reserved for system use.
       * </pre>
       *
       * <code>string name = 1;</code>
       * @param value The name to set.
       * @return This builder for chaining.
       */
      public Builder setName(
          java.lang.String value) {
        if (value == null) { throw new NullPointerException(); }
        name_ = value;
        bitField0_ |= 0x00000001;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Required. The name of the disk that can be used in the pipeline
       * parameters. Must be 1 - 63 characters.
       * The name "boot" is reserved for system use.
       * </pre>
       *
       * <code>string name = 1;</code>
       * @return This builder for chaining.
       */
      public Builder clearName() {
        name_ = getDefaultInstance().getName();
        bitField0_ = (bitField0_ & ~0x00000001);
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Required. The name of the disk that can be used in the pipeline
       * parameters. Must be 1 - 63 characters.
       * The name "boot" is reserved for system use.
       * </pre>
       *
       * <code>string name = 1;</code>
       * @param value The bytes for name to set.
       * @return This builder for chaining.
       */
      public Builder setNameBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) { throw new NullPointerException(); }
        checkByteStringIsUtf8(value);
        name_ = value;
        bitField0_ |= 0x00000001;
        onChanged();
        return this;
      }

      private int type_ = 0;
      /**
       * <pre>
       * Required. The type of the disk to create.
       * </pre>
       *
       * <code>.google.genomics.v1alpha2.PipelineResources.Disk.Type type = 2;</code>
       * @return The enum numeric value on the wire for type.
       */
      @java.lang.Override public int getTypeValue() {
        return type_;
      }
      /**
       * <pre>
       * Required. The type of the disk to create.
       * </pre>
       *
       * <code>.google.genomics.v1alpha2.PipelineResources.Disk.Type type = 2;</code>
       * @param value The enum numeric value on the wire for type to set.
       * @return This builder for chaining.
       */
      public Builder setTypeValue(int value) {
        type_ = value;
        bitField0_ |= 0x00000002;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Required. The type of the disk to create.
       * </pre>
       *
       * <code>.google.genomics.v1alpha2.PipelineResources.Disk.Type type = 2;</code>
       * @return The type.
       */
      @java.lang.Override
      public com.google.genomics.v1a.PipelineResources.Disk.Type getType() {
        com.google.genomics.v1a.PipelineResources.Disk.Type result = com.google.genomics.v1a.PipelineResources.Disk.Type.forNumber(type_);
        return result == null ? com.google.genomics.v1a.PipelineResources.Disk.Type.UNRECOGNIZED : result;
      }
      /**
       * <pre>
       * Required. The type of the disk to create.
       * </pre>
       *
       * <code>.google.genomics.v1alpha2.PipelineResources.Disk.Type type = 2;</code>
       * @param value The type to set.
       * @return This builder for chaining.
       */
      public Builder setType(com.google.genomics.v1a.PipelineResources.Disk.Type value) {
        if (value == null) {
          throw new NullPointerException();
        }
        bitField0_ |= 0x00000002;
        type_ = value.getNumber();
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Required. The type of the disk to create.
       * </pre>
       *
       * <code>.google.genomics.v1alpha2.PipelineResources.Disk.Type type = 2;</code>
       * @return This builder for chaining.
       */
      public Builder clearType() {
        bitField0_ = (bitField0_ & ~0x00000002);
        type_ = 0;
        onChanged();
        return this;
      }

      private int sizeGb_ ;
      /**
       * <pre>
       * The size of the disk. Defaults to 500 (GB).
       * This field is not applicable for local SSD.
       * </pre>
       *
       * <code>int32 size_gb = 3;</code>
       * @return The sizeGb.
       */
      @java.lang.Override
      public int getSizeGb() {
        return sizeGb_;
      }
      /**
       * <pre>
       * The size of the disk. Defaults to 500 (GB).
       * This field is not applicable for local SSD.
       * </pre>
       *
       * <code>int32 size_gb = 3;</code>
       * @param value The sizeGb to set.
       * @return This builder for chaining.
       */
      public Builder setSizeGb(int value) {
        
        sizeGb_ = value;
        bitField0_ |= 0x00000004;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * The size of the disk. Defaults to 500 (GB).
       * This field is not applicable for local SSD.
       * </pre>
       *
       * <code>int32 size_gb = 3;</code>
       * @return This builder for chaining.
       */
      public Builder clearSizeGb() {
        bitField0_ = (bitField0_ & ~0x00000004);
        sizeGb_ = 0;
        onChanged();
        return this;
      }

      private java.lang.Object source_ = "";
      /**
       * <pre>
       * The full or partial URL of the persistent disk to attach. See
       * https://cloud.google.com/compute/docs/reference/latest/instances#resource
       * and
       * https://cloud.google.com/compute/docs/disks/persistent-disks#snapshots
       * for more details.
       * </pre>
       *
       * <code>string source = 4;</code>
       * @return The source.
       */
      public java.lang.String getSource() {
        java.lang.Object ref = source_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          source_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <pre>
       * The full or partial URL of the persistent disk to attach. See
       * https://cloud.google.com/compute/docs/reference/latest/instances#resource
       * and
       * https://cloud.google.com/compute/docs/disks/persistent-disks#snapshots
       * for more details.
       * </pre>
       *
       * <code>string source = 4;</code>
       * @return The bytes for source.
       */
      public com.google.protobuf.ByteString
          getSourceBytes() {
        java.lang.Object ref = source_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          source_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       * The full or partial URL of the persistent disk to attach. See
       * https://cloud.google.com/compute/docs/reference/latest/instances#resource
       * and
       * https://cloud.google.com/compute/docs/disks/persistent-disks#snapshots
       * for more details.
       * </pre>
       *
       * <code>string source = 4;</code>
       * @param value The source to set.
       * @return This builder for chaining.
       */
      public Builder setSource(
          java.lang.String value) {
        if (value == null) { throw new NullPointerException(); }
        source_ = value;
        bitField0_ |= 0x00000008;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * The full or partial URL of the persistent disk to attach. See
       * https://cloud.google.com/compute/docs/reference/latest/instances#resource
       * and
       * https://cloud.google.com/compute/docs/disks/persistent-disks#snapshots
       * for more details.
       * </pre>
       *
       * <code>string source = 4;</code>
       * @return This builder for chaining.
       */
      public Builder clearSource() {
        source_ = getDefaultInstance().getSource();
        bitField0_ = (bitField0_ & ~0x00000008);
        onChanged();
        return this;
      }
      /**
       * <pre>
       * The full or partial URL of the persistent disk to attach. See
       * https://cloud.google.com/compute/docs/reference/latest/instances#resource
       * and
       * https://cloud.google.com/compute/docs/disks/persistent-disks#snapshots
       * for more details.
       * </pre>
       *
       * <code>string source = 4;</code>
       * @param value The bytes for source to set.
       * @return This builder for chaining.
       */
      public Builder setSourceBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) { throw new NullPointerException(); }
        checkByteStringIsUtf8(value);
        source_ = value;
        bitField0_ |= 0x00000008;
        onChanged();
        return this;
      }

      private boolean autoDelete_ ;
      /**
       * <pre>
       * Deprecated. Disks created by the Pipelines API will be deleted at the end
       * of the pipeline run, regardless of what this field is set to.
       * </pre>
       *
       * <code>bool auto_delete = 6;</code>
       * @return The autoDelete.
       */
      @java.lang.Override
      public boolean getAutoDelete() {
        return autoDelete_;
      }
      /**
       * <pre>
       * Deprecated. Disks created by the Pipelines API will be deleted at the end
       * of the pipeline run, regardless of what this field is set to.
       * </pre>
       *
       * <code>bool auto_delete = 6;</code>
       * @param value The autoDelete to set.
       * @return This builder for chaining.
       */
      public Builder setAutoDelete(boolean value) {
        
        autoDelete_ = value;
        bitField0_ |= 0x00000010;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Deprecated. Disks created by the Pipelines API will be deleted at the end
       * of the pipeline run, regardless of what this field is set to.
       * </pre>
       *
       * <code>bool auto_delete = 6;</code>
       * @return This builder for chaining.
       */
      public Builder clearAutoDelete() {
        bitField0_ = (bitField0_ & ~0x00000010);
        autoDelete_ = false;
        onChanged();
        return this;
      }

      private java.lang.Object mountPoint_ = "";
      /**
       * <pre>
       * Required at create time and cannot be overridden at run time.
       * Specifies the path in the docker container where files on
       * this disk should be located. For example, if `mountPoint`
       * is `/mnt/disk`, and the parameter has `localPath`
       * `inputs/file.txt`, the docker container can access the data at
       * `/mnt/disk/inputs/file.txt`.
       * </pre>
       *
       * <code>string mount_point = 8;</code>
       * @return The mountPoint.
       */
      public java.lang.String getMountPoint() {
        java.lang.Object ref = mountPoint_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          mountPoint_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <pre>
       * Required at create time and cannot be overridden at run time.
       * Specifies the path in the docker container where files on
       * this disk should be located. For example, if `mountPoint`
       * is `/mnt/disk`, and the parameter has `localPath`
       * `inputs/file.txt`, the docker container can access the data at
       * `/mnt/disk/inputs/file.txt`.
       * </pre>
       *
       * <code>string mount_point = 8;</code>
       * @return The bytes for mountPoint.
       */
      public com.google.protobuf.ByteString
          getMountPointBytes() {
        java.lang.Object ref = mountPoint_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          mountPoint_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       * Required at create time and cannot be overridden at run time.
       * Specifies the path in the docker container where files on
       * this disk should be located. For example, if `mountPoint`
       * is `/mnt/disk`, and the parameter has `localPath`
       * `inputs/file.txt`, the docker container can access the data at
       * `/mnt/disk/inputs/file.txt`.
       * </pre>
       *
       * <code>string mount_point = 8;</code>
       * @param value The mountPoint to set.
       * @return This builder for chaining.
       */
      public Builder setMountPoint(
          java.lang.String value) {
        if (value == null) { throw new NullPointerException(); }
        mountPoint_ = value;
        bitField0_ |= 0x00000020;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Required at create time and cannot be overridden at run time.
       * Specifies the path in the docker container where files on
       * this disk should be located. For example, if `mountPoint`
       * is `/mnt/disk`, and the parameter has `localPath`
       * `inputs/file.txt`, the docker container can access the data at
       * `/mnt/disk/inputs/file.txt`.
       * </pre>
       *
       * <code>string mount_point = 8;</code>
       * @return This builder for chaining.
       */
      public Builder clearMountPoint() {
        mountPoint_ = getDefaultInstance().getMountPoint();
        bitField0_ = (bitField0_ & ~0x00000020);
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Required at create time and cannot be overridden at run time.
       * Specifies the path in the docker container where files on
       * this disk should be located. For example, if `mountPoint`
       * is `/mnt/disk`, and the parameter has `localPath`
       * `inputs/file.txt`, the docker container can access the data at
       * `/mnt/disk/inputs/file.txt`.
       * </pre>
       *
       * <code>string mount_point = 8;</code>
       * @param value The bytes for mountPoint to set.
       * @return This builder for chaining.
       */
      public Builder setMountPointBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) { throw new NullPointerException(); }
        checkByteStringIsUtf8(value);
        mountPoint_ = value;
        bitField0_ |= 0x00000020;
        onChanged();
        return this;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:google.genomics.v1alpha2.PipelineResources.Disk)
    }

    // @@protoc_insertion_point(class_scope:google.genomics.v1alpha2.PipelineResources.Disk)
    private static final com.google.genomics.v1a.PipelineResources.Disk DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new com.google.genomics.v1a.PipelineResources.Disk();
    }

    public static com.google.genomics.v1a.PipelineResources.Disk getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<Disk>
        PARSER = new com.google.protobuf.AbstractParser<Disk>() {
      @java.lang.Override
      public Disk parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        Builder builder = newBuilder();
        try {
          builder.mergeFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.setUnfinishedMessage(builder.buildPartial());
        } catch (com.google.protobuf.UninitializedMessageException e) {
          throw e.asInvalidProtocolBufferException().setUnfinishedMessage(builder.buildPartial());
        } catch (java.io.IOException e) {
          throw new com.google.protobuf.InvalidProtocolBufferException(e)
              .setUnfinishedMessage(builder.buildPartial());
        }
        return builder.buildPartial();
      }
    };

    public static com.google.protobuf.Parser<Disk> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<Disk> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.genomics.v1a.PipelineResources.Disk getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public static final int MINIMUM_CPU_CORES_FIELD_NUMBER = 1;
  private int minimumCpuCores_ = 0;
  /**
   * <pre>
   * The minimum number of cores to use. Defaults to 1.
   * </pre>
   *
   * <code>int32 minimum_cpu_cores = 1;</code>
   * @return The minimumCpuCores.
   */
  @java.lang.Override
  public int getMinimumCpuCores() {
    return minimumCpuCores_;
  }

  public static final int PREEMPTIBLE_FIELD_NUMBER = 2;
  private boolean preemptible_ = false;
  /**
   * <pre>
   * Whether to use preemptible VMs. Defaults to `false`. In order to use this,
   * must be true for both create time and run time. Cannot be true at run time
   * if false at create time.
   * </pre>
   *
   * <code>bool preemptible = 2;</code>
   * @return The preemptible.
   */
  @java.lang.Override
  public boolean getPreemptible() {
    return preemptible_;
  }

  public static final int MINIMUM_RAM_GB_FIELD_NUMBER = 3;
  private double minimumRamGb_ = 0D;
  /**
   * <pre>
   * The minimum amount of RAM to use. Defaults to 3.75 (GB)
   * </pre>
   *
   * <code>double minimum_ram_gb = 3;</code>
   * @return The minimumRamGb.
   */
  @java.lang.Override
  public double getMinimumRamGb() {
    return minimumRamGb_;
  }

  public static final int DISKS_FIELD_NUMBER = 4;
  @SuppressWarnings("serial")
  private java.util.List<com.google.genomics.v1a.PipelineResources.Disk> disks_;
  /**
   * <pre>
   * Disks to attach.
   * </pre>
   *
   * <code>repeated .google.genomics.v1alpha2.PipelineResources.Disk disks = 4;</code>
   */
  @java.lang.Override
  public java.util.List<com.google.genomics.v1a.PipelineResources.Disk> getDisksList() {
    return disks_;
  }
  /**
   * <pre>
   * Disks to attach.
   * </pre>
   *
   * <code>repeated .google.genomics.v1alpha2.PipelineResources.Disk disks = 4;</code>
   */
  @java.lang.Override
  public java.util.List<? extends com.google.genomics.v1a.PipelineResources.DiskOrBuilder> 
      getDisksOrBuilderList() {
    return disks_;
  }
  /**
   * <pre>
   * Disks to attach.
   * </pre>
   *
   * <code>repeated .google.genomics.v1alpha2.PipelineResources.Disk disks = 4;</code>
   */
  @java.lang.Override
  public int getDisksCount() {
    return disks_.size();
  }
  /**
   * <pre>
   * Disks to attach.
   * </pre>
   *
   * <code>repeated .google.genomics.v1alpha2.PipelineResources.Disk disks = 4;</code>
   */
  @java.lang.Override
  public com.google.genomics.v1a.PipelineResources.Disk getDisks(int index) {
    return disks_.get(index);
  }
  /**
   * <pre>
   * Disks to attach.
   * </pre>
   *
   * <code>repeated .google.genomics.v1alpha2.PipelineResources.Disk disks = 4;</code>
   */
  @java.lang.Override
  public com.google.genomics.v1a.PipelineResources.DiskOrBuilder getDisksOrBuilder(
      int index) {
    return disks_.get(index);
  }

  public static final int ZONES_FIELD_NUMBER = 5;
  @SuppressWarnings("serial")
  private com.google.protobuf.LazyStringList zones_;
  /**
   * <pre>
   * List of Google Compute Engine availability zones to which resource
   * creation will restricted. If empty, any zone may be chosen.
   * </pre>
   *
   * <code>repeated string zones = 5;</code>
   * @return A list containing the zones.
   */
  public com.google.protobuf.ProtocolStringList
      getZonesList() {
    return zones_;
  }
  /**
   * <pre>
   * List of Google Compute Engine availability zones to which resource
   * creation will restricted. If empty, any zone may be chosen.
   * </pre>
   *
   * <code>repeated string zones = 5;</code>
   * @return The count of zones.
   */
  public int getZonesCount() {
    return zones_.size();
  }
  /**
   * <pre>
   * List of Google Compute Engine availability zones to which resource
   * creation will restricted. If empty, any zone may be chosen.
   * </pre>
   *
   * <code>repeated string zones = 5;</code>
   * @param index The index of the element to return.
   * @return The zones at the given index.
   */
  public java.lang.String getZones(int index) {
    return zones_.get(index);
  }
  /**
   * <pre>
   * List of Google Compute Engine availability zones to which resource
   * creation will restricted. If empty, any zone may be chosen.
   * </pre>
   *
   * <code>repeated string zones = 5;</code>
   * @param index The index of the value to return.
   * @return The bytes of the zones at the given index.
   */
  public com.google.protobuf.ByteString
      getZonesBytes(int index) {
    return zones_.getByteString(index);
  }

  public static final int BOOT_DISK_SIZE_GB_FIELD_NUMBER = 6;
  private int bootDiskSizeGb_ = 0;
  /**
   * <pre>
   * The size of the boot disk. Defaults to 10 (GB).
   * </pre>
   *
   * <code>int32 boot_disk_size_gb = 6;</code>
   * @return The bootDiskSizeGb.
   */
  @java.lang.Override
  public int getBootDiskSizeGb() {
    return bootDiskSizeGb_;
  }

  public static final int NO_ADDRESS_FIELD_NUMBER = 7;
  private boolean noAddress_ = false;
  /**
   * <pre>
   * Whether to assign an external IP to the instance. This is an experimental
   * feature that may go away. Defaults to false.
   * Corresponds to `--no_address` flag for [gcloud compute instances create]
   * (https://cloud.google.com/sdk/gcloud/reference/compute/instances/create).
   * In order to use this, must be true for both create time and run time.
   * Cannot be true at run time if false at create time. If you need to ssh into
   * a private IP VM for debugging, you can ssh to a public VM and then ssh into
   * the private VM's Internal IP.  If noAddress is set, this pipeline run may
   * only load docker images from Google Container Registry and not Docker Hub.
   * ** Note: To use this option, your project must be in Google Access for
   * Private IPs Early Access Program.**
   * </pre>
   *
   * <code>bool no_address = 7;</code>
   * @return The noAddress.
   */
  @java.lang.Override
  public boolean getNoAddress() {
    return noAddress_;
  }

  private byte memoizedIsInitialized = -1;
  @java.lang.Override
  public final boolean isInitialized() {
    byte isInitialized = memoizedIsInitialized;
    if (isInitialized == 1) return true;
    if (isInitialized == 0) return false;

    memoizedIsInitialized = 1;
    return true;
  }

  @java.lang.Override
  public void writeTo(com.google.protobuf.CodedOutputStream output)
                      throws java.io.IOException {
    if (minimumCpuCores_ != 0) {
      output.writeInt32(1, minimumCpuCores_);
    }
    if (preemptible_ != false) {
      output.writeBool(2, preemptible_);
    }
    if (java.lang.Double.doubleToRawLongBits(minimumRamGb_) != 0) {
      output.writeDouble(3, minimumRamGb_);
    }
    for (int i = 0; i < disks_.size(); i++) {
      output.writeMessage(4, disks_.get(i));
    }
    for (int i = 0; i < zones_.size(); i++) {
      com.google.protobuf.GeneratedMessageV3.writeString(output, 5, zones_.getRaw(i));
    }
    if (bootDiskSizeGb_ != 0) {
      output.writeInt32(6, bootDiskSizeGb_);
    }
    if (noAddress_ != false) {
      output.writeBool(7, noAddress_);
    }
    getUnknownFields().writeTo(output);
  }

  @java.lang.Override
  public int getSerializedSize() {
    int size = memoizedSize;
    if (size != -1) return size;

    size = 0;
    if (minimumCpuCores_ != 0) {
      size += com.google.protobuf.CodedOutputStream
        .computeInt32Size(1, minimumCpuCores_);
    }
    if (preemptible_ != false) {
      size += com.google.protobuf.CodedOutputStream
        .computeBoolSize(2, preemptible_);
    }
    if (java.lang.Double.doubleToRawLongBits(minimumRamGb_) != 0) {
      size += com.google.protobuf.CodedOutputStream
        .computeDoubleSize(3, minimumRamGb_);
    }
    for (int i = 0; i < disks_.size(); i++) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(4, disks_.get(i));
    }
    {
      int dataSize = 0;
      for (int i = 0; i < zones_.size(); i++) {
        dataSize += computeStringSizeNoTag(zones_.getRaw(i));
      }
      size += dataSize;
      size += 1 * getZonesList().size();
    }
    if (bootDiskSizeGb_ != 0) {
      size += com.google.protobuf.CodedOutputStream
        .computeInt32Size(6, bootDiskSizeGb_);
    }
    if (noAddress_ != false) {
      size += com.google.protobuf.CodedOutputStream
        .computeBoolSize(7, noAddress_);
    }
    size += getUnknownFields().getSerializedSize();
    memoizedSize = size;
    return size;
  }

  @java.lang.Override
  public boolean equals(final java.lang.Object obj) {
    if (obj == this) {
     return true;
    }
    if (!(obj instanceof com.google.genomics.v1a.PipelineResources)) {
      return super.equals(obj);
    }
    com.google.genomics.v1a.PipelineResources other = (com.google.genomics.v1a.PipelineResources) obj;

    if (getMinimumCpuCores()
        != other.getMinimumCpuCores()) return false;
    if (getPreemptible()
        != other.getPreemptible()) return false;
    if (java.lang.Double.doubleToLongBits(getMinimumRamGb())
        != java.lang.Double.doubleToLongBits(
            other.getMinimumRamGb())) return false;
    if (!getDisksList()
        .equals(other.getDisksList())) return false;
    if (!getZonesList()
        .equals(other.getZonesList())) return false;
    if (getBootDiskSizeGb()
        != other.getBootDiskSizeGb()) return false;
    if (getNoAddress()
        != other.getNoAddress()) return false;
    if (!getUnknownFields().equals(other.getUnknownFields())) return false;
    return true;
  }

  @java.lang.Override
  public int hashCode() {
    if (memoizedHashCode != 0) {
      return memoizedHashCode;
    }
    int hash = 41;
    hash = (19 * hash) + getDescriptor().hashCode();
    hash = (37 * hash) + MINIMUM_CPU_CORES_FIELD_NUMBER;
    hash = (53 * hash) + getMinimumCpuCores();
    hash = (37 * hash) + PREEMPTIBLE_FIELD_NUMBER;
    hash = (53 * hash) + com.google.protobuf.Internal.hashBoolean(
        getPreemptible());
    hash = (37 * hash) + MINIMUM_RAM_GB_FIELD_NUMBER;
    hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
        java.lang.Double.doubleToLongBits(getMinimumRamGb()));
    if (getDisksCount() > 0) {
      hash = (37 * hash) + DISKS_FIELD_NUMBER;
      hash = (53 * hash) + getDisksList().hashCode();
    }
    if (getZonesCount() > 0) {
      hash = (37 * hash) + ZONES_FIELD_NUMBER;
      hash = (53 * hash) + getZonesList().hashCode();
    }
    hash = (37 * hash) + BOOT_DISK_SIZE_GB_FIELD_NUMBER;
    hash = (53 * hash) + getBootDiskSizeGb();
    hash = (37 * hash) + NO_ADDRESS_FIELD_NUMBER;
    hash = (53 * hash) + com.google.protobuf.Internal.hashBoolean(
        getNoAddress());
    hash = (29 * hash) + getUnknownFields().hashCode();
    memoizedHashCode = hash;
    return hash;
  }

  public static com.google.genomics.v1a.PipelineResources parseFrom(
      java.nio.ByteBuffer data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static com.google.genomics.v1a.PipelineResources parseFrom(
      java.nio.ByteBuffer data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static com.google.genomics.v1a.PipelineResources parseFrom(
      com.google.protobuf.ByteString data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static com.google.genomics.v1a.PipelineResources parseFrom(
      com.google.protobuf.ByteString data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static com.google.genomics.v1a.PipelineResources parseFrom(byte[] data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static com.google.genomics.v1a.PipelineResources parseFrom(
      byte[] data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static com.google.genomics.v1a.PipelineResources parseFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input);
  }
  public static com.google.genomics.v1a.PipelineResources parseFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input, extensionRegistry);
  }
  public static com.google.genomics.v1a.PipelineResources parseDelimitedFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseDelimitedWithIOException(PARSER, input);
  }
  public static com.google.genomics.v1a.PipelineResources parseDelimitedFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
  }
  public static com.google.genomics.v1a.PipelineResources parseFrom(
      com.google.protobuf.CodedInputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input);
  }
  public static com.google.genomics.v1a.PipelineResources parseFrom(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input, extensionRegistry);
  }

  @java.lang.Override
  public Builder newBuilderForType() { return newBuilder(); }
  public static Builder newBuilder() {
    return DEFAULT_INSTANCE.toBuilder();
  }
  public static Builder newBuilder(com.google.genomics.v1a.PipelineResources prototype) {
    return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
  }
  @java.lang.Override
  public Builder toBuilder() {
    return this == DEFAULT_INSTANCE
        ? new Builder() : new Builder().mergeFrom(this);
  }

  @java.lang.Override
  protected Builder newBuilderForType(
      com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
    Builder builder = new Builder(parent);
    return builder;
  }
  /**
   * <pre>
   * The system resources for the pipeline run.
   * </pre>
   *
   * Protobuf type {@code google.genomics.v1alpha2.PipelineResources}
   */
  public static final class Builder extends
      com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
      // @@protoc_insertion_point(builder_implements:google.genomics.v1alpha2.PipelineResources)
      com.google.genomics.v1a.PipelineResourcesOrBuilder {
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.google.genomics.v1a.PipelinesProto.internal_static_google_genomics_v1alpha2_PipelineResources_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.google.genomics.v1a.PipelinesProto.internal_static_google_genomics_v1alpha2_PipelineResources_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.google.genomics.v1a.PipelineResources.class, com.google.genomics.v1a.PipelineResources.Builder.class);
    }

    // Construct using com.google.genomics.v1a.PipelineResources.newBuilder()
    private Builder() {

    }

    private Builder(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      super(parent);

    }
    @java.lang.Override
    public Builder clear() {
      super.clear();
      bitField0_ = 0;
      minimumCpuCores_ = 0;
      preemptible_ = false;
      minimumRamGb_ = 0D;
      if (disksBuilder_ == null) {
        disks_ = java.util.Collections.emptyList();
      } else {
        disks_ = null;
        disksBuilder_.clear();
      }
      bitField0_ = (bitField0_ & ~0x00000008);
      zones_ = com.google.protobuf.LazyStringArrayList.EMPTY;
      bitField0_ = (bitField0_ & ~0x00000010);
      bootDiskSizeGb_ = 0;
      noAddress_ = false;
      return this;
    }

    @java.lang.Override
    public com.google.protobuf.Descriptors.Descriptor
        getDescriptorForType() {
      return com.google.genomics.v1a.PipelinesProto.internal_static_google_genomics_v1alpha2_PipelineResources_descriptor;
    }

    @java.lang.Override
    public com.google.genomics.v1a.PipelineResources getDefaultInstanceForType() {
      return com.google.genomics.v1a.PipelineResources.getDefaultInstance();
    }

    @java.lang.Override
    public com.google.genomics.v1a.PipelineResources build() {
      com.google.genomics.v1a.PipelineResources result = buildPartial();
      if (!result.isInitialized()) {
        throw newUninitializedMessageException(result);
      }
      return result;
    }

    @java.lang.Override
    public com.google.genomics.v1a.PipelineResources buildPartial() {
      com.google.genomics.v1a.PipelineResources result = new com.google.genomics.v1a.PipelineResources(this);
      buildPartialRepeatedFields(result);
      if (bitField0_ != 0) { buildPartial0(result); }
      onBuilt();
      return result;
    }

    private void buildPartialRepeatedFields(com.google.genomics.v1a.PipelineResources result) {
      if (disksBuilder_ == null) {
        if (((bitField0_ & 0x00000008) != 0)) {
          disks_ = java.util.Collections.unmodifiableList(disks_);
          bitField0_ = (bitField0_ & ~0x00000008);
        }
        result.disks_ = disks_;
      } else {
        result.disks_ = disksBuilder_.build();
      }
      if (((bitField0_ & 0x00000010) != 0)) {
        zones_ = zones_.getUnmodifiableView();
        bitField0_ = (bitField0_ & ~0x00000010);
      }
      result.zones_ = zones_;
    }

    private void buildPartial0(com.google.genomics.v1a.PipelineResources result) {
      int from_bitField0_ = bitField0_;
      if (((from_bitField0_ & 0x00000001) != 0)) {
        result.minimumCpuCores_ = minimumCpuCores_;
      }
      if (((from_bitField0_ & 0x00000002) != 0)) {
        result.preemptible_ = preemptible_;
      }
      if (((from_bitField0_ & 0x00000004) != 0)) {
        result.minimumRamGb_ = minimumRamGb_;
      }
      if (((from_bitField0_ & 0x00000020) != 0)) {
        result.bootDiskSizeGb_ = bootDiskSizeGb_;
      }
      if (((from_bitField0_ & 0x00000040) != 0)) {
        result.noAddress_ = noAddress_;
      }
    }

    @java.lang.Override
    public Builder clone() {
      return super.clone();
    }
    @java.lang.Override
    public Builder setField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        java.lang.Object value) {
      return super.setField(field, value);
    }
    @java.lang.Override
    public Builder clearField(
        com.google.protobuf.Descriptors.FieldDescriptor field) {
      return super.clearField(field);
    }
    @java.lang.Override
    public Builder clearOneof(
        com.google.protobuf.Descriptors.OneofDescriptor oneof) {
      return super.clearOneof(oneof);
    }
    @java.lang.Override
    public Builder setRepeatedField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        int index, java.lang.Object value) {
      return super.setRepeatedField(field, index, value);
    }
    @java.lang.Override
    public Builder addRepeatedField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        java.lang.Object value) {
      return super.addRepeatedField(field, value);
    }
    @java.lang.Override
    public Builder mergeFrom(com.google.protobuf.Message other) {
      if (other instanceof com.google.genomics.v1a.PipelineResources) {
        return mergeFrom((com.google.genomics.v1a.PipelineResources)other);
      } else {
        super.mergeFrom(other);
        return this;
      }
    }

    public Builder mergeFrom(com.google.genomics.v1a.PipelineResources other) {
      if (other == com.google.genomics.v1a.PipelineResources.getDefaultInstance()) return this;
      if (other.getMinimumCpuCores() != 0) {
        setMinimumCpuCores(other.getMinimumCpuCores());
      }
      if (other.getPreemptible() != false) {
        setPreemptible(other.getPreemptible());
      }
      if (other.getMinimumRamGb() != 0D) {
        setMinimumRamGb(other.getMinimumRamGb());
      }
      if (disksBuilder_ == null) {
        if (!other.disks_.isEmpty()) {
          if (disks_.isEmpty()) {
            disks_ = other.disks_;
            bitField0_ = (bitField0_ & ~0x00000008);
          } else {
            ensureDisksIsMutable();
            disks_.addAll(other.disks_);
          }
          onChanged();
        }
      } else {
        if (!other.disks_.isEmpty()) {
          if (disksBuilder_.isEmpty()) {
            disksBuilder_.dispose();
            disksBuilder_ = null;
            disks_ = other.disks_;
            bitField0_ = (bitField0_ & ~0x00000008);
            disksBuilder_ = 
              com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?
                 getDisksFieldBuilder() : null;
          } else {
            disksBuilder_.addAllMessages(other.disks_);
          }
        }
      }
      if (!other.zones_.isEmpty()) {
        if (zones_.isEmpty()) {
          zones_ = other.zones_;
          bitField0_ = (bitField0_ & ~0x00000010);
        } else {
          ensureZonesIsMutable();
          zones_.addAll(other.zones_);
        }
        onChanged();
      }
      if (other.getBootDiskSizeGb() != 0) {
        setBootDiskSizeGb(other.getBootDiskSizeGb());
      }
      if (other.getNoAddress() != false) {
        setNoAddress(other.getNoAddress());
      }
      this.mergeUnknownFields(other.getUnknownFields());
      onChanged();
      return this;
    }

    @java.lang.Override
    public final boolean isInitialized() {
      return true;
    }

    @java.lang.Override
    public Builder mergeFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 8: {
              minimumCpuCores_ = input.readInt32();
              bitField0_ |= 0x00000001;
              break;
            } // case 8
            case 16: {
              preemptible_ = input.readBool();
              bitField0_ |= 0x00000002;
              break;
            } // case 16
            case 25: {
              minimumRamGb_ = input.readDouble();
              bitField0_ |= 0x00000004;
              break;
            } // case 25
            case 34: {
              com.google.genomics.v1a.PipelineResources.Disk m =
                  input.readMessage(
                      com.google.genomics.v1a.PipelineResources.Disk.parser(),
                      extensionRegistry);
              if (disksBuilder_ == null) {
                ensureDisksIsMutable();
                disks_.add(m);
              } else {
                disksBuilder_.addMessage(m);
              }
              break;
            } // case 34
            case 42: {
              java.lang.String s = input.readStringRequireUtf8();
              ensureZonesIsMutable();
              zones_.add(s);
              break;
            } // case 42
            case 48: {
              bootDiskSizeGb_ = input.readInt32();
              bitField0_ |= 0x00000020;
              break;
            } // case 48
            case 56: {
              noAddress_ = input.readBool();
              bitField0_ |= 0x00000040;
              break;
            } // case 56
            default: {
              if (!super.parseUnknownField(input, extensionRegistry, tag)) {
                done = true; // was an endgroup tag
              }
              break;
            } // default:
          } // switch (tag)
        } // while (!done)
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.unwrapIOException();
      } finally {
        onChanged();
      } // finally
      return this;
    }
    private int bitField0_;

    private int minimumCpuCores_ ;
    /**
     * <pre>
     * The minimum number of cores to use. Defaults to 1.
     * </pre>
     *
     * <code>int32 minimum_cpu_cores = 1;</code>
     * @return The minimumCpuCores.
     */
    @java.lang.Override
    public int getMinimumCpuCores() {
      return minimumCpuCores_;
    }
    /**
     * <pre>
     * The minimum number of cores to use. Defaults to 1.
     * </pre>
     *
     * <code>int32 minimum_cpu_cores = 1;</code>
     * @param value The minimumCpuCores to set.
     * @return This builder for chaining.
     */
    public Builder setMinimumCpuCores(int value) {
      
      minimumCpuCores_ = value;
      bitField0_ |= 0x00000001;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * The minimum number of cores to use. Defaults to 1.
     * </pre>
     *
     * <code>int32 minimum_cpu_cores = 1;</code>
     * @return This builder for chaining.
     */
    public Builder clearMinimumCpuCores() {
      bitField0_ = (bitField0_ & ~0x00000001);
      minimumCpuCores_ = 0;
      onChanged();
      return this;
    }

    private boolean preemptible_ ;
    /**
     * <pre>
     * Whether to use preemptible VMs. Defaults to `false`. In order to use this,
     * must be true for both create time and run time. Cannot be true at run time
     * if false at create time.
     * </pre>
     *
     * <code>bool preemptible = 2;</code>
     * @return The preemptible.
     */
    @java.lang.Override
    public boolean getPreemptible() {
      return preemptible_;
    }
    /**
     * <pre>
     * Whether to use preemptible VMs. Defaults to `false`. In order to use this,
     * must be true for both create time and run time. Cannot be true at run time
     * if false at create time.
     * </pre>
     *
     * <code>bool preemptible = 2;</code>
     * @param value The preemptible to set.
     * @return This builder for chaining.
     */
    public Builder setPreemptible(boolean value) {
      
      preemptible_ = value;
      bitField0_ |= 0x00000002;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * Whether to use preemptible VMs. Defaults to `false`. In order to use this,
     * must be true for both create time and run time. Cannot be true at run time
     * if false at create time.
     * </pre>
     *
     * <code>bool preemptible = 2;</code>
     * @return This builder for chaining.
     */
    public Builder clearPreemptible() {
      bitField0_ = (bitField0_ & ~0x00000002);
      preemptible_ = false;
      onChanged();
      return this;
    }

    private double minimumRamGb_ ;
    /**
     * <pre>
     * The minimum amount of RAM to use. Defaults to 3.75 (GB)
     * </pre>
     *
     * <code>double minimum_ram_gb = 3;</code>
     * @return The minimumRamGb.
     */
    @java.lang.Override
    public double getMinimumRamGb() {
      return minimumRamGb_;
    }
    /**
     * <pre>
     * The minimum amount of RAM to use. Defaults to 3.75 (GB)
     * </pre>
     *
     * <code>double minimum_ram_gb = 3;</code>
     * @param value The minimumRamGb to set.
     * @return This builder for chaining.
     */
    public Builder setMinimumRamGb(double value) {
      
      minimumRamGb_ = value;
      bitField0_ |= 0x00000004;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * The minimum amount of RAM to use. Defaults to 3.75 (GB)
     * </pre>
     *
     * <code>double minimum_ram_gb = 3;</code>
     * @return This builder for chaining.
     */
    public Builder clearMinimumRamGb() {
      bitField0_ = (bitField0_ & ~0x00000004);
      minimumRamGb_ = 0D;
      onChanged();
      return this;
    }

    private java.util.List<com.google.genomics.v1a.PipelineResources.Disk> disks_ =
      java.util.Collections.emptyList();
    private void ensureDisksIsMutable() {
      if (!((bitField0_ & 0x00000008) != 0)) {
        disks_ = new java.util.ArrayList<com.google.genomics.v1a.PipelineResources.Disk>(disks_);
        bitField0_ |= 0x00000008;
       }
    }

    private com.google.protobuf.RepeatedFieldBuilderV3<
        com.google.genomics.v1a.PipelineResources.Disk, com.google.genomics.v1a.PipelineResources.Disk.Builder, com.google.genomics.v1a.PipelineResources.DiskOrBuilder> disksBuilder_;

    /**
     * <pre>
     * Disks to attach.
     * </pre>
     *
     * <code>repeated .google.genomics.v1alpha2.PipelineResources.Disk disks = 4;</code>
     */
    public java.util.List<com.google.genomics.v1a.PipelineResources.Disk> getDisksList() {
      if (disksBuilder_ == null) {
        return java.util.Collections.unmodifiableList(disks_);
      } else {
        return disksBuilder_.getMessageList();
      }
    }
    /**
     * <pre>
     * Disks to attach.
     * </pre>
     *
     * <code>repeated .google.genomics.v1alpha2.PipelineResources.Disk disks = 4;</code>
     */
    public int getDisksCount() {
      if (disksBuilder_ == null) {
        return disks_.size();
      } else {
        return disksBuilder_.getCount();
      }
    }
    /**
     * <pre>
     * Disks to attach.
     * </pre>
     *
     * <code>repeated .google.genomics.v1alpha2.PipelineResources.Disk disks = 4;</code>
     */
    public com.google.genomics.v1a.PipelineResources.Disk getDisks(int index) {
      if (disksBuilder_ == null) {
        return disks_.get(index);
      } else {
        return disksBuilder_.getMessage(index);
      }
    }
    /**
     * <pre>
     * Disks to attach.
     * </pre>
     *
     * <code>repeated .google.genomics.v1alpha2.PipelineResources.Disk disks = 4;</code>
     */
    public Builder setDisks(
        int index, com.google.genomics.v1a.PipelineResources.Disk value) {
      if (disksBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureDisksIsMutable();
        disks_.set(index, value);
        onChanged();
      } else {
        disksBuilder_.setMessage(index, value);
      }
      return this;
    }
    /**
     * <pre>
     * Disks to attach.
     * </pre>
     *
     * <code>repeated .google.genomics.v1alpha2.PipelineResources.Disk disks = 4;</code>
     */
    public Builder setDisks(
        int index, com.google.genomics.v1a.PipelineResources.Disk.Builder builderForValue) {
      if (disksBuilder_ == null) {
        ensureDisksIsMutable();
        disks_.set(index, builderForValue.build());
        onChanged();
      } else {
        disksBuilder_.setMessage(index, builderForValue.build());
      }
      return this;
    }
    /**
     * <pre>
     * Disks to attach.
     * </pre>
     *
     * <code>repeated .google.genomics.v1alpha2.PipelineResources.Disk disks = 4;</code>
     */
    public Builder addDisks(com.google.genomics.v1a.PipelineResources.Disk value) {
      if (disksBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureDisksIsMutable();
        disks_.add(value);
        onChanged();
      } else {
        disksBuilder_.addMessage(value);
      }
      return this;
    }
    /**
     * <pre>
     * Disks to attach.
     * </pre>
     *
     * <code>repeated .google.genomics.v1alpha2.PipelineResources.Disk disks = 4;</code>
     */
    public Builder addDisks(
        int index, com.google.genomics.v1a.PipelineResources.Disk value) {
      if (disksBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureDisksIsMutable();
        disks_.add(index, value);
        onChanged();
      } else {
        disksBuilder_.addMessage(index, value);
      }
      return this;
    }
    /**
     * <pre>
     * Disks to attach.
     * </pre>
     *
     * <code>repeated .google.genomics.v1alpha2.PipelineResources.Disk disks = 4;</code>
     */
    public Builder addDisks(
        com.google.genomics.v1a.PipelineResources.Disk.Builder builderForValue) {
      if (disksBuilder_ == null) {
        ensureDisksIsMutable();
        disks_.add(builderForValue.build());
        onChanged();
      } else {
        disksBuilder_.addMessage(builderForValue.build());
      }
      return this;
    }
    /**
     * <pre>
     * Disks to attach.
     * </pre>
     *
     * <code>repeated .google.genomics.v1alpha2.PipelineResources.Disk disks = 4;</code>
     */
    public Builder addDisks(
        int index, com.google.genomics.v1a.PipelineResources.Disk.Builder builderForValue) {
      if (disksBuilder_ == null) {
        ensureDisksIsMutable();
        disks_.add(index, builderForValue.build());
        onChanged();
      } else {
        disksBuilder_.addMessage(index, builderForValue.build());
      }
      return this;
    }
    /**
     * <pre>
     * Disks to attach.
     * </pre>
     *
     * <code>repeated .google.genomics.v1alpha2.PipelineResources.Disk disks = 4;</code>
     */
    public Builder addAllDisks(
        java.lang.Iterable<? extends com.google.genomics.v1a.PipelineResources.Disk> values) {
      if (disksBuilder_ == null) {
        ensureDisksIsMutable();
        com.google.protobuf.AbstractMessageLite.Builder.addAll(
            values, disks_);
        onChanged();
      } else {
        disksBuilder_.addAllMessages(values);
      }
      return this;
    }
    /**
     * <pre>
     * Disks to attach.
     * </pre>
     *
     * <code>repeated .google.genomics.v1alpha2.PipelineResources.Disk disks = 4;</code>
     */
    public Builder clearDisks() {
      if (disksBuilder_ == null) {
        disks_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000008);
        onChanged();
      } else {
        disksBuilder_.clear();
      }
      return this;
    }
    /**
     * <pre>
     * Disks to attach.
     * </pre>
     *
     * <code>repeated .google.genomics.v1alpha2.PipelineResources.Disk disks = 4;</code>
     */
    public Builder removeDisks(int index) {
      if (disksBuilder_ == null) {
        ensureDisksIsMutable();
        disks_.remove(index);
        onChanged();
      } else {
        disksBuilder_.remove(index);
      }
      return this;
    }
    /**
     * <pre>
     * Disks to attach.
     * </pre>
     *
     * <code>repeated .google.genomics.v1alpha2.PipelineResources.Disk disks = 4;</code>
     */
    public com.google.genomics.v1a.PipelineResources.Disk.Builder getDisksBuilder(
        int index) {
      return getDisksFieldBuilder().getBuilder(index);
    }
    /**
     * <pre>
     * Disks to attach.
     * </pre>
     *
     * <code>repeated .google.genomics.v1alpha2.PipelineResources.Disk disks = 4;</code>
     */
    public com.google.genomics.v1a.PipelineResources.DiskOrBuilder getDisksOrBuilder(
        int index) {
      if (disksBuilder_ == null) {
        return disks_.get(index);  } else {
        return disksBuilder_.getMessageOrBuilder(index);
      }
    }
    /**
     * <pre>
     * Disks to attach.
     * </pre>
     *
     * <code>repeated .google.genomics.v1alpha2.PipelineResources.Disk disks = 4;</code>
     */
    public java.util.List<? extends com.google.genomics.v1a.PipelineResources.DiskOrBuilder> 
         getDisksOrBuilderList() {
      if (disksBuilder_ != null) {
        return disksBuilder_.getMessageOrBuilderList();
      } else {
        return java.util.Collections.unmodifiableList(disks_);
      }
    }
    /**
     * <pre>
     * Disks to attach.
     * </pre>
     *
     * <code>repeated .google.genomics.v1alpha2.PipelineResources.Disk disks = 4;</code>
     */
    public com.google.genomics.v1a.PipelineResources.Disk.Builder addDisksBuilder() {
      return getDisksFieldBuilder().addBuilder(
          com.google.genomics.v1a.PipelineResources.Disk.getDefaultInstance());
    }
    /**
     * <pre>
     * Disks to attach.
     * </pre>
     *
     * <code>repeated .google.genomics.v1alpha2.PipelineResources.Disk disks = 4;</code>
     */
    public com.google.genomics.v1a.PipelineResources.Disk.Builder addDisksBuilder(
        int index) {
      return getDisksFieldBuilder().addBuilder(
          index, com.google.genomics.v1a.PipelineResources.Disk.getDefaultInstance());
    }
    /**
     * <pre>
     * Disks to attach.
     * </pre>
     *
     * <code>repeated .google.genomics.v1alpha2.PipelineResources.Disk disks = 4;</code>
     */
    public java.util.List<com.google.genomics.v1a.PipelineResources.Disk.Builder> 
         getDisksBuilderList() {
      return getDisksFieldBuilder().getBuilderList();
    }
    private com.google.protobuf.RepeatedFieldBuilderV3<
        com.google.genomics.v1a.PipelineResources.Disk, com.google.genomics.v1a.PipelineResources.Disk.Builder, com.google.genomics.v1a.PipelineResources.DiskOrBuilder> 
        getDisksFieldBuilder() {
      if (disksBuilder_ == null) {
        disksBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<
            com.google.genomics.v1a.PipelineResources.Disk, com.google.genomics.v1a.PipelineResources.Disk.Builder, com.google.genomics.v1a.PipelineResources.DiskOrBuilder>(
                disks_,
                ((bitField0_ & 0x00000008) != 0),
                getParentForChildren(),
                isClean());
        disks_ = null;
      }
      return disksBuilder_;
    }

    private com.google.protobuf.LazyStringList zones_ = com.google.protobuf.LazyStringArrayList.EMPTY;
    private void ensureZonesIsMutable() {
      if (!((bitField0_ & 0x00000010) != 0)) {
        zones_ = new com.google.protobuf.LazyStringArrayList(zones_);
        bitField0_ |= 0x00000010;
       }
    }
    /**
     * <pre>
     * List of Google Compute Engine availability zones to which resource
     * creation will restricted. If empty, any zone may be chosen.
     * </pre>
     *
     * <code>repeated string zones = 5;</code>
     * @return A list containing the zones.
     */
    public com.google.protobuf.ProtocolStringList
        getZonesList() {
      return zones_.getUnmodifiableView();
    }
    /**
     * <pre>
     * List of Google Compute Engine availability zones to which resource
     * creation will restricted. If empty, any zone may be chosen.
     * </pre>
     *
     * <code>repeated string zones = 5;</code>
     * @return The count of zones.
     */
    public int getZonesCount() {
      return zones_.size();
    }
    /**
     * <pre>
     * List of Google Compute Engine availability zones to which resource
     * creation will restricted. If empty, any zone may be chosen.
     * </pre>
     *
     * <code>repeated string zones = 5;</code>
     * @param index The index of the element to return.
     * @return The zones at the given index.
     */
    public java.lang.String getZones(int index) {
      return zones_.get(index);
    }
    /**
     * <pre>
     * List of Google Compute Engine availability zones to which resource
     * creation will restricted. If empty, any zone may be chosen.
     * </pre>
     *
     * <code>repeated string zones = 5;</code>
     * @param index The index of the value to return.
     * @return The bytes of the zones at the given index.
     */
    public com.google.protobuf.ByteString
        getZonesBytes(int index) {
      return zones_.getByteString(index);
    }
    /**
     * <pre>
     * List of Google Compute Engine availability zones to which resource
     * creation will restricted. If empty, any zone may be chosen.
     * </pre>
     *
     * <code>repeated string zones = 5;</code>
     * @param index The index to set the value at.
     * @param value The zones to set.
     * @return This builder for chaining.
     */
    public Builder setZones(
        int index, java.lang.String value) {
      if (value == null) { throw new NullPointerException(); }
      ensureZonesIsMutable();
      zones_.set(index, value);
      onChanged();
      return this;
    }
    /**
     * <pre>
     * List of Google Compute Engine availability zones to which resource
     * creation will restricted. If empty, any zone may be chosen.
     * </pre>
     *
     * <code>repeated string zones = 5;</code>
     * @param value The zones to add.
     * @return This builder for chaining.
     */
    public Builder addZones(
        java.lang.String value) {
      if (value == null) { throw new NullPointerException(); }
      ensureZonesIsMutable();
      zones_.add(value);
      onChanged();
      return this;
    }
    /**
     * <pre>
     * List of Google Compute Engine availability zones to which resource
     * creation will restricted. If empty, any zone may be chosen.
     * </pre>
     *
     * <code>repeated string zones = 5;</code>
     * @param values The zones to add.
     * @return This builder for chaining.
     */
    public Builder addAllZones(
        java.lang.Iterable<java.lang.String> values) {
      ensureZonesIsMutable();
      com.google.protobuf.AbstractMessageLite.Builder.addAll(
          values, zones_);
      onChanged();
      return this;
    }
    /**
     * <pre>
     * List of Google Compute Engine availability zones to which resource
     * creation will restricted. If empty, any zone may be chosen.
     * </pre>
     *
     * <code>repeated string zones = 5;</code>
     * @return This builder for chaining.
     */
    public Builder clearZones() {
      zones_ = com.google.protobuf.LazyStringArrayList.EMPTY;
      bitField0_ = (bitField0_ & ~0x00000010);
      onChanged();
      return this;
    }
    /**
     * <pre>
     * List of Google Compute Engine availability zones to which resource
     * creation will restricted. If empty, any zone may be chosen.
     * </pre>
     *
     * <code>repeated string zones = 5;</code>
     * @param value The bytes of the zones to add.
     * @return This builder for chaining.
     */
    public Builder addZonesBytes(
        com.google.protobuf.ByteString value) {
      if (value == null) { throw new NullPointerException(); }
      checkByteStringIsUtf8(value);
      ensureZonesIsMutable();
      zones_.add(value);
      onChanged();
      return this;
    }

    private int bootDiskSizeGb_ ;
    /**
     * <pre>
     * The size of the boot disk. Defaults to 10 (GB).
     * </pre>
     *
     * <code>int32 boot_disk_size_gb = 6;</code>
     * @return The bootDiskSizeGb.
     */
    @java.lang.Override
    public int getBootDiskSizeGb() {
      return bootDiskSizeGb_;
    }
    /**
     * <pre>
     * The size of the boot disk. Defaults to 10 (GB).
     * </pre>
     *
     * <code>int32 boot_disk_size_gb = 6;</code>
     * @param value The bootDiskSizeGb to set.
     * @return This builder for chaining.
     */
    public Builder setBootDiskSizeGb(int value) {
      
      bootDiskSizeGb_ = value;
      bitField0_ |= 0x00000020;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * The size of the boot disk. Defaults to 10 (GB).
     * </pre>
     *
     * <code>int32 boot_disk_size_gb = 6;</code>
     * @return This builder for chaining.
     */
    public Builder clearBootDiskSizeGb() {
      bitField0_ = (bitField0_ & ~0x00000020);
      bootDiskSizeGb_ = 0;
      onChanged();
      return this;
    }

    private boolean noAddress_ ;
    /**
     * <pre>
     * Whether to assign an external IP to the instance. This is an experimental
     * feature that may go away. Defaults to false.
     * Corresponds to `--no_address` flag for [gcloud compute instances create]
     * (https://cloud.google.com/sdk/gcloud/reference/compute/instances/create).
     * In order to use this, must be true for both create time and run time.
     * Cannot be true at run time if false at create time. If you need to ssh into
     * a private IP VM for debugging, you can ssh to a public VM and then ssh into
     * the private VM's Internal IP.  If noAddress is set, this pipeline run may
     * only load docker images from Google Container Registry and not Docker Hub.
     * ** Note: To use this option, your project must be in Google Access for
     * Private IPs Early Access Program.**
     * </pre>
     *
     * <code>bool no_address = 7;</code>
     * @return The noAddress.
     */
    @java.lang.Override
    public boolean getNoAddress() {
      return noAddress_;
    }
    /**
     * <pre>
     * Whether to assign an external IP to the instance. This is an experimental
     * feature that may go away. Defaults to false.
     * Corresponds to `--no_address` flag for [gcloud compute instances create]
     * (https://cloud.google.com/sdk/gcloud/reference/compute/instances/create).
     * In order to use this, must be true for both create time and run time.
     * Cannot be true at run time if false at create time. If you need to ssh into
     * a private IP VM for debugging, you can ssh to a public VM and then ssh into
     * the private VM's Internal IP.  If noAddress is set, this pipeline run may
     * only load docker images from Google Container Registry and not Docker Hub.
     * ** Note: To use this option, your project must be in Google Access for
     * Private IPs Early Access Program.**
     * </pre>
     *
     * <code>bool no_address = 7;</code>
     * @param value The noAddress to set.
     * @return This builder for chaining.
     */
    public Builder setNoAddress(boolean value) {
      
      noAddress_ = value;
      bitField0_ |= 0x00000040;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * Whether to assign an external IP to the instance. This is an experimental
     * feature that may go away. Defaults to false.
     * Corresponds to `--no_address` flag for [gcloud compute instances create]
     * (https://cloud.google.com/sdk/gcloud/reference/compute/instances/create).
     * In order to use this, must be true for both create time and run time.
     * Cannot be true at run time if false at create time. If you need to ssh into
     * a private IP VM for debugging, you can ssh to a public VM and then ssh into
     * the private VM's Internal IP.  If noAddress is set, this pipeline run may
     * only load docker images from Google Container Registry and not Docker Hub.
     * ** Note: To use this option, your project must be in Google Access for
     * Private IPs Early Access Program.**
     * </pre>
     *
     * <code>bool no_address = 7;</code>
     * @return This builder for chaining.
     */
    public Builder clearNoAddress() {
      bitField0_ = (bitField0_ & ~0x00000040);
      noAddress_ = false;
      onChanged();
      return this;
    }
    @java.lang.Override
    public final Builder setUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return super.setUnknownFields(unknownFields);
    }

    @java.lang.Override
    public final Builder mergeUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return super.mergeUnknownFields(unknownFields);
    }


    // @@protoc_insertion_point(builder_scope:google.genomics.v1alpha2.PipelineResources)
  }

  // @@protoc_insertion_point(class_scope:google.genomics.v1alpha2.PipelineResources)
  private static final com.google.genomics.v1a.PipelineResources DEFAULT_INSTANCE;
  static {
    DEFAULT_INSTANCE = new com.google.genomics.v1a.PipelineResources();
  }

  public static com.google.genomics.v1a.PipelineResources getDefaultInstance() {
    return DEFAULT_INSTANCE;
  }

  private static final com.google.protobuf.Parser<PipelineResources>
      PARSER = new com.google.protobuf.AbstractParser<PipelineResources>() {
    @java.lang.Override
    public PipelineResources parsePartialFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      Builder builder = newBuilder();
      try {
        builder.mergeFrom(input, extensionRegistry);
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(builder.buildPartial());
      } catch (com.google.protobuf.UninitializedMessageException e) {
        throw e.asInvalidProtocolBufferException().setUnfinishedMessage(builder.buildPartial());
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(e)
            .setUnfinishedMessage(builder.buildPartial());
      }
      return builder.buildPartial();
    }
  };

  public static com.google.protobuf.Parser<PipelineResources> parser() {
    return PARSER;
  }

  @java.lang.Override
  public com.google.protobuf.Parser<PipelineResources> getParserForType() {
    return PARSER;
  }

  @java.lang.Override
  public com.google.genomics.v1a.PipelineResources getDefaultInstanceForType() {
    return DEFAULT_INSTANCE;
  }

}

