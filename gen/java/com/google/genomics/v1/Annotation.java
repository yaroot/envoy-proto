// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: google/genomics/v1/annotations.proto

package com.google.genomics.v1;

/**
 * <pre>
 * An annotation describes a region of reference genome. The value of an
 * annotation may be one of several canonical types, supplemented by arbitrary
 * info tags. An annotation is not inherently associated with a specific
 * sample or individual (though a client could choose to use annotations in
 * this way). Example canonical annotation types are `GENE` and
 * `VARIANT`.
 * </pre>
 *
 * Protobuf type {@code google.genomics.v1.Annotation}
 */
public final class Annotation extends
    com.google.protobuf.GeneratedMessageV3 implements
    // @@protoc_insertion_point(message_implements:google.genomics.v1.Annotation)
    AnnotationOrBuilder {
private static final long serialVersionUID = 0L;
  // Use Annotation.newBuilder() to construct.
  private Annotation(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
    super(builder);
  }
  private Annotation() {
    id_ = "";
    annotationSetId_ = "";
    name_ = "";
    referenceId_ = "";
    referenceName_ = "";
    type_ = 0;
  }

  @java.lang.Override
  @SuppressWarnings({"unused"})
  protected java.lang.Object newInstance(
      UnusedPrivateParameter unused) {
    return new Annotation();
  }

  @java.lang.Override
  public final com.google.protobuf.UnknownFieldSet
  getUnknownFields() {
    return this.unknownFields;
  }
  public static final com.google.protobuf.Descriptors.Descriptor
      getDescriptor() {
    return com.google.genomics.v1.AnnotationsProto.internal_static_google_genomics_v1_Annotation_descriptor;
  }

  @SuppressWarnings({"rawtypes"})
  @java.lang.Override
  protected com.google.protobuf.MapField internalGetMapField(
      int number) {
    switch (number) {
      case 12:
        return internalGetInfo();
      default:
        throw new RuntimeException(
            "Invalid map field number: " + number);
    }
  }
  @java.lang.Override
  protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internalGetFieldAccessorTable() {
    return com.google.genomics.v1.AnnotationsProto.internal_static_google_genomics_v1_Annotation_fieldAccessorTable
        .ensureFieldAccessorsInitialized(
            com.google.genomics.v1.Annotation.class, com.google.genomics.v1.Annotation.Builder.class);
  }

  private int valueCase_ = 0;
  private java.lang.Object value_;
  public enum ValueCase
      implements com.google.protobuf.Internal.EnumLite,
          com.google.protobuf.AbstractMessage.InternalOneOfEnum {
    VARIANT(10),
    TRANSCRIPT(11),
    VALUE_NOT_SET(0);
    private final int value;
    private ValueCase(int value) {
      this.value = value;
    }
    /**
     * @param value The number of the enum to look for.
     * @return The enum associated with the given number.
     * @deprecated Use {@link #forNumber(int)} instead.
     */
    @java.lang.Deprecated
    public static ValueCase valueOf(int value) {
      return forNumber(value);
    }

    public static ValueCase forNumber(int value) {
      switch (value) {
        case 10: return VARIANT;
        case 11: return TRANSCRIPT;
        case 0: return VALUE_NOT_SET;
        default: return null;
      }
    }
    public int getNumber() {
      return this.value;
    }
  };

  public ValueCase
  getValueCase() {
    return ValueCase.forNumber(
        valueCase_);
  }

  public static final int ID_FIELD_NUMBER = 1;
  @SuppressWarnings("serial")
  private volatile java.lang.Object id_ = "";
  /**
   * <pre>
   * The server-generated annotation ID, unique across all annotations.
   * </pre>
   *
   * <code>string id = 1;</code>
   * @return The id.
   */
  @java.lang.Override
  public java.lang.String getId() {
    java.lang.Object ref = id_;
    if (ref instanceof java.lang.String) {
      return (java.lang.String) ref;
    } else {
      com.google.protobuf.ByteString bs = 
          (com.google.protobuf.ByteString) ref;
      java.lang.String s = bs.toStringUtf8();
      id_ = s;
      return s;
    }
  }
  /**
   * <pre>
   * The server-generated annotation ID, unique across all annotations.
   * </pre>
   *
   * <code>string id = 1;</code>
   * @return The bytes for id.
   */
  @java.lang.Override
  public com.google.protobuf.ByteString
      getIdBytes() {
    java.lang.Object ref = id_;
    if (ref instanceof java.lang.String) {
      com.google.protobuf.ByteString b = 
          com.google.protobuf.ByteString.copyFromUtf8(
              (java.lang.String) ref);
      id_ = b;
      return b;
    } else {
      return (com.google.protobuf.ByteString) ref;
    }
  }

  public static final int ANNOTATION_SET_ID_FIELD_NUMBER = 2;
  @SuppressWarnings("serial")
  private volatile java.lang.Object annotationSetId_ = "";
  /**
   * <pre>
   * The annotation set to which this annotation belongs.
   * </pre>
   *
   * <code>string annotation_set_id = 2;</code>
   * @return The annotationSetId.
   */
  @java.lang.Override
  public java.lang.String getAnnotationSetId() {
    java.lang.Object ref = annotationSetId_;
    if (ref instanceof java.lang.String) {
      return (java.lang.String) ref;
    } else {
      com.google.protobuf.ByteString bs = 
          (com.google.protobuf.ByteString) ref;
      java.lang.String s = bs.toStringUtf8();
      annotationSetId_ = s;
      return s;
    }
  }
  /**
   * <pre>
   * The annotation set to which this annotation belongs.
   * </pre>
   *
   * <code>string annotation_set_id = 2;</code>
   * @return The bytes for annotationSetId.
   */
  @java.lang.Override
  public com.google.protobuf.ByteString
      getAnnotationSetIdBytes() {
    java.lang.Object ref = annotationSetId_;
    if (ref instanceof java.lang.String) {
      com.google.protobuf.ByteString b = 
          com.google.protobuf.ByteString.copyFromUtf8(
              (java.lang.String) ref);
      annotationSetId_ = b;
      return b;
    } else {
      return (com.google.protobuf.ByteString) ref;
    }
  }

  public static final int NAME_FIELD_NUMBER = 3;
  @SuppressWarnings("serial")
  private volatile java.lang.Object name_ = "";
  /**
   * <pre>
   * The display name of this annotation.
   * </pre>
   *
   * <code>string name = 3;</code>
   * @return The name.
   */
  @java.lang.Override
  public java.lang.String getName() {
    java.lang.Object ref = name_;
    if (ref instanceof java.lang.String) {
      return (java.lang.String) ref;
    } else {
      com.google.protobuf.ByteString bs = 
          (com.google.protobuf.ByteString) ref;
      java.lang.String s = bs.toStringUtf8();
      name_ = s;
      return s;
    }
  }
  /**
   * <pre>
   * The display name of this annotation.
   * </pre>
   *
   * <code>string name = 3;</code>
   * @return The bytes for name.
   */
  @java.lang.Override
  public com.google.protobuf.ByteString
      getNameBytes() {
    java.lang.Object ref = name_;
    if (ref instanceof java.lang.String) {
      com.google.protobuf.ByteString b = 
          com.google.protobuf.ByteString.copyFromUtf8(
              (java.lang.String) ref);
      name_ = b;
      return b;
    } else {
      return (com.google.protobuf.ByteString) ref;
    }
  }

  public static final int REFERENCE_ID_FIELD_NUMBER = 4;
  @SuppressWarnings("serial")
  private volatile java.lang.Object referenceId_ = "";
  /**
   * <pre>
   * The ID of the Google Genomics reference associated with this range.
   * </pre>
   *
   * <code>string reference_id = 4;</code>
   * @return The referenceId.
   */
  @java.lang.Override
  public java.lang.String getReferenceId() {
    java.lang.Object ref = referenceId_;
    if (ref instanceof java.lang.String) {
      return (java.lang.String) ref;
    } else {
      com.google.protobuf.ByteString bs = 
          (com.google.protobuf.ByteString) ref;
      java.lang.String s = bs.toStringUtf8();
      referenceId_ = s;
      return s;
    }
  }
  /**
   * <pre>
   * The ID of the Google Genomics reference associated with this range.
   * </pre>
   *
   * <code>string reference_id = 4;</code>
   * @return The bytes for referenceId.
   */
  @java.lang.Override
  public com.google.protobuf.ByteString
      getReferenceIdBytes() {
    java.lang.Object ref = referenceId_;
    if (ref instanceof java.lang.String) {
      com.google.protobuf.ByteString b = 
          com.google.protobuf.ByteString.copyFromUtf8(
              (java.lang.String) ref);
      referenceId_ = b;
      return b;
    } else {
      return (com.google.protobuf.ByteString) ref;
    }
  }

  public static final int REFERENCE_NAME_FIELD_NUMBER = 5;
  @SuppressWarnings("serial")
  private volatile java.lang.Object referenceName_ = "";
  /**
   * <pre>
   * The display name corresponding to the reference specified by
   * `referenceId`, for example `chr1`, `1`, or `chrX`.
   * </pre>
   *
   * <code>string reference_name = 5;</code>
   * @return The referenceName.
   */
  @java.lang.Override
  public java.lang.String getReferenceName() {
    java.lang.Object ref = referenceName_;
    if (ref instanceof java.lang.String) {
      return (java.lang.String) ref;
    } else {
      com.google.protobuf.ByteString bs = 
          (com.google.protobuf.ByteString) ref;
      java.lang.String s = bs.toStringUtf8();
      referenceName_ = s;
      return s;
    }
  }
  /**
   * <pre>
   * The display name corresponding to the reference specified by
   * `referenceId`, for example `chr1`, `1`, or `chrX`.
   * </pre>
   *
   * <code>string reference_name = 5;</code>
   * @return The bytes for referenceName.
   */
  @java.lang.Override
  public com.google.protobuf.ByteString
      getReferenceNameBytes() {
    java.lang.Object ref = referenceName_;
    if (ref instanceof java.lang.String) {
      com.google.protobuf.ByteString b = 
          com.google.protobuf.ByteString.copyFromUtf8(
              (java.lang.String) ref);
      referenceName_ = b;
      return b;
    } else {
      return (com.google.protobuf.ByteString) ref;
    }
  }

  public static final int START_FIELD_NUMBER = 6;
  private long start_ = 0L;
  /**
   * <pre>
   * The start position of the range on the reference, 0-based inclusive.
   * </pre>
   *
   * <code>int64 start = 6;</code>
   * @return The start.
   */
  @java.lang.Override
  public long getStart() {
    return start_;
  }

  public static final int END_FIELD_NUMBER = 7;
  private long end_ = 0L;
  /**
   * <pre>
   * The end position of the range on the reference, 0-based exclusive.
   * </pre>
   *
   * <code>int64 end = 7;</code>
   * @return The end.
   */
  @java.lang.Override
  public long getEnd() {
    return end_;
  }

  public static final int REVERSE_STRAND_FIELD_NUMBER = 8;
  private boolean reverseStrand_ = false;
  /**
   * <pre>
   * Whether this range refers to the reverse strand, as opposed to the forward
   * strand. Note that regardless of this field, the start/end position of the
   * range always refer to the forward strand.
   * </pre>
   *
   * <code>bool reverse_strand = 8;</code>
   * @return The reverseStrand.
   */
  @java.lang.Override
  public boolean getReverseStrand() {
    return reverseStrand_;
  }

  public static final int TYPE_FIELD_NUMBER = 9;
  private int type_ = 0;
  /**
   * <pre>
   * The data type for this annotation. Must match the containing annotation
   * set's type.
   * </pre>
   *
   * <code>.google.genomics.v1.AnnotationType type = 9;</code>
   * @return The enum numeric value on the wire for type.
   */
  @java.lang.Override public int getTypeValue() {
    return type_;
  }
  /**
   * <pre>
   * The data type for this annotation. Must match the containing annotation
   * set's type.
   * </pre>
   *
   * <code>.google.genomics.v1.AnnotationType type = 9;</code>
   * @return The type.
   */
  @java.lang.Override public com.google.genomics.v1.AnnotationType getType() {
    com.google.genomics.v1.AnnotationType result = com.google.genomics.v1.AnnotationType.forNumber(type_);
    return result == null ? com.google.genomics.v1.AnnotationType.UNRECOGNIZED : result;
  }

  public static final int VARIANT_FIELD_NUMBER = 10;
  /**
   * <pre>
   * A variant annotation, which describes the effect of a variant on the
   * genome, the coding sequence, and/or higher level consequences at the
   * organism level e.g. pathogenicity. This field is only set for annotations
   * of type `VARIANT`.
   * </pre>
   *
   * <code>.google.genomics.v1.VariantAnnotation variant = 10;</code>
   * @return Whether the variant field is set.
   */
  @java.lang.Override
  public boolean hasVariant() {
    return valueCase_ == 10;
  }
  /**
   * <pre>
   * A variant annotation, which describes the effect of a variant on the
   * genome, the coding sequence, and/or higher level consequences at the
   * organism level e.g. pathogenicity. This field is only set for annotations
   * of type `VARIANT`.
   * </pre>
   *
   * <code>.google.genomics.v1.VariantAnnotation variant = 10;</code>
   * @return The variant.
   */
  @java.lang.Override
  public com.google.genomics.v1.VariantAnnotation getVariant() {
    if (valueCase_ == 10) {
       return (com.google.genomics.v1.VariantAnnotation) value_;
    }
    return com.google.genomics.v1.VariantAnnotation.getDefaultInstance();
  }
  /**
   * <pre>
   * A variant annotation, which describes the effect of a variant on the
   * genome, the coding sequence, and/or higher level consequences at the
   * organism level e.g. pathogenicity. This field is only set for annotations
   * of type `VARIANT`.
   * </pre>
   *
   * <code>.google.genomics.v1.VariantAnnotation variant = 10;</code>
   */
  @java.lang.Override
  public com.google.genomics.v1.VariantAnnotationOrBuilder getVariantOrBuilder() {
    if (valueCase_ == 10) {
       return (com.google.genomics.v1.VariantAnnotation) value_;
    }
    return com.google.genomics.v1.VariantAnnotation.getDefaultInstance();
  }

  public static final int TRANSCRIPT_FIELD_NUMBER = 11;
  /**
   * <pre>
   * A transcript value represents the assertion that a particular region of
   * the reference genome may be transcribed as RNA. An alternative splicing
   * pattern would be represented as a separate transcript object. This field
   * is only set for annotations of type `TRANSCRIPT`.
   * </pre>
   *
   * <code>.google.genomics.v1.Transcript transcript = 11;</code>
   * @return Whether the transcript field is set.
   */
  @java.lang.Override
  public boolean hasTranscript() {
    return valueCase_ == 11;
  }
  /**
   * <pre>
   * A transcript value represents the assertion that a particular region of
   * the reference genome may be transcribed as RNA. An alternative splicing
   * pattern would be represented as a separate transcript object. This field
   * is only set for annotations of type `TRANSCRIPT`.
   * </pre>
   *
   * <code>.google.genomics.v1.Transcript transcript = 11;</code>
   * @return The transcript.
   */
  @java.lang.Override
  public com.google.genomics.v1.Transcript getTranscript() {
    if (valueCase_ == 11) {
       return (com.google.genomics.v1.Transcript) value_;
    }
    return com.google.genomics.v1.Transcript.getDefaultInstance();
  }
  /**
   * <pre>
   * A transcript value represents the assertion that a particular region of
   * the reference genome may be transcribed as RNA. An alternative splicing
   * pattern would be represented as a separate transcript object. This field
   * is only set for annotations of type `TRANSCRIPT`.
   * </pre>
   *
   * <code>.google.genomics.v1.Transcript transcript = 11;</code>
   */
  @java.lang.Override
  public com.google.genomics.v1.TranscriptOrBuilder getTranscriptOrBuilder() {
    if (valueCase_ == 11) {
       return (com.google.genomics.v1.Transcript) value_;
    }
    return com.google.genomics.v1.Transcript.getDefaultInstance();
  }

  public static final int INFO_FIELD_NUMBER = 12;
  private static final class InfoDefaultEntryHolder {
    static final com.google.protobuf.MapEntry<
        java.lang.String, com.google.protobuf.ListValue> defaultEntry =
            com.google.protobuf.MapEntry
            .<java.lang.String, com.google.protobuf.ListValue>newDefaultInstance(
                com.google.genomics.v1.AnnotationsProto.internal_static_google_genomics_v1_Annotation_InfoEntry_descriptor, 
                com.google.protobuf.WireFormat.FieldType.STRING,
                "",
                com.google.protobuf.WireFormat.FieldType.MESSAGE,
                com.google.protobuf.ListValue.getDefaultInstance());
  }
  @SuppressWarnings("serial")
  private com.google.protobuf.MapField<
      java.lang.String, com.google.protobuf.ListValue> info_;
  private com.google.protobuf.MapField<java.lang.String, com.google.protobuf.ListValue>
  internalGetInfo() {
    if (info_ == null) {
      return com.google.protobuf.MapField.emptyMapField(
          InfoDefaultEntryHolder.defaultEntry);
    }
    return info_;
  }
  public int getInfoCount() {
    return internalGetInfo().getMap().size();
  }
  /**
   * <pre>
   * A map of additional read alignment information. This must be of the form
   * map&lt;string, string[]&gt; (string key mapping to a list of string values).
   * </pre>
   *
   * <code>map&lt;string, .google.protobuf.ListValue&gt; info = 12;</code>
   */
  @java.lang.Override
  public boolean containsInfo(
      java.lang.String key) {
    if (key == null) { throw new NullPointerException("map key"); }
    return internalGetInfo().getMap().containsKey(key);
  }
  /**
   * Use {@link #getInfoMap()} instead.
   */
  @java.lang.Override
  @java.lang.Deprecated
  public java.util.Map<java.lang.String, com.google.protobuf.ListValue> getInfo() {
    return getInfoMap();
  }
  /**
   * <pre>
   * A map of additional read alignment information. This must be of the form
   * map&lt;string, string[]&gt; (string key mapping to a list of string values).
   * </pre>
   *
   * <code>map&lt;string, .google.protobuf.ListValue&gt; info = 12;</code>
   */
  @java.lang.Override
  public java.util.Map<java.lang.String, com.google.protobuf.ListValue> getInfoMap() {
    return internalGetInfo().getMap();
  }
  /**
   * <pre>
   * A map of additional read alignment information. This must be of the form
   * map&lt;string, string[]&gt; (string key mapping to a list of string values).
   * </pre>
   *
   * <code>map&lt;string, .google.protobuf.ListValue&gt; info = 12;</code>
   */
  @java.lang.Override
  public /* nullable */
com.google.protobuf.ListValue getInfoOrDefault(
      java.lang.String key,
      /* nullable */
com.google.protobuf.ListValue defaultValue) {
    if (key == null) { throw new NullPointerException("map key"); }
    java.util.Map<java.lang.String, com.google.protobuf.ListValue> map =
        internalGetInfo().getMap();
    return map.containsKey(key) ? map.get(key) : defaultValue;
  }
  /**
   * <pre>
   * A map of additional read alignment information. This must be of the form
   * map&lt;string, string[]&gt; (string key mapping to a list of string values).
   * </pre>
   *
   * <code>map&lt;string, .google.protobuf.ListValue&gt; info = 12;</code>
   */
  @java.lang.Override
  public com.google.protobuf.ListValue getInfoOrThrow(
      java.lang.String key) {
    if (key == null) { throw new NullPointerException("map key"); }
    java.util.Map<java.lang.String, com.google.protobuf.ListValue> map =
        internalGetInfo().getMap();
    if (!map.containsKey(key)) {
      throw new java.lang.IllegalArgumentException();
    }
    return map.get(key);
  }

  private byte memoizedIsInitialized = -1;
  @java.lang.Override
  public final boolean isInitialized() {
    byte isInitialized = memoizedIsInitialized;
    if (isInitialized == 1) return true;
    if (isInitialized == 0) return false;

    memoizedIsInitialized = 1;
    return true;
  }

  @java.lang.Override
  public void writeTo(com.google.protobuf.CodedOutputStream output)
                      throws java.io.IOException {
    if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(id_)) {
      com.google.protobuf.GeneratedMessageV3.writeString(output, 1, id_);
    }
    if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(annotationSetId_)) {
      com.google.protobuf.GeneratedMessageV3.writeString(output, 2, annotationSetId_);
    }
    if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(name_)) {
      com.google.protobuf.GeneratedMessageV3.writeString(output, 3, name_);
    }
    if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(referenceId_)) {
      com.google.protobuf.GeneratedMessageV3.writeString(output, 4, referenceId_);
    }
    if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(referenceName_)) {
      com.google.protobuf.GeneratedMessageV3.writeString(output, 5, referenceName_);
    }
    if (start_ != 0L) {
      output.writeInt64(6, start_);
    }
    if (end_ != 0L) {
      output.writeInt64(7, end_);
    }
    if (reverseStrand_ != false) {
      output.writeBool(8, reverseStrand_);
    }
    if (type_ != com.google.genomics.v1.AnnotationType.ANNOTATION_TYPE_UNSPECIFIED.getNumber()) {
      output.writeEnum(9, type_);
    }
    if (valueCase_ == 10) {
      output.writeMessage(10, (com.google.genomics.v1.VariantAnnotation) value_);
    }
    if (valueCase_ == 11) {
      output.writeMessage(11, (com.google.genomics.v1.Transcript) value_);
    }
    com.google.protobuf.GeneratedMessageV3
      .serializeStringMapTo(
        output,
        internalGetInfo(),
        InfoDefaultEntryHolder.defaultEntry,
        12);
    getUnknownFields().writeTo(output);
  }

  @java.lang.Override
  public int getSerializedSize() {
    int size = memoizedSize;
    if (size != -1) return size;

    size = 0;
    if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(id_)) {
      size += com.google.protobuf.GeneratedMessageV3.computeStringSize(1, id_);
    }
    if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(annotationSetId_)) {
      size += com.google.protobuf.GeneratedMessageV3.computeStringSize(2, annotationSetId_);
    }
    if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(name_)) {
      size += com.google.protobuf.GeneratedMessageV3.computeStringSize(3, name_);
    }
    if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(referenceId_)) {
      size += com.google.protobuf.GeneratedMessageV3.computeStringSize(4, referenceId_);
    }
    if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(referenceName_)) {
      size += com.google.protobuf.GeneratedMessageV3.computeStringSize(5, referenceName_);
    }
    if (start_ != 0L) {
      size += com.google.protobuf.CodedOutputStream
        .computeInt64Size(6, start_);
    }
    if (end_ != 0L) {
      size += com.google.protobuf.CodedOutputStream
        .computeInt64Size(7, end_);
    }
    if (reverseStrand_ != false) {
      size += com.google.protobuf.CodedOutputStream
        .computeBoolSize(8, reverseStrand_);
    }
    if (type_ != com.google.genomics.v1.AnnotationType.ANNOTATION_TYPE_UNSPECIFIED.getNumber()) {
      size += com.google.protobuf.CodedOutputStream
        .computeEnumSize(9, type_);
    }
    if (valueCase_ == 10) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(10, (com.google.genomics.v1.VariantAnnotation) value_);
    }
    if (valueCase_ == 11) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(11, (com.google.genomics.v1.Transcript) value_);
    }
    for (java.util.Map.Entry<java.lang.String, com.google.protobuf.ListValue> entry
         : internalGetInfo().getMap().entrySet()) {
      com.google.protobuf.MapEntry<java.lang.String, com.google.protobuf.ListValue>
      info__ = InfoDefaultEntryHolder.defaultEntry.newBuilderForType()
          .setKey(entry.getKey())
          .setValue(entry.getValue())
          .build();
      size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(12, info__);
    }
    size += getUnknownFields().getSerializedSize();
    memoizedSize = size;
    return size;
  }

  @java.lang.Override
  public boolean equals(final java.lang.Object obj) {
    if (obj == this) {
     return true;
    }
    if (!(obj instanceof com.google.genomics.v1.Annotation)) {
      return super.equals(obj);
    }
    com.google.genomics.v1.Annotation other = (com.google.genomics.v1.Annotation) obj;

    if (!getId()
        .equals(other.getId())) return false;
    if (!getAnnotationSetId()
        .equals(other.getAnnotationSetId())) return false;
    if (!getName()
        .equals(other.getName())) return false;
    if (!getReferenceId()
        .equals(other.getReferenceId())) return false;
    if (!getReferenceName()
        .equals(other.getReferenceName())) return false;
    if (getStart()
        != other.getStart()) return false;
    if (getEnd()
        != other.getEnd()) return false;
    if (getReverseStrand()
        != other.getReverseStrand()) return false;
    if (type_ != other.type_) return false;
    if (!internalGetInfo().equals(
        other.internalGetInfo())) return false;
    if (!getValueCase().equals(other.getValueCase())) return false;
    switch (valueCase_) {
      case 10:
        if (!getVariant()
            .equals(other.getVariant())) return false;
        break;
      case 11:
        if (!getTranscript()
            .equals(other.getTranscript())) return false;
        break;
      case 0:
      default:
    }
    if (!getUnknownFields().equals(other.getUnknownFields())) return false;
    return true;
  }

  @java.lang.Override
  public int hashCode() {
    if (memoizedHashCode != 0) {
      return memoizedHashCode;
    }
    int hash = 41;
    hash = (19 * hash) + getDescriptor().hashCode();
    hash = (37 * hash) + ID_FIELD_NUMBER;
    hash = (53 * hash) + getId().hashCode();
    hash = (37 * hash) + ANNOTATION_SET_ID_FIELD_NUMBER;
    hash = (53 * hash) + getAnnotationSetId().hashCode();
    hash = (37 * hash) + NAME_FIELD_NUMBER;
    hash = (53 * hash) + getName().hashCode();
    hash = (37 * hash) + REFERENCE_ID_FIELD_NUMBER;
    hash = (53 * hash) + getReferenceId().hashCode();
    hash = (37 * hash) + REFERENCE_NAME_FIELD_NUMBER;
    hash = (53 * hash) + getReferenceName().hashCode();
    hash = (37 * hash) + START_FIELD_NUMBER;
    hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
        getStart());
    hash = (37 * hash) + END_FIELD_NUMBER;
    hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
        getEnd());
    hash = (37 * hash) + REVERSE_STRAND_FIELD_NUMBER;
    hash = (53 * hash) + com.google.protobuf.Internal.hashBoolean(
        getReverseStrand());
    hash = (37 * hash) + TYPE_FIELD_NUMBER;
    hash = (53 * hash) + type_;
    if (!internalGetInfo().getMap().isEmpty()) {
      hash = (37 * hash) + INFO_FIELD_NUMBER;
      hash = (53 * hash) + internalGetInfo().hashCode();
    }
    switch (valueCase_) {
      case 10:
        hash = (37 * hash) + VARIANT_FIELD_NUMBER;
        hash = (53 * hash) + getVariant().hashCode();
        break;
      case 11:
        hash = (37 * hash) + TRANSCRIPT_FIELD_NUMBER;
        hash = (53 * hash) + getTranscript().hashCode();
        break;
      case 0:
      default:
    }
    hash = (29 * hash) + getUnknownFields().hashCode();
    memoizedHashCode = hash;
    return hash;
  }

  public static com.google.genomics.v1.Annotation parseFrom(
      java.nio.ByteBuffer data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static com.google.genomics.v1.Annotation parseFrom(
      java.nio.ByteBuffer data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static com.google.genomics.v1.Annotation parseFrom(
      com.google.protobuf.ByteString data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static com.google.genomics.v1.Annotation parseFrom(
      com.google.protobuf.ByteString data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static com.google.genomics.v1.Annotation parseFrom(byte[] data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static com.google.genomics.v1.Annotation parseFrom(
      byte[] data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static com.google.genomics.v1.Annotation parseFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input);
  }
  public static com.google.genomics.v1.Annotation parseFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input, extensionRegistry);
  }
  public static com.google.genomics.v1.Annotation parseDelimitedFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseDelimitedWithIOException(PARSER, input);
  }
  public static com.google.genomics.v1.Annotation parseDelimitedFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
  }
  public static com.google.genomics.v1.Annotation parseFrom(
      com.google.protobuf.CodedInputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input);
  }
  public static com.google.genomics.v1.Annotation parseFrom(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input, extensionRegistry);
  }

  @java.lang.Override
  public Builder newBuilderForType() { return newBuilder(); }
  public static Builder newBuilder() {
    return DEFAULT_INSTANCE.toBuilder();
  }
  public static Builder newBuilder(com.google.genomics.v1.Annotation prototype) {
    return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
  }
  @java.lang.Override
  public Builder toBuilder() {
    return this == DEFAULT_INSTANCE
        ? new Builder() : new Builder().mergeFrom(this);
  }

  @java.lang.Override
  protected Builder newBuilderForType(
      com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
    Builder builder = new Builder(parent);
    return builder;
  }
  /**
   * <pre>
   * An annotation describes a region of reference genome. The value of an
   * annotation may be one of several canonical types, supplemented by arbitrary
   * info tags. An annotation is not inherently associated with a specific
   * sample or individual (though a client could choose to use annotations in
   * this way). Example canonical annotation types are `GENE` and
   * `VARIANT`.
   * </pre>
   *
   * Protobuf type {@code google.genomics.v1.Annotation}
   */
  public static final class Builder extends
      com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
      // @@protoc_insertion_point(builder_implements:google.genomics.v1.Annotation)
      com.google.genomics.v1.AnnotationOrBuilder {
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.google.genomics.v1.AnnotationsProto.internal_static_google_genomics_v1_Annotation_descriptor;
    }

    @SuppressWarnings({"rawtypes"})
    protected com.google.protobuf.MapField internalGetMapField(
        int number) {
      switch (number) {
        case 12:
          return internalGetInfo();
        default:
          throw new RuntimeException(
              "Invalid map field number: " + number);
      }
    }
    @SuppressWarnings({"rawtypes"})
    protected com.google.protobuf.MapField internalGetMutableMapField(
        int number) {
      switch (number) {
        case 12:
          return internalGetMutableInfo();
        default:
          throw new RuntimeException(
              "Invalid map field number: " + number);
      }
    }
    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.google.genomics.v1.AnnotationsProto.internal_static_google_genomics_v1_Annotation_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.google.genomics.v1.Annotation.class, com.google.genomics.v1.Annotation.Builder.class);
    }

    // Construct using com.google.genomics.v1.Annotation.newBuilder()
    private Builder() {

    }

    private Builder(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      super(parent);

    }
    @java.lang.Override
    public Builder clear() {
      super.clear();
      bitField0_ = 0;
      id_ = "";
      annotationSetId_ = "";
      name_ = "";
      referenceId_ = "";
      referenceName_ = "";
      start_ = 0L;
      end_ = 0L;
      reverseStrand_ = false;
      type_ = 0;
      if (variantBuilder_ != null) {
        variantBuilder_.clear();
      }
      if (transcriptBuilder_ != null) {
        transcriptBuilder_.clear();
      }
      internalGetMutableInfo().clear();
      valueCase_ = 0;
      value_ = null;
      return this;
    }

    @java.lang.Override
    public com.google.protobuf.Descriptors.Descriptor
        getDescriptorForType() {
      return com.google.genomics.v1.AnnotationsProto.internal_static_google_genomics_v1_Annotation_descriptor;
    }

    @java.lang.Override
    public com.google.genomics.v1.Annotation getDefaultInstanceForType() {
      return com.google.genomics.v1.Annotation.getDefaultInstance();
    }

    @java.lang.Override
    public com.google.genomics.v1.Annotation build() {
      com.google.genomics.v1.Annotation result = buildPartial();
      if (!result.isInitialized()) {
        throw newUninitializedMessageException(result);
      }
      return result;
    }

    @java.lang.Override
    public com.google.genomics.v1.Annotation buildPartial() {
      com.google.genomics.v1.Annotation result = new com.google.genomics.v1.Annotation(this);
      if (bitField0_ != 0) { buildPartial0(result); }
      buildPartialOneofs(result);
      onBuilt();
      return result;
    }

    private void buildPartial0(com.google.genomics.v1.Annotation result) {
      int from_bitField0_ = bitField0_;
      if (((from_bitField0_ & 0x00000001) != 0)) {
        result.id_ = id_;
      }
      if (((from_bitField0_ & 0x00000002) != 0)) {
        result.annotationSetId_ = annotationSetId_;
      }
      if (((from_bitField0_ & 0x00000004) != 0)) {
        result.name_ = name_;
      }
      if (((from_bitField0_ & 0x00000008) != 0)) {
        result.referenceId_ = referenceId_;
      }
      if (((from_bitField0_ & 0x00000010) != 0)) {
        result.referenceName_ = referenceName_;
      }
      if (((from_bitField0_ & 0x00000020) != 0)) {
        result.start_ = start_;
      }
      if (((from_bitField0_ & 0x00000040) != 0)) {
        result.end_ = end_;
      }
      if (((from_bitField0_ & 0x00000080) != 0)) {
        result.reverseStrand_ = reverseStrand_;
      }
      if (((from_bitField0_ & 0x00000100) != 0)) {
        result.type_ = type_;
      }
      if (((from_bitField0_ & 0x00000800) != 0)) {
        result.info_ = internalGetInfo();
        result.info_.makeImmutable();
      }
    }

    private void buildPartialOneofs(com.google.genomics.v1.Annotation result) {
      result.valueCase_ = valueCase_;
      result.value_ = this.value_;
      if (valueCase_ == 10 &&
          variantBuilder_ != null) {
        result.value_ = variantBuilder_.build();
      }
      if (valueCase_ == 11 &&
          transcriptBuilder_ != null) {
        result.value_ = transcriptBuilder_.build();
      }
    }

    @java.lang.Override
    public Builder clone() {
      return super.clone();
    }
    @java.lang.Override
    public Builder setField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        java.lang.Object value) {
      return super.setField(field, value);
    }
    @java.lang.Override
    public Builder clearField(
        com.google.protobuf.Descriptors.FieldDescriptor field) {
      return super.clearField(field);
    }
    @java.lang.Override
    public Builder clearOneof(
        com.google.protobuf.Descriptors.OneofDescriptor oneof) {
      return super.clearOneof(oneof);
    }
    @java.lang.Override
    public Builder setRepeatedField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        int index, java.lang.Object value) {
      return super.setRepeatedField(field, index, value);
    }
    @java.lang.Override
    public Builder addRepeatedField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        java.lang.Object value) {
      return super.addRepeatedField(field, value);
    }
    @java.lang.Override
    public Builder mergeFrom(com.google.protobuf.Message other) {
      if (other instanceof com.google.genomics.v1.Annotation) {
        return mergeFrom((com.google.genomics.v1.Annotation)other);
      } else {
        super.mergeFrom(other);
        return this;
      }
    }

    public Builder mergeFrom(com.google.genomics.v1.Annotation other) {
      if (other == com.google.genomics.v1.Annotation.getDefaultInstance()) return this;
      if (!other.getId().isEmpty()) {
        id_ = other.id_;
        bitField0_ |= 0x00000001;
        onChanged();
      }
      if (!other.getAnnotationSetId().isEmpty()) {
        annotationSetId_ = other.annotationSetId_;
        bitField0_ |= 0x00000002;
        onChanged();
      }
      if (!other.getName().isEmpty()) {
        name_ = other.name_;
        bitField0_ |= 0x00000004;
        onChanged();
      }
      if (!other.getReferenceId().isEmpty()) {
        referenceId_ = other.referenceId_;
        bitField0_ |= 0x00000008;
        onChanged();
      }
      if (!other.getReferenceName().isEmpty()) {
        referenceName_ = other.referenceName_;
        bitField0_ |= 0x00000010;
        onChanged();
      }
      if (other.getStart() != 0L) {
        setStart(other.getStart());
      }
      if (other.getEnd() != 0L) {
        setEnd(other.getEnd());
      }
      if (other.getReverseStrand() != false) {
        setReverseStrand(other.getReverseStrand());
      }
      if (other.type_ != 0) {
        setTypeValue(other.getTypeValue());
      }
      internalGetMutableInfo().mergeFrom(
          other.internalGetInfo());
      bitField0_ |= 0x00000800;
      switch (other.getValueCase()) {
        case VARIANT: {
          mergeVariant(other.getVariant());
          break;
        }
        case TRANSCRIPT: {
          mergeTranscript(other.getTranscript());
          break;
        }
        case VALUE_NOT_SET: {
          break;
        }
      }
      this.mergeUnknownFields(other.getUnknownFields());
      onChanged();
      return this;
    }

    @java.lang.Override
    public final boolean isInitialized() {
      return true;
    }

    @java.lang.Override
    public Builder mergeFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 10: {
              id_ = input.readStringRequireUtf8();
              bitField0_ |= 0x00000001;
              break;
            } // case 10
            case 18: {
              annotationSetId_ = input.readStringRequireUtf8();
              bitField0_ |= 0x00000002;
              break;
            } // case 18
            case 26: {
              name_ = input.readStringRequireUtf8();
              bitField0_ |= 0x00000004;
              break;
            } // case 26
            case 34: {
              referenceId_ = input.readStringRequireUtf8();
              bitField0_ |= 0x00000008;
              break;
            } // case 34
            case 42: {
              referenceName_ = input.readStringRequireUtf8();
              bitField0_ |= 0x00000010;
              break;
            } // case 42
            case 48: {
              start_ = input.readInt64();
              bitField0_ |= 0x00000020;
              break;
            } // case 48
            case 56: {
              end_ = input.readInt64();
              bitField0_ |= 0x00000040;
              break;
            } // case 56
            case 64: {
              reverseStrand_ = input.readBool();
              bitField0_ |= 0x00000080;
              break;
            } // case 64
            case 72: {
              type_ = input.readEnum();
              bitField0_ |= 0x00000100;
              break;
            } // case 72
            case 82: {
              input.readMessage(
                  getVariantFieldBuilder().getBuilder(),
                  extensionRegistry);
              valueCase_ = 10;
              break;
            } // case 82
            case 90: {
              input.readMessage(
                  getTranscriptFieldBuilder().getBuilder(),
                  extensionRegistry);
              valueCase_ = 11;
              break;
            } // case 90
            case 98: {
              com.google.protobuf.MapEntry<java.lang.String, com.google.protobuf.ListValue>
              info__ = input.readMessage(
                  InfoDefaultEntryHolder.defaultEntry.getParserForType(), extensionRegistry);
              internalGetMutableInfo().getMutableMap().put(
                  info__.getKey(), info__.getValue());
              bitField0_ |= 0x00000800;
              break;
            } // case 98
            default: {
              if (!super.parseUnknownField(input, extensionRegistry, tag)) {
                done = true; // was an endgroup tag
              }
              break;
            } // default:
          } // switch (tag)
        } // while (!done)
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.unwrapIOException();
      } finally {
        onChanged();
      } // finally
      return this;
    }
    private int valueCase_ = 0;
    private java.lang.Object value_;
    public ValueCase
        getValueCase() {
      return ValueCase.forNumber(
          valueCase_);
    }

    public Builder clearValue() {
      valueCase_ = 0;
      value_ = null;
      onChanged();
      return this;
    }

    private int bitField0_;

    private java.lang.Object id_ = "";
    /**
     * <pre>
     * The server-generated annotation ID, unique across all annotations.
     * </pre>
     *
     * <code>string id = 1;</code>
     * @return The id.
     */
    public java.lang.String getId() {
      java.lang.Object ref = id_;
      if (!(ref instanceof java.lang.String)) {
        com.google.protobuf.ByteString bs =
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        id_ = s;
        return s;
      } else {
        return (java.lang.String) ref;
      }
    }
    /**
     * <pre>
     * The server-generated annotation ID, unique across all annotations.
     * </pre>
     *
     * <code>string id = 1;</code>
     * @return The bytes for id.
     */
    public com.google.protobuf.ByteString
        getIdBytes() {
      java.lang.Object ref = id_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        id_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }
    /**
     * <pre>
     * The server-generated annotation ID, unique across all annotations.
     * </pre>
     *
     * <code>string id = 1;</code>
     * @param value The id to set.
     * @return This builder for chaining.
     */
    public Builder setId(
        java.lang.String value) {
      if (value == null) { throw new NullPointerException(); }
      id_ = value;
      bitField0_ |= 0x00000001;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * The server-generated annotation ID, unique across all annotations.
     * </pre>
     *
     * <code>string id = 1;</code>
     * @return This builder for chaining.
     */
    public Builder clearId() {
      id_ = getDefaultInstance().getId();
      bitField0_ = (bitField0_ & ~0x00000001);
      onChanged();
      return this;
    }
    /**
     * <pre>
     * The server-generated annotation ID, unique across all annotations.
     * </pre>
     *
     * <code>string id = 1;</code>
     * @param value The bytes for id to set.
     * @return This builder for chaining.
     */
    public Builder setIdBytes(
        com.google.protobuf.ByteString value) {
      if (value == null) { throw new NullPointerException(); }
      checkByteStringIsUtf8(value);
      id_ = value;
      bitField0_ |= 0x00000001;
      onChanged();
      return this;
    }

    private java.lang.Object annotationSetId_ = "";
    /**
     * <pre>
     * The annotation set to which this annotation belongs.
     * </pre>
     *
     * <code>string annotation_set_id = 2;</code>
     * @return The annotationSetId.
     */
    public java.lang.String getAnnotationSetId() {
      java.lang.Object ref = annotationSetId_;
      if (!(ref instanceof java.lang.String)) {
        com.google.protobuf.ByteString bs =
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        annotationSetId_ = s;
        return s;
      } else {
        return (java.lang.String) ref;
      }
    }
    /**
     * <pre>
     * The annotation set to which this annotation belongs.
     * </pre>
     *
     * <code>string annotation_set_id = 2;</code>
     * @return The bytes for annotationSetId.
     */
    public com.google.protobuf.ByteString
        getAnnotationSetIdBytes() {
      java.lang.Object ref = annotationSetId_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        annotationSetId_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }
    /**
     * <pre>
     * The annotation set to which this annotation belongs.
     * </pre>
     *
     * <code>string annotation_set_id = 2;</code>
     * @param value The annotationSetId to set.
     * @return This builder for chaining.
     */
    public Builder setAnnotationSetId(
        java.lang.String value) {
      if (value == null) { throw new NullPointerException(); }
      annotationSetId_ = value;
      bitField0_ |= 0x00000002;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * The annotation set to which this annotation belongs.
     * </pre>
     *
     * <code>string annotation_set_id = 2;</code>
     * @return This builder for chaining.
     */
    public Builder clearAnnotationSetId() {
      annotationSetId_ = getDefaultInstance().getAnnotationSetId();
      bitField0_ = (bitField0_ & ~0x00000002);
      onChanged();
      return this;
    }
    /**
     * <pre>
     * The annotation set to which this annotation belongs.
     * </pre>
     *
     * <code>string annotation_set_id = 2;</code>
     * @param value The bytes for annotationSetId to set.
     * @return This builder for chaining.
     */
    public Builder setAnnotationSetIdBytes(
        com.google.protobuf.ByteString value) {
      if (value == null) { throw new NullPointerException(); }
      checkByteStringIsUtf8(value);
      annotationSetId_ = value;
      bitField0_ |= 0x00000002;
      onChanged();
      return this;
    }

    private java.lang.Object name_ = "";
    /**
     * <pre>
     * The display name of this annotation.
     * </pre>
     *
     * <code>string name = 3;</code>
     * @return The name.
     */
    public java.lang.String getName() {
      java.lang.Object ref = name_;
      if (!(ref instanceof java.lang.String)) {
        com.google.protobuf.ByteString bs =
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        name_ = s;
        return s;
      } else {
        return (java.lang.String) ref;
      }
    }
    /**
     * <pre>
     * The display name of this annotation.
     * </pre>
     *
     * <code>string name = 3;</code>
     * @return The bytes for name.
     */
    public com.google.protobuf.ByteString
        getNameBytes() {
      java.lang.Object ref = name_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        name_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }
    /**
     * <pre>
     * The display name of this annotation.
     * </pre>
     *
     * <code>string name = 3;</code>
     * @param value The name to set.
     * @return This builder for chaining.
     */
    public Builder setName(
        java.lang.String value) {
      if (value == null) { throw new NullPointerException(); }
      name_ = value;
      bitField0_ |= 0x00000004;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * The display name of this annotation.
     * </pre>
     *
     * <code>string name = 3;</code>
     * @return This builder for chaining.
     */
    public Builder clearName() {
      name_ = getDefaultInstance().getName();
      bitField0_ = (bitField0_ & ~0x00000004);
      onChanged();
      return this;
    }
    /**
     * <pre>
     * The display name of this annotation.
     * </pre>
     *
     * <code>string name = 3;</code>
     * @param value The bytes for name to set.
     * @return This builder for chaining.
     */
    public Builder setNameBytes(
        com.google.protobuf.ByteString value) {
      if (value == null) { throw new NullPointerException(); }
      checkByteStringIsUtf8(value);
      name_ = value;
      bitField0_ |= 0x00000004;
      onChanged();
      return this;
    }

    private java.lang.Object referenceId_ = "";
    /**
     * <pre>
     * The ID of the Google Genomics reference associated with this range.
     * </pre>
     *
     * <code>string reference_id = 4;</code>
     * @return The referenceId.
     */
    public java.lang.String getReferenceId() {
      java.lang.Object ref = referenceId_;
      if (!(ref instanceof java.lang.String)) {
        com.google.protobuf.ByteString bs =
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        referenceId_ = s;
        return s;
      } else {
        return (java.lang.String) ref;
      }
    }
    /**
     * <pre>
     * The ID of the Google Genomics reference associated with this range.
     * </pre>
     *
     * <code>string reference_id = 4;</code>
     * @return The bytes for referenceId.
     */
    public com.google.protobuf.ByteString
        getReferenceIdBytes() {
      java.lang.Object ref = referenceId_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        referenceId_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }
    /**
     * <pre>
     * The ID of the Google Genomics reference associated with this range.
     * </pre>
     *
     * <code>string reference_id = 4;</code>
     * @param value The referenceId to set.
     * @return This builder for chaining.
     */
    public Builder setReferenceId(
        java.lang.String value) {
      if (value == null) { throw new NullPointerException(); }
      referenceId_ = value;
      bitField0_ |= 0x00000008;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * The ID of the Google Genomics reference associated with this range.
     * </pre>
     *
     * <code>string reference_id = 4;</code>
     * @return This builder for chaining.
     */
    public Builder clearReferenceId() {
      referenceId_ = getDefaultInstance().getReferenceId();
      bitField0_ = (bitField0_ & ~0x00000008);
      onChanged();
      return this;
    }
    /**
     * <pre>
     * The ID of the Google Genomics reference associated with this range.
     * </pre>
     *
     * <code>string reference_id = 4;</code>
     * @param value The bytes for referenceId to set.
     * @return This builder for chaining.
     */
    public Builder setReferenceIdBytes(
        com.google.protobuf.ByteString value) {
      if (value == null) { throw new NullPointerException(); }
      checkByteStringIsUtf8(value);
      referenceId_ = value;
      bitField0_ |= 0x00000008;
      onChanged();
      return this;
    }

    private java.lang.Object referenceName_ = "";
    /**
     * <pre>
     * The display name corresponding to the reference specified by
     * `referenceId`, for example `chr1`, `1`, or `chrX`.
     * </pre>
     *
     * <code>string reference_name = 5;</code>
     * @return The referenceName.
     */
    public java.lang.String getReferenceName() {
      java.lang.Object ref = referenceName_;
      if (!(ref instanceof java.lang.String)) {
        com.google.protobuf.ByteString bs =
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        referenceName_ = s;
        return s;
      } else {
        return (java.lang.String) ref;
      }
    }
    /**
     * <pre>
     * The display name corresponding to the reference specified by
     * `referenceId`, for example `chr1`, `1`, or `chrX`.
     * </pre>
     *
     * <code>string reference_name = 5;</code>
     * @return The bytes for referenceName.
     */
    public com.google.protobuf.ByteString
        getReferenceNameBytes() {
      java.lang.Object ref = referenceName_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        referenceName_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }
    /**
     * <pre>
     * The display name corresponding to the reference specified by
     * `referenceId`, for example `chr1`, `1`, or `chrX`.
     * </pre>
     *
     * <code>string reference_name = 5;</code>
     * @param value The referenceName to set.
     * @return This builder for chaining.
     */
    public Builder setReferenceName(
        java.lang.String value) {
      if (value == null) { throw new NullPointerException(); }
      referenceName_ = value;
      bitField0_ |= 0x00000010;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * The display name corresponding to the reference specified by
     * `referenceId`, for example `chr1`, `1`, or `chrX`.
     * </pre>
     *
     * <code>string reference_name = 5;</code>
     * @return This builder for chaining.
     */
    public Builder clearReferenceName() {
      referenceName_ = getDefaultInstance().getReferenceName();
      bitField0_ = (bitField0_ & ~0x00000010);
      onChanged();
      return this;
    }
    /**
     * <pre>
     * The display name corresponding to the reference specified by
     * `referenceId`, for example `chr1`, `1`, or `chrX`.
     * </pre>
     *
     * <code>string reference_name = 5;</code>
     * @param value The bytes for referenceName to set.
     * @return This builder for chaining.
     */
    public Builder setReferenceNameBytes(
        com.google.protobuf.ByteString value) {
      if (value == null) { throw new NullPointerException(); }
      checkByteStringIsUtf8(value);
      referenceName_ = value;
      bitField0_ |= 0x00000010;
      onChanged();
      return this;
    }

    private long start_ ;
    /**
     * <pre>
     * The start position of the range on the reference, 0-based inclusive.
     * </pre>
     *
     * <code>int64 start = 6;</code>
     * @return The start.
     */
    @java.lang.Override
    public long getStart() {
      return start_;
    }
    /**
     * <pre>
     * The start position of the range on the reference, 0-based inclusive.
     * </pre>
     *
     * <code>int64 start = 6;</code>
     * @param value The start to set.
     * @return This builder for chaining.
     */
    public Builder setStart(long value) {
      
      start_ = value;
      bitField0_ |= 0x00000020;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * The start position of the range on the reference, 0-based inclusive.
     * </pre>
     *
     * <code>int64 start = 6;</code>
     * @return This builder for chaining.
     */
    public Builder clearStart() {
      bitField0_ = (bitField0_ & ~0x00000020);
      start_ = 0L;
      onChanged();
      return this;
    }

    private long end_ ;
    /**
     * <pre>
     * The end position of the range on the reference, 0-based exclusive.
     * </pre>
     *
     * <code>int64 end = 7;</code>
     * @return The end.
     */
    @java.lang.Override
    public long getEnd() {
      return end_;
    }
    /**
     * <pre>
     * The end position of the range on the reference, 0-based exclusive.
     * </pre>
     *
     * <code>int64 end = 7;</code>
     * @param value The end to set.
     * @return This builder for chaining.
     */
    public Builder setEnd(long value) {
      
      end_ = value;
      bitField0_ |= 0x00000040;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * The end position of the range on the reference, 0-based exclusive.
     * </pre>
     *
     * <code>int64 end = 7;</code>
     * @return This builder for chaining.
     */
    public Builder clearEnd() {
      bitField0_ = (bitField0_ & ~0x00000040);
      end_ = 0L;
      onChanged();
      return this;
    }

    private boolean reverseStrand_ ;
    /**
     * <pre>
     * Whether this range refers to the reverse strand, as opposed to the forward
     * strand. Note that regardless of this field, the start/end position of the
     * range always refer to the forward strand.
     * </pre>
     *
     * <code>bool reverse_strand = 8;</code>
     * @return The reverseStrand.
     */
    @java.lang.Override
    public boolean getReverseStrand() {
      return reverseStrand_;
    }
    /**
     * <pre>
     * Whether this range refers to the reverse strand, as opposed to the forward
     * strand. Note that regardless of this field, the start/end position of the
     * range always refer to the forward strand.
     * </pre>
     *
     * <code>bool reverse_strand = 8;</code>
     * @param value The reverseStrand to set.
     * @return This builder for chaining.
     */
    public Builder setReverseStrand(boolean value) {
      
      reverseStrand_ = value;
      bitField0_ |= 0x00000080;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * Whether this range refers to the reverse strand, as opposed to the forward
     * strand. Note that regardless of this field, the start/end position of the
     * range always refer to the forward strand.
     * </pre>
     *
     * <code>bool reverse_strand = 8;</code>
     * @return This builder for chaining.
     */
    public Builder clearReverseStrand() {
      bitField0_ = (bitField0_ & ~0x00000080);
      reverseStrand_ = false;
      onChanged();
      return this;
    }

    private int type_ = 0;
    /**
     * <pre>
     * The data type for this annotation. Must match the containing annotation
     * set's type.
     * </pre>
     *
     * <code>.google.genomics.v1.AnnotationType type = 9;</code>
     * @return The enum numeric value on the wire for type.
     */
    @java.lang.Override public int getTypeValue() {
      return type_;
    }
    /**
     * <pre>
     * The data type for this annotation. Must match the containing annotation
     * set's type.
     * </pre>
     *
     * <code>.google.genomics.v1.AnnotationType type = 9;</code>
     * @param value The enum numeric value on the wire for type to set.
     * @return This builder for chaining.
     */
    public Builder setTypeValue(int value) {
      type_ = value;
      bitField0_ |= 0x00000100;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * The data type for this annotation. Must match the containing annotation
     * set's type.
     * </pre>
     *
     * <code>.google.genomics.v1.AnnotationType type = 9;</code>
     * @return The type.
     */
    @java.lang.Override
    public com.google.genomics.v1.AnnotationType getType() {
      com.google.genomics.v1.AnnotationType result = com.google.genomics.v1.AnnotationType.forNumber(type_);
      return result == null ? com.google.genomics.v1.AnnotationType.UNRECOGNIZED : result;
    }
    /**
     * <pre>
     * The data type for this annotation. Must match the containing annotation
     * set's type.
     * </pre>
     *
     * <code>.google.genomics.v1.AnnotationType type = 9;</code>
     * @param value The type to set.
     * @return This builder for chaining.
     */
    public Builder setType(com.google.genomics.v1.AnnotationType value) {
      if (value == null) {
        throw new NullPointerException();
      }
      bitField0_ |= 0x00000100;
      type_ = value.getNumber();
      onChanged();
      return this;
    }
    /**
     * <pre>
     * The data type for this annotation. Must match the containing annotation
     * set's type.
     * </pre>
     *
     * <code>.google.genomics.v1.AnnotationType type = 9;</code>
     * @return This builder for chaining.
     */
    public Builder clearType() {
      bitField0_ = (bitField0_ & ~0x00000100);
      type_ = 0;
      onChanged();
      return this;
    }

    private com.google.protobuf.SingleFieldBuilderV3<
        com.google.genomics.v1.VariantAnnotation, com.google.genomics.v1.VariantAnnotation.Builder, com.google.genomics.v1.VariantAnnotationOrBuilder> variantBuilder_;
    /**
     * <pre>
     * A variant annotation, which describes the effect of a variant on the
     * genome, the coding sequence, and/or higher level consequences at the
     * organism level e.g. pathogenicity. This field is only set for annotations
     * of type `VARIANT`.
     * </pre>
     *
     * <code>.google.genomics.v1.VariantAnnotation variant = 10;</code>
     * @return Whether the variant field is set.
     */
    @java.lang.Override
    public boolean hasVariant() {
      return valueCase_ == 10;
    }
    /**
     * <pre>
     * A variant annotation, which describes the effect of a variant on the
     * genome, the coding sequence, and/or higher level consequences at the
     * organism level e.g. pathogenicity. This field is only set for annotations
     * of type `VARIANT`.
     * </pre>
     *
     * <code>.google.genomics.v1.VariantAnnotation variant = 10;</code>
     * @return The variant.
     */
    @java.lang.Override
    public com.google.genomics.v1.VariantAnnotation getVariant() {
      if (variantBuilder_ == null) {
        if (valueCase_ == 10) {
          return (com.google.genomics.v1.VariantAnnotation) value_;
        }
        return com.google.genomics.v1.VariantAnnotation.getDefaultInstance();
      } else {
        if (valueCase_ == 10) {
          return variantBuilder_.getMessage();
        }
        return com.google.genomics.v1.VariantAnnotation.getDefaultInstance();
      }
    }
    /**
     * <pre>
     * A variant annotation, which describes the effect of a variant on the
     * genome, the coding sequence, and/or higher level consequences at the
     * organism level e.g. pathogenicity. This field is only set for annotations
     * of type `VARIANT`.
     * </pre>
     *
     * <code>.google.genomics.v1.VariantAnnotation variant = 10;</code>
     */
    public Builder setVariant(com.google.genomics.v1.VariantAnnotation value) {
      if (variantBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        value_ = value;
        onChanged();
      } else {
        variantBuilder_.setMessage(value);
      }
      valueCase_ = 10;
      return this;
    }
    /**
     * <pre>
     * A variant annotation, which describes the effect of a variant on the
     * genome, the coding sequence, and/or higher level consequences at the
     * organism level e.g. pathogenicity. This field is only set for annotations
     * of type `VARIANT`.
     * </pre>
     *
     * <code>.google.genomics.v1.VariantAnnotation variant = 10;</code>
     */
    public Builder setVariant(
        com.google.genomics.v1.VariantAnnotation.Builder builderForValue) {
      if (variantBuilder_ == null) {
        value_ = builderForValue.build();
        onChanged();
      } else {
        variantBuilder_.setMessage(builderForValue.build());
      }
      valueCase_ = 10;
      return this;
    }
    /**
     * <pre>
     * A variant annotation, which describes the effect of a variant on the
     * genome, the coding sequence, and/or higher level consequences at the
     * organism level e.g. pathogenicity. This field is only set for annotations
     * of type `VARIANT`.
     * </pre>
     *
     * <code>.google.genomics.v1.VariantAnnotation variant = 10;</code>
     */
    public Builder mergeVariant(com.google.genomics.v1.VariantAnnotation value) {
      if (variantBuilder_ == null) {
        if (valueCase_ == 10 &&
            value_ != com.google.genomics.v1.VariantAnnotation.getDefaultInstance()) {
          value_ = com.google.genomics.v1.VariantAnnotation.newBuilder((com.google.genomics.v1.VariantAnnotation) value_)
              .mergeFrom(value).buildPartial();
        } else {
          value_ = value;
        }
        onChanged();
      } else {
        if (valueCase_ == 10) {
          variantBuilder_.mergeFrom(value);
        } else {
          variantBuilder_.setMessage(value);
        }
      }
      valueCase_ = 10;
      return this;
    }
    /**
     * <pre>
     * A variant annotation, which describes the effect of a variant on the
     * genome, the coding sequence, and/or higher level consequences at the
     * organism level e.g. pathogenicity. This field is only set for annotations
     * of type `VARIANT`.
     * </pre>
     *
     * <code>.google.genomics.v1.VariantAnnotation variant = 10;</code>
     */
    public Builder clearVariant() {
      if (variantBuilder_ == null) {
        if (valueCase_ == 10) {
          valueCase_ = 0;
          value_ = null;
          onChanged();
        }
      } else {
        if (valueCase_ == 10) {
          valueCase_ = 0;
          value_ = null;
        }
        variantBuilder_.clear();
      }
      return this;
    }
    /**
     * <pre>
     * A variant annotation, which describes the effect of a variant on the
     * genome, the coding sequence, and/or higher level consequences at the
     * organism level e.g. pathogenicity. This field is only set for annotations
     * of type `VARIANT`.
     * </pre>
     *
     * <code>.google.genomics.v1.VariantAnnotation variant = 10;</code>
     */
    public com.google.genomics.v1.VariantAnnotation.Builder getVariantBuilder() {
      return getVariantFieldBuilder().getBuilder();
    }
    /**
     * <pre>
     * A variant annotation, which describes the effect of a variant on the
     * genome, the coding sequence, and/or higher level consequences at the
     * organism level e.g. pathogenicity. This field is only set for annotations
     * of type `VARIANT`.
     * </pre>
     *
     * <code>.google.genomics.v1.VariantAnnotation variant = 10;</code>
     */
    @java.lang.Override
    public com.google.genomics.v1.VariantAnnotationOrBuilder getVariantOrBuilder() {
      if ((valueCase_ == 10) && (variantBuilder_ != null)) {
        return variantBuilder_.getMessageOrBuilder();
      } else {
        if (valueCase_ == 10) {
          return (com.google.genomics.v1.VariantAnnotation) value_;
        }
        return com.google.genomics.v1.VariantAnnotation.getDefaultInstance();
      }
    }
    /**
     * <pre>
     * A variant annotation, which describes the effect of a variant on the
     * genome, the coding sequence, and/or higher level consequences at the
     * organism level e.g. pathogenicity. This field is only set for annotations
     * of type `VARIANT`.
     * </pre>
     *
     * <code>.google.genomics.v1.VariantAnnotation variant = 10;</code>
     */
    private com.google.protobuf.SingleFieldBuilderV3<
        com.google.genomics.v1.VariantAnnotation, com.google.genomics.v1.VariantAnnotation.Builder, com.google.genomics.v1.VariantAnnotationOrBuilder> 
        getVariantFieldBuilder() {
      if (variantBuilder_ == null) {
        if (!(valueCase_ == 10)) {
          value_ = com.google.genomics.v1.VariantAnnotation.getDefaultInstance();
        }
        variantBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
            com.google.genomics.v1.VariantAnnotation, com.google.genomics.v1.VariantAnnotation.Builder, com.google.genomics.v1.VariantAnnotationOrBuilder>(
                (com.google.genomics.v1.VariantAnnotation) value_,
                getParentForChildren(),
                isClean());
        value_ = null;
      }
      valueCase_ = 10;
      onChanged();
      return variantBuilder_;
    }

    private com.google.protobuf.SingleFieldBuilderV3<
        com.google.genomics.v1.Transcript, com.google.genomics.v1.Transcript.Builder, com.google.genomics.v1.TranscriptOrBuilder> transcriptBuilder_;
    /**
     * <pre>
     * A transcript value represents the assertion that a particular region of
     * the reference genome may be transcribed as RNA. An alternative splicing
     * pattern would be represented as a separate transcript object. This field
     * is only set for annotations of type `TRANSCRIPT`.
     * </pre>
     *
     * <code>.google.genomics.v1.Transcript transcript = 11;</code>
     * @return Whether the transcript field is set.
     */
    @java.lang.Override
    public boolean hasTranscript() {
      return valueCase_ == 11;
    }
    /**
     * <pre>
     * A transcript value represents the assertion that a particular region of
     * the reference genome may be transcribed as RNA. An alternative splicing
     * pattern would be represented as a separate transcript object. This field
     * is only set for annotations of type `TRANSCRIPT`.
     * </pre>
     *
     * <code>.google.genomics.v1.Transcript transcript = 11;</code>
     * @return The transcript.
     */
    @java.lang.Override
    public com.google.genomics.v1.Transcript getTranscript() {
      if (transcriptBuilder_ == null) {
        if (valueCase_ == 11) {
          return (com.google.genomics.v1.Transcript) value_;
        }
        return com.google.genomics.v1.Transcript.getDefaultInstance();
      } else {
        if (valueCase_ == 11) {
          return transcriptBuilder_.getMessage();
        }
        return com.google.genomics.v1.Transcript.getDefaultInstance();
      }
    }
    /**
     * <pre>
     * A transcript value represents the assertion that a particular region of
     * the reference genome may be transcribed as RNA. An alternative splicing
     * pattern would be represented as a separate transcript object. This field
     * is only set for annotations of type `TRANSCRIPT`.
     * </pre>
     *
     * <code>.google.genomics.v1.Transcript transcript = 11;</code>
     */
    public Builder setTranscript(com.google.genomics.v1.Transcript value) {
      if (transcriptBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        value_ = value;
        onChanged();
      } else {
        transcriptBuilder_.setMessage(value);
      }
      valueCase_ = 11;
      return this;
    }
    /**
     * <pre>
     * A transcript value represents the assertion that a particular region of
     * the reference genome may be transcribed as RNA. An alternative splicing
     * pattern would be represented as a separate transcript object. This field
     * is only set for annotations of type `TRANSCRIPT`.
     * </pre>
     *
     * <code>.google.genomics.v1.Transcript transcript = 11;</code>
     */
    public Builder setTranscript(
        com.google.genomics.v1.Transcript.Builder builderForValue) {
      if (transcriptBuilder_ == null) {
        value_ = builderForValue.build();
        onChanged();
      } else {
        transcriptBuilder_.setMessage(builderForValue.build());
      }
      valueCase_ = 11;
      return this;
    }
    /**
     * <pre>
     * A transcript value represents the assertion that a particular region of
     * the reference genome may be transcribed as RNA. An alternative splicing
     * pattern would be represented as a separate transcript object. This field
     * is only set for annotations of type `TRANSCRIPT`.
     * </pre>
     *
     * <code>.google.genomics.v1.Transcript transcript = 11;</code>
     */
    public Builder mergeTranscript(com.google.genomics.v1.Transcript value) {
      if (transcriptBuilder_ == null) {
        if (valueCase_ == 11 &&
            value_ != com.google.genomics.v1.Transcript.getDefaultInstance()) {
          value_ = com.google.genomics.v1.Transcript.newBuilder((com.google.genomics.v1.Transcript) value_)
              .mergeFrom(value).buildPartial();
        } else {
          value_ = value;
        }
        onChanged();
      } else {
        if (valueCase_ == 11) {
          transcriptBuilder_.mergeFrom(value);
        } else {
          transcriptBuilder_.setMessage(value);
        }
      }
      valueCase_ = 11;
      return this;
    }
    /**
     * <pre>
     * A transcript value represents the assertion that a particular region of
     * the reference genome may be transcribed as RNA. An alternative splicing
     * pattern would be represented as a separate transcript object. This field
     * is only set for annotations of type `TRANSCRIPT`.
     * </pre>
     *
     * <code>.google.genomics.v1.Transcript transcript = 11;</code>
     */
    public Builder clearTranscript() {
      if (transcriptBuilder_ == null) {
        if (valueCase_ == 11) {
          valueCase_ = 0;
          value_ = null;
          onChanged();
        }
      } else {
        if (valueCase_ == 11) {
          valueCase_ = 0;
          value_ = null;
        }
        transcriptBuilder_.clear();
      }
      return this;
    }
    /**
     * <pre>
     * A transcript value represents the assertion that a particular region of
     * the reference genome may be transcribed as RNA. An alternative splicing
     * pattern would be represented as a separate transcript object. This field
     * is only set for annotations of type `TRANSCRIPT`.
     * </pre>
     *
     * <code>.google.genomics.v1.Transcript transcript = 11;</code>
     */
    public com.google.genomics.v1.Transcript.Builder getTranscriptBuilder() {
      return getTranscriptFieldBuilder().getBuilder();
    }
    /**
     * <pre>
     * A transcript value represents the assertion that a particular region of
     * the reference genome may be transcribed as RNA. An alternative splicing
     * pattern would be represented as a separate transcript object. This field
     * is only set for annotations of type `TRANSCRIPT`.
     * </pre>
     *
     * <code>.google.genomics.v1.Transcript transcript = 11;</code>
     */
    @java.lang.Override
    public com.google.genomics.v1.TranscriptOrBuilder getTranscriptOrBuilder() {
      if ((valueCase_ == 11) && (transcriptBuilder_ != null)) {
        return transcriptBuilder_.getMessageOrBuilder();
      } else {
        if (valueCase_ == 11) {
          return (com.google.genomics.v1.Transcript) value_;
        }
        return com.google.genomics.v1.Transcript.getDefaultInstance();
      }
    }
    /**
     * <pre>
     * A transcript value represents the assertion that a particular region of
     * the reference genome may be transcribed as RNA. An alternative splicing
     * pattern would be represented as a separate transcript object. This field
     * is only set for annotations of type `TRANSCRIPT`.
     * </pre>
     *
     * <code>.google.genomics.v1.Transcript transcript = 11;</code>
     */
    private com.google.protobuf.SingleFieldBuilderV3<
        com.google.genomics.v1.Transcript, com.google.genomics.v1.Transcript.Builder, com.google.genomics.v1.TranscriptOrBuilder> 
        getTranscriptFieldBuilder() {
      if (transcriptBuilder_ == null) {
        if (!(valueCase_ == 11)) {
          value_ = com.google.genomics.v1.Transcript.getDefaultInstance();
        }
        transcriptBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
            com.google.genomics.v1.Transcript, com.google.genomics.v1.Transcript.Builder, com.google.genomics.v1.TranscriptOrBuilder>(
                (com.google.genomics.v1.Transcript) value_,
                getParentForChildren(),
                isClean());
        value_ = null;
      }
      valueCase_ = 11;
      onChanged();
      return transcriptBuilder_;
    }

    private com.google.protobuf.MapField<
        java.lang.String, com.google.protobuf.ListValue> info_;
    private com.google.protobuf.MapField<java.lang.String, com.google.protobuf.ListValue>
        internalGetInfo() {
      if (info_ == null) {
        return com.google.protobuf.MapField.emptyMapField(
            InfoDefaultEntryHolder.defaultEntry);
      }
      return info_;
    }
    private com.google.protobuf.MapField<java.lang.String, com.google.protobuf.ListValue>
        internalGetMutableInfo() {
      if (info_ == null) {
        info_ = com.google.protobuf.MapField.newMapField(
            InfoDefaultEntryHolder.defaultEntry);
      }
      if (!info_.isMutable()) {
        info_ = info_.copy();
      }
      bitField0_ |= 0x00000800;
      onChanged();
      return info_;
    }
    public int getInfoCount() {
      return internalGetInfo().getMap().size();
    }
    /**
     * <pre>
     * A map of additional read alignment information. This must be of the form
     * map&lt;string, string[]&gt; (string key mapping to a list of string values).
     * </pre>
     *
     * <code>map&lt;string, .google.protobuf.ListValue&gt; info = 12;</code>
     */
    @java.lang.Override
    public boolean containsInfo(
        java.lang.String key) {
      if (key == null) { throw new NullPointerException("map key"); }
      return internalGetInfo().getMap().containsKey(key);
    }
    /**
     * Use {@link #getInfoMap()} instead.
     */
    @java.lang.Override
    @java.lang.Deprecated
    public java.util.Map<java.lang.String, com.google.protobuf.ListValue> getInfo() {
      return getInfoMap();
    }
    /**
     * <pre>
     * A map of additional read alignment information. This must be of the form
     * map&lt;string, string[]&gt; (string key mapping to a list of string values).
     * </pre>
     *
     * <code>map&lt;string, .google.protobuf.ListValue&gt; info = 12;</code>
     */
    @java.lang.Override
    public java.util.Map<java.lang.String, com.google.protobuf.ListValue> getInfoMap() {
      return internalGetInfo().getMap();
    }
    /**
     * <pre>
     * A map of additional read alignment information. This must be of the form
     * map&lt;string, string[]&gt; (string key mapping to a list of string values).
     * </pre>
     *
     * <code>map&lt;string, .google.protobuf.ListValue&gt; info = 12;</code>
     */
    @java.lang.Override
    public /* nullable */
com.google.protobuf.ListValue getInfoOrDefault(
        java.lang.String key,
        /* nullable */
com.google.protobuf.ListValue defaultValue) {
      if (key == null) { throw new NullPointerException("map key"); }
      java.util.Map<java.lang.String, com.google.protobuf.ListValue> map =
          internalGetInfo().getMap();
      return map.containsKey(key) ? map.get(key) : defaultValue;
    }
    /**
     * <pre>
     * A map of additional read alignment information. This must be of the form
     * map&lt;string, string[]&gt; (string key mapping to a list of string values).
     * </pre>
     *
     * <code>map&lt;string, .google.protobuf.ListValue&gt; info = 12;</code>
     */
    @java.lang.Override
    public com.google.protobuf.ListValue getInfoOrThrow(
        java.lang.String key) {
      if (key == null) { throw new NullPointerException("map key"); }
      java.util.Map<java.lang.String, com.google.protobuf.ListValue> map =
          internalGetInfo().getMap();
      if (!map.containsKey(key)) {
        throw new java.lang.IllegalArgumentException();
      }
      return map.get(key);
    }
    public Builder clearInfo() {
      bitField0_ = (bitField0_ & ~0x00000800);
      internalGetMutableInfo().getMutableMap()
          .clear();
      return this;
    }
    /**
     * <pre>
     * A map of additional read alignment information. This must be of the form
     * map&lt;string, string[]&gt; (string key mapping to a list of string values).
     * </pre>
     *
     * <code>map&lt;string, .google.protobuf.ListValue&gt; info = 12;</code>
     */
    public Builder removeInfo(
        java.lang.String key) {
      if (key == null) { throw new NullPointerException("map key"); }
      internalGetMutableInfo().getMutableMap()
          .remove(key);
      return this;
    }
    /**
     * Use alternate mutation accessors instead.
     */
    @java.lang.Deprecated
    public java.util.Map<java.lang.String, com.google.protobuf.ListValue>
        getMutableInfo() {
      bitField0_ |= 0x00000800;
      return internalGetMutableInfo().getMutableMap();
    }
    /**
     * <pre>
     * A map of additional read alignment information. This must be of the form
     * map&lt;string, string[]&gt; (string key mapping to a list of string values).
     * </pre>
     *
     * <code>map&lt;string, .google.protobuf.ListValue&gt; info = 12;</code>
     */
    public Builder putInfo(
        java.lang.String key,
        com.google.protobuf.ListValue value) {
      if (key == null) { throw new NullPointerException("map key"); }
      if (value == null) { throw new NullPointerException("map value"); }
      internalGetMutableInfo().getMutableMap()
          .put(key, value);
      bitField0_ |= 0x00000800;
      return this;
    }
    /**
     * <pre>
     * A map of additional read alignment information. This must be of the form
     * map&lt;string, string[]&gt; (string key mapping to a list of string values).
     * </pre>
     *
     * <code>map&lt;string, .google.protobuf.ListValue&gt; info = 12;</code>
     */
    public Builder putAllInfo(
        java.util.Map<java.lang.String, com.google.protobuf.ListValue> values) {
      internalGetMutableInfo().getMutableMap()
          .putAll(values);
      bitField0_ |= 0x00000800;
      return this;
    }
    @java.lang.Override
    public final Builder setUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return super.setUnknownFields(unknownFields);
    }

    @java.lang.Override
    public final Builder mergeUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return super.mergeUnknownFields(unknownFields);
    }


    // @@protoc_insertion_point(builder_scope:google.genomics.v1.Annotation)
  }

  // @@protoc_insertion_point(class_scope:google.genomics.v1.Annotation)
  private static final com.google.genomics.v1.Annotation DEFAULT_INSTANCE;
  static {
    DEFAULT_INSTANCE = new com.google.genomics.v1.Annotation();
  }

  public static com.google.genomics.v1.Annotation getDefaultInstance() {
    return DEFAULT_INSTANCE;
  }

  private static final com.google.protobuf.Parser<Annotation>
      PARSER = new com.google.protobuf.AbstractParser<Annotation>() {
    @java.lang.Override
    public Annotation parsePartialFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      Builder builder = newBuilder();
      try {
        builder.mergeFrom(input, extensionRegistry);
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(builder.buildPartial());
      } catch (com.google.protobuf.UninitializedMessageException e) {
        throw e.asInvalidProtocolBufferException().setUnfinishedMessage(builder.buildPartial());
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(e)
            .setUnfinishedMessage(builder.buildPartial());
      }
      return builder.buildPartial();
    }
  };

  public static com.google.protobuf.Parser<Annotation> parser() {
    return PARSER;
  }

  @java.lang.Override
  public com.google.protobuf.Parser<Annotation> getParserForType() {
    return PARSER;
  }

  @java.lang.Override
  public com.google.genomics.v1.Annotation getDefaultInstanceForType() {
    return DEFAULT_INSTANCE;
  }

}

