// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: google/genomics/v1/reads.proto

package com.google.genomics.v1;

public interface ExportReadGroupSetRequestOrBuilder extends
    // @@protoc_insertion_point(interface_extends:google.genomics.v1.ExportReadGroupSetRequest)
    com.google.protobuf.MessageOrBuilder {

  /**
   * <pre>
   * Required. The Google Cloud project ID that owns this
   * export. The caller must have WRITE access to this project.
   * </pre>
   *
   * <code>string project_id = 1;</code>
   * @return The projectId.
   */
  java.lang.String getProjectId();
  /**
   * <pre>
   * Required. The Google Cloud project ID that owns this
   * export. The caller must have WRITE access to this project.
   * </pre>
   *
   * <code>string project_id = 1;</code>
   * @return The bytes for projectId.
   */
  com.google.protobuf.ByteString
      getProjectIdBytes();

  /**
   * <pre>
   * Required. A Google Cloud Storage URI for the exported BAM file.
   * The currently authenticated user must have write access to the new file.
   * An error will be returned if the URI already contains data.
   * </pre>
   *
   * <code>string export_uri = 2;</code>
   * @return The exportUri.
   */
  java.lang.String getExportUri();
  /**
   * <pre>
   * Required. A Google Cloud Storage URI for the exported BAM file.
   * The currently authenticated user must have write access to the new file.
   * An error will be returned if the URI already contains data.
   * </pre>
   *
   * <code>string export_uri = 2;</code>
   * @return The bytes for exportUri.
   */
  com.google.protobuf.ByteString
      getExportUriBytes();

  /**
   * <pre>
   * Required. The ID of the read group set to export. The caller must have
   * READ access to this read group set.
   * </pre>
   *
   * <code>string read_group_set_id = 3;</code>
   * @return The readGroupSetId.
   */
  java.lang.String getReadGroupSetId();
  /**
   * <pre>
   * Required. The ID of the read group set to export. The caller must have
   * READ access to this read group set.
   * </pre>
   *
   * <code>string read_group_set_id = 3;</code>
   * @return The bytes for readGroupSetId.
   */
  com.google.protobuf.ByteString
      getReadGroupSetIdBytes();

  /**
   * <pre>
   * The reference names to export. If this is not specified, all reference
   * sequences, including unmapped reads, are exported.
   * Use `*` to export only unmapped reads.
   * </pre>
   *
   * <code>repeated string reference_names = 4;</code>
   * @return A list containing the referenceNames.
   */
  java.util.List<java.lang.String>
      getReferenceNamesList();
  /**
   * <pre>
   * The reference names to export. If this is not specified, all reference
   * sequences, including unmapped reads, are exported.
   * Use `*` to export only unmapped reads.
   * </pre>
   *
   * <code>repeated string reference_names = 4;</code>
   * @return The count of referenceNames.
   */
  int getReferenceNamesCount();
  /**
   * <pre>
   * The reference names to export. If this is not specified, all reference
   * sequences, including unmapped reads, are exported.
   * Use `*` to export only unmapped reads.
   * </pre>
   *
   * <code>repeated string reference_names = 4;</code>
   * @param index The index of the element to return.
   * @return The referenceNames at the given index.
   */
  java.lang.String getReferenceNames(int index);
  /**
   * <pre>
   * The reference names to export. If this is not specified, all reference
   * sequences, including unmapped reads, are exported.
   * Use `*` to export only unmapped reads.
   * </pre>
   *
   * <code>repeated string reference_names = 4;</code>
   * @param index The index of the value to return.
   * @return The bytes of the referenceNames at the given index.
   */
  com.google.protobuf.ByteString
      getReferenceNamesBytes(int index);
}
