// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: google/genomics/v1/variants.proto

package com.google.genomics.v1;

public interface UpdateVariantSetRequestOrBuilder extends
    // @@protoc_insertion_point(interface_extends:google.genomics.v1.UpdateVariantSetRequest)
    com.google.protobuf.MessageOrBuilder {

  /**
   * <pre>
   * The ID of the variant to be updated (must already exist).
   * </pre>
   *
   * <code>string variant_set_id = 1;</code>
   * @return The variantSetId.
   */
  java.lang.String getVariantSetId();
  /**
   * <pre>
   * The ID of the variant to be updated (must already exist).
   * </pre>
   *
   * <code>string variant_set_id = 1;</code>
   * @return The bytes for variantSetId.
   */
  com.google.protobuf.ByteString
      getVariantSetIdBytes();

  /**
   * <pre>
   * The new variant data. Only the variant_set.metadata will be considered
   * for update.
   * </pre>
   *
   * <code>.google.genomics.v1.VariantSet variant_set = 2;</code>
   * @return Whether the variantSet field is set.
   */
  boolean hasVariantSet();
  /**
   * <pre>
   * The new variant data. Only the variant_set.metadata will be considered
   * for update.
   * </pre>
   *
   * <code>.google.genomics.v1.VariantSet variant_set = 2;</code>
   * @return The variantSet.
   */
  com.google.genomics.v1.VariantSet getVariantSet();
  /**
   * <pre>
   * The new variant data. Only the variant_set.metadata will be considered
   * for update.
   * </pre>
   *
   * <code>.google.genomics.v1.VariantSet variant_set = 2;</code>
   */
  com.google.genomics.v1.VariantSetOrBuilder getVariantSetOrBuilder();

  /**
   * <pre>
   * An optional mask specifying which fields to update. Supported fields:
   * * [metadata][google.genomics.v1.VariantSet.metadata].
   * * [name][google.genomics.v1.VariantSet.name].
   * * [description][google.genomics.v1.VariantSet.description].
   * Leaving `updateMask` unset is equivalent to specifying all mutable
   * fields.
   * </pre>
   *
   * <code>.google.protobuf.FieldMask update_mask = 5;</code>
   * @return Whether the updateMask field is set.
   */
  boolean hasUpdateMask();
  /**
   * <pre>
   * An optional mask specifying which fields to update. Supported fields:
   * * [metadata][google.genomics.v1.VariantSet.metadata].
   * * [name][google.genomics.v1.VariantSet.name].
   * * [description][google.genomics.v1.VariantSet.description].
   * Leaving `updateMask` unset is equivalent to specifying all mutable
   * fields.
   * </pre>
   *
   * <code>.google.protobuf.FieldMask update_mask = 5;</code>
   * @return The updateMask.
   */
  com.google.protobuf.FieldMask getUpdateMask();
  /**
   * <pre>
   * An optional mask specifying which fields to update. Supported fields:
   * * [metadata][google.genomics.v1.VariantSet.metadata].
   * * [name][google.genomics.v1.VariantSet.name].
   * * [description][google.genomics.v1.VariantSet.description].
   * Leaving `updateMask` unset is equivalent to specifying all mutable
   * fields.
   * </pre>
   *
   * <code>.google.protobuf.FieldMask update_mask = 5;</code>
   */
  com.google.protobuf.FieldMaskOrBuilder getUpdateMaskOrBuilder();
}
