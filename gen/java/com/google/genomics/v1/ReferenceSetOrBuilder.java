// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: google/genomics/v1/references.proto

package com.google.genomics.v1;

public interface ReferenceSetOrBuilder extends
    // @@protoc_insertion_point(interface_extends:google.genomics.v1.ReferenceSet)
    com.google.protobuf.MessageOrBuilder {

  /**
   * <pre>
   * The server-generated reference set ID, unique across all reference sets.
   * </pre>
   *
   * <code>string id = 1;</code>
   * @return The id.
   */
  java.lang.String getId();
  /**
   * <pre>
   * The server-generated reference set ID, unique across all reference sets.
   * </pre>
   *
   * <code>string id = 1;</code>
   * @return The bytes for id.
   */
  com.google.protobuf.ByteString
      getIdBytes();

  /**
   * <pre>
   * The IDs of the reference objects that are part of this set.
   * `Reference.md5checksum` must be unique within this set.
   * </pre>
   *
   * <code>repeated string reference_ids = 2;</code>
   * @return A list containing the referenceIds.
   */
  java.util.List<java.lang.String>
      getReferenceIdsList();
  /**
   * <pre>
   * The IDs of the reference objects that are part of this set.
   * `Reference.md5checksum` must be unique within this set.
   * </pre>
   *
   * <code>repeated string reference_ids = 2;</code>
   * @return The count of referenceIds.
   */
  int getReferenceIdsCount();
  /**
   * <pre>
   * The IDs of the reference objects that are part of this set.
   * `Reference.md5checksum` must be unique within this set.
   * </pre>
   *
   * <code>repeated string reference_ids = 2;</code>
   * @param index The index of the element to return.
   * @return The referenceIds at the given index.
   */
  java.lang.String getReferenceIds(int index);
  /**
   * <pre>
   * The IDs of the reference objects that are part of this set.
   * `Reference.md5checksum` must be unique within this set.
   * </pre>
   *
   * <code>repeated string reference_ids = 2;</code>
   * @param index The index of the value to return.
   * @return The bytes of the referenceIds at the given index.
   */
  com.google.protobuf.ByteString
      getReferenceIdsBytes(int index);

  /**
   * <pre>
   * Order-independent MD5 checksum which identifies this reference set. The
   * checksum is computed by sorting all lower case hexidecimal string
   * `reference.md5checksum` (for all reference in this set) in
   * ascending lexicographic order, concatenating, and taking the MD5 of that
   * value. The resulting value is represented in lower case hexadecimal format.
   * </pre>
   *
   * <code>string md5checksum = 3;</code>
   * @return The md5checksum.
   */
  java.lang.String getMd5Checksum();
  /**
   * <pre>
   * Order-independent MD5 checksum which identifies this reference set. The
   * checksum is computed by sorting all lower case hexidecimal string
   * `reference.md5checksum` (for all reference in this set) in
   * ascending lexicographic order, concatenating, and taking the MD5 of that
   * value. The resulting value is represented in lower case hexadecimal format.
   * </pre>
   *
   * <code>string md5checksum = 3;</code>
   * @return The bytes for md5checksum.
   */
  com.google.protobuf.ByteString
      getMd5ChecksumBytes();

  /**
   * <pre>
   * ID from http://www.ncbi.nlm.nih.gov/taxonomy (for example, 9606 for human)
   * indicating the species which this reference set is intended to model. Note
   * that contained references may specify a different `ncbiTaxonId`, as
   * assemblies may contain reference sequences which do not belong to the
   * modeled species, for example EBV in a human reference genome.
   * </pre>
   *
   * <code>int32 ncbi_taxon_id = 4;</code>
   * @return The ncbiTaxonId.
   */
  int getNcbiTaxonId();

  /**
   * <pre>
   * Free text description of this reference set.
   * </pre>
   *
   * <code>string description = 5;</code>
   * @return The description.
   */
  java.lang.String getDescription();
  /**
   * <pre>
   * Free text description of this reference set.
   * </pre>
   *
   * <code>string description = 5;</code>
   * @return The bytes for description.
   */
  com.google.protobuf.ByteString
      getDescriptionBytes();

  /**
   * <pre>
   * Public id of this reference set, such as `GRCh37`.
   * </pre>
   *
   * <code>string assembly_id = 6;</code>
   * @return The assemblyId.
   */
  java.lang.String getAssemblyId();
  /**
   * <pre>
   * Public id of this reference set, such as `GRCh37`.
   * </pre>
   *
   * <code>string assembly_id = 6;</code>
   * @return The bytes for assemblyId.
   */
  com.google.protobuf.ByteString
      getAssemblyIdBytes();

  /**
   * <pre>
   * The URI from which the references were obtained.
   * </pre>
   *
   * <code>string source_uri = 7;</code>
   * @return The sourceUri.
   */
  java.lang.String getSourceUri();
  /**
   * <pre>
   * The URI from which the references were obtained.
   * </pre>
   *
   * <code>string source_uri = 7;</code>
   * @return The bytes for sourceUri.
   */
  com.google.protobuf.ByteString
      getSourceUriBytes();

  /**
   * <pre>
   * All known corresponding accession IDs in INSDC (GenBank/ENA/DDBJ) ideally
   * with a version number, for example `NC_000001.11`.
   * </pre>
   *
   * <code>repeated string source_accessions = 8;</code>
   * @return A list containing the sourceAccessions.
   */
  java.util.List<java.lang.String>
      getSourceAccessionsList();
  /**
   * <pre>
   * All known corresponding accession IDs in INSDC (GenBank/ENA/DDBJ) ideally
   * with a version number, for example `NC_000001.11`.
   * </pre>
   *
   * <code>repeated string source_accessions = 8;</code>
   * @return The count of sourceAccessions.
   */
  int getSourceAccessionsCount();
  /**
   * <pre>
   * All known corresponding accession IDs in INSDC (GenBank/ENA/DDBJ) ideally
   * with a version number, for example `NC_000001.11`.
   * </pre>
   *
   * <code>repeated string source_accessions = 8;</code>
   * @param index The index of the element to return.
   * @return The sourceAccessions at the given index.
   */
  java.lang.String getSourceAccessions(int index);
  /**
   * <pre>
   * All known corresponding accession IDs in INSDC (GenBank/ENA/DDBJ) ideally
   * with a version number, for example `NC_000001.11`.
   * </pre>
   *
   * <code>repeated string source_accessions = 8;</code>
   * @param index The index of the value to return.
   * @return The bytes of the sourceAccessions at the given index.
   */
  com.google.protobuf.ByteString
      getSourceAccessionsBytes(int index);
}
