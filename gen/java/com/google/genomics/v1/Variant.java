// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: google/genomics/v1/variants.proto

package com.google.genomics.v1;

/**
 * <pre>
 * A variant represents a change in DNA sequence relative to a reference
 * sequence. For example, a variant could represent a SNP or an insertion.
 * Variants belong to a variant set.
 * For more genomics resource definitions, see [Fundamentals of Google
 * Genomics](https://cloud.google.com/genomics/fundamentals-of-google-genomics)
 * Each of the calls on a variant represent a determination of genotype with
 * respect to that variant. For example, a call might assign probability of 0.32
 * to the occurrence of a SNP named rs1234 in a sample named NA12345. A call
 * belongs to a call set, which contains related calls typically from one
 * sample.
 * </pre>
 *
 * Protobuf type {@code google.genomics.v1.Variant}
 */
public final class Variant extends
    com.google.protobuf.GeneratedMessageV3 implements
    // @@protoc_insertion_point(message_implements:google.genomics.v1.Variant)
    VariantOrBuilder {
private static final long serialVersionUID = 0L;
  // Use Variant.newBuilder() to construct.
  private Variant(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
    super(builder);
  }
  private Variant() {
    variantSetId_ = "";
    id_ = "";
    names_ = com.google.protobuf.LazyStringArrayList.EMPTY;
    referenceName_ = "";
    referenceBases_ = "";
    alternateBases_ = com.google.protobuf.LazyStringArrayList.EMPTY;
    filter_ = com.google.protobuf.LazyStringArrayList.EMPTY;
    calls_ = java.util.Collections.emptyList();
  }

  @java.lang.Override
  @SuppressWarnings({"unused"})
  protected java.lang.Object newInstance(
      UnusedPrivateParameter unused) {
    return new Variant();
  }

  @java.lang.Override
  public final com.google.protobuf.UnknownFieldSet
  getUnknownFields() {
    return this.unknownFields;
  }
  public static final com.google.protobuf.Descriptors.Descriptor
      getDescriptor() {
    return com.google.genomics.v1.VariantsProto.internal_static_google_genomics_v1_Variant_descriptor;
  }

  @SuppressWarnings({"rawtypes"})
  @java.lang.Override
  protected com.google.protobuf.MapField internalGetMapField(
      int number) {
    switch (number) {
      case 10:
        return internalGetInfo();
      default:
        throw new RuntimeException(
            "Invalid map field number: " + number);
    }
  }
  @java.lang.Override
  protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internalGetFieldAccessorTable() {
    return com.google.genomics.v1.VariantsProto.internal_static_google_genomics_v1_Variant_fieldAccessorTable
        .ensureFieldAccessorsInitialized(
            com.google.genomics.v1.Variant.class, com.google.genomics.v1.Variant.Builder.class);
  }

  public static final int VARIANT_SET_ID_FIELD_NUMBER = 15;
  @SuppressWarnings("serial")
  private volatile java.lang.Object variantSetId_ = "";
  /**
   * <pre>
   * The ID of the variant set this variant belongs to.
   * </pre>
   *
   * <code>string variant_set_id = 15;</code>
   * @return The variantSetId.
   */
  @java.lang.Override
  public java.lang.String getVariantSetId() {
    java.lang.Object ref = variantSetId_;
    if (ref instanceof java.lang.String) {
      return (java.lang.String) ref;
    } else {
      com.google.protobuf.ByteString bs = 
          (com.google.protobuf.ByteString) ref;
      java.lang.String s = bs.toStringUtf8();
      variantSetId_ = s;
      return s;
    }
  }
  /**
   * <pre>
   * The ID of the variant set this variant belongs to.
   * </pre>
   *
   * <code>string variant_set_id = 15;</code>
   * @return The bytes for variantSetId.
   */
  @java.lang.Override
  public com.google.protobuf.ByteString
      getVariantSetIdBytes() {
    java.lang.Object ref = variantSetId_;
    if (ref instanceof java.lang.String) {
      com.google.protobuf.ByteString b = 
          com.google.protobuf.ByteString.copyFromUtf8(
              (java.lang.String) ref);
      variantSetId_ = b;
      return b;
    } else {
      return (com.google.protobuf.ByteString) ref;
    }
  }

  public static final int ID_FIELD_NUMBER = 2;
  @SuppressWarnings("serial")
  private volatile java.lang.Object id_ = "";
  /**
   * <pre>
   * The server-generated variant ID, unique across all variants.
   * </pre>
   *
   * <code>string id = 2;</code>
   * @return The id.
   */
  @java.lang.Override
  public java.lang.String getId() {
    java.lang.Object ref = id_;
    if (ref instanceof java.lang.String) {
      return (java.lang.String) ref;
    } else {
      com.google.protobuf.ByteString bs = 
          (com.google.protobuf.ByteString) ref;
      java.lang.String s = bs.toStringUtf8();
      id_ = s;
      return s;
    }
  }
  /**
   * <pre>
   * The server-generated variant ID, unique across all variants.
   * </pre>
   *
   * <code>string id = 2;</code>
   * @return The bytes for id.
   */
  @java.lang.Override
  public com.google.protobuf.ByteString
      getIdBytes() {
    java.lang.Object ref = id_;
    if (ref instanceof java.lang.String) {
      com.google.protobuf.ByteString b = 
          com.google.protobuf.ByteString.copyFromUtf8(
              (java.lang.String) ref);
      id_ = b;
      return b;
    } else {
      return (com.google.protobuf.ByteString) ref;
    }
  }

  public static final int NAMES_FIELD_NUMBER = 3;
  @SuppressWarnings("serial")
  private com.google.protobuf.LazyStringList names_;
  /**
   * <pre>
   * Names for the variant, for example a RefSNP ID.
   * </pre>
   *
   * <code>repeated string names = 3;</code>
   * @return A list containing the names.
   */
  public com.google.protobuf.ProtocolStringList
      getNamesList() {
    return names_;
  }
  /**
   * <pre>
   * Names for the variant, for example a RefSNP ID.
   * </pre>
   *
   * <code>repeated string names = 3;</code>
   * @return The count of names.
   */
  public int getNamesCount() {
    return names_.size();
  }
  /**
   * <pre>
   * Names for the variant, for example a RefSNP ID.
   * </pre>
   *
   * <code>repeated string names = 3;</code>
   * @param index The index of the element to return.
   * @return The names at the given index.
   */
  public java.lang.String getNames(int index) {
    return names_.get(index);
  }
  /**
   * <pre>
   * Names for the variant, for example a RefSNP ID.
   * </pre>
   *
   * <code>repeated string names = 3;</code>
   * @param index The index of the value to return.
   * @return The bytes of the names at the given index.
   */
  public com.google.protobuf.ByteString
      getNamesBytes(int index) {
    return names_.getByteString(index);
  }

  public static final int CREATED_FIELD_NUMBER = 12;
  private long created_ = 0L;
  /**
   * <pre>
   * The date this variant was created, in milliseconds from the epoch.
   * </pre>
   *
   * <code>int64 created = 12;</code>
   * @return The created.
   */
  @java.lang.Override
  public long getCreated() {
    return created_;
  }

  public static final int REFERENCE_NAME_FIELD_NUMBER = 14;
  @SuppressWarnings("serial")
  private volatile java.lang.Object referenceName_ = "";
  /**
   * <pre>
   * The reference on which this variant occurs.
   * (such as `chr20` or `X`)
   * </pre>
   *
   * <code>string reference_name = 14;</code>
   * @return The referenceName.
   */
  @java.lang.Override
  public java.lang.String getReferenceName() {
    java.lang.Object ref = referenceName_;
    if (ref instanceof java.lang.String) {
      return (java.lang.String) ref;
    } else {
      com.google.protobuf.ByteString bs = 
          (com.google.protobuf.ByteString) ref;
      java.lang.String s = bs.toStringUtf8();
      referenceName_ = s;
      return s;
    }
  }
  /**
   * <pre>
   * The reference on which this variant occurs.
   * (such as `chr20` or `X`)
   * </pre>
   *
   * <code>string reference_name = 14;</code>
   * @return The bytes for referenceName.
   */
  @java.lang.Override
  public com.google.protobuf.ByteString
      getReferenceNameBytes() {
    java.lang.Object ref = referenceName_;
    if (ref instanceof java.lang.String) {
      com.google.protobuf.ByteString b = 
          com.google.protobuf.ByteString.copyFromUtf8(
              (java.lang.String) ref);
      referenceName_ = b;
      return b;
    } else {
      return (com.google.protobuf.ByteString) ref;
    }
  }

  public static final int START_FIELD_NUMBER = 16;
  private long start_ = 0L;
  /**
   * <pre>
   * The position at which this variant occurs (0-based).
   * This corresponds to the first base of the string of reference bases.
   * </pre>
   *
   * <code>int64 start = 16;</code>
   * @return The start.
   */
  @java.lang.Override
  public long getStart() {
    return start_;
  }

  public static final int END_FIELD_NUMBER = 13;
  private long end_ = 0L;
  /**
   * <pre>
   * The end position (0-based) of this variant. This corresponds to the first
   * base after the last base in the reference allele. So, the length of
   * the reference allele is (end - start). This is useful for variants
   * that don't explicitly give alternate bases, for example large deletions.
   * </pre>
   *
   * <code>int64 end = 13;</code>
   * @return The end.
   */
  @java.lang.Override
  public long getEnd() {
    return end_;
  }

  public static final int REFERENCE_BASES_FIELD_NUMBER = 6;
  @SuppressWarnings("serial")
  private volatile java.lang.Object referenceBases_ = "";
  /**
   * <pre>
   * The reference bases for this variant. They start at the given
   * position.
   * </pre>
   *
   * <code>string reference_bases = 6;</code>
   * @return The referenceBases.
   */
  @java.lang.Override
  public java.lang.String getReferenceBases() {
    java.lang.Object ref = referenceBases_;
    if (ref instanceof java.lang.String) {
      return (java.lang.String) ref;
    } else {
      com.google.protobuf.ByteString bs = 
          (com.google.protobuf.ByteString) ref;
      java.lang.String s = bs.toStringUtf8();
      referenceBases_ = s;
      return s;
    }
  }
  /**
   * <pre>
   * The reference bases for this variant. They start at the given
   * position.
   * </pre>
   *
   * <code>string reference_bases = 6;</code>
   * @return The bytes for referenceBases.
   */
  @java.lang.Override
  public com.google.protobuf.ByteString
      getReferenceBasesBytes() {
    java.lang.Object ref = referenceBases_;
    if (ref instanceof java.lang.String) {
      com.google.protobuf.ByteString b = 
          com.google.protobuf.ByteString.copyFromUtf8(
              (java.lang.String) ref);
      referenceBases_ = b;
      return b;
    } else {
      return (com.google.protobuf.ByteString) ref;
    }
  }

  public static final int ALTERNATE_BASES_FIELD_NUMBER = 7;
  @SuppressWarnings("serial")
  private com.google.protobuf.LazyStringList alternateBases_;
  /**
   * <pre>
   * The bases that appear instead of the reference bases.
   * </pre>
   *
   * <code>repeated string alternate_bases = 7;</code>
   * @return A list containing the alternateBases.
   */
  public com.google.protobuf.ProtocolStringList
      getAlternateBasesList() {
    return alternateBases_;
  }
  /**
   * <pre>
   * The bases that appear instead of the reference bases.
   * </pre>
   *
   * <code>repeated string alternate_bases = 7;</code>
   * @return The count of alternateBases.
   */
  public int getAlternateBasesCount() {
    return alternateBases_.size();
  }
  /**
   * <pre>
   * The bases that appear instead of the reference bases.
   * </pre>
   *
   * <code>repeated string alternate_bases = 7;</code>
   * @param index The index of the element to return.
   * @return The alternateBases at the given index.
   */
  public java.lang.String getAlternateBases(int index) {
    return alternateBases_.get(index);
  }
  /**
   * <pre>
   * The bases that appear instead of the reference bases.
   * </pre>
   *
   * <code>repeated string alternate_bases = 7;</code>
   * @param index The index of the value to return.
   * @return The bytes of the alternateBases at the given index.
   */
  public com.google.protobuf.ByteString
      getAlternateBasesBytes(int index) {
    return alternateBases_.getByteString(index);
  }

  public static final int QUALITY_FIELD_NUMBER = 8;
  private double quality_ = 0D;
  /**
   * <pre>
   * A measure of how likely this variant is to be real.
   * A higher value is better.
   * </pre>
   *
   * <code>double quality = 8;</code>
   * @return The quality.
   */
  @java.lang.Override
  public double getQuality() {
    return quality_;
  }

  public static final int FILTER_FIELD_NUMBER = 9;
  @SuppressWarnings("serial")
  private com.google.protobuf.LazyStringList filter_;
  /**
   * <pre>
   * A list of filters (normally quality filters) this variant has failed.
   * `PASS` indicates this variant has passed all filters.
   * </pre>
   *
   * <code>repeated string filter = 9;</code>
   * @return A list containing the filter.
   */
  public com.google.protobuf.ProtocolStringList
      getFilterList() {
    return filter_;
  }
  /**
   * <pre>
   * A list of filters (normally quality filters) this variant has failed.
   * `PASS` indicates this variant has passed all filters.
   * </pre>
   *
   * <code>repeated string filter = 9;</code>
   * @return The count of filter.
   */
  public int getFilterCount() {
    return filter_.size();
  }
  /**
   * <pre>
   * A list of filters (normally quality filters) this variant has failed.
   * `PASS` indicates this variant has passed all filters.
   * </pre>
   *
   * <code>repeated string filter = 9;</code>
   * @param index The index of the element to return.
   * @return The filter at the given index.
   */
  public java.lang.String getFilter(int index) {
    return filter_.get(index);
  }
  /**
   * <pre>
   * A list of filters (normally quality filters) this variant has failed.
   * `PASS` indicates this variant has passed all filters.
   * </pre>
   *
   * <code>repeated string filter = 9;</code>
   * @param index The index of the value to return.
   * @return The bytes of the filter at the given index.
   */
  public com.google.protobuf.ByteString
      getFilterBytes(int index) {
    return filter_.getByteString(index);
  }

  public static final int INFO_FIELD_NUMBER = 10;
  private static final class InfoDefaultEntryHolder {
    static final com.google.protobuf.MapEntry<
        java.lang.String, com.google.protobuf.ListValue> defaultEntry =
            com.google.protobuf.MapEntry
            .<java.lang.String, com.google.protobuf.ListValue>newDefaultInstance(
                com.google.genomics.v1.VariantsProto.internal_static_google_genomics_v1_Variant_InfoEntry_descriptor, 
                com.google.protobuf.WireFormat.FieldType.STRING,
                "",
                com.google.protobuf.WireFormat.FieldType.MESSAGE,
                com.google.protobuf.ListValue.getDefaultInstance());
  }
  @SuppressWarnings("serial")
  private com.google.protobuf.MapField<
      java.lang.String, com.google.protobuf.ListValue> info_;
  private com.google.protobuf.MapField<java.lang.String, com.google.protobuf.ListValue>
  internalGetInfo() {
    if (info_ == null) {
      return com.google.protobuf.MapField.emptyMapField(
          InfoDefaultEntryHolder.defaultEntry);
    }
    return info_;
  }
  public int getInfoCount() {
    return internalGetInfo().getMap().size();
  }
  /**
   * <pre>
   * A map of additional variant information. This must be of the form
   * map&lt;string, string[]&gt; (string key mapping to a list of string values).
   * </pre>
   *
   * <code>map&lt;string, .google.protobuf.ListValue&gt; info = 10;</code>
   */
  @java.lang.Override
  public boolean containsInfo(
      java.lang.String key) {
    if (key == null) { throw new NullPointerException("map key"); }
    return internalGetInfo().getMap().containsKey(key);
  }
  /**
   * Use {@link #getInfoMap()} instead.
   */
  @java.lang.Override
  @java.lang.Deprecated
  public java.util.Map<java.lang.String, com.google.protobuf.ListValue> getInfo() {
    return getInfoMap();
  }
  /**
   * <pre>
   * A map of additional variant information. This must be of the form
   * map&lt;string, string[]&gt; (string key mapping to a list of string values).
   * </pre>
   *
   * <code>map&lt;string, .google.protobuf.ListValue&gt; info = 10;</code>
   */
  @java.lang.Override
  public java.util.Map<java.lang.String, com.google.protobuf.ListValue> getInfoMap() {
    return internalGetInfo().getMap();
  }
  /**
   * <pre>
   * A map of additional variant information. This must be of the form
   * map&lt;string, string[]&gt; (string key mapping to a list of string values).
   * </pre>
   *
   * <code>map&lt;string, .google.protobuf.ListValue&gt; info = 10;</code>
   */
  @java.lang.Override
  public /* nullable */
com.google.protobuf.ListValue getInfoOrDefault(
      java.lang.String key,
      /* nullable */
com.google.protobuf.ListValue defaultValue) {
    if (key == null) { throw new NullPointerException("map key"); }
    java.util.Map<java.lang.String, com.google.protobuf.ListValue> map =
        internalGetInfo().getMap();
    return map.containsKey(key) ? map.get(key) : defaultValue;
  }
  /**
   * <pre>
   * A map of additional variant information. This must be of the form
   * map&lt;string, string[]&gt; (string key mapping to a list of string values).
   * </pre>
   *
   * <code>map&lt;string, .google.protobuf.ListValue&gt; info = 10;</code>
   */
  @java.lang.Override
  public com.google.protobuf.ListValue getInfoOrThrow(
      java.lang.String key) {
    if (key == null) { throw new NullPointerException("map key"); }
    java.util.Map<java.lang.String, com.google.protobuf.ListValue> map =
        internalGetInfo().getMap();
    if (!map.containsKey(key)) {
      throw new java.lang.IllegalArgumentException();
    }
    return map.get(key);
  }

  public static final int CALLS_FIELD_NUMBER = 11;
  @SuppressWarnings("serial")
  private java.util.List<com.google.genomics.v1.VariantCall> calls_;
  /**
   * <pre>
   * The variant calls for this particular variant. Each one represents the
   * determination of genotype with respect to this variant.
   * </pre>
   *
   * <code>repeated .google.genomics.v1.VariantCall calls = 11;</code>
   */
  @java.lang.Override
  public java.util.List<com.google.genomics.v1.VariantCall> getCallsList() {
    return calls_;
  }
  /**
   * <pre>
   * The variant calls for this particular variant. Each one represents the
   * determination of genotype with respect to this variant.
   * </pre>
   *
   * <code>repeated .google.genomics.v1.VariantCall calls = 11;</code>
   */
  @java.lang.Override
  public java.util.List<? extends com.google.genomics.v1.VariantCallOrBuilder> 
      getCallsOrBuilderList() {
    return calls_;
  }
  /**
   * <pre>
   * The variant calls for this particular variant. Each one represents the
   * determination of genotype with respect to this variant.
   * </pre>
   *
   * <code>repeated .google.genomics.v1.VariantCall calls = 11;</code>
   */
  @java.lang.Override
  public int getCallsCount() {
    return calls_.size();
  }
  /**
   * <pre>
   * The variant calls for this particular variant. Each one represents the
   * determination of genotype with respect to this variant.
   * </pre>
   *
   * <code>repeated .google.genomics.v1.VariantCall calls = 11;</code>
   */
  @java.lang.Override
  public com.google.genomics.v1.VariantCall getCalls(int index) {
    return calls_.get(index);
  }
  /**
   * <pre>
   * The variant calls for this particular variant. Each one represents the
   * determination of genotype with respect to this variant.
   * </pre>
   *
   * <code>repeated .google.genomics.v1.VariantCall calls = 11;</code>
   */
  @java.lang.Override
  public com.google.genomics.v1.VariantCallOrBuilder getCallsOrBuilder(
      int index) {
    return calls_.get(index);
  }

  private byte memoizedIsInitialized = -1;
  @java.lang.Override
  public final boolean isInitialized() {
    byte isInitialized = memoizedIsInitialized;
    if (isInitialized == 1) return true;
    if (isInitialized == 0) return false;

    memoizedIsInitialized = 1;
    return true;
  }

  @java.lang.Override
  public void writeTo(com.google.protobuf.CodedOutputStream output)
                      throws java.io.IOException {
    if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(id_)) {
      com.google.protobuf.GeneratedMessageV3.writeString(output, 2, id_);
    }
    for (int i = 0; i < names_.size(); i++) {
      com.google.protobuf.GeneratedMessageV3.writeString(output, 3, names_.getRaw(i));
    }
    if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(referenceBases_)) {
      com.google.protobuf.GeneratedMessageV3.writeString(output, 6, referenceBases_);
    }
    for (int i = 0; i < alternateBases_.size(); i++) {
      com.google.protobuf.GeneratedMessageV3.writeString(output, 7, alternateBases_.getRaw(i));
    }
    if (java.lang.Double.doubleToRawLongBits(quality_) != 0) {
      output.writeDouble(8, quality_);
    }
    for (int i = 0; i < filter_.size(); i++) {
      com.google.protobuf.GeneratedMessageV3.writeString(output, 9, filter_.getRaw(i));
    }
    com.google.protobuf.GeneratedMessageV3
      .serializeStringMapTo(
        output,
        internalGetInfo(),
        InfoDefaultEntryHolder.defaultEntry,
        10);
    for (int i = 0; i < calls_.size(); i++) {
      output.writeMessage(11, calls_.get(i));
    }
    if (created_ != 0L) {
      output.writeInt64(12, created_);
    }
    if (end_ != 0L) {
      output.writeInt64(13, end_);
    }
    if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(referenceName_)) {
      com.google.protobuf.GeneratedMessageV3.writeString(output, 14, referenceName_);
    }
    if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(variantSetId_)) {
      com.google.protobuf.GeneratedMessageV3.writeString(output, 15, variantSetId_);
    }
    if (start_ != 0L) {
      output.writeInt64(16, start_);
    }
    getUnknownFields().writeTo(output);
  }

  @java.lang.Override
  public int getSerializedSize() {
    int size = memoizedSize;
    if (size != -1) return size;

    size = 0;
    if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(id_)) {
      size += com.google.protobuf.GeneratedMessageV3.computeStringSize(2, id_);
    }
    {
      int dataSize = 0;
      for (int i = 0; i < names_.size(); i++) {
        dataSize += computeStringSizeNoTag(names_.getRaw(i));
      }
      size += dataSize;
      size += 1 * getNamesList().size();
    }
    if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(referenceBases_)) {
      size += com.google.protobuf.GeneratedMessageV3.computeStringSize(6, referenceBases_);
    }
    {
      int dataSize = 0;
      for (int i = 0; i < alternateBases_.size(); i++) {
        dataSize += computeStringSizeNoTag(alternateBases_.getRaw(i));
      }
      size += dataSize;
      size += 1 * getAlternateBasesList().size();
    }
    if (java.lang.Double.doubleToRawLongBits(quality_) != 0) {
      size += com.google.protobuf.CodedOutputStream
        .computeDoubleSize(8, quality_);
    }
    {
      int dataSize = 0;
      for (int i = 0; i < filter_.size(); i++) {
        dataSize += computeStringSizeNoTag(filter_.getRaw(i));
      }
      size += dataSize;
      size += 1 * getFilterList().size();
    }
    for (java.util.Map.Entry<java.lang.String, com.google.protobuf.ListValue> entry
         : internalGetInfo().getMap().entrySet()) {
      com.google.protobuf.MapEntry<java.lang.String, com.google.protobuf.ListValue>
      info__ = InfoDefaultEntryHolder.defaultEntry.newBuilderForType()
          .setKey(entry.getKey())
          .setValue(entry.getValue())
          .build();
      size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(10, info__);
    }
    for (int i = 0; i < calls_.size(); i++) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(11, calls_.get(i));
    }
    if (created_ != 0L) {
      size += com.google.protobuf.CodedOutputStream
        .computeInt64Size(12, created_);
    }
    if (end_ != 0L) {
      size += com.google.protobuf.CodedOutputStream
        .computeInt64Size(13, end_);
    }
    if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(referenceName_)) {
      size += com.google.protobuf.GeneratedMessageV3.computeStringSize(14, referenceName_);
    }
    if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(variantSetId_)) {
      size += com.google.protobuf.GeneratedMessageV3.computeStringSize(15, variantSetId_);
    }
    if (start_ != 0L) {
      size += com.google.protobuf.CodedOutputStream
        .computeInt64Size(16, start_);
    }
    size += getUnknownFields().getSerializedSize();
    memoizedSize = size;
    return size;
  }

  @java.lang.Override
  public boolean equals(final java.lang.Object obj) {
    if (obj == this) {
     return true;
    }
    if (!(obj instanceof com.google.genomics.v1.Variant)) {
      return super.equals(obj);
    }
    com.google.genomics.v1.Variant other = (com.google.genomics.v1.Variant) obj;

    if (!getVariantSetId()
        .equals(other.getVariantSetId())) return false;
    if (!getId()
        .equals(other.getId())) return false;
    if (!getNamesList()
        .equals(other.getNamesList())) return false;
    if (getCreated()
        != other.getCreated()) return false;
    if (!getReferenceName()
        .equals(other.getReferenceName())) return false;
    if (getStart()
        != other.getStart()) return false;
    if (getEnd()
        != other.getEnd()) return false;
    if (!getReferenceBases()
        .equals(other.getReferenceBases())) return false;
    if (!getAlternateBasesList()
        .equals(other.getAlternateBasesList())) return false;
    if (java.lang.Double.doubleToLongBits(getQuality())
        != java.lang.Double.doubleToLongBits(
            other.getQuality())) return false;
    if (!getFilterList()
        .equals(other.getFilterList())) return false;
    if (!internalGetInfo().equals(
        other.internalGetInfo())) return false;
    if (!getCallsList()
        .equals(other.getCallsList())) return false;
    if (!getUnknownFields().equals(other.getUnknownFields())) return false;
    return true;
  }

  @java.lang.Override
  public int hashCode() {
    if (memoizedHashCode != 0) {
      return memoizedHashCode;
    }
    int hash = 41;
    hash = (19 * hash) + getDescriptor().hashCode();
    hash = (37 * hash) + VARIANT_SET_ID_FIELD_NUMBER;
    hash = (53 * hash) + getVariantSetId().hashCode();
    hash = (37 * hash) + ID_FIELD_NUMBER;
    hash = (53 * hash) + getId().hashCode();
    if (getNamesCount() > 0) {
      hash = (37 * hash) + NAMES_FIELD_NUMBER;
      hash = (53 * hash) + getNamesList().hashCode();
    }
    hash = (37 * hash) + CREATED_FIELD_NUMBER;
    hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
        getCreated());
    hash = (37 * hash) + REFERENCE_NAME_FIELD_NUMBER;
    hash = (53 * hash) + getReferenceName().hashCode();
    hash = (37 * hash) + START_FIELD_NUMBER;
    hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
        getStart());
    hash = (37 * hash) + END_FIELD_NUMBER;
    hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
        getEnd());
    hash = (37 * hash) + REFERENCE_BASES_FIELD_NUMBER;
    hash = (53 * hash) + getReferenceBases().hashCode();
    if (getAlternateBasesCount() > 0) {
      hash = (37 * hash) + ALTERNATE_BASES_FIELD_NUMBER;
      hash = (53 * hash) + getAlternateBasesList().hashCode();
    }
    hash = (37 * hash) + QUALITY_FIELD_NUMBER;
    hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
        java.lang.Double.doubleToLongBits(getQuality()));
    if (getFilterCount() > 0) {
      hash = (37 * hash) + FILTER_FIELD_NUMBER;
      hash = (53 * hash) + getFilterList().hashCode();
    }
    if (!internalGetInfo().getMap().isEmpty()) {
      hash = (37 * hash) + INFO_FIELD_NUMBER;
      hash = (53 * hash) + internalGetInfo().hashCode();
    }
    if (getCallsCount() > 0) {
      hash = (37 * hash) + CALLS_FIELD_NUMBER;
      hash = (53 * hash) + getCallsList().hashCode();
    }
    hash = (29 * hash) + getUnknownFields().hashCode();
    memoizedHashCode = hash;
    return hash;
  }

  public static com.google.genomics.v1.Variant parseFrom(
      java.nio.ByteBuffer data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static com.google.genomics.v1.Variant parseFrom(
      java.nio.ByteBuffer data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static com.google.genomics.v1.Variant parseFrom(
      com.google.protobuf.ByteString data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static com.google.genomics.v1.Variant parseFrom(
      com.google.protobuf.ByteString data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static com.google.genomics.v1.Variant parseFrom(byte[] data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static com.google.genomics.v1.Variant parseFrom(
      byte[] data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static com.google.genomics.v1.Variant parseFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input);
  }
  public static com.google.genomics.v1.Variant parseFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input, extensionRegistry);
  }
  public static com.google.genomics.v1.Variant parseDelimitedFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseDelimitedWithIOException(PARSER, input);
  }
  public static com.google.genomics.v1.Variant parseDelimitedFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
  }
  public static com.google.genomics.v1.Variant parseFrom(
      com.google.protobuf.CodedInputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input);
  }
  public static com.google.genomics.v1.Variant parseFrom(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input, extensionRegistry);
  }

  @java.lang.Override
  public Builder newBuilderForType() { return newBuilder(); }
  public static Builder newBuilder() {
    return DEFAULT_INSTANCE.toBuilder();
  }
  public static Builder newBuilder(com.google.genomics.v1.Variant prototype) {
    return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
  }
  @java.lang.Override
  public Builder toBuilder() {
    return this == DEFAULT_INSTANCE
        ? new Builder() : new Builder().mergeFrom(this);
  }

  @java.lang.Override
  protected Builder newBuilderForType(
      com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
    Builder builder = new Builder(parent);
    return builder;
  }
  /**
   * <pre>
   * A variant represents a change in DNA sequence relative to a reference
   * sequence. For example, a variant could represent a SNP or an insertion.
   * Variants belong to a variant set.
   * For more genomics resource definitions, see [Fundamentals of Google
   * Genomics](https://cloud.google.com/genomics/fundamentals-of-google-genomics)
   * Each of the calls on a variant represent a determination of genotype with
   * respect to that variant. For example, a call might assign probability of 0.32
   * to the occurrence of a SNP named rs1234 in a sample named NA12345. A call
   * belongs to a call set, which contains related calls typically from one
   * sample.
   * </pre>
   *
   * Protobuf type {@code google.genomics.v1.Variant}
   */
  public static final class Builder extends
      com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
      // @@protoc_insertion_point(builder_implements:google.genomics.v1.Variant)
      com.google.genomics.v1.VariantOrBuilder {
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.google.genomics.v1.VariantsProto.internal_static_google_genomics_v1_Variant_descriptor;
    }

    @SuppressWarnings({"rawtypes"})
    protected com.google.protobuf.MapField internalGetMapField(
        int number) {
      switch (number) {
        case 10:
          return internalGetInfo();
        default:
          throw new RuntimeException(
              "Invalid map field number: " + number);
      }
    }
    @SuppressWarnings({"rawtypes"})
    protected com.google.protobuf.MapField internalGetMutableMapField(
        int number) {
      switch (number) {
        case 10:
          return internalGetMutableInfo();
        default:
          throw new RuntimeException(
              "Invalid map field number: " + number);
      }
    }
    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.google.genomics.v1.VariantsProto.internal_static_google_genomics_v1_Variant_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.google.genomics.v1.Variant.class, com.google.genomics.v1.Variant.Builder.class);
    }

    // Construct using com.google.genomics.v1.Variant.newBuilder()
    private Builder() {

    }

    private Builder(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      super(parent);

    }
    @java.lang.Override
    public Builder clear() {
      super.clear();
      bitField0_ = 0;
      variantSetId_ = "";
      id_ = "";
      names_ = com.google.protobuf.LazyStringArrayList.EMPTY;
      bitField0_ = (bitField0_ & ~0x00000004);
      created_ = 0L;
      referenceName_ = "";
      start_ = 0L;
      end_ = 0L;
      referenceBases_ = "";
      alternateBases_ = com.google.protobuf.LazyStringArrayList.EMPTY;
      bitField0_ = (bitField0_ & ~0x00000100);
      quality_ = 0D;
      filter_ = com.google.protobuf.LazyStringArrayList.EMPTY;
      bitField0_ = (bitField0_ & ~0x00000400);
      internalGetMutableInfo().clear();
      if (callsBuilder_ == null) {
        calls_ = java.util.Collections.emptyList();
      } else {
        calls_ = null;
        callsBuilder_.clear();
      }
      bitField0_ = (bitField0_ & ~0x00001000);
      return this;
    }

    @java.lang.Override
    public com.google.protobuf.Descriptors.Descriptor
        getDescriptorForType() {
      return com.google.genomics.v1.VariantsProto.internal_static_google_genomics_v1_Variant_descriptor;
    }

    @java.lang.Override
    public com.google.genomics.v1.Variant getDefaultInstanceForType() {
      return com.google.genomics.v1.Variant.getDefaultInstance();
    }

    @java.lang.Override
    public com.google.genomics.v1.Variant build() {
      com.google.genomics.v1.Variant result = buildPartial();
      if (!result.isInitialized()) {
        throw newUninitializedMessageException(result);
      }
      return result;
    }

    @java.lang.Override
    public com.google.genomics.v1.Variant buildPartial() {
      com.google.genomics.v1.Variant result = new com.google.genomics.v1.Variant(this);
      buildPartialRepeatedFields(result);
      if (bitField0_ != 0) { buildPartial0(result); }
      onBuilt();
      return result;
    }

    private void buildPartialRepeatedFields(com.google.genomics.v1.Variant result) {
      if (((bitField0_ & 0x00000004) != 0)) {
        names_ = names_.getUnmodifiableView();
        bitField0_ = (bitField0_ & ~0x00000004);
      }
      result.names_ = names_;
      if (((bitField0_ & 0x00000100) != 0)) {
        alternateBases_ = alternateBases_.getUnmodifiableView();
        bitField0_ = (bitField0_ & ~0x00000100);
      }
      result.alternateBases_ = alternateBases_;
      if (((bitField0_ & 0x00000400) != 0)) {
        filter_ = filter_.getUnmodifiableView();
        bitField0_ = (bitField0_ & ~0x00000400);
      }
      result.filter_ = filter_;
      if (callsBuilder_ == null) {
        if (((bitField0_ & 0x00001000) != 0)) {
          calls_ = java.util.Collections.unmodifiableList(calls_);
          bitField0_ = (bitField0_ & ~0x00001000);
        }
        result.calls_ = calls_;
      } else {
        result.calls_ = callsBuilder_.build();
      }
    }

    private void buildPartial0(com.google.genomics.v1.Variant result) {
      int from_bitField0_ = bitField0_;
      if (((from_bitField0_ & 0x00000001) != 0)) {
        result.variantSetId_ = variantSetId_;
      }
      if (((from_bitField0_ & 0x00000002) != 0)) {
        result.id_ = id_;
      }
      if (((from_bitField0_ & 0x00000008) != 0)) {
        result.created_ = created_;
      }
      if (((from_bitField0_ & 0x00000010) != 0)) {
        result.referenceName_ = referenceName_;
      }
      if (((from_bitField0_ & 0x00000020) != 0)) {
        result.start_ = start_;
      }
      if (((from_bitField0_ & 0x00000040) != 0)) {
        result.end_ = end_;
      }
      if (((from_bitField0_ & 0x00000080) != 0)) {
        result.referenceBases_ = referenceBases_;
      }
      if (((from_bitField0_ & 0x00000200) != 0)) {
        result.quality_ = quality_;
      }
      if (((from_bitField0_ & 0x00000800) != 0)) {
        result.info_ = internalGetInfo();
        result.info_.makeImmutable();
      }
    }

    @java.lang.Override
    public Builder clone() {
      return super.clone();
    }
    @java.lang.Override
    public Builder setField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        java.lang.Object value) {
      return super.setField(field, value);
    }
    @java.lang.Override
    public Builder clearField(
        com.google.protobuf.Descriptors.FieldDescriptor field) {
      return super.clearField(field);
    }
    @java.lang.Override
    public Builder clearOneof(
        com.google.protobuf.Descriptors.OneofDescriptor oneof) {
      return super.clearOneof(oneof);
    }
    @java.lang.Override
    public Builder setRepeatedField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        int index, java.lang.Object value) {
      return super.setRepeatedField(field, index, value);
    }
    @java.lang.Override
    public Builder addRepeatedField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        java.lang.Object value) {
      return super.addRepeatedField(field, value);
    }
    @java.lang.Override
    public Builder mergeFrom(com.google.protobuf.Message other) {
      if (other instanceof com.google.genomics.v1.Variant) {
        return mergeFrom((com.google.genomics.v1.Variant)other);
      } else {
        super.mergeFrom(other);
        return this;
      }
    }

    public Builder mergeFrom(com.google.genomics.v1.Variant other) {
      if (other == com.google.genomics.v1.Variant.getDefaultInstance()) return this;
      if (!other.getVariantSetId().isEmpty()) {
        variantSetId_ = other.variantSetId_;
        bitField0_ |= 0x00000001;
        onChanged();
      }
      if (!other.getId().isEmpty()) {
        id_ = other.id_;
        bitField0_ |= 0x00000002;
        onChanged();
      }
      if (!other.names_.isEmpty()) {
        if (names_.isEmpty()) {
          names_ = other.names_;
          bitField0_ = (bitField0_ & ~0x00000004);
        } else {
          ensureNamesIsMutable();
          names_.addAll(other.names_);
        }
        onChanged();
      }
      if (other.getCreated() != 0L) {
        setCreated(other.getCreated());
      }
      if (!other.getReferenceName().isEmpty()) {
        referenceName_ = other.referenceName_;
        bitField0_ |= 0x00000010;
        onChanged();
      }
      if (other.getStart() != 0L) {
        setStart(other.getStart());
      }
      if (other.getEnd() != 0L) {
        setEnd(other.getEnd());
      }
      if (!other.getReferenceBases().isEmpty()) {
        referenceBases_ = other.referenceBases_;
        bitField0_ |= 0x00000080;
        onChanged();
      }
      if (!other.alternateBases_.isEmpty()) {
        if (alternateBases_.isEmpty()) {
          alternateBases_ = other.alternateBases_;
          bitField0_ = (bitField0_ & ~0x00000100);
        } else {
          ensureAlternateBasesIsMutable();
          alternateBases_.addAll(other.alternateBases_);
        }
        onChanged();
      }
      if (other.getQuality() != 0D) {
        setQuality(other.getQuality());
      }
      if (!other.filter_.isEmpty()) {
        if (filter_.isEmpty()) {
          filter_ = other.filter_;
          bitField0_ = (bitField0_ & ~0x00000400);
        } else {
          ensureFilterIsMutable();
          filter_.addAll(other.filter_);
        }
        onChanged();
      }
      internalGetMutableInfo().mergeFrom(
          other.internalGetInfo());
      bitField0_ |= 0x00000800;
      if (callsBuilder_ == null) {
        if (!other.calls_.isEmpty()) {
          if (calls_.isEmpty()) {
            calls_ = other.calls_;
            bitField0_ = (bitField0_ & ~0x00001000);
          } else {
            ensureCallsIsMutable();
            calls_.addAll(other.calls_);
          }
          onChanged();
        }
      } else {
        if (!other.calls_.isEmpty()) {
          if (callsBuilder_.isEmpty()) {
            callsBuilder_.dispose();
            callsBuilder_ = null;
            calls_ = other.calls_;
            bitField0_ = (bitField0_ & ~0x00001000);
            callsBuilder_ = 
              com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?
                 getCallsFieldBuilder() : null;
          } else {
            callsBuilder_.addAllMessages(other.calls_);
          }
        }
      }
      this.mergeUnknownFields(other.getUnknownFields());
      onChanged();
      return this;
    }

    @java.lang.Override
    public final boolean isInitialized() {
      return true;
    }

    @java.lang.Override
    public Builder mergeFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 18: {
              id_ = input.readStringRequireUtf8();
              bitField0_ |= 0x00000002;
              break;
            } // case 18
            case 26: {
              java.lang.String s = input.readStringRequireUtf8();
              ensureNamesIsMutable();
              names_.add(s);
              break;
            } // case 26
            case 50: {
              referenceBases_ = input.readStringRequireUtf8();
              bitField0_ |= 0x00000080;
              break;
            } // case 50
            case 58: {
              java.lang.String s = input.readStringRequireUtf8();
              ensureAlternateBasesIsMutable();
              alternateBases_.add(s);
              break;
            } // case 58
            case 65: {
              quality_ = input.readDouble();
              bitField0_ |= 0x00000200;
              break;
            } // case 65
            case 74: {
              java.lang.String s = input.readStringRequireUtf8();
              ensureFilterIsMutable();
              filter_.add(s);
              break;
            } // case 74
            case 82: {
              com.google.protobuf.MapEntry<java.lang.String, com.google.protobuf.ListValue>
              info__ = input.readMessage(
                  InfoDefaultEntryHolder.defaultEntry.getParserForType(), extensionRegistry);
              internalGetMutableInfo().getMutableMap().put(
                  info__.getKey(), info__.getValue());
              bitField0_ |= 0x00000800;
              break;
            } // case 82
            case 90: {
              com.google.genomics.v1.VariantCall m =
                  input.readMessage(
                      com.google.genomics.v1.VariantCall.parser(),
                      extensionRegistry);
              if (callsBuilder_ == null) {
                ensureCallsIsMutable();
                calls_.add(m);
              } else {
                callsBuilder_.addMessage(m);
              }
              break;
            } // case 90
            case 96: {
              created_ = input.readInt64();
              bitField0_ |= 0x00000008;
              break;
            } // case 96
            case 104: {
              end_ = input.readInt64();
              bitField0_ |= 0x00000040;
              break;
            } // case 104
            case 114: {
              referenceName_ = input.readStringRequireUtf8();
              bitField0_ |= 0x00000010;
              break;
            } // case 114
            case 122: {
              variantSetId_ = input.readStringRequireUtf8();
              bitField0_ |= 0x00000001;
              break;
            } // case 122
            case 128: {
              start_ = input.readInt64();
              bitField0_ |= 0x00000020;
              break;
            } // case 128
            default: {
              if (!super.parseUnknownField(input, extensionRegistry, tag)) {
                done = true; // was an endgroup tag
              }
              break;
            } // default:
          } // switch (tag)
        } // while (!done)
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.unwrapIOException();
      } finally {
        onChanged();
      } // finally
      return this;
    }
    private int bitField0_;

    private java.lang.Object variantSetId_ = "";
    /**
     * <pre>
     * The ID of the variant set this variant belongs to.
     * </pre>
     *
     * <code>string variant_set_id = 15;</code>
     * @return The variantSetId.
     */
    public java.lang.String getVariantSetId() {
      java.lang.Object ref = variantSetId_;
      if (!(ref instanceof java.lang.String)) {
        com.google.protobuf.ByteString bs =
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        variantSetId_ = s;
        return s;
      } else {
        return (java.lang.String) ref;
      }
    }
    /**
     * <pre>
     * The ID of the variant set this variant belongs to.
     * </pre>
     *
     * <code>string variant_set_id = 15;</code>
     * @return The bytes for variantSetId.
     */
    public com.google.protobuf.ByteString
        getVariantSetIdBytes() {
      java.lang.Object ref = variantSetId_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        variantSetId_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }
    /**
     * <pre>
     * The ID of the variant set this variant belongs to.
     * </pre>
     *
     * <code>string variant_set_id = 15;</code>
     * @param value The variantSetId to set.
     * @return This builder for chaining.
     */
    public Builder setVariantSetId(
        java.lang.String value) {
      if (value == null) { throw new NullPointerException(); }
      variantSetId_ = value;
      bitField0_ |= 0x00000001;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * The ID of the variant set this variant belongs to.
     * </pre>
     *
     * <code>string variant_set_id = 15;</code>
     * @return This builder for chaining.
     */
    public Builder clearVariantSetId() {
      variantSetId_ = getDefaultInstance().getVariantSetId();
      bitField0_ = (bitField0_ & ~0x00000001);
      onChanged();
      return this;
    }
    /**
     * <pre>
     * The ID of the variant set this variant belongs to.
     * </pre>
     *
     * <code>string variant_set_id = 15;</code>
     * @param value The bytes for variantSetId to set.
     * @return This builder for chaining.
     */
    public Builder setVariantSetIdBytes(
        com.google.protobuf.ByteString value) {
      if (value == null) { throw new NullPointerException(); }
      checkByteStringIsUtf8(value);
      variantSetId_ = value;
      bitField0_ |= 0x00000001;
      onChanged();
      return this;
    }

    private java.lang.Object id_ = "";
    /**
     * <pre>
     * The server-generated variant ID, unique across all variants.
     * </pre>
     *
     * <code>string id = 2;</code>
     * @return The id.
     */
    public java.lang.String getId() {
      java.lang.Object ref = id_;
      if (!(ref instanceof java.lang.String)) {
        com.google.protobuf.ByteString bs =
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        id_ = s;
        return s;
      } else {
        return (java.lang.String) ref;
      }
    }
    /**
     * <pre>
     * The server-generated variant ID, unique across all variants.
     * </pre>
     *
     * <code>string id = 2;</code>
     * @return The bytes for id.
     */
    public com.google.protobuf.ByteString
        getIdBytes() {
      java.lang.Object ref = id_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        id_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }
    /**
     * <pre>
     * The server-generated variant ID, unique across all variants.
     * </pre>
     *
     * <code>string id = 2;</code>
     * @param value The id to set.
     * @return This builder for chaining.
     */
    public Builder setId(
        java.lang.String value) {
      if (value == null) { throw new NullPointerException(); }
      id_ = value;
      bitField0_ |= 0x00000002;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * The server-generated variant ID, unique across all variants.
     * </pre>
     *
     * <code>string id = 2;</code>
     * @return This builder for chaining.
     */
    public Builder clearId() {
      id_ = getDefaultInstance().getId();
      bitField0_ = (bitField0_ & ~0x00000002);
      onChanged();
      return this;
    }
    /**
     * <pre>
     * The server-generated variant ID, unique across all variants.
     * </pre>
     *
     * <code>string id = 2;</code>
     * @param value The bytes for id to set.
     * @return This builder for chaining.
     */
    public Builder setIdBytes(
        com.google.protobuf.ByteString value) {
      if (value == null) { throw new NullPointerException(); }
      checkByteStringIsUtf8(value);
      id_ = value;
      bitField0_ |= 0x00000002;
      onChanged();
      return this;
    }

    private com.google.protobuf.LazyStringList names_ = com.google.protobuf.LazyStringArrayList.EMPTY;
    private void ensureNamesIsMutable() {
      if (!((bitField0_ & 0x00000004) != 0)) {
        names_ = new com.google.protobuf.LazyStringArrayList(names_);
        bitField0_ |= 0x00000004;
       }
    }
    /**
     * <pre>
     * Names for the variant, for example a RefSNP ID.
     * </pre>
     *
     * <code>repeated string names = 3;</code>
     * @return A list containing the names.
     */
    public com.google.protobuf.ProtocolStringList
        getNamesList() {
      return names_.getUnmodifiableView();
    }
    /**
     * <pre>
     * Names for the variant, for example a RefSNP ID.
     * </pre>
     *
     * <code>repeated string names = 3;</code>
     * @return The count of names.
     */
    public int getNamesCount() {
      return names_.size();
    }
    /**
     * <pre>
     * Names for the variant, for example a RefSNP ID.
     * </pre>
     *
     * <code>repeated string names = 3;</code>
     * @param index The index of the element to return.
     * @return The names at the given index.
     */
    public java.lang.String getNames(int index) {
      return names_.get(index);
    }
    /**
     * <pre>
     * Names for the variant, for example a RefSNP ID.
     * </pre>
     *
     * <code>repeated string names = 3;</code>
     * @param index The index of the value to return.
     * @return The bytes of the names at the given index.
     */
    public com.google.protobuf.ByteString
        getNamesBytes(int index) {
      return names_.getByteString(index);
    }
    /**
     * <pre>
     * Names for the variant, for example a RefSNP ID.
     * </pre>
     *
     * <code>repeated string names = 3;</code>
     * @param index The index to set the value at.
     * @param value The names to set.
     * @return This builder for chaining.
     */
    public Builder setNames(
        int index, java.lang.String value) {
      if (value == null) { throw new NullPointerException(); }
      ensureNamesIsMutable();
      names_.set(index, value);
      onChanged();
      return this;
    }
    /**
     * <pre>
     * Names for the variant, for example a RefSNP ID.
     * </pre>
     *
     * <code>repeated string names = 3;</code>
     * @param value The names to add.
     * @return This builder for chaining.
     */
    public Builder addNames(
        java.lang.String value) {
      if (value == null) { throw new NullPointerException(); }
      ensureNamesIsMutable();
      names_.add(value);
      onChanged();
      return this;
    }
    /**
     * <pre>
     * Names for the variant, for example a RefSNP ID.
     * </pre>
     *
     * <code>repeated string names = 3;</code>
     * @param values The names to add.
     * @return This builder for chaining.
     */
    public Builder addAllNames(
        java.lang.Iterable<java.lang.String> values) {
      ensureNamesIsMutable();
      com.google.protobuf.AbstractMessageLite.Builder.addAll(
          values, names_);
      onChanged();
      return this;
    }
    /**
     * <pre>
     * Names for the variant, for example a RefSNP ID.
     * </pre>
     *
     * <code>repeated string names = 3;</code>
     * @return This builder for chaining.
     */
    public Builder clearNames() {
      names_ = com.google.protobuf.LazyStringArrayList.EMPTY;
      bitField0_ = (bitField0_ & ~0x00000004);
      onChanged();
      return this;
    }
    /**
     * <pre>
     * Names for the variant, for example a RefSNP ID.
     * </pre>
     *
     * <code>repeated string names = 3;</code>
     * @param value The bytes of the names to add.
     * @return This builder for chaining.
     */
    public Builder addNamesBytes(
        com.google.protobuf.ByteString value) {
      if (value == null) { throw new NullPointerException(); }
      checkByteStringIsUtf8(value);
      ensureNamesIsMutable();
      names_.add(value);
      onChanged();
      return this;
    }

    private long created_ ;
    /**
     * <pre>
     * The date this variant was created, in milliseconds from the epoch.
     * </pre>
     *
     * <code>int64 created = 12;</code>
     * @return The created.
     */
    @java.lang.Override
    public long getCreated() {
      return created_;
    }
    /**
     * <pre>
     * The date this variant was created, in milliseconds from the epoch.
     * </pre>
     *
     * <code>int64 created = 12;</code>
     * @param value The created to set.
     * @return This builder for chaining.
     */
    public Builder setCreated(long value) {
      
      created_ = value;
      bitField0_ |= 0x00000008;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * The date this variant was created, in milliseconds from the epoch.
     * </pre>
     *
     * <code>int64 created = 12;</code>
     * @return This builder for chaining.
     */
    public Builder clearCreated() {
      bitField0_ = (bitField0_ & ~0x00000008);
      created_ = 0L;
      onChanged();
      return this;
    }

    private java.lang.Object referenceName_ = "";
    /**
     * <pre>
     * The reference on which this variant occurs.
     * (such as `chr20` or `X`)
     * </pre>
     *
     * <code>string reference_name = 14;</code>
     * @return The referenceName.
     */
    public java.lang.String getReferenceName() {
      java.lang.Object ref = referenceName_;
      if (!(ref instanceof java.lang.String)) {
        com.google.protobuf.ByteString bs =
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        referenceName_ = s;
        return s;
      } else {
        return (java.lang.String) ref;
      }
    }
    /**
     * <pre>
     * The reference on which this variant occurs.
     * (such as `chr20` or `X`)
     * </pre>
     *
     * <code>string reference_name = 14;</code>
     * @return The bytes for referenceName.
     */
    public com.google.protobuf.ByteString
        getReferenceNameBytes() {
      java.lang.Object ref = referenceName_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        referenceName_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }
    /**
     * <pre>
     * The reference on which this variant occurs.
     * (such as `chr20` or `X`)
     * </pre>
     *
     * <code>string reference_name = 14;</code>
     * @param value The referenceName to set.
     * @return This builder for chaining.
     */
    public Builder setReferenceName(
        java.lang.String value) {
      if (value == null) { throw new NullPointerException(); }
      referenceName_ = value;
      bitField0_ |= 0x00000010;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * The reference on which this variant occurs.
     * (such as `chr20` or `X`)
     * </pre>
     *
     * <code>string reference_name = 14;</code>
     * @return This builder for chaining.
     */
    public Builder clearReferenceName() {
      referenceName_ = getDefaultInstance().getReferenceName();
      bitField0_ = (bitField0_ & ~0x00000010);
      onChanged();
      return this;
    }
    /**
     * <pre>
     * The reference on which this variant occurs.
     * (such as `chr20` or `X`)
     * </pre>
     *
     * <code>string reference_name = 14;</code>
     * @param value The bytes for referenceName to set.
     * @return This builder for chaining.
     */
    public Builder setReferenceNameBytes(
        com.google.protobuf.ByteString value) {
      if (value == null) { throw new NullPointerException(); }
      checkByteStringIsUtf8(value);
      referenceName_ = value;
      bitField0_ |= 0x00000010;
      onChanged();
      return this;
    }

    private long start_ ;
    /**
     * <pre>
     * The position at which this variant occurs (0-based).
     * This corresponds to the first base of the string of reference bases.
     * </pre>
     *
     * <code>int64 start = 16;</code>
     * @return The start.
     */
    @java.lang.Override
    public long getStart() {
      return start_;
    }
    /**
     * <pre>
     * The position at which this variant occurs (0-based).
     * This corresponds to the first base of the string of reference bases.
     * </pre>
     *
     * <code>int64 start = 16;</code>
     * @param value The start to set.
     * @return This builder for chaining.
     */
    public Builder setStart(long value) {
      
      start_ = value;
      bitField0_ |= 0x00000020;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * The position at which this variant occurs (0-based).
     * This corresponds to the first base of the string of reference bases.
     * </pre>
     *
     * <code>int64 start = 16;</code>
     * @return This builder for chaining.
     */
    public Builder clearStart() {
      bitField0_ = (bitField0_ & ~0x00000020);
      start_ = 0L;
      onChanged();
      return this;
    }

    private long end_ ;
    /**
     * <pre>
     * The end position (0-based) of this variant. This corresponds to the first
     * base after the last base in the reference allele. So, the length of
     * the reference allele is (end - start). This is useful for variants
     * that don't explicitly give alternate bases, for example large deletions.
     * </pre>
     *
     * <code>int64 end = 13;</code>
     * @return The end.
     */
    @java.lang.Override
    public long getEnd() {
      return end_;
    }
    /**
     * <pre>
     * The end position (0-based) of this variant. This corresponds to the first
     * base after the last base in the reference allele. So, the length of
     * the reference allele is (end - start). This is useful for variants
     * that don't explicitly give alternate bases, for example large deletions.
     * </pre>
     *
     * <code>int64 end = 13;</code>
     * @param value The end to set.
     * @return This builder for chaining.
     */
    public Builder setEnd(long value) {
      
      end_ = value;
      bitField0_ |= 0x00000040;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * The end position (0-based) of this variant. This corresponds to the first
     * base after the last base in the reference allele. So, the length of
     * the reference allele is (end - start). This is useful for variants
     * that don't explicitly give alternate bases, for example large deletions.
     * </pre>
     *
     * <code>int64 end = 13;</code>
     * @return This builder for chaining.
     */
    public Builder clearEnd() {
      bitField0_ = (bitField0_ & ~0x00000040);
      end_ = 0L;
      onChanged();
      return this;
    }

    private java.lang.Object referenceBases_ = "";
    /**
     * <pre>
     * The reference bases for this variant. They start at the given
     * position.
     * </pre>
     *
     * <code>string reference_bases = 6;</code>
     * @return The referenceBases.
     */
    public java.lang.String getReferenceBases() {
      java.lang.Object ref = referenceBases_;
      if (!(ref instanceof java.lang.String)) {
        com.google.protobuf.ByteString bs =
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        referenceBases_ = s;
        return s;
      } else {
        return (java.lang.String) ref;
      }
    }
    /**
     * <pre>
     * The reference bases for this variant. They start at the given
     * position.
     * </pre>
     *
     * <code>string reference_bases = 6;</code>
     * @return The bytes for referenceBases.
     */
    public com.google.protobuf.ByteString
        getReferenceBasesBytes() {
      java.lang.Object ref = referenceBases_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        referenceBases_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }
    /**
     * <pre>
     * The reference bases for this variant. They start at the given
     * position.
     * </pre>
     *
     * <code>string reference_bases = 6;</code>
     * @param value The referenceBases to set.
     * @return This builder for chaining.
     */
    public Builder setReferenceBases(
        java.lang.String value) {
      if (value == null) { throw new NullPointerException(); }
      referenceBases_ = value;
      bitField0_ |= 0x00000080;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * The reference bases for this variant. They start at the given
     * position.
     * </pre>
     *
     * <code>string reference_bases = 6;</code>
     * @return This builder for chaining.
     */
    public Builder clearReferenceBases() {
      referenceBases_ = getDefaultInstance().getReferenceBases();
      bitField0_ = (bitField0_ & ~0x00000080);
      onChanged();
      return this;
    }
    /**
     * <pre>
     * The reference bases for this variant. They start at the given
     * position.
     * </pre>
     *
     * <code>string reference_bases = 6;</code>
     * @param value The bytes for referenceBases to set.
     * @return This builder for chaining.
     */
    public Builder setReferenceBasesBytes(
        com.google.protobuf.ByteString value) {
      if (value == null) { throw new NullPointerException(); }
      checkByteStringIsUtf8(value);
      referenceBases_ = value;
      bitField0_ |= 0x00000080;
      onChanged();
      return this;
    }

    private com.google.protobuf.LazyStringList alternateBases_ = com.google.protobuf.LazyStringArrayList.EMPTY;
    private void ensureAlternateBasesIsMutable() {
      if (!((bitField0_ & 0x00000100) != 0)) {
        alternateBases_ = new com.google.protobuf.LazyStringArrayList(alternateBases_);
        bitField0_ |= 0x00000100;
       }
    }
    /**
     * <pre>
     * The bases that appear instead of the reference bases.
     * </pre>
     *
     * <code>repeated string alternate_bases = 7;</code>
     * @return A list containing the alternateBases.
     */
    public com.google.protobuf.ProtocolStringList
        getAlternateBasesList() {
      return alternateBases_.getUnmodifiableView();
    }
    /**
     * <pre>
     * The bases that appear instead of the reference bases.
     * </pre>
     *
     * <code>repeated string alternate_bases = 7;</code>
     * @return The count of alternateBases.
     */
    public int getAlternateBasesCount() {
      return alternateBases_.size();
    }
    /**
     * <pre>
     * The bases that appear instead of the reference bases.
     * </pre>
     *
     * <code>repeated string alternate_bases = 7;</code>
     * @param index The index of the element to return.
     * @return The alternateBases at the given index.
     */
    public java.lang.String getAlternateBases(int index) {
      return alternateBases_.get(index);
    }
    /**
     * <pre>
     * The bases that appear instead of the reference bases.
     * </pre>
     *
     * <code>repeated string alternate_bases = 7;</code>
     * @param index The index of the value to return.
     * @return The bytes of the alternateBases at the given index.
     */
    public com.google.protobuf.ByteString
        getAlternateBasesBytes(int index) {
      return alternateBases_.getByteString(index);
    }
    /**
     * <pre>
     * The bases that appear instead of the reference bases.
     * </pre>
     *
     * <code>repeated string alternate_bases = 7;</code>
     * @param index The index to set the value at.
     * @param value The alternateBases to set.
     * @return This builder for chaining.
     */
    public Builder setAlternateBases(
        int index, java.lang.String value) {
      if (value == null) { throw new NullPointerException(); }
      ensureAlternateBasesIsMutable();
      alternateBases_.set(index, value);
      onChanged();
      return this;
    }
    /**
     * <pre>
     * The bases that appear instead of the reference bases.
     * </pre>
     *
     * <code>repeated string alternate_bases = 7;</code>
     * @param value The alternateBases to add.
     * @return This builder for chaining.
     */
    public Builder addAlternateBases(
        java.lang.String value) {
      if (value == null) { throw new NullPointerException(); }
      ensureAlternateBasesIsMutable();
      alternateBases_.add(value);
      onChanged();
      return this;
    }
    /**
     * <pre>
     * The bases that appear instead of the reference bases.
     * </pre>
     *
     * <code>repeated string alternate_bases = 7;</code>
     * @param values The alternateBases to add.
     * @return This builder for chaining.
     */
    public Builder addAllAlternateBases(
        java.lang.Iterable<java.lang.String> values) {
      ensureAlternateBasesIsMutable();
      com.google.protobuf.AbstractMessageLite.Builder.addAll(
          values, alternateBases_);
      onChanged();
      return this;
    }
    /**
     * <pre>
     * The bases that appear instead of the reference bases.
     * </pre>
     *
     * <code>repeated string alternate_bases = 7;</code>
     * @return This builder for chaining.
     */
    public Builder clearAlternateBases() {
      alternateBases_ = com.google.protobuf.LazyStringArrayList.EMPTY;
      bitField0_ = (bitField0_ & ~0x00000100);
      onChanged();
      return this;
    }
    /**
     * <pre>
     * The bases that appear instead of the reference bases.
     * </pre>
     *
     * <code>repeated string alternate_bases = 7;</code>
     * @param value The bytes of the alternateBases to add.
     * @return This builder for chaining.
     */
    public Builder addAlternateBasesBytes(
        com.google.protobuf.ByteString value) {
      if (value == null) { throw new NullPointerException(); }
      checkByteStringIsUtf8(value);
      ensureAlternateBasesIsMutable();
      alternateBases_.add(value);
      onChanged();
      return this;
    }

    private double quality_ ;
    /**
     * <pre>
     * A measure of how likely this variant is to be real.
     * A higher value is better.
     * </pre>
     *
     * <code>double quality = 8;</code>
     * @return The quality.
     */
    @java.lang.Override
    public double getQuality() {
      return quality_;
    }
    /**
     * <pre>
     * A measure of how likely this variant is to be real.
     * A higher value is better.
     * </pre>
     *
     * <code>double quality = 8;</code>
     * @param value The quality to set.
     * @return This builder for chaining.
     */
    public Builder setQuality(double value) {
      
      quality_ = value;
      bitField0_ |= 0x00000200;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * A measure of how likely this variant is to be real.
     * A higher value is better.
     * </pre>
     *
     * <code>double quality = 8;</code>
     * @return This builder for chaining.
     */
    public Builder clearQuality() {
      bitField0_ = (bitField0_ & ~0x00000200);
      quality_ = 0D;
      onChanged();
      return this;
    }

    private com.google.protobuf.LazyStringList filter_ = com.google.protobuf.LazyStringArrayList.EMPTY;
    private void ensureFilterIsMutable() {
      if (!((bitField0_ & 0x00000400) != 0)) {
        filter_ = new com.google.protobuf.LazyStringArrayList(filter_);
        bitField0_ |= 0x00000400;
       }
    }
    /**
     * <pre>
     * A list of filters (normally quality filters) this variant has failed.
     * `PASS` indicates this variant has passed all filters.
     * </pre>
     *
     * <code>repeated string filter = 9;</code>
     * @return A list containing the filter.
     */
    public com.google.protobuf.ProtocolStringList
        getFilterList() {
      return filter_.getUnmodifiableView();
    }
    /**
     * <pre>
     * A list of filters (normally quality filters) this variant has failed.
     * `PASS` indicates this variant has passed all filters.
     * </pre>
     *
     * <code>repeated string filter = 9;</code>
     * @return The count of filter.
     */
    public int getFilterCount() {
      return filter_.size();
    }
    /**
     * <pre>
     * A list of filters (normally quality filters) this variant has failed.
     * `PASS` indicates this variant has passed all filters.
     * </pre>
     *
     * <code>repeated string filter = 9;</code>
     * @param index The index of the element to return.
     * @return The filter at the given index.
     */
    public java.lang.String getFilter(int index) {
      return filter_.get(index);
    }
    /**
     * <pre>
     * A list of filters (normally quality filters) this variant has failed.
     * `PASS` indicates this variant has passed all filters.
     * </pre>
     *
     * <code>repeated string filter = 9;</code>
     * @param index The index of the value to return.
     * @return The bytes of the filter at the given index.
     */
    public com.google.protobuf.ByteString
        getFilterBytes(int index) {
      return filter_.getByteString(index);
    }
    /**
     * <pre>
     * A list of filters (normally quality filters) this variant has failed.
     * `PASS` indicates this variant has passed all filters.
     * </pre>
     *
     * <code>repeated string filter = 9;</code>
     * @param index The index to set the value at.
     * @param value The filter to set.
     * @return This builder for chaining.
     */
    public Builder setFilter(
        int index, java.lang.String value) {
      if (value == null) { throw new NullPointerException(); }
      ensureFilterIsMutable();
      filter_.set(index, value);
      onChanged();
      return this;
    }
    /**
     * <pre>
     * A list of filters (normally quality filters) this variant has failed.
     * `PASS` indicates this variant has passed all filters.
     * </pre>
     *
     * <code>repeated string filter = 9;</code>
     * @param value The filter to add.
     * @return This builder for chaining.
     */
    public Builder addFilter(
        java.lang.String value) {
      if (value == null) { throw new NullPointerException(); }
      ensureFilterIsMutable();
      filter_.add(value);
      onChanged();
      return this;
    }
    /**
     * <pre>
     * A list of filters (normally quality filters) this variant has failed.
     * `PASS` indicates this variant has passed all filters.
     * </pre>
     *
     * <code>repeated string filter = 9;</code>
     * @param values The filter to add.
     * @return This builder for chaining.
     */
    public Builder addAllFilter(
        java.lang.Iterable<java.lang.String> values) {
      ensureFilterIsMutable();
      com.google.protobuf.AbstractMessageLite.Builder.addAll(
          values, filter_);
      onChanged();
      return this;
    }
    /**
     * <pre>
     * A list of filters (normally quality filters) this variant has failed.
     * `PASS` indicates this variant has passed all filters.
     * </pre>
     *
     * <code>repeated string filter = 9;</code>
     * @return This builder for chaining.
     */
    public Builder clearFilter() {
      filter_ = com.google.protobuf.LazyStringArrayList.EMPTY;
      bitField0_ = (bitField0_ & ~0x00000400);
      onChanged();
      return this;
    }
    /**
     * <pre>
     * A list of filters (normally quality filters) this variant has failed.
     * `PASS` indicates this variant has passed all filters.
     * </pre>
     *
     * <code>repeated string filter = 9;</code>
     * @param value The bytes of the filter to add.
     * @return This builder for chaining.
     */
    public Builder addFilterBytes(
        com.google.protobuf.ByteString value) {
      if (value == null) { throw new NullPointerException(); }
      checkByteStringIsUtf8(value);
      ensureFilterIsMutable();
      filter_.add(value);
      onChanged();
      return this;
    }

    private com.google.protobuf.MapField<
        java.lang.String, com.google.protobuf.ListValue> info_;
    private com.google.protobuf.MapField<java.lang.String, com.google.protobuf.ListValue>
        internalGetInfo() {
      if (info_ == null) {
        return com.google.protobuf.MapField.emptyMapField(
            InfoDefaultEntryHolder.defaultEntry);
      }
      return info_;
    }
    private com.google.protobuf.MapField<java.lang.String, com.google.protobuf.ListValue>
        internalGetMutableInfo() {
      if (info_ == null) {
        info_ = com.google.protobuf.MapField.newMapField(
            InfoDefaultEntryHolder.defaultEntry);
      }
      if (!info_.isMutable()) {
        info_ = info_.copy();
      }
      bitField0_ |= 0x00000800;
      onChanged();
      return info_;
    }
    public int getInfoCount() {
      return internalGetInfo().getMap().size();
    }
    /**
     * <pre>
     * A map of additional variant information. This must be of the form
     * map&lt;string, string[]&gt; (string key mapping to a list of string values).
     * </pre>
     *
     * <code>map&lt;string, .google.protobuf.ListValue&gt; info = 10;</code>
     */
    @java.lang.Override
    public boolean containsInfo(
        java.lang.String key) {
      if (key == null) { throw new NullPointerException("map key"); }
      return internalGetInfo().getMap().containsKey(key);
    }
    /**
     * Use {@link #getInfoMap()} instead.
     */
    @java.lang.Override
    @java.lang.Deprecated
    public java.util.Map<java.lang.String, com.google.protobuf.ListValue> getInfo() {
      return getInfoMap();
    }
    /**
     * <pre>
     * A map of additional variant information. This must be of the form
     * map&lt;string, string[]&gt; (string key mapping to a list of string values).
     * </pre>
     *
     * <code>map&lt;string, .google.protobuf.ListValue&gt; info = 10;</code>
     */
    @java.lang.Override
    public java.util.Map<java.lang.String, com.google.protobuf.ListValue> getInfoMap() {
      return internalGetInfo().getMap();
    }
    /**
     * <pre>
     * A map of additional variant information. This must be of the form
     * map&lt;string, string[]&gt; (string key mapping to a list of string values).
     * </pre>
     *
     * <code>map&lt;string, .google.protobuf.ListValue&gt; info = 10;</code>
     */
    @java.lang.Override
    public /* nullable */
com.google.protobuf.ListValue getInfoOrDefault(
        java.lang.String key,
        /* nullable */
com.google.protobuf.ListValue defaultValue) {
      if (key == null) { throw new NullPointerException("map key"); }
      java.util.Map<java.lang.String, com.google.protobuf.ListValue> map =
          internalGetInfo().getMap();
      return map.containsKey(key) ? map.get(key) : defaultValue;
    }
    /**
     * <pre>
     * A map of additional variant information. This must be of the form
     * map&lt;string, string[]&gt; (string key mapping to a list of string values).
     * </pre>
     *
     * <code>map&lt;string, .google.protobuf.ListValue&gt; info = 10;</code>
     */
    @java.lang.Override
    public com.google.protobuf.ListValue getInfoOrThrow(
        java.lang.String key) {
      if (key == null) { throw new NullPointerException("map key"); }
      java.util.Map<java.lang.String, com.google.protobuf.ListValue> map =
          internalGetInfo().getMap();
      if (!map.containsKey(key)) {
        throw new java.lang.IllegalArgumentException();
      }
      return map.get(key);
    }
    public Builder clearInfo() {
      bitField0_ = (bitField0_ & ~0x00000800);
      internalGetMutableInfo().getMutableMap()
          .clear();
      return this;
    }
    /**
     * <pre>
     * A map of additional variant information. This must be of the form
     * map&lt;string, string[]&gt; (string key mapping to a list of string values).
     * </pre>
     *
     * <code>map&lt;string, .google.protobuf.ListValue&gt; info = 10;</code>
     */
    public Builder removeInfo(
        java.lang.String key) {
      if (key == null) { throw new NullPointerException("map key"); }
      internalGetMutableInfo().getMutableMap()
          .remove(key);
      return this;
    }
    /**
     * Use alternate mutation accessors instead.
     */
    @java.lang.Deprecated
    public java.util.Map<java.lang.String, com.google.protobuf.ListValue>
        getMutableInfo() {
      bitField0_ |= 0x00000800;
      return internalGetMutableInfo().getMutableMap();
    }
    /**
     * <pre>
     * A map of additional variant information. This must be of the form
     * map&lt;string, string[]&gt; (string key mapping to a list of string values).
     * </pre>
     *
     * <code>map&lt;string, .google.protobuf.ListValue&gt; info = 10;</code>
     */
    public Builder putInfo(
        java.lang.String key,
        com.google.protobuf.ListValue value) {
      if (key == null) { throw new NullPointerException("map key"); }
      if (value == null) { throw new NullPointerException("map value"); }
      internalGetMutableInfo().getMutableMap()
          .put(key, value);
      bitField0_ |= 0x00000800;
      return this;
    }
    /**
     * <pre>
     * A map of additional variant information. This must be of the form
     * map&lt;string, string[]&gt; (string key mapping to a list of string values).
     * </pre>
     *
     * <code>map&lt;string, .google.protobuf.ListValue&gt; info = 10;</code>
     */
    public Builder putAllInfo(
        java.util.Map<java.lang.String, com.google.protobuf.ListValue> values) {
      internalGetMutableInfo().getMutableMap()
          .putAll(values);
      bitField0_ |= 0x00000800;
      return this;
    }

    private java.util.List<com.google.genomics.v1.VariantCall> calls_ =
      java.util.Collections.emptyList();
    private void ensureCallsIsMutable() {
      if (!((bitField0_ & 0x00001000) != 0)) {
        calls_ = new java.util.ArrayList<com.google.genomics.v1.VariantCall>(calls_);
        bitField0_ |= 0x00001000;
       }
    }

    private com.google.protobuf.RepeatedFieldBuilderV3<
        com.google.genomics.v1.VariantCall, com.google.genomics.v1.VariantCall.Builder, com.google.genomics.v1.VariantCallOrBuilder> callsBuilder_;

    /**
     * <pre>
     * The variant calls for this particular variant. Each one represents the
     * determination of genotype with respect to this variant.
     * </pre>
     *
     * <code>repeated .google.genomics.v1.VariantCall calls = 11;</code>
     */
    public java.util.List<com.google.genomics.v1.VariantCall> getCallsList() {
      if (callsBuilder_ == null) {
        return java.util.Collections.unmodifiableList(calls_);
      } else {
        return callsBuilder_.getMessageList();
      }
    }
    /**
     * <pre>
     * The variant calls for this particular variant. Each one represents the
     * determination of genotype with respect to this variant.
     * </pre>
     *
     * <code>repeated .google.genomics.v1.VariantCall calls = 11;</code>
     */
    public int getCallsCount() {
      if (callsBuilder_ == null) {
        return calls_.size();
      } else {
        return callsBuilder_.getCount();
      }
    }
    /**
     * <pre>
     * The variant calls for this particular variant. Each one represents the
     * determination of genotype with respect to this variant.
     * </pre>
     *
     * <code>repeated .google.genomics.v1.VariantCall calls = 11;</code>
     */
    public com.google.genomics.v1.VariantCall getCalls(int index) {
      if (callsBuilder_ == null) {
        return calls_.get(index);
      } else {
        return callsBuilder_.getMessage(index);
      }
    }
    /**
     * <pre>
     * The variant calls for this particular variant. Each one represents the
     * determination of genotype with respect to this variant.
     * </pre>
     *
     * <code>repeated .google.genomics.v1.VariantCall calls = 11;</code>
     */
    public Builder setCalls(
        int index, com.google.genomics.v1.VariantCall value) {
      if (callsBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureCallsIsMutable();
        calls_.set(index, value);
        onChanged();
      } else {
        callsBuilder_.setMessage(index, value);
      }
      return this;
    }
    /**
     * <pre>
     * The variant calls for this particular variant. Each one represents the
     * determination of genotype with respect to this variant.
     * </pre>
     *
     * <code>repeated .google.genomics.v1.VariantCall calls = 11;</code>
     */
    public Builder setCalls(
        int index, com.google.genomics.v1.VariantCall.Builder builderForValue) {
      if (callsBuilder_ == null) {
        ensureCallsIsMutable();
        calls_.set(index, builderForValue.build());
        onChanged();
      } else {
        callsBuilder_.setMessage(index, builderForValue.build());
      }
      return this;
    }
    /**
     * <pre>
     * The variant calls for this particular variant. Each one represents the
     * determination of genotype with respect to this variant.
     * </pre>
     *
     * <code>repeated .google.genomics.v1.VariantCall calls = 11;</code>
     */
    public Builder addCalls(com.google.genomics.v1.VariantCall value) {
      if (callsBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureCallsIsMutable();
        calls_.add(value);
        onChanged();
      } else {
        callsBuilder_.addMessage(value);
      }
      return this;
    }
    /**
     * <pre>
     * The variant calls for this particular variant. Each one represents the
     * determination of genotype with respect to this variant.
     * </pre>
     *
     * <code>repeated .google.genomics.v1.VariantCall calls = 11;</code>
     */
    public Builder addCalls(
        int index, com.google.genomics.v1.VariantCall value) {
      if (callsBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureCallsIsMutable();
        calls_.add(index, value);
        onChanged();
      } else {
        callsBuilder_.addMessage(index, value);
      }
      return this;
    }
    /**
     * <pre>
     * The variant calls for this particular variant. Each one represents the
     * determination of genotype with respect to this variant.
     * </pre>
     *
     * <code>repeated .google.genomics.v1.VariantCall calls = 11;</code>
     */
    public Builder addCalls(
        com.google.genomics.v1.VariantCall.Builder builderForValue) {
      if (callsBuilder_ == null) {
        ensureCallsIsMutable();
        calls_.add(builderForValue.build());
        onChanged();
      } else {
        callsBuilder_.addMessage(builderForValue.build());
      }
      return this;
    }
    /**
     * <pre>
     * The variant calls for this particular variant. Each one represents the
     * determination of genotype with respect to this variant.
     * </pre>
     *
     * <code>repeated .google.genomics.v1.VariantCall calls = 11;</code>
     */
    public Builder addCalls(
        int index, com.google.genomics.v1.VariantCall.Builder builderForValue) {
      if (callsBuilder_ == null) {
        ensureCallsIsMutable();
        calls_.add(index, builderForValue.build());
        onChanged();
      } else {
        callsBuilder_.addMessage(index, builderForValue.build());
      }
      return this;
    }
    /**
     * <pre>
     * The variant calls for this particular variant. Each one represents the
     * determination of genotype with respect to this variant.
     * </pre>
     *
     * <code>repeated .google.genomics.v1.VariantCall calls = 11;</code>
     */
    public Builder addAllCalls(
        java.lang.Iterable<? extends com.google.genomics.v1.VariantCall> values) {
      if (callsBuilder_ == null) {
        ensureCallsIsMutable();
        com.google.protobuf.AbstractMessageLite.Builder.addAll(
            values, calls_);
        onChanged();
      } else {
        callsBuilder_.addAllMessages(values);
      }
      return this;
    }
    /**
     * <pre>
     * The variant calls for this particular variant. Each one represents the
     * determination of genotype with respect to this variant.
     * </pre>
     *
     * <code>repeated .google.genomics.v1.VariantCall calls = 11;</code>
     */
    public Builder clearCalls() {
      if (callsBuilder_ == null) {
        calls_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00001000);
        onChanged();
      } else {
        callsBuilder_.clear();
      }
      return this;
    }
    /**
     * <pre>
     * The variant calls for this particular variant. Each one represents the
     * determination of genotype with respect to this variant.
     * </pre>
     *
     * <code>repeated .google.genomics.v1.VariantCall calls = 11;</code>
     */
    public Builder removeCalls(int index) {
      if (callsBuilder_ == null) {
        ensureCallsIsMutable();
        calls_.remove(index);
        onChanged();
      } else {
        callsBuilder_.remove(index);
      }
      return this;
    }
    /**
     * <pre>
     * The variant calls for this particular variant. Each one represents the
     * determination of genotype with respect to this variant.
     * </pre>
     *
     * <code>repeated .google.genomics.v1.VariantCall calls = 11;</code>
     */
    public com.google.genomics.v1.VariantCall.Builder getCallsBuilder(
        int index) {
      return getCallsFieldBuilder().getBuilder(index);
    }
    /**
     * <pre>
     * The variant calls for this particular variant. Each one represents the
     * determination of genotype with respect to this variant.
     * </pre>
     *
     * <code>repeated .google.genomics.v1.VariantCall calls = 11;</code>
     */
    public com.google.genomics.v1.VariantCallOrBuilder getCallsOrBuilder(
        int index) {
      if (callsBuilder_ == null) {
        return calls_.get(index);  } else {
        return callsBuilder_.getMessageOrBuilder(index);
      }
    }
    /**
     * <pre>
     * The variant calls for this particular variant. Each one represents the
     * determination of genotype with respect to this variant.
     * </pre>
     *
     * <code>repeated .google.genomics.v1.VariantCall calls = 11;</code>
     */
    public java.util.List<? extends com.google.genomics.v1.VariantCallOrBuilder> 
         getCallsOrBuilderList() {
      if (callsBuilder_ != null) {
        return callsBuilder_.getMessageOrBuilderList();
      } else {
        return java.util.Collections.unmodifiableList(calls_);
      }
    }
    /**
     * <pre>
     * The variant calls for this particular variant. Each one represents the
     * determination of genotype with respect to this variant.
     * </pre>
     *
     * <code>repeated .google.genomics.v1.VariantCall calls = 11;</code>
     */
    public com.google.genomics.v1.VariantCall.Builder addCallsBuilder() {
      return getCallsFieldBuilder().addBuilder(
          com.google.genomics.v1.VariantCall.getDefaultInstance());
    }
    /**
     * <pre>
     * The variant calls for this particular variant. Each one represents the
     * determination of genotype with respect to this variant.
     * </pre>
     *
     * <code>repeated .google.genomics.v1.VariantCall calls = 11;</code>
     */
    public com.google.genomics.v1.VariantCall.Builder addCallsBuilder(
        int index) {
      return getCallsFieldBuilder().addBuilder(
          index, com.google.genomics.v1.VariantCall.getDefaultInstance());
    }
    /**
     * <pre>
     * The variant calls for this particular variant. Each one represents the
     * determination of genotype with respect to this variant.
     * </pre>
     *
     * <code>repeated .google.genomics.v1.VariantCall calls = 11;</code>
     */
    public java.util.List<com.google.genomics.v1.VariantCall.Builder> 
         getCallsBuilderList() {
      return getCallsFieldBuilder().getBuilderList();
    }
    private com.google.protobuf.RepeatedFieldBuilderV3<
        com.google.genomics.v1.VariantCall, com.google.genomics.v1.VariantCall.Builder, com.google.genomics.v1.VariantCallOrBuilder> 
        getCallsFieldBuilder() {
      if (callsBuilder_ == null) {
        callsBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<
            com.google.genomics.v1.VariantCall, com.google.genomics.v1.VariantCall.Builder, com.google.genomics.v1.VariantCallOrBuilder>(
                calls_,
                ((bitField0_ & 0x00001000) != 0),
                getParentForChildren(),
                isClean());
        calls_ = null;
      }
      return callsBuilder_;
    }
    @java.lang.Override
    public final Builder setUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return super.setUnknownFields(unknownFields);
    }

    @java.lang.Override
    public final Builder mergeUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return super.mergeUnknownFields(unknownFields);
    }


    // @@protoc_insertion_point(builder_scope:google.genomics.v1.Variant)
  }

  // @@protoc_insertion_point(class_scope:google.genomics.v1.Variant)
  private static final com.google.genomics.v1.Variant DEFAULT_INSTANCE;
  static {
    DEFAULT_INSTANCE = new com.google.genomics.v1.Variant();
  }

  public static com.google.genomics.v1.Variant getDefaultInstance() {
    return DEFAULT_INSTANCE;
  }

  private static final com.google.protobuf.Parser<Variant>
      PARSER = new com.google.protobuf.AbstractParser<Variant>() {
    @java.lang.Override
    public Variant parsePartialFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      Builder builder = newBuilder();
      try {
        builder.mergeFrom(input, extensionRegistry);
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(builder.buildPartial());
      } catch (com.google.protobuf.UninitializedMessageException e) {
        throw e.asInvalidProtocolBufferException().setUnfinishedMessage(builder.buildPartial());
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(e)
            .setUnfinishedMessage(builder.buildPartial());
      }
      return builder.buildPartial();
    }
  };

  public static com.google.protobuf.Parser<Variant> parser() {
    return PARSER;
  }

  @java.lang.Override
  public com.google.protobuf.Parser<Variant> getParserForType() {
    return PARSER;
  }

  @java.lang.Override
  public com.google.genomics.v1.Variant getDefaultInstanceForType() {
    return DEFAULT_INSTANCE;
  }

}

