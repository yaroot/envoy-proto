// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: google/genomics/v1/annotations.proto

package com.google.genomics.v1;

/**
 * Protobuf type {@code google.genomics.v1.VariantAnnotation}
 */
public final class VariantAnnotation extends
    com.google.protobuf.GeneratedMessageV3 implements
    // @@protoc_insertion_point(message_implements:google.genomics.v1.VariantAnnotation)
    VariantAnnotationOrBuilder {
private static final long serialVersionUID = 0L;
  // Use VariantAnnotation.newBuilder() to construct.
  private VariantAnnotation(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
    super(builder);
  }
  private VariantAnnotation() {
    type_ = 0;
    effect_ = 0;
    alternateBases_ = "";
    geneId_ = "";
    transcriptIds_ = com.google.protobuf.LazyStringArrayList.EMPTY;
    conditions_ = java.util.Collections.emptyList();
    clinicalSignificance_ = 0;
  }

  @java.lang.Override
  @SuppressWarnings({"unused"})
  protected java.lang.Object newInstance(
      UnusedPrivateParameter unused) {
    return new VariantAnnotation();
  }

  @java.lang.Override
  public final com.google.protobuf.UnknownFieldSet
  getUnknownFields() {
    return this.unknownFields;
  }
  public static final com.google.protobuf.Descriptors.Descriptor
      getDescriptor() {
    return com.google.genomics.v1.AnnotationsProto.internal_static_google_genomics_v1_VariantAnnotation_descriptor;
  }

  @java.lang.Override
  protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internalGetFieldAccessorTable() {
    return com.google.genomics.v1.AnnotationsProto.internal_static_google_genomics_v1_VariantAnnotation_fieldAccessorTable
        .ensureFieldAccessorsInitialized(
            com.google.genomics.v1.VariantAnnotation.class, com.google.genomics.v1.VariantAnnotation.Builder.class);
  }

  /**
   * Protobuf enum {@code google.genomics.v1.VariantAnnotation.Type}
   */
  public enum Type
      implements com.google.protobuf.ProtocolMessageEnum {
    /**
     * <code>TYPE_UNSPECIFIED = 0;</code>
     */
    TYPE_UNSPECIFIED(0),
    /**
     * <pre>
     * `TYPE_OTHER` should be used when no other Type will suffice.
     * Further explanation of the variant type may be included in the
     * [info][google.genomics.v1.Annotation.info] field.
     * </pre>
     *
     * <code>TYPE_OTHER = 1;</code>
     */
    TYPE_OTHER(1),
    /**
     * <pre>
     * `INSERTION` indicates an insertion.
     * </pre>
     *
     * <code>INSERTION = 2;</code>
     */
    INSERTION(2),
    /**
     * <pre>
     * `DELETION` indicates a deletion.
     * </pre>
     *
     * <code>DELETION = 3;</code>
     */
    DELETION(3),
    /**
     * <pre>
     * `SUBSTITUTION` indicates a block substitution of
     * two or more nucleotides.
     * </pre>
     *
     * <code>SUBSTITUTION = 4;</code>
     */
    SUBSTITUTION(4),
    /**
     * <pre>
     * `SNP` indicates a single nucleotide polymorphism.
     * </pre>
     *
     * <code>SNP = 5;</code>
     */
    SNP(5),
    /**
     * <pre>
     * `STRUCTURAL` indicates a large structural variant,
     * including chromosomal fusions, inversions, etc.
     * </pre>
     *
     * <code>STRUCTURAL = 6;</code>
     */
    STRUCTURAL(6),
    /**
     * <pre>
     * `CNV` indicates a variation in copy number.
     * </pre>
     *
     * <code>CNV = 7;</code>
     */
    CNV(7),
    UNRECOGNIZED(-1),
    ;

    /**
     * <code>TYPE_UNSPECIFIED = 0;</code>
     */
    public static final int TYPE_UNSPECIFIED_VALUE = 0;
    /**
     * <pre>
     * `TYPE_OTHER` should be used when no other Type will suffice.
     * Further explanation of the variant type may be included in the
     * [info][google.genomics.v1.Annotation.info] field.
     * </pre>
     *
     * <code>TYPE_OTHER = 1;</code>
     */
    public static final int TYPE_OTHER_VALUE = 1;
    /**
     * <pre>
     * `INSERTION` indicates an insertion.
     * </pre>
     *
     * <code>INSERTION = 2;</code>
     */
    public static final int INSERTION_VALUE = 2;
    /**
     * <pre>
     * `DELETION` indicates a deletion.
     * </pre>
     *
     * <code>DELETION = 3;</code>
     */
    public static final int DELETION_VALUE = 3;
    /**
     * <pre>
     * `SUBSTITUTION` indicates a block substitution of
     * two or more nucleotides.
     * </pre>
     *
     * <code>SUBSTITUTION = 4;</code>
     */
    public static final int SUBSTITUTION_VALUE = 4;
    /**
     * <pre>
     * `SNP` indicates a single nucleotide polymorphism.
     * </pre>
     *
     * <code>SNP = 5;</code>
     */
    public static final int SNP_VALUE = 5;
    /**
     * <pre>
     * `STRUCTURAL` indicates a large structural variant,
     * including chromosomal fusions, inversions, etc.
     * </pre>
     *
     * <code>STRUCTURAL = 6;</code>
     */
    public static final int STRUCTURAL_VALUE = 6;
    /**
     * <pre>
     * `CNV` indicates a variation in copy number.
     * </pre>
     *
     * <code>CNV = 7;</code>
     */
    public static final int CNV_VALUE = 7;


    public final int getNumber() {
      if (this == UNRECOGNIZED) {
        throw new java.lang.IllegalArgumentException(
            "Can't get the number of an unknown enum value.");
      }
      return value;
    }

    /**
     * @param value The numeric wire value of the corresponding enum entry.
     * @return The enum associated with the given numeric wire value.
     * @deprecated Use {@link #forNumber(int)} instead.
     */
    @java.lang.Deprecated
    public static Type valueOf(int value) {
      return forNumber(value);
    }

    /**
     * @param value The numeric wire value of the corresponding enum entry.
     * @return The enum associated with the given numeric wire value.
     */
    public static Type forNumber(int value) {
      switch (value) {
        case 0: return TYPE_UNSPECIFIED;
        case 1: return TYPE_OTHER;
        case 2: return INSERTION;
        case 3: return DELETION;
        case 4: return SUBSTITUTION;
        case 5: return SNP;
        case 6: return STRUCTURAL;
        case 7: return CNV;
        default: return null;
      }
    }

    public static com.google.protobuf.Internal.EnumLiteMap<Type>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static final com.google.protobuf.Internal.EnumLiteMap<
        Type> internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<Type>() {
            public Type findValueByNumber(int number) {
              return Type.forNumber(number);
            }
          };

    public final com.google.protobuf.Descriptors.EnumValueDescriptor
        getValueDescriptor() {
      if (this == UNRECOGNIZED) {
        throw new java.lang.IllegalStateException(
            "Can't get the descriptor of an unrecognized enum value.");
      }
      return getDescriptor().getValues().get(ordinal());
    }
    public final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptorForType() {
      return getDescriptor();
    }
    public static final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptor() {
      return com.google.genomics.v1.VariantAnnotation.getDescriptor().getEnumTypes().get(0);
    }

    private static final Type[] VALUES = values();

    public static Type valueOf(
        com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
      if (desc.getType() != getDescriptor()) {
        throw new java.lang.IllegalArgumentException(
          "EnumValueDescriptor is not for this type.");
      }
      if (desc.getIndex() == -1) {
        return UNRECOGNIZED;
      }
      return VALUES[desc.getIndex()];
    }

    private final int value;

    private Type(int value) {
      this.value = value;
    }

    // @@protoc_insertion_point(enum_scope:google.genomics.v1.VariantAnnotation.Type)
  }

  /**
   * Protobuf enum {@code google.genomics.v1.VariantAnnotation.Effect}
   */
  public enum Effect
      implements com.google.protobuf.ProtocolMessageEnum {
    /**
     * <code>EFFECT_UNSPECIFIED = 0;</code>
     */
    EFFECT_UNSPECIFIED(0),
    /**
     * <pre>
     * `EFFECT_OTHER` should be used when no other Effect
     * will suffice.
     * </pre>
     *
     * <code>EFFECT_OTHER = 1;</code>
     */
    EFFECT_OTHER(1),
    /**
     * <pre>
     * `FRAMESHIFT` indicates a mutation in which the insertion or
     * deletion of nucleotides resulted in a frameshift change.
     * </pre>
     *
     * <code>FRAMESHIFT = 2;</code>
     */
    FRAMESHIFT(2),
    /**
     * <pre>
     * `FRAME_PRESERVING_INDEL` indicates a mutation in which a
     * multiple of three nucleotides has been inserted or deleted, resulting
     * in no change to the reading frame of the coding sequence.
     * </pre>
     *
     * <code>FRAME_PRESERVING_INDEL = 3;</code>
     */
    FRAME_PRESERVING_INDEL(3),
    /**
     * <pre>
     * `SYNONYMOUS_SNP` indicates a single nucleotide polymorphism
     * mutation that results in no amino acid change.
     * </pre>
     *
     * <code>SYNONYMOUS_SNP = 4;</code>
     */
    SYNONYMOUS_SNP(4),
    /**
     * <pre>
     * `NONSYNONYMOUS_SNP` indicates a single nucleotide
     * polymorphism mutation that results in an amino acid change.
     * </pre>
     *
     * <code>NONSYNONYMOUS_SNP = 5;</code>
     */
    NONSYNONYMOUS_SNP(5),
    /**
     * <pre>
     * `STOP_GAIN` indicates a mutation that leads to the creation
     * of a stop codon at the variant site. Frameshift mutations creating
     * downstream stop codons do not count as `STOP_GAIN`.
     * </pre>
     *
     * <code>STOP_GAIN = 6;</code>
     */
    STOP_GAIN(6),
    /**
     * <pre>
     * `STOP_LOSS` indicates a mutation that eliminates a
     * stop codon at the variant site.
     * </pre>
     *
     * <code>STOP_LOSS = 7;</code>
     */
    STOP_LOSS(7),
    /**
     * <pre>
     * `SPLICE_SITE_DISRUPTION` indicates that this variant is
     * found in a splice site for the associated transcript, and alters the
     * normal splicing pattern.
     * </pre>
     *
     * <code>SPLICE_SITE_DISRUPTION = 8;</code>
     */
    SPLICE_SITE_DISRUPTION(8),
    UNRECOGNIZED(-1),
    ;

    /**
     * <code>EFFECT_UNSPECIFIED = 0;</code>
     */
    public static final int EFFECT_UNSPECIFIED_VALUE = 0;
    /**
     * <pre>
     * `EFFECT_OTHER` should be used when no other Effect
     * will suffice.
     * </pre>
     *
     * <code>EFFECT_OTHER = 1;</code>
     */
    public static final int EFFECT_OTHER_VALUE = 1;
    /**
     * <pre>
     * `FRAMESHIFT` indicates a mutation in which the insertion or
     * deletion of nucleotides resulted in a frameshift change.
     * </pre>
     *
     * <code>FRAMESHIFT = 2;</code>
     */
    public static final int FRAMESHIFT_VALUE = 2;
    /**
     * <pre>
     * `FRAME_PRESERVING_INDEL` indicates a mutation in which a
     * multiple of three nucleotides has been inserted or deleted, resulting
     * in no change to the reading frame of the coding sequence.
     * </pre>
     *
     * <code>FRAME_PRESERVING_INDEL = 3;</code>
     */
    public static final int FRAME_PRESERVING_INDEL_VALUE = 3;
    /**
     * <pre>
     * `SYNONYMOUS_SNP` indicates a single nucleotide polymorphism
     * mutation that results in no amino acid change.
     * </pre>
     *
     * <code>SYNONYMOUS_SNP = 4;</code>
     */
    public static final int SYNONYMOUS_SNP_VALUE = 4;
    /**
     * <pre>
     * `NONSYNONYMOUS_SNP` indicates a single nucleotide
     * polymorphism mutation that results in an amino acid change.
     * </pre>
     *
     * <code>NONSYNONYMOUS_SNP = 5;</code>
     */
    public static final int NONSYNONYMOUS_SNP_VALUE = 5;
    /**
     * <pre>
     * `STOP_GAIN` indicates a mutation that leads to the creation
     * of a stop codon at the variant site. Frameshift mutations creating
     * downstream stop codons do not count as `STOP_GAIN`.
     * </pre>
     *
     * <code>STOP_GAIN = 6;</code>
     */
    public static final int STOP_GAIN_VALUE = 6;
    /**
     * <pre>
     * `STOP_LOSS` indicates a mutation that eliminates a
     * stop codon at the variant site.
     * </pre>
     *
     * <code>STOP_LOSS = 7;</code>
     */
    public static final int STOP_LOSS_VALUE = 7;
    /**
     * <pre>
     * `SPLICE_SITE_DISRUPTION` indicates that this variant is
     * found in a splice site for the associated transcript, and alters the
     * normal splicing pattern.
     * </pre>
     *
     * <code>SPLICE_SITE_DISRUPTION = 8;</code>
     */
    public static final int SPLICE_SITE_DISRUPTION_VALUE = 8;


    public final int getNumber() {
      if (this == UNRECOGNIZED) {
        throw new java.lang.IllegalArgumentException(
            "Can't get the number of an unknown enum value.");
      }
      return value;
    }

    /**
     * @param value The numeric wire value of the corresponding enum entry.
     * @return The enum associated with the given numeric wire value.
     * @deprecated Use {@link #forNumber(int)} instead.
     */
    @java.lang.Deprecated
    public static Effect valueOf(int value) {
      return forNumber(value);
    }

    /**
     * @param value The numeric wire value of the corresponding enum entry.
     * @return The enum associated with the given numeric wire value.
     */
    public static Effect forNumber(int value) {
      switch (value) {
        case 0: return EFFECT_UNSPECIFIED;
        case 1: return EFFECT_OTHER;
        case 2: return FRAMESHIFT;
        case 3: return FRAME_PRESERVING_INDEL;
        case 4: return SYNONYMOUS_SNP;
        case 5: return NONSYNONYMOUS_SNP;
        case 6: return STOP_GAIN;
        case 7: return STOP_LOSS;
        case 8: return SPLICE_SITE_DISRUPTION;
        default: return null;
      }
    }

    public static com.google.protobuf.Internal.EnumLiteMap<Effect>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static final com.google.protobuf.Internal.EnumLiteMap<
        Effect> internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<Effect>() {
            public Effect findValueByNumber(int number) {
              return Effect.forNumber(number);
            }
          };

    public final com.google.protobuf.Descriptors.EnumValueDescriptor
        getValueDescriptor() {
      if (this == UNRECOGNIZED) {
        throw new java.lang.IllegalStateException(
            "Can't get the descriptor of an unrecognized enum value.");
      }
      return getDescriptor().getValues().get(ordinal());
    }
    public final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptorForType() {
      return getDescriptor();
    }
    public static final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptor() {
      return com.google.genomics.v1.VariantAnnotation.getDescriptor().getEnumTypes().get(1);
    }

    private static final Effect[] VALUES = values();

    public static Effect valueOf(
        com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
      if (desc.getType() != getDescriptor()) {
        throw new java.lang.IllegalArgumentException(
          "EnumValueDescriptor is not for this type.");
      }
      if (desc.getIndex() == -1) {
        return UNRECOGNIZED;
      }
      return VALUES[desc.getIndex()];
    }

    private final int value;

    private Effect(int value) {
      this.value = value;
    }

    // @@protoc_insertion_point(enum_scope:google.genomics.v1.VariantAnnotation.Effect)
  }

  /**
   * Protobuf enum {@code google.genomics.v1.VariantAnnotation.ClinicalSignificance}
   */
  public enum ClinicalSignificance
      implements com.google.protobuf.ProtocolMessageEnum {
    /**
     * <code>CLINICAL_SIGNIFICANCE_UNSPECIFIED = 0;</code>
     */
    CLINICAL_SIGNIFICANCE_UNSPECIFIED(0),
    /**
     * <pre>
     * `OTHER` should be used when no other clinical significance
     * value will suffice.
     * </pre>
     *
     * <code>CLINICAL_SIGNIFICANCE_OTHER = 1;</code>
     */
    CLINICAL_SIGNIFICANCE_OTHER(1),
    /**
     * <code>UNCERTAIN = 2;</code>
     */
    UNCERTAIN(2),
    /**
     * <code>BENIGN = 3;</code>
     */
    BENIGN(3),
    /**
     * <code>LIKELY_BENIGN = 4;</code>
     */
    LIKELY_BENIGN(4),
    /**
     * <code>LIKELY_PATHOGENIC = 5;</code>
     */
    LIKELY_PATHOGENIC(5),
    /**
     * <code>PATHOGENIC = 6;</code>
     */
    PATHOGENIC(6),
    /**
     * <code>DRUG_RESPONSE = 7;</code>
     */
    DRUG_RESPONSE(7),
    /**
     * <code>HISTOCOMPATIBILITY = 8;</code>
     */
    HISTOCOMPATIBILITY(8),
    /**
     * <code>CONFERS_SENSITIVITY = 9;</code>
     */
    CONFERS_SENSITIVITY(9),
    /**
     * <code>RISK_FACTOR = 10;</code>
     */
    RISK_FACTOR(10),
    /**
     * <code>ASSOCIATION = 11;</code>
     */
    ASSOCIATION(11),
    /**
     * <code>PROTECTIVE = 12;</code>
     */
    PROTECTIVE(12),
    /**
     * <pre>
     * `MULTIPLE_REPORTED` should be used when multiple clinical
     * signficances are reported for a variant. The original clinical
     * significance values may be provided in the `info` field.
     * </pre>
     *
     * <code>MULTIPLE_REPORTED = 13;</code>
     */
    MULTIPLE_REPORTED(13),
    UNRECOGNIZED(-1),
    ;

    /**
     * <code>CLINICAL_SIGNIFICANCE_UNSPECIFIED = 0;</code>
     */
    public static final int CLINICAL_SIGNIFICANCE_UNSPECIFIED_VALUE = 0;
    /**
     * <pre>
     * `OTHER` should be used when no other clinical significance
     * value will suffice.
     * </pre>
     *
     * <code>CLINICAL_SIGNIFICANCE_OTHER = 1;</code>
     */
    public static final int CLINICAL_SIGNIFICANCE_OTHER_VALUE = 1;
    /**
     * <code>UNCERTAIN = 2;</code>
     */
    public static final int UNCERTAIN_VALUE = 2;
    /**
     * <code>BENIGN = 3;</code>
     */
    public static final int BENIGN_VALUE = 3;
    /**
     * <code>LIKELY_BENIGN = 4;</code>
     */
    public static final int LIKELY_BENIGN_VALUE = 4;
    /**
     * <code>LIKELY_PATHOGENIC = 5;</code>
     */
    public static final int LIKELY_PATHOGENIC_VALUE = 5;
    /**
     * <code>PATHOGENIC = 6;</code>
     */
    public static final int PATHOGENIC_VALUE = 6;
    /**
     * <code>DRUG_RESPONSE = 7;</code>
     */
    public static final int DRUG_RESPONSE_VALUE = 7;
    /**
     * <code>HISTOCOMPATIBILITY = 8;</code>
     */
    public static final int HISTOCOMPATIBILITY_VALUE = 8;
    /**
     * <code>CONFERS_SENSITIVITY = 9;</code>
     */
    public static final int CONFERS_SENSITIVITY_VALUE = 9;
    /**
     * <code>RISK_FACTOR = 10;</code>
     */
    public static final int RISK_FACTOR_VALUE = 10;
    /**
     * <code>ASSOCIATION = 11;</code>
     */
    public static final int ASSOCIATION_VALUE = 11;
    /**
     * <code>PROTECTIVE = 12;</code>
     */
    public static final int PROTECTIVE_VALUE = 12;
    /**
     * <pre>
     * `MULTIPLE_REPORTED` should be used when multiple clinical
     * signficances are reported for a variant. The original clinical
     * significance values may be provided in the `info` field.
     * </pre>
     *
     * <code>MULTIPLE_REPORTED = 13;</code>
     */
    public static final int MULTIPLE_REPORTED_VALUE = 13;


    public final int getNumber() {
      if (this == UNRECOGNIZED) {
        throw new java.lang.IllegalArgumentException(
            "Can't get the number of an unknown enum value.");
      }
      return value;
    }

    /**
     * @param value The numeric wire value of the corresponding enum entry.
     * @return The enum associated with the given numeric wire value.
     * @deprecated Use {@link #forNumber(int)} instead.
     */
    @java.lang.Deprecated
    public static ClinicalSignificance valueOf(int value) {
      return forNumber(value);
    }

    /**
     * @param value The numeric wire value of the corresponding enum entry.
     * @return The enum associated with the given numeric wire value.
     */
    public static ClinicalSignificance forNumber(int value) {
      switch (value) {
        case 0: return CLINICAL_SIGNIFICANCE_UNSPECIFIED;
        case 1: return CLINICAL_SIGNIFICANCE_OTHER;
        case 2: return UNCERTAIN;
        case 3: return BENIGN;
        case 4: return LIKELY_BENIGN;
        case 5: return LIKELY_PATHOGENIC;
        case 6: return PATHOGENIC;
        case 7: return DRUG_RESPONSE;
        case 8: return HISTOCOMPATIBILITY;
        case 9: return CONFERS_SENSITIVITY;
        case 10: return RISK_FACTOR;
        case 11: return ASSOCIATION;
        case 12: return PROTECTIVE;
        case 13: return MULTIPLE_REPORTED;
        default: return null;
      }
    }

    public static com.google.protobuf.Internal.EnumLiteMap<ClinicalSignificance>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static final com.google.protobuf.Internal.EnumLiteMap<
        ClinicalSignificance> internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<ClinicalSignificance>() {
            public ClinicalSignificance findValueByNumber(int number) {
              return ClinicalSignificance.forNumber(number);
            }
          };

    public final com.google.protobuf.Descriptors.EnumValueDescriptor
        getValueDescriptor() {
      if (this == UNRECOGNIZED) {
        throw new java.lang.IllegalStateException(
            "Can't get the descriptor of an unrecognized enum value.");
      }
      return getDescriptor().getValues().get(ordinal());
    }
    public final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptorForType() {
      return getDescriptor();
    }
    public static final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptor() {
      return com.google.genomics.v1.VariantAnnotation.getDescriptor().getEnumTypes().get(2);
    }

    private static final ClinicalSignificance[] VALUES = values();

    public static ClinicalSignificance valueOf(
        com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
      if (desc.getType() != getDescriptor()) {
        throw new java.lang.IllegalArgumentException(
          "EnumValueDescriptor is not for this type.");
      }
      if (desc.getIndex() == -1) {
        return UNRECOGNIZED;
      }
      return VALUES[desc.getIndex()];
    }

    private final int value;

    private ClinicalSignificance(int value) {
      this.value = value;
    }

    // @@protoc_insertion_point(enum_scope:google.genomics.v1.VariantAnnotation.ClinicalSignificance)
  }

  public interface ClinicalConditionOrBuilder extends
      // @@protoc_insertion_point(interface_extends:google.genomics.v1.VariantAnnotation.ClinicalCondition)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <pre>
     * A set of names for the condition.
     * </pre>
     *
     * <code>repeated string names = 1;</code>
     * @return A list containing the names.
     */
    java.util.List<java.lang.String>
        getNamesList();
    /**
     * <pre>
     * A set of names for the condition.
     * </pre>
     *
     * <code>repeated string names = 1;</code>
     * @return The count of names.
     */
    int getNamesCount();
    /**
     * <pre>
     * A set of names for the condition.
     * </pre>
     *
     * <code>repeated string names = 1;</code>
     * @param index The index of the element to return.
     * @return The names at the given index.
     */
    java.lang.String getNames(int index);
    /**
     * <pre>
     * A set of names for the condition.
     * </pre>
     *
     * <code>repeated string names = 1;</code>
     * @param index The index of the value to return.
     * @return The bytes of the names at the given index.
     */
    com.google.protobuf.ByteString
        getNamesBytes(int index);

    /**
     * <pre>
     * The set of external IDs for this condition.
     * </pre>
     *
     * <code>repeated .google.genomics.v1.ExternalId external_ids = 2;</code>
     */
    java.util.List<com.google.genomics.v1.ExternalId> 
        getExternalIdsList();
    /**
     * <pre>
     * The set of external IDs for this condition.
     * </pre>
     *
     * <code>repeated .google.genomics.v1.ExternalId external_ids = 2;</code>
     */
    com.google.genomics.v1.ExternalId getExternalIds(int index);
    /**
     * <pre>
     * The set of external IDs for this condition.
     * </pre>
     *
     * <code>repeated .google.genomics.v1.ExternalId external_ids = 2;</code>
     */
    int getExternalIdsCount();
    /**
     * <pre>
     * The set of external IDs for this condition.
     * </pre>
     *
     * <code>repeated .google.genomics.v1.ExternalId external_ids = 2;</code>
     */
    java.util.List<? extends com.google.genomics.v1.ExternalIdOrBuilder> 
        getExternalIdsOrBuilderList();
    /**
     * <pre>
     * The set of external IDs for this condition.
     * </pre>
     *
     * <code>repeated .google.genomics.v1.ExternalId external_ids = 2;</code>
     */
    com.google.genomics.v1.ExternalIdOrBuilder getExternalIdsOrBuilder(
        int index);

    /**
     * <pre>
     * The MedGen concept id associated with this gene.
     * Search for these IDs at http://www.ncbi.nlm.nih.gov/medgen/
     * </pre>
     *
     * <code>string concept_id = 3;</code>
     * @return The conceptId.
     */
    java.lang.String getConceptId();
    /**
     * <pre>
     * The MedGen concept id associated with this gene.
     * Search for these IDs at http://www.ncbi.nlm.nih.gov/medgen/
     * </pre>
     *
     * <code>string concept_id = 3;</code>
     * @return The bytes for conceptId.
     */
    com.google.protobuf.ByteString
        getConceptIdBytes();

    /**
     * <pre>
     * The OMIM id for this condition.
     * Search for these IDs at http://omim.org/
     * </pre>
     *
     * <code>string omim_id = 4;</code>
     * @return The omimId.
     */
    java.lang.String getOmimId();
    /**
     * <pre>
     * The OMIM id for this condition.
     * Search for these IDs at http://omim.org/
     * </pre>
     *
     * <code>string omim_id = 4;</code>
     * @return The bytes for omimId.
     */
    com.google.protobuf.ByteString
        getOmimIdBytes();
  }
  /**
   * Protobuf type {@code google.genomics.v1.VariantAnnotation.ClinicalCondition}
   */
  public static final class ClinicalCondition extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:google.genomics.v1.VariantAnnotation.ClinicalCondition)
      ClinicalConditionOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use ClinicalCondition.newBuilder() to construct.
    private ClinicalCondition(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private ClinicalCondition() {
      names_ = com.google.protobuf.LazyStringArrayList.EMPTY;
      externalIds_ = java.util.Collections.emptyList();
      conceptId_ = "";
      omimId_ = "";
    }

    @java.lang.Override
    @SuppressWarnings({"unused"})
    protected java.lang.Object newInstance(
        UnusedPrivateParameter unused) {
      return new ClinicalCondition();
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.google.genomics.v1.AnnotationsProto.internal_static_google_genomics_v1_VariantAnnotation_ClinicalCondition_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.google.genomics.v1.AnnotationsProto.internal_static_google_genomics_v1_VariantAnnotation_ClinicalCondition_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.google.genomics.v1.VariantAnnotation.ClinicalCondition.class, com.google.genomics.v1.VariantAnnotation.ClinicalCondition.Builder.class);
    }

    public static final int NAMES_FIELD_NUMBER = 1;
    @SuppressWarnings("serial")
    private com.google.protobuf.LazyStringList names_;
    /**
     * <pre>
     * A set of names for the condition.
     * </pre>
     *
     * <code>repeated string names = 1;</code>
     * @return A list containing the names.
     */
    public com.google.protobuf.ProtocolStringList
        getNamesList() {
      return names_;
    }
    /**
     * <pre>
     * A set of names for the condition.
     * </pre>
     *
     * <code>repeated string names = 1;</code>
     * @return The count of names.
     */
    public int getNamesCount() {
      return names_.size();
    }
    /**
     * <pre>
     * A set of names for the condition.
     * </pre>
     *
     * <code>repeated string names = 1;</code>
     * @param index The index of the element to return.
     * @return The names at the given index.
     */
    public java.lang.String getNames(int index) {
      return names_.get(index);
    }
    /**
     * <pre>
     * A set of names for the condition.
     * </pre>
     *
     * <code>repeated string names = 1;</code>
     * @param index The index of the value to return.
     * @return The bytes of the names at the given index.
     */
    public com.google.protobuf.ByteString
        getNamesBytes(int index) {
      return names_.getByteString(index);
    }

    public static final int EXTERNAL_IDS_FIELD_NUMBER = 2;
    @SuppressWarnings("serial")
    private java.util.List<com.google.genomics.v1.ExternalId> externalIds_;
    /**
     * <pre>
     * The set of external IDs for this condition.
     * </pre>
     *
     * <code>repeated .google.genomics.v1.ExternalId external_ids = 2;</code>
     */
    @java.lang.Override
    public java.util.List<com.google.genomics.v1.ExternalId> getExternalIdsList() {
      return externalIds_;
    }
    /**
     * <pre>
     * The set of external IDs for this condition.
     * </pre>
     *
     * <code>repeated .google.genomics.v1.ExternalId external_ids = 2;</code>
     */
    @java.lang.Override
    public java.util.List<? extends com.google.genomics.v1.ExternalIdOrBuilder> 
        getExternalIdsOrBuilderList() {
      return externalIds_;
    }
    /**
     * <pre>
     * The set of external IDs for this condition.
     * </pre>
     *
     * <code>repeated .google.genomics.v1.ExternalId external_ids = 2;</code>
     */
    @java.lang.Override
    public int getExternalIdsCount() {
      return externalIds_.size();
    }
    /**
     * <pre>
     * The set of external IDs for this condition.
     * </pre>
     *
     * <code>repeated .google.genomics.v1.ExternalId external_ids = 2;</code>
     */
    @java.lang.Override
    public com.google.genomics.v1.ExternalId getExternalIds(int index) {
      return externalIds_.get(index);
    }
    /**
     * <pre>
     * The set of external IDs for this condition.
     * </pre>
     *
     * <code>repeated .google.genomics.v1.ExternalId external_ids = 2;</code>
     */
    @java.lang.Override
    public com.google.genomics.v1.ExternalIdOrBuilder getExternalIdsOrBuilder(
        int index) {
      return externalIds_.get(index);
    }

    public static final int CONCEPT_ID_FIELD_NUMBER = 3;
    @SuppressWarnings("serial")
    private volatile java.lang.Object conceptId_ = "";
    /**
     * <pre>
     * The MedGen concept id associated with this gene.
     * Search for these IDs at http://www.ncbi.nlm.nih.gov/medgen/
     * </pre>
     *
     * <code>string concept_id = 3;</code>
     * @return The conceptId.
     */
    @java.lang.Override
    public java.lang.String getConceptId() {
      java.lang.Object ref = conceptId_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        conceptId_ = s;
        return s;
      }
    }
    /**
     * <pre>
     * The MedGen concept id associated with this gene.
     * Search for these IDs at http://www.ncbi.nlm.nih.gov/medgen/
     * </pre>
     *
     * <code>string concept_id = 3;</code>
     * @return The bytes for conceptId.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString
        getConceptIdBytes() {
      java.lang.Object ref = conceptId_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        conceptId_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int OMIM_ID_FIELD_NUMBER = 4;
    @SuppressWarnings("serial")
    private volatile java.lang.Object omimId_ = "";
    /**
     * <pre>
     * The OMIM id for this condition.
     * Search for these IDs at http://omim.org/
     * </pre>
     *
     * <code>string omim_id = 4;</code>
     * @return The omimId.
     */
    @java.lang.Override
    public java.lang.String getOmimId() {
      java.lang.Object ref = omimId_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        omimId_ = s;
        return s;
      }
    }
    /**
     * <pre>
     * The OMIM id for this condition.
     * Search for these IDs at http://omim.org/
     * </pre>
     *
     * <code>string omim_id = 4;</code>
     * @return The bytes for omimId.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString
        getOmimIdBytes() {
      java.lang.Object ref = omimId_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        omimId_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      for (int i = 0; i < names_.size(); i++) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 1, names_.getRaw(i));
      }
      for (int i = 0; i < externalIds_.size(); i++) {
        output.writeMessage(2, externalIds_.get(i));
      }
      if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(conceptId_)) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 3, conceptId_);
      }
      if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(omimId_)) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 4, omimId_);
      }
      getUnknownFields().writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      {
        int dataSize = 0;
        for (int i = 0; i < names_.size(); i++) {
          dataSize += computeStringSizeNoTag(names_.getRaw(i));
        }
        size += dataSize;
        size += 1 * getNamesList().size();
      }
      for (int i = 0; i < externalIds_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(2, externalIds_.get(i));
      }
      if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(conceptId_)) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(3, conceptId_);
      }
      if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(omimId_)) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(4, omimId_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof com.google.genomics.v1.VariantAnnotation.ClinicalCondition)) {
        return super.equals(obj);
      }
      com.google.genomics.v1.VariantAnnotation.ClinicalCondition other = (com.google.genomics.v1.VariantAnnotation.ClinicalCondition) obj;

      if (!getNamesList()
          .equals(other.getNamesList())) return false;
      if (!getExternalIdsList()
          .equals(other.getExternalIdsList())) return false;
      if (!getConceptId()
          .equals(other.getConceptId())) return false;
      if (!getOmimId()
          .equals(other.getOmimId())) return false;
      if (!getUnknownFields().equals(other.getUnknownFields())) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      if (getNamesCount() > 0) {
        hash = (37 * hash) + NAMES_FIELD_NUMBER;
        hash = (53 * hash) + getNamesList().hashCode();
      }
      if (getExternalIdsCount() > 0) {
        hash = (37 * hash) + EXTERNAL_IDS_FIELD_NUMBER;
        hash = (53 * hash) + getExternalIdsList().hashCode();
      }
      hash = (37 * hash) + CONCEPT_ID_FIELD_NUMBER;
      hash = (53 * hash) + getConceptId().hashCode();
      hash = (37 * hash) + OMIM_ID_FIELD_NUMBER;
      hash = (53 * hash) + getOmimId().hashCode();
      hash = (29 * hash) + getUnknownFields().hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static com.google.genomics.v1.VariantAnnotation.ClinicalCondition parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.google.genomics.v1.VariantAnnotation.ClinicalCondition parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.google.genomics.v1.VariantAnnotation.ClinicalCondition parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.google.genomics.v1.VariantAnnotation.ClinicalCondition parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.google.genomics.v1.VariantAnnotation.ClinicalCondition parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.google.genomics.v1.VariantAnnotation.ClinicalCondition parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.google.genomics.v1.VariantAnnotation.ClinicalCondition parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static com.google.genomics.v1.VariantAnnotation.ClinicalCondition parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static com.google.genomics.v1.VariantAnnotation.ClinicalCondition parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static com.google.genomics.v1.VariantAnnotation.ClinicalCondition parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static com.google.genomics.v1.VariantAnnotation.ClinicalCondition parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static com.google.genomics.v1.VariantAnnotation.ClinicalCondition parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(com.google.genomics.v1.VariantAnnotation.ClinicalCondition prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code google.genomics.v1.VariantAnnotation.ClinicalCondition}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:google.genomics.v1.VariantAnnotation.ClinicalCondition)
        com.google.genomics.v1.VariantAnnotation.ClinicalConditionOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return com.google.genomics.v1.AnnotationsProto.internal_static_google_genomics_v1_VariantAnnotation_ClinicalCondition_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return com.google.genomics.v1.AnnotationsProto.internal_static_google_genomics_v1_VariantAnnotation_ClinicalCondition_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                com.google.genomics.v1.VariantAnnotation.ClinicalCondition.class, com.google.genomics.v1.VariantAnnotation.ClinicalCondition.Builder.class);
      }

      // Construct using com.google.genomics.v1.VariantAnnotation.ClinicalCondition.newBuilder()
      private Builder() {

      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);

      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        bitField0_ = 0;
        names_ = com.google.protobuf.LazyStringArrayList.EMPTY;
        bitField0_ = (bitField0_ & ~0x00000001);
        if (externalIdsBuilder_ == null) {
          externalIds_ = java.util.Collections.emptyList();
        } else {
          externalIds_ = null;
          externalIdsBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000002);
        conceptId_ = "";
        omimId_ = "";
        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.google.genomics.v1.AnnotationsProto.internal_static_google_genomics_v1_VariantAnnotation_ClinicalCondition_descriptor;
      }

      @java.lang.Override
      public com.google.genomics.v1.VariantAnnotation.ClinicalCondition getDefaultInstanceForType() {
        return com.google.genomics.v1.VariantAnnotation.ClinicalCondition.getDefaultInstance();
      }

      @java.lang.Override
      public com.google.genomics.v1.VariantAnnotation.ClinicalCondition build() {
        com.google.genomics.v1.VariantAnnotation.ClinicalCondition result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public com.google.genomics.v1.VariantAnnotation.ClinicalCondition buildPartial() {
        com.google.genomics.v1.VariantAnnotation.ClinicalCondition result = new com.google.genomics.v1.VariantAnnotation.ClinicalCondition(this);
        buildPartialRepeatedFields(result);
        if (bitField0_ != 0) { buildPartial0(result); }
        onBuilt();
        return result;
      }

      private void buildPartialRepeatedFields(com.google.genomics.v1.VariantAnnotation.ClinicalCondition result) {
        if (((bitField0_ & 0x00000001) != 0)) {
          names_ = names_.getUnmodifiableView();
          bitField0_ = (bitField0_ & ~0x00000001);
        }
        result.names_ = names_;
        if (externalIdsBuilder_ == null) {
          if (((bitField0_ & 0x00000002) != 0)) {
            externalIds_ = java.util.Collections.unmodifiableList(externalIds_);
            bitField0_ = (bitField0_ & ~0x00000002);
          }
          result.externalIds_ = externalIds_;
        } else {
          result.externalIds_ = externalIdsBuilder_.build();
        }
      }

      private void buildPartial0(com.google.genomics.v1.VariantAnnotation.ClinicalCondition result) {
        int from_bitField0_ = bitField0_;
        if (((from_bitField0_ & 0x00000004) != 0)) {
          result.conceptId_ = conceptId_;
        }
        if (((from_bitField0_ & 0x00000008) != 0)) {
          result.omimId_ = omimId_;
        }
      }

      @java.lang.Override
      public Builder clone() {
        return super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.google.genomics.v1.VariantAnnotation.ClinicalCondition) {
          return mergeFrom((com.google.genomics.v1.VariantAnnotation.ClinicalCondition)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(com.google.genomics.v1.VariantAnnotation.ClinicalCondition other) {
        if (other == com.google.genomics.v1.VariantAnnotation.ClinicalCondition.getDefaultInstance()) return this;
        if (!other.names_.isEmpty()) {
          if (names_.isEmpty()) {
            names_ = other.names_;
            bitField0_ = (bitField0_ & ~0x00000001);
          } else {
            ensureNamesIsMutable();
            names_.addAll(other.names_);
          }
          onChanged();
        }
        if (externalIdsBuilder_ == null) {
          if (!other.externalIds_.isEmpty()) {
            if (externalIds_.isEmpty()) {
              externalIds_ = other.externalIds_;
              bitField0_ = (bitField0_ & ~0x00000002);
            } else {
              ensureExternalIdsIsMutable();
              externalIds_.addAll(other.externalIds_);
            }
            onChanged();
          }
        } else {
          if (!other.externalIds_.isEmpty()) {
            if (externalIdsBuilder_.isEmpty()) {
              externalIdsBuilder_.dispose();
              externalIdsBuilder_ = null;
              externalIds_ = other.externalIds_;
              bitField0_ = (bitField0_ & ~0x00000002);
              externalIdsBuilder_ = 
                com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?
                   getExternalIdsFieldBuilder() : null;
            } else {
              externalIdsBuilder_.addAllMessages(other.externalIds_);
            }
          }
        }
        if (!other.getConceptId().isEmpty()) {
          conceptId_ = other.conceptId_;
          bitField0_ |= 0x00000004;
          onChanged();
        }
        if (!other.getOmimId().isEmpty()) {
          omimId_ = other.omimId_;
          bitField0_ |= 0x00000008;
          onChanged();
        }
        this.mergeUnknownFields(other.getUnknownFields());
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        if (extensionRegistry == null) {
          throw new java.lang.NullPointerException();
        }
        try {
          boolean done = false;
          while (!done) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                done = true;
                break;
              case 10: {
                java.lang.String s = input.readStringRequireUtf8();
                ensureNamesIsMutable();
                names_.add(s);
                break;
              } // case 10
              case 18: {
                com.google.genomics.v1.ExternalId m =
                    input.readMessage(
                        com.google.genomics.v1.ExternalId.parser(),
                        extensionRegistry);
                if (externalIdsBuilder_ == null) {
                  ensureExternalIdsIsMutable();
                  externalIds_.add(m);
                } else {
                  externalIdsBuilder_.addMessage(m);
                }
                break;
              } // case 18
              case 26: {
                conceptId_ = input.readStringRequireUtf8();
                bitField0_ |= 0x00000004;
                break;
              } // case 26
              case 34: {
                omimId_ = input.readStringRequireUtf8();
                bitField0_ |= 0x00000008;
                break;
              } // case 34
              default: {
                if (!super.parseUnknownField(input, extensionRegistry, tag)) {
                  done = true; // was an endgroup tag
                }
                break;
              } // default:
            } // switch (tag)
          } // while (!done)
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.unwrapIOException();
        } finally {
          onChanged();
        } // finally
        return this;
      }
      private int bitField0_;

      private com.google.protobuf.LazyStringList names_ = com.google.protobuf.LazyStringArrayList.EMPTY;
      private void ensureNamesIsMutable() {
        if (!((bitField0_ & 0x00000001) != 0)) {
          names_ = new com.google.protobuf.LazyStringArrayList(names_);
          bitField0_ |= 0x00000001;
         }
      }
      /**
       * <pre>
       * A set of names for the condition.
       * </pre>
       *
       * <code>repeated string names = 1;</code>
       * @return A list containing the names.
       */
      public com.google.protobuf.ProtocolStringList
          getNamesList() {
        return names_.getUnmodifiableView();
      }
      /**
       * <pre>
       * A set of names for the condition.
       * </pre>
       *
       * <code>repeated string names = 1;</code>
       * @return The count of names.
       */
      public int getNamesCount() {
        return names_.size();
      }
      /**
       * <pre>
       * A set of names for the condition.
       * </pre>
       *
       * <code>repeated string names = 1;</code>
       * @param index The index of the element to return.
       * @return The names at the given index.
       */
      public java.lang.String getNames(int index) {
        return names_.get(index);
      }
      /**
       * <pre>
       * A set of names for the condition.
       * </pre>
       *
       * <code>repeated string names = 1;</code>
       * @param index The index of the value to return.
       * @return The bytes of the names at the given index.
       */
      public com.google.protobuf.ByteString
          getNamesBytes(int index) {
        return names_.getByteString(index);
      }
      /**
       * <pre>
       * A set of names for the condition.
       * </pre>
       *
       * <code>repeated string names = 1;</code>
       * @param index The index to set the value at.
       * @param value The names to set.
       * @return This builder for chaining.
       */
      public Builder setNames(
          int index, java.lang.String value) {
        if (value == null) { throw new NullPointerException(); }
        ensureNamesIsMutable();
        names_.set(index, value);
        onChanged();
        return this;
      }
      /**
       * <pre>
       * A set of names for the condition.
       * </pre>
       *
       * <code>repeated string names = 1;</code>
       * @param value The names to add.
       * @return This builder for chaining.
       */
      public Builder addNames(
          java.lang.String value) {
        if (value == null) { throw new NullPointerException(); }
        ensureNamesIsMutable();
        names_.add(value);
        onChanged();
        return this;
      }
      /**
       * <pre>
       * A set of names for the condition.
       * </pre>
       *
       * <code>repeated string names = 1;</code>
       * @param values The names to add.
       * @return This builder for chaining.
       */
      public Builder addAllNames(
          java.lang.Iterable<java.lang.String> values) {
        ensureNamesIsMutable();
        com.google.protobuf.AbstractMessageLite.Builder.addAll(
            values, names_);
        onChanged();
        return this;
      }
      /**
       * <pre>
       * A set of names for the condition.
       * </pre>
       *
       * <code>repeated string names = 1;</code>
       * @return This builder for chaining.
       */
      public Builder clearNames() {
        names_ = com.google.protobuf.LazyStringArrayList.EMPTY;
        bitField0_ = (bitField0_ & ~0x00000001);
        onChanged();
        return this;
      }
      /**
       * <pre>
       * A set of names for the condition.
       * </pre>
       *
       * <code>repeated string names = 1;</code>
       * @param value The bytes of the names to add.
       * @return This builder for chaining.
       */
      public Builder addNamesBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) { throw new NullPointerException(); }
        checkByteStringIsUtf8(value);
        ensureNamesIsMutable();
        names_.add(value);
        onChanged();
        return this;
      }

      private java.util.List<com.google.genomics.v1.ExternalId> externalIds_ =
        java.util.Collections.emptyList();
      private void ensureExternalIdsIsMutable() {
        if (!((bitField0_ & 0x00000002) != 0)) {
          externalIds_ = new java.util.ArrayList<com.google.genomics.v1.ExternalId>(externalIds_);
          bitField0_ |= 0x00000002;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilderV3<
          com.google.genomics.v1.ExternalId, com.google.genomics.v1.ExternalId.Builder, com.google.genomics.v1.ExternalIdOrBuilder> externalIdsBuilder_;

      /**
       * <pre>
       * The set of external IDs for this condition.
       * </pre>
       *
       * <code>repeated .google.genomics.v1.ExternalId external_ids = 2;</code>
       */
      public java.util.List<com.google.genomics.v1.ExternalId> getExternalIdsList() {
        if (externalIdsBuilder_ == null) {
          return java.util.Collections.unmodifiableList(externalIds_);
        } else {
          return externalIdsBuilder_.getMessageList();
        }
      }
      /**
       * <pre>
       * The set of external IDs for this condition.
       * </pre>
       *
       * <code>repeated .google.genomics.v1.ExternalId external_ids = 2;</code>
       */
      public int getExternalIdsCount() {
        if (externalIdsBuilder_ == null) {
          return externalIds_.size();
        } else {
          return externalIdsBuilder_.getCount();
        }
      }
      /**
       * <pre>
       * The set of external IDs for this condition.
       * </pre>
       *
       * <code>repeated .google.genomics.v1.ExternalId external_ids = 2;</code>
       */
      public com.google.genomics.v1.ExternalId getExternalIds(int index) {
        if (externalIdsBuilder_ == null) {
          return externalIds_.get(index);
        } else {
          return externalIdsBuilder_.getMessage(index);
        }
      }
      /**
       * <pre>
       * The set of external IDs for this condition.
       * </pre>
       *
       * <code>repeated .google.genomics.v1.ExternalId external_ids = 2;</code>
       */
      public Builder setExternalIds(
          int index, com.google.genomics.v1.ExternalId value) {
        if (externalIdsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureExternalIdsIsMutable();
          externalIds_.set(index, value);
          onChanged();
        } else {
          externalIdsBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <pre>
       * The set of external IDs for this condition.
       * </pre>
       *
       * <code>repeated .google.genomics.v1.ExternalId external_ids = 2;</code>
       */
      public Builder setExternalIds(
          int index, com.google.genomics.v1.ExternalId.Builder builderForValue) {
        if (externalIdsBuilder_ == null) {
          ensureExternalIdsIsMutable();
          externalIds_.set(index, builderForValue.build());
          onChanged();
        } else {
          externalIdsBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       * The set of external IDs for this condition.
       * </pre>
       *
       * <code>repeated .google.genomics.v1.ExternalId external_ids = 2;</code>
       */
      public Builder addExternalIds(com.google.genomics.v1.ExternalId value) {
        if (externalIdsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureExternalIdsIsMutable();
          externalIds_.add(value);
          onChanged();
        } else {
          externalIdsBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <pre>
       * The set of external IDs for this condition.
       * </pre>
       *
       * <code>repeated .google.genomics.v1.ExternalId external_ids = 2;</code>
       */
      public Builder addExternalIds(
          int index, com.google.genomics.v1.ExternalId value) {
        if (externalIdsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureExternalIdsIsMutable();
          externalIds_.add(index, value);
          onChanged();
        } else {
          externalIdsBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <pre>
       * The set of external IDs for this condition.
       * </pre>
       *
       * <code>repeated .google.genomics.v1.ExternalId external_ids = 2;</code>
       */
      public Builder addExternalIds(
          com.google.genomics.v1.ExternalId.Builder builderForValue) {
        if (externalIdsBuilder_ == null) {
          ensureExternalIdsIsMutable();
          externalIds_.add(builderForValue.build());
          onChanged();
        } else {
          externalIdsBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       * The set of external IDs for this condition.
       * </pre>
       *
       * <code>repeated .google.genomics.v1.ExternalId external_ids = 2;</code>
       */
      public Builder addExternalIds(
          int index, com.google.genomics.v1.ExternalId.Builder builderForValue) {
        if (externalIdsBuilder_ == null) {
          ensureExternalIdsIsMutable();
          externalIds_.add(index, builderForValue.build());
          onChanged();
        } else {
          externalIdsBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       * The set of external IDs for this condition.
       * </pre>
       *
       * <code>repeated .google.genomics.v1.ExternalId external_ids = 2;</code>
       */
      public Builder addAllExternalIds(
          java.lang.Iterable<? extends com.google.genomics.v1.ExternalId> values) {
        if (externalIdsBuilder_ == null) {
          ensureExternalIdsIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
              values, externalIds_);
          onChanged();
        } else {
          externalIdsBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <pre>
       * The set of external IDs for this condition.
       * </pre>
       *
       * <code>repeated .google.genomics.v1.ExternalId external_ids = 2;</code>
       */
      public Builder clearExternalIds() {
        if (externalIdsBuilder_ == null) {
          externalIds_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000002);
          onChanged();
        } else {
          externalIdsBuilder_.clear();
        }
        return this;
      }
      /**
       * <pre>
       * The set of external IDs for this condition.
       * </pre>
       *
       * <code>repeated .google.genomics.v1.ExternalId external_ids = 2;</code>
       */
      public Builder removeExternalIds(int index) {
        if (externalIdsBuilder_ == null) {
          ensureExternalIdsIsMutable();
          externalIds_.remove(index);
          onChanged();
        } else {
          externalIdsBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <pre>
       * The set of external IDs for this condition.
       * </pre>
       *
       * <code>repeated .google.genomics.v1.ExternalId external_ids = 2;</code>
       */
      public com.google.genomics.v1.ExternalId.Builder getExternalIdsBuilder(
          int index) {
        return getExternalIdsFieldBuilder().getBuilder(index);
      }
      /**
       * <pre>
       * The set of external IDs for this condition.
       * </pre>
       *
       * <code>repeated .google.genomics.v1.ExternalId external_ids = 2;</code>
       */
      public com.google.genomics.v1.ExternalIdOrBuilder getExternalIdsOrBuilder(
          int index) {
        if (externalIdsBuilder_ == null) {
          return externalIds_.get(index);  } else {
          return externalIdsBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <pre>
       * The set of external IDs for this condition.
       * </pre>
       *
       * <code>repeated .google.genomics.v1.ExternalId external_ids = 2;</code>
       */
      public java.util.List<? extends com.google.genomics.v1.ExternalIdOrBuilder> 
           getExternalIdsOrBuilderList() {
        if (externalIdsBuilder_ != null) {
          return externalIdsBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(externalIds_);
        }
      }
      /**
       * <pre>
       * The set of external IDs for this condition.
       * </pre>
       *
       * <code>repeated .google.genomics.v1.ExternalId external_ids = 2;</code>
       */
      public com.google.genomics.v1.ExternalId.Builder addExternalIdsBuilder() {
        return getExternalIdsFieldBuilder().addBuilder(
            com.google.genomics.v1.ExternalId.getDefaultInstance());
      }
      /**
       * <pre>
       * The set of external IDs for this condition.
       * </pre>
       *
       * <code>repeated .google.genomics.v1.ExternalId external_ids = 2;</code>
       */
      public com.google.genomics.v1.ExternalId.Builder addExternalIdsBuilder(
          int index) {
        return getExternalIdsFieldBuilder().addBuilder(
            index, com.google.genomics.v1.ExternalId.getDefaultInstance());
      }
      /**
       * <pre>
       * The set of external IDs for this condition.
       * </pre>
       *
       * <code>repeated .google.genomics.v1.ExternalId external_ids = 2;</code>
       */
      public java.util.List<com.google.genomics.v1.ExternalId.Builder> 
           getExternalIdsBuilderList() {
        return getExternalIdsFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilderV3<
          com.google.genomics.v1.ExternalId, com.google.genomics.v1.ExternalId.Builder, com.google.genomics.v1.ExternalIdOrBuilder> 
          getExternalIdsFieldBuilder() {
        if (externalIdsBuilder_ == null) {
          externalIdsBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<
              com.google.genomics.v1.ExternalId, com.google.genomics.v1.ExternalId.Builder, com.google.genomics.v1.ExternalIdOrBuilder>(
                  externalIds_,
                  ((bitField0_ & 0x00000002) != 0),
                  getParentForChildren(),
                  isClean());
          externalIds_ = null;
        }
        return externalIdsBuilder_;
      }

      private java.lang.Object conceptId_ = "";
      /**
       * <pre>
       * The MedGen concept id associated with this gene.
       * Search for these IDs at http://www.ncbi.nlm.nih.gov/medgen/
       * </pre>
       *
       * <code>string concept_id = 3;</code>
       * @return The conceptId.
       */
      public java.lang.String getConceptId() {
        java.lang.Object ref = conceptId_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          conceptId_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <pre>
       * The MedGen concept id associated with this gene.
       * Search for these IDs at http://www.ncbi.nlm.nih.gov/medgen/
       * </pre>
       *
       * <code>string concept_id = 3;</code>
       * @return The bytes for conceptId.
       */
      public com.google.protobuf.ByteString
          getConceptIdBytes() {
        java.lang.Object ref = conceptId_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          conceptId_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       * The MedGen concept id associated with this gene.
       * Search for these IDs at http://www.ncbi.nlm.nih.gov/medgen/
       * </pre>
       *
       * <code>string concept_id = 3;</code>
       * @param value The conceptId to set.
       * @return This builder for chaining.
       */
      public Builder setConceptId(
          java.lang.String value) {
        if (value == null) { throw new NullPointerException(); }
        conceptId_ = value;
        bitField0_ |= 0x00000004;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * The MedGen concept id associated with this gene.
       * Search for these IDs at http://www.ncbi.nlm.nih.gov/medgen/
       * </pre>
       *
       * <code>string concept_id = 3;</code>
       * @return This builder for chaining.
       */
      public Builder clearConceptId() {
        conceptId_ = getDefaultInstance().getConceptId();
        bitField0_ = (bitField0_ & ~0x00000004);
        onChanged();
        return this;
      }
      /**
       * <pre>
       * The MedGen concept id associated with this gene.
       * Search for these IDs at http://www.ncbi.nlm.nih.gov/medgen/
       * </pre>
       *
       * <code>string concept_id = 3;</code>
       * @param value The bytes for conceptId to set.
       * @return This builder for chaining.
       */
      public Builder setConceptIdBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) { throw new NullPointerException(); }
        checkByteStringIsUtf8(value);
        conceptId_ = value;
        bitField0_ |= 0x00000004;
        onChanged();
        return this;
      }

      private java.lang.Object omimId_ = "";
      /**
       * <pre>
       * The OMIM id for this condition.
       * Search for these IDs at http://omim.org/
       * </pre>
       *
       * <code>string omim_id = 4;</code>
       * @return The omimId.
       */
      public java.lang.String getOmimId() {
        java.lang.Object ref = omimId_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          omimId_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <pre>
       * The OMIM id for this condition.
       * Search for these IDs at http://omim.org/
       * </pre>
       *
       * <code>string omim_id = 4;</code>
       * @return The bytes for omimId.
       */
      public com.google.protobuf.ByteString
          getOmimIdBytes() {
        java.lang.Object ref = omimId_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          omimId_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       * The OMIM id for this condition.
       * Search for these IDs at http://omim.org/
       * </pre>
       *
       * <code>string omim_id = 4;</code>
       * @param value The omimId to set.
       * @return This builder for chaining.
       */
      public Builder setOmimId(
          java.lang.String value) {
        if (value == null) { throw new NullPointerException(); }
        omimId_ = value;
        bitField0_ |= 0x00000008;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * The OMIM id for this condition.
       * Search for these IDs at http://omim.org/
       * </pre>
       *
       * <code>string omim_id = 4;</code>
       * @return This builder for chaining.
       */
      public Builder clearOmimId() {
        omimId_ = getDefaultInstance().getOmimId();
        bitField0_ = (bitField0_ & ~0x00000008);
        onChanged();
        return this;
      }
      /**
       * <pre>
       * The OMIM id for this condition.
       * Search for these IDs at http://omim.org/
       * </pre>
       *
       * <code>string omim_id = 4;</code>
       * @param value The bytes for omimId to set.
       * @return This builder for chaining.
       */
      public Builder setOmimIdBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) { throw new NullPointerException(); }
        checkByteStringIsUtf8(value);
        omimId_ = value;
        bitField0_ |= 0x00000008;
        onChanged();
        return this;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:google.genomics.v1.VariantAnnotation.ClinicalCondition)
    }

    // @@protoc_insertion_point(class_scope:google.genomics.v1.VariantAnnotation.ClinicalCondition)
    private static final com.google.genomics.v1.VariantAnnotation.ClinicalCondition DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new com.google.genomics.v1.VariantAnnotation.ClinicalCondition();
    }

    public static com.google.genomics.v1.VariantAnnotation.ClinicalCondition getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<ClinicalCondition>
        PARSER = new com.google.protobuf.AbstractParser<ClinicalCondition>() {
      @java.lang.Override
      public ClinicalCondition parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        Builder builder = newBuilder();
        try {
          builder.mergeFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.setUnfinishedMessage(builder.buildPartial());
        } catch (com.google.protobuf.UninitializedMessageException e) {
          throw e.asInvalidProtocolBufferException().setUnfinishedMessage(builder.buildPartial());
        } catch (java.io.IOException e) {
          throw new com.google.protobuf.InvalidProtocolBufferException(e)
              .setUnfinishedMessage(builder.buildPartial());
        }
        return builder.buildPartial();
      }
    };

    public static com.google.protobuf.Parser<ClinicalCondition> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<ClinicalCondition> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.genomics.v1.VariantAnnotation.ClinicalCondition getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public static final int TYPE_FIELD_NUMBER = 1;
  private int type_ = 0;
  /**
   * <pre>
   * Type has been adapted from ClinVar's list of variant types.
   * </pre>
   *
   * <code>.google.genomics.v1.VariantAnnotation.Type type = 1;</code>
   * @return The enum numeric value on the wire for type.
   */
  @java.lang.Override public int getTypeValue() {
    return type_;
  }
  /**
   * <pre>
   * Type has been adapted from ClinVar's list of variant types.
   * </pre>
   *
   * <code>.google.genomics.v1.VariantAnnotation.Type type = 1;</code>
   * @return The type.
   */
  @java.lang.Override public com.google.genomics.v1.VariantAnnotation.Type getType() {
    com.google.genomics.v1.VariantAnnotation.Type result = com.google.genomics.v1.VariantAnnotation.Type.forNumber(type_);
    return result == null ? com.google.genomics.v1.VariantAnnotation.Type.UNRECOGNIZED : result;
  }

  public static final int EFFECT_FIELD_NUMBER = 2;
  private int effect_ = 0;
  /**
   * <pre>
   * Effect of the variant on the coding sequence.
   * </pre>
   *
   * <code>.google.genomics.v1.VariantAnnotation.Effect effect = 2;</code>
   * @return The enum numeric value on the wire for effect.
   */
  @java.lang.Override public int getEffectValue() {
    return effect_;
  }
  /**
   * <pre>
   * Effect of the variant on the coding sequence.
   * </pre>
   *
   * <code>.google.genomics.v1.VariantAnnotation.Effect effect = 2;</code>
   * @return The effect.
   */
  @java.lang.Override public com.google.genomics.v1.VariantAnnotation.Effect getEffect() {
    com.google.genomics.v1.VariantAnnotation.Effect result = com.google.genomics.v1.VariantAnnotation.Effect.forNumber(effect_);
    return result == null ? com.google.genomics.v1.VariantAnnotation.Effect.UNRECOGNIZED : result;
  }

  public static final int ALTERNATE_BASES_FIELD_NUMBER = 3;
  @SuppressWarnings("serial")
  private volatile java.lang.Object alternateBases_ = "";
  /**
   * <pre>
   * The alternate allele for this variant. If multiple alternate alleles
   * exist at this location, create a separate variant for each one, as they
   * may represent distinct conditions.
   * </pre>
   *
   * <code>string alternate_bases = 3;</code>
   * @return The alternateBases.
   */
  @java.lang.Override
  public java.lang.String getAlternateBases() {
    java.lang.Object ref = alternateBases_;
    if (ref instanceof java.lang.String) {
      return (java.lang.String) ref;
    } else {
      com.google.protobuf.ByteString bs = 
          (com.google.protobuf.ByteString) ref;
      java.lang.String s = bs.toStringUtf8();
      alternateBases_ = s;
      return s;
    }
  }
  /**
   * <pre>
   * The alternate allele for this variant. If multiple alternate alleles
   * exist at this location, create a separate variant for each one, as they
   * may represent distinct conditions.
   * </pre>
   *
   * <code>string alternate_bases = 3;</code>
   * @return The bytes for alternateBases.
   */
  @java.lang.Override
  public com.google.protobuf.ByteString
      getAlternateBasesBytes() {
    java.lang.Object ref = alternateBases_;
    if (ref instanceof java.lang.String) {
      com.google.protobuf.ByteString b = 
          com.google.protobuf.ByteString.copyFromUtf8(
              (java.lang.String) ref);
      alternateBases_ = b;
      return b;
    } else {
      return (com.google.protobuf.ByteString) ref;
    }
  }

  public static final int GENE_ID_FIELD_NUMBER = 4;
  @SuppressWarnings("serial")
  private volatile java.lang.Object geneId_ = "";
  /**
   * <pre>
   * Google annotation ID of the gene affected by this variant. This should
   * be provided when the variant is created.
   * </pre>
   *
   * <code>string gene_id = 4;</code>
   * @return The geneId.
   */
  @java.lang.Override
  public java.lang.String getGeneId() {
    java.lang.Object ref = geneId_;
    if (ref instanceof java.lang.String) {
      return (java.lang.String) ref;
    } else {
      com.google.protobuf.ByteString bs = 
          (com.google.protobuf.ByteString) ref;
      java.lang.String s = bs.toStringUtf8();
      geneId_ = s;
      return s;
    }
  }
  /**
   * <pre>
   * Google annotation ID of the gene affected by this variant. This should
   * be provided when the variant is created.
   * </pre>
   *
   * <code>string gene_id = 4;</code>
   * @return The bytes for geneId.
   */
  @java.lang.Override
  public com.google.protobuf.ByteString
      getGeneIdBytes() {
    java.lang.Object ref = geneId_;
    if (ref instanceof java.lang.String) {
      com.google.protobuf.ByteString b = 
          com.google.protobuf.ByteString.copyFromUtf8(
              (java.lang.String) ref);
      geneId_ = b;
      return b;
    } else {
      return (com.google.protobuf.ByteString) ref;
    }
  }

  public static final int TRANSCRIPT_IDS_FIELD_NUMBER = 5;
  @SuppressWarnings("serial")
  private com.google.protobuf.LazyStringList transcriptIds_;
  /**
   * <pre>
   * Google annotation IDs of the transcripts affected by this variant. These
   * should be provided when the variant is created.
   * </pre>
   *
   * <code>repeated string transcript_ids = 5;</code>
   * @return A list containing the transcriptIds.
   */
  public com.google.protobuf.ProtocolStringList
      getTranscriptIdsList() {
    return transcriptIds_;
  }
  /**
   * <pre>
   * Google annotation IDs of the transcripts affected by this variant. These
   * should be provided when the variant is created.
   * </pre>
   *
   * <code>repeated string transcript_ids = 5;</code>
   * @return The count of transcriptIds.
   */
  public int getTranscriptIdsCount() {
    return transcriptIds_.size();
  }
  /**
   * <pre>
   * Google annotation IDs of the transcripts affected by this variant. These
   * should be provided when the variant is created.
   * </pre>
   *
   * <code>repeated string transcript_ids = 5;</code>
   * @param index The index of the element to return.
   * @return The transcriptIds at the given index.
   */
  public java.lang.String getTranscriptIds(int index) {
    return transcriptIds_.get(index);
  }
  /**
   * <pre>
   * Google annotation IDs of the transcripts affected by this variant. These
   * should be provided when the variant is created.
   * </pre>
   *
   * <code>repeated string transcript_ids = 5;</code>
   * @param index The index of the value to return.
   * @return The bytes of the transcriptIds at the given index.
   */
  public com.google.protobuf.ByteString
      getTranscriptIdsBytes(int index) {
    return transcriptIds_.getByteString(index);
  }

  public static final int CONDITIONS_FIELD_NUMBER = 6;
  @SuppressWarnings("serial")
  private java.util.List<com.google.genomics.v1.VariantAnnotation.ClinicalCondition> conditions_;
  /**
   * <pre>
   * The set of conditions associated with this variant.
   * A condition describes the way a variant influences human health.
   * </pre>
   *
   * <code>repeated .google.genomics.v1.VariantAnnotation.ClinicalCondition conditions = 6;</code>
   */
  @java.lang.Override
  public java.util.List<com.google.genomics.v1.VariantAnnotation.ClinicalCondition> getConditionsList() {
    return conditions_;
  }
  /**
   * <pre>
   * The set of conditions associated with this variant.
   * A condition describes the way a variant influences human health.
   * </pre>
   *
   * <code>repeated .google.genomics.v1.VariantAnnotation.ClinicalCondition conditions = 6;</code>
   */
  @java.lang.Override
  public java.util.List<? extends com.google.genomics.v1.VariantAnnotation.ClinicalConditionOrBuilder> 
      getConditionsOrBuilderList() {
    return conditions_;
  }
  /**
   * <pre>
   * The set of conditions associated with this variant.
   * A condition describes the way a variant influences human health.
   * </pre>
   *
   * <code>repeated .google.genomics.v1.VariantAnnotation.ClinicalCondition conditions = 6;</code>
   */
  @java.lang.Override
  public int getConditionsCount() {
    return conditions_.size();
  }
  /**
   * <pre>
   * The set of conditions associated with this variant.
   * A condition describes the way a variant influences human health.
   * </pre>
   *
   * <code>repeated .google.genomics.v1.VariantAnnotation.ClinicalCondition conditions = 6;</code>
   */
  @java.lang.Override
  public com.google.genomics.v1.VariantAnnotation.ClinicalCondition getConditions(int index) {
    return conditions_.get(index);
  }
  /**
   * <pre>
   * The set of conditions associated with this variant.
   * A condition describes the way a variant influences human health.
   * </pre>
   *
   * <code>repeated .google.genomics.v1.VariantAnnotation.ClinicalCondition conditions = 6;</code>
   */
  @java.lang.Override
  public com.google.genomics.v1.VariantAnnotation.ClinicalConditionOrBuilder getConditionsOrBuilder(
      int index) {
    return conditions_.get(index);
  }

  public static final int CLINICAL_SIGNIFICANCE_FIELD_NUMBER = 7;
  private int clinicalSignificance_ = 0;
  /**
   * <pre>
   * Describes the clinical significance of a variant.
   * It is adapted from the ClinVar controlled vocabulary for clinical
   * significance described at:
   * http://www.ncbi.nlm.nih.gov/clinvar/docs/clinsig/
   * </pre>
   *
   * <code>.google.genomics.v1.VariantAnnotation.ClinicalSignificance clinical_significance = 7;</code>
   * @return The enum numeric value on the wire for clinicalSignificance.
   */
  @java.lang.Override public int getClinicalSignificanceValue() {
    return clinicalSignificance_;
  }
  /**
   * <pre>
   * Describes the clinical significance of a variant.
   * It is adapted from the ClinVar controlled vocabulary for clinical
   * significance described at:
   * http://www.ncbi.nlm.nih.gov/clinvar/docs/clinsig/
   * </pre>
   *
   * <code>.google.genomics.v1.VariantAnnotation.ClinicalSignificance clinical_significance = 7;</code>
   * @return The clinicalSignificance.
   */
  @java.lang.Override public com.google.genomics.v1.VariantAnnotation.ClinicalSignificance getClinicalSignificance() {
    com.google.genomics.v1.VariantAnnotation.ClinicalSignificance result = com.google.genomics.v1.VariantAnnotation.ClinicalSignificance.forNumber(clinicalSignificance_);
    return result == null ? com.google.genomics.v1.VariantAnnotation.ClinicalSignificance.UNRECOGNIZED : result;
  }

  private byte memoizedIsInitialized = -1;
  @java.lang.Override
  public final boolean isInitialized() {
    byte isInitialized = memoizedIsInitialized;
    if (isInitialized == 1) return true;
    if (isInitialized == 0) return false;

    memoizedIsInitialized = 1;
    return true;
  }

  @java.lang.Override
  public void writeTo(com.google.protobuf.CodedOutputStream output)
                      throws java.io.IOException {
    if (type_ != com.google.genomics.v1.VariantAnnotation.Type.TYPE_UNSPECIFIED.getNumber()) {
      output.writeEnum(1, type_);
    }
    if (effect_ != com.google.genomics.v1.VariantAnnotation.Effect.EFFECT_UNSPECIFIED.getNumber()) {
      output.writeEnum(2, effect_);
    }
    if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(alternateBases_)) {
      com.google.protobuf.GeneratedMessageV3.writeString(output, 3, alternateBases_);
    }
    if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(geneId_)) {
      com.google.protobuf.GeneratedMessageV3.writeString(output, 4, geneId_);
    }
    for (int i = 0; i < transcriptIds_.size(); i++) {
      com.google.protobuf.GeneratedMessageV3.writeString(output, 5, transcriptIds_.getRaw(i));
    }
    for (int i = 0; i < conditions_.size(); i++) {
      output.writeMessage(6, conditions_.get(i));
    }
    if (clinicalSignificance_ != com.google.genomics.v1.VariantAnnotation.ClinicalSignificance.CLINICAL_SIGNIFICANCE_UNSPECIFIED.getNumber()) {
      output.writeEnum(7, clinicalSignificance_);
    }
    getUnknownFields().writeTo(output);
  }

  @java.lang.Override
  public int getSerializedSize() {
    int size = memoizedSize;
    if (size != -1) return size;

    size = 0;
    if (type_ != com.google.genomics.v1.VariantAnnotation.Type.TYPE_UNSPECIFIED.getNumber()) {
      size += com.google.protobuf.CodedOutputStream
        .computeEnumSize(1, type_);
    }
    if (effect_ != com.google.genomics.v1.VariantAnnotation.Effect.EFFECT_UNSPECIFIED.getNumber()) {
      size += com.google.protobuf.CodedOutputStream
        .computeEnumSize(2, effect_);
    }
    if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(alternateBases_)) {
      size += com.google.protobuf.GeneratedMessageV3.computeStringSize(3, alternateBases_);
    }
    if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(geneId_)) {
      size += com.google.protobuf.GeneratedMessageV3.computeStringSize(4, geneId_);
    }
    {
      int dataSize = 0;
      for (int i = 0; i < transcriptIds_.size(); i++) {
        dataSize += computeStringSizeNoTag(transcriptIds_.getRaw(i));
      }
      size += dataSize;
      size += 1 * getTranscriptIdsList().size();
    }
    for (int i = 0; i < conditions_.size(); i++) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(6, conditions_.get(i));
    }
    if (clinicalSignificance_ != com.google.genomics.v1.VariantAnnotation.ClinicalSignificance.CLINICAL_SIGNIFICANCE_UNSPECIFIED.getNumber()) {
      size += com.google.protobuf.CodedOutputStream
        .computeEnumSize(7, clinicalSignificance_);
    }
    size += getUnknownFields().getSerializedSize();
    memoizedSize = size;
    return size;
  }

  @java.lang.Override
  public boolean equals(final java.lang.Object obj) {
    if (obj == this) {
     return true;
    }
    if (!(obj instanceof com.google.genomics.v1.VariantAnnotation)) {
      return super.equals(obj);
    }
    com.google.genomics.v1.VariantAnnotation other = (com.google.genomics.v1.VariantAnnotation) obj;

    if (type_ != other.type_) return false;
    if (effect_ != other.effect_) return false;
    if (!getAlternateBases()
        .equals(other.getAlternateBases())) return false;
    if (!getGeneId()
        .equals(other.getGeneId())) return false;
    if (!getTranscriptIdsList()
        .equals(other.getTranscriptIdsList())) return false;
    if (!getConditionsList()
        .equals(other.getConditionsList())) return false;
    if (clinicalSignificance_ != other.clinicalSignificance_) return false;
    if (!getUnknownFields().equals(other.getUnknownFields())) return false;
    return true;
  }

  @java.lang.Override
  public int hashCode() {
    if (memoizedHashCode != 0) {
      return memoizedHashCode;
    }
    int hash = 41;
    hash = (19 * hash) + getDescriptor().hashCode();
    hash = (37 * hash) + TYPE_FIELD_NUMBER;
    hash = (53 * hash) + type_;
    hash = (37 * hash) + EFFECT_FIELD_NUMBER;
    hash = (53 * hash) + effect_;
    hash = (37 * hash) + ALTERNATE_BASES_FIELD_NUMBER;
    hash = (53 * hash) + getAlternateBases().hashCode();
    hash = (37 * hash) + GENE_ID_FIELD_NUMBER;
    hash = (53 * hash) + getGeneId().hashCode();
    if (getTranscriptIdsCount() > 0) {
      hash = (37 * hash) + TRANSCRIPT_IDS_FIELD_NUMBER;
      hash = (53 * hash) + getTranscriptIdsList().hashCode();
    }
    if (getConditionsCount() > 0) {
      hash = (37 * hash) + CONDITIONS_FIELD_NUMBER;
      hash = (53 * hash) + getConditionsList().hashCode();
    }
    hash = (37 * hash) + CLINICAL_SIGNIFICANCE_FIELD_NUMBER;
    hash = (53 * hash) + clinicalSignificance_;
    hash = (29 * hash) + getUnknownFields().hashCode();
    memoizedHashCode = hash;
    return hash;
  }

  public static com.google.genomics.v1.VariantAnnotation parseFrom(
      java.nio.ByteBuffer data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static com.google.genomics.v1.VariantAnnotation parseFrom(
      java.nio.ByteBuffer data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static com.google.genomics.v1.VariantAnnotation parseFrom(
      com.google.protobuf.ByteString data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static com.google.genomics.v1.VariantAnnotation parseFrom(
      com.google.protobuf.ByteString data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static com.google.genomics.v1.VariantAnnotation parseFrom(byte[] data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static com.google.genomics.v1.VariantAnnotation parseFrom(
      byte[] data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static com.google.genomics.v1.VariantAnnotation parseFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input);
  }
  public static com.google.genomics.v1.VariantAnnotation parseFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input, extensionRegistry);
  }
  public static com.google.genomics.v1.VariantAnnotation parseDelimitedFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseDelimitedWithIOException(PARSER, input);
  }
  public static com.google.genomics.v1.VariantAnnotation parseDelimitedFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
  }
  public static com.google.genomics.v1.VariantAnnotation parseFrom(
      com.google.protobuf.CodedInputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input);
  }
  public static com.google.genomics.v1.VariantAnnotation parseFrom(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input, extensionRegistry);
  }

  @java.lang.Override
  public Builder newBuilderForType() { return newBuilder(); }
  public static Builder newBuilder() {
    return DEFAULT_INSTANCE.toBuilder();
  }
  public static Builder newBuilder(com.google.genomics.v1.VariantAnnotation prototype) {
    return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
  }
  @java.lang.Override
  public Builder toBuilder() {
    return this == DEFAULT_INSTANCE
        ? new Builder() : new Builder().mergeFrom(this);
  }

  @java.lang.Override
  protected Builder newBuilderForType(
      com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
    Builder builder = new Builder(parent);
    return builder;
  }
  /**
   * Protobuf type {@code google.genomics.v1.VariantAnnotation}
   */
  public static final class Builder extends
      com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
      // @@protoc_insertion_point(builder_implements:google.genomics.v1.VariantAnnotation)
      com.google.genomics.v1.VariantAnnotationOrBuilder {
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.google.genomics.v1.AnnotationsProto.internal_static_google_genomics_v1_VariantAnnotation_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.google.genomics.v1.AnnotationsProto.internal_static_google_genomics_v1_VariantAnnotation_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.google.genomics.v1.VariantAnnotation.class, com.google.genomics.v1.VariantAnnotation.Builder.class);
    }

    // Construct using com.google.genomics.v1.VariantAnnotation.newBuilder()
    private Builder() {

    }

    private Builder(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      super(parent);

    }
    @java.lang.Override
    public Builder clear() {
      super.clear();
      bitField0_ = 0;
      type_ = 0;
      effect_ = 0;
      alternateBases_ = "";
      geneId_ = "";
      transcriptIds_ = com.google.protobuf.LazyStringArrayList.EMPTY;
      bitField0_ = (bitField0_ & ~0x00000010);
      if (conditionsBuilder_ == null) {
        conditions_ = java.util.Collections.emptyList();
      } else {
        conditions_ = null;
        conditionsBuilder_.clear();
      }
      bitField0_ = (bitField0_ & ~0x00000020);
      clinicalSignificance_ = 0;
      return this;
    }

    @java.lang.Override
    public com.google.protobuf.Descriptors.Descriptor
        getDescriptorForType() {
      return com.google.genomics.v1.AnnotationsProto.internal_static_google_genomics_v1_VariantAnnotation_descriptor;
    }

    @java.lang.Override
    public com.google.genomics.v1.VariantAnnotation getDefaultInstanceForType() {
      return com.google.genomics.v1.VariantAnnotation.getDefaultInstance();
    }

    @java.lang.Override
    public com.google.genomics.v1.VariantAnnotation build() {
      com.google.genomics.v1.VariantAnnotation result = buildPartial();
      if (!result.isInitialized()) {
        throw newUninitializedMessageException(result);
      }
      return result;
    }

    @java.lang.Override
    public com.google.genomics.v1.VariantAnnotation buildPartial() {
      com.google.genomics.v1.VariantAnnotation result = new com.google.genomics.v1.VariantAnnotation(this);
      buildPartialRepeatedFields(result);
      if (bitField0_ != 0) { buildPartial0(result); }
      onBuilt();
      return result;
    }

    private void buildPartialRepeatedFields(com.google.genomics.v1.VariantAnnotation result) {
      if (((bitField0_ & 0x00000010) != 0)) {
        transcriptIds_ = transcriptIds_.getUnmodifiableView();
        bitField0_ = (bitField0_ & ~0x00000010);
      }
      result.transcriptIds_ = transcriptIds_;
      if (conditionsBuilder_ == null) {
        if (((bitField0_ & 0x00000020) != 0)) {
          conditions_ = java.util.Collections.unmodifiableList(conditions_);
          bitField0_ = (bitField0_ & ~0x00000020);
        }
        result.conditions_ = conditions_;
      } else {
        result.conditions_ = conditionsBuilder_.build();
      }
    }

    private void buildPartial0(com.google.genomics.v1.VariantAnnotation result) {
      int from_bitField0_ = bitField0_;
      if (((from_bitField0_ & 0x00000001) != 0)) {
        result.type_ = type_;
      }
      if (((from_bitField0_ & 0x00000002) != 0)) {
        result.effect_ = effect_;
      }
      if (((from_bitField0_ & 0x00000004) != 0)) {
        result.alternateBases_ = alternateBases_;
      }
      if (((from_bitField0_ & 0x00000008) != 0)) {
        result.geneId_ = geneId_;
      }
      if (((from_bitField0_ & 0x00000040) != 0)) {
        result.clinicalSignificance_ = clinicalSignificance_;
      }
    }

    @java.lang.Override
    public Builder clone() {
      return super.clone();
    }
    @java.lang.Override
    public Builder setField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        java.lang.Object value) {
      return super.setField(field, value);
    }
    @java.lang.Override
    public Builder clearField(
        com.google.protobuf.Descriptors.FieldDescriptor field) {
      return super.clearField(field);
    }
    @java.lang.Override
    public Builder clearOneof(
        com.google.protobuf.Descriptors.OneofDescriptor oneof) {
      return super.clearOneof(oneof);
    }
    @java.lang.Override
    public Builder setRepeatedField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        int index, java.lang.Object value) {
      return super.setRepeatedField(field, index, value);
    }
    @java.lang.Override
    public Builder addRepeatedField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        java.lang.Object value) {
      return super.addRepeatedField(field, value);
    }
    @java.lang.Override
    public Builder mergeFrom(com.google.protobuf.Message other) {
      if (other instanceof com.google.genomics.v1.VariantAnnotation) {
        return mergeFrom((com.google.genomics.v1.VariantAnnotation)other);
      } else {
        super.mergeFrom(other);
        return this;
      }
    }

    public Builder mergeFrom(com.google.genomics.v1.VariantAnnotation other) {
      if (other == com.google.genomics.v1.VariantAnnotation.getDefaultInstance()) return this;
      if (other.type_ != 0) {
        setTypeValue(other.getTypeValue());
      }
      if (other.effect_ != 0) {
        setEffectValue(other.getEffectValue());
      }
      if (!other.getAlternateBases().isEmpty()) {
        alternateBases_ = other.alternateBases_;
        bitField0_ |= 0x00000004;
        onChanged();
      }
      if (!other.getGeneId().isEmpty()) {
        geneId_ = other.geneId_;
        bitField0_ |= 0x00000008;
        onChanged();
      }
      if (!other.transcriptIds_.isEmpty()) {
        if (transcriptIds_.isEmpty()) {
          transcriptIds_ = other.transcriptIds_;
          bitField0_ = (bitField0_ & ~0x00000010);
        } else {
          ensureTranscriptIdsIsMutable();
          transcriptIds_.addAll(other.transcriptIds_);
        }
        onChanged();
      }
      if (conditionsBuilder_ == null) {
        if (!other.conditions_.isEmpty()) {
          if (conditions_.isEmpty()) {
            conditions_ = other.conditions_;
            bitField0_ = (bitField0_ & ~0x00000020);
          } else {
            ensureConditionsIsMutable();
            conditions_.addAll(other.conditions_);
          }
          onChanged();
        }
      } else {
        if (!other.conditions_.isEmpty()) {
          if (conditionsBuilder_.isEmpty()) {
            conditionsBuilder_.dispose();
            conditionsBuilder_ = null;
            conditions_ = other.conditions_;
            bitField0_ = (bitField0_ & ~0x00000020);
            conditionsBuilder_ = 
              com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?
                 getConditionsFieldBuilder() : null;
          } else {
            conditionsBuilder_.addAllMessages(other.conditions_);
          }
        }
      }
      if (other.clinicalSignificance_ != 0) {
        setClinicalSignificanceValue(other.getClinicalSignificanceValue());
      }
      this.mergeUnknownFields(other.getUnknownFields());
      onChanged();
      return this;
    }

    @java.lang.Override
    public final boolean isInitialized() {
      return true;
    }

    @java.lang.Override
    public Builder mergeFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 8: {
              type_ = input.readEnum();
              bitField0_ |= 0x00000001;
              break;
            } // case 8
            case 16: {
              effect_ = input.readEnum();
              bitField0_ |= 0x00000002;
              break;
            } // case 16
            case 26: {
              alternateBases_ = input.readStringRequireUtf8();
              bitField0_ |= 0x00000004;
              break;
            } // case 26
            case 34: {
              geneId_ = input.readStringRequireUtf8();
              bitField0_ |= 0x00000008;
              break;
            } // case 34
            case 42: {
              java.lang.String s = input.readStringRequireUtf8();
              ensureTranscriptIdsIsMutable();
              transcriptIds_.add(s);
              break;
            } // case 42
            case 50: {
              com.google.genomics.v1.VariantAnnotation.ClinicalCondition m =
                  input.readMessage(
                      com.google.genomics.v1.VariantAnnotation.ClinicalCondition.parser(),
                      extensionRegistry);
              if (conditionsBuilder_ == null) {
                ensureConditionsIsMutable();
                conditions_.add(m);
              } else {
                conditionsBuilder_.addMessage(m);
              }
              break;
            } // case 50
            case 56: {
              clinicalSignificance_ = input.readEnum();
              bitField0_ |= 0x00000040;
              break;
            } // case 56
            default: {
              if (!super.parseUnknownField(input, extensionRegistry, tag)) {
                done = true; // was an endgroup tag
              }
              break;
            } // default:
          } // switch (tag)
        } // while (!done)
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.unwrapIOException();
      } finally {
        onChanged();
      } // finally
      return this;
    }
    private int bitField0_;

    private int type_ = 0;
    /**
     * <pre>
     * Type has been adapted from ClinVar's list of variant types.
     * </pre>
     *
     * <code>.google.genomics.v1.VariantAnnotation.Type type = 1;</code>
     * @return The enum numeric value on the wire for type.
     */
    @java.lang.Override public int getTypeValue() {
      return type_;
    }
    /**
     * <pre>
     * Type has been adapted from ClinVar's list of variant types.
     * </pre>
     *
     * <code>.google.genomics.v1.VariantAnnotation.Type type = 1;</code>
     * @param value The enum numeric value on the wire for type to set.
     * @return This builder for chaining.
     */
    public Builder setTypeValue(int value) {
      type_ = value;
      bitField0_ |= 0x00000001;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * Type has been adapted from ClinVar's list of variant types.
     * </pre>
     *
     * <code>.google.genomics.v1.VariantAnnotation.Type type = 1;</code>
     * @return The type.
     */
    @java.lang.Override
    public com.google.genomics.v1.VariantAnnotation.Type getType() {
      com.google.genomics.v1.VariantAnnotation.Type result = com.google.genomics.v1.VariantAnnotation.Type.forNumber(type_);
      return result == null ? com.google.genomics.v1.VariantAnnotation.Type.UNRECOGNIZED : result;
    }
    /**
     * <pre>
     * Type has been adapted from ClinVar's list of variant types.
     * </pre>
     *
     * <code>.google.genomics.v1.VariantAnnotation.Type type = 1;</code>
     * @param value The type to set.
     * @return This builder for chaining.
     */
    public Builder setType(com.google.genomics.v1.VariantAnnotation.Type value) {
      if (value == null) {
        throw new NullPointerException();
      }
      bitField0_ |= 0x00000001;
      type_ = value.getNumber();
      onChanged();
      return this;
    }
    /**
     * <pre>
     * Type has been adapted from ClinVar's list of variant types.
     * </pre>
     *
     * <code>.google.genomics.v1.VariantAnnotation.Type type = 1;</code>
     * @return This builder for chaining.
     */
    public Builder clearType() {
      bitField0_ = (bitField0_ & ~0x00000001);
      type_ = 0;
      onChanged();
      return this;
    }

    private int effect_ = 0;
    /**
     * <pre>
     * Effect of the variant on the coding sequence.
     * </pre>
     *
     * <code>.google.genomics.v1.VariantAnnotation.Effect effect = 2;</code>
     * @return The enum numeric value on the wire for effect.
     */
    @java.lang.Override public int getEffectValue() {
      return effect_;
    }
    /**
     * <pre>
     * Effect of the variant on the coding sequence.
     * </pre>
     *
     * <code>.google.genomics.v1.VariantAnnotation.Effect effect = 2;</code>
     * @param value The enum numeric value on the wire for effect to set.
     * @return This builder for chaining.
     */
    public Builder setEffectValue(int value) {
      effect_ = value;
      bitField0_ |= 0x00000002;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * Effect of the variant on the coding sequence.
     * </pre>
     *
     * <code>.google.genomics.v1.VariantAnnotation.Effect effect = 2;</code>
     * @return The effect.
     */
    @java.lang.Override
    public com.google.genomics.v1.VariantAnnotation.Effect getEffect() {
      com.google.genomics.v1.VariantAnnotation.Effect result = com.google.genomics.v1.VariantAnnotation.Effect.forNumber(effect_);
      return result == null ? com.google.genomics.v1.VariantAnnotation.Effect.UNRECOGNIZED : result;
    }
    /**
     * <pre>
     * Effect of the variant on the coding sequence.
     * </pre>
     *
     * <code>.google.genomics.v1.VariantAnnotation.Effect effect = 2;</code>
     * @param value The effect to set.
     * @return This builder for chaining.
     */
    public Builder setEffect(com.google.genomics.v1.VariantAnnotation.Effect value) {
      if (value == null) {
        throw new NullPointerException();
      }
      bitField0_ |= 0x00000002;
      effect_ = value.getNumber();
      onChanged();
      return this;
    }
    /**
     * <pre>
     * Effect of the variant on the coding sequence.
     * </pre>
     *
     * <code>.google.genomics.v1.VariantAnnotation.Effect effect = 2;</code>
     * @return This builder for chaining.
     */
    public Builder clearEffect() {
      bitField0_ = (bitField0_ & ~0x00000002);
      effect_ = 0;
      onChanged();
      return this;
    }

    private java.lang.Object alternateBases_ = "";
    /**
     * <pre>
     * The alternate allele for this variant. If multiple alternate alleles
     * exist at this location, create a separate variant for each one, as they
     * may represent distinct conditions.
     * </pre>
     *
     * <code>string alternate_bases = 3;</code>
     * @return The alternateBases.
     */
    public java.lang.String getAlternateBases() {
      java.lang.Object ref = alternateBases_;
      if (!(ref instanceof java.lang.String)) {
        com.google.protobuf.ByteString bs =
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        alternateBases_ = s;
        return s;
      } else {
        return (java.lang.String) ref;
      }
    }
    /**
     * <pre>
     * The alternate allele for this variant. If multiple alternate alleles
     * exist at this location, create a separate variant for each one, as they
     * may represent distinct conditions.
     * </pre>
     *
     * <code>string alternate_bases = 3;</code>
     * @return The bytes for alternateBases.
     */
    public com.google.protobuf.ByteString
        getAlternateBasesBytes() {
      java.lang.Object ref = alternateBases_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        alternateBases_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }
    /**
     * <pre>
     * The alternate allele for this variant. If multiple alternate alleles
     * exist at this location, create a separate variant for each one, as they
     * may represent distinct conditions.
     * </pre>
     *
     * <code>string alternate_bases = 3;</code>
     * @param value The alternateBases to set.
     * @return This builder for chaining.
     */
    public Builder setAlternateBases(
        java.lang.String value) {
      if (value == null) { throw new NullPointerException(); }
      alternateBases_ = value;
      bitField0_ |= 0x00000004;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * The alternate allele for this variant. If multiple alternate alleles
     * exist at this location, create a separate variant for each one, as they
     * may represent distinct conditions.
     * </pre>
     *
     * <code>string alternate_bases = 3;</code>
     * @return This builder for chaining.
     */
    public Builder clearAlternateBases() {
      alternateBases_ = getDefaultInstance().getAlternateBases();
      bitField0_ = (bitField0_ & ~0x00000004);
      onChanged();
      return this;
    }
    /**
     * <pre>
     * The alternate allele for this variant. If multiple alternate alleles
     * exist at this location, create a separate variant for each one, as they
     * may represent distinct conditions.
     * </pre>
     *
     * <code>string alternate_bases = 3;</code>
     * @param value The bytes for alternateBases to set.
     * @return This builder for chaining.
     */
    public Builder setAlternateBasesBytes(
        com.google.protobuf.ByteString value) {
      if (value == null) { throw new NullPointerException(); }
      checkByteStringIsUtf8(value);
      alternateBases_ = value;
      bitField0_ |= 0x00000004;
      onChanged();
      return this;
    }

    private java.lang.Object geneId_ = "";
    /**
     * <pre>
     * Google annotation ID of the gene affected by this variant. This should
     * be provided when the variant is created.
     * </pre>
     *
     * <code>string gene_id = 4;</code>
     * @return The geneId.
     */
    public java.lang.String getGeneId() {
      java.lang.Object ref = geneId_;
      if (!(ref instanceof java.lang.String)) {
        com.google.protobuf.ByteString bs =
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        geneId_ = s;
        return s;
      } else {
        return (java.lang.String) ref;
      }
    }
    /**
     * <pre>
     * Google annotation ID of the gene affected by this variant. This should
     * be provided when the variant is created.
     * </pre>
     *
     * <code>string gene_id = 4;</code>
     * @return The bytes for geneId.
     */
    public com.google.protobuf.ByteString
        getGeneIdBytes() {
      java.lang.Object ref = geneId_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        geneId_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }
    /**
     * <pre>
     * Google annotation ID of the gene affected by this variant. This should
     * be provided when the variant is created.
     * </pre>
     *
     * <code>string gene_id = 4;</code>
     * @param value The geneId to set.
     * @return This builder for chaining.
     */
    public Builder setGeneId(
        java.lang.String value) {
      if (value == null) { throw new NullPointerException(); }
      geneId_ = value;
      bitField0_ |= 0x00000008;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * Google annotation ID of the gene affected by this variant. This should
     * be provided when the variant is created.
     * </pre>
     *
     * <code>string gene_id = 4;</code>
     * @return This builder for chaining.
     */
    public Builder clearGeneId() {
      geneId_ = getDefaultInstance().getGeneId();
      bitField0_ = (bitField0_ & ~0x00000008);
      onChanged();
      return this;
    }
    /**
     * <pre>
     * Google annotation ID of the gene affected by this variant. This should
     * be provided when the variant is created.
     * </pre>
     *
     * <code>string gene_id = 4;</code>
     * @param value The bytes for geneId to set.
     * @return This builder for chaining.
     */
    public Builder setGeneIdBytes(
        com.google.protobuf.ByteString value) {
      if (value == null) { throw new NullPointerException(); }
      checkByteStringIsUtf8(value);
      geneId_ = value;
      bitField0_ |= 0x00000008;
      onChanged();
      return this;
    }

    private com.google.protobuf.LazyStringList transcriptIds_ = com.google.protobuf.LazyStringArrayList.EMPTY;
    private void ensureTranscriptIdsIsMutable() {
      if (!((bitField0_ & 0x00000010) != 0)) {
        transcriptIds_ = new com.google.protobuf.LazyStringArrayList(transcriptIds_);
        bitField0_ |= 0x00000010;
       }
    }
    /**
     * <pre>
     * Google annotation IDs of the transcripts affected by this variant. These
     * should be provided when the variant is created.
     * </pre>
     *
     * <code>repeated string transcript_ids = 5;</code>
     * @return A list containing the transcriptIds.
     */
    public com.google.protobuf.ProtocolStringList
        getTranscriptIdsList() {
      return transcriptIds_.getUnmodifiableView();
    }
    /**
     * <pre>
     * Google annotation IDs of the transcripts affected by this variant. These
     * should be provided when the variant is created.
     * </pre>
     *
     * <code>repeated string transcript_ids = 5;</code>
     * @return The count of transcriptIds.
     */
    public int getTranscriptIdsCount() {
      return transcriptIds_.size();
    }
    /**
     * <pre>
     * Google annotation IDs of the transcripts affected by this variant. These
     * should be provided when the variant is created.
     * </pre>
     *
     * <code>repeated string transcript_ids = 5;</code>
     * @param index The index of the element to return.
     * @return The transcriptIds at the given index.
     */
    public java.lang.String getTranscriptIds(int index) {
      return transcriptIds_.get(index);
    }
    /**
     * <pre>
     * Google annotation IDs of the transcripts affected by this variant. These
     * should be provided when the variant is created.
     * </pre>
     *
     * <code>repeated string transcript_ids = 5;</code>
     * @param index The index of the value to return.
     * @return The bytes of the transcriptIds at the given index.
     */
    public com.google.protobuf.ByteString
        getTranscriptIdsBytes(int index) {
      return transcriptIds_.getByteString(index);
    }
    /**
     * <pre>
     * Google annotation IDs of the transcripts affected by this variant. These
     * should be provided when the variant is created.
     * </pre>
     *
     * <code>repeated string transcript_ids = 5;</code>
     * @param index The index to set the value at.
     * @param value The transcriptIds to set.
     * @return This builder for chaining.
     */
    public Builder setTranscriptIds(
        int index, java.lang.String value) {
      if (value == null) { throw new NullPointerException(); }
      ensureTranscriptIdsIsMutable();
      transcriptIds_.set(index, value);
      onChanged();
      return this;
    }
    /**
     * <pre>
     * Google annotation IDs of the transcripts affected by this variant. These
     * should be provided when the variant is created.
     * </pre>
     *
     * <code>repeated string transcript_ids = 5;</code>
     * @param value The transcriptIds to add.
     * @return This builder for chaining.
     */
    public Builder addTranscriptIds(
        java.lang.String value) {
      if (value == null) { throw new NullPointerException(); }
      ensureTranscriptIdsIsMutable();
      transcriptIds_.add(value);
      onChanged();
      return this;
    }
    /**
     * <pre>
     * Google annotation IDs of the transcripts affected by this variant. These
     * should be provided when the variant is created.
     * </pre>
     *
     * <code>repeated string transcript_ids = 5;</code>
     * @param values The transcriptIds to add.
     * @return This builder for chaining.
     */
    public Builder addAllTranscriptIds(
        java.lang.Iterable<java.lang.String> values) {
      ensureTranscriptIdsIsMutable();
      com.google.protobuf.AbstractMessageLite.Builder.addAll(
          values, transcriptIds_);
      onChanged();
      return this;
    }
    /**
     * <pre>
     * Google annotation IDs of the transcripts affected by this variant. These
     * should be provided when the variant is created.
     * </pre>
     *
     * <code>repeated string transcript_ids = 5;</code>
     * @return This builder for chaining.
     */
    public Builder clearTranscriptIds() {
      transcriptIds_ = com.google.protobuf.LazyStringArrayList.EMPTY;
      bitField0_ = (bitField0_ & ~0x00000010);
      onChanged();
      return this;
    }
    /**
     * <pre>
     * Google annotation IDs of the transcripts affected by this variant. These
     * should be provided when the variant is created.
     * </pre>
     *
     * <code>repeated string transcript_ids = 5;</code>
     * @param value The bytes of the transcriptIds to add.
     * @return This builder for chaining.
     */
    public Builder addTranscriptIdsBytes(
        com.google.protobuf.ByteString value) {
      if (value == null) { throw new NullPointerException(); }
      checkByteStringIsUtf8(value);
      ensureTranscriptIdsIsMutable();
      transcriptIds_.add(value);
      onChanged();
      return this;
    }

    private java.util.List<com.google.genomics.v1.VariantAnnotation.ClinicalCondition> conditions_ =
      java.util.Collections.emptyList();
    private void ensureConditionsIsMutable() {
      if (!((bitField0_ & 0x00000020) != 0)) {
        conditions_ = new java.util.ArrayList<com.google.genomics.v1.VariantAnnotation.ClinicalCondition>(conditions_);
        bitField0_ |= 0x00000020;
       }
    }

    private com.google.protobuf.RepeatedFieldBuilderV3<
        com.google.genomics.v1.VariantAnnotation.ClinicalCondition, com.google.genomics.v1.VariantAnnotation.ClinicalCondition.Builder, com.google.genomics.v1.VariantAnnotation.ClinicalConditionOrBuilder> conditionsBuilder_;

    /**
     * <pre>
     * The set of conditions associated with this variant.
     * A condition describes the way a variant influences human health.
     * </pre>
     *
     * <code>repeated .google.genomics.v1.VariantAnnotation.ClinicalCondition conditions = 6;</code>
     */
    public java.util.List<com.google.genomics.v1.VariantAnnotation.ClinicalCondition> getConditionsList() {
      if (conditionsBuilder_ == null) {
        return java.util.Collections.unmodifiableList(conditions_);
      } else {
        return conditionsBuilder_.getMessageList();
      }
    }
    /**
     * <pre>
     * The set of conditions associated with this variant.
     * A condition describes the way a variant influences human health.
     * </pre>
     *
     * <code>repeated .google.genomics.v1.VariantAnnotation.ClinicalCondition conditions = 6;</code>
     */
    public int getConditionsCount() {
      if (conditionsBuilder_ == null) {
        return conditions_.size();
      } else {
        return conditionsBuilder_.getCount();
      }
    }
    /**
     * <pre>
     * The set of conditions associated with this variant.
     * A condition describes the way a variant influences human health.
     * </pre>
     *
     * <code>repeated .google.genomics.v1.VariantAnnotation.ClinicalCondition conditions = 6;</code>
     */
    public com.google.genomics.v1.VariantAnnotation.ClinicalCondition getConditions(int index) {
      if (conditionsBuilder_ == null) {
        return conditions_.get(index);
      } else {
        return conditionsBuilder_.getMessage(index);
      }
    }
    /**
     * <pre>
     * The set of conditions associated with this variant.
     * A condition describes the way a variant influences human health.
     * </pre>
     *
     * <code>repeated .google.genomics.v1.VariantAnnotation.ClinicalCondition conditions = 6;</code>
     */
    public Builder setConditions(
        int index, com.google.genomics.v1.VariantAnnotation.ClinicalCondition value) {
      if (conditionsBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureConditionsIsMutable();
        conditions_.set(index, value);
        onChanged();
      } else {
        conditionsBuilder_.setMessage(index, value);
      }
      return this;
    }
    /**
     * <pre>
     * The set of conditions associated with this variant.
     * A condition describes the way a variant influences human health.
     * </pre>
     *
     * <code>repeated .google.genomics.v1.VariantAnnotation.ClinicalCondition conditions = 6;</code>
     */
    public Builder setConditions(
        int index, com.google.genomics.v1.VariantAnnotation.ClinicalCondition.Builder builderForValue) {
      if (conditionsBuilder_ == null) {
        ensureConditionsIsMutable();
        conditions_.set(index, builderForValue.build());
        onChanged();
      } else {
        conditionsBuilder_.setMessage(index, builderForValue.build());
      }
      return this;
    }
    /**
     * <pre>
     * The set of conditions associated with this variant.
     * A condition describes the way a variant influences human health.
     * </pre>
     *
     * <code>repeated .google.genomics.v1.VariantAnnotation.ClinicalCondition conditions = 6;</code>
     */
    public Builder addConditions(com.google.genomics.v1.VariantAnnotation.ClinicalCondition value) {
      if (conditionsBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureConditionsIsMutable();
        conditions_.add(value);
        onChanged();
      } else {
        conditionsBuilder_.addMessage(value);
      }
      return this;
    }
    /**
     * <pre>
     * The set of conditions associated with this variant.
     * A condition describes the way a variant influences human health.
     * </pre>
     *
     * <code>repeated .google.genomics.v1.VariantAnnotation.ClinicalCondition conditions = 6;</code>
     */
    public Builder addConditions(
        int index, com.google.genomics.v1.VariantAnnotation.ClinicalCondition value) {
      if (conditionsBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureConditionsIsMutable();
        conditions_.add(index, value);
        onChanged();
      } else {
        conditionsBuilder_.addMessage(index, value);
      }
      return this;
    }
    /**
     * <pre>
     * The set of conditions associated with this variant.
     * A condition describes the way a variant influences human health.
     * </pre>
     *
     * <code>repeated .google.genomics.v1.VariantAnnotation.ClinicalCondition conditions = 6;</code>
     */
    public Builder addConditions(
        com.google.genomics.v1.VariantAnnotation.ClinicalCondition.Builder builderForValue) {
      if (conditionsBuilder_ == null) {
        ensureConditionsIsMutable();
        conditions_.add(builderForValue.build());
        onChanged();
      } else {
        conditionsBuilder_.addMessage(builderForValue.build());
      }
      return this;
    }
    /**
     * <pre>
     * The set of conditions associated with this variant.
     * A condition describes the way a variant influences human health.
     * </pre>
     *
     * <code>repeated .google.genomics.v1.VariantAnnotation.ClinicalCondition conditions = 6;</code>
     */
    public Builder addConditions(
        int index, com.google.genomics.v1.VariantAnnotation.ClinicalCondition.Builder builderForValue) {
      if (conditionsBuilder_ == null) {
        ensureConditionsIsMutable();
        conditions_.add(index, builderForValue.build());
        onChanged();
      } else {
        conditionsBuilder_.addMessage(index, builderForValue.build());
      }
      return this;
    }
    /**
     * <pre>
     * The set of conditions associated with this variant.
     * A condition describes the way a variant influences human health.
     * </pre>
     *
     * <code>repeated .google.genomics.v1.VariantAnnotation.ClinicalCondition conditions = 6;</code>
     */
    public Builder addAllConditions(
        java.lang.Iterable<? extends com.google.genomics.v1.VariantAnnotation.ClinicalCondition> values) {
      if (conditionsBuilder_ == null) {
        ensureConditionsIsMutable();
        com.google.protobuf.AbstractMessageLite.Builder.addAll(
            values, conditions_);
        onChanged();
      } else {
        conditionsBuilder_.addAllMessages(values);
      }
      return this;
    }
    /**
     * <pre>
     * The set of conditions associated with this variant.
     * A condition describes the way a variant influences human health.
     * </pre>
     *
     * <code>repeated .google.genomics.v1.VariantAnnotation.ClinicalCondition conditions = 6;</code>
     */
    public Builder clearConditions() {
      if (conditionsBuilder_ == null) {
        conditions_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000020);
        onChanged();
      } else {
        conditionsBuilder_.clear();
      }
      return this;
    }
    /**
     * <pre>
     * The set of conditions associated with this variant.
     * A condition describes the way a variant influences human health.
     * </pre>
     *
     * <code>repeated .google.genomics.v1.VariantAnnotation.ClinicalCondition conditions = 6;</code>
     */
    public Builder removeConditions(int index) {
      if (conditionsBuilder_ == null) {
        ensureConditionsIsMutable();
        conditions_.remove(index);
        onChanged();
      } else {
        conditionsBuilder_.remove(index);
      }
      return this;
    }
    /**
     * <pre>
     * The set of conditions associated with this variant.
     * A condition describes the way a variant influences human health.
     * </pre>
     *
     * <code>repeated .google.genomics.v1.VariantAnnotation.ClinicalCondition conditions = 6;</code>
     */
    public com.google.genomics.v1.VariantAnnotation.ClinicalCondition.Builder getConditionsBuilder(
        int index) {
      return getConditionsFieldBuilder().getBuilder(index);
    }
    /**
     * <pre>
     * The set of conditions associated with this variant.
     * A condition describes the way a variant influences human health.
     * </pre>
     *
     * <code>repeated .google.genomics.v1.VariantAnnotation.ClinicalCondition conditions = 6;</code>
     */
    public com.google.genomics.v1.VariantAnnotation.ClinicalConditionOrBuilder getConditionsOrBuilder(
        int index) {
      if (conditionsBuilder_ == null) {
        return conditions_.get(index);  } else {
        return conditionsBuilder_.getMessageOrBuilder(index);
      }
    }
    /**
     * <pre>
     * The set of conditions associated with this variant.
     * A condition describes the way a variant influences human health.
     * </pre>
     *
     * <code>repeated .google.genomics.v1.VariantAnnotation.ClinicalCondition conditions = 6;</code>
     */
    public java.util.List<? extends com.google.genomics.v1.VariantAnnotation.ClinicalConditionOrBuilder> 
         getConditionsOrBuilderList() {
      if (conditionsBuilder_ != null) {
        return conditionsBuilder_.getMessageOrBuilderList();
      } else {
        return java.util.Collections.unmodifiableList(conditions_);
      }
    }
    /**
     * <pre>
     * The set of conditions associated with this variant.
     * A condition describes the way a variant influences human health.
     * </pre>
     *
     * <code>repeated .google.genomics.v1.VariantAnnotation.ClinicalCondition conditions = 6;</code>
     */
    public com.google.genomics.v1.VariantAnnotation.ClinicalCondition.Builder addConditionsBuilder() {
      return getConditionsFieldBuilder().addBuilder(
          com.google.genomics.v1.VariantAnnotation.ClinicalCondition.getDefaultInstance());
    }
    /**
     * <pre>
     * The set of conditions associated with this variant.
     * A condition describes the way a variant influences human health.
     * </pre>
     *
     * <code>repeated .google.genomics.v1.VariantAnnotation.ClinicalCondition conditions = 6;</code>
     */
    public com.google.genomics.v1.VariantAnnotation.ClinicalCondition.Builder addConditionsBuilder(
        int index) {
      return getConditionsFieldBuilder().addBuilder(
          index, com.google.genomics.v1.VariantAnnotation.ClinicalCondition.getDefaultInstance());
    }
    /**
     * <pre>
     * The set of conditions associated with this variant.
     * A condition describes the way a variant influences human health.
     * </pre>
     *
     * <code>repeated .google.genomics.v1.VariantAnnotation.ClinicalCondition conditions = 6;</code>
     */
    public java.util.List<com.google.genomics.v1.VariantAnnotation.ClinicalCondition.Builder> 
         getConditionsBuilderList() {
      return getConditionsFieldBuilder().getBuilderList();
    }
    private com.google.protobuf.RepeatedFieldBuilderV3<
        com.google.genomics.v1.VariantAnnotation.ClinicalCondition, com.google.genomics.v1.VariantAnnotation.ClinicalCondition.Builder, com.google.genomics.v1.VariantAnnotation.ClinicalConditionOrBuilder> 
        getConditionsFieldBuilder() {
      if (conditionsBuilder_ == null) {
        conditionsBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<
            com.google.genomics.v1.VariantAnnotation.ClinicalCondition, com.google.genomics.v1.VariantAnnotation.ClinicalCondition.Builder, com.google.genomics.v1.VariantAnnotation.ClinicalConditionOrBuilder>(
                conditions_,
                ((bitField0_ & 0x00000020) != 0),
                getParentForChildren(),
                isClean());
        conditions_ = null;
      }
      return conditionsBuilder_;
    }

    private int clinicalSignificance_ = 0;
    /**
     * <pre>
     * Describes the clinical significance of a variant.
     * It is adapted from the ClinVar controlled vocabulary for clinical
     * significance described at:
     * http://www.ncbi.nlm.nih.gov/clinvar/docs/clinsig/
     * </pre>
     *
     * <code>.google.genomics.v1.VariantAnnotation.ClinicalSignificance clinical_significance = 7;</code>
     * @return The enum numeric value on the wire for clinicalSignificance.
     */
    @java.lang.Override public int getClinicalSignificanceValue() {
      return clinicalSignificance_;
    }
    /**
     * <pre>
     * Describes the clinical significance of a variant.
     * It is adapted from the ClinVar controlled vocabulary for clinical
     * significance described at:
     * http://www.ncbi.nlm.nih.gov/clinvar/docs/clinsig/
     * </pre>
     *
     * <code>.google.genomics.v1.VariantAnnotation.ClinicalSignificance clinical_significance = 7;</code>
     * @param value The enum numeric value on the wire for clinicalSignificance to set.
     * @return This builder for chaining.
     */
    public Builder setClinicalSignificanceValue(int value) {
      clinicalSignificance_ = value;
      bitField0_ |= 0x00000040;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * Describes the clinical significance of a variant.
     * It is adapted from the ClinVar controlled vocabulary for clinical
     * significance described at:
     * http://www.ncbi.nlm.nih.gov/clinvar/docs/clinsig/
     * </pre>
     *
     * <code>.google.genomics.v1.VariantAnnotation.ClinicalSignificance clinical_significance = 7;</code>
     * @return The clinicalSignificance.
     */
    @java.lang.Override
    public com.google.genomics.v1.VariantAnnotation.ClinicalSignificance getClinicalSignificance() {
      com.google.genomics.v1.VariantAnnotation.ClinicalSignificance result = com.google.genomics.v1.VariantAnnotation.ClinicalSignificance.forNumber(clinicalSignificance_);
      return result == null ? com.google.genomics.v1.VariantAnnotation.ClinicalSignificance.UNRECOGNIZED : result;
    }
    /**
     * <pre>
     * Describes the clinical significance of a variant.
     * It is adapted from the ClinVar controlled vocabulary for clinical
     * significance described at:
     * http://www.ncbi.nlm.nih.gov/clinvar/docs/clinsig/
     * </pre>
     *
     * <code>.google.genomics.v1.VariantAnnotation.ClinicalSignificance clinical_significance = 7;</code>
     * @param value The clinicalSignificance to set.
     * @return This builder for chaining.
     */
    public Builder setClinicalSignificance(com.google.genomics.v1.VariantAnnotation.ClinicalSignificance value) {
      if (value == null) {
        throw new NullPointerException();
      }
      bitField0_ |= 0x00000040;
      clinicalSignificance_ = value.getNumber();
      onChanged();
      return this;
    }
    /**
     * <pre>
     * Describes the clinical significance of a variant.
     * It is adapted from the ClinVar controlled vocabulary for clinical
     * significance described at:
     * http://www.ncbi.nlm.nih.gov/clinvar/docs/clinsig/
     * </pre>
     *
     * <code>.google.genomics.v1.VariantAnnotation.ClinicalSignificance clinical_significance = 7;</code>
     * @return This builder for chaining.
     */
    public Builder clearClinicalSignificance() {
      bitField0_ = (bitField0_ & ~0x00000040);
      clinicalSignificance_ = 0;
      onChanged();
      return this;
    }
    @java.lang.Override
    public final Builder setUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return super.setUnknownFields(unknownFields);
    }

    @java.lang.Override
    public final Builder mergeUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return super.mergeUnknownFields(unknownFields);
    }


    // @@protoc_insertion_point(builder_scope:google.genomics.v1.VariantAnnotation)
  }

  // @@protoc_insertion_point(class_scope:google.genomics.v1.VariantAnnotation)
  private static final com.google.genomics.v1.VariantAnnotation DEFAULT_INSTANCE;
  static {
    DEFAULT_INSTANCE = new com.google.genomics.v1.VariantAnnotation();
  }

  public static com.google.genomics.v1.VariantAnnotation getDefaultInstance() {
    return DEFAULT_INSTANCE;
  }

  private static final com.google.protobuf.Parser<VariantAnnotation>
      PARSER = new com.google.protobuf.AbstractParser<VariantAnnotation>() {
    @java.lang.Override
    public VariantAnnotation parsePartialFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      Builder builder = newBuilder();
      try {
        builder.mergeFrom(input, extensionRegistry);
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(builder.buildPartial());
      } catch (com.google.protobuf.UninitializedMessageException e) {
        throw e.asInvalidProtocolBufferException().setUnfinishedMessage(builder.buildPartial());
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(e)
            .setUnfinishedMessage(builder.buildPartial());
      }
      return builder.buildPartial();
    }
  };

  public static com.google.protobuf.Parser<VariantAnnotation> parser() {
    return PARSER;
  }

  @java.lang.Override
  public com.google.protobuf.Parser<VariantAnnotation> getParserForType() {
    return PARSER;
  }

  @java.lang.Override
  public com.google.genomics.v1.VariantAnnotation getDefaultInstanceForType() {
    return DEFAULT_INSTANCE;
  }

}

