// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: google/genomics/v1/annotations.proto

package com.google.genomics.v1;

/**
 * <pre>
 * When an [Annotation][google.genomics.v1.Annotation] or
 * [AnnotationSet][google.genomics.v1.AnnotationSet] is created, if `type` is
 * not specified it will be set to `GENERIC`.
 * </pre>
 *
 * Protobuf enum {@code google.genomics.v1.AnnotationType}
 */
public enum AnnotationType
    implements com.google.protobuf.ProtocolMessageEnum {
  /**
   * <code>ANNOTATION_TYPE_UNSPECIFIED = 0;</code>
   */
  ANNOTATION_TYPE_UNSPECIFIED(0),
  /**
   * <pre>
   * A `GENERIC` annotation type should be used when no other annotation
   * type will suffice. This represents an untyped annotation of the reference
   * genome.
   * </pre>
   *
   * <code>GENERIC = 1;</code>
   */
  GENERIC(1),
  /**
   * <pre>
   * A `VARIANT` annotation type.
   * </pre>
   *
   * <code>VARIANT = 2;</code>
   */
  VARIANT(2),
  /**
   * <pre>
   * A `GENE` annotation type represents the existence of a gene at the
   * associated reference coordinates. The start coordinate is typically the
   * gene's transcription start site and the end is typically the end of the
   * gene's last exon.
   * </pre>
   *
   * <code>GENE = 3;</code>
   */
  GENE(3),
  /**
   * <pre>
   * A `TRANSCRIPT` annotation type represents the assertion that a
   * particular region of the reference genome may be transcribed as RNA.
   * </pre>
   *
   * <code>TRANSCRIPT = 4;</code>
   */
  TRANSCRIPT(4),
  UNRECOGNIZED(-1),
  ;

  /**
   * <code>ANNOTATION_TYPE_UNSPECIFIED = 0;</code>
   */
  public static final int ANNOTATION_TYPE_UNSPECIFIED_VALUE = 0;
  /**
   * <pre>
   * A `GENERIC` annotation type should be used when no other annotation
   * type will suffice. This represents an untyped annotation of the reference
   * genome.
   * </pre>
   *
   * <code>GENERIC = 1;</code>
   */
  public static final int GENERIC_VALUE = 1;
  /**
   * <pre>
   * A `VARIANT` annotation type.
   * </pre>
   *
   * <code>VARIANT = 2;</code>
   */
  public static final int VARIANT_VALUE = 2;
  /**
   * <pre>
   * A `GENE` annotation type represents the existence of a gene at the
   * associated reference coordinates. The start coordinate is typically the
   * gene's transcription start site and the end is typically the end of the
   * gene's last exon.
   * </pre>
   *
   * <code>GENE = 3;</code>
   */
  public static final int GENE_VALUE = 3;
  /**
   * <pre>
   * A `TRANSCRIPT` annotation type represents the assertion that a
   * particular region of the reference genome may be transcribed as RNA.
   * </pre>
   *
   * <code>TRANSCRIPT = 4;</code>
   */
  public static final int TRANSCRIPT_VALUE = 4;


  public final int getNumber() {
    if (this == UNRECOGNIZED) {
      throw new java.lang.IllegalArgumentException(
          "Can't get the number of an unknown enum value.");
    }
    return value;
  }

  /**
   * @param value The numeric wire value of the corresponding enum entry.
   * @return The enum associated with the given numeric wire value.
   * @deprecated Use {@link #forNumber(int)} instead.
   */
  @java.lang.Deprecated
  public static AnnotationType valueOf(int value) {
    return forNumber(value);
  }

  /**
   * @param value The numeric wire value of the corresponding enum entry.
   * @return The enum associated with the given numeric wire value.
   */
  public static AnnotationType forNumber(int value) {
    switch (value) {
      case 0: return ANNOTATION_TYPE_UNSPECIFIED;
      case 1: return GENERIC;
      case 2: return VARIANT;
      case 3: return GENE;
      case 4: return TRANSCRIPT;
      default: return null;
    }
  }

  public static com.google.protobuf.Internal.EnumLiteMap<AnnotationType>
      internalGetValueMap() {
    return internalValueMap;
  }
  private static final com.google.protobuf.Internal.EnumLiteMap<
      AnnotationType> internalValueMap =
        new com.google.protobuf.Internal.EnumLiteMap<AnnotationType>() {
          public AnnotationType findValueByNumber(int number) {
            return AnnotationType.forNumber(number);
          }
        };

  public final com.google.protobuf.Descriptors.EnumValueDescriptor
      getValueDescriptor() {
    if (this == UNRECOGNIZED) {
      throw new java.lang.IllegalStateException(
          "Can't get the descriptor of an unrecognized enum value.");
    }
    return getDescriptor().getValues().get(ordinal());
  }
  public final com.google.protobuf.Descriptors.EnumDescriptor
      getDescriptorForType() {
    return getDescriptor();
  }
  public static final com.google.protobuf.Descriptors.EnumDescriptor
      getDescriptor() {
    return com.google.genomics.v1.AnnotationsProto.getDescriptor().getEnumTypes().get(0);
  }

  private static final AnnotationType[] VALUES = values();

  public static AnnotationType valueOf(
      com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
    if (desc.getType() != getDescriptor()) {
      throw new java.lang.IllegalArgumentException(
        "EnumValueDescriptor is not for this type.");
    }
    if (desc.getIndex() == -1) {
      return UNRECOGNIZED;
    }
    return VALUES[desc.getIndex()];
  }

  private final int value;

  private AnnotationType(int value) {
    this.value = value;
  }

  // @@protoc_insertion_point(enum_scope:google.genomics.v1.AnnotationType)
}

