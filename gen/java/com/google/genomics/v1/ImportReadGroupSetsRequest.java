// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: google/genomics/v1/reads.proto

package com.google.genomics.v1;

/**
 * <pre>
 * The read group set import request.
 * </pre>
 *
 * Protobuf type {@code google.genomics.v1.ImportReadGroupSetsRequest}
 */
public final class ImportReadGroupSetsRequest extends
    com.google.protobuf.GeneratedMessageV3 implements
    // @@protoc_insertion_point(message_implements:google.genomics.v1.ImportReadGroupSetsRequest)
    ImportReadGroupSetsRequestOrBuilder {
private static final long serialVersionUID = 0L;
  // Use ImportReadGroupSetsRequest.newBuilder() to construct.
  private ImportReadGroupSetsRequest(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
    super(builder);
  }
  private ImportReadGroupSetsRequest() {
    datasetId_ = "";
    referenceSetId_ = "";
    sourceUris_ = com.google.protobuf.LazyStringArrayList.EMPTY;
    partitionStrategy_ = 0;
  }

  @java.lang.Override
  @SuppressWarnings({"unused"})
  protected java.lang.Object newInstance(
      UnusedPrivateParameter unused) {
    return new ImportReadGroupSetsRequest();
  }

  @java.lang.Override
  public final com.google.protobuf.UnknownFieldSet
  getUnknownFields() {
    return this.unknownFields;
  }
  private ImportReadGroupSetsRequest(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    this();
    if (extensionRegistry == null) {
      throw new java.lang.NullPointerException();
    }
    int mutable_bitField0_ = 0;
    com.google.protobuf.UnknownFieldSet.Builder unknownFields =
        com.google.protobuf.UnknownFieldSet.newBuilder();
    try {
      boolean done = false;
      while (!done) {
        int tag = input.readTag();
        switch (tag) {
          case 0:
            done = true;
            break;
          case 10: {
            java.lang.String s = input.readStringRequireUtf8();

            datasetId_ = s;
            break;
          }
          case 18: {
            java.lang.String s = input.readStringRequireUtf8();
            if (!((mutable_bitField0_ & 0x00000001) != 0)) {
              sourceUris_ = new com.google.protobuf.LazyStringArrayList();
              mutable_bitField0_ |= 0x00000001;
            }
            sourceUris_.add(s);
            break;
          }
          case 34: {
            java.lang.String s = input.readStringRequireUtf8();

            referenceSetId_ = s;
            break;
          }
          case 40: {
            int rawValue = input.readEnum();

            partitionStrategy_ = rawValue;
            break;
          }
          default: {
            if (!parseUnknownField(
                input, unknownFields, extensionRegistry, tag)) {
              done = true;
            }
            break;
          }
        }
      }
    } catch (com.google.protobuf.InvalidProtocolBufferException e) {
      throw e.setUnfinishedMessage(this);
    } catch (com.google.protobuf.UninitializedMessageException e) {
      throw e.asInvalidProtocolBufferException().setUnfinishedMessage(this);
    } catch (java.io.IOException e) {
      throw new com.google.protobuf.InvalidProtocolBufferException(
          e).setUnfinishedMessage(this);
    } finally {
      if (((mutable_bitField0_ & 0x00000001) != 0)) {
        sourceUris_ = sourceUris_.getUnmodifiableView();
      }
      this.unknownFields = unknownFields.build();
      makeExtensionsImmutable();
    }
  }
  public static final com.google.protobuf.Descriptors.Descriptor
      getDescriptor() {
    return com.google.genomics.v1.ReadsProto.internal_static_google_genomics_v1_ImportReadGroupSetsRequest_descriptor;
  }

  @java.lang.Override
  protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internalGetFieldAccessorTable() {
    return com.google.genomics.v1.ReadsProto.internal_static_google_genomics_v1_ImportReadGroupSetsRequest_fieldAccessorTable
        .ensureFieldAccessorsInitialized(
            com.google.genomics.v1.ImportReadGroupSetsRequest.class, com.google.genomics.v1.ImportReadGroupSetsRequest.Builder.class);
  }

  /**
   * Protobuf enum {@code google.genomics.v1.ImportReadGroupSetsRequest.PartitionStrategy}
   */
  public enum PartitionStrategy
      implements com.google.protobuf.ProtocolMessageEnum {
    /**
     * <code>PARTITION_STRATEGY_UNSPECIFIED = 0;</code>
     */
    PARTITION_STRATEGY_UNSPECIFIED(0),
    /**
     * <pre>
     * In most cases, this strategy yields one read group set per file. This is
     * the default behavior.
     * Allocate one read group set per file per sample. For BAM files, read
     * groups are considered to share a sample if they have identical sample
     * names. Furthermore, all reads for each file which do not belong to a read
     * group, if any, will be grouped into a single read group set per-file.
     * </pre>
     *
     * <code>PER_FILE_PER_SAMPLE = 1;</code>
     */
    PER_FILE_PER_SAMPLE(1),
    /**
     * <pre>
     * Includes all read groups in all imported files into a single read group
     * set. Requires that the headers for all imported files are equivalent. All
     * reads which do not belong to a read group, if any, will be grouped into a
     * separate read group set.
     * </pre>
     *
     * <code>MERGE_ALL = 2;</code>
     */
    MERGE_ALL(2),
    UNRECOGNIZED(-1),
    ;

    /**
     * <code>PARTITION_STRATEGY_UNSPECIFIED = 0;</code>
     */
    public static final int PARTITION_STRATEGY_UNSPECIFIED_VALUE = 0;
    /**
     * <pre>
     * In most cases, this strategy yields one read group set per file. This is
     * the default behavior.
     * Allocate one read group set per file per sample. For BAM files, read
     * groups are considered to share a sample if they have identical sample
     * names. Furthermore, all reads for each file which do not belong to a read
     * group, if any, will be grouped into a single read group set per-file.
     * </pre>
     *
     * <code>PER_FILE_PER_SAMPLE = 1;</code>
     */
    public static final int PER_FILE_PER_SAMPLE_VALUE = 1;
    /**
     * <pre>
     * Includes all read groups in all imported files into a single read group
     * set. Requires that the headers for all imported files are equivalent. All
     * reads which do not belong to a read group, if any, will be grouped into a
     * separate read group set.
     * </pre>
     *
     * <code>MERGE_ALL = 2;</code>
     */
    public static final int MERGE_ALL_VALUE = 2;


    public final int getNumber() {
      if (this == UNRECOGNIZED) {
        throw new java.lang.IllegalArgumentException(
            "Can't get the number of an unknown enum value.");
      }
      return value;
    }

    /**
     * @param value The numeric wire value of the corresponding enum entry.
     * @return The enum associated with the given numeric wire value.
     * @deprecated Use {@link #forNumber(int)} instead.
     */
    @java.lang.Deprecated
    public static PartitionStrategy valueOf(int value) {
      return forNumber(value);
    }

    /**
     * @param value The numeric wire value of the corresponding enum entry.
     * @return The enum associated with the given numeric wire value.
     */
    public static PartitionStrategy forNumber(int value) {
      switch (value) {
        case 0: return PARTITION_STRATEGY_UNSPECIFIED;
        case 1: return PER_FILE_PER_SAMPLE;
        case 2: return MERGE_ALL;
        default: return null;
      }
    }

    public static com.google.protobuf.Internal.EnumLiteMap<PartitionStrategy>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static final com.google.protobuf.Internal.EnumLiteMap<
        PartitionStrategy> internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<PartitionStrategy>() {
            public PartitionStrategy findValueByNumber(int number) {
              return PartitionStrategy.forNumber(number);
            }
          };

    public final com.google.protobuf.Descriptors.EnumValueDescriptor
        getValueDescriptor() {
      if (this == UNRECOGNIZED) {
        throw new java.lang.IllegalStateException(
            "Can't get the descriptor of an unrecognized enum value.");
      }
      return getDescriptor().getValues().get(ordinal());
    }
    public final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptorForType() {
      return getDescriptor();
    }
    public static final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptor() {
      return com.google.genomics.v1.ImportReadGroupSetsRequest.getDescriptor().getEnumTypes().get(0);
    }

    private static final PartitionStrategy[] VALUES = values();

    public static PartitionStrategy valueOf(
        com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
      if (desc.getType() != getDescriptor()) {
        throw new java.lang.IllegalArgumentException(
          "EnumValueDescriptor is not for this type.");
      }
      if (desc.getIndex() == -1) {
        return UNRECOGNIZED;
      }
      return VALUES[desc.getIndex()];
    }

    private final int value;

    private PartitionStrategy(int value) {
      this.value = value;
    }

    // @@protoc_insertion_point(enum_scope:google.genomics.v1.ImportReadGroupSetsRequest.PartitionStrategy)
  }

  public static final int DATASET_ID_FIELD_NUMBER = 1;
  private volatile java.lang.Object datasetId_;
  /**
   * <pre>
   * Required. The ID of the dataset these read group sets will belong to. The
   * caller must have WRITE permissions to this dataset.
   * </pre>
   *
   * <code>string dataset_id = 1;</code>
   * @return The datasetId.
   */
  @java.lang.Override
  public java.lang.String getDatasetId() {
    java.lang.Object ref = datasetId_;
    if (ref instanceof java.lang.String) {
      return (java.lang.String) ref;
    } else {
      com.google.protobuf.ByteString bs = 
          (com.google.protobuf.ByteString) ref;
      java.lang.String s = bs.toStringUtf8();
      datasetId_ = s;
      return s;
    }
  }
  /**
   * <pre>
   * Required. The ID of the dataset these read group sets will belong to. The
   * caller must have WRITE permissions to this dataset.
   * </pre>
   *
   * <code>string dataset_id = 1;</code>
   * @return The bytes for datasetId.
   */
  @java.lang.Override
  public com.google.protobuf.ByteString
      getDatasetIdBytes() {
    java.lang.Object ref = datasetId_;
    if (ref instanceof java.lang.String) {
      com.google.protobuf.ByteString b = 
          com.google.protobuf.ByteString.copyFromUtf8(
              (java.lang.String) ref);
      datasetId_ = b;
      return b;
    } else {
      return (com.google.protobuf.ByteString) ref;
    }
  }

  public static final int REFERENCE_SET_ID_FIELD_NUMBER = 4;
  private volatile java.lang.Object referenceSetId_;
  /**
   * <pre>
   * The reference set to which the imported read group sets are aligned to, if
   * any. The reference names of this reference set must be a superset of those
   * found in the imported file headers. If no reference set id is provided, a
   * best effort is made to associate with a matching reference set.
   * </pre>
   *
   * <code>string reference_set_id = 4;</code>
   * @return The referenceSetId.
   */
  @java.lang.Override
  public java.lang.String getReferenceSetId() {
    java.lang.Object ref = referenceSetId_;
    if (ref instanceof java.lang.String) {
      return (java.lang.String) ref;
    } else {
      com.google.protobuf.ByteString bs = 
          (com.google.protobuf.ByteString) ref;
      java.lang.String s = bs.toStringUtf8();
      referenceSetId_ = s;
      return s;
    }
  }
  /**
   * <pre>
   * The reference set to which the imported read group sets are aligned to, if
   * any. The reference names of this reference set must be a superset of those
   * found in the imported file headers. If no reference set id is provided, a
   * best effort is made to associate with a matching reference set.
   * </pre>
   *
   * <code>string reference_set_id = 4;</code>
   * @return The bytes for referenceSetId.
   */
  @java.lang.Override
  public com.google.protobuf.ByteString
      getReferenceSetIdBytes() {
    java.lang.Object ref = referenceSetId_;
    if (ref instanceof java.lang.String) {
      com.google.protobuf.ByteString b = 
          com.google.protobuf.ByteString.copyFromUtf8(
              (java.lang.String) ref);
      referenceSetId_ = b;
      return b;
    } else {
      return (com.google.protobuf.ByteString) ref;
    }
  }

  public static final int SOURCE_URIS_FIELD_NUMBER = 2;
  private com.google.protobuf.LazyStringList sourceUris_;
  /**
   * <pre>
   * A list of URIs pointing at [BAM
   * files](https://samtools.github.io/hts-specs/SAMv1.pdf)
   * in Google Cloud Storage.
   * Those URIs can include wildcards (*), but do not add or remove
   * matching files before import has completed.
   * Note that Google Cloud Storage object listing is only eventually
   * consistent: files added may be not be immediately visible to
   * everyone. Thus, if using a wildcard it is preferable not to start
   * the import immediately after the files are created.
   * </pre>
   *
   * <code>repeated string source_uris = 2;</code>
   * @return A list containing the sourceUris.
   */
  public com.google.protobuf.ProtocolStringList
      getSourceUrisList() {
    return sourceUris_;
  }
  /**
   * <pre>
   * A list of URIs pointing at [BAM
   * files](https://samtools.github.io/hts-specs/SAMv1.pdf)
   * in Google Cloud Storage.
   * Those URIs can include wildcards (*), but do not add or remove
   * matching files before import has completed.
   * Note that Google Cloud Storage object listing is only eventually
   * consistent: files added may be not be immediately visible to
   * everyone. Thus, if using a wildcard it is preferable not to start
   * the import immediately after the files are created.
   * </pre>
   *
   * <code>repeated string source_uris = 2;</code>
   * @return The count of sourceUris.
   */
  public int getSourceUrisCount() {
    return sourceUris_.size();
  }
  /**
   * <pre>
   * A list of URIs pointing at [BAM
   * files](https://samtools.github.io/hts-specs/SAMv1.pdf)
   * in Google Cloud Storage.
   * Those URIs can include wildcards (*), but do not add or remove
   * matching files before import has completed.
   * Note that Google Cloud Storage object listing is only eventually
   * consistent: files added may be not be immediately visible to
   * everyone. Thus, if using a wildcard it is preferable not to start
   * the import immediately after the files are created.
   * </pre>
   *
   * <code>repeated string source_uris = 2;</code>
   * @param index The index of the element to return.
   * @return The sourceUris at the given index.
   */
  public java.lang.String getSourceUris(int index) {
    return sourceUris_.get(index);
  }
  /**
   * <pre>
   * A list of URIs pointing at [BAM
   * files](https://samtools.github.io/hts-specs/SAMv1.pdf)
   * in Google Cloud Storage.
   * Those URIs can include wildcards (*), but do not add or remove
   * matching files before import has completed.
   * Note that Google Cloud Storage object listing is only eventually
   * consistent: files added may be not be immediately visible to
   * everyone. Thus, if using a wildcard it is preferable not to start
   * the import immediately after the files are created.
   * </pre>
   *
   * <code>repeated string source_uris = 2;</code>
   * @param index The index of the value to return.
   * @return The bytes of the sourceUris at the given index.
   */
  public com.google.protobuf.ByteString
      getSourceUrisBytes(int index) {
    return sourceUris_.getByteString(index);
  }

  public static final int PARTITION_STRATEGY_FIELD_NUMBER = 5;
  private int partitionStrategy_;
  /**
   * <pre>
   * The partition strategy describes how read groups are partitioned into read
   * group sets.
   * </pre>
   *
   * <code>.google.genomics.v1.ImportReadGroupSetsRequest.PartitionStrategy partition_strategy = 5;</code>
   * @return The enum numeric value on the wire for partitionStrategy.
   */
  @java.lang.Override public int getPartitionStrategyValue() {
    return partitionStrategy_;
  }
  /**
   * <pre>
   * The partition strategy describes how read groups are partitioned into read
   * group sets.
   * </pre>
   *
   * <code>.google.genomics.v1.ImportReadGroupSetsRequest.PartitionStrategy partition_strategy = 5;</code>
   * @return The partitionStrategy.
   */
  @java.lang.Override public com.google.genomics.v1.ImportReadGroupSetsRequest.PartitionStrategy getPartitionStrategy() {
    @SuppressWarnings("deprecation")
    com.google.genomics.v1.ImportReadGroupSetsRequest.PartitionStrategy result = com.google.genomics.v1.ImportReadGroupSetsRequest.PartitionStrategy.valueOf(partitionStrategy_);
    return result == null ? com.google.genomics.v1.ImportReadGroupSetsRequest.PartitionStrategy.UNRECOGNIZED : result;
  }

  private byte memoizedIsInitialized = -1;
  @java.lang.Override
  public final boolean isInitialized() {
    byte isInitialized = memoizedIsInitialized;
    if (isInitialized == 1) return true;
    if (isInitialized == 0) return false;

    memoizedIsInitialized = 1;
    return true;
  }

  @java.lang.Override
  public void writeTo(com.google.protobuf.CodedOutputStream output)
                      throws java.io.IOException {
    if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(datasetId_)) {
      com.google.protobuf.GeneratedMessageV3.writeString(output, 1, datasetId_);
    }
    for (int i = 0; i < sourceUris_.size(); i++) {
      com.google.protobuf.GeneratedMessageV3.writeString(output, 2, sourceUris_.getRaw(i));
    }
    if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(referenceSetId_)) {
      com.google.protobuf.GeneratedMessageV3.writeString(output, 4, referenceSetId_);
    }
    if (partitionStrategy_ != com.google.genomics.v1.ImportReadGroupSetsRequest.PartitionStrategy.PARTITION_STRATEGY_UNSPECIFIED.getNumber()) {
      output.writeEnum(5, partitionStrategy_);
    }
    unknownFields.writeTo(output);
  }

  @java.lang.Override
  public int getSerializedSize() {
    int size = memoizedSize;
    if (size != -1) return size;

    size = 0;
    if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(datasetId_)) {
      size += com.google.protobuf.GeneratedMessageV3.computeStringSize(1, datasetId_);
    }
    {
      int dataSize = 0;
      for (int i = 0; i < sourceUris_.size(); i++) {
        dataSize += computeStringSizeNoTag(sourceUris_.getRaw(i));
      }
      size += dataSize;
      size += 1 * getSourceUrisList().size();
    }
    if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(referenceSetId_)) {
      size += com.google.protobuf.GeneratedMessageV3.computeStringSize(4, referenceSetId_);
    }
    if (partitionStrategy_ != com.google.genomics.v1.ImportReadGroupSetsRequest.PartitionStrategy.PARTITION_STRATEGY_UNSPECIFIED.getNumber()) {
      size += com.google.protobuf.CodedOutputStream
        .computeEnumSize(5, partitionStrategy_);
    }
    size += unknownFields.getSerializedSize();
    memoizedSize = size;
    return size;
  }

  @java.lang.Override
  public boolean equals(final java.lang.Object obj) {
    if (obj == this) {
     return true;
    }
    if (!(obj instanceof com.google.genomics.v1.ImportReadGroupSetsRequest)) {
      return super.equals(obj);
    }
    com.google.genomics.v1.ImportReadGroupSetsRequest other = (com.google.genomics.v1.ImportReadGroupSetsRequest) obj;

    if (!getDatasetId()
        .equals(other.getDatasetId())) return false;
    if (!getReferenceSetId()
        .equals(other.getReferenceSetId())) return false;
    if (!getSourceUrisList()
        .equals(other.getSourceUrisList())) return false;
    if (partitionStrategy_ != other.partitionStrategy_) return false;
    if (!unknownFields.equals(other.unknownFields)) return false;
    return true;
  }

  @java.lang.Override
  public int hashCode() {
    if (memoizedHashCode != 0) {
      return memoizedHashCode;
    }
    int hash = 41;
    hash = (19 * hash) + getDescriptor().hashCode();
    hash = (37 * hash) + DATASET_ID_FIELD_NUMBER;
    hash = (53 * hash) + getDatasetId().hashCode();
    hash = (37 * hash) + REFERENCE_SET_ID_FIELD_NUMBER;
    hash = (53 * hash) + getReferenceSetId().hashCode();
    if (getSourceUrisCount() > 0) {
      hash = (37 * hash) + SOURCE_URIS_FIELD_NUMBER;
      hash = (53 * hash) + getSourceUrisList().hashCode();
    }
    hash = (37 * hash) + PARTITION_STRATEGY_FIELD_NUMBER;
    hash = (53 * hash) + partitionStrategy_;
    hash = (29 * hash) + unknownFields.hashCode();
    memoizedHashCode = hash;
    return hash;
  }

  public static com.google.genomics.v1.ImportReadGroupSetsRequest parseFrom(
      java.nio.ByteBuffer data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static com.google.genomics.v1.ImportReadGroupSetsRequest parseFrom(
      java.nio.ByteBuffer data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static com.google.genomics.v1.ImportReadGroupSetsRequest parseFrom(
      com.google.protobuf.ByteString data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static com.google.genomics.v1.ImportReadGroupSetsRequest parseFrom(
      com.google.protobuf.ByteString data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static com.google.genomics.v1.ImportReadGroupSetsRequest parseFrom(byte[] data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static com.google.genomics.v1.ImportReadGroupSetsRequest parseFrom(
      byte[] data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static com.google.genomics.v1.ImportReadGroupSetsRequest parseFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input);
  }
  public static com.google.genomics.v1.ImportReadGroupSetsRequest parseFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input, extensionRegistry);
  }
  public static com.google.genomics.v1.ImportReadGroupSetsRequest parseDelimitedFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseDelimitedWithIOException(PARSER, input);
  }
  public static com.google.genomics.v1.ImportReadGroupSetsRequest parseDelimitedFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
  }
  public static com.google.genomics.v1.ImportReadGroupSetsRequest parseFrom(
      com.google.protobuf.CodedInputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input);
  }
  public static com.google.genomics.v1.ImportReadGroupSetsRequest parseFrom(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input, extensionRegistry);
  }

  @java.lang.Override
  public Builder newBuilderForType() { return newBuilder(); }
  public static Builder newBuilder() {
    return DEFAULT_INSTANCE.toBuilder();
  }
  public static Builder newBuilder(com.google.genomics.v1.ImportReadGroupSetsRequest prototype) {
    return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
  }
  @java.lang.Override
  public Builder toBuilder() {
    return this == DEFAULT_INSTANCE
        ? new Builder() : new Builder().mergeFrom(this);
  }

  @java.lang.Override
  protected Builder newBuilderForType(
      com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
    Builder builder = new Builder(parent);
    return builder;
  }
  /**
   * <pre>
   * The read group set import request.
   * </pre>
   *
   * Protobuf type {@code google.genomics.v1.ImportReadGroupSetsRequest}
   */
  public static final class Builder extends
      com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
      // @@protoc_insertion_point(builder_implements:google.genomics.v1.ImportReadGroupSetsRequest)
      com.google.genomics.v1.ImportReadGroupSetsRequestOrBuilder {
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.google.genomics.v1.ReadsProto.internal_static_google_genomics_v1_ImportReadGroupSetsRequest_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.google.genomics.v1.ReadsProto.internal_static_google_genomics_v1_ImportReadGroupSetsRequest_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.google.genomics.v1.ImportReadGroupSetsRequest.class, com.google.genomics.v1.ImportReadGroupSetsRequest.Builder.class);
    }

    // Construct using com.google.genomics.v1.ImportReadGroupSetsRequest.newBuilder()
    private Builder() {
      maybeForceBuilderInitialization();
    }

    private Builder(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      super(parent);
      maybeForceBuilderInitialization();
    }
    private void maybeForceBuilderInitialization() {
      if (com.google.protobuf.GeneratedMessageV3
              .alwaysUseFieldBuilders) {
      }
    }
    @java.lang.Override
    public Builder clear() {
      super.clear();
      datasetId_ = "";

      referenceSetId_ = "";

      sourceUris_ = com.google.protobuf.LazyStringArrayList.EMPTY;
      bitField0_ = (bitField0_ & ~0x00000001);
      partitionStrategy_ = 0;

      return this;
    }

    @java.lang.Override
    public com.google.protobuf.Descriptors.Descriptor
        getDescriptorForType() {
      return com.google.genomics.v1.ReadsProto.internal_static_google_genomics_v1_ImportReadGroupSetsRequest_descriptor;
    }

    @java.lang.Override
    public com.google.genomics.v1.ImportReadGroupSetsRequest getDefaultInstanceForType() {
      return com.google.genomics.v1.ImportReadGroupSetsRequest.getDefaultInstance();
    }

    @java.lang.Override
    public com.google.genomics.v1.ImportReadGroupSetsRequest build() {
      com.google.genomics.v1.ImportReadGroupSetsRequest result = buildPartial();
      if (!result.isInitialized()) {
        throw newUninitializedMessageException(result);
      }
      return result;
    }

    @java.lang.Override
    public com.google.genomics.v1.ImportReadGroupSetsRequest buildPartial() {
      com.google.genomics.v1.ImportReadGroupSetsRequest result = new com.google.genomics.v1.ImportReadGroupSetsRequest(this);
      int from_bitField0_ = bitField0_;
      result.datasetId_ = datasetId_;
      result.referenceSetId_ = referenceSetId_;
      if (((bitField0_ & 0x00000001) != 0)) {
        sourceUris_ = sourceUris_.getUnmodifiableView();
        bitField0_ = (bitField0_ & ~0x00000001);
      }
      result.sourceUris_ = sourceUris_;
      result.partitionStrategy_ = partitionStrategy_;
      onBuilt();
      return result;
    }

    @java.lang.Override
    public Builder clone() {
      return super.clone();
    }
    @java.lang.Override
    public Builder setField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        java.lang.Object value) {
      return super.setField(field, value);
    }
    @java.lang.Override
    public Builder clearField(
        com.google.protobuf.Descriptors.FieldDescriptor field) {
      return super.clearField(field);
    }
    @java.lang.Override
    public Builder clearOneof(
        com.google.protobuf.Descriptors.OneofDescriptor oneof) {
      return super.clearOneof(oneof);
    }
    @java.lang.Override
    public Builder setRepeatedField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        int index, java.lang.Object value) {
      return super.setRepeatedField(field, index, value);
    }
    @java.lang.Override
    public Builder addRepeatedField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        java.lang.Object value) {
      return super.addRepeatedField(field, value);
    }
    @java.lang.Override
    public Builder mergeFrom(com.google.protobuf.Message other) {
      if (other instanceof com.google.genomics.v1.ImportReadGroupSetsRequest) {
        return mergeFrom((com.google.genomics.v1.ImportReadGroupSetsRequest)other);
      } else {
        super.mergeFrom(other);
        return this;
      }
    }

    public Builder mergeFrom(com.google.genomics.v1.ImportReadGroupSetsRequest other) {
      if (other == com.google.genomics.v1.ImportReadGroupSetsRequest.getDefaultInstance()) return this;
      if (!other.getDatasetId().isEmpty()) {
        datasetId_ = other.datasetId_;
        onChanged();
      }
      if (!other.getReferenceSetId().isEmpty()) {
        referenceSetId_ = other.referenceSetId_;
        onChanged();
      }
      if (!other.sourceUris_.isEmpty()) {
        if (sourceUris_.isEmpty()) {
          sourceUris_ = other.sourceUris_;
          bitField0_ = (bitField0_ & ~0x00000001);
        } else {
          ensureSourceUrisIsMutable();
          sourceUris_.addAll(other.sourceUris_);
        }
        onChanged();
      }
      if (other.partitionStrategy_ != 0) {
        setPartitionStrategyValue(other.getPartitionStrategyValue());
      }
      this.mergeUnknownFields(other.unknownFields);
      onChanged();
      return this;
    }

    @java.lang.Override
    public final boolean isInitialized() {
      return true;
    }

    @java.lang.Override
    public Builder mergeFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      com.google.genomics.v1.ImportReadGroupSetsRequest parsedMessage = null;
      try {
        parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        parsedMessage = (com.google.genomics.v1.ImportReadGroupSetsRequest) e.getUnfinishedMessage();
        throw e.unwrapIOException();
      } finally {
        if (parsedMessage != null) {
          mergeFrom(parsedMessage);
        }
      }
      return this;
    }
    private int bitField0_;

    private java.lang.Object datasetId_ = "";
    /**
     * <pre>
     * Required. The ID of the dataset these read group sets will belong to. The
     * caller must have WRITE permissions to this dataset.
     * </pre>
     *
     * <code>string dataset_id = 1;</code>
     * @return The datasetId.
     */
    public java.lang.String getDatasetId() {
      java.lang.Object ref = datasetId_;
      if (!(ref instanceof java.lang.String)) {
        com.google.protobuf.ByteString bs =
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        datasetId_ = s;
        return s;
      } else {
        return (java.lang.String) ref;
      }
    }
    /**
     * <pre>
     * Required. The ID of the dataset these read group sets will belong to. The
     * caller must have WRITE permissions to this dataset.
     * </pre>
     *
     * <code>string dataset_id = 1;</code>
     * @return The bytes for datasetId.
     */
    public com.google.protobuf.ByteString
        getDatasetIdBytes() {
      java.lang.Object ref = datasetId_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        datasetId_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }
    /**
     * <pre>
     * Required. The ID of the dataset these read group sets will belong to. The
     * caller must have WRITE permissions to this dataset.
     * </pre>
     *
     * <code>string dataset_id = 1;</code>
     * @param value The datasetId to set.
     * @return This builder for chaining.
     */
    public Builder setDatasetId(
        java.lang.String value) {
      if (value == null) {
    throw new NullPointerException();
  }
  
      datasetId_ = value;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * Required. The ID of the dataset these read group sets will belong to. The
     * caller must have WRITE permissions to this dataset.
     * </pre>
     *
     * <code>string dataset_id = 1;</code>
     * @return This builder for chaining.
     */
    public Builder clearDatasetId() {
      
      datasetId_ = getDefaultInstance().getDatasetId();
      onChanged();
      return this;
    }
    /**
     * <pre>
     * Required. The ID of the dataset these read group sets will belong to. The
     * caller must have WRITE permissions to this dataset.
     * </pre>
     *
     * <code>string dataset_id = 1;</code>
     * @param value The bytes for datasetId to set.
     * @return This builder for chaining.
     */
    public Builder setDatasetIdBytes(
        com.google.protobuf.ByteString value) {
      if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
      
      datasetId_ = value;
      onChanged();
      return this;
    }

    private java.lang.Object referenceSetId_ = "";
    /**
     * <pre>
     * The reference set to which the imported read group sets are aligned to, if
     * any. The reference names of this reference set must be a superset of those
     * found in the imported file headers. If no reference set id is provided, a
     * best effort is made to associate with a matching reference set.
     * </pre>
     *
     * <code>string reference_set_id = 4;</code>
     * @return The referenceSetId.
     */
    public java.lang.String getReferenceSetId() {
      java.lang.Object ref = referenceSetId_;
      if (!(ref instanceof java.lang.String)) {
        com.google.protobuf.ByteString bs =
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        referenceSetId_ = s;
        return s;
      } else {
        return (java.lang.String) ref;
      }
    }
    /**
     * <pre>
     * The reference set to which the imported read group sets are aligned to, if
     * any. The reference names of this reference set must be a superset of those
     * found in the imported file headers. If no reference set id is provided, a
     * best effort is made to associate with a matching reference set.
     * </pre>
     *
     * <code>string reference_set_id = 4;</code>
     * @return The bytes for referenceSetId.
     */
    public com.google.protobuf.ByteString
        getReferenceSetIdBytes() {
      java.lang.Object ref = referenceSetId_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        referenceSetId_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }
    /**
     * <pre>
     * The reference set to which the imported read group sets are aligned to, if
     * any. The reference names of this reference set must be a superset of those
     * found in the imported file headers. If no reference set id is provided, a
     * best effort is made to associate with a matching reference set.
     * </pre>
     *
     * <code>string reference_set_id = 4;</code>
     * @param value The referenceSetId to set.
     * @return This builder for chaining.
     */
    public Builder setReferenceSetId(
        java.lang.String value) {
      if (value == null) {
    throw new NullPointerException();
  }
  
      referenceSetId_ = value;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * The reference set to which the imported read group sets are aligned to, if
     * any. The reference names of this reference set must be a superset of those
     * found in the imported file headers. If no reference set id is provided, a
     * best effort is made to associate with a matching reference set.
     * </pre>
     *
     * <code>string reference_set_id = 4;</code>
     * @return This builder for chaining.
     */
    public Builder clearReferenceSetId() {
      
      referenceSetId_ = getDefaultInstance().getReferenceSetId();
      onChanged();
      return this;
    }
    /**
     * <pre>
     * The reference set to which the imported read group sets are aligned to, if
     * any. The reference names of this reference set must be a superset of those
     * found in the imported file headers. If no reference set id is provided, a
     * best effort is made to associate with a matching reference set.
     * </pre>
     *
     * <code>string reference_set_id = 4;</code>
     * @param value The bytes for referenceSetId to set.
     * @return This builder for chaining.
     */
    public Builder setReferenceSetIdBytes(
        com.google.protobuf.ByteString value) {
      if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
      
      referenceSetId_ = value;
      onChanged();
      return this;
    }

    private com.google.protobuf.LazyStringList sourceUris_ = com.google.protobuf.LazyStringArrayList.EMPTY;
    private void ensureSourceUrisIsMutable() {
      if (!((bitField0_ & 0x00000001) != 0)) {
        sourceUris_ = new com.google.protobuf.LazyStringArrayList(sourceUris_);
        bitField0_ |= 0x00000001;
       }
    }
    /**
     * <pre>
     * A list of URIs pointing at [BAM
     * files](https://samtools.github.io/hts-specs/SAMv1.pdf)
     * in Google Cloud Storage.
     * Those URIs can include wildcards (*), but do not add or remove
     * matching files before import has completed.
     * Note that Google Cloud Storage object listing is only eventually
     * consistent: files added may be not be immediately visible to
     * everyone. Thus, if using a wildcard it is preferable not to start
     * the import immediately after the files are created.
     * </pre>
     *
     * <code>repeated string source_uris = 2;</code>
     * @return A list containing the sourceUris.
     */
    public com.google.protobuf.ProtocolStringList
        getSourceUrisList() {
      return sourceUris_.getUnmodifiableView();
    }
    /**
     * <pre>
     * A list of URIs pointing at [BAM
     * files](https://samtools.github.io/hts-specs/SAMv1.pdf)
     * in Google Cloud Storage.
     * Those URIs can include wildcards (*), but do not add or remove
     * matching files before import has completed.
     * Note that Google Cloud Storage object listing is only eventually
     * consistent: files added may be not be immediately visible to
     * everyone. Thus, if using a wildcard it is preferable not to start
     * the import immediately after the files are created.
     * </pre>
     *
     * <code>repeated string source_uris = 2;</code>
     * @return The count of sourceUris.
     */
    public int getSourceUrisCount() {
      return sourceUris_.size();
    }
    /**
     * <pre>
     * A list of URIs pointing at [BAM
     * files](https://samtools.github.io/hts-specs/SAMv1.pdf)
     * in Google Cloud Storage.
     * Those URIs can include wildcards (*), but do not add or remove
     * matching files before import has completed.
     * Note that Google Cloud Storage object listing is only eventually
     * consistent: files added may be not be immediately visible to
     * everyone. Thus, if using a wildcard it is preferable not to start
     * the import immediately after the files are created.
     * </pre>
     *
     * <code>repeated string source_uris = 2;</code>
     * @param index The index of the element to return.
     * @return The sourceUris at the given index.
     */
    public java.lang.String getSourceUris(int index) {
      return sourceUris_.get(index);
    }
    /**
     * <pre>
     * A list of URIs pointing at [BAM
     * files](https://samtools.github.io/hts-specs/SAMv1.pdf)
     * in Google Cloud Storage.
     * Those URIs can include wildcards (*), but do not add or remove
     * matching files before import has completed.
     * Note that Google Cloud Storage object listing is only eventually
     * consistent: files added may be not be immediately visible to
     * everyone. Thus, if using a wildcard it is preferable not to start
     * the import immediately after the files are created.
     * </pre>
     *
     * <code>repeated string source_uris = 2;</code>
     * @param index The index of the value to return.
     * @return The bytes of the sourceUris at the given index.
     */
    public com.google.protobuf.ByteString
        getSourceUrisBytes(int index) {
      return sourceUris_.getByteString(index);
    }
    /**
     * <pre>
     * A list of URIs pointing at [BAM
     * files](https://samtools.github.io/hts-specs/SAMv1.pdf)
     * in Google Cloud Storage.
     * Those URIs can include wildcards (*), but do not add or remove
     * matching files before import has completed.
     * Note that Google Cloud Storage object listing is only eventually
     * consistent: files added may be not be immediately visible to
     * everyone. Thus, if using a wildcard it is preferable not to start
     * the import immediately after the files are created.
     * </pre>
     *
     * <code>repeated string source_uris = 2;</code>
     * @param index The index to set the value at.
     * @param value The sourceUris to set.
     * @return This builder for chaining.
     */
    public Builder setSourceUris(
        int index, java.lang.String value) {
      if (value == null) {
    throw new NullPointerException();
  }
  ensureSourceUrisIsMutable();
      sourceUris_.set(index, value);
      onChanged();
      return this;
    }
    /**
     * <pre>
     * A list of URIs pointing at [BAM
     * files](https://samtools.github.io/hts-specs/SAMv1.pdf)
     * in Google Cloud Storage.
     * Those URIs can include wildcards (*), but do not add or remove
     * matching files before import has completed.
     * Note that Google Cloud Storage object listing is only eventually
     * consistent: files added may be not be immediately visible to
     * everyone. Thus, if using a wildcard it is preferable not to start
     * the import immediately after the files are created.
     * </pre>
     *
     * <code>repeated string source_uris = 2;</code>
     * @param value The sourceUris to add.
     * @return This builder for chaining.
     */
    public Builder addSourceUris(
        java.lang.String value) {
      if (value == null) {
    throw new NullPointerException();
  }
  ensureSourceUrisIsMutable();
      sourceUris_.add(value);
      onChanged();
      return this;
    }
    /**
     * <pre>
     * A list of URIs pointing at [BAM
     * files](https://samtools.github.io/hts-specs/SAMv1.pdf)
     * in Google Cloud Storage.
     * Those URIs can include wildcards (*), but do not add or remove
     * matching files before import has completed.
     * Note that Google Cloud Storage object listing is only eventually
     * consistent: files added may be not be immediately visible to
     * everyone. Thus, if using a wildcard it is preferable not to start
     * the import immediately after the files are created.
     * </pre>
     *
     * <code>repeated string source_uris = 2;</code>
     * @param values The sourceUris to add.
     * @return This builder for chaining.
     */
    public Builder addAllSourceUris(
        java.lang.Iterable<java.lang.String> values) {
      ensureSourceUrisIsMutable();
      com.google.protobuf.AbstractMessageLite.Builder.addAll(
          values, sourceUris_);
      onChanged();
      return this;
    }
    /**
     * <pre>
     * A list of URIs pointing at [BAM
     * files](https://samtools.github.io/hts-specs/SAMv1.pdf)
     * in Google Cloud Storage.
     * Those URIs can include wildcards (*), but do not add or remove
     * matching files before import has completed.
     * Note that Google Cloud Storage object listing is only eventually
     * consistent: files added may be not be immediately visible to
     * everyone. Thus, if using a wildcard it is preferable not to start
     * the import immediately after the files are created.
     * </pre>
     *
     * <code>repeated string source_uris = 2;</code>
     * @return This builder for chaining.
     */
    public Builder clearSourceUris() {
      sourceUris_ = com.google.protobuf.LazyStringArrayList.EMPTY;
      bitField0_ = (bitField0_ & ~0x00000001);
      onChanged();
      return this;
    }
    /**
     * <pre>
     * A list of URIs pointing at [BAM
     * files](https://samtools.github.io/hts-specs/SAMv1.pdf)
     * in Google Cloud Storage.
     * Those URIs can include wildcards (*), but do not add or remove
     * matching files before import has completed.
     * Note that Google Cloud Storage object listing is only eventually
     * consistent: files added may be not be immediately visible to
     * everyone. Thus, if using a wildcard it is preferable not to start
     * the import immediately after the files are created.
     * </pre>
     *
     * <code>repeated string source_uris = 2;</code>
     * @param value The bytes of the sourceUris to add.
     * @return This builder for chaining.
     */
    public Builder addSourceUrisBytes(
        com.google.protobuf.ByteString value) {
      if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
      ensureSourceUrisIsMutable();
      sourceUris_.add(value);
      onChanged();
      return this;
    }

    private int partitionStrategy_ = 0;
    /**
     * <pre>
     * The partition strategy describes how read groups are partitioned into read
     * group sets.
     * </pre>
     *
     * <code>.google.genomics.v1.ImportReadGroupSetsRequest.PartitionStrategy partition_strategy = 5;</code>
     * @return The enum numeric value on the wire for partitionStrategy.
     */
    @java.lang.Override public int getPartitionStrategyValue() {
      return partitionStrategy_;
    }
    /**
     * <pre>
     * The partition strategy describes how read groups are partitioned into read
     * group sets.
     * </pre>
     *
     * <code>.google.genomics.v1.ImportReadGroupSetsRequest.PartitionStrategy partition_strategy = 5;</code>
     * @param value The enum numeric value on the wire for partitionStrategy to set.
     * @return This builder for chaining.
     */
    public Builder setPartitionStrategyValue(int value) {
      
      partitionStrategy_ = value;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * The partition strategy describes how read groups are partitioned into read
     * group sets.
     * </pre>
     *
     * <code>.google.genomics.v1.ImportReadGroupSetsRequest.PartitionStrategy partition_strategy = 5;</code>
     * @return The partitionStrategy.
     */
    @java.lang.Override
    public com.google.genomics.v1.ImportReadGroupSetsRequest.PartitionStrategy getPartitionStrategy() {
      @SuppressWarnings("deprecation")
      com.google.genomics.v1.ImportReadGroupSetsRequest.PartitionStrategy result = com.google.genomics.v1.ImportReadGroupSetsRequest.PartitionStrategy.valueOf(partitionStrategy_);
      return result == null ? com.google.genomics.v1.ImportReadGroupSetsRequest.PartitionStrategy.UNRECOGNIZED : result;
    }
    /**
     * <pre>
     * The partition strategy describes how read groups are partitioned into read
     * group sets.
     * </pre>
     *
     * <code>.google.genomics.v1.ImportReadGroupSetsRequest.PartitionStrategy partition_strategy = 5;</code>
     * @param value The partitionStrategy to set.
     * @return This builder for chaining.
     */
    public Builder setPartitionStrategy(com.google.genomics.v1.ImportReadGroupSetsRequest.PartitionStrategy value) {
      if (value == null) {
        throw new NullPointerException();
      }
      
      partitionStrategy_ = value.getNumber();
      onChanged();
      return this;
    }
    /**
     * <pre>
     * The partition strategy describes how read groups are partitioned into read
     * group sets.
     * </pre>
     *
     * <code>.google.genomics.v1.ImportReadGroupSetsRequest.PartitionStrategy partition_strategy = 5;</code>
     * @return This builder for chaining.
     */
    public Builder clearPartitionStrategy() {
      
      partitionStrategy_ = 0;
      onChanged();
      return this;
    }
    @java.lang.Override
    public final Builder setUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return super.setUnknownFields(unknownFields);
    }

    @java.lang.Override
    public final Builder mergeUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return super.mergeUnknownFields(unknownFields);
    }


    // @@protoc_insertion_point(builder_scope:google.genomics.v1.ImportReadGroupSetsRequest)
  }

  // @@protoc_insertion_point(class_scope:google.genomics.v1.ImportReadGroupSetsRequest)
  private static final com.google.genomics.v1.ImportReadGroupSetsRequest DEFAULT_INSTANCE;
  static {
    DEFAULT_INSTANCE = new com.google.genomics.v1.ImportReadGroupSetsRequest();
  }

  public static com.google.genomics.v1.ImportReadGroupSetsRequest getDefaultInstance() {
    return DEFAULT_INSTANCE;
  }

  private static final com.google.protobuf.Parser<ImportReadGroupSetsRequest>
      PARSER = new com.google.protobuf.AbstractParser<ImportReadGroupSetsRequest>() {
    @java.lang.Override
    public ImportReadGroupSetsRequest parsePartialFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return new ImportReadGroupSetsRequest(input, extensionRegistry);
    }
  };

  public static com.google.protobuf.Parser<ImportReadGroupSetsRequest> parser() {
    return PARSER;
  }

  @java.lang.Override
  public com.google.protobuf.Parser<ImportReadGroupSetsRequest> getParserForType() {
    return PARSER;
  }

  @java.lang.Override
  public com.google.genomics.v1.ImportReadGroupSetsRequest getDefaultInstanceForType() {
    return DEFAULT_INSTANCE;
  }

}

