// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: google/genomics/v1/variants.proto

package com.google.genomics.v1;

/**
 * <pre>
 * The variant data import request.
 * </pre>
 *
 * Protobuf type {@code google.genomics.v1.ImportVariantsRequest}
 */
public final class ImportVariantsRequest extends
    com.google.protobuf.GeneratedMessageV3 implements
    // @@protoc_insertion_point(message_implements:google.genomics.v1.ImportVariantsRequest)
    ImportVariantsRequestOrBuilder {
private static final long serialVersionUID = 0L;
  // Use ImportVariantsRequest.newBuilder() to construct.
  private ImportVariantsRequest(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
    super(builder);
  }
  private ImportVariantsRequest() {
    variantSetId_ = "";
    sourceUris_ = com.google.protobuf.LazyStringArrayList.EMPTY;
    format_ = 0;
  }

  @java.lang.Override
  @SuppressWarnings({"unused"})
  protected java.lang.Object newInstance(
      UnusedPrivateParameter unused) {
    return new ImportVariantsRequest();
  }

  @java.lang.Override
  public final com.google.protobuf.UnknownFieldSet
  getUnknownFields() {
    return this.unknownFields;
  }
  public static final com.google.protobuf.Descriptors.Descriptor
      getDescriptor() {
    return com.google.genomics.v1.VariantsProto.internal_static_google_genomics_v1_ImportVariantsRequest_descriptor;
  }

  @SuppressWarnings({"rawtypes"})
  @java.lang.Override
  protected com.google.protobuf.MapField internalGetMapField(
      int number) {
    switch (number) {
      case 6:
        return internalGetInfoMergeConfig();
      default:
        throw new RuntimeException(
            "Invalid map field number: " + number);
    }
  }
  @java.lang.Override
  protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internalGetFieldAccessorTable() {
    return com.google.genomics.v1.VariantsProto.internal_static_google_genomics_v1_ImportVariantsRequest_fieldAccessorTable
        .ensureFieldAccessorsInitialized(
            com.google.genomics.v1.ImportVariantsRequest.class, com.google.genomics.v1.ImportVariantsRequest.Builder.class);
  }

  /**
   * Protobuf enum {@code google.genomics.v1.ImportVariantsRequest.Format}
   */
  public enum Format
      implements com.google.protobuf.ProtocolMessageEnum {
    /**
     * <code>FORMAT_UNSPECIFIED = 0;</code>
     */
    FORMAT_UNSPECIFIED(0),
    /**
     * <pre>
     * VCF (Variant Call Format). The VCF files may be gzip compressed. gVCF is
     * also supported.
     * </pre>
     *
     * <code>FORMAT_VCF = 1;</code>
     */
    FORMAT_VCF(1),
    /**
     * <pre>
     * Complete Genomics masterVarBeta format. The masterVarBeta files may
     * be bzip2 compressed.
     * </pre>
     *
     * <code>FORMAT_COMPLETE_GENOMICS = 2;</code>
     */
    FORMAT_COMPLETE_GENOMICS(2),
    UNRECOGNIZED(-1),
    ;

    /**
     * <code>FORMAT_UNSPECIFIED = 0;</code>
     */
    public static final int FORMAT_UNSPECIFIED_VALUE = 0;
    /**
     * <pre>
     * VCF (Variant Call Format). The VCF files may be gzip compressed. gVCF is
     * also supported.
     * </pre>
     *
     * <code>FORMAT_VCF = 1;</code>
     */
    public static final int FORMAT_VCF_VALUE = 1;
    /**
     * <pre>
     * Complete Genomics masterVarBeta format. The masterVarBeta files may
     * be bzip2 compressed.
     * </pre>
     *
     * <code>FORMAT_COMPLETE_GENOMICS = 2;</code>
     */
    public static final int FORMAT_COMPLETE_GENOMICS_VALUE = 2;


    public final int getNumber() {
      if (this == UNRECOGNIZED) {
        throw new java.lang.IllegalArgumentException(
            "Can't get the number of an unknown enum value.");
      }
      return value;
    }

    /**
     * @param value The numeric wire value of the corresponding enum entry.
     * @return The enum associated with the given numeric wire value.
     * @deprecated Use {@link #forNumber(int)} instead.
     */
    @java.lang.Deprecated
    public static Format valueOf(int value) {
      return forNumber(value);
    }

    /**
     * @param value The numeric wire value of the corresponding enum entry.
     * @return The enum associated with the given numeric wire value.
     */
    public static Format forNumber(int value) {
      switch (value) {
        case 0: return FORMAT_UNSPECIFIED;
        case 1: return FORMAT_VCF;
        case 2: return FORMAT_COMPLETE_GENOMICS;
        default: return null;
      }
    }

    public static com.google.protobuf.Internal.EnumLiteMap<Format>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static final com.google.protobuf.Internal.EnumLiteMap<
        Format> internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<Format>() {
            public Format findValueByNumber(int number) {
              return Format.forNumber(number);
            }
          };

    public final com.google.protobuf.Descriptors.EnumValueDescriptor
        getValueDescriptor() {
      if (this == UNRECOGNIZED) {
        throw new java.lang.IllegalStateException(
            "Can't get the descriptor of an unrecognized enum value.");
      }
      return getDescriptor().getValues().get(ordinal());
    }
    public final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptorForType() {
      return getDescriptor();
    }
    public static final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptor() {
      return com.google.genomics.v1.ImportVariantsRequest.getDescriptor().getEnumTypes().get(0);
    }

    private static final Format[] VALUES = values();

    public static Format valueOf(
        com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
      if (desc.getType() != getDescriptor()) {
        throw new java.lang.IllegalArgumentException(
          "EnumValueDescriptor is not for this type.");
      }
      if (desc.getIndex() == -1) {
        return UNRECOGNIZED;
      }
      return VALUES[desc.getIndex()];
    }

    private final int value;

    private Format(int value) {
      this.value = value;
    }

    // @@protoc_insertion_point(enum_scope:google.genomics.v1.ImportVariantsRequest.Format)
  }

  public static final int VARIANT_SET_ID_FIELD_NUMBER = 1;
  @SuppressWarnings("serial")
  private volatile java.lang.Object variantSetId_ = "";
  /**
   * <pre>
   * Required. The variant set to which variant data should be imported.
   * </pre>
   *
   * <code>string variant_set_id = 1;</code>
   * @return The variantSetId.
   */
  @java.lang.Override
  public java.lang.String getVariantSetId() {
    java.lang.Object ref = variantSetId_;
    if (ref instanceof java.lang.String) {
      return (java.lang.String) ref;
    } else {
      com.google.protobuf.ByteString bs = 
          (com.google.protobuf.ByteString) ref;
      java.lang.String s = bs.toStringUtf8();
      variantSetId_ = s;
      return s;
    }
  }
  /**
   * <pre>
   * Required. The variant set to which variant data should be imported.
   * </pre>
   *
   * <code>string variant_set_id = 1;</code>
   * @return The bytes for variantSetId.
   */
  @java.lang.Override
  public com.google.protobuf.ByteString
      getVariantSetIdBytes() {
    java.lang.Object ref = variantSetId_;
    if (ref instanceof java.lang.String) {
      com.google.protobuf.ByteString b = 
          com.google.protobuf.ByteString.copyFromUtf8(
              (java.lang.String) ref);
      variantSetId_ = b;
      return b;
    } else {
      return (com.google.protobuf.ByteString) ref;
    }
  }

  public static final int SOURCE_URIS_FIELD_NUMBER = 2;
  @SuppressWarnings("serial")
  private com.google.protobuf.LazyStringList sourceUris_;
  /**
   * <pre>
   * A list of URIs referencing variant files in Google Cloud Storage. URIs can
   * include wildcards [as described
   * here](https://cloud.google.com/storage/docs/gsutil/addlhelp/WildcardNames).
   * Note that recursive wildcards ('**') are not supported.
   * </pre>
   *
   * <code>repeated string source_uris = 2;</code>
   * @return A list containing the sourceUris.
   */
  public com.google.protobuf.ProtocolStringList
      getSourceUrisList() {
    return sourceUris_;
  }
  /**
   * <pre>
   * A list of URIs referencing variant files in Google Cloud Storage. URIs can
   * include wildcards [as described
   * here](https://cloud.google.com/storage/docs/gsutil/addlhelp/WildcardNames).
   * Note that recursive wildcards ('**') are not supported.
   * </pre>
   *
   * <code>repeated string source_uris = 2;</code>
   * @return The count of sourceUris.
   */
  public int getSourceUrisCount() {
    return sourceUris_.size();
  }
  /**
   * <pre>
   * A list of URIs referencing variant files in Google Cloud Storage. URIs can
   * include wildcards [as described
   * here](https://cloud.google.com/storage/docs/gsutil/addlhelp/WildcardNames).
   * Note that recursive wildcards ('**') are not supported.
   * </pre>
   *
   * <code>repeated string source_uris = 2;</code>
   * @param index The index of the element to return.
   * @return The sourceUris at the given index.
   */
  public java.lang.String getSourceUris(int index) {
    return sourceUris_.get(index);
  }
  /**
   * <pre>
   * A list of URIs referencing variant files in Google Cloud Storage. URIs can
   * include wildcards [as described
   * here](https://cloud.google.com/storage/docs/gsutil/addlhelp/WildcardNames).
   * Note that recursive wildcards ('**') are not supported.
   * </pre>
   *
   * <code>repeated string source_uris = 2;</code>
   * @param index The index of the value to return.
   * @return The bytes of the sourceUris at the given index.
   */
  public com.google.protobuf.ByteString
      getSourceUrisBytes(int index) {
    return sourceUris_.getByteString(index);
  }

  public static final int FORMAT_FIELD_NUMBER = 3;
  private int format_ = 0;
  /**
   * <pre>
   * The format of the variant data being imported. If unspecified, defaults to
   * to `VCF`.
   * </pre>
   *
   * <code>.google.genomics.v1.ImportVariantsRequest.Format format = 3;</code>
   * @return The enum numeric value on the wire for format.
   */
  @java.lang.Override public int getFormatValue() {
    return format_;
  }
  /**
   * <pre>
   * The format of the variant data being imported. If unspecified, defaults to
   * to `VCF`.
   * </pre>
   *
   * <code>.google.genomics.v1.ImportVariantsRequest.Format format = 3;</code>
   * @return The format.
   */
  @java.lang.Override public com.google.genomics.v1.ImportVariantsRequest.Format getFormat() {
    com.google.genomics.v1.ImportVariantsRequest.Format result = com.google.genomics.v1.ImportVariantsRequest.Format.forNumber(format_);
    return result == null ? com.google.genomics.v1.ImportVariantsRequest.Format.UNRECOGNIZED : result;
  }

  public static final int NORMALIZE_REFERENCE_NAMES_FIELD_NUMBER = 5;
  private boolean normalizeReferenceNames_ = false;
  /**
   * <pre>
   * Convert reference names to the canonical representation.
   * hg19 haploytypes (those reference names containing "_hap")
   * are not modified in any way.
   * All other reference names are modified according to the following rules:
   * The reference name is capitalized.
   * The "chr" prefix is dropped for all autosomes and sex chromsomes.
   * For example "chr17" becomes "17" and "chrX" becomes "X".
   * All mitochondrial chromosomes ("chrM", "chrMT", etc) become "MT".
   * </pre>
   *
   * <code>bool normalize_reference_names = 5;</code>
   * @return The normalizeReferenceNames.
   */
  @java.lang.Override
  public boolean getNormalizeReferenceNames() {
    return normalizeReferenceNames_;
  }

  public static final int INFO_MERGE_CONFIG_FIELD_NUMBER = 6;
  private static final class InfoMergeConfigDefaultEntryHolder {
    static final com.google.protobuf.MapEntry<
        java.lang.String, java.lang.Integer> defaultEntry =
            com.google.protobuf.MapEntry
            .<java.lang.String, java.lang.Integer>newDefaultInstance(
                com.google.genomics.v1.VariantsProto.internal_static_google_genomics_v1_ImportVariantsRequest_InfoMergeConfigEntry_descriptor, 
                com.google.protobuf.WireFormat.FieldType.STRING,
                "",
                com.google.protobuf.WireFormat.FieldType.ENUM,
                com.google.genomics.v1.InfoMergeOperation.INFO_MERGE_OPERATION_UNSPECIFIED.getNumber());
  }
  @SuppressWarnings("serial")
  private com.google.protobuf.MapField<
      java.lang.String, java.lang.Integer> infoMergeConfig_;
  private com.google.protobuf.MapField<java.lang.String, java.lang.Integer>
  internalGetInfoMergeConfig() {
    if (infoMergeConfig_ == null) {
      return com.google.protobuf.MapField.emptyMapField(
          InfoMergeConfigDefaultEntryHolder.defaultEntry);
    }
    return infoMergeConfig_;
  }
  private static final
  com.google.protobuf.Internal.MapAdapter.Converter<
      java.lang.Integer, com.google.genomics.v1.InfoMergeOperation> infoMergeConfigValueConverter =
          com.google.protobuf.Internal.MapAdapter.newEnumConverter(
              com.google.genomics.v1.InfoMergeOperation.internalGetValueMap(),
              com.google.genomics.v1.InfoMergeOperation.UNRECOGNIZED);
  private static final java.util.Map<java.lang.String, com.google.genomics.v1.InfoMergeOperation>
  internalGetAdaptedInfoMergeConfigMap(
      java.util.Map<java.lang.String, java.lang.Integer> map) {
    return new com.google.protobuf.Internal.MapAdapter<
        java.lang.String, com.google.genomics.v1.InfoMergeOperation, java.lang.Integer>(
            map, infoMergeConfigValueConverter);
  }
  public int getInfoMergeConfigCount() {
    return internalGetInfoMergeConfig().getMap().size();
  }
  /**
   * <pre>
   * A mapping between info field keys and the InfoMergeOperations to
   * be performed on them. This is plumbed down to the MergeVariantRequests
   * generated by the resulting import job.
   * </pre>
   *
   * <code>map&lt;string, .google.genomics.v1.InfoMergeOperation&gt; info_merge_config = 6;</code>
   */
  @java.lang.Override
  public boolean containsInfoMergeConfig(
      java.lang.String key) {
    if (key == null) { throw new NullPointerException("map key"); }
    return internalGetInfoMergeConfig().getMap().containsKey(key);
  }
  /**
   * Use {@link #getInfoMergeConfigMap()} instead.
   */
  @java.lang.Override
  @java.lang.Deprecated
  public java.util.Map<java.lang.String, com.google.genomics.v1.InfoMergeOperation>
  getInfoMergeConfig() {
    return getInfoMergeConfigMap();
  }
  /**
   * <pre>
   * A mapping between info field keys and the InfoMergeOperations to
   * be performed on them. This is plumbed down to the MergeVariantRequests
   * generated by the resulting import job.
   * </pre>
   *
   * <code>map&lt;string, .google.genomics.v1.InfoMergeOperation&gt; info_merge_config = 6;</code>
   */
  @java.lang.Override
  public java.util.Map<java.lang.String, com.google.genomics.v1.InfoMergeOperation>
  getInfoMergeConfigMap() {
    return internalGetAdaptedInfoMergeConfigMap(
        internalGetInfoMergeConfig().getMap());}
  /**
   * <pre>
   * A mapping between info field keys and the InfoMergeOperations to
   * be performed on them. This is plumbed down to the MergeVariantRequests
   * generated by the resulting import job.
   * </pre>
   *
   * <code>map&lt;string, .google.genomics.v1.InfoMergeOperation&gt; info_merge_config = 6;</code>
   */
  @java.lang.Override
  public /* nullable */
com.google.genomics.v1.InfoMergeOperation getInfoMergeConfigOrDefault(
      java.lang.String key,
      /* nullable */
com.google.genomics.v1.InfoMergeOperation defaultValue) {
    if (key == null) { throw new NullPointerException("map key"); }
    java.util.Map<java.lang.String, java.lang.Integer> map =
        internalGetInfoMergeConfig().getMap();
    return map.containsKey(key)
           ? infoMergeConfigValueConverter.doForward(map.get(key))
           : defaultValue;
  }
  /**
   * <pre>
   * A mapping between info field keys and the InfoMergeOperations to
   * be performed on them. This is plumbed down to the MergeVariantRequests
   * generated by the resulting import job.
   * </pre>
   *
   * <code>map&lt;string, .google.genomics.v1.InfoMergeOperation&gt; info_merge_config = 6;</code>
   */
  @java.lang.Override
  public com.google.genomics.v1.InfoMergeOperation getInfoMergeConfigOrThrow(
      java.lang.String key) {
    if (key == null) { throw new NullPointerException("map key"); }
    java.util.Map<java.lang.String, java.lang.Integer> map =
        internalGetInfoMergeConfig().getMap();
    if (!map.containsKey(key)) {
      throw new java.lang.IllegalArgumentException();
    }
    return infoMergeConfigValueConverter.doForward(map.get(key));
  }
  /**
   * Use {@link #getInfoMergeConfigValueMap()} instead.
   */
  @java.lang.Override
  @java.lang.Deprecated
  public java.util.Map<java.lang.String, java.lang.Integer>
  getInfoMergeConfigValue() {
    return getInfoMergeConfigValueMap();
  }
  /**
   * <pre>
   * A mapping between info field keys and the InfoMergeOperations to
   * be performed on them. This is plumbed down to the MergeVariantRequests
   * generated by the resulting import job.
   * </pre>
   *
   * <code>map&lt;string, .google.genomics.v1.InfoMergeOperation&gt; info_merge_config = 6;</code>
   */
  @java.lang.Override
  public java.util.Map<java.lang.String, java.lang.Integer>
  getInfoMergeConfigValueMap() {
    return internalGetInfoMergeConfig().getMap();
  }
  /**
   * <pre>
   * A mapping between info field keys and the InfoMergeOperations to
   * be performed on them. This is plumbed down to the MergeVariantRequests
   * generated by the resulting import job.
   * </pre>
   *
   * <code>map&lt;string, .google.genomics.v1.InfoMergeOperation&gt; info_merge_config = 6;</code>
   */
  @java.lang.Override
  public int getInfoMergeConfigValueOrDefault(
      java.lang.String key,
      int defaultValue) {
    if (key == null) { throw new NullPointerException("map key"); }
    java.util.Map<java.lang.String, java.lang.Integer> map =
        internalGetInfoMergeConfig().getMap();
    return map.containsKey(key) ? map.get(key) : defaultValue;
  }
  /**
   * <pre>
   * A mapping between info field keys and the InfoMergeOperations to
   * be performed on them. This is plumbed down to the MergeVariantRequests
   * generated by the resulting import job.
   * </pre>
   *
   * <code>map&lt;string, .google.genomics.v1.InfoMergeOperation&gt; info_merge_config = 6;</code>
   */
  @java.lang.Override
  public int getInfoMergeConfigValueOrThrow(
      java.lang.String key) {
    if (key == null) { throw new NullPointerException("map key"); }
    java.util.Map<java.lang.String, java.lang.Integer> map =
        internalGetInfoMergeConfig().getMap();
    if (!map.containsKey(key)) {
      throw new java.lang.IllegalArgumentException();
    }
    return map.get(key);
  }

  private byte memoizedIsInitialized = -1;
  @java.lang.Override
  public final boolean isInitialized() {
    byte isInitialized = memoizedIsInitialized;
    if (isInitialized == 1) return true;
    if (isInitialized == 0) return false;

    memoizedIsInitialized = 1;
    return true;
  }

  @java.lang.Override
  public void writeTo(com.google.protobuf.CodedOutputStream output)
                      throws java.io.IOException {
    if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(variantSetId_)) {
      com.google.protobuf.GeneratedMessageV3.writeString(output, 1, variantSetId_);
    }
    for (int i = 0; i < sourceUris_.size(); i++) {
      com.google.protobuf.GeneratedMessageV3.writeString(output, 2, sourceUris_.getRaw(i));
    }
    if (format_ != com.google.genomics.v1.ImportVariantsRequest.Format.FORMAT_UNSPECIFIED.getNumber()) {
      output.writeEnum(3, format_);
    }
    if (normalizeReferenceNames_ != false) {
      output.writeBool(5, normalizeReferenceNames_);
    }
    com.google.protobuf.GeneratedMessageV3
      .serializeStringMapTo(
        output,
        internalGetInfoMergeConfig(),
        InfoMergeConfigDefaultEntryHolder.defaultEntry,
        6);
    getUnknownFields().writeTo(output);
  }

  @java.lang.Override
  public int getSerializedSize() {
    int size = memoizedSize;
    if (size != -1) return size;

    size = 0;
    if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(variantSetId_)) {
      size += com.google.protobuf.GeneratedMessageV3.computeStringSize(1, variantSetId_);
    }
    {
      int dataSize = 0;
      for (int i = 0; i < sourceUris_.size(); i++) {
        dataSize += computeStringSizeNoTag(sourceUris_.getRaw(i));
      }
      size += dataSize;
      size += 1 * getSourceUrisList().size();
    }
    if (format_ != com.google.genomics.v1.ImportVariantsRequest.Format.FORMAT_UNSPECIFIED.getNumber()) {
      size += com.google.protobuf.CodedOutputStream
        .computeEnumSize(3, format_);
    }
    if (normalizeReferenceNames_ != false) {
      size += com.google.protobuf.CodedOutputStream
        .computeBoolSize(5, normalizeReferenceNames_);
    }
    for (java.util.Map.Entry<java.lang.String, java.lang.Integer> entry
         : internalGetInfoMergeConfig().getMap().entrySet()) {
      com.google.protobuf.MapEntry<java.lang.String, java.lang.Integer>
      infoMergeConfig__ = InfoMergeConfigDefaultEntryHolder.defaultEntry.newBuilderForType()
          .setKey(entry.getKey())
          .setValue(entry.getValue())
          .build();
      size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(6, infoMergeConfig__);
    }
    size += getUnknownFields().getSerializedSize();
    memoizedSize = size;
    return size;
  }

  @java.lang.Override
  public boolean equals(final java.lang.Object obj) {
    if (obj == this) {
     return true;
    }
    if (!(obj instanceof com.google.genomics.v1.ImportVariantsRequest)) {
      return super.equals(obj);
    }
    com.google.genomics.v1.ImportVariantsRequest other = (com.google.genomics.v1.ImportVariantsRequest) obj;

    if (!getVariantSetId()
        .equals(other.getVariantSetId())) return false;
    if (!getSourceUrisList()
        .equals(other.getSourceUrisList())) return false;
    if (format_ != other.format_) return false;
    if (getNormalizeReferenceNames()
        != other.getNormalizeReferenceNames()) return false;
    if (!internalGetInfoMergeConfig().equals(
        other.internalGetInfoMergeConfig())) return false;
    if (!getUnknownFields().equals(other.getUnknownFields())) return false;
    return true;
  }

  @java.lang.Override
  public int hashCode() {
    if (memoizedHashCode != 0) {
      return memoizedHashCode;
    }
    int hash = 41;
    hash = (19 * hash) + getDescriptor().hashCode();
    hash = (37 * hash) + VARIANT_SET_ID_FIELD_NUMBER;
    hash = (53 * hash) + getVariantSetId().hashCode();
    if (getSourceUrisCount() > 0) {
      hash = (37 * hash) + SOURCE_URIS_FIELD_NUMBER;
      hash = (53 * hash) + getSourceUrisList().hashCode();
    }
    hash = (37 * hash) + FORMAT_FIELD_NUMBER;
    hash = (53 * hash) + format_;
    hash = (37 * hash) + NORMALIZE_REFERENCE_NAMES_FIELD_NUMBER;
    hash = (53 * hash) + com.google.protobuf.Internal.hashBoolean(
        getNormalizeReferenceNames());
    if (!internalGetInfoMergeConfig().getMap().isEmpty()) {
      hash = (37 * hash) + INFO_MERGE_CONFIG_FIELD_NUMBER;
      hash = (53 * hash) + internalGetInfoMergeConfig().hashCode();
    }
    hash = (29 * hash) + getUnknownFields().hashCode();
    memoizedHashCode = hash;
    return hash;
  }

  public static com.google.genomics.v1.ImportVariantsRequest parseFrom(
      java.nio.ByteBuffer data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static com.google.genomics.v1.ImportVariantsRequest parseFrom(
      java.nio.ByteBuffer data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static com.google.genomics.v1.ImportVariantsRequest parseFrom(
      com.google.protobuf.ByteString data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static com.google.genomics.v1.ImportVariantsRequest parseFrom(
      com.google.protobuf.ByteString data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static com.google.genomics.v1.ImportVariantsRequest parseFrom(byte[] data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static com.google.genomics.v1.ImportVariantsRequest parseFrom(
      byte[] data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static com.google.genomics.v1.ImportVariantsRequest parseFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input);
  }
  public static com.google.genomics.v1.ImportVariantsRequest parseFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input, extensionRegistry);
  }
  public static com.google.genomics.v1.ImportVariantsRequest parseDelimitedFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseDelimitedWithIOException(PARSER, input);
  }
  public static com.google.genomics.v1.ImportVariantsRequest parseDelimitedFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
  }
  public static com.google.genomics.v1.ImportVariantsRequest parseFrom(
      com.google.protobuf.CodedInputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input);
  }
  public static com.google.genomics.v1.ImportVariantsRequest parseFrom(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input, extensionRegistry);
  }

  @java.lang.Override
  public Builder newBuilderForType() { return newBuilder(); }
  public static Builder newBuilder() {
    return DEFAULT_INSTANCE.toBuilder();
  }
  public static Builder newBuilder(com.google.genomics.v1.ImportVariantsRequest prototype) {
    return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
  }
  @java.lang.Override
  public Builder toBuilder() {
    return this == DEFAULT_INSTANCE
        ? new Builder() : new Builder().mergeFrom(this);
  }

  @java.lang.Override
  protected Builder newBuilderForType(
      com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
    Builder builder = new Builder(parent);
    return builder;
  }
  /**
   * <pre>
   * The variant data import request.
   * </pre>
   *
   * Protobuf type {@code google.genomics.v1.ImportVariantsRequest}
   */
  public static final class Builder extends
      com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
      // @@protoc_insertion_point(builder_implements:google.genomics.v1.ImportVariantsRequest)
      com.google.genomics.v1.ImportVariantsRequestOrBuilder {
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.google.genomics.v1.VariantsProto.internal_static_google_genomics_v1_ImportVariantsRequest_descriptor;
    }

    @SuppressWarnings({"rawtypes"})
    protected com.google.protobuf.MapField internalGetMapField(
        int number) {
      switch (number) {
        case 6:
          return internalGetInfoMergeConfig();
        default:
          throw new RuntimeException(
              "Invalid map field number: " + number);
      }
    }
    @SuppressWarnings({"rawtypes"})
    protected com.google.protobuf.MapField internalGetMutableMapField(
        int number) {
      switch (number) {
        case 6:
          return internalGetMutableInfoMergeConfig();
        default:
          throw new RuntimeException(
              "Invalid map field number: " + number);
      }
    }
    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.google.genomics.v1.VariantsProto.internal_static_google_genomics_v1_ImportVariantsRequest_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.google.genomics.v1.ImportVariantsRequest.class, com.google.genomics.v1.ImportVariantsRequest.Builder.class);
    }

    // Construct using com.google.genomics.v1.ImportVariantsRequest.newBuilder()
    private Builder() {

    }

    private Builder(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      super(parent);

    }
    @java.lang.Override
    public Builder clear() {
      super.clear();
      bitField0_ = 0;
      variantSetId_ = "";
      sourceUris_ = com.google.protobuf.LazyStringArrayList.EMPTY;
      bitField0_ = (bitField0_ & ~0x00000002);
      format_ = 0;
      normalizeReferenceNames_ = false;
      internalGetMutableInfoMergeConfig().clear();
      return this;
    }

    @java.lang.Override
    public com.google.protobuf.Descriptors.Descriptor
        getDescriptorForType() {
      return com.google.genomics.v1.VariantsProto.internal_static_google_genomics_v1_ImportVariantsRequest_descriptor;
    }

    @java.lang.Override
    public com.google.genomics.v1.ImportVariantsRequest getDefaultInstanceForType() {
      return com.google.genomics.v1.ImportVariantsRequest.getDefaultInstance();
    }

    @java.lang.Override
    public com.google.genomics.v1.ImportVariantsRequest build() {
      com.google.genomics.v1.ImportVariantsRequest result = buildPartial();
      if (!result.isInitialized()) {
        throw newUninitializedMessageException(result);
      }
      return result;
    }

    @java.lang.Override
    public com.google.genomics.v1.ImportVariantsRequest buildPartial() {
      com.google.genomics.v1.ImportVariantsRequest result = new com.google.genomics.v1.ImportVariantsRequest(this);
      buildPartialRepeatedFields(result);
      if (bitField0_ != 0) { buildPartial0(result); }
      onBuilt();
      return result;
    }

    private void buildPartialRepeatedFields(com.google.genomics.v1.ImportVariantsRequest result) {
      if (((bitField0_ & 0x00000002) != 0)) {
        sourceUris_ = sourceUris_.getUnmodifiableView();
        bitField0_ = (bitField0_ & ~0x00000002);
      }
      result.sourceUris_ = sourceUris_;
    }

    private void buildPartial0(com.google.genomics.v1.ImportVariantsRequest result) {
      int from_bitField0_ = bitField0_;
      if (((from_bitField0_ & 0x00000001) != 0)) {
        result.variantSetId_ = variantSetId_;
      }
      if (((from_bitField0_ & 0x00000004) != 0)) {
        result.format_ = format_;
      }
      if (((from_bitField0_ & 0x00000008) != 0)) {
        result.normalizeReferenceNames_ = normalizeReferenceNames_;
      }
      if (((from_bitField0_ & 0x00000010) != 0)) {
        result.infoMergeConfig_ = internalGetInfoMergeConfig();
        result.infoMergeConfig_.makeImmutable();
      }
    }

    @java.lang.Override
    public Builder clone() {
      return super.clone();
    }
    @java.lang.Override
    public Builder setField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        java.lang.Object value) {
      return super.setField(field, value);
    }
    @java.lang.Override
    public Builder clearField(
        com.google.protobuf.Descriptors.FieldDescriptor field) {
      return super.clearField(field);
    }
    @java.lang.Override
    public Builder clearOneof(
        com.google.protobuf.Descriptors.OneofDescriptor oneof) {
      return super.clearOneof(oneof);
    }
    @java.lang.Override
    public Builder setRepeatedField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        int index, java.lang.Object value) {
      return super.setRepeatedField(field, index, value);
    }
    @java.lang.Override
    public Builder addRepeatedField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        java.lang.Object value) {
      return super.addRepeatedField(field, value);
    }
    @java.lang.Override
    public Builder mergeFrom(com.google.protobuf.Message other) {
      if (other instanceof com.google.genomics.v1.ImportVariantsRequest) {
        return mergeFrom((com.google.genomics.v1.ImportVariantsRequest)other);
      } else {
        super.mergeFrom(other);
        return this;
      }
    }

    public Builder mergeFrom(com.google.genomics.v1.ImportVariantsRequest other) {
      if (other == com.google.genomics.v1.ImportVariantsRequest.getDefaultInstance()) return this;
      if (!other.getVariantSetId().isEmpty()) {
        variantSetId_ = other.variantSetId_;
        bitField0_ |= 0x00000001;
        onChanged();
      }
      if (!other.sourceUris_.isEmpty()) {
        if (sourceUris_.isEmpty()) {
          sourceUris_ = other.sourceUris_;
          bitField0_ = (bitField0_ & ~0x00000002);
        } else {
          ensureSourceUrisIsMutable();
          sourceUris_.addAll(other.sourceUris_);
        }
        onChanged();
      }
      if (other.format_ != 0) {
        setFormatValue(other.getFormatValue());
      }
      if (other.getNormalizeReferenceNames() != false) {
        setNormalizeReferenceNames(other.getNormalizeReferenceNames());
      }
      internalGetMutableInfoMergeConfig().mergeFrom(
          other.internalGetInfoMergeConfig());
      bitField0_ |= 0x00000010;
      this.mergeUnknownFields(other.getUnknownFields());
      onChanged();
      return this;
    }

    @java.lang.Override
    public final boolean isInitialized() {
      return true;
    }

    @java.lang.Override
    public Builder mergeFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 10: {
              variantSetId_ = input.readStringRequireUtf8();
              bitField0_ |= 0x00000001;
              break;
            } // case 10
            case 18: {
              java.lang.String s = input.readStringRequireUtf8();
              ensureSourceUrisIsMutable();
              sourceUris_.add(s);
              break;
            } // case 18
            case 24: {
              format_ = input.readEnum();
              bitField0_ |= 0x00000004;
              break;
            } // case 24
            case 40: {
              normalizeReferenceNames_ = input.readBool();
              bitField0_ |= 0x00000008;
              break;
            } // case 40
            case 50: {
              com.google.protobuf.MapEntry<java.lang.String, java.lang.Integer>
              infoMergeConfig__ = input.readMessage(
                  InfoMergeConfigDefaultEntryHolder.defaultEntry.getParserForType(), extensionRegistry);
              internalGetMutableInfoMergeConfig().getMutableMap().put(
                  infoMergeConfig__.getKey(), infoMergeConfig__.getValue());
              bitField0_ |= 0x00000010;
              break;
            } // case 50
            default: {
              if (!super.parseUnknownField(input, extensionRegistry, tag)) {
                done = true; // was an endgroup tag
              }
              break;
            } // default:
          } // switch (tag)
        } // while (!done)
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.unwrapIOException();
      } finally {
        onChanged();
      } // finally
      return this;
    }
    private int bitField0_;

    private java.lang.Object variantSetId_ = "";
    /**
     * <pre>
     * Required. The variant set to which variant data should be imported.
     * </pre>
     *
     * <code>string variant_set_id = 1;</code>
     * @return The variantSetId.
     */
    public java.lang.String getVariantSetId() {
      java.lang.Object ref = variantSetId_;
      if (!(ref instanceof java.lang.String)) {
        com.google.protobuf.ByteString bs =
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        variantSetId_ = s;
        return s;
      } else {
        return (java.lang.String) ref;
      }
    }
    /**
     * <pre>
     * Required. The variant set to which variant data should be imported.
     * </pre>
     *
     * <code>string variant_set_id = 1;</code>
     * @return The bytes for variantSetId.
     */
    public com.google.protobuf.ByteString
        getVariantSetIdBytes() {
      java.lang.Object ref = variantSetId_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        variantSetId_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }
    /**
     * <pre>
     * Required. The variant set to which variant data should be imported.
     * </pre>
     *
     * <code>string variant_set_id = 1;</code>
     * @param value The variantSetId to set.
     * @return This builder for chaining.
     */
    public Builder setVariantSetId(
        java.lang.String value) {
      if (value == null) { throw new NullPointerException(); }
      variantSetId_ = value;
      bitField0_ |= 0x00000001;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * Required. The variant set to which variant data should be imported.
     * </pre>
     *
     * <code>string variant_set_id = 1;</code>
     * @return This builder for chaining.
     */
    public Builder clearVariantSetId() {
      variantSetId_ = getDefaultInstance().getVariantSetId();
      bitField0_ = (bitField0_ & ~0x00000001);
      onChanged();
      return this;
    }
    /**
     * <pre>
     * Required. The variant set to which variant data should be imported.
     * </pre>
     *
     * <code>string variant_set_id = 1;</code>
     * @param value The bytes for variantSetId to set.
     * @return This builder for chaining.
     */
    public Builder setVariantSetIdBytes(
        com.google.protobuf.ByteString value) {
      if (value == null) { throw new NullPointerException(); }
      checkByteStringIsUtf8(value);
      variantSetId_ = value;
      bitField0_ |= 0x00000001;
      onChanged();
      return this;
    }

    private com.google.protobuf.LazyStringList sourceUris_ = com.google.protobuf.LazyStringArrayList.EMPTY;
    private void ensureSourceUrisIsMutable() {
      if (!((bitField0_ & 0x00000002) != 0)) {
        sourceUris_ = new com.google.protobuf.LazyStringArrayList(sourceUris_);
        bitField0_ |= 0x00000002;
       }
    }
    /**
     * <pre>
     * A list of URIs referencing variant files in Google Cloud Storage. URIs can
     * include wildcards [as described
     * here](https://cloud.google.com/storage/docs/gsutil/addlhelp/WildcardNames).
     * Note that recursive wildcards ('**') are not supported.
     * </pre>
     *
     * <code>repeated string source_uris = 2;</code>
     * @return A list containing the sourceUris.
     */
    public com.google.protobuf.ProtocolStringList
        getSourceUrisList() {
      return sourceUris_.getUnmodifiableView();
    }
    /**
     * <pre>
     * A list of URIs referencing variant files in Google Cloud Storage. URIs can
     * include wildcards [as described
     * here](https://cloud.google.com/storage/docs/gsutil/addlhelp/WildcardNames).
     * Note that recursive wildcards ('**') are not supported.
     * </pre>
     *
     * <code>repeated string source_uris = 2;</code>
     * @return The count of sourceUris.
     */
    public int getSourceUrisCount() {
      return sourceUris_.size();
    }
    /**
     * <pre>
     * A list of URIs referencing variant files in Google Cloud Storage. URIs can
     * include wildcards [as described
     * here](https://cloud.google.com/storage/docs/gsutil/addlhelp/WildcardNames).
     * Note that recursive wildcards ('**') are not supported.
     * </pre>
     *
     * <code>repeated string source_uris = 2;</code>
     * @param index The index of the element to return.
     * @return The sourceUris at the given index.
     */
    public java.lang.String getSourceUris(int index) {
      return sourceUris_.get(index);
    }
    /**
     * <pre>
     * A list of URIs referencing variant files in Google Cloud Storage. URIs can
     * include wildcards [as described
     * here](https://cloud.google.com/storage/docs/gsutil/addlhelp/WildcardNames).
     * Note that recursive wildcards ('**') are not supported.
     * </pre>
     *
     * <code>repeated string source_uris = 2;</code>
     * @param index The index of the value to return.
     * @return The bytes of the sourceUris at the given index.
     */
    public com.google.protobuf.ByteString
        getSourceUrisBytes(int index) {
      return sourceUris_.getByteString(index);
    }
    /**
     * <pre>
     * A list of URIs referencing variant files in Google Cloud Storage. URIs can
     * include wildcards [as described
     * here](https://cloud.google.com/storage/docs/gsutil/addlhelp/WildcardNames).
     * Note that recursive wildcards ('**') are not supported.
     * </pre>
     *
     * <code>repeated string source_uris = 2;</code>
     * @param index The index to set the value at.
     * @param value The sourceUris to set.
     * @return This builder for chaining.
     */
    public Builder setSourceUris(
        int index, java.lang.String value) {
      if (value == null) { throw new NullPointerException(); }
      ensureSourceUrisIsMutable();
      sourceUris_.set(index, value);
      onChanged();
      return this;
    }
    /**
     * <pre>
     * A list of URIs referencing variant files in Google Cloud Storage. URIs can
     * include wildcards [as described
     * here](https://cloud.google.com/storage/docs/gsutil/addlhelp/WildcardNames).
     * Note that recursive wildcards ('**') are not supported.
     * </pre>
     *
     * <code>repeated string source_uris = 2;</code>
     * @param value The sourceUris to add.
     * @return This builder for chaining.
     */
    public Builder addSourceUris(
        java.lang.String value) {
      if (value == null) { throw new NullPointerException(); }
      ensureSourceUrisIsMutable();
      sourceUris_.add(value);
      onChanged();
      return this;
    }
    /**
     * <pre>
     * A list of URIs referencing variant files in Google Cloud Storage. URIs can
     * include wildcards [as described
     * here](https://cloud.google.com/storage/docs/gsutil/addlhelp/WildcardNames).
     * Note that recursive wildcards ('**') are not supported.
     * </pre>
     *
     * <code>repeated string source_uris = 2;</code>
     * @param values The sourceUris to add.
     * @return This builder for chaining.
     */
    public Builder addAllSourceUris(
        java.lang.Iterable<java.lang.String> values) {
      ensureSourceUrisIsMutable();
      com.google.protobuf.AbstractMessageLite.Builder.addAll(
          values, sourceUris_);
      onChanged();
      return this;
    }
    /**
     * <pre>
     * A list of URIs referencing variant files in Google Cloud Storage. URIs can
     * include wildcards [as described
     * here](https://cloud.google.com/storage/docs/gsutil/addlhelp/WildcardNames).
     * Note that recursive wildcards ('**') are not supported.
     * </pre>
     *
     * <code>repeated string source_uris = 2;</code>
     * @return This builder for chaining.
     */
    public Builder clearSourceUris() {
      sourceUris_ = com.google.protobuf.LazyStringArrayList.EMPTY;
      bitField0_ = (bitField0_ & ~0x00000002);
      onChanged();
      return this;
    }
    /**
     * <pre>
     * A list of URIs referencing variant files in Google Cloud Storage. URIs can
     * include wildcards [as described
     * here](https://cloud.google.com/storage/docs/gsutil/addlhelp/WildcardNames).
     * Note that recursive wildcards ('**') are not supported.
     * </pre>
     *
     * <code>repeated string source_uris = 2;</code>
     * @param value The bytes of the sourceUris to add.
     * @return This builder for chaining.
     */
    public Builder addSourceUrisBytes(
        com.google.protobuf.ByteString value) {
      if (value == null) { throw new NullPointerException(); }
      checkByteStringIsUtf8(value);
      ensureSourceUrisIsMutable();
      sourceUris_.add(value);
      onChanged();
      return this;
    }

    private int format_ = 0;
    /**
     * <pre>
     * The format of the variant data being imported. If unspecified, defaults to
     * to `VCF`.
     * </pre>
     *
     * <code>.google.genomics.v1.ImportVariantsRequest.Format format = 3;</code>
     * @return The enum numeric value on the wire for format.
     */
    @java.lang.Override public int getFormatValue() {
      return format_;
    }
    /**
     * <pre>
     * The format of the variant data being imported. If unspecified, defaults to
     * to `VCF`.
     * </pre>
     *
     * <code>.google.genomics.v1.ImportVariantsRequest.Format format = 3;</code>
     * @param value The enum numeric value on the wire for format to set.
     * @return This builder for chaining.
     */
    public Builder setFormatValue(int value) {
      format_ = value;
      bitField0_ |= 0x00000004;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * The format of the variant data being imported. If unspecified, defaults to
     * to `VCF`.
     * </pre>
     *
     * <code>.google.genomics.v1.ImportVariantsRequest.Format format = 3;</code>
     * @return The format.
     */
    @java.lang.Override
    public com.google.genomics.v1.ImportVariantsRequest.Format getFormat() {
      com.google.genomics.v1.ImportVariantsRequest.Format result = com.google.genomics.v1.ImportVariantsRequest.Format.forNumber(format_);
      return result == null ? com.google.genomics.v1.ImportVariantsRequest.Format.UNRECOGNIZED : result;
    }
    /**
     * <pre>
     * The format of the variant data being imported. If unspecified, defaults to
     * to `VCF`.
     * </pre>
     *
     * <code>.google.genomics.v1.ImportVariantsRequest.Format format = 3;</code>
     * @param value The format to set.
     * @return This builder for chaining.
     */
    public Builder setFormat(com.google.genomics.v1.ImportVariantsRequest.Format value) {
      if (value == null) {
        throw new NullPointerException();
      }
      bitField0_ |= 0x00000004;
      format_ = value.getNumber();
      onChanged();
      return this;
    }
    /**
     * <pre>
     * The format of the variant data being imported. If unspecified, defaults to
     * to `VCF`.
     * </pre>
     *
     * <code>.google.genomics.v1.ImportVariantsRequest.Format format = 3;</code>
     * @return This builder for chaining.
     */
    public Builder clearFormat() {
      bitField0_ = (bitField0_ & ~0x00000004);
      format_ = 0;
      onChanged();
      return this;
    }

    private boolean normalizeReferenceNames_ ;
    /**
     * <pre>
     * Convert reference names to the canonical representation.
     * hg19 haploytypes (those reference names containing "_hap")
     * are not modified in any way.
     * All other reference names are modified according to the following rules:
     * The reference name is capitalized.
     * The "chr" prefix is dropped for all autosomes and sex chromsomes.
     * For example "chr17" becomes "17" and "chrX" becomes "X".
     * All mitochondrial chromosomes ("chrM", "chrMT", etc) become "MT".
     * </pre>
     *
     * <code>bool normalize_reference_names = 5;</code>
     * @return The normalizeReferenceNames.
     */
    @java.lang.Override
    public boolean getNormalizeReferenceNames() {
      return normalizeReferenceNames_;
    }
    /**
     * <pre>
     * Convert reference names to the canonical representation.
     * hg19 haploytypes (those reference names containing "_hap")
     * are not modified in any way.
     * All other reference names are modified according to the following rules:
     * The reference name is capitalized.
     * The "chr" prefix is dropped for all autosomes and sex chromsomes.
     * For example "chr17" becomes "17" and "chrX" becomes "X".
     * All mitochondrial chromosomes ("chrM", "chrMT", etc) become "MT".
     * </pre>
     *
     * <code>bool normalize_reference_names = 5;</code>
     * @param value The normalizeReferenceNames to set.
     * @return This builder for chaining.
     */
    public Builder setNormalizeReferenceNames(boolean value) {
      
      normalizeReferenceNames_ = value;
      bitField0_ |= 0x00000008;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * Convert reference names to the canonical representation.
     * hg19 haploytypes (those reference names containing "_hap")
     * are not modified in any way.
     * All other reference names are modified according to the following rules:
     * The reference name is capitalized.
     * The "chr" prefix is dropped for all autosomes and sex chromsomes.
     * For example "chr17" becomes "17" and "chrX" becomes "X".
     * All mitochondrial chromosomes ("chrM", "chrMT", etc) become "MT".
     * </pre>
     *
     * <code>bool normalize_reference_names = 5;</code>
     * @return This builder for chaining.
     */
    public Builder clearNormalizeReferenceNames() {
      bitField0_ = (bitField0_ & ~0x00000008);
      normalizeReferenceNames_ = false;
      onChanged();
      return this;
    }

    private com.google.protobuf.MapField<
        java.lang.String, java.lang.Integer> infoMergeConfig_;
    private com.google.protobuf.MapField<java.lang.String, java.lang.Integer>
        internalGetInfoMergeConfig() {
      if (infoMergeConfig_ == null) {
        return com.google.protobuf.MapField.emptyMapField(
            InfoMergeConfigDefaultEntryHolder.defaultEntry);
      }
      return infoMergeConfig_;
    }
    private com.google.protobuf.MapField<java.lang.String, java.lang.Integer>
        internalGetMutableInfoMergeConfig() {
      if (infoMergeConfig_ == null) {
        infoMergeConfig_ = com.google.protobuf.MapField.newMapField(
            InfoMergeConfigDefaultEntryHolder.defaultEntry);
      }
      if (!infoMergeConfig_.isMutable()) {
        infoMergeConfig_ = infoMergeConfig_.copy();
      }
      bitField0_ |= 0x00000010;
      onChanged();
      return infoMergeConfig_;
    }
    public int getInfoMergeConfigCount() {
      return internalGetInfoMergeConfig().getMap().size();
    }
    /**
     * <pre>
     * A mapping between info field keys and the InfoMergeOperations to
     * be performed on them. This is plumbed down to the MergeVariantRequests
     * generated by the resulting import job.
     * </pre>
     *
     * <code>map&lt;string, .google.genomics.v1.InfoMergeOperation&gt; info_merge_config = 6;</code>
     */
    @java.lang.Override
    public boolean containsInfoMergeConfig(
        java.lang.String key) {
      if (key == null) { throw new NullPointerException("map key"); }
      return internalGetInfoMergeConfig().getMap().containsKey(key);
    }
    /**
     * Use {@link #getInfoMergeConfigMap()} instead.
     */
    @java.lang.Override
    @java.lang.Deprecated
    public java.util.Map<java.lang.String, com.google.genomics.v1.InfoMergeOperation>
    getInfoMergeConfig() {
      return getInfoMergeConfigMap();
    }
    /**
     * <pre>
     * A mapping between info field keys and the InfoMergeOperations to
     * be performed on them. This is plumbed down to the MergeVariantRequests
     * generated by the resulting import job.
     * </pre>
     *
     * <code>map&lt;string, .google.genomics.v1.InfoMergeOperation&gt; info_merge_config = 6;</code>
     */
    @java.lang.Override
    public java.util.Map<java.lang.String, com.google.genomics.v1.InfoMergeOperation>
    getInfoMergeConfigMap() {
      return internalGetAdaptedInfoMergeConfigMap(
          internalGetInfoMergeConfig().getMap());}
    /**
     * <pre>
     * A mapping between info field keys and the InfoMergeOperations to
     * be performed on them. This is plumbed down to the MergeVariantRequests
     * generated by the resulting import job.
     * </pre>
     *
     * <code>map&lt;string, .google.genomics.v1.InfoMergeOperation&gt; info_merge_config = 6;</code>
     */
    @java.lang.Override
    public /* nullable */
com.google.genomics.v1.InfoMergeOperation getInfoMergeConfigOrDefault(
        java.lang.String key,
        /* nullable */
com.google.genomics.v1.InfoMergeOperation defaultValue) {
      if (key == null) { throw new NullPointerException("map key"); }
      java.util.Map<java.lang.String, java.lang.Integer> map =
          internalGetInfoMergeConfig().getMap();
      return map.containsKey(key)
             ? infoMergeConfigValueConverter.doForward(map.get(key))
             : defaultValue;
    }
    /**
     * <pre>
     * A mapping between info field keys and the InfoMergeOperations to
     * be performed on them. This is plumbed down to the MergeVariantRequests
     * generated by the resulting import job.
     * </pre>
     *
     * <code>map&lt;string, .google.genomics.v1.InfoMergeOperation&gt; info_merge_config = 6;</code>
     */
    @java.lang.Override
    public com.google.genomics.v1.InfoMergeOperation getInfoMergeConfigOrThrow(
        java.lang.String key) {
      if (key == null) { throw new NullPointerException("map key"); }
      java.util.Map<java.lang.String, java.lang.Integer> map =
          internalGetInfoMergeConfig().getMap();
      if (!map.containsKey(key)) {
        throw new java.lang.IllegalArgumentException();
      }
      return infoMergeConfigValueConverter.doForward(map.get(key));
    }
    /**
     * Use {@link #getInfoMergeConfigValueMap()} instead.
     */
    @java.lang.Override
    @java.lang.Deprecated
    public java.util.Map<java.lang.String, java.lang.Integer>
    getInfoMergeConfigValue() {
      return getInfoMergeConfigValueMap();
    }
    /**
     * <pre>
     * A mapping between info field keys and the InfoMergeOperations to
     * be performed on them. This is plumbed down to the MergeVariantRequests
     * generated by the resulting import job.
     * </pre>
     *
     * <code>map&lt;string, .google.genomics.v1.InfoMergeOperation&gt; info_merge_config = 6;</code>
     */
    @java.lang.Override
    public java.util.Map<java.lang.String, java.lang.Integer>
    getInfoMergeConfigValueMap() {
      return internalGetInfoMergeConfig().getMap();
    }
    /**
     * <pre>
     * A mapping between info field keys and the InfoMergeOperations to
     * be performed on them. This is plumbed down to the MergeVariantRequests
     * generated by the resulting import job.
     * </pre>
     *
     * <code>map&lt;string, .google.genomics.v1.InfoMergeOperation&gt; info_merge_config = 6;</code>
     */
    @java.lang.Override
    public int getInfoMergeConfigValueOrDefault(
        java.lang.String key,
        int defaultValue) {
      if (key == null) { throw new NullPointerException("map key"); }
      java.util.Map<java.lang.String, java.lang.Integer> map =
          internalGetInfoMergeConfig().getMap();
      return map.containsKey(key) ? map.get(key) : defaultValue;
    }
    /**
     * <pre>
     * A mapping between info field keys and the InfoMergeOperations to
     * be performed on them. This is plumbed down to the MergeVariantRequests
     * generated by the resulting import job.
     * </pre>
     *
     * <code>map&lt;string, .google.genomics.v1.InfoMergeOperation&gt; info_merge_config = 6;</code>
     */
    @java.lang.Override
    public int getInfoMergeConfigValueOrThrow(
        java.lang.String key) {
      if (key == null) { throw new NullPointerException("map key"); }
      java.util.Map<java.lang.String, java.lang.Integer> map =
          internalGetInfoMergeConfig().getMap();
      if (!map.containsKey(key)) {
        throw new java.lang.IllegalArgumentException();
      }
      return map.get(key);
    }
    public Builder clearInfoMergeConfig() {
      bitField0_ = (bitField0_ & ~0x00000010);
      internalGetMutableInfoMergeConfig().getMutableMap()
          .clear();
      return this;
    }
    /**
     * <pre>
     * A mapping between info field keys and the InfoMergeOperations to
     * be performed on them. This is plumbed down to the MergeVariantRequests
     * generated by the resulting import job.
     * </pre>
     *
     * <code>map&lt;string, .google.genomics.v1.InfoMergeOperation&gt; info_merge_config = 6;</code>
     */
    public Builder removeInfoMergeConfig(
        java.lang.String key) {
      if (key == null) { throw new NullPointerException("map key"); }
      internalGetMutableInfoMergeConfig().getMutableMap()
          .remove(key);
      return this;
    }
    /**
     * Use alternate mutation accessors instead.
     */
    @java.lang.Deprecated
    public java.util.Map<java.lang.String, com.google.genomics.v1.InfoMergeOperation>
        getMutableInfoMergeConfig() {
      bitField0_ |= 0x00000010;
      return internalGetAdaptedInfoMergeConfigMap(
           internalGetMutableInfoMergeConfig().getMutableMap());
    }
    /**
     * <pre>
     * A mapping between info field keys and the InfoMergeOperations to
     * be performed on them. This is plumbed down to the MergeVariantRequests
     * generated by the resulting import job.
     * </pre>
     *
     * <code>map&lt;string, .google.genomics.v1.InfoMergeOperation&gt; info_merge_config = 6;</code>
     */
    public Builder putInfoMergeConfig(
        java.lang.String key,
        com.google.genomics.v1.InfoMergeOperation value) {
      if (key == null) { throw new NullPointerException("map key"); }
      
      internalGetMutableInfoMergeConfig().getMutableMap()
          .put(key, infoMergeConfigValueConverter.doBackward(value));
      bitField0_ |= 0x00000010;
      return this;
    }
    /**
     * <pre>
     * A mapping between info field keys and the InfoMergeOperations to
     * be performed on them. This is plumbed down to the MergeVariantRequests
     * generated by the resulting import job.
     * </pre>
     *
     * <code>map&lt;string, .google.genomics.v1.InfoMergeOperation&gt; info_merge_config = 6;</code>
     */
    public Builder putAllInfoMergeConfig(
        java.util.Map<java.lang.String, com.google.genomics.v1.InfoMergeOperation> values) {
      internalGetAdaptedInfoMergeConfigMap(
          internalGetMutableInfoMergeConfig().getMutableMap())
              .putAll(values);
      bitField0_ |= 0x00000010;
      return this;
    }
    /**
     * Use alternate mutation accessors instead.
     */
    @java.lang.Deprecated
    public java.util.Map<java.lang.String, java.lang.Integer>
    getMutableInfoMergeConfigValue() {
      bitField0_ |= 0x00000010;
      return internalGetMutableInfoMergeConfig().getMutableMap();
    }
    /**
     * <pre>
     * A mapping between info field keys and the InfoMergeOperations to
     * be performed on them. This is plumbed down to the MergeVariantRequests
     * generated by the resulting import job.
     * </pre>
     *
     * <code>map&lt;string, .google.genomics.v1.InfoMergeOperation&gt; info_merge_config = 6;</code>
     */
    public Builder putInfoMergeConfigValue(
        java.lang.String key,
        int value) {
      if (key == null) { throw new NullPointerException("map key"); }
      
      internalGetMutableInfoMergeConfig().getMutableMap()
          .put(key, value);
      bitField0_ |= 0x00000010;
      return this;
    }
    /**
     * <pre>
     * A mapping between info field keys and the InfoMergeOperations to
     * be performed on them. This is plumbed down to the MergeVariantRequests
     * generated by the resulting import job.
     * </pre>
     *
     * <code>map&lt;string, .google.genomics.v1.InfoMergeOperation&gt; info_merge_config = 6;</code>
     */
    public Builder putAllInfoMergeConfigValue(
        java.util.Map<java.lang.String, java.lang.Integer> values) {
      internalGetMutableInfoMergeConfig().getMutableMap()
          .putAll(values);
      bitField0_ |= 0x00000010;
      return this;
    }
    @java.lang.Override
    public final Builder setUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return super.setUnknownFields(unknownFields);
    }

    @java.lang.Override
    public final Builder mergeUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return super.mergeUnknownFields(unknownFields);
    }


    // @@protoc_insertion_point(builder_scope:google.genomics.v1.ImportVariantsRequest)
  }

  // @@protoc_insertion_point(class_scope:google.genomics.v1.ImportVariantsRequest)
  private static final com.google.genomics.v1.ImportVariantsRequest DEFAULT_INSTANCE;
  static {
    DEFAULT_INSTANCE = new com.google.genomics.v1.ImportVariantsRequest();
  }

  public static com.google.genomics.v1.ImportVariantsRequest getDefaultInstance() {
    return DEFAULT_INSTANCE;
  }

  private static final com.google.protobuf.Parser<ImportVariantsRequest>
      PARSER = new com.google.protobuf.AbstractParser<ImportVariantsRequest>() {
    @java.lang.Override
    public ImportVariantsRequest parsePartialFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      Builder builder = newBuilder();
      try {
        builder.mergeFrom(input, extensionRegistry);
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(builder.buildPartial());
      } catch (com.google.protobuf.UninitializedMessageException e) {
        throw e.asInvalidProtocolBufferException().setUnfinishedMessage(builder.buildPartial());
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(e)
            .setUnfinishedMessage(builder.buildPartial());
      }
      return builder.buildPartial();
    }
  };

  public static com.google.protobuf.Parser<ImportVariantsRequest> parser() {
    return PARSER;
  }

  @java.lang.Override
  public com.google.protobuf.Parser<ImportVariantsRequest> getParserForType() {
    return PARSER;
  }

  @java.lang.Override
  public com.google.genomics.v1.ImportVariantsRequest getDefaultInstanceForType() {
    return DEFAULT_INSTANCE;
  }

}

