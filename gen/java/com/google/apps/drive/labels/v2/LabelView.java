// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: google/apps/drive/labels/v2/requests.proto

package com.google.apps.drive.labels.v2;

/**
 * <pre>
 * Resource view that can be applied to label responses. The default value
 * `LABEL_VIEW_BASIC` implies the field mask:
 * `name,id,revision_id,label_type,properties.*`&#92;
 * </pre>
 *
 * Protobuf enum {@code google.apps.drive.labels.v2.LabelView}
 */
public enum LabelView
    implements com.google.protobuf.ProtocolMessageEnum {
  /**
   * <pre>
   * Implies the field mask:
   * `name,id,revision_id,label_type,properties.*`
   * </pre>
   *
   * <code>LABEL_VIEW_BASIC = 0;</code>
   */
  LABEL_VIEW_BASIC(0),
  /**
   * <pre>
   * All possible fields.
   * </pre>
   *
   * <code>LABEL_VIEW_FULL = 1;</code>
   */
  LABEL_VIEW_FULL(1),
  UNRECOGNIZED(-1),
  ;

  /**
   * <pre>
   * Implies the field mask:
   * `name,id,revision_id,label_type,properties.*`
   * </pre>
   *
   * <code>LABEL_VIEW_BASIC = 0;</code>
   */
  public static final int LABEL_VIEW_BASIC_VALUE = 0;
  /**
   * <pre>
   * All possible fields.
   * </pre>
   *
   * <code>LABEL_VIEW_FULL = 1;</code>
   */
  public static final int LABEL_VIEW_FULL_VALUE = 1;


  public final int getNumber() {
    if (this == UNRECOGNIZED) {
      throw new java.lang.IllegalArgumentException(
          "Can't get the number of an unknown enum value.");
    }
    return value;
  }

  /**
   * @param value The numeric wire value of the corresponding enum entry.
   * @return The enum associated with the given numeric wire value.
   * @deprecated Use {@link #forNumber(int)} instead.
   */
  @java.lang.Deprecated
  public static LabelView valueOf(int value) {
    return forNumber(value);
  }

  /**
   * @param value The numeric wire value of the corresponding enum entry.
   * @return The enum associated with the given numeric wire value.
   */
  public static LabelView forNumber(int value) {
    switch (value) {
      case 0: return LABEL_VIEW_BASIC;
      case 1: return LABEL_VIEW_FULL;
      default: return null;
    }
  }

  public static com.google.protobuf.Internal.EnumLiteMap<LabelView>
      internalGetValueMap() {
    return internalValueMap;
  }
  private static final com.google.protobuf.Internal.EnumLiteMap<
      LabelView> internalValueMap =
        new com.google.protobuf.Internal.EnumLiteMap<LabelView>() {
          public LabelView findValueByNumber(int number) {
            return LabelView.forNumber(number);
          }
        };

  public final com.google.protobuf.Descriptors.EnumValueDescriptor
      getValueDescriptor() {
    if (this == UNRECOGNIZED) {
      throw new java.lang.IllegalStateException(
          "Can't get the descriptor of an unrecognized enum value.");
    }
    return getDescriptor().getValues().get(ordinal());
  }
  public final com.google.protobuf.Descriptors.EnumDescriptor
      getDescriptorForType() {
    return getDescriptor();
  }
  public static final com.google.protobuf.Descriptors.EnumDescriptor
      getDescriptor() {
    return com.google.apps.drive.labels.v2.RequestsProto.getDescriptor().getEnumTypes().get(0);
  }

  private static final LabelView[] VALUES = values();

  public static LabelView valueOf(
      com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
    if (desc.getType() != getDescriptor()) {
      throw new java.lang.IllegalArgumentException(
        "EnumValueDescriptor is not for this type.");
    }
    if (desc.getIndex() == -1) {
      return UNRECOGNIZED;
    }
    return VALUES[desc.getIndex()];
  }

  private final int value;

  private LabelView(int value) {
    this.value = value;
  }

  // @@protoc_insertion_point(enum_scope:google.apps.drive.labels.v2.LabelView)
}

