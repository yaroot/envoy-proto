// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: google/apps/drive/activity/v2/target.proto

package com.google.apps.drive.activity.v2;

/**
 * <pre>
 * Information about the owner of a Drive item.
 * </pre>
 *
 * Protobuf type {@code google.apps.drive.activity.v2.Owner}
 */
public final class Owner extends
    com.google.protobuf.GeneratedMessageV3 implements
    // @@protoc_insertion_point(message_implements:google.apps.drive.activity.v2.Owner)
    OwnerOrBuilder {
private static final long serialVersionUID = 0L;
  // Use Owner.newBuilder() to construct.
  private Owner(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
    super(builder);
  }
  private Owner() {
  }

  @java.lang.Override
  @SuppressWarnings({"unused"})
  protected java.lang.Object newInstance(
      UnusedPrivateParameter unused) {
    return new Owner();
  }

  @java.lang.Override
  public final com.google.protobuf.UnknownFieldSet
  getUnknownFields() {
    return this.unknownFields;
  }
  private Owner(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    this();
    if (extensionRegistry == null) {
      throw new java.lang.NullPointerException();
    }
    com.google.protobuf.UnknownFieldSet.Builder unknownFields =
        com.google.protobuf.UnknownFieldSet.newBuilder();
    try {
      boolean done = false;
      while (!done) {
        int tag = input.readTag();
        switch (tag) {
          case 0:
            done = true;
            break;
          case 10: {
            com.google.apps.drive.activity.v2.User.Builder subBuilder = null;
            if (ownerCase_ == 1) {
              subBuilder = ((com.google.apps.drive.activity.v2.User) owner_).toBuilder();
            }
            owner_ =
                input.readMessage(com.google.apps.drive.activity.v2.User.parser(), extensionRegistry);
            if (subBuilder != null) {
              subBuilder.mergeFrom((com.google.apps.drive.activity.v2.User) owner_);
              owner_ = subBuilder.buildPartial();
            }
            ownerCase_ = 1;
            break;
          }
          case 18: {
            com.google.apps.drive.activity.v2.TeamDriveReference.Builder subBuilder = null;
            if (teamDrive_ != null) {
              subBuilder = teamDrive_.toBuilder();
            }
            teamDrive_ = input.readMessage(com.google.apps.drive.activity.v2.TeamDriveReference.parser(), extensionRegistry);
            if (subBuilder != null) {
              subBuilder.mergeFrom(teamDrive_);
              teamDrive_ = subBuilder.buildPartial();
            }

            break;
          }
          case 26: {
            com.google.apps.drive.activity.v2.Domain.Builder subBuilder = null;
            if (domain_ != null) {
              subBuilder = domain_.toBuilder();
            }
            domain_ = input.readMessage(com.google.apps.drive.activity.v2.Domain.parser(), extensionRegistry);
            if (subBuilder != null) {
              subBuilder.mergeFrom(domain_);
              domain_ = subBuilder.buildPartial();
            }

            break;
          }
          case 34: {
            com.google.apps.drive.activity.v2.DriveReference.Builder subBuilder = null;
            if (ownerCase_ == 4) {
              subBuilder = ((com.google.apps.drive.activity.v2.DriveReference) owner_).toBuilder();
            }
            owner_ =
                input.readMessage(com.google.apps.drive.activity.v2.DriveReference.parser(), extensionRegistry);
            if (subBuilder != null) {
              subBuilder.mergeFrom((com.google.apps.drive.activity.v2.DriveReference) owner_);
              owner_ = subBuilder.buildPartial();
            }
            ownerCase_ = 4;
            break;
          }
          default: {
            if (!parseUnknownField(
                input, unknownFields, extensionRegistry, tag)) {
              done = true;
            }
            break;
          }
        }
      }
    } catch (com.google.protobuf.InvalidProtocolBufferException e) {
      throw e.setUnfinishedMessage(this);
    } catch (com.google.protobuf.UninitializedMessageException e) {
      throw e.asInvalidProtocolBufferException().setUnfinishedMessage(this);
    } catch (java.io.IOException e) {
      throw new com.google.protobuf.InvalidProtocolBufferException(
          e).setUnfinishedMessage(this);
    } finally {
      this.unknownFields = unknownFields.build();
      makeExtensionsImmutable();
    }
  }
  public static final com.google.protobuf.Descriptors.Descriptor
      getDescriptor() {
    return com.google.apps.drive.activity.v2.TargetProto.internal_static_google_apps_drive_activity_v2_Owner_descriptor;
  }

  @java.lang.Override
  protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internalGetFieldAccessorTable() {
    return com.google.apps.drive.activity.v2.TargetProto.internal_static_google_apps_drive_activity_v2_Owner_fieldAccessorTable
        .ensureFieldAccessorsInitialized(
            com.google.apps.drive.activity.v2.Owner.class, com.google.apps.drive.activity.v2.Owner.Builder.class);
  }

  private int ownerCase_ = 0;
  private java.lang.Object owner_;
  public enum OwnerCase
      implements com.google.protobuf.Internal.EnumLite,
          com.google.protobuf.AbstractMessage.InternalOneOfEnum {
    USER(1),
    DRIVE(4),
    OWNER_NOT_SET(0);
    private final int value;
    private OwnerCase(int value) {
      this.value = value;
    }
    /**
     * @param value The number of the enum to look for.
     * @return The enum associated with the given number.
     * @deprecated Use {@link #forNumber(int)} instead.
     */
    @java.lang.Deprecated
    public static OwnerCase valueOf(int value) {
      return forNumber(value);
    }

    public static OwnerCase forNumber(int value) {
      switch (value) {
        case 1: return USER;
        case 4: return DRIVE;
        case 0: return OWNER_NOT_SET;
        default: return null;
      }
    }
    public int getNumber() {
      return this.value;
    }
  };

  public OwnerCase
  getOwnerCase() {
    return OwnerCase.forNumber(
        ownerCase_);
  }

  public static final int USER_FIELD_NUMBER = 1;
  /**
   * <pre>
   * The user that owns the Drive item.
   * </pre>
   *
   * <code>.google.apps.drive.activity.v2.User user = 1;</code>
   * @return Whether the user field is set.
   */
  @java.lang.Override
  public boolean hasUser() {
    return ownerCase_ == 1;
  }
  /**
   * <pre>
   * The user that owns the Drive item.
   * </pre>
   *
   * <code>.google.apps.drive.activity.v2.User user = 1;</code>
   * @return The user.
   */
  @java.lang.Override
  public com.google.apps.drive.activity.v2.User getUser() {
    if (ownerCase_ == 1) {
       return (com.google.apps.drive.activity.v2.User) owner_;
    }
    return com.google.apps.drive.activity.v2.User.getDefaultInstance();
  }
  /**
   * <pre>
   * The user that owns the Drive item.
   * </pre>
   *
   * <code>.google.apps.drive.activity.v2.User user = 1;</code>
   */
  @java.lang.Override
  public com.google.apps.drive.activity.v2.UserOrBuilder getUserOrBuilder() {
    if (ownerCase_ == 1) {
       return (com.google.apps.drive.activity.v2.User) owner_;
    }
    return com.google.apps.drive.activity.v2.User.getDefaultInstance();
  }

  public static final int DRIVE_FIELD_NUMBER = 4;
  /**
   * <pre>
   * The drive that owns the item.
   * </pre>
   *
   * <code>.google.apps.drive.activity.v2.DriveReference drive = 4;</code>
   * @return Whether the drive field is set.
   */
  @java.lang.Override
  public boolean hasDrive() {
    return ownerCase_ == 4;
  }
  /**
   * <pre>
   * The drive that owns the item.
   * </pre>
   *
   * <code>.google.apps.drive.activity.v2.DriveReference drive = 4;</code>
   * @return The drive.
   */
  @java.lang.Override
  public com.google.apps.drive.activity.v2.DriveReference getDrive() {
    if (ownerCase_ == 4) {
       return (com.google.apps.drive.activity.v2.DriveReference) owner_;
    }
    return com.google.apps.drive.activity.v2.DriveReference.getDefaultInstance();
  }
  /**
   * <pre>
   * The drive that owns the item.
   * </pre>
   *
   * <code>.google.apps.drive.activity.v2.DriveReference drive = 4;</code>
   */
  @java.lang.Override
  public com.google.apps.drive.activity.v2.DriveReferenceOrBuilder getDriveOrBuilder() {
    if (ownerCase_ == 4) {
       return (com.google.apps.drive.activity.v2.DriveReference) owner_;
    }
    return com.google.apps.drive.activity.v2.DriveReference.getDefaultInstance();
  }

  public static final int TEAM_DRIVE_FIELD_NUMBER = 2;
  private com.google.apps.drive.activity.v2.TeamDriveReference teamDrive_;
  /**
   * <pre>
   * This field is deprecated; please use the `drive` field instead.
   * </pre>
   *
   * <code>.google.apps.drive.activity.v2.TeamDriveReference team_drive = 2 [deprecated = true];</code>
   * @deprecated google.apps.drive.activity.v2.Owner.team_drive is deprecated.
   *     See google/apps/drive/activity/v2/target.proto;l=185
   * @return Whether the teamDrive field is set.
   */
  @java.lang.Override
  @java.lang.Deprecated public boolean hasTeamDrive() {
    return teamDrive_ != null;
  }
  /**
   * <pre>
   * This field is deprecated; please use the `drive` field instead.
   * </pre>
   *
   * <code>.google.apps.drive.activity.v2.TeamDriveReference team_drive = 2 [deprecated = true];</code>
   * @deprecated google.apps.drive.activity.v2.Owner.team_drive is deprecated.
   *     See google/apps/drive/activity/v2/target.proto;l=185
   * @return The teamDrive.
   */
  @java.lang.Override
  @java.lang.Deprecated public com.google.apps.drive.activity.v2.TeamDriveReference getTeamDrive() {
    return teamDrive_ == null ? com.google.apps.drive.activity.v2.TeamDriveReference.getDefaultInstance() : teamDrive_;
  }
  /**
   * <pre>
   * This field is deprecated; please use the `drive` field instead.
   * </pre>
   *
   * <code>.google.apps.drive.activity.v2.TeamDriveReference team_drive = 2 [deprecated = true];</code>
   */
  @java.lang.Override
  @java.lang.Deprecated public com.google.apps.drive.activity.v2.TeamDriveReferenceOrBuilder getTeamDriveOrBuilder() {
    return getTeamDrive();
  }

  public static final int DOMAIN_FIELD_NUMBER = 3;
  private com.google.apps.drive.activity.v2.Domain domain_;
  /**
   * <pre>
   * The domain of the Drive item owner.
   * </pre>
   *
   * <code>.google.apps.drive.activity.v2.Domain domain = 3;</code>
   * @return Whether the domain field is set.
   */
  @java.lang.Override
  public boolean hasDomain() {
    return domain_ != null;
  }
  /**
   * <pre>
   * The domain of the Drive item owner.
   * </pre>
   *
   * <code>.google.apps.drive.activity.v2.Domain domain = 3;</code>
   * @return The domain.
   */
  @java.lang.Override
  public com.google.apps.drive.activity.v2.Domain getDomain() {
    return domain_ == null ? com.google.apps.drive.activity.v2.Domain.getDefaultInstance() : domain_;
  }
  /**
   * <pre>
   * The domain of the Drive item owner.
   * </pre>
   *
   * <code>.google.apps.drive.activity.v2.Domain domain = 3;</code>
   */
  @java.lang.Override
  public com.google.apps.drive.activity.v2.DomainOrBuilder getDomainOrBuilder() {
    return getDomain();
  }

  private byte memoizedIsInitialized = -1;
  @java.lang.Override
  public final boolean isInitialized() {
    byte isInitialized = memoizedIsInitialized;
    if (isInitialized == 1) return true;
    if (isInitialized == 0) return false;

    memoizedIsInitialized = 1;
    return true;
  }

  @java.lang.Override
  public void writeTo(com.google.protobuf.CodedOutputStream output)
                      throws java.io.IOException {
    if (ownerCase_ == 1) {
      output.writeMessage(1, (com.google.apps.drive.activity.v2.User) owner_);
    }
    if (teamDrive_ != null) {
      output.writeMessage(2, getTeamDrive());
    }
    if (domain_ != null) {
      output.writeMessage(3, getDomain());
    }
    if (ownerCase_ == 4) {
      output.writeMessage(4, (com.google.apps.drive.activity.v2.DriveReference) owner_);
    }
    unknownFields.writeTo(output);
  }

  @java.lang.Override
  public int getSerializedSize() {
    int size = memoizedSize;
    if (size != -1) return size;

    size = 0;
    if (ownerCase_ == 1) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(1, (com.google.apps.drive.activity.v2.User) owner_);
    }
    if (teamDrive_ != null) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(2, getTeamDrive());
    }
    if (domain_ != null) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(3, getDomain());
    }
    if (ownerCase_ == 4) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(4, (com.google.apps.drive.activity.v2.DriveReference) owner_);
    }
    size += unknownFields.getSerializedSize();
    memoizedSize = size;
    return size;
  }

  @java.lang.Override
  public boolean equals(final java.lang.Object obj) {
    if (obj == this) {
     return true;
    }
    if (!(obj instanceof com.google.apps.drive.activity.v2.Owner)) {
      return super.equals(obj);
    }
    com.google.apps.drive.activity.v2.Owner other = (com.google.apps.drive.activity.v2.Owner) obj;

    if (hasTeamDrive() != other.hasTeamDrive()) return false;
    if (hasTeamDrive()) {
      if (!getTeamDrive()
          .equals(other.getTeamDrive())) return false;
    }
    if (hasDomain() != other.hasDomain()) return false;
    if (hasDomain()) {
      if (!getDomain()
          .equals(other.getDomain())) return false;
    }
    if (!getOwnerCase().equals(other.getOwnerCase())) return false;
    switch (ownerCase_) {
      case 1:
        if (!getUser()
            .equals(other.getUser())) return false;
        break;
      case 4:
        if (!getDrive()
            .equals(other.getDrive())) return false;
        break;
      case 0:
      default:
    }
    if (!unknownFields.equals(other.unknownFields)) return false;
    return true;
  }

  @java.lang.Override
  public int hashCode() {
    if (memoizedHashCode != 0) {
      return memoizedHashCode;
    }
    int hash = 41;
    hash = (19 * hash) + getDescriptor().hashCode();
    if (hasTeamDrive()) {
      hash = (37 * hash) + TEAM_DRIVE_FIELD_NUMBER;
      hash = (53 * hash) + getTeamDrive().hashCode();
    }
    if (hasDomain()) {
      hash = (37 * hash) + DOMAIN_FIELD_NUMBER;
      hash = (53 * hash) + getDomain().hashCode();
    }
    switch (ownerCase_) {
      case 1:
        hash = (37 * hash) + USER_FIELD_NUMBER;
        hash = (53 * hash) + getUser().hashCode();
        break;
      case 4:
        hash = (37 * hash) + DRIVE_FIELD_NUMBER;
        hash = (53 * hash) + getDrive().hashCode();
        break;
      case 0:
      default:
    }
    hash = (29 * hash) + unknownFields.hashCode();
    memoizedHashCode = hash;
    return hash;
  }

  public static com.google.apps.drive.activity.v2.Owner parseFrom(
      java.nio.ByteBuffer data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static com.google.apps.drive.activity.v2.Owner parseFrom(
      java.nio.ByteBuffer data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static com.google.apps.drive.activity.v2.Owner parseFrom(
      com.google.protobuf.ByteString data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static com.google.apps.drive.activity.v2.Owner parseFrom(
      com.google.protobuf.ByteString data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static com.google.apps.drive.activity.v2.Owner parseFrom(byte[] data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static com.google.apps.drive.activity.v2.Owner parseFrom(
      byte[] data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static com.google.apps.drive.activity.v2.Owner parseFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input);
  }
  public static com.google.apps.drive.activity.v2.Owner parseFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input, extensionRegistry);
  }
  public static com.google.apps.drive.activity.v2.Owner parseDelimitedFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseDelimitedWithIOException(PARSER, input);
  }
  public static com.google.apps.drive.activity.v2.Owner parseDelimitedFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
  }
  public static com.google.apps.drive.activity.v2.Owner parseFrom(
      com.google.protobuf.CodedInputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input);
  }
  public static com.google.apps.drive.activity.v2.Owner parseFrom(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input, extensionRegistry);
  }

  @java.lang.Override
  public Builder newBuilderForType() { return newBuilder(); }
  public static Builder newBuilder() {
    return DEFAULT_INSTANCE.toBuilder();
  }
  public static Builder newBuilder(com.google.apps.drive.activity.v2.Owner prototype) {
    return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
  }
  @java.lang.Override
  public Builder toBuilder() {
    return this == DEFAULT_INSTANCE
        ? new Builder() : new Builder().mergeFrom(this);
  }

  @java.lang.Override
  protected Builder newBuilderForType(
      com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
    Builder builder = new Builder(parent);
    return builder;
  }
  /**
   * <pre>
   * Information about the owner of a Drive item.
   * </pre>
   *
   * Protobuf type {@code google.apps.drive.activity.v2.Owner}
   */
  public static final class Builder extends
      com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
      // @@protoc_insertion_point(builder_implements:google.apps.drive.activity.v2.Owner)
      com.google.apps.drive.activity.v2.OwnerOrBuilder {
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.google.apps.drive.activity.v2.TargetProto.internal_static_google_apps_drive_activity_v2_Owner_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.google.apps.drive.activity.v2.TargetProto.internal_static_google_apps_drive_activity_v2_Owner_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.google.apps.drive.activity.v2.Owner.class, com.google.apps.drive.activity.v2.Owner.Builder.class);
    }

    // Construct using com.google.apps.drive.activity.v2.Owner.newBuilder()
    private Builder() {
      maybeForceBuilderInitialization();
    }

    private Builder(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      super(parent);
      maybeForceBuilderInitialization();
    }
    private void maybeForceBuilderInitialization() {
      if (com.google.protobuf.GeneratedMessageV3
              .alwaysUseFieldBuilders) {
      }
    }
    @java.lang.Override
    public Builder clear() {
      super.clear();
      if (teamDriveBuilder_ == null) {
        teamDrive_ = null;
      } else {
        teamDrive_ = null;
        teamDriveBuilder_ = null;
      }
      if (domainBuilder_ == null) {
        domain_ = null;
      } else {
        domain_ = null;
        domainBuilder_ = null;
      }
      ownerCase_ = 0;
      owner_ = null;
      return this;
    }

    @java.lang.Override
    public com.google.protobuf.Descriptors.Descriptor
        getDescriptorForType() {
      return com.google.apps.drive.activity.v2.TargetProto.internal_static_google_apps_drive_activity_v2_Owner_descriptor;
    }

    @java.lang.Override
    public com.google.apps.drive.activity.v2.Owner getDefaultInstanceForType() {
      return com.google.apps.drive.activity.v2.Owner.getDefaultInstance();
    }

    @java.lang.Override
    public com.google.apps.drive.activity.v2.Owner build() {
      com.google.apps.drive.activity.v2.Owner result = buildPartial();
      if (!result.isInitialized()) {
        throw newUninitializedMessageException(result);
      }
      return result;
    }

    @java.lang.Override
    public com.google.apps.drive.activity.v2.Owner buildPartial() {
      com.google.apps.drive.activity.v2.Owner result = new com.google.apps.drive.activity.v2.Owner(this);
      if (ownerCase_ == 1) {
        if (userBuilder_ == null) {
          result.owner_ = owner_;
        } else {
          result.owner_ = userBuilder_.build();
        }
      }
      if (ownerCase_ == 4) {
        if (driveBuilder_ == null) {
          result.owner_ = owner_;
        } else {
          result.owner_ = driveBuilder_.build();
        }
      }
      if (teamDriveBuilder_ == null) {
        result.teamDrive_ = teamDrive_;
      } else {
        result.teamDrive_ = teamDriveBuilder_.build();
      }
      if (domainBuilder_ == null) {
        result.domain_ = domain_;
      } else {
        result.domain_ = domainBuilder_.build();
      }
      result.ownerCase_ = ownerCase_;
      onBuilt();
      return result;
    }

    @java.lang.Override
    public Builder clone() {
      return super.clone();
    }
    @java.lang.Override
    public Builder setField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        java.lang.Object value) {
      return super.setField(field, value);
    }
    @java.lang.Override
    public Builder clearField(
        com.google.protobuf.Descriptors.FieldDescriptor field) {
      return super.clearField(field);
    }
    @java.lang.Override
    public Builder clearOneof(
        com.google.protobuf.Descriptors.OneofDescriptor oneof) {
      return super.clearOneof(oneof);
    }
    @java.lang.Override
    public Builder setRepeatedField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        int index, java.lang.Object value) {
      return super.setRepeatedField(field, index, value);
    }
    @java.lang.Override
    public Builder addRepeatedField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        java.lang.Object value) {
      return super.addRepeatedField(field, value);
    }
    @java.lang.Override
    public Builder mergeFrom(com.google.protobuf.Message other) {
      if (other instanceof com.google.apps.drive.activity.v2.Owner) {
        return mergeFrom((com.google.apps.drive.activity.v2.Owner)other);
      } else {
        super.mergeFrom(other);
        return this;
      }
    }

    public Builder mergeFrom(com.google.apps.drive.activity.v2.Owner other) {
      if (other == com.google.apps.drive.activity.v2.Owner.getDefaultInstance()) return this;
      if (other.hasTeamDrive()) {
        mergeTeamDrive(other.getTeamDrive());
      }
      if (other.hasDomain()) {
        mergeDomain(other.getDomain());
      }
      switch (other.getOwnerCase()) {
        case USER: {
          mergeUser(other.getUser());
          break;
        }
        case DRIVE: {
          mergeDrive(other.getDrive());
          break;
        }
        case OWNER_NOT_SET: {
          break;
        }
      }
      this.mergeUnknownFields(other.unknownFields);
      onChanged();
      return this;
    }

    @java.lang.Override
    public final boolean isInitialized() {
      return true;
    }

    @java.lang.Override
    public Builder mergeFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      com.google.apps.drive.activity.v2.Owner parsedMessage = null;
      try {
        parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        parsedMessage = (com.google.apps.drive.activity.v2.Owner) e.getUnfinishedMessage();
        throw e.unwrapIOException();
      } finally {
        if (parsedMessage != null) {
          mergeFrom(parsedMessage);
        }
      }
      return this;
    }
    private int ownerCase_ = 0;
    private java.lang.Object owner_;
    public OwnerCase
        getOwnerCase() {
      return OwnerCase.forNumber(
          ownerCase_);
    }

    public Builder clearOwner() {
      ownerCase_ = 0;
      owner_ = null;
      onChanged();
      return this;
    }


    private com.google.protobuf.SingleFieldBuilderV3<
        com.google.apps.drive.activity.v2.User, com.google.apps.drive.activity.v2.User.Builder, com.google.apps.drive.activity.v2.UserOrBuilder> userBuilder_;
    /**
     * <pre>
     * The user that owns the Drive item.
     * </pre>
     *
     * <code>.google.apps.drive.activity.v2.User user = 1;</code>
     * @return Whether the user field is set.
     */
    @java.lang.Override
    public boolean hasUser() {
      return ownerCase_ == 1;
    }
    /**
     * <pre>
     * The user that owns the Drive item.
     * </pre>
     *
     * <code>.google.apps.drive.activity.v2.User user = 1;</code>
     * @return The user.
     */
    @java.lang.Override
    public com.google.apps.drive.activity.v2.User getUser() {
      if (userBuilder_ == null) {
        if (ownerCase_ == 1) {
          return (com.google.apps.drive.activity.v2.User) owner_;
        }
        return com.google.apps.drive.activity.v2.User.getDefaultInstance();
      } else {
        if (ownerCase_ == 1) {
          return userBuilder_.getMessage();
        }
        return com.google.apps.drive.activity.v2.User.getDefaultInstance();
      }
    }
    /**
     * <pre>
     * The user that owns the Drive item.
     * </pre>
     *
     * <code>.google.apps.drive.activity.v2.User user = 1;</code>
     */
    public Builder setUser(com.google.apps.drive.activity.v2.User value) {
      if (userBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        owner_ = value;
        onChanged();
      } else {
        userBuilder_.setMessage(value);
      }
      ownerCase_ = 1;
      return this;
    }
    /**
     * <pre>
     * The user that owns the Drive item.
     * </pre>
     *
     * <code>.google.apps.drive.activity.v2.User user = 1;</code>
     */
    public Builder setUser(
        com.google.apps.drive.activity.v2.User.Builder builderForValue) {
      if (userBuilder_ == null) {
        owner_ = builderForValue.build();
        onChanged();
      } else {
        userBuilder_.setMessage(builderForValue.build());
      }
      ownerCase_ = 1;
      return this;
    }
    /**
     * <pre>
     * The user that owns the Drive item.
     * </pre>
     *
     * <code>.google.apps.drive.activity.v2.User user = 1;</code>
     */
    public Builder mergeUser(com.google.apps.drive.activity.v2.User value) {
      if (userBuilder_ == null) {
        if (ownerCase_ == 1 &&
            owner_ != com.google.apps.drive.activity.v2.User.getDefaultInstance()) {
          owner_ = com.google.apps.drive.activity.v2.User.newBuilder((com.google.apps.drive.activity.v2.User) owner_)
              .mergeFrom(value).buildPartial();
        } else {
          owner_ = value;
        }
        onChanged();
      } else {
        if (ownerCase_ == 1) {
          userBuilder_.mergeFrom(value);
        } else {
          userBuilder_.setMessage(value);
        }
      }
      ownerCase_ = 1;
      return this;
    }
    /**
     * <pre>
     * The user that owns the Drive item.
     * </pre>
     *
     * <code>.google.apps.drive.activity.v2.User user = 1;</code>
     */
    public Builder clearUser() {
      if (userBuilder_ == null) {
        if (ownerCase_ == 1) {
          ownerCase_ = 0;
          owner_ = null;
          onChanged();
        }
      } else {
        if (ownerCase_ == 1) {
          ownerCase_ = 0;
          owner_ = null;
        }
        userBuilder_.clear();
      }
      return this;
    }
    /**
     * <pre>
     * The user that owns the Drive item.
     * </pre>
     *
     * <code>.google.apps.drive.activity.v2.User user = 1;</code>
     */
    public com.google.apps.drive.activity.v2.User.Builder getUserBuilder() {
      return getUserFieldBuilder().getBuilder();
    }
    /**
     * <pre>
     * The user that owns the Drive item.
     * </pre>
     *
     * <code>.google.apps.drive.activity.v2.User user = 1;</code>
     */
    @java.lang.Override
    public com.google.apps.drive.activity.v2.UserOrBuilder getUserOrBuilder() {
      if ((ownerCase_ == 1) && (userBuilder_ != null)) {
        return userBuilder_.getMessageOrBuilder();
      } else {
        if (ownerCase_ == 1) {
          return (com.google.apps.drive.activity.v2.User) owner_;
        }
        return com.google.apps.drive.activity.v2.User.getDefaultInstance();
      }
    }
    /**
     * <pre>
     * The user that owns the Drive item.
     * </pre>
     *
     * <code>.google.apps.drive.activity.v2.User user = 1;</code>
     */
    private com.google.protobuf.SingleFieldBuilderV3<
        com.google.apps.drive.activity.v2.User, com.google.apps.drive.activity.v2.User.Builder, com.google.apps.drive.activity.v2.UserOrBuilder> 
        getUserFieldBuilder() {
      if (userBuilder_ == null) {
        if (!(ownerCase_ == 1)) {
          owner_ = com.google.apps.drive.activity.v2.User.getDefaultInstance();
        }
        userBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
            com.google.apps.drive.activity.v2.User, com.google.apps.drive.activity.v2.User.Builder, com.google.apps.drive.activity.v2.UserOrBuilder>(
                (com.google.apps.drive.activity.v2.User) owner_,
                getParentForChildren(),
                isClean());
        owner_ = null;
      }
      ownerCase_ = 1;
      onChanged();;
      return userBuilder_;
    }

    private com.google.protobuf.SingleFieldBuilderV3<
        com.google.apps.drive.activity.v2.DriveReference, com.google.apps.drive.activity.v2.DriveReference.Builder, com.google.apps.drive.activity.v2.DriveReferenceOrBuilder> driveBuilder_;
    /**
     * <pre>
     * The drive that owns the item.
     * </pre>
     *
     * <code>.google.apps.drive.activity.v2.DriveReference drive = 4;</code>
     * @return Whether the drive field is set.
     */
    @java.lang.Override
    public boolean hasDrive() {
      return ownerCase_ == 4;
    }
    /**
     * <pre>
     * The drive that owns the item.
     * </pre>
     *
     * <code>.google.apps.drive.activity.v2.DriveReference drive = 4;</code>
     * @return The drive.
     */
    @java.lang.Override
    public com.google.apps.drive.activity.v2.DriveReference getDrive() {
      if (driveBuilder_ == null) {
        if (ownerCase_ == 4) {
          return (com.google.apps.drive.activity.v2.DriveReference) owner_;
        }
        return com.google.apps.drive.activity.v2.DriveReference.getDefaultInstance();
      } else {
        if (ownerCase_ == 4) {
          return driveBuilder_.getMessage();
        }
        return com.google.apps.drive.activity.v2.DriveReference.getDefaultInstance();
      }
    }
    /**
     * <pre>
     * The drive that owns the item.
     * </pre>
     *
     * <code>.google.apps.drive.activity.v2.DriveReference drive = 4;</code>
     */
    public Builder setDrive(com.google.apps.drive.activity.v2.DriveReference value) {
      if (driveBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        owner_ = value;
        onChanged();
      } else {
        driveBuilder_.setMessage(value);
      }
      ownerCase_ = 4;
      return this;
    }
    /**
     * <pre>
     * The drive that owns the item.
     * </pre>
     *
     * <code>.google.apps.drive.activity.v2.DriveReference drive = 4;</code>
     */
    public Builder setDrive(
        com.google.apps.drive.activity.v2.DriveReference.Builder builderForValue) {
      if (driveBuilder_ == null) {
        owner_ = builderForValue.build();
        onChanged();
      } else {
        driveBuilder_.setMessage(builderForValue.build());
      }
      ownerCase_ = 4;
      return this;
    }
    /**
     * <pre>
     * The drive that owns the item.
     * </pre>
     *
     * <code>.google.apps.drive.activity.v2.DriveReference drive = 4;</code>
     */
    public Builder mergeDrive(com.google.apps.drive.activity.v2.DriveReference value) {
      if (driveBuilder_ == null) {
        if (ownerCase_ == 4 &&
            owner_ != com.google.apps.drive.activity.v2.DriveReference.getDefaultInstance()) {
          owner_ = com.google.apps.drive.activity.v2.DriveReference.newBuilder((com.google.apps.drive.activity.v2.DriveReference) owner_)
              .mergeFrom(value).buildPartial();
        } else {
          owner_ = value;
        }
        onChanged();
      } else {
        if (ownerCase_ == 4) {
          driveBuilder_.mergeFrom(value);
        } else {
          driveBuilder_.setMessage(value);
        }
      }
      ownerCase_ = 4;
      return this;
    }
    /**
     * <pre>
     * The drive that owns the item.
     * </pre>
     *
     * <code>.google.apps.drive.activity.v2.DriveReference drive = 4;</code>
     */
    public Builder clearDrive() {
      if (driveBuilder_ == null) {
        if (ownerCase_ == 4) {
          ownerCase_ = 0;
          owner_ = null;
          onChanged();
        }
      } else {
        if (ownerCase_ == 4) {
          ownerCase_ = 0;
          owner_ = null;
        }
        driveBuilder_.clear();
      }
      return this;
    }
    /**
     * <pre>
     * The drive that owns the item.
     * </pre>
     *
     * <code>.google.apps.drive.activity.v2.DriveReference drive = 4;</code>
     */
    public com.google.apps.drive.activity.v2.DriveReference.Builder getDriveBuilder() {
      return getDriveFieldBuilder().getBuilder();
    }
    /**
     * <pre>
     * The drive that owns the item.
     * </pre>
     *
     * <code>.google.apps.drive.activity.v2.DriveReference drive = 4;</code>
     */
    @java.lang.Override
    public com.google.apps.drive.activity.v2.DriveReferenceOrBuilder getDriveOrBuilder() {
      if ((ownerCase_ == 4) && (driveBuilder_ != null)) {
        return driveBuilder_.getMessageOrBuilder();
      } else {
        if (ownerCase_ == 4) {
          return (com.google.apps.drive.activity.v2.DriveReference) owner_;
        }
        return com.google.apps.drive.activity.v2.DriveReference.getDefaultInstance();
      }
    }
    /**
     * <pre>
     * The drive that owns the item.
     * </pre>
     *
     * <code>.google.apps.drive.activity.v2.DriveReference drive = 4;</code>
     */
    private com.google.protobuf.SingleFieldBuilderV3<
        com.google.apps.drive.activity.v2.DriveReference, com.google.apps.drive.activity.v2.DriveReference.Builder, com.google.apps.drive.activity.v2.DriveReferenceOrBuilder> 
        getDriveFieldBuilder() {
      if (driveBuilder_ == null) {
        if (!(ownerCase_ == 4)) {
          owner_ = com.google.apps.drive.activity.v2.DriveReference.getDefaultInstance();
        }
        driveBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
            com.google.apps.drive.activity.v2.DriveReference, com.google.apps.drive.activity.v2.DriveReference.Builder, com.google.apps.drive.activity.v2.DriveReferenceOrBuilder>(
                (com.google.apps.drive.activity.v2.DriveReference) owner_,
                getParentForChildren(),
                isClean());
        owner_ = null;
      }
      ownerCase_ = 4;
      onChanged();;
      return driveBuilder_;
    }

    private com.google.apps.drive.activity.v2.TeamDriveReference teamDrive_;
    private com.google.protobuf.SingleFieldBuilderV3<
        com.google.apps.drive.activity.v2.TeamDriveReference, com.google.apps.drive.activity.v2.TeamDriveReference.Builder, com.google.apps.drive.activity.v2.TeamDriveReferenceOrBuilder> teamDriveBuilder_;
    /**
     * <pre>
     * This field is deprecated; please use the `drive` field instead.
     * </pre>
     *
     * <code>.google.apps.drive.activity.v2.TeamDriveReference team_drive = 2 [deprecated = true];</code>
     * @deprecated google.apps.drive.activity.v2.Owner.team_drive is deprecated.
     *     See google/apps/drive/activity/v2/target.proto;l=185
     * @return Whether the teamDrive field is set.
     */
    @java.lang.Deprecated public boolean hasTeamDrive() {
      return teamDriveBuilder_ != null || teamDrive_ != null;
    }
    /**
     * <pre>
     * This field is deprecated; please use the `drive` field instead.
     * </pre>
     *
     * <code>.google.apps.drive.activity.v2.TeamDriveReference team_drive = 2 [deprecated = true];</code>
     * @deprecated google.apps.drive.activity.v2.Owner.team_drive is deprecated.
     *     See google/apps/drive/activity/v2/target.proto;l=185
     * @return The teamDrive.
     */
    @java.lang.Deprecated public com.google.apps.drive.activity.v2.TeamDriveReference getTeamDrive() {
      if (teamDriveBuilder_ == null) {
        return teamDrive_ == null ? com.google.apps.drive.activity.v2.TeamDriveReference.getDefaultInstance() : teamDrive_;
      } else {
        return teamDriveBuilder_.getMessage();
      }
    }
    /**
     * <pre>
     * This field is deprecated; please use the `drive` field instead.
     * </pre>
     *
     * <code>.google.apps.drive.activity.v2.TeamDriveReference team_drive = 2 [deprecated = true];</code>
     */
    @java.lang.Deprecated public Builder setTeamDrive(com.google.apps.drive.activity.v2.TeamDriveReference value) {
      if (teamDriveBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        teamDrive_ = value;
        onChanged();
      } else {
        teamDriveBuilder_.setMessage(value);
      }

      return this;
    }
    /**
     * <pre>
     * This field is deprecated; please use the `drive` field instead.
     * </pre>
     *
     * <code>.google.apps.drive.activity.v2.TeamDriveReference team_drive = 2 [deprecated = true];</code>
     */
    @java.lang.Deprecated public Builder setTeamDrive(
        com.google.apps.drive.activity.v2.TeamDriveReference.Builder builderForValue) {
      if (teamDriveBuilder_ == null) {
        teamDrive_ = builderForValue.build();
        onChanged();
      } else {
        teamDriveBuilder_.setMessage(builderForValue.build());
      }

      return this;
    }
    /**
     * <pre>
     * This field is deprecated; please use the `drive` field instead.
     * </pre>
     *
     * <code>.google.apps.drive.activity.v2.TeamDriveReference team_drive = 2 [deprecated = true];</code>
     */
    @java.lang.Deprecated public Builder mergeTeamDrive(com.google.apps.drive.activity.v2.TeamDriveReference value) {
      if (teamDriveBuilder_ == null) {
        if (teamDrive_ != null) {
          teamDrive_ =
            com.google.apps.drive.activity.v2.TeamDriveReference.newBuilder(teamDrive_).mergeFrom(value).buildPartial();
        } else {
          teamDrive_ = value;
        }
        onChanged();
      } else {
        teamDriveBuilder_.mergeFrom(value);
      }

      return this;
    }
    /**
     * <pre>
     * This field is deprecated; please use the `drive` field instead.
     * </pre>
     *
     * <code>.google.apps.drive.activity.v2.TeamDriveReference team_drive = 2 [deprecated = true];</code>
     */
    @java.lang.Deprecated public Builder clearTeamDrive() {
      if (teamDriveBuilder_ == null) {
        teamDrive_ = null;
        onChanged();
      } else {
        teamDrive_ = null;
        teamDriveBuilder_ = null;
      }

      return this;
    }
    /**
     * <pre>
     * This field is deprecated; please use the `drive` field instead.
     * </pre>
     *
     * <code>.google.apps.drive.activity.v2.TeamDriveReference team_drive = 2 [deprecated = true];</code>
     */
    @java.lang.Deprecated public com.google.apps.drive.activity.v2.TeamDriveReference.Builder getTeamDriveBuilder() {
      
      onChanged();
      return getTeamDriveFieldBuilder().getBuilder();
    }
    /**
     * <pre>
     * This field is deprecated; please use the `drive` field instead.
     * </pre>
     *
     * <code>.google.apps.drive.activity.v2.TeamDriveReference team_drive = 2 [deprecated = true];</code>
     */
    @java.lang.Deprecated public com.google.apps.drive.activity.v2.TeamDriveReferenceOrBuilder getTeamDriveOrBuilder() {
      if (teamDriveBuilder_ != null) {
        return teamDriveBuilder_.getMessageOrBuilder();
      } else {
        return teamDrive_ == null ?
            com.google.apps.drive.activity.v2.TeamDriveReference.getDefaultInstance() : teamDrive_;
      }
    }
    /**
     * <pre>
     * This field is deprecated; please use the `drive` field instead.
     * </pre>
     *
     * <code>.google.apps.drive.activity.v2.TeamDriveReference team_drive = 2 [deprecated = true];</code>
     */
    private com.google.protobuf.SingleFieldBuilderV3<
        com.google.apps.drive.activity.v2.TeamDriveReference, com.google.apps.drive.activity.v2.TeamDriveReference.Builder, com.google.apps.drive.activity.v2.TeamDriveReferenceOrBuilder> 
        getTeamDriveFieldBuilder() {
      if (teamDriveBuilder_ == null) {
        teamDriveBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
            com.google.apps.drive.activity.v2.TeamDriveReference, com.google.apps.drive.activity.v2.TeamDriveReference.Builder, com.google.apps.drive.activity.v2.TeamDriveReferenceOrBuilder>(
                getTeamDrive(),
                getParentForChildren(),
                isClean());
        teamDrive_ = null;
      }
      return teamDriveBuilder_;
    }

    private com.google.apps.drive.activity.v2.Domain domain_;
    private com.google.protobuf.SingleFieldBuilderV3<
        com.google.apps.drive.activity.v2.Domain, com.google.apps.drive.activity.v2.Domain.Builder, com.google.apps.drive.activity.v2.DomainOrBuilder> domainBuilder_;
    /**
     * <pre>
     * The domain of the Drive item owner.
     * </pre>
     *
     * <code>.google.apps.drive.activity.v2.Domain domain = 3;</code>
     * @return Whether the domain field is set.
     */
    public boolean hasDomain() {
      return domainBuilder_ != null || domain_ != null;
    }
    /**
     * <pre>
     * The domain of the Drive item owner.
     * </pre>
     *
     * <code>.google.apps.drive.activity.v2.Domain domain = 3;</code>
     * @return The domain.
     */
    public com.google.apps.drive.activity.v2.Domain getDomain() {
      if (domainBuilder_ == null) {
        return domain_ == null ? com.google.apps.drive.activity.v2.Domain.getDefaultInstance() : domain_;
      } else {
        return domainBuilder_.getMessage();
      }
    }
    /**
     * <pre>
     * The domain of the Drive item owner.
     * </pre>
     *
     * <code>.google.apps.drive.activity.v2.Domain domain = 3;</code>
     */
    public Builder setDomain(com.google.apps.drive.activity.v2.Domain value) {
      if (domainBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        domain_ = value;
        onChanged();
      } else {
        domainBuilder_.setMessage(value);
      }

      return this;
    }
    /**
     * <pre>
     * The domain of the Drive item owner.
     * </pre>
     *
     * <code>.google.apps.drive.activity.v2.Domain domain = 3;</code>
     */
    public Builder setDomain(
        com.google.apps.drive.activity.v2.Domain.Builder builderForValue) {
      if (domainBuilder_ == null) {
        domain_ = builderForValue.build();
        onChanged();
      } else {
        domainBuilder_.setMessage(builderForValue.build());
      }

      return this;
    }
    /**
     * <pre>
     * The domain of the Drive item owner.
     * </pre>
     *
     * <code>.google.apps.drive.activity.v2.Domain domain = 3;</code>
     */
    public Builder mergeDomain(com.google.apps.drive.activity.v2.Domain value) {
      if (domainBuilder_ == null) {
        if (domain_ != null) {
          domain_ =
            com.google.apps.drive.activity.v2.Domain.newBuilder(domain_).mergeFrom(value).buildPartial();
        } else {
          domain_ = value;
        }
        onChanged();
      } else {
        domainBuilder_.mergeFrom(value);
      }

      return this;
    }
    /**
     * <pre>
     * The domain of the Drive item owner.
     * </pre>
     *
     * <code>.google.apps.drive.activity.v2.Domain domain = 3;</code>
     */
    public Builder clearDomain() {
      if (domainBuilder_ == null) {
        domain_ = null;
        onChanged();
      } else {
        domain_ = null;
        domainBuilder_ = null;
      }

      return this;
    }
    /**
     * <pre>
     * The domain of the Drive item owner.
     * </pre>
     *
     * <code>.google.apps.drive.activity.v2.Domain domain = 3;</code>
     */
    public com.google.apps.drive.activity.v2.Domain.Builder getDomainBuilder() {
      
      onChanged();
      return getDomainFieldBuilder().getBuilder();
    }
    /**
     * <pre>
     * The domain of the Drive item owner.
     * </pre>
     *
     * <code>.google.apps.drive.activity.v2.Domain domain = 3;</code>
     */
    public com.google.apps.drive.activity.v2.DomainOrBuilder getDomainOrBuilder() {
      if (domainBuilder_ != null) {
        return domainBuilder_.getMessageOrBuilder();
      } else {
        return domain_ == null ?
            com.google.apps.drive.activity.v2.Domain.getDefaultInstance() : domain_;
      }
    }
    /**
     * <pre>
     * The domain of the Drive item owner.
     * </pre>
     *
     * <code>.google.apps.drive.activity.v2.Domain domain = 3;</code>
     */
    private com.google.protobuf.SingleFieldBuilderV3<
        com.google.apps.drive.activity.v2.Domain, com.google.apps.drive.activity.v2.Domain.Builder, com.google.apps.drive.activity.v2.DomainOrBuilder> 
        getDomainFieldBuilder() {
      if (domainBuilder_ == null) {
        domainBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
            com.google.apps.drive.activity.v2.Domain, com.google.apps.drive.activity.v2.Domain.Builder, com.google.apps.drive.activity.v2.DomainOrBuilder>(
                getDomain(),
                getParentForChildren(),
                isClean());
        domain_ = null;
      }
      return domainBuilder_;
    }
    @java.lang.Override
    public final Builder setUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return super.setUnknownFields(unknownFields);
    }

    @java.lang.Override
    public final Builder mergeUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return super.mergeUnknownFields(unknownFields);
    }


    // @@protoc_insertion_point(builder_scope:google.apps.drive.activity.v2.Owner)
  }

  // @@protoc_insertion_point(class_scope:google.apps.drive.activity.v2.Owner)
  private static final com.google.apps.drive.activity.v2.Owner DEFAULT_INSTANCE;
  static {
    DEFAULT_INSTANCE = new com.google.apps.drive.activity.v2.Owner();
  }

  public static com.google.apps.drive.activity.v2.Owner getDefaultInstance() {
    return DEFAULT_INSTANCE;
  }

  private static final com.google.protobuf.Parser<Owner>
      PARSER = new com.google.protobuf.AbstractParser<Owner>() {
    @java.lang.Override
    public Owner parsePartialFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return new Owner(input, extensionRegistry);
    }
  };

  public static com.google.protobuf.Parser<Owner> parser() {
    return PARSER;
  }

  @java.lang.Override
  public com.google.protobuf.Parser<Owner> getParserForType() {
    return PARSER;
  }

  @java.lang.Override
  public com.google.apps.drive.activity.v2.Owner getDefaultInstanceForType() {
    return DEFAULT_INSTANCE;
  }

}

