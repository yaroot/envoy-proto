// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: google/assistant/embedded/v1alpha1/embedded_assistant.proto

package com.google.assistant.embedded.v1alpha1;

public interface ConverseResponseOrBuilder extends
    // @@protoc_insertion_point(interface_extends:google.assistant.embedded.v1alpha1.ConverseResponse)
    com.google.protobuf.MessageOrBuilder {

  /**
   * <pre>
   * *Output-only* If set, returns a [google.rpc.Status][google.rpc.Status]
   * message that specifies the error for the operation. If an error occurs
   * during processing, this message will be set and there will be no further
   * messages sent.
   * </pre>
   *
   * <code>.google.rpc.Status error = 1;</code>
   * @return Whether the error field is set.
   */
  boolean hasError();
  /**
   * <pre>
   * *Output-only* If set, returns a [google.rpc.Status][google.rpc.Status]
   * message that specifies the error for the operation. If an error occurs
   * during processing, this message will be set and there will be no further
   * messages sent.
   * </pre>
   *
   * <code>.google.rpc.Status error = 1;</code>
   * @return The error.
   */
  com.google.rpc.Status getError();
  /**
   * <pre>
   * *Output-only* If set, returns a [google.rpc.Status][google.rpc.Status]
   * message that specifies the error for the operation. If an error occurs
   * during processing, this message will be set and there will be no further
   * messages sent.
   * </pre>
   *
   * <code>.google.rpc.Status error = 1;</code>
   */
  com.google.rpc.StatusOrBuilder getErrorOrBuilder();

  /**
   * <pre>
   * *Output-only* Indicates the type of event.
   * </pre>
   *
   * <code>.google.assistant.embedded.v1alpha1.ConverseResponse.EventType event_type = 2;</code>
   * @return Whether the eventType field is set.
   */
  boolean hasEventType();
  /**
   * <pre>
   * *Output-only* Indicates the type of event.
   * </pre>
   *
   * <code>.google.assistant.embedded.v1alpha1.ConverseResponse.EventType event_type = 2;</code>
   * @return The enum numeric value on the wire for eventType.
   */
  int getEventTypeValue();
  /**
   * <pre>
   * *Output-only* Indicates the type of event.
   * </pre>
   *
   * <code>.google.assistant.embedded.v1alpha1.ConverseResponse.EventType event_type = 2;</code>
   * @return The eventType.
   */
  com.google.assistant.embedded.v1alpha1.ConverseResponse.EventType getEventType();

  /**
   * <pre>
   * *Output-only* The audio containing the assistant's response to the query.
   * </pre>
   *
   * <code>.google.assistant.embedded.v1alpha1.AudioOut audio_out = 3;</code>
   * @return Whether the audioOut field is set.
   */
  boolean hasAudioOut();
  /**
   * <pre>
   * *Output-only* The audio containing the assistant's response to the query.
   * </pre>
   *
   * <code>.google.assistant.embedded.v1alpha1.AudioOut audio_out = 3;</code>
   * @return The audioOut.
   */
  com.google.assistant.embedded.v1alpha1.AudioOut getAudioOut();
  /**
   * <pre>
   * *Output-only* The audio containing the assistant's response to the query.
   * </pre>
   *
   * <code>.google.assistant.embedded.v1alpha1.AudioOut audio_out = 3;</code>
   */
  com.google.assistant.embedded.v1alpha1.AudioOutOrBuilder getAudioOutOrBuilder();

  /**
   * <pre>
   * *Output-only* The semantic result for the user's spoken query.
   * </pre>
   *
   * <code>.google.assistant.embedded.v1alpha1.ConverseResult result = 5;</code>
   * @return Whether the result field is set.
   */
  boolean hasResult();
  /**
   * <pre>
   * *Output-only* The semantic result for the user's spoken query.
   * </pre>
   *
   * <code>.google.assistant.embedded.v1alpha1.ConverseResult result = 5;</code>
   * @return The result.
   */
  com.google.assistant.embedded.v1alpha1.ConverseResult getResult();
  /**
   * <pre>
   * *Output-only* The semantic result for the user's spoken query.
   * </pre>
   *
   * <code>.google.assistant.embedded.v1alpha1.ConverseResult result = 5;</code>
   */
  com.google.assistant.embedded.v1alpha1.ConverseResultOrBuilder getResultOrBuilder();

  public com.google.assistant.embedded.v1alpha1.ConverseResponse.ConverseResponseCase getConverseResponseCase();
}
