// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: google/chromeos/uidetection/v1/ui_detection.proto

package com.google.chromeos.uidetection.v1;

/**
 * <pre>
 * Detection type specifies what to detect in the image.
 * </pre>
 *
 * Protobuf type {@code google.chromeos.uidetection.v1.DetectionRequest}
 */
public final class DetectionRequest extends
    com.google.protobuf.GeneratedMessageV3 implements
    // @@protoc_insertion_point(message_implements:google.chromeos.uidetection.v1.DetectionRequest)
    DetectionRequestOrBuilder {
private static final long serialVersionUID = 0L;
  // Use DetectionRequest.newBuilder() to construct.
  private DetectionRequest(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
    super(builder);
  }
  private DetectionRequest() {
  }

  @java.lang.Override
  @SuppressWarnings({"unused"})
  protected java.lang.Object newInstance(
      UnusedPrivateParameter unused) {
    return new DetectionRequest();
  }

  @java.lang.Override
  public final com.google.protobuf.UnknownFieldSet
  getUnknownFields() {
    return this.unknownFields;
  }
  private DetectionRequest(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    this();
    if (extensionRegistry == null) {
      throw new java.lang.NullPointerException();
    }
    com.google.protobuf.UnknownFieldSet.Builder unknownFields =
        com.google.protobuf.UnknownFieldSet.newBuilder();
    try {
      boolean done = false;
      while (!done) {
        int tag = input.readTag();
        switch (tag) {
          case 0:
            done = true;
            break;
          case 10: {
            com.google.chromeos.uidetection.v1.WordDetectionRequest.Builder subBuilder = null;
            if (detectionRequestTypeCase_ == 1) {
              subBuilder = ((com.google.chromeos.uidetection.v1.WordDetectionRequest) detectionRequestType_).toBuilder();
            }
            detectionRequestType_ =
                input.readMessage(com.google.chromeos.uidetection.v1.WordDetectionRequest.parser(), extensionRegistry);
            if (subBuilder != null) {
              subBuilder.mergeFrom((com.google.chromeos.uidetection.v1.WordDetectionRequest) detectionRequestType_);
              detectionRequestType_ = subBuilder.buildPartial();
            }
            detectionRequestTypeCase_ = 1;
            break;
          }
          case 18: {
            com.google.chromeos.uidetection.v1.TextBlockDetectionRequest.Builder subBuilder = null;
            if (detectionRequestTypeCase_ == 2) {
              subBuilder = ((com.google.chromeos.uidetection.v1.TextBlockDetectionRequest) detectionRequestType_).toBuilder();
            }
            detectionRequestType_ =
                input.readMessage(com.google.chromeos.uidetection.v1.TextBlockDetectionRequest.parser(), extensionRegistry);
            if (subBuilder != null) {
              subBuilder.mergeFrom((com.google.chromeos.uidetection.v1.TextBlockDetectionRequest) detectionRequestType_);
              detectionRequestType_ = subBuilder.buildPartial();
            }
            detectionRequestTypeCase_ = 2;
            break;
          }
          case 26: {
            com.google.chromeos.uidetection.v1.CustomIconDetectionRequest.Builder subBuilder = null;
            if (detectionRequestTypeCase_ == 3) {
              subBuilder = ((com.google.chromeos.uidetection.v1.CustomIconDetectionRequest) detectionRequestType_).toBuilder();
            }
            detectionRequestType_ =
                input.readMessage(com.google.chromeos.uidetection.v1.CustomIconDetectionRequest.parser(), extensionRegistry);
            if (subBuilder != null) {
              subBuilder.mergeFrom((com.google.chromeos.uidetection.v1.CustomIconDetectionRequest) detectionRequestType_);
              detectionRequestType_ = subBuilder.buildPartial();
            }
            detectionRequestTypeCase_ = 3;
            break;
          }
          default: {
            if (!parseUnknownField(
                input, unknownFields, extensionRegistry, tag)) {
              done = true;
            }
            break;
          }
        }
      }
    } catch (com.google.protobuf.InvalidProtocolBufferException e) {
      throw e.setUnfinishedMessage(this);
    } catch (com.google.protobuf.UninitializedMessageException e) {
      throw e.asInvalidProtocolBufferException().setUnfinishedMessage(this);
    } catch (java.io.IOException e) {
      throw new com.google.protobuf.InvalidProtocolBufferException(
          e).setUnfinishedMessage(this);
    } finally {
      this.unknownFields = unknownFields.build();
      makeExtensionsImmutable();
    }
  }
  public static final com.google.protobuf.Descriptors.Descriptor
      getDescriptor() {
    return com.google.chromeos.uidetection.v1.UiDetectionProto.internal_static_google_chromeos_uidetection_v1_DetectionRequest_descriptor;
  }

  @java.lang.Override
  protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internalGetFieldAccessorTable() {
    return com.google.chromeos.uidetection.v1.UiDetectionProto.internal_static_google_chromeos_uidetection_v1_DetectionRequest_fieldAccessorTable
        .ensureFieldAccessorsInitialized(
            com.google.chromeos.uidetection.v1.DetectionRequest.class, com.google.chromeos.uidetection.v1.DetectionRequest.Builder.class);
  }

  private int detectionRequestTypeCase_ = 0;
  private java.lang.Object detectionRequestType_;
  public enum DetectionRequestTypeCase
      implements com.google.protobuf.Internal.EnumLite,
          com.google.protobuf.AbstractMessage.InternalOneOfEnum {
    WORD_DETECTION_REQUEST(1),
    TEXT_BLOCK_DETECTION_REQUEST(2),
    CUSTOM_ICON_DETECTION_REQUEST(3),
    DETECTIONREQUESTTYPE_NOT_SET(0);
    private final int value;
    private DetectionRequestTypeCase(int value) {
      this.value = value;
    }
    /**
     * @param value The number of the enum to look for.
     * @return The enum associated with the given number.
     * @deprecated Use {@link #forNumber(int)} instead.
     */
    @java.lang.Deprecated
    public static DetectionRequestTypeCase valueOf(int value) {
      return forNumber(value);
    }

    public static DetectionRequestTypeCase forNumber(int value) {
      switch (value) {
        case 1: return WORD_DETECTION_REQUEST;
        case 2: return TEXT_BLOCK_DETECTION_REQUEST;
        case 3: return CUSTOM_ICON_DETECTION_REQUEST;
        case 0: return DETECTIONREQUESTTYPE_NOT_SET;
        default: return null;
      }
    }
    public int getNumber() {
      return this.value;
    }
  };

  public DetectionRequestTypeCase
  getDetectionRequestTypeCase() {
    return DetectionRequestTypeCase.forNumber(
        detectionRequestTypeCase_);
  }

  public static final int WORD_DETECTION_REQUEST_FIELD_NUMBER = 1;
  /**
   * <pre>
   * Detection type for word detection.
   * </pre>
   *
   * <code>.google.chromeos.uidetection.v1.WordDetectionRequest word_detection_request = 1;</code>
   * @return Whether the wordDetectionRequest field is set.
   */
  @java.lang.Override
  public boolean hasWordDetectionRequest() {
    return detectionRequestTypeCase_ == 1;
  }
  /**
   * <pre>
   * Detection type for word detection.
   * </pre>
   *
   * <code>.google.chromeos.uidetection.v1.WordDetectionRequest word_detection_request = 1;</code>
   * @return The wordDetectionRequest.
   */
  @java.lang.Override
  public com.google.chromeos.uidetection.v1.WordDetectionRequest getWordDetectionRequest() {
    if (detectionRequestTypeCase_ == 1) {
       return (com.google.chromeos.uidetection.v1.WordDetectionRequest) detectionRequestType_;
    }
    return com.google.chromeos.uidetection.v1.WordDetectionRequest.getDefaultInstance();
  }
  /**
   * <pre>
   * Detection type for word detection.
   * </pre>
   *
   * <code>.google.chromeos.uidetection.v1.WordDetectionRequest word_detection_request = 1;</code>
   */
  @java.lang.Override
  public com.google.chromeos.uidetection.v1.WordDetectionRequestOrBuilder getWordDetectionRequestOrBuilder() {
    if (detectionRequestTypeCase_ == 1) {
       return (com.google.chromeos.uidetection.v1.WordDetectionRequest) detectionRequestType_;
    }
    return com.google.chromeos.uidetection.v1.WordDetectionRequest.getDefaultInstance();
  }

  public static final int TEXT_BLOCK_DETECTION_REQUEST_FIELD_NUMBER = 2;
  /**
   * <pre>
   * Detection type for text block detection.
   * </pre>
   *
   * <code>.google.chromeos.uidetection.v1.TextBlockDetectionRequest text_block_detection_request = 2;</code>
   * @return Whether the textBlockDetectionRequest field is set.
   */
  @java.lang.Override
  public boolean hasTextBlockDetectionRequest() {
    return detectionRequestTypeCase_ == 2;
  }
  /**
   * <pre>
   * Detection type for text block detection.
   * </pre>
   *
   * <code>.google.chromeos.uidetection.v1.TextBlockDetectionRequest text_block_detection_request = 2;</code>
   * @return The textBlockDetectionRequest.
   */
  @java.lang.Override
  public com.google.chromeos.uidetection.v1.TextBlockDetectionRequest getTextBlockDetectionRequest() {
    if (detectionRequestTypeCase_ == 2) {
       return (com.google.chromeos.uidetection.v1.TextBlockDetectionRequest) detectionRequestType_;
    }
    return com.google.chromeos.uidetection.v1.TextBlockDetectionRequest.getDefaultInstance();
  }
  /**
   * <pre>
   * Detection type for text block detection.
   * </pre>
   *
   * <code>.google.chromeos.uidetection.v1.TextBlockDetectionRequest text_block_detection_request = 2;</code>
   */
  @java.lang.Override
  public com.google.chromeos.uidetection.v1.TextBlockDetectionRequestOrBuilder getTextBlockDetectionRequestOrBuilder() {
    if (detectionRequestTypeCase_ == 2) {
       return (com.google.chromeos.uidetection.v1.TextBlockDetectionRequest) detectionRequestType_;
    }
    return com.google.chromeos.uidetection.v1.TextBlockDetectionRequest.getDefaultInstance();
  }

  public static final int CUSTOM_ICON_DETECTION_REQUEST_FIELD_NUMBER = 3;
  /**
   * <pre>
   * Detection type for custom icon detection.
   * </pre>
   *
   * <code>.google.chromeos.uidetection.v1.CustomIconDetectionRequest custom_icon_detection_request = 3;</code>
   * @return Whether the customIconDetectionRequest field is set.
   */
  @java.lang.Override
  public boolean hasCustomIconDetectionRequest() {
    return detectionRequestTypeCase_ == 3;
  }
  /**
   * <pre>
   * Detection type for custom icon detection.
   * </pre>
   *
   * <code>.google.chromeos.uidetection.v1.CustomIconDetectionRequest custom_icon_detection_request = 3;</code>
   * @return The customIconDetectionRequest.
   */
  @java.lang.Override
  public com.google.chromeos.uidetection.v1.CustomIconDetectionRequest getCustomIconDetectionRequest() {
    if (detectionRequestTypeCase_ == 3) {
       return (com.google.chromeos.uidetection.v1.CustomIconDetectionRequest) detectionRequestType_;
    }
    return com.google.chromeos.uidetection.v1.CustomIconDetectionRequest.getDefaultInstance();
  }
  /**
   * <pre>
   * Detection type for custom icon detection.
   * </pre>
   *
   * <code>.google.chromeos.uidetection.v1.CustomIconDetectionRequest custom_icon_detection_request = 3;</code>
   */
  @java.lang.Override
  public com.google.chromeos.uidetection.v1.CustomIconDetectionRequestOrBuilder getCustomIconDetectionRequestOrBuilder() {
    if (detectionRequestTypeCase_ == 3) {
       return (com.google.chromeos.uidetection.v1.CustomIconDetectionRequest) detectionRequestType_;
    }
    return com.google.chromeos.uidetection.v1.CustomIconDetectionRequest.getDefaultInstance();
  }

  private byte memoizedIsInitialized = -1;
  @java.lang.Override
  public final boolean isInitialized() {
    byte isInitialized = memoizedIsInitialized;
    if (isInitialized == 1) return true;
    if (isInitialized == 0) return false;

    memoizedIsInitialized = 1;
    return true;
  }

  @java.lang.Override
  public void writeTo(com.google.protobuf.CodedOutputStream output)
                      throws java.io.IOException {
    if (detectionRequestTypeCase_ == 1) {
      output.writeMessage(1, (com.google.chromeos.uidetection.v1.WordDetectionRequest) detectionRequestType_);
    }
    if (detectionRequestTypeCase_ == 2) {
      output.writeMessage(2, (com.google.chromeos.uidetection.v1.TextBlockDetectionRequest) detectionRequestType_);
    }
    if (detectionRequestTypeCase_ == 3) {
      output.writeMessage(3, (com.google.chromeos.uidetection.v1.CustomIconDetectionRequest) detectionRequestType_);
    }
    unknownFields.writeTo(output);
  }

  @java.lang.Override
  public int getSerializedSize() {
    int size = memoizedSize;
    if (size != -1) return size;

    size = 0;
    if (detectionRequestTypeCase_ == 1) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(1, (com.google.chromeos.uidetection.v1.WordDetectionRequest) detectionRequestType_);
    }
    if (detectionRequestTypeCase_ == 2) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(2, (com.google.chromeos.uidetection.v1.TextBlockDetectionRequest) detectionRequestType_);
    }
    if (detectionRequestTypeCase_ == 3) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(3, (com.google.chromeos.uidetection.v1.CustomIconDetectionRequest) detectionRequestType_);
    }
    size += unknownFields.getSerializedSize();
    memoizedSize = size;
    return size;
  }

  @java.lang.Override
  public boolean equals(final java.lang.Object obj) {
    if (obj == this) {
     return true;
    }
    if (!(obj instanceof com.google.chromeos.uidetection.v1.DetectionRequest)) {
      return super.equals(obj);
    }
    com.google.chromeos.uidetection.v1.DetectionRequest other = (com.google.chromeos.uidetection.v1.DetectionRequest) obj;

    if (!getDetectionRequestTypeCase().equals(other.getDetectionRequestTypeCase())) return false;
    switch (detectionRequestTypeCase_) {
      case 1:
        if (!getWordDetectionRequest()
            .equals(other.getWordDetectionRequest())) return false;
        break;
      case 2:
        if (!getTextBlockDetectionRequest()
            .equals(other.getTextBlockDetectionRequest())) return false;
        break;
      case 3:
        if (!getCustomIconDetectionRequest()
            .equals(other.getCustomIconDetectionRequest())) return false;
        break;
      case 0:
      default:
    }
    if (!unknownFields.equals(other.unknownFields)) return false;
    return true;
  }

  @java.lang.Override
  public int hashCode() {
    if (memoizedHashCode != 0) {
      return memoizedHashCode;
    }
    int hash = 41;
    hash = (19 * hash) + getDescriptor().hashCode();
    switch (detectionRequestTypeCase_) {
      case 1:
        hash = (37 * hash) + WORD_DETECTION_REQUEST_FIELD_NUMBER;
        hash = (53 * hash) + getWordDetectionRequest().hashCode();
        break;
      case 2:
        hash = (37 * hash) + TEXT_BLOCK_DETECTION_REQUEST_FIELD_NUMBER;
        hash = (53 * hash) + getTextBlockDetectionRequest().hashCode();
        break;
      case 3:
        hash = (37 * hash) + CUSTOM_ICON_DETECTION_REQUEST_FIELD_NUMBER;
        hash = (53 * hash) + getCustomIconDetectionRequest().hashCode();
        break;
      case 0:
      default:
    }
    hash = (29 * hash) + unknownFields.hashCode();
    memoizedHashCode = hash;
    return hash;
  }

  public static com.google.chromeos.uidetection.v1.DetectionRequest parseFrom(
      java.nio.ByteBuffer data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static com.google.chromeos.uidetection.v1.DetectionRequest parseFrom(
      java.nio.ByteBuffer data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static com.google.chromeos.uidetection.v1.DetectionRequest parseFrom(
      com.google.protobuf.ByteString data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static com.google.chromeos.uidetection.v1.DetectionRequest parseFrom(
      com.google.protobuf.ByteString data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static com.google.chromeos.uidetection.v1.DetectionRequest parseFrom(byte[] data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static com.google.chromeos.uidetection.v1.DetectionRequest parseFrom(
      byte[] data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static com.google.chromeos.uidetection.v1.DetectionRequest parseFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input);
  }
  public static com.google.chromeos.uidetection.v1.DetectionRequest parseFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input, extensionRegistry);
  }
  public static com.google.chromeos.uidetection.v1.DetectionRequest parseDelimitedFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseDelimitedWithIOException(PARSER, input);
  }
  public static com.google.chromeos.uidetection.v1.DetectionRequest parseDelimitedFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
  }
  public static com.google.chromeos.uidetection.v1.DetectionRequest parseFrom(
      com.google.protobuf.CodedInputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input);
  }
  public static com.google.chromeos.uidetection.v1.DetectionRequest parseFrom(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input, extensionRegistry);
  }

  @java.lang.Override
  public Builder newBuilderForType() { return newBuilder(); }
  public static Builder newBuilder() {
    return DEFAULT_INSTANCE.toBuilder();
  }
  public static Builder newBuilder(com.google.chromeos.uidetection.v1.DetectionRequest prototype) {
    return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
  }
  @java.lang.Override
  public Builder toBuilder() {
    return this == DEFAULT_INSTANCE
        ? new Builder() : new Builder().mergeFrom(this);
  }

  @java.lang.Override
  protected Builder newBuilderForType(
      com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
    Builder builder = new Builder(parent);
    return builder;
  }
  /**
   * <pre>
   * Detection type specifies what to detect in the image.
   * </pre>
   *
   * Protobuf type {@code google.chromeos.uidetection.v1.DetectionRequest}
   */
  public static final class Builder extends
      com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
      // @@protoc_insertion_point(builder_implements:google.chromeos.uidetection.v1.DetectionRequest)
      com.google.chromeos.uidetection.v1.DetectionRequestOrBuilder {
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.google.chromeos.uidetection.v1.UiDetectionProto.internal_static_google_chromeos_uidetection_v1_DetectionRequest_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.google.chromeos.uidetection.v1.UiDetectionProto.internal_static_google_chromeos_uidetection_v1_DetectionRequest_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.google.chromeos.uidetection.v1.DetectionRequest.class, com.google.chromeos.uidetection.v1.DetectionRequest.Builder.class);
    }

    // Construct using com.google.chromeos.uidetection.v1.DetectionRequest.newBuilder()
    private Builder() {
      maybeForceBuilderInitialization();
    }

    private Builder(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      super(parent);
      maybeForceBuilderInitialization();
    }
    private void maybeForceBuilderInitialization() {
      if (com.google.protobuf.GeneratedMessageV3
              .alwaysUseFieldBuilders) {
      }
    }
    @java.lang.Override
    public Builder clear() {
      super.clear();
      detectionRequestTypeCase_ = 0;
      detectionRequestType_ = null;
      return this;
    }

    @java.lang.Override
    public com.google.protobuf.Descriptors.Descriptor
        getDescriptorForType() {
      return com.google.chromeos.uidetection.v1.UiDetectionProto.internal_static_google_chromeos_uidetection_v1_DetectionRequest_descriptor;
    }

    @java.lang.Override
    public com.google.chromeos.uidetection.v1.DetectionRequest getDefaultInstanceForType() {
      return com.google.chromeos.uidetection.v1.DetectionRequest.getDefaultInstance();
    }

    @java.lang.Override
    public com.google.chromeos.uidetection.v1.DetectionRequest build() {
      com.google.chromeos.uidetection.v1.DetectionRequest result = buildPartial();
      if (!result.isInitialized()) {
        throw newUninitializedMessageException(result);
      }
      return result;
    }

    @java.lang.Override
    public com.google.chromeos.uidetection.v1.DetectionRequest buildPartial() {
      com.google.chromeos.uidetection.v1.DetectionRequest result = new com.google.chromeos.uidetection.v1.DetectionRequest(this);
      if (detectionRequestTypeCase_ == 1) {
        if (wordDetectionRequestBuilder_ == null) {
          result.detectionRequestType_ = detectionRequestType_;
        } else {
          result.detectionRequestType_ = wordDetectionRequestBuilder_.build();
        }
      }
      if (detectionRequestTypeCase_ == 2) {
        if (textBlockDetectionRequestBuilder_ == null) {
          result.detectionRequestType_ = detectionRequestType_;
        } else {
          result.detectionRequestType_ = textBlockDetectionRequestBuilder_.build();
        }
      }
      if (detectionRequestTypeCase_ == 3) {
        if (customIconDetectionRequestBuilder_ == null) {
          result.detectionRequestType_ = detectionRequestType_;
        } else {
          result.detectionRequestType_ = customIconDetectionRequestBuilder_.build();
        }
      }
      result.detectionRequestTypeCase_ = detectionRequestTypeCase_;
      onBuilt();
      return result;
    }

    @java.lang.Override
    public Builder clone() {
      return super.clone();
    }
    @java.lang.Override
    public Builder setField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        java.lang.Object value) {
      return super.setField(field, value);
    }
    @java.lang.Override
    public Builder clearField(
        com.google.protobuf.Descriptors.FieldDescriptor field) {
      return super.clearField(field);
    }
    @java.lang.Override
    public Builder clearOneof(
        com.google.protobuf.Descriptors.OneofDescriptor oneof) {
      return super.clearOneof(oneof);
    }
    @java.lang.Override
    public Builder setRepeatedField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        int index, java.lang.Object value) {
      return super.setRepeatedField(field, index, value);
    }
    @java.lang.Override
    public Builder addRepeatedField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        java.lang.Object value) {
      return super.addRepeatedField(field, value);
    }
    @java.lang.Override
    public Builder mergeFrom(com.google.protobuf.Message other) {
      if (other instanceof com.google.chromeos.uidetection.v1.DetectionRequest) {
        return mergeFrom((com.google.chromeos.uidetection.v1.DetectionRequest)other);
      } else {
        super.mergeFrom(other);
        return this;
      }
    }

    public Builder mergeFrom(com.google.chromeos.uidetection.v1.DetectionRequest other) {
      if (other == com.google.chromeos.uidetection.v1.DetectionRequest.getDefaultInstance()) return this;
      switch (other.getDetectionRequestTypeCase()) {
        case WORD_DETECTION_REQUEST: {
          mergeWordDetectionRequest(other.getWordDetectionRequest());
          break;
        }
        case TEXT_BLOCK_DETECTION_REQUEST: {
          mergeTextBlockDetectionRequest(other.getTextBlockDetectionRequest());
          break;
        }
        case CUSTOM_ICON_DETECTION_REQUEST: {
          mergeCustomIconDetectionRequest(other.getCustomIconDetectionRequest());
          break;
        }
        case DETECTIONREQUESTTYPE_NOT_SET: {
          break;
        }
      }
      this.mergeUnknownFields(other.unknownFields);
      onChanged();
      return this;
    }

    @java.lang.Override
    public final boolean isInitialized() {
      return true;
    }

    @java.lang.Override
    public Builder mergeFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      com.google.chromeos.uidetection.v1.DetectionRequest parsedMessage = null;
      try {
        parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        parsedMessage = (com.google.chromeos.uidetection.v1.DetectionRequest) e.getUnfinishedMessage();
        throw e.unwrapIOException();
      } finally {
        if (parsedMessage != null) {
          mergeFrom(parsedMessage);
        }
      }
      return this;
    }
    private int detectionRequestTypeCase_ = 0;
    private java.lang.Object detectionRequestType_;
    public DetectionRequestTypeCase
        getDetectionRequestTypeCase() {
      return DetectionRequestTypeCase.forNumber(
          detectionRequestTypeCase_);
    }

    public Builder clearDetectionRequestType() {
      detectionRequestTypeCase_ = 0;
      detectionRequestType_ = null;
      onChanged();
      return this;
    }


    private com.google.protobuf.SingleFieldBuilderV3<
        com.google.chromeos.uidetection.v1.WordDetectionRequest, com.google.chromeos.uidetection.v1.WordDetectionRequest.Builder, com.google.chromeos.uidetection.v1.WordDetectionRequestOrBuilder> wordDetectionRequestBuilder_;
    /**
     * <pre>
     * Detection type for word detection.
     * </pre>
     *
     * <code>.google.chromeos.uidetection.v1.WordDetectionRequest word_detection_request = 1;</code>
     * @return Whether the wordDetectionRequest field is set.
     */
    @java.lang.Override
    public boolean hasWordDetectionRequest() {
      return detectionRequestTypeCase_ == 1;
    }
    /**
     * <pre>
     * Detection type for word detection.
     * </pre>
     *
     * <code>.google.chromeos.uidetection.v1.WordDetectionRequest word_detection_request = 1;</code>
     * @return The wordDetectionRequest.
     */
    @java.lang.Override
    public com.google.chromeos.uidetection.v1.WordDetectionRequest getWordDetectionRequest() {
      if (wordDetectionRequestBuilder_ == null) {
        if (detectionRequestTypeCase_ == 1) {
          return (com.google.chromeos.uidetection.v1.WordDetectionRequest) detectionRequestType_;
        }
        return com.google.chromeos.uidetection.v1.WordDetectionRequest.getDefaultInstance();
      } else {
        if (detectionRequestTypeCase_ == 1) {
          return wordDetectionRequestBuilder_.getMessage();
        }
        return com.google.chromeos.uidetection.v1.WordDetectionRequest.getDefaultInstance();
      }
    }
    /**
     * <pre>
     * Detection type for word detection.
     * </pre>
     *
     * <code>.google.chromeos.uidetection.v1.WordDetectionRequest word_detection_request = 1;</code>
     */
    public Builder setWordDetectionRequest(com.google.chromeos.uidetection.v1.WordDetectionRequest value) {
      if (wordDetectionRequestBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        detectionRequestType_ = value;
        onChanged();
      } else {
        wordDetectionRequestBuilder_.setMessage(value);
      }
      detectionRequestTypeCase_ = 1;
      return this;
    }
    /**
     * <pre>
     * Detection type for word detection.
     * </pre>
     *
     * <code>.google.chromeos.uidetection.v1.WordDetectionRequest word_detection_request = 1;</code>
     */
    public Builder setWordDetectionRequest(
        com.google.chromeos.uidetection.v1.WordDetectionRequest.Builder builderForValue) {
      if (wordDetectionRequestBuilder_ == null) {
        detectionRequestType_ = builderForValue.build();
        onChanged();
      } else {
        wordDetectionRequestBuilder_.setMessage(builderForValue.build());
      }
      detectionRequestTypeCase_ = 1;
      return this;
    }
    /**
     * <pre>
     * Detection type for word detection.
     * </pre>
     *
     * <code>.google.chromeos.uidetection.v1.WordDetectionRequest word_detection_request = 1;</code>
     */
    public Builder mergeWordDetectionRequest(com.google.chromeos.uidetection.v1.WordDetectionRequest value) {
      if (wordDetectionRequestBuilder_ == null) {
        if (detectionRequestTypeCase_ == 1 &&
            detectionRequestType_ != com.google.chromeos.uidetection.v1.WordDetectionRequest.getDefaultInstance()) {
          detectionRequestType_ = com.google.chromeos.uidetection.v1.WordDetectionRequest.newBuilder((com.google.chromeos.uidetection.v1.WordDetectionRequest) detectionRequestType_)
              .mergeFrom(value).buildPartial();
        } else {
          detectionRequestType_ = value;
        }
        onChanged();
      } else {
        if (detectionRequestTypeCase_ == 1) {
          wordDetectionRequestBuilder_.mergeFrom(value);
        } else {
          wordDetectionRequestBuilder_.setMessage(value);
        }
      }
      detectionRequestTypeCase_ = 1;
      return this;
    }
    /**
     * <pre>
     * Detection type for word detection.
     * </pre>
     *
     * <code>.google.chromeos.uidetection.v1.WordDetectionRequest word_detection_request = 1;</code>
     */
    public Builder clearWordDetectionRequest() {
      if (wordDetectionRequestBuilder_ == null) {
        if (detectionRequestTypeCase_ == 1) {
          detectionRequestTypeCase_ = 0;
          detectionRequestType_ = null;
          onChanged();
        }
      } else {
        if (detectionRequestTypeCase_ == 1) {
          detectionRequestTypeCase_ = 0;
          detectionRequestType_ = null;
        }
        wordDetectionRequestBuilder_.clear();
      }
      return this;
    }
    /**
     * <pre>
     * Detection type for word detection.
     * </pre>
     *
     * <code>.google.chromeos.uidetection.v1.WordDetectionRequest word_detection_request = 1;</code>
     */
    public com.google.chromeos.uidetection.v1.WordDetectionRequest.Builder getWordDetectionRequestBuilder() {
      return getWordDetectionRequestFieldBuilder().getBuilder();
    }
    /**
     * <pre>
     * Detection type for word detection.
     * </pre>
     *
     * <code>.google.chromeos.uidetection.v1.WordDetectionRequest word_detection_request = 1;</code>
     */
    @java.lang.Override
    public com.google.chromeos.uidetection.v1.WordDetectionRequestOrBuilder getWordDetectionRequestOrBuilder() {
      if ((detectionRequestTypeCase_ == 1) && (wordDetectionRequestBuilder_ != null)) {
        return wordDetectionRequestBuilder_.getMessageOrBuilder();
      } else {
        if (detectionRequestTypeCase_ == 1) {
          return (com.google.chromeos.uidetection.v1.WordDetectionRequest) detectionRequestType_;
        }
        return com.google.chromeos.uidetection.v1.WordDetectionRequest.getDefaultInstance();
      }
    }
    /**
     * <pre>
     * Detection type for word detection.
     * </pre>
     *
     * <code>.google.chromeos.uidetection.v1.WordDetectionRequest word_detection_request = 1;</code>
     */
    private com.google.protobuf.SingleFieldBuilderV3<
        com.google.chromeos.uidetection.v1.WordDetectionRequest, com.google.chromeos.uidetection.v1.WordDetectionRequest.Builder, com.google.chromeos.uidetection.v1.WordDetectionRequestOrBuilder> 
        getWordDetectionRequestFieldBuilder() {
      if (wordDetectionRequestBuilder_ == null) {
        if (!(detectionRequestTypeCase_ == 1)) {
          detectionRequestType_ = com.google.chromeos.uidetection.v1.WordDetectionRequest.getDefaultInstance();
        }
        wordDetectionRequestBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
            com.google.chromeos.uidetection.v1.WordDetectionRequest, com.google.chromeos.uidetection.v1.WordDetectionRequest.Builder, com.google.chromeos.uidetection.v1.WordDetectionRequestOrBuilder>(
                (com.google.chromeos.uidetection.v1.WordDetectionRequest) detectionRequestType_,
                getParentForChildren(),
                isClean());
        detectionRequestType_ = null;
      }
      detectionRequestTypeCase_ = 1;
      onChanged();;
      return wordDetectionRequestBuilder_;
    }

    private com.google.protobuf.SingleFieldBuilderV3<
        com.google.chromeos.uidetection.v1.TextBlockDetectionRequest, com.google.chromeos.uidetection.v1.TextBlockDetectionRequest.Builder, com.google.chromeos.uidetection.v1.TextBlockDetectionRequestOrBuilder> textBlockDetectionRequestBuilder_;
    /**
     * <pre>
     * Detection type for text block detection.
     * </pre>
     *
     * <code>.google.chromeos.uidetection.v1.TextBlockDetectionRequest text_block_detection_request = 2;</code>
     * @return Whether the textBlockDetectionRequest field is set.
     */
    @java.lang.Override
    public boolean hasTextBlockDetectionRequest() {
      return detectionRequestTypeCase_ == 2;
    }
    /**
     * <pre>
     * Detection type for text block detection.
     * </pre>
     *
     * <code>.google.chromeos.uidetection.v1.TextBlockDetectionRequest text_block_detection_request = 2;</code>
     * @return The textBlockDetectionRequest.
     */
    @java.lang.Override
    public com.google.chromeos.uidetection.v1.TextBlockDetectionRequest getTextBlockDetectionRequest() {
      if (textBlockDetectionRequestBuilder_ == null) {
        if (detectionRequestTypeCase_ == 2) {
          return (com.google.chromeos.uidetection.v1.TextBlockDetectionRequest) detectionRequestType_;
        }
        return com.google.chromeos.uidetection.v1.TextBlockDetectionRequest.getDefaultInstance();
      } else {
        if (detectionRequestTypeCase_ == 2) {
          return textBlockDetectionRequestBuilder_.getMessage();
        }
        return com.google.chromeos.uidetection.v1.TextBlockDetectionRequest.getDefaultInstance();
      }
    }
    /**
     * <pre>
     * Detection type for text block detection.
     * </pre>
     *
     * <code>.google.chromeos.uidetection.v1.TextBlockDetectionRequest text_block_detection_request = 2;</code>
     */
    public Builder setTextBlockDetectionRequest(com.google.chromeos.uidetection.v1.TextBlockDetectionRequest value) {
      if (textBlockDetectionRequestBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        detectionRequestType_ = value;
        onChanged();
      } else {
        textBlockDetectionRequestBuilder_.setMessage(value);
      }
      detectionRequestTypeCase_ = 2;
      return this;
    }
    /**
     * <pre>
     * Detection type for text block detection.
     * </pre>
     *
     * <code>.google.chromeos.uidetection.v1.TextBlockDetectionRequest text_block_detection_request = 2;</code>
     */
    public Builder setTextBlockDetectionRequest(
        com.google.chromeos.uidetection.v1.TextBlockDetectionRequest.Builder builderForValue) {
      if (textBlockDetectionRequestBuilder_ == null) {
        detectionRequestType_ = builderForValue.build();
        onChanged();
      } else {
        textBlockDetectionRequestBuilder_.setMessage(builderForValue.build());
      }
      detectionRequestTypeCase_ = 2;
      return this;
    }
    /**
     * <pre>
     * Detection type for text block detection.
     * </pre>
     *
     * <code>.google.chromeos.uidetection.v1.TextBlockDetectionRequest text_block_detection_request = 2;</code>
     */
    public Builder mergeTextBlockDetectionRequest(com.google.chromeos.uidetection.v1.TextBlockDetectionRequest value) {
      if (textBlockDetectionRequestBuilder_ == null) {
        if (detectionRequestTypeCase_ == 2 &&
            detectionRequestType_ != com.google.chromeos.uidetection.v1.TextBlockDetectionRequest.getDefaultInstance()) {
          detectionRequestType_ = com.google.chromeos.uidetection.v1.TextBlockDetectionRequest.newBuilder((com.google.chromeos.uidetection.v1.TextBlockDetectionRequest) detectionRequestType_)
              .mergeFrom(value).buildPartial();
        } else {
          detectionRequestType_ = value;
        }
        onChanged();
      } else {
        if (detectionRequestTypeCase_ == 2) {
          textBlockDetectionRequestBuilder_.mergeFrom(value);
        } else {
          textBlockDetectionRequestBuilder_.setMessage(value);
        }
      }
      detectionRequestTypeCase_ = 2;
      return this;
    }
    /**
     * <pre>
     * Detection type for text block detection.
     * </pre>
     *
     * <code>.google.chromeos.uidetection.v1.TextBlockDetectionRequest text_block_detection_request = 2;</code>
     */
    public Builder clearTextBlockDetectionRequest() {
      if (textBlockDetectionRequestBuilder_ == null) {
        if (detectionRequestTypeCase_ == 2) {
          detectionRequestTypeCase_ = 0;
          detectionRequestType_ = null;
          onChanged();
        }
      } else {
        if (detectionRequestTypeCase_ == 2) {
          detectionRequestTypeCase_ = 0;
          detectionRequestType_ = null;
        }
        textBlockDetectionRequestBuilder_.clear();
      }
      return this;
    }
    /**
     * <pre>
     * Detection type for text block detection.
     * </pre>
     *
     * <code>.google.chromeos.uidetection.v1.TextBlockDetectionRequest text_block_detection_request = 2;</code>
     */
    public com.google.chromeos.uidetection.v1.TextBlockDetectionRequest.Builder getTextBlockDetectionRequestBuilder() {
      return getTextBlockDetectionRequestFieldBuilder().getBuilder();
    }
    /**
     * <pre>
     * Detection type for text block detection.
     * </pre>
     *
     * <code>.google.chromeos.uidetection.v1.TextBlockDetectionRequest text_block_detection_request = 2;</code>
     */
    @java.lang.Override
    public com.google.chromeos.uidetection.v1.TextBlockDetectionRequestOrBuilder getTextBlockDetectionRequestOrBuilder() {
      if ((detectionRequestTypeCase_ == 2) && (textBlockDetectionRequestBuilder_ != null)) {
        return textBlockDetectionRequestBuilder_.getMessageOrBuilder();
      } else {
        if (detectionRequestTypeCase_ == 2) {
          return (com.google.chromeos.uidetection.v1.TextBlockDetectionRequest) detectionRequestType_;
        }
        return com.google.chromeos.uidetection.v1.TextBlockDetectionRequest.getDefaultInstance();
      }
    }
    /**
     * <pre>
     * Detection type for text block detection.
     * </pre>
     *
     * <code>.google.chromeos.uidetection.v1.TextBlockDetectionRequest text_block_detection_request = 2;</code>
     */
    private com.google.protobuf.SingleFieldBuilderV3<
        com.google.chromeos.uidetection.v1.TextBlockDetectionRequest, com.google.chromeos.uidetection.v1.TextBlockDetectionRequest.Builder, com.google.chromeos.uidetection.v1.TextBlockDetectionRequestOrBuilder> 
        getTextBlockDetectionRequestFieldBuilder() {
      if (textBlockDetectionRequestBuilder_ == null) {
        if (!(detectionRequestTypeCase_ == 2)) {
          detectionRequestType_ = com.google.chromeos.uidetection.v1.TextBlockDetectionRequest.getDefaultInstance();
        }
        textBlockDetectionRequestBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
            com.google.chromeos.uidetection.v1.TextBlockDetectionRequest, com.google.chromeos.uidetection.v1.TextBlockDetectionRequest.Builder, com.google.chromeos.uidetection.v1.TextBlockDetectionRequestOrBuilder>(
                (com.google.chromeos.uidetection.v1.TextBlockDetectionRequest) detectionRequestType_,
                getParentForChildren(),
                isClean());
        detectionRequestType_ = null;
      }
      detectionRequestTypeCase_ = 2;
      onChanged();;
      return textBlockDetectionRequestBuilder_;
    }

    private com.google.protobuf.SingleFieldBuilderV3<
        com.google.chromeos.uidetection.v1.CustomIconDetectionRequest, com.google.chromeos.uidetection.v1.CustomIconDetectionRequest.Builder, com.google.chromeos.uidetection.v1.CustomIconDetectionRequestOrBuilder> customIconDetectionRequestBuilder_;
    /**
     * <pre>
     * Detection type for custom icon detection.
     * </pre>
     *
     * <code>.google.chromeos.uidetection.v1.CustomIconDetectionRequest custom_icon_detection_request = 3;</code>
     * @return Whether the customIconDetectionRequest field is set.
     */
    @java.lang.Override
    public boolean hasCustomIconDetectionRequest() {
      return detectionRequestTypeCase_ == 3;
    }
    /**
     * <pre>
     * Detection type for custom icon detection.
     * </pre>
     *
     * <code>.google.chromeos.uidetection.v1.CustomIconDetectionRequest custom_icon_detection_request = 3;</code>
     * @return The customIconDetectionRequest.
     */
    @java.lang.Override
    public com.google.chromeos.uidetection.v1.CustomIconDetectionRequest getCustomIconDetectionRequest() {
      if (customIconDetectionRequestBuilder_ == null) {
        if (detectionRequestTypeCase_ == 3) {
          return (com.google.chromeos.uidetection.v1.CustomIconDetectionRequest) detectionRequestType_;
        }
        return com.google.chromeos.uidetection.v1.CustomIconDetectionRequest.getDefaultInstance();
      } else {
        if (detectionRequestTypeCase_ == 3) {
          return customIconDetectionRequestBuilder_.getMessage();
        }
        return com.google.chromeos.uidetection.v1.CustomIconDetectionRequest.getDefaultInstance();
      }
    }
    /**
     * <pre>
     * Detection type for custom icon detection.
     * </pre>
     *
     * <code>.google.chromeos.uidetection.v1.CustomIconDetectionRequest custom_icon_detection_request = 3;</code>
     */
    public Builder setCustomIconDetectionRequest(com.google.chromeos.uidetection.v1.CustomIconDetectionRequest value) {
      if (customIconDetectionRequestBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        detectionRequestType_ = value;
        onChanged();
      } else {
        customIconDetectionRequestBuilder_.setMessage(value);
      }
      detectionRequestTypeCase_ = 3;
      return this;
    }
    /**
     * <pre>
     * Detection type for custom icon detection.
     * </pre>
     *
     * <code>.google.chromeos.uidetection.v1.CustomIconDetectionRequest custom_icon_detection_request = 3;</code>
     */
    public Builder setCustomIconDetectionRequest(
        com.google.chromeos.uidetection.v1.CustomIconDetectionRequest.Builder builderForValue) {
      if (customIconDetectionRequestBuilder_ == null) {
        detectionRequestType_ = builderForValue.build();
        onChanged();
      } else {
        customIconDetectionRequestBuilder_.setMessage(builderForValue.build());
      }
      detectionRequestTypeCase_ = 3;
      return this;
    }
    /**
     * <pre>
     * Detection type for custom icon detection.
     * </pre>
     *
     * <code>.google.chromeos.uidetection.v1.CustomIconDetectionRequest custom_icon_detection_request = 3;</code>
     */
    public Builder mergeCustomIconDetectionRequest(com.google.chromeos.uidetection.v1.CustomIconDetectionRequest value) {
      if (customIconDetectionRequestBuilder_ == null) {
        if (detectionRequestTypeCase_ == 3 &&
            detectionRequestType_ != com.google.chromeos.uidetection.v1.CustomIconDetectionRequest.getDefaultInstance()) {
          detectionRequestType_ = com.google.chromeos.uidetection.v1.CustomIconDetectionRequest.newBuilder((com.google.chromeos.uidetection.v1.CustomIconDetectionRequest) detectionRequestType_)
              .mergeFrom(value).buildPartial();
        } else {
          detectionRequestType_ = value;
        }
        onChanged();
      } else {
        if (detectionRequestTypeCase_ == 3) {
          customIconDetectionRequestBuilder_.mergeFrom(value);
        } else {
          customIconDetectionRequestBuilder_.setMessage(value);
        }
      }
      detectionRequestTypeCase_ = 3;
      return this;
    }
    /**
     * <pre>
     * Detection type for custom icon detection.
     * </pre>
     *
     * <code>.google.chromeos.uidetection.v1.CustomIconDetectionRequest custom_icon_detection_request = 3;</code>
     */
    public Builder clearCustomIconDetectionRequest() {
      if (customIconDetectionRequestBuilder_ == null) {
        if (detectionRequestTypeCase_ == 3) {
          detectionRequestTypeCase_ = 0;
          detectionRequestType_ = null;
          onChanged();
        }
      } else {
        if (detectionRequestTypeCase_ == 3) {
          detectionRequestTypeCase_ = 0;
          detectionRequestType_ = null;
        }
        customIconDetectionRequestBuilder_.clear();
      }
      return this;
    }
    /**
     * <pre>
     * Detection type for custom icon detection.
     * </pre>
     *
     * <code>.google.chromeos.uidetection.v1.CustomIconDetectionRequest custom_icon_detection_request = 3;</code>
     */
    public com.google.chromeos.uidetection.v1.CustomIconDetectionRequest.Builder getCustomIconDetectionRequestBuilder() {
      return getCustomIconDetectionRequestFieldBuilder().getBuilder();
    }
    /**
     * <pre>
     * Detection type for custom icon detection.
     * </pre>
     *
     * <code>.google.chromeos.uidetection.v1.CustomIconDetectionRequest custom_icon_detection_request = 3;</code>
     */
    @java.lang.Override
    public com.google.chromeos.uidetection.v1.CustomIconDetectionRequestOrBuilder getCustomIconDetectionRequestOrBuilder() {
      if ((detectionRequestTypeCase_ == 3) && (customIconDetectionRequestBuilder_ != null)) {
        return customIconDetectionRequestBuilder_.getMessageOrBuilder();
      } else {
        if (detectionRequestTypeCase_ == 3) {
          return (com.google.chromeos.uidetection.v1.CustomIconDetectionRequest) detectionRequestType_;
        }
        return com.google.chromeos.uidetection.v1.CustomIconDetectionRequest.getDefaultInstance();
      }
    }
    /**
     * <pre>
     * Detection type for custom icon detection.
     * </pre>
     *
     * <code>.google.chromeos.uidetection.v1.CustomIconDetectionRequest custom_icon_detection_request = 3;</code>
     */
    private com.google.protobuf.SingleFieldBuilderV3<
        com.google.chromeos.uidetection.v1.CustomIconDetectionRequest, com.google.chromeos.uidetection.v1.CustomIconDetectionRequest.Builder, com.google.chromeos.uidetection.v1.CustomIconDetectionRequestOrBuilder> 
        getCustomIconDetectionRequestFieldBuilder() {
      if (customIconDetectionRequestBuilder_ == null) {
        if (!(detectionRequestTypeCase_ == 3)) {
          detectionRequestType_ = com.google.chromeos.uidetection.v1.CustomIconDetectionRequest.getDefaultInstance();
        }
        customIconDetectionRequestBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
            com.google.chromeos.uidetection.v1.CustomIconDetectionRequest, com.google.chromeos.uidetection.v1.CustomIconDetectionRequest.Builder, com.google.chromeos.uidetection.v1.CustomIconDetectionRequestOrBuilder>(
                (com.google.chromeos.uidetection.v1.CustomIconDetectionRequest) detectionRequestType_,
                getParentForChildren(),
                isClean());
        detectionRequestType_ = null;
      }
      detectionRequestTypeCase_ = 3;
      onChanged();;
      return customIconDetectionRequestBuilder_;
    }
    @java.lang.Override
    public final Builder setUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return super.setUnknownFields(unknownFields);
    }

    @java.lang.Override
    public final Builder mergeUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return super.mergeUnknownFields(unknownFields);
    }


    // @@protoc_insertion_point(builder_scope:google.chromeos.uidetection.v1.DetectionRequest)
  }

  // @@protoc_insertion_point(class_scope:google.chromeos.uidetection.v1.DetectionRequest)
  private static final com.google.chromeos.uidetection.v1.DetectionRequest DEFAULT_INSTANCE;
  static {
    DEFAULT_INSTANCE = new com.google.chromeos.uidetection.v1.DetectionRequest();
  }

  public static com.google.chromeos.uidetection.v1.DetectionRequest getDefaultInstance() {
    return DEFAULT_INSTANCE;
  }

  private static final com.google.protobuf.Parser<DetectionRequest>
      PARSER = new com.google.protobuf.AbstractParser<DetectionRequest>() {
    @java.lang.Override
    public DetectionRequest parsePartialFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return new DetectionRequest(input, extensionRegistry);
    }
  };

  public static com.google.protobuf.Parser<DetectionRequest> parser() {
    return PARSER;
  }

  @java.lang.Override
  public com.google.protobuf.Parser<DetectionRequest> getParserForType() {
    return PARSER;
  }

  @java.lang.Override
  public com.google.chromeos.uidetection.v1.DetectionRequest getDefaultInstanceForType() {
    return DEFAULT_INSTANCE;
  }

}

