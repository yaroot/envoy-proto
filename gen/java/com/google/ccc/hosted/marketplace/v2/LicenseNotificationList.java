// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: google/apps/market/v2/resources.proto

package com.google.ccc.hosted.marketplace.v2;

/**
 * Protobuf type {@code ccc.hosted.marketplace.v2.LicenseNotificationList}
 */
public final class LicenseNotificationList extends
    com.google.protobuf.GeneratedMessageV3 implements
    // @@protoc_insertion_point(message_implements:ccc.hosted.marketplace.v2.LicenseNotificationList)
    LicenseNotificationListOrBuilder {
private static final long serialVersionUID = 0L;
  // Use LicenseNotificationList.newBuilder() to construct.
  private LicenseNotificationList(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
    super(builder);
  }
  private LicenseNotificationList() {
    kind_ = "";
    notifications_ = java.util.Collections.emptyList();
    nextPageToken_ = "";
  }

  @java.lang.Override
  @SuppressWarnings({"unused"})
  protected java.lang.Object newInstance(
      UnusedPrivateParameter unused) {
    return new LicenseNotificationList();
  }

  @java.lang.Override
  public final com.google.protobuf.UnknownFieldSet
  getUnknownFields() {
    return this.unknownFields;
  }
  public static final com.google.protobuf.Descriptors.Descriptor
      getDescriptor() {
    return com.google.ccc.hosted.marketplace.v2.ResourcesProto.internal_static_ccc_hosted_marketplace_v2_LicenseNotificationList_descriptor;
  }

  @java.lang.Override
  protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internalGetFieldAccessorTable() {
    return com.google.ccc.hosted.marketplace.v2.ResourcesProto.internal_static_ccc_hosted_marketplace_v2_LicenseNotificationList_fieldAccessorTable
        .ensureFieldAccessorsInitialized(
            com.google.ccc.hosted.marketplace.v2.LicenseNotificationList.class, com.google.ccc.hosted.marketplace.v2.LicenseNotificationList.Builder.class);
  }

  public static final int KIND_FIELD_NUMBER = 1;
  @SuppressWarnings("serial")
  private volatile java.lang.Object kind_ = "";
  /**
   * <code>string kind = 1;</code>
   * @return The kind.
   */
  @java.lang.Override
  public java.lang.String getKind() {
    java.lang.Object ref = kind_;
    if (ref instanceof java.lang.String) {
      return (java.lang.String) ref;
    } else {
      com.google.protobuf.ByteString bs = 
          (com.google.protobuf.ByteString) ref;
      java.lang.String s = bs.toStringUtf8();
      kind_ = s;
      return s;
    }
  }
  /**
   * <code>string kind = 1;</code>
   * @return The bytes for kind.
   */
  @java.lang.Override
  public com.google.protobuf.ByteString
      getKindBytes() {
    java.lang.Object ref = kind_;
    if (ref instanceof java.lang.String) {
      com.google.protobuf.ByteString b = 
          com.google.protobuf.ByteString.copyFromUtf8(
              (java.lang.String) ref);
      kind_ = b;
      return b;
    } else {
      return (com.google.protobuf.ByteString) ref;
    }
  }

  public static final int NOTIFICATIONS_FIELD_NUMBER = 1007;
  @SuppressWarnings("serial")
  private java.util.List<com.google.ccc.hosted.marketplace.v2.LicenseNotification> notifications_;
  /**
   * <pre>
   * The list of notifications. One or more of:
   * - `provisions`: A new license of the application has been provisioned.
   * - `expiries`: A license of the application has expired.
   * - `deletions`: An application has been deleted from a domain.
   * - `reassignments`: An administrator has assigned or revoked a seat license
   * for the application on the provided domain.
   * </pre>
   *
   * <code>repeated .ccc.hosted.marketplace.v2.LicenseNotification notifications = 1007;</code>
   */
  @java.lang.Override
  public java.util.List<com.google.ccc.hosted.marketplace.v2.LicenseNotification> getNotificationsList() {
    return notifications_;
  }
  /**
   * <pre>
   * The list of notifications. One or more of:
   * - `provisions`: A new license of the application has been provisioned.
   * - `expiries`: A license of the application has expired.
   * - `deletions`: An application has been deleted from a domain.
   * - `reassignments`: An administrator has assigned or revoked a seat license
   * for the application on the provided domain.
   * </pre>
   *
   * <code>repeated .ccc.hosted.marketplace.v2.LicenseNotification notifications = 1007;</code>
   */
  @java.lang.Override
  public java.util.List<? extends com.google.ccc.hosted.marketplace.v2.LicenseNotificationOrBuilder> 
      getNotificationsOrBuilderList() {
    return notifications_;
  }
  /**
   * <pre>
   * The list of notifications. One or more of:
   * - `provisions`: A new license of the application has been provisioned.
   * - `expiries`: A license of the application has expired.
   * - `deletions`: An application has been deleted from a domain.
   * - `reassignments`: An administrator has assigned or revoked a seat license
   * for the application on the provided domain.
   * </pre>
   *
   * <code>repeated .ccc.hosted.marketplace.v2.LicenseNotification notifications = 1007;</code>
   */
  @java.lang.Override
  public int getNotificationsCount() {
    return notifications_.size();
  }
  /**
   * <pre>
   * The list of notifications. One or more of:
   * - `provisions`: A new license of the application has been provisioned.
   * - `expiries`: A license of the application has expired.
   * - `deletions`: An application has been deleted from a domain.
   * - `reassignments`: An administrator has assigned or revoked a seat license
   * for the application on the provided domain.
   * </pre>
   *
   * <code>repeated .ccc.hosted.marketplace.v2.LicenseNotification notifications = 1007;</code>
   */
  @java.lang.Override
  public com.google.ccc.hosted.marketplace.v2.LicenseNotification getNotifications(int index) {
    return notifications_.get(index);
  }
  /**
   * <pre>
   * The list of notifications. One or more of:
   * - `provisions`: A new license of the application has been provisioned.
   * - `expiries`: A license of the application has expired.
   * - `deletions`: An application has been deleted from a domain.
   * - `reassignments`: An administrator has assigned or revoked a seat license
   * for the application on the provided domain.
   * </pre>
   *
   * <code>repeated .ccc.hosted.marketplace.v2.LicenseNotification notifications = 1007;</code>
   */
  @java.lang.Override
  public com.google.ccc.hosted.marketplace.v2.LicenseNotificationOrBuilder getNotificationsOrBuilder(
      int index) {
    return notifications_.get(index);
  }

  public static final int NEXT_PAGE_TOKEN_FIELD_NUMBER = 100602;
  @SuppressWarnings("serial")
  private volatile java.lang.Object nextPageToken_ = "";
  /**
   * <pre>
   * The token used to continue querying for notifications after the final
   * notification in the current result set.
   * </pre>
   *
   * <code>string next_page_token = 100602;</code>
   * @return The nextPageToken.
   */
  @java.lang.Override
  public java.lang.String getNextPageToken() {
    java.lang.Object ref = nextPageToken_;
    if (ref instanceof java.lang.String) {
      return (java.lang.String) ref;
    } else {
      com.google.protobuf.ByteString bs = 
          (com.google.protobuf.ByteString) ref;
      java.lang.String s = bs.toStringUtf8();
      nextPageToken_ = s;
      return s;
    }
  }
  /**
   * <pre>
   * The token used to continue querying for notifications after the final
   * notification in the current result set.
   * </pre>
   *
   * <code>string next_page_token = 100602;</code>
   * @return The bytes for nextPageToken.
   */
  @java.lang.Override
  public com.google.protobuf.ByteString
      getNextPageTokenBytes() {
    java.lang.Object ref = nextPageToken_;
    if (ref instanceof java.lang.String) {
      com.google.protobuf.ByteString b = 
          com.google.protobuf.ByteString.copyFromUtf8(
              (java.lang.String) ref);
      nextPageToken_ = b;
      return b;
    } else {
      return (com.google.protobuf.ByteString) ref;
    }
  }

  private byte memoizedIsInitialized = -1;
  @java.lang.Override
  public final boolean isInitialized() {
    byte isInitialized = memoizedIsInitialized;
    if (isInitialized == 1) return true;
    if (isInitialized == 0) return false;

    memoizedIsInitialized = 1;
    return true;
  }

  @java.lang.Override
  public void writeTo(com.google.protobuf.CodedOutputStream output)
                      throws java.io.IOException {
    if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(kind_)) {
      com.google.protobuf.GeneratedMessageV3.writeString(output, 1, kind_);
    }
    for (int i = 0; i < notifications_.size(); i++) {
      output.writeMessage(1007, notifications_.get(i));
    }
    if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(nextPageToken_)) {
      com.google.protobuf.GeneratedMessageV3.writeString(output, 100602, nextPageToken_);
    }
    getUnknownFields().writeTo(output);
  }

  @java.lang.Override
  public int getSerializedSize() {
    int size = memoizedSize;
    if (size != -1) return size;

    size = 0;
    if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(kind_)) {
      size += com.google.protobuf.GeneratedMessageV3.computeStringSize(1, kind_);
    }
    for (int i = 0; i < notifications_.size(); i++) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(1007, notifications_.get(i));
    }
    if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(nextPageToken_)) {
      size += com.google.protobuf.GeneratedMessageV3.computeStringSize(100602, nextPageToken_);
    }
    size += getUnknownFields().getSerializedSize();
    memoizedSize = size;
    return size;
  }

  @java.lang.Override
  public boolean equals(final java.lang.Object obj) {
    if (obj == this) {
     return true;
    }
    if (!(obj instanceof com.google.ccc.hosted.marketplace.v2.LicenseNotificationList)) {
      return super.equals(obj);
    }
    com.google.ccc.hosted.marketplace.v2.LicenseNotificationList other = (com.google.ccc.hosted.marketplace.v2.LicenseNotificationList) obj;

    if (!getKind()
        .equals(other.getKind())) return false;
    if (!getNotificationsList()
        .equals(other.getNotificationsList())) return false;
    if (!getNextPageToken()
        .equals(other.getNextPageToken())) return false;
    if (!getUnknownFields().equals(other.getUnknownFields())) return false;
    return true;
  }

  @java.lang.Override
  public int hashCode() {
    if (memoizedHashCode != 0) {
      return memoizedHashCode;
    }
    int hash = 41;
    hash = (19 * hash) + getDescriptor().hashCode();
    hash = (37 * hash) + KIND_FIELD_NUMBER;
    hash = (53 * hash) + getKind().hashCode();
    if (getNotificationsCount() > 0) {
      hash = (37 * hash) + NOTIFICATIONS_FIELD_NUMBER;
      hash = (53 * hash) + getNotificationsList().hashCode();
    }
    hash = (37 * hash) + NEXT_PAGE_TOKEN_FIELD_NUMBER;
    hash = (53 * hash) + getNextPageToken().hashCode();
    hash = (29 * hash) + getUnknownFields().hashCode();
    memoizedHashCode = hash;
    return hash;
  }

  public static com.google.ccc.hosted.marketplace.v2.LicenseNotificationList parseFrom(
      java.nio.ByteBuffer data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static com.google.ccc.hosted.marketplace.v2.LicenseNotificationList parseFrom(
      java.nio.ByteBuffer data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static com.google.ccc.hosted.marketplace.v2.LicenseNotificationList parseFrom(
      com.google.protobuf.ByteString data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static com.google.ccc.hosted.marketplace.v2.LicenseNotificationList parseFrom(
      com.google.protobuf.ByteString data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static com.google.ccc.hosted.marketplace.v2.LicenseNotificationList parseFrom(byte[] data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static com.google.ccc.hosted.marketplace.v2.LicenseNotificationList parseFrom(
      byte[] data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static com.google.ccc.hosted.marketplace.v2.LicenseNotificationList parseFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input);
  }
  public static com.google.ccc.hosted.marketplace.v2.LicenseNotificationList parseFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input, extensionRegistry);
  }
  public static com.google.ccc.hosted.marketplace.v2.LicenseNotificationList parseDelimitedFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseDelimitedWithIOException(PARSER, input);
  }
  public static com.google.ccc.hosted.marketplace.v2.LicenseNotificationList parseDelimitedFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
  }
  public static com.google.ccc.hosted.marketplace.v2.LicenseNotificationList parseFrom(
      com.google.protobuf.CodedInputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input);
  }
  public static com.google.ccc.hosted.marketplace.v2.LicenseNotificationList parseFrom(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input, extensionRegistry);
  }

  @java.lang.Override
  public Builder newBuilderForType() { return newBuilder(); }
  public static Builder newBuilder() {
    return DEFAULT_INSTANCE.toBuilder();
  }
  public static Builder newBuilder(com.google.ccc.hosted.marketplace.v2.LicenseNotificationList prototype) {
    return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
  }
  @java.lang.Override
  public Builder toBuilder() {
    return this == DEFAULT_INSTANCE
        ? new Builder() : new Builder().mergeFrom(this);
  }

  @java.lang.Override
  protected Builder newBuilderForType(
      com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
    Builder builder = new Builder(parent);
    return builder;
  }
  /**
   * Protobuf type {@code ccc.hosted.marketplace.v2.LicenseNotificationList}
   */
  public static final class Builder extends
      com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
      // @@protoc_insertion_point(builder_implements:ccc.hosted.marketplace.v2.LicenseNotificationList)
      com.google.ccc.hosted.marketplace.v2.LicenseNotificationListOrBuilder {
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.google.ccc.hosted.marketplace.v2.ResourcesProto.internal_static_ccc_hosted_marketplace_v2_LicenseNotificationList_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.google.ccc.hosted.marketplace.v2.ResourcesProto.internal_static_ccc_hosted_marketplace_v2_LicenseNotificationList_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.google.ccc.hosted.marketplace.v2.LicenseNotificationList.class, com.google.ccc.hosted.marketplace.v2.LicenseNotificationList.Builder.class);
    }

    // Construct using com.google.ccc.hosted.marketplace.v2.LicenseNotificationList.newBuilder()
    private Builder() {

    }

    private Builder(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      super(parent);

    }
    @java.lang.Override
    public Builder clear() {
      super.clear();
      bitField0_ = 0;
      kind_ = "";
      if (notificationsBuilder_ == null) {
        notifications_ = java.util.Collections.emptyList();
      } else {
        notifications_ = null;
        notificationsBuilder_.clear();
      }
      bitField0_ = (bitField0_ & ~0x00000002);
      nextPageToken_ = "";
      return this;
    }

    @java.lang.Override
    public com.google.protobuf.Descriptors.Descriptor
        getDescriptorForType() {
      return com.google.ccc.hosted.marketplace.v2.ResourcesProto.internal_static_ccc_hosted_marketplace_v2_LicenseNotificationList_descriptor;
    }

    @java.lang.Override
    public com.google.ccc.hosted.marketplace.v2.LicenseNotificationList getDefaultInstanceForType() {
      return com.google.ccc.hosted.marketplace.v2.LicenseNotificationList.getDefaultInstance();
    }

    @java.lang.Override
    public com.google.ccc.hosted.marketplace.v2.LicenseNotificationList build() {
      com.google.ccc.hosted.marketplace.v2.LicenseNotificationList result = buildPartial();
      if (!result.isInitialized()) {
        throw newUninitializedMessageException(result);
      }
      return result;
    }

    @java.lang.Override
    public com.google.ccc.hosted.marketplace.v2.LicenseNotificationList buildPartial() {
      com.google.ccc.hosted.marketplace.v2.LicenseNotificationList result = new com.google.ccc.hosted.marketplace.v2.LicenseNotificationList(this);
      buildPartialRepeatedFields(result);
      if (bitField0_ != 0) { buildPartial0(result); }
      onBuilt();
      return result;
    }

    private void buildPartialRepeatedFields(com.google.ccc.hosted.marketplace.v2.LicenseNotificationList result) {
      if (notificationsBuilder_ == null) {
        if (((bitField0_ & 0x00000002) != 0)) {
          notifications_ = java.util.Collections.unmodifiableList(notifications_);
          bitField0_ = (bitField0_ & ~0x00000002);
        }
        result.notifications_ = notifications_;
      } else {
        result.notifications_ = notificationsBuilder_.build();
      }
    }

    private void buildPartial0(com.google.ccc.hosted.marketplace.v2.LicenseNotificationList result) {
      int from_bitField0_ = bitField0_;
      if (((from_bitField0_ & 0x00000001) != 0)) {
        result.kind_ = kind_;
      }
      if (((from_bitField0_ & 0x00000004) != 0)) {
        result.nextPageToken_ = nextPageToken_;
      }
    }

    @java.lang.Override
    public Builder clone() {
      return super.clone();
    }
    @java.lang.Override
    public Builder setField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        java.lang.Object value) {
      return super.setField(field, value);
    }
    @java.lang.Override
    public Builder clearField(
        com.google.protobuf.Descriptors.FieldDescriptor field) {
      return super.clearField(field);
    }
    @java.lang.Override
    public Builder clearOneof(
        com.google.protobuf.Descriptors.OneofDescriptor oneof) {
      return super.clearOneof(oneof);
    }
    @java.lang.Override
    public Builder setRepeatedField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        int index, java.lang.Object value) {
      return super.setRepeatedField(field, index, value);
    }
    @java.lang.Override
    public Builder addRepeatedField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        java.lang.Object value) {
      return super.addRepeatedField(field, value);
    }
    @java.lang.Override
    public Builder mergeFrom(com.google.protobuf.Message other) {
      if (other instanceof com.google.ccc.hosted.marketplace.v2.LicenseNotificationList) {
        return mergeFrom((com.google.ccc.hosted.marketplace.v2.LicenseNotificationList)other);
      } else {
        super.mergeFrom(other);
        return this;
      }
    }

    public Builder mergeFrom(com.google.ccc.hosted.marketplace.v2.LicenseNotificationList other) {
      if (other == com.google.ccc.hosted.marketplace.v2.LicenseNotificationList.getDefaultInstance()) return this;
      if (!other.getKind().isEmpty()) {
        kind_ = other.kind_;
        bitField0_ |= 0x00000001;
        onChanged();
      }
      if (notificationsBuilder_ == null) {
        if (!other.notifications_.isEmpty()) {
          if (notifications_.isEmpty()) {
            notifications_ = other.notifications_;
            bitField0_ = (bitField0_ & ~0x00000002);
          } else {
            ensureNotificationsIsMutable();
            notifications_.addAll(other.notifications_);
          }
          onChanged();
        }
      } else {
        if (!other.notifications_.isEmpty()) {
          if (notificationsBuilder_.isEmpty()) {
            notificationsBuilder_.dispose();
            notificationsBuilder_ = null;
            notifications_ = other.notifications_;
            bitField0_ = (bitField0_ & ~0x00000002);
            notificationsBuilder_ = 
              com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?
                 getNotificationsFieldBuilder() : null;
          } else {
            notificationsBuilder_.addAllMessages(other.notifications_);
          }
        }
      }
      if (!other.getNextPageToken().isEmpty()) {
        nextPageToken_ = other.nextPageToken_;
        bitField0_ |= 0x00000004;
        onChanged();
      }
      this.mergeUnknownFields(other.getUnknownFields());
      onChanged();
      return this;
    }

    @java.lang.Override
    public final boolean isInitialized() {
      return true;
    }

    @java.lang.Override
    public Builder mergeFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 10: {
              kind_ = input.readStringRequireUtf8();
              bitField0_ |= 0x00000001;
              break;
            } // case 10
            case 8058: {
              com.google.ccc.hosted.marketplace.v2.LicenseNotification m =
                  input.readMessage(
                      com.google.ccc.hosted.marketplace.v2.LicenseNotification.parser(),
                      extensionRegistry);
              if (notificationsBuilder_ == null) {
                ensureNotificationsIsMutable();
                notifications_.add(m);
              } else {
                notificationsBuilder_.addMessage(m);
              }
              break;
            } // case 8058
            case 804818: {
              nextPageToken_ = input.readStringRequireUtf8();
              bitField0_ |= 0x00000004;
              break;
            } // case 804818
            default: {
              if (!super.parseUnknownField(input, extensionRegistry, tag)) {
                done = true; // was an endgroup tag
              }
              break;
            } // default:
          } // switch (tag)
        } // while (!done)
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.unwrapIOException();
      } finally {
        onChanged();
      } // finally
      return this;
    }
    private int bitField0_;

    private java.lang.Object kind_ = "";
    /**
     * <code>string kind = 1;</code>
     * @return The kind.
     */
    public java.lang.String getKind() {
      java.lang.Object ref = kind_;
      if (!(ref instanceof java.lang.String)) {
        com.google.protobuf.ByteString bs =
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        kind_ = s;
        return s;
      } else {
        return (java.lang.String) ref;
      }
    }
    /**
     * <code>string kind = 1;</code>
     * @return The bytes for kind.
     */
    public com.google.protobuf.ByteString
        getKindBytes() {
      java.lang.Object ref = kind_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        kind_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }
    /**
     * <code>string kind = 1;</code>
     * @param value The kind to set.
     * @return This builder for chaining.
     */
    public Builder setKind(
        java.lang.String value) {
      if (value == null) { throw new NullPointerException(); }
      kind_ = value;
      bitField0_ |= 0x00000001;
      onChanged();
      return this;
    }
    /**
     * <code>string kind = 1;</code>
     * @return This builder for chaining.
     */
    public Builder clearKind() {
      kind_ = getDefaultInstance().getKind();
      bitField0_ = (bitField0_ & ~0x00000001);
      onChanged();
      return this;
    }
    /**
     * <code>string kind = 1;</code>
     * @param value The bytes for kind to set.
     * @return This builder for chaining.
     */
    public Builder setKindBytes(
        com.google.protobuf.ByteString value) {
      if (value == null) { throw new NullPointerException(); }
      checkByteStringIsUtf8(value);
      kind_ = value;
      bitField0_ |= 0x00000001;
      onChanged();
      return this;
    }

    private java.util.List<com.google.ccc.hosted.marketplace.v2.LicenseNotification> notifications_ =
      java.util.Collections.emptyList();
    private void ensureNotificationsIsMutable() {
      if (!((bitField0_ & 0x00000002) != 0)) {
        notifications_ = new java.util.ArrayList<com.google.ccc.hosted.marketplace.v2.LicenseNotification>(notifications_);
        bitField0_ |= 0x00000002;
       }
    }

    private com.google.protobuf.RepeatedFieldBuilderV3<
        com.google.ccc.hosted.marketplace.v2.LicenseNotification, com.google.ccc.hosted.marketplace.v2.LicenseNotification.Builder, com.google.ccc.hosted.marketplace.v2.LicenseNotificationOrBuilder> notificationsBuilder_;

    /**
     * <pre>
     * The list of notifications. One or more of:
     * - `provisions`: A new license of the application has been provisioned.
     * - `expiries`: A license of the application has expired.
     * - `deletions`: An application has been deleted from a domain.
     * - `reassignments`: An administrator has assigned or revoked a seat license
     * for the application on the provided domain.
     * </pre>
     *
     * <code>repeated .ccc.hosted.marketplace.v2.LicenseNotification notifications = 1007;</code>
     */
    public java.util.List<com.google.ccc.hosted.marketplace.v2.LicenseNotification> getNotificationsList() {
      if (notificationsBuilder_ == null) {
        return java.util.Collections.unmodifiableList(notifications_);
      } else {
        return notificationsBuilder_.getMessageList();
      }
    }
    /**
     * <pre>
     * The list of notifications. One or more of:
     * - `provisions`: A new license of the application has been provisioned.
     * - `expiries`: A license of the application has expired.
     * - `deletions`: An application has been deleted from a domain.
     * - `reassignments`: An administrator has assigned or revoked a seat license
     * for the application on the provided domain.
     * </pre>
     *
     * <code>repeated .ccc.hosted.marketplace.v2.LicenseNotification notifications = 1007;</code>
     */
    public int getNotificationsCount() {
      if (notificationsBuilder_ == null) {
        return notifications_.size();
      } else {
        return notificationsBuilder_.getCount();
      }
    }
    /**
     * <pre>
     * The list of notifications. One or more of:
     * - `provisions`: A new license of the application has been provisioned.
     * - `expiries`: A license of the application has expired.
     * - `deletions`: An application has been deleted from a domain.
     * - `reassignments`: An administrator has assigned or revoked a seat license
     * for the application on the provided domain.
     * </pre>
     *
     * <code>repeated .ccc.hosted.marketplace.v2.LicenseNotification notifications = 1007;</code>
     */
    public com.google.ccc.hosted.marketplace.v2.LicenseNotification getNotifications(int index) {
      if (notificationsBuilder_ == null) {
        return notifications_.get(index);
      } else {
        return notificationsBuilder_.getMessage(index);
      }
    }
    /**
     * <pre>
     * The list of notifications. One or more of:
     * - `provisions`: A new license of the application has been provisioned.
     * - `expiries`: A license of the application has expired.
     * - `deletions`: An application has been deleted from a domain.
     * - `reassignments`: An administrator has assigned or revoked a seat license
     * for the application on the provided domain.
     * </pre>
     *
     * <code>repeated .ccc.hosted.marketplace.v2.LicenseNotification notifications = 1007;</code>
     */
    public Builder setNotifications(
        int index, com.google.ccc.hosted.marketplace.v2.LicenseNotification value) {
      if (notificationsBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureNotificationsIsMutable();
        notifications_.set(index, value);
        onChanged();
      } else {
        notificationsBuilder_.setMessage(index, value);
      }
      return this;
    }
    /**
     * <pre>
     * The list of notifications. One or more of:
     * - `provisions`: A new license of the application has been provisioned.
     * - `expiries`: A license of the application has expired.
     * - `deletions`: An application has been deleted from a domain.
     * - `reassignments`: An administrator has assigned or revoked a seat license
     * for the application on the provided domain.
     * </pre>
     *
     * <code>repeated .ccc.hosted.marketplace.v2.LicenseNotification notifications = 1007;</code>
     */
    public Builder setNotifications(
        int index, com.google.ccc.hosted.marketplace.v2.LicenseNotification.Builder builderForValue) {
      if (notificationsBuilder_ == null) {
        ensureNotificationsIsMutable();
        notifications_.set(index, builderForValue.build());
        onChanged();
      } else {
        notificationsBuilder_.setMessage(index, builderForValue.build());
      }
      return this;
    }
    /**
     * <pre>
     * The list of notifications. One or more of:
     * - `provisions`: A new license of the application has been provisioned.
     * - `expiries`: A license of the application has expired.
     * - `deletions`: An application has been deleted from a domain.
     * - `reassignments`: An administrator has assigned or revoked a seat license
     * for the application on the provided domain.
     * </pre>
     *
     * <code>repeated .ccc.hosted.marketplace.v2.LicenseNotification notifications = 1007;</code>
     */
    public Builder addNotifications(com.google.ccc.hosted.marketplace.v2.LicenseNotification value) {
      if (notificationsBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureNotificationsIsMutable();
        notifications_.add(value);
        onChanged();
      } else {
        notificationsBuilder_.addMessage(value);
      }
      return this;
    }
    /**
     * <pre>
     * The list of notifications. One or more of:
     * - `provisions`: A new license of the application has been provisioned.
     * - `expiries`: A license of the application has expired.
     * - `deletions`: An application has been deleted from a domain.
     * - `reassignments`: An administrator has assigned or revoked a seat license
     * for the application on the provided domain.
     * </pre>
     *
     * <code>repeated .ccc.hosted.marketplace.v2.LicenseNotification notifications = 1007;</code>
     */
    public Builder addNotifications(
        int index, com.google.ccc.hosted.marketplace.v2.LicenseNotification value) {
      if (notificationsBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureNotificationsIsMutable();
        notifications_.add(index, value);
        onChanged();
      } else {
        notificationsBuilder_.addMessage(index, value);
      }
      return this;
    }
    /**
     * <pre>
     * The list of notifications. One or more of:
     * - `provisions`: A new license of the application has been provisioned.
     * - `expiries`: A license of the application has expired.
     * - `deletions`: An application has been deleted from a domain.
     * - `reassignments`: An administrator has assigned or revoked a seat license
     * for the application on the provided domain.
     * </pre>
     *
     * <code>repeated .ccc.hosted.marketplace.v2.LicenseNotification notifications = 1007;</code>
     */
    public Builder addNotifications(
        com.google.ccc.hosted.marketplace.v2.LicenseNotification.Builder builderForValue) {
      if (notificationsBuilder_ == null) {
        ensureNotificationsIsMutable();
        notifications_.add(builderForValue.build());
        onChanged();
      } else {
        notificationsBuilder_.addMessage(builderForValue.build());
      }
      return this;
    }
    /**
     * <pre>
     * The list of notifications. One or more of:
     * - `provisions`: A new license of the application has been provisioned.
     * - `expiries`: A license of the application has expired.
     * - `deletions`: An application has been deleted from a domain.
     * - `reassignments`: An administrator has assigned or revoked a seat license
     * for the application on the provided domain.
     * </pre>
     *
     * <code>repeated .ccc.hosted.marketplace.v2.LicenseNotification notifications = 1007;</code>
     */
    public Builder addNotifications(
        int index, com.google.ccc.hosted.marketplace.v2.LicenseNotification.Builder builderForValue) {
      if (notificationsBuilder_ == null) {
        ensureNotificationsIsMutable();
        notifications_.add(index, builderForValue.build());
        onChanged();
      } else {
        notificationsBuilder_.addMessage(index, builderForValue.build());
      }
      return this;
    }
    /**
     * <pre>
     * The list of notifications. One or more of:
     * - `provisions`: A new license of the application has been provisioned.
     * - `expiries`: A license of the application has expired.
     * - `deletions`: An application has been deleted from a domain.
     * - `reassignments`: An administrator has assigned or revoked a seat license
     * for the application on the provided domain.
     * </pre>
     *
     * <code>repeated .ccc.hosted.marketplace.v2.LicenseNotification notifications = 1007;</code>
     */
    public Builder addAllNotifications(
        java.lang.Iterable<? extends com.google.ccc.hosted.marketplace.v2.LicenseNotification> values) {
      if (notificationsBuilder_ == null) {
        ensureNotificationsIsMutable();
        com.google.protobuf.AbstractMessageLite.Builder.addAll(
            values, notifications_);
        onChanged();
      } else {
        notificationsBuilder_.addAllMessages(values);
      }
      return this;
    }
    /**
     * <pre>
     * The list of notifications. One or more of:
     * - `provisions`: A new license of the application has been provisioned.
     * - `expiries`: A license of the application has expired.
     * - `deletions`: An application has been deleted from a domain.
     * - `reassignments`: An administrator has assigned or revoked a seat license
     * for the application on the provided domain.
     * </pre>
     *
     * <code>repeated .ccc.hosted.marketplace.v2.LicenseNotification notifications = 1007;</code>
     */
    public Builder clearNotifications() {
      if (notificationsBuilder_ == null) {
        notifications_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000002);
        onChanged();
      } else {
        notificationsBuilder_.clear();
      }
      return this;
    }
    /**
     * <pre>
     * The list of notifications. One or more of:
     * - `provisions`: A new license of the application has been provisioned.
     * - `expiries`: A license of the application has expired.
     * - `deletions`: An application has been deleted from a domain.
     * - `reassignments`: An administrator has assigned or revoked a seat license
     * for the application on the provided domain.
     * </pre>
     *
     * <code>repeated .ccc.hosted.marketplace.v2.LicenseNotification notifications = 1007;</code>
     */
    public Builder removeNotifications(int index) {
      if (notificationsBuilder_ == null) {
        ensureNotificationsIsMutable();
        notifications_.remove(index);
        onChanged();
      } else {
        notificationsBuilder_.remove(index);
      }
      return this;
    }
    /**
     * <pre>
     * The list of notifications. One or more of:
     * - `provisions`: A new license of the application has been provisioned.
     * - `expiries`: A license of the application has expired.
     * - `deletions`: An application has been deleted from a domain.
     * - `reassignments`: An administrator has assigned or revoked a seat license
     * for the application on the provided domain.
     * </pre>
     *
     * <code>repeated .ccc.hosted.marketplace.v2.LicenseNotification notifications = 1007;</code>
     */
    public com.google.ccc.hosted.marketplace.v2.LicenseNotification.Builder getNotificationsBuilder(
        int index) {
      return getNotificationsFieldBuilder().getBuilder(index);
    }
    /**
     * <pre>
     * The list of notifications. One or more of:
     * - `provisions`: A new license of the application has been provisioned.
     * - `expiries`: A license of the application has expired.
     * - `deletions`: An application has been deleted from a domain.
     * - `reassignments`: An administrator has assigned or revoked a seat license
     * for the application on the provided domain.
     * </pre>
     *
     * <code>repeated .ccc.hosted.marketplace.v2.LicenseNotification notifications = 1007;</code>
     */
    public com.google.ccc.hosted.marketplace.v2.LicenseNotificationOrBuilder getNotificationsOrBuilder(
        int index) {
      if (notificationsBuilder_ == null) {
        return notifications_.get(index);  } else {
        return notificationsBuilder_.getMessageOrBuilder(index);
      }
    }
    /**
     * <pre>
     * The list of notifications. One or more of:
     * - `provisions`: A new license of the application has been provisioned.
     * - `expiries`: A license of the application has expired.
     * - `deletions`: An application has been deleted from a domain.
     * - `reassignments`: An administrator has assigned or revoked a seat license
     * for the application on the provided domain.
     * </pre>
     *
     * <code>repeated .ccc.hosted.marketplace.v2.LicenseNotification notifications = 1007;</code>
     */
    public java.util.List<? extends com.google.ccc.hosted.marketplace.v2.LicenseNotificationOrBuilder> 
         getNotificationsOrBuilderList() {
      if (notificationsBuilder_ != null) {
        return notificationsBuilder_.getMessageOrBuilderList();
      } else {
        return java.util.Collections.unmodifiableList(notifications_);
      }
    }
    /**
     * <pre>
     * The list of notifications. One or more of:
     * - `provisions`: A new license of the application has been provisioned.
     * - `expiries`: A license of the application has expired.
     * - `deletions`: An application has been deleted from a domain.
     * - `reassignments`: An administrator has assigned or revoked a seat license
     * for the application on the provided domain.
     * </pre>
     *
     * <code>repeated .ccc.hosted.marketplace.v2.LicenseNotification notifications = 1007;</code>
     */
    public com.google.ccc.hosted.marketplace.v2.LicenseNotification.Builder addNotificationsBuilder() {
      return getNotificationsFieldBuilder().addBuilder(
          com.google.ccc.hosted.marketplace.v2.LicenseNotification.getDefaultInstance());
    }
    /**
     * <pre>
     * The list of notifications. One or more of:
     * - `provisions`: A new license of the application has been provisioned.
     * - `expiries`: A license of the application has expired.
     * - `deletions`: An application has been deleted from a domain.
     * - `reassignments`: An administrator has assigned or revoked a seat license
     * for the application on the provided domain.
     * </pre>
     *
     * <code>repeated .ccc.hosted.marketplace.v2.LicenseNotification notifications = 1007;</code>
     */
    public com.google.ccc.hosted.marketplace.v2.LicenseNotification.Builder addNotificationsBuilder(
        int index) {
      return getNotificationsFieldBuilder().addBuilder(
          index, com.google.ccc.hosted.marketplace.v2.LicenseNotification.getDefaultInstance());
    }
    /**
     * <pre>
     * The list of notifications. One or more of:
     * - `provisions`: A new license of the application has been provisioned.
     * - `expiries`: A license of the application has expired.
     * - `deletions`: An application has been deleted from a domain.
     * - `reassignments`: An administrator has assigned or revoked a seat license
     * for the application on the provided domain.
     * </pre>
     *
     * <code>repeated .ccc.hosted.marketplace.v2.LicenseNotification notifications = 1007;</code>
     */
    public java.util.List<com.google.ccc.hosted.marketplace.v2.LicenseNotification.Builder> 
         getNotificationsBuilderList() {
      return getNotificationsFieldBuilder().getBuilderList();
    }
    private com.google.protobuf.RepeatedFieldBuilderV3<
        com.google.ccc.hosted.marketplace.v2.LicenseNotification, com.google.ccc.hosted.marketplace.v2.LicenseNotification.Builder, com.google.ccc.hosted.marketplace.v2.LicenseNotificationOrBuilder> 
        getNotificationsFieldBuilder() {
      if (notificationsBuilder_ == null) {
        notificationsBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<
            com.google.ccc.hosted.marketplace.v2.LicenseNotification, com.google.ccc.hosted.marketplace.v2.LicenseNotification.Builder, com.google.ccc.hosted.marketplace.v2.LicenseNotificationOrBuilder>(
                notifications_,
                ((bitField0_ & 0x00000002) != 0),
                getParentForChildren(),
                isClean());
        notifications_ = null;
      }
      return notificationsBuilder_;
    }

    private java.lang.Object nextPageToken_ = "";
    /**
     * <pre>
     * The token used to continue querying for notifications after the final
     * notification in the current result set.
     * </pre>
     *
     * <code>string next_page_token = 100602;</code>
     * @return The nextPageToken.
     */
    public java.lang.String getNextPageToken() {
      java.lang.Object ref = nextPageToken_;
      if (!(ref instanceof java.lang.String)) {
        com.google.protobuf.ByteString bs =
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        nextPageToken_ = s;
        return s;
      } else {
        return (java.lang.String) ref;
      }
    }
    /**
     * <pre>
     * The token used to continue querying for notifications after the final
     * notification in the current result set.
     * </pre>
     *
     * <code>string next_page_token = 100602;</code>
     * @return The bytes for nextPageToken.
     */
    public com.google.protobuf.ByteString
        getNextPageTokenBytes() {
      java.lang.Object ref = nextPageToken_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        nextPageToken_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }
    /**
     * <pre>
     * The token used to continue querying for notifications after the final
     * notification in the current result set.
     * </pre>
     *
     * <code>string next_page_token = 100602;</code>
     * @param value The nextPageToken to set.
     * @return This builder for chaining.
     */
    public Builder setNextPageToken(
        java.lang.String value) {
      if (value == null) { throw new NullPointerException(); }
      nextPageToken_ = value;
      bitField0_ |= 0x00000004;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * The token used to continue querying for notifications after the final
     * notification in the current result set.
     * </pre>
     *
     * <code>string next_page_token = 100602;</code>
     * @return This builder for chaining.
     */
    public Builder clearNextPageToken() {
      nextPageToken_ = getDefaultInstance().getNextPageToken();
      bitField0_ = (bitField0_ & ~0x00000004);
      onChanged();
      return this;
    }
    /**
     * <pre>
     * The token used to continue querying for notifications after the final
     * notification in the current result set.
     * </pre>
     *
     * <code>string next_page_token = 100602;</code>
     * @param value The bytes for nextPageToken to set.
     * @return This builder for chaining.
     */
    public Builder setNextPageTokenBytes(
        com.google.protobuf.ByteString value) {
      if (value == null) { throw new NullPointerException(); }
      checkByteStringIsUtf8(value);
      nextPageToken_ = value;
      bitField0_ |= 0x00000004;
      onChanged();
      return this;
    }
    @java.lang.Override
    public final Builder setUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return super.setUnknownFields(unknownFields);
    }

    @java.lang.Override
    public final Builder mergeUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return super.mergeUnknownFields(unknownFields);
    }


    // @@protoc_insertion_point(builder_scope:ccc.hosted.marketplace.v2.LicenseNotificationList)
  }

  // @@protoc_insertion_point(class_scope:ccc.hosted.marketplace.v2.LicenseNotificationList)
  private static final com.google.ccc.hosted.marketplace.v2.LicenseNotificationList DEFAULT_INSTANCE;
  static {
    DEFAULT_INSTANCE = new com.google.ccc.hosted.marketplace.v2.LicenseNotificationList();
  }

  public static com.google.ccc.hosted.marketplace.v2.LicenseNotificationList getDefaultInstance() {
    return DEFAULT_INSTANCE;
  }

  private static final com.google.protobuf.Parser<LicenseNotificationList>
      PARSER = new com.google.protobuf.AbstractParser<LicenseNotificationList>() {
    @java.lang.Override
    public LicenseNotificationList parsePartialFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      Builder builder = newBuilder();
      try {
        builder.mergeFrom(input, extensionRegistry);
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(builder.buildPartial());
      } catch (com.google.protobuf.UninitializedMessageException e) {
        throw e.asInvalidProtocolBufferException().setUnfinishedMessage(builder.buildPartial());
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(e)
            .setUnfinishedMessage(builder.buildPartial());
      }
      return builder.buildPartial();
    }
  };

  public static com.google.protobuf.Parser<LicenseNotificationList> parser() {
    return PARSER;
  }

  @java.lang.Override
  public com.google.protobuf.Parser<LicenseNotificationList> getParserForType() {
    return PARSER;
  }

  @java.lang.Override
  public com.google.ccc.hosted.marketplace.v2.LicenseNotificationList getDefaultInstanceForType() {
    return DEFAULT_INSTANCE;
  }

}

