// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: google/protobuf/map_unittest.proto

package protobuf_unittest;

public final class MapUnittest {
  private MapUnittest() {}
  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistryLite registry) {
  }

  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistry registry) {
    registerAllExtensions(
        (com.google.protobuf.ExtensionRegistryLite) registry);
  }
  /**
   * Protobuf enum {@code protobuf_unittest.MapEnum}
   */
  public enum MapEnum
      implements com.google.protobuf.ProtocolMessageEnum {
    /**
     * <code>MAP_ENUM_FOO = 0;</code>
     */
    MAP_ENUM_FOO(0),
    /**
     * <code>MAP_ENUM_BAR = 1;</code>
     */
    MAP_ENUM_BAR(1),
    /**
     * <code>MAP_ENUM_BAZ = 2;</code>
     */
    MAP_ENUM_BAZ(2),
    UNRECOGNIZED(-1),
    ;

    /**
     * <code>MAP_ENUM_FOO = 0;</code>
     */
    public static final int MAP_ENUM_FOO_VALUE = 0;
    /**
     * <code>MAP_ENUM_BAR = 1;</code>
     */
    public static final int MAP_ENUM_BAR_VALUE = 1;
    /**
     * <code>MAP_ENUM_BAZ = 2;</code>
     */
    public static final int MAP_ENUM_BAZ_VALUE = 2;


    public final int getNumber() {
      if (this == UNRECOGNIZED) {
        throw new java.lang.IllegalArgumentException(
            "Can't get the number of an unknown enum value.");
      }
      return value;
    }

    /**
     * @param value The numeric wire value of the corresponding enum entry.
     * @return The enum associated with the given numeric wire value.
     * @deprecated Use {@link #forNumber(int)} instead.
     */
    @java.lang.Deprecated
    public static MapEnum valueOf(int value) {
      return forNumber(value);
    }

    /**
     * @param value The numeric wire value of the corresponding enum entry.
     * @return The enum associated with the given numeric wire value.
     */
    public static MapEnum forNumber(int value) {
      switch (value) {
        case 0: return MAP_ENUM_FOO;
        case 1: return MAP_ENUM_BAR;
        case 2: return MAP_ENUM_BAZ;
        default: return null;
      }
    }

    public static com.google.protobuf.Internal.EnumLiteMap<MapEnum>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static final com.google.protobuf.Internal.EnumLiteMap<
        MapEnum> internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<MapEnum>() {
            public MapEnum findValueByNumber(int number) {
              return MapEnum.forNumber(number);
            }
          };

    public final com.google.protobuf.Descriptors.EnumValueDescriptor
        getValueDescriptor() {
      if (this == UNRECOGNIZED) {
        throw new java.lang.IllegalStateException(
            "Can't get the descriptor of an unrecognized enum value.");
      }
      return getDescriptor().getValues().get(ordinal());
    }
    public final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptorForType() {
      return getDescriptor();
    }
    public static final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptor() {
      return protobuf_unittest.MapUnittest.getDescriptor().getEnumTypes().get(0);
    }

    private static final MapEnum[] VALUES = values();

    public static MapEnum valueOf(
        com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
      if (desc.getType() != getDescriptor()) {
        throw new java.lang.IllegalArgumentException(
          "EnumValueDescriptor is not for this type.");
      }
      if (desc.getIndex() == -1) {
        return UNRECOGNIZED;
      }
      return VALUES[desc.getIndex()];
    }

    private final int value;

    private MapEnum(int value) {
      this.value = value;
    }

    // @@protoc_insertion_point(enum_scope:protobuf_unittest.MapEnum)
  }

  public interface TestMapOrBuilder extends
      // @@protoc_insertion_point(interface_extends:protobuf_unittest.TestMap)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>map&lt;int32, int32&gt; map_int32_int32 = 1;</code>
     */
    int getMapInt32Int32Count();
    /**
     * <code>map&lt;int32, int32&gt; map_int32_int32 = 1;</code>
     */
    boolean containsMapInt32Int32(
        int key);
    /**
     * Use {@link #getMapInt32Int32Map()} instead.
     */
    @java.lang.Deprecated
    java.util.Map<java.lang.Integer, java.lang.Integer>
    getMapInt32Int32();
    /**
     * <code>map&lt;int32, int32&gt; map_int32_int32 = 1;</code>
     */
    java.util.Map<java.lang.Integer, java.lang.Integer>
    getMapInt32Int32Map();
    /**
     * <code>map&lt;int32, int32&gt; map_int32_int32 = 1;</code>
     */

    int getMapInt32Int32OrDefault(
        int key,
        int defaultValue);
    /**
     * <code>map&lt;int32, int32&gt; map_int32_int32 = 1;</code>
     */

    int getMapInt32Int32OrThrow(
        int key);

    /**
     * <code>map&lt;int64, int64&gt; map_int64_int64 = 2;</code>
     */
    int getMapInt64Int64Count();
    /**
     * <code>map&lt;int64, int64&gt; map_int64_int64 = 2;</code>
     */
    boolean containsMapInt64Int64(
        long key);
    /**
     * Use {@link #getMapInt64Int64Map()} instead.
     */
    @java.lang.Deprecated
    java.util.Map<java.lang.Long, java.lang.Long>
    getMapInt64Int64();
    /**
     * <code>map&lt;int64, int64&gt; map_int64_int64 = 2;</code>
     */
    java.util.Map<java.lang.Long, java.lang.Long>
    getMapInt64Int64Map();
    /**
     * <code>map&lt;int64, int64&gt; map_int64_int64 = 2;</code>
     */

    long getMapInt64Int64OrDefault(
        long key,
        long defaultValue);
    /**
     * <code>map&lt;int64, int64&gt; map_int64_int64 = 2;</code>
     */

    long getMapInt64Int64OrThrow(
        long key);

    /**
     * <code>map&lt;uint32, uint32&gt; map_uint32_uint32 = 3;</code>
     */
    int getMapUint32Uint32Count();
    /**
     * <code>map&lt;uint32, uint32&gt; map_uint32_uint32 = 3;</code>
     */
    boolean containsMapUint32Uint32(
        int key);
    /**
     * Use {@link #getMapUint32Uint32Map()} instead.
     */
    @java.lang.Deprecated
    java.util.Map<java.lang.Integer, java.lang.Integer>
    getMapUint32Uint32();
    /**
     * <code>map&lt;uint32, uint32&gt; map_uint32_uint32 = 3;</code>
     */
    java.util.Map<java.lang.Integer, java.lang.Integer>
    getMapUint32Uint32Map();
    /**
     * <code>map&lt;uint32, uint32&gt; map_uint32_uint32 = 3;</code>
     */

    int getMapUint32Uint32OrDefault(
        int key,
        int defaultValue);
    /**
     * <code>map&lt;uint32, uint32&gt; map_uint32_uint32 = 3;</code>
     */

    int getMapUint32Uint32OrThrow(
        int key);

    /**
     * <code>map&lt;uint64, uint64&gt; map_uint64_uint64 = 4;</code>
     */
    int getMapUint64Uint64Count();
    /**
     * <code>map&lt;uint64, uint64&gt; map_uint64_uint64 = 4;</code>
     */
    boolean containsMapUint64Uint64(
        long key);
    /**
     * Use {@link #getMapUint64Uint64Map()} instead.
     */
    @java.lang.Deprecated
    java.util.Map<java.lang.Long, java.lang.Long>
    getMapUint64Uint64();
    /**
     * <code>map&lt;uint64, uint64&gt; map_uint64_uint64 = 4;</code>
     */
    java.util.Map<java.lang.Long, java.lang.Long>
    getMapUint64Uint64Map();
    /**
     * <code>map&lt;uint64, uint64&gt; map_uint64_uint64 = 4;</code>
     */

    long getMapUint64Uint64OrDefault(
        long key,
        long defaultValue);
    /**
     * <code>map&lt;uint64, uint64&gt; map_uint64_uint64 = 4;</code>
     */

    long getMapUint64Uint64OrThrow(
        long key);

    /**
     * <code>map&lt;sint32, sint32&gt; map_sint32_sint32 = 5;</code>
     */
    int getMapSint32Sint32Count();
    /**
     * <code>map&lt;sint32, sint32&gt; map_sint32_sint32 = 5;</code>
     */
    boolean containsMapSint32Sint32(
        int key);
    /**
     * Use {@link #getMapSint32Sint32Map()} instead.
     */
    @java.lang.Deprecated
    java.util.Map<java.lang.Integer, java.lang.Integer>
    getMapSint32Sint32();
    /**
     * <code>map&lt;sint32, sint32&gt; map_sint32_sint32 = 5;</code>
     */
    java.util.Map<java.lang.Integer, java.lang.Integer>
    getMapSint32Sint32Map();
    /**
     * <code>map&lt;sint32, sint32&gt; map_sint32_sint32 = 5;</code>
     */

    int getMapSint32Sint32OrDefault(
        int key,
        int defaultValue);
    /**
     * <code>map&lt;sint32, sint32&gt; map_sint32_sint32 = 5;</code>
     */

    int getMapSint32Sint32OrThrow(
        int key);

    /**
     * <code>map&lt;sint64, sint64&gt; map_sint64_sint64 = 6;</code>
     */
    int getMapSint64Sint64Count();
    /**
     * <code>map&lt;sint64, sint64&gt; map_sint64_sint64 = 6;</code>
     */
    boolean containsMapSint64Sint64(
        long key);
    /**
     * Use {@link #getMapSint64Sint64Map()} instead.
     */
    @java.lang.Deprecated
    java.util.Map<java.lang.Long, java.lang.Long>
    getMapSint64Sint64();
    /**
     * <code>map&lt;sint64, sint64&gt; map_sint64_sint64 = 6;</code>
     */
    java.util.Map<java.lang.Long, java.lang.Long>
    getMapSint64Sint64Map();
    /**
     * <code>map&lt;sint64, sint64&gt; map_sint64_sint64 = 6;</code>
     */

    long getMapSint64Sint64OrDefault(
        long key,
        long defaultValue);
    /**
     * <code>map&lt;sint64, sint64&gt; map_sint64_sint64 = 6;</code>
     */

    long getMapSint64Sint64OrThrow(
        long key);

    /**
     * <code>map&lt;fixed32, fixed32&gt; map_fixed32_fixed32 = 7;</code>
     */
    int getMapFixed32Fixed32Count();
    /**
     * <code>map&lt;fixed32, fixed32&gt; map_fixed32_fixed32 = 7;</code>
     */
    boolean containsMapFixed32Fixed32(
        int key);
    /**
     * Use {@link #getMapFixed32Fixed32Map()} instead.
     */
    @java.lang.Deprecated
    java.util.Map<java.lang.Integer, java.lang.Integer>
    getMapFixed32Fixed32();
    /**
     * <code>map&lt;fixed32, fixed32&gt; map_fixed32_fixed32 = 7;</code>
     */
    java.util.Map<java.lang.Integer, java.lang.Integer>
    getMapFixed32Fixed32Map();
    /**
     * <code>map&lt;fixed32, fixed32&gt; map_fixed32_fixed32 = 7;</code>
     */

    int getMapFixed32Fixed32OrDefault(
        int key,
        int defaultValue);
    /**
     * <code>map&lt;fixed32, fixed32&gt; map_fixed32_fixed32 = 7;</code>
     */

    int getMapFixed32Fixed32OrThrow(
        int key);

    /**
     * <code>map&lt;fixed64, fixed64&gt; map_fixed64_fixed64 = 8;</code>
     */
    int getMapFixed64Fixed64Count();
    /**
     * <code>map&lt;fixed64, fixed64&gt; map_fixed64_fixed64 = 8;</code>
     */
    boolean containsMapFixed64Fixed64(
        long key);
    /**
     * Use {@link #getMapFixed64Fixed64Map()} instead.
     */
    @java.lang.Deprecated
    java.util.Map<java.lang.Long, java.lang.Long>
    getMapFixed64Fixed64();
    /**
     * <code>map&lt;fixed64, fixed64&gt; map_fixed64_fixed64 = 8;</code>
     */
    java.util.Map<java.lang.Long, java.lang.Long>
    getMapFixed64Fixed64Map();
    /**
     * <code>map&lt;fixed64, fixed64&gt; map_fixed64_fixed64 = 8;</code>
     */

    long getMapFixed64Fixed64OrDefault(
        long key,
        long defaultValue);
    /**
     * <code>map&lt;fixed64, fixed64&gt; map_fixed64_fixed64 = 8;</code>
     */

    long getMapFixed64Fixed64OrThrow(
        long key);

    /**
     * <code>map&lt;sfixed32, sfixed32&gt; map_sfixed32_sfixed32 = 9;</code>
     */
    int getMapSfixed32Sfixed32Count();
    /**
     * <code>map&lt;sfixed32, sfixed32&gt; map_sfixed32_sfixed32 = 9;</code>
     */
    boolean containsMapSfixed32Sfixed32(
        int key);
    /**
     * Use {@link #getMapSfixed32Sfixed32Map()} instead.
     */
    @java.lang.Deprecated
    java.util.Map<java.lang.Integer, java.lang.Integer>
    getMapSfixed32Sfixed32();
    /**
     * <code>map&lt;sfixed32, sfixed32&gt; map_sfixed32_sfixed32 = 9;</code>
     */
    java.util.Map<java.lang.Integer, java.lang.Integer>
    getMapSfixed32Sfixed32Map();
    /**
     * <code>map&lt;sfixed32, sfixed32&gt; map_sfixed32_sfixed32 = 9;</code>
     */

    int getMapSfixed32Sfixed32OrDefault(
        int key,
        int defaultValue);
    /**
     * <code>map&lt;sfixed32, sfixed32&gt; map_sfixed32_sfixed32 = 9;</code>
     */

    int getMapSfixed32Sfixed32OrThrow(
        int key);

    /**
     * <code>map&lt;sfixed64, sfixed64&gt; map_sfixed64_sfixed64 = 10;</code>
     */
    int getMapSfixed64Sfixed64Count();
    /**
     * <code>map&lt;sfixed64, sfixed64&gt; map_sfixed64_sfixed64 = 10;</code>
     */
    boolean containsMapSfixed64Sfixed64(
        long key);
    /**
     * Use {@link #getMapSfixed64Sfixed64Map()} instead.
     */
    @java.lang.Deprecated
    java.util.Map<java.lang.Long, java.lang.Long>
    getMapSfixed64Sfixed64();
    /**
     * <code>map&lt;sfixed64, sfixed64&gt; map_sfixed64_sfixed64 = 10;</code>
     */
    java.util.Map<java.lang.Long, java.lang.Long>
    getMapSfixed64Sfixed64Map();
    /**
     * <code>map&lt;sfixed64, sfixed64&gt; map_sfixed64_sfixed64 = 10;</code>
     */

    long getMapSfixed64Sfixed64OrDefault(
        long key,
        long defaultValue);
    /**
     * <code>map&lt;sfixed64, sfixed64&gt; map_sfixed64_sfixed64 = 10;</code>
     */

    long getMapSfixed64Sfixed64OrThrow(
        long key);

    /**
     * <code>map&lt;int32, float&gt; map_int32_float = 11;</code>
     */
    int getMapInt32FloatCount();
    /**
     * <code>map&lt;int32, float&gt; map_int32_float = 11;</code>
     */
    boolean containsMapInt32Float(
        int key);
    /**
     * Use {@link #getMapInt32FloatMap()} instead.
     */
    @java.lang.Deprecated
    java.util.Map<java.lang.Integer, java.lang.Float>
    getMapInt32Float();
    /**
     * <code>map&lt;int32, float&gt; map_int32_float = 11;</code>
     */
    java.util.Map<java.lang.Integer, java.lang.Float>
    getMapInt32FloatMap();
    /**
     * <code>map&lt;int32, float&gt; map_int32_float = 11;</code>
     */

    float getMapInt32FloatOrDefault(
        int key,
        float defaultValue);
    /**
     * <code>map&lt;int32, float&gt; map_int32_float = 11;</code>
     */

    float getMapInt32FloatOrThrow(
        int key);

    /**
     * <code>map&lt;int32, double&gt; map_int32_double = 12;</code>
     */
    int getMapInt32DoubleCount();
    /**
     * <code>map&lt;int32, double&gt; map_int32_double = 12;</code>
     */
    boolean containsMapInt32Double(
        int key);
    /**
     * Use {@link #getMapInt32DoubleMap()} instead.
     */
    @java.lang.Deprecated
    java.util.Map<java.lang.Integer, java.lang.Double>
    getMapInt32Double();
    /**
     * <code>map&lt;int32, double&gt; map_int32_double = 12;</code>
     */
    java.util.Map<java.lang.Integer, java.lang.Double>
    getMapInt32DoubleMap();
    /**
     * <code>map&lt;int32, double&gt; map_int32_double = 12;</code>
     */

    double getMapInt32DoubleOrDefault(
        int key,
        double defaultValue);
    /**
     * <code>map&lt;int32, double&gt; map_int32_double = 12;</code>
     */

    double getMapInt32DoubleOrThrow(
        int key);

    /**
     * <code>map&lt;bool, bool&gt; map_bool_bool = 13;</code>
     */
    int getMapBoolBoolCount();
    /**
     * <code>map&lt;bool, bool&gt; map_bool_bool = 13;</code>
     */
    boolean containsMapBoolBool(
        boolean key);
    /**
     * Use {@link #getMapBoolBoolMap()} instead.
     */
    @java.lang.Deprecated
    java.util.Map<java.lang.Boolean, java.lang.Boolean>
    getMapBoolBool();
    /**
     * <code>map&lt;bool, bool&gt; map_bool_bool = 13;</code>
     */
    java.util.Map<java.lang.Boolean, java.lang.Boolean>
    getMapBoolBoolMap();
    /**
     * <code>map&lt;bool, bool&gt; map_bool_bool = 13;</code>
     */

    boolean getMapBoolBoolOrDefault(
        boolean key,
        boolean defaultValue);
    /**
     * <code>map&lt;bool, bool&gt; map_bool_bool = 13;</code>
     */

    boolean getMapBoolBoolOrThrow(
        boolean key);

    /**
     * <code>map&lt;string, string&gt; map_string_string = 14;</code>
     */
    int getMapStringStringCount();
    /**
     * <code>map&lt;string, string&gt; map_string_string = 14;</code>
     */
    boolean containsMapStringString(
        java.lang.String key);
    /**
     * Use {@link #getMapStringStringMap()} instead.
     */
    @java.lang.Deprecated
    java.util.Map<java.lang.String, java.lang.String>
    getMapStringString();
    /**
     * <code>map&lt;string, string&gt; map_string_string = 14;</code>
     */
    java.util.Map<java.lang.String, java.lang.String>
    getMapStringStringMap();
    /**
     * <code>map&lt;string, string&gt; map_string_string = 14;</code>
     */

    /* nullable */
java.lang.String getMapStringStringOrDefault(
        java.lang.String key,
        /* nullable */
java.lang.String defaultValue);
    /**
     * <code>map&lt;string, string&gt; map_string_string = 14;</code>
     */

    java.lang.String getMapStringStringOrThrow(
        java.lang.String key);

    /**
     * <code>map&lt;int32, bytes&gt; map_int32_bytes = 15;</code>
     */
    int getMapInt32BytesCount();
    /**
     * <code>map&lt;int32, bytes&gt; map_int32_bytes = 15;</code>
     */
    boolean containsMapInt32Bytes(
        int key);
    /**
     * Use {@link #getMapInt32BytesMap()} instead.
     */
    @java.lang.Deprecated
    java.util.Map<java.lang.Integer, com.google.protobuf.ByteString>
    getMapInt32Bytes();
    /**
     * <code>map&lt;int32, bytes&gt; map_int32_bytes = 15;</code>
     */
    java.util.Map<java.lang.Integer, com.google.protobuf.ByteString>
    getMapInt32BytesMap();
    /**
     * <code>map&lt;int32, bytes&gt; map_int32_bytes = 15;</code>
     */

    /* nullable */
com.google.protobuf.ByteString getMapInt32BytesOrDefault(
        int key,
        /* nullable */
com.google.protobuf.ByteString defaultValue);
    /**
     * <code>map&lt;int32, bytes&gt; map_int32_bytes = 15;</code>
     */

    com.google.protobuf.ByteString getMapInt32BytesOrThrow(
        int key);

    /**
     * <code>map&lt;int32, .protobuf_unittest.MapEnum&gt; map_int32_enum = 16;</code>
     */
    int getMapInt32EnumCount();
    /**
     * <code>map&lt;int32, .protobuf_unittest.MapEnum&gt; map_int32_enum = 16;</code>
     */
    boolean containsMapInt32Enum(
        int key);
    /**
     * Use {@link #getMapInt32EnumMap()} instead.
     */
    @java.lang.Deprecated
    java.util.Map<java.lang.Integer, protobuf_unittest.MapUnittest.MapEnum>
    getMapInt32Enum();
    /**
     * <code>map&lt;int32, .protobuf_unittest.MapEnum&gt; map_int32_enum = 16;</code>
     */
    java.util.Map<java.lang.Integer, protobuf_unittest.MapUnittest.MapEnum>
    getMapInt32EnumMap();
    /**
     * <code>map&lt;int32, .protobuf_unittest.MapEnum&gt; map_int32_enum = 16;</code>
     */
    /* nullable */
protobuf_unittest.MapUnittest.MapEnum getMapInt32EnumOrDefault(
        int key,
        /* nullable */
protobuf_unittest.MapUnittest.MapEnum         defaultValue);
    /**
     * <code>map&lt;int32, .protobuf_unittest.MapEnum&gt; map_int32_enum = 16;</code>
     */
    protobuf_unittest.MapUnittest.MapEnum getMapInt32EnumOrThrow(
        int key);
    /**
     * Use {@link #getMapInt32EnumValueMap()} instead.
     */
    @java.lang.Deprecated
    java.util.Map<java.lang.Integer, java.lang.Integer>
    getMapInt32EnumValue();
    /**
     * <code>map&lt;int32, .protobuf_unittest.MapEnum&gt; map_int32_enum = 16;</code>
     */
    java.util.Map<java.lang.Integer, java.lang.Integer>
    getMapInt32EnumValueMap();
    /**
     * <code>map&lt;int32, .protobuf_unittest.MapEnum&gt; map_int32_enum = 16;</code>
     */

    int getMapInt32EnumValueOrDefault(
        int key,
        int defaultValue);
    /**
     * <code>map&lt;int32, .protobuf_unittest.MapEnum&gt; map_int32_enum = 16;</code>
     */

    int getMapInt32EnumValueOrThrow(
        int key);

    /**
     * <code>map&lt;int32, .protobuf_unittest.ForeignMessage&gt; map_int32_foreign_message = 17;</code>
     */
    int getMapInt32ForeignMessageCount();
    /**
     * <code>map&lt;int32, .protobuf_unittest.ForeignMessage&gt; map_int32_foreign_message = 17;</code>
     */
    boolean containsMapInt32ForeignMessage(
        int key);
    /**
     * Use {@link #getMapInt32ForeignMessageMap()} instead.
     */
    @java.lang.Deprecated
    java.util.Map<java.lang.Integer, protobuf_unittest.UnittestProto.ForeignMessage>
    getMapInt32ForeignMessage();
    /**
     * <code>map&lt;int32, .protobuf_unittest.ForeignMessage&gt; map_int32_foreign_message = 17;</code>
     */
    java.util.Map<java.lang.Integer, protobuf_unittest.UnittestProto.ForeignMessage>
    getMapInt32ForeignMessageMap();
    /**
     * <code>map&lt;int32, .protobuf_unittest.ForeignMessage&gt; map_int32_foreign_message = 17;</code>
     */

    /* nullable */
protobuf_unittest.UnittestProto.ForeignMessage getMapInt32ForeignMessageOrDefault(
        int key,
        /* nullable */
protobuf_unittest.UnittestProto.ForeignMessage defaultValue);
    /**
     * <code>map&lt;int32, .protobuf_unittest.ForeignMessage&gt; map_int32_foreign_message = 17;</code>
     */

    protobuf_unittest.UnittestProto.ForeignMessage getMapInt32ForeignMessageOrThrow(
        int key);

    /**
     * <code>map&lt;string, .protobuf_unittest.ForeignMessage&gt; map_string_foreign_message = 18;</code>
     */
    int getMapStringForeignMessageCount();
    /**
     * <code>map&lt;string, .protobuf_unittest.ForeignMessage&gt; map_string_foreign_message = 18;</code>
     */
    boolean containsMapStringForeignMessage(
        java.lang.String key);
    /**
     * Use {@link #getMapStringForeignMessageMap()} instead.
     */
    @java.lang.Deprecated
    java.util.Map<java.lang.String, protobuf_unittest.UnittestProto.ForeignMessage>
    getMapStringForeignMessage();
    /**
     * <code>map&lt;string, .protobuf_unittest.ForeignMessage&gt; map_string_foreign_message = 18;</code>
     */
    java.util.Map<java.lang.String, protobuf_unittest.UnittestProto.ForeignMessage>
    getMapStringForeignMessageMap();
    /**
     * <code>map&lt;string, .protobuf_unittest.ForeignMessage&gt; map_string_foreign_message = 18;</code>
     */

    /* nullable */
protobuf_unittest.UnittestProto.ForeignMessage getMapStringForeignMessageOrDefault(
        java.lang.String key,
        /* nullable */
protobuf_unittest.UnittestProto.ForeignMessage defaultValue);
    /**
     * <code>map&lt;string, .protobuf_unittest.ForeignMessage&gt; map_string_foreign_message = 18;</code>
     */

    protobuf_unittest.UnittestProto.ForeignMessage getMapStringForeignMessageOrThrow(
        java.lang.String key);

    /**
     * <code>map&lt;int32, .protobuf_unittest.TestAllTypes&gt; map_int32_all_types = 19;</code>
     */
    int getMapInt32AllTypesCount();
    /**
     * <code>map&lt;int32, .protobuf_unittest.TestAllTypes&gt; map_int32_all_types = 19;</code>
     */
    boolean containsMapInt32AllTypes(
        int key);
    /**
     * Use {@link #getMapInt32AllTypesMap()} instead.
     */
    @java.lang.Deprecated
    java.util.Map<java.lang.Integer, protobuf_unittest.UnittestProto.TestAllTypes>
    getMapInt32AllTypes();
    /**
     * <code>map&lt;int32, .protobuf_unittest.TestAllTypes&gt; map_int32_all_types = 19;</code>
     */
    java.util.Map<java.lang.Integer, protobuf_unittest.UnittestProto.TestAllTypes>
    getMapInt32AllTypesMap();
    /**
     * <code>map&lt;int32, .protobuf_unittest.TestAllTypes&gt; map_int32_all_types = 19;</code>
     */

    /* nullable */
protobuf_unittest.UnittestProto.TestAllTypes getMapInt32AllTypesOrDefault(
        int key,
        /* nullable */
protobuf_unittest.UnittestProto.TestAllTypes defaultValue);
    /**
     * <code>map&lt;int32, .protobuf_unittest.TestAllTypes&gt; map_int32_all_types = 19;</code>
     */

    protobuf_unittest.UnittestProto.TestAllTypes getMapInt32AllTypesOrThrow(
        int key);
  }
  /**
   * <pre>
   * Tests maps.
   * </pre>
   *
   * Protobuf type {@code protobuf_unittest.TestMap}
   */
  public static final class TestMap extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:protobuf_unittest.TestMap)
      TestMapOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use TestMap.newBuilder() to construct.
    private TestMap(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private TestMap() {
    }

    @java.lang.Override
    @SuppressWarnings({"unused"})
    protected java.lang.Object newInstance(
        UnusedPrivateParameter unused) {
      return new TestMap();
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private TestMap(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 10: {
              if (!((mutable_bitField0_ & 0x00000001) != 0)) {
                mapInt32Int32_ = com.google.protobuf.MapField.newMapField(
                    MapInt32Int32DefaultEntryHolder.defaultEntry);
                mutable_bitField0_ |= 0x00000001;
              }
              com.google.protobuf.MapEntry<java.lang.Integer, java.lang.Integer>
              mapInt32Int32__ = input.readMessage(
                  MapInt32Int32DefaultEntryHolder.defaultEntry.getParserForType(), extensionRegistry);
              mapInt32Int32_.getMutableMap().put(
                  mapInt32Int32__.getKey(), mapInt32Int32__.getValue());
              break;
            }
            case 18: {
              if (!((mutable_bitField0_ & 0x00000002) != 0)) {
                mapInt64Int64_ = com.google.protobuf.MapField.newMapField(
                    MapInt64Int64DefaultEntryHolder.defaultEntry);
                mutable_bitField0_ |= 0x00000002;
              }
              com.google.protobuf.MapEntry<java.lang.Long, java.lang.Long>
              mapInt64Int64__ = input.readMessage(
                  MapInt64Int64DefaultEntryHolder.defaultEntry.getParserForType(), extensionRegistry);
              mapInt64Int64_.getMutableMap().put(
                  mapInt64Int64__.getKey(), mapInt64Int64__.getValue());
              break;
            }
            case 26: {
              if (!((mutable_bitField0_ & 0x00000004) != 0)) {
                mapUint32Uint32_ = com.google.protobuf.MapField.newMapField(
                    MapUint32Uint32DefaultEntryHolder.defaultEntry);
                mutable_bitField0_ |= 0x00000004;
              }
              com.google.protobuf.MapEntry<java.lang.Integer, java.lang.Integer>
              mapUint32Uint32__ = input.readMessage(
                  MapUint32Uint32DefaultEntryHolder.defaultEntry.getParserForType(), extensionRegistry);
              mapUint32Uint32_.getMutableMap().put(
                  mapUint32Uint32__.getKey(), mapUint32Uint32__.getValue());
              break;
            }
            case 34: {
              if (!((mutable_bitField0_ & 0x00000008) != 0)) {
                mapUint64Uint64_ = com.google.protobuf.MapField.newMapField(
                    MapUint64Uint64DefaultEntryHolder.defaultEntry);
                mutable_bitField0_ |= 0x00000008;
              }
              com.google.protobuf.MapEntry<java.lang.Long, java.lang.Long>
              mapUint64Uint64__ = input.readMessage(
                  MapUint64Uint64DefaultEntryHolder.defaultEntry.getParserForType(), extensionRegistry);
              mapUint64Uint64_.getMutableMap().put(
                  mapUint64Uint64__.getKey(), mapUint64Uint64__.getValue());
              break;
            }
            case 42: {
              if (!((mutable_bitField0_ & 0x00000010) != 0)) {
                mapSint32Sint32_ = com.google.protobuf.MapField.newMapField(
                    MapSint32Sint32DefaultEntryHolder.defaultEntry);
                mutable_bitField0_ |= 0x00000010;
              }
              com.google.protobuf.MapEntry<java.lang.Integer, java.lang.Integer>
              mapSint32Sint32__ = input.readMessage(
                  MapSint32Sint32DefaultEntryHolder.defaultEntry.getParserForType(), extensionRegistry);
              mapSint32Sint32_.getMutableMap().put(
                  mapSint32Sint32__.getKey(), mapSint32Sint32__.getValue());
              break;
            }
            case 50: {
              if (!((mutable_bitField0_ & 0x00000020) != 0)) {
                mapSint64Sint64_ = com.google.protobuf.MapField.newMapField(
                    MapSint64Sint64DefaultEntryHolder.defaultEntry);
                mutable_bitField0_ |= 0x00000020;
              }
              com.google.protobuf.MapEntry<java.lang.Long, java.lang.Long>
              mapSint64Sint64__ = input.readMessage(
                  MapSint64Sint64DefaultEntryHolder.defaultEntry.getParserForType(), extensionRegistry);
              mapSint64Sint64_.getMutableMap().put(
                  mapSint64Sint64__.getKey(), mapSint64Sint64__.getValue());
              break;
            }
            case 58: {
              if (!((mutable_bitField0_ & 0x00000040) != 0)) {
                mapFixed32Fixed32_ = com.google.protobuf.MapField.newMapField(
                    MapFixed32Fixed32DefaultEntryHolder.defaultEntry);
                mutable_bitField0_ |= 0x00000040;
              }
              com.google.protobuf.MapEntry<java.lang.Integer, java.lang.Integer>
              mapFixed32Fixed32__ = input.readMessage(
                  MapFixed32Fixed32DefaultEntryHolder.defaultEntry.getParserForType(), extensionRegistry);
              mapFixed32Fixed32_.getMutableMap().put(
                  mapFixed32Fixed32__.getKey(), mapFixed32Fixed32__.getValue());
              break;
            }
            case 66: {
              if (!((mutable_bitField0_ & 0x00000080) != 0)) {
                mapFixed64Fixed64_ = com.google.protobuf.MapField.newMapField(
                    MapFixed64Fixed64DefaultEntryHolder.defaultEntry);
                mutable_bitField0_ |= 0x00000080;
              }
              com.google.protobuf.MapEntry<java.lang.Long, java.lang.Long>
              mapFixed64Fixed64__ = input.readMessage(
                  MapFixed64Fixed64DefaultEntryHolder.defaultEntry.getParserForType(), extensionRegistry);
              mapFixed64Fixed64_.getMutableMap().put(
                  mapFixed64Fixed64__.getKey(), mapFixed64Fixed64__.getValue());
              break;
            }
            case 74: {
              if (!((mutable_bitField0_ & 0x00000100) != 0)) {
                mapSfixed32Sfixed32_ = com.google.protobuf.MapField.newMapField(
                    MapSfixed32Sfixed32DefaultEntryHolder.defaultEntry);
                mutable_bitField0_ |= 0x00000100;
              }
              com.google.protobuf.MapEntry<java.lang.Integer, java.lang.Integer>
              mapSfixed32Sfixed32__ = input.readMessage(
                  MapSfixed32Sfixed32DefaultEntryHolder.defaultEntry.getParserForType(), extensionRegistry);
              mapSfixed32Sfixed32_.getMutableMap().put(
                  mapSfixed32Sfixed32__.getKey(), mapSfixed32Sfixed32__.getValue());
              break;
            }
            case 82: {
              if (!((mutable_bitField0_ & 0x00000200) != 0)) {
                mapSfixed64Sfixed64_ = com.google.protobuf.MapField.newMapField(
                    MapSfixed64Sfixed64DefaultEntryHolder.defaultEntry);
                mutable_bitField0_ |= 0x00000200;
              }
              com.google.protobuf.MapEntry<java.lang.Long, java.lang.Long>
              mapSfixed64Sfixed64__ = input.readMessage(
                  MapSfixed64Sfixed64DefaultEntryHolder.defaultEntry.getParserForType(), extensionRegistry);
              mapSfixed64Sfixed64_.getMutableMap().put(
                  mapSfixed64Sfixed64__.getKey(), mapSfixed64Sfixed64__.getValue());
              break;
            }
            case 90: {
              if (!((mutable_bitField0_ & 0x00000400) != 0)) {
                mapInt32Float_ = com.google.protobuf.MapField.newMapField(
                    MapInt32FloatDefaultEntryHolder.defaultEntry);
                mutable_bitField0_ |= 0x00000400;
              }
              com.google.protobuf.MapEntry<java.lang.Integer, java.lang.Float>
              mapInt32Float__ = input.readMessage(
                  MapInt32FloatDefaultEntryHolder.defaultEntry.getParserForType(), extensionRegistry);
              mapInt32Float_.getMutableMap().put(
                  mapInt32Float__.getKey(), mapInt32Float__.getValue());
              break;
            }
            case 98: {
              if (!((mutable_bitField0_ & 0x00000800) != 0)) {
                mapInt32Double_ = com.google.protobuf.MapField.newMapField(
                    MapInt32DoubleDefaultEntryHolder.defaultEntry);
                mutable_bitField0_ |= 0x00000800;
              }
              com.google.protobuf.MapEntry<java.lang.Integer, java.lang.Double>
              mapInt32Double__ = input.readMessage(
                  MapInt32DoubleDefaultEntryHolder.defaultEntry.getParserForType(), extensionRegistry);
              mapInt32Double_.getMutableMap().put(
                  mapInt32Double__.getKey(), mapInt32Double__.getValue());
              break;
            }
            case 106: {
              if (!((mutable_bitField0_ & 0x00001000) != 0)) {
                mapBoolBool_ = com.google.protobuf.MapField.newMapField(
                    MapBoolBoolDefaultEntryHolder.defaultEntry);
                mutable_bitField0_ |= 0x00001000;
              }
              com.google.protobuf.MapEntry<java.lang.Boolean, java.lang.Boolean>
              mapBoolBool__ = input.readMessage(
                  MapBoolBoolDefaultEntryHolder.defaultEntry.getParserForType(), extensionRegistry);
              mapBoolBool_.getMutableMap().put(
                  mapBoolBool__.getKey(), mapBoolBool__.getValue());
              break;
            }
            case 114: {
              if (!((mutable_bitField0_ & 0x00002000) != 0)) {
                mapStringString_ = com.google.protobuf.MapField.newMapField(
                    MapStringStringDefaultEntryHolder.defaultEntry);
                mutable_bitField0_ |= 0x00002000;
              }
              com.google.protobuf.MapEntry<java.lang.String, java.lang.String>
              mapStringString__ = input.readMessage(
                  MapStringStringDefaultEntryHolder.defaultEntry.getParserForType(), extensionRegistry);
              mapStringString_.getMutableMap().put(
                  mapStringString__.getKey(), mapStringString__.getValue());
              break;
            }
            case 122: {
              if (!((mutable_bitField0_ & 0x00004000) != 0)) {
                mapInt32Bytes_ = com.google.protobuf.MapField.newMapField(
                    MapInt32BytesDefaultEntryHolder.defaultEntry);
                mutable_bitField0_ |= 0x00004000;
              }
              com.google.protobuf.MapEntry<java.lang.Integer, com.google.protobuf.ByteString>
              mapInt32Bytes__ = input.readMessage(
                  MapInt32BytesDefaultEntryHolder.defaultEntry.getParserForType(), extensionRegistry);
              mapInt32Bytes_.getMutableMap().put(
                  mapInt32Bytes__.getKey(), mapInt32Bytes__.getValue());
              break;
            }
            case 130: {
              if (!((mutable_bitField0_ & 0x00008000) != 0)) {
                mapInt32Enum_ = com.google.protobuf.MapField.newMapField(
                    MapInt32EnumDefaultEntryHolder.defaultEntry);
                mutable_bitField0_ |= 0x00008000;
              }
              com.google.protobuf.MapEntry<java.lang.Integer, java.lang.Integer>
              mapInt32Enum__ = input.readMessage(
                  MapInt32EnumDefaultEntryHolder.defaultEntry.getParserForType(), extensionRegistry);
              mapInt32Enum_.getMutableMap().put(
                  mapInt32Enum__.getKey(), mapInt32Enum__.getValue());
              break;
            }
            case 138: {
              if (!((mutable_bitField0_ & 0x00010000) != 0)) {
                mapInt32ForeignMessage_ = com.google.protobuf.MapField.newMapField(
                    MapInt32ForeignMessageDefaultEntryHolder.defaultEntry);
                mutable_bitField0_ |= 0x00010000;
              }
              com.google.protobuf.MapEntry<java.lang.Integer, protobuf_unittest.UnittestProto.ForeignMessage>
              mapInt32ForeignMessage__ = input.readMessage(
                  MapInt32ForeignMessageDefaultEntryHolder.defaultEntry.getParserForType(), extensionRegistry);
              mapInt32ForeignMessage_.getMutableMap().put(
                  mapInt32ForeignMessage__.getKey(), mapInt32ForeignMessage__.getValue());
              break;
            }
            case 146: {
              if (!((mutable_bitField0_ & 0x00020000) != 0)) {
                mapStringForeignMessage_ = com.google.protobuf.MapField.newMapField(
                    MapStringForeignMessageDefaultEntryHolder.defaultEntry);
                mutable_bitField0_ |= 0x00020000;
              }
              com.google.protobuf.MapEntry<java.lang.String, protobuf_unittest.UnittestProto.ForeignMessage>
              mapStringForeignMessage__ = input.readMessage(
                  MapStringForeignMessageDefaultEntryHolder.defaultEntry.getParserForType(), extensionRegistry);
              mapStringForeignMessage_.getMutableMap().put(
                  mapStringForeignMessage__.getKey(), mapStringForeignMessage__.getValue());
              break;
            }
            case 154: {
              if (!((mutable_bitField0_ & 0x00040000) != 0)) {
                mapInt32AllTypes_ = com.google.protobuf.MapField.newMapField(
                    MapInt32AllTypesDefaultEntryHolder.defaultEntry);
                mutable_bitField0_ |= 0x00040000;
              }
              com.google.protobuf.MapEntry<java.lang.Integer, protobuf_unittest.UnittestProto.TestAllTypes>
              mapInt32AllTypes__ = input.readMessage(
                  MapInt32AllTypesDefaultEntryHolder.defaultEntry.getParserForType(), extensionRegistry);
              mapInt32AllTypes_.getMutableMap().put(
                  mapInt32AllTypes__.getKey(), mapInt32AllTypes__.getValue());
              break;
            }
            default: {
              if (!parseUnknownField(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (com.google.protobuf.UninitializedMessageException e) {
        throw e.asInvalidProtocolBufferException().setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return protobuf_unittest.MapUnittest.internal_static_protobuf_unittest_TestMap_descriptor;
    }

    @SuppressWarnings({"rawtypes"})
    @java.lang.Override
    protected com.google.protobuf.MapField internalGetMapField(
        int number) {
      switch (number) {
        case 1:
          return internalGetMapInt32Int32();
        case 2:
          return internalGetMapInt64Int64();
        case 3:
          return internalGetMapUint32Uint32();
        case 4:
          return internalGetMapUint64Uint64();
        case 5:
          return internalGetMapSint32Sint32();
        case 6:
          return internalGetMapSint64Sint64();
        case 7:
          return internalGetMapFixed32Fixed32();
        case 8:
          return internalGetMapFixed64Fixed64();
        case 9:
          return internalGetMapSfixed32Sfixed32();
        case 10:
          return internalGetMapSfixed64Sfixed64();
        case 11:
          return internalGetMapInt32Float();
        case 12:
          return internalGetMapInt32Double();
        case 13:
          return internalGetMapBoolBool();
        case 14:
          return internalGetMapStringString();
        case 15:
          return internalGetMapInt32Bytes();
        case 16:
          return internalGetMapInt32Enum();
        case 17:
          return internalGetMapInt32ForeignMessage();
        case 18:
          return internalGetMapStringForeignMessage();
        case 19:
          return internalGetMapInt32AllTypes();
        default:
          throw new RuntimeException(
              "Invalid map field number: " + number);
      }
    }
    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return protobuf_unittest.MapUnittest.internal_static_protobuf_unittest_TestMap_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              protobuf_unittest.MapUnittest.TestMap.class, protobuf_unittest.MapUnittest.TestMap.Builder.class);
    }

    public static final int MAP_INT32_INT32_FIELD_NUMBER = 1;
    private static final class MapInt32Int32DefaultEntryHolder {
      static final com.google.protobuf.MapEntry<
          java.lang.Integer, java.lang.Integer> defaultEntry =
              com.google.protobuf.MapEntry
              .<java.lang.Integer, java.lang.Integer>newDefaultInstance(
                  protobuf_unittest.MapUnittest.internal_static_protobuf_unittest_TestMap_MapInt32Int32Entry_descriptor, 
                  com.google.protobuf.WireFormat.FieldType.INT32,
                  0,
                  com.google.protobuf.WireFormat.FieldType.INT32,
                  0);
    }
    private com.google.protobuf.MapField<
        java.lang.Integer, java.lang.Integer> mapInt32Int32_;
    private com.google.protobuf.MapField<java.lang.Integer, java.lang.Integer>
    internalGetMapInt32Int32() {
      if (mapInt32Int32_ == null) {
        return com.google.protobuf.MapField.emptyMapField(
            MapInt32Int32DefaultEntryHolder.defaultEntry);
      }
      return mapInt32Int32_;
    }

    public int getMapInt32Int32Count() {
      return internalGetMapInt32Int32().getMap().size();
    }
    /**
     * <code>map&lt;int32, int32&gt; map_int32_int32 = 1;</code>
     */

    @java.lang.Override
    public boolean containsMapInt32Int32(
        int key) {
      
      return internalGetMapInt32Int32().getMap().containsKey(key);
    }
    /**
     * Use {@link #getMapInt32Int32Map()} instead.
     */
    @java.lang.Override
    @java.lang.Deprecated
    public java.util.Map<java.lang.Integer, java.lang.Integer> getMapInt32Int32() {
      return getMapInt32Int32Map();
    }
    /**
     * <code>map&lt;int32, int32&gt; map_int32_int32 = 1;</code>
     */
    @java.lang.Override

    public java.util.Map<java.lang.Integer, java.lang.Integer> getMapInt32Int32Map() {
      return internalGetMapInt32Int32().getMap();
    }
    /**
     * <code>map&lt;int32, int32&gt; map_int32_int32 = 1;</code>
     */
    @java.lang.Override

    public int getMapInt32Int32OrDefault(
        int key,
        int defaultValue) {
      
      java.util.Map<java.lang.Integer, java.lang.Integer> map =
          internalGetMapInt32Int32().getMap();
      return map.containsKey(key) ? map.get(key) : defaultValue;
    }
    /**
     * <code>map&lt;int32, int32&gt; map_int32_int32 = 1;</code>
     */
    @java.lang.Override

    public int getMapInt32Int32OrThrow(
        int key) {
      
      java.util.Map<java.lang.Integer, java.lang.Integer> map =
          internalGetMapInt32Int32().getMap();
      if (!map.containsKey(key)) {
        throw new java.lang.IllegalArgumentException();
      }
      return map.get(key);
    }

    public static final int MAP_INT64_INT64_FIELD_NUMBER = 2;
    private static final class MapInt64Int64DefaultEntryHolder {
      static final com.google.protobuf.MapEntry<
          java.lang.Long, java.lang.Long> defaultEntry =
              com.google.protobuf.MapEntry
              .<java.lang.Long, java.lang.Long>newDefaultInstance(
                  protobuf_unittest.MapUnittest.internal_static_protobuf_unittest_TestMap_MapInt64Int64Entry_descriptor, 
                  com.google.protobuf.WireFormat.FieldType.INT64,
                  0L,
                  com.google.protobuf.WireFormat.FieldType.INT64,
                  0L);
    }
    private com.google.protobuf.MapField<
        java.lang.Long, java.lang.Long> mapInt64Int64_;
    private com.google.protobuf.MapField<java.lang.Long, java.lang.Long>
    internalGetMapInt64Int64() {
      if (mapInt64Int64_ == null) {
        return com.google.protobuf.MapField.emptyMapField(
            MapInt64Int64DefaultEntryHolder.defaultEntry);
      }
      return mapInt64Int64_;
    }

    public int getMapInt64Int64Count() {
      return internalGetMapInt64Int64().getMap().size();
    }
    /**
     * <code>map&lt;int64, int64&gt; map_int64_int64 = 2;</code>
     */

    @java.lang.Override
    public boolean containsMapInt64Int64(
        long key) {
      
      return internalGetMapInt64Int64().getMap().containsKey(key);
    }
    /**
     * Use {@link #getMapInt64Int64Map()} instead.
     */
    @java.lang.Override
    @java.lang.Deprecated
    public java.util.Map<java.lang.Long, java.lang.Long> getMapInt64Int64() {
      return getMapInt64Int64Map();
    }
    /**
     * <code>map&lt;int64, int64&gt; map_int64_int64 = 2;</code>
     */
    @java.lang.Override

    public java.util.Map<java.lang.Long, java.lang.Long> getMapInt64Int64Map() {
      return internalGetMapInt64Int64().getMap();
    }
    /**
     * <code>map&lt;int64, int64&gt; map_int64_int64 = 2;</code>
     */
    @java.lang.Override

    public long getMapInt64Int64OrDefault(
        long key,
        long defaultValue) {
      
      java.util.Map<java.lang.Long, java.lang.Long> map =
          internalGetMapInt64Int64().getMap();
      return map.containsKey(key) ? map.get(key) : defaultValue;
    }
    /**
     * <code>map&lt;int64, int64&gt; map_int64_int64 = 2;</code>
     */
    @java.lang.Override

    public long getMapInt64Int64OrThrow(
        long key) {
      
      java.util.Map<java.lang.Long, java.lang.Long> map =
          internalGetMapInt64Int64().getMap();
      if (!map.containsKey(key)) {
        throw new java.lang.IllegalArgumentException();
      }
      return map.get(key);
    }

    public static final int MAP_UINT32_UINT32_FIELD_NUMBER = 3;
    private static final class MapUint32Uint32DefaultEntryHolder {
      static final com.google.protobuf.MapEntry<
          java.lang.Integer, java.lang.Integer> defaultEntry =
              com.google.protobuf.MapEntry
              .<java.lang.Integer, java.lang.Integer>newDefaultInstance(
                  protobuf_unittest.MapUnittest.internal_static_protobuf_unittest_TestMap_MapUint32Uint32Entry_descriptor, 
                  com.google.protobuf.WireFormat.FieldType.UINT32,
                  0,
                  com.google.protobuf.WireFormat.FieldType.UINT32,
                  0);
    }
    private com.google.protobuf.MapField<
        java.lang.Integer, java.lang.Integer> mapUint32Uint32_;
    private com.google.protobuf.MapField<java.lang.Integer, java.lang.Integer>
    internalGetMapUint32Uint32() {
      if (mapUint32Uint32_ == null) {
        return com.google.protobuf.MapField.emptyMapField(
            MapUint32Uint32DefaultEntryHolder.defaultEntry);
      }
      return mapUint32Uint32_;
    }

    public int getMapUint32Uint32Count() {
      return internalGetMapUint32Uint32().getMap().size();
    }
    /**
     * <code>map&lt;uint32, uint32&gt; map_uint32_uint32 = 3;</code>
     */

    @java.lang.Override
    public boolean containsMapUint32Uint32(
        int key) {
      
      return internalGetMapUint32Uint32().getMap().containsKey(key);
    }
    /**
     * Use {@link #getMapUint32Uint32Map()} instead.
     */
    @java.lang.Override
    @java.lang.Deprecated
    public java.util.Map<java.lang.Integer, java.lang.Integer> getMapUint32Uint32() {
      return getMapUint32Uint32Map();
    }
    /**
     * <code>map&lt;uint32, uint32&gt; map_uint32_uint32 = 3;</code>
     */
    @java.lang.Override

    public java.util.Map<java.lang.Integer, java.lang.Integer> getMapUint32Uint32Map() {
      return internalGetMapUint32Uint32().getMap();
    }
    /**
     * <code>map&lt;uint32, uint32&gt; map_uint32_uint32 = 3;</code>
     */
    @java.lang.Override

    public int getMapUint32Uint32OrDefault(
        int key,
        int defaultValue) {
      
      java.util.Map<java.lang.Integer, java.lang.Integer> map =
          internalGetMapUint32Uint32().getMap();
      return map.containsKey(key) ? map.get(key) : defaultValue;
    }
    /**
     * <code>map&lt;uint32, uint32&gt; map_uint32_uint32 = 3;</code>
     */
    @java.lang.Override

    public int getMapUint32Uint32OrThrow(
        int key) {
      
      java.util.Map<java.lang.Integer, java.lang.Integer> map =
          internalGetMapUint32Uint32().getMap();
      if (!map.containsKey(key)) {
        throw new java.lang.IllegalArgumentException();
      }
      return map.get(key);
    }

    public static final int MAP_UINT64_UINT64_FIELD_NUMBER = 4;
    private static final class MapUint64Uint64DefaultEntryHolder {
      static final com.google.protobuf.MapEntry<
          java.lang.Long, java.lang.Long> defaultEntry =
              com.google.protobuf.MapEntry
              .<java.lang.Long, java.lang.Long>newDefaultInstance(
                  protobuf_unittest.MapUnittest.internal_static_protobuf_unittest_TestMap_MapUint64Uint64Entry_descriptor, 
                  com.google.protobuf.WireFormat.FieldType.UINT64,
                  0L,
                  com.google.protobuf.WireFormat.FieldType.UINT64,
                  0L);
    }
    private com.google.protobuf.MapField<
        java.lang.Long, java.lang.Long> mapUint64Uint64_;
    private com.google.protobuf.MapField<java.lang.Long, java.lang.Long>
    internalGetMapUint64Uint64() {
      if (mapUint64Uint64_ == null) {
        return com.google.protobuf.MapField.emptyMapField(
            MapUint64Uint64DefaultEntryHolder.defaultEntry);
      }
      return mapUint64Uint64_;
    }

    public int getMapUint64Uint64Count() {
      return internalGetMapUint64Uint64().getMap().size();
    }
    /**
     * <code>map&lt;uint64, uint64&gt; map_uint64_uint64 = 4;</code>
     */

    @java.lang.Override
    public boolean containsMapUint64Uint64(
        long key) {
      
      return internalGetMapUint64Uint64().getMap().containsKey(key);
    }
    /**
     * Use {@link #getMapUint64Uint64Map()} instead.
     */
    @java.lang.Override
    @java.lang.Deprecated
    public java.util.Map<java.lang.Long, java.lang.Long> getMapUint64Uint64() {
      return getMapUint64Uint64Map();
    }
    /**
     * <code>map&lt;uint64, uint64&gt; map_uint64_uint64 = 4;</code>
     */
    @java.lang.Override

    public java.util.Map<java.lang.Long, java.lang.Long> getMapUint64Uint64Map() {
      return internalGetMapUint64Uint64().getMap();
    }
    /**
     * <code>map&lt;uint64, uint64&gt; map_uint64_uint64 = 4;</code>
     */
    @java.lang.Override

    public long getMapUint64Uint64OrDefault(
        long key,
        long defaultValue) {
      
      java.util.Map<java.lang.Long, java.lang.Long> map =
          internalGetMapUint64Uint64().getMap();
      return map.containsKey(key) ? map.get(key) : defaultValue;
    }
    /**
     * <code>map&lt;uint64, uint64&gt; map_uint64_uint64 = 4;</code>
     */
    @java.lang.Override

    public long getMapUint64Uint64OrThrow(
        long key) {
      
      java.util.Map<java.lang.Long, java.lang.Long> map =
          internalGetMapUint64Uint64().getMap();
      if (!map.containsKey(key)) {
        throw new java.lang.IllegalArgumentException();
      }
      return map.get(key);
    }

    public static final int MAP_SINT32_SINT32_FIELD_NUMBER = 5;
    private static final class MapSint32Sint32DefaultEntryHolder {
      static final com.google.protobuf.MapEntry<
          java.lang.Integer, java.lang.Integer> defaultEntry =
              com.google.protobuf.MapEntry
              .<java.lang.Integer, java.lang.Integer>newDefaultInstance(
                  protobuf_unittest.MapUnittest.internal_static_protobuf_unittest_TestMap_MapSint32Sint32Entry_descriptor, 
                  com.google.protobuf.WireFormat.FieldType.SINT32,
                  0,
                  com.google.protobuf.WireFormat.FieldType.SINT32,
                  0);
    }
    private com.google.protobuf.MapField<
        java.lang.Integer, java.lang.Integer> mapSint32Sint32_;
    private com.google.protobuf.MapField<java.lang.Integer, java.lang.Integer>
    internalGetMapSint32Sint32() {
      if (mapSint32Sint32_ == null) {
        return com.google.protobuf.MapField.emptyMapField(
            MapSint32Sint32DefaultEntryHolder.defaultEntry);
      }
      return mapSint32Sint32_;
    }

    public int getMapSint32Sint32Count() {
      return internalGetMapSint32Sint32().getMap().size();
    }
    /**
     * <code>map&lt;sint32, sint32&gt; map_sint32_sint32 = 5;</code>
     */

    @java.lang.Override
    public boolean containsMapSint32Sint32(
        int key) {
      
      return internalGetMapSint32Sint32().getMap().containsKey(key);
    }
    /**
     * Use {@link #getMapSint32Sint32Map()} instead.
     */
    @java.lang.Override
    @java.lang.Deprecated
    public java.util.Map<java.lang.Integer, java.lang.Integer> getMapSint32Sint32() {
      return getMapSint32Sint32Map();
    }
    /**
     * <code>map&lt;sint32, sint32&gt; map_sint32_sint32 = 5;</code>
     */
    @java.lang.Override

    public java.util.Map<java.lang.Integer, java.lang.Integer> getMapSint32Sint32Map() {
      return internalGetMapSint32Sint32().getMap();
    }
    /**
     * <code>map&lt;sint32, sint32&gt; map_sint32_sint32 = 5;</code>
     */
    @java.lang.Override

    public int getMapSint32Sint32OrDefault(
        int key,
        int defaultValue) {
      
      java.util.Map<java.lang.Integer, java.lang.Integer> map =
          internalGetMapSint32Sint32().getMap();
      return map.containsKey(key) ? map.get(key) : defaultValue;
    }
    /**
     * <code>map&lt;sint32, sint32&gt; map_sint32_sint32 = 5;</code>
     */
    @java.lang.Override

    public int getMapSint32Sint32OrThrow(
        int key) {
      
      java.util.Map<java.lang.Integer, java.lang.Integer> map =
          internalGetMapSint32Sint32().getMap();
      if (!map.containsKey(key)) {
        throw new java.lang.IllegalArgumentException();
      }
      return map.get(key);
    }

    public static final int MAP_SINT64_SINT64_FIELD_NUMBER = 6;
    private static final class MapSint64Sint64DefaultEntryHolder {
      static final com.google.protobuf.MapEntry<
          java.lang.Long, java.lang.Long> defaultEntry =
              com.google.protobuf.MapEntry
              .<java.lang.Long, java.lang.Long>newDefaultInstance(
                  protobuf_unittest.MapUnittest.internal_static_protobuf_unittest_TestMap_MapSint64Sint64Entry_descriptor, 
                  com.google.protobuf.WireFormat.FieldType.SINT64,
                  0L,
                  com.google.protobuf.WireFormat.FieldType.SINT64,
                  0L);
    }
    private com.google.protobuf.MapField<
        java.lang.Long, java.lang.Long> mapSint64Sint64_;
    private com.google.protobuf.MapField<java.lang.Long, java.lang.Long>
    internalGetMapSint64Sint64() {
      if (mapSint64Sint64_ == null) {
        return com.google.protobuf.MapField.emptyMapField(
            MapSint64Sint64DefaultEntryHolder.defaultEntry);
      }
      return mapSint64Sint64_;
    }

    public int getMapSint64Sint64Count() {
      return internalGetMapSint64Sint64().getMap().size();
    }
    /**
     * <code>map&lt;sint64, sint64&gt; map_sint64_sint64 = 6;</code>
     */

    @java.lang.Override
    public boolean containsMapSint64Sint64(
        long key) {
      
      return internalGetMapSint64Sint64().getMap().containsKey(key);
    }
    /**
     * Use {@link #getMapSint64Sint64Map()} instead.
     */
    @java.lang.Override
    @java.lang.Deprecated
    public java.util.Map<java.lang.Long, java.lang.Long> getMapSint64Sint64() {
      return getMapSint64Sint64Map();
    }
    /**
     * <code>map&lt;sint64, sint64&gt; map_sint64_sint64 = 6;</code>
     */
    @java.lang.Override

    public java.util.Map<java.lang.Long, java.lang.Long> getMapSint64Sint64Map() {
      return internalGetMapSint64Sint64().getMap();
    }
    /**
     * <code>map&lt;sint64, sint64&gt; map_sint64_sint64 = 6;</code>
     */
    @java.lang.Override

    public long getMapSint64Sint64OrDefault(
        long key,
        long defaultValue) {
      
      java.util.Map<java.lang.Long, java.lang.Long> map =
          internalGetMapSint64Sint64().getMap();
      return map.containsKey(key) ? map.get(key) : defaultValue;
    }
    /**
     * <code>map&lt;sint64, sint64&gt; map_sint64_sint64 = 6;</code>
     */
    @java.lang.Override

    public long getMapSint64Sint64OrThrow(
        long key) {
      
      java.util.Map<java.lang.Long, java.lang.Long> map =
          internalGetMapSint64Sint64().getMap();
      if (!map.containsKey(key)) {
        throw new java.lang.IllegalArgumentException();
      }
      return map.get(key);
    }

    public static final int MAP_FIXED32_FIXED32_FIELD_NUMBER = 7;
    private static final class MapFixed32Fixed32DefaultEntryHolder {
      static final com.google.protobuf.MapEntry<
          java.lang.Integer, java.lang.Integer> defaultEntry =
              com.google.protobuf.MapEntry
              .<java.lang.Integer, java.lang.Integer>newDefaultInstance(
                  protobuf_unittest.MapUnittest.internal_static_protobuf_unittest_TestMap_MapFixed32Fixed32Entry_descriptor, 
                  com.google.protobuf.WireFormat.FieldType.FIXED32,
                  0,
                  com.google.protobuf.WireFormat.FieldType.FIXED32,
                  0);
    }
    private com.google.protobuf.MapField<
        java.lang.Integer, java.lang.Integer> mapFixed32Fixed32_;
    private com.google.protobuf.MapField<java.lang.Integer, java.lang.Integer>
    internalGetMapFixed32Fixed32() {
      if (mapFixed32Fixed32_ == null) {
        return com.google.protobuf.MapField.emptyMapField(
            MapFixed32Fixed32DefaultEntryHolder.defaultEntry);
      }
      return mapFixed32Fixed32_;
    }

    public int getMapFixed32Fixed32Count() {
      return internalGetMapFixed32Fixed32().getMap().size();
    }
    /**
     * <code>map&lt;fixed32, fixed32&gt; map_fixed32_fixed32 = 7;</code>
     */

    @java.lang.Override
    public boolean containsMapFixed32Fixed32(
        int key) {
      
      return internalGetMapFixed32Fixed32().getMap().containsKey(key);
    }
    /**
     * Use {@link #getMapFixed32Fixed32Map()} instead.
     */
    @java.lang.Override
    @java.lang.Deprecated
    public java.util.Map<java.lang.Integer, java.lang.Integer> getMapFixed32Fixed32() {
      return getMapFixed32Fixed32Map();
    }
    /**
     * <code>map&lt;fixed32, fixed32&gt; map_fixed32_fixed32 = 7;</code>
     */
    @java.lang.Override

    public java.util.Map<java.lang.Integer, java.lang.Integer> getMapFixed32Fixed32Map() {
      return internalGetMapFixed32Fixed32().getMap();
    }
    /**
     * <code>map&lt;fixed32, fixed32&gt; map_fixed32_fixed32 = 7;</code>
     */
    @java.lang.Override

    public int getMapFixed32Fixed32OrDefault(
        int key,
        int defaultValue) {
      
      java.util.Map<java.lang.Integer, java.lang.Integer> map =
          internalGetMapFixed32Fixed32().getMap();
      return map.containsKey(key) ? map.get(key) : defaultValue;
    }
    /**
     * <code>map&lt;fixed32, fixed32&gt; map_fixed32_fixed32 = 7;</code>
     */
    @java.lang.Override

    public int getMapFixed32Fixed32OrThrow(
        int key) {
      
      java.util.Map<java.lang.Integer, java.lang.Integer> map =
          internalGetMapFixed32Fixed32().getMap();
      if (!map.containsKey(key)) {
        throw new java.lang.IllegalArgumentException();
      }
      return map.get(key);
    }

    public static final int MAP_FIXED64_FIXED64_FIELD_NUMBER = 8;
    private static final class MapFixed64Fixed64DefaultEntryHolder {
      static final com.google.protobuf.MapEntry<
          java.lang.Long, java.lang.Long> defaultEntry =
              com.google.protobuf.MapEntry
              .<java.lang.Long, java.lang.Long>newDefaultInstance(
                  protobuf_unittest.MapUnittest.internal_static_protobuf_unittest_TestMap_MapFixed64Fixed64Entry_descriptor, 
                  com.google.protobuf.WireFormat.FieldType.FIXED64,
                  0L,
                  com.google.protobuf.WireFormat.FieldType.FIXED64,
                  0L);
    }
    private com.google.protobuf.MapField<
        java.lang.Long, java.lang.Long> mapFixed64Fixed64_;
    private com.google.protobuf.MapField<java.lang.Long, java.lang.Long>
    internalGetMapFixed64Fixed64() {
      if (mapFixed64Fixed64_ == null) {
        return com.google.protobuf.MapField.emptyMapField(
            MapFixed64Fixed64DefaultEntryHolder.defaultEntry);
      }
      return mapFixed64Fixed64_;
    }

    public int getMapFixed64Fixed64Count() {
      return internalGetMapFixed64Fixed64().getMap().size();
    }
    /**
     * <code>map&lt;fixed64, fixed64&gt; map_fixed64_fixed64 = 8;</code>
     */

    @java.lang.Override
    public boolean containsMapFixed64Fixed64(
        long key) {
      
      return internalGetMapFixed64Fixed64().getMap().containsKey(key);
    }
    /**
     * Use {@link #getMapFixed64Fixed64Map()} instead.
     */
    @java.lang.Override
    @java.lang.Deprecated
    public java.util.Map<java.lang.Long, java.lang.Long> getMapFixed64Fixed64() {
      return getMapFixed64Fixed64Map();
    }
    /**
     * <code>map&lt;fixed64, fixed64&gt; map_fixed64_fixed64 = 8;</code>
     */
    @java.lang.Override

    public java.util.Map<java.lang.Long, java.lang.Long> getMapFixed64Fixed64Map() {
      return internalGetMapFixed64Fixed64().getMap();
    }
    /**
     * <code>map&lt;fixed64, fixed64&gt; map_fixed64_fixed64 = 8;</code>
     */
    @java.lang.Override

    public long getMapFixed64Fixed64OrDefault(
        long key,
        long defaultValue) {
      
      java.util.Map<java.lang.Long, java.lang.Long> map =
          internalGetMapFixed64Fixed64().getMap();
      return map.containsKey(key) ? map.get(key) : defaultValue;
    }
    /**
     * <code>map&lt;fixed64, fixed64&gt; map_fixed64_fixed64 = 8;</code>
     */
    @java.lang.Override

    public long getMapFixed64Fixed64OrThrow(
        long key) {
      
      java.util.Map<java.lang.Long, java.lang.Long> map =
          internalGetMapFixed64Fixed64().getMap();
      if (!map.containsKey(key)) {
        throw new java.lang.IllegalArgumentException();
      }
      return map.get(key);
    }

    public static final int MAP_SFIXED32_SFIXED32_FIELD_NUMBER = 9;
    private static final class MapSfixed32Sfixed32DefaultEntryHolder {
      static final com.google.protobuf.MapEntry<
          java.lang.Integer, java.lang.Integer> defaultEntry =
              com.google.protobuf.MapEntry
              .<java.lang.Integer, java.lang.Integer>newDefaultInstance(
                  protobuf_unittest.MapUnittest.internal_static_protobuf_unittest_TestMap_MapSfixed32Sfixed32Entry_descriptor, 
                  com.google.protobuf.WireFormat.FieldType.SFIXED32,
                  0,
                  com.google.protobuf.WireFormat.FieldType.SFIXED32,
                  0);
    }
    private com.google.protobuf.MapField<
        java.lang.Integer, java.lang.Integer> mapSfixed32Sfixed32_;
    private com.google.protobuf.MapField<java.lang.Integer, java.lang.Integer>
    internalGetMapSfixed32Sfixed32() {
      if (mapSfixed32Sfixed32_ == null) {
        return com.google.protobuf.MapField.emptyMapField(
            MapSfixed32Sfixed32DefaultEntryHolder.defaultEntry);
      }
      return mapSfixed32Sfixed32_;
    }

    public int getMapSfixed32Sfixed32Count() {
      return internalGetMapSfixed32Sfixed32().getMap().size();
    }
    /**
     * <code>map&lt;sfixed32, sfixed32&gt; map_sfixed32_sfixed32 = 9;</code>
     */

    @java.lang.Override
    public boolean containsMapSfixed32Sfixed32(
        int key) {
      
      return internalGetMapSfixed32Sfixed32().getMap().containsKey(key);
    }
    /**
     * Use {@link #getMapSfixed32Sfixed32Map()} instead.
     */
    @java.lang.Override
    @java.lang.Deprecated
    public java.util.Map<java.lang.Integer, java.lang.Integer> getMapSfixed32Sfixed32() {
      return getMapSfixed32Sfixed32Map();
    }
    /**
     * <code>map&lt;sfixed32, sfixed32&gt; map_sfixed32_sfixed32 = 9;</code>
     */
    @java.lang.Override

    public java.util.Map<java.lang.Integer, java.lang.Integer> getMapSfixed32Sfixed32Map() {
      return internalGetMapSfixed32Sfixed32().getMap();
    }
    /**
     * <code>map&lt;sfixed32, sfixed32&gt; map_sfixed32_sfixed32 = 9;</code>
     */
    @java.lang.Override

    public int getMapSfixed32Sfixed32OrDefault(
        int key,
        int defaultValue) {
      
      java.util.Map<java.lang.Integer, java.lang.Integer> map =
          internalGetMapSfixed32Sfixed32().getMap();
      return map.containsKey(key) ? map.get(key) : defaultValue;
    }
    /**
     * <code>map&lt;sfixed32, sfixed32&gt; map_sfixed32_sfixed32 = 9;</code>
     */
    @java.lang.Override

    public int getMapSfixed32Sfixed32OrThrow(
        int key) {
      
      java.util.Map<java.lang.Integer, java.lang.Integer> map =
          internalGetMapSfixed32Sfixed32().getMap();
      if (!map.containsKey(key)) {
        throw new java.lang.IllegalArgumentException();
      }
      return map.get(key);
    }

    public static final int MAP_SFIXED64_SFIXED64_FIELD_NUMBER = 10;
    private static final class MapSfixed64Sfixed64DefaultEntryHolder {
      static final com.google.protobuf.MapEntry<
          java.lang.Long, java.lang.Long> defaultEntry =
              com.google.protobuf.MapEntry
              .<java.lang.Long, java.lang.Long>newDefaultInstance(
                  protobuf_unittest.MapUnittest.internal_static_protobuf_unittest_TestMap_MapSfixed64Sfixed64Entry_descriptor, 
                  com.google.protobuf.WireFormat.FieldType.SFIXED64,
                  0L,
                  com.google.protobuf.WireFormat.FieldType.SFIXED64,
                  0L);
    }
    private com.google.protobuf.MapField<
        java.lang.Long, java.lang.Long> mapSfixed64Sfixed64_;
    private com.google.protobuf.MapField<java.lang.Long, java.lang.Long>
    internalGetMapSfixed64Sfixed64() {
      if (mapSfixed64Sfixed64_ == null) {
        return com.google.protobuf.MapField.emptyMapField(
            MapSfixed64Sfixed64DefaultEntryHolder.defaultEntry);
      }
      return mapSfixed64Sfixed64_;
    }

    public int getMapSfixed64Sfixed64Count() {
      return internalGetMapSfixed64Sfixed64().getMap().size();
    }
    /**
     * <code>map&lt;sfixed64, sfixed64&gt; map_sfixed64_sfixed64 = 10;</code>
     */

    @java.lang.Override
    public boolean containsMapSfixed64Sfixed64(
        long key) {
      
      return internalGetMapSfixed64Sfixed64().getMap().containsKey(key);
    }
    /**
     * Use {@link #getMapSfixed64Sfixed64Map()} instead.
     */
    @java.lang.Override
    @java.lang.Deprecated
    public java.util.Map<java.lang.Long, java.lang.Long> getMapSfixed64Sfixed64() {
      return getMapSfixed64Sfixed64Map();
    }
    /**
     * <code>map&lt;sfixed64, sfixed64&gt; map_sfixed64_sfixed64 = 10;</code>
     */
    @java.lang.Override

    public java.util.Map<java.lang.Long, java.lang.Long> getMapSfixed64Sfixed64Map() {
      return internalGetMapSfixed64Sfixed64().getMap();
    }
    /**
     * <code>map&lt;sfixed64, sfixed64&gt; map_sfixed64_sfixed64 = 10;</code>
     */
    @java.lang.Override

    public long getMapSfixed64Sfixed64OrDefault(
        long key,
        long defaultValue) {
      
      java.util.Map<java.lang.Long, java.lang.Long> map =
          internalGetMapSfixed64Sfixed64().getMap();
      return map.containsKey(key) ? map.get(key) : defaultValue;
    }
    /**
     * <code>map&lt;sfixed64, sfixed64&gt; map_sfixed64_sfixed64 = 10;</code>
     */
    @java.lang.Override

    public long getMapSfixed64Sfixed64OrThrow(
        long key) {
      
      java.util.Map<java.lang.Long, java.lang.Long> map =
          internalGetMapSfixed64Sfixed64().getMap();
      if (!map.containsKey(key)) {
        throw new java.lang.IllegalArgumentException();
      }
      return map.get(key);
    }

    public static final int MAP_INT32_FLOAT_FIELD_NUMBER = 11;
    private static final class MapInt32FloatDefaultEntryHolder {
      static final com.google.protobuf.MapEntry<
          java.lang.Integer, java.lang.Float> defaultEntry =
              com.google.protobuf.MapEntry
              .<java.lang.Integer, java.lang.Float>newDefaultInstance(
                  protobuf_unittest.MapUnittest.internal_static_protobuf_unittest_TestMap_MapInt32FloatEntry_descriptor, 
                  com.google.protobuf.WireFormat.FieldType.INT32,
                  0,
                  com.google.protobuf.WireFormat.FieldType.FLOAT,
                  0F);
    }
    private com.google.protobuf.MapField<
        java.lang.Integer, java.lang.Float> mapInt32Float_;
    private com.google.protobuf.MapField<java.lang.Integer, java.lang.Float>
    internalGetMapInt32Float() {
      if (mapInt32Float_ == null) {
        return com.google.protobuf.MapField.emptyMapField(
            MapInt32FloatDefaultEntryHolder.defaultEntry);
      }
      return mapInt32Float_;
    }

    public int getMapInt32FloatCount() {
      return internalGetMapInt32Float().getMap().size();
    }
    /**
     * <code>map&lt;int32, float&gt; map_int32_float = 11;</code>
     */

    @java.lang.Override
    public boolean containsMapInt32Float(
        int key) {
      
      return internalGetMapInt32Float().getMap().containsKey(key);
    }
    /**
     * Use {@link #getMapInt32FloatMap()} instead.
     */
    @java.lang.Override
    @java.lang.Deprecated
    public java.util.Map<java.lang.Integer, java.lang.Float> getMapInt32Float() {
      return getMapInt32FloatMap();
    }
    /**
     * <code>map&lt;int32, float&gt; map_int32_float = 11;</code>
     */
    @java.lang.Override

    public java.util.Map<java.lang.Integer, java.lang.Float> getMapInt32FloatMap() {
      return internalGetMapInt32Float().getMap();
    }
    /**
     * <code>map&lt;int32, float&gt; map_int32_float = 11;</code>
     */
    @java.lang.Override

    public float getMapInt32FloatOrDefault(
        int key,
        float defaultValue) {
      
      java.util.Map<java.lang.Integer, java.lang.Float> map =
          internalGetMapInt32Float().getMap();
      return map.containsKey(key) ? map.get(key) : defaultValue;
    }
    /**
     * <code>map&lt;int32, float&gt; map_int32_float = 11;</code>
     */
    @java.lang.Override

    public float getMapInt32FloatOrThrow(
        int key) {
      
      java.util.Map<java.lang.Integer, java.lang.Float> map =
          internalGetMapInt32Float().getMap();
      if (!map.containsKey(key)) {
        throw new java.lang.IllegalArgumentException();
      }
      return map.get(key);
    }

    public static final int MAP_INT32_DOUBLE_FIELD_NUMBER = 12;
    private static final class MapInt32DoubleDefaultEntryHolder {
      static final com.google.protobuf.MapEntry<
          java.lang.Integer, java.lang.Double> defaultEntry =
              com.google.protobuf.MapEntry
              .<java.lang.Integer, java.lang.Double>newDefaultInstance(
                  protobuf_unittest.MapUnittest.internal_static_protobuf_unittest_TestMap_MapInt32DoubleEntry_descriptor, 
                  com.google.protobuf.WireFormat.FieldType.INT32,
                  0,
                  com.google.protobuf.WireFormat.FieldType.DOUBLE,
                  0D);
    }
    private com.google.protobuf.MapField<
        java.lang.Integer, java.lang.Double> mapInt32Double_;
    private com.google.protobuf.MapField<java.lang.Integer, java.lang.Double>
    internalGetMapInt32Double() {
      if (mapInt32Double_ == null) {
        return com.google.protobuf.MapField.emptyMapField(
            MapInt32DoubleDefaultEntryHolder.defaultEntry);
      }
      return mapInt32Double_;
    }

    public int getMapInt32DoubleCount() {
      return internalGetMapInt32Double().getMap().size();
    }
    /**
     * <code>map&lt;int32, double&gt; map_int32_double = 12;</code>
     */

    @java.lang.Override
    public boolean containsMapInt32Double(
        int key) {
      
      return internalGetMapInt32Double().getMap().containsKey(key);
    }
    /**
     * Use {@link #getMapInt32DoubleMap()} instead.
     */
    @java.lang.Override
    @java.lang.Deprecated
    public java.util.Map<java.lang.Integer, java.lang.Double> getMapInt32Double() {
      return getMapInt32DoubleMap();
    }
    /**
     * <code>map&lt;int32, double&gt; map_int32_double = 12;</code>
     */
    @java.lang.Override

    public java.util.Map<java.lang.Integer, java.lang.Double> getMapInt32DoubleMap() {
      return internalGetMapInt32Double().getMap();
    }
    /**
     * <code>map&lt;int32, double&gt; map_int32_double = 12;</code>
     */
    @java.lang.Override

    public double getMapInt32DoubleOrDefault(
        int key,
        double defaultValue) {
      
      java.util.Map<java.lang.Integer, java.lang.Double> map =
          internalGetMapInt32Double().getMap();
      return map.containsKey(key) ? map.get(key) : defaultValue;
    }
    /**
     * <code>map&lt;int32, double&gt; map_int32_double = 12;</code>
     */
    @java.lang.Override

    public double getMapInt32DoubleOrThrow(
        int key) {
      
      java.util.Map<java.lang.Integer, java.lang.Double> map =
          internalGetMapInt32Double().getMap();
      if (!map.containsKey(key)) {
        throw new java.lang.IllegalArgumentException();
      }
      return map.get(key);
    }

    public static final int MAP_BOOL_BOOL_FIELD_NUMBER = 13;
    private static final class MapBoolBoolDefaultEntryHolder {
      static final com.google.protobuf.MapEntry<
          java.lang.Boolean, java.lang.Boolean> defaultEntry =
              com.google.protobuf.MapEntry
              .<java.lang.Boolean, java.lang.Boolean>newDefaultInstance(
                  protobuf_unittest.MapUnittest.internal_static_protobuf_unittest_TestMap_MapBoolBoolEntry_descriptor, 
                  com.google.protobuf.WireFormat.FieldType.BOOL,
                  false,
                  com.google.protobuf.WireFormat.FieldType.BOOL,
                  false);
    }
    private com.google.protobuf.MapField<
        java.lang.Boolean, java.lang.Boolean> mapBoolBool_;
    private com.google.protobuf.MapField<java.lang.Boolean, java.lang.Boolean>
    internalGetMapBoolBool() {
      if (mapBoolBool_ == null) {
        return com.google.protobuf.MapField.emptyMapField(
            MapBoolBoolDefaultEntryHolder.defaultEntry);
      }
      return mapBoolBool_;
    }

    public int getMapBoolBoolCount() {
      return internalGetMapBoolBool().getMap().size();
    }
    /**
     * <code>map&lt;bool, bool&gt; map_bool_bool = 13;</code>
     */

    @java.lang.Override
    public boolean containsMapBoolBool(
        boolean key) {
      
      return internalGetMapBoolBool().getMap().containsKey(key);
    }
    /**
     * Use {@link #getMapBoolBoolMap()} instead.
     */
    @java.lang.Override
    @java.lang.Deprecated
    public java.util.Map<java.lang.Boolean, java.lang.Boolean> getMapBoolBool() {
      return getMapBoolBoolMap();
    }
    /**
     * <code>map&lt;bool, bool&gt; map_bool_bool = 13;</code>
     */
    @java.lang.Override

    public java.util.Map<java.lang.Boolean, java.lang.Boolean> getMapBoolBoolMap() {
      return internalGetMapBoolBool().getMap();
    }
    /**
     * <code>map&lt;bool, bool&gt; map_bool_bool = 13;</code>
     */
    @java.lang.Override

    public boolean getMapBoolBoolOrDefault(
        boolean key,
        boolean defaultValue) {
      
      java.util.Map<java.lang.Boolean, java.lang.Boolean> map =
          internalGetMapBoolBool().getMap();
      return map.containsKey(key) ? map.get(key) : defaultValue;
    }
    /**
     * <code>map&lt;bool, bool&gt; map_bool_bool = 13;</code>
     */
    @java.lang.Override

    public boolean getMapBoolBoolOrThrow(
        boolean key) {
      
      java.util.Map<java.lang.Boolean, java.lang.Boolean> map =
          internalGetMapBoolBool().getMap();
      if (!map.containsKey(key)) {
        throw new java.lang.IllegalArgumentException();
      }
      return map.get(key);
    }

    public static final int MAP_STRING_STRING_FIELD_NUMBER = 14;
    private static final class MapStringStringDefaultEntryHolder {
      static final com.google.protobuf.MapEntry<
          java.lang.String, java.lang.String> defaultEntry =
              com.google.protobuf.MapEntry
              .<java.lang.String, java.lang.String>newDefaultInstance(
                  protobuf_unittest.MapUnittest.internal_static_protobuf_unittest_TestMap_MapStringStringEntry_descriptor, 
                  com.google.protobuf.WireFormat.FieldType.STRING,
                  "",
                  com.google.protobuf.WireFormat.FieldType.STRING,
                  "");
    }
    private com.google.protobuf.MapField<
        java.lang.String, java.lang.String> mapStringString_;
    private com.google.protobuf.MapField<java.lang.String, java.lang.String>
    internalGetMapStringString() {
      if (mapStringString_ == null) {
        return com.google.protobuf.MapField.emptyMapField(
            MapStringStringDefaultEntryHolder.defaultEntry);
      }
      return mapStringString_;
    }

    public int getMapStringStringCount() {
      return internalGetMapStringString().getMap().size();
    }
    /**
     * <code>map&lt;string, string&gt; map_string_string = 14;</code>
     */

    @java.lang.Override
    public boolean containsMapStringString(
        java.lang.String key) {
      if (key == null) { throw new NullPointerException("map key"); }
      return internalGetMapStringString().getMap().containsKey(key);
    }
    /**
     * Use {@link #getMapStringStringMap()} instead.
     */
    @java.lang.Override
    @java.lang.Deprecated
    public java.util.Map<java.lang.String, java.lang.String> getMapStringString() {
      return getMapStringStringMap();
    }
    /**
     * <code>map&lt;string, string&gt; map_string_string = 14;</code>
     */
    @java.lang.Override

    public java.util.Map<java.lang.String, java.lang.String> getMapStringStringMap() {
      return internalGetMapStringString().getMap();
    }
    /**
     * <code>map&lt;string, string&gt; map_string_string = 14;</code>
     */
    @java.lang.Override

    public java.lang.String getMapStringStringOrDefault(
        java.lang.String key,
        java.lang.String defaultValue) {
      if (key == null) { throw new NullPointerException("map key"); }
      java.util.Map<java.lang.String, java.lang.String> map =
          internalGetMapStringString().getMap();
      return map.containsKey(key) ? map.get(key) : defaultValue;
    }
    /**
     * <code>map&lt;string, string&gt; map_string_string = 14;</code>
     */
    @java.lang.Override

    public java.lang.String getMapStringStringOrThrow(
        java.lang.String key) {
      if (key == null) { throw new NullPointerException("map key"); }
      java.util.Map<java.lang.String, java.lang.String> map =
          internalGetMapStringString().getMap();
      if (!map.containsKey(key)) {
        throw new java.lang.IllegalArgumentException();
      }
      return map.get(key);
    }

    public static final int MAP_INT32_BYTES_FIELD_NUMBER = 15;
    private static final class MapInt32BytesDefaultEntryHolder {
      static final com.google.protobuf.MapEntry<
          java.lang.Integer, com.google.protobuf.ByteString> defaultEntry =
              com.google.protobuf.MapEntry
              .<java.lang.Integer, com.google.protobuf.ByteString>newDefaultInstance(
                  protobuf_unittest.MapUnittest.internal_static_protobuf_unittest_TestMap_MapInt32BytesEntry_descriptor, 
                  com.google.protobuf.WireFormat.FieldType.INT32,
                  0,
                  com.google.protobuf.WireFormat.FieldType.BYTES,
                  com.google.protobuf.ByteString.EMPTY);
    }
    private com.google.protobuf.MapField<
        java.lang.Integer, com.google.protobuf.ByteString> mapInt32Bytes_;
    private com.google.protobuf.MapField<java.lang.Integer, com.google.protobuf.ByteString>
    internalGetMapInt32Bytes() {
      if (mapInt32Bytes_ == null) {
        return com.google.protobuf.MapField.emptyMapField(
            MapInt32BytesDefaultEntryHolder.defaultEntry);
      }
      return mapInt32Bytes_;
    }

    public int getMapInt32BytesCount() {
      return internalGetMapInt32Bytes().getMap().size();
    }
    /**
     * <code>map&lt;int32, bytes&gt; map_int32_bytes = 15;</code>
     */

    @java.lang.Override
    public boolean containsMapInt32Bytes(
        int key) {
      
      return internalGetMapInt32Bytes().getMap().containsKey(key);
    }
    /**
     * Use {@link #getMapInt32BytesMap()} instead.
     */
    @java.lang.Override
    @java.lang.Deprecated
    public java.util.Map<java.lang.Integer, com.google.protobuf.ByteString> getMapInt32Bytes() {
      return getMapInt32BytesMap();
    }
    /**
     * <code>map&lt;int32, bytes&gt; map_int32_bytes = 15;</code>
     */
    @java.lang.Override

    public java.util.Map<java.lang.Integer, com.google.protobuf.ByteString> getMapInt32BytesMap() {
      return internalGetMapInt32Bytes().getMap();
    }
    /**
     * <code>map&lt;int32, bytes&gt; map_int32_bytes = 15;</code>
     */
    @java.lang.Override

    public com.google.protobuf.ByteString getMapInt32BytesOrDefault(
        int key,
        com.google.protobuf.ByteString defaultValue) {
      
      java.util.Map<java.lang.Integer, com.google.protobuf.ByteString> map =
          internalGetMapInt32Bytes().getMap();
      return map.containsKey(key) ? map.get(key) : defaultValue;
    }
    /**
     * <code>map&lt;int32, bytes&gt; map_int32_bytes = 15;</code>
     */
    @java.lang.Override

    public com.google.protobuf.ByteString getMapInt32BytesOrThrow(
        int key) {
      
      java.util.Map<java.lang.Integer, com.google.protobuf.ByteString> map =
          internalGetMapInt32Bytes().getMap();
      if (!map.containsKey(key)) {
        throw new java.lang.IllegalArgumentException();
      }
      return map.get(key);
    }

    public static final int MAP_INT32_ENUM_FIELD_NUMBER = 16;
    private static final class MapInt32EnumDefaultEntryHolder {
      static final com.google.protobuf.MapEntry<
          java.lang.Integer, java.lang.Integer> defaultEntry =
              com.google.protobuf.MapEntry
              .<java.lang.Integer, java.lang.Integer>newDefaultInstance(
                  protobuf_unittest.MapUnittest.internal_static_protobuf_unittest_TestMap_MapInt32EnumEntry_descriptor, 
                  com.google.protobuf.WireFormat.FieldType.INT32,
                  0,
                  com.google.protobuf.WireFormat.FieldType.ENUM,
                  protobuf_unittest.MapUnittest.MapEnum.MAP_ENUM_FOO.getNumber());
    }
    private com.google.protobuf.MapField<
        java.lang.Integer, java.lang.Integer> mapInt32Enum_;
    private com.google.protobuf.MapField<java.lang.Integer, java.lang.Integer>
    internalGetMapInt32Enum() {
      if (mapInt32Enum_ == null) {
        return com.google.protobuf.MapField.emptyMapField(
            MapInt32EnumDefaultEntryHolder.defaultEntry);
      }
      return mapInt32Enum_;
    }
    private static final
    com.google.protobuf.Internal.MapAdapter.Converter<
        java.lang.Integer, protobuf_unittest.MapUnittest.MapEnum> mapInt32EnumValueConverter =
            com.google.protobuf.Internal.MapAdapter.newEnumConverter(
                protobuf_unittest.MapUnittest.MapEnum.internalGetValueMap(),
                protobuf_unittest.MapUnittest.MapEnum.UNRECOGNIZED);
    private static final java.util.Map<java.lang.Integer, protobuf_unittest.MapUnittest.MapEnum>
    internalGetAdaptedMapInt32EnumMap(
        java.util.Map<java.lang.Integer, java.lang.Integer> map) {
      return new com.google.protobuf.Internal.MapAdapter<
          java.lang.Integer, protobuf_unittest.MapUnittest.MapEnum, java.lang.Integer>(
              map, mapInt32EnumValueConverter);
    }

    public int getMapInt32EnumCount() {
      return internalGetMapInt32Enum().getMap().size();
    }
    /**
     * <code>map&lt;int32, .protobuf_unittest.MapEnum&gt; map_int32_enum = 16;</code>
     */

    @java.lang.Override
    public boolean containsMapInt32Enum(
        int key) {
      
      return internalGetMapInt32Enum().getMap().containsKey(key);
    }
    /**
     * Use {@link #getMapInt32EnumMap()} instead.
     */
    @java.lang.Override
    @java.lang.Deprecated
    public java.util.Map<java.lang.Integer, protobuf_unittest.MapUnittest.MapEnum>
    getMapInt32Enum() {
      return getMapInt32EnumMap();
    }
    /**
     * <code>map&lt;int32, .protobuf_unittest.MapEnum&gt; map_int32_enum = 16;</code>
     */
    @java.lang.Override

    public java.util.Map<java.lang.Integer, protobuf_unittest.MapUnittest.MapEnum>
    getMapInt32EnumMap() {
      return internalGetAdaptedMapInt32EnumMap(
          internalGetMapInt32Enum().getMap());}
    /**
     * <code>map&lt;int32, .protobuf_unittest.MapEnum&gt; map_int32_enum = 16;</code>
     */
    @java.lang.Override

    public /* nullable */
protobuf_unittest.MapUnittest.MapEnum getMapInt32EnumOrDefault(
        int key,
        /* nullable */
protobuf_unittest.MapUnittest.MapEnum defaultValue) {
      
      java.util.Map<java.lang.Integer, java.lang.Integer> map =
          internalGetMapInt32Enum().getMap();
      return map.containsKey(key)
             ? mapInt32EnumValueConverter.doForward(map.get(key))
             : defaultValue;
    }
    /**
     * <code>map&lt;int32, .protobuf_unittest.MapEnum&gt; map_int32_enum = 16;</code>
     */
    @java.lang.Override

    public protobuf_unittest.MapUnittest.MapEnum getMapInt32EnumOrThrow(
        int key) {
      
      java.util.Map<java.lang.Integer, java.lang.Integer> map =
          internalGetMapInt32Enum().getMap();
      if (!map.containsKey(key)) {
        throw new java.lang.IllegalArgumentException();
      }
      return mapInt32EnumValueConverter.doForward(map.get(key));
    }
    /**
     * Use {@link #getMapInt32EnumValueMap()} instead.
     */
    @java.lang.Override
    @java.lang.Deprecated
    public java.util.Map<java.lang.Integer, java.lang.Integer>
    getMapInt32EnumValue() {
      return getMapInt32EnumValueMap();
    }
    /**
     * <code>map&lt;int32, .protobuf_unittest.MapEnum&gt; map_int32_enum = 16;</code>
     */
    @java.lang.Override

    public java.util.Map<java.lang.Integer, java.lang.Integer>
    getMapInt32EnumValueMap() {
      return internalGetMapInt32Enum().getMap();
    }
    /**
     * <code>map&lt;int32, .protobuf_unittest.MapEnum&gt; map_int32_enum = 16;</code>
     */
    @java.lang.Override

    public int getMapInt32EnumValueOrDefault(
        int key,
        int defaultValue) {
      
      java.util.Map<java.lang.Integer, java.lang.Integer> map =
          internalGetMapInt32Enum().getMap();
      return map.containsKey(key) ? map.get(key) : defaultValue;
    }
    /**
     * <code>map&lt;int32, .protobuf_unittest.MapEnum&gt; map_int32_enum = 16;</code>
     */
    @java.lang.Override

    public int getMapInt32EnumValueOrThrow(
        int key) {
      
      java.util.Map<java.lang.Integer, java.lang.Integer> map =
          internalGetMapInt32Enum().getMap();
      if (!map.containsKey(key)) {
        throw new java.lang.IllegalArgumentException();
      }
      return map.get(key);
    }

    public static final int MAP_INT32_FOREIGN_MESSAGE_FIELD_NUMBER = 17;
    private static final class MapInt32ForeignMessageDefaultEntryHolder {
      static final com.google.protobuf.MapEntry<
          java.lang.Integer, protobuf_unittest.UnittestProto.ForeignMessage> defaultEntry =
              com.google.protobuf.MapEntry
              .<java.lang.Integer, protobuf_unittest.UnittestProto.ForeignMessage>newDefaultInstance(
                  protobuf_unittest.MapUnittest.internal_static_protobuf_unittest_TestMap_MapInt32ForeignMessageEntry_descriptor, 
                  com.google.protobuf.WireFormat.FieldType.INT32,
                  0,
                  com.google.protobuf.WireFormat.FieldType.MESSAGE,
                  protobuf_unittest.UnittestProto.ForeignMessage.getDefaultInstance());
    }
    private com.google.protobuf.MapField<
        java.lang.Integer, protobuf_unittest.UnittestProto.ForeignMessage> mapInt32ForeignMessage_;
    private com.google.protobuf.MapField<java.lang.Integer, protobuf_unittest.UnittestProto.ForeignMessage>
    internalGetMapInt32ForeignMessage() {
      if (mapInt32ForeignMessage_ == null) {
        return com.google.protobuf.MapField.emptyMapField(
            MapInt32ForeignMessageDefaultEntryHolder.defaultEntry);
      }
      return mapInt32ForeignMessage_;
    }

    public int getMapInt32ForeignMessageCount() {
      return internalGetMapInt32ForeignMessage().getMap().size();
    }
    /**
     * <code>map&lt;int32, .protobuf_unittest.ForeignMessage&gt; map_int32_foreign_message = 17;</code>
     */

    @java.lang.Override
    public boolean containsMapInt32ForeignMessage(
        int key) {
      
      return internalGetMapInt32ForeignMessage().getMap().containsKey(key);
    }
    /**
     * Use {@link #getMapInt32ForeignMessageMap()} instead.
     */
    @java.lang.Override
    @java.lang.Deprecated
    public java.util.Map<java.lang.Integer, protobuf_unittest.UnittestProto.ForeignMessage> getMapInt32ForeignMessage() {
      return getMapInt32ForeignMessageMap();
    }
    /**
     * <code>map&lt;int32, .protobuf_unittest.ForeignMessage&gt; map_int32_foreign_message = 17;</code>
     */
    @java.lang.Override

    public java.util.Map<java.lang.Integer, protobuf_unittest.UnittestProto.ForeignMessage> getMapInt32ForeignMessageMap() {
      return internalGetMapInt32ForeignMessage().getMap();
    }
    /**
     * <code>map&lt;int32, .protobuf_unittest.ForeignMessage&gt; map_int32_foreign_message = 17;</code>
     */
    @java.lang.Override

    public protobuf_unittest.UnittestProto.ForeignMessage getMapInt32ForeignMessageOrDefault(
        int key,
        protobuf_unittest.UnittestProto.ForeignMessage defaultValue) {
      
      java.util.Map<java.lang.Integer, protobuf_unittest.UnittestProto.ForeignMessage> map =
          internalGetMapInt32ForeignMessage().getMap();
      return map.containsKey(key) ? map.get(key) : defaultValue;
    }
    /**
     * <code>map&lt;int32, .protobuf_unittest.ForeignMessage&gt; map_int32_foreign_message = 17;</code>
     */
    @java.lang.Override

    public protobuf_unittest.UnittestProto.ForeignMessage getMapInt32ForeignMessageOrThrow(
        int key) {
      
      java.util.Map<java.lang.Integer, protobuf_unittest.UnittestProto.ForeignMessage> map =
          internalGetMapInt32ForeignMessage().getMap();
      if (!map.containsKey(key)) {
        throw new java.lang.IllegalArgumentException();
      }
      return map.get(key);
    }

    public static final int MAP_STRING_FOREIGN_MESSAGE_FIELD_NUMBER = 18;
    private static final class MapStringForeignMessageDefaultEntryHolder {
      static final com.google.protobuf.MapEntry<
          java.lang.String, protobuf_unittest.UnittestProto.ForeignMessage> defaultEntry =
              com.google.protobuf.MapEntry
              .<java.lang.String, protobuf_unittest.UnittestProto.ForeignMessage>newDefaultInstance(
                  protobuf_unittest.MapUnittest.internal_static_protobuf_unittest_TestMap_MapStringForeignMessageEntry_descriptor, 
                  com.google.protobuf.WireFormat.FieldType.STRING,
                  "",
                  com.google.protobuf.WireFormat.FieldType.MESSAGE,
                  protobuf_unittest.UnittestProto.ForeignMessage.getDefaultInstance());
    }
    private com.google.protobuf.MapField<
        java.lang.String, protobuf_unittest.UnittestProto.ForeignMessage> mapStringForeignMessage_;
    private com.google.protobuf.MapField<java.lang.String, protobuf_unittest.UnittestProto.ForeignMessage>
    internalGetMapStringForeignMessage() {
      if (mapStringForeignMessage_ == null) {
        return com.google.protobuf.MapField.emptyMapField(
            MapStringForeignMessageDefaultEntryHolder.defaultEntry);
      }
      return mapStringForeignMessage_;
    }

    public int getMapStringForeignMessageCount() {
      return internalGetMapStringForeignMessage().getMap().size();
    }
    /**
     * <code>map&lt;string, .protobuf_unittest.ForeignMessage&gt; map_string_foreign_message = 18;</code>
     */

    @java.lang.Override
    public boolean containsMapStringForeignMessage(
        java.lang.String key) {
      if (key == null) { throw new NullPointerException("map key"); }
      return internalGetMapStringForeignMessage().getMap().containsKey(key);
    }
    /**
     * Use {@link #getMapStringForeignMessageMap()} instead.
     */
    @java.lang.Override
    @java.lang.Deprecated
    public java.util.Map<java.lang.String, protobuf_unittest.UnittestProto.ForeignMessage> getMapStringForeignMessage() {
      return getMapStringForeignMessageMap();
    }
    /**
     * <code>map&lt;string, .protobuf_unittest.ForeignMessage&gt; map_string_foreign_message = 18;</code>
     */
    @java.lang.Override

    public java.util.Map<java.lang.String, protobuf_unittest.UnittestProto.ForeignMessage> getMapStringForeignMessageMap() {
      return internalGetMapStringForeignMessage().getMap();
    }
    /**
     * <code>map&lt;string, .protobuf_unittest.ForeignMessage&gt; map_string_foreign_message = 18;</code>
     */
    @java.lang.Override

    public protobuf_unittest.UnittestProto.ForeignMessage getMapStringForeignMessageOrDefault(
        java.lang.String key,
        protobuf_unittest.UnittestProto.ForeignMessage defaultValue) {
      if (key == null) { throw new NullPointerException("map key"); }
      java.util.Map<java.lang.String, protobuf_unittest.UnittestProto.ForeignMessage> map =
          internalGetMapStringForeignMessage().getMap();
      return map.containsKey(key) ? map.get(key) : defaultValue;
    }
    /**
     * <code>map&lt;string, .protobuf_unittest.ForeignMessage&gt; map_string_foreign_message = 18;</code>
     */
    @java.lang.Override

    public protobuf_unittest.UnittestProto.ForeignMessage getMapStringForeignMessageOrThrow(
        java.lang.String key) {
      if (key == null) { throw new NullPointerException("map key"); }
      java.util.Map<java.lang.String, protobuf_unittest.UnittestProto.ForeignMessage> map =
          internalGetMapStringForeignMessage().getMap();
      if (!map.containsKey(key)) {
        throw new java.lang.IllegalArgumentException();
      }
      return map.get(key);
    }

    public static final int MAP_INT32_ALL_TYPES_FIELD_NUMBER = 19;
    private static final class MapInt32AllTypesDefaultEntryHolder {
      static final com.google.protobuf.MapEntry<
          java.lang.Integer, protobuf_unittest.UnittestProto.TestAllTypes> defaultEntry =
              com.google.protobuf.MapEntry
              .<java.lang.Integer, protobuf_unittest.UnittestProto.TestAllTypes>newDefaultInstance(
                  protobuf_unittest.MapUnittest.internal_static_protobuf_unittest_TestMap_MapInt32AllTypesEntry_descriptor, 
                  com.google.protobuf.WireFormat.FieldType.INT32,
                  0,
                  com.google.protobuf.WireFormat.FieldType.MESSAGE,
                  protobuf_unittest.UnittestProto.TestAllTypes.getDefaultInstance());
    }
    private com.google.protobuf.MapField<
        java.lang.Integer, protobuf_unittest.UnittestProto.TestAllTypes> mapInt32AllTypes_;
    private com.google.protobuf.MapField<java.lang.Integer, protobuf_unittest.UnittestProto.TestAllTypes>
    internalGetMapInt32AllTypes() {
      if (mapInt32AllTypes_ == null) {
        return com.google.protobuf.MapField.emptyMapField(
            MapInt32AllTypesDefaultEntryHolder.defaultEntry);
      }
      return mapInt32AllTypes_;
    }

    public int getMapInt32AllTypesCount() {
      return internalGetMapInt32AllTypes().getMap().size();
    }
    /**
     * <code>map&lt;int32, .protobuf_unittest.TestAllTypes&gt; map_int32_all_types = 19;</code>
     */

    @java.lang.Override
    public boolean containsMapInt32AllTypes(
        int key) {
      
      return internalGetMapInt32AllTypes().getMap().containsKey(key);
    }
    /**
     * Use {@link #getMapInt32AllTypesMap()} instead.
     */
    @java.lang.Override
    @java.lang.Deprecated
    public java.util.Map<java.lang.Integer, protobuf_unittest.UnittestProto.TestAllTypes> getMapInt32AllTypes() {
      return getMapInt32AllTypesMap();
    }
    /**
     * <code>map&lt;int32, .protobuf_unittest.TestAllTypes&gt; map_int32_all_types = 19;</code>
     */
    @java.lang.Override

    public java.util.Map<java.lang.Integer, protobuf_unittest.UnittestProto.TestAllTypes> getMapInt32AllTypesMap() {
      return internalGetMapInt32AllTypes().getMap();
    }
    /**
     * <code>map&lt;int32, .protobuf_unittest.TestAllTypes&gt; map_int32_all_types = 19;</code>
     */
    @java.lang.Override

    public protobuf_unittest.UnittestProto.TestAllTypes getMapInt32AllTypesOrDefault(
        int key,
        protobuf_unittest.UnittestProto.TestAllTypes defaultValue) {
      
      java.util.Map<java.lang.Integer, protobuf_unittest.UnittestProto.TestAllTypes> map =
          internalGetMapInt32AllTypes().getMap();
      return map.containsKey(key) ? map.get(key) : defaultValue;
    }
    /**
     * <code>map&lt;int32, .protobuf_unittest.TestAllTypes&gt; map_int32_all_types = 19;</code>
     */
    @java.lang.Override

    public protobuf_unittest.UnittestProto.TestAllTypes getMapInt32AllTypesOrThrow(
        int key) {
      
      java.util.Map<java.lang.Integer, protobuf_unittest.UnittestProto.TestAllTypes> map =
          internalGetMapInt32AllTypes().getMap();
      if (!map.containsKey(key)) {
        throw new java.lang.IllegalArgumentException();
      }
      return map.get(key);
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      com.google.protobuf.GeneratedMessageV3
        .serializeIntegerMapTo(
          output,
          internalGetMapInt32Int32(),
          MapInt32Int32DefaultEntryHolder.defaultEntry,
          1);
      com.google.protobuf.GeneratedMessageV3
        .serializeLongMapTo(
          output,
          internalGetMapInt64Int64(),
          MapInt64Int64DefaultEntryHolder.defaultEntry,
          2);
      com.google.protobuf.GeneratedMessageV3
        .serializeIntegerMapTo(
          output,
          internalGetMapUint32Uint32(),
          MapUint32Uint32DefaultEntryHolder.defaultEntry,
          3);
      com.google.protobuf.GeneratedMessageV3
        .serializeLongMapTo(
          output,
          internalGetMapUint64Uint64(),
          MapUint64Uint64DefaultEntryHolder.defaultEntry,
          4);
      com.google.protobuf.GeneratedMessageV3
        .serializeIntegerMapTo(
          output,
          internalGetMapSint32Sint32(),
          MapSint32Sint32DefaultEntryHolder.defaultEntry,
          5);
      com.google.protobuf.GeneratedMessageV3
        .serializeLongMapTo(
          output,
          internalGetMapSint64Sint64(),
          MapSint64Sint64DefaultEntryHolder.defaultEntry,
          6);
      com.google.protobuf.GeneratedMessageV3
        .serializeIntegerMapTo(
          output,
          internalGetMapFixed32Fixed32(),
          MapFixed32Fixed32DefaultEntryHolder.defaultEntry,
          7);
      com.google.protobuf.GeneratedMessageV3
        .serializeLongMapTo(
          output,
          internalGetMapFixed64Fixed64(),
          MapFixed64Fixed64DefaultEntryHolder.defaultEntry,
          8);
      com.google.protobuf.GeneratedMessageV3
        .serializeIntegerMapTo(
          output,
          internalGetMapSfixed32Sfixed32(),
          MapSfixed32Sfixed32DefaultEntryHolder.defaultEntry,
          9);
      com.google.protobuf.GeneratedMessageV3
        .serializeLongMapTo(
          output,
          internalGetMapSfixed64Sfixed64(),
          MapSfixed64Sfixed64DefaultEntryHolder.defaultEntry,
          10);
      com.google.protobuf.GeneratedMessageV3
        .serializeIntegerMapTo(
          output,
          internalGetMapInt32Float(),
          MapInt32FloatDefaultEntryHolder.defaultEntry,
          11);
      com.google.protobuf.GeneratedMessageV3
        .serializeIntegerMapTo(
          output,
          internalGetMapInt32Double(),
          MapInt32DoubleDefaultEntryHolder.defaultEntry,
          12);
      com.google.protobuf.GeneratedMessageV3
        .serializeBooleanMapTo(
          output,
          internalGetMapBoolBool(),
          MapBoolBoolDefaultEntryHolder.defaultEntry,
          13);
      com.google.protobuf.GeneratedMessageV3
        .serializeStringMapTo(
          output,
          internalGetMapStringString(),
          MapStringStringDefaultEntryHolder.defaultEntry,
          14);
      com.google.protobuf.GeneratedMessageV3
        .serializeIntegerMapTo(
          output,
          internalGetMapInt32Bytes(),
          MapInt32BytesDefaultEntryHolder.defaultEntry,
          15);
      com.google.protobuf.GeneratedMessageV3
        .serializeIntegerMapTo(
          output,
          internalGetMapInt32Enum(),
          MapInt32EnumDefaultEntryHolder.defaultEntry,
          16);
      com.google.protobuf.GeneratedMessageV3
        .serializeIntegerMapTo(
          output,
          internalGetMapInt32ForeignMessage(),
          MapInt32ForeignMessageDefaultEntryHolder.defaultEntry,
          17);
      com.google.protobuf.GeneratedMessageV3
        .serializeStringMapTo(
          output,
          internalGetMapStringForeignMessage(),
          MapStringForeignMessageDefaultEntryHolder.defaultEntry,
          18);
      com.google.protobuf.GeneratedMessageV3
        .serializeIntegerMapTo(
          output,
          internalGetMapInt32AllTypes(),
          MapInt32AllTypesDefaultEntryHolder.defaultEntry,
          19);
      unknownFields.writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      for (java.util.Map.Entry<java.lang.Integer, java.lang.Integer> entry
           : internalGetMapInt32Int32().getMap().entrySet()) {
        com.google.protobuf.MapEntry<java.lang.Integer, java.lang.Integer>
        mapInt32Int32__ = MapInt32Int32DefaultEntryHolder.defaultEntry.newBuilderForType()
            .setKey(entry.getKey())
            .setValue(entry.getValue())
            .build();
        size += com.google.protobuf.CodedOutputStream
            .computeMessageSize(1, mapInt32Int32__);
      }
      for (java.util.Map.Entry<java.lang.Long, java.lang.Long> entry
           : internalGetMapInt64Int64().getMap().entrySet()) {
        com.google.protobuf.MapEntry<java.lang.Long, java.lang.Long>
        mapInt64Int64__ = MapInt64Int64DefaultEntryHolder.defaultEntry.newBuilderForType()
            .setKey(entry.getKey())
            .setValue(entry.getValue())
            .build();
        size += com.google.protobuf.CodedOutputStream
            .computeMessageSize(2, mapInt64Int64__);
      }
      for (java.util.Map.Entry<java.lang.Integer, java.lang.Integer> entry
           : internalGetMapUint32Uint32().getMap().entrySet()) {
        com.google.protobuf.MapEntry<java.lang.Integer, java.lang.Integer>
        mapUint32Uint32__ = MapUint32Uint32DefaultEntryHolder.defaultEntry.newBuilderForType()
            .setKey(entry.getKey())
            .setValue(entry.getValue())
            .build();
        size += com.google.protobuf.CodedOutputStream
            .computeMessageSize(3, mapUint32Uint32__);
      }
      for (java.util.Map.Entry<java.lang.Long, java.lang.Long> entry
           : internalGetMapUint64Uint64().getMap().entrySet()) {
        com.google.protobuf.MapEntry<java.lang.Long, java.lang.Long>
        mapUint64Uint64__ = MapUint64Uint64DefaultEntryHolder.defaultEntry.newBuilderForType()
            .setKey(entry.getKey())
            .setValue(entry.getValue())
            .build();
        size += com.google.protobuf.CodedOutputStream
            .computeMessageSize(4, mapUint64Uint64__);
      }
      for (java.util.Map.Entry<java.lang.Integer, java.lang.Integer> entry
           : internalGetMapSint32Sint32().getMap().entrySet()) {
        com.google.protobuf.MapEntry<java.lang.Integer, java.lang.Integer>
        mapSint32Sint32__ = MapSint32Sint32DefaultEntryHolder.defaultEntry.newBuilderForType()
            .setKey(entry.getKey())
            .setValue(entry.getValue())
            .build();
        size += com.google.protobuf.CodedOutputStream
            .computeMessageSize(5, mapSint32Sint32__);
      }
      for (java.util.Map.Entry<java.lang.Long, java.lang.Long> entry
           : internalGetMapSint64Sint64().getMap().entrySet()) {
        com.google.protobuf.MapEntry<java.lang.Long, java.lang.Long>
        mapSint64Sint64__ = MapSint64Sint64DefaultEntryHolder.defaultEntry.newBuilderForType()
            .setKey(entry.getKey())
            .setValue(entry.getValue())
            .build();
        size += com.google.protobuf.CodedOutputStream
            .computeMessageSize(6, mapSint64Sint64__);
      }
      for (java.util.Map.Entry<java.lang.Integer, java.lang.Integer> entry
           : internalGetMapFixed32Fixed32().getMap().entrySet()) {
        com.google.protobuf.MapEntry<java.lang.Integer, java.lang.Integer>
        mapFixed32Fixed32__ = MapFixed32Fixed32DefaultEntryHolder.defaultEntry.newBuilderForType()
            .setKey(entry.getKey())
            .setValue(entry.getValue())
            .build();
        size += com.google.protobuf.CodedOutputStream
            .computeMessageSize(7, mapFixed32Fixed32__);
      }
      for (java.util.Map.Entry<java.lang.Long, java.lang.Long> entry
           : internalGetMapFixed64Fixed64().getMap().entrySet()) {
        com.google.protobuf.MapEntry<java.lang.Long, java.lang.Long>
        mapFixed64Fixed64__ = MapFixed64Fixed64DefaultEntryHolder.defaultEntry.newBuilderForType()
            .setKey(entry.getKey())
            .setValue(entry.getValue())
            .build();
        size += com.google.protobuf.CodedOutputStream
            .computeMessageSize(8, mapFixed64Fixed64__);
      }
      for (java.util.Map.Entry<java.lang.Integer, java.lang.Integer> entry
           : internalGetMapSfixed32Sfixed32().getMap().entrySet()) {
        com.google.protobuf.MapEntry<java.lang.Integer, java.lang.Integer>
        mapSfixed32Sfixed32__ = MapSfixed32Sfixed32DefaultEntryHolder.defaultEntry.newBuilderForType()
            .setKey(entry.getKey())
            .setValue(entry.getValue())
            .build();
        size += com.google.protobuf.CodedOutputStream
            .computeMessageSize(9, mapSfixed32Sfixed32__);
      }
      for (java.util.Map.Entry<java.lang.Long, java.lang.Long> entry
           : internalGetMapSfixed64Sfixed64().getMap().entrySet()) {
        com.google.protobuf.MapEntry<java.lang.Long, java.lang.Long>
        mapSfixed64Sfixed64__ = MapSfixed64Sfixed64DefaultEntryHolder.defaultEntry.newBuilderForType()
            .setKey(entry.getKey())
            .setValue(entry.getValue())
            .build();
        size += com.google.protobuf.CodedOutputStream
            .computeMessageSize(10, mapSfixed64Sfixed64__);
      }
      for (java.util.Map.Entry<java.lang.Integer, java.lang.Float> entry
           : internalGetMapInt32Float().getMap().entrySet()) {
        com.google.protobuf.MapEntry<java.lang.Integer, java.lang.Float>
        mapInt32Float__ = MapInt32FloatDefaultEntryHolder.defaultEntry.newBuilderForType()
            .setKey(entry.getKey())
            .setValue(entry.getValue())
            .build();
        size += com.google.protobuf.CodedOutputStream
            .computeMessageSize(11, mapInt32Float__);
      }
      for (java.util.Map.Entry<java.lang.Integer, java.lang.Double> entry
           : internalGetMapInt32Double().getMap().entrySet()) {
        com.google.protobuf.MapEntry<java.lang.Integer, java.lang.Double>
        mapInt32Double__ = MapInt32DoubleDefaultEntryHolder.defaultEntry.newBuilderForType()
            .setKey(entry.getKey())
            .setValue(entry.getValue())
            .build();
        size += com.google.protobuf.CodedOutputStream
            .computeMessageSize(12, mapInt32Double__);
      }
      for (java.util.Map.Entry<java.lang.Boolean, java.lang.Boolean> entry
           : internalGetMapBoolBool().getMap().entrySet()) {
        com.google.protobuf.MapEntry<java.lang.Boolean, java.lang.Boolean>
        mapBoolBool__ = MapBoolBoolDefaultEntryHolder.defaultEntry.newBuilderForType()
            .setKey(entry.getKey())
            .setValue(entry.getValue())
            .build();
        size += com.google.protobuf.CodedOutputStream
            .computeMessageSize(13, mapBoolBool__);
      }
      for (java.util.Map.Entry<java.lang.String, java.lang.String> entry
           : internalGetMapStringString().getMap().entrySet()) {
        com.google.protobuf.MapEntry<java.lang.String, java.lang.String>
        mapStringString__ = MapStringStringDefaultEntryHolder.defaultEntry.newBuilderForType()
            .setKey(entry.getKey())
            .setValue(entry.getValue())
            .build();
        size += com.google.protobuf.CodedOutputStream
            .computeMessageSize(14, mapStringString__);
      }
      for (java.util.Map.Entry<java.lang.Integer, com.google.protobuf.ByteString> entry
           : internalGetMapInt32Bytes().getMap().entrySet()) {
        com.google.protobuf.MapEntry<java.lang.Integer, com.google.protobuf.ByteString>
        mapInt32Bytes__ = MapInt32BytesDefaultEntryHolder.defaultEntry.newBuilderForType()
            .setKey(entry.getKey())
            .setValue(entry.getValue())
            .build();
        size += com.google.protobuf.CodedOutputStream
            .computeMessageSize(15, mapInt32Bytes__);
      }
      for (java.util.Map.Entry<java.lang.Integer, java.lang.Integer> entry
           : internalGetMapInt32Enum().getMap().entrySet()) {
        com.google.protobuf.MapEntry<java.lang.Integer, java.lang.Integer>
        mapInt32Enum__ = MapInt32EnumDefaultEntryHolder.defaultEntry.newBuilderForType()
            .setKey(entry.getKey())
            .setValue(entry.getValue())
            .build();
        size += com.google.protobuf.CodedOutputStream
            .computeMessageSize(16, mapInt32Enum__);
      }
      for (java.util.Map.Entry<java.lang.Integer, protobuf_unittest.UnittestProto.ForeignMessage> entry
           : internalGetMapInt32ForeignMessage().getMap().entrySet()) {
        com.google.protobuf.MapEntry<java.lang.Integer, protobuf_unittest.UnittestProto.ForeignMessage>
        mapInt32ForeignMessage__ = MapInt32ForeignMessageDefaultEntryHolder.defaultEntry.newBuilderForType()
            .setKey(entry.getKey())
            .setValue(entry.getValue())
            .build();
        size += com.google.protobuf.CodedOutputStream
            .computeMessageSize(17, mapInt32ForeignMessage__);
      }
      for (java.util.Map.Entry<java.lang.String, protobuf_unittest.UnittestProto.ForeignMessage> entry
           : internalGetMapStringForeignMessage().getMap().entrySet()) {
        com.google.protobuf.MapEntry<java.lang.String, protobuf_unittest.UnittestProto.ForeignMessage>
        mapStringForeignMessage__ = MapStringForeignMessageDefaultEntryHolder.defaultEntry.newBuilderForType()
            .setKey(entry.getKey())
            .setValue(entry.getValue())
            .build();
        size += com.google.protobuf.CodedOutputStream
            .computeMessageSize(18, mapStringForeignMessage__);
      }
      for (java.util.Map.Entry<java.lang.Integer, protobuf_unittest.UnittestProto.TestAllTypes> entry
           : internalGetMapInt32AllTypes().getMap().entrySet()) {
        com.google.protobuf.MapEntry<java.lang.Integer, protobuf_unittest.UnittestProto.TestAllTypes>
        mapInt32AllTypes__ = MapInt32AllTypesDefaultEntryHolder.defaultEntry.newBuilderForType()
            .setKey(entry.getKey())
            .setValue(entry.getValue())
            .build();
        size += com.google.protobuf.CodedOutputStream
            .computeMessageSize(19, mapInt32AllTypes__);
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof protobuf_unittest.MapUnittest.TestMap)) {
        return super.equals(obj);
      }
      protobuf_unittest.MapUnittest.TestMap other = (protobuf_unittest.MapUnittest.TestMap) obj;

      if (!internalGetMapInt32Int32().equals(
          other.internalGetMapInt32Int32())) return false;
      if (!internalGetMapInt64Int64().equals(
          other.internalGetMapInt64Int64())) return false;
      if (!internalGetMapUint32Uint32().equals(
          other.internalGetMapUint32Uint32())) return false;
      if (!internalGetMapUint64Uint64().equals(
          other.internalGetMapUint64Uint64())) return false;
      if (!internalGetMapSint32Sint32().equals(
          other.internalGetMapSint32Sint32())) return false;
      if (!internalGetMapSint64Sint64().equals(
          other.internalGetMapSint64Sint64())) return false;
      if (!internalGetMapFixed32Fixed32().equals(
          other.internalGetMapFixed32Fixed32())) return false;
      if (!internalGetMapFixed64Fixed64().equals(
          other.internalGetMapFixed64Fixed64())) return false;
      if (!internalGetMapSfixed32Sfixed32().equals(
          other.internalGetMapSfixed32Sfixed32())) return false;
      if (!internalGetMapSfixed64Sfixed64().equals(
          other.internalGetMapSfixed64Sfixed64())) return false;
      if (!internalGetMapInt32Float().equals(
          other.internalGetMapInt32Float())) return false;
      if (!internalGetMapInt32Double().equals(
          other.internalGetMapInt32Double())) return false;
      if (!internalGetMapBoolBool().equals(
          other.internalGetMapBoolBool())) return false;
      if (!internalGetMapStringString().equals(
          other.internalGetMapStringString())) return false;
      if (!internalGetMapInt32Bytes().equals(
          other.internalGetMapInt32Bytes())) return false;
      if (!internalGetMapInt32Enum().equals(
          other.internalGetMapInt32Enum())) return false;
      if (!internalGetMapInt32ForeignMessage().equals(
          other.internalGetMapInt32ForeignMessage())) return false;
      if (!internalGetMapStringForeignMessage().equals(
          other.internalGetMapStringForeignMessage())) return false;
      if (!internalGetMapInt32AllTypes().equals(
          other.internalGetMapInt32AllTypes())) return false;
      if (!unknownFields.equals(other.unknownFields)) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      if (!internalGetMapInt32Int32().getMap().isEmpty()) {
        hash = (37 * hash) + MAP_INT32_INT32_FIELD_NUMBER;
        hash = (53 * hash) + internalGetMapInt32Int32().hashCode();
      }
      if (!internalGetMapInt64Int64().getMap().isEmpty()) {
        hash = (37 * hash) + MAP_INT64_INT64_FIELD_NUMBER;
        hash = (53 * hash) + internalGetMapInt64Int64().hashCode();
      }
      if (!internalGetMapUint32Uint32().getMap().isEmpty()) {
        hash = (37 * hash) + MAP_UINT32_UINT32_FIELD_NUMBER;
        hash = (53 * hash) + internalGetMapUint32Uint32().hashCode();
      }
      if (!internalGetMapUint64Uint64().getMap().isEmpty()) {
        hash = (37 * hash) + MAP_UINT64_UINT64_FIELD_NUMBER;
        hash = (53 * hash) + internalGetMapUint64Uint64().hashCode();
      }
      if (!internalGetMapSint32Sint32().getMap().isEmpty()) {
        hash = (37 * hash) + MAP_SINT32_SINT32_FIELD_NUMBER;
        hash = (53 * hash) + internalGetMapSint32Sint32().hashCode();
      }
      if (!internalGetMapSint64Sint64().getMap().isEmpty()) {
        hash = (37 * hash) + MAP_SINT64_SINT64_FIELD_NUMBER;
        hash = (53 * hash) + internalGetMapSint64Sint64().hashCode();
      }
      if (!internalGetMapFixed32Fixed32().getMap().isEmpty()) {
        hash = (37 * hash) + MAP_FIXED32_FIXED32_FIELD_NUMBER;
        hash = (53 * hash) + internalGetMapFixed32Fixed32().hashCode();
      }
      if (!internalGetMapFixed64Fixed64().getMap().isEmpty()) {
        hash = (37 * hash) + MAP_FIXED64_FIXED64_FIELD_NUMBER;
        hash = (53 * hash) + internalGetMapFixed64Fixed64().hashCode();
      }
      if (!internalGetMapSfixed32Sfixed32().getMap().isEmpty()) {
        hash = (37 * hash) + MAP_SFIXED32_SFIXED32_FIELD_NUMBER;
        hash = (53 * hash) + internalGetMapSfixed32Sfixed32().hashCode();
      }
      if (!internalGetMapSfixed64Sfixed64().getMap().isEmpty()) {
        hash = (37 * hash) + MAP_SFIXED64_SFIXED64_FIELD_NUMBER;
        hash = (53 * hash) + internalGetMapSfixed64Sfixed64().hashCode();
      }
      if (!internalGetMapInt32Float().getMap().isEmpty()) {
        hash = (37 * hash) + MAP_INT32_FLOAT_FIELD_NUMBER;
        hash = (53 * hash) + internalGetMapInt32Float().hashCode();
      }
      if (!internalGetMapInt32Double().getMap().isEmpty()) {
        hash = (37 * hash) + MAP_INT32_DOUBLE_FIELD_NUMBER;
        hash = (53 * hash) + internalGetMapInt32Double().hashCode();
      }
      if (!internalGetMapBoolBool().getMap().isEmpty()) {
        hash = (37 * hash) + MAP_BOOL_BOOL_FIELD_NUMBER;
        hash = (53 * hash) + internalGetMapBoolBool().hashCode();
      }
      if (!internalGetMapStringString().getMap().isEmpty()) {
        hash = (37 * hash) + MAP_STRING_STRING_FIELD_NUMBER;
        hash = (53 * hash) + internalGetMapStringString().hashCode();
      }
      if (!internalGetMapInt32Bytes().getMap().isEmpty()) {
        hash = (37 * hash) + MAP_INT32_BYTES_FIELD_NUMBER;
        hash = (53 * hash) + internalGetMapInt32Bytes().hashCode();
      }
      if (!internalGetMapInt32Enum().getMap().isEmpty()) {
        hash = (37 * hash) + MAP_INT32_ENUM_FIELD_NUMBER;
        hash = (53 * hash) + internalGetMapInt32Enum().hashCode();
      }
      if (!internalGetMapInt32ForeignMessage().getMap().isEmpty()) {
        hash = (37 * hash) + MAP_INT32_FOREIGN_MESSAGE_FIELD_NUMBER;
        hash = (53 * hash) + internalGetMapInt32ForeignMessage().hashCode();
      }
      if (!internalGetMapStringForeignMessage().getMap().isEmpty()) {
        hash = (37 * hash) + MAP_STRING_FOREIGN_MESSAGE_FIELD_NUMBER;
        hash = (53 * hash) + internalGetMapStringForeignMessage().hashCode();
      }
      if (!internalGetMapInt32AllTypes().getMap().isEmpty()) {
        hash = (37 * hash) + MAP_INT32_ALL_TYPES_FIELD_NUMBER;
        hash = (53 * hash) + internalGetMapInt32AllTypes().hashCode();
      }
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static protobuf_unittest.MapUnittest.TestMap parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static protobuf_unittest.MapUnittest.TestMap parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static protobuf_unittest.MapUnittest.TestMap parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static protobuf_unittest.MapUnittest.TestMap parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static protobuf_unittest.MapUnittest.TestMap parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static protobuf_unittest.MapUnittest.TestMap parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static protobuf_unittest.MapUnittest.TestMap parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static protobuf_unittest.MapUnittest.TestMap parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static protobuf_unittest.MapUnittest.TestMap parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static protobuf_unittest.MapUnittest.TestMap parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static protobuf_unittest.MapUnittest.TestMap parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static protobuf_unittest.MapUnittest.TestMap parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(protobuf_unittest.MapUnittest.TestMap prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * <pre>
     * Tests maps.
     * </pre>
     *
     * Protobuf type {@code protobuf_unittest.TestMap}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:protobuf_unittest.TestMap)
        protobuf_unittest.MapUnittest.TestMapOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return protobuf_unittest.MapUnittest.internal_static_protobuf_unittest_TestMap_descriptor;
      }

      @SuppressWarnings({"rawtypes"})
      protected com.google.protobuf.MapField internalGetMapField(
          int number) {
        switch (number) {
          case 1:
            return internalGetMapInt32Int32();
          case 2:
            return internalGetMapInt64Int64();
          case 3:
            return internalGetMapUint32Uint32();
          case 4:
            return internalGetMapUint64Uint64();
          case 5:
            return internalGetMapSint32Sint32();
          case 6:
            return internalGetMapSint64Sint64();
          case 7:
            return internalGetMapFixed32Fixed32();
          case 8:
            return internalGetMapFixed64Fixed64();
          case 9:
            return internalGetMapSfixed32Sfixed32();
          case 10:
            return internalGetMapSfixed64Sfixed64();
          case 11:
            return internalGetMapInt32Float();
          case 12:
            return internalGetMapInt32Double();
          case 13:
            return internalGetMapBoolBool();
          case 14:
            return internalGetMapStringString();
          case 15:
            return internalGetMapInt32Bytes();
          case 16:
            return internalGetMapInt32Enum();
          case 17:
            return internalGetMapInt32ForeignMessage();
          case 18:
            return internalGetMapStringForeignMessage();
          case 19:
            return internalGetMapInt32AllTypes();
          default:
            throw new RuntimeException(
                "Invalid map field number: " + number);
        }
      }
      @SuppressWarnings({"rawtypes"})
      protected com.google.protobuf.MapField internalGetMutableMapField(
          int number) {
        switch (number) {
          case 1:
            return internalGetMutableMapInt32Int32();
          case 2:
            return internalGetMutableMapInt64Int64();
          case 3:
            return internalGetMutableMapUint32Uint32();
          case 4:
            return internalGetMutableMapUint64Uint64();
          case 5:
            return internalGetMutableMapSint32Sint32();
          case 6:
            return internalGetMutableMapSint64Sint64();
          case 7:
            return internalGetMutableMapFixed32Fixed32();
          case 8:
            return internalGetMutableMapFixed64Fixed64();
          case 9:
            return internalGetMutableMapSfixed32Sfixed32();
          case 10:
            return internalGetMutableMapSfixed64Sfixed64();
          case 11:
            return internalGetMutableMapInt32Float();
          case 12:
            return internalGetMutableMapInt32Double();
          case 13:
            return internalGetMutableMapBoolBool();
          case 14:
            return internalGetMutableMapStringString();
          case 15:
            return internalGetMutableMapInt32Bytes();
          case 16:
            return internalGetMutableMapInt32Enum();
          case 17:
            return internalGetMutableMapInt32ForeignMessage();
          case 18:
            return internalGetMutableMapStringForeignMessage();
          case 19:
            return internalGetMutableMapInt32AllTypes();
          default:
            throw new RuntimeException(
                "Invalid map field number: " + number);
        }
      }
      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return protobuf_unittest.MapUnittest.internal_static_protobuf_unittest_TestMap_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                protobuf_unittest.MapUnittest.TestMap.class, protobuf_unittest.MapUnittest.TestMap.Builder.class);
      }

      // Construct using protobuf_unittest.MapUnittest.TestMap.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        internalGetMutableMapInt32Int32().clear();
        internalGetMutableMapInt64Int64().clear();
        internalGetMutableMapUint32Uint32().clear();
        internalGetMutableMapUint64Uint64().clear();
        internalGetMutableMapSint32Sint32().clear();
        internalGetMutableMapSint64Sint64().clear();
        internalGetMutableMapFixed32Fixed32().clear();
        internalGetMutableMapFixed64Fixed64().clear();
        internalGetMutableMapSfixed32Sfixed32().clear();
        internalGetMutableMapSfixed64Sfixed64().clear();
        internalGetMutableMapInt32Float().clear();
        internalGetMutableMapInt32Double().clear();
        internalGetMutableMapBoolBool().clear();
        internalGetMutableMapStringString().clear();
        internalGetMutableMapInt32Bytes().clear();
        internalGetMutableMapInt32Enum().clear();
        internalGetMutableMapInt32ForeignMessage().clear();
        internalGetMutableMapStringForeignMessage().clear();
        internalGetMutableMapInt32AllTypes().clear();
        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return protobuf_unittest.MapUnittest.internal_static_protobuf_unittest_TestMap_descriptor;
      }

      @java.lang.Override
      public protobuf_unittest.MapUnittest.TestMap getDefaultInstanceForType() {
        return protobuf_unittest.MapUnittest.TestMap.getDefaultInstance();
      }

      @java.lang.Override
      public protobuf_unittest.MapUnittest.TestMap build() {
        protobuf_unittest.MapUnittest.TestMap result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public protobuf_unittest.MapUnittest.TestMap buildPartial() {
        protobuf_unittest.MapUnittest.TestMap result = new protobuf_unittest.MapUnittest.TestMap(this);
        int from_bitField0_ = bitField0_;
        result.mapInt32Int32_ = internalGetMapInt32Int32();
        result.mapInt32Int32_.makeImmutable();
        result.mapInt64Int64_ = internalGetMapInt64Int64();
        result.mapInt64Int64_.makeImmutable();
        result.mapUint32Uint32_ = internalGetMapUint32Uint32();
        result.mapUint32Uint32_.makeImmutable();
        result.mapUint64Uint64_ = internalGetMapUint64Uint64();
        result.mapUint64Uint64_.makeImmutable();
        result.mapSint32Sint32_ = internalGetMapSint32Sint32();
        result.mapSint32Sint32_.makeImmutable();
        result.mapSint64Sint64_ = internalGetMapSint64Sint64();
        result.mapSint64Sint64_.makeImmutable();
        result.mapFixed32Fixed32_ = internalGetMapFixed32Fixed32();
        result.mapFixed32Fixed32_.makeImmutable();
        result.mapFixed64Fixed64_ = internalGetMapFixed64Fixed64();
        result.mapFixed64Fixed64_.makeImmutable();
        result.mapSfixed32Sfixed32_ = internalGetMapSfixed32Sfixed32();
        result.mapSfixed32Sfixed32_.makeImmutable();
        result.mapSfixed64Sfixed64_ = internalGetMapSfixed64Sfixed64();
        result.mapSfixed64Sfixed64_.makeImmutable();
        result.mapInt32Float_ = internalGetMapInt32Float();
        result.mapInt32Float_.makeImmutable();
        result.mapInt32Double_ = internalGetMapInt32Double();
        result.mapInt32Double_.makeImmutable();
        result.mapBoolBool_ = internalGetMapBoolBool();
        result.mapBoolBool_.makeImmutable();
        result.mapStringString_ = internalGetMapStringString();
        result.mapStringString_.makeImmutable();
        result.mapInt32Bytes_ = internalGetMapInt32Bytes();
        result.mapInt32Bytes_.makeImmutable();
        result.mapInt32Enum_ = internalGetMapInt32Enum();
        result.mapInt32Enum_.makeImmutable();
        result.mapInt32ForeignMessage_ = internalGetMapInt32ForeignMessage();
        result.mapInt32ForeignMessage_.makeImmutable();
        result.mapStringForeignMessage_ = internalGetMapStringForeignMessage();
        result.mapStringForeignMessage_.makeImmutable();
        result.mapInt32AllTypes_ = internalGetMapInt32AllTypes();
        result.mapInt32AllTypes_.makeImmutable();
        onBuilt();
        return result;
      }

      @java.lang.Override
      public Builder clone() {
        return super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof protobuf_unittest.MapUnittest.TestMap) {
          return mergeFrom((protobuf_unittest.MapUnittest.TestMap)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(protobuf_unittest.MapUnittest.TestMap other) {
        if (other == protobuf_unittest.MapUnittest.TestMap.getDefaultInstance()) return this;
        internalGetMutableMapInt32Int32().mergeFrom(
            other.internalGetMapInt32Int32());
        internalGetMutableMapInt64Int64().mergeFrom(
            other.internalGetMapInt64Int64());
        internalGetMutableMapUint32Uint32().mergeFrom(
            other.internalGetMapUint32Uint32());
        internalGetMutableMapUint64Uint64().mergeFrom(
            other.internalGetMapUint64Uint64());
        internalGetMutableMapSint32Sint32().mergeFrom(
            other.internalGetMapSint32Sint32());
        internalGetMutableMapSint64Sint64().mergeFrom(
            other.internalGetMapSint64Sint64());
        internalGetMutableMapFixed32Fixed32().mergeFrom(
            other.internalGetMapFixed32Fixed32());
        internalGetMutableMapFixed64Fixed64().mergeFrom(
            other.internalGetMapFixed64Fixed64());
        internalGetMutableMapSfixed32Sfixed32().mergeFrom(
            other.internalGetMapSfixed32Sfixed32());
        internalGetMutableMapSfixed64Sfixed64().mergeFrom(
            other.internalGetMapSfixed64Sfixed64());
        internalGetMutableMapInt32Float().mergeFrom(
            other.internalGetMapInt32Float());
        internalGetMutableMapInt32Double().mergeFrom(
            other.internalGetMapInt32Double());
        internalGetMutableMapBoolBool().mergeFrom(
            other.internalGetMapBoolBool());
        internalGetMutableMapStringString().mergeFrom(
            other.internalGetMapStringString());
        internalGetMutableMapInt32Bytes().mergeFrom(
            other.internalGetMapInt32Bytes());
        internalGetMutableMapInt32Enum().mergeFrom(
            other.internalGetMapInt32Enum());
        internalGetMutableMapInt32ForeignMessage().mergeFrom(
            other.internalGetMapInt32ForeignMessage());
        internalGetMutableMapStringForeignMessage().mergeFrom(
            other.internalGetMapStringForeignMessage());
        internalGetMutableMapInt32AllTypes().mergeFrom(
            other.internalGetMapInt32AllTypes());
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        protobuf_unittest.MapUnittest.TestMap parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (protobuf_unittest.MapUnittest.TestMap) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private com.google.protobuf.MapField<
          java.lang.Integer, java.lang.Integer> mapInt32Int32_;
      private com.google.protobuf.MapField<java.lang.Integer, java.lang.Integer>
      internalGetMapInt32Int32() {
        if (mapInt32Int32_ == null) {
          return com.google.protobuf.MapField.emptyMapField(
              MapInt32Int32DefaultEntryHolder.defaultEntry);
        }
        return mapInt32Int32_;
      }
      private com.google.protobuf.MapField<java.lang.Integer, java.lang.Integer>
      internalGetMutableMapInt32Int32() {
        onChanged();;
        if (mapInt32Int32_ == null) {
          mapInt32Int32_ = com.google.protobuf.MapField.newMapField(
              MapInt32Int32DefaultEntryHolder.defaultEntry);
        }
        if (!mapInt32Int32_.isMutable()) {
          mapInt32Int32_ = mapInt32Int32_.copy();
        }
        return mapInt32Int32_;
      }

      public int getMapInt32Int32Count() {
        return internalGetMapInt32Int32().getMap().size();
      }
      /**
       * <code>map&lt;int32, int32&gt; map_int32_int32 = 1;</code>
       */

      @java.lang.Override
      public boolean containsMapInt32Int32(
          int key) {
        
        return internalGetMapInt32Int32().getMap().containsKey(key);
      }
      /**
       * Use {@link #getMapInt32Int32Map()} instead.
       */
      @java.lang.Override
      @java.lang.Deprecated
      public java.util.Map<java.lang.Integer, java.lang.Integer> getMapInt32Int32() {
        return getMapInt32Int32Map();
      }
      /**
       * <code>map&lt;int32, int32&gt; map_int32_int32 = 1;</code>
       */
      @java.lang.Override

      public java.util.Map<java.lang.Integer, java.lang.Integer> getMapInt32Int32Map() {
        return internalGetMapInt32Int32().getMap();
      }
      /**
       * <code>map&lt;int32, int32&gt; map_int32_int32 = 1;</code>
       */
      @java.lang.Override

      public int getMapInt32Int32OrDefault(
          int key,
          int defaultValue) {
        
        java.util.Map<java.lang.Integer, java.lang.Integer> map =
            internalGetMapInt32Int32().getMap();
        return map.containsKey(key) ? map.get(key) : defaultValue;
      }
      /**
       * <code>map&lt;int32, int32&gt; map_int32_int32 = 1;</code>
       */
      @java.lang.Override

      public int getMapInt32Int32OrThrow(
          int key) {
        
        java.util.Map<java.lang.Integer, java.lang.Integer> map =
            internalGetMapInt32Int32().getMap();
        if (!map.containsKey(key)) {
          throw new java.lang.IllegalArgumentException();
        }
        return map.get(key);
      }

      public Builder clearMapInt32Int32() {
        internalGetMutableMapInt32Int32().getMutableMap()
            .clear();
        return this;
      }
      /**
       * <code>map&lt;int32, int32&gt; map_int32_int32 = 1;</code>
       */

      public Builder removeMapInt32Int32(
          int key) {
        
        internalGetMutableMapInt32Int32().getMutableMap()
            .remove(key);
        return this;
      }
      /**
       * Use alternate mutation accessors instead.
       */
      @java.lang.Deprecated
      public java.util.Map<java.lang.Integer, java.lang.Integer>
      getMutableMapInt32Int32() {
        return internalGetMutableMapInt32Int32().getMutableMap();
      }
      /**
       * <code>map&lt;int32, int32&gt; map_int32_int32 = 1;</code>
       */
      public Builder putMapInt32Int32(
          int key,
          int value) {
        
        
        internalGetMutableMapInt32Int32().getMutableMap()
            .put(key, value);
        return this;
      }
      /**
       * <code>map&lt;int32, int32&gt; map_int32_int32 = 1;</code>
       */

      public Builder putAllMapInt32Int32(
          java.util.Map<java.lang.Integer, java.lang.Integer> values) {
        internalGetMutableMapInt32Int32().getMutableMap()
            .putAll(values);
        return this;
      }

      private com.google.protobuf.MapField<
          java.lang.Long, java.lang.Long> mapInt64Int64_;
      private com.google.protobuf.MapField<java.lang.Long, java.lang.Long>
      internalGetMapInt64Int64() {
        if (mapInt64Int64_ == null) {
          return com.google.protobuf.MapField.emptyMapField(
              MapInt64Int64DefaultEntryHolder.defaultEntry);
        }
        return mapInt64Int64_;
      }
      private com.google.protobuf.MapField<java.lang.Long, java.lang.Long>
      internalGetMutableMapInt64Int64() {
        onChanged();;
        if (mapInt64Int64_ == null) {
          mapInt64Int64_ = com.google.protobuf.MapField.newMapField(
              MapInt64Int64DefaultEntryHolder.defaultEntry);
        }
        if (!mapInt64Int64_.isMutable()) {
          mapInt64Int64_ = mapInt64Int64_.copy();
        }
        return mapInt64Int64_;
      }

      public int getMapInt64Int64Count() {
        return internalGetMapInt64Int64().getMap().size();
      }
      /**
       * <code>map&lt;int64, int64&gt; map_int64_int64 = 2;</code>
       */

      @java.lang.Override
      public boolean containsMapInt64Int64(
          long key) {
        
        return internalGetMapInt64Int64().getMap().containsKey(key);
      }
      /**
       * Use {@link #getMapInt64Int64Map()} instead.
       */
      @java.lang.Override
      @java.lang.Deprecated
      public java.util.Map<java.lang.Long, java.lang.Long> getMapInt64Int64() {
        return getMapInt64Int64Map();
      }
      /**
       * <code>map&lt;int64, int64&gt; map_int64_int64 = 2;</code>
       */
      @java.lang.Override

      public java.util.Map<java.lang.Long, java.lang.Long> getMapInt64Int64Map() {
        return internalGetMapInt64Int64().getMap();
      }
      /**
       * <code>map&lt;int64, int64&gt; map_int64_int64 = 2;</code>
       */
      @java.lang.Override

      public long getMapInt64Int64OrDefault(
          long key,
          long defaultValue) {
        
        java.util.Map<java.lang.Long, java.lang.Long> map =
            internalGetMapInt64Int64().getMap();
        return map.containsKey(key) ? map.get(key) : defaultValue;
      }
      /**
       * <code>map&lt;int64, int64&gt; map_int64_int64 = 2;</code>
       */
      @java.lang.Override

      public long getMapInt64Int64OrThrow(
          long key) {
        
        java.util.Map<java.lang.Long, java.lang.Long> map =
            internalGetMapInt64Int64().getMap();
        if (!map.containsKey(key)) {
          throw new java.lang.IllegalArgumentException();
        }
        return map.get(key);
      }

      public Builder clearMapInt64Int64() {
        internalGetMutableMapInt64Int64().getMutableMap()
            .clear();
        return this;
      }
      /**
       * <code>map&lt;int64, int64&gt; map_int64_int64 = 2;</code>
       */

      public Builder removeMapInt64Int64(
          long key) {
        
        internalGetMutableMapInt64Int64().getMutableMap()
            .remove(key);
        return this;
      }
      /**
       * Use alternate mutation accessors instead.
       */
      @java.lang.Deprecated
      public java.util.Map<java.lang.Long, java.lang.Long>
      getMutableMapInt64Int64() {
        return internalGetMutableMapInt64Int64().getMutableMap();
      }
      /**
       * <code>map&lt;int64, int64&gt; map_int64_int64 = 2;</code>
       */
      public Builder putMapInt64Int64(
          long key,
          long value) {
        
        
        internalGetMutableMapInt64Int64().getMutableMap()
            .put(key, value);
        return this;
      }
      /**
       * <code>map&lt;int64, int64&gt; map_int64_int64 = 2;</code>
       */

      public Builder putAllMapInt64Int64(
          java.util.Map<java.lang.Long, java.lang.Long> values) {
        internalGetMutableMapInt64Int64().getMutableMap()
            .putAll(values);
        return this;
      }

      private com.google.protobuf.MapField<
          java.lang.Integer, java.lang.Integer> mapUint32Uint32_;
      private com.google.protobuf.MapField<java.lang.Integer, java.lang.Integer>
      internalGetMapUint32Uint32() {
        if (mapUint32Uint32_ == null) {
          return com.google.protobuf.MapField.emptyMapField(
              MapUint32Uint32DefaultEntryHolder.defaultEntry);
        }
        return mapUint32Uint32_;
      }
      private com.google.protobuf.MapField<java.lang.Integer, java.lang.Integer>
      internalGetMutableMapUint32Uint32() {
        onChanged();;
        if (mapUint32Uint32_ == null) {
          mapUint32Uint32_ = com.google.protobuf.MapField.newMapField(
              MapUint32Uint32DefaultEntryHolder.defaultEntry);
        }
        if (!mapUint32Uint32_.isMutable()) {
          mapUint32Uint32_ = mapUint32Uint32_.copy();
        }
        return mapUint32Uint32_;
      }

      public int getMapUint32Uint32Count() {
        return internalGetMapUint32Uint32().getMap().size();
      }
      /**
       * <code>map&lt;uint32, uint32&gt; map_uint32_uint32 = 3;</code>
       */

      @java.lang.Override
      public boolean containsMapUint32Uint32(
          int key) {
        
        return internalGetMapUint32Uint32().getMap().containsKey(key);
      }
      /**
       * Use {@link #getMapUint32Uint32Map()} instead.
       */
      @java.lang.Override
      @java.lang.Deprecated
      public java.util.Map<java.lang.Integer, java.lang.Integer> getMapUint32Uint32() {
        return getMapUint32Uint32Map();
      }
      /**
       * <code>map&lt;uint32, uint32&gt; map_uint32_uint32 = 3;</code>
       */
      @java.lang.Override

      public java.util.Map<java.lang.Integer, java.lang.Integer> getMapUint32Uint32Map() {
        return internalGetMapUint32Uint32().getMap();
      }
      /**
       * <code>map&lt;uint32, uint32&gt; map_uint32_uint32 = 3;</code>
       */
      @java.lang.Override

      public int getMapUint32Uint32OrDefault(
          int key,
          int defaultValue) {
        
        java.util.Map<java.lang.Integer, java.lang.Integer> map =
            internalGetMapUint32Uint32().getMap();
        return map.containsKey(key) ? map.get(key) : defaultValue;
      }
      /**
       * <code>map&lt;uint32, uint32&gt; map_uint32_uint32 = 3;</code>
       */
      @java.lang.Override

      public int getMapUint32Uint32OrThrow(
          int key) {
        
        java.util.Map<java.lang.Integer, java.lang.Integer> map =
            internalGetMapUint32Uint32().getMap();
        if (!map.containsKey(key)) {
          throw new java.lang.IllegalArgumentException();
        }
        return map.get(key);
      }

      public Builder clearMapUint32Uint32() {
        internalGetMutableMapUint32Uint32().getMutableMap()
            .clear();
        return this;
      }
      /**
       * <code>map&lt;uint32, uint32&gt; map_uint32_uint32 = 3;</code>
       */

      public Builder removeMapUint32Uint32(
          int key) {
        
        internalGetMutableMapUint32Uint32().getMutableMap()
            .remove(key);
        return this;
      }
      /**
       * Use alternate mutation accessors instead.
       */
      @java.lang.Deprecated
      public java.util.Map<java.lang.Integer, java.lang.Integer>
      getMutableMapUint32Uint32() {
        return internalGetMutableMapUint32Uint32().getMutableMap();
      }
      /**
       * <code>map&lt;uint32, uint32&gt; map_uint32_uint32 = 3;</code>
       */
      public Builder putMapUint32Uint32(
          int key,
          int value) {
        
        
        internalGetMutableMapUint32Uint32().getMutableMap()
            .put(key, value);
        return this;
      }
      /**
       * <code>map&lt;uint32, uint32&gt; map_uint32_uint32 = 3;</code>
       */

      public Builder putAllMapUint32Uint32(
          java.util.Map<java.lang.Integer, java.lang.Integer> values) {
        internalGetMutableMapUint32Uint32().getMutableMap()
            .putAll(values);
        return this;
      }

      private com.google.protobuf.MapField<
          java.lang.Long, java.lang.Long> mapUint64Uint64_;
      private com.google.protobuf.MapField<java.lang.Long, java.lang.Long>
      internalGetMapUint64Uint64() {
        if (mapUint64Uint64_ == null) {
          return com.google.protobuf.MapField.emptyMapField(
              MapUint64Uint64DefaultEntryHolder.defaultEntry);
        }
        return mapUint64Uint64_;
      }
      private com.google.protobuf.MapField<java.lang.Long, java.lang.Long>
      internalGetMutableMapUint64Uint64() {
        onChanged();;
        if (mapUint64Uint64_ == null) {
          mapUint64Uint64_ = com.google.protobuf.MapField.newMapField(
              MapUint64Uint64DefaultEntryHolder.defaultEntry);
        }
        if (!mapUint64Uint64_.isMutable()) {
          mapUint64Uint64_ = mapUint64Uint64_.copy();
        }
        return mapUint64Uint64_;
      }

      public int getMapUint64Uint64Count() {
        return internalGetMapUint64Uint64().getMap().size();
      }
      /**
       * <code>map&lt;uint64, uint64&gt; map_uint64_uint64 = 4;</code>
       */

      @java.lang.Override
      public boolean containsMapUint64Uint64(
          long key) {
        
        return internalGetMapUint64Uint64().getMap().containsKey(key);
      }
      /**
       * Use {@link #getMapUint64Uint64Map()} instead.
       */
      @java.lang.Override
      @java.lang.Deprecated
      public java.util.Map<java.lang.Long, java.lang.Long> getMapUint64Uint64() {
        return getMapUint64Uint64Map();
      }
      /**
       * <code>map&lt;uint64, uint64&gt; map_uint64_uint64 = 4;</code>
       */
      @java.lang.Override

      public java.util.Map<java.lang.Long, java.lang.Long> getMapUint64Uint64Map() {
        return internalGetMapUint64Uint64().getMap();
      }
      /**
       * <code>map&lt;uint64, uint64&gt; map_uint64_uint64 = 4;</code>
       */
      @java.lang.Override

      public long getMapUint64Uint64OrDefault(
          long key,
          long defaultValue) {
        
        java.util.Map<java.lang.Long, java.lang.Long> map =
            internalGetMapUint64Uint64().getMap();
        return map.containsKey(key) ? map.get(key) : defaultValue;
      }
      /**
       * <code>map&lt;uint64, uint64&gt; map_uint64_uint64 = 4;</code>
       */
      @java.lang.Override

      public long getMapUint64Uint64OrThrow(
          long key) {
        
        java.util.Map<java.lang.Long, java.lang.Long> map =
            internalGetMapUint64Uint64().getMap();
        if (!map.containsKey(key)) {
          throw new java.lang.IllegalArgumentException();
        }
        return map.get(key);
      }

      public Builder clearMapUint64Uint64() {
        internalGetMutableMapUint64Uint64().getMutableMap()
            .clear();
        return this;
      }
      /**
       * <code>map&lt;uint64, uint64&gt; map_uint64_uint64 = 4;</code>
       */

      public Builder removeMapUint64Uint64(
          long key) {
        
        internalGetMutableMapUint64Uint64().getMutableMap()
            .remove(key);
        return this;
      }
      /**
       * Use alternate mutation accessors instead.
       */
      @java.lang.Deprecated
      public java.util.Map<java.lang.Long, java.lang.Long>
      getMutableMapUint64Uint64() {
        return internalGetMutableMapUint64Uint64().getMutableMap();
      }
      /**
       * <code>map&lt;uint64, uint64&gt; map_uint64_uint64 = 4;</code>
       */
      public Builder putMapUint64Uint64(
          long key,
          long value) {
        
        
        internalGetMutableMapUint64Uint64().getMutableMap()
            .put(key, value);
        return this;
      }
      /**
       * <code>map&lt;uint64, uint64&gt; map_uint64_uint64 = 4;</code>
       */

      public Builder putAllMapUint64Uint64(
          java.util.Map<java.lang.Long, java.lang.Long> values) {
        internalGetMutableMapUint64Uint64().getMutableMap()
            .putAll(values);
        return this;
      }

      private com.google.protobuf.MapField<
          java.lang.Integer, java.lang.Integer> mapSint32Sint32_;
      private com.google.protobuf.MapField<java.lang.Integer, java.lang.Integer>
      internalGetMapSint32Sint32() {
        if (mapSint32Sint32_ == null) {
          return com.google.protobuf.MapField.emptyMapField(
              MapSint32Sint32DefaultEntryHolder.defaultEntry);
        }
        return mapSint32Sint32_;
      }
      private com.google.protobuf.MapField<java.lang.Integer, java.lang.Integer>
      internalGetMutableMapSint32Sint32() {
        onChanged();;
        if (mapSint32Sint32_ == null) {
          mapSint32Sint32_ = com.google.protobuf.MapField.newMapField(
              MapSint32Sint32DefaultEntryHolder.defaultEntry);
        }
        if (!mapSint32Sint32_.isMutable()) {
          mapSint32Sint32_ = mapSint32Sint32_.copy();
        }
        return mapSint32Sint32_;
      }

      public int getMapSint32Sint32Count() {
        return internalGetMapSint32Sint32().getMap().size();
      }
      /**
       * <code>map&lt;sint32, sint32&gt; map_sint32_sint32 = 5;</code>
       */

      @java.lang.Override
      public boolean containsMapSint32Sint32(
          int key) {
        
        return internalGetMapSint32Sint32().getMap().containsKey(key);
      }
      /**
       * Use {@link #getMapSint32Sint32Map()} instead.
       */
      @java.lang.Override
      @java.lang.Deprecated
      public java.util.Map<java.lang.Integer, java.lang.Integer> getMapSint32Sint32() {
        return getMapSint32Sint32Map();
      }
      /**
       * <code>map&lt;sint32, sint32&gt; map_sint32_sint32 = 5;</code>
       */
      @java.lang.Override

      public java.util.Map<java.lang.Integer, java.lang.Integer> getMapSint32Sint32Map() {
        return internalGetMapSint32Sint32().getMap();
      }
      /**
       * <code>map&lt;sint32, sint32&gt; map_sint32_sint32 = 5;</code>
       */
      @java.lang.Override

      public int getMapSint32Sint32OrDefault(
          int key,
          int defaultValue) {
        
        java.util.Map<java.lang.Integer, java.lang.Integer> map =
            internalGetMapSint32Sint32().getMap();
        return map.containsKey(key) ? map.get(key) : defaultValue;
      }
      /**
       * <code>map&lt;sint32, sint32&gt; map_sint32_sint32 = 5;</code>
       */
      @java.lang.Override

      public int getMapSint32Sint32OrThrow(
          int key) {
        
        java.util.Map<java.lang.Integer, java.lang.Integer> map =
            internalGetMapSint32Sint32().getMap();
        if (!map.containsKey(key)) {
          throw new java.lang.IllegalArgumentException();
        }
        return map.get(key);
      }

      public Builder clearMapSint32Sint32() {
        internalGetMutableMapSint32Sint32().getMutableMap()
            .clear();
        return this;
      }
      /**
       * <code>map&lt;sint32, sint32&gt; map_sint32_sint32 = 5;</code>
       */

      public Builder removeMapSint32Sint32(
          int key) {
        
        internalGetMutableMapSint32Sint32().getMutableMap()
            .remove(key);
        return this;
      }
      /**
       * Use alternate mutation accessors instead.
       */
      @java.lang.Deprecated
      public java.util.Map<java.lang.Integer, java.lang.Integer>
      getMutableMapSint32Sint32() {
        return internalGetMutableMapSint32Sint32().getMutableMap();
      }
      /**
       * <code>map&lt;sint32, sint32&gt; map_sint32_sint32 = 5;</code>
       */
      public Builder putMapSint32Sint32(
          int key,
          int value) {
        
        
        internalGetMutableMapSint32Sint32().getMutableMap()
            .put(key, value);
        return this;
      }
      /**
       * <code>map&lt;sint32, sint32&gt; map_sint32_sint32 = 5;</code>
       */

      public Builder putAllMapSint32Sint32(
          java.util.Map<java.lang.Integer, java.lang.Integer> values) {
        internalGetMutableMapSint32Sint32().getMutableMap()
            .putAll(values);
        return this;
      }

      private com.google.protobuf.MapField<
          java.lang.Long, java.lang.Long> mapSint64Sint64_;
      private com.google.protobuf.MapField<java.lang.Long, java.lang.Long>
      internalGetMapSint64Sint64() {
        if (mapSint64Sint64_ == null) {
          return com.google.protobuf.MapField.emptyMapField(
              MapSint64Sint64DefaultEntryHolder.defaultEntry);
        }
        return mapSint64Sint64_;
      }
      private com.google.protobuf.MapField<java.lang.Long, java.lang.Long>
      internalGetMutableMapSint64Sint64() {
        onChanged();;
        if (mapSint64Sint64_ == null) {
          mapSint64Sint64_ = com.google.protobuf.MapField.newMapField(
              MapSint64Sint64DefaultEntryHolder.defaultEntry);
        }
        if (!mapSint64Sint64_.isMutable()) {
          mapSint64Sint64_ = mapSint64Sint64_.copy();
        }
        return mapSint64Sint64_;
      }

      public int getMapSint64Sint64Count() {
        return internalGetMapSint64Sint64().getMap().size();
      }
      /**
       * <code>map&lt;sint64, sint64&gt; map_sint64_sint64 = 6;</code>
       */

      @java.lang.Override
      public boolean containsMapSint64Sint64(
          long key) {
        
        return internalGetMapSint64Sint64().getMap().containsKey(key);
      }
      /**
       * Use {@link #getMapSint64Sint64Map()} instead.
       */
      @java.lang.Override
      @java.lang.Deprecated
      public java.util.Map<java.lang.Long, java.lang.Long> getMapSint64Sint64() {
        return getMapSint64Sint64Map();
      }
      /**
       * <code>map&lt;sint64, sint64&gt; map_sint64_sint64 = 6;</code>
       */
      @java.lang.Override

      public java.util.Map<java.lang.Long, java.lang.Long> getMapSint64Sint64Map() {
        return internalGetMapSint64Sint64().getMap();
      }
      /**
       * <code>map&lt;sint64, sint64&gt; map_sint64_sint64 = 6;</code>
       */
      @java.lang.Override

      public long getMapSint64Sint64OrDefault(
          long key,
          long defaultValue) {
        
        java.util.Map<java.lang.Long, java.lang.Long> map =
            internalGetMapSint64Sint64().getMap();
        return map.containsKey(key) ? map.get(key) : defaultValue;
      }
      /**
       * <code>map&lt;sint64, sint64&gt; map_sint64_sint64 = 6;</code>
       */
      @java.lang.Override

      public long getMapSint64Sint64OrThrow(
          long key) {
        
        java.util.Map<java.lang.Long, java.lang.Long> map =
            internalGetMapSint64Sint64().getMap();
        if (!map.containsKey(key)) {
          throw new java.lang.IllegalArgumentException();
        }
        return map.get(key);
      }

      public Builder clearMapSint64Sint64() {
        internalGetMutableMapSint64Sint64().getMutableMap()
            .clear();
        return this;
      }
      /**
       * <code>map&lt;sint64, sint64&gt; map_sint64_sint64 = 6;</code>
       */

      public Builder removeMapSint64Sint64(
          long key) {
        
        internalGetMutableMapSint64Sint64().getMutableMap()
            .remove(key);
        return this;
      }
      /**
       * Use alternate mutation accessors instead.
       */
      @java.lang.Deprecated
      public java.util.Map<java.lang.Long, java.lang.Long>
      getMutableMapSint64Sint64() {
        return internalGetMutableMapSint64Sint64().getMutableMap();
      }
      /**
       * <code>map&lt;sint64, sint64&gt; map_sint64_sint64 = 6;</code>
       */
      public Builder putMapSint64Sint64(
          long key,
          long value) {
        
        
        internalGetMutableMapSint64Sint64().getMutableMap()
            .put(key, value);
        return this;
      }
      /**
       * <code>map&lt;sint64, sint64&gt; map_sint64_sint64 = 6;</code>
       */

      public Builder putAllMapSint64Sint64(
          java.util.Map<java.lang.Long, java.lang.Long> values) {
        internalGetMutableMapSint64Sint64().getMutableMap()
            .putAll(values);
        return this;
      }

      private com.google.protobuf.MapField<
          java.lang.Integer, java.lang.Integer> mapFixed32Fixed32_;
      private com.google.protobuf.MapField<java.lang.Integer, java.lang.Integer>
      internalGetMapFixed32Fixed32() {
        if (mapFixed32Fixed32_ == null) {
          return com.google.protobuf.MapField.emptyMapField(
              MapFixed32Fixed32DefaultEntryHolder.defaultEntry);
        }
        return mapFixed32Fixed32_;
      }
      private com.google.protobuf.MapField<java.lang.Integer, java.lang.Integer>
      internalGetMutableMapFixed32Fixed32() {
        onChanged();;
        if (mapFixed32Fixed32_ == null) {
          mapFixed32Fixed32_ = com.google.protobuf.MapField.newMapField(
              MapFixed32Fixed32DefaultEntryHolder.defaultEntry);
        }
        if (!mapFixed32Fixed32_.isMutable()) {
          mapFixed32Fixed32_ = mapFixed32Fixed32_.copy();
        }
        return mapFixed32Fixed32_;
      }

      public int getMapFixed32Fixed32Count() {
        return internalGetMapFixed32Fixed32().getMap().size();
      }
      /**
       * <code>map&lt;fixed32, fixed32&gt; map_fixed32_fixed32 = 7;</code>
       */

      @java.lang.Override
      public boolean containsMapFixed32Fixed32(
          int key) {
        
        return internalGetMapFixed32Fixed32().getMap().containsKey(key);
      }
      /**
       * Use {@link #getMapFixed32Fixed32Map()} instead.
       */
      @java.lang.Override
      @java.lang.Deprecated
      public java.util.Map<java.lang.Integer, java.lang.Integer> getMapFixed32Fixed32() {
        return getMapFixed32Fixed32Map();
      }
      /**
       * <code>map&lt;fixed32, fixed32&gt; map_fixed32_fixed32 = 7;</code>
       */
      @java.lang.Override

      public java.util.Map<java.lang.Integer, java.lang.Integer> getMapFixed32Fixed32Map() {
        return internalGetMapFixed32Fixed32().getMap();
      }
      /**
       * <code>map&lt;fixed32, fixed32&gt; map_fixed32_fixed32 = 7;</code>
       */
      @java.lang.Override

      public int getMapFixed32Fixed32OrDefault(
          int key,
          int defaultValue) {
        
        java.util.Map<java.lang.Integer, java.lang.Integer> map =
            internalGetMapFixed32Fixed32().getMap();
        return map.containsKey(key) ? map.get(key) : defaultValue;
      }
      /**
       * <code>map&lt;fixed32, fixed32&gt; map_fixed32_fixed32 = 7;</code>
       */
      @java.lang.Override

      public int getMapFixed32Fixed32OrThrow(
          int key) {
        
        java.util.Map<java.lang.Integer, java.lang.Integer> map =
            internalGetMapFixed32Fixed32().getMap();
        if (!map.containsKey(key)) {
          throw new java.lang.IllegalArgumentException();
        }
        return map.get(key);
      }

      public Builder clearMapFixed32Fixed32() {
        internalGetMutableMapFixed32Fixed32().getMutableMap()
            .clear();
        return this;
      }
      /**
       * <code>map&lt;fixed32, fixed32&gt; map_fixed32_fixed32 = 7;</code>
       */

      public Builder removeMapFixed32Fixed32(
          int key) {
        
        internalGetMutableMapFixed32Fixed32().getMutableMap()
            .remove(key);
        return this;
      }
      /**
       * Use alternate mutation accessors instead.
       */
      @java.lang.Deprecated
      public java.util.Map<java.lang.Integer, java.lang.Integer>
      getMutableMapFixed32Fixed32() {
        return internalGetMutableMapFixed32Fixed32().getMutableMap();
      }
      /**
       * <code>map&lt;fixed32, fixed32&gt; map_fixed32_fixed32 = 7;</code>
       */
      public Builder putMapFixed32Fixed32(
          int key,
          int value) {
        
        
        internalGetMutableMapFixed32Fixed32().getMutableMap()
            .put(key, value);
        return this;
      }
      /**
       * <code>map&lt;fixed32, fixed32&gt; map_fixed32_fixed32 = 7;</code>
       */

      public Builder putAllMapFixed32Fixed32(
          java.util.Map<java.lang.Integer, java.lang.Integer> values) {
        internalGetMutableMapFixed32Fixed32().getMutableMap()
            .putAll(values);
        return this;
      }

      private com.google.protobuf.MapField<
          java.lang.Long, java.lang.Long> mapFixed64Fixed64_;
      private com.google.protobuf.MapField<java.lang.Long, java.lang.Long>
      internalGetMapFixed64Fixed64() {
        if (mapFixed64Fixed64_ == null) {
          return com.google.protobuf.MapField.emptyMapField(
              MapFixed64Fixed64DefaultEntryHolder.defaultEntry);
        }
        return mapFixed64Fixed64_;
      }
      private com.google.protobuf.MapField<java.lang.Long, java.lang.Long>
      internalGetMutableMapFixed64Fixed64() {
        onChanged();;
        if (mapFixed64Fixed64_ == null) {
          mapFixed64Fixed64_ = com.google.protobuf.MapField.newMapField(
              MapFixed64Fixed64DefaultEntryHolder.defaultEntry);
        }
        if (!mapFixed64Fixed64_.isMutable()) {
          mapFixed64Fixed64_ = mapFixed64Fixed64_.copy();
        }
        return mapFixed64Fixed64_;
      }

      public int getMapFixed64Fixed64Count() {
        return internalGetMapFixed64Fixed64().getMap().size();
      }
      /**
       * <code>map&lt;fixed64, fixed64&gt; map_fixed64_fixed64 = 8;</code>
       */

      @java.lang.Override
      public boolean containsMapFixed64Fixed64(
          long key) {
        
        return internalGetMapFixed64Fixed64().getMap().containsKey(key);
      }
      /**
       * Use {@link #getMapFixed64Fixed64Map()} instead.
       */
      @java.lang.Override
      @java.lang.Deprecated
      public java.util.Map<java.lang.Long, java.lang.Long> getMapFixed64Fixed64() {
        return getMapFixed64Fixed64Map();
      }
      /**
       * <code>map&lt;fixed64, fixed64&gt; map_fixed64_fixed64 = 8;</code>
       */
      @java.lang.Override

      public java.util.Map<java.lang.Long, java.lang.Long> getMapFixed64Fixed64Map() {
        return internalGetMapFixed64Fixed64().getMap();
      }
      /**
       * <code>map&lt;fixed64, fixed64&gt; map_fixed64_fixed64 = 8;</code>
       */
      @java.lang.Override

      public long getMapFixed64Fixed64OrDefault(
          long key,
          long defaultValue) {
        
        java.util.Map<java.lang.Long, java.lang.Long> map =
            internalGetMapFixed64Fixed64().getMap();
        return map.containsKey(key) ? map.get(key) : defaultValue;
      }
      /**
       * <code>map&lt;fixed64, fixed64&gt; map_fixed64_fixed64 = 8;</code>
       */
      @java.lang.Override

      public long getMapFixed64Fixed64OrThrow(
          long key) {
        
        java.util.Map<java.lang.Long, java.lang.Long> map =
            internalGetMapFixed64Fixed64().getMap();
        if (!map.containsKey(key)) {
          throw new java.lang.IllegalArgumentException();
        }
        return map.get(key);
      }

      public Builder clearMapFixed64Fixed64() {
        internalGetMutableMapFixed64Fixed64().getMutableMap()
            .clear();
        return this;
      }
      /**
       * <code>map&lt;fixed64, fixed64&gt; map_fixed64_fixed64 = 8;</code>
       */

      public Builder removeMapFixed64Fixed64(
          long key) {
        
        internalGetMutableMapFixed64Fixed64().getMutableMap()
            .remove(key);
        return this;
      }
      /**
       * Use alternate mutation accessors instead.
       */
      @java.lang.Deprecated
      public java.util.Map<java.lang.Long, java.lang.Long>
      getMutableMapFixed64Fixed64() {
        return internalGetMutableMapFixed64Fixed64().getMutableMap();
      }
      /**
       * <code>map&lt;fixed64, fixed64&gt; map_fixed64_fixed64 = 8;</code>
       */
      public Builder putMapFixed64Fixed64(
          long key,
          long value) {
        
        
        internalGetMutableMapFixed64Fixed64().getMutableMap()
            .put(key, value);
        return this;
      }
      /**
       * <code>map&lt;fixed64, fixed64&gt; map_fixed64_fixed64 = 8;</code>
       */

      public Builder putAllMapFixed64Fixed64(
          java.util.Map<java.lang.Long, java.lang.Long> values) {
        internalGetMutableMapFixed64Fixed64().getMutableMap()
            .putAll(values);
        return this;
      }

      private com.google.protobuf.MapField<
          java.lang.Integer, java.lang.Integer> mapSfixed32Sfixed32_;
      private com.google.protobuf.MapField<java.lang.Integer, java.lang.Integer>
      internalGetMapSfixed32Sfixed32() {
        if (mapSfixed32Sfixed32_ == null) {
          return com.google.protobuf.MapField.emptyMapField(
              MapSfixed32Sfixed32DefaultEntryHolder.defaultEntry);
        }
        return mapSfixed32Sfixed32_;
      }
      private com.google.protobuf.MapField<java.lang.Integer, java.lang.Integer>
      internalGetMutableMapSfixed32Sfixed32() {
        onChanged();;
        if (mapSfixed32Sfixed32_ == null) {
          mapSfixed32Sfixed32_ = com.google.protobuf.MapField.newMapField(
              MapSfixed32Sfixed32DefaultEntryHolder.defaultEntry);
        }
        if (!mapSfixed32Sfixed32_.isMutable()) {
          mapSfixed32Sfixed32_ = mapSfixed32Sfixed32_.copy();
        }
        return mapSfixed32Sfixed32_;
      }

      public int getMapSfixed32Sfixed32Count() {
        return internalGetMapSfixed32Sfixed32().getMap().size();
      }
      /**
       * <code>map&lt;sfixed32, sfixed32&gt; map_sfixed32_sfixed32 = 9;</code>
       */

      @java.lang.Override
      public boolean containsMapSfixed32Sfixed32(
          int key) {
        
        return internalGetMapSfixed32Sfixed32().getMap().containsKey(key);
      }
      /**
       * Use {@link #getMapSfixed32Sfixed32Map()} instead.
       */
      @java.lang.Override
      @java.lang.Deprecated
      public java.util.Map<java.lang.Integer, java.lang.Integer> getMapSfixed32Sfixed32() {
        return getMapSfixed32Sfixed32Map();
      }
      /**
       * <code>map&lt;sfixed32, sfixed32&gt; map_sfixed32_sfixed32 = 9;</code>
       */
      @java.lang.Override

      public java.util.Map<java.lang.Integer, java.lang.Integer> getMapSfixed32Sfixed32Map() {
        return internalGetMapSfixed32Sfixed32().getMap();
      }
      /**
       * <code>map&lt;sfixed32, sfixed32&gt; map_sfixed32_sfixed32 = 9;</code>
       */
      @java.lang.Override

      public int getMapSfixed32Sfixed32OrDefault(
          int key,
          int defaultValue) {
        
        java.util.Map<java.lang.Integer, java.lang.Integer> map =
            internalGetMapSfixed32Sfixed32().getMap();
        return map.containsKey(key) ? map.get(key) : defaultValue;
      }
      /**
       * <code>map&lt;sfixed32, sfixed32&gt; map_sfixed32_sfixed32 = 9;</code>
       */
      @java.lang.Override

      public int getMapSfixed32Sfixed32OrThrow(
          int key) {
        
        java.util.Map<java.lang.Integer, java.lang.Integer> map =
            internalGetMapSfixed32Sfixed32().getMap();
        if (!map.containsKey(key)) {
          throw new java.lang.IllegalArgumentException();
        }
        return map.get(key);
      }

      public Builder clearMapSfixed32Sfixed32() {
        internalGetMutableMapSfixed32Sfixed32().getMutableMap()
            .clear();
        return this;
      }
      /**
       * <code>map&lt;sfixed32, sfixed32&gt; map_sfixed32_sfixed32 = 9;</code>
       */

      public Builder removeMapSfixed32Sfixed32(
          int key) {
        
        internalGetMutableMapSfixed32Sfixed32().getMutableMap()
            .remove(key);
        return this;
      }
      /**
       * Use alternate mutation accessors instead.
       */
      @java.lang.Deprecated
      public java.util.Map<java.lang.Integer, java.lang.Integer>
      getMutableMapSfixed32Sfixed32() {
        return internalGetMutableMapSfixed32Sfixed32().getMutableMap();
      }
      /**
       * <code>map&lt;sfixed32, sfixed32&gt; map_sfixed32_sfixed32 = 9;</code>
       */
      public Builder putMapSfixed32Sfixed32(
          int key,
          int value) {
        
        
        internalGetMutableMapSfixed32Sfixed32().getMutableMap()
            .put(key, value);
        return this;
      }
      /**
       * <code>map&lt;sfixed32, sfixed32&gt; map_sfixed32_sfixed32 = 9;</code>
       */

      public Builder putAllMapSfixed32Sfixed32(
          java.util.Map<java.lang.Integer, java.lang.Integer> values) {
        internalGetMutableMapSfixed32Sfixed32().getMutableMap()
            .putAll(values);
        return this;
      }

      private com.google.protobuf.MapField<
          java.lang.Long, java.lang.Long> mapSfixed64Sfixed64_;
      private com.google.protobuf.MapField<java.lang.Long, java.lang.Long>
      internalGetMapSfixed64Sfixed64() {
        if (mapSfixed64Sfixed64_ == null) {
          return com.google.protobuf.MapField.emptyMapField(
              MapSfixed64Sfixed64DefaultEntryHolder.defaultEntry);
        }
        return mapSfixed64Sfixed64_;
      }
      private com.google.protobuf.MapField<java.lang.Long, java.lang.Long>
      internalGetMutableMapSfixed64Sfixed64() {
        onChanged();;
        if (mapSfixed64Sfixed64_ == null) {
          mapSfixed64Sfixed64_ = com.google.protobuf.MapField.newMapField(
              MapSfixed64Sfixed64DefaultEntryHolder.defaultEntry);
        }
        if (!mapSfixed64Sfixed64_.isMutable()) {
          mapSfixed64Sfixed64_ = mapSfixed64Sfixed64_.copy();
        }
        return mapSfixed64Sfixed64_;
      }

      public int getMapSfixed64Sfixed64Count() {
        return internalGetMapSfixed64Sfixed64().getMap().size();
      }
      /**
       * <code>map&lt;sfixed64, sfixed64&gt; map_sfixed64_sfixed64 = 10;</code>
       */

      @java.lang.Override
      public boolean containsMapSfixed64Sfixed64(
          long key) {
        
        return internalGetMapSfixed64Sfixed64().getMap().containsKey(key);
      }
      /**
       * Use {@link #getMapSfixed64Sfixed64Map()} instead.
       */
      @java.lang.Override
      @java.lang.Deprecated
      public java.util.Map<java.lang.Long, java.lang.Long> getMapSfixed64Sfixed64() {
        return getMapSfixed64Sfixed64Map();
      }
      /**
       * <code>map&lt;sfixed64, sfixed64&gt; map_sfixed64_sfixed64 = 10;</code>
       */
      @java.lang.Override

      public java.util.Map<java.lang.Long, java.lang.Long> getMapSfixed64Sfixed64Map() {
        return internalGetMapSfixed64Sfixed64().getMap();
      }
      /**
       * <code>map&lt;sfixed64, sfixed64&gt; map_sfixed64_sfixed64 = 10;</code>
       */
      @java.lang.Override

      public long getMapSfixed64Sfixed64OrDefault(
          long key,
          long defaultValue) {
        
        java.util.Map<java.lang.Long, java.lang.Long> map =
            internalGetMapSfixed64Sfixed64().getMap();
        return map.containsKey(key) ? map.get(key) : defaultValue;
      }
      /**
       * <code>map&lt;sfixed64, sfixed64&gt; map_sfixed64_sfixed64 = 10;</code>
       */
      @java.lang.Override

      public long getMapSfixed64Sfixed64OrThrow(
          long key) {
        
        java.util.Map<java.lang.Long, java.lang.Long> map =
            internalGetMapSfixed64Sfixed64().getMap();
        if (!map.containsKey(key)) {
          throw new java.lang.IllegalArgumentException();
        }
        return map.get(key);
      }

      public Builder clearMapSfixed64Sfixed64() {
        internalGetMutableMapSfixed64Sfixed64().getMutableMap()
            .clear();
        return this;
      }
      /**
       * <code>map&lt;sfixed64, sfixed64&gt; map_sfixed64_sfixed64 = 10;</code>
       */

      public Builder removeMapSfixed64Sfixed64(
          long key) {
        
        internalGetMutableMapSfixed64Sfixed64().getMutableMap()
            .remove(key);
        return this;
      }
      /**
       * Use alternate mutation accessors instead.
       */
      @java.lang.Deprecated
      public java.util.Map<java.lang.Long, java.lang.Long>
      getMutableMapSfixed64Sfixed64() {
        return internalGetMutableMapSfixed64Sfixed64().getMutableMap();
      }
      /**
       * <code>map&lt;sfixed64, sfixed64&gt; map_sfixed64_sfixed64 = 10;</code>
       */
      public Builder putMapSfixed64Sfixed64(
          long key,
          long value) {
        
        
        internalGetMutableMapSfixed64Sfixed64().getMutableMap()
            .put(key, value);
        return this;
      }
      /**
       * <code>map&lt;sfixed64, sfixed64&gt; map_sfixed64_sfixed64 = 10;</code>
       */

      public Builder putAllMapSfixed64Sfixed64(
          java.util.Map<java.lang.Long, java.lang.Long> values) {
        internalGetMutableMapSfixed64Sfixed64().getMutableMap()
            .putAll(values);
        return this;
      }

      private com.google.protobuf.MapField<
          java.lang.Integer, java.lang.Float> mapInt32Float_;
      private com.google.protobuf.MapField<java.lang.Integer, java.lang.Float>
      internalGetMapInt32Float() {
        if (mapInt32Float_ == null) {
          return com.google.protobuf.MapField.emptyMapField(
              MapInt32FloatDefaultEntryHolder.defaultEntry);
        }
        return mapInt32Float_;
      }
      private com.google.protobuf.MapField<java.lang.Integer, java.lang.Float>
      internalGetMutableMapInt32Float() {
        onChanged();;
        if (mapInt32Float_ == null) {
          mapInt32Float_ = com.google.protobuf.MapField.newMapField(
              MapInt32FloatDefaultEntryHolder.defaultEntry);
        }
        if (!mapInt32Float_.isMutable()) {
          mapInt32Float_ = mapInt32Float_.copy();
        }
        return mapInt32Float_;
      }

      public int getMapInt32FloatCount() {
        return internalGetMapInt32Float().getMap().size();
      }
      /**
       * <code>map&lt;int32, float&gt; map_int32_float = 11;</code>
       */

      @java.lang.Override
      public boolean containsMapInt32Float(
          int key) {
        
        return internalGetMapInt32Float().getMap().containsKey(key);
      }
      /**
       * Use {@link #getMapInt32FloatMap()} instead.
       */
      @java.lang.Override
      @java.lang.Deprecated
      public java.util.Map<java.lang.Integer, java.lang.Float> getMapInt32Float() {
        return getMapInt32FloatMap();
      }
      /**
       * <code>map&lt;int32, float&gt; map_int32_float = 11;</code>
       */
      @java.lang.Override

      public java.util.Map<java.lang.Integer, java.lang.Float> getMapInt32FloatMap() {
        return internalGetMapInt32Float().getMap();
      }
      /**
       * <code>map&lt;int32, float&gt; map_int32_float = 11;</code>
       */
      @java.lang.Override

      public float getMapInt32FloatOrDefault(
          int key,
          float defaultValue) {
        
        java.util.Map<java.lang.Integer, java.lang.Float> map =
            internalGetMapInt32Float().getMap();
        return map.containsKey(key) ? map.get(key) : defaultValue;
      }
      /**
       * <code>map&lt;int32, float&gt; map_int32_float = 11;</code>
       */
      @java.lang.Override

      public float getMapInt32FloatOrThrow(
          int key) {
        
        java.util.Map<java.lang.Integer, java.lang.Float> map =
            internalGetMapInt32Float().getMap();
        if (!map.containsKey(key)) {
          throw new java.lang.IllegalArgumentException();
        }
        return map.get(key);
      }

      public Builder clearMapInt32Float() {
        internalGetMutableMapInt32Float().getMutableMap()
            .clear();
        return this;
      }
      /**
       * <code>map&lt;int32, float&gt; map_int32_float = 11;</code>
       */

      public Builder removeMapInt32Float(
          int key) {
        
        internalGetMutableMapInt32Float().getMutableMap()
            .remove(key);
        return this;
      }
      /**
       * Use alternate mutation accessors instead.
       */
      @java.lang.Deprecated
      public java.util.Map<java.lang.Integer, java.lang.Float>
      getMutableMapInt32Float() {
        return internalGetMutableMapInt32Float().getMutableMap();
      }
      /**
       * <code>map&lt;int32, float&gt; map_int32_float = 11;</code>
       */
      public Builder putMapInt32Float(
          int key,
          float value) {
        
        
        internalGetMutableMapInt32Float().getMutableMap()
            .put(key, value);
        return this;
      }
      /**
       * <code>map&lt;int32, float&gt; map_int32_float = 11;</code>
       */

      public Builder putAllMapInt32Float(
          java.util.Map<java.lang.Integer, java.lang.Float> values) {
        internalGetMutableMapInt32Float().getMutableMap()
            .putAll(values);
        return this;
      }

      private com.google.protobuf.MapField<
          java.lang.Integer, java.lang.Double> mapInt32Double_;
      private com.google.protobuf.MapField<java.lang.Integer, java.lang.Double>
      internalGetMapInt32Double() {
        if (mapInt32Double_ == null) {
          return com.google.protobuf.MapField.emptyMapField(
              MapInt32DoubleDefaultEntryHolder.defaultEntry);
        }
        return mapInt32Double_;
      }
      private com.google.protobuf.MapField<java.lang.Integer, java.lang.Double>
      internalGetMutableMapInt32Double() {
        onChanged();;
        if (mapInt32Double_ == null) {
          mapInt32Double_ = com.google.protobuf.MapField.newMapField(
              MapInt32DoubleDefaultEntryHolder.defaultEntry);
        }
        if (!mapInt32Double_.isMutable()) {
          mapInt32Double_ = mapInt32Double_.copy();
        }
        return mapInt32Double_;
      }

      public int getMapInt32DoubleCount() {
        return internalGetMapInt32Double().getMap().size();
      }
      /**
       * <code>map&lt;int32, double&gt; map_int32_double = 12;</code>
       */

      @java.lang.Override
      public boolean containsMapInt32Double(
          int key) {
        
        return internalGetMapInt32Double().getMap().containsKey(key);
      }
      /**
       * Use {@link #getMapInt32DoubleMap()} instead.
       */
      @java.lang.Override
      @java.lang.Deprecated
      public java.util.Map<java.lang.Integer, java.lang.Double> getMapInt32Double() {
        return getMapInt32DoubleMap();
      }
      /**
       * <code>map&lt;int32, double&gt; map_int32_double = 12;</code>
       */
      @java.lang.Override

      public java.util.Map<java.lang.Integer, java.lang.Double> getMapInt32DoubleMap() {
        return internalGetMapInt32Double().getMap();
      }
      /**
       * <code>map&lt;int32, double&gt; map_int32_double = 12;</code>
       */
      @java.lang.Override

      public double getMapInt32DoubleOrDefault(
          int key,
          double defaultValue) {
        
        java.util.Map<java.lang.Integer, java.lang.Double> map =
            internalGetMapInt32Double().getMap();
        return map.containsKey(key) ? map.get(key) : defaultValue;
      }
      /**
       * <code>map&lt;int32, double&gt; map_int32_double = 12;</code>
       */
      @java.lang.Override

      public double getMapInt32DoubleOrThrow(
          int key) {
        
        java.util.Map<java.lang.Integer, java.lang.Double> map =
            internalGetMapInt32Double().getMap();
        if (!map.containsKey(key)) {
          throw new java.lang.IllegalArgumentException();
        }
        return map.get(key);
      }

      public Builder clearMapInt32Double() {
        internalGetMutableMapInt32Double().getMutableMap()
            .clear();
        return this;
      }
      /**
       * <code>map&lt;int32, double&gt; map_int32_double = 12;</code>
       */

      public Builder removeMapInt32Double(
          int key) {
        
        internalGetMutableMapInt32Double().getMutableMap()
            .remove(key);
        return this;
      }
      /**
       * Use alternate mutation accessors instead.
       */
      @java.lang.Deprecated
      public java.util.Map<java.lang.Integer, java.lang.Double>
      getMutableMapInt32Double() {
        return internalGetMutableMapInt32Double().getMutableMap();
      }
      /**
       * <code>map&lt;int32, double&gt; map_int32_double = 12;</code>
       */
      public Builder putMapInt32Double(
          int key,
          double value) {
        
        
        internalGetMutableMapInt32Double().getMutableMap()
            .put(key, value);
        return this;
      }
      /**
       * <code>map&lt;int32, double&gt; map_int32_double = 12;</code>
       */

      public Builder putAllMapInt32Double(
          java.util.Map<java.lang.Integer, java.lang.Double> values) {
        internalGetMutableMapInt32Double().getMutableMap()
            .putAll(values);
        return this;
      }

      private com.google.protobuf.MapField<
          java.lang.Boolean, java.lang.Boolean> mapBoolBool_;
      private com.google.protobuf.MapField<java.lang.Boolean, java.lang.Boolean>
      internalGetMapBoolBool() {
        if (mapBoolBool_ == null) {
          return com.google.protobuf.MapField.emptyMapField(
              MapBoolBoolDefaultEntryHolder.defaultEntry);
        }
        return mapBoolBool_;
      }
      private com.google.protobuf.MapField<java.lang.Boolean, java.lang.Boolean>
      internalGetMutableMapBoolBool() {
        onChanged();;
        if (mapBoolBool_ == null) {
          mapBoolBool_ = com.google.protobuf.MapField.newMapField(
              MapBoolBoolDefaultEntryHolder.defaultEntry);
        }
        if (!mapBoolBool_.isMutable()) {
          mapBoolBool_ = mapBoolBool_.copy();
        }
        return mapBoolBool_;
      }

      public int getMapBoolBoolCount() {
        return internalGetMapBoolBool().getMap().size();
      }
      /**
       * <code>map&lt;bool, bool&gt; map_bool_bool = 13;</code>
       */

      @java.lang.Override
      public boolean containsMapBoolBool(
          boolean key) {
        
        return internalGetMapBoolBool().getMap().containsKey(key);
      }
      /**
       * Use {@link #getMapBoolBoolMap()} instead.
       */
      @java.lang.Override
      @java.lang.Deprecated
      public java.util.Map<java.lang.Boolean, java.lang.Boolean> getMapBoolBool() {
        return getMapBoolBoolMap();
      }
      /**
       * <code>map&lt;bool, bool&gt; map_bool_bool = 13;</code>
       */
      @java.lang.Override

      public java.util.Map<java.lang.Boolean, java.lang.Boolean> getMapBoolBoolMap() {
        return internalGetMapBoolBool().getMap();
      }
      /**
       * <code>map&lt;bool, bool&gt; map_bool_bool = 13;</code>
       */
      @java.lang.Override

      public boolean getMapBoolBoolOrDefault(
          boolean key,
          boolean defaultValue) {
        
        java.util.Map<java.lang.Boolean, java.lang.Boolean> map =
            internalGetMapBoolBool().getMap();
        return map.containsKey(key) ? map.get(key) : defaultValue;
      }
      /**
       * <code>map&lt;bool, bool&gt; map_bool_bool = 13;</code>
       */
      @java.lang.Override

      public boolean getMapBoolBoolOrThrow(
          boolean key) {
        
        java.util.Map<java.lang.Boolean, java.lang.Boolean> map =
            internalGetMapBoolBool().getMap();
        if (!map.containsKey(key)) {
          throw new java.lang.IllegalArgumentException();
        }
        return map.get(key);
      }

      public Builder clearMapBoolBool() {
        internalGetMutableMapBoolBool().getMutableMap()
            .clear();
        return this;
      }
      /**
       * <code>map&lt;bool, bool&gt; map_bool_bool = 13;</code>
       */

      public Builder removeMapBoolBool(
          boolean key) {
        
        internalGetMutableMapBoolBool().getMutableMap()
            .remove(key);
        return this;
      }
      /**
       * Use alternate mutation accessors instead.
       */
      @java.lang.Deprecated
      public java.util.Map<java.lang.Boolean, java.lang.Boolean>
      getMutableMapBoolBool() {
        return internalGetMutableMapBoolBool().getMutableMap();
      }
      /**
       * <code>map&lt;bool, bool&gt; map_bool_bool = 13;</code>
       */
      public Builder putMapBoolBool(
          boolean key,
          boolean value) {
        
        
        internalGetMutableMapBoolBool().getMutableMap()
            .put(key, value);
        return this;
      }
      /**
       * <code>map&lt;bool, bool&gt; map_bool_bool = 13;</code>
       */

      public Builder putAllMapBoolBool(
          java.util.Map<java.lang.Boolean, java.lang.Boolean> values) {
        internalGetMutableMapBoolBool().getMutableMap()
            .putAll(values);
        return this;
      }

      private com.google.protobuf.MapField<
          java.lang.String, java.lang.String> mapStringString_;
      private com.google.protobuf.MapField<java.lang.String, java.lang.String>
      internalGetMapStringString() {
        if (mapStringString_ == null) {
          return com.google.protobuf.MapField.emptyMapField(
              MapStringStringDefaultEntryHolder.defaultEntry);
        }
        return mapStringString_;
      }
      private com.google.protobuf.MapField<java.lang.String, java.lang.String>
      internalGetMutableMapStringString() {
        onChanged();;
        if (mapStringString_ == null) {
          mapStringString_ = com.google.protobuf.MapField.newMapField(
              MapStringStringDefaultEntryHolder.defaultEntry);
        }
        if (!mapStringString_.isMutable()) {
          mapStringString_ = mapStringString_.copy();
        }
        return mapStringString_;
      }

      public int getMapStringStringCount() {
        return internalGetMapStringString().getMap().size();
      }
      /**
       * <code>map&lt;string, string&gt; map_string_string = 14;</code>
       */

      @java.lang.Override
      public boolean containsMapStringString(
          java.lang.String key) {
        if (key == null) { throw new NullPointerException("map key"); }
        return internalGetMapStringString().getMap().containsKey(key);
      }
      /**
       * Use {@link #getMapStringStringMap()} instead.
       */
      @java.lang.Override
      @java.lang.Deprecated
      public java.util.Map<java.lang.String, java.lang.String> getMapStringString() {
        return getMapStringStringMap();
      }
      /**
       * <code>map&lt;string, string&gt; map_string_string = 14;</code>
       */
      @java.lang.Override

      public java.util.Map<java.lang.String, java.lang.String> getMapStringStringMap() {
        return internalGetMapStringString().getMap();
      }
      /**
       * <code>map&lt;string, string&gt; map_string_string = 14;</code>
       */
      @java.lang.Override

      public java.lang.String getMapStringStringOrDefault(
          java.lang.String key,
          java.lang.String defaultValue) {
        if (key == null) { throw new NullPointerException("map key"); }
        java.util.Map<java.lang.String, java.lang.String> map =
            internalGetMapStringString().getMap();
        return map.containsKey(key) ? map.get(key) : defaultValue;
      }
      /**
       * <code>map&lt;string, string&gt; map_string_string = 14;</code>
       */
      @java.lang.Override

      public java.lang.String getMapStringStringOrThrow(
          java.lang.String key) {
        if (key == null) { throw new NullPointerException("map key"); }
        java.util.Map<java.lang.String, java.lang.String> map =
            internalGetMapStringString().getMap();
        if (!map.containsKey(key)) {
          throw new java.lang.IllegalArgumentException();
        }
        return map.get(key);
      }

      public Builder clearMapStringString() {
        internalGetMutableMapStringString().getMutableMap()
            .clear();
        return this;
      }
      /**
       * <code>map&lt;string, string&gt; map_string_string = 14;</code>
       */

      public Builder removeMapStringString(
          java.lang.String key) {
        if (key == null) { throw new NullPointerException("map key"); }
        internalGetMutableMapStringString().getMutableMap()
            .remove(key);
        return this;
      }
      /**
       * Use alternate mutation accessors instead.
       */
      @java.lang.Deprecated
      public java.util.Map<java.lang.String, java.lang.String>
      getMutableMapStringString() {
        return internalGetMutableMapStringString().getMutableMap();
      }
      /**
       * <code>map&lt;string, string&gt; map_string_string = 14;</code>
       */
      public Builder putMapStringString(
          java.lang.String key,
          java.lang.String value) {
        if (key == null) { throw new NullPointerException("map key"); }
        if (value == null) {
  throw new NullPointerException("map value");
}

        internalGetMutableMapStringString().getMutableMap()
            .put(key, value);
        return this;
      }
      /**
       * <code>map&lt;string, string&gt; map_string_string = 14;</code>
       */

      public Builder putAllMapStringString(
          java.util.Map<java.lang.String, java.lang.String> values) {
        internalGetMutableMapStringString().getMutableMap()
            .putAll(values);
        return this;
      }

      private com.google.protobuf.MapField<
          java.lang.Integer, com.google.protobuf.ByteString> mapInt32Bytes_;
      private com.google.protobuf.MapField<java.lang.Integer, com.google.protobuf.ByteString>
      internalGetMapInt32Bytes() {
        if (mapInt32Bytes_ == null) {
          return com.google.protobuf.MapField.emptyMapField(
              MapInt32BytesDefaultEntryHolder.defaultEntry);
        }
        return mapInt32Bytes_;
      }
      private com.google.protobuf.MapField<java.lang.Integer, com.google.protobuf.ByteString>
      internalGetMutableMapInt32Bytes() {
        onChanged();;
        if (mapInt32Bytes_ == null) {
          mapInt32Bytes_ = com.google.protobuf.MapField.newMapField(
              MapInt32BytesDefaultEntryHolder.defaultEntry);
        }
        if (!mapInt32Bytes_.isMutable()) {
          mapInt32Bytes_ = mapInt32Bytes_.copy();
        }
        return mapInt32Bytes_;
      }

      public int getMapInt32BytesCount() {
        return internalGetMapInt32Bytes().getMap().size();
      }
      /**
       * <code>map&lt;int32, bytes&gt; map_int32_bytes = 15;</code>
       */

      @java.lang.Override
      public boolean containsMapInt32Bytes(
          int key) {
        
        return internalGetMapInt32Bytes().getMap().containsKey(key);
      }
      /**
       * Use {@link #getMapInt32BytesMap()} instead.
       */
      @java.lang.Override
      @java.lang.Deprecated
      public java.util.Map<java.lang.Integer, com.google.protobuf.ByteString> getMapInt32Bytes() {
        return getMapInt32BytesMap();
      }
      /**
       * <code>map&lt;int32, bytes&gt; map_int32_bytes = 15;</code>
       */
      @java.lang.Override

      public java.util.Map<java.lang.Integer, com.google.protobuf.ByteString> getMapInt32BytesMap() {
        return internalGetMapInt32Bytes().getMap();
      }
      /**
       * <code>map&lt;int32, bytes&gt; map_int32_bytes = 15;</code>
       */
      @java.lang.Override

      public com.google.protobuf.ByteString getMapInt32BytesOrDefault(
          int key,
          com.google.protobuf.ByteString defaultValue) {
        
        java.util.Map<java.lang.Integer, com.google.protobuf.ByteString> map =
            internalGetMapInt32Bytes().getMap();
        return map.containsKey(key) ? map.get(key) : defaultValue;
      }
      /**
       * <code>map&lt;int32, bytes&gt; map_int32_bytes = 15;</code>
       */
      @java.lang.Override

      public com.google.protobuf.ByteString getMapInt32BytesOrThrow(
          int key) {
        
        java.util.Map<java.lang.Integer, com.google.protobuf.ByteString> map =
            internalGetMapInt32Bytes().getMap();
        if (!map.containsKey(key)) {
          throw new java.lang.IllegalArgumentException();
        }
        return map.get(key);
      }

      public Builder clearMapInt32Bytes() {
        internalGetMutableMapInt32Bytes().getMutableMap()
            .clear();
        return this;
      }
      /**
       * <code>map&lt;int32, bytes&gt; map_int32_bytes = 15;</code>
       */

      public Builder removeMapInt32Bytes(
          int key) {
        
        internalGetMutableMapInt32Bytes().getMutableMap()
            .remove(key);
        return this;
      }
      /**
       * Use alternate mutation accessors instead.
       */
      @java.lang.Deprecated
      public java.util.Map<java.lang.Integer, com.google.protobuf.ByteString>
      getMutableMapInt32Bytes() {
        return internalGetMutableMapInt32Bytes().getMutableMap();
      }
      /**
       * <code>map&lt;int32, bytes&gt; map_int32_bytes = 15;</code>
       */
      public Builder putMapInt32Bytes(
          int key,
          com.google.protobuf.ByteString value) {
        
        if (value == null) {
  throw new NullPointerException("map value");
}

        internalGetMutableMapInt32Bytes().getMutableMap()
            .put(key, value);
        return this;
      }
      /**
       * <code>map&lt;int32, bytes&gt; map_int32_bytes = 15;</code>
       */

      public Builder putAllMapInt32Bytes(
          java.util.Map<java.lang.Integer, com.google.protobuf.ByteString> values) {
        internalGetMutableMapInt32Bytes().getMutableMap()
            .putAll(values);
        return this;
      }

      private com.google.protobuf.MapField<
          java.lang.Integer, java.lang.Integer> mapInt32Enum_;
      private com.google.protobuf.MapField<java.lang.Integer, java.lang.Integer>
      internalGetMapInt32Enum() {
        if (mapInt32Enum_ == null) {
          return com.google.protobuf.MapField.emptyMapField(
              MapInt32EnumDefaultEntryHolder.defaultEntry);
        }
        return mapInt32Enum_;
      }
      private com.google.protobuf.MapField<java.lang.Integer, java.lang.Integer>
      internalGetMutableMapInt32Enum() {
        onChanged();;
        if (mapInt32Enum_ == null) {
          mapInt32Enum_ = com.google.protobuf.MapField.newMapField(
              MapInt32EnumDefaultEntryHolder.defaultEntry);
        }
        if (!mapInt32Enum_.isMutable()) {
          mapInt32Enum_ = mapInt32Enum_.copy();
        }
        return mapInt32Enum_;
      }

      public int getMapInt32EnumCount() {
        return internalGetMapInt32Enum().getMap().size();
      }
      /**
       * <code>map&lt;int32, .protobuf_unittest.MapEnum&gt; map_int32_enum = 16;</code>
       */

      @java.lang.Override
      public boolean containsMapInt32Enum(
          int key) {
        
        return internalGetMapInt32Enum().getMap().containsKey(key);
      }
      /**
       * Use {@link #getMapInt32EnumMap()} instead.
       */
      @java.lang.Override
      @java.lang.Deprecated
      public java.util.Map<java.lang.Integer, protobuf_unittest.MapUnittest.MapEnum>
      getMapInt32Enum() {
        return getMapInt32EnumMap();
      }
      /**
       * <code>map&lt;int32, .protobuf_unittest.MapEnum&gt; map_int32_enum = 16;</code>
       */
      @java.lang.Override

      public java.util.Map<java.lang.Integer, protobuf_unittest.MapUnittest.MapEnum>
      getMapInt32EnumMap() {
        return internalGetAdaptedMapInt32EnumMap(
            internalGetMapInt32Enum().getMap());}
      /**
       * <code>map&lt;int32, .protobuf_unittest.MapEnum&gt; map_int32_enum = 16;</code>
       */
      @java.lang.Override

      public /* nullable */
protobuf_unittest.MapUnittest.MapEnum getMapInt32EnumOrDefault(
          int key,
          /* nullable */
protobuf_unittest.MapUnittest.MapEnum defaultValue) {
        
        java.util.Map<java.lang.Integer, java.lang.Integer> map =
            internalGetMapInt32Enum().getMap();
        return map.containsKey(key)
               ? mapInt32EnumValueConverter.doForward(map.get(key))
               : defaultValue;
      }
      /**
       * <code>map&lt;int32, .protobuf_unittest.MapEnum&gt; map_int32_enum = 16;</code>
       */
      @java.lang.Override

      public protobuf_unittest.MapUnittest.MapEnum getMapInt32EnumOrThrow(
          int key) {
        
        java.util.Map<java.lang.Integer, java.lang.Integer> map =
            internalGetMapInt32Enum().getMap();
        if (!map.containsKey(key)) {
          throw new java.lang.IllegalArgumentException();
        }
        return mapInt32EnumValueConverter.doForward(map.get(key));
      }
      /**
       * Use {@link #getMapInt32EnumValueMap()} instead.
       */
      @java.lang.Override
      @java.lang.Deprecated
      public java.util.Map<java.lang.Integer, java.lang.Integer>
      getMapInt32EnumValue() {
        return getMapInt32EnumValueMap();
      }
      /**
       * <code>map&lt;int32, .protobuf_unittest.MapEnum&gt; map_int32_enum = 16;</code>
       */
      @java.lang.Override

      public java.util.Map<java.lang.Integer, java.lang.Integer>
      getMapInt32EnumValueMap() {
        return internalGetMapInt32Enum().getMap();
      }
      /**
       * <code>map&lt;int32, .protobuf_unittest.MapEnum&gt; map_int32_enum = 16;</code>
       */
      @java.lang.Override

      public int getMapInt32EnumValueOrDefault(
          int key,
          int defaultValue) {
        
        java.util.Map<java.lang.Integer, java.lang.Integer> map =
            internalGetMapInt32Enum().getMap();
        return map.containsKey(key) ? map.get(key) : defaultValue;
      }
      /**
       * <code>map&lt;int32, .protobuf_unittest.MapEnum&gt; map_int32_enum = 16;</code>
       */
      @java.lang.Override

      public int getMapInt32EnumValueOrThrow(
          int key) {
        
        java.util.Map<java.lang.Integer, java.lang.Integer> map =
            internalGetMapInt32Enum().getMap();
        if (!map.containsKey(key)) {
          throw new java.lang.IllegalArgumentException();
        }
        return map.get(key);
      }

      public Builder clearMapInt32Enum() {
        internalGetMutableMapInt32Enum().getMutableMap()
            .clear();
        return this;
      }
      /**
       * <code>map&lt;int32, .protobuf_unittest.MapEnum&gt; map_int32_enum = 16;</code>
       */

      public Builder removeMapInt32Enum(
          int key) {
        
        internalGetMutableMapInt32Enum().getMutableMap()
            .remove(key);
        return this;
      }
      /**
       * Use alternate mutation accessors instead.
       */
      @java.lang.Deprecated
      public java.util.Map<java.lang.Integer, protobuf_unittest.MapUnittest.MapEnum>
      getMutableMapInt32Enum() {
        return internalGetAdaptedMapInt32EnumMap(
             internalGetMutableMapInt32Enum().getMutableMap());
      }
      /**
       * <code>map&lt;int32, .protobuf_unittest.MapEnum&gt; map_int32_enum = 16;</code>
       */
      public Builder putMapInt32Enum(
          int key,
          protobuf_unittest.MapUnittest.MapEnum value) {
        
        
        internalGetMutableMapInt32Enum().getMutableMap()
            .put(key, mapInt32EnumValueConverter.doBackward(value));
        return this;
      }
      /**
       * <code>map&lt;int32, .protobuf_unittest.MapEnum&gt; map_int32_enum = 16;</code>
       */
      public Builder putAllMapInt32Enum(
          java.util.Map<java.lang.Integer, protobuf_unittest.MapUnittest.MapEnum> values) {
        internalGetAdaptedMapInt32EnumMap(
            internalGetMutableMapInt32Enum().getMutableMap())
                .putAll(values);
        return this;
      }
      /**
       * Use alternate mutation accessors instead.
       */
      @java.lang.Deprecated
      public java.util.Map<java.lang.Integer, java.lang.Integer>
      getMutableMapInt32EnumValue() {
        return internalGetMutableMapInt32Enum().getMutableMap();
      }
      /**
       * <code>map&lt;int32, .protobuf_unittest.MapEnum&gt; map_int32_enum = 16;</code>
       */
      public Builder putMapInt32EnumValue(
          int key,
          int value) {
        
        
        internalGetMutableMapInt32Enum().getMutableMap()
            .put(key, value);
        return this;
      }
      /**
       * <code>map&lt;int32, .protobuf_unittest.MapEnum&gt; map_int32_enum = 16;</code>
       */
      public Builder putAllMapInt32EnumValue(
          java.util.Map<java.lang.Integer, java.lang.Integer> values) {
        internalGetMutableMapInt32Enum().getMutableMap()
            .putAll(values);
        return this;
      }

      private com.google.protobuf.MapField<
          java.lang.Integer, protobuf_unittest.UnittestProto.ForeignMessage> mapInt32ForeignMessage_;
      private com.google.protobuf.MapField<java.lang.Integer, protobuf_unittest.UnittestProto.ForeignMessage>
      internalGetMapInt32ForeignMessage() {
        if (mapInt32ForeignMessage_ == null) {
          return com.google.protobuf.MapField.emptyMapField(
              MapInt32ForeignMessageDefaultEntryHolder.defaultEntry);
        }
        return mapInt32ForeignMessage_;
      }
      private com.google.protobuf.MapField<java.lang.Integer, protobuf_unittest.UnittestProto.ForeignMessage>
      internalGetMutableMapInt32ForeignMessage() {
        onChanged();;
        if (mapInt32ForeignMessage_ == null) {
          mapInt32ForeignMessage_ = com.google.protobuf.MapField.newMapField(
              MapInt32ForeignMessageDefaultEntryHolder.defaultEntry);
        }
        if (!mapInt32ForeignMessage_.isMutable()) {
          mapInt32ForeignMessage_ = mapInt32ForeignMessage_.copy();
        }
        return mapInt32ForeignMessage_;
      }

      public int getMapInt32ForeignMessageCount() {
        return internalGetMapInt32ForeignMessage().getMap().size();
      }
      /**
       * <code>map&lt;int32, .protobuf_unittest.ForeignMessage&gt; map_int32_foreign_message = 17;</code>
       */

      @java.lang.Override
      public boolean containsMapInt32ForeignMessage(
          int key) {
        
        return internalGetMapInt32ForeignMessage().getMap().containsKey(key);
      }
      /**
       * Use {@link #getMapInt32ForeignMessageMap()} instead.
       */
      @java.lang.Override
      @java.lang.Deprecated
      public java.util.Map<java.lang.Integer, protobuf_unittest.UnittestProto.ForeignMessage> getMapInt32ForeignMessage() {
        return getMapInt32ForeignMessageMap();
      }
      /**
       * <code>map&lt;int32, .protobuf_unittest.ForeignMessage&gt; map_int32_foreign_message = 17;</code>
       */
      @java.lang.Override

      public java.util.Map<java.lang.Integer, protobuf_unittest.UnittestProto.ForeignMessage> getMapInt32ForeignMessageMap() {
        return internalGetMapInt32ForeignMessage().getMap();
      }
      /**
       * <code>map&lt;int32, .protobuf_unittest.ForeignMessage&gt; map_int32_foreign_message = 17;</code>
       */
      @java.lang.Override

      public protobuf_unittest.UnittestProto.ForeignMessage getMapInt32ForeignMessageOrDefault(
          int key,
          protobuf_unittest.UnittestProto.ForeignMessage defaultValue) {
        
        java.util.Map<java.lang.Integer, protobuf_unittest.UnittestProto.ForeignMessage> map =
            internalGetMapInt32ForeignMessage().getMap();
        return map.containsKey(key) ? map.get(key) : defaultValue;
      }
      /**
       * <code>map&lt;int32, .protobuf_unittest.ForeignMessage&gt; map_int32_foreign_message = 17;</code>
       */
      @java.lang.Override

      public protobuf_unittest.UnittestProto.ForeignMessage getMapInt32ForeignMessageOrThrow(
          int key) {
        
        java.util.Map<java.lang.Integer, protobuf_unittest.UnittestProto.ForeignMessage> map =
            internalGetMapInt32ForeignMessage().getMap();
        if (!map.containsKey(key)) {
          throw new java.lang.IllegalArgumentException();
        }
        return map.get(key);
      }

      public Builder clearMapInt32ForeignMessage() {
        internalGetMutableMapInt32ForeignMessage().getMutableMap()
            .clear();
        return this;
      }
      /**
       * <code>map&lt;int32, .protobuf_unittest.ForeignMessage&gt; map_int32_foreign_message = 17;</code>
       */

      public Builder removeMapInt32ForeignMessage(
          int key) {
        
        internalGetMutableMapInt32ForeignMessage().getMutableMap()
            .remove(key);
        return this;
      }
      /**
       * Use alternate mutation accessors instead.
       */
      @java.lang.Deprecated
      public java.util.Map<java.lang.Integer, protobuf_unittest.UnittestProto.ForeignMessage>
      getMutableMapInt32ForeignMessage() {
        return internalGetMutableMapInt32ForeignMessage().getMutableMap();
      }
      /**
       * <code>map&lt;int32, .protobuf_unittest.ForeignMessage&gt; map_int32_foreign_message = 17;</code>
       */
      public Builder putMapInt32ForeignMessage(
          int key,
          protobuf_unittest.UnittestProto.ForeignMessage value) {
        
        if (value == null) {
  throw new NullPointerException("map value");
}

        internalGetMutableMapInt32ForeignMessage().getMutableMap()
            .put(key, value);
        return this;
      }
      /**
       * <code>map&lt;int32, .protobuf_unittest.ForeignMessage&gt; map_int32_foreign_message = 17;</code>
       */

      public Builder putAllMapInt32ForeignMessage(
          java.util.Map<java.lang.Integer, protobuf_unittest.UnittestProto.ForeignMessage> values) {
        internalGetMutableMapInt32ForeignMessage().getMutableMap()
            .putAll(values);
        return this;
      }

      private com.google.protobuf.MapField<
          java.lang.String, protobuf_unittest.UnittestProto.ForeignMessage> mapStringForeignMessage_;
      private com.google.protobuf.MapField<java.lang.String, protobuf_unittest.UnittestProto.ForeignMessage>
      internalGetMapStringForeignMessage() {
        if (mapStringForeignMessage_ == null) {
          return com.google.protobuf.MapField.emptyMapField(
              MapStringForeignMessageDefaultEntryHolder.defaultEntry);
        }
        return mapStringForeignMessage_;
      }
      private com.google.protobuf.MapField<java.lang.String, protobuf_unittest.UnittestProto.ForeignMessage>
      internalGetMutableMapStringForeignMessage() {
        onChanged();;
        if (mapStringForeignMessage_ == null) {
          mapStringForeignMessage_ = com.google.protobuf.MapField.newMapField(
              MapStringForeignMessageDefaultEntryHolder.defaultEntry);
        }
        if (!mapStringForeignMessage_.isMutable()) {
          mapStringForeignMessage_ = mapStringForeignMessage_.copy();
        }
        return mapStringForeignMessage_;
      }

      public int getMapStringForeignMessageCount() {
        return internalGetMapStringForeignMessage().getMap().size();
      }
      /**
       * <code>map&lt;string, .protobuf_unittest.ForeignMessage&gt; map_string_foreign_message = 18;</code>
       */

      @java.lang.Override
      public boolean containsMapStringForeignMessage(
          java.lang.String key) {
        if (key == null) { throw new NullPointerException("map key"); }
        return internalGetMapStringForeignMessage().getMap().containsKey(key);
      }
      /**
       * Use {@link #getMapStringForeignMessageMap()} instead.
       */
      @java.lang.Override
      @java.lang.Deprecated
      public java.util.Map<java.lang.String, protobuf_unittest.UnittestProto.ForeignMessage> getMapStringForeignMessage() {
        return getMapStringForeignMessageMap();
      }
      /**
       * <code>map&lt;string, .protobuf_unittest.ForeignMessage&gt; map_string_foreign_message = 18;</code>
       */
      @java.lang.Override

      public java.util.Map<java.lang.String, protobuf_unittest.UnittestProto.ForeignMessage> getMapStringForeignMessageMap() {
        return internalGetMapStringForeignMessage().getMap();
      }
      /**
       * <code>map&lt;string, .protobuf_unittest.ForeignMessage&gt; map_string_foreign_message = 18;</code>
       */
      @java.lang.Override

      public protobuf_unittest.UnittestProto.ForeignMessage getMapStringForeignMessageOrDefault(
          java.lang.String key,
          protobuf_unittest.UnittestProto.ForeignMessage defaultValue) {
        if (key == null) { throw new NullPointerException("map key"); }
        java.util.Map<java.lang.String, protobuf_unittest.UnittestProto.ForeignMessage> map =
            internalGetMapStringForeignMessage().getMap();
        return map.containsKey(key) ? map.get(key) : defaultValue;
      }
      /**
       * <code>map&lt;string, .protobuf_unittest.ForeignMessage&gt; map_string_foreign_message = 18;</code>
       */
      @java.lang.Override

      public protobuf_unittest.UnittestProto.ForeignMessage getMapStringForeignMessageOrThrow(
          java.lang.String key) {
        if (key == null) { throw new NullPointerException("map key"); }
        java.util.Map<java.lang.String, protobuf_unittest.UnittestProto.ForeignMessage> map =
            internalGetMapStringForeignMessage().getMap();
        if (!map.containsKey(key)) {
          throw new java.lang.IllegalArgumentException();
        }
        return map.get(key);
      }

      public Builder clearMapStringForeignMessage() {
        internalGetMutableMapStringForeignMessage().getMutableMap()
            .clear();
        return this;
      }
      /**
       * <code>map&lt;string, .protobuf_unittest.ForeignMessage&gt; map_string_foreign_message = 18;</code>
       */

      public Builder removeMapStringForeignMessage(
          java.lang.String key) {
        if (key == null) { throw new NullPointerException("map key"); }
        internalGetMutableMapStringForeignMessage().getMutableMap()
            .remove(key);
        return this;
      }
      /**
       * Use alternate mutation accessors instead.
       */
      @java.lang.Deprecated
      public java.util.Map<java.lang.String, protobuf_unittest.UnittestProto.ForeignMessage>
      getMutableMapStringForeignMessage() {
        return internalGetMutableMapStringForeignMessage().getMutableMap();
      }
      /**
       * <code>map&lt;string, .protobuf_unittest.ForeignMessage&gt; map_string_foreign_message = 18;</code>
       */
      public Builder putMapStringForeignMessage(
          java.lang.String key,
          protobuf_unittest.UnittestProto.ForeignMessage value) {
        if (key == null) { throw new NullPointerException("map key"); }
        if (value == null) {
  throw new NullPointerException("map value");
}

        internalGetMutableMapStringForeignMessage().getMutableMap()
            .put(key, value);
        return this;
      }
      /**
       * <code>map&lt;string, .protobuf_unittest.ForeignMessage&gt; map_string_foreign_message = 18;</code>
       */

      public Builder putAllMapStringForeignMessage(
          java.util.Map<java.lang.String, protobuf_unittest.UnittestProto.ForeignMessage> values) {
        internalGetMutableMapStringForeignMessage().getMutableMap()
            .putAll(values);
        return this;
      }

      private com.google.protobuf.MapField<
          java.lang.Integer, protobuf_unittest.UnittestProto.TestAllTypes> mapInt32AllTypes_;
      private com.google.protobuf.MapField<java.lang.Integer, protobuf_unittest.UnittestProto.TestAllTypes>
      internalGetMapInt32AllTypes() {
        if (mapInt32AllTypes_ == null) {
          return com.google.protobuf.MapField.emptyMapField(
              MapInt32AllTypesDefaultEntryHolder.defaultEntry);
        }
        return mapInt32AllTypes_;
      }
      private com.google.protobuf.MapField<java.lang.Integer, protobuf_unittest.UnittestProto.TestAllTypes>
      internalGetMutableMapInt32AllTypes() {
        onChanged();;
        if (mapInt32AllTypes_ == null) {
          mapInt32AllTypes_ = com.google.protobuf.MapField.newMapField(
              MapInt32AllTypesDefaultEntryHolder.defaultEntry);
        }
        if (!mapInt32AllTypes_.isMutable()) {
          mapInt32AllTypes_ = mapInt32AllTypes_.copy();
        }
        return mapInt32AllTypes_;
      }

      public int getMapInt32AllTypesCount() {
        return internalGetMapInt32AllTypes().getMap().size();
      }
      /**
       * <code>map&lt;int32, .protobuf_unittest.TestAllTypes&gt; map_int32_all_types = 19;</code>
       */

      @java.lang.Override
      public boolean containsMapInt32AllTypes(
          int key) {
        
        return internalGetMapInt32AllTypes().getMap().containsKey(key);
      }
      /**
       * Use {@link #getMapInt32AllTypesMap()} instead.
       */
      @java.lang.Override
      @java.lang.Deprecated
      public java.util.Map<java.lang.Integer, protobuf_unittest.UnittestProto.TestAllTypes> getMapInt32AllTypes() {
        return getMapInt32AllTypesMap();
      }
      /**
       * <code>map&lt;int32, .protobuf_unittest.TestAllTypes&gt; map_int32_all_types = 19;</code>
       */
      @java.lang.Override

      public java.util.Map<java.lang.Integer, protobuf_unittest.UnittestProto.TestAllTypes> getMapInt32AllTypesMap() {
        return internalGetMapInt32AllTypes().getMap();
      }
      /**
       * <code>map&lt;int32, .protobuf_unittest.TestAllTypes&gt; map_int32_all_types = 19;</code>
       */
      @java.lang.Override

      public protobuf_unittest.UnittestProto.TestAllTypes getMapInt32AllTypesOrDefault(
          int key,
          protobuf_unittest.UnittestProto.TestAllTypes defaultValue) {
        
        java.util.Map<java.lang.Integer, protobuf_unittest.UnittestProto.TestAllTypes> map =
            internalGetMapInt32AllTypes().getMap();
        return map.containsKey(key) ? map.get(key) : defaultValue;
      }
      /**
       * <code>map&lt;int32, .protobuf_unittest.TestAllTypes&gt; map_int32_all_types = 19;</code>
       */
      @java.lang.Override

      public protobuf_unittest.UnittestProto.TestAllTypes getMapInt32AllTypesOrThrow(
          int key) {
        
        java.util.Map<java.lang.Integer, protobuf_unittest.UnittestProto.TestAllTypes> map =
            internalGetMapInt32AllTypes().getMap();
        if (!map.containsKey(key)) {
          throw new java.lang.IllegalArgumentException();
        }
        return map.get(key);
      }

      public Builder clearMapInt32AllTypes() {
        internalGetMutableMapInt32AllTypes().getMutableMap()
            .clear();
        return this;
      }
      /**
       * <code>map&lt;int32, .protobuf_unittest.TestAllTypes&gt; map_int32_all_types = 19;</code>
       */

      public Builder removeMapInt32AllTypes(
          int key) {
        
        internalGetMutableMapInt32AllTypes().getMutableMap()
            .remove(key);
        return this;
      }
      /**
       * Use alternate mutation accessors instead.
       */
      @java.lang.Deprecated
      public java.util.Map<java.lang.Integer, protobuf_unittest.UnittestProto.TestAllTypes>
      getMutableMapInt32AllTypes() {
        return internalGetMutableMapInt32AllTypes().getMutableMap();
      }
      /**
       * <code>map&lt;int32, .protobuf_unittest.TestAllTypes&gt; map_int32_all_types = 19;</code>
       */
      public Builder putMapInt32AllTypes(
          int key,
          protobuf_unittest.UnittestProto.TestAllTypes value) {
        
        if (value == null) {
  throw new NullPointerException("map value");
}

        internalGetMutableMapInt32AllTypes().getMutableMap()
            .put(key, value);
        return this;
      }
      /**
       * <code>map&lt;int32, .protobuf_unittest.TestAllTypes&gt; map_int32_all_types = 19;</code>
       */

      public Builder putAllMapInt32AllTypes(
          java.util.Map<java.lang.Integer, protobuf_unittest.UnittestProto.TestAllTypes> values) {
        internalGetMutableMapInt32AllTypes().getMutableMap()
            .putAll(values);
        return this;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:protobuf_unittest.TestMap)
    }

    // @@protoc_insertion_point(class_scope:protobuf_unittest.TestMap)
    private static final protobuf_unittest.MapUnittest.TestMap DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new protobuf_unittest.MapUnittest.TestMap();
    }

    public static protobuf_unittest.MapUnittest.TestMap getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<TestMap>
        PARSER = new com.google.protobuf.AbstractParser<TestMap>() {
      @java.lang.Override
      public TestMap parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new TestMap(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<TestMap> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<TestMap> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public protobuf_unittest.MapUnittest.TestMap getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface TestMapSubmessageOrBuilder extends
      // @@protoc_insertion_point(interface_extends:protobuf_unittest.TestMapSubmessage)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>.protobuf_unittest.TestMap test_map = 1;</code>
     * @return Whether the testMap field is set.
     */
    boolean hasTestMap();
    /**
     * <code>.protobuf_unittest.TestMap test_map = 1;</code>
     * @return The testMap.
     */
    protobuf_unittest.MapUnittest.TestMap getTestMap();
    /**
     * <code>.protobuf_unittest.TestMap test_map = 1;</code>
     */
    protobuf_unittest.MapUnittest.TestMapOrBuilder getTestMapOrBuilder();
  }
  /**
   * Protobuf type {@code protobuf_unittest.TestMapSubmessage}
   */
  public static final class TestMapSubmessage extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:protobuf_unittest.TestMapSubmessage)
      TestMapSubmessageOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use TestMapSubmessage.newBuilder() to construct.
    private TestMapSubmessage(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private TestMapSubmessage() {
    }

    @java.lang.Override
    @SuppressWarnings({"unused"})
    protected java.lang.Object newInstance(
        UnusedPrivateParameter unused) {
      return new TestMapSubmessage();
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private TestMapSubmessage(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 10: {
              protobuf_unittest.MapUnittest.TestMap.Builder subBuilder = null;
              if (testMap_ != null) {
                subBuilder = testMap_.toBuilder();
              }
              testMap_ = input.readMessage(protobuf_unittest.MapUnittest.TestMap.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(testMap_);
                testMap_ = subBuilder.buildPartial();
              }

              break;
            }
            default: {
              if (!parseUnknownField(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (com.google.protobuf.UninitializedMessageException e) {
        throw e.asInvalidProtocolBufferException().setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return protobuf_unittest.MapUnittest.internal_static_protobuf_unittest_TestMapSubmessage_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return protobuf_unittest.MapUnittest.internal_static_protobuf_unittest_TestMapSubmessage_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              protobuf_unittest.MapUnittest.TestMapSubmessage.class, protobuf_unittest.MapUnittest.TestMapSubmessage.Builder.class);
    }

    public static final int TEST_MAP_FIELD_NUMBER = 1;
    private protobuf_unittest.MapUnittest.TestMap testMap_;
    /**
     * <code>.protobuf_unittest.TestMap test_map = 1;</code>
     * @return Whether the testMap field is set.
     */
    @java.lang.Override
    public boolean hasTestMap() {
      return testMap_ != null;
    }
    /**
     * <code>.protobuf_unittest.TestMap test_map = 1;</code>
     * @return The testMap.
     */
    @java.lang.Override
    public protobuf_unittest.MapUnittest.TestMap getTestMap() {
      return testMap_ == null ? protobuf_unittest.MapUnittest.TestMap.getDefaultInstance() : testMap_;
    }
    /**
     * <code>.protobuf_unittest.TestMap test_map = 1;</code>
     */
    @java.lang.Override
    public protobuf_unittest.MapUnittest.TestMapOrBuilder getTestMapOrBuilder() {
      return getTestMap();
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (testMap_ != null) {
        output.writeMessage(1, getTestMap());
      }
      unknownFields.writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (testMap_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, getTestMap());
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof protobuf_unittest.MapUnittest.TestMapSubmessage)) {
        return super.equals(obj);
      }
      protobuf_unittest.MapUnittest.TestMapSubmessage other = (protobuf_unittest.MapUnittest.TestMapSubmessage) obj;

      if (hasTestMap() != other.hasTestMap()) return false;
      if (hasTestMap()) {
        if (!getTestMap()
            .equals(other.getTestMap())) return false;
      }
      if (!unknownFields.equals(other.unknownFields)) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      if (hasTestMap()) {
        hash = (37 * hash) + TEST_MAP_FIELD_NUMBER;
        hash = (53 * hash) + getTestMap().hashCode();
      }
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static protobuf_unittest.MapUnittest.TestMapSubmessage parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static protobuf_unittest.MapUnittest.TestMapSubmessage parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static protobuf_unittest.MapUnittest.TestMapSubmessage parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static protobuf_unittest.MapUnittest.TestMapSubmessage parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static protobuf_unittest.MapUnittest.TestMapSubmessage parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static protobuf_unittest.MapUnittest.TestMapSubmessage parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static protobuf_unittest.MapUnittest.TestMapSubmessage parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static protobuf_unittest.MapUnittest.TestMapSubmessage parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static protobuf_unittest.MapUnittest.TestMapSubmessage parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static protobuf_unittest.MapUnittest.TestMapSubmessage parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static protobuf_unittest.MapUnittest.TestMapSubmessage parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static protobuf_unittest.MapUnittest.TestMapSubmessage parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(protobuf_unittest.MapUnittest.TestMapSubmessage prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code protobuf_unittest.TestMapSubmessage}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:protobuf_unittest.TestMapSubmessage)
        protobuf_unittest.MapUnittest.TestMapSubmessageOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return protobuf_unittest.MapUnittest.internal_static_protobuf_unittest_TestMapSubmessage_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return protobuf_unittest.MapUnittest.internal_static_protobuf_unittest_TestMapSubmessage_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                protobuf_unittest.MapUnittest.TestMapSubmessage.class, protobuf_unittest.MapUnittest.TestMapSubmessage.Builder.class);
      }

      // Construct using protobuf_unittest.MapUnittest.TestMapSubmessage.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        if (testMapBuilder_ == null) {
          testMap_ = null;
        } else {
          testMap_ = null;
          testMapBuilder_ = null;
        }
        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return protobuf_unittest.MapUnittest.internal_static_protobuf_unittest_TestMapSubmessage_descriptor;
      }

      @java.lang.Override
      public protobuf_unittest.MapUnittest.TestMapSubmessage getDefaultInstanceForType() {
        return protobuf_unittest.MapUnittest.TestMapSubmessage.getDefaultInstance();
      }

      @java.lang.Override
      public protobuf_unittest.MapUnittest.TestMapSubmessage build() {
        protobuf_unittest.MapUnittest.TestMapSubmessage result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public protobuf_unittest.MapUnittest.TestMapSubmessage buildPartial() {
        protobuf_unittest.MapUnittest.TestMapSubmessage result = new protobuf_unittest.MapUnittest.TestMapSubmessage(this);
        if (testMapBuilder_ == null) {
          result.testMap_ = testMap_;
        } else {
          result.testMap_ = testMapBuilder_.build();
        }
        onBuilt();
        return result;
      }

      @java.lang.Override
      public Builder clone() {
        return super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof protobuf_unittest.MapUnittest.TestMapSubmessage) {
          return mergeFrom((protobuf_unittest.MapUnittest.TestMapSubmessage)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(protobuf_unittest.MapUnittest.TestMapSubmessage other) {
        if (other == protobuf_unittest.MapUnittest.TestMapSubmessage.getDefaultInstance()) return this;
        if (other.hasTestMap()) {
          mergeTestMap(other.getTestMap());
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        protobuf_unittest.MapUnittest.TestMapSubmessage parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (protobuf_unittest.MapUnittest.TestMapSubmessage) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }

      private protobuf_unittest.MapUnittest.TestMap testMap_;
      private com.google.protobuf.SingleFieldBuilderV3<
          protobuf_unittest.MapUnittest.TestMap, protobuf_unittest.MapUnittest.TestMap.Builder, protobuf_unittest.MapUnittest.TestMapOrBuilder> testMapBuilder_;
      /**
       * <code>.protobuf_unittest.TestMap test_map = 1;</code>
       * @return Whether the testMap field is set.
       */
      public boolean hasTestMap() {
        return testMapBuilder_ != null || testMap_ != null;
      }
      /**
       * <code>.protobuf_unittest.TestMap test_map = 1;</code>
       * @return The testMap.
       */
      public protobuf_unittest.MapUnittest.TestMap getTestMap() {
        if (testMapBuilder_ == null) {
          return testMap_ == null ? protobuf_unittest.MapUnittest.TestMap.getDefaultInstance() : testMap_;
        } else {
          return testMapBuilder_.getMessage();
        }
      }
      /**
       * <code>.protobuf_unittest.TestMap test_map = 1;</code>
       */
      public Builder setTestMap(protobuf_unittest.MapUnittest.TestMap value) {
        if (testMapBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          testMap_ = value;
          onChanged();
        } else {
          testMapBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <code>.protobuf_unittest.TestMap test_map = 1;</code>
       */
      public Builder setTestMap(
          protobuf_unittest.MapUnittest.TestMap.Builder builderForValue) {
        if (testMapBuilder_ == null) {
          testMap_ = builderForValue.build();
          onChanged();
        } else {
          testMapBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <code>.protobuf_unittest.TestMap test_map = 1;</code>
       */
      public Builder mergeTestMap(protobuf_unittest.MapUnittest.TestMap value) {
        if (testMapBuilder_ == null) {
          if (testMap_ != null) {
            testMap_ =
              protobuf_unittest.MapUnittest.TestMap.newBuilder(testMap_).mergeFrom(value).buildPartial();
          } else {
            testMap_ = value;
          }
          onChanged();
        } else {
          testMapBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <code>.protobuf_unittest.TestMap test_map = 1;</code>
       */
      public Builder clearTestMap() {
        if (testMapBuilder_ == null) {
          testMap_ = null;
          onChanged();
        } else {
          testMap_ = null;
          testMapBuilder_ = null;
        }

        return this;
      }
      /**
       * <code>.protobuf_unittest.TestMap test_map = 1;</code>
       */
      public protobuf_unittest.MapUnittest.TestMap.Builder getTestMapBuilder() {
        
        onChanged();
        return getTestMapFieldBuilder().getBuilder();
      }
      /**
       * <code>.protobuf_unittest.TestMap test_map = 1;</code>
       */
      public protobuf_unittest.MapUnittest.TestMapOrBuilder getTestMapOrBuilder() {
        if (testMapBuilder_ != null) {
          return testMapBuilder_.getMessageOrBuilder();
        } else {
          return testMap_ == null ?
              protobuf_unittest.MapUnittest.TestMap.getDefaultInstance() : testMap_;
        }
      }
      /**
       * <code>.protobuf_unittest.TestMap test_map = 1;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          protobuf_unittest.MapUnittest.TestMap, protobuf_unittest.MapUnittest.TestMap.Builder, protobuf_unittest.MapUnittest.TestMapOrBuilder> 
          getTestMapFieldBuilder() {
        if (testMapBuilder_ == null) {
          testMapBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              protobuf_unittest.MapUnittest.TestMap, protobuf_unittest.MapUnittest.TestMap.Builder, protobuf_unittest.MapUnittest.TestMapOrBuilder>(
                  getTestMap(),
                  getParentForChildren(),
                  isClean());
          testMap_ = null;
        }
        return testMapBuilder_;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:protobuf_unittest.TestMapSubmessage)
    }

    // @@protoc_insertion_point(class_scope:protobuf_unittest.TestMapSubmessage)
    private static final protobuf_unittest.MapUnittest.TestMapSubmessage DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new protobuf_unittest.MapUnittest.TestMapSubmessage();
    }

    public static protobuf_unittest.MapUnittest.TestMapSubmessage getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<TestMapSubmessage>
        PARSER = new com.google.protobuf.AbstractParser<TestMapSubmessage>() {
      @java.lang.Override
      public TestMapSubmessage parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new TestMapSubmessage(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<TestMapSubmessage> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<TestMapSubmessage> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public protobuf_unittest.MapUnittest.TestMapSubmessage getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface TestMessageMapOrBuilder extends
      // @@protoc_insertion_point(interface_extends:protobuf_unittest.TestMessageMap)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>map&lt;int32, .protobuf_unittest.TestAllTypes&gt; map_int32_message = 1;</code>
     */
    int getMapInt32MessageCount();
    /**
     * <code>map&lt;int32, .protobuf_unittest.TestAllTypes&gt; map_int32_message = 1;</code>
     */
    boolean containsMapInt32Message(
        int key);
    /**
     * Use {@link #getMapInt32MessageMap()} instead.
     */
    @java.lang.Deprecated
    java.util.Map<java.lang.Integer, protobuf_unittest.UnittestProto.TestAllTypes>
    getMapInt32Message();
    /**
     * <code>map&lt;int32, .protobuf_unittest.TestAllTypes&gt; map_int32_message = 1;</code>
     */
    java.util.Map<java.lang.Integer, protobuf_unittest.UnittestProto.TestAllTypes>
    getMapInt32MessageMap();
    /**
     * <code>map&lt;int32, .protobuf_unittest.TestAllTypes&gt; map_int32_message = 1;</code>
     */

    /* nullable */
protobuf_unittest.UnittestProto.TestAllTypes getMapInt32MessageOrDefault(
        int key,
        /* nullable */
protobuf_unittest.UnittestProto.TestAllTypes defaultValue);
    /**
     * <code>map&lt;int32, .protobuf_unittest.TestAllTypes&gt; map_int32_message = 1;</code>
     */

    protobuf_unittest.UnittestProto.TestAllTypes getMapInt32MessageOrThrow(
        int key);
  }
  /**
   * Protobuf type {@code protobuf_unittest.TestMessageMap}
   */
  public static final class TestMessageMap extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:protobuf_unittest.TestMessageMap)
      TestMessageMapOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use TestMessageMap.newBuilder() to construct.
    private TestMessageMap(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private TestMessageMap() {
    }

    @java.lang.Override
    @SuppressWarnings({"unused"})
    protected java.lang.Object newInstance(
        UnusedPrivateParameter unused) {
      return new TestMessageMap();
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private TestMessageMap(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 10: {
              if (!((mutable_bitField0_ & 0x00000001) != 0)) {
                mapInt32Message_ = com.google.protobuf.MapField.newMapField(
                    MapInt32MessageDefaultEntryHolder.defaultEntry);
                mutable_bitField0_ |= 0x00000001;
              }
              com.google.protobuf.MapEntry<java.lang.Integer, protobuf_unittest.UnittestProto.TestAllTypes>
              mapInt32Message__ = input.readMessage(
                  MapInt32MessageDefaultEntryHolder.defaultEntry.getParserForType(), extensionRegistry);
              mapInt32Message_.getMutableMap().put(
                  mapInt32Message__.getKey(), mapInt32Message__.getValue());
              break;
            }
            default: {
              if (!parseUnknownField(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (com.google.protobuf.UninitializedMessageException e) {
        throw e.asInvalidProtocolBufferException().setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return protobuf_unittest.MapUnittest.internal_static_protobuf_unittest_TestMessageMap_descriptor;
    }

    @SuppressWarnings({"rawtypes"})
    @java.lang.Override
    protected com.google.protobuf.MapField internalGetMapField(
        int number) {
      switch (number) {
        case 1:
          return internalGetMapInt32Message();
        default:
          throw new RuntimeException(
              "Invalid map field number: " + number);
      }
    }
    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return protobuf_unittest.MapUnittest.internal_static_protobuf_unittest_TestMessageMap_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              protobuf_unittest.MapUnittest.TestMessageMap.class, protobuf_unittest.MapUnittest.TestMessageMap.Builder.class);
    }

    public static final int MAP_INT32_MESSAGE_FIELD_NUMBER = 1;
    private static final class MapInt32MessageDefaultEntryHolder {
      static final com.google.protobuf.MapEntry<
          java.lang.Integer, protobuf_unittest.UnittestProto.TestAllTypes> defaultEntry =
              com.google.protobuf.MapEntry
              .<java.lang.Integer, protobuf_unittest.UnittestProto.TestAllTypes>newDefaultInstance(
                  protobuf_unittest.MapUnittest.internal_static_protobuf_unittest_TestMessageMap_MapInt32MessageEntry_descriptor, 
                  com.google.protobuf.WireFormat.FieldType.INT32,
                  0,
                  com.google.protobuf.WireFormat.FieldType.MESSAGE,
                  protobuf_unittest.UnittestProto.TestAllTypes.getDefaultInstance());
    }
    private com.google.protobuf.MapField<
        java.lang.Integer, protobuf_unittest.UnittestProto.TestAllTypes> mapInt32Message_;
    private com.google.protobuf.MapField<java.lang.Integer, protobuf_unittest.UnittestProto.TestAllTypes>
    internalGetMapInt32Message() {
      if (mapInt32Message_ == null) {
        return com.google.protobuf.MapField.emptyMapField(
            MapInt32MessageDefaultEntryHolder.defaultEntry);
      }
      return mapInt32Message_;
    }

    public int getMapInt32MessageCount() {
      return internalGetMapInt32Message().getMap().size();
    }
    /**
     * <code>map&lt;int32, .protobuf_unittest.TestAllTypes&gt; map_int32_message = 1;</code>
     */

    @java.lang.Override
    public boolean containsMapInt32Message(
        int key) {
      
      return internalGetMapInt32Message().getMap().containsKey(key);
    }
    /**
     * Use {@link #getMapInt32MessageMap()} instead.
     */
    @java.lang.Override
    @java.lang.Deprecated
    public java.util.Map<java.lang.Integer, protobuf_unittest.UnittestProto.TestAllTypes> getMapInt32Message() {
      return getMapInt32MessageMap();
    }
    /**
     * <code>map&lt;int32, .protobuf_unittest.TestAllTypes&gt; map_int32_message = 1;</code>
     */
    @java.lang.Override

    public java.util.Map<java.lang.Integer, protobuf_unittest.UnittestProto.TestAllTypes> getMapInt32MessageMap() {
      return internalGetMapInt32Message().getMap();
    }
    /**
     * <code>map&lt;int32, .protobuf_unittest.TestAllTypes&gt; map_int32_message = 1;</code>
     */
    @java.lang.Override

    public protobuf_unittest.UnittestProto.TestAllTypes getMapInt32MessageOrDefault(
        int key,
        protobuf_unittest.UnittestProto.TestAllTypes defaultValue) {
      
      java.util.Map<java.lang.Integer, protobuf_unittest.UnittestProto.TestAllTypes> map =
          internalGetMapInt32Message().getMap();
      return map.containsKey(key) ? map.get(key) : defaultValue;
    }
    /**
     * <code>map&lt;int32, .protobuf_unittest.TestAllTypes&gt; map_int32_message = 1;</code>
     */
    @java.lang.Override

    public protobuf_unittest.UnittestProto.TestAllTypes getMapInt32MessageOrThrow(
        int key) {
      
      java.util.Map<java.lang.Integer, protobuf_unittest.UnittestProto.TestAllTypes> map =
          internalGetMapInt32Message().getMap();
      if (!map.containsKey(key)) {
        throw new java.lang.IllegalArgumentException();
      }
      return map.get(key);
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      com.google.protobuf.GeneratedMessageV3
        .serializeIntegerMapTo(
          output,
          internalGetMapInt32Message(),
          MapInt32MessageDefaultEntryHolder.defaultEntry,
          1);
      unknownFields.writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      for (java.util.Map.Entry<java.lang.Integer, protobuf_unittest.UnittestProto.TestAllTypes> entry
           : internalGetMapInt32Message().getMap().entrySet()) {
        com.google.protobuf.MapEntry<java.lang.Integer, protobuf_unittest.UnittestProto.TestAllTypes>
        mapInt32Message__ = MapInt32MessageDefaultEntryHolder.defaultEntry.newBuilderForType()
            .setKey(entry.getKey())
            .setValue(entry.getValue())
            .build();
        size += com.google.protobuf.CodedOutputStream
            .computeMessageSize(1, mapInt32Message__);
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof protobuf_unittest.MapUnittest.TestMessageMap)) {
        return super.equals(obj);
      }
      protobuf_unittest.MapUnittest.TestMessageMap other = (protobuf_unittest.MapUnittest.TestMessageMap) obj;

      if (!internalGetMapInt32Message().equals(
          other.internalGetMapInt32Message())) return false;
      if (!unknownFields.equals(other.unknownFields)) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      if (!internalGetMapInt32Message().getMap().isEmpty()) {
        hash = (37 * hash) + MAP_INT32_MESSAGE_FIELD_NUMBER;
        hash = (53 * hash) + internalGetMapInt32Message().hashCode();
      }
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static protobuf_unittest.MapUnittest.TestMessageMap parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static protobuf_unittest.MapUnittest.TestMessageMap parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static protobuf_unittest.MapUnittest.TestMessageMap parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static protobuf_unittest.MapUnittest.TestMessageMap parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static protobuf_unittest.MapUnittest.TestMessageMap parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static protobuf_unittest.MapUnittest.TestMessageMap parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static protobuf_unittest.MapUnittest.TestMessageMap parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static protobuf_unittest.MapUnittest.TestMessageMap parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static protobuf_unittest.MapUnittest.TestMessageMap parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static protobuf_unittest.MapUnittest.TestMessageMap parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static protobuf_unittest.MapUnittest.TestMessageMap parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static protobuf_unittest.MapUnittest.TestMessageMap parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(protobuf_unittest.MapUnittest.TestMessageMap prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code protobuf_unittest.TestMessageMap}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:protobuf_unittest.TestMessageMap)
        protobuf_unittest.MapUnittest.TestMessageMapOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return protobuf_unittest.MapUnittest.internal_static_protobuf_unittest_TestMessageMap_descriptor;
      }

      @SuppressWarnings({"rawtypes"})
      protected com.google.protobuf.MapField internalGetMapField(
          int number) {
        switch (number) {
          case 1:
            return internalGetMapInt32Message();
          default:
            throw new RuntimeException(
                "Invalid map field number: " + number);
        }
      }
      @SuppressWarnings({"rawtypes"})
      protected com.google.protobuf.MapField internalGetMutableMapField(
          int number) {
        switch (number) {
          case 1:
            return internalGetMutableMapInt32Message();
          default:
            throw new RuntimeException(
                "Invalid map field number: " + number);
        }
      }
      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return protobuf_unittest.MapUnittest.internal_static_protobuf_unittest_TestMessageMap_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                protobuf_unittest.MapUnittest.TestMessageMap.class, protobuf_unittest.MapUnittest.TestMessageMap.Builder.class);
      }

      // Construct using protobuf_unittest.MapUnittest.TestMessageMap.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        internalGetMutableMapInt32Message().clear();
        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return protobuf_unittest.MapUnittest.internal_static_protobuf_unittest_TestMessageMap_descriptor;
      }

      @java.lang.Override
      public protobuf_unittest.MapUnittest.TestMessageMap getDefaultInstanceForType() {
        return protobuf_unittest.MapUnittest.TestMessageMap.getDefaultInstance();
      }

      @java.lang.Override
      public protobuf_unittest.MapUnittest.TestMessageMap build() {
        protobuf_unittest.MapUnittest.TestMessageMap result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public protobuf_unittest.MapUnittest.TestMessageMap buildPartial() {
        protobuf_unittest.MapUnittest.TestMessageMap result = new protobuf_unittest.MapUnittest.TestMessageMap(this);
        int from_bitField0_ = bitField0_;
        result.mapInt32Message_ = internalGetMapInt32Message();
        result.mapInt32Message_.makeImmutable();
        onBuilt();
        return result;
      }

      @java.lang.Override
      public Builder clone() {
        return super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof protobuf_unittest.MapUnittest.TestMessageMap) {
          return mergeFrom((protobuf_unittest.MapUnittest.TestMessageMap)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(protobuf_unittest.MapUnittest.TestMessageMap other) {
        if (other == protobuf_unittest.MapUnittest.TestMessageMap.getDefaultInstance()) return this;
        internalGetMutableMapInt32Message().mergeFrom(
            other.internalGetMapInt32Message());
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        protobuf_unittest.MapUnittest.TestMessageMap parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (protobuf_unittest.MapUnittest.TestMessageMap) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private com.google.protobuf.MapField<
          java.lang.Integer, protobuf_unittest.UnittestProto.TestAllTypes> mapInt32Message_;
      private com.google.protobuf.MapField<java.lang.Integer, protobuf_unittest.UnittestProto.TestAllTypes>
      internalGetMapInt32Message() {
        if (mapInt32Message_ == null) {
          return com.google.protobuf.MapField.emptyMapField(
              MapInt32MessageDefaultEntryHolder.defaultEntry);
        }
        return mapInt32Message_;
      }
      private com.google.protobuf.MapField<java.lang.Integer, protobuf_unittest.UnittestProto.TestAllTypes>
      internalGetMutableMapInt32Message() {
        onChanged();;
        if (mapInt32Message_ == null) {
          mapInt32Message_ = com.google.protobuf.MapField.newMapField(
              MapInt32MessageDefaultEntryHolder.defaultEntry);
        }
        if (!mapInt32Message_.isMutable()) {
          mapInt32Message_ = mapInt32Message_.copy();
        }
        return mapInt32Message_;
      }

      public int getMapInt32MessageCount() {
        return internalGetMapInt32Message().getMap().size();
      }
      /**
       * <code>map&lt;int32, .protobuf_unittest.TestAllTypes&gt; map_int32_message = 1;</code>
       */

      @java.lang.Override
      public boolean containsMapInt32Message(
          int key) {
        
        return internalGetMapInt32Message().getMap().containsKey(key);
      }
      /**
       * Use {@link #getMapInt32MessageMap()} instead.
       */
      @java.lang.Override
      @java.lang.Deprecated
      public java.util.Map<java.lang.Integer, protobuf_unittest.UnittestProto.TestAllTypes> getMapInt32Message() {
        return getMapInt32MessageMap();
      }
      /**
       * <code>map&lt;int32, .protobuf_unittest.TestAllTypes&gt; map_int32_message = 1;</code>
       */
      @java.lang.Override

      public java.util.Map<java.lang.Integer, protobuf_unittest.UnittestProto.TestAllTypes> getMapInt32MessageMap() {
        return internalGetMapInt32Message().getMap();
      }
      /**
       * <code>map&lt;int32, .protobuf_unittest.TestAllTypes&gt; map_int32_message = 1;</code>
       */
      @java.lang.Override

      public protobuf_unittest.UnittestProto.TestAllTypes getMapInt32MessageOrDefault(
          int key,
          protobuf_unittest.UnittestProto.TestAllTypes defaultValue) {
        
        java.util.Map<java.lang.Integer, protobuf_unittest.UnittestProto.TestAllTypes> map =
            internalGetMapInt32Message().getMap();
        return map.containsKey(key) ? map.get(key) : defaultValue;
      }
      /**
       * <code>map&lt;int32, .protobuf_unittest.TestAllTypes&gt; map_int32_message = 1;</code>
       */
      @java.lang.Override

      public protobuf_unittest.UnittestProto.TestAllTypes getMapInt32MessageOrThrow(
          int key) {
        
        java.util.Map<java.lang.Integer, protobuf_unittest.UnittestProto.TestAllTypes> map =
            internalGetMapInt32Message().getMap();
        if (!map.containsKey(key)) {
          throw new java.lang.IllegalArgumentException();
        }
        return map.get(key);
      }

      public Builder clearMapInt32Message() {
        internalGetMutableMapInt32Message().getMutableMap()
            .clear();
        return this;
      }
      /**
       * <code>map&lt;int32, .protobuf_unittest.TestAllTypes&gt; map_int32_message = 1;</code>
       */

      public Builder removeMapInt32Message(
          int key) {
        
        internalGetMutableMapInt32Message().getMutableMap()
            .remove(key);
        return this;
      }
      /**
       * Use alternate mutation accessors instead.
       */
      @java.lang.Deprecated
      public java.util.Map<java.lang.Integer, protobuf_unittest.UnittestProto.TestAllTypes>
      getMutableMapInt32Message() {
        return internalGetMutableMapInt32Message().getMutableMap();
      }
      /**
       * <code>map&lt;int32, .protobuf_unittest.TestAllTypes&gt; map_int32_message = 1;</code>
       */
      public Builder putMapInt32Message(
          int key,
          protobuf_unittest.UnittestProto.TestAllTypes value) {
        
        if (value == null) {
  throw new NullPointerException("map value");
}

        internalGetMutableMapInt32Message().getMutableMap()
            .put(key, value);
        return this;
      }
      /**
       * <code>map&lt;int32, .protobuf_unittest.TestAllTypes&gt; map_int32_message = 1;</code>
       */

      public Builder putAllMapInt32Message(
          java.util.Map<java.lang.Integer, protobuf_unittest.UnittestProto.TestAllTypes> values) {
        internalGetMutableMapInt32Message().getMutableMap()
            .putAll(values);
        return this;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:protobuf_unittest.TestMessageMap)
    }

    // @@protoc_insertion_point(class_scope:protobuf_unittest.TestMessageMap)
    private static final protobuf_unittest.MapUnittest.TestMessageMap DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new protobuf_unittest.MapUnittest.TestMessageMap();
    }

    public static protobuf_unittest.MapUnittest.TestMessageMap getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<TestMessageMap>
        PARSER = new com.google.protobuf.AbstractParser<TestMessageMap>() {
      @java.lang.Override
      public TestMessageMap parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new TestMessageMap(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<TestMessageMap> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<TestMessageMap> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public protobuf_unittest.MapUnittest.TestMessageMap getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface TestSameTypeMapOrBuilder extends
      // @@protoc_insertion_point(interface_extends:protobuf_unittest.TestSameTypeMap)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>map&lt;int32, int32&gt; map1 = 1;</code>
     */
    int getMap1Count();
    /**
     * <code>map&lt;int32, int32&gt; map1 = 1;</code>
     */
    boolean containsMap1(
        int key);
    /**
     * Use {@link #getMap1Map()} instead.
     */
    @java.lang.Deprecated
    java.util.Map<java.lang.Integer, java.lang.Integer>
    getMap1();
    /**
     * <code>map&lt;int32, int32&gt; map1 = 1;</code>
     */
    java.util.Map<java.lang.Integer, java.lang.Integer>
    getMap1Map();
    /**
     * <code>map&lt;int32, int32&gt; map1 = 1;</code>
     */

    int getMap1OrDefault(
        int key,
        int defaultValue);
    /**
     * <code>map&lt;int32, int32&gt; map1 = 1;</code>
     */

    int getMap1OrThrow(
        int key);

    /**
     * <code>map&lt;int32, int32&gt; map2 = 2;</code>
     */
    int getMap2Count();
    /**
     * <code>map&lt;int32, int32&gt; map2 = 2;</code>
     */
    boolean containsMap2(
        int key);
    /**
     * Use {@link #getMap2Map()} instead.
     */
    @java.lang.Deprecated
    java.util.Map<java.lang.Integer, java.lang.Integer>
    getMap2();
    /**
     * <code>map&lt;int32, int32&gt; map2 = 2;</code>
     */
    java.util.Map<java.lang.Integer, java.lang.Integer>
    getMap2Map();
    /**
     * <code>map&lt;int32, int32&gt; map2 = 2;</code>
     */

    int getMap2OrDefault(
        int key,
        int defaultValue);
    /**
     * <code>map&lt;int32, int32&gt; map2 = 2;</code>
     */

    int getMap2OrThrow(
        int key);
  }
  /**
   * <pre>
   * Two map fields share the same entry default instance.
   * </pre>
   *
   * Protobuf type {@code protobuf_unittest.TestSameTypeMap}
   */
  public static final class TestSameTypeMap extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:protobuf_unittest.TestSameTypeMap)
      TestSameTypeMapOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use TestSameTypeMap.newBuilder() to construct.
    private TestSameTypeMap(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private TestSameTypeMap() {
    }

    @java.lang.Override
    @SuppressWarnings({"unused"})
    protected java.lang.Object newInstance(
        UnusedPrivateParameter unused) {
      return new TestSameTypeMap();
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private TestSameTypeMap(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 10: {
              if (!((mutable_bitField0_ & 0x00000001) != 0)) {
                map1_ = com.google.protobuf.MapField.newMapField(
                    Map1DefaultEntryHolder.defaultEntry);
                mutable_bitField0_ |= 0x00000001;
              }
              com.google.protobuf.MapEntry<java.lang.Integer, java.lang.Integer>
              map1__ = input.readMessage(
                  Map1DefaultEntryHolder.defaultEntry.getParserForType(), extensionRegistry);
              map1_.getMutableMap().put(
                  map1__.getKey(), map1__.getValue());
              break;
            }
            case 18: {
              if (!((mutable_bitField0_ & 0x00000002) != 0)) {
                map2_ = com.google.protobuf.MapField.newMapField(
                    Map2DefaultEntryHolder.defaultEntry);
                mutable_bitField0_ |= 0x00000002;
              }
              com.google.protobuf.MapEntry<java.lang.Integer, java.lang.Integer>
              map2__ = input.readMessage(
                  Map2DefaultEntryHolder.defaultEntry.getParserForType(), extensionRegistry);
              map2_.getMutableMap().put(
                  map2__.getKey(), map2__.getValue());
              break;
            }
            default: {
              if (!parseUnknownField(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (com.google.protobuf.UninitializedMessageException e) {
        throw e.asInvalidProtocolBufferException().setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return protobuf_unittest.MapUnittest.internal_static_protobuf_unittest_TestSameTypeMap_descriptor;
    }

    @SuppressWarnings({"rawtypes"})
    @java.lang.Override
    protected com.google.protobuf.MapField internalGetMapField(
        int number) {
      switch (number) {
        case 1:
          return internalGetMap1();
        case 2:
          return internalGetMap2();
        default:
          throw new RuntimeException(
              "Invalid map field number: " + number);
      }
    }
    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return protobuf_unittest.MapUnittest.internal_static_protobuf_unittest_TestSameTypeMap_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              protobuf_unittest.MapUnittest.TestSameTypeMap.class, protobuf_unittest.MapUnittest.TestSameTypeMap.Builder.class);
    }

    public static final int MAP1_FIELD_NUMBER = 1;
    private static final class Map1DefaultEntryHolder {
      static final com.google.protobuf.MapEntry<
          java.lang.Integer, java.lang.Integer> defaultEntry =
              com.google.protobuf.MapEntry
              .<java.lang.Integer, java.lang.Integer>newDefaultInstance(
                  protobuf_unittest.MapUnittest.internal_static_protobuf_unittest_TestSameTypeMap_Map1Entry_descriptor, 
                  com.google.protobuf.WireFormat.FieldType.INT32,
                  0,
                  com.google.protobuf.WireFormat.FieldType.INT32,
                  0);
    }
    private com.google.protobuf.MapField<
        java.lang.Integer, java.lang.Integer> map1_;
    private com.google.protobuf.MapField<java.lang.Integer, java.lang.Integer>
    internalGetMap1() {
      if (map1_ == null) {
        return com.google.protobuf.MapField.emptyMapField(
            Map1DefaultEntryHolder.defaultEntry);
      }
      return map1_;
    }

    public int getMap1Count() {
      return internalGetMap1().getMap().size();
    }
    /**
     * <code>map&lt;int32, int32&gt; map1 = 1;</code>
     */

    @java.lang.Override
    public boolean containsMap1(
        int key) {
      
      return internalGetMap1().getMap().containsKey(key);
    }
    /**
     * Use {@link #getMap1Map()} instead.
     */
    @java.lang.Override
    @java.lang.Deprecated
    public java.util.Map<java.lang.Integer, java.lang.Integer> getMap1() {
      return getMap1Map();
    }
    /**
     * <code>map&lt;int32, int32&gt; map1 = 1;</code>
     */
    @java.lang.Override

    public java.util.Map<java.lang.Integer, java.lang.Integer> getMap1Map() {
      return internalGetMap1().getMap();
    }
    /**
     * <code>map&lt;int32, int32&gt; map1 = 1;</code>
     */
    @java.lang.Override

    public int getMap1OrDefault(
        int key,
        int defaultValue) {
      
      java.util.Map<java.lang.Integer, java.lang.Integer> map =
          internalGetMap1().getMap();
      return map.containsKey(key) ? map.get(key) : defaultValue;
    }
    /**
     * <code>map&lt;int32, int32&gt; map1 = 1;</code>
     */
    @java.lang.Override

    public int getMap1OrThrow(
        int key) {
      
      java.util.Map<java.lang.Integer, java.lang.Integer> map =
          internalGetMap1().getMap();
      if (!map.containsKey(key)) {
        throw new java.lang.IllegalArgumentException();
      }
      return map.get(key);
    }

    public static final int MAP2_FIELD_NUMBER = 2;
    private static final class Map2DefaultEntryHolder {
      static final com.google.protobuf.MapEntry<
          java.lang.Integer, java.lang.Integer> defaultEntry =
              com.google.protobuf.MapEntry
              .<java.lang.Integer, java.lang.Integer>newDefaultInstance(
                  protobuf_unittest.MapUnittest.internal_static_protobuf_unittest_TestSameTypeMap_Map2Entry_descriptor, 
                  com.google.protobuf.WireFormat.FieldType.INT32,
                  0,
                  com.google.protobuf.WireFormat.FieldType.INT32,
                  0);
    }
    private com.google.protobuf.MapField<
        java.lang.Integer, java.lang.Integer> map2_;
    private com.google.protobuf.MapField<java.lang.Integer, java.lang.Integer>
    internalGetMap2() {
      if (map2_ == null) {
        return com.google.protobuf.MapField.emptyMapField(
            Map2DefaultEntryHolder.defaultEntry);
      }
      return map2_;
    }

    public int getMap2Count() {
      return internalGetMap2().getMap().size();
    }
    /**
     * <code>map&lt;int32, int32&gt; map2 = 2;</code>
     */

    @java.lang.Override
    public boolean containsMap2(
        int key) {
      
      return internalGetMap2().getMap().containsKey(key);
    }
    /**
     * Use {@link #getMap2Map()} instead.
     */
    @java.lang.Override
    @java.lang.Deprecated
    public java.util.Map<java.lang.Integer, java.lang.Integer> getMap2() {
      return getMap2Map();
    }
    /**
     * <code>map&lt;int32, int32&gt; map2 = 2;</code>
     */
    @java.lang.Override

    public java.util.Map<java.lang.Integer, java.lang.Integer> getMap2Map() {
      return internalGetMap2().getMap();
    }
    /**
     * <code>map&lt;int32, int32&gt; map2 = 2;</code>
     */
    @java.lang.Override

    public int getMap2OrDefault(
        int key,
        int defaultValue) {
      
      java.util.Map<java.lang.Integer, java.lang.Integer> map =
          internalGetMap2().getMap();
      return map.containsKey(key) ? map.get(key) : defaultValue;
    }
    /**
     * <code>map&lt;int32, int32&gt; map2 = 2;</code>
     */
    @java.lang.Override

    public int getMap2OrThrow(
        int key) {
      
      java.util.Map<java.lang.Integer, java.lang.Integer> map =
          internalGetMap2().getMap();
      if (!map.containsKey(key)) {
        throw new java.lang.IllegalArgumentException();
      }
      return map.get(key);
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      com.google.protobuf.GeneratedMessageV3
        .serializeIntegerMapTo(
          output,
          internalGetMap1(),
          Map1DefaultEntryHolder.defaultEntry,
          1);
      com.google.protobuf.GeneratedMessageV3
        .serializeIntegerMapTo(
          output,
          internalGetMap2(),
          Map2DefaultEntryHolder.defaultEntry,
          2);
      unknownFields.writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      for (java.util.Map.Entry<java.lang.Integer, java.lang.Integer> entry
           : internalGetMap1().getMap().entrySet()) {
        com.google.protobuf.MapEntry<java.lang.Integer, java.lang.Integer>
        map1__ = Map1DefaultEntryHolder.defaultEntry.newBuilderForType()
            .setKey(entry.getKey())
            .setValue(entry.getValue())
            .build();
        size += com.google.protobuf.CodedOutputStream
            .computeMessageSize(1, map1__);
      }
      for (java.util.Map.Entry<java.lang.Integer, java.lang.Integer> entry
           : internalGetMap2().getMap().entrySet()) {
        com.google.protobuf.MapEntry<java.lang.Integer, java.lang.Integer>
        map2__ = Map2DefaultEntryHolder.defaultEntry.newBuilderForType()
            .setKey(entry.getKey())
            .setValue(entry.getValue())
            .build();
        size += com.google.protobuf.CodedOutputStream
            .computeMessageSize(2, map2__);
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof protobuf_unittest.MapUnittest.TestSameTypeMap)) {
        return super.equals(obj);
      }
      protobuf_unittest.MapUnittest.TestSameTypeMap other = (protobuf_unittest.MapUnittest.TestSameTypeMap) obj;

      if (!internalGetMap1().equals(
          other.internalGetMap1())) return false;
      if (!internalGetMap2().equals(
          other.internalGetMap2())) return false;
      if (!unknownFields.equals(other.unknownFields)) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      if (!internalGetMap1().getMap().isEmpty()) {
        hash = (37 * hash) + MAP1_FIELD_NUMBER;
        hash = (53 * hash) + internalGetMap1().hashCode();
      }
      if (!internalGetMap2().getMap().isEmpty()) {
        hash = (37 * hash) + MAP2_FIELD_NUMBER;
        hash = (53 * hash) + internalGetMap2().hashCode();
      }
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static protobuf_unittest.MapUnittest.TestSameTypeMap parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static protobuf_unittest.MapUnittest.TestSameTypeMap parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static protobuf_unittest.MapUnittest.TestSameTypeMap parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static protobuf_unittest.MapUnittest.TestSameTypeMap parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static protobuf_unittest.MapUnittest.TestSameTypeMap parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static protobuf_unittest.MapUnittest.TestSameTypeMap parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static protobuf_unittest.MapUnittest.TestSameTypeMap parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static protobuf_unittest.MapUnittest.TestSameTypeMap parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static protobuf_unittest.MapUnittest.TestSameTypeMap parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static protobuf_unittest.MapUnittest.TestSameTypeMap parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static protobuf_unittest.MapUnittest.TestSameTypeMap parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static protobuf_unittest.MapUnittest.TestSameTypeMap parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(protobuf_unittest.MapUnittest.TestSameTypeMap prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * <pre>
     * Two map fields share the same entry default instance.
     * </pre>
     *
     * Protobuf type {@code protobuf_unittest.TestSameTypeMap}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:protobuf_unittest.TestSameTypeMap)
        protobuf_unittest.MapUnittest.TestSameTypeMapOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return protobuf_unittest.MapUnittest.internal_static_protobuf_unittest_TestSameTypeMap_descriptor;
      }

      @SuppressWarnings({"rawtypes"})
      protected com.google.protobuf.MapField internalGetMapField(
          int number) {
        switch (number) {
          case 1:
            return internalGetMap1();
          case 2:
            return internalGetMap2();
          default:
            throw new RuntimeException(
                "Invalid map field number: " + number);
        }
      }
      @SuppressWarnings({"rawtypes"})
      protected com.google.protobuf.MapField internalGetMutableMapField(
          int number) {
        switch (number) {
          case 1:
            return internalGetMutableMap1();
          case 2:
            return internalGetMutableMap2();
          default:
            throw new RuntimeException(
                "Invalid map field number: " + number);
        }
      }
      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return protobuf_unittest.MapUnittest.internal_static_protobuf_unittest_TestSameTypeMap_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                protobuf_unittest.MapUnittest.TestSameTypeMap.class, protobuf_unittest.MapUnittest.TestSameTypeMap.Builder.class);
      }

      // Construct using protobuf_unittest.MapUnittest.TestSameTypeMap.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        internalGetMutableMap1().clear();
        internalGetMutableMap2().clear();
        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return protobuf_unittest.MapUnittest.internal_static_protobuf_unittest_TestSameTypeMap_descriptor;
      }

      @java.lang.Override
      public protobuf_unittest.MapUnittest.TestSameTypeMap getDefaultInstanceForType() {
        return protobuf_unittest.MapUnittest.TestSameTypeMap.getDefaultInstance();
      }

      @java.lang.Override
      public protobuf_unittest.MapUnittest.TestSameTypeMap build() {
        protobuf_unittest.MapUnittest.TestSameTypeMap result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public protobuf_unittest.MapUnittest.TestSameTypeMap buildPartial() {
        protobuf_unittest.MapUnittest.TestSameTypeMap result = new protobuf_unittest.MapUnittest.TestSameTypeMap(this);
        int from_bitField0_ = bitField0_;
        result.map1_ = internalGetMap1();
        result.map1_.makeImmutable();
        result.map2_ = internalGetMap2();
        result.map2_.makeImmutable();
        onBuilt();
        return result;
      }

      @java.lang.Override
      public Builder clone() {
        return super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof protobuf_unittest.MapUnittest.TestSameTypeMap) {
          return mergeFrom((protobuf_unittest.MapUnittest.TestSameTypeMap)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(protobuf_unittest.MapUnittest.TestSameTypeMap other) {
        if (other == protobuf_unittest.MapUnittest.TestSameTypeMap.getDefaultInstance()) return this;
        internalGetMutableMap1().mergeFrom(
            other.internalGetMap1());
        internalGetMutableMap2().mergeFrom(
            other.internalGetMap2());
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        protobuf_unittest.MapUnittest.TestSameTypeMap parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (protobuf_unittest.MapUnittest.TestSameTypeMap) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private com.google.protobuf.MapField<
          java.lang.Integer, java.lang.Integer> map1_;
      private com.google.protobuf.MapField<java.lang.Integer, java.lang.Integer>
      internalGetMap1() {
        if (map1_ == null) {
          return com.google.protobuf.MapField.emptyMapField(
              Map1DefaultEntryHolder.defaultEntry);
        }
        return map1_;
      }
      private com.google.protobuf.MapField<java.lang.Integer, java.lang.Integer>
      internalGetMutableMap1() {
        onChanged();;
        if (map1_ == null) {
          map1_ = com.google.protobuf.MapField.newMapField(
              Map1DefaultEntryHolder.defaultEntry);
        }
        if (!map1_.isMutable()) {
          map1_ = map1_.copy();
        }
        return map1_;
      }

      public int getMap1Count() {
        return internalGetMap1().getMap().size();
      }
      /**
       * <code>map&lt;int32, int32&gt; map1 = 1;</code>
       */

      @java.lang.Override
      public boolean containsMap1(
          int key) {
        
        return internalGetMap1().getMap().containsKey(key);
      }
      /**
       * Use {@link #getMap1Map()} instead.
       */
      @java.lang.Override
      @java.lang.Deprecated
      public java.util.Map<java.lang.Integer, java.lang.Integer> getMap1() {
        return getMap1Map();
      }
      /**
       * <code>map&lt;int32, int32&gt; map1 = 1;</code>
       */
      @java.lang.Override

      public java.util.Map<java.lang.Integer, java.lang.Integer> getMap1Map() {
        return internalGetMap1().getMap();
      }
      /**
       * <code>map&lt;int32, int32&gt; map1 = 1;</code>
       */
      @java.lang.Override

      public int getMap1OrDefault(
          int key,
          int defaultValue) {
        
        java.util.Map<java.lang.Integer, java.lang.Integer> map =
            internalGetMap1().getMap();
        return map.containsKey(key) ? map.get(key) : defaultValue;
      }
      /**
       * <code>map&lt;int32, int32&gt; map1 = 1;</code>
       */
      @java.lang.Override

      public int getMap1OrThrow(
          int key) {
        
        java.util.Map<java.lang.Integer, java.lang.Integer> map =
            internalGetMap1().getMap();
        if (!map.containsKey(key)) {
          throw new java.lang.IllegalArgumentException();
        }
        return map.get(key);
      }

      public Builder clearMap1() {
        internalGetMutableMap1().getMutableMap()
            .clear();
        return this;
      }
      /**
       * <code>map&lt;int32, int32&gt; map1 = 1;</code>
       */

      public Builder removeMap1(
          int key) {
        
        internalGetMutableMap1().getMutableMap()
            .remove(key);
        return this;
      }
      /**
       * Use alternate mutation accessors instead.
       */
      @java.lang.Deprecated
      public java.util.Map<java.lang.Integer, java.lang.Integer>
      getMutableMap1() {
        return internalGetMutableMap1().getMutableMap();
      }
      /**
       * <code>map&lt;int32, int32&gt; map1 = 1;</code>
       */
      public Builder putMap1(
          int key,
          int value) {
        
        
        internalGetMutableMap1().getMutableMap()
            .put(key, value);
        return this;
      }
      /**
       * <code>map&lt;int32, int32&gt; map1 = 1;</code>
       */

      public Builder putAllMap1(
          java.util.Map<java.lang.Integer, java.lang.Integer> values) {
        internalGetMutableMap1().getMutableMap()
            .putAll(values);
        return this;
      }

      private com.google.protobuf.MapField<
          java.lang.Integer, java.lang.Integer> map2_;
      private com.google.protobuf.MapField<java.lang.Integer, java.lang.Integer>
      internalGetMap2() {
        if (map2_ == null) {
          return com.google.protobuf.MapField.emptyMapField(
              Map2DefaultEntryHolder.defaultEntry);
        }
        return map2_;
      }
      private com.google.protobuf.MapField<java.lang.Integer, java.lang.Integer>
      internalGetMutableMap2() {
        onChanged();;
        if (map2_ == null) {
          map2_ = com.google.protobuf.MapField.newMapField(
              Map2DefaultEntryHolder.defaultEntry);
        }
        if (!map2_.isMutable()) {
          map2_ = map2_.copy();
        }
        return map2_;
      }

      public int getMap2Count() {
        return internalGetMap2().getMap().size();
      }
      /**
       * <code>map&lt;int32, int32&gt; map2 = 2;</code>
       */

      @java.lang.Override
      public boolean containsMap2(
          int key) {
        
        return internalGetMap2().getMap().containsKey(key);
      }
      /**
       * Use {@link #getMap2Map()} instead.
       */
      @java.lang.Override
      @java.lang.Deprecated
      public java.util.Map<java.lang.Integer, java.lang.Integer> getMap2() {
        return getMap2Map();
      }
      /**
       * <code>map&lt;int32, int32&gt; map2 = 2;</code>
       */
      @java.lang.Override

      public java.util.Map<java.lang.Integer, java.lang.Integer> getMap2Map() {
        return internalGetMap2().getMap();
      }
      /**
       * <code>map&lt;int32, int32&gt; map2 = 2;</code>
       */
      @java.lang.Override

      public int getMap2OrDefault(
          int key,
          int defaultValue) {
        
        java.util.Map<java.lang.Integer, java.lang.Integer> map =
            internalGetMap2().getMap();
        return map.containsKey(key) ? map.get(key) : defaultValue;
      }
      /**
       * <code>map&lt;int32, int32&gt; map2 = 2;</code>
       */
      @java.lang.Override

      public int getMap2OrThrow(
          int key) {
        
        java.util.Map<java.lang.Integer, java.lang.Integer> map =
            internalGetMap2().getMap();
        if (!map.containsKey(key)) {
          throw new java.lang.IllegalArgumentException();
        }
        return map.get(key);
      }

      public Builder clearMap2() {
        internalGetMutableMap2().getMutableMap()
            .clear();
        return this;
      }
      /**
       * <code>map&lt;int32, int32&gt; map2 = 2;</code>
       */

      public Builder removeMap2(
          int key) {
        
        internalGetMutableMap2().getMutableMap()
            .remove(key);
        return this;
      }
      /**
       * Use alternate mutation accessors instead.
       */
      @java.lang.Deprecated
      public java.util.Map<java.lang.Integer, java.lang.Integer>
      getMutableMap2() {
        return internalGetMutableMap2().getMutableMap();
      }
      /**
       * <code>map&lt;int32, int32&gt; map2 = 2;</code>
       */
      public Builder putMap2(
          int key,
          int value) {
        
        
        internalGetMutableMap2().getMutableMap()
            .put(key, value);
        return this;
      }
      /**
       * <code>map&lt;int32, int32&gt; map2 = 2;</code>
       */

      public Builder putAllMap2(
          java.util.Map<java.lang.Integer, java.lang.Integer> values) {
        internalGetMutableMap2().getMutableMap()
            .putAll(values);
        return this;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:protobuf_unittest.TestSameTypeMap)
    }

    // @@protoc_insertion_point(class_scope:protobuf_unittest.TestSameTypeMap)
    private static final protobuf_unittest.MapUnittest.TestSameTypeMap DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new protobuf_unittest.MapUnittest.TestSameTypeMap();
    }

    public static protobuf_unittest.MapUnittest.TestSameTypeMap getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<TestSameTypeMap>
        PARSER = new com.google.protobuf.AbstractParser<TestSameTypeMap>() {
      @java.lang.Override
      public TestSameTypeMap parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new TestSameTypeMap(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<TestSameTypeMap> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<TestSameTypeMap> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public protobuf_unittest.MapUnittest.TestSameTypeMap getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface TestRequiredMessageMapOrBuilder extends
      // @@protoc_insertion_point(interface_extends:protobuf_unittest.TestRequiredMessageMap)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>map&lt;int32, .protobuf_unittest.TestRequired&gt; map_field = 1;</code>
     */
    int getMapFieldCount();
    /**
     * <code>map&lt;int32, .protobuf_unittest.TestRequired&gt; map_field = 1;</code>
     */
    boolean containsMapField(
        int key);
    /**
     * Use {@link #getMapFieldMap()} instead.
     */
    @java.lang.Deprecated
    java.util.Map<java.lang.Integer, protobuf_unittest.UnittestProto.TestRequired>
    getMapField();
    /**
     * <code>map&lt;int32, .protobuf_unittest.TestRequired&gt; map_field = 1;</code>
     */
    java.util.Map<java.lang.Integer, protobuf_unittest.UnittestProto.TestRequired>
    getMapFieldMap();
    /**
     * <code>map&lt;int32, .protobuf_unittest.TestRequired&gt; map_field = 1;</code>
     */

    /* nullable */
protobuf_unittest.UnittestProto.TestRequired getMapFieldOrDefault(
        int key,
        /* nullable */
protobuf_unittest.UnittestProto.TestRequired defaultValue);
    /**
     * <code>map&lt;int32, .protobuf_unittest.TestRequired&gt; map_field = 1;</code>
     */

    protobuf_unittest.UnittestProto.TestRequired getMapFieldOrThrow(
        int key);
  }
  /**
   * <pre>
   * Test embedded message with required fields
   * </pre>
   *
   * Protobuf type {@code protobuf_unittest.TestRequiredMessageMap}
   */
  public static final class TestRequiredMessageMap extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:protobuf_unittest.TestRequiredMessageMap)
      TestRequiredMessageMapOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use TestRequiredMessageMap.newBuilder() to construct.
    private TestRequiredMessageMap(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private TestRequiredMessageMap() {
    }

    @java.lang.Override
    @SuppressWarnings({"unused"})
    protected java.lang.Object newInstance(
        UnusedPrivateParameter unused) {
      return new TestRequiredMessageMap();
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private TestRequiredMessageMap(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 10: {
              if (!((mutable_bitField0_ & 0x00000001) != 0)) {
                mapField_ = com.google.protobuf.MapField.newMapField(
                    MapFieldDefaultEntryHolder.defaultEntry);
                mutable_bitField0_ |= 0x00000001;
              }
              com.google.protobuf.MapEntry<java.lang.Integer, protobuf_unittest.UnittestProto.TestRequired>
              mapField__ = input.readMessage(
                  MapFieldDefaultEntryHolder.defaultEntry.getParserForType(), extensionRegistry);
              mapField_.getMutableMap().put(
                  mapField__.getKey(), mapField__.getValue());
              break;
            }
            default: {
              if (!parseUnknownField(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (com.google.protobuf.UninitializedMessageException e) {
        throw e.asInvalidProtocolBufferException().setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return protobuf_unittest.MapUnittest.internal_static_protobuf_unittest_TestRequiredMessageMap_descriptor;
    }

    @SuppressWarnings({"rawtypes"})
    @java.lang.Override
    protected com.google.protobuf.MapField internalGetMapField(
        int number) {
      switch (number) {
        case 1:
          return internalGetMapField();
        default:
          throw new RuntimeException(
              "Invalid map field number: " + number);
      }
    }
    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return protobuf_unittest.MapUnittest.internal_static_protobuf_unittest_TestRequiredMessageMap_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              protobuf_unittest.MapUnittest.TestRequiredMessageMap.class, protobuf_unittest.MapUnittest.TestRequiredMessageMap.Builder.class);
    }

    public static final int MAP_FIELD_FIELD_NUMBER = 1;
    private static final class MapFieldDefaultEntryHolder {
      static final com.google.protobuf.MapEntry<
          java.lang.Integer, protobuf_unittest.UnittestProto.TestRequired> defaultEntry =
              com.google.protobuf.MapEntry
              .<java.lang.Integer, protobuf_unittest.UnittestProto.TestRequired>newDefaultInstance(
                  protobuf_unittest.MapUnittest.internal_static_protobuf_unittest_TestRequiredMessageMap_MapFieldEntry_descriptor, 
                  com.google.protobuf.WireFormat.FieldType.INT32,
                  0,
                  com.google.protobuf.WireFormat.FieldType.MESSAGE,
                  protobuf_unittest.UnittestProto.TestRequired.getDefaultInstance());
    }
    private com.google.protobuf.MapField<
        java.lang.Integer, protobuf_unittest.UnittestProto.TestRequired> mapField_;
    private com.google.protobuf.MapField<java.lang.Integer, protobuf_unittest.UnittestProto.TestRequired>
    internalGetMapField() {
      if (mapField_ == null) {
        return com.google.protobuf.MapField.emptyMapField(
            MapFieldDefaultEntryHolder.defaultEntry);
      }
      return mapField_;
    }

    public int getMapFieldCount() {
      return internalGetMapField().getMap().size();
    }
    /**
     * <code>map&lt;int32, .protobuf_unittest.TestRequired&gt; map_field = 1;</code>
     */

    @java.lang.Override
    public boolean containsMapField(
        int key) {
      
      return internalGetMapField().getMap().containsKey(key);
    }
    /**
     * Use {@link #getMapFieldMap()} instead.
     */
    @java.lang.Override
    @java.lang.Deprecated
    public java.util.Map<java.lang.Integer, protobuf_unittest.UnittestProto.TestRequired> getMapField() {
      return getMapFieldMap();
    }
    /**
     * <code>map&lt;int32, .protobuf_unittest.TestRequired&gt; map_field = 1;</code>
     */
    @java.lang.Override

    public java.util.Map<java.lang.Integer, protobuf_unittest.UnittestProto.TestRequired> getMapFieldMap() {
      return internalGetMapField().getMap();
    }
    /**
     * <code>map&lt;int32, .protobuf_unittest.TestRequired&gt; map_field = 1;</code>
     */
    @java.lang.Override

    public protobuf_unittest.UnittestProto.TestRequired getMapFieldOrDefault(
        int key,
        protobuf_unittest.UnittestProto.TestRequired defaultValue) {
      
      java.util.Map<java.lang.Integer, protobuf_unittest.UnittestProto.TestRequired> map =
          internalGetMapField().getMap();
      return map.containsKey(key) ? map.get(key) : defaultValue;
    }
    /**
     * <code>map&lt;int32, .protobuf_unittest.TestRequired&gt; map_field = 1;</code>
     */
    @java.lang.Override

    public protobuf_unittest.UnittestProto.TestRequired getMapFieldOrThrow(
        int key) {
      
      java.util.Map<java.lang.Integer, protobuf_unittest.UnittestProto.TestRequired> map =
          internalGetMapField().getMap();
      if (!map.containsKey(key)) {
        throw new java.lang.IllegalArgumentException();
      }
      return map.get(key);
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      for (protobuf_unittest.UnittestProto.TestRequired item : getMapFieldMap().values()) {
        if (!item.isInitialized()) {
          memoizedIsInitialized = 0;
          return false;
        }
      }
      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      com.google.protobuf.GeneratedMessageV3
        .serializeIntegerMapTo(
          output,
          internalGetMapField(),
          MapFieldDefaultEntryHolder.defaultEntry,
          1);
      unknownFields.writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      for (java.util.Map.Entry<java.lang.Integer, protobuf_unittest.UnittestProto.TestRequired> entry
           : internalGetMapField().getMap().entrySet()) {
        com.google.protobuf.MapEntry<java.lang.Integer, protobuf_unittest.UnittestProto.TestRequired>
        mapField__ = MapFieldDefaultEntryHolder.defaultEntry.newBuilderForType()
            .setKey(entry.getKey())
            .setValue(entry.getValue())
            .build();
        size += com.google.protobuf.CodedOutputStream
            .computeMessageSize(1, mapField__);
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof protobuf_unittest.MapUnittest.TestRequiredMessageMap)) {
        return super.equals(obj);
      }
      protobuf_unittest.MapUnittest.TestRequiredMessageMap other = (protobuf_unittest.MapUnittest.TestRequiredMessageMap) obj;

      if (!internalGetMapField().equals(
          other.internalGetMapField())) return false;
      if (!unknownFields.equals(other.unknownFields)) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      if (!internalGetMapField().getMap().isEmpty()) {
        hash = (37 * hash) + MAP_FIELD_FIELD_NUMBER;
        hash = (53 * hash) + internalGetMapField().hashCode();
      }
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static protobuf_unittest.MapUnittest.TestRequiredMessageMap parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static protobuf_unittest.MapUnittest.TestRequiredMessageMap parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static protobuf_unittest.MapUnittest.TestRequiredMessageMap parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static protobuf_unittest.MapUnittest.TestRequiredMessageMap parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static protobuf_unittest.MapUnittest.TestRequiredMessageMap parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static protobuf_unittest.MapUnittest.TestRequiredMessageMap parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static protobuf_unittest.MapUnittest.TestRequiredMessageMap parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static protobuf_unittest.MapUnittest.TestRequiredMessageMap parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static protobuf_unittest.MapUnittest.TestRequiredMessageMap parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static protobuf_unittest.MapUnittest.TestRequiredMessageMap parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static protobuf_unittest.MapUnittest.TestRequiredMessageMap parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static protobuf_unittest.MapUnittest.TestRequiredMessageMap parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(protobuf_unittest.MapUnittest.TestRequiredMessageMap prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * <pre>
     * Test embedded message with required fields
     * </pre>
     *
     * Protobuf type {@code protobuf_unittest.TestRequiredMessageMap}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:protobuf_unittest.TestRequiredMessageMap)
        protobuf_unittest.MapUnittest.TestRequiredMessageMapOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return protobuf_unittest.MapUnittest.internal_static_protobuf_unittest_TestRequiredMessageMap_descriptor;
      }

      @SuppressWarnings({"rawtypes"})
      protected com.google.protobuf.MapField internalGetMapField(
          int number) {
        switch (number) {
          case 1:
            return internalGetMapField();
          default:
            throw new RuntimeException(
                "Invalid map field number: " + number);
        }
      }
      @SuppressWarnings({"rawtypes"})
      protected com.google.protobuf.MapField internalGetMutableMapField(
          int number) {
        switch (number) {
          case 1:
            return internalGetMutableMapField();
          default:
            throw new RuntimeException(
                "Invalid map field number: " + number);
        }
      }
      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return protobuf_unittest.MapUnittest.internal_static_protobuf_unittest_TestRequiredMessageMap_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                protobuf_unittest.MapUnittest.TestRequiredMessageMap.class, protobuf_unittest.MapUnittest.TestRequiredMessageMap.Builder.class);
      }

      // Construct using protobuf_unittest.MapUnittest.TestRequiredMessageMap.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        internalGetMutableMapField().clear();
        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return protobuf_unittest.MapUnittest.internal_static_protobuf_unittest_TestRequiredMessageMap_descriptor;
      }

      @java.lang.Override
      public protobuf_unittest.MapUnittest.TestRequiredMessageMap getDefaultInstanceForType() {
        return protobuf_unittest.MapUnittest.TestRequiredMessageMap.getDefaultInstance();
      }

      @java.lang.Override
      public protobuf_unittest.MapUnittest.TestRequiredMessageMap build() {
        protobuf_unittest.MapUnittest.TestRequiredMessageMap result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public protobuf_unittest.MapUnittest.TestRequiredMessageMap buildPartial() {
        protobuf_unittest.MapUnittest.TestRequiredMessageMap result = new protobuf_unittest.MapUnittest.TestRequiredMessageMap(this);
        int from_bitField0_ = bitField0_;
        result.mapField_ = internalGetMapField();
        result.mapField_.makeImmutable();
        onBuilt();
        return result;
      }

      @java.lang.Override
      public Builder clone() {
        return super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof protobuf_unittest.MapUnittest.TestRequiredMessageMap) {
          return mergeFrom((protobuf_unittest.MapUnittest.TestRequiredMessageMap)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(protobuf_unittest.MapUnittest.TestRequiredMessageMap other) {
        if (other == protobuf_unittest.MapUnittest.TestRequiredMessageMap.getDefaultInstance()) return this;
        internalGetMutableMapField().mergeFrom(
            other.internalGetMapField());
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        for (protobuf_unittest.UnittestProto.TestRequired item : getMapFieldMap().values()) {
          if (!item.isInitialized()) {
            return false;
          }
        }
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        protobuf_unittest.MapUnittest.TestRequiredMessageMap parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (protobuf_unittest.MapUnittest.TestRequiredMessageMap) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private com.google.protobuf.MapField<
          java.lang.Integer, protobuf_unittest.UnittestProto.TestRequired> mapField_;
      private com.google.protobuf.MapField<java.lang.Integer, protobuf_unittest.UnittestProto.TestRequired>
      internalGetMapField() {
        if (mapField_ == null) {
          return com.google.protobuf.MapField.emptyMapField(
              MapFieldDefaultEntryHolder.defaultEntry);
        }
        return mapField_;
      }
      private com.google.protobuf.MapField<java.lang.Integer, protobuf_unittest.UnittestProto.TestRequired>
      internalGetMutableMapField() {
        onChanged();;
        if (mapField_ == null) {
          mapField_ = com.google.protobuf.MapField.newMapField(
              MapFieldDefaultEntryHolder.defaultEntry);
        }
        if (!mapField_.isMutable()) {
          mapField_ = mapField_.copy();
        }
        return mapField_;
      }

      public int getMapFieldCount() {
        return internalGetMapField().getMap().size();
      }
      /**
       * <code>map&lt;int32, .protobuf_unittest.TestRequired&gt; map_field = 1;</code>
       */

      @java.lang.Override
      public boolean containsMapField(
          int key) {
        
        return internalGetMapField().getMap().containsKey(key);
      }
      /**
       * Use {@link #getMapFieldMap()} instead.
       */
      @java.lang.Override
      @java.lang.Deprecated
      public java.util.Map<java.lang.Integer, protobuf_unittest.UnittestProto.TestRequired> getMapField() {
        return getMapFieldMap();
      }
      /**
       * <code>map&lt;int32, .protobuf_unittest.TestRequired&gt; map_field = 1;</code>
       */
      @java.lang.Override

      public java.util.Map<java.lang.Integer, protobuf_unittest.UnittestProto.TestRequired> getMapFieldMap() {
        return internalGetMapField().getMap();
      }
      /**
       * <code>map&lt;int32, .protobuf_unittest.TestRequired&gt; map_field = 1;</code>
       */
      @java.lang.Override

      public protobuf_unittest.UnittestProto.TestRequired getMapFieldOrDefault(
          int key,
          protobuf_unittest.UnittestProto.TestRequired defaultValue) {
        
        java.util.Map<java.lang.Integer, protobuf_unittest.UnittestProto.TestRequired> map =
            internalGetMapField().getMap();
        return map.containsKey(key) ? map.get(key) : defaultValue;
      }
      /**
       * <code>map&lt;int32, .protobuf_unittest.TestRequired&gt; map_field = 1;</code>
       */
      @java.lang.Override

      public protobuf_unittest.UnittestProto.TestRequired getMapFieldOrThrow(
          int key) {
        
        java.util.Map<java.lang.Integer, protobuf_unittest.UnittestProto.TestRequired> map =
            internalGetMapField().getMap();
        if (!map.containsKey(key)) {
          throw new java.lang.IllegalArgumentException();
        }
        return map.get(key);
      }

      public Builder clearMapField() {
        internalGetMutableMapField().getMutableMap()
            .clear();
        return this;
      }
      /**
       * <code>map&lt;int32, .protobuf_unittest.TestRequired&gt; map_field = 1;</code>
       */

      public Builder removeMapField(
          int key) {
        
        internalGetMutableMapField().getMutableMap()
            .remove(key);
        return this;
      }
      /**
       * Use alternate mutation accessors instead.
       */
      @java.lang.Deprecated
      public java.util.Map<java.lang.Integer, protobuf_unittest.UnittestProto.TestRequired>
      getMutableMapField() {
        return internalGetMutableMapField().getMutableMap();
      }
      /**
       * <code>map&lt;int32, .protobuf_unittest.TestRequired&gt; map_field = 1;</code>
       */
      public Builder putMapField(
          int key,
          protobuf_unittest.UnittestProto.TestRequired value) {
        
        if (value == null) {
  throw new NullPointerException("map value");
}

        internalGetMutableMapField().getMutableMap()
            .put(key, value);
        return this;
      }
      /**
       * <code>map&lt;int32, .protobuf_unittest.TestRequired&gt; map_field = 1;</code>
       */

      public Builder putAllMapField(
          java.util.Map<java.lang.Integer, protobuf_unittest.UnittestProto.TestRequired> values) {
        internalGetMutableMapField().getMutableMap()
            .putAll(values);
        return this;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:protobuf_unittest.TestRequiredMessageMap)
    }

    // @@protoc_insertion_point(class_scope:protobuf_unittest.TestRequiredMessageMap)
    private static final protobuf_unittest.MapUnittest.TestRequiredMessageMap DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new protobuf_unittest.MapUnittest.TestRequiredMessageMap();
    }

    public static protobuf_unittest.MapUnittest.TestRequiredMessageMap getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<TestRequiredMessageMap>
        PARSER = new com.google.protobuf.AbstractParser<TestRequiredMessageMap>() {
      @java.lang.Override
      public TestRequiredMessageMap parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new TestRequiredMessageMap(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<TestRequiredMessageMap> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<TestRequiredMessageMap> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public protobuf_unittest.MapUnittest.TestRequiredMessageMap getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface TestArenaMapOrBuilder extends
      // @@protoc_insertion_point(interface_extends:protobuf_unittest.TestArenaMap)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>map&lt;int32, int32&gt; map_int32_int32 = 1;</code>
     */
    int getMapInt32Int32Count();
    /**
     * <code>map&lt;int32, int32&gt; map_int32_int32 = 1;</code>
     */
    boolean containsMapInt32Int32(
        int key);
    /**
     * Use {@link #getMapInt32Int32Map()} instead.
     */
    @java.lang.Deprecated
    java.util.Map<java.lang.Integer, java.lang.Integer>
    getMapInt32Int32();
    /**
     * <code>map&lt;int32, int32&gt; map_int32_int32 = 1;</code>
     */
    java.util.Map<java.lang.Integer, java.lang.Integer>
    getMapInt32Int32Map();
    /**
     * <code>map&lt;int32, int32&gt; map_int32_int32 = 1;</code>
     */

    int getMapInt32Int32OrDefault(
        int key,
        int defaultValue);
    /**
     * <code>map&lt;int32, int32&gt; map_int32_int32 = 1;</code>
     */

    int getMapInt32Int32OrThrow(
        int key);

    /**
     * <code>map&lt;int64, int64&gt; map_int64_int64 = 2;</code>
     */
    int getMapInt64Int64Count();
    /**
     * <code>map&lt;int64, int64&gt; map_int64_int64 = 2;</code>
     */
    boolean containsMapInt64Int64(
        long key);
    /**
     * Use {@link #getMapInt64Int64Map()} instead.
     */
    @java.lang.Deprecated
    java.util.Map<java.lang.Long, java.lang.Long>
    getMapInt64Int64();
    /**
     * <code>map&lt;int64, int64&gt; map_int64_int64 = 2;</code>
     */
    java.util.Map<java.lang.Long, java.lang.Long>
    getMapInt64Int64Map();
    /**
     * <code>map&lt;int64, int64&gt; map_int64_int64 = 2;</code>
     */

    long getMapInt64Int64OrDefault(
        long key,
        long defaultValue);
    /**
     * <code>map&lt;int64, int64&gt; map_int64_int64 = 2;</code>
     */

    long getMapInt64Int64OrThrow(
        long key);

    /**
     * <code>map&lt;uint32, uint32&gt; map_uint32_uint32 = 3;</code>
     */
    int getMapUint32Uint32Count();
    /**
     * <code>map&lt;uint32, uint32&gt; map_uint32_uint32 = 3;</code>
     */
    boolean containsMapUint32Uint32(
        int key);
    /**
     * Use {@link #getMapUint32Uint32Map()} instead.
     */
    @java.lang.Deprecated
    java.util.Map<java.lang.Integer, java.lang.Integer>
    getMapUint32Uint32();
    /**
     * <code>map&lt;uint32, uint32&gt; map_uint32_uint32 = 3;</code>
     */
    java.util.Map<java.lang.Integer, java.lang.Integer>
    getMapUint32Uint32Map();
    /**
     * <code>map&lt;uint32, uint32&gt; map_uint32_uint32 = 3;</code>
     */

    int getMapUint32Uint32OrDefault(
        int key,
        int defaultValue);
    /**
     * <code>map&lt;uint32, uint32&gt; map_uint32_uint32 = 3;</code>
     */

    int getMapUint32Uint32OrThrow(
        int key);

    /**
     * <code>map&lt;uint64, uint64&gt; map_uint64_uint64 = 4;</code>
     */
    int getMapUint64Uint64Count();
    /**
     * <code>map&lt;uint64, uint64&gt; map_uint64_uint64 = 4;</code>
     */
    boolean containsMapUint64Uint64(
        long key);
    /**
     * Use {@link #getMapUint64Uint64Map()} instead.
     */
    @java.lang.Deprecated
    java.util.Map<java.lang.Long, java.lang.Long>
    getMapUint64Uint64();
    /**
     * <code>map&lt;uint64, uint64&gt; map_uint64_uint64 = 4;</code>
     */
    java.util.Map<java.lang.Long, java.lang.Long>
    getMapUint64Uint64Map();
    /**
     * <code>map&lt;uint64, uint64&gt; map_uint64_uint64 = 4;</code>
     */

    long getMapUint64Uint64OrDefault(
        long key,
        long defaultValue);
    /**
     * <code>map&lt;uint64, uint64&gt; map_uint64_uint64 = 4;</code>
     */

    long getMapUint64Uint64OrThrow(
        long key);

    /**
     * <code>map&lt;sint32, sint32&gt; map_sint32_sint32 = 5;</code>
     */
    int getMapSint32Sint32Count();
    /**
     * <code>map&lt;sint32, sint32&gt; map_sint32_sint32 = 5;</code>
     */
    boolean containsMapSint32Sint32(
        int key);
    /**
     * Use {@link #getMapSint32Sint32Map()} instead.
     */
    @java.lang.Deprecated
    java.util.Map<java.lang.Integer, java.lang.Integer>
    getMapSint32Sint32();
    /**
     * <code>map&lt;sint32, sint32&gt; map_sint32_sint32 = 5;</code>
     */
    java.util.Map<java.lang.Integer, java.lang.Integer>
    getMapSint32Sint32Map();
    /**
     * <code>map&lt;sint32, sint32&gt; map_sint32_sint32 = 5;</code>
     */

    int getMapSint32Sint32OrDefault(
        int key,
        int defaultValue);
    /**
     * <code>map&lt;sint32, sint32&gt; map_sint32_sint32 = 5;</code>
     */

    int getMapSint32Sint32OrThrow(
        int key);

    /**
     * <code>map&lt;sint64, sint64&gt; map_sint64_sint64 = 6;</code>
     */
    int getMapSint64Sint64Count();
    /**
     * <code>map&lt;sint64, sint64&gt; map_sint64_sint64 = 6;</code>
     */
    boolean containsMapSint64Sint64(
        long key);
    /**
     * Use {@link #getMapSint64Sint64Map()} instead.
     */
    @java.lang.Deprecated
    java.util.Map<java.lang.Long, java.lang.Long>
    getMapSint64Sint64();
    /**
     * <code>map&lt;sint64, sint64&gt; map_sint64_sint64 = 6;</code>
     */
    java.util.Map<java.lang.Long, java.lang.Long>
    getMapSint64Sint64Map();
    /**
     * <code>map&lt;sint64, sint64&gt; map_sint64_sint64 = 6;</code>
     */

    long getMapSint64Sint64OrDefault(
        long key,
        long defaultValue);
    /**
     * <code>map&lt;sint64, sint64&gt; map_sint64_sint64 = 6;</code>
     */

    long getMapSint64Sint64OrThrow(
        long key);

    /**
     * <code>map&lt;fixed32, fixed32&gt; map_fixed32_fixed32 = 7;</code>
     */
    int getMapFixed32Fixed32Count();
    /**
     * <code>map&lt;fixed32, fixed32&gt; map_fixed32_fixed32 = 7;</code>
     */
    boolean containsMapFixed32Fixed32(
        int key);
    /**
     * Use {@link #getMapFixed32Fixed32Map()} instead.
     */
    @java.lang.Deprecated
    java.util.Map<java.lang.Integer, java.lang.Integer>
    getMapFixed32Fixed32();
    /**
     * <code>map&lt;fixed32, fixed32&gt; map_fixed32_fixed32 = 7;</code>
     */
    java.util.Map<java.lang.Integer, java.lang.Integer>
    getMapFixed32Fixed32Map();
    /**
     * <code>map&lt;fixed32, fixed32&gt; map_fixed32_fixed32 = 7;</code>
     */

    int getMapFixed32Fixed32OrDefault(
        int key,
        int defaultValue);
    /**
     * <code>map&lt;fixed32, fixed32&gt; map_fixed32_fixed32 = 7;</code>
     */

    int getMapFixed32Fixed32OrThrow(
        int key);

    /**
     * <code>map&lt;fixed64, fixed64&gt; map_fixed64_fixed64 = 8;</code>
     */
    int getMapFixed64Fixed64Count();
    /**
     * <code>map&lt;fixed64, fixed64&gt; map_fixed64_fixed64 = 8;</code>
     */
    boolean containsMapFixed64Fixed64(
        long key);
    /**
     * Use {@link #getMapFixed64Fixed64Map()} instead.
     */
    @java.lang.Deprecated
    java.util.Map<java.lang.Long, java.lang.Long>
    getMapFixed64Fixed64();
    /**
     * <code>map&lt;fixed64, fixed64&gt; map_fixed64_fixed64 = 8;</code>
     */
    java.util.Map<java.lang.Long, java.lang.Long>
    getMapFixed64Fixed64Map();
    /**
     * <code>map&lt;fixed64, fixed64&gt; map_fixed64_fixed64 = 8;</code>
     */

    long getMapFixed64Fixed64OrDefault(
        long key,
        long defaultValue);
    /**
     * <code>map&lt;fixed64, fixed64&gt; map_fixed64_fixed64 = 8;</code>
     */

    long getMapFixed64Fixed64OrThrow(
        long key);

    /**
     * <code>map&lt;sfixed32, sfixed32&gt; map_sfixed32_sfixed32 = 9;</code>
     */
    int getMapSfixed32Sfixed32Count();
    /**
     * <code>map&lt;sfixed32, sfixed32&gt; map_sfixed32_sfixed32 = 9;</code>
     */
    boolean containsMapSfixed32Sfixed32(
        int key);
    /**
     * Use {@link #getMapSfixed32Sfixed32Map()} instead.
     */
    @java.lang.Deprecated
    java.util.Map<java.lang.Integer, java.lang.Integer>
    getMapSfixed32Sfixed32();
    /**
     * <code>map&lt;sfixed32, sfixed32&gt; map_sfixed32_sfixed32 = 9;</code>
     */
    java.util.Map<java.lang.Integer, java.lang.Integer>
    getMapSfixed32Sfixed32Map();
    /**
     * <code>map&lt;sfixed32, sfixed32&gt; map_sfixed32_sfixed32 = 9;</code>
     */

    int getMapSfixed32Sfixed32OrDefault(
        int key,
        int defaultValue);
    /**
     * <code>map&lt;sfixed32, sfixed32&gt; map_sfixed32_sfixed32 = 9;</code>
     */

    int getMapSfixed32Sfixed32OrThrow(
        int key);

    /**
     * <code>map&lt;sfixed64, sfixed64&gt; map_sfixed64_sfixed64 = 10;</code>
     */
    int getMapSfixed64Sfixed64Count();
    /**
     * <code>map&lt;sfixed64, sfixed64&gt; map_sfixed64_sfixed64 = 10;</code>
     */
    boolean containsMapSfixed64Sfixed64(
        long key);
    /**
     * Use {@link #getMapSfixed64Sfixed64Map()} instead.
     */
    @java.lang.Deprecated
    java.util.Map<java.lang.Long, java.lang.Long>
    getMapSfixed64Sfixed64();
    /**
     * <code>map&lt;sfixed64, sfixed64&gt; map_sfixed64_sfixed64 = 10;</code>
     */
    java.util.Map<java.lang.Long, java.lang.Long>
    getMapSfixed64Sfixed64Map();
    /**
     * <code>map&lt;sfixed64, sfixed64&gt; map_sfixed64_sfixed64 = 10;</code>
     */

    long getMapSfixed64Sfixed64OrDefault(
        long key,
        long defaultValue);
    /**
     * <code>map&lt;sfixed64, sfixed64&gt; map_sfixed64_sfixed64 = 10;</code>
     */

    long getMapSfixed64Sfixed64OrThrow(
        long key);

    /**
     * <code>map&lt;int32, float&gt; map_int32_float = 11;</code>
     */
    int getMapInt32FloatCount();
    /**
     * <code>map&lt;int32, float&gt; map_int32_float = 11;</code>
     */
    boolean containsMapInt32Float(
        int key);
    /**
     * Use {@link #getMapInt32FloatMap()} instead.
     */
    @java.lang.Deprecated
    java.util.Map<java.lang.Integer, java.lang.Float>
    getMapInt32Float();
    /**
     * <code>map&lt;int32, float&gt; map_int32_float = 11;</code>
     */
    java.util.Map<java.lang.Integer, java.lang.Float>
    getMapInt32FloatMap();
    /**
     * <code>map&lt;int32, float&gt; map_int32_float = 11;</code>
     */

    float getMapInt32FloatOrDefault(
        int key,
        float defaultValue);
    /**
     * <code>map&lt;int32, float&gt; map_int32_float = 11;</code>
     */

    float getMapInt32FloatOrThrow(
        int key);

    /**
     * <code>map&lt;int32, double&gt; map_int32_double = 12;</code>
     */
    int getMapInt32DoubleCount();
    /**
     * <code>map&lt;int32, double&gt; map_int32_double = 12;</code>
     */
    boolean containsMapInt32Double(
        int key);
    /**
     * Use {@link #getMapInt32DoubleMap()} instead.
     */
    @java.lang.Deprecated
    java.util.Map<java.lang.Integer, java.lang.Double>
    getMapInt32Double();
    /**
     * <code>map&lt;int32, double&gt; map_int32_double = 12;</code>
     */
    java.util.Map<java.lang.Integer, java.lang.Double>
    getMapInt32DoubleMap();
    /**
     * <code>map&lt;int32, double&gt; map_int32_double = 12;</code>
     */

    double getMapInt32DoubleOrDefault(
        int key,
        double defaultValue);
    /**
     * <code>map&lt;int32, double&gt; map_int32_double = 12;</code>
     */

    double getMapInt32DoubleOrThrow(
        int key);

    /**
     * <code>map&lt;bool, bool&gt; map_bool_bool = 13;</code>
     */
    int getMapBoolBoolCount();
    /**
     * <code>map&lt;bool, bool&gt; map_bool_bool = 13;</code>
     */
    boolean containsMapBoolBool(
        boolean key);
    /**
     * Use {@link #getMapBoolBoolMap()} instead.
     */
    @java.lang.Deprecated
    java.util.Map<java.lang.Boolean, java.lang.Boolean>
    getMapBoolBool();
    /**
     * <code>map&lt;bool, bool&gt; map_bool_bool = 13;</code>
     */
    java.util.Map<java.lang.Boolean, java.lang.Boolean>
    getMapBoolBoolMap();
    /**
     * <code>map&lt;bool, bool&gt; map_bool_bool = 13;</code>
     */

    boolean getMapBoolBoolOrDefault(
        boolean key,
        boolean defaultValue);
    /**
     * <code>map&lt;bool, bool&gt; map_bool_bool = 13;</code>
     */

    boolean getMapBoolBoolOrThrow(
        boolean key);

    /**
     * <code>map&lt;string, string&gt; map_string_string = 14;</code>
     */
    int getMapStringStringCount();
    /**
     * <code>map&lt;string, string&gt; map_string_string = 14;</code>
     */
    boolean containsMapStringString(
        java.lang.String key);
    /**
     * Use {@link #getMapStringStringMap()} instead.
     */
    @java.lang.Deprecated
    java.util.Map<java.lang.String, java.lang.String>
    getMapStringString();
    /**
     * <code>map&lt;string, string&gt; map_string_string = 14;</code>
     */
    java.util.Map<java.lang.String, java.lang.String>
    getMapStringStringMap();
    /**
     * <code>map&lt;string, string&gt; map_string_string = 14;</code>
     */

    /* nullable */
java.lang.String getMapStringStringOrDefault(
        java.lang.String key,
        /* nullable */
java.lang.String defaultValue);
    /**
     * <code>map&lt;string, string&gt; map_string_string = 14;</code>
     */

    java.lang.String getMapStringStringOrThrow(
        java.lang.String key);

    /**
     * <code>map&lt;int32, bytes&gt; map_int32_bytes = 15;</code>
     */
    int getMapInt32BytesCount();
    /**
     * <code>map&lt;int32, bytes&gt; map_int32_bytes = 15;</code>
     */
    boolean containsMapInt32Bytes(
        int key);
    /**
     * Use {@link #getMapInt32BytesMap()} instead.
     */
    @java.lang.Deprecated
    java.util.Map<java.lang.Integer, com.google.protobuf.ByteString>
    getMapInt32Bytes();
    /**
     * <code>map&lt;int32, bytes&gt; map_int32_bytes = 15;</code>
     */
    java.util.Map<java.lang.Integer, com.google.protobuf.ByteString>
    getMapInt32BytesMap();
    /**
     * <code>map&lt;int32, bytes&gt; map_int32_bytes = 15;</code>
     */

    /* nullable */
com.google.protobuf.ByteString getMapInt32BytesOrDefault(
        int key,
        /* nullable */
com.google.protobuf.ByteString defaultValue);
    /**
     * <code>map&lt;int32, bytes&gt; map_int32_bytes = 15;</code>
     */

    com.google.protobuf.ByteString getMapInt32BytesOrThrow(
        int key);

    /**
     * <code>map&lt;int32, .protobuf_unittest.MapEnum&gt; map_int32_enum = 16;</code>
     */
    int getMapInt32EnumCount();
    /**
     * <code>map&lt;int32, .protobuf_unittest.MapEnum&gt; map_int32_enum = 16;</code>
     */
    boolean containsMapInt32Enum(
        int key);
    /**
     * Use {@link #getMapInt32EnumMap()} instead.
     */
    @java.lang.Deprecated
    java.util.Map<java.lang.Integer, protobuf_unittest.MapUnittest.MapEnum>
    getMapInt32Enum();
    /**
     * <code>map&lt;int32, .protobuf_unittest.MapEnum&gt; map_int32_enum = 16;</code>
     */
    java.util.Map<java.lang.Integer, protobuf_unittest.MapUnittest.MapEnum>
    getMapInt32EnumMap();
    /**
     * <code>map&lt;int32, .protobuf_unittest.MapEnum&gt; map_int32_enum = 16;</code>
     */
    /* nullable */
protobuf_unittest.MapUnittest.MapEnum getMapInt32EnumOrDefault(
        int key,
        /* nullable */
protobuf_unittest.MapUnittest.MapEnum         defaultValue);
    /**
     * <code>map&lt;int32, .protobuf_unittest.MapEnum&gt; map_int32_enum = 16;</code>
     */
    protobuf_unittest.MapUnittest.MapEnum getMapInt32EnumOrThrow(
        int key);
    /**
     * Use {@link #getMapInt32EnumValueMap()} instead.
     */
    @java.lang.Deprecated
    java.util.Map<java.lang.Integer, java.lang.Integer>
    getMapInt32EnumValue();
    /**
     * <code>map&lt;int32, .protobuf_unittest.MapEnum&gt; map_int32_enum = 16;</code>
     */
    java.util.Map<java.lang.Integer, java.lang.Integer>
    getMapInt32EnumValueMap();
    /**
     * <code>map&lt;int32, .protobuf_unittest.MapEnum&gt; map_int32_enum = 16;</code>
     */

    int getMapInt32EnumValueOrDefault(
        int key,
        int defaultValue);
    /**
     * <code>map&lt;int32, .protobuf_unittest.MapEnum&gt; map_int32_enum = 16;</code>
     */

    int getMapInt32EnumValueOrThrow(
        int key);

    /**
     * <code>map&lt;int32, .protobuf_unittest.ForeignMessage&gt; map_int32_foreign_message = 17;</code>
     */
    int getMapInt32ForeignMessageCount();
    /**
     * <code>map&lt;int32, .protobuf_unittest.ForeignMessage&gt; map_int32_foreign_message = 17;</code>
     */
    boolean containsMapInt32ForeignMessage(
        int key);
    /**
     * Use {@link #getMapInt32ForeignMessageMap()} instead.
     */
    @java.lang.Deprecated
    java.util.Map<java.lang.Integer, protobuf_unittest.UnittestProto.ForeignMessage>
    getMapInt32ForeignMessage();
    /**
     * <code>map&lt;int32, .protobuf_unittest.ForeignMessage&gt; map_int32_foreign_message = 17;</code>
     */
    java.util.Map<java.lang.Integer, protobuf_unittest.UnittestProto.ForeignMessage>
    getMapInt32ForeignMessageMap();
    /**
     * <code>map&lt;int32, .protobuf_unittest.ForeignMessage&gt; map_int32_foreign_message = 17;</code>
     */

    /* nullable */
protobuf_unittest.UnittestProto.ForeignMessage getMapInt32ForeignMessageOrDefault(
        int key,
        /* nullable */
protobuf_unittest.UnittestProto.ForeignMessage defaultValue);
    /**
     * <code>map&lt;int32, .protobuf_unittest.ForeignMessage&gt; map_int32_foreign_message = 17;</code>
     */

    protobuf_unittest.UnittestProto.ForeignMessage getMapInt32ForeignMessageOrThrow(
        int key);
  }
  /**
   * Protobuf type {@code protobuf_unittest.TestArenaMap}
   */
  public static final class TestArenaMap extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:protobuf_unittest.TestArenaMap)
      TestArenaMapOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use TestArenaMap.newBuilder() to construct.
    private TestArenaMap(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private TestArenaMap() {
    }

    @java.lang.Override
    @SuppressWarnings({"unused"})
    protected java.lang.Object newInstance(
        UnusedPrivateParameter unused) {
      return new TestArenaMap();
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private TestArenaMap(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 10: {
              if (!((mutable_bitField0_ & 0x00000001) != 0)) {
                mapInt32Int32_ = com.google.protobuf.MapField.newMapField(
                    MapInt32Int32DefaultEntryHolder.defaultEntry);
                mutable_bitField0_ |= 0x00000001;
              }
              com.google.protobuf.MapEntry<java.lang.Integer, java.lang.Integer>
              mapInt32Int32__ = input.readMessage(
                  MapInt32Int32DefaultEntryHolder.defaultEntry.getParserForType(), extensionRegistry);
              mapInt32Int32_.getMutableMap().put(
                  mapInt32Int32__.getKey(), mapInt32Int32__.getValue());
              break;
            }
            case 18: {
              if (!((mutable_bitField0_ & 0x00000002) != 0)) {
                mapInt64Int64_ = com.google.protobuf.MapField.newMapField(
                    MapInt64Int64DefaultEntryHolder.defaultEntry);
                mutable_bitField0_ |= 0x00000002;
              }
              com.google.protobuf.MapEntry<java.lang.Long, java.lang.Long>
              mapInt64Int64__ = input.readMessage(
                  MapInt64Int64DefaultEntryHolder.defaultEntry.getParserForType(), extensionRegistry);
              mapInt64Int64_.getMutableMap().put(
                  mapInt64Int64__.getKey(), mapInt64Int64__.getValue());
              break;
            }
            case 26: {
              if (!((mutable_bitField0_ & 0x00000004) != 0)) {
                mapUint32Uint32_ = com.google.protobuf.MapField.newMapField(
                    MapUint32Uint32DefaultEntryHolder.defaultEntry);
                mutable_bitField0_ |= 0x00000004;
              }
              com.google.protobuf.MapEntry<java.lang.Integer, java.lang.Integer>
              mapUint32Uint32__ = input.readMessage(
                  MapUint32Uint32DefaultEntryHolder.defaultEntry.getParserForType(), extensionRegistry);
              mapUint32Uint32_.getMutableMap().put(
                  mapUint32Uint32__.getKey(), mapUint32Uint32__.getValue());
              break;
            }
            case 34: {
              if (!((mutable_bitField0_ & 0x00000008) != 0)) {
                mapUint64Uint64_ = com.google.protobuf.MapField.newMapField(
                    MapUint64Uint64DefaultEntryHolder.defaultEntry);
                mutable_bitField0_ |= 0x00000008;
              }
              com.google.protobuf.MapEntry<java.lang.Long, java.lang.Long>
              mapUint64Uint64__ = input.readMessage(
                  MapUint64Uint64DefaultEntryHolder.defaultEntry.getParserForType(), extensionRegistry);
              mapUint64Uint64_.getMutableMap().put(
                  mapUint64Uint64__.getKey(), mapUint64Uint64__.getValue());
              break;
            }
            case 42: {
              if (!((mutable_bitField0_ & 0x00000010) != 0)) {
                mapSint32Sint32_ = com.google.protobuf.MapField.newMapField(
                    MapSint32Sint32DefaultEntryHolder.defaultEntry);
                mutable_bitField0_ |= 0x00000010;
              }
              com.google.protobuf.MapEntry<java.lang.Integer, java.lang.Integer>
              mapSint32Sint32__ = input.readMessage(
                  MapSint32Sint32DefaultEntryHolder.defaultEntry.getParserForType(), extensionRegistry);
              mapSint32Sint32_.getMutableMap().put(
                  mapSint32Sint32__.getKey(), mapSint32Sint32__.getValue());
              break;
            }
            case 50: {
              if (!((mutable_bitField0_ & 0x00000020) != 0)) {
                mapSint64Sint64_ = com.google.protobuf.MapField.newMapField(
                    MapSint64Sint64DefaultEntryHolder.defaultEntry);
                mutable_bitField0_ |= 0x00000020;
              }
              com.google.protobuf.MapEntry<java.lang.Long, java.lang.Long>
              mapSint64Sint64__ = input.readMessage(
                  MapSint64Sint64DefaultEntryHolder.defaultEntry.getParserForType(), extensionRegistry);
              mapSint64Sint64_.getMutableMap().put(
                  mapSint64Sint64__.getKey(), mapSint64Sint64__.getValue());
              break;
            }
            case 58: {
              if (!((mutable_bitField0_ & 0x00000040) != 0)) {
                mapFixed32Fixed32_ = com.google.protobuf.MapField.newMapField(
                    MapFixed32Fixed32DefaultEntryHolder.defaultEntry);
                mutable_bitField0_ |= 0x00000040;
              }
              com.google.protobuf.MapEntry<java.lang.Integer, java.lang.Integer>
              mapFixed32Fixed32__ = input.readMessage(
                  MapFixed32Fixed32DefaultEntryHolder.defaultEntry.getParserForType(), extensionRegistry);
              mapFixed32Fixed32_.getMutableMap().put(
                  mapFixed32Fixed32__.getKey(), mapFixed32Fixed32__.getValue());
              break;
            }
            case 66: {
              if (!((mutable_bitField0_ & 0x00000080) != 0)) {
                mapFixed64Fixed64_ = com.google.protobuf.MapField.newMapField(
                    MapFixed64Fixed64DefaultEntryHolder.defaultEntry);
                mutable_bitField0_ |= 0x00000080;
              }
              com.google.protobuf.MapEntry<java.lang.Long, java.lang.Long>
              mapFixed64Fixed64__ = input.readMessage(
                  MapFixed64Fixed64DefaultEntryHolder.defaultEntry.getParserForType(), extensionRegistry);
              mapFixed64Fixed64_.getMutableMap().put(
                  mapFixed64Fixed64__.getKey(), mapFixed64Fixed64__.getValue());
              break;
            }
            case 74: {
              if (!((mutable_bitField0_ & 0x00000100) != 0)) {
                mapSfixed32Sfixed32_ = com.google.protobuf.MapField.newMapField(
                    MapSfixed32Sfixed32DefaultEntryHolder.defaultEntry);
                mutable_bitField0_ |= 0x00000100;
              }
              com.google.protobuf.MapEntry<java.lang.Integer, java.lang.Integer>
              mapSfixed32Sfixed32__ = input.readMessage(
                  MapSfixed32Sfixed32DefaultEntryHolder.defaultEntry.getParserForType(), extensionRegistry);
              mapSfixed32Sfixed32_.getMutableMap().put(
                  mapSfixed32Sfixed32__.getKey(), mapSfixed32Sfixed32__.getValue());
              break;
            }
            case 82: {
              if (!((mutable_bitField0_ & 0x00000200) != 0)) {
                mapSfixed64Sfixed64_ = com.google.protobuf.MapField.newMapField(
                    MapSfixed64Sfixed64DefaultEntryHolder.defaultEntry);
                mutable_bitField0_ |= 0x00000200;
              }
              com.google.protobuf.MapEntry<java.lang.Long, java.lang.Long>
              mapSfixed64Sfixed64__ = input.readMessage(
                  MapSfixed64Sfixed64DefaultEntryHolder.defaultEntry.getParserForType(), extensionRegistry);
              mapSfixed64Sfixed64_.getMutableMap().put(
                  mapSfixed64Sfixed64__.getKey(), mapSfixed64Sfixed64__.getValue());
              break;
            }
            case 90: {
              if (!((mutable_bitField0_ & 0x00000400) != 0)) {
                mapInt32Float_ = com.google.protobuf.MapField.newMapField(
                    MapInt32FloatDefaultEntryHolder.defaultEntry);
                mutable_bitField0_ |= 0x00000400;
              }
              com.google.protobuf.MapEntry<java.lang.Integer, java.lang.Float>
              mapInt32Float__ = input.readMessage(
                  MapInt32FloatDefaultEntryHolder.defaultEntry.getParserForType(), extensionRegistry);
              mapInt32Float_.getMutableMap().put(
                  mapInt32Float__.getKey(), mapInt32Float__.getValue());
              break;
            }
            case 98: {
              if (!((mutable_bitField0_ & 0x00000800) != 0)) {
                mapInt32Double_ = com.google.protobuf.MapField.newMapField(
                    MapInt32DoubleDefaultEntryHolder.defaultEntry);
                mutable_bitField0_ |= 0x00000800;
              }
              com.google.protobuf.MapEntry<java.lang.Integer, java.lang.Double>
              mapInt32Double__ = input.readMessage(
                  MapInt32DoubleDefaultEntryHolder.defaultEntry.getParserForType(), extensionRegistry);
              mapInt32Double_.getMutableMap().put(
                  mapInt32Double__.getKey(), mapInt32Double__.getValue());
              break;
            }
            case 106: {
              if (!((mutable_bitField0_ & 0x00001000) != 0)) {
                mapBoolBool_ = com.google.protobuf.MapField.newMapField(
                    MapBoolBoolDefaultEntryHolder.defaultEntry);
                mutable_bitField0_ |= 0x00001000;
              }
              com.google.protobuf.MapEntry<java.lang.Boolean, java.lang.Boolean>
              mapBoolBool__ = input.readMessage(
                  MapBoolBoolDefaultEntryHolder.defaultEntry.getParserForType(), extensionRegistry);
              mapBoolBool_.getMutableMap().put(
                  mapBoolBool__.getKey(), mapBoolBool__.getValue());
              break;
            }
            case 114: {
              if (!((mutable_bitField0_ & 0x00002000) != 0)) {
                mapStringString_ = com.google.protobuf.MapField.newMapField(
                    MapStringStringDefaultEntryHolder.defaultEntry);
                mutable_bitField0_ |= 0x00002000;
              }
              com.google.protobuf.MapEntry<java.lang.String, java.lang.String>
              mapStringString__ = input.readMessage(
                  MapStringStringDefaultEntryHolder.defaultEntry.getParserForType(), extensionRegistry);
              mapStringString_.getMutableMap().put(
                  mapStringString__.getKey(), mapStringString__.getValue());
              break;
            }
            case 122: {
              if (!((mutable_bitField0_ & 0x00004000) != 0)) {
                mapInt32Bytes_ = com.google.protobuf.MapField.newMapField(
                    MapInt32BytesDefaultEntryHolder.defaultEntry);
                mutable_bitField0_ |= 0x00004000;
              }
              com.google.protobuf.MapEntry<java.lang.Integer, com.google.protobuf.ByteString>
              mapInt32Bytes__ = input.readMessage(
                  MapInt32BytesDefaultEntryHolder.defaultEntry.getParserForType(), extensionRegistry);
              mapInt32Bytes_.getMutableMap().put(
                  mapInt32Bytes__.getKey(), mapInt32Bytes__.getValue());
              break;
            }
            case 130: {
              if (!((mutable_bitField0_ & 0x00008000) != 0)) {
                mapInt32Enum_ = com.google.protobuf.MapField.newMapField(
                    MapInt32EnumDefaultEntryHolder.defaultEntry);
                mutable_bitField0_ |= 0x00008000;
              }
              com.google.protobuf.MapEntry<java.lang.Integer, java.lang.Integer>
              mapInt32Enum__ = input.readMessage(
                  MapInt32EnumDefaultEntryHolder.defaultEntry.getParserForType(), extensionRegistry);
              mapInt32Enum_.getMutableMap().put(
                  mapInt32Enum__.getKey(), mapInt32Enum__.getValue());
              break;
            }
            case 138: {
              if (!((mutable_bitField0_ & 0x00010000) != 0)) {
                mapInt32ForeignMessage_ = com.google.protobuf.MapField.newMapField(
                    MapInt32ForeignMessageDefaultEntryHolder.defaultEntry);
                mutable_bitField0_ |= 0x00010000;
              }
              com.google.protobuf.MapEntry<java.lang.Integer, protobuf_unittest.UnittestProto.ForeignMessage>
              mapInt32ForeignMessage__ = input.readMessage(
                  MapInt32ForeignMessageDefaultEntryHolder.defaultEntry.getParserForType(), extensionRegistry);
              mapInt32ForeignMessage_.getMutableMap().put(
                  mapInt32ForeignMessage__.getKey(), mapInt32ForeignMessage__.getValue());
              break;
            }
            default: {
              if (!parseUnknownField(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (com.google.protobuf.UninitializedMessageException e) {
        throw e.asInvalidProtocolBufferException().setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return protobuf_unittest.MapUnittest.internal_static_protobuf_unittest_TestArenaMap_descriptor;
    }

    @SuppressWarnings({"rawtypes"})
    @java.lang.Override
    protected com.google.protobuf.MapField internalGetMapField(
        int number) {
      switch (number) {
        case 1:
          return internalGetMapInt32Int32();
        case 2:
          return internalGetMapInt64Int64();
        case 3:
          return internalGetMapUint32Uint32();
        case 4:
          return internalGetMapUint64Uint64();
        case 5:
          return internalGetMapSint32Sint32();
        case 6:
          return internalGetMapSint64Sint64();
        case 7:
          return internalGetMapFixed32Fixed32();
        case 8:
          return internalGetMapFixed64Fixed64();
        case 9:
          return internalGetMapSfixed32Sfixed32();
        case 10:
          return internalGetMapSfixed64Sfixed64();
        case 11:
          return internalGetMapInt32Float();
        case 12:
          return internalGetMapInt32Double();
        case 13:
          return internalGetMapBoolBool();
        case 14:
          return internalGetMapStringString();
        case 15:
          return internalGetMapInt32Bytes();
        case 16:
          return internalGetMapInt32Enum();
        case 17:
          return internalGetMapInt32ForeignMessage();
        default:
          throw new RuntimeException(
              "Invalid map field number: " + number);
      }
    }
    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return protobuf_unittest.MapUnittest.internal_static_protobuf_unittest_TestArenaMap_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              protobuf_unittest.MapUnittest.TestArenaMap.class, protobuf_unittest.MapUnittest.TestArenaMap.Builder.class);
    }

    public static final int MAP_INT32_INT32_FIELD_NUMBER = 1;
    private static final class MapInt32Int32DefaultEntryHolder {
      static final com.google.protobuf.MapEntry<
          java.lang.Integer, java.lang.Integer> defaultEntry =
              com.google.protobuf.MapEntry
              .<java.lang.Integer, java.lang.Integer>newDefaultInstance(
                  protobuf_unittest.MapUnittest.internal_static_protobuf_unittest_TestArenaMap_MapInt32Int32Entry_descriptor, 
                  com.google.protobuf.WireFormat.FieldType.INT32,
                  0,
                  com.google.protobuf.WireFormat.FieldType.INT32,
                  0);
    }
    private com.google.protobuf.MapField<
        java.lang.Integer, java.lang.Integer> mapInt32Int32_;
    private com.google.protobuf.MapField<java.lang.Integer, java.lang.Integer>
    internalGetMapInt32Int32() {
      if (mapInt32Int32_ == null) {
        return com.google.protobuf.MapField.emptyMapField(
            MapInt32Int32DefaultEntryHolder.defaultEntry);
      }
      return mapInt32Int32_;
    }

    public int getMapInt32Int32Count() {
      return internalGetMapInt32Int32().getMap().size();
    }
    /**
     * <code>map&lt;int32, int32&gt; map_int32_int32 = 1;</code>
     */

    @java.lang.Override
    public boolean containsMapInt32Int32(
        int key) {
      
      return internalGetMapInt32Int32().getMap().containsKey(key);
    }
    /**
     * Use {@link #getMapInt32Int32Map()} instead.
     */
    @java.lang.Override
    @java.lang.Deprecated
    public java.util.Map<java.lang.Integer, java.lang.Integer> getMapInt32Int32() {
      return getMapInt32Int32Map();
    }
    /**
     * <code>map&lt;int32, int32&gt; map_int32_int32 = 1;</code>
     */
    @java.lang.Override

    public java.util.Map<java.lang.Integer, java.lang.Integer> getMapInt32Int32Map() {
      return internalGetMapInt32Int32().getMap();
    }
    /**
     * <code>map&lt;int32, int32&gt; map_int32_int32 = 1;</code>
     */
    @java.lang.Override

    public int getMapInt32Int32OrDefault(
        int key,
        int defaultValue) {
      
      java.util.Map<java.lang.Integer, java.lang.Integer> map =
          internalGetMapInt32Int32().getMap();
      return map.containsKey(key) ? map.get(key) : defaultValue;
    }
    /**
     * <code>map&lt;int32, int32&gt; map_int32_int32 = 1;</code>
     */
    @java.lang.Override

    public int getMapInt32Int32OrThrow(
        int key) {
      
      java.util.Map<java.lang.Integer, java.lang.Integer> map =
          internalGetMapInt32Int32().getMap();
      if (!map.containsKey(key)) {
        throw new java.lang.IllegalArgumentException();
      }
      return map.get(key);
    }

    public static final int MAP_INT64_INT64_FIELD_NUMBER = 2;
    private static final class MapInt64Int64DefaultEntryHolder {
      static final com.google.protobuf.MapEntry<
          java.lang.Long, java.lang.Long> defaultEntry =
              com.google.protobuf.MapEntry
              .<java.lang.Long, java.lang.Long>newDefaultInstance(
                  protobuf_unittest.MapUnittest.internal_static_protobuf_unittest_TestArenaMap_MapInt64Int64Entry_descriptor, 
                  com.google.protobuf.WireFormat.FieldType.INT64,
                  0L,
                  com.google.protobuf.WireFormat.FieldType.INT64,
                  0L);
    }
    private com.google.protobuf.MapField<
        java.lang.Long, java.lang.Long> mapInt64Int64_;
    private com.google.protobuf.MapField<java.lang.Long, java.lang.Long>
    internalGetMapInt64Int64() {
      if (mapInt64Int64_ == null) {
        return com.google.protobuf.MapField.emptyMapField(
            MapInt64Int64DefaultEntryHolder.defaultEntry);
      }
      return mapInt64Int64_;
    }

    public int getMapInt64Int64Count() {
      return internalGetMapInt64Int64().getMap().size();
    }
    /**
     * <code>map&lt;int64, int64&gt; map_int64_int64 = 2;</code>
     */

    @java.lang.Override
    public boolean containsMapInt64Int64(
        long key) {
      
      return internalGetMapInt64Int64().getMap().containsKey(key);
    }
    /**
     * Use {@link #getMapInt64Int64Map()} instead.
     */
    @java.lang.Override
    @java.lang.Deprecated
    public java.util.Map<java.lang.Long, java.lang.Long> getMapInt64Int64() {
      return getMapInt64Int64Map();
    }
    /**
     * <code>map&lt;int64, int64&gt; map_int64_int64 = 2;</code>
     */
    @java.lang.Override

    public java.util.Map<java.lang.Long, java.lang.Long> getMapInt64Int64Map() {
      return internalGetMapInt64Int64().getMap();
    }
    /**
     * <code>map&lt;int64, int64&gt; map_int64_int64 = 2;</code>
     */
    @java.lang.Override

    public long getMapInt64Int64OrDefault(
        long key,
        long defaultValue) {
      
      java.util.Map<java.lang.Long, java.lang.Long> map =
          internalGetMapInt64Int64().getMap();
      return map.containsKey(key) ? map.get(key) : defaultValue;
    }
    /**
     * <code>map&lt;int64, int64&gt; map_int64_int64 = 2;</code>
     */
    @java.lang.Override

    public long getMapInt64Int64OrThrow(
        long key) {
      
      java.util.Map<java.lang.Long, java.lang.Long> map =
          internalGetMapInt64Int64().getMap();
      if (!map.containsKey(key)) {
        throw new java.lang.IllegalArgumentException();
      }
      return map.get(key);
    }

    public static final int MAP_UINT32_UINT32_FIELD_NUMBER = 3;
    private static final class MapUint32Uint32DefaultEntryHolder {
      static final com.google.protobuf.MapEntry<
          java.lang.Integer, java.lang.Integer> defaultEntry =
              com.google.protobuf.MapEntry
              .<java.lang.Integer, java.lang.Integer>newDefaultInstance(
                  protobuf_unittest.MapUnittest.internal_static_protobuf_unittest_TestArenaMap_MapUint32Uint32Entry_descriptor, 
                  com.google.protobuf.WireFormat.FieldType.UINT32,
                  0,
                  com.google.protobuf.WireFormat.FieldType.UINT32,
                  0);
    }
    private com.google.protobuf.MapField<
        java.lang.Integer, java.lang.Integer> mapUint32Uint32_;
    private com.google.protobuf.MapField<java.lang.Integer, java.lang.Integer>
    internalGetMapUint32Uint32() {
      if (mapUint32Uint32_ == null) {
        return com.google.protobuf.MapField.emptyMapField(
            MapUint32Uint32DefaultEntryHolder.defaultEntry);
      }
      return mapUint32Uint32_;
    }

    public int getMapUint32Uint32Count() {
      return internalGetMapUint32Uint32().getMap().size();
    }
    /**
     * <code>map&lt;uint32, uint32&gt; map_uint32_uint32 = 3;</code>
     */

    @java.lang.Override
    public boolean containsMapUint32Uint32(
        int key) {
      
      return internalGetMapUint32Uint32().getMap().containsKey(key);
    }
    /**
     * Use {@link #getMapUint32Uint32Map()} instead.
     */
    @java.lang.Override
    @java.lang.Deprecated
    public java.util.Map<java.lang.Integer, java.lang.Integer> getMapUint32Uint32() {
      return getMapUint32Uint32Map();
    }
    /**
     * <code>map&lt;uint32, uint32&gt; map_uint32_uint32 = 3;</code>
     */
    @java.lang.Override

    public java.util.Map<java.lang.Integer, java.lang.Integer> getMapUint32Uint32Map() {
      return internalGetMapUint32Uint32().getMap();
    }
    /**
     * <code>map&lt;uint32, uint32&gt; map_uint32_uint32 = 3;</code>
     */
    @java.lang.Override

    public int getMapUint32Uint32OrDefault(
        int key,
        int defaultValue) {
      
      java.util.Map<java.lang.Integer, java.lang.Integer> map =
          internalGetMapUint32Uint32().getMap();
      return map.containsKey(key) ? map.get(key) : defaultValue;
    }
    /**
     * <code>map&lt;uint32, uint32&gt; map_uint32_uint32 = 3;</code>
     */
    @java.lang.Override

    public int getMapUint32Uint32OrThrow(
        int key) {
      
      java.util.Map<java.lang.Integer, java.lang.Integer> map =
          internalGetMapUint32Uint32().getMap();
      if (!map.containsKey(key)) {
        throw new java.lang.IllegalArgumentException();
      }
      return map.get(key);
    }

    public static final int MAP_UINT64_UINT64_FIELD_NUMBER = 4;
    private static final class MapUint64Uint64DefaultEntryHolder {
      static final com.google.protobuf.MapEntry<
          java.lang.Long, java.lang.Long> defaultEntry =
              com.google.protobuf.MapEntry
              .<java.lang.Long, java.lang.Long>newDefaultInstance(
                  protobuf_unittest.MapUnittest.internal_static_protobuf_unittest_TestArenaMap_MapUint64Uint64Entry_descriptor, 
                  com.google.protobuf.WireFormat.FieldType.UINT64,
                  0L,
                  com.google.protobuf.WireFormat.FieldType.UINT64,
                  0L);
    }
    private com.google.protobuf.MapField<
        java.lang.Long, java.lang.Long> mapUint64Uint64_;
    private com.google.protobuf.MapField<java.lang.Long, java.lang.Long>
    internalGetMapUint64Uint64() {
      if (mapUint64Uint64_ == null) {
        return com.google.protobuf.MapField.emptyMapField(
            MapUint64Uint64DefaultEntryHolder.defaultEntry);
      }
      return mapUint64Uint64_;
    }

    public int getMapUint64Uint64Count() {
      return internalGetMapUint64Uint64().getMap().size();
    }
    /**
     * <code>map&lt;uint64, uint64&gt; map_uint64_uint64 = 4;</code>
     */

    @java.lang.Override
    public boolean containsMapUint64Uint64(
        long key) {
      
      return internalGetMapUint64Uint64().getMap().containsKey(key);
    }
    /**
     * Use {@link #getMapUint64Uint64Map()} instead.
     */
    @java.lang.Override
    @java.lang.Deprecated
    public java.util.Map<java.lang.Long, java.lang.Long> getMapUint64Uint64() {
      return getMapUint64Uint64Map();
    }
    /**
     * <code>map&lt;uint64, uint64&gt; map_uint64_uint64 = 4;</code>
     */
    @java.lang.Override

    public java.util.Map<java.lang.Long, java.lang.Long> getMapUint64Uint64Map() {
      return internalGetMapUint64Uint64().getMap();
    }
    /**
     * <code>map&lt;uint64, uint64&gt; map_uint64_uint64 = 4;</code>
     */
    @java.lang.Override

    public long getMapUint64Uint64OrDefault(
        long key,
        long defaultValue) {
      
      java.util.Map<java.lang.Long, java.lang.Long> map =
          internalGetMapUint64Uint64().getMap();
      return map.containsKey(key) ? map.get(key) : defaultValue;
    }
    /**
     * <code>map&lt;uint64, uint64&gt; map_uint64_uint64 = 4;</code>
     */
    @java.lang.Override

    public long getMapUint64Uint64OrThrow(
        long key) {
      
      java.util.Map<java.lang.Long, java.lang.Long> map =
          internalGetMapUint64Uint64().getMap();
      if (!map.containsKey(key)) {
        throw new java.lang.IllegalArgumentException();
      }
      return map.get(key);
    }

    public static final int MAP_SINT32_SINT32_FIELD_NUMBER = 5;
    private static final class MapSint32Sint32DefaultEntryHolder {
      static final com.google.protobuf.MapEntry<
          java.lang.Integer, java.lang.Integer> defaultEntry =
              com.google.protobuf.MapEntry
              .<java.lang.Integer, java.lang.Integer>newDefaultInstance(
                  protobuf_unittest.MapUnittest.internal_static_protobuf_unittest_TestArenaMap_MapSint32Sint32Entry_descriptor, 
                  com.google.protobuf.WireFormat.FieldType.SINT32,
                  0,
                  com.google.protobuf.WireFormat.FieldType.SINT32,
                  0);
    }
    private com.google.protobuf.MapField<
        java.lang.Integer, java.lang.Integer> mapSint32Sint32_;
    private com.google.protobuf.MapField<java.lang.Integer, java.lang.Integer>
    internalGetMapSint32Sint32() {
      if (mapSint32Sint32_ == null) {
        return com.google.protobuf.MapField.emptyMapField(
            MapSint32Sint32DefaultEntryHolder.defaultEntry);
      }
      return mapSint32Sint32_;
    }

    public int getMapSint32Sint32Count() {
      return internalGetMapSint32Sint32().getMap().size();
    }
    /**
     * <code>map&lt;sint32, sint32&gt; map_sint32_sint32 = 5;</code>
     */

    @java.lang.Override
    public boolean containsMapSint32Sint32(
        int key) {
      
      return internalGetMapSint32Sint32().getMap().containsKey(key);
    }
    /**
     * Use {@link #getMapSint32Sint32Map()} instead.
     */
    @java.lang.Override
    @java.lang.Deprecated
    public java.util.Map<java.lang.Integer, java.lang.Integer> getMapSint32Sint32() {
      return getMapSint32Sint32Map();
    }
    /**
     * <code>map&lt;sint32, sint32&gt; map_sint32_sint32 = 5;</code>
     */
    @java.lang.Override

    public java.util.Map<java.lang.Integer, java.lang.Integer> getMapSint32Sint32Map() {
      return internalGetMapSint32Sint32().getMap();
    }
    /**
     * <code>map&lt;sint32, sint32&gt; map_sint32_sint32 = 5;</code>
     */
    @java.lang.Override

    public int getMapSint32Sint32OrDefault(
        int key,
        int defaultValue) {
      
      java.util.Map<java.lang.Integer, java.lang.Integer> map =
          internalGetMapSint32Sint32().getMap();
      return map.containsKey(key) ? map.get(key) : defaultValue;
    }
    /**
     * <code>map&lt;sint32, sint32&gt; map_sint32_sint32 = 5;</code>
     */
    @java.lang.Override

    public int getMapSint32Sint32OrThrow(
        int key) {
      
      java.util.Map<java.lang.Integer, java.lang.Integer> map =
          internalGetMapSint32Sint32().getMap();
      if (!map.containsKey(key)) {
        throw new java.lang.IllegalArgumentException();
      }
      return map.get(key);
    }

    public static final int MAP_SINT64_SINT64_FIELD_NUMBER = 6;
    private static final class MapSint64Sint64DefaultEntryHolder {
      static final com.google.protobuf.MapEntry<
          java.lang.Long, java.lang.Long> defaultEntry =
              com.google.protobuf.MapEntry
              .<java.lang.Long, java.lang.Long>newDefaultInstance(
                  protobuf_unittest.MapUnittest.internal_static_protobuf_unittest_TestArenaMap_MapSint64Sint64Entry_descriptor, 
                  com.google.protobuf.WireFormat.FieldType.SINT64,
                  0L,
                  com.google.protobuf.WireFormat.FieldType.SINT64,
                  0L);
    }
    private com.google.protobuf.MapField<
        java.lang.Long, java.lang.Long> mapSint64Sint64_;
    private com.google.protobuf.MapField<java.lang.Long, java.lang.Long>
    internalGetMapSint64Sint64() {
      if (mapSint64Sint64_ == null) {
        return com.google.protobuf.MapField.emptyMapField(
            MapSint64Sint64DefaultEntryHolder.defaultEntry);
      }
      return mapSint64Sint64_;
    }

    public int getMapSint64Sint64Count() {
      return internalGetMapSint64Sint64().getMap().size();
    }
    /**
     * <code>map&lt;sint64, sint64&gt; map_sint64_sint64 = 6;</code>
     */

    @java.lang.Override
    public boolean containsMapSint64Sint64(
        long key) {
      
      return internalGetMapSint64Sint64().getMap().containsKey(key);
    }
    /**
     * Use {@link #getMapSint64Sint64Map()} instead.
     */
    @java.lang.Override
    @java.lang.Deprecated
    public java.util.Map<java.lang.Long, java.lang.Long> getMapSint64Sint64() {
      return getMapSint64Sint64Map();
    }
    /**
     * <code>map&lt;sint64, sint64&gt; map_sint64_sint64 = 6;</code>
     */
    @java.lang.Override

    public java.util.Map<java.lang.Long, java.lang.Long> getMapSint64Sint64Map() {
      return internalGetMapSint64Sint64().getMap();
    }
    /**
     * <code>map&lt;sint64, sint64&gt; map_sint64_sint64 = 6;</code>
     */
    @java.lang.Override

    public long getMapSint64Sint64OrDefault(
        long key,
        long defaultValue) {
      
      java.util.Map<java.lang.Long, java.lang.Long> map =
          internalGetMapSint64Sint64().getMap();
      return map.containsKey(key) ? map.get(key) : defaultValue;
    }
    /**
     * <code>map&lt;sint64, sint64&gt; map_sint64_sint64 = 6;</code>
     */
    @java.lang.Override

    public long getMapSint64Sint64OrThrow(
        long key) {
      
      java.util.Map<java.lang.Long, java.lang.Long> map =
          internalGetMapSint64Sint64().getMap();
      if (!map.containsKey(key)) {
        throw new java.lang.IllegalArgumentException();
      }
      return map.get(key);
    }

    public static final int MAP_FIXED32_FIXED32_FIELD_NUMBER = 7;
    private static final class MapFixed32Fixed32DefaultEntryHolder {
      static final com.google.protobuf.MapEntry<
          java.lang.Integer, java.lang.Integer> defaultEntry =
              com.google.protobuf.MapEntry
              .<java.lang.Integer, java.lang.Integer>newDefaultInstance(
                  protobuf_unittest.MapUnittest.internal_static_protobuf_unittest_TestArenaMap_MapFixed32Fixed32Entry_descriptor, 
                  com.google.protobuf.WireFormat.FieldType.FIXED32,
                  0,
                  com.google.protobuf.WireFormat.FieldType.FIXED32,
                  0);
    }
    private com.google.protobuf.MapField<
        java.lang.Integer, java.lang.Integer> mapFixed32Fixed32_;
    private com.google.protobuf.MapField<java.lang.Integer, java.lang.Integer>
    internalGetMapFixed32Fixed32() {
      if (mapFixed32Fixed32_ == null) {
        return com.google.protobuf.MapField.emptyMapField(
            MapFixed32Fixed32DefaultEntryHolder.defaultEntry);
      }
      return mapFixed32Fixed32_;
    }

    public int getMapFixed32Fixed32Count() {
      return internalGetMapFixed32Fixed32().getMap().size();
    }
    /**
     * <code>map&lt;fixed32, fixed32&gt; map_fixed32_fixed32 = 7;</code>
     */

    @java.lang.Override
    public boolean containsMapFixed32Fixed32(
        int key) {
      
      return internalGetMapFixed32Fixed32().getMap().containsKey(key);
    }
    /**
     * Use {@link #getMapFixed32Fixed32Map()} instead.
     */
    @java.lang.Override
    @java.lang.Deprecated
    public java.util.Map<java.lang.Integer, java.lang.Integer> getMapFixed32Fixed32() {
      return getMapFixed32Fixed32Map();
    }
    /**
     * <code>map&lt;fixed32, fixed32&gt; map_fixed32_fixed32 = 7;</code>
     */
    @java.lang.Override

    public java.util.Map<java.lang.Integer, java.lang.Integer> getMapFixed32Fixed32Map() {
      return internalGetMapFixed32Fixed32().getMap();
    }
    /**
     * <code>map&lt;fixed32, fixed32&gt; map_fixed32_fixed32 = 7;</code>
     */
    @java.lang.Override

    public int getMapFixed32Fixed32OrDefault(
        int key,
        int defaultValue) {
      
      java.util.Map<java.lang.Integer, java.lang.Integer> map =
          internalGetMapFixed32Fixed32().getMap();
      return map.containsKey(key) ? map.get(key) : defaultValue;
    }
    /**
     * <code>map&lt;fixed32, fixed32&gt; map_fixed32_fixed32 = 7;</code>
     */
    @java.lang.Override

    public int getMapFixed32Fixed32OrThrow(
        int key) {
      
      java.util.Map<java.lang.Integer, java.lang.Integer> map =
          internalGetMapFixed32Fixed32().getMap();
      if (!map.containsKey(key)) {
        throw new java.lang.IllegalArgumentException();
      }
      return map.get(key);
    }

    public static final int MAP_FIXED64_FIXED64_FIELD_NUMBER = 8;
    private static final class MapFixed64Fixed64DefaultEntryHolder {
      static final com.google.protobuf.MapEntry<
          java.lang.Long, java.lang.Long> defaultEntry =
              com.google.protobuf.MapEntry
              .<java.lang.Long, java.lang.Long>newDefaultInstance(
                  protobuf_unittest.MapUnittest.internal_static_protobuf_unittest_TestArenaMap_MapFixed64Fixed64Entry_descriptor, 
                  com.google.protobuf.WireFormat.FieldType.FIXED64,
                  0L,
                  com.google.protobuf.WireFormat.FieldType.FIXED64,
                  0L);
    }
    private com.google.protobuf.MapField<
        java.lang.Long, java.lang.Long> mapFixed64Fixed64_;
    private com.google.protobuf.MapField<java.lang.Long, java.lang.Long>
    internalGetMapFixed64Fixed64() {
      if (mapFixed64Fixed64_ == null) {
        return com.google.protobuf.MapField.emptyMapField(
            MapFixed64Fixed64DefaultEntryHolder.defaultEntry);
      }
      return mapFixed64Fixed64_;
    }

    public int getMapFixed64Fixed64Count() {
      return internalGetMapFixed64Fixed64().getMap().size();
    }
    /**
     * <code>map&lt;fixed64, fixed64&gt; map_fixed64_fixed64 = 8;</code>
     */

    @java.lang.Override
    public boolean containsMapFixed64Fixed64(
        long key) {
      
      return internalGetMapFixed64Fixed64().getMap().containsKey(key);
    }
    /**
     * Use {@link #getMapFixed64Fixed64Map()} instead.
     */
    @java.lang.Override
    @java.lang.Deprecated
    public java.util.Map<java.lang.Long, java.lang.Long> getMapFixed64Fixed64() {
      return getMapFixed64Fixed64Map();
    }
    /**
     * <code>map&lt;fixed64, fixed64&gt; map_fixed64_fixed64 = 8;</code>
     */
    @java.lang.Override

    public java.util.Map<java.lang.Long, java.lang.Long> getMapFixed64Fixed64Map() {
      return internalGetMapFixed64Fixed64().getMap();
    }
    /**
     * <code>map&lt;fixed64, fixed64&gt; map_fixed64_fixed64 = 8;</code>
     */
    @java.lang.Override

    public long getMapFixed64Fixed64OrDefault(
        long key,
        long defaultValue) {
      
      java.util.Map<java.lang.Long, java.lang.Long> map =
          internalGetMapFixed64Fixed64().getMap();
      return map.containsKey(key) ? map.get(key) : defaultValue;
    }
    /**
     * <code>map&lt;fixed64, fixed64&gt; map_fixed64_fixed64 = 8;</code>
     */
    @java.lang.Override

    public long getMapFixed64Fixed64OrThrow(
        long key) {
      
      java.util.Map<java.lang.Long, java.lang.Long> map =
          internalGetMapFixed64Fixed64().getMap();
      if (!map.containsKey(key)) {
        throw new java.lang.IllegalArgumentException();
      }
      return map.get(key);
    }

    public static final int MAP_SFIXED32_SFIXED32_FIELD_NUMBER = 9;
    private static final class MapSfixed32Sfixed32DefaultEntryHolder {
      static final com.google.protobuf.MapEntry<
          java.lang.Integer, java.lang.Integer> defaultEntry =
              com.google.protobuf.MapEntry
              .<java.lang.Integer, java.lang.Integer>newDefaultInstance(
                  protobuf_unittest.MapUnittest.internal_static_protobuf_unittest_TestArenaMap_MapSfixed32Sfixed32Entry_descriptor, 
                  com.google.protobuf.WireFormat.FieldType.SFIXED32,
                  0,
                  com.google.protobuf.WireFormat.FieldType.SFIXED32,
                  0);
    }
    private com.google.protobuf.MapField<
        java.lang.Integer, java.lang.Integer> mapSfixed32Sfixed32_;
    private com.google.protobuf.MapField<java.lang.Integer, java.lang.Integer>
    internalGetMapSfixed32Sfixed32() {
      if (mapSfixed32Sfixed32_ == null) {
        return com.google.protobuf.MapField.emptyMapField(
            MapSfixed32Sfixed32DefaultEntryHolder.defaultEntry);
      }
      return mapSfixed32Sfixed32_;
    }

    public int getMapSfixed32Sfixed32Count() {
      return internalGetMapSfixed32Sfixed32().getMap().size();
    }
    /**
     * <code>map&lt;sfixed32, sfixed32&gt; map_sfixed32_sfixed32 = 9;</code>
     */

    @java.lang.Override
    public boolean containsMapSfixed32Sfixed32(
        int key) {
      
      return internalGetMapSfixed32Sfixed32().getMap().containsKey(key);
    }
    /**
     * Use {@link #getMapSfixed32Sfixed32Map()} instead.
     */
    @java.lang.Override
    @java.lang.Deprecated
    public java.util.Map<java.lang.Integer, java.lang.Integer> getMapSfixed32Sfixed32() {
      return getMapSfixed32Sfixed32Map();
    }
    /**
     * <code>map&lt;sfixed32, sfixed32&gt; map_sfixed32_sfixed32 = 9;</code>
     */
    @java.lang.Override

    public java.util.Map<java.lang.Integer, java.lang.Integer> getMapSfixed32Sfixed32Map() {
      return internalGetMapSfixed32Sfixed32().getMap();
    }
    /**
     * <code>map&lt;sfixed32, sfixed32&gt; map_sfixed32_sfixed32 = 9;</code>
     */
    @java.lang.Override

    public int getMapSfixed32Sfixed32OrDefault(
        int key,
        int defaultValue) {
      
      java.util.Map<java.lang.Integer, java.lang.Integer> map =
          internalGetMapSfixed32Sfixed32().getMap();
      return map.containsKey(key) ? map.get(key) : defaultValue;
    }
    /**
     * <code>map&lt;sfixed32, sfixed32&gt; map_sfixed32_sfixed32 = 9;</code>
     */
    @java.lang.Override

    public int getMapSfixed32Sfixed32OrThrow(
        int key) {
      
      java.util.Map<java.lang.Integer, java.lang.Integer> map =
          internalGetMapSfixed32Sfixed32().getMap();
      if (!map.containsKey(key)) {
        throw new java.lang.IllegalArgumentException();
      }
      return map.get(key);
    }

    public static final int MAP_SFIXED64_SFIXED64_FIELD_NUMBER = 10;
    private static final class MapSfixed64Sfixed64DefaultEntryHolder {
      static final com.google.protobuf.MapEntry<
          java.lang.Long, java.lang.Long> defaultEntry =
              com.google.protobuf.MapEntry
              .<java.lang.Long, java.lang.Long>newDefaultInstance(
                  protobuf_unittest.MapUnittest.internal_static_protobuf_unittest_TestArenaMap_MapSfixed64Sfixed64Entry_descriptor, 
                  com.google.protobuf.WireFormat.FieldType.SFIXED64,
                  0L,
                  com.google.protobuf.WireFormat.FieldType.SFIXED64,
                  0L);
    }
    private com.google.protobuf.MapField<
        java.lang.Long, java.lang.Long> mapSfixed64Sfixed64_;
    private com.google.protobuf.MapField<java.lang.Long, java.lang.Long>
    internalGetMapSfixed64Sfixed64() {
      if (mapSfixed64Sfixed64_ == null) {
        return com.google.protobuf.MapField.emptyMapField(
            MapSfixed64Sfixed64DefaultEntryHolder.defaultEntry);
      }
      return mapSfixed64Sfixed64_;
    }

    public int getMapSfixed64Sfixed64Count() {
      return internalGetMapSfixed64Sfixed64().getMap().size();
    }
    /**
     * <code>map&lt;sfixed64, sfixed64&gt; map_sfixed64_sfixed64 = 10;</code>
     */

    @java.lang.Override
    public boolean containsMapSfixed64Sfixed64(
        long key) {
      
      return internalGetMapSfixed64Sfixed64().getMap().containsKey(key);
    }
    /**
     * Use {@link #getMapSfixed64Sfixed64Map()} instead.
     */
    @java.lang.Override
    @java.lang.Deprecated
    public java.util.Map<java.lang.Long, java.lang.Long> getMapSfixed64Sfixed64() {
      return getMapSfixed64Sfixed64Map();
    }
    /**
     * <code>map&lt;sfixed64, sfixed64&gt; map_sfixed64_sfixed64 = 10;</code>
     */
    @java.lang.Override

    public java.util.Map<java.lang.Long, java.lang.Long> getMapSfixed64Sfixed64Map() {
      return internalGetMapSfixed64Sfixed64().getMap();
    }
    /**
     * <code>map&lt;sfixed64, sfixed64&gt; map_sfixed64_sfixed64 = 10;</code>
     */
    @java.lang.Override

    public long getMapSfixed64Sfixed64OrDefault(
        long key,
        long defaultValue) {
      
      java.util.Map<java.lang.Long, java.lang.Long> map =
          internalGetMapSfixed64Sfixed64().getMap();
      return map.containsKey(key) ? map.get(key) : defaultValue;
    }
    /**
     * <code>map&lt;sfixed64, sfixed64&gt; map_sfixed64_sfixed64 = 10;</code>
     */
    @java.lang.Override

    public long getMapSfixed64Sfixed64OrThrow(
        long key) {
      
      java.util.Map<java.lang.Long, java.lang.Long> map =
          internalGetMapSfixed64Sfixed64().getMap();
      if (!map.containsKey(key)) {
        throw new java.lang.IllegalArgumentException();
      }
      return map.get(key);
    }

    public static final int MAP_INT32_FLOAT_FIELD_NUMBER = 11;
    private static final class MapInt32FloatDefaultEntryHolder {
      static final com.google.protobuf.MapEntry<
          java.lang.Integer, java.lang.Float> defaultEntry =
              com.google.protobuf.MapEntry
              .<java.lang.Integer, java.lang.Float>newDefaultInstance(
                  protobuf_unittest.MapUnittest.internal_static_protobuf_unittest_TestArenaMap_MapInt32FloatEntry_descriptor, 
                  com.google.protobuf.WireFormat.FieldType.INT32,
                  0,
                  com.google.protobuf.WireFormat.FieldType.FLOAT,
                  0F);
    }
    private com.google.protobuf.MapField<
        java.lang.Integer, java.lang.Float> mapInt32Float_;
    private com.google.protobuf.MapField<java.lang.Integer, java.lang.Float>
    internalGetMapInt32Float() {
      if (mapInt32Float_ == null) {
        return com.google.protobuf.MapField.emptyMapField(
            MapInt32FloatDefaultEntryHolder.defaultEntry);
      }
      return mapInt32Float_;
    }

    public int getMapInt32FloatCount() {
      return internalGetMapInt32Float().getMap().size();
    }
    /**
     * <code>map&lt;int32, float&gt; map_int32_float = 11;</code>
     */

    @java.lang.Override
    public boolean containsMapInt32Float(
        int key) {
      
      return internalGetMapInt32Float().getMap().containsKey(key);
    }
    /**
     * Use {@link #getMapInt32FloatMap()} instead.
     */
    @java.lang.Override
    @java.lang.Deprecated
    public java.util.Map<java.lang.Integer, java.lang.Float> getMapInt32Float() {
      return getMapInt32FloatMap();
    }
    /**
     * <code>map&lt;int32, float&gt; map_int32_float = 11;</code>
     */
    @java.lang.Override

    public java.util.Map<java.lang.Integer, java.lang.Float> getMapInt32FloatMap() {
      return internalGetMapInt32Float().getMap();
    }
    /**
     * <code>map&lt;int32, float&gt; map_int32_float = 11;</code>
     */
    @java.lang.Override

    public float getMapInt32FloatOrDefault(
        int key,
        float defaultValue) {
      
      java.util.Map<java.lang.Integer, java.lang.Float> map =
          internalGetMapInt32Float().getMap();
      return map.containsKey(key) ? map.get(key) : defaultValue;
    }
    /**
     * <code>map&lt;int32, float&gt; map_int32_float = 11;</code>
     */
    @java.lang.Override

    public float getMapInt32FloatOrThrow(
        int key) {
      
      java.util.Map<java.lang.Integer, java.lang.Float> map =
          internalGetMapInt32Float().getMap();
      if (!map.containsKey(key)) {
        throw new java.lang.IllegalArgumentException();
      }
      return map.get(key);
    }

    public static final int MAP_INT32_DOUBLE_FIELD_NUMBER = 12;
    private static final class MapInt32DoubleDefaultEntryHolder {
      static final com.google.protobuf.MapEntry<
          java.lang.Integer, java.lang.Double> defaultEntry =
              com.google.protobuf.MapEntry
              .<java.lang.Integer, java.lang.Double>newDefaultInstance(
                  protobuf_unittest.MapUnittest.internal_static_protobuf_unittest_TestArenaMap_MapInt32DoubleEntry_descriptor, 
                  com.google.protobuf.WireFormat.FieldType.INT32,
                  0,
                  com.google.protobuf.WireFormat.FieldType.DOUBLE,
                  0D);
    }
    private com.google.protobuf.MapField<
        java.lang.Integer, java.lang.Double> mapInt32Double_;
    private com.google.protobuf.MapField<java.lang.Integer, java.lang.Double>
    internalGetMapInt32Double() {
      if (mapInt32Double_ == null) {
        return com.google.protobuf.MapField.emptyMapField(
            MapInt32DoubleDefaultEntryHolder.defaultEntry);
      }
      return mapInt32Double_;
    }

    public int getMapInt32DoubleCount() {
      return internalGetMapInt32Double().getMap().size();
    }
    /**
     * <code>map&lt;int32, double&gt; map_int32_double = 12;</code>
     */

    @java.lang.Override
    public boolean containsMapInt32Double(
        int key) {
      
      return internalGetMapInt32Double().getMap().containsKey(key);
    }
    /**
     * Use {@link #getMapInt32DoubleMap()} instead.
     */
    @java.lang.Override
    @java.lang.Deprecated
    public java.util.Map<java.lang.Integer, java.lang.Double> getMapInt32Double() {
      return getMapInt32DoubleMap();
    }
    /**
     * <code>map&lt;int32, double&gt; map_int32_double = 12;</code>
     */
    @java.lang.Override

    public java.util.Map<java.lang.Integer, java.lang.Double> getMapInt32DoubleMap() {
      return internalGetMapInt32Double().getMap();
    }
    /**
     * <code>map&lt;int32, double&gt; map_int32_double = 12;</code>
     */
    @java.lang.Override

    public double getMapInt32DoubleOrDefault(
        int key,
        double defaultValue) {
      
      java.util.Map<java.lang.Integer, java.lang.Double> map =
          internalGetMapInt32Double().getMap();
      return map.containsKey(key) ? map.get(key) : defaultValue;
    }
    /**
     * <code>map&lt;int32, double&gt; map_int32_double = 12;</code>
     */
    @java.lang.Override

    public double getMapInt32DoubleOrThrow(
        int key) {
      
      java.util.Map<java.lang.Integer, java.lang.Double> map =
          internalGetMapInt32Double().getMap();
      if (!map.containsKey(key)) {
        throw new java.lang.IllegalArgumentException();
      }
      return map.get(key);
    }

    public static final int MAP_BOOL_BOOL_FIELD_NUMBER = 13;
    private static final class MapBoolBoolDefaultEntryHolder {
      static final com.google.protobuf.MapEntry<
          java.lang.Boolean, java.lang.Boolean> defaultEntry =
              com.google.protobuf.MapEntry
              .<java.lang.Boolean, java.lang.Boolean>newDefaultInstance(
                  protobuf_unittest.MapUnittest.internal_static_protobuf_unittest_TestArenaMap_MapBoolBoolEntry_descriptor, 
                  com.google.protobuf.WireFormat.FieldType.BOOL,
                  false,
                  com.google.protobuf.WireFormat.FieldType.BOOL,
                  false);
    }
    private com.google.protobuf.MapField<
        java.lang.Boolean, java.lang.Boolean> mapBoolBool_;
    private com.google.protobuf.MapField<java.lang.Boolean, java.lang.Boolean>
    internalGetMapBoolBool() {
      if (mapBoolBool_ == null) {
        return com.google.protobuf.MapField.emptyMapField(
            MapBoolBoolDefaultEntryHolder.defaultEntry);
      }
      return mapBoolBool_;
    }

    public int getMapBoolBoolCount() {
      return internalGetMapBoolBool().getMap().size();
    }
    /**
     * <code>map&lt;bool, bool&gt; map_bool_bool = 13;</code>
     */

    @java.lang.Override
    public boolean containsMapBoolBool(
        boolean key) {
      
      return internalGetMapBoolBool().getMap().containsKey(key);
    }
    /**
     * Use {@link #getMapBoolBoolMap()} instead.
     */
    @java.lang.Override
    @java.lang.Deprecated
    public java.util.Map<java.lang.Boolean, java.lang.Boolean> getMapBoolBool() {
      return getMapBoolBoolMap();
    }
    /**
     * <code>map&lt;bool, bool&gt; map_bool_bool = 13;</code>
     */
    @java.lang.Override

    public java.util.Map<java.lang.Boolean, java.lang.Boolean> getMapBoolBoolMap() {
      return internalGetMapBoolBool().getMap();
    }
    /**
     * <code>map&lt;bool, bool&gt; map_bool_bool = 13;</code>
     */
    @java.lang.Override

    public boolean getMapBoolBoolOrDefault(
        boolean key,
        boolean defaultValue) {
      
      java.util.Map<java.lang.Boolean, java.lang.Boolean> map =
          internalGetMapBoolBool().getMap();
      return map.containsKey(key) ? map.get(key) : defaultValue;
    }
    /**
     * <code>map&lt;bool, bool&gt; map_bool_bool = 13;</code>
     */
    @java.lang.Override

    public boolean getMapBoolBoolOrThrow(
        boolean key) {
      
      java.util.Map<java.lang.Boolean, java.lang.Boolean> map =
          internalGetMapBoolBool().getMap();
      if (!map.containsKey(key)) {
        throw new java.lang.IllegalArgumentException();
      }
      return map.get(key);
    }

    public static final int MAP_STRING_STRING_FIELD_NUMBER = 14;
    private static final class MapStringStringDefaultEntryHolder {
      static final com.google.protobuf.MapEntry<
          java.lang.String, java.lang.String> defaultEntry =
              com.google.protobuf.MapEntry
              .<java.lang.String, java.lang.String>newDefaultInstance(
                  protobuf_unittest.MapUnittest.internal_static_protobuf_unittest_TestArenaMap_MapStringStringEntry_descriptor, 
                  com.google.protobuf.WireFormat.FieldType.STRING,
                  "",
                  com.google.protobuf.WireFormat.FieldType.STRING,
                  "");
    }
    private com.google.protobuf.MapField<
        java.lang.String, java.lang.String> mapStringString_;
    private com.google.protobuf.MapField<java.lang.String, java.lang.String>
    internalGetMapStringString() {
      if (mapStringString_ == null) {
        return com.google.protobuf.MapField.emptyMapField(
            MapStringStringDefaultEntryHolder.defaultEntry);
      }
      return mapStringString_;
    }

    public int getMapStringStringCount() {
      return internalGetMapStringString().getMap().size();
    }
    /**
     * <code>map&lt;string, string&gt; map_string_string = 14;</code>
     */

    @java.lang.Override
    public boolean containsMapStringString(
        java.lang.String key) {
      if (key == null) { throw new NullPointerException("map key"); }
      return internalGetMapStringString().getMap().containsKey(key);
    }
    /**
     * Use {@link #getMapStringStringMap()} instead.
     */
    @java.lang.Override
    @java.lang.Deprecated
    public java.util.Map<java.lang.String, java.lang.String> getMapStringString() {
      return getMapStringStringMap();
    }
    /**
     * <code>map&lt;string, string&gt; map_string_string = 14;</code>
     */
    @java.lang.Override

    public java.util.Map<java.lang.String, java.lang.String> getMapStringStringMap() {
      return internalGetMapStringString().getMap();
    }
    /**
     * <code>map&lt;string, string&gt; map_string_string = 14;</code>
     */
    @java.lang.Override

    public java.lang.String getMapStringStringOrDefault(
        java.lang.String key,
        java.lang.String defaultValue) {
      if (key == null) { throw new NullPointerException("map key"); }
      java.util.Map<java.lang.String, java.lang.String> map =
          internalGetMapStringString().getMap();
      return map.containsKey(key) ? map.get(key) : defaultValue;
    }
    /**
     * <code>map&lt;string, string&gt; map_string_string = 14;</code>
     */
    @java.lang.Override

    public java.lang.String getMapStringStringOrThrow(
        java.lang.String key) {
      if (key == null) { throw new NullPointerException("map key"); }
      java.util.Map<java.lang.String, java.lang.String> map =
          internalGetMapStringString().getMap();
      if (!map.containsKey(key)) {
        throw new java.lang.IllegalArgumentException();
      }
      return map.get(key);
    }

    public static final int MAP_INT32_BYTES_FIELD_NUMBER = 15;
    private static final class MapInt32BytesDefaultEntryHolder {
      static final com.google.protobuf.MapEntry<
          java.lang.Integer, com.google.protobuf.ByteString> defaultEntry =
              com.google.protobuf.MapEntry
              .<java.lang.Integer, com.google.protobuf.ByteString>newDefaultInstance(
                  protobuf_unittest.MapUnittest.internal_static_protobuf_unittest_TestArenaMap_MapInt32BytesEntry_descriptor, 
                  com.google.protobuf.WireFormat.FieldType.INT32,
                  0,
                  com.google.protobuf.WireFormat.FieldType.BYTES,
                  com.google.protobuf.ByteString.EMPTY);
    }
    private com.google.protobuf.MapField<
        java.lang.Integer, com.google.protobuf.ByteString> mapInt32Bytes_;
    private com.google.protobuf.MapField<java.lang.Integer, com.google.protobuf.ByteString>
    internalGetMapInt32Bytes() {
      if (mapInt32Bytes_ == null) {
        return com.google.protobuf.MapField.emptyMapField(
            MapInt32BytesDefaultEntryHolder.defaultEntry);
      }
      return mapInt32Bytes_;
    }

    public int getMapInt32BytesCount() {
      return internalGetMapInt32Bytes().getMap().size();
    }
    /**
     * <code>map&lt;int32, bytes&gt; map_int32_bytes = 15;</code>
     */

    @java.lang.Override
    public boolean containsMapInt32Bytes(
        int key) {
      
      return internalGetMapInt32Bytes().getMap().containsKey(key);
    }
    /**
     * Use {@link #getMapInt32BytesMap()} instead.
     */
    @java.lang.Override
    @java.lang.Deprecated
    public java.util.Map<java.lang.Integer, com.google.protobuf.ByteString> getMapInt32Bytes() {
      return getMapInt32BytesMap();
    }
    /**
     * <code>map&lt;int32, bytes&gt; map_int32_bytes = 15;</code>
     */
    @java.lang.Override

    public java.util.Map<java.lang.Integer, com.google.protobuf.ByteString> getMapInt32BytesMap() {
      return internalGetMapInt32Bytes().getMap();
    }
    /**
     * <code>map&lt;int32, bytes&gt; map_int32_bytes = 15;</code>
     */
    @java.lang.Override

    public com.google.protobuf.ByteString getMapInt32BytesOrDefault(
        int key,
        com.google.protobuf.ByteString defaultValue) {
      
      java.util.Map<java.lang.Integer, com.google.protobuf.ByteString> map =
          internalGetMapInt32Bytes().getMap();
      return map.containsKey(key) ? map.get(key) : defaultValue;
    }
    /**
     * <code>map&lt;int32, bytes&gt; map_int32_bytes = 15;</code>
     */
    @java.lang.Override

    public com.google.protobuf.ByteString getMapInt32BytesOrThrow(
        int key) {
      
      java.util.Map<java.lang.Integer, com.google.protobuf.ByteString> map =
          internalGetMapInt32Bytes().getMap();
      if (!map.containsKey(key)) {
        throw new java.lang.IllegalArgumentException();
      }
      return map.get(key);
    }

    public static final int MAP_INT32_ENUM_FIELD_NUMBER = 16;
    private static final class MapInt32EnumDefaultEntryHolder {
      static final com.google.protobuf.MapEntry<
          java.lang.Integer, java.lang.Integer> defaultEntry =
              com.google.protobuf.MapEntry
              .<java.lang.Integer, java.lang.Integer>newDefaultInstance(
                  protobuf_unittest.MapUnittest.internal_static_protobuf_unittest_TestArenaMap_MapInt32EnumEntry_descriptor, 
                  com.google.protobuf.WireFormat.FieldType.INT32,
                  0,
                  com.google.protobuf.WireFormat.FieldType.ENUM,
                  protobuf_unittest.MapUnittest.MapEnum.MAP_ENUM_FOO.getNumber());
    }
    private com.google.protobuf.MapField<
        java.lang.Integer, java.lang.Integer> mapInt32Enum_;
    private com.google.protobuf.MapField<java.lang.Integer, java.lang.Integer>
    internalGetMapInt32Enum() {
      if (mapInt32Enum_ == null) {
        return com.google.protobuf.MapField.emptyMapField(
            MapInt32EnumDefaultEntryHolder.defaultEntry);
      }
      return mapInt32Enum_;
    }
    private static final
    com.google.protobuf.Internal.MapAdapter.Converter<
        java.lang.Integer, protobuf_unittest.MapUnittest.MapEnum> mapInt32EnumValueConverter =
            com.google.protobuf.Internal.MapAdapter.newEnumConverter(
                protobuf_unittest.MapUnittest.MapEnum.internalGetValueMap(),
                protobuf_unittest.MapUnittest.MapEnum.UNRECOGNIZED);
    private static final java.util.Map<java.lang.Integer, protobuf_unittest.MapUnittest.MapEnum>
    internalGetAdaptedMapInt32EnumMap(
        java.util.Map<java.lang.Integer, java.lang.Integer> map) {
      return new com.google.protobuf.Internal.MapAdapter<
          java.lang.Integer, protobuf_unittest.MapUnittest.MapEnum, java.lang.Integer>(
              map, mapInt32EnumValueConverter);
    }

    public int getMapInt32EnumCount() {
      return internalGetMapInt32Enum().getMap().size();
    }
    /**
     * <code>map&lt;int32, .protobuf_unittest.MapEnum&gt; map_int32_enum = 16;</code>
     */

    @java.lang.Override
    public boolean containsMapInt32Enum(
        int key) {
      
      return internalGetMapInt32Enum().getMap().containsKey(key);
    }
    /**
     * Use {@link #getMapInt32EnumMap()} instead.
     */
    @java.lang.Override
    @java.lang.Deprecated
    public java.util.Map<java.lang.Integer, protobuf_unittest.MapUnittest.MapEnum>
    getMapInt32Enum() {
      return getMapInt32EnumMap();
    }
    /**
     * <code>map&lt;int32, .protobuf_unittest.MapEnum&gt; map_int32_enum = 16;</code>
     */
    @java.lang.Override

    public java.util.Map<java.lang.Integer, protobuf_unittest.MapUnittest.MapEnum>
    getMapInt32EnumMap() {
      return internalGetAdaptedMapInt32EnumMap(
          internalGetMapInt32Enum().getMap());}
    /**
     * <code>map&lt;int32, .protobuf_unittest.MapEnum&gt; map_int32_enum = 16;</code>
     */
    @java.lang.Override

    public /* nullable */
protobuf_unittest.MapUnittest.MapEnum getMapInt32EnumOrDefault(
        int key,
        /* nullable */
protobuf_unittest.MapUnittest.MapEnum defaultValue) {
      
      java.util.Map<java.lang.Integer, java.lang.Integer> map =
          internalGetMapInt32Enum().getMap();
      return map.containsKey(key)
             ? mapInt32EnumValueConverter.doForward(map.get(key))
             : defaultValue;
    }
    /**
     * <code>map&lt;int32, .protobuf_unittest.MapEnum&gt; map_int32_enum = 16;</code>
     */
    @java.lang.Override

    public protobuf_unittest.MapUnittest.MapEnum getMapInt32EnumOrThrow(
        int key) {
      
      java.util.Map<java.lang.Integer, java.lang.Integer> map =
          internalGetMapInt32Enum().getMap();
      if (!map.containsKey(key)) {
        throw new java.lang.IllegalArgumentException();
      }
      return mapInt32EnumValueConverter.doForward(map.get(key));
    }
    /**
     * Use {@link #getMapInt32EnumValueMap()} instead.
     */
    @java.lang.Override
    @java.lang.Deprecated
    public java.util.Map<java.lang.Integer, java.lang.Integer>
    getMapInt32EnumValue() {
      return getMapInt32EnumValueMap();
    }
    /**
     * <code>map&lt;int32, .protobuf_unittest.MapEnum&gt; map_int32_enum = 16;</code>
     */
    @java.lang.Override

    public java.util.Map<java.lang.Integer, java.lang.Integer>
    getMapInt32EnumValueMap() {
      return internalGetMapInt32Enum().getMap();
    }
    /**
     * <code>map&lt;int32, .protobuf_unittest.MapEnum&gt; map_int32_enum = 16;</code>
     */
    @java.lang.Override

    public int getMapInt32EnumValueOrDefault(
        int key,
        int defaultValue) {
      
      java.util.Map<java.lang.Integer, java.lang.Integer> map =
          internalGetMapInt32Enum().getMap();
      return map.containsKey(key) ? map.get(key) : defaultValue;
    }
    /**
     * <code>map&lt;int32, .protobuf_unittest.MapEnum&gt; map_int32_enum = 16;</code>
     */
    @java.lang.Override

    public int getMapInt32EnumValueOrThrow(
        int key) {
      
      java.util.Map<java.lang.Integer, java.lang.Integer> map =
          internalGetMapInt32Enum().getMap();
      if (!map.containsKey(key)) {
        throw new java.lang.IllegalArgumentException();
      }
      return map.get(key);
    }

    public static final int MAP_INT32_FOREIGN_MESSAGE_FIELD_NUMBER = 17;
    private static final class MapInt32ForeignMessageDefaultEntryHolder {
      static final com.google.protobuf.MapEntry<
          java.lang.Integer, protobuf_unittest.UnittestProto.ForeignMessage> defaultEntry =
              com.google.protobuf.MapEntry
              .<java.lang.Integer, protobuf_unittest.UnittestProto.ForeignMessage>newDefaultInstance(
                  protobuf_unittest.MapUnittest.internal_static_protobuf_unittest_TestArenaMap_MapInt32ForeignMessageEntry_descriptor, 
                  com.google.protobuf.WireFormat.FieldType.INT32,
                  0,
                  com.google.protobuf.WireFormat.FieldType.MESSAGE,
                  protobuf_unittest.UnittestProto.ForeignMessage.getDefaultInstance());
    }
    private com.google.protobuf.MapField<
        java.lang.Integer, protobuf_unittest.UnittestProto.ForeignMessage> mapInt32ForeignMessage_;
    private com.google.protobuf.MapField<java.lang.Integer, protobuf_unittest.UnittestProto.ForeignMessage>
    internalGetMapInt32ForeignMessage() {
      if (mapInt32ForeignMessage_ == null) {
        return com.google.protobuf.MapField.emptyMapField(
            MapInt32ForeignMessageDefaultEntryHolder.defaultEntry);
      }
      return mapInt32ForeignMessage_;
    }

    public int getMapInt32ForeignMessageCount() {
      return internalGetMapInt32ForeignMessage().getMap().size();
    }
    /**
     * <code>map&lt;int32, .protobuf_unittest.ForeignMessage&gt; map_int32_foreign_message = 17;</code>
     */

    @java.lang.Override
    public boolean containsMapInt32ForeignMessage(
        int key) {
      
      return internalGetMapInt32ForeignMessage().getMap().containsKey(key);
    }
    /**
     * Use {@link #getMapInt32ForeignMessageMap()} instead.
     */
    @java.lang.Override
    @java.lang.Deprecated
    public java.util.Map<java.lang.Integer, protobuf_unittest.UnittestProto.ForeignMessage> getMapInt32ForeignMessage() {
      return getMapInt32ForeignMessageMap();
    }
    /**
     * <code>map&lt;int32, .protobuf_unittest.ForeignMessage&gt; map_int32_foreign_message = 17;</code>
     */
    @java.lang.Override

    public java.util.Map<java.lang.Integer, protobuf_unittest.UnittestProto.ForeignMessage> getMapInt32ForeignMessageMap() {
      return internalGetMapInt32ForeignMessage().getMap();
    }
    /**
     * <code>map&lt;int32, .protobuf_unittest.ForeignMessage&gt; map_int32_foreign_message = 17;</code>
     */
    @java.lang.Override

    public protobuf_unittest.UnittestProto.ForeignMessage getMapInt32ForeignMessageOrDefault(
        int key,
        protobuf_unittest.UnittestProto.ForeignMessage defaultValue) {
      
      java.util.Map<java.lang.Integer, protobuf_unittest.UnittestProto.ForeignMessage> map =
          internalGetMapInt32ForeignMessage().getMap();
      return map.containsKey(key) ? map.get(key) : defaultValue;
    }
    /**
     * <code>map&lt;int32, .protobuf_unittest.ForeignMessage&gt; map_int32_foreign_message = 17;</code>
     */
    @java.lang.Override

    public protobuf_unittest.UnittestProto.ForeignMessage getMapInt32ForeignMessageOrThrow(
        int key) {
      
      java.util.Map<java.lang.Integer, protobuf_unittest.UnittestProto.ForeignMessage> map =
          internalGetMapInt32ForeignMessage().getMap();
      if (!map.containsKey(key)) {
        throw new java.lang.IllegalArgumentException();
      }
      return map.get(key);
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      com.google.protobuf.GeneratedMessageV3
        .serializeIntegerMapTo(
          output,
          internalGetMapInt32Int32(),
          MapInt32Int32DefaultEntryHolder.defaultEntry,
          1);
      com.google.protobuf.GeneratedMessageV3
        .serializeLongMapTo(
          output,
          internalGetMapInt64Int64(),
          MapInt64Int64DefaultEntryHolder.defaultEntry,
          2);
      com.google.protobuf.GeneratedMessageV3
        .serializeIntegerMapTo(
          output,
          internalGetMapUint32Uint32(),
          MapUint32Uint32DefaultEntryHolder.defaultEntry,
          3);
      com.google.protobuf.GeneratedMessageV3
        .serializeLongMapTo(
          output,
          internalGetMapUint64Uint64(),
          MapUint64Uint64DefaultEntryHolder.defaultEntry,
          4);
      com.google.protobuf.GeneratedMessageV3
        .serializeIntegerMapTo(
          output,
          internalGetMapSint32Sint32(),
          MapSint32Sint32DefaultEntryHolder.defaultEntry,
          5);
      com.google.protobuf.GeneratedMessageV3
        .serializeLongMapTo(
          output,
          internalGetMapSint64Sint64(),
          MapSint64Sint64DefaultEntryHolder.defaultEntry,
          6);
      com.google.protobuf.GeneratedMessageV3
        .serializeIntegerMapTo(
          output,
          internalGetMapFixed32Fixed32(),
          MapFixed32Fixed32DefaultEntryHolder.defaultEntry,
          7);
      com.google.protobuf.GeneratedMessageV3
        .serializeLongMapTo(
          output,
          internalGetMapFixed64Fixed64(),
          MapFixed64Fixed64DefaultEntryHolder.defaultEntry,
          8);
      com.google.protobuf.GeneratedMessageV3
        .serializeIntegerMapTo(
          output,
          internalGetMapSfixed32Sfixed32(),
          MapSfixed32Sfixed32DefaultEntryHolder.defaultEntry,
          9);
      com.google.protobuf.GeneratedMessageV3
        .serializeLongMapTo(
          output,
          internalGetMapSfixed64Sfixed64(),
          MapSfixed64Sfixed64DefaultEntryHolder.defaultEntry,
          10);
      com.google.protobuf.GeneratedMessageV3
        .serializeIntegerMapTo(
          output,
          internalGetMapInt32Float(),
          MapInt32FloatDefaultEntryHolder.defaultEntry,
          11);
      com.google.protobuf.GeneratedMessageV3
        .serializeIntegerMapTo(
          output,
          internalGetMapInt32Double(),
          MapInt32DoubleDefaultEntryHolder.defaultEntry,
          12);
      com.google.protobuf.GeneratedMessageV3
        .serializeBooleanMapTo(
          output,
          internalGetMapBoolBool(),
          MapBoolBoolDefaultEntryHolder.defaultEntry,
          13);
      com.google.protobuf.GeneratedMessageV3
        .serializeStringMapTo(
          output,
          internalGetMapStringString(),
          MapStringStringDefaultEntryHolder.defaultEntry,
          14);
      com.google.protobuf.GeneratedMessageV3
        .serializeIntegerMapTo(
          output,
          internalGetMapInt32Bytes(),
          MapInt32BytesDefaultEntryHolder.defaultEntry,
          15);
      com.google.protobuf.GeneratedMessageV3
        .serializeIntegerMapTo(
          output,
          internalGetMapInt32Enum(),
          MapInt32EnumDefaultEntryHolder.defaultEntry,
          16);
      com.google.protobuf.GeneratedMessageV3
        .serializeIntegerMapTo(
          output,
          internalGetMapInt32ForeignMessage(),
          MapInt32ForeignMessageDefaultEntryHolder.defaultEntry,
          17);
      unknownFields.writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      for (java.util.Map.Entry<java.lang.Integer, java.lang.Integer> entry
           : internalGetMapInt32Int32().getMap().entrySet()) {
        com.google.protobuf.MapEntry<java.lang.Integer, java.lang.Integer>
        mapInt32Int32__ = MapInt32Int32DefaultEntryHolder.defaultEntry.newBuilderForType()
            .setKey(entry.getKey())
            .setValue(entry.getValue())
            .build();
        size += com.google.protobuf.CodedOutputStream
            .computeMessageSize(1, mapInt32Int32__);
      }
      for (java.util.Map.Entry<java.lang.Long, java.lang.Long> entry
           : internalGetMapInt64Int64().getMap().entrySet()) {
        com.google.protobuf.MapEntry<java.lang.Long, java.lang.Long>
        mapInt64Int64__ = MapInt64Int64DefaultEntryHolder.defaultEntry.newBuilderForType()
            .setKey(entry.getKey())
            .setValue(entry.getValue())
            .build();
        size += com.google.protobuf.CodedOutputStream
            .computeMessageSize(2, mapInt64Int64__);
      }
      for (java.util.Map.Entry<java.lang.Integer, java.lang.Integer> entry
           : internalGetMapUint32Uint32().getMap().entrySet()) {
        com.google.protobuf.MapEntry<java.lang.Integer, java.lang.Integer>
        mapUint32Uint32__ = MapUint32Uint32DefaultEntryHolder.defaultEntry.newBuilderForType()
            .setKey(entry.getKey())
            .setValue(entry.getValue())
            .build();
        size += com.google.protobuf.CodedOutputStream
            .computeMessageSize(3, mapUint32Uint32__);
      }
      for (java.util.Map.Entry<java.lang.Long, java.lang.Long> entry
           : internalGetMapUint64Uint64().getMap().entrySet()) {
        com.google.protobuf.MapEntry<java.lang.Long, java.lang.Long>
        mapUint64Uint64__ = MapUint64Uint64DefaultEntryHolder.defaultEntry.newBuilderForType()
            .setKey(entry.getKey())
            .setValue(entry.getValue())
            .build();
        size += com.google.protobuf.CodedOutputStream
            .computeMessageSize(4, mapUint64Uint64__);
      }
      for (java.util.Map.Entry<java.lang.Integer, java.lang.Integer> entry
           : internalGetMapSint32Sint32().getMap().entrySet()) {
        com.google.protobuf.MapEntry<java.lang.Integer, java.lang.Integer>
        mapSint32Sint32__ = MapSint32Sint32DefaultEntryHolder.defaultEntry.newBuilderForType()
            .setKey(entry.getKey())
            .setValue(entry.getValue())
            .build();
        size += com.google.protobuf.CodedOutputStream
            .computeMessageSize(5, mapSint32Sint32__);
      }
      for (java.util.Map.Entry<java.lang.Long, java.lang.Long> entry
           : internalGetMapSint64Sint64().getMap().entrySet()) {
        com.google.protobuf.MapEntry<java.lang.Long, java.lang.Long>
        mapSint64Sint64__ = MapSint64Sint64DefaultEntryHolder.defaultEntry.newBuilderForType()
            .setKey(entry.getKey())
            .setValue(entry.getValue())
            .build();
        size += com.google.protobuf.CodedOutputStream
            .computeMessageSize(6, mapSint64Sint64__);
      }
      for (java.util.Map.Entry<java.lang.Integer, java.lang.Integer> entry
           : internalGetMapFixed32Fixed32().getMap().entrySet()) {
        com.google.protobuf.MapEntry<java.lang.Integer, java.lang.Integer>
        mapFixed32Fixed32__ = MapFixed32Fixed32DefaultEntryHolder.defaultEntry.newBuilderForType()
            .setKey(entry.getKey())
            .setValue(entry.getValue())
            .build();
        size += com.google.protobuf.CodedOutputStream
            .computeMessageSize(7, mapFixed32Fixed32__);
      }
      for (java.util.Map.Entry<java.lang.Long, java.lang.Long> entry
           : internalGetMapFixed64Fixed64().getMap().entrySet()) {
        com.google.protobuf.MapEntry<java.lang.Long, java.lang.Long>
        mapFixed64Fixed64__ = MapFixed64Fixed64DefaultEntryHolder.defaultEntry.newBuilderForType()
            .setKey(entry.getKey())
            .setValue(entry.getValue())
            .build();
        size += com.google.protobuf.CodedOutputStream
            .computeMessageSize(8, mapFixed64Fixed64__);
      }
      for (java.util.Map.Entry<java.lang.Integer, java.lang.Integer> entry
           : internalGetMapSfixed32Sfixed32().getMap().entrySet()) {
        com.google.protobuf.MapEntry<java.lang.Integer, java.lang.Integer>
        mapSfixed32Sfixed32__ = MapSfixed32Sfixed32DefaultEntryHolder.defaultEntry.newBuilderForType()
            .setKey(entry.getKey())
            .setValue(entry.getValue())
            .build();
        size += com.google.protobuf.CodedOutputStream
            .computeMessageSize(9, mapSfixed32Sfixed32__);
      }
      for (java.util.Map.Entry<java.lang.Long, java.lang.Long> entry
           : internalGetMapSfixed64Sfixed64().getMap().entrySet()) {
        com.google.protobuf.MapEntry<java.lang.Long, java.lang.Long>
        mapSfixed64Sfixed64__ = MapSfixed64Sfixed64DefaultEntryHolder.defaultEntry.newBuilderForType()
            .setKey(entry.getKey())
            .setValue(entry.getValue())
            .build();
        size += com.google.protobuf.CodedOutputStream
            .computeMessageSize(10, mapSfixed64Sfixed64__);
      }
      for (java.util.Map.Entry<java.lang.Integer, java.lang.Float> entry
           : internalGetMapInt32Float().getMap().entrySet()) {
        com.google.protobuf.MapEntry<java.lang.Integer, java.lang.Float>
        mapInt32Float__ = MapInt32FloatDefaultEntryHolder.defaultEntry.newBuilderForType()
            .setKey(entry.getKey())
            .setValue(entry.getValue())
            .build();
        size += com.google.protobuf.CodedOutputStream
            .computeMessageSize(11, mapInt32Float__);
      }
      for (java.util.Map.Entry<java.lang.Integer, java.lang.Double> entry
           : internalGetMapInt32Double().getMap().entrySet()) {
        com.google.protobuf.MapEntry<java.lang.Integer, java.lang.Double>
        mapInt32Double__ = MapInt32DoubleDefaultEntryHolder.defaultEntry.newBuilderForType()
            .setKey(entry.getKey())
            .setValue(entry.getValue())
            .build();
        size += com.google.protobuf.CodedOutputStream
            .computeMessageSize(12, mapInt32Double__);
      }
      for (java.util.Map.Entry<java.lang.Boolean, java.lang.Boolean> entry
           : internalGetMapBoolBool().getMap().entrySet()) {
        com.google.protobuf.MapEntry<java.lang.Boolean, java.lang.Boolean>
        mapBoolBool__ = MapBoolBoolDefaultEntryHolder.defaultEntry.newBuilderForType()
            .setKey(entry.getKey())
            .setValue(entry.getValue())
            .build();
        size += com.google.protobuf.CodedOutputStream
            .computeMessageSize(13, mapBoolBool__);
      }
      for (java.util.Map.Entry<java.lang.String, java.lang.String> entry
           : internalGetMapStringString().getMap().entrySet()) {
        com.google.protobuf.MapEntry<java.lang.String, java.lang.String>
        mapStringString__ = MapStringStringDefaultEntryHolder.defaultEntry.newBuilderForType()
            .setKey(entry.getKey())
            .setValue(entry.getValue())
            .build();
        size += com.google.protobuf.CodedOutputStream
            .computeMessageSize(14, mapStringString__);
      }
      for (java.util.Map.Entry<java.lang.Integer, com.google.protobuf.ByteString> entry
           : internalGetMapInt32Bytes().getMap().entrySet()) {
        com.google.protobuf.MapEntry<java.lang.Integer, com.google.protobuf.ByteString>
        mapInt32Bytes__ = MapInt32BytesDefaultEntryHolder.defaultEntry.newBuilderForType()
            .setKey(entry.getKey())
            .setValue(entry.getValue())
            .build();
        size += com.google.protobuf.CodedOutputStream
            .computeMessageSize(15, mapInt32Bytes__);
      }
      for (java.util.Map.Entry<java.lang.Integer, java.lang.Integer> entry
           : internalGetMapInt32Enum().getMap().entrySet()) {
        com.google.protobuf.MapEntry<java.lang.Integer, java.lang.Integer>
        mapInt32Enum__ = MapInt32EnumDefaultEntryHolder.defaultEntry.newBuilderForType()
            .setKey(entry.getKey())
            .setValue(entry.getValue())
            .build();
        size += com.google.protobuf.CodedOutputStream
            .computeMessageSize(16, mapInt32Enum__);
      }
      for (java.util.Map.Entry<java.lang.Integer, protobuf_unittest.UnittestProto.ForeignMessage> entry
           : internalGetMapInt32ForeignMessage().getMap().entrySet()) {
        com.google.protobuf.MapEntry<java.lang.Integer, protobuf_unittest.UnittestProto.ForeignMessage>
        mapInt32ForeignMessage__ = MapInt32ForeignMessageDefaultEntryHolder.defaultEntry.newBuilderForType()
            .setKey(entry.getKey())
            .setValue(entry.getValue())
            .build();
        size += com.google.protobuf.CodedOutputStream
            .computeMessageSize(17, mapInt32ForeignMessage__);
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof protobuf_unittest.MapUnittest.TestArenaMap)) {
        return super.equals(obj);
      }
      protobuf_unittest.MapUnittest.TestArenaMap other = (protobuf_unittest.MapUnittest.TestArenaMap) obj;

      if (!internalGetMapInt32Int32().equals(
          other.internalGetMapInt32Int32())) return false;
      if (!internalGetMapInt64Int64().equals(
          other.internalGetMapInt64Int64())) return false;
      if (!internalGetMapUint32Uint32().equals(
          other.internalGetMapUint32Uint32())) return false;
      if (!internalGetMapUint64Uint64().equals(
          other.internalGetMapUint64Uint64())) return false;
      if (!internalGetMapSint32Sint32().equals(
          other.internalGetMapSint32Sint32())) return false;
      if (!internalGetMapSint64Sint64().equals(
          other.internalGetMapSint64Sint64())) return false;
      if (!internalGetMapFixed32Fixed32().equals(
          other.internalGetMapFixed32Fixed32())) return false;
      if (!internalGetMapFixed64Fixed64().equals(
          other.internalGetMapFixed64Fixed64())) return false;
      if (!internalGetMapSfixed32Sfixed32().equals(
          other.internalGetMapSfixed32Sfixed32())) return false;
      if (!internalGetMapSfixed64Sfixed64().equals(
          other.internalGetMapSfixed64Sfixed64())) return false;
      if (!internalGetMapInt32Float().equals(
          other.internalGetMapInt32Float())) return false;
      if (!internalGetMapInt32Double().equals(
          other.internalGetMapInt32Double())) return false;
      if (!internalGetMapBoolBool().equals(
          other.internalGetMapBoolBool())) return false;
      if (!internalGetMapStringString().equals(
          other.internalGetMapStringString())) return false;
      if (!internalGetMapInt32Bytes().equals(
          other.internalGetMapInt32Bytes())) return false;
      if (!internalGetMapInt32Enum().equals(
          other.internalGetMapInt32Enum())) return false;
      if (!internalGetMapInt32ForeignMessage().equals(
          other.internalGetMapInt32ForeignMessage())) return false;
      if (!unknownFields.equals(other.unknownFields)) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      if (!internalGetMapInt32Int32().getMap().isEmpty()) {
        hash = (37 * hash) + MAP_INT32_INT32_FIELD_NUMBER;
        hash = (53 * hash) + internalGetMapInt32Int32().hashCode();
      }
      if (!internalGetMapInt64Int64().getMap().isEmpty()) {
        hash = (37 * hash) + MAP_INT64_INT64_FIELD_NUMBER;
        hash = (53 * hash) + internalGetMapInt64Int64().hashCode();
      }
      if (!internalGetMapUint32Uint32().getMap().isEmpty()) {
        hash = (37 * hash) + MAP_UINT32_UINT32_FIELD_NUMBER;
        hash = (53 * hash) + internalGetMapUint32Uint32().hashCode();
      }
      if (!internalGetMapUint64Uint64().getMap().isEmpty()) {
        hash = (37 * hash) + MAP_UINT64_UINT64_FIELD_NUMBER;
        hash = (53 * hash) + internalGetMapUint64Uint64().hashCode();
      }
      if (!internalGetMapSint32Sint32().getMap().isEmpty()) {
        hash = (37 * hash) + MAP_SINT32_SINT32_FIELD_NUMBER;
        hash = (53 * hash) + internalGetMapSint32Sint32().hashCode();
      }
      if (!internalGetMapSint64Sint64().getMap().isEmpty()) {
        hash = (37 * hash) + MAP_SINT64_SINT64_FIELD_NUMBER;
        hash = (53 * hash) + internalGetMapSint64Sint64().hashCode();
      }
      if (!internalGetMapFixed32Fixed32().getMap().isEmpty()) {
        hash = (37 * hash) + MAP_FIXED32_FIXED32_FIELD_NUMBER;
        hash = (53 * hash) + internalGetMapFixed32Fixed32().hashCode();
      }
      if (!internalGetMapFixed64Fixed64().getMap().isEmpty()) {
        hash = (37 * hash) + MAP_FIXED64_FIXED64_FIELD_NUMBER;
        hash = (53 * hash) + internalGetMapFixed64Fixed64().hashCode();
      }
      if (!internalGetMapSfixed32Sfixed32().getMap().isEmpty()) {
        hash = (37 * hash) + MAP_SFIXED32_SFIXED32_FIELD_NUMBER;
        hash = (53 * hash) + internalGetMapSfixed32Sfixed32().hashCode();
      }
      if (!internalGetMapSfixed64Sfixed64().getMap().isEmpty()) {
        hash = (37 * hash) + MAP_SFIXED64_SFIXED64_FIELD_NUMBER;
        hash = (53 * hash) + internalGetMapSfixed64Sfixed64().hashCode();
      }
      if (!internalGetMapInt32Float().getMap().isEmpty()) {
        hash = (37 * hash) + MAP_INT32_FLOAT_FIELD_NUMBER;
        hash = (53 * hash) + internalGetMapInt32Float().hashCode();
      }
      if (!internalGetMapInt32Double().getMap().isEmpty()) {
        hash = (37 * hash) + MAP_INT32_DOUBLE_FIELD_NUMBER;
        hash = (53 * hash) + internalGetMapInt32Double().hashCode();
      }
      if (!internalGetMapBoolBool().getMap().isEmpty()) {
        hash = (37 * hash) + MAP_BOOL_BOOL_FIELD_NUMBER;
        hash = (53 * hash) + internalGetMapBoolBool().hashCode();
      }
      if (!internalGetMapStringString().getMap().isEmpty()) {
        hash = (37 * hash) + MAP_STRING_STRING_FIELD_NUMBER;
        hash = (53 * hash) + internalGetMapStringString().hashCode();
      }
      if (!internalGetMapInt32Bytes().getMap().isEmpty()) {
        hash = (37 * hash) + MAP_INT32_BYTES_FIELD_NUMBER;
        hash = (53 * hash) + internalGetMapInt32Bytes().hashCode();
      }
      if (!internalGetMapInt32Enum().getMap().isEmpty()) {
        hash = (37 * hash) + MAP_INT32_ENUM_FIELD_NUMBER;
        hash = (53 * hash) + internalGetMapInt32Enum().hashCode();
      }
      if (!internalGetMapInt32ForeignMessage().getMap().isEmpty()) {
        hash = (37 * hash) + MAP_INT32_FOREIGN_MESSAGE_FIELD_NUMBER;
        hash = (53 * hash) + internalGetMapInt32ForeignMessage().hashCode();
      }
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static protobuf_unittest.MapUnittest.TestArenaMap parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static protobuf_unittest.MapUnittest.TestArenaMap parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static protobuf_unittest.MapUnittest.TestArenaMap parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static protobuf_unittest.MapUnittest.TestArenaMap parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static protobuf_unittest.MapUnittest.TestArenaMap parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static protobuf_unittest.MapUnittest.TestArenaMap parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static protobuf_unittest.MapUnittest.TestArenaMap parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static protobuf_unittest.MapUnittest.TestArenaMap parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static protobuf_unittest.MapUnittest.TestArenaMap parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static protobuf_unittest.MapUnittest.TestArenaMap parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static protobuf_unittest.MapUnittest.TestArenaMap parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static protobuf_unittest.MapUnittest.TestArenaMap parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(protobuf_unittest.MapUnittest.TestArenaMap prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code protobuf_unittest.TestArenaMap}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:protobuf_unittest.TestArenaMap)
        protobuf_unittest.MapUnittest.TestArenaMapOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return protobuf_unittest.MapUnittest.internal_static_protobuf_unittest_TestArenaMap_descriptor;
      }

      @SuppressWarnings({"rawtypes"})
      protected com.google.protobuf.MapField internalGetMapField(
          int number) {
        switch (number) {
          case 1:
            return internalGetMapInt32Int32();
          case 2:
            return internalGetMapInt64Int64();
          case 3:
            return internalGetMapUint32Uint32();
          case 4:
            return internalGetMapUint64Uint64();
          case 5:
            return internalGetMapSint32Sint32();
          case 6:
            return internalGetMapSint64Sint64();
          case 7:
            return internalGetMapFixed32Fixed32();
          case 8:
            return internalGetMapFixed64Fixed64();
          case 9:
            return internalGetMapSfixed32Sfixed32();
          case 10:
            return internalGetMapSfixed64Sfixed64();
          case 11:
            return internalGetMapInt32Float();
          case 12:
            return internalGetMapInt32Double();
          case 13:
            return internalGetMapBoolBool();
          case 14:
            return internalGetMapStringString();
          case 15:
            return internalGetMapInt32Bytes();
          case 16:
            return internalGetMapInt32Enum();
          case 17:
            return internalGetMapInt32ForeignMessage();
          default:
            throw new RuntimeException(
                "Invalid map field number: " + number);
        }
      }
      @SuppressWarnings({"rawtypes"})
      protected com.google.protobuf.MapField internalGetMutableMapField(
          int number) {
        switch (number) {
          case 1:
            return internalGetMutableMapInt32Int32();
          case 2:
            return internalGetMutableMapInt64Int64();
          case 3:
            return internalGetMutableMapUint32Uint32();
          case 4:
            return internalGetMutableMapUint64Uint64();
          case 5:
            return internalGetMutableMapSint32Sint32();
          case 6:
            return internalGetMutableMapSint64Sint64();
          case 7:
            return internalGetMutableMapFixed32Fixed32();
          case 8:
            return internalGetMutableMapFixed64Fixed64();
          case 9:
            return internalGetMutableMapSfixed32Sfixed32();
          case 10:
            return internalGetMutableMapSfixed64Sfixed64();
          case 11:
            return internalGetMutableMapInt32Float();
          case 12:
            return internalGetMutableMapInt32Double();
          case 13:
            return internalGetMutableMapBoolBool();
          case 14:
            return internalGetMutableMapStringString();
          case 15:
            return internalGetMutableMapInt32Bytes();
          case 16:
            return internalGetMutableMapInt32Enum();
          case 17:
            return internalGetMutableMapInt32ForeignMessage();
          default:
            throw new RuntimeException(
                "Invalid map field number: " + number);
        }
      }
      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return protobuf_unittest.MapUnittest.internal_static_protobuf_unittest_TestArenaMap_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                protobuf_unittest.MapUnittest.TestArenaMap.class, protobuf_unittest.MapUnittest.TestArenaMap.Builder.class);
      }

      // Construct using protobuf_unittest.MapUnittest.TestArenaMap.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        internalGetMutableMapInt32Int32().clear();
        internalGetMutableMapInt64Int64().clear();
        internalGetMutableMapUint32Uint32().clear();
        internalGetMutableMapUint64Uint64().clear();
        internalGetMutableMapSint32Sint32().clear();
        internalGetMutableMapSint64Sint64().clear();
        internalGetMutableMapFixed32Fixed32().clear();
        internalGetMutableMapFixed64Fixed64().clear();
        internalGetMutableMapSfixed32Sfixed32().clear();
        internalGetMutableMapSfixed64Sfixed64().clear();
        internalGetMutableMapInt32Float().clear();
        internalGetMutableMapInt32Double().clear();
        internalGetMutableMapBoolBool().clear();
        internalGetMutableMapStringString().clear();
        internalGetMutableMapInt32Bytes().clear();
        internalGetMutableMapInt32Enum().clear();
        internalGetMutableMapInt32ForeignMessage().clear();
        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return protobuf_unittest.MapUnittest.internal_static_protobuf_unittest_TestArenaMap_descriptor;
      }

      @java.lang.Override
      public protobuf_unittest.MapUnittest.TestArenaMap getDefaultInstanceForType() {
        return protobuf_unittest.MapUnittest.TestArenaMap.getDefaultInstance();
      }

      @java.lang.Override
      public protobuf_unittest.MapUnittest.TestArenaMap build() {
        protobuf_unittest.MapUnittest.TestArenaMap result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public protobuf_unittest.MapUnittest.TestArenaMap buildPartial() {
        protobuf_unittest.MapUnittest.TestArenaMap result = new protobuf_unittest.MapUnittest.TestArenaMap(this);
        int from_bitField0_ = bitField0_;
        result.mapInt32Int32_ = internalGetMapInt32Int32();
        result.mapInt32Int32_.makeImmutable();
        result.mapInt64Int64_ = internalGetMapInt64Int64();
        result.mapInt64Int64_.makeImmutable();
        result.mapUint32Uint32_ = internalGetMapUint32Uint32();
        result.mapUint32Uint32_.makeImmutable();
        result.mapUint64Uint64_ = internalGetMapUint64Uint64();
        result.mapUint64Uint64_.makeImmutable();
        result.mapSint32Sint32_ = internalGetMapSint32Sint32();
        result.mapSint32Sint32_.makeImmutable();
        result.mapSint64Sint64_ = internalGetMapSint64Sint64();
        result.mapSint64Sint64_.makeImmutable();
        result.mapFixed32Fixed32_ = internalGetMapFixed32Fixed32();
        result.mapFixed32Fixed32_.makeImmutable();
        result.mapFixed64Fixed64_ = internalGetMapFixed64Fixed64();
        result.mapFixed64Fixed64_.makeImmutable();
        result.mapSfixed32Sfixed32_ = internalGetMapSfixed32Sfixed32();
        result.mapSfixed32Sfixed32_.makeImmutable();
        result.mapSfixed64Sfixed64_ = internalGetMapSfixed64Sfixed64();
        result.mapSfixed64Sfixed64_.makeImmutable();
        result.mapInt32Float_ = internalGetMapInt32Float();
        result.mapInt32Float_.makeImmutable();
        result.mapInt32Double_ = internalGetMapInt32Double();
        result.mapInt32Double_.makeImmutable();
        result.mapBoolBool_ = internalGetMapBoolBool();
        result.mapBoolBool_.makeImmutable();
        result.mapStringString_ = internalGetMapStringString();
        result.mapStringString_.makeImmutable();
        result.mapInt32Bytes_ = internalGetMapInt32Bytes();
        result.mapInt32Bytes_.makeImmutable();
        result.mapInt32Enum_ = internalGetMapInt32Enum();
        result.mapInt32Enum_.makeImmutable();
        result.mapInt32ForeignMessage_ = internalGetMapInt32ForeignMessage();
        result.mapInt32ForeignMessage_.makeImmutable();
        onBuilt();
        return result;
      }

      @java.lang.Override
      public Builder clone() {
        return super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof protobuf_unittest.MapUnittest.TestArenaMap) {
          return mergeFrom((protobuf_unittest.MapUnittest.TestArenaMap)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(protobuf_unittest.MapUnittest.TestArenaMap other) {
        if (other == protobuf_unittest.MapUnittest.TestArenaMap.getDefaultInstance()) return this;
        internalGetMutableMapInt32Int32().mergeFrom(
            other.internalGetMapInt32Int32());
        internalGetMutableMapInt64Int64().mergeFrom(
            other.internalGetMapInt64Int64());
        internalGetMutableMapUint32Uint32().mergeFrom(
            other.internalGetMapUint32Uint32());
        internalGetMutableMapUint64Uint64().mergeFrom(
            other.internalGetMapUint64Uint64());
        internalGetMutableMapSint32Sint32().mergeFrom(
            other.internalGetMapSint32Sint32());
        internalGetMutableMapSint64Sint64().mergeFrom(
            other.internalGetMapSint64Sint64());
        internalGetMutableMapFixed32Fixed32().mergeFrom(
            other.internalGetMapFixed32Fixed32());
        internalGetMutableMapFixed64Fixed64().mergeFrom(
            other.internalGetMapFixed64Fixed64());
        internalGetMutableMapSfixed32Sfixed32().mergeFrom(
            other.internalGetMapSfixed32Sfixed32());
        internalGetMutableMapSfixed64Sfixed64().mergeFrom(
            other.internalGetMapSfixed64Sfixed64());
        internalGetMutableMapInt32Float().mergeFrom(
            other.internalGetMapInt32Float());
        internalGetMutableMapInt32Double().mergeFrom(
            other.internalGetMapInt32Double());
        internalGetMutableMapBoolBool().mergeFrom(
            other.internalGetMapBoolBool());
        internalGetMutableMapStringString().mergeFrom(
            other.internalGetMapStringString());
        internalGetMutableMapInt32Bytes().mergeFrom(
            other.internalGetMapInt32Bytes());
        internalGetMutableMapInt32Enum().mergeFrom(
            other.internalGetMapInt32Enum());
        internalGetMutableMapInt32ForeignMessage().mergeFrom(
            other.internalGetMapInt32ForeignMessage());
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        protobuf_unittest.MapUnittest.TestArenaMap parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (protobuf_unittest.MapUnittest.TestArenaMap) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private com.google.protobuf.MapField<
          java.lang.Integer, java.lang.Integer> mapInt32Int32_;
      private com.google.protobuf.MapField<java.lang.Integer, java.lang.Integer>
      internalGetMapInt32Int32() {
        if (mapInt32Int32_ == null) {
          return com.google.protobuf.MapField.emptyMapField(
              MapInt32Int32DefaultEntryHolder.defaultEntry);
        }
        return mapInt32Int32_;
      }
      private com.google.protobuf.MapField<java.lang.Integer, java.lang.Integer>
      internalGetMutableMapInt32Int32() {
        onChanged();;
        if (mapInt32Int32_ == null) {
          mapInt32Int32_ = com.google.protobuf.MapField.newMapField(
              MapInt32Int32DefaultEntryHolder.defaultEntry);
        }
        if (!mapInt32Int32_.isMutable()) {
          mapInt32Int32_ = mapInt32Int32_.copy();
        }
        return mapInt32Int32_;
      }

      public int getMapInt32Int32Count() {
        return internalGetMapInt32Int32().getMap().size();
      }
      /**
       * <code>map&lt;int32, int32&gt; map_int32_int32 = 1;</code>
       */

      @java.lang.Override
      public boolean containsMapInt32Int32(
          int key) {
        
        return internalGetMapInt32Int32().getMap().containsKey(key);
      }
      /**
       * Use {@link #getMapInt32Int32Map()} instead.
       */
      @java.lang.Override
      @java.lang.Deprecated
      public java.util.Map<java.lang.Integer, java.lang.Integer> getMapInt32Int32() {
        return getMapInt32Int32Map();
      }
      /**
       * <code>map&lt;int32, int32&gt; map_int32_int32 = 1;</code>
       */
      @java.lang.Override

      public java.util.Map<java.lang.Integer, java.lang.Integer> getMapInt32Int32Map() {
        return internalGetMapInt32Int32().getMap();
      }
      /**
       * <code>map&lt;int32, int32&gt; map_int32_int32 = 1;</code>
       */
      @java.lang.Override

      public int getMapInt32Int32OrDefault(
          int key,
          int defaultValue) {
        
        java.util.Map<java.lang.Integer, java.lang.Integer> map =
            internalGetMapInt32Int32().getMap();
        return map.containsKey(key) ? map.get(key) : defaultValue;
      }
      /**
       * <code>map&lt;int32, int32&gt; map_int32_int32 = 1;</code>
       */
      @java.lang.Override

      public int getMapInt32Int32OrThrow(
          int key) {
        
        java.util.Map<java.lang.Integer, java.lang.Integer> map =
            internalGetMapInt32Int32().getMap();
        if (!map.containsKey(key)) {
          throw new java.lang.IllegalArgumentException();
        }
        return map.get(key);
      }

      public Builder clearMapInt32Int32() {
        internalGetMutableMapInt32Int32().getMutableMap()
            .clear();
        return this;
      }
      /**
       * <code>map&lt;int32, int32&gt; map_int32_int32 = 1;</code>
       */

      public Builder removeMapInt32Int32(
          int key) {
        
        internalGetMutableMapInt32Int32().getMutableMap()
            .remove(key);
        return this;
      }
      /**
       * Use alternate mutation accessors instead.
       */
      @java.lang.Deprecated
      public java.util.Map<java.lang.Integer, java.lang.Integer>
      getMutableMapInt32Int32() {
        return internalGetMutableMapInt32Int32().getMutableMap();
      }
      /**
       * <code>map&lt;int32, int32&gt; map_int32_int32 = 1;</code>
       */
      public Builder putMapInt32Int32(
          int key,
          int value) {
        
        
        internalGetMutableMapInt32Int32().getMutableMap()
            .put(key, value);
        return this;
      }
      /**
       * <code>map&lt;int32, int32&gt; map_int32_int32 = 1;</code>
       */

      public Builder putAllMapInt32Int32(
          java.util.Map<java.lang.Integer, java.lang.Integer> values) {
        internalGetMutableMapInt32Int32().getMutableMap()
            .putAll(values);
        return this;
      }

      private com.google.protobuf.MapField<
          java.lang.Long, java.lang.Long> mapInt64Int64_;
      private com.google.protobuf.MapField<java.lang.Long, java.lang.Long>
      internalGetMapInt64Int64() {
        if (mapInt64Int64_ == null) {
          return com.google.protobuf.MapField.emptyMapField(
              MapInt64Int64DefaultEntryHolder.defaultEntry);
        }
        return mapInt64Int64_;
      }
      private com.google.protobuf.MapField<java.lang.Long, java.lang.Long>
      internalGetMutableMapInt64Int64() {
        onChanged();;
        if (mapInt64Int64_ == null) {
          mapInt64Int64_ = com.google.protobuf.MapField.newMapField(
              MapInt64Int64DefaultEntryHolder.defaultEntry);
        }
        if (!mapInt64Int64_.isMutable()) {
          mapInt64Int64_ = mapInt64Int64_.copy();
        }
        return mapInt64Int64_;
      }

      public int getMapInt64Int64Count() {
        return internalGetMapInt64Int64().getMap().size();
      }
      /**
       * <code>map&lt;int64, int64&gt; map_int64_int64 = 2;</code>
       */

      @java.lang.Override
      public boolean containsMapInt64Int64(
          long key) {
        
        return internalGetMapInt64Int64().getMap().containsKey(key);
      }
      /**
       * Use {@link #getMapInt64Int64Map()} instead.
       */
      @java.lang.Override
      @java.lang.Deprecated
      public java.util.Map<java.lang.Long, java.lang.Long> getMapInt64Int64() {
        return getMapInt64Int64Map();
      }
      /**
       * <code>map&lt;int64, int64&gt; map_int64_int64 = 2;</code>
       */
      @java.lang.Override

      public java.util.Map<java.lang.Long, java.lang.Long> getMapInt64Int64Map() {
        return internalGetMapInt64Int64().getMap();
      }
      /**
       * <code>map&lt;int64, int64&gt; map_int64_int64 = 2;</code>
       */
      @java.lang.Override

      public long getMapInt64Int64OrDefault(
          long key,
          long defaultValue) {
        
        java.util.Map<java.lang.Long, java.lang.Long> map =
            internalGetMapInt64Int64().getMap();
        return map.containsKey(key) ? map.get(key) : defaultValue;
      }
      /**
       * <code>map&lt;int64, int64&gt; map_int64_int64 = 2;</code>
       */
      @java.lang.Override

      public long getMapInt64Int64OrThrow(
          long key) {
        
        java.util.Map<java.lang.Long, java.lang.Long> map =
            internalGetMapInt64Int64().getMap();
        if (!map.containsKey(key)) {
          throw new java.lang.IllegalArgumentException();
        }
        return map.get(key);
      }

      public Builder clearMapInt64Int64() {
        internalGetMutableMapInt64Int64().getMutableMap()
            .clear();
        return this;
      }
      /**
       * <code>map&lt;int64, int64&gt; map_int64_int64 = 2;</code>
       */

      public Builder removeMapInt64Int64(
          long key) {
        
        internalGetMutableMapInt64Int64().getMutableMap()
            .remove(key);
        return this;
      }
      /**
       * Use alternate mutation accessors instead.
       */
      @java.lang.Deprecated
      public java.util.Map<java.lang.Long, java.lang.Long>
      getMutableMapInt64Int64() {
        return internalGetMutableMapInt64Int64().getMutableMap();
      }
      /**
       * <code>map&lt;int64, int64&gt; map_int64_int64 = 2;</code>
       */
      public Builder putMapInt64Int64(
          long key,
          long value) {
        
        
        internalGetMutableMapInt64Int64().getMutableMap()
            .put(key, value);
        return this;
      }
      /**
       * <code>map&lt;int64, int64&gt; map_int64_int64 = 2;</code>
       */

      public Builder putAllMapInt64Int64(
          java.util.Map<java.lang.Long, java.lang.Long> values) {
        internalGetMutableMapInt64Int64().getMutableMap()
            .putAll(values);
        return this;
      }

      private com.google.protobuf.MapField<
          java.lang.Integer, java.lang.Integer> mapUint32Uint32_;
      private com.google.protobuf.MapField<java.lang.Integer, java.lang.Integer>
      internalGetMapUint32Uint32() {
        if (mapUint32Uint32_ == null) {
          return com.google.protobuf.MapField.emptyMapField(
              MapUint32Uint32DefaultEntryHolder.defaultEntry);
        }
        return mapUint32Uint32_;
      }
      private com.google.protobuf.MapField<java.lang.Integer, java.lang.Integer>
      internalGetMutableMapUint32Uint32() {
        onChanged();;
        if (mapUint32Uint32_ == null) {
          mapUint32Uint32_ = com.google.protobuf.MapField.newMapField(
              MapUint32Uint32DefaultEntryHolder.defaultEntry);
        }
        if (!mapUint32Uint32_.isMutable()) {
          mapUint32Uint32_ = mapUint32Uint32_.copy();
        }
        return mapUint32Uint32_;
      }

      public int getMapUint32Uint32Count() {
        return internalGetMapUint32Uint32().getMap().size();
      }
      /**
       * <code>map&lt;uint32, uint32&gt; map_uint32_uint32 = 3;</code>
       */

      @java.lang.Override
      public boolean containsMapUint32Uint32(
          int key) {
        
        return internalGetMapUint32Uint32().getMap().containsKey(key);
      }
      /**
       * Use {@link #getMapUint32Uint32Map()} instead.
       */
      @java.lang.Override
      @java.lang.Deprecated
      public java.util.Map<java.lang.Integer, java.lang.Integer> getMapUint32Uint32() {
        return getMapUint32Uint32Map();
      }
      /**
       * <code>map&lt;uint32, uint32&gt; map_uint32_uint32 = 3;</code>
       */
      @java.lang.Override

      public java.util.Map<java.lang.Integer, java.lang.Integer> getMapUint32Uint32Map() {
        return internalGetMapUint32Uint32().getMap();
      }
      /**
       * <code>map&lt;uint32, uint32&gt; map_uint32_uint32 = 3;</code>
       */
      @java.lang.Override

      public int getMapUint32Uint32OrDefault(
          int key,
          int defaultValue) {
        
        java.util.Map<java.lang.Integer, java.lang.Integer> map =
            internalGetMapUint32Uint32().getMap();
        return map.containsKey(key) ? map.get(key) : defaultValue;
      }
      /**
       * <code>map&lt;uint32, uint32&gt; map_uint32_uint32 = 3;</code>
       */
      @java.lang.Override

      public int getMapUint32Uint32OrThrow(
          int key) {
        
        java.util.Map<java.lang.Integer, java.lang.Integer> map =
            internalGetMapUint32Uint32().getMap();
        if (!map.containsKey(key)) {
          throw new java.lang.IllegalArgumentException();
        }
        return map.get(key);
      }

      public Builder clearMapUint32Uint32() {
        internalGetMutableMapUint32Uint32().getMutableMap()
            .clear();
        return this;
      }
      /**
       * <code>map&lt;uint32, uint32&gt; map_uint32_uint32 = 3;</code>
       */

      public Builder removeMapUint32Uint32(
          int key) {
        
        internalGetMutableMapUint32Uint32().getMutableMap()
            .remove(key);
        return this;
      }
      /**
       * Use alternate mutation accessors instead.
       */
      @java.lang.Deprecated
      public java.util.Map<java.lang.Integer, java.lang.Integer>
      getMutableMapUint32Uint32() {
        return internalGetMutableMapUint32Uint32().getMutableMap();
      }
      /**
       * <code>map&lt;uint32, uint32&gt; map_uint32_uint32 = 3;</code>
       */
      public Builder putMapUint32Uint32(
          int key,
          int value) {
        
        
        internalGetMutableMapUint32Uint32().getMutableMap()
            .put(key, value);
        return this;
      }
      /**
       * <code>map&lt;uint32, uint32&gt; map_uint32_uint32 = 3;</code>
       */

      public Builder putAllMapUint32Uint32(
          java.util.Map<java.lang.Integer, java.lang.Integer> values) {
        internalGetMutableMapUint32Uint32().getMutableMap()
            .putAll(values);
        return this;
      }

      private com.google.protobuf.MapField<
          java.lang.Long, java.lang.Long> mapUint64Uint64_;
      private com.google.protobuf.MapField<java.lang.Long, java.lang.Long>
      internalGetMapUint64Uint64() {
        if (mapUint64Uint64_ == null) {
          return com.google.protobuf.MapField.emptyMapField(
              MapUint64Uint64DefaultEntryHolder.defaultEntry);
        }
        return mapUint64Uint64_;
      }
      private com.google.protobuf.MapField<java.lang.Long, java.lang.Long>
      internalGetMutableMapUint64Uint64() {
        onChanged();;
        if (mapUint64Uint64_ == null) {
          mapUint64Uint64_ = com.google.protobuf.MapField.newMapField(
              MapUint64Uint64DefaultEntryHolder.defaultEntry);
        }
        if (!mapUint64Uint64_.isMutable()) {
          mapUint64Uint64_ = mapUint64Uint64_.copy();
        }
        return mapUint64Uint64_;
      }

      public int getMapUint64Uint64Count() {
        return internalGetMapUint64Uint64().getMap().size();
      }
      /**
       * <code>map&lt;uint64, uint64&gt; map_uint64_uint64 = 4;</code>
       */

      @java.lang.Override
      public boolean containsMapUint64Uint64(
          long key) {
        
        return internalGetMapUint64Uint64().getMap().containsKey(key);
      }
      /**
       * Use {@link #getMapUint64Uint64Map()} instead.
       */
      @java.lang.Override
      @java.lang.Deprecated
      public java.util.Map<java.lang.Long, java.lang.Long> getMapUint64Uint64() {
        return getMapUint64Uint64Map();
      }
      /**
       * <code>map&lt;uint64, uint64&gt; map_uint64_uint64 = 4;</code>
       */
      @java.lang.Override

      public java.util.Map<java.lang.Long, java.lang.Long> getMapUint64Uint64Map() {
        return internalGetMapUint64Uint64().getMap();
      }
      /**
       * <code>map&lt;uint64, uint64&gt; map_uint64_uint64 = 4;</code>
       */
      @java.lang.Override

      public long getMapUint64Uint64OrDefault(
          long key,
          long defaultValue) {
        
        java.util.Map<java.lang.Long, java.lang.Long> map =
            internalGetMapUint64Uint64().getMap();
        return map.containsKey(key) ? map.get(key) : defaultValue;
      }
      /**
       * <code>map&lt;uint64, uint64&gt; map_uint64_uint64 = 4;</code>
       */
      @java.lang.Override

      public long getMapUint64Uint64OrThrow(
          long key) {
        
        java.util.Map<java.lang.Long, java.lang.Long> map =
            internalGetMapUint64Uint64().getMap();
        if (!map.containsKey(key)) {
          throw new java.lang.IllegalArgumentException();
        }
        return map.get(key);
      }

      public Builder clearMapUint64Uint64() {
        internalGetMutableMapUint64Uint64().getMutableMap()
            .clear();
        return this;
      }
      /**
       * <code>map&lt;uint64, uint64&gt; map_uint64_uint64 = 4;</code>
       */

      public Builder removeMapUint64Uint64(
          long key) {
        
        internalGetMutableMapUint64Uint64().getMutableMap()
            .remove(key);
        return this;
      }
      /**
       * Use alternate mutation accessors instead.
       */
      @java.lang.Deprecated
      public java.util.Map<java.lang.Long, java.lang.Long>
      getMutableMapUint64Uint64() {
        return internalGetMutableMapUint64Uint64().getMutableMap();
      }
      /**
       * <code>map&lt;uint64, uint64&gt; map_uint64_uint64 = 4;</code>
       */
      public Builder putMapUint64Uint64(
          long key,
          long value) {
        
        
        internalGetMutableMapUint64Uint64().getMutableMap()
            .put(key, value);
        return this;
      }
      /**
       * <code>map&lt;uint64, uint64&gt; map_uint64_uint64 = 4;</code>
       */

      public Builder putAllMapUint64Uint64(
          java.util.Map<java.lang.Long, java.lang.Long> values) {
        internalGetMutableMapUint64Uint64().getMutableMap()
            .putAll(values);
        return this;
      }

      private com.google.protobuf.MapField<
          java.lang.Integer, java.lang.Integer> mapSint32Sint32_;
      private com.google.protobuf.MapField<java.lang.Integer, java.lang.Integer>
      internalGetMapSint32Sint32() {
        if (mapSint32Sint32_ == null) {
          return com.google.protobuf.MapField.emptyMapField(
              MapSint32Sint32DefaultEntryHolder.defaultEntry);
        }
        return mapSint32Sint32_;
      }
      private com.google.protobuf.MapField<java.lang.Integer, java.lang.Integer>
      internalGetMutableMapSint32Sint32() {
        onChanged();;
        if (mapSint32Sint32_ == null) {
          mapSint32Sint32_ = com.google.protobuf.MapField.newMapField(
              MapSint32Sint32DefaultEntryHolder.defaultEntry);
        }
        if (!mapSint32Sint32_.isMutable()) {
          mapSint32Sint32_ = mapSint32Sint32_.copy();
        }
        return mapSint32Sint32_;
      }

      public int getMapSint32Sint32Count() {
        return internalGetMapSint32Sint32().getMap().size();
      }
      /**
       * <code>map&lt;sint32, sint32&gt; map_sint32_sint32 = 5;</code>
       */

      @java.lang.Override
      public boolean containsMapSint32Sint32(
          int key) {
        
        return internalGetMapSint32Sint32().getMap().containsKey(key);
      }
      /**
       * Use {@link #getMapSint32Sint32Map()} instead.
       */
      @java.lang.Override
      @java.lang.Deprecated
      public java.util.Map<java.lang.Integer, java.lang.Integer> getMapSint32Sint32() {
        return getMapSint32Sint32Map();
      }
      /**
       * <code>map&lt;sint32, sint32&gt; map_sint32_sint32 = 5;</code>
       */
      @java.lang.Override

      public java.util.Map<java.lang.Integer, java.lang.Integer> getMapSint32Sint32Map() {
        return internalGetMapSint32Sint32().getMap();
      }
      /**
       * <code>map&lt;sint32, sint32&gt; map_sint32_sint32 = 5;</code>
       */
      @java.lang.Override

      public int getMapSint32Sint32OrDefault(
          int key,
          int defaultValue) {
        
        java.util.Map<java.lang.Integer, java.lang.Integer> map =
            internalGetMapSint32Sint32().getMap();
        return map.containsKey(key) ? map.get(key) : defaultValue;
      }
      /**
       * <code>map&lt;sint32, sint32&gt; map_sint32_sint32 = 5;</code>
       */
      @java.lang.Override

      public int getMapSint32Sint32OrThrow(
          int key) {
        
        java.util.Map<java.lang.Integer, java.lang.Integer> map =
            internalGetMapSint32Sint32().getMap();
        if (!map.containsKey(key)) {
          throw new java.lang.IllegalArgumentException();
        }
        return map.get(key);
      }

      public Builder clearMapSint32Sint32() {
        internalGetMutableMapSint32Sint32().getMutableMap()
            .clear();
        return this;
      }
      /**
       * <code>map&lt;sint32, sint32&gt; map_sint32_sint32 = 5;</code>
       */

      public Builder removeMapSint32Sint32(
          int key) {
        
        internalGetMutableMapSint32Sint32().getMutableMap()
            .remove(key);
        return this;
      }
      /**
       * Use alternate mutation accessors instead.
       */
      @java.lang.Deprecated
      public java.util.Map<java.lang.Integer, java.lang.Integer>
      getMutableMapSint32Sint32() {
        return internalGetMutableMapSint32Sint32().getMutableMap();
      }
      /**
       * <code>map&lt;sint32, sint32&gt; map_sint32_sint32 = 5;</code>
       */
      public Builder putMapSint32Sint32(
          int key,
          int value) {
        
        
        internalGetMutableMapSint32Sint32().getMutableMap()
            .put(key, value);
        return this;
      }
      /**
       * <code>map&lt;sint32, sint32&gt; map_sint32_sint32 = 5;</code>
       */

      public Builder putAllMapSint32Sint32(
          java.util.Map<java.lang.Integer, java.lang.Integer> values) {
        internalGetMutableMapSint32Sint32().getMutableMap()
            .putAll(values);
        return this;
      }

      private com.google.protobuf.MapField<
          java.lang.Long, java.lang.Long> mapSint64Sint64_;
      private com.google.protobuf.MapField<java.lang.Long, java.lang.Long>
      internalGetMapSint64Sint64() {
        if (mapSint64Sint64_ == null) {
          return com.google.protobuf.MapField.emptyMapField(
              MapSint64Sint64DefaultEntryHolder.defaultEntry);
        }
        return mapSint64Sint64_;
      }
      private com.google.protobuf.MapField<java.lang.Long, java.lang.Long>
      internalGetMutableMapSint64Sint64() {
        onChanged();;
        if (mapSint64Sint64_ == null) {
          mapSint64Sint64_ = com.google.protobuf.MapField.newMapField(
              MapSint64Sint64DefaultEntryHolder.defaultEntry);
        }
        if (!mapSint64Sint64_.isMutable()) {
          mapSint64Sint64_ = mapSint64Sint64_.copy();
        }
        return mapSint64Sint64_;
      }

      public int getMapSint64Sint64Count() {
        return internalGetMapSint64Sint64().getMap().size();
      }
      /**
       * <code>map&lt;sint64, sint64&gt; map_sint64_sint64 = 6;</code>
       */

      @java.lang.Override
      public boolean containsMapSint64Sint64(
          long key) {
        
        return internalGetMapSint64Sint64().getMap().containsKey(key);
      }
      /**
       * Use {@link #getMapSint64Sint64Map()} instead.
       */
      @java.lang.Override
      @java.lang.Deprecated
      public java.util.Map<java.lang.Long, java.lang.Long> getMapSint64Sint64() {
        return getMapSint64Sint64Map();
      }
      /**
       * <code>map&lt;sint64, sint64&gt; map_sint64_sint64 = 6;</code>
       */
      @java.lang.Override

      public java.util.Map<java.lang.Long, java.lang.Long> getMapSint64Sint64Map() {
        return internalGetMapSint64Sint64().getMap();
      }
      /**
       * <code>map&lt;sint64, sint64&gt; map_sint64_sint64 = 6;</code>
       */
      @java.lang.Override

      public long getMapSint64Sint64OrDefault(
          long key,
          long defaultValue) {
        
        java.util.Map<java.lang.Long, java.lang.Long> map =
            internalGetMapSint64Sint64().getMap();
        return map.containsKey(key) ? map.get(key) : defaultValue;
      }
      /**
       * <code>map&lt;sint64, sint64&gt; map_sint64_sint64 = 6;</code>
       */
      @java.lang.Override

      public long getMapSint64Sint64OrThrow(
          long key) {
        
        java.util.Map<java.lang.Long, java.lang.Long> map =
            internalGetMapSint64Sint64().getMap();
        if (!map.containsKey(key)) {
          throw new java.lang.IllegalArgumentException();
        }
        return map.get(key);
      }

      public Builder clearMapSint64Sint64() {
        internalGetMutableMapSint64Sint64().getMutableMap()
            .clear();
        return this;
      }
      /**
       * <code>map&lt;sint64, sint64&gt; map_sint64_sint64 = 6;</code>
       */

      public Builder removeMapSint64Sint64(
          long key) {
        
        internalGetMutableMapSint64Sint64().getMutableMap()
            .remove(key);
        return this;
      }
      /**
       * Use alternate mutation accessors instead.
       */
      @java.lang.Deprecated
      public java.util.Map<java.lang.Long, java.lang.Long>
      getMutableMapSint64Sint64() {
        return internalGetMutableMapSint64Sint64().getMutableMap();
      }
      /**
       * <code>map&lt;sint64, sint64&gt; map_sint64_sint64 = 6;</code>
       */
      public Builder putMapSint64Sint64(
          long key,
          long value) {
        
        
        internalGetMutableMapSint64Sint64().getMutableMap()
            .put(key, value);
        return this;
      }
      /**
       * <code>map&lt;sint64, sint64&gt; map_sint64_sint64 = 6;</code>
       */

      public Builder putAllMapSint64Sint64(
          java.util.Map<java.lang.Long, java.lang.Long> values) {
        internalGetMutableMapSint64Sint64().getMutableMap()
            .putAll(values);
        return this;
      }

      private com.google.protobuf.MapField<
          java.lang.Integer, java.lang.Integer> mapFixed32Fixed32_;
      private com.google.protobuf.MapField<java.lang.Integer, java.lang.Integer>
      internalGetMapFixed32Fixed32() {
        if (mapFixed32Fixed32_ == null) {
          return com.google.protobuf.MapField.emptyMapField(
              MapFixed32Fixed32DefaultEntryHolder.defaultEntry);
        }
        return mapFixed32Fixed32_;
      }
      private com.google.protobuf.MapField<java.lang.Integer, java.lang.Integer>
      internalGetMutableMapFixed32Fixed32() {
        onChanged();;
        if (mapFixed32Fixed32_ == null) {
          mapFixed32Fixed32_ = com.google.protobuf.MapField.newMapField(
              MapFixed32Fixed32DefaultEntryHolder.defaultEntry);
        }
        if (!mapFixed32Fixed32_.isMutable()) {
          mapFixed32Fixed32_ = mapFixed32Fixed32_.copy();
        }
        return mapFixed32Fixed32_;
      }

      public int getMapFixed32Fixed32Count() {
        return internalGetMapFixed32Fixed32().getMap().size();
      }
      /**
       * <code>map&lt;fixed32, fixed32&gt; map_fixed32_fixed32 = 7;</code>
       */

      @java.lang.Override
      public boolean containsMapFixed32Fixed32(
          int key) {
        
        return internalGetMapFixed32Fixed32().getMap().containsKey(key);
      }
      /**
       * Use {@link #getMapFixed32Fixed32Map()} instead.
       */
      @java.lang.Override
      @java.lang.Deprecated
      public java.util.Map<java.lang.Integer, java.lang.Integer> getMapFixed32Fixed32() {
        return getMapFixed32Fixed32Map();
      }
      /**
       * <code>map&lt;fixed32, fixed32&gt; map_fixed32_fixed32 = 7;</code>
       */
      @java.lang.Override

      public java.util.Map<java.lang.Integer, java.lang.Integer> getMapFixed32Fixed32Map() {
        return internalGetMapFixed32Fixed32().getMap();
      }
      /**
       * <code>map&lt;fixed32, fixed32&gt; map_fixed32_fixed32 = 7;</code>
       */
      @java.lang.Override

      public int getMapFixed32Fixed32OrDefault(
          int key,
          int defaultValue) {
        
        java.util.Map<java.lang.Integer, java.lang.Integer> map =
            internalGetMapFixed32Fixed32().getMap();
        return map.containsKey(key) ? map.get(key) : defaultValue;
      }
      /**
       * <code>map&lt;fixed32, fixed32&gt; map_fixed32_fixed32 = 7;</code>
       */
      @java.lang.Override

      public int getMapFixed32Fixed32OrThrow(
          int key) {
        
        java.util.Map<java.lang.Integer, java.lang.Integer> map =
            internalGetMapFixed32Fixed32().getMap();
        if (!map.containsKey(key)) {
          throw new java.lang.IllegalArgumentException();
        }
        return map.get(key);
      }

      public Builder clearMapFixed32Fixed32() {
        internalGetMutableMapFixed32Fixed32().getMutableMap()
            .clear();
        return this;
      }
      /**
       * <code>map&lt;fixed32, fixed32&gt; map_fixed32_fixed32 = 7;</code>
       */

      public Builder removeMapFixed32Fixed32(
          int key) {
        
        internalGetMutableMapFixed32Fixed32().getMutableMap()
            .remove(key);
        return this;
      }
      /**
       * Use alternate mutation accessors instead.
       */
      @java.lang.Deprecated
      public java.util.Map<java.lang.Integer, java.lang.Integer>
      getMutableMapFixed32Fixed32() {
        return internalGetMutableMapFixed32Fixed32().getMutableMap();
      }
      /**
       * <code>map&lt;fixed32, fixed32&gt; map_fixed32_fixed32 = 7;</code>
       */
      public Builder putMapFixed32Fixed32(
          int key,
          int value) {
        
        
        internalGetMutableMapFixed32Fixed32().getMutableMap()
            .put(key, value);
        return this;
      }
      /**
       * <code>map&lt;fixed32, fixed32&gt; map_fixed32_fixed32 = 7;</code>
       */

      public Builder putAllMapFixed32Fixed32(
          java.util.Map<java.lang.Integer, java.lang.Integer> values) {
        internalGetMutableMapFixed32Fixed32().getMutableMap()
            .putAll(values);
        return this;
      }

      private com.google.protobuf.MapField<
          java.lang.Long, java.lang.Long> mapFixed64Fixed64_;
      private com.google.protobuf.MapField<java.lang.Long, java.lang.Long>
      internalGetMapFixed64Fixed64() {
        if (mapFixed64Fixed64_ == null) {
          return com.google.protobuf.MapField.emptyMapField(
              MapFixed64Fixed64DefaultEntryHolder.defaultEntry);
        }
        return mapFixed64Fixed64_;
      }
      private com.google.protobuf.MapField<java.lang.Long, java.lang.Long>
      internalGetMutableMapFixed64Fixed64() {
        onChanged();;
        if (mapFixed64Fixed64_ == null) {
          mapFixed64Fixed64_ = com.google.protobuf.MapField.newMapField(
              MapFixed64Fixed64DefaultEntryHolder.defaultEntry);
        }
        if (!mapFixed64Fixed64_.isMutable()) {
          mapFixed64Fixed64_ = mapFixed64Fixed64_.copy();
        }
        return mapFixed64Fixed64_;
      }

      public int getMapFixed64Fixed64Count() {
        return internalGetMapFixed64Fixed64().getMap().size();
      }
      /**
       * <code>map&lt;fixed64, fixed64&gt; map_fixed64_fixed64 = 8;</code>
       */

      @java.lang.Override
      public boolean containsMapFixed64Fixed64(
          long key) {
        
        return internalGetMapFixed64Fixed64().getMap().containsKey(key);
      }
      /**
       * Use {@link #getMapFixed64Fixed64Map()} instead.
       */
      @java.lang.Override
      @java.lang.Deprecated
      public java.util.Map<java.lang.Long, java.lang.Long> getMapFixed64Fixed64() {
        return getMapFixed64Fixed64Map();
      }
      /**
       * <code>map&lt;fixed64, fixed64&gt; map_fixed64_fixed64 = 8;</code>
       */
      @java.lang.Override

      public java.util.Map<java.lang.Long, java.lang.Long> getMapFixed64Fixed64Map() {
        return internalGetMapFixed64Fixed64().getMap();
      }
      /**
       * <code>map&lt;fixed64, fixed64&gt; map_fixed64_fixed64 = 8;</code>
       */
      @java.lang.Override

      public long getMapFixed64Fixed64OrDefault(
          long key,
          long defaultValue) {
        
        java.util.Map<java.lang.Long, java.lang.Long> map =
            internalGetMapFixed64Fixed64().getMap();
        return map.containsKey(key) ? map.get(key) : defaultValue;
      }
      /**
       * <code>map&lt;fixed64, fixed64&gt; map_fixed64_fixed64 = 8;</code>
       */
      @java.lang.Override

      public long getMapFixed64Fixed64OrThrow(
          long key) {
        
        java.util.Map<java.lang.Long, java.lang.Long> map =
            internalGetMapFixed64Fixed64().getMap();
        if (!map.containsKey(key)) {
          throw new java.lang.IllegalArgumentException();
        }
        return map.get(key);
      }

      public Builder clearMapFixed64Fixed64() {
        internalGetMutableMapFixed64Fixed64().getMutableMap()
            .clear();
        return this;
      }
      /**
       * <code>map&lt;fixed64, fixed64&gt; map_fixed64_fixed64 = 8;</code>
       */

      public Builder removeMapFixed64Fixed64(
          long key) {
        
        internalGetMutableMapFixed64Fixed64().getMutableMap()
            .remove(key);
        return this;
      }
      /**
       * Use alternate mutation accessors instead.
       */
      @java.lang.Deprecated
      public java.util.Map<java.lang.Long, java.lang.Long>
      getMutableMapFixed64Fixed64() {
        return internalGetMutableMapFixed64Fixed64().getMutableMap();
      }
      /**
       * <code>map&lt;fixed64, fixed64&gt; map_fixed64_fixed64 = 8;</code>
       */
      public Builder putMapFixed64Fixed64(
          long key,
          long value) {
        
        
        internalGetMutableMapFixed64Fixed64().getMutableMap()
            .put(key, value);
        return this;
      }
      /**
       * <code>map&lt;fixed64, fixed64&gt; map_fixed64_fixed64 = 8;</code>
       */

      public Builder putAllMapFixed64Fixed64(
          java.util.Map<java.lang.Long, java.lang.Long> values) {
        internalGetMutableMapFixed64Fixed64().getMutableMap()
            .putAll(values);
        return this;
      }

      private com.google.protobuf.MapField<
          java.lang.Integer, java.lang.Integer> mapSfixed32Sfixed32_;
      private com.google.protobuf.MapField<java.lang.Integer, java.lang.Integer>
      internalGetMapSfixed32Sfixed32() {
        if (mapSfixed32Sfixed32_ == null) {
          return com.google.protobuf.MapField.emptyMapField(
              MapSfixed32Sfixed32DefaultEntryHolder.defaultEntry);
        }
        return mapSfixed32Sfixed32_;
      }
      private com.google.protobuf.MapField<java.lang.Integer, java.lang.Integer>
      internalGetMutableMapSfixed32Sfixed32() {
        onChanged();;
        if (mapSfixed32Sfixed32_ == null) {
          mapSfixed32Sfixed32_ = com.google.protobuf.MapField.newMapField(
              MapSfixed32Sfixed32DefaultEntryHolder.defaultEntry);
        }
        if (!mapSfixed32Sfixed32_.isMutable()) {
          mapSfixed32Sfixed32_ = mapSfixed32Sfixed32_.copy();
        }
        return mapSfixed32Sfixed32_;
      }

      public int getMapSfixed32Sfixed32Count() {
        return internalGetMapSfixed32Sfixed32().getMap().size();
      }
      /**
       * <code>map&lt;sfixed32, sfixed32&gt; map_sfixed32_sfixed32 = 9;</code>
       */

      @java.lang.Override
      public boolean containsMapSfixed32Sfixed32(
          int key) {
        
        return internalGetMapSfixed32Sfixed32().getMap().containsKey(key);
      }
      /**
       * Use {@link #getMapSfixed32Sfixed32Map()} instead.
       */
      @java.lang.Override
      @java.lang.Deprecated
      public java.util.Map<java.lang.Integer, java.lang.Integer> getMapSfixed32Sfixed32() {
        return getMapSfixed32Sfixed32Map();
      }
      /**
       * <code>map&lt;sfixed32, sfixed32&gt; map_sfixed32_sfixed32 = 9;</code>
       */
      @java.lang.Override

      public java.util.Map<java.lang.Integer, java.lang.Integer> getMapSfixed32Sfixed32Map() {
        return internalGetMapSfixed32Sfixed32().getMap();
      }
      /**
       * <code>map&lt;sfixed32, sfixed32&gt; map_sfixed32_sfixed32 = 9;</code>
       */
      @java.lang.Override

      public int getMapSfixed32Sfixed32OrDefault(
          int key,
          int defaultValue) {
        
        java.util.Map<java.lang.Integer, java.lang.Integer> map =
            internalGetMapSfixed32Sfixed32().getMap();
        return map.containsKey(key) ? map.get(key) : defaultValue;
      }
      /**
       * <code>map&lt;sfixed32, sfixed32&gt; map_sfixed32_sfixed32 = 9;</code>
       */
      @java.lang.Override

      public int getMapSfixed32Sfixed32OrThrow(
          int key) {
        
        java.util.Map<java.lang.Integer, java.lang.Integer> map =
            internalGetMapSfixed32Sfixed32().getMap();
        if (!map.containsKey(key)) {
          throw new java.lang.IllegalArgumentException();
        }
        return map.get(key);
      }

      public Builder clearMapSfixed32Sfixed32() {
        internalGetMutableMapSfixed32Sfixed32().getMutableMap()
            .clear();
        return this;
      }
      /**
       * <code>map&lt;sfixed32, sfixed32&gt; map_sfixed32_sfixed32 = 9;</code>
       */

      public Builder removeMapSfixed32Sfixed32(
          int key) {
        
        internalGetMutableMapSfixed32Sfixed32().getMutableMap()
            .remove(key);
        return this;
      }
      /**
       * Use alternate mutation accessors instead.
       */
      @java.lang.Deprecated
      public java.util.Map<java.lang.Integer, java.lang.Integer>
      getMutableMapSfixed32Sfixed32() {
        return internalGetMutableMapSfixed32Sfixed32().getMutableMap();
      }
      /**
       * <code>map&lt;sfixed32, sfixed32&gt; map_sfixed32_sfixed32 = 9;</code>
       */
      public Builder putMapSfixed32Sfixed32(
          int key,
          int value) {
        
        
        internalGetMutableMapSfixed32Sfixed32().getMutableMap()
            .put(key, value);
        return this;
      }
      /**
       * <code>map&lt;sfixed32, sfixed32&gt; map_sfixed32_sfixed32 = 9;</code>
       */

      public Builder putAllMapSfixed32Sfixed32(
          java.util.Map<java.lang.Integer, java.lang.Integer> values) {
        internalGetMutableMapSfixed32Sfixed32().getMutableMap()
            .putAll(values);
        return this;
      }

      private com.google.protobuf.MapField<
          java.lang.Long, java.lang.Long> mapSfixed64Sfixed64_;
      private com.google.protobuf.MapField<java.lang.Long, java.lang.Long>
      internalGetMapSfixed64Sfixed64() {
        if (mapSfixed64Sfixed64_ == null) {
          return com.google.protobuf.MapField.emptyMapField(
              MapSfixed64Sfixed64DefaultEntryHolder.defaultEntry);
        }
        return mapSfixed64Sfixed64_;
      }
      private com.google.protobuf.MapField<java.lang.Long, java.lang.Long>
      internalGetMutableMapSfixed64Sfixed64() {
        onChanged();;
        if (mapSfixed64Sfixed64_ == null) {
          mapSfixed64Sfixed64_ = com.google.protobuf.MapField.newMapField(
              MapSfixed64Sfixed64DefaultEntryHolder.defaultEntry);
        }
        if (!mapSfixed64Sfixed64_.isMutable()) {
          mapSfixed64Sfixed64_ = mapSfixed64Sfixed64_.copy();
        }
        return mapSfixed64Sfixed64_;
      }

      public int getMapSfixed64Sfixed64Count() {
        return internalGetMapSfixed64Sfixed64().getMap().size();
      }
      /**
       * <code>map&lt;sfixed64, sfixed64&gt; map_sfixed64_sfixed64 = 10;</code>
       */

      @java.lang.Override
      public boolean containsMapSfixed64Sfixed64(
          long key) {
        
        return internalGetMapSfixed64Sfixed64().getMap().containsKey(key);
      }
      /**
       * Use {@link #getMapSfixed64Sfixed64Map()} instead.
       */
      @java.lang.Override
      @java.lang.Deprecated
      public java.util.Map<java.lang.Long, java.lang.Long> getMapSfixed64Sfixed64() {
        return getMapSfixed64Sfixed64Map();
      }
      /**
       * <code>map&lt;sfixed64, sfixed64&gt; map_sfixed64_sfixed64 = 10;</code>
       */
      @java.lang.Override

      public java.util.Map<java.lang.Long, java.lang.Long> getMapSfixed64Sfixed64Map() {
        return internalGetMapSfixed64Sfixed64().getMap();
      }
      /**
       * <code>map&lt;sfixed64, sfixed64&gt; map_sfixed64_sfixed64 = 10;</code>
       */
      @java.lang.Override

      public long getMapSfixed64Sfixed64OrDefault(
          long key,
          long defaultValue) {
        
        java.util.Map<java.lang.Long, java.lang.Long> map =
            internalGetMapSfixed64Sfixed64().getMap();
        return map.containsKey(key) ? map.get(key) : defaultValue;
      }
      /**
       * <code>map&lt;sfixed64, sfixed64&gt; map_sfixed64_sfixed64 = 10;</code>
       */
      @java.lang.Override

      public long getMapSfixed64Sfixed64OrThrow(
          long key) {
        
        java.util.Map<java.lang.Long, java.lang.Long> map =
            internalGetMapSfixed64Sfixed64().getMap();
        if (!map.containsKey(key)) {
          throw new java.lang.IllegalArgumentException();
        }
        return map.get(key);
      }

      public Builder clearMapSfixed64Sfixed64() {
        internalGetMutableMapSfixed64Sfixed64().getMutableMap()
            .clear();
        return this;
      }
      /**
       * <code>map&lt;sfixed64, sfixed64&gt; map_sfixed64_sfixed64 = 10;</code>
       */

      public Builder removeMapSfixed64Sfixed64(
          long key) {
        
        internalGetMutableMapSfixed64Sfixed64().getMutableMap()
            .remove(key);
        return this;
      }
      /**
       * Use alternate mutation accessors instead.
       */
      @java.lang.Deprecated
      public java.util.Map<java.lang.Long, java.lang.Long>
      getMutableMapSfixed64Sfixed64() {
        return internalGetMutableMapSfixed64Sfixed64().getMutableMap();
      }
      /**
       * <code>map&lt;sfixed64, sfixed64&gt; map_sfixed64_sfixed64 = 10;</code>
       */
      public Builder putMapSfixed64Sfixed64(
          long key,
          long value) {
        
        
        internalGetMutableMapSfixed64Sfixed64().getMutableMap()
            .put(key, value);
        return this;
      }
      /**
       * <code>map&lt;sfixed64, sfixed64&gt; map_sfixed64_sfixed64 = 10;</code>
       */

      public Builder putAllMapSfixed64Sfixed64(
          java.util.Map<java.lang.Long, java.lang.Long> values) {
        internalGetMutableMapSfixed64Sfixed64().getMutableMap()
            .putAll(values);
        return this;
      }

      private com.google.protobuf.MapField<
          java.lang.Integer, java.lang.Float> mapInt32Float_;
      private com.google.protobuf.MapField<java.lang.Integer, java.lang.Float>
      internalGetMapInt32Float() {
        if (mapInt32Float_ == null) {
          return com.google.protobuf.MapField.emptyMapField(
              MapInt32FloatDefaultEntryHolder.defaultEntry);
        }
        return mapInt32Float_;
      }
      private com.google.protobuf.MapField<java.lang.Integer, java.lang.Float>
      internalGetMutableMapInt32Float() {
        onChanged();;
        if (mapInt32Float_ == null) {
          mapInt32Float_ = com.google.protobuf.MapField.newMapField(
              MapInt32FloatDefaultEntryHolder.defaultEntry);
        }
        if (!mapInt32Float_.isMutable()) {
          mapInt32Float_ = mapInt32Float_.copy();
        }
        return mapInt32Float_;
      }

      public int getMapInt32FloatCount() {
        return internalGetMapInt32Float().getMap().size();
      }
      /**
       * <code>map&lt;int32, float&gt; map_int32_float = 11;</code>
       */

      @java.lang.Override
      public boolean containsMapInt32Float(
          int key) {
        
        return internalGetMapInt32Float().getMap().containsKey(key);
      }
      /**
       * Use {@link #getMapInt32FloatMap()} instead.
       */
      @java.lang.Override
      @java.lang.Deprecated
      public java.util.Map<java.lang.Integer, java.lang.Float> getMapInt32Float() {
        return getMapInt32FloatMap();
      }
      /**
       * <code>map&lt;int32, float&gt; map_int32_float = 11;</code>
       */
      @java.lang.Override

      public java.util.Map<java.lang.Integer, java.lang.Float> getMapInt32FloatMap() {
        return internalGetMapInt32Float().getMap();
      }
      /**
       * <code>map&lt;int32, float&gt; map_int32_float = 11;</code>
       */
      @java.lang.Override

      public float getMapInt32FloatOrDefault(
          int key,
          float defaultValue) {
        
        java.util.Map<java.lang.Integer, java.lang.Float> map =
            internalGetMapInt32Float().getMap();
        return map.containsKey(key) ? map.get(key) : defaultValue;
      }
      /**
       * <code>map&lt;int32, float&gt; map_int32_float = 11;</code>
       */
      @java.lang.Override

      public float getMapInt32FloatOrThrow(
          int key) {
        
        java.util.Map<java.lang.Integer, java.lang.Float> map =
            internalGetMapInt32Float().getMap();
        if (!map.containsKey(key)) {
          throw new java.lang.IllegalArgumentException();
        }
        return map.get(key);
      }

      public Builder clearMapInt32Float() {
        internalGetMutableMapInt32Float().getMutableMap()
            .clear();
        return this;
      }
      /**
       * <code>map&lt;int32, float&gt; map_int32_float = 11;</code>
       */

      public Builder removeMapInt32Float(
          int key) {
        
        internalGetMutableMapInt32Float().getMutableMap()
            .remove(key);
        return this;
      }
      /**
       * Use alternate mutation accessors instead.
       */
      @java.lang.Deprecated
      public java.util.Map<java.lang.Integer, java.lang.Float>
      getMutableMapInt32Float() {
        return internalGetMutableMapInt32Float().getMutableMap();
      }
      /**
       * <code>map&lt;int32, float&gt; map_int32_float = 11;</code>
       */
      public Builder putMapInt32Float(
          int key,
          float value) {
        
        
        internalGetMutableMapInt32Float().getMutableMap()
            .put(key, value);
        return this;
      }
      /**
       * <code>map&lt;int32, float&gt; map_int32_float = 11;</code>
       */

      public Builder putAllMapInt32Float(
          java.util.Map<java.lang.Integer, java.lang.Float> values) {
        internalGetMutableMapInt32Float().getMutableMap()
            .putAll(values);
        return this;
      }

      private com.google.protobuf.MapField<
          java.lang.Integer, java.lang.Double> mapInt32Double_;
      private com.google.protobuf.MapField<java.lang.Integer, java.lang.Double>
      internalGetMapInt32Double() {
        if (mapInt32Double_ == null) {
          return com.google.protobuf.MapField.emptyMapField(
              MapInt32DoubleDefaultEntryHolder.defaultEntry);
        }
        return mapInt32Double_;
      }
      private com.google.protobuf.MapField<java.lang.Integer, java.lang.Double>
      internalGetMutableMapInt32Double() {
        onChanged();;
        if (mapInt32Double_ == null) {
          mapInt32Double_ = com.google.protobuf.MapField.newMapField(
              MapInt32DoubleDefaultEntryHolder.defaultEntry);
        }
        if (!mapInt32Double_.isMutable()) {
          mapInt32Double_ = mapInt32Double_.copy();
        }
        return mapInt32Double_;
      }

      public int getMapInt32DoubleCount() {
        return internalGetMapInt32Double().getMap().size();
      }
      /**
       * <code>map&lt;int32, double&gt; map_int32_double = 12;</code>
       */

      @java.lang.Override
      public boolean containsMapInt32Double(
          int key) {
        
        return internalGetMapInt32Double().getMap().containsKey(key);
      }
      /**
       * Use {@link #getMapInt32DoubleMap()} instead.
       */
      @java.lang.Override
      @java.lang.Deprecated
      public java.util.Map<java.lang.Integer, java.lang.Double> getMapInt32Double() {
        return getMapInt32DoubleMap();
      }
      /**
       * <code>map&lt;int32, double&gt; map_int32_double = 12;</code>
       */
      @java.lang.Override

      public java.util.Map<java.lang.Integer, java.lang.Double> getMapInt32DoubleMap() {
        return internalGetMapInt32Double().getMap();
      }
      /**
       * <code>map&lt;int32, double&gt; map_int32_double = 12;</code>
       */
      @java.lang.Override

      public double getMapInt32DoubleOrDefault(
          int key,
          double defaultValue) {
        
        java.util.Map<java.lang.Integer, java.lang.Double> map =
            internalGetMapInt32Double().getMap();
        return map.containsKey(key) ? map.get(key) : defaultValue;
      }
      /**
       * <code>map&lt;int32, double&gt; map_int32_double = 12;</code>
       */
      @java.lang.Override

      public double getMapInt32DoubleOrThrow(
          int key) {
        
        java.util.Map<java.lang.Integer, java.lang.Double> map =
            internalGetMapInt32Double().getMap();
        if (!map.containsKey(key)) {
          throw new java.lang.IllegalArgumentException();
        }
        return map.get(key);
      }

      public Builder clearMapInt32Double() {
        internalGetMutableMapInt32Double().getMutableMap()
            .clear();
        return this;
      }
      /**
       * <code>map&lt;int32, double&gt; map_int32_double = 12;</code>
       */

      public Builder removeMapInt32Double(
          int key) {
        
        internalGetMutableMapInt32Double().getMutableMap()
            .remove(key);
        return this;
      }
      /**
       * Use alternate mutation accessors instead.
       */
      @java.lang.Deprecated
      public java.util.Map<java.lang.Integer, java.lang.Double>
      getMutableMapInt32Double() {
        return internalGetMutableMapInt32Double().getMutableMap();
      }
      /**
       * <code>map&lt;int32, double&gt; map_int32_double = 12;</code>
       */
      public Builder putMapInt32Double(
          int key,
          double value) {
        
        
        internalGetMutableMapInt32Double().getMutableMap()
            .put(key, value);
        return this;
      }
      /**
       * <code>map&lt;int32, double&gt; map_int32_double = 12;</code>
       */

      public Builder putAllMapInt32Double(
          java.util.Map<java.lang.Integer, java.lang.Double> values) {
        internalGetMutableMapInt32Double().getMutableMap()
            .putAll(values);
        return this;
      }

      private com.google.protobuf.MapField<
          java.lang.Boolean, java.lang.Boolean> mapBoolBool_;
      private com.google.protobuf.MapField<java.lang.Boolean, java.lang.Boolean>
      internalGetMapBoolBool() {
        if (mapBoolBool_ == null) {
          return com.google.protobuf.MapField.emptyMapField(
              MapBoolBoolDefaultEntryHolder.defaultEntry);
        }
        return mapBoolBool_;
      }
      private com.google.protobuf.MapField<java.lang.Boolean, java.lang.Boolean>
      internalGetMutableMapBoolBool() {
        onChanged();;
        if (mapBoolBool_ == null) {
          mapBoolBool_ = com.google.protobuf.MapField.newMapField(
              MapBoolBoolDefaultEntryHolder.defaultEntry);
        }
        if (!mapBoolBool_.isMutable()) {
          mapBoolBool_ = mapBoolBool_.copy();
        }
        return mapBoolBool_;
      }

      public int getMapBoolBoolCount() {
        return internalGetMapBoolBool().getMap().size();
      }
      /**
       * <code>map&lt;bool, bool&gt; map_bool_bool = 13;</code>
       */

      @java.lang.Override
      public boolean containsMapBoolBool(
          boolean key) {
        
        return internalGetMapBoolBool().getMap().containsKey(key);
      }
      /**
       * Use {@link #getMapBoolBoolMap()} instead.
       */
      @java.lang.Override
      @java.lang.Deprecated
      public java.util.Map<java.lang.Boolean, java.lang.Boolean> getMapBoolBool() {
        return getMapBoolBoolMap();
      }
      /**
       * <code>map&lt;bool, bool&gt; map_bool_bool = 13;</code>
       */
      @java.lang.Override

      public java.util.Map<java.lang.Boolean, java.lang.Boolean> getMapBoolBoolMap() {
        return internalGetMapBoolBool().getMap();
      }
      /**
       * <code>map&lt;bool, bool&gt; map_bool_bool = 13;</code>
       */
      @java.lang.Override

      public boolean getMapBoolBoolOrDefault(
          boolean key,
          boolean defaultValue) {
        
        java.util.Map<java.lang.Boolean, java.lang.Boolean> map =
            internalGetMapBoolBool().getMap();
        return map.containsKey(key) ? map.get(key) : defaultValue;
      }
      /**
       * <code>map&lt;bool, bool&gt; map_bool_bool = 13;</code>
       */
      @java.lang.Override

      public boolean getMapBoolBoolOrThrow(
          boolean key) {
        
        java.util.Map<java.lang.Boolean, java.lang.Boolean> map =
            internalGetMapBoolBool().getMap();
        if (!map.containsKey(key)) {
          throw new java.lang.IllegalArgumentException();
        }
        return map.get(key);
      }

      public Builder clearMapBoolBool() {
        internalGetMutableMapBoolBool().getMutableMap()
            .clear();
        return this;
      }
      /**
       * <code>map&lt;bool, bool&gt; map_bool_bool = 13;</code>
       */

      public Builder removeMapBoolBool(
          boolean key) {
        
        internalGetMutableMapBoolBool().getMutableMap()
            .remove(key);
        return this;
      }
      /**
       * Use alternate mutation accessors instead.
       */
      @java.lang.Deprecated
      public java.util.Map<java.lang.Boolean, java.lang.Boolean>
      getMutableMapBoolBool() {
        return internalGetMutableMapBoolBool().getMutableMap();
      }
      /**
       * <code>map&lt;bool, bool&gt; map_bool_bool = 13;</code>
       */
      public Builder putMapBoolBool(
          boolean key,
          boolean value) {
        
        
        internalGetMutableMapBoolBool().getMutableMap()
            .put(key, value);
        return this;
      }
      /**
       * <code>map&lt;bool, bool&gt; map_bool_bool = 13;</code>
       */

      public Builder putAllMapBoolBool(
          java.util.Map<java.lang.Boolean, java.lang.Boolean> values) {
        internalGetMutableMapBoolBool().getMutableMap()
            .putAll(values);
        return this;
      }

      private com.google.protobuf.MapField<
          java.lang.String, java.lang.String> mapStringString_;
      private com.google.protobuf.MapField<java.lang.String, java.lang.String>
      internalGetMapStringString() {
        if (mapStringString_ == null) {
          return com.google.protobuf.MapField.emptyMapField(
              MapStringStringDefaultEntryHolder.defaultEntry);
        }
        return mapStringString_;
      }
      private com.google.protobuf.MapField<java.lang.String, java.lang.String>
      internalGetMutableMapStringString() {
        onChanged();;
        if (mapStringString_ == null) {
          mapStringString_ = com.google.protobuf.MapField.newMapField(
              MapStringStringDefaultEntryHolder.defaultEntry);
        }
        if (!mapStringString_.isMutable()) {
          mapStringString_ = mapStringString_.copy();
        }
        return mapStringString_;
      }

      public int getMapStringStringCount() {
        return internalGetMapStringString().getMap().size();
      }
      /**
       * <code>map&lt;string, string&gt; map_string_string = 14;</code>
       */

      @java.lang.Override
      public boolean containsMapStringString(
          java.lang.String key) {
        if (key == null) { throw new NullPointerException("map key"); }
        return internalGetMapStringString().getMap().containsKey(key);
      }
      /**
       * Use {@link #getMapStringStringMap()} instead.
       */
      @java.lang.Override
      @java.lang.Deprecated
      public java.util.Map<java.lang.String, java.lang.String> getMapStringString() {
        return getMapStringStringMap();
      }
      /**
       * <code>map&lt;string, string&gt; map_string_string = 14;</code>
       */
      @java.lang.Override

      public java.util.Map<java.lang.String, java.lang.String> getMapStringStringMap() {
        return internalGetMapStringString().getMap();
      }
      /**
       * <code>map&lt;string, string&gt; map_string_string = 14;</code>
       */
      @java.lang.Override

      public java.lang.String getMapStringStringOrDefault(
          java.lang.String key,
          java.lang.String defaultValue) {
        if (key == null) { throw new NullPointerException("map key"); }
        java.util.Map<java.lang.String, java.lang.String> map =
            internalGetMapStringString().getMap();
        return map.containsKey(key) ? map.get(key) : defaultValue;
      }
      /**
       * <code>map&lt;string, string&gt; map_string_string = 14;</code>
       */
      @java.lang.Override

      public java.lang.String getMapStringStringOrThrow(
          java.lang.String key) {
        if (key == null) { throw new NullPointerException("map key"); }
        java.util.Map<java.lang.String, java.lang.String> map =
            internalGetMapStringString().getMap();
        if (!map.containsKey(key)) {
          throw new java.lang.IllegalArgumentException();
        }
        return map.get(key);
      }

      public Builder clearMapStringString() {
        internalGetMutableMapStringString().getMutableMap()
            .clear();
        return this;
      }
      /**
       * <code>map&lt;string, string&gt; map_string_string = 14;</code>
       */

      public Builder removeMapStringString(
          java.lang.String key) {
        if (key == null) { throw new NullPointerException("map key"); }
        internalGetMutableMapStringString().getMutableMap()
            .remove(key);
        return this;
      }
      /**
       * Use alternate mutation accessors instead.
       */
      @java.lang.Deprecated
      public java.util.Map<java.lang.String, java.lang.String>
      getMutableMapStringString() {
        return internalGetMutableMapStringString().getMutableMap();
      }
      /**
       * <code>map&lt;string, string&gt; map_string_string = 14;</code>
       */
      public Builder putMapStringString(
          java.lang.String key,
          java.lang.String value) {
        if (key == null) { throw new NullPointerException("map key"); }
        if (value == null) {
  throw new NullPointerException("map value");
}

        internalGetMutableMapStringString().getMutableMap()
            .put(key, value);
        return this;
      }
      /**
       * <code>map&lt;string, string&gt; map_string_string = 14;</code>
       */

      public Builder putAllMapStringString(
          java.util.Map<java.lang.String, java.lang.String> values) {
        internalGetMutableMapStringString().getMutableMap()
            .putAll(values);
        return this;
      }

      private com.google.protobuf.MapField<
          java.lang.Integer, com.google.protobuf.ByteString> mapInt32Bytes_;
      private com.google.protobuf.MapField<java.lang.Integer, com.google.protobuf.ByteString>
      internalGetMapInt32Bytes() {
        if (mapInt32Bytes_ == null) {
          return com.google.protobuf.MapField.emptyMapField(
              MapInt32BytesDefaultEntryHolder.defaultEntry);
        }
        return mapInt32Bytes_;
      }
      private com.google.protobuf.MapField<java.lang.Integer, com.google.protobuf.ByteString>
      internalGetMutableMapInt32Bytes() {
        onChanged();;
        if (mapInt32Bytes_ == null) {
          mapInt32Bytes_ = com.google.protobuf.MapField.newMapField(
              MapInt32BytesDefaultEntryHolder.defaultEntry);
        }
        if (!mapInt32Bytes_.isMutable()) {
          mapInt32Bytes_ = mapInt32Bytes_.copy();
        }
        return mapInt32Bytes_;
      }

      public int getMapInt32BytesCount() {
        return internalGetMapInt32Bytes().getMap().size();
      }
      /**
       * <code>map&lt;int32, bytes&gt; map_int32_bytes = 15;</code>
       */

      @java.lang.Override
      public boolean containsMapInt32Bytes(
          int key) {
        
        return internalGetMapInt32Bytes().getMap().containsKey(key);
      }
      /**
       * Use {@link #getMapInt32BytesMap()} instead.
       */
      @java.lang.Override
      @java.lang.Deprecated
      public java.util.Map<java.lang.Integer, com.google.protobuf.ByteString> getMapInt32Bytes() {
        return getMapInt32BytesMap();
      }
      /**
       * <code>map&lt;int32, bytes&gt; map_int32_bytes = 15;</code>
       */
      @java.lang.Override

      public java.util.Map<java.lang.Integer, com.google.protobuf.ByteString> getMapInt32BytesMap() {
        return internalGetMapInt32Bytes().getMap();
      }
      /**
       * <code>map&lt;int32, bytes&gt; map_int32_bytes = 15;</code>
       */
      @java.lang.Override

      public com.google.protobuf.ByteString getMapInt32BytesOrDefault(
          int key,
          com.google.protobuf.ByteString defaultValue) {
        
        java.util.Map<java.lang.Integer, com.google.protobuf.ByteString> map =
            internalGetMapInt32Bytes().getMap();
        return map.containsKey(key) ? map.get(key) : defaultValue;
      }
      /**
       * <code>map&lt;int32, bytes&gt; map_int32_bytes = 15;</code>
       */
      @java.lang.Override

      public com.google.protobuf.ByteString getMapInt32BytesOrThrow(
          int key) {
        
        java.util.Map<java.lang.Integer, com.google.protobuf.ByteString> map =
            internalGetMapInt32Bytes().getMap();
        if (!map.containsKey(key)) {
          throw new java.lang.IllegalArgumentException();
        }
        return map.get(key);
      }

      public Builder clearMapInt32Bytes() {
        internalGetMutableMapInt32Bytes().getMutableMap()
            .clear();
        return this;
      }
      /**
       * <code>map&lt;int32, bytes&gt; map_int32_bytes = 15;</code>
       */

      public Builder removeMapInt32Bytes(
          int key) {
        
        internalGetMutableMapInt32Bytes().getMutableMap()
            .remove(key);
        return this;
      }
      /**
       * Use alternate mutation accessors instead.
       */
      @java.lang.Deprecated
      public java.util.Map<java.lang.Integer, com.google.protobuf.ByteString>
      getMutableMapInt32Bytes() {
        return internalGetMutableMapInt32Bytes().getMutableMap();
      }
      /**
       * <code>map&lt;int32, bytes&gt; map_int32_bytes = 15;</code>
       */
      public Builder putMapInt32Bytes(
          int key,
          com.google.protobuf.ByteString value) {
        
        if (value == null) {
  throw new NullPointerException("map value");
}

        internalGetMutableMapInt32Bytes().getMutableMap()
            .put(key, value);
        return this;
      }
      /**
       * <code>map&lt;int32, bytes&gt; map_int32_bytes = 15;</code>
       */

      public Builder putAllMapInt32Bytes(
          java.util.Map<java.lang.Integer, com.google.protobuf.ByteString> values) {
        internalGetMutableMapInt32Bytes().getMutableMap()
            .putAll(values);
        return this;
      }

      private com.google.protobuf.MapField<
          java.lang.Integer, java.lang.Integer> mapInt32Enum_;
      private com.google.protobuf.MapField<java.lang.Integer, java.lang.Integer>
      internalGetMapInt32Enum() {
        if (mapInt32Enum_ == null) {
          return com.google.protobuf.MapField.emptyMapField(
              MapInt32EnumDefaultEntryHolder.defaultEntry);
        }
        return mapInt32Enum_;
      }
      private com.google.protobuf.MapField<java.lang.Integer, java.lang.Integer>
      internalGetMutableMapInt32Enum() {
        onChanged();;
        if (mapInt32Enum_ == null) {
          mapInt32Enum_ = com.google.protobuf.MapField.newMapField(
              MapInt32EnumDefaultEntryHolder.defaultEntry);
        }
        if (!mapInt32Enum_.isMutable()) {
          mapInt32Enum_ = mapInt32Enum_.copy();
        }
        return mapInt32Enum_;
      }

      public int getMapInt32EnumCount() {
        return internalGetMapInt32Enum().getMap().size();
      }
      /**
       * <code>map&lt;int32, .protobuf_unittest.MapEnum&gt; map_int32_enum = 16;</code>
       */

      @java.lang.Override
      public boolean containsMapInt32Enum(
          int key) {
        
        return internalGetMapInt32Enum().getMap().containsKey(key);
      }
      /**
       * Use {@link #getMapInt32EnumMap()} instead.
       */
      @java.lang.Override
      @java.lang.Deprecated
      public java.util.Map<java.lang.Integer, protobuf_unittest.MapUnittest.MapEnum>
      getMapInt32Enum() {
        return getMapInt32EnumMap();
      }
      /**
       * <code>map&lt;int32, .protobuf_unittest.MapEnum&gt; map_int32_enum = 16;</code>
       */
      @java.lang.Override

      public java.util.Map<java.lang.Integer, protobuf_unittest.MapUnittest.MapEnum>
      getMapInt32EnumMap() {
        return internalGetAdaptedMapInt32EnumMap(
            internalGetMapInt32Enum().getMap());}
      /**
       * <code>map&lt;int32, .protobuf_unittest.MapEnum&gt; map_int32_enum = 16;</code>
       */
      @java.lang.Override

      public /* nullable */
protobuf_unittest.MapUnittest.MapEnum getMapInt32EnumOrDefault(
          int key,
          /* nullable */
protobuf_unittest.MapUnittest.MapEnum defaultValue) {
        
        java.util.Map<java.lang.Integer, java.lang.Integer> map =
            internalGetMapInt32Enum().getMap();
        return map.containsKey(key)
               ? mapInt32EnumValueConverter.doForward(map.get(key))
               : defaultValue;
      }
      /**
       * <code>map&lt;int32, .protobuf_unittest.MapEnum&gt; map_int32_enum = 16;</code>
       */
      @java.lang.Override

      public protobuf_unittest.MapUnittest.MapEnum getMapInt32EnumOrThrow(
          int key) {
        
        java.util.Map<java.lang.Integer, java.lang.Integer> map =
            internalGetMapInt32Enum().getMap();
        if (!map.containsKey(key)) {
          throw new java.lang.IllegalArgumentException();
        }
        return mapInt32EnumValueConverter.doForward(map.get(key));
      }
      /**
       * Use {@link #getMapInt32EnumValueMap()} instead.
       */
      @java.lang.Override
      @java.lang.Deprecated
      public java.util.Map<java.lang.Integer, java.lang.Integer>
      getMapInt32EnumValue() {
        return getMapInt32EnumValueMap();
      }
      /**
       * <code>map&lt;int32, .protobuf_unittest.MapEnum&gt; map_int32_enum = 16;</code>
       */
      @java.lang.Override

      public java.util.Map<java.lang.Integer, java.lang.Integer>
      getMapInt32EnumValueMap() {
        return internalGetMapInt32Enum().getMap();
      }
      /**
       * <code>map&lt;int32, .protobuf_unittest.MapEnum&gt; map_int32_enum = 16;</code>
       */
      @java.lang.Override

      public int getMapInt32EnumValueOrDefault(
          int key,
          int defaultValue) {
        
        java.util.Map<java.lang.Integer, java.lang.Integer> map =
            internalGetMapInt32Enum().getMap();
        return map.containsKey(key) ? map.get(key) : defaultValue;
      }
      /**
       * <code>map&lt;int32, .protobuf_unittest.MapEnum&gt; map_int32_enum = 16;</code>
       */
      @java.lang.Override

      public int getMapInt32EnumValueOrThrow(
          int key) {
        
        java.util.Map<java.lang.Integer, java.lang.Integer> map =
            internalGetMapInt32Enum().getMap();
        if (!map.containsKey(key)) {
          throw new java.lang.IllegalArgumentException();
        }
        return map.get(key);
      }

      public Builder clearMapInt32Enum() {
        internalGetMutableMapInt32Enum().getMutableMap()
            .clear();
        return this;
      }
      /**
       * <code>map&lt;int32, .protobuf_unittest.MapEnum&gt; map_int32_enum = 16;</code>
       */

      public Builder removeMapInt32Enum(
          int key) {
        
        internalGetMutableMapInt32Enum().getMutableMap()
            .remove(key);
        return this;
      }
      /**
       * Use alternate mutation accessors instead.
       */
      @java.lang.Deprecated
      public java.util.Map<java.lang.Integer, protobuf_unittest.MapUnittest.MapEnum>
      getMutableMapInt32Enum() {
        return internalGetAdaptedMapInt32EnumMap(
             internalGetMutableMapInt32Enum().getMutableMap());
      }
      /**
       * <code>map&lt;int32, .protobuf_unittest.MapEnum&gt; map_int32_enum = 16;</code>
       */
      public Builder putMapInt32Enum(
          int key,
          protobuf_unittest.MapUnittest.MapEnum value) {
        
        
        internalGetMutableMapInt32Enum().getMutableMap()
            .put(key, mapInt32EnumValueConverter.doBackward(value));
        return this;
      }
      /**
       * <code>map&lt;int32, .protobuf_unittest.MapEnum&gt; map_int32_enum = 16;</code>
       */
      public Builder putAllMapInt32Enum(
          java.util.Map<java.lang.Integer, protobuf_unittest.MapUnittest.MapEnum> values) {
        internalGetAdaptedMapInt32EnumMap(
            internalGetMutableMapInt32Enum().getMutableMap())
                .putAll(values);
        return this;
      }
      /**
       * Use alternate mutation accessors instead.
       */
      @java.lang.Deprecated
      public java.util.Map<java.lang.Integer, java.lang.Integer>
      getMutableMapInt32EnumValue() {
        return internalGetMutableMapInt32Enum().getMutableMap();
      }
      /**
       * <code>map&lt;int32, .protobuf_unittest.MapEnum&gt; map_int32_enum = 16;</code>
       */
      public Builder putMapInt32EnumValue(
          int key,
          int value) {
        
        
        internalGetMutableMapInt32Enum().getMutableMap()
            .put(key, value);
        return this;
      }
      /**
       * <code>map&lt;int32, .protobuf_unittest.MapEnum&gt; map_int32_enum = 16;</code>
       */
      public Builder putAllMapInt32EnumValue(
          java.util.Map<java.lang.Integer, java.lang.Integer> values) {
        internalGetMutableMapInt32Enum().getMutableMap()
            .putAll(values);
        return this;
      }

      private com.google.protobuf.MapField<
          java.lang.Integer, protobuf_unittest.UnittestProto.ForeignMessage> mapInt32ForeignMessage_;
      private com.google.protobuf.MapField<java.lang.Integer, protobuf_unittest.UnittestProto.ForeignMessage>
      internalGetMapInt32ForeignMessage() {
        if (mapInt32ForeignMessage_ == null) {
          return com.google.protobuf.MapField.emptyMapField(
              MapInt32ForeignMessageDefaultEntryHolder.defaultEntry);
        }
        return mapInt32ForeignMessage_;
      }
      private com.google.protobuf.MapField<java.lang.Integer, protobuf_unittest.UnittestProto.ForeignMessage>
      internalGetMutableMapInt32ForeignMessage() {
        onChanged();;
        if (mapInt32ForeignMessage_ == null) {
          mapInt32ForeignMessage_ = com.google.protobuf.MapField.newMapField(
              MapInt32ForeignMessageDefaultEntryHolder.defaultEntry);
        }
        if (!mapInt32ForeignMessage_.isMutable()) {
          mapInt32ForeignMessage_ = mapInt32ForeignMessage_.copy();
        }
        return mapInt32ForeignMessage_;
      }

      public int getMapInt32ForeignMessageCount() {
        return internalGetMapInt32ForeignMessage().getMap().size();
      }
      /**
       * <code>map&lt;int32, .protobuf_unittest.ForeignMessage&gt; map_int32_foreign_message = 17;</code>
       */

      @java.lang.Override
      public boolean containsMapInt32ForeignMessage(
          int key) {
        
        return internalGetMapInt32ForeignMessage().getMap().containsKey(key);
      }
      /**
       * Use {@link #getMapInt32ForeignMessageMap()} instead.
       */
      @java.lang.Override
      @java.lang.Deprecated
      public java.util.Map<java.lang.Integer, protobuf_unittest.UnittestProto.ForeignMessage> getMapInt32ForeignMessage() {
        return getMapInt32ForeignMessageMap();
      }
      /**
       * <code>map&lt;int32, .protobuf_unittest.ForeignMessage&gt; map_int32_foreign_message = 17;</code>
       */
      @java.lang.Override

      public java.util.Map<java.lang.Integer, protobuf_unittest.UnittestProto.ForeignMessage> getMapInt32ForeignMessageMap() {
        return internalGetMapInt32ForeignMessage().getMap();
      }
      /**
       * <code>map&lt;int32, .protobuf_unittest.ForeignMessage&gt; map_int32_foreign_message = 17;</code>
       */
      @java.lang.Override

      public protobuf_unittest.UnittestProto.ForeignMessage getMapInt32ForeignMessageOrDefault(
          int key,
          protobuf_unittest.UnittestProto.ForeignMessage defaultValue) {
        
        java.util.Map<java.lang.Integer, protobuf_unittest.UnittestProto.ForeignMessage> map =
            internalGetMapInt32ForeignMessage().getMap();
        return map.containsKey(key) ? map.get(key) : defaultValue;
      }
      /**
       * <code>map&lt;int32, .protobuf_unittest.ForeignMessage&gt; map_int32_foreign_message = 17;</code>
       */
      @java.lang.Override

      public protobuf_unittest.UnittestProto.ForeignMessage getMapInt32ForeignMessageOrThrow(
          int key) {
        
        java.util.Map<java.lang.Integer, protobuf_unittest.UnittestProto.ForeignMessage> map =
            internalGetMapInt32ForeignMessage().getMap();
        if (!map.containsKey(key)) {
          throw new java.lang.IllegalArgumentException();
        }
        return map.get(key);
      }

      public Builder clearMapInt32ForeignMessage() {
        internalGetMutableMapInt32ForeignMessage().getMutableMap()
            .clear();
        return this;
      }
      /**
       * <code>map&lt;int32, .protobuf_unittest.ForeignMessage&gt; map_int32_foreign_message = 17;</code>
       */

      public Builder removeMapInt32ForeignMessage(
          int key) {
        
        internalGetMutableMapInt32ForeignMessage().getMutableMap()
            .remove(key);
        return this;
      }
      /**
       * Use alternate mutation accessors instead.
       */
      @java.lang.Deprecated
      public java.util.Map<java.lang.Integer, protobuf_unittest.UnittestProto.ForeignMessage>
      getMutableMapInt32ForeignMessage() {
        return internalGetMutableMapInt32ForeignMessage().getMutableMap();
      }
      /**
       * <code>map&lt;int32, .protobuf_unittest.ForeignMessage&gt; map_int32_foreign_message = 17;</code>
       */
      public Builder putMapInt32ForeignMessage(
          int key,
          protobuf_unittest.UnittestProto.ForeignMessage value) {
        
        if (value == null) {
  throw new NullPointerException("map value");
}

        internalGetMutableMapInt32ForeignMessage().getMutableMap()
            .put(key, value);
        return this;
      }
      /**
       * <code>map&lt;int32, .protobuf_unittest.ForeignMessage&gt; map_int32_foreign_message = 17;</code>
       */

      public Builder putAllMapInt32ForeignMessage(
          java.util.Map<java.lang.Integer, protobuf_unittest.UnittestProto.ForeignMessage> values) {
        internalGetMutableMapInt32ForeignMessage().getMutableMap()
            .putAll(values);
        return this;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:protobuf_unittest.TestArenaMap)
    }

    // @@protoc_insertion_point(class_scope:protobuf_unittest.TestArenaMap)
    private static final protobuf_unittest.MapUnittest.TestArenaMap DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new protobuf_unittest.MapUnittest.TestArenaMap();
    }

    public static protobuf_unittest.MapUnittest.TestArenaMap getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<TestArenaMap>
        PARSER = new com.google.protobuf.AbstractParser<TestArenaMap>() {
      @java.lang.Override
      public TestArenaMap parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new TestArenaMap(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<TestArenaMap> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<TestArenaMap> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public protobuf_unittest.MapUnittest.TestArenaMap getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface MessageContainingEnumCalledTypeOrBuilder extends
      // @@protoc_insertion_point(interface_extends:protobuf_unittest.MessageContainingEnumCalledType)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>map&lt;string, .protobuf_unittest.MessageContainingEnumCalledType&gt; type = 1;</code>
     */
    int getTypeCount();
    /**
     * <code>map&lt;string, .protobuf_unittest.MessageContainingEnumCalledType&gt; type = 1;</code>
     */
    boolean containsType(
        java.lang.String key);
    /**
     * Use {@link #getTypeMap()} instead.
     */
    @java.lang.Deprecated
    java.util.Map<java.lang.String, protobuf_unittest.MapUnittest.MessageContainingEnumCalledType>
    getType();
    /**
     * <code>map&lt;string, .protobuf_unittest.MessageContainingEnumCalledType&gt; type = 1;</code>
     */
    java.util.Map<java.lang.String, protobuf_unittest.MapUnittest.MessageContainingEnumCalledType>
    getTypeMap();
    /**
     * <code>map&lt;string, .protobuf_unittest.MessageContainingEnumCalledType&gt; type = 1;</code>
     */

    /* nullable */
protobuf_unittest.MapUnittest.MessageContainingEnumCalledType getTypeOrDefault(
        java.lang.String key,
        /* nullable */
protobuf_unittest.MapUnittest.MessageContainingEnumCalledType defaultValue);
    /**
     * <code>map&lt;string, .protobuf_unittest.MessageContainingEnumCalledType&gt; type = 1;</code>
     */

    protobuf_unittest.MapUnittest.MessageContainingEnumCalledType getTypeOrThrow(
        java.lang.String key);
  }
  /**
   * <pre>
   * Previously, message containing enum called Type cannot be used as value of
   * map field.
   * </pre>
   *
   * Protobuf type {@code protobuf_unittest.MessageContainingEnumCalledType}
   */
  public static final class MessageContainingEnumCalledType extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:protobuf_unittest.MessageContainingEnumCalledType)
      MessageContainingEnumCalledTypeOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use MessageContainingEnumCalledType.newBuilder() to construct.
    private MessageContainingEnumCalledType(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private MessageContainingEnumCalledType() {
    }

    @java.lang.Override
    @SuppressWarnings({"unused"})
    protected java.lang.Object newInstance(
        UnusedPrivateParameter unused) {
      return new MessageContainingEnumCalledType();
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private MessageContainingEnumCalledType(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 10: {
              if (!((mutable_bitField0_ & 0x00000001) != 0)) {
                type_ = com.google.protobuf.MapField.newMapField(
                    TypeDefaultEntryHolder.defaultEntry);
                mutable_bitField0_ |= 0x00000001;
              }
              com.google.protobuf.MapEntry<java.lang.String, protobuf_unittest.MapUnittest.MessageContainingEnumCalledType>
              type__ = input.readMessage(
                  TypeDefaultEntryHolder.defaultEntry.getParserForType(), extensionRegistry);
              type_.getMutableMap().put(
                  type__.getKey(), type__.getValue());
              break;
            }
            default: {
              if (!parseUnknownField(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (com.google.protobuf.UninitializedMessageException e) {
        throw e.asInvalidProtocolBufferException().setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return protobuf_unittest.MapUnittest.internal_static_protobuf_unittest_MessageContainingEnumCalledType_descriptor;
    }

    @SuppressWarnings({"rawtypes"})
    @java.lang.Override
    protected com.google.protobuf.MapField internalGetMapField(
        int number) {
      switch (number) {
        case 1:
          return internalGetType();
        default:
          throw new RuntimeException(
              "Invalid map field number: " + number);
      }
    }
    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return protobuf_unittest.MapUnittest.internal_static_protobuf_unittest_MessageContainingEnumCalledType_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              protobuf_unittest.MapUnittest.MessageContainingEnumCalledType.class, protobuf_unittest.MapUnittest.MessageContainingEnumCalledType.Builder.class);
    }

    /**
     * Protobuf enum {@code protobuf_unittest.MessageContainingEnumCalledType.Type}
     */
    public enum Type
        implements com.google.protobuf.ProtocolMessageEnum {
      /**
       * <code>TYPE_FOO = 0;</code>
       */
      TYPE_FOO(0),
      UNRECOGNIZED(-1),
      ;

      /**
       * <code>TYPE_FOO = 0;</code>
       */
      public static final int TYPE_FOO_VALUE = 0;


      public final int getNumber() {
        if (this == UNRECOGNIZED) {
          throw new java.lang.IllegalArgumentException(
              "Can't get the number of an unknown enum value.");
        }
        return value;
      }

      /**
       * @param value The numeric wire value of the corresponding enum entry.
       * @return The enum associated with the given numeric wire value.
       * @deprecated Use {@link #forNumber(int)} instead.
       */
      @java.lang.Deprecated
      public static Type valueOf(int value) {
        return forNumber(value);
      }

      /**
       * @param value The numeric wire value of the corresponding enum entry.
       * @return The enum associated with the given numeric wire value.
       */
      public static Type forNumber(int value) {
        switch (value) {
          case 0: return TYPE_FOO;
          default: return null;
        }
      }

      public static com.google.protobuf.Internal.EnumLiteMap<Type>
          internalGetValueMap() {
        return internalValueMap;
      }
      private static final com.google.protobuf.Internal.EnumLiteMap<
          Type> internalValueMap =
            new com.google.protobuf.Internal.EnumLiteMap<Type>() {
              public Type findValueByNumber(int number) {
                return Type.forNumber(number);
              }
            };

      public final com.google.protobuf.Descriptors.EnumValueDescriptor
          getValueDescriptor() {
        if (this == UNRECOGNIZED) {
          throw new java.lang.IllegalStateException(
              "Can't get the descriptor of an unrecognized enum value.");
        }
        return getDescriptor().getValues().get(ordinal());
      }
      public final com.google.protobuf.Descriptors.EnumDescriptor
          getDescriptorForType() {
        return getDescriptor();
      }
      public static final com.google.protobuf.Descriptors.EnumDescriptor
          getDescriptor() {
        return protobuf_unittest.MapUnittest.MessageContainingEnumCalledType.getDescriptor().getEnumTypes().get(0);
      }

      private static final Type[] VALUES = values();

      public static Type valueOf(
          com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
        if (desc.getType() != getDescriptor()) {
          throw new java.lang.IllegalArgumentException(
            "EnumValueDescriptor is not for this type.");
        }
        if (desc.getIndex() == -1) {
          return UNRECOGNIZED;
        }
        return VALUES[desc.getIndex()];
      }

      private final int value;

      private Type(int value) {
        this.value = value;
      }

      // @@protoc_insertion_point(enum_scope:protobuf_unittest.MessageContainingEnumCalledType.Type)
    }

    public static final int TYPE_FIELD_NUMBER = 1;
    private static final class TypeDefaultEntryHolder {
      static final com.google.protobuf.MapEntry<
          java.lang.String, protobuf_unittest.MapUnittest.MessageContainingEnumCalledType> defaultEntry =
              com.google.protobuf.MapEntry
              .<java.lang.String, protobuf_unittest.MapUnittest.MessageContainingEnumCalledType>newDefaultInstance(
                  protobuf_unittest.MapUnittest.internal_static_protobuf_unittest_MessageContainingEnumCalledType_TypeEntry_descriptor, 
                  com.google.protobuf.WireFormat.FieldType.STRING,
                  "",
                  com.google.protobuf.WireFormat.FieldType.MESSAGE,
                  protobuf_unittest.MapUnittest.MessageContainingEnumCalledType.getDefaultInstance());
    }
    private com.google.protobuf.MapField<
        java.lang.String, protobuf_unittest.MapUnittest.MessageContainingEnumCalledType> type_;
    private com.google.protobuf.MapField<java.lang.String, protobuf_unittest.MapUnittest.MessageContainingEnumCalledType>
    internalGetType() {
      if (type_ == null) {
        return com.google.protobuf.MapField.emptyMapField(
            TypeDefaultEntryHolder.defaultEntry);
      }
      return type_;
    }

    public int getTypeCount() {
      return internalGetType().getMap().size();
    }
    /**
     * <code>map&lt;string, .protobuf_unittest.MessageContainingEnumCalledType&gt; type = 1;</code>
     */

    @java.lang.Override
    public boolean containsType(
        java.lang.String key) {
      if (key == null) { throw new NullPointerException("map key"); }
      return internalGetType().getMap().containsKey(key);
    }
    /**
     * Use {@link #getTypeMap()} instead.
     */
    @java.lang.Override
    @java.lang.Deprecated
    public java.util.Map<java.lang.String, protobuf_unittest.MapUnittest.MessageContainingEnumCalledType> getType() {
      return getTypeMap();
    }
    /**
     * <code>map&lt;string, .protobuf_unittest.MessageContainingEnumCalledType&gt; type = 1;</code>
     */
    @java.lang.Override

    public java.util.Map<java.lang.String, protobuf_unittest.MapUnittest.MessageContainingEnumCalledType> getTypeMap() {
      return internalGetType().getMap();
    }
    /**
     * <code>map&lt;string, .protobuf_unittest.MessageContainingEnumCalledType&gt; type = 1;</code>
     */
    @java.lang.Override

    public protobuf_unittest.MapUnittest.MessageContainingEnumCalledType getTypeOrDefault(
        java.lang.String key,
        protobuf_unittest.MapUnittest.MessageContainingEnumCalledType defaultValue) {
      if (key == null) { throw new NullPointerException("map key"); }
      java.util.Map<java.lang.String, protobuf_unittest.MapUnittest.MessageContainingEnumCalledType> map =
          internalGetType().getMap();
      return map.containsKey(key) ? map.get(key) : defaultValue;
    }
    /**
     * <code>map&lt;string, .protobuf_unittest.MessageContainingEnumCalledType&gt; type = 1;</code>
     */
    @java.lang.Override

    public protobuf_unittest.MapUnittest.MessageContainingEnumCalledType getTypeOrThrow(
        java.lang.String key) {
      if (key == null) { throw new NullPointerException("map key"); }
      java.util.Map<java.lang.String, protobuf_unittest.MapUnittest.MessageContainingEnumCalledType> map =
          internalGetType().getMap();
      if (!map.containsKey(key)) {
        throw new java.lang.IllegalArgumentException();
      }
      return map.get(key);
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      com.google.protobuf.GeneratedMessageV3
        .serializeStringMapTo(
          output,
          internalGetType(),
          TypeDefaultEntryHolder.defaultEntry,
          1);
      unknownFields.writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      for (java.util.Map.Entry<java.lang.String, protobuf_unittest.MapUnittest.MessageContainingEnumCalledType> entry
           : internalGetType().getMap().entrySet()) {
        com.google.protobuf.MapEntry<java.lang.String, protobuf_unittest.MapUnittest.MessageContainingEnumCalledType>
        type__ = TypeDefaultEntryHolder.defaultEntry.newBuilderForType()
            .setKey(entry.getKey())
            .setValue(entry.getValue())
            .build();
        size += com.google.protobuf.CodedOutputStream
            .computeMessageSize(1, type__);
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof protobuf_unittest.MapUnittest.MessageContainingEnumCalledType)) {
        return super.equals(obj);
      }
      protobuf_unittest.MapUnittest.MessageContainingEnumCalledType other = (protobuf_unittest.MapUnittest.MessageContainingEnumCalledType) obj;

      if (!internalGetType().equals(
          other.internalGetType())) return false;
      if (!unknownFields.equals(other.unknownFields)) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      if (!internalGetType().getMap().isEmpty()) {
        hash = (37 * hash) + TYPE_FIELD_NUMBER;
        hash = (53 * hash) + internalGetType().hashCode();
      }
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static protobuf_unittest.MapUnittest.MessageContainingEnumCalledType parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static protobuf_unittest.MapUnittest.MessageContainingEnumCalledType parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static protobuf_unittest.MapUnittest.MessageContainingEnumCalledType parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static protobuf_unittest.MapUnittest.MessageContainingEnumCalledType parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static protobuf_unittest.MapUnittest.MessageContainingEnumCalledType parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static protobuf_unittest.MapUnittest.MessageContainingEnumCalledType parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static protobuf_unittest.MapUnittest.MessageContainingEnumCalledType parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static protobuf_unittest.MapUnittest.MessageContainingEnumCalledType parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static protobuf_unittest.MapUnittest.MessageContainingEnumCalledType parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static protobuf_unittest.MapUnittest.MessageContainingEnumCalledType parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static protobuf_unittest.MapUnittest.MessageContainingEnumCalledType parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static protobuf_unittest.MapUnittest.MessageContainingEnumCalledType parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(protobuf_unittest.MapUnittest.MessageContainingEnumCalledType prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * <pre>
     * Previously, message containing enum called Type cannot be used as value of
     * map field.
     * </pre>
     *
     * Protobuf type {@code protobuf_unittest.MessageContainingEnumCalledType}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:protobuf_unittest.MessageContainingEnumCalledType)
        protobuf_unittest.MapUnittest.MessageContainingEnumCalledTypeOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return protobuf_unittest.MapUnittest.internal_static_protobuf_unittest_MessageContainingEnumCalledType_descriptor;
      }

      @SuppressWarnings({"rawtypes"})
      protected com.google.protobuf.MapField internalGetMapField(
          int number) {
        switch (number) {
          case 1:
            return internalGetType();
          default:
            throw new RuntimeException(
                "Invalid map field number: " + number);
        }
      }
      @SuppressWarnings({"rawtypes"})
      protected com.google.protobuf.MapField internalGetMutableMapField(
          int number) {
        switch (number) {
          case 1:
            return internalGetMutableType();
          default:
            throw new RuntimeException(
                "Invalid map field number: " + number);
        }
      }
      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return protobuf_unittest.MapUnittest.internal_static_protobuf_unittest_MessageContainingEnumCalledType_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                protobuf_unittest.MapUnittest.MessageContainingEnumCalledType.class, protobuf_unittest.MapUnittest.MessageContainingEnumCalledType.Builder.class);
      }

      // Construct using protobuf_unittest.MapUnittest.MessageContainingEnumCalledType.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        internalGetMutableType().clear();
        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return protobuf_unittest.MapUnittest.internal_static_protobuf_unittest_MessageContainingEnumCalledType_descriptor;
      }

      @java.lang.Override
      public protobuf_unittest.MapUnittest.MessageContainingEnumCalledType getDefaultInstanceForType() {
        return protobuf_unittest.MapUnittest.MessageContainingEnumCalledType.getDefaultInstance();
      }

      @java.lang.Override
      public protobuf_unittest.MapUnittest.MessageContainingEnumCalledType build() {
        protobuf_unittest.MapUnittest.MessageContainingEnumCalledType result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public protobuf_unittest.MapUnittest.MessageContainingEnumCalledType buildPartial() {
        protobuf_unittest.MapUnittest.MessageContainingEnumCalledType result = new protobuf_unittest.MapUnittest.MessageContainingEnumCalledType(this);
        int from_bitField0_ = bitField0_;
        result.type_ = internalGetType();
        result.type_.makeImmutable();
        onBuilt();
        return result;
      }

      @java.lang.Override
      public Builder clone() {
        return super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof protobuf_unittest.MapUnittest.MessageContainingEnumCalledType) {
          return mergeFrom((protobuf_unittest.MapUnittest.MessageContainingEnumCalledType)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(protobuf_unittest.MapUnittest.MessageContainingEnumCalledType other) {
        if (other == protobuf_unittest.MapUnittest.MessageContainingEnumCalledType.getDefaultInstance()) return this;
        internalGetMutableType().mergeFrom(
            other.internalGetType());
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        protobuf_unittest.MapUnittest.MessageContainingEnumCalledType parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (protobuf_unittest.MapUnittest.MessageContainingEnumCalledType) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private com.google.protobuf.MapField<
          java.lang.String, protobuf_unittest.MapUnittest.MessageContainingEnumCalledType> type_;
      private com.google.protobuf.MapField<java.lang.String, protobuf_unittest.MapUnittest.MessageContainingEnumCalledType>
      internalGetType() {
        if (type_ == null) {
          return com.google.protobuf.MapField.emptyMapField(
              TypeDefaultEntryHolder.defaultEntry);
        }
        return type_;
      }
      private com.google.protobuf.MapField<java.lang.String, protobuf_unittest.MapUnittest.MessageContainingEnumCalledType>
      internalGetMutableType() {
        onChanged();;
        if (type_ == null) {
          type_ = com.google.protobuf.MapField.newMapField(
              TypeDefaultEntryHolder.defaultEntry);
        }
        if (!type_.isMutable()) {
          type_ = type_.copy();
        }
        return type_;
      }

      public int getTypeCount() {
        return internalGetType().getMap().size();
      }
      /**
       * <code>map&lt;string, .protobuf_unittest.MessageContainingEnumCalledType&gt; type = 1;</code>
       */

      @java.lang.Override
      public boolean containsType(
          java.lang.String key) {
        if (key == null) { throw new NullPointerException("map key"); }
        return internalGetType().getMap().containsKey(key);
      }
      /**
       * Use {@link #getTypeMap()} instead.
       */
      @java.lang.Override
      @java.lang.Deprecated
      public java.util.Map<java.lang.String, protobuf_unittest.MapUnittest.MessageContainingEnumCalledType> getType() {
        return getTypeMap();
      }
      /**
       * <code>map&lt;string, .protobuf_unittest.MessageContainingEnumCalledType&gt; type = 1;</code>
       */
      @java.lang.Override

      public java.util.Map<java.lang.String, protobuf_unittest.MapUnittest.MessageContainingEnumCalledType> getTypeMap() {
        return internalGetType().getMap();
      }
      /**
       * <code>map&lt;string, .protobuf_unittest.MessageContainingEnumCalledType&gt; type = 1;</code>
       */
      @java.lang.Override

      public protobuf_unittest.MapUnittest.MessageContainingEnumCalledType getTypeOrDefault(
          java.lang.String key,
          protobuf_unittest.MapUnittest.MessageContainingEnumCalledType defaultValue) {
        if (key == null) { throw new NullPointerException("map key"); }
        java.util.Map<java.lang.String, protobuf_unittest.MapUnittest.MessageContainingEnumCalledType> map =
            internalGetType().getMap();
        return map.containsKey(key) ? map.get(key) : defaultValue;
      }
      /**
       * <code>map&lt;string, .protobuf_unittest.MessageContainingEnumCalledType&gt; type = 1;</code>
       */
      @java.lang.Override

      public protobuf_unittest.MapUnittest.MessageContainingEnumCalledType getTypeOrThrow(
          java.lang.String key) {
        if (key == null) { throw new NullPointerException("map key"); }
        java.util.Map<java.lang.String, protobuf_unittest.MapUnittest.MessageContainingEnumCalledType> map =
            internalGetType().getMap();
        if (!map.containsKey(key)) {
          throw new java.lang.IllegalArgumentException();
        }
        return map.get(key);
      }

      public Builder clearType() {
        internalGetMutableType().getMutableMap()
            .clear();
        return this;
      }
      /**
       * <code>map&lt;string, .protobuf_unittest.MessageContainingEnumCalledType&gt; type = 1;</code>
       */

      public Builder removeType(
          java.lang.String key) {
        if (key == null) { throw new NullPointerException("map key"); }
        internalGetMutableType().getMutableMap()
            .remove(key);
        return this;
      }
      /**
       * Use alternate mutation accessors instead.
       */
      @java.lang.Deprecated
      public java.util.Map<java.lang.String, protobuf_unittest.MapUnittest.MessageContainingEnumCalledType>
      getMutableType() {
        return internalGetMutableType().getMutableMap();
      }
      /**
       * <code>map&lt;string, .protobuf_unittest.MessageContainingEnumCalledType&gt; type = 1;</code>
       */
      public Builder putType(
          java.lang.String key,
          protobuf_unittest.MapUnittest.MessageContainingEnumCalledType value) {
        if (key == null) { throw new NullPointerException("map key"); }
        if (value == null) {
  throw new NullPointerException("map value");
}

        internalGetMutableType().getMutableMap()
            .put(key, value);
        return this;
      }
      /**
       * <code>map&lt;string, .protobuf_unittest.MessageContainingEnumCalledType&gt; type = 1;</code>
       */

      public Builder putAllType(
          java.util.Map<java.lang.String, protobuf_unittest.MapUnittest.MessageContainingEnumCalledType> values) {
        internalGetMutableType().getMutableMap()
            .putAll(values);
        return this;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:protobuf_unittest.MessageContainingEnumCalledType)
    }

    // @@protoc_insertion_point(class_scope:protobuf_unittest.MessageContainingEnumCalledType)
    private static final protobuf_unittest.MapUnittest.MessageContainingEnumCalledType DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new protobuf_unittest.MapUnittest.MessageContainingEnumCalledType();
    }

    public static protobuf_unittest.MapUnittest.MessageContainingEnumCalledType getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<MessageContainingEnumCalledType>
        PARSER = new com.google.protobuf.AbstractParser<MessageContainingEnumCalledType>() {
      @java.lang.Override
      public MessageContainingEnumCalledType parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new MessageContainingEnumCalledType(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<MessageContainingEnumCalledType> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<MessageContainingEnumCalledType> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public protobuf_unittest.MapUnittest.MessageContainingEnumCalledType getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface MessageContainingMapCalledEntryOrBuilder extends
      // @@protoc_insertion_point(interface_extends:protobuf_unittest.MessageContainingMapCalledEntry)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>map&lt;int32, int32&gt; entry = 1;</code>
     */
    int getEntryCount();
    /**
     * <code>map&lt;int32, int32&gt; entry = 1;</code>
     */
    boolean containsEntry(
        int key);
    /**
     * Use {@link #getEntryMap()} instead.
     */
    @java.lang.Deprecated
    java.util.Map<java.lang.Integer, java.lang.Integer>
    getEntry();
    /**
     * <code>map&lt;int32, int32&gt; entry = 1;</code>
     */
    java.util.Map<java.lang.Integer, java.lang.Integer>
    getEntryMap();
    /**
     * <code>map&lt;int32, int32&gt; entry = 1;</code>
     */

    int getEntryOrDefault(
        int key,
        int defaultValue);
    /**
     * <code>map&lt;int32, int32&gt; entry = 1;</code>
     */

    int getEntryOrThrow(
        int key);
  }
  /**
   * <pre>
   * Previously, message cannot contain map field called "entry".
   * </pre>
   *
   * Protobuf type {@code protobuf_unittest.MessageContainingMapCalledEntry}
   */
  public static final class MessageContainingMapCalledEntry extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:protobuf_unittest.MessageContainingMapCalledEntry)
      MessageContainingMapCalledEntryOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use MessageContainingMapCalledEntry.newBuilder() to construct.
    private MessageContainingMapCalledEntry(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private MessageContainingMapCalledEntry() {
    }

    @java.lang.Override
    @SuppressWarnings({"unused"})
    protected java.lang.Object newInstance(
        UnusedPrivateParameter unused) {
      return new MessageContainingMapCalledEntry();
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private MessageContainingMapCalledEntry(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 10: {
              if (!((mutable_bitField0_ & 0x00000001) != 0)) {
                entry_ = com.google.protobuf.MapField.newMapField(
                    EntryDefaultEntryHolder.defaultEntry);
                mutable_bitField0_ |= 0x00000001;
              }
              com.google.protobuf.MapEntry<java.lang.Integer, java.lang.Integer>
              entry__ = input.readMessage(
                  EntryDefaultEntryHolder.defaultEntry.getParserForType(), extensionRegistry);
              entry_.getMutableMap().put(
                  entry__.getKey(), entry__.getValue());
              break;
            }
            default: {
              if (!parseUnknownField(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (com.google.protobuf.UninitializedMessageException e) {
        throw e.asInvalidProtocolBufferException().setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return protobuf_unittest.MapUnittest.internal_static_protobuf_unittest_MessageContainingMapCalledEntry_descriptor;
    }

    @SuppressWarnings({"rawtypes"})
    @java.lang.Override
    protected com.google.protobuf.MapField internalGetMapField(
        int number) {
      switch (number) {
        case 1:
          return internalGetEntry();
        default:
          throw new RuntimeException(
              "Invalid map field number: " + number);
      }
    }
    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return protobuf_unittest.MapUnittest.internal_static_protobuf_unittest_MessageContainingMapCalledEntry_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              protobuf_unittest.MapUnittest.MessageContainingMapCalledEntry.class, protobuf_unittest.MapUnittest.MessageContainingMapCalledEntry.Builder.class);
    }

    public static final int ENTRY_FIELD_NUMBER = 1;
    private static final class EntryDefaultEntryHolder {
      static final com.google.protobuf.MapEntry<
          java.lang.Integer, java.lang.Integer> defaultEntry =
              com.google.protobuf.MapEntry
              .<java.lang.Integer, java.lang.Integer>newDefaultInstance(
                  protobuf_unittest.MapUnittest.internal_static_protobuf_unittest_MessageContainingMapCalledEntry_EntryEntry_descriptor, 
                  com.google.protobuf.WireFormat.FieldType.INT32,
                  0,
                  com.google.protobuf.WireFormat.FieldType.INT32,
                  0);
    }
    private com.google.protobuf.MapField<
        java.lang.Integer, java.lang.Integer> entry_;
    private com.google.protobuf.MapField<java.lang.Integer, java.lang.Integer>
    internalGetEntry() {
      if (entry_ == null) {
        return com.google.protobuf.MapField.emptyMapField(
            EntryDefaultEntryHolder.defaultEntry);
      }
      return entry_;
    }

    public int getEntryCount() {
      return internalGetEntry().getMap().size();
    }
    /**
     * <code>map&lt;int32, int32&gt; entry = 1;</code>
     */

    @java.lang.Override
    public boolean containsEntry(
        int key) {
      
      return internalGetEntry().getMap().containsKey(key);
    }
    /**
     * Use {@link #getEntryMap()} instead.
     */
    @java.lang.Override
    @java.lang.Deprecated
    public java.util.Map<java.lang.Integer, java.lang.Integer> getEntry() {
      return getEntryMap();
    }
    /**
     * <code>map&lt;int32, int32&gt; entry = 1;</code>
     */
    @java.lang.Override

    public java.util.Map<java.lang.Integer, java.lang.Integer> getEntryMap() {
      return internalGetEntry().getMap();
    }
    /**
     * <code>map&lt;int32, int32&gt; entry = 1;</code>
     */
    @java.lang.Override

    public int getEntryOrDefault(
        int key,
        int defaultValue) {
      
      java.util.Map<java.lang.Integer, java.lang.Integer> map =
          internalGetEntry().getMap();
      return map.containsKey(key) ? map.get(key) : defaultValue;
    }
    /**
     * <code>map&lt;int32, int32&gt; entry = 1;</code>
     */
    @java.lang.Override

    public int getEntryOrThrow(
        int key) {
      
      java.util.Map<java.lang.Integer, java.lang.Integer> map =
          internalGetEntry().getMap();
      if (!map.containsKey(key)) {
        throw new java.lang.IllegalArgumentException();
      }
      return map.get(key);
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      com.google.protobuf.GeneratedMessageV3
        .serializeIntegerMapTo(
          output,
          internalGetEntry(),
          EntryDefaultEntryHolder.defaultEntry,
          1);
      unknownFields.writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      for (java.util.Map.Entry<java.lang.Integer, java.lang.Integer> entry
           : internalGetEntry().getMap().entrySet()) {
        com.google.protobuf.MapEntry<java.lang.Integer, java.lang.Integer>
        entry__ = EntryDefaultEntryHolder.defaultEntry.newBuilderForType()
            .setKey(entry.getKey())
            .setValue(entry.getValue())
            .build();
        size += com.google.protobuf.CodedOutputStream
            .computeMessageSize(1, entry__);
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof protobuf_unittest.MapUnittest.MessageContainingMapCalledEntry)) {
        return super.equals(obj);
      }
      protobuf_unittest.MapUnittest.MessageContainingMapCalledEntry other = (protobuf_unittest.MapUnittest.MessageContainingMapCalledEntry) obj;

      if (!internalGetEntry().equals(
          other.internalGetEntry())) return false;
      if (!unknownFields.equals(other.unknownFields)) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      if (!internalGetEntry().getMap().isEmpty()) {
        hash = (37 * hash) + ENTRY_FIELD_NUMBER;
        hash = (53 * hash) + internalGetEntry().hashCode();
      }
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static protobuf_unittest.MapUnittest.MessageContainingMapCalledEntry parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static protobuf_unittest.MapUnittest.MessageContainingMapCalledEntry parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static protobuf_unittest.MapUnittest.MessageContainingMapCalledEntry parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static protobuf_unittest.MapUnittest.MessageContainingMapCalledEntry parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static protobuf_unittest.MapUnittest.MessageContainingMapCalledEntry parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static protobuf_unittest.MapUnittest.MessageContainingMapCalledEntry parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static protobuf_unittest.MapUnittest.MessageContainingMapCalledEntry parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static protobuf_unittest.MapUnittest.MessageContainingMapCalledEntry parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static protobuf_unittest.MapUnittest.MessageContainingMapCalledEntry parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static protobuf_unittest.MapUnittest.MessageContainingMapCalledEntry parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static protobuf_unittest.MapUnittest.MessageContainingMapCalledEntry parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static protobuf_unittest.MapUnittest.MessageContainingMapCalledEntry parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(protobuf_unittest.MapUnittest.MessageContainingMapCalledEntry prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * <pre>
     * Previously, message cannot contain map field called "entry".
     * </pre>
     *
     * Protobuf type {@code protobuf_unittest.MessageContainingMapCalledEntry}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:protobuf_unittest.MessageContainingMapCalledEntry)
        protobuf_unittest.MapUnittest.MessageContainingMapCalledEntryOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return protobuf_unittest.MapUnittest.internal_static_protobuf_unittest_MessageContainingMapCalledEntry_descriptor;
      }

      @SuppressWarnings({"rawtypes"})
      protected com.google.protobuf.MapField internalGetMapField(
          int number) {
        switch (number) {
          case 1:
            return internalGetEntry();
          default:
            throw new RuntimeException(
                "Invalid map field number: " + number);
        }
      }
      @SuppressWarnings({"rawtypes"})
      protected com.google.protobuf.MapField internalGetMutableMapField(
          int number) {
        switch (number) {
          case 1:
            return internalGetMutableEntry();
          default:
            throw new RuntimeException(
                "Invalid map field number: " + number);
        }
      }
      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return protobuf_unittest.MapUnittest.internal_static_protobuf_unittest_MessageContainingMapCalledEntry_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                protobuf_unittest.MapUnittest.MessageContainingMapCalledEntry.class, protobuf_unittest.MapUnittest.MessageContainingMapCalledEntry.Builder.class);
      }

      // Construct using protobuf_unittest.MapUnittest.MessageContainingMapCalledEntry.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        internalGetMutableEntry().clear();
        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return protobuf_unittest.MapUnittest.internal_static_protobuf_unittest_MessageContainingMapCalledEntry_descriptor;
      }

      @java.lang.Override
      public protobuf_unittest.MapUnittest.MessageContainingMapCalledEntry getDefaultInstanceForType() {
        return protobuf_unittest.MapUnittest.MessageContainingMapCalledEntry.getDefaultInstance();
      }

      @java.lang.Override
      public protobuf_unittest.MapUnittest.MessageContainingMapCalledEntry build() {
        protobuf_unittest.MapUnittest.MessageContainingMapCalledEntry result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public protobuf_unittest.MapUnittest.MessageContainingMapCalledEntry buildPartial() {
        protobuf_unittest.MapUnittest.MessageContainingMapCalledEntry result = new protobuf_unittest.MapUnittest.MessageContainingMapCalledEntry(this);
        int from_bitField0_ = bitField0_;
        result.entry_ = internalGetEntry();
        result.entry_.makeImmutable();
        onBuilt();
        return result;
      }

      @java.lang.Override
      public Builder clone() {
        return super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof protobuf_unittest.MapUnittest.MessageContainingMapCalledEntry) {
          return mergeFrom((protobuf_unittest.MapUnittest.MessageContainingMapCalledEntry)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(protobuf_unittest.MapUnittest.MessageContainingMapCalledEntry other) {
        if (other == protobuf_unittest.MapUnittest.MessageContainingMapCalledEntry.getDefaultInstance()) return this;
        internalGetMutableEntry().mergeFrom(
            other.internalGetEntry());
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        protobuf_unittest.MapUnittest.MessageContainingMapCalledEntry parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (protobuf_unittest.MapUnittest.MessageContainingMapCalledEntry) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private com.google.protobuf.MapField<
          java.lang.Integer, java.lang.Integer> entry_;
      private com.google.protobuf.MapField<java.lang.Integer, java.lang.Integer>
      internalGetEntry() {
        if (entry_ == null) {
          return com.google.protobuf.MapField.emptyMapField(
              EntryDefaultEntryHolder.defaultEntry);
        }
        return entry_;
      }
      private com.google.protobuf.MapField<java.lang.Integer, java.lang.Integer>
      internalGetMutableEntry() {
        onChanged();;
        if (entry_ == null) {
          entry_ = com.google.protobuf.MapField.newMapField(
              EntryDefaultEntryHolder.defaultEntry);
        }
        if (!entry_.isMutable()) {
          entry_ = entry_.copy();
        }
        return entry_;
      }

      public int getEntryCount() {
        return internalGetEntry().getMap().size();
      }
      /**
       * <code>map&lt;int32, int32&gt; entry = 1;</code>
       */

      @java.lang.Override
      public boolean containsEntry(
          int key) {
        
        return internalGetEntry().getMap().containsKey(key);
      }
      /**
       * Use {@link #getEntryMap()} instead.
       */
      @java.lang.Override
      @java.lang.Deprecated
      public java.util.Map<java.lang.Integer, java.lang.Integer> getEntry() {
        return getEntryMap();
      }
      /**
       * <code>map&lt;int32, int32&gt; entry = 1;</code>
       */
      @java.lang.Override

      public java.util.Map<java.lang.Integer, java.lang.Integer> getEntryMap() {
        return internalGetEntry().getMap();
      }
      /**
       * <code>map&lt;int32, int32&gt; entry = 1;</code>
       */
      @java.lang.Override

      public int getEntryOrDefault(
          int key,
          int defaultValue) {
        
        java.util.Map<java.lang.Integer, java.lang.Integer> map =
            internalGetEntry().getMap();
        return map.containsKey(key) ? map.get(key) : defaultValue;
      }
      /**
       * <code>map&lt;int32, int32&gt; entry = 1;</code>
       */
      @java.lang.Override

      public int getEntryOrThrow(
          int key) {
        
        java.util.Map<java.lang.Integer, java.lang.Integer> map =
            internalGetEntry().getMap();
        if (!map.containsKey(key)) {
          throw new java.lang.IllegalArgumentException();
        }
        return map.get(key);
      }

      public Builder clearEntry() {
        internalGetMutableEntry().getMutableMap()
            .clear();
        return this;
      }
      /**
       * <code>map&lt;int32, int32&gt; entry = 1;</code>
       */

      public Builder removeEntry(
          int key) {
        
        internalGetMutableEntry().getMutableMap()
            .remove(key);
        return this;
      }
      /**
       * Use alternate mutation accessors instead.
       */
      @java.lang.Deprecated
      public java.util.Map<java.lang.Integer, java.lang.Integer>
      getMutableEntry() {
        return internalGetMutableEntry().getMutableMap();
      }
      /**
       * <code>map&lt;int32, int32&gt; entry = 1;</code>
       */
      public Builder putEntry(
          int key,
          int value) {
        
        
        internalGetMutableEntry().getMutableMap()
            .put(key, value);
        return this;
      }
      /**
       * <code>map&lt;int32, int32&gt; entry = 1;</code>
       */

      public Builder putAllEntry(
          java.util.Map<java.lang.Integer, java.lang.Integer> values) {
        internalGetMutableEntry().getMutableMap()
            .putAll(values);
        return this;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:protobuf_unittest.MessageContainingMapCalledEntry)
    }

    // @@protoc_insertion_point(class_scope:protobuf_unittest.MessageContainingMapCalledEntry)
    private static final protobuf_unittest.MapUnittest.MessageContainingMapCalledEntry DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new protobuf_unittest.MapUnittest.MessageContainingMapCalledEntry();
    }

    public static protobuf_unittest.MapUnittest.MessageContainingMapCalledEntry getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<MessageContainingMapCalledEntry>
        PARSER = new com.google.protobuf.AbstractParser<MessageContainingMapCalledEntry>() {
      @java.lang.Override
      public MessageContainingMapCalledEntry parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new MessageContainingMapCalledEntry(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<MessageContainingMapCalledEntry> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<MessageContainingMapCalledEntry> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public protobuf_unittest.MapUnittest.MessageContainingMapCalledEntry getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface TestRecursiveMapMessageOrBuilder extends
      // @@protoc_insertion_point(interface_extends:protobuf_unittest.TestRecursiveMapMessage)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>map&lt;string, .protobuf_unittest.TestRecursiveMapMessage&gt; a = 1;</code>
     */
    int getACount();
    /**
     * <code>map&lt;string, .protobuf_unittest.TestRecursiveMapMessage&gt; a = 1;</code>
     */
    boolean containsA(
        java.lang.String key);
    /**
     * Use {@link #getAMap()} instead.
     */
    @java.lang.Deprecated
    java.util.Map<java.lang.String, protobuf_unittest.MapUnittest.TestRecursiveMapMessage>
    getA();
    /**
     * <code>map&lt;string, .protobuf_unittest.TestRecursiveMapMessage&gt; a = 1;</code>
     */
    java.util.Map<java.lang.String, protobuf_unittest.MapUnittest.TestRecursiveMapMessage>
    getAMap();
    /**
     * <code>map&lt;string, .protobuf_unittest.TestRecursiveMapMessage&gt; a = 1;</code>
     */

    /* nullable */
protobuf_unittest.MapUnittest.TestRecursiveMapMessage getAOrDefault(
        java.lang.String key,
        /* nullable */
protobuf_unittest.MapUnittest.TestRecursiveMapMessage defaultValue);
    /**
     * <code>map&lt;string, .protobuf_unittest.TestRecursiveMapMessage&gt; a = 1;</code>
     */

    protobuf_unittest.MapUnittest.TestRecursiveMapMessage getAOrThrow(
        java.lang.String key);
  }
  /**
   * Protobuf type {@code protobuf_unittest.TestRecursiveMapMessage}
   */
  public static final class TestRecursiveMapMessage extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:protobuf_unittest.TestRecursiveMapMessage)
      TestRecursiveMapMessageOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use TestRecursiveMapMessage.newBuilder() to construct.
    private TestRecursiveMapMessage(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private TestRecursiveMapMessage() {
    }

    @java.lang.Override
    @SuppressWarnings({"unused"})
    protected java.lang.Object newInstance(
        UnusedPrivateParameter unused) {
      return new TestRecursiveMapMessage();
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private TestRecursiveMapMessage(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 10: {
              if (!((mutable_bitField0_ & 0x00000001) != 0)) {
                a_ = com.google.protobuf.MapField.newMapField(
                    ADefaultEntryHolder.defaultEntry);
                mutable_bitField0_ |= 0x00000001;
              }
              com.google.protobuf.MapEntry<java.lang.String, protobuf_unittest.MapUnittest.TestRecursiveMapMessage>
              a__ = input.readMessage(
                  ADefaultEntryHolder.defaultEntry.getParserForType(), extensionRegistry);
              a_.getMutableMap().put(
                  a__.getKey(), a__.getValue());
              break;
            }
            default: {
              if (!parseUnknownField(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (com.google.protobuf.UninitializedMessageException e) {
        throw e.asInvalidProtocolBufferException().setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return protobuf_unittest.MapUnittest.internal_static_protobuf_unittest_TestRecursiveMapMessage_descriptor;
    }

    @SuppressWarnings({"rawtypes"})
    @java.lang.Override
    protected com.google.protobuf.MapField internalGetMapField(
        int number) {
      switch (number) {
        case 1:
          return internalGetA();
        default:
          throw new RuntimeException(
              "Invalid map field number: " + number);
      }
    }
    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return protobuf_unittest.MapUnittest.internal_static_protobuf_unittest_TestRecursiveMapMessage_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              protobuf_unittest.MapUnittest.TestRecursiveMapMessage.class, protobuf_unittest.MapUnittest.TestRecursiveMapMessage.Builder.class);
    }

    public static final int A_FIELD_NUMBER = 1;
    private static final class ADefaultEntryHolder {
      static final com.google.protobuf.MapEntry<
          java.lang.String, protobuf_unittest.MapUnittest.TestRecursiveMapMessage> defaultEntry =
              com.google.protobuf.MapEntry
              .<java.lang.String, protobuf_unittest.MapUnittest.TestRecursiveMapMessage>newDefaultInstance(
                  protobuf_unittest.MapUnittest.internal_static_protobuf_unittest_TestRecursiveMapMessage_AEntry_descriptor, 
                  com.google.protobuf.WireFormat.FieldType.STRING,
                  "",
                  com.google.protobuf.WireFormat.FieldType.MESSAGE,
                  protobuf_unittest.MapUnittest.TestRecursiveMapMessage.getDefaultInstance());
    }
    private com.google.protobuf.MapField<
        java.lang.String, protobuf_unittest.MapUnittest.TestRecursiveMapMessage> a_;
    private com.google.protobuf.MapField<java.lang.String, protobuf_unittest.MapUnittest.TestRecursiveMapMessage>
    internalGetA() {
      if (a_ == null) {
        return com.google.protobuf.MapField.emptyMapField(
            ADefaultEntryHolder.defaultEntry);
      }
      return a_;
    }

    public int getACount() {
      return internalGetA().getMap().size();
    }
    /**
     * <code>map&lt;string, .protobuf_unittest.TestRecursiveMapMessage&gt; a = 1;</code>
     */

    @java.lang.Override
    public boolean containsA(
        java.lang.String key) {
      if (key == null) { throw new NullPointerException("map key"); }
      return internalGetA().getMap().containsKey(key);
    }
    /**
     * Use {@link #getAMap()} instead.
     */
    @java.lang.Override
    @java.lang.Deprecated
    public java.util.Map<java.lang.String, protobuf_unittest.MapUnittest.TestRecursiveMapMessage> getA() {
      return getAMap();
    }
    /**
     * <code>map&lt;string, .protobuf_unittest.TestRecursiveMapMessage&gt; a = 1;</code>
     */
    @java.lang.Override

    public java.util.Map<java.lang.String, protobuf_unittest.MapUnittest.TestRecursiveMapMessage> getAMap() {
      return internalGetA().getMap();
    }
    /**
     * <code>map&lt;string, .protobuf_unittest.TestRecursiveMapMessage&gt; a = 1;</code>
     */
    @java.lang.Override

    public protobuf_unittest.MapUnittest.TestRecursiveMapMessage getAOrDefault(
        java.lang.String key,
        protobuf_unittest.MapUnittest.TestRecursiveMapMessage defaultValue) {
      if (key == null) { throw new NullPointerException("map key"); }
      java.util.Map<java.lang.String, protobuf_unittest.MapUnittest.TestRecursiveMapMessage> map =
          internalGetA().getMap();
      return map.containsKey(key) ? map.get(key) : defaultValue;
    }
    /**
     * <code>map&lt;string, .protobuf_unittest.TestRecursiveMapMessage&gt; a = 1;</code>
     */
    @java.lang.Override

    public protobuf_unittest.MapUnittest.TestRecursiveMapMessage getAOrThrow(
        java.lang.String key) {
      if (key == null) { throw new NullPointerException("map key"); }
      java.util.Map<java.lang.String, protobuf_unittest.MapUnittest.TestRecursiveMapMessage> map =
          internalGetA().getMap();
      if (!map.containsKey(key)) {
        throw new java.lang.IllegalArgumentException();
      }
      return map.get(key);
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      com.google.protobuf.GeneratedMessageV3
        .serializeStringMapTo(
          output,
          internalGetA(),
          ADefaultEntryHolder.defaultEntry,
          1);
      unknownFields.writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      for (java.util.Map.Entry<java.lang.String, protobuf_unittest.MapUnittest.TestRecursiveMapMessage> entry
           : internalGetA().getMap().entrySet()) {
        com.google.protobuf.MapEntry<java.lang.String, protobuf_unittest.MapUnittest.TestRecursiveMapMessage>
        a__ = ADefaultEntryHolder.defaultEntry.newBuilderForType()
            .setKey(entry.getKey())
            .setValue(entry.getValue())
            .build();
        size += com.google.protobuf.CodedOutputStream
            .computeMessageSize(1, a__);
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof protobuf_unittest.MapUnittest.TestRecursiveMapMessage)) {
        return super.equals(obj);
      }
      protobuf_unittest.MapUnittest.TestRecursiveMapMessage other = (protobuf_unittest.MapUnittest.TestRecursiveMapMessage) obj;

      if (!internalGetA().equals(
          other.internalGetA())) return false;
      if (!unknownFields.equals(other.unknownFields)) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      if (!internalGetA().getMap().isEmpty()) {
        hash = (37 * hash) + A_FIELD_NUMBER;
        hash = (53 * hash) + internalGetA().hashCode();
      }
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static protobuf_unittest.MapUnittest.TestRecursiveMapMessage parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static protobuf_unittest.MapUnittest.TestRecursiveMapMessage parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static protobuf_unittest.MapUnittest.TestRecursiveMapMessage parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static protobuf_unittest.MapUnittest.TestRecursiveMapMessage parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static protobuf_unittest.MapUnittest.TestRecursiveMapMessage parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static protobuf_unittest.MapUnittest.TestRecursiveMapMessage parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static protobuf_unittest.MapUnittest.TestRecursiveMapMessage parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static protobuf_unittest.MapUnittest.TestRecursiveMapMessage parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static protobuf_unittest.MapUnittest.TestRecursiveMapMessage parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static protobuf_unittest.MapUnittest.TestRecursiveMapMessage parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static protobuf_unittest.MapUnittest.TestRecursiveMapMessage parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static protobuf_unittest.MapUnittest.TestRecursiveMapMessage parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(protobuf_unittest.MapUnittest.TestRecursiveMapMessage prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code protobuf_unittest.TestRecursiveMapMessage}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:protobuf_unittest.TestRecursiveMapMessage)
        protobuf_unittest.MapUnittest.TestRecursiveMapMessageOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return protobuf_unittest.MapUnittest.internal_static_protobuf_unittest_TestRecursiveMapMessage_descriptor;
      }

      @SuppressWarnings({"rawtypes"})
      protected com.google.protobuf.MapField internalGetMapField(
          int number) {
        switch (number) {
          case 1:
            return internalGetA();
          default:
            throw new RuntimeException(
                "Invalid map field number: " + number);
        }
      }
      @SuppressWarnings({"rawtypes"})
      protected com.google.protobuf.MapField internalGetMutableMapField(
          int number) {
        switch (number) {
          case 1:
            return internalGetMutableA();
          default:
            throw new RuntimeException(
                "Invalid map field number: " + number);
        }
      }
      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return protobuf_unittest.MapUnittest.internal_static_protobuf_unittest_TestRecursiveMapMessage_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                protobuf_unittest.MapUnittest.TestRecursiveMapMessage.class, protobuf_unittest.MapUnittest.TestRecursiveMapMessage.Builder.class);
      }

      // Construct using protobuf_unittest.MapUnittest.TestRecursiveMapMessage.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        internalGetMutableA().clear();
        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return protobuf_unittest.MapUnittest.internal_static_protobuf_unittest_TestRecursiveMapMessage_descriptor;
      }

      @java.lang.Override
      public protobuf_unittest.MapUnittest.TestRecursiveMapMessage getDefaultInstanceForType() {
        return protobuf_unittest.MapUnittest.TestRecursiveMapMessage.getDefaultInstance();
      }

      @java.lang.Override
      public protobuf_unittest.MapUnittest.TestRecursiveMapMessage build() {
        protobuf_unittest.MapUnittest.TestRecursiveMapMessage result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public protobuf_unittest.MapUnittest.TestRecursiveMapMessage buildPartial() {
        protobuf_unittest.MapUnittest.TestRecursiveMapMessage result = new protobuf_unittest.MapUnittest.TestRecursiveMapMessage(this);
        int from_bitField0_ = bitField0_;
        result.a_ = internalGetA();
        result.a_.makeImmutable();
        onBuilt();
        return result;
      }

      @java.lang.Override
      public Builder clone() {
        return super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof protobuf_unittest.MapUnittest.TestRecursiveMapMessage) {
          return mergeFrom((protobuf_unittest.MapUnittest.TestRecursiveMapMessage)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(protobuf_unittest.MapUnittest.TestRecursiveMapMessage other) {
        if (other == protobuf_unittest.MapUnittest.TestRecursiveMapMessage.getDefaultInstance()) return this;
        internalGetMutableA().mergeFrom(
            other.internalGetA());
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        protobuf_unittest.MapUnittest.TestRecursiveMapMessage parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (protobuf_unittest.MapUnittest.TestRecursiveMapMessage) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private com.google.protobuf.MapField<
          java.lang.String, protobuf_unittest.MapUnittest.TestRecursiveMapMessage> a_;
      private com.google.protobuf.MapField<java.lang.String, protobuf_unittest.MapUnittest.TestRecursiveMapMessage>
      internalGetA() {
        if (a_ == null) {
          return com.google.protobuf.MapField.emptyMapField(
              ADefaultEntryHolder.defaultEntry);
        }
        return a_;
      }
      private com.google.protobuf.MapField<java.lang.String, protobuf_unittest.MapUnittest.TestRecursiveMapMessage>
      internalGetMutableA() {
        onChanged();;
        if (a_ == null) {
          a_ = com.google.protobuf.MapField.newMapField(
              ADefaultEntryHolder.defaultEntry);
        }
        if (!a_.isMutable()) {
          a_ = a_.copy();
        }
        return a_;
      }

      public int getACount() {
        return internalGetA().getMap().size();
      }
      /**
       * <code>map&lt;string, .protobuf_unittest.TestRecursiveMapMessage&gt; a = 1;</code>
       */

      @java.lang.Override
      public boolean containsA(
          java.lang.String key) {
        if (key == null) { throw new NullPointerException("map key"); }
        return internalGetA().getMap().containsKey(key);
      }
      /**
       * Use {@link #getAMap()} instead.
       */
      @java.lang.Override
      @java.lang.Deprecated
      public java.util.Map<java.lang.String, protobuf_unittest.MapUnittest.TestRecursiveMapMessage> getA() {
        return getAMap();
      }
      /**
       * <code>map&lt;string, .protobuf_unittest.TestRecursiveMapMessage&gt; a = 1;</code>
       */
      @java.lang.Override

      public java.util.Map<java.lang.String, protobuf_unittest.MapUnittest.TestRecursiveMapMessage> getAMap() {
        return internalGetA().getMap();
      }
      /**
       * <code>map&lt;string, .protobuf_unittest.TestRecursiveMapMessage&gt; a = 1;</code>
       */
      @java.lang.Override

      public protobuf_unittest.MapUnittest.TestRecursiveMapMessage getAOrDefault(
          java.lang.String key,
          protobuf_unittest.MapUnittest.TestRecursiveMapMessage defaultValue) {
        if (key == null) { throw new NullPointerException("map key"); }
        java.util.Map<java.lang.String, protobuf_unittest.MapUnittest.TestRecursiveMapMessage> map =
            internalGetA().getMap();
        return map.containsKey(key) ? map.get(key) : defaultValue;
      }
      /**
       * <code>map&lt;string, .protobuf_unittest.TestRecursiveMapMessage&gt; a = 1;</code>
       */
      @java.lang.Override

      public protobuf_unittest.MapUnittest.TestRecursiveMapMessage getAOrThrow(
          java.lang.String key) {
        if (key == null) { throw new NullPointerException("map key"); }
        java.util.Map<java.lang.String, protobuf_unittest.MapUnittest.TestRecursiveMapMessage> map =
            internalGetA().getMap();
        if (!map.containsKey(key)) {
          throw new java.lang.IllegalArgumentException();
        }
        return map.get(key);
      }

      public Builder clearA() {
        internalGetMutableA().getMutableMap()
            .clear();
        return this;
      }
      /**
       * <code>map&lt;string, .protobuf_unittest.TestRecursiveMapMessage&gt; a = 1;</code>
       */

      public Builder removeA(
          java.lang.String key) {
        if (key == null) { throw new NullPointerException("map key"); }
        internalGetMutableA().getMutableMap()
            .remove(key);
        return this;
      }
      /**
       * Use alternate mutation accessors instead.
       */
      @java.lang.Deprecated
      public java.util.Map<java.lang.String, protobuf_unittest.MapUnittest.TestRecursiveMapMessage>
      getMutableA() {
        return internalGetMutableA().getMutableMap();
      }
      /**
       * <code>map&lt;string, .protobuf_unittest.TestRecursiveMapMessage&gt; a = 1;</code>
       */
      public Builder putA(
          java.lang.String key,
          protobuf_unittest.MapUnittest.TestRecursiveMapMessage value) {
        if (key == null) { throw new NullPointerException("map key"); }
        if (value == null) {
  throw new NullPointerException("map value");
}

        internalGetMutableA().getMutableMap()
            .put(key, value);
        return this;
      }
      /**
       * <code>map&lt;string, .protobuf_unittest.TestRecursiveMapMessage&gt; a = 1;</code>
       */

      public Builder putAllA(
          java.util.Map<java.lang.String, protobuf_unittest.MapUnittest.TestRecursiveMapMessage> values) {
        internalGetMutableA().getMutableMap()
            .putAll(values);
        return this;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:protobuf_unittest.TestRecursiveMapMessage)
    }

    // @@protoc_insertion_point(class_scope:protobuf_unittest.TestRecursiveMapMessage)
    private static final protobuf_unittest.MapUnittest.TestRecursiveMapMessage DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new protobuf_unittest.MapUnittest.TestRecursiveMapMessage();
    }

    public static protobuf_unittest.MapUnittest.TestRecursiveMapMessage getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<TestRecursiveMapMessage>
        PARSER = new com.google.protobuf.AbstractParser<TestRecursiveMapMessage>() {
      @java.lang.Override
      public TestRecursiveMapMessage parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new TestRecursiveMapMessage(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<TestRecursiveMapMessage> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<TestRecursiveMapMessage> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public protobuf_unittest.MapUnittest.TestRecursiveMapMessage getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_protobuf_unittest_TestMap_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_protobuf_unittest_TestMap_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_protobuf_unittest_TestMap_MapInt32Int32Entry_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_protobuf_unittest_TestMap_MapInt32Int32Entry_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_protobuf_unittest_TestMap_MapInt64Int64Entry_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_protobuf_unittest_TestMap_MapInt64Int64Entry_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_protobuf_unittest_TestMap_MapUint32Uint32Entry_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_protobuf_unittest_TestMap_MapUint32Uint32Entry_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_protobuf_unittest_TestMap_MapUint64Uint64Entry_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_protobuf_unittest_TestMap_MapUint64Uint64Entry_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_protobuf_unittest_TestMap_MapSint32Sint32Entry_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_protobuf_unittest_TestMap_MapSint32Sint32Entry_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_protobuf_unittest_TestMap_MapSint64Sint64Entry_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_protobuf_unittest_TestMap_MapSint64Sint64Entry_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_protobuf_unittest_TestMap_MapFixed32Fixed32Entry_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_protobuf_unittest_TestMap_MapFixed32Fixed32Entry_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_protobuf_unittest_TestMap_MapFixed64Fixed64Entry_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_protobuf_unittest_TestMap_MapFixed64Fixed64Entry_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_protobuf_unittest_TestMap_MapSfixed32Sfixed32Entry_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_protobuf_unittest_TestMap_MapSfixed32Sfixed32Entry_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_protobuf_unittest_TestMap_MapSfixed64Sfixed64Entry_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_protobuf_unittest_TestMap_MapSfixed64Sfixed64Entry_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_protobuf_unittest_TestMap_MapInt32FloatEntry_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_protobuf_unittest_TestMap_MapInt32FloatEntry_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_protobuf_unittest_TestMap_MapInt32DoubleEntry_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_protobuf_unittest_TestMap_MapInt32DoubleEntry_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_protobuf_unittest_TestMap_MapBoolBoolEntry_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_protobuf_unittest_TestMap_MapBoolBoolEntry_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_protobuf_unittest_TestMap_MapStringStringEntry_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_protobuf_unittest_TestMap_MapStringStringEntry_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_protobuf_unittest_TestMap_MapInt32BytesEntry_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_protobuf_unittest_TestMap_MapInt32BytesEntry_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_protobuf_unittest_TestMap_MapInt32EnumEntry_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_protobuf_unittest_TestMap_MapInt32EnumEntry_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_protobuf_unittest_TestMap_MapInt32ForeignMessageEntry_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_protobuf_unittest_TestMap_MapInt32ForeignMessageEntry_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_protobuf_unittest_TestMap_MapStringForeignMessageEntry_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_protobuf_unittest_TestMap_MapStringForeignMessageEntry_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_protobuf_unittest_TestMap_MapInt32AllTypesEntry_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_protobuf_unittest_TestMap_MapInt32AllTypesEntry_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_protobuf_unittest_TestMapSubmessage_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_protobuf_unittest_TestMapSubmessage_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_protobuf_unittest_TestMessageMap_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_protobuf_unittest_TestMessageMap_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_protobuf_unittest_TestMessageMap_MapInt32MessageEntry_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_protobuf_unittest_TestMessageMap_MapInt32MessageEntry_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_protobuf_unittest_TestSameTypeMap_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_protobuf_unittest_TestSameTypeMap_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_protobuf_unittest_TestSameTypeMap_Map1Entry_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_protobuf_unittest_TestSameTypeMap_Map1Entry_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_protobuf_unittest_TestSameTypeMap_Map2Entry_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_protobuf_unittest_TestSameTypeMap_Map2Entry_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_protobuf_unittest_TestRequiredMessageMap_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_protobuf_unittest_TestRequiredMessageMap_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_protobuf_unittest_TestRequiredMessageMap_MapFieldEntry_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_protobuf_unittest_TestRequiredMessageMap_MapFieldEntry_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_protobuf_unittest_TestArenaMap_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_protobuf_unittest_TestArenaMap_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_protobuf_unittest_TestArenaMap_MapInt32Int32Entry_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_protobuf_unittest_TestArenaMap_MapInt32Int32Entry_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_protobuf_unittest_TestArenaMap_MapInt64Int64Entry_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_protobuf_unittest_TestArenaMap_MapInt64Int64Entry_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_protobuf_unittest_TestArenaMap_MapUint32Uint32Entry_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_protobuf_unittest_TestArenaMap_MapUint32Uint32Entry_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_protobuf_unittest_TestArenaMap_MapUint64Uint64Entry_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_protobuf_unittest_TestArenaMap_MapUint64Uint64Entry_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_protobuf_unittest_TestArenaMap_MapSint32Sint32Entry_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_protobuf_unittest_TestArenaMap_MapSint32Sint32Entry_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_protobuf_unittest_TestArenaMap_MapSint64Sint64Entry_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_protobuf_unittest_TestArenaMap_MapSint64Sint64Entry_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_protobuf_unittest_TestArenaMap_MapFixed32Fixed32Entry_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_protobuf_unittest_TestArenaMap_MapFixed32Fixed32Entry_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_protobuf_unittest_TestArenaMap_MapFixed64Fixed64Entry_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_protobuf_unittest_TestArenaMap_MapFixed64Fixed64Entry_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_protobuf_unittest_TestArenaMap_MapSfixed32Sfixed32Entry_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_protobuf_unittest_TestArenaMap_MapSfixed32Sfixed32Entry_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_protobuf_unittest_TestArenaMap_MapSfixed64Sfixed64Entry_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_protobuf_unittest_TestArenaMap_MapSfixed64Sfixed64Entry_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_protobuf_unittest_TestArenaMap_MapInt32FloatEntry_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_protobuf_unittest_TestArenaMap_MapInt32FloatEntry_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_protobuf_unittest_TestArenaMap_MapInt32DoubleEntry_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_protobuf_unittest_TestArenaMap_MapInt32DoubleEntry_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_protobuf_unittest_TestArenaMap_MapBoolBoolEntry_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_protobuf_unittest_TestArenaMap_MapBoolBoolEntry_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_protobuf_unittest_TestArenaMap_MapStringStringEntry_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_protobuf_unittest_TestArenaMap_MapStringStringEntry_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_protobuf_unittest_TestArenaMap_MapInt32BytesEntry_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_protobuf_unittest_TestArenaMap_MapInt32BytesEntry_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_protobuf_unittest_TestArenaMap_MapInt32EnumEntry_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_protobuf_unittest_TestArenaMap_MapInt32EnumEntry_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_protobuf_unittest_TestArenaMap_MapInt32ForeignMessageEntry_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_protobuf_unittest_TestArenaMap_MapInt32ForeignMessageEntry_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_protobuf_unittest_MessageContainingEnumCalledType_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_protobuf_unittest_MessageContainingEnumCalledType_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_protobuf_unittest_MessageContainingEnumCalledType_TypeEntry_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_protobuf_unittest_MessageContainingEnumCalledType_TypeEntry_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_protobuf_unittest_MessageContainingMapCalledEntry_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_protobuf_unittest_MessageContainingMapCalledEntry_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_protobuf_unittest_MessageContainingMapCalledEntry_EntryEntry_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_protobuf_unittest_MessageContainingMapCalledEntry_EntryEntry_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_protobuf_unittest_TestRecursiveMapMessage_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_protobuf_unittest_TestRecursiveMapMessage_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_protobuf_unittest_TestRecursiveMapMessage_AEntry_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_protobuf_unittest_TestRecursiveMapMessage_AEntry_fieldAccessorTable;

  public static com.google.protobuf.Descriptors.FileDescriptor
      getDescriptor() {
    return descriptor;
  }
  private static  com.google.protobuf.Descriptors.FileDescriptor
      descriptor;
  static {
    java.lang.String[] descriptorData = {
      "\n\"google/protobuf/map_unittest.proto\022\021pr" +
      "otobuf_unittest\032\036google/protobuf/unittes" +
      "t.proto\"\377\024\n\007TestMap\022F\n\017map_int32_int32\030\001" +
      " \003(\0132-.protobuf_unittest.TestMap.MapInt3" +
      "2Int32Entry\022F\n\017map_int64_int64\030\002 \003(\0132-.p" +
      "rotobuf_unittest.TestMap.MapInt64Int64En" +
      "try\022J\n\021map_uint32_uint32\030\003 \003(\0132/.protobu" +
      "f_unittest.TestMap.MapUint32Uint32Entry\022" +
      "J\n\021map_uint64_uint64\030\004 \003(\0132/.protobuf_un" +
      "ittest.TestMap.MapUint64Uint64Entry\022J\n\021m" +
      "ap_sint32_sint32\030\005 \003(\0132/.protobuf_unitte" +
      "st.TestMap.MapSint32Sint32Entry\022J\n\021map_s" +
      "int64_sint64\030\006 \003(\0132/.protobuf_unittest.T" +
      "estMap.MapSint64Sint64Entry\022N\n\023map_fixed" +
      "32_fixed32\030\007 \003(\01321.protobuf_unittest.Tes" +
      "tMap.MapFixed32Fixed32Entry\022N\n\023map_fixed" +
      "64_fixed64\030\010 \003(\01321.protobuf_unittest.Tes" +
      "tMap.MapFixed64Fixed64Entry\022R\n\025map_sfixe" +
      "d32_sfixed32\030\t \003(\01323.protobuf_unittest.T" +
      "estMap.MapSfixed32Sfixed32Entry\022R\n\025map_s" +
      "fixed64_sfixed64\030\n \003(\01323.protobuf_unitte" +
      "st.TestMap.MapSfixed64Sfixed64Entry\022F\n\017m" +
      "ap_int32_float\030\013 \003(\0132-.protobuf_unittest" +
      ".TestMap.MapInt32FloatEntry\022H\n\020map_int32" +
      "_double\030\014 \003(\0132..protobuf_unittest.TestMa" +
      "p.MapInt32DoubleEntry\022B\n\rmap_bool_bool\030\r" +
      " \003(\0132+.protobuf_unittest.TestMap.MapBool" +
      "BoolEntry\022J\n\021map_string_string\030\016 \003(\0132/.p" +
      "rotobuf_unittest.TestMap.MapStringString" +
      "Entry\022F\n\017map_int32_bytes\030\017 \003(\0132-.protobu" +
      "f_unittest.TestMap.MapInt32BytesEntry\022D\n" +
      "\016map_int32_enum\030\020 \003(\0132,.protobuf_unittes" +
      "t.TestMap.MapInt32EnumEntry\022Y\n\031map_int32" +
      "_foreign_message\030\021 \003(\01326.protobuf_unitte" +
      "st.TestMap.MapInt32ForeignMessageEntry\022[" +
      "\n\032map_string_foreign_message\030\022 \003(\01327.pro" +
      "tobuf_unittest.TestMap.MapStringForeignM" +
      "essageEntry\022M\n\023map_int32_all_types\030\023 \003(\013" +
      "20.protobuf_unittest.TestMap.MapInt32All" +
      "TypesEntry\0324\n\022MapInt32Int32Entry\022\013\n\003key\030" +
      "\001 \001(\005\022\r\n\005value\030\002 \001(\005:\0028\001\0324\n\022MapInt64Int6" +
      "4Entry\022\013\n\003key\030\001 \001(\003\022\r\n\005value\030\002 \001(\003:\0028\001\0326" +
      "\n\024MapUint32Uint32Entry\022\013\n\003key\030\001 \001(\r\022\r\n\005v" +
      "alue\030\002 \001(\r:\0028\001\0326\n\024MapUint64Uint64Entry\022\013" +
      "\n\003key\030\001 \001(\004\022\r\n\005value\030\002 \001(\004:\0028\001\0326\n\024MapSin" +
      "t32Sint32Entry\022\013\n\003key\030\001 \001(\021\022\r\n\005value\030\002 \001" +
      "(\021:\0028\001\0326\n\024MapSint64Sint64Entry\022\013\n\003key\030\001 " +
      "\001(\022\022\r\n\005value\030\002 \001(\022:\0028\001\0328\n\026MapFixed32Fixe" +
      "d32Entry\022\013\n\003key\030\001 \001(\007\022\r\n\005value\030\002 \001(\007:\0028\001" +
      "\0328\n\026MapFixed64Fixed64Entry\022\013\n\003key\030\001 \001(\006\022" +
      "\r\n\005value\030\002 \001(\006:\0028\001\032:\n\030MapSfixed32Sfixed3" +
      "2Entry\022\013\n\003key\030\001 \001(\017\022\r\n\005value\030\002 \001(\017:\0028\001\032:" +
      "\n\030MapSfixed64Sfixed64Entry\022\013\n\003key\030\001 \001(\020\022" +
      "\r\n\005value\030\002 \001(\020:\0028\001\0324\n\022MapInt32FloatEntry" +
      "\022\013\n\003key\030\001 \001(\005\022\r\n\005value\030\002 \001(\002:\0028\001\0325\n\023MapI" +
      "nt32DoubleEntry\022\013\n\003key\030\001 \001(\005\022\r\n\005value\030\002 " +
      "\001(\001:\0028\001\0322\n\020MapBoolBoolEntry\022\013\n\003key\030\001 \001(\010" +
      "\022\r\n\005value\030\002 \001(\010:\0028\001\0326\n\024MapStringStringEn" +
      "try\022\013\n\003key\030\001 \001(\t\022\r\n\005value\030\002 \001(\t:\0028\001\0324\n\022M" +
      "apInt32BytesEntry\022\013\n\003key\030\001 \001(\005\022\r\n\005value\030" +
      "\002 \001(\014:\0028\001\032O\n\021MapInt32EnumEntry\022\013\n\003key\030\001 " +
      "\001(\005\022)\n\005value\030\002 \001(\0162\032.protobuf_unittest.M" +
      "apEnum:\0028\001\032`\n\033MapInt32ForeignMessageEntr" +
      "y\022\013\n\003key\030\001 \001(\005\0220\n\005value\030\002 \001(\0132!.protobuf" +
      "_unittest.ForeignMessage:\0028\001\032a\n\034MapStrin" +
      "gForeignMessageEntry\022\013\n\003key\030\001 \001(\t\0220\n\005val" +
      "ue\030\002 \001(\0132!.protobuf_unittest.ForeignMess" +
      "age:\0028\001\032X\n\025MapInt32AllTypesEntry\022\013\n\003key\030" +
      "\001 \001(\005\022.\n\005value\030\002 \001(\0132\037.protobuf_unittest" +
      ".TestAllTypes:\0028\001\"A\n\021TestMapSubmessage\022," +
      "\n\010test_map\030\001 \001(\0132\032.protobuf_unittest.Tes" +
      "tMap\"\274\001\n\016TestMessageMap\022Q\n\021map_int32_mes" +
      "sage\030\001 \003(\01326.protobuf_unittest.TestMessa" +
      "geMap.MapInt32MessageEntry\032W\n\024MapInt32Me" +
      "ssageEntry\022\013\n\003key\030\001 \001(\005\022.\n\005value\030\002 \001(\0132\037" +
      ".protobuf_unittest.TestAllTypes:\0028\001\"\343\001\n\017" +
      "TestSameTypeMap\022:\n\004map1\030\001 \003(\0132,.protobuf" +
      "_unittest.TestSameTypeMap.Map1Entry\022:\n\004m" +
      "ap2\030\002 \003(\0132,.protobuf_unittest.TestSameTy" +
      "peMap.Map2Entry\032+\n\tMap1Entry\022\013\n\003key\030\001 \001(" +
      "\005\022\r\n\005value\030\002 \001(\005:\0028\001\032+\n\tMap2Entry\022\013\n\003key" +
      "\030\001 \001(\005\022\r\n\005value\030\002 \001(\005:\0028\001\"\266\001\n\026TestRequir" +
      "edMessageMap\022J\n\tmap_field\030\001 \003(\01327.protob" +
      "uf_unittest.TestRequiredMessageMap.MapFi" +
      "eldEntry\032P\n\rMapFieldEntry\022\013\n\003key\030\001 \001(\005\022." +
      "\n\005value\030\002 \001(\0132\037.protobuf_unittest.TestRe" +
      "quired:\0028\001\"\360\022\n\014TestArenaMap\022K\n\017map_int32" +
      "_int32\030\001 \003(\01322.protobuf_unittest.TestAre" +
      "naMap.MapInt32Int32Entry\022K\n\017map_int64_in" +
      "t64\030\002 \003(\01322.protobuf_unittest.TestArenaM" +
      "ap.MapInt64Int64Entry\022O\n\021map_uint32_uint" +
      "32\030\003 \003(\01324.protobuf_unittest.TestArenaMa" +
      "p.MapUint32Uint32Entry\022O\n\021map_uint64_uin" +
      "t64\030\004 \003(\01324.protobuf_unittest.TestArenaM" +
      "ap.MapUint64Uint64Entry\022O\n\021map_sint32_si" +
      "nt32\030\005 \003(\01324.protobuf_unittest.TestArena" +
      "Map.MapSint32Sint32Entry\022O\n\021map_sint64_s" +
      "int64\030\006 \003(\01324.protobuf_unittest.TestAren" +
      "aMap.MapSint64Sint64Entry\022S\n\023map_fixed32" +
      "_fixed32\030\007 \003(\01326.protobuf_unittest.TestA" +
      "renaMap.MapFixed32Fixed32Entry\022S\n\023map_fi" +
      "xed64_fixed64\030\010 \003(\01326.protobuf_unittest." +
      "TestArenaMap.MapFixed64Fixed64Entry\022W\n\025m" +
      "ap_sfixed32_sfixed32\030\t \003(\01328.protobuf_un" +
      "ittest.TestArenaMap.MapSfixed32Sfixed32E" +
      "ntry\022W\n\025map_sfixed64_sfixed64\030\n \003(\01328.pr" +
      "otobuf_unittest.TestArenaMap.MapSfixed64" +
      "Sfixed64Entry\022K\n\017map_int32_float\030\013 \003(\01322" +
      ".protobuf_unittest.TestArenaMap.MapInt32" +
      "FloatEntry\022M\n\020map_int32_double\030\014 \003(\01323.p" +
      "rotobuf_unittest.TestArenaMap.MapInt32Do" +
      "ubleEntry\022G\n\rmap_bool_bool\030\r \003(\01320.proto" +
      "buf_unittest.TestArenaMap.MapBoolBoolEnt" +
      "ry\022O\n\021map_string_string\030\016 \003(\01324.protobuf" +
      "_unittest.TestArenaMap.MapStringStringEn" +
      "try\022K\n\017map_int32_bytes\030\017 \003(\01322.protobuf_" +
      "unittest.TestArenaMap.MapInt32BytesEntry" +
      "\022I\n\016map_int32_enum\030\020 \003(\01321.protobuf_unit" +
      "test.TestArenaMap.MapInt32EnumEntry\022^\n\031m" +
      "ap_int32_foreign_message\030\021 \003(\0132;.protobu" +
      "f_unittest.TestArenaMap.MapInt32ForeignM" +
      "essageEntry\0324\n\022MapInt32Int32Entry\022\013\n\003key" +
      "\030\001 \001(\005\022\r\n\005value\030\002 \001(\005:\0028\001\0324\n\022MapInt64Int" +
      "64Entry\022\013\n\003key\030\001 \001(\003\022\r\n\005value\030\002 \001(\003:\0028\001\032" +
      "6\n\024MapUint32Uint32Entry\022\013\n\003key\030\001 \001(\r\022\r\n\005" +
      "value\030\002 \001(\r:\0028\001\0326\n\024MapUint64Uint64Entry\022" +
      "\013\n\003key\030\001 \001(\004\022\r\n\005value\030\002 \001(\004:\0028\001\0326\n\024MapSi" +
      "nt32Sint32Entry\022\013\n\003key\030\001 \001(\021\022\r\n\005value\030\002 " +
      "\001(\021:\0028\001\0326\n\024MapSint64Sint64Entry\022\013\n\003key\030\001" +
      " \001(\022\022\r\n\005value\030\002 \001(\022:\0028\001\0328\n\026MapFixed32Fix" +
      "ed32Entry\022\013\n\003key\030\001 \001(\007\022\r\n\005value\030\002 \001(\007:\0028" +
      "\001\0328\n\026MapFixed64Fixed64Entry\022\013\n\003key\030\001 \001(\006" +
      "\022\r\n\005value\030\002 \001(\006:\0028\001\032:\n\030MapSfixed32Sfixed" +
      "32Entry\022\013\n\003key\030\001 \001(\017\022\r\n\005value\030\002 \001(\017:\0028\001\032" +
      ":\n\030MapSfixed64Sfixed64Entry\022\013\n\003key\030\001 \001(\020" +
      "\022\r\n\005value\030\002 \001(\020:\0028\001\0324\n\022MapInt32FloatEntr" +
      "y\022\013\n\003key\030\001 \001(\005\022\r\n\005value\030\002 \001(\002:\0028\001\0325\n\023Map" +
      "Int32DoubleEntry\022\013\n\003key\030\001 \001(\005\022\r\n\005value\030\002" +
      " \001(\001:\0028\001\0322\n\020MapBoolBoolEntry\022\013\n\003key\030\001 \001(" +
      "\010\022\r\n\005value\030\002 \001(\010:\0028\001\0326\n\024MapStringStringE" +
      "ntry\022\013\n\003key\030\001 \001(\t\022\r\n\005value\030\002 \001(\t:\0028\001\0324\n\022" +
      "MapInt32BytesEntry\022\013\n\003key\030\001 \001(\005\022\r\n\005value" +
      "\030\002 \001(\014:\0028\001\032O\n\021MapInt32EnumEntry\022\013\n\003key\030\001" +
      " \001(\005\022)\n\005value\030\002 \001(\0162\032.protobuf_unittest." +
      "MapEnum:\0028\001\032`\n\033MapInt32ForeignMessageEnt" +
      "ry\022\013\n\003key\030\001 \001(\005\0220\n\005value\030\002 \001(\0132!.protobu" +
      "f_unittest.ForeignMessage:\0028\001\"\344\001\n\037Messag" +
      "eContainingEnumCalledType\022J\n\004type\030\001 \003(\0132" +
      "<.protobuf_unittest.MessageContainingEnu" +
      "mCalledType.TypeEntry\032_\n\tTypeEntry\022\013\n\003ke" +
      "y\030\001 \001(\t\022A\n\005value\030\002 \001(\01322.protobuf_unitte" +
      "st.MessageContainingEnumCalledType:\0028\001\"\024" +
      "\n\004Type\022\014\n\010TYPE_FOO\020\000\"\235\001\n\037MessageContaini" +
      "ngMapCalledEntry\022L\n\005entry\030\001 \003(\0132=.protob" +
      "uf_unittest.MessageContainingMapCalledEn" +
      "try.EntryEntry\032,\n\nEntryEntry\022\013\n\003key\030\001 \001(" +
      "\005\022\r\n\005value\030\002 \001(\005:\0028\001\"\255\001\n\027TestRecursiveMa" +
      "pMessage\022<\n\001a\030\001 \003(\01321.protobuf_unittest." +
      "TestRecursiveMapMessage.AEntry\032T\n\006AEntry" +
      "\022\013\n\003key\030\001 \001(\t\0229\n\005value\030\002 \001(\0132*.protobuf_" +
      "unittest.TestRecursiveMapMessage:\0028\001*?\n\007" +
      "MapEnum\022\020\n\014MAP_ENUM_FOO\020\000\022\020\n\014MAP_ENUM_BA" +
      "R\020\001\022\020\n\014MAP_ENUM_BAZ\020\002B\003\370\001\001b\006proto3"
    };
    descriptor = com.google.protobuf.Descriptors.FileDescriptor
      .internalBuildGeneratedFileFrom(descriptorData,
        new com.google.protobuf.Descriptors.FileDescriptor[] {
          protobuf_unittest.UnittestProto.getDescriptor(),
        });
    internal_static_protobuf_unittest_TestMap_descriptor =
      getDescriptor().getMessageTypes().get(0);
    internal_static_protobuf_unittest_TestMap_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_protobuf_unittest_TestMap_descriptor,
        new java.lang.String[] { "MapInt32Int32", "MapInt64Int64", "MapUint32Uint32", "MapUint64Uint64", "MapSint32Sint32", "MapSint64Sint64", "MapFixed32Fixed32", "MapFixed64Fixed64", "MapSfixed32Sfixed32", "MapSfixed64Sfixed64", "MapInt32Float", "MapInt32Double", "MapBoolBool", "MapStringString", "MapInt32Bytes", "MapInt32Enum", "MapInt32ForeignMessage", "MapStringForeignMessage", "MapInt32AllTypes", });
    internal_static_protobuf_unittest_TestMap_MapInt32Int32Entry_descriptor =
      internal_static_protobuf_unittest_TestMap_descriptor.getNestedTypes().get(0);
    internal_static_protobuf_unittest_TestMap_MapInt32Int32Entry_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_protobuf_unittest_TestMap_MapInt32Int32Entry_descriptor,
        new java.lang.String[] { "Key", "Value", });
    internal_static_protobuf_unittest_TestMap_MapInt64Int64Entry_descriptor =
      internal_static_protobuf_unittest_TestMap_descriptor.getNestedTypes().get(1);
    internal_static_protobuf_unittest_TestMap_MapInt64Int64Entry_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_protobuf_unittest_TestMap_MapInt64Int64Entry_descriptor,
        new java.lang.String[] { "Key", "Value", });
    internal_static_protobuf_unittest_TestMap_MapUint32Uint32Entry_descriptor =
      internal_static_protobuf_unittest_TestMap_descriptor.getNestedTypes().get(2);
    internal_static_protobuf_unittest_TestMap_MapUint32Uint32Entry_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_protobuf_unittest_TestMap_MapUint32Uint32Entry_descriptor,
        new java.lang.String[] { "Key", "Value", });
    internal_static_protobuf_unittest_TestMap_MapUint64Uint64Entry_descriptor =
      internal_static_protobuf_unittest_TestMap_descriptor.getNestedTypes().get(3);
    internal_static_protobuf_unittest_TestMap_MapUint64Uint64Entry_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_protobuf_unittest_TestMap_MapUint64Uint64Entry_descriptor,
        new java.lang.String[] { "Key", "Value", });
    internal_static_protobuf_unittest_TestMap_MapSint32Sint32Entry_descriptor =
      internal_static_protobuf_unittest_TestMap_descriptor.getNestedTypes().get(4);
    internal_static_protobuf_unittest_TestMap_MapSint32Sint32Entry_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_protobuf_unittest_TestMap_MapSint32Sint32Entry_descriptor,
        new java.lang.String[] { "Key", "Value", });
    internal_static_protobuf_unittest_TestMap_MapSint64Sint64Entry_descriptor =
      internal_static_protobuf_unittest_TestMap_descriptor.getNestedTypes().get(5);
    internal_static_protobuf_unittest_TestMap_MapSint64Sint64Entry_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_protobuf_unittest_TestMap_MapSint64Sint64Entry_descriptor,
        new java.lang.String[] { "Key", "Value", });
    internal_static_protobuf_unittest_TestMap_MapFixed32Fixed32Entry_descriptor =
      internal_static_protobuf_unittest_TestMap_descriptor.getNestedTypes().get(6);
    internal_static_protobuf_unittest_TestMap_MapFixed32Fixed32Entry_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_protobuf_unittest_TestMap_MapFixed32Fixed32Entry_descriptor,
        new java.lang.String[] { "Key", "Value", });
    internal_static_protobuf_unittest_TestMap_MapFixed64Fixed64Entry_descriptor =
      internal_static_protobuf_unittest_TestMap_descriptor.getNestedTypes().get(7);
    internal_static_protobuf_unittest_TestMap_MapFixed64Fixed64Entry_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_protobuf_unittest_TestMap_MapFixed64Fixed64Entry_descriptor,
        new java.lang.String[] { "Key", "Value", });
    internal_static_protobuf_unittest_TestMap_MapSfixed32Sfixed32Entry_descriptor =
      internal_static_protobuf_unittest_TestMap_descriptor.getNestedTypes().get(8);
    internal_static_protobuf_unittest_TestMap_MapSfixed32Sfixed32Entry_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_protobuf_unittest_TestMap_MapSfixed32Sfixed32Entry_descriptor,
        new java.lang.String[] { "Key", "Value", });
    internal_static_protobuf_unittest_TestMap_MapSfixed64Sfixed64Entry_descriptor =
      internal_static_protobuf_unittest_TestMap_descriptor.getNestedTypes().get(9);
    internal_static_protobuf_unittest_TestMap_MapSfixed64Sfixed64Entry_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_protobuf_unittest_TestMap_MapSfixed64Sfixed64Entry_descriptor,
        new java.lang.String[] { "Key", "Value", });
    internal_static_protobuf_unittest_TestMap_MapInt32FloatEntry_descriptor =
      internal_static_protobuf_unittest_TestMap_descriptor.getNestedTypes().get(10);
    internal_static_protobuf_unittest_TestMap_MapInt32FloatEntry_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_protobuf_unittest_TestMap_MapInt32FloatEntry_descriptor,
        new java.lang.String[] { "Key", "Value", });
    internal_static_protobuf_unittest_TestMap_MapInt32DoubleEntry_descriptor =
      internal_static_protobuf_unittest_TestMap_descriptor.getNestedTypes().get(11);
    internal_static_protobuf_unittest_TestMap_MapInt32DoubleEntry_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_protobuf_unittest_TestMap_MapInt32DoubleEntry_descriptor,
        new java.lang.String[] { "Key", "Value", });
    internal_static_protobuf_unittest_TestMap_MapBoolBoolEntry_descriptor =
      internal_static_protobuf_unittest_TestMap_descriptor.getNestedTypes().get(12);
    internal_static_protobuf_unittest_TestMap_MapBoolBoolEntry_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_protobuf_unittest_TestMap_MapBoolBoolEntry_descriptor,
        new java.lang.String[] { "Key", "Value", });
    internal_static_protobuf_unittest_TestMap_MapStringStringEntry_descriptor =
      internal_static_protobuf_unittest_TestMap_descriptor.getNestedTypes().get(13);
    internal_static_protobuf_unittest_TestMap_MapStringStringEntry_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_protobuf_unittest_TestMap_MapStringStringEntry_descriptor,
        new java.lang.String[] { "Key", "Value", });
    internal_static_protobuf_unittest_TestMap_MapInt32BytesEntry_descriptor =
      internal_static_protobuf_unittest_TestMap_descriptor.getNestedTypes().get(14);
    internal_static_protobuf_unittest_TestMap_MapInt32BytesEntry_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_protobuf_unittest_TestMap_MapInt32BytesEntry_descriptor,
        new java.lang.String[] { "Key", "Value", });
    internal_static_protobuf_unittest_TestMap_MapInt32EnumEntry_descriptor =
      internal_static_protobuf_unittest_TestMap_descriptor.getNestedTypes().get(15);
    internal_static_protobuf_unittest_TestMap_MapInt32EnumEntry_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_protobuf_unittest_TestMap_MapInt32EnumEntry_descriptor,
        new java.lang.String[] { "Key", "Value", });
    internal_static_protobuf_unittest_TestMap_MapInt32ForeignMessageEntry_descriptor =
      internal_static_protobuf_unittest_TestMap_descriptor.getNestedTypes().get(16);
    internal_static_protobuf_unittest_TestMap_MapInt32ForeignMessageEntry_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_protobuf_unittest_TestMap_MapInt32ForeignMessageEntry_descriptor,
        new java.lang.String[] { "Key", "Value", });
    internal_static_protobuf_unittest_TestMap_MapStringForeignMessageEntry_descriptor =
      internal_static_protobuf_unittest_TestMap_descriptor.getNestedTypes().get(17);
    internal_static_protobuf_unittest_TestMap_MapStringForeignMessageEntry_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_protobuf_unittest_TestMap_MapStringForeignMessageEntry_descriptor,
        new java.lang.String[] { "Key", "Value", });
    internal_static_protobuf_unittest_TestMap_MapInt32AllTypesEntry_descriptor =
      internal_static_protobuf_unittest_TestMap_descriptor.getNestedTypes().get(18);
    internal_static_protobuf_unittest_TestMap_MapInt32AllTypesEntry_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_protobuf_unittest_TestMap_MapInt32AllTypesEntry_descriptor,
        new java.lang.String[] { "Key", "Value", });
    internal_static_protobuf_unittest_TestMapSubmessage_descriptor =
      getDescriptor().getMessageTypes().get(1);
    internal_static_protobuf_unittest_TestMapSubmessage_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_protobuf_unittest_TestMapSubmessage_descriptor,
        new java.lang.String[] { "TestMap", });
    internal_static_protobuf_unittest_TestMessageMap_descriptor =
      getDescriptor().getMessageTypes().get(2);
    internal_static_protobuf_unittest_TestMessageMap_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_protobuf_unittest_TestMessageMap_descriptor,
        new java.lang.String[] { "MapInt32Message", });
    internal_static_protobuf_unittest_TestMessageMap_MapInt32MessageEntry_descriptor =
      internal_static_protobuf_unittest_TestMessageMap_descriptor.getNestedTypes().get(0);
    internal_static_protobuf_unittest_TestMessageMap_MapInt32MessageEntry_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_protobuf_unittest_TestMessageMap_MapInt32MessageEntry_descriptor,
        new java.lang.String[] { "Key", "Value", });
    internal_static_protobuf_unittest_TestSameTypeMap_descriptor =
      getDescriptor().getMessageTypes().get(3);
    internal_static_protobuf_unittest_TestSameTypeMap_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_protobuf_unittest_TestSameTypeMap_descriptor,
        new java.lang.String[] { "Map1", "Map2", });
    internal_static_protobuf_unittest_TestSameTypeMap_Map1Entry_descriptor =
      internal_static_protobuf_unittest_TestSameTypeMap_descriptor.getNestedTypes().get(0);
    internal_static_protobuf_unittest_TestSameTypeMap_Map1Entry_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_protobuf_unittest_TestSameTypeMap_Map1Entry_descriptor,
        new java.lang.String[] { "Key", "Value", });
    internal_static_protobuf_unittest_TestSameTypeMap_Map2Entry_descriptor =
      internal_static_protobuf_unittest_TestSameTypeMap_descriptor.getNestedTypes().get(1);
    internal_static_protobuf_unittest_TestSameTypeMap_Map2Entry_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_protobuf_unittest_TestSameTypeMap_Map2Entry_descriptor,
        new java.lang.String[] { "Key", "Value", });
    internal_static_protobuf_unittest_TestRequiredMessageMap_descriptor =
      getDescriptor().getMessageTypes().get(4);
    internal_static_protobuf_unittest_TestRequiredMessageMap_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_protobuf_unittest_TestRequiredMessageMap_descriptor,
        new java.lang.String[] { "MapField", });
    internal_static_protobuf_unittest_TestRequiredMessageMap_MapFieldEntry_descriptor =
      internal_static_protobuf_unittest_TestRequiredMessageMap_descriptor.getNestedTypes().get(0);
    internal_static_protobuf_unittest_TestRequiredMessageMap_MapFieldEntry_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_protobuf_unittest_TestRequiredMessageMap_MapFieldEntry_descriptor,
        new java.lang.String[] { "Key", "Value", });
    internal_static_protobuf_unittest_TestArenaMap_descriptor =
      getDescriptor().getMessageTypes().get(5);
    internal_static_protobuf_unittest_TestArenaMap_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_protobuf_unittest_TestArenaMap_descriptor,
        new java.lang.String[] { "MapInt32Int32", "MapInt64Int64", "MapUint32Uint32", "MapUint64Uint64", "MapSint32Sint32", "MapSint64Sint64", "MapFixed32Fixed32", "MapFixed64Fixed64", "MapSfixed32Sfixed32", "MapSfixed64Sfixed64", "MapInt32Float", "MapInt32Double", "MapBoolBool", "MapStringString", "MapInt32Bytes", "MapInt32Enum", "MapInt32ForeignMessage", });
    internal_static_protobuf_unittest_TestArenaMap_MapInt32Int32Entry_descriptor =
      internal_static_protobuf_unittest_TestArenaMap_descriptor.getNestedTypes().get(0);
    internal_static_protobuf_unittest_TestArenaMap_MapInt32Int32Entry_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_protobuf_unittest_TestArenaMap_MapInt32Int32Entry_descriptor,
        new java.lang.String[] { "Key", "Value", });
    internal_static_protobuf_unittest_TestArenaMap_MapInt64Int64Entry_descriptor =
      internal_static_protobuf_unittest_TestArenaMap_descriptor.getNestedTypes().get(1);
    internal_static_protobuf_unittest_TestArenaMap_MapInt64Int64Entry_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_protobuf_unittest_TestArenaMap_MapInt64Int64Entry_descriptor,
        new java.lang.String[] { "Key", "Value", });
    internal_static_protobuf_unittest_TestArenaMap_MapUint32Uint32Entry_descriptor =
      internal_static_protobuf_unittest_TestArenaMap_descriptor.getNestedTypes().get(2);
    internal_static_protobuf_unittest_TestArenaMap_MapUint32Uint32Entry_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_protobuf_unittest_TestArenaMap_MapUint32Uint32Entry_descriptor,
        new java.lang.String[] { "Key", "Value", });
    internal_static_protobuf_unittest_TestArenaMap_MapUint64Uint64Entry_descriptor =
      internal_static_protobuf_unittest_TestArenaMap_descriptor.getNestedTypes().get(3);
    internal_static_protobuf_unittest_TestArenaMap_MapUint64Uint64Entry_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_protobuf_unittest_TestArenaMap_MapUint64Uint64Entry_descriptor,
        new java.lang.String[] { "Key", "Value", });
    internal_static_protobuf_unittest_TestArenaMap_MapSint32Sint32Entry_descriptor =
      internal_static_protobuf_unittest_TestArenaMap_descriptor.getNestedTypes().get(4);
    internal_static_protobuf_unittest_TestArenaMap_MapSint32Sint32Entry_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_protobuf_unittest_TestArenaMap_MapSint32Sint32Entry_descriptor,
        new java.lang.String[] { "Key", "Value", });
    internal_static_protobuf_unittest_TestArenaMap_MapSint64Sint64Entry_descriptor =
      internal_static_protobuf_unittest_TestArenaMap_descriptor.getNestedTypes().get(5);
    internal_static_protobuf_unittest_TestArenaMap_MapSint64Sint64Entry_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_protobuf_unittest_TestArenaMap_MapSint64Sint64Entry_descriptor,
        new java.lang.String[] { "Key", "Value", });
    internal_static_protobuf_unittest_TestArenaMap_MapFixed32Fixed32Entry_descriptor =
      internal_static_protobuf_unittest_TestArenaMap_descriptor.getNestedTypes().get(6);
    internal_static_protobuf_unittest_TestArenaMap_MapFixed32Fixed32Entry_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_protobuf_unittest_TestArenaMap_MapFixed32Fixed32Entry_descriptor,
        new java.lang.String[] { "Key", "Value", });
    internal_static_protobuf_unittest_TestArenaMap_MapFixed64Fixed64Entry_descriptor =
      internal_static_protobuf_unittest_TestArenaMap_descriptor.getNestedTypes().get(7);
    internal_static_protobuf_unittest_TestArenaMap_MapFixed64Fixed64Entry_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_protobuf_unittest_TestArenaMap_MapFixed64Fixed64Entry_descriptor,
        new java.lang.String[] { "Key", "Value", });
    internal_static_protobuf_unittest_TestArenaMap_MapSfixed32Sfixed32Entry_descriptor =
      internal_static_protobuf_unittest_TestArenaMap_descriptor.getNestedTypes().get(8);
    internal_static_protobuf_unittest_TestArenaMap_MapSfixed32Sfixed32Entry_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_protobuf_unittest_TestArenaMap_MapSfixed32Sfixed32Entry_descriptor,
        new java.lang.String[] { "Key", "Value", });
    internal_static_protobuf_unittest_TestArenaMap_MapSfixed64Sfixed64Entry_descriptor =
      internal_static_protobuf_unittest_TestArenaMap_descriptor.getNestedTypes().get(9);
    internal_static_protobuf_unittest_TestArenaMap_MapSfixed64Sfixed64Entry_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_protobuf_unittest_TestArenaMap_MapSfixed64Sfixed64Entry_descriptor,
        new java.lang.String[] { "Key", "Value", });
    internal_static_protobuf_unittest_TestArenaMap_MapInt32FloatEntry_descriptor =
      internal_static_protobuf_unittest_TestArenaMap_descriptor.getNestedTypes().get(10);
    internal_static_protobuf_unittest_TestArenaMap_MapInt32FloatEntry_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_protobuf_unittest_TestArenaMap_MapInt32FloatEntry_descriptor,
        new java.lang.String[] { "Key", "Value", });
    internal_static_protobuf_unittest_TestArenaMap_MapInt32DoubleEntry_descriptor =
      internal_static_protobuf_unittest_TestArenaMap_descriptor.getNestedTypes().get(11);
    internal_static_protobuf_unittest_TestArenaMap_MapInt32DoubleEntry_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_protobuf_unittest_TestArenaMap_MapInt32DoubleEntry_descriptor,
        new java.lang.String[] { "Key", "Value", });
    internal_static_protobuf_unittest_TestArenaMap_MapBoolBoolEntry_descriptor =
      internal_static_protobuf_unittest_TestArenaMap_descriptor.getNestedTypes().get(12);
    internal_static_protobuf_unittest_TestArenaMap_MapBoolBoolEntry_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_protobuf_unittest_TestArenaMap_MapBoolBoolEntry_descriptor,
        new java.lang.String[] { "Key", "Value", });
    internal_static_protobuf_unittest_TestArenaMap_MapStringStringEntry_descriptor =
      internal_static_protobuf_unittest_TestArenaMap_descriptor.getNestedTypes().get(13);
    internal_static_protobuf_unittest_TestArenaMap_MapStringStringEntry_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_protobuf_unittest_TestArenaMap_MapStringStringEntry_descriptor,
        new java.lang.String[] { "Key", "Value", });
    internal_static_protobuf_unittest_TestArenaMap_MapInt32BytesEntry_descriptor =
      internal_static_protobuf_unittest_TestArenaMap_descriptor.getNestedTypes().get(14);
    internal_static_protobuf_unittest_TestArenaMap_MapInt32BytesEntry_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_protobuf_unittest_TestArenaMap_MapInt32BytesEntry_descriptor,
        new java.lang.String[] { "Key", "Value", });
    internal_static_protobuf_unittest_TestArenaMap_MapInt32EnumEntry_descriptor =
      internal_static_protobuf_unittest_TestArenaMap_descriptor.getNestedTypes().get(15);
    internal_static_protobuf_unittest_TestArenaMap_MapInt32EnumEntry_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_protobuf_unittest_TestArenaMap_MapInt32EnumEntry_descriptor,
        new java.lang.String[] { "Key", "Value", });
    internal_static_protobuf_unittest_TestArenaMap_MapInt32ForeignMessageEntry_descriptor =
      internal_static_protobuf_unittest_TestArenaMap_descriptor.getNestedTypes().get(16);
    internal_static_protobuf_unittest_TestArenaMap_MapInt32ForeignMessageEntry_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_protobuf_unittest_TestArenaMap_MapInt32ForeignMessageEntry_descriptor,
        new java.lang.String[] { "Key", "Value", });
    internal_static_protobuf_unittest_MessageContainingEnumCalledType_descriptor =
      getDescriptor().getMessageTypes().get(6);
    internal_static_protobuf_unittest_MessageContainingEnumCalledType_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_protobuf_unittest_MessageContainingEnumCalledType_descriptor,
        new java.lang.String[] { "Type", });
    internal_static_protobuf_unittest_MessageContainingEnumCalledType_TypeEntry_descriptor =
      internal_static_protobuf_unittest_MessageContainingEnumCalledType_descriptor.getNestedTypes().get(0);
    internal_static_protobuf_unittest_MessageContainingEnumCalledType_TypeEntry_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_protobuf_unittest_MessageContainingEnumCalledType_TypeEntry_descriptor,
        new java.lang.String[] { "Key", "Value", });
    internal_static_protobuf_unittest_MessageContainingMapCalledEntry_descriptor =
      getDescriptor().getMessageTypes().get(7);
    internal_static_protobuf_unittest_MessageContainingMapCalledEntry_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_protobuf_unittest_MessageContainingMapCalledEntry_descriptor,
        new java.lang.String[] { "Entry", });
    internal_static_protobuf_unittest_MessageContainingMapCalledEntry_EntryEntry_descriptor =
      internal_static_protobuf_unittest_MessageContainingMapCalledEntry_descriptor.getNestedTypes().get(0);
    internal_static_protobuf_unittest_MessageContainingMapCalledEntry_EntryEntry_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_protobuf_unittest_MessageContainingMapCalledEntry_EntryEntry_descriptor,
        new java.lang.String[] { "Key", "Value", });
    internal_static_protobuf_unittest_TestRecursiveMapMessage_descriptor =
      getDescriptor().getMessageTypes().get(8);
    internal_static_protobuf_unittest_TestRecursiveMapMessage_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_protobuf_unittest_TestRecursiveMapMessage_descriptor,
        new java.lang.String[] { "A", });
    internal_static_protobuf_unittest_TestRecursiveMapMessage_AEntry_descriptor =
      internal_static_protobuf_unittest_TestRecursiveMapMessage_descriptor.getNestedTypes().get(0);
    internal_static_protobuf_unittest_TestRecursiveMapMessage_AEntry_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_protobuf_unittest_TestRecursiveMapMessage_AEntry_descriptor,
        new java.lang.String[] { "Key", "Value", });
    protobuf_unittest.UnittestProto.getDescriptor();
  }

  // @@protoc_insertion_point(outer_class_scope)
}
