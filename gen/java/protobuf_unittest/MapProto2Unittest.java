// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: google/protobuf/map_proto2_unittest.proto

package protobuf_unittest;

public final class MapProto2Unittest {
  private MapProto2Unittest() {}
  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistryLite registry) {
  }

  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistry registry) {
    registerAllExtensions(
        (com.google.protobuf.ExtensionRegistryLite) registry);
  }
  /**
   * Protobuf enum {@code protobuf_unittest.Proto2MapEnum}
   */
  public enum Proto2MapEnum
      implements com.google.protobuf.ProtocolMessageEnum {
    /**
     * <code>PROTO2_MAP_ENUM_FOO = 0;</code>
     */
    PROTO2_MAP_ENUM_FOO(0),
    /**
     * <code>PROTO2_MAP_ENUM_BAR = 1;</code>
     */
    PROTO2_MAP_ENUM_BAR(1),
    /**
     * <code>PROTO2_MAP_ENUM_BAZ = 2;</code>
     */
    PROTO2_MAP_ENUM_BAZ(2),
    ;

    /**
     * <code>PROTO2_MAP_ENUM_FOO = 0;</code>
     */
    public static final int PROTO2_MAP_ENUM_FOO_VALUE = 0;
    /**
     * <code>PROTO2_MAP_ENUM_BAR = 1;</code>
     */
    public static final int PROTO2_MAP_ENUM_BAR_VALUE = 1;
    /**
     * <code>PROTO2_MAP_ENUM_BAZ = 2;</code>
     */
    public static final int PROTO2_MAP_ENUM_BAZ_VALUE = 2;


    public final int getNumber() {
      return value;
    }

    /**
     * @param value The numeric wire value of the corresponding enum entry.
     * @return The enum associated with the given numeric wire value.
     * @deprecated Use {@link #forNumber(int)} instead.
     */
    @java.lang.Deprecated
    public static Proto2MapEnum valueOf(int value) {
      return forNumber(value);
    }

    /**
     * @param value The numeric wire value of the corresponding enum entry.
     * @return The enum associated with the given numeric wire value.
     */
    public static Proto2MapEnum forNumber(int value) {
      switch (value) {
        case 0: return PROTO2_MAP_ENUM_FOO;
        case 1: return PROTO2_MAP_ENUM_BAR;
        case 2: return PROTO2_MAP_ENUM_BAZ;
        default: return null;
      }
    }

    public static com.google.protobuf.Internal.EnumLiteMap<Proto2MapEnum>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static final com.google.protobuf.Internal.EnumLiteMap<
        Proto2MapEnum> internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<Proto2MapEnum>() {
            public Proto2MapEnum findValueByNumber(int number) {
              return Proto2MapEnum.forNumber(number);
            }
          };

    public final com.google.protobuf.Descriptors.EnumValueDescriptor
        getValueDescriptor() {
      return getDescriptor().getValues().get(ordinal());
    }
    public final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptorForType() {
      return getDescriptor();
    }
    public static final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptor() {
      return protobuf_unittest.MapProto2Unittest.getDescriptor().getEnumTypes().get(0);
    }

    private static final Proto2MapEnum[] VALUES = values();

    public static Proto2MapEnum valueOf(
        com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
      if (desc.getType() != getDescriptor()) {
        throw new java.lang.IllegalArgumentException(
          "EnumValueDescriptor is not for this type.");
      }
      return VALUES[desc.getIndex()];
    }

    private final int value;

    private Proto2MapEnum(int value) {
      this.value = value;
    }

    // @@protoc_insertion_point(enum_scope:protobuf_unittest.Proto2MapEnum)
  }

  /**
   * Protobuf enum {@code protobuf_unittest.Proto2MapEnumPlusExtra}
   */
  public enum Proto2MapEnumPlusExtra
      implements com.google.protobuf.ProtocolMessageEnum {
    /**
     * <code>E_PROTO2_MAP_ENUM_FOO = 0;</code>
     */
    E_PROTO2_MAP_ENUM_FOO(0),
    /**
     * <code>E_PROTO2_MAP_ENUM_BAR = 1;</code>
     */
    E_PROTO2_MAP_ENUM_BAR(1),
    /**
     * <code>E_PROTO2_MAP_ENUM_BAZ = 2;</code>
     */
    E_PROTO2_MAP_ENUM_BAZ(2),
    /**
     * <code>E_PROTO2_MAP_ENUM_EXTRA = 3;</code>
     */
    E_PROTO2_MAP_ENUM_EXTRA(3),
    ;

    /**
     * <code>E_PROTO2_MAP_ENUM_FOO = 0;</code>
     */
    public static final int E_PROTO2_MAP_ENUM_FOO_VALUE = 0;
    /**
     * <code>E_PROTO2_MAP_ENUM_BAR = 1;</code>
     */
    public static final int E_PROTO2_MAP_ENUM_BAR_VALUE = 1;
    /**
     * <code>E_PROTO2_MAP_ENUM_BAZ = 2;</code>
     */
    public static final int E_PROTO2_MAP_ENUM_BAZ_VALUE = 2;
    /**
     * <code>E_PROTO2_MAP_ENUM_EXTRA = 3;</code>
     */
    public static final int E_PROTO2_MAP_ENUM_EXTRA_VALUE = 3;


    public final int getNumber() {
      return value;
    }

    /**
     * @param value The numeric wire value of the corresponding enum entry.
     * @return The enum associated with the given numeric wire value.
     * @deprecated Use {@link #forNumber(int)} instead.
     */
    @java.lang.Deprecated
    public static Proto2MapEnumPlusExtra valueOf(int value) {
      return forNumber(value);
    }

    /**
     * @param value The numeric wire value of the corresponding enum entry.
     * @return The enum associated with the given numeric wire value.
     */
    public static Proto2MapEnumPlusExtra forNumber(int value) {
      switch (value) {
        case 0: return E_PROTO2_MAP_ENUM_FOO;
        case 1: return E_PROTO2_MAP_ENUM_BAR;
        case 2: return E_PROTO2_MAP_ENUM_BAZ;
        case 3: return E_PROTO2_MAP_ENUM_EXTRA;
        default: return null;
      }
    }

    public static com.google.protobuf.Internal.EnumLiteMap<Proto2MapEnumPlusExtra>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static final com.google.protobuf.Internal.EnumLiteMap<
        Proto2MapEnumPlusExtra> internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<Proto2MapEnumPlusExtra>() {
            public Proto2MapEnumPlusExtra findValueByNumber(int number) {
              return Proto2MapEnumPlusExtra.forNumber(number);
            }
          };

    public final com.google.protobuf.Descriptors.EnumValueDescriptor
        getValueDescriptor() {
      return getDescriptor().getValues().get(ordinal());
    }
    public final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptorForType() {
      return getDescriptor();
    }
    public static final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptor() {
      return protobuf_unittest.MapProto2Unittest.getDescriptor().getEnumTypes().get(1);
    }

    private static final Proto2MapEnumPlusExtra[] VALUES = values();

    public static Proto2MapEnumPlusExtra valueOf(
        com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
      if (desc.getType() != getDescriptor()) {
        throw new java.lang.IllegalArgumentException(
          "EnumValueDescriptor is not for this type.");
      }
      return VALUES[desc.getIndex()];
    }

    private final int value;

    private Proto2MapEnumPlusExtra(int value) {
      this.value = value;
    }

    // @@protoc_insertion_point(enum_scope:protobuf_unittest.Proto2MapEnumPlusExtra)
  }

  public interface TestEnumMapOrBuilder extends
      // @@protoc_insertion_point(interface_extends:protobuf_unittest.TestEnumMap)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>map&lt;int32, .protobuf_unittest.Proto2MapEnum&gt; known_map_field = 101;</code>
     */
    int getKnownMapFieldCount();
    /**
     * <code>map&lt;int32, .protobuf_unittest.Proto2MapEnum&gt; known_map_field = 101;</code>
     */
    boolean containsKnownMapField(
        int key);
    /**
     * Use {@link #getKnownMapFieldMap()} instead.
     */
    @java.lang.Deprecated
    java.util.Map<java.lang.Integer, protobuf_unittest.MapProto2Unittest.Proto2MapEnum>
    getKnownMapField();
    /**
     * <code>map&lt;int32, .protobuf_unittest.Proto2MapEnum&gt; known_map_field = 101;</code>
     */
    java.util.Map<java.lang.Integer, protobuf_unittest.MapProto2Unittest.Proto2MapEnum>
    getKnownMapFieldMap();
    /**
     * <code>map&lt;int32, .protobuf_unittest.Proto2MapEnum&gt; known_map_field = 101;</code>
     */
    /* nullable */
protobuf_unittest.MapProto2Unittest.Proto2MapEnum getKnownMapFieldOrDefault(
        int key,
        /* nullable */
protobuf_unittest.MapProto2Unittest.Proto2MapEnum         defaultValue);
    /**
     * <code>map&lt;int32, .protobuf_unittest.Proto2MapEnum&gt; known_map_field = 101;</code>
     */
    protobuf_unittest.MapProto2Unittest.Proto2MapEnum getKnownMapFieldOrThrow(
        int key);

    /**
     * <code>map&lt;int32, .protobuf_unittest.Proto2MapEnum&gt; unknown_map_field = 102;</code>
     */
    int getUnknownMapFieldCount();
    /**
     * <code>map&lt;int32, .protobuf_unittest.Proto2MapEnum&gt; unknown_map_field = 102;</code>
     */
    boolean containsUnknownMapField(
        int key);
    /**
     * Use {@link #getUnknownMapFieldMap()} instead.
     */
    @java.lang.Deprecated
    java.util.Map<java.lang.Integer, protobuf_unittest.MapProto2Unittest.Proto2MapEnum>
    getUnknownMapField();
    /**
     * <code>map&lt;int32, .protobuf_unittest.Proto2MapEnum&gt; unknown_map_field = 102;</code>
     */
    java.util.Map<java.lang.Integer, protobuf_unittest.MapProto2Unittest.Proto2MapEnum>
    getUnknownMapFieldMap();
    /**
     * <code>map&lt;int32, .protobuf_unittest.Proto2MapEnum&gt; unknown_map_field = 102;</code>
     */
    /* nullable */
protobuf_unittest.MapProto2Unittest.Proto2MapEnum getUnknownMapFieldOrDefault(
        int key,
        /* nullable */
protobuf_unittest.MapProto2Unittest.Proto2MapEnum         defaultValue);
    /**
     * <code>map&lt;int32, .protobuf_unittest.Proto2MapEnum&gt; unknown_map_field = 102;</code>
     */
    protobuf_unittest.MapProto2Unittest.Proto2MapEnum getUnknownMapFieldOrThrow(
        int key);
  }
  /**
   * Protobuf type {@code protobuf_unittest.TestEnumMap}
   */
  public static final class TestEnumMap extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:protobuf_unittest.TestEnumMap)
      TestEnumMapOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use TestEnumMap.newBuilder() to construct.
    private TestEnumMap(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private TestEnumMap() {
    }

    @java.lang.Override
    @SuppressWarnings({"unused"})
    protected java.lang.Object newInstance(
        UnusedPrivateParameter unused) {
      return new TestEnumMap();
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return protobuf_unittest.MapProto2Unittest.internal_static_protobuf_unittest_TestEnumMap_descriptor;
    }

    @SuppressWarnings({"rawtypes"})
    @java.lang.Override
    protected com.google.protobuf.MapField internalGetMapField(
        int number) {
      switch (number) {
        case 101:
          return internalGetKnownMapField();
        case 102:
          return internalGetUnknownMapField();
        default:
          throw new RuntimeException(
              "Invalid map field number: " + number);
      }
    }
    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return protobuf_unittest.MapProto2Unittest.internal_static_protobuf_unittest_TestEnumMap_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              protobuf_unittest.MapProto2Unittest.TestEnumMap.class, protobuf_unittest.MapProto2Unittest.TestEnumMap.Builder.class);
    }

    public static final int KNOWN_MAP_FIELD_FIELD_NUMBER = 101;
    private static final class KnownMapFieldDefaultEntryHolder {
      static final com.google.protobuf.MapEntry<
          java.lang.Integer, java.lang.Integer> defaultEntry =
              com.google.protobuf.MapEntry
              .<java.lang.Integer, java.lang.Integer>newDefaultInstance(
                  protobuf_unittest.MapProto2Unittest.internal_static_protobuf_unittest_TestEnumMap_KnownMapFieldEntry_descriptor, 
                  com.google.protobuf.WireFormat.FieldType.INT32,
                  0,
                  com.google.protobuf.WireFormat.FieldType.ENUM,
                  protobuf_unittest.MapProto2Unittest.Proto2MapEnum.PROTO2_MAP_ENUM_FOO.getNumber());
    }
    @SuppressWarnings("serial")
    private com.google.protobuf.MapField<
        java.lang.Integer, java.lang.Integer> knownMapField_;
    private com.google.protobuf.MapField<java.lang.Integer, java.lang.Integer>
    internalGetKnownMapField() {
      if (knownMapField_ == null) {
        return com.google.protobuf.MapField.emptyMapField(
            KnownMapFieldDefaultEntryHolder.defaultEntry);
      }
      return knownMapField_;
    }
    private static final
    com.google.protobuf.Internal.MapAdapter.Converter<
        java.lang.Integer, protobuf_unittest.MapProto2Unittest.Proto2MapEnum> knownMapFieldValueConverter =
            com.google.protobuf.Internal.MapAdapter.newEnumConverter(
                protobuf_unittest.MapProto2Unittest.Proto2MapEnum.internalGetValueMap(),
                protobuf_unittest.MapProto2Unittest.Proto2MapEnum.PROTO2_MAP_ENUM_FOO);
    private static final java.util.Map<java.lang.Integer, protobuf_unittest.MapProto2Unittest.Proto2MapEnum>
    internalGetAdaptedKnownMapFieldMap(
        java.util.Map<java.lang.Integer, java.lang.Integer> map) {
      return new com.google.protobuf.Internal.MapAdapter<
          java.lang.Integer, protobuf_unittest.MapProto2Unittest.Proto2MapEnum, java.lang.Integer>(
              map, knownMapFieldValueConverter);
    }
    public int getKnownMapFieldCount() {
      return internalGetKnownMapField().getMap().size();
    }
    /**
     * <code>map&lt;int32, .protobuf_unittest.Proto2MapEnum&gt; known_map_field = 101;</code>
     */
    @java.lang.Override
    public boolean containsKnownMapField(
        int key) {
      
      return internalGetKnownMapField().getMap().containsKey(key);
    }
    /**
     * Use {@link #getKnownMapFieldMap()} instead.
     */
    @java.lang.Override
    @java.lang.Deprecated
    public java.util.Map<java.lang.Integer, protobuf_unittest.MapProto2Unittest.Proto2MapEnum>
    getKnownMapField() {
      return getKnownMapFieldMap();
    }
    /**
     * <code>map&lt;int32, .protobuf_unittest.Proto2MapEnum&gt; known_map_field = 101;</code>
     */
    @java.lang.Override
    public java.util.Map<java.lang.Integer, protobuf_unittest.MapProto2Unittest.Proto2MapEnum>
    getKnownMapFieldMap() {
      return internalGetAdaptedKnownMapFieldMap(
          internalGetKnownMapField().getMap());}
    /**
     * <code>map&lt;int32, .protobuf_unittest.Proto2MapEnum&gt; known_map_field = 101;</code>
     */
    @java.lang.Override
    public /* nullable */
protobuf_unittest.MapProto2Unittest.Proto2MapEnum getKnownMapFieldOrDefault(
        int key,
        /* nullable */
protobuf_unittest.MapProto2Unittest.Proto2MapEnum defaultValue) {
      
      java.util.Map<java.lang.Integer, java.lang.Integer> map =
          internalGetKnownMapField().getMap();
      return map.containsKey(key)
             ? knownMapFieldValueConverter.doForward(map.get(key))
             : defaultValue;
    }
    /**
     * <code>map&lt;int32, .protobuf_unittest.Proto2MapEnum&gt; known_map_field = 101;</code>
     */
    @java.lang.Override
    public protobuf_unittest.MapProto2Unittest.Proto2MapEnum getKnownMapFieldOrThrow(
        int key) {
      
      java.util.Map<java.lang.Integer, java.lang.Integer> map =
          internalGetKnownMapField().getMap();
      if (!map.containsKey(key)) {
        throw new java.lang.IllegalArgumentException();
      }
      return knownMapFieldValueConverter.doForward(map.get(key));
    }

    public static final int UNKNOWN_MAP_FIELD_FIELD_NUMBER = 102;
    private static final class UnknownMapFieldDefaultEntryHolder {
      static final com.google.protobuf.MapEntry<
          java.lang.Integer, java.lang.Integer> defaultEntry =
              com.google.protobuf.MapEntry
              .<java.lang.Integer, java.lang.Integer>newDefaultInstance(
                  protobuf_unittest.MapProto2Unittest.internal_static_protobuf_unittest_TestEnumMap_UnknownMapFieldEntry_descriptor, 
                  com.google.protobuf.WireFormat.FieldType.INT32,
                  0,
                  com.google.protobuf.WireFormat.FieldType.ENUM,
                  protobuf_unittest.MapProto2Unittest.Proto2MapEnum.PROTO2_MAP_ENUM_FOO.getNumber());
    }
    @SuppressWarnings("serial")
    private com.google.protobuf.MapField<
        java.lang.Integer, java.lang.Integer> unknownMapField_;
    private com.google.protobuf.MapField<java.lang.Integer, java.lang.Integer>
    internalGetUnknownMapField() {
      if (unknownMapField_ == null) {
        return com.google.protobuf.MapField.emptyMapField(
            UnknownMapFieldDefaultEntryHolder.defaultEntry);
      }
      return unknownMapField_;
    }
    private static final
    com.google.protobuf.Internal.MapAdapter.Converter<
        java.lang.Integer, protobuf_unittest.MapProto2Unittest.Proto2MapEnum> unknownMapFieldValueConverter =
            com.google.protobuf.Internal.MapAdapter.newEnumConverter(
                protobuf_unittest.MapProto2Unittest.Proto2MapEnum.internalGetValueMap(),
                protobuf_unittest.MapProto2Unittest.Proto2MapEnum.PROTO2_MAP_ENUM_FOO);
    private static final java.util.Map<java.lang.Integer, protobuf_unittest.MapProto2Unittest.Proto2MapEnum>
    internalGetAdaptedUnknownMapFieldMap(
        java.util.Map<java.lang.Integer, java.lang.Integer> map) {
      return new com.google.protobuf.Internal.MapAdapter<
          java.lang.Integer, protobuf_unittest.MapProto2Unittest.Proto2MapEnum, java.lang.Integer>(
              map, unknownMapFieldValueConverter);
    }
    public int getUnknownMapFieldCount() {
      return internalGetUnknownMapField().getMap().size();
    }
    /**
     * <code>map&lt;int32, .protobuf_unittest.Proto2MapEnum&gt; unknown_map_field = 102;</code>
     */
    @java.lang.Override
    public boolean containsUnknownMapField(
        int key) {
      
      return internalGetUnknownMapField().getMap().containsKey(key);
    }
    /**
     * Use {@link #getUnknownMapFieldMap()} instead.
     */
    @java.lang.Override
    @java.lang.Deprecated
    public java.util.Map<java.lang.Integer, protobuf_unittest.MapProto2Unittest.Proto2MapEnum>
    getUnknownMapField() {
      return getUnknownMapFieldMap();
    }
    /**
     * <code>map&lt;int32, .protobuf_unittest.Proto2MapEnum&gt; unknown_map_field = 102;</code>
     */
    @java.lang.Override
    public java.util.Map<java.lang.Integer, protobuf_unittest.MapProto2Unittest.Proto2MapEnum>
    getUnknownMapFieldMap() {
      return internalGetAdaptedUnknownMapFieldMap(
          internalGetUnknownMapField().getMap());}
    /**
     * <code>map&lt;int32, .protobuf_unittest.Proto2MapEnum&gt; unknown_map_field = 102;</code>
     */
    @java.lang.Override
    public /* nullable */
protobuf_unittest.MapProto2Unittest.Proto2MapEnum getUnknownMapFieldOrDefault(
        int key,
        /* nullable */
protobuf_unittest.MapProto2Unittest.Proto2MapEnum defaultValue) {
      
      java.util.Map<java.lang.Integer, java.lang.Integer> map =
          internalGetUnknownMapField().getMap();
      return map.containsKey(key)
             ? unknownMapFieldValueConverter.doForward(map.get(key))
             : defaultValue;
    }
    /**
     * <code>map&lt;int32, .protobuf_unittest.Proto2MapEnum&gt; unknown_map_field = 102;</code>
     */
    @java.lang.Override
    public protobuf_unittest.MapProto2Unittest.Proto2MapEnum getUnknownMapFieldOrThrow(
        int key) {
      
      java.util.Map<java.lang.Integer, java.lang.Integer> map =
          internalGetUnknownMapField().getMap();
      if (!map.containsKey(key)) {
        throw new java.lang.IllegalArgumentException();
      }
      return unknownMapFieldValueConverter.doForward(map.get(key));
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      com.google.protobuf.GeneratedMessageV3
        .serializeIntegerMapTo(
          output,
          internalGetKnownMapField(),
          KnownMapFieldDefaultEntryHolder.defaultEntry,
          101);
      com.google.protobuf.GeneratedMessageV3
        .serializeIntegerMapTo(
          output,
          internalGetUnknownMapField(),
          UnknownMapFieldDefaultEntryHolder.defaultEntry,
          102);
      getUnknownFields().writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      for (java.util.Map.Entry<java.lang.Integer, java.lang.Integer> entry
           : internalGetKnownMapField().getMap().entrySet()) {
        com.google.protobuf.MapEntry<java.lang.Integer, java.lang.Integer>
        knownMapField__ = KnownMapFieldDefaultEntryHolder.defaultEntry.newBuilderForType()
            .setKey(entry.getKey())
            .setValue(entry.getValue())
            .build();
        size += com.google.protobuf.CodedOutputStream
            .computeMessageSize(101, knownMapField__);
      }
      for (java.util.Map.Entry<java.lang.Integer, java.lang.Integer> entry
           : internalGetUnknownMapField().getMap().entrySet()) {
        com.google.protobuf.MapEntry<java.lang.Integer, java.lang.Integer>
        unknownMapField__ = UnknownMapFieldDefaultEntryHolder.defaultEntry.newBuilderForType()
            .setKey(entry.getKey())
            .setValue(entry.getValue())
            .build();
        size += com.google.protobuf.CodedOutputStream
            .computeMessageSize(102, unknownMapField__);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof protobuf_unittest.MapProto2Unittest.TestEnumMap)) {
        return super.equals(obj);
      }
      protobuf_unittest.MapProto2Unittest.TestEnumMap other = (protobuf_unittest.MapProto2Unittest.TestEnumMap) obj;

      if (!internalGetKnownMapField().equals(
          other.internalGetKnownMapField())) return false;
      if (!internalGetUnknownMapField().equals(
          other.internalGetUnknownMapField())) return false;
      if (!getUnknownFields().equals(other.getUnknownFields())) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      if (!internalGetKnownMapField().getMap().isEmpty()) {
        hash = (37 * hash) + KNOWN_MAP_FIELD_FIELD_NUMBER;
        hash = (53 * hash) + internalGetKnownMapField().hashCode();
      }
      if (!internalGetUnknownMapField().getMap().isEmpty()) {
        hash = (37 * hash) + UNKNOWN_MAP_FIELD_FIELD_NUMBER;
        hash = (53 * hash) + internalGetUnknownMapField().hashCode();
      }
      hash = (29 * hash) + getUnknownFields().hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static protobuf_unittest.MapProto2Unittest.TestEnumMap parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static protobuf_unittest.MapProto2Unittest.TestEnumMap parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static protobuf_unittest.MapProto2Unittest.TestEnumMap parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static protobuf_unittest.MapProto2Unittest.TestEnumMap parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static protobuf_unittest.MapProto2Unittest.TestEnumMap parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static protobuf_unittest.MapProto2Unittest.TestEnumMap parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static protobuf_unittest.MapProto2Unittest.TestEnumMap parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static protobuf_unittest.MapProto2Unittest.TestEnumMap parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static protobuf_unittest.MapProto2Unittest.TestEnumMap parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static protobuf_unittest.MapProto2Unittest.TestEnumMap parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static protobuf_unittest.MapProto2Unittest.TestEnumMap parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static protobuf_unittest.MapProto2Unittest.TestEnumMap parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(protobuf_unittest.MapProto2Unittest.TestEnumMap prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code protobuf_unittest.TestEnumMap}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:protobuf_unittest.TestEnumMap)
        protobuf_unittest.MapProto2Unittest.TestEnumMapOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return protobuf_unittest.MapProto2Unittest.internal_static_protobuf_unittest_TestEnumMap_descriptor;
      }

      @SuppressWarnings({"rawtypes"})
      protected com.google.protobuf.MapField internalGetMapField(
          int number) {
        switch (number) {
          case 101:
            return internalGetKnownMapField();
          case 102:
            return internalGetUnknownMapField();
          default:
            throw new RuntimeException(
                "Invalid map field number: " + number);
        }
      }
      @SuppressWarnings({"rawtypes"})
      protected com.google.protobuf.MapField internalGetMutableMapField(
          int number) {
        switch (number) {
          case 101:
            return internalGetMutableKnownMapField();
          case 102:
            return internalGetMutableUnknownMapField();
          default:
            throw new RuntimeException(
                "Invalid map field number: " + number);
        }
      }
      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return protobuf_unittest.MapProto2Unittest.internal_static_protobuf_unittest_TestEnumMap_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                protobuf_unittest.MapProto2Unittest.TestEnumMap.class, protobuf_unittest.MapProto2Unittest.TestEnumMap.Builder.class);
      }

      // Construct using protobuf_unittest.MapProto2Unittest.TestEnumMap.newBuilder()
      private Builder() {

      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);

      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        bitField0_ = 0;
        internalGetMutableKnownMapField().clear();
        internalGetMutableUnknownMapField().clear();
        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return protobuf_unittest.MapProto2Unittest.internal_static_protobuf_unittest_TestEnumMap_descriptor;
      }

      @java.lang.Override
      public protobuf_unittest.MapProto2Unittest.TestEnumMap getDefaultInstanceForType() {
        return protobuf_unittest.MapProto2Unittest.TestEnumMap.getDefaultInstance();
      }

      @java.lang.Override
      public protobuf_unittest.MapProto2Unittest.TestEnumMap build() {
        protobuf_unittest.MapProto2Unittest.TestEnumMap result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public protobuf_unittest.MapProto2Unittest.TestEnumMap buildPartial() {
        protobuf_unittest.MapProto2Unittest.TestEnumMap result = new protobuf_unittest.MapProto2Unittest.TestEnumMap(this);
        if (bitField0_ != 0) { buildPartial0(result); }
        onBuilt();
        return result;
      }

      private void buildPartial0(protobuf_unittest.MapProto2Unittest.TestEnumMap result) {
        int from_bitField0_ = bitField0_;
        if (((from_bitField0_ & 0x00000001) != 0)) {
          result.knownMapField_ = internalGetKnownMapField();
          result.knownMapField_.makeImmutable();
        }
        if (((from_bitField0_ & 0x00000002) != 0)) {
          result.unknownMapField_ = internalGetUnknownMapField();
          result.unknownMapField_.makeImmutable();
        }
      }

      @java.lang.Override
      public Builder clone() {
        return super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof protobuf_unittest.MapProto2Unittest.TestEnumMap) {
          return mergeFrom((protobuf_unittest.MapProto2Unittest.TestEnumMap)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(protobuf_unittest.MapProto2Unittest.TestEnumMap other) {
        if (other == protobuf_unittest.MapProto2Unittest.TestEnumMap.getDefaultInstance()) return this;
        internalGetMutableKnownMapField().mergeFrom(
            other.internalGetKnownMapField());
        bitField0_ |= 0x00000001;
        internalGetMutableUnknownMapField().mergeFrom(
            other.internalGetUnknownMapField());
        bitField0_ |= 0x00000002;
        this.mergeUnknownFields(other.getUnknownFields());
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        if (extensionRegistry == null) {
          throw new java.lang.NullPointerException();
        }
        try {
          boolean done = false;
          while (!done) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                done = true;
                break;
              case 810: {
                com.google.protobuf.ByteString bytes = input.readBytes();
                com.google.protobuf.MapEntry<java.lang.Integer, java.lang.Integer>
                knownMapField__ = KnownMapFieldDefaultEntryHolder.defaultEntry.getParserForType().parseFrom(bytes);
                if (protobuf_unittest.MapProto2Unittest.Proto2MapEnum.forNumber(knownMapField__.getValue()) == null) {
                  mergeUnknownLengthDelimitedField(101, bytes);
                } else {
                  internalGetMutableKnownMapField().getMutableMap().put(
                      knownMapField__.getKey(), knownMapField__.getValue());
                  bitField0_ |= 0x00000001;
                }
                break;
              } // case 810
              case 818: {
                com.google.protobuf.ByteString bytes = input.readBytes();
                com.google.protobuf.MapEntry<java.lang.Integer, java.lang.Integer>
                unknownMapField__ = UnknownMapFieldDefaultEntryHolder.defaultEntry.getParserForType().parseFrom(bytes);
                if (protobuf_unittest.MapProto2Unittest.Proto2MapEnum.forNumber(unknownMapField__.getValue()) == null) {
                  mergeUnknownLengthDelimitedField(102, bytes);
                } else {
                  internalGetMutableUnknownMapField().getMutableMap().put(
                      unknownMapField__.getKey(), unknownMapField__.getValue());
                  bitField0_ |= 0x00000002;
                }
                break;
              } // case 818
              default: {
                if (!super.parseUnknownField(input, extensionRegistry, tag)) {
                  done = true; // was an endgroup tag
                }
                break;
              } // default:
            } // switch (tag)
          } // while (!done)
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.unwrapIOException();
        } finally {
          onChanged();
        } // finally
        return this;
      }
      private int bitField0_;

      private com.google.protobuf.MapField<
          java.lang.Integer, java.lang.Integer> knownMapField_;
      private com.google.protobuf.MapField<java.lang.Integer, java.lang.Integer>
          internalGetKnownMapField() {
        if (knownMapField_ == null) {
          return com.google.protobuf.MapField.emptyMapField(
              KnownMapFieldDefaultEntryHolder.defaultEntry);
        }
        return knownMapField_;
      }
      private com.google.protobuf.MapField<java.lang.Integer, java.lang.Integer>
          internalGetMutableKnownMapField() {
        if (knownMapField_ == null) {
          knownMapField_ = com.google.protobuf.MapField.newMapField(
              KnownMapFieldDefaultEntryHolder.defaultEntry);
        }
        if (!knownMapField_.isMutable()) {
          knownMapField_ = knownMapField_.copy();
        }
        bitField0_ |= 0x00000001;
        onChanged();
        return knownMapField_;
      }
      public int getKnownMapFieldCount() {
        return internalGetKnownMapField().getMap().size();
      }
      /**
       * <code>map&lt;int32, .protobuf_unittest.Proto2MapEnum&gt; known_map_field = 101;</code>
       */
      @java.lang.Override
      public boolean containsKnownMapField(
          int key) {
        
        return internalGetKnownMapField().getMap().containsKey(key);
      }
      /**
       * Use {@link #getKnownMapFieldMap()} instead.
       */
      @java.lang.Override
      @java.lang.Deprecated
      public java.util.Map<java.lang.Integer, protobuf_unittest.MapProto2Unittest.Proto2MapEnum>
      getKnownMapField() {
        return getKnownMapFieldMap();
      }
      /**
       * <code>map&lt;int32, .protobuf_unittest.Proto2MapEnum&gt; known_map_field = 101;</code>
       */
      @java.lang.Override
      public java.util.Map<java.lang.Integer, protobuf_unittest.MapProto2Unittest.Proto2MapEnum>
      getKnownMapFieldMap() {
        return internalGetAdaptedKnownMapFieldMap(
            internalGetKnownMapField().getMap());}
      /**
       * <code>map&lt;int32, .protobuf_unittest.Proto2MapEnum&gt; known_map_field = 101;</code>
       */
      @java.lang.Override
      public /* nullable */
protobuf_unittest.MapProto2Unittest.Proto2MapEnum getKnownMapFieldOrDefault(
          int key,
          /* nullable */
protobuf_unittest.MapProto2Unittest.Proto2MapEnum defaultValue) {
        
        java.util.Map<java.lang.Integer, java.lang.Integer> map =
            internalGetKnownMapField().getMap();
        return map.containsKey(key)
               ? knownMapFieldValueConverter.doForward(map.get(key))
               : defaultValue;
      }
      /**
       * <code>map&lt;int32, .protobuf_unittest.Proto2MapEnum&gt; known_map_field = 101;</code>
       */
      @java.lang.Override
      public protobuf_unittest.MapProto2Unittest.Proto2MapEnum getKnownMapFieldOrThrow(
          int key) {
        
        java.util.Map<java.lang.Integer, java.lang.Integer> map =
            internalGetKnownMapField().getMap();
        if (!map.containsKey(key)) {
          throw new java.lang.IllegalArgumentException();
        }
        return knownMapFieldValueConverter.doForward(map.get(key));
      }
      public Builder clearKnownMapField() {
        bitField0_ = (bitField0_ & ~0x00000001);
        internalGetMutableKnownMapField().getMutableMap()
            .clear();
        return this;
      }
      /**
       * <code>map&lt;int32, .protobuf_unittest.Proto2MapEnum&gt; known_map_field = 101;</code>
       */
      public Builder removeKnownMapField(
          int key) {
        
        internalGetMutableKnownMapField().getMutableMap()
            .remove(key);
        return this;
      }
      /**
       * Use alternate mutation accessors instead.
       */
      @java.lang.Deprecated
      public java.util.Map<java.lang.Integer, protobuf_unittest.MapProto2Unittest.Proto2MapEnum>
          getMutableKnownMapField() {
        bitField0_ |= 0x00000001;
        return internalGetAdaptedKnownMapFieldMap(
             internalGetMutableKnownMapField().getMutableMap());
      }
      /**
       * <code>map&lt;int32, .protobuf_unittest.Proto2MapEnum&gt; known_map_field = 101;</code>
       */
      public Builder putKnownMapField(
          int key,
          protobuf_unittest.MapProto2Unittest.Proto2MapEnum value) {
        
        
        internalGetMutableKnownMapField().getMutableMap()
            .put(key, knownMapFieldValueConverter.doBackward(value));
        bitField0_ |= 0x00000001;
        return this;
      }
      /**
       * <code>map&lt;int32, .protobuf_unittest.Proto2MapEnum&gt; known_map_field = 101;</code>
       */
      public Builder putAllKnownMapField(
          java.util.Map<java.lang.Integer, protobuf_unittest.MapProto2Unittest.Proto2MapEnum> values) {
        internalGetAdaptedKnownMapFieldMap(
            internalGetMutableKnownMapField().getMutableMap())
                .putAll(values);
        bitField0_ |= 0x00000001;
        return this;
      }

      private com.google.protobuf.MapField<
          java.lang.Integer, java.lang.Integer> unknownMapField_;
      private com.google.protobuf.MapField<java.lang.Integer, java.lang.Integer>
          internalGetUnknownMapField() {
        if (unknownMapField_ == null) {
          return com.google.protobuf.MapField.emptyMapField(
              UnknownMapFieldDefaultEntryHolder.defaultEntry);
        }
        return unknownMapField_;
      }
      private com.google.protobuf.MapField<java.lang.Integer, java.lang.Integer>
          internalGetMutableUnknownMapField() {
        if (unknownMapField_ == null) {
          unknownMapField_ = com.google.protobuf.MapField.newMapField(
              UnknownMapFieldDefaultEntryHolder.defaultEntry);
        }
        if (!unknownMapField_.isMutable()) {
          unknownMapField_ = unknownMapField_.copy();
        }
        bitField0_ |= 0x00000002;
        onChanged();
        return unknownMapField_;
      }
      public int getUnknownMapFieldCount() {
        return internalGetUnknownMapField().getMap().size();
      }
      /**
       * <code>map&lt;int32, .protobuf_unittest.Proto2MapEnum&gt; unknown_map_field = 102;</code>
       */
      @java.lang.Override
      public boolean containsUnknownMapField(
          int key) {
        
        return internalGetUnknownMapField().getMap().containsKey(key);
      }
      /**
       * Use {@link #getUnknownMapFieldMap()} instead.
       */
      @java.lang.Override
      @java.lang.Deprecated
      public java.util.Map<java.lang.Integer, protobuf_unittest.MapProto2Unittest.Proto2MapEnum>
      getUnknownMapField() {
        return getUnknownMapFieldMap();
      }
      /**
       * <code>map&lt;int32, .protobuf_unittest.Proto2MapEnum&gt; unknown_map_field = 102;</code>
       */
      @java.lang.Override
      public java.util.Map<java.lang.Integer, protobuf_unittest.MapProto2Unittest.Proto2MapEnum>
      getUnknownMapFieldMap() {
        return internalGetAdaptedUnknownMapFieldMap(
            internalGetUnknownMapField().getMap());}
      /**
       * <code>map&lt;int32, .protobuf_unittest.Proto2MapEnum&gt; unknown_map_field = 102;</code>
       */
      @java.lang.Override
      public /* nullable */
protobuf_unittest.MapProto2Unittest.Proto2MapEnum getUnknownMapFieldOrDefault(
          int key,
          /* nullable */
protobuf_unittest.MapProto2Unittest.Proto2MapEnum defaultValue) {
        
        java.util.Map<java.lang.Integer, java.lang.Integer> map =
            internalGetUnknownMapField().getMap();
        return map.containsKey(key)
               ? unknownMapFieldValueConverter.doForward(map.get(key))
               : defaultValue;
      }
      /**
       * <code>map&lt;int32, .protobuf_unittest.Proto2MapEnum&gt; unknown_map_field = 102;</code>
       */
      @java.lang.Override
      public protobuf_unittest.MapProto2Unittest.Proto2MapEnum getUnknownMapFieldOrThrow(
          int key) {
        
        java.util.Map<java.lang.Integer, java.lang.Integer> map =
            internalGetUnknownMapField().getMap();
        if (!map.containsKey(key)) {
          throw new java.lang.IllegalArgumentException();
        }
        return unknownMapFieldValueConverter.doForward(map.get(key));
      }
      public Builder clearUnknownMapField() {
        bitField0_ = (bitField0_ & ~0x00000002);
        internalGetMutableUnknownMapField().getMutableMap()
            .clear();
        return this;
      }
      /**
       * <code>map&lt;int32, .protobuf_unittest.Proto2MapEnum&gt; unknown_map_field = 102;</code>
       */
      public Builder removeUnknownMapField(
          int key) {
        
        internalGetMutableUnknownMapField().getMutableMap()
            .remove(key);
        return this;
      }
      /**
       * Use alternate mutation accessors instead.
       */
      @java.lang.Deprecated
      public java.util.Map<java.lang.Integer, protobuf_unittest.MapProto2Unittest.Proto2MapEnum>
          getMutableUnknownMapField() {
        bitField0_ |= 0x00000002;
        return internalGetAdaptedUnknownMapFieldMap(
             internalGetMutableUnknownMapField().getMutableMap());
      }
      /**
       * <code>map&lt;int32, .protobuf_unittest.Proto2MapEnum&gt; unknown_map_field = 102;</code>
       */
      public Builder putUnknownMapField(
          int key,
          protobuf_unittest.MapProto2Unittest.Proto2MapEnum value) {
        
        
        internalGetMutableUnknownMapField().getMutableMap()
            .put(key, unknownMapFieldValueConverter.doBackward(value));
        bitField0_ |= 0x00000002;
        return this;
      }
      /**
       * <code>map&lt;int32, .protobuf_unittest.Proto2MapEnum&gt; unknown_map_field = 102;</code>
       */
      public Builder putAllUnknownMapField(
          java.util.Map<java.lang.Integer, protobuf_unittest.MapProto2Unittest.Proto2MapEnum> values) {
        internalGetAdaptedUnknownMapFieldMap(
            internalGetMutableUnknownMapField().getMutableMap())
                .putAll(values);
        bitField0_ |= 0x00000002;
        return this;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:protobuf_unittest.TestEnumMap)
    }

    // @@protoc_insertion_point(class_scope:protobuf_unittest.TestEnumMap)
    private static final protobuf_unittest.MapProto2Unittest.TestEnumMap DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new protobuf_unittest.MapProto2Unittest.TestEnumMap();
    }

    public static protobuf_unittest.MapProto2Unittest.TestEnumMap getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    @java.lang.Deprecated public static final com.google.protobuf.Parser<TestEnumMap>
        PARSER = new com.google.protobuf.AbstractParser<TestEnumMap>() {
      @java.lang.Override
      public TestEnumMap parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        Builder builder = newBuilder();
        try {
          builder.mergeFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.setUnfinishedMessage(builder.buildPartial());
        } catch (com.google.protobuf.UninitializedMessageException e) {
          throw e.asInvalidProtocolBufferException().setUnfinishedMessage(builder.buildPartial());
        } catch (java.io.IOException e) {
          throw new com.google.protobuf.InvalidProtocolBufferException(e)
              .setUnfinishedMessage(builder.buildPartial());
        }
        return builder.buildPartial();
      }
    };

    public static com.google.protobuf.Parser<TestEnumMap> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<TestEnumMap> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public protobuf_unittest.MapProto2Unittest.TestEnumMap getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface TestEnumMapPlusExtraOrBuilder extends
      // @@protoc_insertion_point(interface_extends:protobuf_unittest.TestEnumMapPlusExtra)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>map&lt;int32, .protobuf_unittest.Proto2MapEnumPlusExtra&gt; known_map_field = 101;</code>
     */
    int getKnownMapFieldCount();
    /**
     * <code>map&lt;int32, .protobuf_unittest.Proto2MapEnumPlusExtra&gt; known_map_field = 101;</code>
     */
    boolean containsKnownMapField(
        int key);
    /**
     * Use {@link #getKnownMapFieldMap()} instead.
     */
    @java.lang.Deprecated
    java.util.Map<java.lang.Integer, protobuf_unittest.MapProto2Unittest.Proto2MapEnumPlusExtra>
    getKnownMapField();
    /**
     * <code>map&lt;int32, .protobuf_unittest.Proto2MapEnumPlusExtra&gt; known_map_field = 101;</code>
     */
    java.util.Map<java.lang.Integer, protobuf_unittest.MapProto2Unittest.Proto2MapEnumPlusExtra>
    getKnownMapFieldMap();
    /**
     * <code>map&lt;int32, .protobuf_unittest.Proto2MapEnumPlusExtra&gt; known_map_field = 101;</code>
     */
    /* nullable */
protobuf_unittest.MapProto2Unittest.Proto2MapEnumPlusExtra getKnownMapFieldOrDefault(
        int key,
        /* nullable */
protobuf_unittest.MapProto2Unittest.Proto2MapEnumPlusExtra         defaultValue);
    /**
     * <code>map&lt;int32, .protobuf_unittest.Proto2MapEnumPlusExtra&gt; known_map_field = 101;</code>
     */
    protobuf_unittest.MapProto2Unittest.Proto2MapEnumPlusExtra getKnownMapFieldOrThrow(
        int key);

    /**
     * <code>map&lt;int32, .protobuf_unittest.Proto2MapEnumPlusExtra&gt; unknown_map_field = 102;</code>
     */
    int getUnknownMapFieldCount();
    /**
     * <code>map&lt;int32, .protobuf_unittest.Proto2MapEnumPlusExtra&gt; unknown_map_field = 102;</code>
     */
    boolean containsUnknownMapField(
        int key);
    /**
     * Use {@link #getUnknownMapFieldMap()} instead.
     */
    @java.lang.Deprecated
    java.util.Map<java.lang.Integer, protobuf_unittest.MapProto2Unittest.Proto2MapEnumPlusExtra>
    getUnknownMapField();
    /**
     * <code>map&lt;int32, .protobuf_unittest.Proto2MapEnumPlusExtra&gt; unknown_map_field = 102;</code>
     */
    java.util.Map<java.lang.Integer, protobuf_unittest.MapProto2Unittest.Proto2MapEnumPlusExtra>
    getUnknownMapFieldMap();
    /**
     * <code>map&lt;int32, .protobuf_unittest.Proto2MapEnumPlusExtra&gt; unknown_map_field = 102;</code>
     */
    /* nullable */
protobuf_unittest.MapProto2Unittest.Proto2MapEnumPlusExtra getUnknownMapFieldOrDefault(
        int key,
        /* nullable */
protobuf_unittest.MapProto2Unittest.Proto2MapEnumPlusExtra         defaultValue);
    /**
     * <code>map&lt;int32, .protobuf_unittest.Proto2MapEnumPlusExtra&gt; unknown_map_field = 102;</code>
     */
    protobuf_unittest.MapProto2Unittest.Proto2MapEnumPlusExtra getUnknownMapFieldOrThrow(
        int key);
  }
  /**
   * Protobuf type {@code protobuf_unittest.TestEnumMapPlusExtra}
   */
  public static final class TestEnumMapPlusExtra extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:protobuf_unittest.TestEnumMapPlusExtra)
      TestEnumMapPlusExtraOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use TestEnumMapPlusExtra.newBuilder() to construct.
    private TestEnumMapPlusExtra(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private TestEnumMapPlusExtra() {
    }

    @java.lang.Override
    @SuppressWarnings({"unused"})
    protected java.lang.Object newInstance(
        UnusedPrivateParameter unused) {
      return new TestEnumMapPlusExtra();
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return protobuf_unittest.MapProto2Unittest.internal_static_protobuf_unittest_TestEnumMapPlusExtra_descriptor;
    }

    @SuppressWarnings({"rawtypes"})
    @java.lang.Override
    protected com.google.protobuf.MapField internalGetMapField(
        int number) {
      switch (number) {
        case 101:
          return internalGetKnownMapField();
        case 102:
          return internalGetUnknownMapField();
        default:
          throw new RuntimeException(
              "Invalid map field number: " + number);
      }
    }
    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return protobuf_unittest.MapProto2Unittest.internal_static_protobuf_unittest_TestEnumMapPlusExtra_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              protobuf_unittest.MapProto2Unittest.TestEnumMapPlusExtra.class, protobuf_unittest.MapProto2Unittest.TestEnumMapPlusExtra.Builder.class);
    }

    public static final int KNOWN_MAP_FIELD_FIELD_NUMBER = 101;
    private static final class KnownMapFieldDefaultEntryHolder {
      static final com.google.protobuf.MapEntry<
          java.lang.Integer, java.lang.Integer> defaultEntry =
              com.google.protobuf.MapEntry
              .<java.lang.Integer, java.lang.Integer>newDefaultInstance(
                  protobuf_unittest.MapProto2Unittest.internal_static_protobuf_unittest_TestEnumMapPlusExtra_KnownMapFieldEntry_descriptor, 
                  com.google.protobuf.WireFormat.FieldType.INT32,
                  0,
                  com.google.protobuf.WireFormat.FieldType.ENUM,
                  protobuf_unittest.MapProto2Unittest.Proto2MapEnumPlusExtra.E_PROTO2_MAP_ENUM_FOO.getNumber());
    }
    @SuppressWarnings("serial")
    private com.google.protobuf.MapField<
        java.lang.Integer, java.lang.Integer> knownMapField_;
    private com.google.protobuf.MapField<java.lang.Integer, java.lang.Integer>
    internalGetKnownMapField() {
      if (knownMapField_ == null) {
        return com.google.protobuf.MapField.emptyMapField(
            KnownMapFieldDefaultEntryHolder.defaultEntry);
      }
      return knownMapField_;
    }
    private static final
    com.google.protobuf.Internal.MapAdapter.Converter<
        java.lang.Integer, protobuf_unittest.MapProto2Unittest.Proto2MapEnumPlusExtra> knownMapFieldValueConverter =
            com.google.protobuf.Internal.MapAdapter.newEnumConverter(
                protobuf_unittest.MapProto2Unittest.Proto2MapEnumPlusExtra.internalGetValueMap(),
                protobuf_unittest.MapProto2Unittest.Proto2MapEnumPlusExtra.E_PROTO2_MAP_ENUM_FOO);
    private static final java.util.Map<java.lang.Integer, protobuf_unittest.MapProto2Unittest.Proto2MapEnumPlusExtra>
    internalGetAdaptedKnownMapFieldMap(
        java.util.Map<java.lang.Integer, java.lang.Integer> map) {
      return new com.google.protobuf.Internal.MapAdapter<
          java.lang.Integer, protobuf_unittest.MapProto2Unittest.Proto2MapEnumPlusExtra, java.lang.Integer>(
              map, knownMapFieldValueConverter);
    }
    public int getKnownMapFieldCount() {
      return internalGetKnownMapField().getMap().size();
    }
    /**
     * <code>map&lt;int32, .protobuf_unittest.Proto2MapEnumPlusExtra&gt; known_map_field = 101;</code>
     */
    @java.lang.Override
    public boolean containsKnownMapField(
        int key) {
      
      return internalGetKnownMapField().getMap().containsKey(key);
    }
    /**
     * Use {@link #getKnownMapFieldMap()} instead.
     */
    @java.lang.Override
    @java.lang.Deprecated
    public java.util.Map<java.lang.Integer, protobuf_unittest.MapProto2Unittest.Proto2MapEnumPlusExtra>
    getKnownMapField() {
      return getKnownMapFieldMap();
    }
    /**
     * <code>map&lt;int32, .protobuf_unittest.Proto2MapEnumPlusExtra&gt; known_map_field = 101;</code>
     */
    @java.lang.Override
    public java.util.Map<java.lang.Integer, protobuf_unittest.MapProto2Unittest.Proto2MapEnumPlusExtra>
    getKnownMapFieldMap() {
      return internalGetAdaptedKnownMapFieldMap(
          internalGetKnownMapField().getMap());}
    /**
     * <code>map&lt;int32, .protobuf_unittest.Proto2MapEnumPlusExtra&gt; known_map_field = 101;</code>
     */
    @java.lang.Override
    public /* nullable */
protobuf_unittest.MapProto2Unittest.Proto2MapEnumPlusExtra getKnownMapFieldOrDefault(
        int key,
        /* nullable */
protobuf_unittest.MapProto2Unittest.Proto2MapEnumPlusExtra defaultValue) {
      
      java.util.Map<java.lang.Integer, java.lang.Integer> map =
          internalGetKnownMapField().getMap();
      return map.containsKey(key)
             ? knownMapFieldValueConverter.doForward(map.get(key))
             : defaultValue;
    }
    /**
     * <code>map&lt;int32, .protobuf_unittest.Proto2MapEnumPlusExtra&gt; known_map_field = 101;</code>
     */
    @java.lang.Override
    public protobuf_unittest.MapProto2Unittest.Proto2MapEnumPlusExtra getKnownMapFieldOrThrow(
        int key) {
      
      java.util.Map<java.lang.Integer, java.lang.Integer> map =
          internalGetKnownMapField().getMap();
      if (!map.containsKey(key)) {
        throw new java.lang.IllegalArgumentException();
      }
      return knownMapFieldValueConverter.doForward(map.get(key));
    }

    public static final int UNKNOWN_MAP_FIELD_FIELD_NUMBER = 102;
    private static final class UnknownMapFieldDefaultEntryHolder {
      static final com.google.protobuf.MapEntry<
          java.lang.Integer, java.lang.Integer> defaultEntry =
              com.google.protobuf.MapEntry
              .<java.lang.Integer, java.lang.Integer>newDefaultInstance(
                  protobuf_unittest.MapProto2Unittest.internal_static_protobuf_unittest_TestEnumMapPlusExtra_UnknownMapFieldEntry_descriptor, 
                  com.google.protobuf.WireFormat.FieldType.INT32,
                  0,
                  com.google.protobuf.WireFormat.FieldType.ENUM,
                  protobuf_unittest.MapProto2Unittest.Proto2MapEnumPlusExtra.E_PROTO2_MAP_ENUM_FOO.getNumber());
    }
    @SuppressWarnings("serial")
    private com.google.protobuf.MapField<
        java.lang.Integer, java.lang.Integer> unknownMapField_;
    private com.google.protobuf.MapField<java.lang.Integer, java.lang.Integer>
    internalGetUnknownMapField() {
      if (unknownMapField_ == null) {
        return com.google.protobuf.MapField.emptyMapField(
            UnknownMapFieldDefaultEntryHolder.defaultEntry);
      }
      return unknownMapField_;
    }
    private static final
    com.google.protobuf.Internal.MapAdapter.Converter<
        java.lang.Integer, protobuf_unittest.MapProto2Unittest.Proto2MapEnumPlusExtra> unknownMapFieldValueConverter =
            com.google.protobuf.Internal.MapAdapter.newEnumConverter(
                protobuf_unittest.MapProto2Unittest.Proto2MapEnumPlusExtra.internalGetValueMap(),
                protobuf_unittest.MapProto2Unittest.Proto2MapEnumPlusExtra.E_PROTO2_MAP_ENUM_FOO);
    private static final java.util.Map<java.lang.Integer, protobuf_unittest.MapProto2Unittest.Proto2MapEnumPlusExtra>
    internalGetAdaptedUnknownMapFieldMap(
        java.util.Map<java.lang.Integer, java.lang.Integer> map) {
      return new com.google.protobuf.Internal.MapAdapter<
          java.lang.Integer, protobuf_unittest.MapProto2Unittest.Proto2MapEnumPlusExtra, java.lang.Integer>(
              map, unknownMapFieldValueConverter);
    }
    public int getUnknownMapFieldCount() {
      return internalGetUnknownMapField().getMap().size();
    }
    /**
     * <code>map&lt;int32, .protobuf_unittest.Proto2MapEnumPlusExtra&gt; unknown_map_field = 102;</code>
     */
    @java.lang.Override
    public boolean containsUnknownMapField(
        int key) {
      
      return internalGetUnknownMapField().getMap().containsKey(key);
    }
    /**
     * Use {@link #getUnknownMapFieldMap()} instead.
     */
    @java.lang.Override
    @java.lang.Deprecated
    public java.util.Map<java.lang.Integer, protobuf_unittest.MapProto2Unittest.Proto2MapEnumPlusExtra>
    getUnknownMapField() {
      return getUnknownMapFieldMap();
    }
    /**
     * <code>map&lt;int32, .protobuf_unittest.Proto2MapEnumPlusExtra&gt; unknown_map_field = 102;</code>
     */
    @java.lang.Override
    public java.util.Map<java.lang.Integer, protobuf_unittest.MapProto2Unittest.Proto2MapEnumPlusExtra>
    getUnknownMapFieldMap() {
      return internalGetAdaptedUnknownMapFieldMap(
          internalGetUnknownMapField().getMap());}
    /**
     * <code>map&lt;int32, .protobuf_unittest.Proto2MapEnumPlusExtra&gt; unknown_map_field = 102;</code>
     */
    @java.lang.Override
    public /* nullable */
protobuf_unittest.MapProto2Unittest.Proto2MapEnumPlusExtra getUnknownMapFieldOrDefault(
        int key,
        /* nullable */
protobuf_unittest.MapProto2Unittest.Proto2MapEnumPlusExtra defaultValue) {
      
      java.util.Map<java.lang.Integer, java.lang.Integer> map =
          internalGetUnknownMapField().getMap();
      return map.containsKey(key)
             ? unknownMapFieldValueConverter.doForward(map.get(key))
             : defaultValue;
    }
    /**
     * <code>map&lt;int32, .protobuf_unittest.Proto2MapEnumPlusExtra&gt; unknown_map_field = 102;</code>
     */
    @java.lang.Override
    public protobuf_unittest.MapProto2Unittest.Proto2MapEnumPlusExtra getUnknownMapFieldOrThrow(
        int key) {
      
      java.util.Map<java.lang.Integer, java.lang.Integer> map =
          internalGetUnknownMapField().getMap();
      if (!map.containsKey(key)) {
        throw new java.lang.IllegalArgumentException();
      }
      return unknownMapFieldValueConverter.doForward(map.get(key));
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      com.google.protobuf.GeneratedMessageV3
        .serializeIntegerMapTo(
          output,
          internalGetKnownMapField(),
          KnownMapFieldDefaultEntryHolder.defaultEntry,
          101);
      com.google.protobuf.GeneratedMessageV3
        .serializeIntegerMapTo(
          output,
          internalGetUnknownMapField(),
          UnknownMapFieldDefaultEntryHolder.defaultEntry,
          102);
      getUnknownFields().writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      for (java.util.Map.Entry<java.lang.Integer, java.lang.Integer> entry
           : internalGetKnownMapField().getMap().entrySet()) {
        com.google.protobuf.MapEntry<java.lang.Integer, java.lang.Integer>
        knownMapField__ = KnownMapFieldDefaultEntryHolder.defaultEntry.newBuilderForType()
            .setKey(entry.getKey())
            .setValue(entry.getValue())
            .build();
        size += com.google.protobuf.CodedOutputStream
            .computeMessageSize(101, knownMapField__);
      }
      for (java.util.Map.Entry<java.lang.Integer, java.lang.Integer> entry
           : internalGetUnknownMapField().getMap().entrySet()) {
        com.google.protobuf.MapEntry<java.lang.Integer, java.lang.Integer>
        unknownMapField__ = UnknownMapFieldDefaultEntryHolder.defaultEntry.newBuilderForType()
            .setKey(entry.getKey())
            .setValue(entry.getValue())
            .build();
        size += com.google.protobuf.CodedOutputStream
            .computeMessageSize(102, unknownMapField__);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof protobuf_unittest.MapProto2Unittest.TestEnumMapPlusExtra)) {
        return super.equals(obj);
      }
      protobuf_unittest.MapProto2Unittest.TestEnumMapPlusExtra other = (protobuf_unittest.MapProto2Unittest.TestEnumMapPlusExtra) obj;

      if (!internalGetKnownMapField().equals(
          other.internalGetKnownMapField())) return false;
      if (!internalGetUnknownMapField().equals(
          other.internalGetUnknownMapField())) return false;
      if (!getUnknownFields().equals(other.getUnknownFields())) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      if (!internalGetKnownMapField().getMap().isEmpty()) {
        hash = (37 * hash) + KNOWN_MAP_FIELD_FIELD_NUMBER;
        hash = (53 * hash) + internalGetKnownMapField().hashCode();
      }
      if (!internalGetUnknownMapField().getMap().isEmpty()) {
        hash = (37 * hash) + UNKNOWN_MAP_FIELD_FIELD_NUMBER;
        hash = (53 * hash) + internalGetUnknownMapField().hashCode();
      }
      hash = (29 * hash) + getUnknownFields().hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static protobuf_unittest.MapProto2Unittest.TestEnumMapPlusExtra parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static protobuf_unittest.MapProto2Unittest.TestEnumMapPlusExtra parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static protobuf_unittest.MapProto2Unittest.TestEnumMapPlusExtra parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static protobuf_unittest.MapProto2Unittest.TestEnumMapPlusExtra parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static protobuf_unittest.MapProto2Unittest.TestEnumMapPlusExtra parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static protobuf_unittest.MapProto2Unittest.TestEnumMapPlusExtra parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static protobuf_unittest.MapProto2Unittest.TestEnumMapPlusExtra parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static protobuf_unittest.MapProto2Unittest.TestEnumMapPlusExtra parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static protobuf_unittest.MapProto2Unittest.TestEnumMapPlusExtra parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static protobuf_unittest.MapProto2Unittest.TestEnumMapPlusExtra parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static protobuf_unittest.MapProto2Unittest.TestEnumMapPlusExtra parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static protobuf_unittest.MapProto2Unittest.TestEnumMapPlusExtra parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(protobuf_unittest.MapProto2Unittest.TestEnumMapPlusExtra prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code protobuf_unittest.TestEnumMapPlusExtra}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:protobuf_unittest.TestEnumMapPlusExtra)
        protobuf_unittest.MapProto2Unittest.TestEnumMapPlusExtraOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return protobuf_unittest.MapProto2Unittest.internal_static_protobuf_unittest_TestEnumMapPlusExtra_descriptor;
      }

      @SuppressWarnings({"rawtypes"})
      protected com.google.protobuf.MapField internalGetMapField(
          int number) {
        switch (number) {
          case 101:
            return internalGetKnownMapField();
          case 102:
            return internalGetUnknownMapField();
          default:
            throw new RuntimeException(
                "Invalid map field number: " + number);
        }
      }
      @SuppressWarnings({"rawtypes"})
      protected com.google.protobuf.MapField internalGetMutableMapField(
          int number) {
        switch (number) {
          case 101:
            return internalGetMutableKnownMapField();
          case 102:
            return internalGetMutableUnknownMapField();
          default:
            throw new RuntimeException(
                "Invalid map field number: " + number);
        }
      }
      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return protobuf_unittest.MapProto2Unittest.internal_static_protobuf_unittest_TestEnumMapPlusExtra_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                protobuf_unittest.MapProto2Unittest.TestEnumMapPlusExtra.class, protobuf_unittest.MapProto2Unittest.TestEnumMapPlusExtra.Builder.class);
      }

      // Construct using protobuf_unittest.MapProto2Unittest.TestEnumMapPlusExtra.newBuilder()
      private Builder() {

      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);

      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        bitField0_ = 0;
        internalGetMutableKnownMapField().clear();
        internalGetMutableUnknownMapField().clear();
        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return protobuf_unittest.MapProto2Unittest.internal_static_protobuf_unittest_TestEnumMapPlusExtra_descriptor;
      }

      @java.lang.Override
      public protobuf_unittest.MapProto2Unittest.TestEnumMapPlusExtra getDefaultInstanceForType() {
        return protobuf_unittest.MapProto2Unittest.TestEnumMapPlusExtra.getDefaultInstance();
      }

      @java.lang.Override
      public protobuf_unittest.MapProto2Unittest.TestEnumMapPlusExtra build() {
        protobuf_unittest.MapProto2Unittest.TestEnumMapPlusExtra result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public protobuf_unittest.MapProto2Unittest.TestEnumMapPlusExtra buildPartial() {
        protobuf_unittest.MapProto2Unittest.TestEnumMapPlusExtra result = new protobuf_unittest.MapProto2Unittest.TestEnumMapPlusExtra(this);
        if (bitField0_ != 0) { buildPartial0(result); }
        onBuilt();
        return result;
      }

      private void buildPartial0(protobuf_unittest.MapProto2Unittest.TestEnumMapPlusExtra result) {
        int from_bitField0_ = bitField0_;
        if (((from_bitField0_ & 0x00000001) != 0)) {
          result.knownMapField_ = internalGetKnownMapField();
          result.knownMapField_.makeImmutable();
        }
        if (((from_bitField0_ & 0x00000002) != 0)) {
          result.unknownMapField_ = internalGetUnknownMapField();
          result.unknownMapField_.makeImmutable();
        }
      }

      @java.lang.Override
      public Builder clone() {
        return super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof protobuf_unittest.MapProto2Unittest.TestEnumMapPlusExtra) {
          return mergeFrom((protobuf_unittest.MapProto2Unittest.TestEnumMapPlusExtra)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(protobuf_unittest.MapProto2Unittest.TestEnumMapPlusExtra other) {
        if (other == protobuf_unittest.MapProto2Unittest.TestEnumMapPlusExtra.getDefaultInstance()) return this;
        internalGetMutableKnownMapField().mergeFrom(
            other.internalGetKnownMapField());
        bitField0_ |= 0x00000001;
        internalGetMutableUnknownMapField().mergeFrom(
            other.internalGetUnknownMapField());
        bitField0_ |= 0x00000002;
        this.mergeUnknownFields(other.getUnknownFields());
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        if (extensionRegistry == null) {
          throw new java.lang.NullPointerException();
        }
        try {
          boolean done = false;
          while (!done) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                done = true;
                break;
              case 810: {
                com.google.protobuf.ByteString bytes = input.readBytes();
                com.google.protobuf.MapEntry<java.lang.Integer, java.lang.Integer>
                knownMapField__ = KnownMapFieldDefaultEntryHolder.defaultEntry.getParserForType().parseFrom(bytes);
                if (protobuf_unittest.MapProto2Unittest.Proto2MapEnumPlusExtra.forNumber(knownMapField__.getValue()) == null) {
                  mergeUnknownLengthDelimitedField(101, bytes);
                } else {
                  internalGetMutableKnownMapField().getMutableMap().put(
                      knownMapField__.getKey(), knownMapField__.getValue());
                  bitField0_ |= 0x00000001;
                }
                break;
              } // case 810
              case 818: {
                com.google.protobuf.ByteString bytes = input.readBytes();
                com.google.protobuf.MapEntry<java.lang.Integer, java.lang.Integer>
                unknownMapField__ = UnknownMapFieldDefaultEntryHolder.defaultEntry.getParserForType().parseFrom(bytes);
                if (protobuf_unittest.MapProto2Unittest.Proto2MapEnumPlusExtra.forNumber(unknownMapField__.getValue()) == null) {
                  mergeUnknownLengthDelimitedField(102, bytes);
                } else {
                  internalGetMutableUnknownMapField().getMutableMap().put(
                      unknownMapField__.getKey(), unknownMapField__.getValue());
                  bitField0_ |= 0x00000002;
                }
                break;
              } // case 818
              default: {
                if (!super.parseUnknownField(input, extensionRegistry, tag)) {
                  done = true; // was an endgroup tag
                }
                break;
              } // default:
            } // switch (tag)
          } // while (!done)
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.unwrapIOException();
        } finally {
          onChanged();
        } // finally
        return this;
      }
      private int bitField0_;

      private com.google.protobuf.MapField<
          java.lang.Integer, java.lang.Integer> knownMapField_;
      private com.google.protobuf.MapField<java.lang.Integer, java.lang.Integer>
          internalGetKnownMapField() {
        if (knownMapField_ == null) {
          return com.google.protobuf.MapField.emptyMapField(
              KnownMapFieldDefaultEntryHolder.defaultEntry);
        }
        return knownMapField_;
      }
      private com.google.protobuf.MapField<java.lang.Integer, java.lang.Integer>
          internalGetMutableKnownMapField() {
        if (knownMapField_ == null) {
          knownMapField_ = com.google.protobuf.MapField.newMapField(
              KnownMapFieldDefaultEntryHolder.defaultEntry);
        }
        if (!knownMapField_.isMutable()) {
          knownMapField_ = knownMapField_.copy();
        }
        bitField0_ |= 0x00000001;
        onChanged();
        return knownMapField_;
      }
      public int getKnownMapFieldCount() {
        return internalGetKnownMapField().getMap().size();
      }
      /**
       * <code>map&lt;int32, .protobuf_unittest.Proto2MapEnumPlusExtra&gt; known_map_field = 101;</code>
       */
      @java.lang.Override
      public boolean containsKnownMapField(
          int key) {
        
        return internalGetKnownMapField().getMap().containsKey(key);
      }
      /**
       * Use {@link #getKnownMapFieldMap()} instead.
       */
      @java.lang.Override
      @java.lang.Deprecated
      public java.util.Map<java.lang.Integer, protobuf_unittest.MapProto2Unittest.Proto2MapEnumPlusExtra>
      getKnownMapField() {
        return getKnownMapFieldMap();
      }
      /**
       * <code>map&lt;int32, .protobuf_unittest.Proto2MapEnumPlusExtra&gt; known_map_field = 101;</code>
       */
      @java.lang.Override
      public java.util.Map<java.lang.Integer, protobuf_unittest.MapProto2Unittest.Proto2MapEnumPlusExtra>
      getKnownMapFieldMap() {
        return internalGetAdaptedKnownMapFieldMap(
            internalGetKnownMapField().getMap());}
      /**
       * <code>map&lt;int32, .protobuf_unittest.Proto2MapEnumPlusExtra&gt; known_map_field = 101;</code>
       */
      @java.lang.Override
      public /* nullable */
protobuf_unittest.MapProto2Unittest.Proto2MapEnumPlusExtra getKnownMapFieldOrDefault(
          int key,
          /* nullable */
protobuf_unittest.MapProto2Unittest.Proto2MapEnumPlusExtra defaultValue) {
        
        java.util.Map<java.lang.Integer, java.lang.Integer> map =
            internalGetKnownMapField().getMap();
        return map.containsKey(key)
               ? knownMapFieldValueConverter.doForward(map.get(key))
               : defaultValue;
      }
      /**
       * <code>map&lt;int32, .protobuf_unittest.Proto2MapEnumPlusExtra&gt; known_map_field = 101;</code>
       */
      @java.lang.Override
      public protobuf_unittest.MapProto2Unittest.Proto2MapEnumPlusExtra getKnownMapFieldOrThrow(
          int key) {
        
        java.util.Map<java.lang.Integer, java.lang.Integer> map =
            internalGetKnownMapField().getMap();
        if (!map.containsKey(key)) {
          throw new java.lang.IllegalArgumentException();
        }
        return knownMapFieldValueConverter.doForward(map.get(key));
      }
      public Builder clearKnownMapField() {
        bitField0_ = (bitField0_ & ~0x00000001);
        internalGetMutableKnownMapField().getMutableMap()
            .clear();
        return this;
      }
      /**
       * <code>map&lt;int32, .protobuf_unittest.Proto2MapEnumPlusExtra&gt; known_map_field = 101;</code>
       */
      public Builder removeKnownMapField(
          int key) {
        
        internalGetMutableKnownMapField().getMutableMap()
            .remove(key);
        return this;
      }
      /**
       * Use alternate mutation accessors instead.
       */
      @java.lang.Deprecated
      public java.util.Map<java.lang.Integer, protobuf_unittest.MapProto2Unittest.Proto2MapEnumPlusExtra>
          getMutableKnownMapField() {
        bitField0_ |= 0x00000001;
        return internalGetAdaptedKnownMapFieldMap(
             internalGetMutableKnownMapField().getMutableMap());
      }
      /**
       * <code>map&lt;int32, .protobuf_unittest.Proto2MapEnumPlusExtra&gt; known_map_field = 101;</code>
       */
      public Builder putKnownMapField(
          int key,
          protobuf_unittest.MapProto2Unittest.Proto2MapEnumPlusExtra value) {
        
        
        internalGetMutableKnownMapField().getMutableMap()
            .put(key, knownMapFieldValueConverter.doBackward(value));
        bitField0_ |= 0x00000001;
        return this;
      }
      /**
       * <code>map&lt;int32, .protobuf_unittest.Proto2MapEnumPlusExtra&gt; known_map_field = 101;</code>
       */
      public Builder putAllKnownMapField(
          java.util.Map<java.lang.Integer, protobuf_unittest.MapProto2Unittest.Proto2MapEnumPlusExtra> values) {
        internalGetAdaptedKnownMapFieldMap(
            internalGetMutableKnownMapField().getMutableMap())
                .putAll(values);
        bitField0_ |= 0x00000001;
        return this;
      }

      private com.google.protobuf.MapField<
          java.lang.Integer, java.lang.Integer> unknownMapField_;
      private com.google.protobuf.MapField<java.lang.Integer, java.lang.Integer>
          internalGetUnknownMapField() {
        if (unknownMapField_ == null) {
          return com.google.protobuf.MapField.emptyMapField(
              UnknownMapFieldDefaultEntryHolder.defaultEntry);
        }
        return unknownMapField_;
      }
      private com.google.protobuf.MapField<java.lang.Integer, java.lang.Integer>
          internalGetMutableUnknownMapField() {
        if (unknownMapField_ == null) {
          unknownMapField_ = com.google.protobuf.MapField.newMapField(
              UnknownMapFieldDefaultEntryHolder.defaultEntry);
        }
        if (!unknownMapField_.isMutable()) {
          unknownMapField_ = unknownMapField_.copy();
        }
        bitField0_ |= 0x00000002;
        onChanged();
        return unknownMapField_;
      }
      public int getUnknownMapFieldCount() {
        return internalGetUnknownMapField().getMap().size();
      }
      /**
       * <code>map&lt;int32, .protobuf_unittest.Proto2MapEnumPlusExtra&gt; unknown_map_field = 102;</code>
       */
      @java.lang.Override
      public boolean containsUnknownMapField(
          int key) {
        
        return internalGetUnknownMapField().getMap().containsKey(key);
      }
      /**
       * Use {@link #getUnknownMapFieldMap()} instead.
       */
      @java.lang.Override
      @java.lang.Deprecated
      public java.util.Map<java.lang.Integer, protobuf_unittest.MapProto2Unittest.Proto2MapEnumPlusExtra>
      getUnknownMapField() {
        return getUnknownMapFieldMap();
      }
      /**
       * <code>map&lt;int32, .protobuf_unittest.Proto2MapEnumPlusExtra&gt; unknown_map_field = 102;</code>
       */
      @java.lang.Override
      public java.util.Map<java.lang.Integer, protobuf_unittest.MapProto2Unittest.Proto2MapEnumPlusExtra>
      getUnknownMapFieldMap() {
        return internalGetAdaptedUnknownMapFieldMap(
            internalGetUnknownMapField().getMap());}
      /**
       * <code>map&lt;int32, .protobuf_unittest.Proto2MapEnumPlusExtra&gt; unknown_map_field = 102;</code>
       */
      @java.lang.Override
      public /* nullable */
protobuf_unittest.MapProto2Unittest.Proto2MapEnumPlusExtra getUnknownMapFieldOrDefault(
          int key,
          /* nullable */
protobuf_unittest.MapProto2Unittest.Proto2MapEnumPlusExtra defaultValue) {
        
        java.util.Map<java.lang.Integer, java.lang.Integer> map =
            internalGetUnknownMapField().getMap();
        return map.containsKey(key)
               ? unknownMapFieldValueConverter.doForward(map.get(key))
               : defaultValue;
      }
      /**
       * <code>map&lt;int32, .protobuf_unittest.Proto2MapEnumPlusExtra&gt; unknown_map_field = 102;</code>
       */
      @java.lang.Override
      public protobuf_unittest.MapProto2Unittest.Proto2MapEnumPlusExtra getUnknownMapFieldOrThrow(
          int key) {
        
        java.util.Map<java.lang.Integer, java.lang.Integer> map =
            internalGetUnknownMapField().getMap();
        if (!map.containsKey(key)) {
          throw new java.lang.IllegalArgumentException();
        }
        return unknownMapFieldValueConverter.doForward(map.get(key));
      }
      public Builder clearUnknownMapField() {
        bitField0_ = (bitField0_ & ~0x00000002);
        internalGetMutableUnknownMapField().getMutableMap()
            .clear();
        return this;
      }
      /**
       * <code>map&lt;int32, .protobuf_unittest.Proto2MapEnumPlusExtra&gt; unknown_map_field = 102;</code>
       */
      public Builder removeUnknownMapField(
          int key) {
        
        internalGetMutableUnknownMapField().getMutableMap()
            .remove(key);
        return this;
      }
      /**
       * Use alternate mutation accessors instead.
       */
      @java.lang.Deprecated
      public java.util.Map<java.lang.Integer, protobuf_unittest.MapProto2Unittest.Proto2MapEnumPlusExtra>
          getMutableUnknownMapField() {
        bitField0_ |= 0x00000002;
        return internalGetAdaptedUnknownMapFieldMap(
             internalGetMutableUnknownMapField().getMutableMap());
      }
      /**
       * <code>map&lt;int32, .protobuf_unittest.Proto2MapEnumPlusExtra&gt; unknown_map_field = 102;</code>
       */
      public Builder putUnknownMapField(
          int key,
          protobuf_unittest.MapProto2Unittest.Proto2MapEnumPlusExtra value) {
        
        
        internalGetMutableUnknownMapField().getMutableMap()
            .put(key, unknownMapFieldValueConverter.doBackward(value));
        bitField0_ |= 0x00000002;
        return this;
      }
      /**
       * <code>map&lt;int32, .protobuf_unittest.Proto2MapEnumPlusExtra&gt; unknown_map_field = 102;</code>
       */
      public Builder putAllUnknownMapField(
          java.util.Map<java.lang.Integer, protobuf_unittest.MapProto2Unittest.Proto2MapEnumPlusExtra> values) {
        internalGetAdaptedUnknownMapFieldMap(
            internalGetMutableUnknownMapField().getMutableMap())
                .putAll(values);
        bitField0_ |= 0x00000002;
        return this;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:protobuf_unittest.TestEnumMapPlusExtra)
    }

    // @@protoc_insertion_point(class_scope:protobuf_unittest.TestEnumMapPlusExtra)
    private static final protobuf_unittest.MapProto2Unittest.TestEnumMapPlusExtra DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new protobuf_unittest.MapProto2Unittest.TestEnumMapPlusExtra();
    }

    public static protobuf_unittest.MapProto2Unittest.TestEnumMapPlusExtra getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    @java.lang.Deprecated public static final com.google.protobuf.Parser<TestEnumMapPlusExtra>
        PARSER = new com.google.protobuf.AbstractParser<TestEnumMapPlusExtra>() {
      @java.lang.Override
      public TestEnumMapPlusExtra parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        Builder builder = newBuilder();
        try {
          builder.mergeFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.setUnfinishedMessage(builder.buildPartial());
        } catch (com.google.protobuf.UninitializedMessageException e) {
          throw e.asInvalidProtocolBufferException().setUnfinishedMessage(builder.buildPartial());
        } catch (java.io.IOException e) {
          throw new com.google.protobuf.InvalidProtocolBufferException(e)
              .setUnfinishedMessage(builder.buildPartial());
        }
        return builder.buildPartial();
      }
    };

    public static com.google.protobuf.Parser<TestEnumMapPlusExtra> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<TestEnumMapPlusExtra> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public protobuf_unittest.MapProto2Unittest.TestEnumMapPlusExtra getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface TestImportEnumMapOrBuilder extends
      // @@protoc_insertion_point(interface_extends:protobuf_unittest.TestImportEnumMap)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>map&lt;int32, .protobuf_unittest_import.ImportEnumForMap&gt; import_enum_amp = 1;</code>
     */
    int getImportEnumAmpCount();
    /**
     * <code>map&lt;int32, .protobuf_unittest_import.ImportEnumForMap&gt; import_enum_amp = 1;</code>
     */
    boolean containsImportEnumAmp(
        int key);
    /**
     * Use {@link #getImportEnumAmpMap()} instead.
     */
    @java.lang.Deprecated
    java.util.Map<java.lang.Integer, com.google.protobuf.test.UnittestImport.ImportEnumForMap>
    getImportEnumAmp();
    /**
     * <code>map&lt;int32, .protobuf_unittest_import.ImportEnumForMap&gt; import_enum_amp = 1;</code>
     */
    java.util.Map<java.lang.Integer, com.google.protobuf.test.UnittestImport.ImportEnumForMap>
    getImportEnumAmpMap();
    /**
     * <code>map&lt;int32, .protobuf_unittest_import.ImportEnumForMap&gt; import_enum_amp = 1;</code>
     */
    /* nullable */
com.google.protobuf.test.UnittestImport.ImportEnumForMap getImportEnumAmpOrDefault(
        int key,
        /* nullable */
com.google.protobuf.test.UnittestImport.ImportEnumForMap         defaultValue);
    /**
     * <code>map&lt;int32, .protobuf_unittest_import.ImportEnumForMap&gt; import_enum_amp = 1;</code>
     */
    com.google.protobuf.test.UnittestImport.ImportEnumForMap getImportEnumAmpOrThrow(
        int key);
  }
  /**
   * Protobuf type {@code protobuf_unittest.TestImportEnumMap}
   */
  public static final class TestImportEnumMap extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:protobuf_unittest.TestImportEnumMap)
      TestImportEnumMapOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use TestImportEnumMap.newBuilder() to construct.
    private TestImportEnumMap(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private TestImportEnumMap() {
    }

    @java.lang.Override
    @SuppressWarnings({"unused"})
    protected java.lang.Object newInstance(
        UnusedPrivateParameter unused) {
      return new TestImportEnumMap();
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return protobuf_unittest.MapProto2Unittest.internal_static_protobuf_unittest_TestImportEnumMap_descriptor;
    }

    @SuppressWarnings({"rawtypes"})
    @java.lang.Override
    protected com.google.protobuf.MapField internalGetMapField(
        int number) {
      switch (number) {
        case 1:
          return internalGetImportEnumAmp();
        default:
          throw new RuntimeException(
              "Invalid map field number: " + number);
      }
    }
    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return protobuf_unittest.MapProto2Unittest.internal_static_protobuf_unittest_TestImportEnumMap_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              protobuf_unittest.MapProto2Unittest.TestImportEnumMap.class, protobuf_unittest.MapProto2Unittest.TestImportEnumMap.Builder.class);
    }

    public static final int IMPORT_ENUM_AMP_FIELD_NUMBER = 1;
    private static final class ImportEnumAmpDefaultEntryHolder {
      static final com.google.protobuf.MapEntry<
          java.lang.Integer, java.lang.Integer> defaultEntry =
              com.google.protobuf.MapEntry
              .<java.lang.Integer, java.lang.Integer>newDefaultInstance(
                  protobuf_unittest.MapProto2Unittest.internal_static_protobuf_unittest_TestImportEnumMap_ImportEnumAmpEntry_descriptor, 
                  com.google.protobuf.WireFormat.FieldType.INT32,
                  0,
                  com.google.protobuf.WireFormat.FieldType.ENUM,
                  com.google.protobuf.test.UnittestImport.ImportEnumForMap.UNKNOWN.getNumber());
    }
    @SuppressWarnings("serial")
    private com.google.protobuf.MapField<
        java.lang.Integer, java.lang.Integer> importEnumAmp_;
    private com.google.protobuf.MapField<java.lang.Integer, java.lang.Integer>
    internalGetImportEnumAmp() {
      if (importEnumAmp_ == null) {
        return com.google.protobuf.MapField.emptyMapField(
            ImportEnumAmpDefaultEntryHolder.defaultEntry);
      }
      return importEnumAmp_;
    }
    private static final
    com.google.protobuf.Internal.MapAdapter.Converter<
        java.lang.Integer, com.google.protobuf.test.UnittestImport.ImportEnumForMap> importEnumAmpValueConverter =
            com.google.protobuf.Internal.MapAdapter.newEnumConverter(
                com.google.protobuf.test.UnittestImport.ImportEnumForMap.internalGetValueMap(),
                com.google.protobuf.test.UnittestImport.ImportEnumForMap.UNKNOWN);
    private static final java.util.Map<java.lang.Integer, com.google.protobuf.test.UnittestImport.ImportEnumForMap>
    internalGetAdaptedImportEnumAmpMap(
        java.util.Map<java.lang.Integer, java.lang.Integer> map) {
      return new com.google.protobuf.Internal.MapAdapter<
          java.lang.Integer, com.google.protobuf.test.UnittestImport.ImportEnumForMap, java.lang.Integer>(
              map, importEnumAmpValueConverter);
    }
    public int getImportEnumAmpCount() {
      return internalGetImportEnumAmp().getMap().size();
    }
    /**
     * <code>map&lt;int32, .protobuf_unittest_import.ImportEnumForMap&gt; import_enum_amp = 1;</code>
     */
    @java.lang.Override
    public boolean containsImportEnumAmp(
        int key) {
      
      return internalGetImportEnumAmp().getMap().containsKey(key);
    }
    /**
     * Use {@link #getImportEnumAmpMap()} instead.
     */
    @java.lang.Override
    @java.lang.Deprecated
    public java.util.Map<java.lang.Integer, com.google.protobuf.test.UnittestImport.ImportEnumForMap>
    getImportEnumAmp() {
      return getImportEnumAmpMap();
    }
    /**
     * <code>map&lt;int32, .protobuf_unittest_import.ImportEnumForMap&gt; import_enum_amp = 1;</code>
     */
    @java.lang.Override
    public java.util.Map<java.lang.Integer, com.google.protobuf.test.UnittestImport.ImportEnumForMap>
    getImportEnumAmpMap() {
      return internalGetAdaptedImportEnumAmpMap(
          internalGetImportEnumAmp().getMap());}
    /**
     * <code>map&lt;int32, .protobuf_unittest_import.ImportEnumForMap&gt; import_enum_amp = 1;</code>
     */
    @java.lang.Override
    public /* nullable */
com.google.protobuf.test.UnittestImport.ImportEnumForMap getImportEnumAmpOrDefault(
        int key,
        /* nullable */
com.google.protobuf.test.UnittestImport.ImportEnumForMap defaultValue) {
      
      java.util.Map<java.lang.Integer, java.lang.Integer> map =
          internalGetImportEnumAmp().getMap();
      return map.containsKey(key)
             ? importEnumAmpValueConverter.doForward(map.get(key))
             : defaultValue;
    }
    /**
     * <code>map&lt;int32, .protobuf_unittest_import.ImportEnumForMap&gt; import_enum_amp = 1;</code>
     */
    @java.lang.Override
    public com.google.protobuf.test.UnittestImport.ImportEnumForMap getImportEnumAmpOrThrow(
        int key) {
      
      java.util.Map<java.lang.Integer, java.lang.Integer> map =
          internalGetImportEnumAmp().getMap();
      if (!map.containsKey(key)) {
        throw new java.lang.IllegalArgumentException();
      }
      return importEnumAmpValueConverter.doForward(map.get(key));
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      com.google.protobuf.GeneratedMessageV3
        .serializeIntegerMapTo(
          output,
          internalGetImportEnumAmp(),
          ImportEnumAmpDefaultEntryHolder.defaultEntry,
          1);
      getUnknownFields().writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      for (java.util.Map.Entry<java.lang.Integer, java.lang.Integer> entry
           : internalGetImportEnumAmp().getMap().entrySet()) {
        com.google.protobuf.MapEntry<java.lang.Integer, java.lang.Integer>
        importEnumAmp__ = ImportEnumAmpDefaultEntryHolder.defaultEntry.newBuilderForType()
            .setKey(entry.getKey())
            .setValue(entry.getValue())
            .build();
        size += com.google.protobuf.CodedOutputStream
            .computeMessageSize(1, importEnumAmp__);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof protobuf_unittest.MapProto2Unittest.TestImportEnumMap)) {
        return super.equals(obj);
      }
      protobuf_unittest.MapProto2Unittest.TestImportEnumMap other = (protobuf_unittest.MapProto2Unittest.TestImportEnumMap) obj;

      if (!internalGetImportEnumAmp().equals(
          other.internalGetImportEnumAmp())) return false;
      if (!getUnknownFields().equals(other.getUnknownFields())) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      if (!internalGetImportEnumAmp().getMap().isEmpty()) {
        hash = (37 * hash) + IMPORT_ENUM_AMP_FIELD_NUMBER;
        hash = (53 * hash) + internalGetImportEnumAmp().hashCode();
      }
      hash = (29 * hash) + getUnknownFields().hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static protobuf_unittest.MapProto2Unittest.TestImportEnumMap parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static protobuf_unittest.MapProto2Unittest.TestImportEnumMap parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static protobuf_unittest.MapProto2Unittest.TestImportEnumMap parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static protobuf_unittest.MapProto2Unittest.TestImportEnumMap parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static protobuf_unittest.MapProto2Unittest.TestImportEnumMap parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static protobuf_unittest.MapProto2Unittest.TestImportEnumMap parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static protobuf_unittest.MapProto2Unittest.TestImportEnumMap parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static protobuf_unittest.MapProto2Unittest.TestImportEnumMap parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static protobuf_unittest.MapProto2Unittest.TestImportEnumMap parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static protobuf_unittest.MapProto2Unittest.TestImportEnumMap parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static protobuf_unittest.MapProto2Unittest.TestImportEnumMap parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static protobuf_unittest.MapProto2Unittest.TestImportEnumMap parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(protobuf_unittest.MapProto2Unittest.TestImportEnumMap prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code protobuf_unittest.TestImportEnumMap}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:protobuf_unittest.TestImportEnumMap)
        protobuf_unittest.MapProto2Unittest.TestImportEnumMapOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return protobuf_unittest.MapProto2Unittest.internal_static_protobuf_unittest_TestImportEnumMap_descriptor;
      }

      @SuppressWarnings({"rawtypes"})
      protected com.google.protobuf.MapField internalGetMapField(
          int number) {
        switch (number) {
          case 1:
            return internalGetImportEnumAmp();
          default:
            throw new RuntimeException(
                "Invalid map field number: " + number);
        }
      }
      @SuppressWarnings({"rawtypes"})
      protected com.google.protobuf.MapField internalGetMutableMapField(
          int number) {
        switch (number) {
          case 1:
            return internalGetMutableImportEnumAmp();
          default:
            throw new RuntimeException(
                "Invalid map field number: " + number);
        }
      }
      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return protobuf_unittest.MapProto2Unittest.internal_static_protobuf_unittest_TestImportEnumMap_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                protobuf_unittest.MapProto2Unittest.TestImportEnumMap.class, protobuf_unittest.MapProto2Unittest.TestImportEnumMap.Builder.class);
      }

      // Construct using protobuf_unittest.MapProto2Unittest.TestImportEnumMap.newBuilder()
      private Builder() {

      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);

      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        bitField0_ = 0;
        internalGetMutableImportEnumAmp().clear();
        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return protobuf_unittest.MapProto2Unittest.internal_static_protobuf_unittest_TestImportEnumMap_descriptor;
      }

      @java.lang.Override
      public protobuf_unittest.MapProto2Unittest.TestImportEnumMap getDefaultInstanceForType() {
        return protobuf_unittest.MapProto2Unittest.TestImportEnumMap.getDefaultInstance();
      }

      @java.lang.Override
      public protobuf_unittest.MapProto2Unittest.TestImportEnumMap build() {
        protobuf_unittest.MapProto2Unittest.TestImportEnumMap result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public protobuf_unittest.MapProto2Unittest.TestImportEnumMap buildPartial() {
        protobuf_unittest.MapProto2Unittest.TestImportEnumMap result = new protobuf_unittest.MapProto2Unittest.TestImportEnumMap(this);
        if (bitField0_ != 0) { buildPartial0(result); }
        onBuilt();
        return result;
      }

      private void buildPartial0(protobuf_unittest.MapProto2Unittest.TestImportEnumMap result) {
        int from_bitField0_ = bitField0_;
        if (((from_bitField0_ & 0x00000001) != 0)) {
          result.importEnumAmp_ = internalGetImportEnumAmp();
          result.importEnumAmp_.makeImmutable();
        }
      }

      @java.lang.Override
      public Builder clone() {
        return super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof protobuf_unittest.MapProto2Unittest.TestImportEnumMap) {
          return mergeFrom((protobuf_unittest.MapProto2Unittest.TestImportEnumMap)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(protobuf_unittest.MapProto2Unittest.TestImportEnumMap other) {
        if (other == protobuf_unittest.MapProto2Unittest.TestImportEnumMap.getDefaultInstance()) return this;
        internalGetMutableImportEnumAmp().mergeFrom(
            other.internalGetImportEnumAmp());
        bitField0_ |= 0x00000001;
        this.mergeUnknownFields(other.getUnknownFields());
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        if (extensionRegistry == null) {
          throw new java.lang.NullPointerException();
        }
        try {
          boolean done = false;
          while (!done) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                done = true;
                break;
              case 10: {
                com.google.protobuf.ByteString bytes = input.readBytes();
                com.google.protobuf.MapEntry<java.lang.Integer, java.lang.Integer>
                importEnumAmp__ = ImportEnumAmpDefaultEntryHolder.defaultEntry.getParserForType().parseFrom(bytes);
                if (com.google.protobuf.test.UnittestImport.ImportEnumForMap.forNumber(importEnumAmp__.getValue()) == null) {
                  mergeUnknownLengthDelimitedField(1, bytes);
                } else {
                  internalGetMutableImportEnumAmp().getMutableMap().put(
                      importEnumAmp__.getKey(), importEnumAmp__.getValue());
                  bitField0_ |= 0x00000001;
                }
                break;
              } // case 10
              default: {
                if (!super.parseUnknownField(input, extensionRegistry, tag)) {
                  done = true; // was an endgroup tag
                }
                break;
              } // default:
            } // switch (tag)
          } // while (!done)
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.unwrapIOException();
        } finally {
          onChanged();
        } // finally
        return this;
      }
      private int bitField0_;

      private com.google.protobuf.MapField<
          java.lang.Integer, java.lang.Integer> importEnumAmp_;
      private com.google.protobuf.MapField<java.lang.Integer, java.lang.Integer>
          internalGetImportEnumAmp() {
        if (importEnumAmp_ == null) {
          return com.google.protobuf.MapField.emptyMapField(
              ImportEnumAmpDefaultEntryHolder.defaultEntry);
        }
        return importEnumAmp_;
      }
      private com.google.protobuf.MapField<java.lang.Integer, java.lang.Integer>
          internalGetMutableImportEnumAmp() {
        if (importEnumAmp_ == null) {
          importEnumAmp_ = com.google.protobuf.MapField.newMapField(
              ImportEnumAmpDefaultEntryHolder.defaultEntry);
        }
        if (!importEnumAmp_.isMutable()) {
          importEnumAmp_ = importEnumAmp_.copy();
        }
        bitField0_ |= 0x00000001;
        onChanged();
        return importEnumAmp_;
      }
      public int getImportEnumAmpCount() {
        return internalGetImportEnumAmp().getMap().size();
      }
      /**
       * <code>map&lt;int32, .protobuf_unittest_import.ImportEnumForMap&gt; import_enum_amp = 1;</code>
       */
      @java.lang.Override
      public boolean containsImportEnumAmp(
          int key) {
        
        return internalGetImportEnumAmp().getMap().containsKey(key);
      }
      /**
       * Use {@link #getImportEnumAmpMap()} instead.
       */
      @java.lang.Override
      @java.lang.Deprecated
      public java.util.Map<java.lang.Integer, com.google.protobuf.test.UnittestImport.ImportEnumForMap>
      getImportEnumAmp() {
        return getImportEnumAmpMap();
      }
      /**
       * <code>map&lt;int32, .protobuf_unittest_import.ImportEnumForMap&gt; import_enum_amp = 1;</code>
       */
      @java.lang.Override
      public java.util.Map<java.lang.Integer, com.google.protobuf.test.UnittestImport.ImportEnumForMap>
      getImportEnumAmpMap() {
        return internalGetAdaptedImportEnumAmpMap(
            internalGetImportEnumAmp().getMap());}
      /**
       * <code>map&lt;int32, .protobuf_unittest_import.ImportEnumForMap&gt; import_enum_amp = 1;</code>
       */
      @java.lang.Override
      public /* nullable */
com.google.protobuf.test.UnittestImport.ImportEnumForMap getImportEnumAmpOrDefault(
          int key,
          /* nullable */
com.google.protobuf.test.UnittestImport.ImportEnumForMap defaultValue) {
        
        java.util.Map<java.lang.Integer, java.lang.Integer> map =
            internalGetImportEnumAmp().getMap();
        return map.containsKey(key)
               ? importEnumAmpValueConverter.doForward(map.get(key))
               : defaultValue;
      }
      /**
       * <code>map&lt;int32, .protobuf_unittest_import.ImportEnumForMap&gt; import_enum_amp = 1;</code>
       */
      @java.lang.Override
      public com.google.protobuf.test.UnittestImport.ImportEnumForMap getImportEnumAmpOrThrow(
          int key) {
        
        java.util.Map<java.lang.Integer, java.lang.Integer> map =
            internalGetImportEnumAmp().getMap();
        if (!map.containsKey(key)) {
          throw new java.lang.IllegalArgumentException();
        }
        return importEnumAmpValueConverter.doForward(map.get(key));
      }
      public Builder clearImportEnumAmp() {
        bitField0_ = (bitField0_ & ~0x00000001);
        internalGetMutableImportEnumAmp().getMutableMap()
            .clear();
        return this;
      }
      /**
       * <code>map&lt;int32, .protobuf_unittest_import.ImportEnumForMap&gt; import_enum_amp = 1;</code>
       */
      public Builder removeImportEnumAmp(
          int key) {
        
        internalGetMutableImportEnumAmp().getMutableMap()
            .remove(key);
        return this;
      }
      /**
       * Use alternate mutation accessors instead.
       */
      @java.lang.Deprecated
      public java.util.Map<java.lang.Integer, com.google.protobuf.test.UnittestImport.ImportEnumForMap>
          getMutableImportEnumAmp() {
        bitField0_ |= 0x00000001;
        return internalGetAdaptedImportEnumAmpMap(
             internalGetMutableImportEnumAmp().getMutableMap());
      }
      /**
       * <code>map&lt;int32, .protobuf_unittest_import.ImportEnumForMap&gt; import_enum_amp = 1;</code>
       */
      public Builder putImportEnumAmp(
          int key,
          com.google.protobuf.test.UnittestImport.ImportEnumForMap value) {
        
        
        internalGetMutableImportEnumAmp().getMutableMap()
            .put(key, importEnumAmpValueConverter.doBackward(value));
        bitField0_ |= 0x00000001;
        return this;
      }
      /**
       * <code>map&lt;int32, .protobuf_unittest_import.ImportEnumForMap&gt; import_enum_amp = 1;</code>
       */
      public Builder putAllImportEnumAmp(
          java.util.Map<java.lang.Integer, com.google.protobuf.test.UnittestImport.ImportEnumForMap> values) {
        internalGetAdaptedImportEnumAmpMap(
            internalGetMutableImportEnumAmp().getMutableMap())
                .putAll(values);
        bitField0_ |= 0x00000001;
        return this;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:protobuf_unittest.TestImportEnumMap)
    }

    // @@protoc_insertion_point(class_scope:protobuf_unittest.TestImportEnumMap)
    private static final protobuf_unittest.MapProto2Unittest.TestImportEnumMap DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new protobuf_unittest.MapProto2Unittest.TestImportEnumMap();
    }

    public static protobuf_unittest.MapProto2Unittest.TestImportEnumMap getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    @java.lang.Deprecated public static final com.google.protobuf.Parser<TestImportEnumMap>
        PARSER = new com.google.protobuf.AbstractParser<TestImportEnumMap>() {
      @java.lang.Override
      public TestImportEnumMap parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        Builder builder = newBuilder();
        try {
          builder.mergeFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.setUnfinishedMessage(builder.buildPartial());
        } catch (com.google.protobuf.UninitializedMessageException e) {
          throw e.asInvalidProtocolBufferException().setUnfinishedMessage(builder.buildPartial());
        } catch (java.io.IOException e) {
          throw new com.google.protobuf.InvalidProtocolBufferException(e)
              .setUnfinishedMessage(builder.buildPartial());
        }
        return builder.buildPartial();
      }
    };

    public static com.google.protobuf.Parser<TestImportEnumMap> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<TestImportEnumMap> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public protobuf_unittest.MapProto2Unittest.TestImportEnumMap getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface TestIntIntMapOrBuilder extends
      // @@protoc_insertion_point(interface_extends:protobuf_unittest.TestIntIntMap)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>map&lt;int32, int32&gt; m = 1;</code>
     */
    int getMCount();
    /**
     * <code>map&lt;int32, int32&gt; m = 1;</code>
     */
    boolean containsM(
        int key);
    /**
     * Use {@link #getMMap()} instead.
     */
    @java.lang.Deprecated
    java.util.Map<java.lang.Integer, java.lang.Integer>
    getM();
    /**
     * <code>map&lt;int32, int32&gt; m = 1;</code>
     */
    java.util.Map<java.lang.Integer, java.lang.Integer>
    getMMap();
    /**
     * <code>map&lt;int32, int32&gt; m = 1;</code>
     */
    int getMOrDefault(
        int key,
        int defaultValue);
    /**
     * <code>map&lt;int32, int32&gt; m = 1;</code>
     */
    int getMOrThrow(
        int key);
  }
  /**
   * Protobuf type {@code protobuf_unittest.TestIntIntMap}
   */
  public static final class TestIntIntMap extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:protobuf_unittest.TestIntIntMap)
      TestIntIntMapOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use TestIntIntMap.newBuilder() to construct.
    private TestIntIntMap(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private TestIntIntMap() {
    }

    @java.lang.Override
    @SuppressWarnings({"unused"})
    protected java.lang.Object newInstance(
        UnusedPrivateParameter unused) {
      return new TestIntIntMap();
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return protobuf_unittest.MapProto2Unittest.internal_static_protobuf_unittest_TestIntIntMap_descriptor;
    }

    @SuppressWarnings({"rawtypes"})
    @java.lang.Override
    protected com.google.protobuf.MapField internalGetMapField(
        int number) {
      switch (number) {
        case 1:
          return internalGetM();
        default:
          throw new RuntimeException(
              "Invalid map field number: " + number);
      }
    }
    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return protobuf_unittest.MapProto2Unittest.internal_static_protobuf_unittest_TestIntIntMap_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              protobuf_unittest.MapProto2Unittest.TestIntIntMap.class, protobuf_unittest.MapProto2Unittest.TestIntIntMap.Builder.class);
    }

    public static final int M_FIELD_NUMBER = 1;
    private static final class MDefaultEntryHolder {
      static final com.google.protobuf.MapEntry<
          java.lang.Integer, java.lang.Integer> defaultEntry =
              com.google.protobuf.MapEntry
              .<java.lang.Integer, java.lang.Integer>newDefaultInstance(
                  protobuf_unittest.MapProto2Unittest.internal_static_protobuf_unittest_TestIntIntMap_MEntry_descriptor, 
                  com.google.protobuf.WireFormat.FieldType.INT32,
                  0,
                  com.google.protobuf.WireFormat.FieldType.INT32,
                  0);
    }
    @SuppressWarnings("serial")
    private com.google.protobuf.MapField<
        java.lang.Integer, java.lang.Integer> m_;
    private com.google.protobuf.MapField<java.lang.Integer, java.lang.Integer>
    internalGetM() {
      if (m_ == null) {
        return com.google.protobuf.MapField.emptyMapField(
            MDefaultEntryHolder.defaultEntry);
      }
      return m_;
    }
    public int getMCount() {
      return internalGetM().getMap().size();
    }
    /**
     * <code>map&lt;int32, int32&gt; m = 1;</code>
     */
    @java.lang.Override
    public boolean containsM(
        int key) {
      
      return internalGetM().getMap().containsKey(key);
    }
    /**
     * Use {@link #getMMap()} instead.
     */
    @java.lang.Override
    @java.lang.Deprecated
    public java.util.Map<java.lang.Integer, java.lang.Integer> getM() {
      return getMMap();
    }
    /**
     * <code>map&lt;int32, int32&gt; m = 1;</code>
     */
    @java.lang.Override
    public java.util.Map<java.lang.Integer, java.lang.Integer> getMMap() {
      return internalGetM().getMap();
    }
    /**
     * <code>map&lt;int32, int32&gt; m = 1;</code>
     */
    @java.lang.Override
    public int getMOrDefault(
        int key,
        int defaultValue) {
      
      java.util.Map<java.lang.Integer, java.lang.Integer> map =
          internalGetM().getMap();
      return map.containsKey(key) ? map.get(key) : defaultValue;
    }
    /**
     * <code>map&lt;int32, int32&gt; m = 1;</code>
     */
    @java.lang.Override
    public int getMOrThrow(
        int key) {
      
      java.util.Map<java.lang.Integer, java.lang.Integer> map =
          internalGetM().getMap();
      if (!map.containsKey(key)) {
        throw new java.lang.IllegalArgumentException();
      }
      return map.get(key);
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      com.google.protobuf.GeneratedMessageV3
        .serializeIntegerMapTo(
          output,
          internalGetM(),
          MDefaultEntryHolder.defaultEntry,
          1);
      getUnknownFields().writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      for (java.util.Map.Entry<java.lang.Integer, java.lang.Integer> entry
           : internalGetM().getMap().entrySet()) {
        com.google.protobuf.MapEntry<java.lang.Integer, java.lang.Integer>
        m__ = MDefaultEntryHolder.defaultEntry.newBuilderForType()
            .setKey(entry.getKey())
            .setValue(entry.getValue())
            .build();
        size += com.google.protobuf.CodedOutputStream
            .computeMessageSize(1, m__);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof protobuf_unittest.MapProto2Unittest.TestIntIntMap)) {
        return super.equals(obj);
      }
      protobuf_unittest.MapProto2Unittest.TestIntIntMap other = (protobuf_unittest.MapProto2Unittest.TestIntIntMap) obj;

      if (!internalGetM().equals(
          other.internalGetM())) return false;
      if (!getUnknownFields().equals(other.getUnknownFields())) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      if (!internalGetM().getMap().isEmpty()) {
        hash = (37 * hash) + M_FIELD_NUMBER;
        hash = (53 * hash) + internalGetM().hashCode();
      }
      hash = (29 * hash) + getUnknownFields().hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static protobuf_unittest.MapProto2Unittest.TestIntIntMap parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static protobuf_unittest.MapProto2Unittest.TestIntIntMap parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static protobuf_unittest.MapProto2Unittest.TestIntIntMap parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static protobuf_unittest.MapProto2Unittest.TestIntIntMap parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static protobuf_unittest.MapProto2Unittest.TestIntIntMap parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static protobuf_unittest.MapProto2Unittest.TestIntIntMap parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static protobuf_unittest.MapProto2Unittest.TestIntIntMap parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static protobuf_unittest.MapProto2Unittest.TestIntIntMap parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static protobuf_unittest.MapProto2Unittest.TestIntIntMap parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static protobuf_unittest.MapProto2Unittest.TestIntIntMap parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static protobuf_unittest.MapProto2Unittest.TestIntIntMap parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static protobuf_unittest.MapProto2Unittest.TestIntIntMap parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(protobuf_unittest.MapProto2Unittest.TestIntIntMap prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code protobuf_unittest.TestIntIntMap}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:protobuf_unittest.TestIntIntMap)
        protobuf_unittest.MapProto2Unittest.TestIntIntMapOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return protobuf_unittest.MapProto2Unittest.internal_static_protobuf_unittest_TestIntIntMap_descriptor;
      }

      @SuppressWarnings({"rawtypes"})
      protected com.google.protobuf.MapField internalGetMapField(
          int number) {
        switch (number) {
          case 1:
            return internalGetM();
          default:
            throw new RuntimeException(
                "Invalid map field number: " + number);
        }
      }
      @SuppressWarnings({"rawtypes"})
      protected com.google.protobuf.MapField internalGetMutableMapField(
          int number) {
        switch (number) {
          case 1:
            return internalGetMutableM();
          default:
            throw new RuntimeException(
                "Invalid map field number: " + number);
        }
      }
      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return protobuf_unittest.MapProto2Unittest.internal_static_protobuf_unittest_TestIntIntMap_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                protobuf_unittest.MapProto2Unittest.TestIntIntMap.class, protobuf_unittest.MapProto2Unittest.TestIntIntMap.Builder.class);
      }

      // Construct using protobuf_unittest.MapProto2Unittest.TestIntIntMap.newBuilder()
      private Builder() {

      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);

      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        bitField0_ = 0;
        internalGetMutableM().clear();
        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return protobuf_unittest.MapProto2Unittest.internal_static_protobuf_unittest_TestIntIntMap_descriptor;
      }

      @java.lang.Override
      public protobuf_unittest.MapProto2Unittest.TestIntIntMap getDefaultInstanceForType() {
        return protobuf_unittest.MapProto2Unittest.TestIntIntMap.getDefaultInstance();
      }

      @java.lang.Override
      public protobuf_unittest.MapProto2Unittest.TestIntIntMap build() {
        protobuf_unittest.MapProto2Unittest.TestIntIntMap result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public protobuf_unittest.MapProto2Unittest.TestIntIntMap buildPartial() {
        protobuf_unittest.MapProto2Unittest.TestIntIntMap result = new protobuf_unittest.MapProto2Unittest.TestIntIntMap(this);
        if (bitField0_ != 0) { buildPartial0(result); }
        onBuilt();
        return result;
      }

      private void buildPartial0(protobuf_unittest.MapProto2Unittest.TestIntIntMap result) {
        int from_bitField0_ = bitField0_;
        if (((from_bitField0_ & 0x00000001) != 0)) {
          result.m_ = internalGetM();
          result.m_.makeImmutable();
        }
      }

      @java.lang.Override
      public Builder clone() {
        return super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof protobuf_unittest.MapProto2Unittest.TestIntIntMap) {
          return mergeFrom((protobuf_unittest.MapProto2Unittest.TestIntIntMap)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(protobuf_unittest.MapProto2Unittest.TestIntIntMap other) {
        if (other == protobuf_unittest.MapProto2Unittest.TestIntIntMap.getDefaultInstance()) return this;
        internalGetMutableM().mergeFrom(
            other.internalGetM());
        bitField0_ |= 0x00000001;
        this.mergeUnknownFields(other.getUnknownFields());
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        if (extensionRegistry == null) {
          throw new java.lang.NullPointerException();
        }
        try {
          boolean done = false;
          while (!done) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                done = true;
                break;
              case 10: {
                com.google.protobuf.MapEntry<java.lang.Integer, java.lang.Integer>
                m__ = input.readMessage(
                    MDefaultEntryHolder.defaultEntry.getParserForType(), extensionRegistry);
                internalGetMutableM().getMutableMap().put(
                    m__.getKey(), m__.getValue());
                bitField0_ |= 0x00000001;
                break;
              } // case 10
              default: {
                if (!super.parseUnknownField(input, extensionRegistry, tag)) {
                  done = true; // was an endgroup tag
                }
                break;
              } // default:
            } // switch (tag)
          } // while (!done)
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.unwrapIOException();
        } finally {
          onChanged();
        } // finally
        return this;
      }
      private int bitField0_;

      private com.google.protobuf.MapField<
          java.lang.Integer, java.lang.Integer> m_;
      private com.google.protobuf.MapField<java.lang.Integer, java.lang.Integer>
          internalGetM() {
        if (m_ == null) {
          return com.google.protobuf.MapField.emptyMapField(
              MDefaultEntryHolder.defaultEntry);
        }
        return m_;
      }
      private com.google.protobuf.MapField<java.lang.Integer, java.lang.Integer>
          internalGetMutableM() {
        if (m_ == null) {
          m_ = com.google.protobuf.MapField.newMapField(
              MDefaultEntryHolder.defaultEntry);
        }
        if (!m_.isMutable()) {
          m_ = m_.copy();
        }
        bitField0_ |= 0x00000001;
        onChanged();
        return m_;
      }
      public int getMCount() {
        return internalGetM().getMap().size();
      }
      /**
       * <code>map&lt;int32, int32&gt; m = 1;</code>
       */
      @java.lang.Override
      public boolean containsM(
          int key) {
        
        return internalGetM().getMap().containsKey(key);
      }
      /**
       * Use {@link #getMMap()} instead.
       */
      @java.lang.Override
      @java.lang.Deprecated
      public java.util.Map<java.lang.Integer, java.lang.Integer> getM() {
        return getMMap();
      }
      /**
       * <code>map&lt;int32, int32&gt; m = 1;</code>
       */
      @java.lang.Override
      public java.util.Map<java.lang.Integer, java.lang.Integer> getMMap() {
        return internalGetM().getMap();
      }
      /**
       * <code>map&lt;int32, int32&gt; m = 1;</code>
       */
      @java.lang.Override
      public int getMOrDefault(
          int key,
          int defaultValue) {
        
        java.util.Map<java.lang.Integer, java.lang.Integer> map =
            internalGetM().getMap();
        return map.containsKey(key) ? map.get(key) : defaultValue;
      }
      /**
       * <code>map&lt;int32, int32&gt; m = 1;</code>
       */
      @java.lang.Override
      public int getMOrThrow(
          int key) {
        
        java.util.Map<java.lang.Integer, java.lang.Integer> map =
            internalGetM().getMap();
        if (!map.containsKey(key)) {
          throw new java.lang.IllegalArgumentException();
        }
        return map.get(key);
      }
      public Builder clearM() {
        bitField0_ = (bitField0_ & ~0x00000001);
        internalGetMutableM().getMutableMap()
            .clear();
        return this;
      }
      /**
       * <code>map&lt;int32, int32&gt; m = 1;</code>
       */
      public Builder removeM(
          int key) {
        
        internalGetMutableM().getMutableMap()
            .remove(key);
        return this;
      }
      /**
       * Use alternate mutation accessors instead.
       */
      @java.lang.Deprecated
      public java.util.Map<java.lang.Integer, java.lang.Integer>
          getMutableM() {
        bitField0_ |= 0x00000001;
        return internalGetMutableM().getMutableMap();
      }
      /**
       * <code>map&lt;int32, int32&gt; m = 1;</code>
       */
      public Builder putM(
          int key,
          int value) {
        
        
        internalGetMutableM().getMutableMap()
            .put(key, value);
        bitField0_ |= 0x00000001;
        return this;
      }
      /**
       * <code>map&lt;int32, int32&gt; m = 1;</code>
       */
      public Builder putAllM(
          java.util.Map<java.lang.Integer, java.lang.Integer> values) {
        internalGetMutableM().getMutableMap()
            .putAll(values);
        bitField0_ |= 0x00000001;
        return this;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:protobuf_unittest.TestIntIntMap)
    }

    // @@protoc_insertion_point(class_scope:protobuf_unittest.TestIntIntMap)
    private static final protobuf_unittest.MapProto2Unittest.TestIntIntMap DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new protobuf_unittest.MapProto2Unittest.TestIntIntMap();
    }

    public static protobuf_unittest.MapProto2Unittest.TestIntIntMap getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    @java.lang.Deprecated public static final com.google.protobuf.Parser<TestIntIntMap>
        PARSER = new com.google.protobuf.AbstractParser<TestIntIntMap>() {
      @java.lang.Override
      public TestIntIntMap parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        Builder builder = newBuilder();
        try {
          builder.mergeFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.setUnfinishedMessage(builder.buildPartial());
        } catch (com.google.protobuf.UninitializedMessageException e) {
          throw e.asInvalidProtocolBufferException().setUnfinishedMessage(builder.buildPartial());
        } catch (java.io.IOException e) {
          throw new com.google.protobuf.InvalidProtocolBufferException(e)
              .setUnfinishedMessage(builder.buildPartial());
        }
        return builder.buildPartial();
      }
    };

    public static com.google.protobuf.Parser<TestIntIntMap> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<TestIntIntMap> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public protobuf_unittest.MapProto2Unittest.TestIntIntMap getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface TestMapsOrBuilder extends
      // @@protoc_insertion_point(interface_extends:protobuf_unittest.TestMaps)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>map&lt;int32, .protobuf_unittest.TestIntIntMap&gt; m_int32 = 1;</code>
     */
    int getMInt32Count();
    /**
     * <code>map&lt;int32, .protobuf_unittest.TestIntIntMap&gt; m_int32 = 1;</code>
     */
    boolean containsMInt32(
        int key);
    /**
     * Use {@link #getMInt32Map()} instead.
     */
    @java.lang.Deprecated
    java.util.Map<java.lang.Integer, protobuf_unittest.MapProto2Unittest.TestIntIntMap>
    getMInt32();
    /**
     * <code>map&lt;int32, .protobuf_unittest.TestIntIntMap&gt; m_int32 = 1;</code>
     */
    java.util.Map<java.lang.Integer, protobuf_unittest.MapProto2Unittest.TestIntIntMap>
    getMInt32Map();
    /**
     * <code>map&lt;int32, .protobuf_unittest.TestIntIntMap&gt; m_int32 = 1;</code>
     */
    /* nullable */
protobuf_unittest.MapProto2Unittest.TestIntIntMap getMInt32OrDefault(
        int key,
        /* nullable */
protobuf_unittest.MapProto2Unittest.TestIntIntMap defaultValue);
    /**
     * <code>map&lt;int32, .protobuf_unittest.TestIntIntMap&gt; m_int32 = 1;</code>
     */
    protobuf_unittest.MapProto2Unittest.TestIntIntMap getMInt32OrThrow(
        int key);

    /**
     * <code>map&lt;int64, .protobuf_unittest.TestIntIntMap&gt; m_int64 = 2;</code>
     */
    int getMInt64Count();
    /**
     * <code>map&lt;int64, .protobuf_unittest.TestIntIntMap&gt; m_int64 = 2;</code>
     */
    boolean containsMInt64(
        long key);
    /**
     * Use {@link #getMInt64Map()} instead.
     */
    @java.lang.Deprecated
    java.util.Map<java.lang.Long, protobuf_unittest.MapProto2Unittest.TestIntIntMap>
    getMInt64();
    /**
     * <code>map&lt;int64, .protobuf_unittest.TestIntIntMap&gt; m_int64 = 2;</code>
     */
    java.util.Map<java.lang.Long, protobuf_unittest.MapProto2Unittest.TestIntIntMap>
    getMInt64Map();
    /**
     * <code>map&lt;int64, .protobuf_unittest.TestIntIntMap&gt; m_int64 = 2;</code>
     */
    /* nullable */
protobuf_unittest.MapProto2Unittest.TestIntIntMap getMInt64OrDefault(
        long key,
        /* nullable */
protobuf_unittest.MapProto2Unittest.TestIntIntMap defaultValue);
    /**
     * <code>map&lt;int64, .protobuf_unittest.TestIntIntMap&gt; m_int64 = 2;</code>
     */
    protobuf_unittest.MapProto2Unittest.TestIntIntMap getMInt64OrThrow(
        long key);

    /**
     * <code>map&lt;uint32, .protobuf_unittest.TestIntIntMap&gt; m_uint32 = 3;</code>
     */
    int getMUint32Count();
    /**
     * <code>map&lt;uint32, .protobuf_unittest.TestIntIntMap&gt; m_uint32 = 3;</code>
     */
    boolean containsMUint32(
        int key);
    /**
     * Use {@link #getMUint32Map()} instead.
     */
    @java.lang.Deprecated
    java.util.Map<java.lang.Integer, protobuf_unittest.MapProto2Unittest.TestIntIntMap>
    getMUint32();
    /**
     * <code>map&lt;uint32, .protobuf_unittest.TestIntIntMap&gt; m_uint32 = 3;</code>
     */
    java.util.Map<java.lang.Integer, protobuf_unittest.MapProto2Unittest.TestIntIntMap>
    getMUint32Map();
    /**
     * <code>map&lt;uint32, .protobuf_unittest.TestIntIntMap&gt; m_uint32 = 3;</code>
     */
    /* nullable */
protobuf_unittest.MapProto2Unittest.TestIntIntMap getMUint32OrDefault(
        int key,
        /* nullable */
protobuf_unittest.MapProto2Unittest.TestIntIntMap defaultValue);
    /**
     * <code>map&lt;uint32, .protobuf_unittest.TestIntIntMap&gt; m_uint32 = 3;</code>
     */
    protobuf_unittest.MapProto2Unittest.TestIntIntMap getMUint32OrThrow(
        int key);

    /**
     * <code>map&lt;uint64, .protobuf_unittest.TestIntIntMap&gt; m_uint64 = 4;</code>
     */
    int getMUint64Count();
    /**
     * <code>map&lt;uint64, .protobuf_unittest.TestIntIntMap&gt; m_uint64 = 4;</code>
     */
    boolean containsMUint64(
        long key);
    /**
     * Use {@link #getMUint64Map()} instead.
     */
    @java.lang.Deprecated
    java.util.Map<java.lang.Long, protobuf_unittest.MapProto2Unittest.TestIntIntMap>
    getMUint64();
    /**
     * <code>map&lt;uint64, .protobuf_unittest.TestIntIntMap&gt; m_uint64 = 4;</code>
     */
    java.util.Map<java.lang.Long, protobuf_unittest.MapProto2Unittest.TestIntIntMap>
    getMUint64Map();
    /**
     * <code>map&lt;uint64, .protobuf_unittest.TestIntIntMap&gt; m_uint64 = 4;</code>
     */
    /* nullable */
protobuf_unittest.MapProto2Unittest.TestIntIntMap getMUint64OrDefault(
        long key,
        /* nullable */
protobuf_unittest.MapProto2Unittest.TestIntIntMap defaultValue);
    /**
     * <code>map&lt;uint64, .protobuf_unittest.TestIntIntMap&gt; m_uint64 = 4;</code>
     */
    protobuf_unittest.MapProto2Unittest.TestIntIntMap getMUint64OrThrow(
        long key);

    /**
     * <code>map&lt;sint32, .protobuf_unittest.TestIntIntMap&gt; m_sint32 = 5;</code>
     */
    int getMSint32Count();
    /**
     * <code>map&lt;sint32, .protobuf_unittest.TestIntIntMap&gt; m_sint32 = 5;</code>
     */
    boolean containsMSint32(
        int key);
    /**
     * Use {@link #getMSint32Map()} instead.
     */
    @java.lang.Deprecated
    java.util.Map<java.lang.Integer, protobuf_unittest.MapProto2Unittest.TestIntIntMap>
    getMSint32();
    /**
     * <code>map&lt;sint32, .protobuf_unittest.TestIntIntMap&gt; m_sint32 = 5;</code>
     */
    java.util.Map<java.lang.Integer, protobuf_unittest.MapProto2Unittest.TestIntIntMap>
    getMSint32Map();
    /**
     * <code>map&lt;sint32, .protobuf_unittest.TestIntIntMap&gt; m_sint32 = 5;</code>
     */
    /* nullable */
protobuf_unittest.MapProto2Unittest.TestIntIntMap getMSint32OrDefault(
        int key,
        /* nullable */
protobuf_unittest.MapProto2Unittest.TestIntIntMap defaultValue);
    /**
     * <code>map&lt;sint32, .protobuf_unittest.TestIntIntMap&gt; m_sint32 = 5;</code>
     */
    protobuf_unittest.MapProto2Unittest.TestIntIntMap getMSint32OrThrow(
        int key);

    /**
     * <code>map&lt;sint64, .protobuf_unittest.TestIntIntMap&gt; m_sint64 = 6;</code>
     */
    int getMSint64Count();
    /**
     * <code>map&lt;sint64, .protobuf_unittest.TestIntIntMap&gt; m_sint64 = 6;</code>
     */
    boolean containsMSint64(
        long key);
    /**
     * Use {@link #getMSint64Map()} instead.
     */
    @java.lang.Deprecated
    java.util.Map<java.lang.Long, protobuf_unittest.MapProto2Unittest.TestIntIntMap>
    getMSint64();
    /**
     * <code>map&lt;sint64, .protobuf_unittest.TestIntIntMap&gt; m_sint64 = 6;</code>
     */
    java.util.Map<java.lang.Long, protobuf_unittest.MapProto2Unittest.TestIntIntMap>
    getMSint64Map();
    /**
     * <code>map&lt;sint64, .protobuf_unittest.TestIntIntMap&gt; m_sint64 = 6;</code>
     */
    /* nullable */
protobuf_unittest.MapProto2Unittest.TestIntIntMap getMSint64OrDefault(
        long key,
        /* nullable */
protobuf_unittest.MapProto2Unittest.TestIntIntMap defaultValue);
    /**
     * <code>map&lt;sint64, .protobuf_unittest.TestIntIntMap&gt; m_sint64 = 6;</code>
     */
    protobuf_unittest.MapProto2Unittest.TestIntIntMap getMSint64OrThrow(
        long key);

    /**
     * <code>map&lt;fixed32, .protobuf_unittest.TestIntIntMap&gt; m_fixed32 = 7;</code>
     */
    int getMFixed32Count();
    /**
     * <code>map&lt;fixed32, .protobuf_unittest.TestIntIntMap&gt; m_fixed32 = 7;</code>
     */
    boolean containsMFixed32(
        int key);
    /**
     * Use {@link #getMFixed32Map()} instead.
     */
    @java.lang.Deprecated
    java.util.Map<java.lang.Integer, protobuf_unittest.MapProto2Unittest.TestIntIntMap>
    getMFixed32();
    /**
     * <code>map&lt;fixed32, .protobuf_unittest.TestIntIntMap&gt; m_fixed32 = 7;</code>
     */
    java.util.Map<java.lang.Integer, protobuf_unittest.MapProto2Unittest.TestIntIntMap>
    getMFixed32Map();
    /**
     * <code>map&lt;fixed32, .protobuf_unittest.TestIntIntMap&gt; m_fixed32 = 7;</code>
     */
    /* nullable */
protobuf_unittest.MapProto2Unittest.TestIntIntMap getMFixed32OrDefault(
        int key,
        /* nullable */
protobuf_unittest.MapProto2Unittest.TestIntIntMap defaultValue);
    /**
     * <code>map&lt;fixed32, .protobuf_unittest.TestIntIntMap&gt; m_fixed32 = 7;</code>
     */
    protobuf_unittest.MapProto2Unittest.TestIntIntMap getMFixed32OrThrow(
        int key);

    /**
     * <code>map&lt;fixed64, .protobuf_unittest.TestIntIntMap&gt; m_fixed64 = 8;</code>
     */
    int getMFixed64Count();
    /**
     * <code>map&lt;fixed64, .protobuf_unittest.TestIntIntMap&gt; m_fixed64 = 8;</code>
     */
    boolean containsMFixed64(
        long key);
    /**
     * Use {@link #getMFixed64Map()} instead.
     */
    @java.lang.Deprecated
    java.util.Map<java.lang.Long, protobuf_unittest.MapProto2Unittest.TestIntIntMap>
    getMFixed64();
    /**
     * <code>map&lt;fixed64, .protobuf_unittest.TestIntIntMap&gt; m_fixed64 = 8;</code>
     */
    java.util.Map<java.lang.Long, protobuf_unittest.MapProto2Unittest.TestIntIntMap>
    getMFixed64Map();
    /**
     * <code>map&lt;fixed64, .protobuf_unittest.TestIntIntMap&gt; m_fixed64 = 8;</code>
     */
    /* nullable */
protobuf_unittest.MapProto2Unittest.TestIntIntMap getMFixed64OrDefault(
        long key,
        /* nullable */
protobuf_unittest.MapProto2Unittest.TestIntIntMap defaultValue);
    /**
     * <code>map&lt;fixed64, .protobuf_unittest.TestIntIntMap&gt; m_fixed64 = 8;</code>
     */
    protobuf_unittest.MapProto2Unittest.TestIntIntMap getMFixed64OrThrow(
        long key);

    /**
     * <code>map&lt;sfixed32, .protobuf_unittest.TestIntIntMap&gt; m_sfixed32 = 9;</code>
     */
    int getMSfixed32Count();
    /**
     * <code>map&lt;sfixed32, .protobuf_unittest.TestIntIntMap&gt; m_sfixed32 = 9;</code>
     */
    boolean containsMSfixed32(
        int key);
    /**
     * Use {@link #getMSfixed32Map()} instead.
     */
    @java.lang.Deprecated
    java.util.Map<java.lang.Integer, protobuf_unittest.MapProto2Unittest.TestIntIntMap>
    getMSfixed32();
    /**
     * <code>map&lt;sfixed32, .protobuf_unittest.TestIntIntMap&gt; m_sfixed32 = 9;</code>
     */
    java.util.Map<java.lang.Integer, protobuf_unittest.MapProto2Unittest.TestIntIntMap>
    getMSfixed32Map();
    /**
     * <code>map&lt;sfixed32, .protobuf_unittest.TestIntIntMap&gt; m_sfixed32 = 9;</code>
     */
    /* nullable */
protobuf_unittest.MapProto2Unittest.TestIntIntMap getMSfixed32OrDefault(
        int key,
        /* nullable */
protobuf_unittest.MapProto2Unittest.TestIntIntMap defaultValue);
    /**
     * <code>map&lt;sfixed32, .protobuf_unittest.TestIntIntMap&gt; m_sfixed32 = 9;</code>
     */
    protobuf_unittest.MapProto2Unittest.TestIntIntMap getMSfixed32OrThrow(
        int key);

    /**
     * <code>map&lt;sfixed64, .protobuf_unittest.TestIntIntMap&gt; m_sfixed64 = 10;</code>
     */
    int getMSfixed64Count();
    /**
     * <code>map&lt;sfixed64, .protobuf_unittest.TestIntIntMap&gt; m_sfixed64 = 10;</code>
     */
    boolean containsMSfixed64(
        long key);
    /**
     * Use {@link #getMSfixed64Map()} instead.
     */
    @java.lang.Deprecated
    java.util.Map<java.lang.Long, protobuf_unittest.MapProto2Unittest.TestIntIntMap>
    getMSfixed64();
    /**
     * <code>map&lt;sfixed64, .protobuf_unittest.TestIntIntMap&gt; m_sfixed64 = 10;</code>
     */
    java.util.Map<java.lang.Long, protobuf_unittest.MapProto2Unittest.TestIntIntMap>
    getMSfixed64Map();
    /**
     * <code>map&lt;sfixed64, .protobuf_unittest.TestIntIntMap&gt; m_sfixed64 = 10;</code>
     */
    /* nullable */
protobuf_unittest.MapProto2Unittest.TestIntIntMap getMSfixed64OrDefault(
        long key,
        /* nullable */
protobuf_unittest.MapProto2Unittest.TestIntIntMap defaultValue);
    /**
     * <code>map&lt;sfixed64, .protobuf_unittest.TestIntIntMap&gt; m_sfixed64 = 10;</code>
     */
    protobuf_unittest.MapProto2Unittest.TestIntIntMap getMSfixed64OrThrow(
        long key);

    /**
     * <code>map&lt;bool, .protobuf_unittest.TestIntIntMap&gt; m_bool = 11;</code>
     */
    int getMBoolCount();
    /**
     * <code>map&lt;bool, .protobuf_unittest.TestIntIntMap&gt; m_bool = 11;</code>
     */
    boolean containsMBool(
        boolean key);
    /**
     * Use {@link #getMBoolMap()} instead.
     */
    @java.lang.Deprecated
    java.util.Map<java.lang.Boolean, protobuf_unittest.MapProto2Unittest.TestIntIntMap>
    getMBool();
    /**
     * <code>map&lt;bool, .protobuf_unittest.TestIntIntMap&gt; m_bool = 11;</code>
     */
    java.util.Map<java.lang.Boolean, protobuf_unittest.MapProto2Unittest.TestIntIntMap>
    getMBoolMap();
    /**
     * <code>map&lt;bool, .protobuf_unittest.TestIntIntMap&gt; m_bool = 11;</code>
     */
    /* nullable */
protobuf_unittest.MapProto2Unittest.TestIntIntMap getMBoolOrDefault(
        boolean key,
        /* nullable */
protobuf_unittest.MapProto2Unittest.TestIntIntMap defaultValue);
    /**
     * <code>map&lt;bool, .protobuf_unittest.TestIntIntMap&gt; m_bool = 11;</code>
     */
    protobuf_unittest.MapProto2Unittest.TestIntIntMap getMBoolOrThrow(
        boolean key);

    /**
     * <code>map&lt;string, .protobuf_unittest.TestIntIntMap&gt; m_string = 12;</code>
     */
    int getMStringCount();
    /**
     * <code>map&lt;string, .protobuf_unittest.TestIntIntMap&gt; m_string = 12;</code>
     */
    boolean containsMString(
        java.lang.String key);
    /**
     * Use {@link #getMStringMap()} instead.
     */
    @java.lang.Deprecated
    java.util.Map<java.lang.String, protobuf_unittest.MapProto2Unittest.TestIntIntMap>
    getMString();
    /**
     * <code>map&lt;string, .protobuf_unittest.TestIntIntMap&gt; m_string = 12;</code>
     */
    java.util.Map<java.lang.String, protobuf_unittest.MapProto2Unittest.TestIntIntMap>
    getMStringMap();
    /**
     * <code>map&lt;string, .protobuf_unittest.TestIntIntMap&gt; m_string = 12;</code>
     */
    /* nullable */
protobuf_unittest.MapProto2Unittest.TestIntIntMap getMStringOrDefault(
        java.lang.String key,
        /* nullable */
protobuf_unittest.MapProto2Unittest.TestIntIntMap defaultValue);
    /**
     * <code>map&lt;string, .protobuf_unittest.TestIntIntMap&gt; m_string = 12;</code>
     */
    protobuf_unittest.MapProto2Unittest.TestIntIntMap getMStringOrThrow(
        java.lang.String key);
  }
  /**
   * <pre>
   * Test all key types: string, plus the non-floating-point scalars.
   * </pre>
   *
   * Protobuf type {@code protobuf_unittest.TestMaps}
   */
  public static final class TestMaps extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:protobuf_unittest.TestMaps)
      TestMapsOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use TestMaps.newBuilder() to construct.
    private TestMaps(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private TestMaps() {
    }

    @java.lang.Override
    @SuppressWarnings({"unused"})
    protected java.lang.Object newInstance(
        UnusedPrivateParameter unused) {
      return new TestMaps();
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return protobuf_unittest.MapProto2Unittest.internal_static_protobuf_unittest_TestMaps_descriptor;
    }

    @SuppressWarnings({"rawtypes"})
    @java.lang.Override
    protected com.google.protobuf.MapField internalGetMapField(
        int number) {
      switch (number) {
        case 1:
          return internalGetMInt32();
        case 2:
          return internalGetMInt64();
        case 3:
          return internalGetMUint32();
        case 4:
          return internalGetMUint64();
        case 5:
          return internalGetMSint32();
        case 6:
          return internalGetMSint64();
        case 7:
          return internalGetMFixed32();
        case 8:
          return internalGetMFixed64();
        case 9:
          return internalGetMSfixed32();
        case 10:
          return internalGetMSfixed64();
        case 11:
          return internalGetMBool();
        case 12:
          return internalGetMString();
        default:
          throw new RuntimeException(
              "Invalid map field number: " + number);
      }
    }
    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return protobuf_unittest.MapProto2Unittest.internal_static_protobuf_unittest_TestMaps_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              protobuf_unittest.MapProto2Unittest.TestMaps.class, protobuf_unittest.MapProto2Unittest.TestMaps.Builder.class);
    }

    public static final int M_INT32_FIELD_NUMBER = 1;
    private static final class MInt32DefaultEntryHolder {
      static final com.google.protobuf.MapEntry<
          java.lang.Integer, protobuf_unittest.MapProto2Unittest.TestIntIntMap> defaultEntry =
              com.google.protobuf.MapEntry
              .<java.lang.Integer, protobuf_unittest.MapProto2Unittest.TestIntIntMap>newDefaultInstance(
                  protobuf_unittest.MapProto2Unittest.internal_static_protobuf_unittest_TestMaps_MInt32Entry_descriptor, 
                  com.google.protobuf.WireFormat.FieldType.INT32,
                  0,
                  com.google.protobuf.WireFormat.FieldType.MESSAGE,
                  protobuf_unittest.MapProto2Unittest.TestIntIntMap.getDefaultInstance());
    }
    @SuppressWarnings("serial")
    private com.google.protobuf.MapField<
        java.lang.Integer, protobuf_unittest.MapProto2Unittest.TestIntIntMap> mInt32_;
    private com.google.protobuf.MapField<java.lang.Integer, protobuf_unittest.MapProto2Unittest.TestIntIntMap>
    internalGetMInt32() {
      if (mInt32_ == null) {
        return com.google.protobuf.MapField.emptyMapField(
            MInt32DefaultEntryHolder.defaultEntry);
      }
      return mInt32_;
    }
    public int getMInt32Count() {
      return internalGetMInt32().getMap().size();
    }
    /**
     * <code>map&lt;int32, .protobuf_unittest.TestIntIntMap&gt; m_int32 = 1;</code>
     */
    @java.lang.Override
    public boolean containsMInt32(
        int key) {
      
      return internalGetMInt32().getMap().containsKey(key);
    }
    /**
     * Use {@link #getMInt32Map()} instead.
     */
    @java.lang.Override
    @java.lang.Deprecated
    public java.util.Map<java.lang.Integer, protobuf_unittest.MapProto2Unittest.TestIntIntMap> getMInt32() {
      return getMInt32Map();
    }
    /**
     * <code>map&lt;int32, .protobuf_unittest.TestIntIntMap&gt; m_int32 = 1;</code>
     */
    @java.lang.Override
    public java.util.Map<java.lang.Integer, protobuf_unittest.MapProto2Unittest.TestIntIntMap> getMInt32Map() {
      return internalGetMInt32().getMap();
    }
    /**
     * <code>map&lt;int32, .protobuf_unittest.TestIntIntMap&gt; m_int32 = 1;</code>
     */
    @java.lang.Override
    public /* nullable */
protobuf_unittest.MapProto2Unittest.TestIntIntMap getMInt32OrDefault(
        int key,
        /* nullable */
protobuf_unittest.MapProto2Unittest.TestIntIntMap defaultValue) {
      
      java.util.Map<java.lang.Integer, protobuf_unittest.MapProto2Unittest.TestIntIntMap> map =
          internalGetMInt32().getMap();
      return map.containsKey(key) ? map.get(key) : defaultValue;
    }
    /**
     * <code>map&lt;int32, .protobuf_unittest.TestIntIntMap&gt; m_int32 = 1;</code>
     */
    @java.lang.Override
    public protobuf_unittest.MapProto2Unittest.TestIntIntMap getMInt32OrThrow(
        int key) {
      
      java.util.Map<java.lang.Integer, protobuf_unittest.MapProto2Unittest.TestIntIntMap> map =
          internalGetMInt32().getMap();
      if (!map.containsKey(key)) {
        throw new java.lang.IllegalArgumentException();
      }
      return map.get(key);
    }

    public static final int M_INT64_FIELD_NUMBER = 2;
    private static final class MInt64DefaultEntryHolder {
      static final com.google.protobuf.MapEntry<
          java.lang.Long, protobuf_unittest.MapProto2Unittest.TestIntIntMap> defaultEntry =
              com.google.protobuf.MapEntry
              .<java.lang.Long, protobuf_unittest.MapProto2Unittest.TestIntIntMap>newDefaultInstance(
                  protobuf_unittest.MapProto2Unittest.internal_static_protobuf_unittest_TestMaps_MInt64Entry_descriptor, 
                  com.google.protobuf.WireFormat.FieldType.INT64,
                  0L,
                  com.google.protobuf.WireFormat.FieldType.MESSAGE,
                  protobuf_unittest.MapProto2Unittest.TestIntIntMap.getDefaultInstance());
    }
    @SuppressWarnings("serial")
    private com.google.protobuf.MapField<
        java.lang.Long, protobuf_unittest.MapProto2Unittest.TestIntIntMap> mInt64_;
    private com.google.protobuf.MapField<java.lang.Long, protobuf_unittest.MapProto2Unittest.TestIntIntMap>
    internalGetMInt64() {
      if (mInt64_ == null) {
        return com.google.protobuf.MapField.emptyMapField(
            MInt64DefaultEntryHolder.defaultEntry);
      }
      return mInt64_;
    }
    public int getMInt64Count() {
      return internalGetMInt64().getMap().size();
    }
    /**
     * <code>map&lt;int64, .protobuf_unittest.TestIntIntMap&gt; m_int64 = 2;</code>
     */
    @java.lang.Override
    public boolean containsMInt64(
        long key) {
      
      return internalGetMInt64().getMap().containsKey(key);
    }
    /**
     * Use {@link #getMInt64Map()} instead.
     */
    @java.lang.Override
    @java.lang.Deprecated
    public java.util.Map<java.lang.Long, protobuf_unittest.MapProto2Unittest.TestIntIntMap> getMInt64() {
      return getMInt64Map();
    }
    /**
     * <code>map&lt;int64, .protobuf_unittest.TestIntIntMap&gt; m_int64 = 2;</code>
     */
    @java.lang.Override
    public java.util.Map<java.lang.Long, protobuf_unittest.MapProto2Unittest.TestIntIntMap> getMInt64Map() {
      return internalGetMInt64().getMap();
    }
    /**
     * <code>map&lt;int64, .protobuf_unittest.TestIntIntMap&gt; m_int64 = 2;</code>
     */
    @java.lang.Override
    public /* nullable */
protobuf_unittest.MapProto2Unittest.TestIntIntMap getMInt64OrDefault(
        long key,
        /* nullable */
protobuf_unittest.MapProto2Unittest.TestIntIntMap defaultValue) {
      
      java.util.Map<java.lang.Long, protobuf_unittest.MapProto2Unittest.TestIntIntMap> map =
          internalGetMInt64().getMap();
      return map.containsKey(key) ? map.get(key) : defaultValue;
    }
    /**
     * <code>map&lt;int64, .protobuf_unittest.TestIntIntMap&gt; m_int64 = 2;</code>
     */
    @java.lang.Override
    public protobuf_unittest.MapProto2Unittest.TestIntIntMap getMInt64OrThrow(
        long key) {
      
      java.util.Map<java.lang.Long, protobuf_unittest.MapProto2Unittest.TestIntIntMap> map =
          internalGetMInt64().getMap();
      if (!map.containsKey(key)) {
        throw new java.lang.IllegalArgumentException();
      }
      return map.get(key);
    }

    public static final int M_UINT32_FIELD_NUMBER = 3;
    private static final class MUint32DefaultEntryHolder {
      static final com.google.protobuf.MapEntry<
          java.lang.Integer, protobuf_unittest.MapProto2Unittest.TestIntIntMap> defaultEntry =
              com.google.protobuf.MapEntry
              .<java.lang.Integer, protobuf_unittest.MapProto2Unittest.TestIntIntMap>newDefaultInstance(
                  protobuf_unittest.MapProto2Unittest.internal_static_protobuf_unittest_TestMaps_MUint32Entry_descriptor, 
                  com.google.protobuf.WireFormat.FieldType.UINT32,
                  0,
                  com.google.protobuf.WireFormat.FieldType.MESSAGE,
                  protobuf_unittest.MapProto2Unittest.TestIntIntMap.getDefaultInstance());
    }
    @SuppressWarnings("serial")
    private com.google.protobuf.MapField<
        java.lang.Integer, protobuf_unittest.MapProto2Unittest.TestIntIntMap> mUint32_;
    private com.google.protobuf.MapField<java.lang.Integer, protobuf_unittest.MapProto2Unittest.TestIntIntMap>
    internalGetMUint32() {
      if (mUint32_ == null) {
        return com.google.protobuf.MapField.emptyMapField(
            MUint32DefaultEntryHolder.defaultEntry);
      }
      return mUint32_;
    }
    public int getMUint32Count() {
      return internalGetMUint32().getMap().size();
    }
    /**
     * <code>map&lt;uint32, .protobuf_unittest.TestIntIntMap&gt; m_uint32 = 3;</code>
     */
    @java.lang.Override
    public boolean containsMUint32(
        int key) {
      
      return internalGetMUint32().getMap().containsKey(key);
    }
    /**
     * Use {@link #getMUint32Map()} instead.
     */
    @java.lang.Override
    @java.lang.Deprecated
    public java.util.Map<java.lang.Integer, protobuf_unittest.MapProto2Unittest.TestIntIntMap> getMUint32() {
      return getMUint32Map();
    }
    /**
     * <code>map&lt;uint32, .protobuf_unittest.TestIntIntMap&gt; m_uint32 = 3;</code>
     */
    @java.lang.Override
    public java.util.Map<java.lang.Integer, protobuf_unittest.MapProto2Unittest.TestIntIntMap> getMUint32Map() {
      return internalGetMUint32().getMap();
    }
    /**
     * <code>map&lt;uint32, .protobuf_unittest.TestIntIntMap&gt; m_uint32 = 3;</code>
     */
    @java.lang.Override
    public /* nullable */
protobuf_unittest.MapProto2Unittest.TestIntIntMap getMUint32OrDefault(
        int key,
        /* nullable */
protobuf_unittest.MapProto2Unittest.TestIntIntMap defaultValue) {
      
      java.util.Map<java.lang.Integer, protobuf_unittest.MapProto2Unittest.TestIntIntMap> map =
          internalGetMUint32().getMap();
      return map.containsKey(key) ? map.get(key) : defaultValue;
    }
    /**
     * <code>map&lt;uint32, .protobuf_unittest.TestIntIntMap&gt; m_uint32 = 3;</code>
     */
    @java.lang.Override
    public protobuf_unittest.MapProto2Unittest.TestIntIntMap getMUint32OrThrow(
        int key) {
      
      java.util.Map<java.lang.Integer, protobuf_unittest.MapProto2Unittest.TestIntIntMap> map =
          internalGetMUint32().getMap();
      if (!map.containsKey(key)) {
        throw new java.lang.IllegalArgumentException();
      }
      return map.get(key);
    }

    public static final int M_UINT64_FIELD_NUMBER = 4;
    private static final class MUint64DefaultEntryHolder {
      static final com.google.protobuf.MapEntry<
          java.lang.Long, protobuf_unittest.MapProto2Unittest.TestIntIntMap> defaultEntry =
              com.google.protobuf.MapEntry
              .<java.lang.Long, protobuf_unittest.MapProto2Unittest.TestIntIntMap>newDefaultInstance(
                  protobuf_unittest.MapProto2Unittest.internal_static_protobuf_unittest_TestMaps_MUint64Entry_descriptor, 
                  com.google.protobuf.WireFormat.FieldType.UINT64,
                  0L,
                  com.google.protobuf.WireFormat.FieldType.MESSAGE,
                  protobuf_unittest.MapProto2Unittest.TestIntIntMap.getDefaultInstance());
    }
    @SuppressWarnings("serial")
    private com.google.protobuf.MapField<
        java.lang.Long, protobuf_unittest.MapProto2Unittest.TestIntIntMap> mUint64_;
    private com.google.protobuf.MapField<java.lang.Long, protobuf_unittest.MapProto2Unittest.TestIntIntMap>
    internalGetMUint64() {
      if (mUint64_ == null) {
        return com.google.protobuf.MapField.emptyMapField(
            MUint64DefaultEntryHolder.defaultEntry);
      }
      return mUint64_;
    }
    public int getMUint64Count() {
      return internalGetMUint64().getMap().size();
    }
    /**
     * <code>map&lt;uint64, .protobuf_unittest.TestIntIntMap&gt; m_uint64 = 4;</code>
     */
    @java.lang.Override
    public boolean containsMUint64(
        long key) {
      
      return internalGetMUint64().getMap().containsKey(key);
    }
    /**
     * Use {@link #getMUint64Map()} instead.
     */
    @java.lang.Override
    @java.lang.Deprecated
    public java.util.Map<java.lang.Long, protobuf_unittest.MapProto2Unittest.TestIntIntMap> getMUint64() {
      return getMUint64Map();
    }
    /**
     * <code>map&lt;uint64, .protobuf_unittest.TestIntIntMap&gt; m_uint64 = 4;</code>
     */
    @java.lang.Override
    public java.util.Map<java.lang.Long, protobuf_unittest.MapProto2Unittest.TestIntIntMap> getMUint64Map() {
      return internalGetMUint64().getMap();
    }
    /**
     * <code>map&lt;uint64, .protobuf_unittest.TestIntIntMap&gt; m_uint64 = 4;</code>
     */
    @java.lang.Override
    public /* nullable */
protobuf_unittest.MapProto2Unittest.TestIntIntMap getMUint64OrDefault(
        long key,
        /* nullable */
protobuf_unittest.MapProto2Unittest.TestIntIntMap defaultValue) {
      
      java.util.Map<java.lang.Long, protobuf_unittest.MapProto2Unittest.TestIntIntMap> map =
          internalGetMUint64().getMap();
      return map.containsKey(key) ? map.get(key) : defaultValue;
    }
    /**
     * <code>map&lt;uint64, .protobuf_unittest.TestIntIntMap&gt; m_uint64 = 4;</code>
     */
    @java.lang.Override
    public protobuf_unittest.MapProto2Unittest.TestIntIntMap getMUint64OrThrow(
        long key) {
      
      java.util.Map<java.lang.Long, protobuf_unittest.MapProto2Unittest.TestIntIntMap> map =
          internalGetMUint64().getMap();
      if (!map.containsKey(key)) {
        throw new java.lang.IllegalArgumentException();
      }
      return map.get(key);
    }

    public static final int M_SINT32_FIELD_NUMBER = 5;
    private static final class MSint32DefaultEntryHolder {
      static final com.google.protobuf.MapEntry<
          java.lang.Integer, protobuf_unittest.MapProto2Unittest.TestIntIntMap> defaultEntry =
              com.google.protobuf.MapEntry
              .<java.lang.Integer, protobuf_unittest.MapProto2Unittest.TestIntIntMap>newDefaultInstance(
                  protobuf_unittest.MapProto2Unittest.internal_static_protobuf_unittest_TestMaps_MSint32Entry_descriptor, 
                  com.google.protobuf.WireFormat.FieldType.SINT32,
                  0,
                  com.google.protobuf.WireFormat.FieldType.MESSAGE,
                  protobuf_unittest.MapProto2Unittest.TestIntIntMap.getDefaultInstance());
    }
    @SuppressWarnings("serial")
    private com.google.protobuf.MapField<
        java.lang.Integer, protobuf_unittest.MapProto2Unittest.TestIntIntMap> mSint32_;
    private com.google.protobuf.MapField<java.lang.Integer, protobuf_unittest.MapProto2Unittest.TestIntIntMap>
    internalGetMSint32() {
      if (mSint32_ == null) {
        return com.google.protobuf.MapField.emptyMapField(
            MSint32DefaultEntryHolder.defaultEntry);
      }
      return mSint32_;
    }
    public int getMSint32Count() {
      return internalGetMSint32().getMap().size();
    }
    /**
     * <code>map&lt;sint32, .protobuf_unittest.TestIntIntMap&gt; m_sint32 = 5;</code>
     */
    @java.lang.Override
    public boolean containsMSint32(
        int key) {
      
      return internalGetMSint32().getMap().containsKey(key);
    }
    /**
     * Use {@link #getMSint32Map()} instead.
     */
    @java.lang.Override
    @java.lang.Deprecated
    public java.util.Map<java.lang.Integer, protobuf_unittest.MapProto2Unittest.TestIntIntMap> getMSint32() {
      return getMSint32Map();
    }
    /**
     * <code>map&lt;sint32, .protobuf_unittest.TestIntIntMap&gt; m_sint32 = 5;</code>
     */
    @java.lang.Override
    public java.util.Map<java.lang.Integer, protobuf_unittest.MapProto2Unittest.TestIntIntMap> getMSint32Map() {
      return internalGetMSint32().getMap();
    }
    /**
     * <code>map&lt;sint32, .protobuf_unittest.TestIntIntMap&gt; m_sint32 = 5;</code>
     */
    @java.lang.Override
    public /* nullable */
protobuf_unittest.MapProto2Unittest.TestIntIntMap getMSint32OrDefault(
        int key,
        /* nullable */
protobuf_unittest.MapProto2Unittest.TestIntIntMap defaultValue) {
      
      java.util.Map<java.lang.Integer, protobuf_unittest.MapProto2Unittest.TestIntIntMap> map =
          internalGetMSint32().getMap();
      return map.containsKey(key) ? map.get(key) : defaultValue;
    }
    /**
     * <code>map&lt;sint32, .protobuf_unittest.TestIntIntMap&gt; m_sint32 = 5;</code>
     */
    @java.lang.Override
    public protobuf_unittest.MapProto2Unittest.TestIntIntMap getMSint32OrThrow(
        int key) {
      
      java.util.Map<java.lang.Integer, protobuf_unittest.MapProto2Unittest.TestIntIntMap> map =
          internalGetMSint32().getMap();
      if (!map.containsKey(key)) {
        throw new java.lang.IllegalArgumentException();
      }
      return map.get(key);
    }

    public static final int M_SINT64_FIELD_NUMBER = 6;
    private static final class MSint64DefaultEntryHolder {
      static final com.google.protobuf.MapEntry<
          java.lang.Long, protobuf_unittest.MapProto2Unittest.TestIntIntMap> defaultEntry =
              com.google.protobuf.MapEntry
              .<java.lang.Long, protobuf_unittest.MapProto2Unittest.TestIntIntMap>newDefaultInstance(
                  protobuf_unittest.MapProto2Unittest.internal_static_protobuf_unittest_TestMaps_MSint64Entry_descriptor, 
                  com.google.protobuf.WireFormat.FieldType.SINT64,
                  0L,
                  com.google.protobuf.WireFormat.FieldType.MESSAGE,
                  protobuf_unittest.MapProto2Unittest.TestIntIntMap.getDefaultInstance());
    }
    @SuppressWarnings("serial")
    private com.google.protobuf.MapField<
        java.lang.Long, protobuf_unittest.MapProto2Unittest.TestIntIntMap> mSint64_;
    private com.google.protobuf.MapField<java.lang.Long, protobuf_unittest.MapProto2Unittest.TestIntIntMap>
    internalGetMSint64() {
      if (mSint64_ == null) {
        return com.google.protobuf.MapField.emptyMapField(
            MSint64DefaultEntryHolder.defaultEntry);
      }
      return mSint64_;
    }
    public int getMSint64Count() {
      return internalGetMSint64().getMap().size();
    }
    /**
     * <code>map&lt;sint64, .protobuf_unittest.TestIntIntMap&gt; m_sint64 = 6;</code>
     */
    @java.lang.Override
    public boolean containsMSint64(
        long key) {
      
      return internalGetMSint64().getMap().containsKey(key);
    }
    /**
     * Use {@link #getMSint64Map()} instead.
     */
    @java.lang.Override
    @java.lang.Deprecated
    public java.util.Map<java.lang.Long, protobuf_unittest.MapProto2Unittest.TestIntIntMap> getMSint64() {
      return getMSint64Map();
    }
    /**
     * <code>map&lt;sint64, .protobuf_unittest.TestIntIntMap&gt; m_sint64 = 6;</code>
     */
    @java.lang.Override
    public java.util.Map<java.lang.Long, protobuf_unittest.MapProto2Unittest.TestIntIntMap> getMSint64Map() {
      return internalGetMSint64().getMap();
    }
    /**
     * <code>map&lt;sint64, .protobuf_unittest.TestIntIntMap&gt; m_sint64 = 6;</code>
     */
    @java.lang.Override
    public /* nullable */
protobuf_unittest.MapProto2Unittest.TestIntIntMap getMSint64OrDefault(
        long key,
        /* nullable */
protobuf_unittest.MapProto2Unittest.TestIntIntMap defaultValue) {
      
      java.util.Map<java.lang.Long, protobuf_unittest.MapProto2Unittest.TestIntIntMap> map =
          internalGetMSint64().getMap();
      return map.containsKey(key) ? map.get(key) : defaultValue;
    }
    /**
     * <code>map&lt;sint64, .protobuf_unittest.TestIntIntMap&gt; m_sint64 = 6;</code>
     */
    @java.lang.Override
    public protobuf_unittest.MapProto2Unittest.TestIntIntMap getMSint64OrThrow(
        long key) {
      
      java.util.Map<java.lang.Long, protobuf_unittest.MapProto2Unittest.TestIntIntMap> map =
          internalGetMSint64().getMap();
      if (!map.containsKey(key)) {
        throw new java.lang.IllegalArgumentException();
      }
      return map.get(key);
    }

    public static final int M_FIXED32_FIELD_NUMBER = 7;
    private static final class MFixed32DefaultEntryHolder {
      static final com.google.protobuf.MapEntry<
          java.lang.Integer, protobuf_unittest.MapProto2Unittest.TestIntIntMap> defaultEntry =
              com.google.protobuf.MapEntry
              .<java.lang.Integer, protobuf_unittest.MapProto2Unittest.TestIntIntMap>newDefaultInstance(
                  protobuf_unittest.MapProto2Unittest.internal_static_protobuf_unittest_TestMaps_MFixed32Entry_descriptor, 
                  com.google.protobuf.WireFormat.FieldType.FIXED32,
                  0,
                  com.google.protobuf.WireFormat.FieldType.MESSAGE,
                  protobuf_unittest.MapProto2Unittest.TestIntIntMap.getDefaultInstance());
    }
    @SuppressWarnings("serial")
    private com.google.protobuf.MapField<
        java.lang.Integer, protobuf_unittest.MapProto2Unittest.TestIntIntMap> mFixed32_;
    private com.google.protobuf.MapField<java.lang.Integer, protobuf_unittest.MapProto2Unittest.TestIntIntMap>
    internalGetMFixed32() {
      if (mFixed32_ == null) {
        return com.google.protobuf.MapField.emptyMapField(
            MFixed32DefaultEntryHolder.defaultEntry);
      }
      return mFixed32_;
    }
    public int getMFixed32Count() {
      return internalGetMFixed32().getMap().size();
    }
    /**
     * <code>map&lt;fixed32, .protobuf_unittest.TestIntIntMap&gt; m_fixed32 = 7;</code>
     */
    @java.lang.Override
    public boolean containsMFixed32(
        int key) {
      
      return internalGetMFixed32().getMap().containsKey(key);
    }
    /**
     * Use {@link #getMFixed32Map()} instead.
     */
    @java.lang.Override
    @java.lang.Deprecated
    public java.util.Map<java.lang.Integer, protobuf_unittest.MapProto2Unittest.TestIntIntMap> getMFixed32() {
      return getMFixed32Map();
    }
    /**
     * <code>map&lt;fixed32, .protobuf_unittest.TestIntIntMap&gt; m_fixed32 = 7;</code>
     */
    @java.lang.Override
    public java.util.Map<java.lang.Integer, protobuf_unittest.MapProto2Unittest.TestIntIntMap> getMFixed32Map() {
      return internalGetMFixed32().getMap();
    }
    /**
     * <code>map&lt;fixed32, .protobuf_unittest.TestIntIntMap&gt; m_fixed32 = 7;</code>
     */
    @java.lang.Override
    public /* nullable */
protobuf_unittest.MapProto2Unittest.TestIntIntMap getMFixed32OrDefault(
        int key,
        /* nullable */
protobuf_unittest.MapProto2Unittest.TestIntIntMap defaultValue) {
      
      java.util.Map<java.lang.Integer, protobuf_unittest.MapProto2Unittest.TestIntIntMap> map =
          internalGetMFixed32().getMap();
      return map.containsKey(key) ? map.get(key) : defaultValue;
    }
    /**
     * <code>map&lt;fixed32, .protobuf_unittest.TestIntIntMap&gt; m_fixed32 = 7;</code>
     */
    @java.lang.Override
    public protobuf_unittest.MapProto2Unittest.TestIntIntMap getMFixed32OrThrow(
        int key) {
      
      java.util.Map<java.lang.Integer, protobuf_unittest.MapProto2Unittest.TestIntIntMap> map =
          internalGetMFixed32().getMap();
      if (!map.containsKey(key)) {
        throw new java.lang.IllegalArgumentException();
      }
      return map.get(key);
    }

    public static final int M_FIXED64_FIELD_NUMBER = 8;
    private static final class MFixed64DefaultEntryHolder {
      static final com.google.protobuf.MapEntry<
          java.lang.Long, protobuf_unittest.MapProto2Unittest.TestIntIntMap> defaultEntry =
              com.google.protobuf.MapEntry
              .<java.lang.Long, protobuf_unittest.MapProto2Unittest.TestIntIntMap>newDefaultInstance(
                  protobuf_unittest.MapProto2Unittest.internal_static_protobuf_unittest_TestMaps_MFixed64Entry_descriptor, 
                  com.google.protobuf.WireFormat.FieldType.FIXED64,
                  0L,
                  com.google.protobuf.WireFormat.FieldType.MESSAGE,
                  protobuf_unittest.MapProto2Unittest.TestIntIntMap.getDefaultInstance());
    }
    @SuppressWarnings("serial")
    private com.google.protobuf.MapField<
        java.lang.Long, protobuf_unittest.MapProto2Unittest.TestIntIntMap> mFixed64_;
    private com.google.protobuf.MapField<java.lang.Long, protobuf_unittest.MapProto2Unittest.TestIntIntMap>
    internalGetMFixed64() {
      if (mFixed64_ == null) {
        return com.google.protobuf.MapField.emptyMapField(
            MFixed64DefaultEntryHolder.defaultEntry);
      }
      return mFixed64_;
    }
    public int getMFixed64Count() {
      return internalGetMFixed64().getMap().size();
    }
    /**
     * <code>map&lt;fixed64, .protobuf_unittest.TestIntIntMap&gt; m_fixed64 = 8;</code>
     */
    @java.lang.Override
    public boolean containsMFixed64(
        long key) {
      
      return internalGetMFixed64().getMap().containsKey(key);
    }
    /**
     * Use {@link #getMFixed64Map()} instead.
     */
    @java.lang.Override
    @java.lang.Deprecated
    public java.util.Map<java.lang.Long, protobuf_unittest.MapProto2Unittest.TestIntIntMap> getMFixed64() {
      return getMFixed64Map();
    }
    /**
     * <code>map&lt;fixed64, .protobuf_unittest.TestIntIntMap&gt; m_fixed64 = 8;</code>
     */
    @java.lang.Override
    public java.util.Map<java.lang.Long, protobuf_unittest.MapProto2Unittest.TestIntIntMap> getMFixed64Map() {
      return internalGetMFixed64().getMap();
    }
    /**
     * <code>map&lt;fixed64, .protobuf_unittest.TestIntIntMap&gt; m_fixed64 = 8;</code>
     */
    @java.lang.Override
    public /* nullable */
protobuf_unittest.MapProto2Unittest.TestIntIntMap getMFixed64OrDefault(
        long key,
        /* nullable */
protobuf_unittest.MapProto2Unittest.TestIntIntMap defaultValue) {
      
      java.util.Map<java.lang.Long, protobuf_unittest.MapProto2Unittest.TestIntIntMap> map =
          internalGetMFixed64().getMap();
      return map.containsKey(key) ? map.get(key) : defaultValue;
    }
    /**
     * <code>map&lt;fixed64, .protobuf_unittest.TestIntIntMap&gt; m_fixed64 = 8;</code>
     */
    @java.lang.Override
    public protobuf_unittest.MapProto2Unittest.TestIntIntMap getMFixed64OrThrow(
        long key) {
      
      java.util.Map<java.lang.Long, protobuf_unittest.MapProto2Unittest.TestIntIntMap> map =
          internalGetMFixed64().getMap();
      if (!map.containsKey(key)) {
        throw new java.lang.IllegalArgumentException();
      }
      return map.get(key);
    }

    public static final int M_SFIXED32_FIELD_NUMBER = 9;
    private static final class MSfixed32DefaultEntryHolder {
      static final com.google.protobuf.MapEntry<
          java.lang.Integer, protobuf_unittest.MapProto2Unittest.TestIntIntMap> defaultEntry =
              com.google.protobuf.MapEntry
              .<java.lang.Integer, protobuf_unittest.MapProto2Unittest.TestIntIntMap>newDefaultInstance(
                  protobuf_unittest.MapProto2Unittest.internal_static_protobuf_unittest_TestMaps_MSfixed32Entry_descriptor, 
                  com.google.protobuf.WireFormat.FieldType.SFIXED32,
                  0,
                  com.google.protobuf.WireFormat.FieldType.MESSAGE,
                  protobuf_unittest.MapProto2Unittest.TestIntIntMap.getDefaultInstance());
    }
    @SuppressWarnings("serial")
    private com.google.protobuf.MapField<
        java.lang.Integer, protobuf_unittest.MapProto2Unittest.TestIntIntMap> mSfixed32_;
    private com.google.protobuf.MapField<java.lang.Integer, protobuf_unittest.MapProto2Unittest.TestIntIntMap>
    internalGetMSfixed32() {
      if (mSfixed32_ == null) {
        return com.google.protobuf.MapField.emptyMapField(
            MSfixed32DefaultEntryHolder.defaultEntry);
      }
      return mSfixed32_;
    }
    public int getMSfixed32Count() {
      return internalGetMSfixed32().getMap().size();
    }
    /**
     * <code>map&lt;sfixed32, .protobuf_unittest.TestIntIntMap&gt; m_sfixed32 = 9;</code>
     */
    @java.lang.Override
    public boolean containsMSfixed32(
        int key) {
      
      return internalGetMSfixed32().getMap().containsKey(key);
    }
    /**
     * Use {@link #getMSfixed32Map()} instead.
     */
    @java.lang.Override
    @java.lang.Deprecated
    public java.util.Map<java.lang.Integer, protobuf_unittest.MapProto2Unittest.TestIntIntMap> getMSfixed32() {
      return getMSfixed32Map();
    }
    /**
     * <code>map&lt;sfixed32, .protobuf_unittest.TestIntIntMap&gt; m_sfixed32 = 9;</code>
     */
    @java.lang.Override
    public java.util.Map<java.lang.Integer, protobuf_unittest.MapProto2Unittest.TestIntIntMap> getMSfixed32Map() {
      return internalGetMSfixed32().getMap();
    }
    /**
     * <code>map&lt;sfixed32, .protobuf_unittest.TestIntIntMap&gt; m_sfixed32 = 9;</code>
     */
    @java.lang.Override
    public /* nullable */
protobuf_unittest.MapProto2Unittest.TestIntIntMap getMSfixed32OrDefault(
        int key,
        /* nullable */
protobuf_unittest.MapProto2Unittest.TestIntIntMap defaultValue) {
      
      java.util.Map<java.lang.Integer, protobuf_unittest.MapProto2Unittest.TestIntIntMap> map =
          internalGetMSfixed32().getMap();
      return map.containsKey(key) ? map.get(key) : defaultValue;
    }
    /**
     * <code>map&lt;sfixed32, .protobuf_unittest.TestIntIntMap&gt; m_sfixed32 = 9;</code>
     */
    @java.lang.Override
    public protobuf_unittest.MapProto2Unittest.TestIntIntMap getMSfixed32OrThrow(
        int key) {
      
      java.util.Map<java.lang.Integer, protobuf_unittest.MapProto2Unittest.TestIntIntMap> map =
          internalGetMSfixed32().getMap();
      if (!map.containsKey(key)) {
        throw new java.lang.IllegalArgumentException();
      }
      return map.get(key);
    }

    public static final int M_SFIXED64_FIELD_NUMBER = 10;
    private static final class MSfixed64DefaultEntryHolder {
      static final com.google.protobuf.MapEntry<
          java.lang.Long, protobuf_unittest.MapProto2Unittest.TestIntIntMap> defaultEntry =
              com.google.protobuf.MapEntry
              .<java.lang.Long, protobuf_unittest.MapProto2Unittest.TestIntIntMap>newDefaultInstance(
                  protobuf_unittest.MapProto2Unittest.internal_static_protobuf_unittest_TestMaps_MSfixed64Entry_descriptor, 
                  com.google.protobuf.WireFormat.FieldType.SFIXED64,
                  0L,
                  com.google.protobuf.WireFormat.FieldType.MESSAGE,
                  protobuf_unittest.MapProto2Unittest.TestIntIntMap.getDefaultInstance());
    }
    @SuppressWarnings("serial")
    private com.google.protobuf.MapField<
        java.lang.Long, protobuf_unittest.MapProto2Unittest.TestIntIntMap> mSfixed64_;
    private com.google.protobuf.MapField<java.lang.Long, protobuf_unittest.MapProto2Unittest.TestIntIntMap>
    internalGetMSfixed64() {
      if (mSfixed64_ == null) {
        return com.google.protobuf.MapField.emptyMapField(
            MSfixed64DefaultEntryHolder.defaultEntry);
      }
      return mSfixed64_;
    }
    public int getMSfixed64Count() {
      return internalGetMSfixed64().getMap().size();
    }
    /**
     * <code>map&lt;sfixed64, .protobuf_unittest.TestIntIntMap&gt; m_sfixed64 = 10;</code>
     */
    @java.lang.Override
    public boolean containsMSfixed64(
        long key) {
      
      return internalGetMSfixed64().getMap().containsKey(key);
    }
    /**
     * Use {@link #getMSfixed64Map()} instead.
     */
    @java.lang.Override
    @java.lang.Deprecated
    public java.util.Map<java.lang.Long, protobuf_unittest.MapProto2Unittest.TestIntIntMap> getMSfixed64() {
      return getMSfixed64Map();
    }
    /**
     * <code>map&lt;sfixed64, .protobuf_unittest.TestIntIntMap&gt; m_sfixed64 = 10;</code>
     */
    @java.lang.Override
    public java.util.Map<java.lang.Long, protobuf_unittest.MapProto2Unittest.TestIntIntMap> getMSfixed64Map() {
      return internalGetMSfixed64().getMap();
    }
    /**
     * <code>map&lt;sfixed64, .protobuf_unittest.TestIntIntMap&gt; m_sfixed64 = 10;</code>
     */
    @java.lang.Override
    public /* nullable */
protobuf_unittest.MapProto2Unittest.TestIntIntMap getMSfixed64OrDefault(
        long key,
        /* nullable */
protobuf_unittest.MapProto2Unittest.TestIntIntMap defaultValue) {
      
      java.util.Map<java.lang.Long, protobuf_unittest.MapProto2Unittest.TestIntIntMap> map =
          internalGetMSfixed64().getMap();
      return map.containsKey(key) ? map.get(key) : defaultValue;
    }
    /**
     * <code>map&lt;sfixed64, .protobuf_unittest.TestIntIntMap&gt; m_sfixed64 = 10;</code>
     */
    @java.lang.Override
    public protobuf_unittest.MapProto2Unittest.TestIntIntMap getMSfixed64OrThrow(
        long key) {
      
      java.util.Map<java.lang.Long, protobuf_unittest.MapProto2Unittest.TestIntIntMap> map =
          internalGetMSfixed64().getMap();
      if (!map.containsKey(key)) {
        throw new java.lang.IllegalArgumentException();
      }
      return map.get(key);
    }

    public static final int M_BOOL_FIELD_NUMBER = 11;
    private static final class MBoolDefaultEntryHolder {
      static final com.google.protobuf.MapEntry<
          java.lang.Boolean, protobuf_unittest.MapProto2Unittest.TestIntIntMap> defaultEntry =
              com.google.protobuf.MapEntry
              .<java.lang.Boolean, protobuf_unittest.MapProto2Unittest.TestIntIntMap>newDefaultInstance(
                  protobuf_unittest.MapProto2Unittest.internal_static_protobuf_unittest_TestMaps_MBoolEntry_descriptor, 
                  com.google.protobuf.WireFormat.FieldType.BOOL,
                  false,
                  com.google.protobuf.WireFormat.FieldType.MESSAGE,
                  protobuf_unittest.MapProto2Unittest.TestIntIntMap.getDefaultInstance());
    }
    @SuppressWarnings("serial")
    private com.google.protobuf.MapField<
        java.lang.Boolean, protobuf_unittest.MapProto2Unittest.TestIntIntMap> mBool_;
    private com.google.protobuf.MapField<java.lang.Boolean, protobuf_unittest.MapProto2Unittest.TestIntIntMap>
    internalGetMBool() {
      if (mBool_ == null) {
        return com.google.protobuf.MapField.emptyMapField(
            MBoolDefaultEntryHolder.defaultEntry);
      }
      return mBool_;
    }
    public int getMBoolCount() {
      return internalGetMBool().getMap().size();
    }
    /**
     * <code>map&lt;bool, .protobuf_unittest.TestIntIntMap&gt; m_bool = 11;</code>
     */
    @java.lang.Override
    public boolean containsMBool(
        boolean key) {
      
      return internalGetMBool().getMap().containsKey(key);
    }
    /**
     * Use {@link #getMBoolMap()} instead.
     */
    @java.lang.Override
    @java.lang.Deprecated
    public java.util.Map<java.lang.Boolean, protobuf_unittest.MapProto2Unittest.TestIntIntMap> getMBool() {
      return getMBoolMap();
    }
    /**
     * <code>map&lt;bool, .protobuf_unittest.TestIntIntMap&gt; m_bool = 11;</code>
     */
    @java.lang.Override
    public java.util.Map<java.lang.Boolean, protobuf_unittest.MapProto2Unittest.TestIntIntMap> getMBoolMap() {
      return internalGetMBool().getMap();
    }
    /**
     * <code>map&lt;bool, .protobuf_unittest.TestIntIntMap&gt; m_bool = 11;</code>
     */
    @java.lang.Override
    public /* nullable */
protobuf_unittest.MapProto2Unittest.TestIntIntMap getMBoolOrDefault(
        boolean key,
        /* nullable */
protobuf_unittest.MapProto2Unittest.TestIntIntMap defaultValue) {
      
      java.util.Map<java.lang.Boolean, protobuf_unittest.MapProto2Unittest.TestIntIntMap> map =
          internalGetMBool().getMap();
      return map.containsKey(key) ? map.get(key) : defaultValue;
    }
    /**
     * <code>map&lt;bool, .protobuf_unittest.TestIntIntMap&gt; m_bool = 11;</code>
     */
    @java.lang.Override
    public protobuf_unittest.MapProto2Unittest.TestIntIntMap getMBoolOrThrow(
        boolean key) {
      
      java.util.Map<java.lang.Boolean, protobuf_unittest.MapProto2Unittest.TestIntIntMap> map =
          internalGetMBool().getMap();
      if (!map.containsKey(key)) {
        throw new java.lang.IllegalArgumentException();
      }
      return map.get(key);
    }

    public static final int M_STRING_FIELD_NUMBER = 12;
    private static final class MStringDefaultEntryHolder {
      static final com.google.protobuf.MapEntry<
          java.lang.String, protobuf_unittest.MapProto2Unittest.TestIntIntMap> defaultEntry =
              com.google.protobuf.MapEntry
              .<java.lang.String, protobuf_unittest.MapProto2Unittest.TestIntIntMap>newDefaultInstance(
                  protobuf_unittest.MapProto2Unittest.internal_static_protobuf_unittest_TestMaps_MStringEntry_descriptor, 
                  com.google.protobuf.WireFormat.FieldType.STRING,
                  "",
                  com.google.protobuf.WireFormat.FieldType.MESSAGE,
                  protobuf_unittest.MapProto2Unittest.TestIntIntMap.getDefaultInstance());
    }
    @SuppressWarnings("serial")
    private com.google.protobuf.MapField<
        java.lang.String, protobuf_unittest.MapProto2Unittest.TestIntIntMap> mString_;
    private com.google.protobuf.MapField<java.lang.String, protobuf_unittest.MapProto2Unittest.TestIntIntMap>
    internalGetMString() {
      if (mString_ == null) {
        return com.google.protobuf.MapField.emptyMapField(
            MStringDefaultEntryHolder.defaultEntry);
      }
      return mString_;
    }
    public int getMStringCount() {
      return internalGetMString().getMap().size();
    }
    /**
     * <code>map&lt;string, .protobuf_unittest.TestIntIntMap&gt; m_string = 12;</code>
     */
    @java.lang.Override
    public boolean containsMString(
        java.lang.String key) {
      if (key == null) { throw new NullPointerException("map key"); }
      return internalGetMString().getMap().containsKey(key);
    }
    /**
     * Use {@link #getMStringMap()} instead.
     */
    @java.lang.Override
    @java.lang.Deprecated
    public java.util.Map<java.lang.String, protobuf_unittest.MapProto2Unittest.TestIntIntMap> getMString() {
      return getMStringMap();
    }
    /**
     * <code>map&lt;string, .protobuf_unittest.TestIntIntMap&gt; m_string = 12;</code>
     */
    @java.lang.Override
    public java.util.Map<java.lang.String, protobuf_unittest.MapProto2Unittest.TestIntIntMap> getMStringMap() {
      return internalGetMString().getMap();
    }
    /**
     * <code>map&lt;string, .protobuf_unittest.TestIntIntMap&gt; m_string = 12;</code>
     */
    @java.lang.Override
    public /* nullable */
protobuf_unittest.MapProto2Unittest.TestIntIntMap getMStringOrDefault(
        java.lang.String key,
        /* nullable */
protobuf_unittest.MapProto2Unittest.TestIntIntMap defaultValue) {
      if (key == null) { throw new NullPointerException("map key"); }
      java.util.Map<java.lang.String, protobuf_unittest.MapProto2Unittest.TestIntIntMap> map =
          internalGetMString().getMap();
      return map.containsKey(key) ? map.get(key) : defaultValue;
    }
    /**
     * <code>map&lt;string, .protobuf_unittest.TestIntIntMap&gt; m_string = 12;</code>
     */
    @java.lang.Override
    public protobuf_unittest.MapProto2Unittest.TestIntIntMap getMStringOrThrow(
        java.lang.String key) {
      if (key == null) { throw new NullPointerException("map key"); }
      java.util.Map<java.lang.String, protobuf_unittest.MapProto2Unittest.TestIntIntMap> map =
          internalGetMString().getMap();
      if (!map.containsKey(key)) {
        throw new java.lang.IllegalArgumentException();
      }
      return map.get(key);
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      com.google.protobuf.GeneratedMessageV3
        .serializeIntegerMapTo(
          output,
          internalGetMInt32(),
          MInt32DefaultEntryHolder.defaultEntry,
          1);
      com.google.protobuf.GeneratedMessageV3
        .serializeLongMapTo(
          output,
          internalGetMInt64(),
          MInt64DefaultEntryHolder.defaultEntry,
          2);
      com.google.protobuf.GeneratedMessageV3
        .serializeIntegerMapTo(
          output,
          internalGetMUint32(),
          MUint32DefaultEntryHolder.defaultEntry,
          3);
      com.google.protobuf.GeneratedMessageV3
        .serializeLongMapTo(
          output,
          internalGetMUint64(),
          MUint64DefaultEntryHolder.defaultEntry,
          4);
      com.google.protobuf.GeneratedMessageV3
        .serializeIntegerMapTo(
          output,
          internalGetMSint32(),
          MSint32DefaultEntryHolder.defaultEntry,
          5);
      com.google.protobuf.GeneratedMessageV3
        .serializeLongMapTo(
          output,
          internalGetMSint64(),
          MSint64DefaultEntryHolder.defaultEntry,
          6);
      com.google.protobuf.GeneratedMessageV3
        .serializeIntegerMapTo(
          output,
          internalGetMFixed32(),
          MFixed32DefaultEntryHolder.defaultEntry,
          7);
      com.google.protobuf.GeneratedMessageV3
        .serializeLongMapTo(
          output,
          internalGetMFixed64(),
          MFixed64DefaultEntryHolder.defaultEntry,
          8);
      com.google.protobuf.GeneratedMessageV3
        .serializeIntegerMapTo(
          output,
          internalGetMSfixed32(),
          MSfixed32DefaultEntryHolder.defaultEntry,
          9);
      com.google.protobuf.GeneratedMessageV3
        .serializeLongMapTo(
          output,
          internalGetMSfixed64(),
          MSfixed64DefaultEntryHolder.defaultEntry,
          10);
      com.google.protobuf.GeneratedMessageV3
        .serializeBooleanMapTo(
          output,
          internalGetMBool(),
          MBoolDefaultEntryHolder.defaultEntry,
          11);
      com.google.protobuf.GeneratedMessageV3
        .serializeStringMapTo(
          output,
          internalGetMString(),
          MStringDefaultEntryHolder.defaultEntry,
          12);
      getUnknownFields().writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      for (java.util.Map.Entry<java.lang.Integer, protobuf_unittest.MapProto2Unittest.TestIntIntMap> entry
           : internalGetMInt32().getMap().entrySet()) {
        com.google.protobuf.MapEntry<java.lang.Integer, protobuf_unittest.MapProto2Unittest.TestIntIntMap>
        mInt32__ = MInt32DefaultEntryHolder.defaultEntry.newBuilderForType()
            .setKey(entry.getKey())
            .setValue(entry.getValue())
            .build();
        size += com.google.protobuf.CodedOutputStream
            .computeMessageSize(1, mInt32__);
      }
      for (java.util.Map.Entry<java.lang.Long, protobuf_unittest.MapProto2Unittest.TestIntIntMap> entry
           : internalGetMInt64().getMap().entrySet()) {
        com.google.protobuf.MapEntry<java.lang.Long, protobuf_unittest.MapProto2Unittest.TestIntIntMap>
        mInt64__ = MInt64DefaultEntryHolder.defaultEntry.newBuilderForType()
            .setKey(entry.getKey())
            .setValue(entry.getValue())
            .build();
        size += com.google.protobuf.CodedOutputStream
            .computeMessageSize(2, mInt64__);
      }
      for (java.util.Map.Entry<java.lang.Integer, protobuf_unittest.MapProto2Unittest.TestIntIntMap> entry
           : internalGetMUint32().getMap().entrySet()) {
        com.google.protobuf.MapEntry<java.lang.Integer, protobuf_unittest.MapProto2Unittest.TestIntIntMap>
        mUint32__ = MUint32DefaultEntryHolder.defaultEntry.newBuilderForType()
            .setKey(entry.getKey())
            .setValue(entry.getValue())
            .build();
        size += com.google.protobuf.CodedOutputStream
            .computeMessageSize(3, mUint32__);
      }
      for (java.util.Map.Entry<java.lang.Long, protobuf_unittest.MapProto2Unittest.TestIntIntMap> entry
           : internalGetMUint64().getMap().entrySet()) {
        com.google.protobuf.MapEntry<java.lang.Long, protobuf_unittest.MapProto2Unittest.TestIntIntMap>
        mUint64__ = MUint64DefaultEntryHolder.defaultEntry.newBuilderForType()
            .setKey(entry.getKey())
            .setValue(entry.getValue())
            .build();
        size += com.google.protobuf.CodedOutputStream
            .computeMessageSize(4, mUint64__);
      }
      for (java.util.Map.Entry<java.lang.Integer, protobuf_unittest.MapProto2Unittest.TestIntIntMap> entry
           : internalGetMSint32().getMap().entrySet()) {
        com.google.protobuf.MapEntry<java.lang.Integer, protobuf_unittest.MapProto2Unittest.TestIntIntMap>
        mSint32__ = MSint32DefaultEntryHolder.defaultEntry.newBuilderForType()
            .setKey(entry.getKey())
            .setValue(entry.getValue())
            .build();
        size += com.google.protobuf.CodedOutputStream
            .computeMessageSize(5, mSint32__);
      }
      for (java.util.Map.Entry<java.lang.Long, protobuf_unittest.MapProto2Unittest.TestIntIntMap> entry
           : internalGetMSint64().getMap().entrySet()) {
        com.google.protobuf.MapEntry<java.lang.Long, protobuf_unittest.MapProto2Unittest.TestIntIntMap>
        mSint64__ = MSint64DefaultEntryHolder.defaultEntry.newBuilderForType()
            .setKey(entry.getKey())
            .setValue(entry.getValue())
            .build();
        size += com.google.protobuf.CodedOutputStream
            .computeMessageSize(6, mSint64__);
      }
      for (java.util.Map.Entry<java.lang.Integer, protobuf_unittest.MapProto2Unittest.TestIntIntMap> entry
           : internalGetMFixed32().getMap().entrySet()) {
        com.google.protobuf.MapEntry<java.lang.Integer, protobuf_unittest.MapProto2Unittest.TestIntIntMap>
        mFixed32__ = MFixed32DefaultEntryHolder.defaultEntry.newBuilderForType()
            .setKey(entry.getKey())
            .setValue(entry.getValue())
            .build();
        size += com.google.protobuf.CodedOutputStream
            .computeMessageSize(7, mFixed32__);
      }
      for (java.util.Map.Entry<java.lang.Long, protobuf_unittest.MapProto2Unittest.TestIntIntMap> entry
           : internalGetMFixed64().getMap().entrySet()) {
        com.google.protobuf.MapEntry<java.lang.Long, protobuf_unittest.MapProto2Unittest.TestIntIntMap>
        mFixed64__ = MFixed64DefaultEntryHolder.defaultEntry.newBuilderForType()
            .setKey(entry.getKey())
            .setValue(entry.getValue())
            .build();
        size += com.google.protobuf.CodedOutputStream
            .computeMessageSize(8, mFixed64__);
      }
      for (java.util.Map.Entry<java.lang.Integer, protobuf_unittest.MapProto2Unittest.TestIntIntMap> entry
           : internalGetMSfixed32().getMap().entrySet()) {
        com.google.protobuf.MapEntry<java.lang.Integer, protobuf_unittest.MapProto2Unittest.TestIntIntMap>
        mSfixed32__ = MSfixed32DefaultEntryHolder.defaultEntry.newBuilderForType()
            .setKey(entry.getKey())
            .setValue(entry.getValue())
            .build();
        size += com.google.protobuf.CodedOutputStream
            .computeMessageSize(9, mSfixed32__);
      }
      for (java.util.Map.Entry<java.lang.Long, protobuf_unittest.MapProto2Unittest.TestIntIntMap> entry
           : internalGetMSfixed64().getMap().entrySet()) {
        com.google.protobuf.MapEntry<java.lang.Long, protobuf_unittest.MapProto2Unittest.TestIntIntMap>
        mSfixed64__ = MSfixed64DefaultEntryHolder.defaultEntry.newBuilderForType()
            .setKey(entry.getKey())
            .setValue(entry.getValue())
            .build();
        size += com.google.protobuf.CodedOutputStream
            .computeMessageSize(10, mSfixed64__);
      }
      for (java.util.Map.Entry<java.lang.Boolean, protobuf_unittest.MapProto2Unittest.TestIntIntMap> entry
           : internalGetMBool().getMap().entrySet()) {
        com.google.protobuf.MapEntry<java.lang.Boolean, protobuf_unittest.MapProto2Unittest.TestIntIntMap>
        mBool__ = MBoolDefaultEntryHolder.defaultEntry.newBuilderForType()
            .setKey(entry.getKey())
            .setValue(entry.getValue())
            .build();
        size += com.google.protobuf.CodedOutputStream
            .computeMessageSize(11, mBool__);
      }
      for (java.util.Map.Entry<java.lang.String, protobuf_unittest.MapProto2Unittest.TestIntIntMap> entry
           : internalGetMString().getMap().entrySet()) {
        com.google.protobuf.MapEntry<java.lang.String, protobuf_unittest.MapProto2Unittest.TestIntIntMap>
        mString__ = MStringDefaultEntryHolder.defaultEntry.newBuilderForType()
            .setKey(entry.getKey())
            .setValue(entry.getValue())
            .build();
        size += com.google.protobuf.CodedOutputStream
            .computeMessageSize(12, mString__);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof protobuf_unittest.MapProto2Unittest.TestMaps)) {
        return super.equals(obj);
      }
      protobuf_unittest.MapProto2Unittest.TestMaps other = (protobuf_unittest.MapProto2Unittest.TestMaps) obj;

      if (!internalGetMInt32().equals(
          other.internalGetMInt32())) return false;
      if (!internalGetMInt64().equals(
          other.internalGetMInt64())) return false;
      if (!internalGetMUint32().equals(
          other.internalGetMUint32())) return false;
      if (!internalGetMUint64().equals(
          other.internalGetMUint64())) return false;
      if (!internalGetMSint32().equals(
          other.internalGetMSint32())) return false;
      if (!internalGetMSint64().equals(
          other.internalGetMSint64())) return false;
      if (!internalGetMFixed32().equals(
          other.internalGetMFixed32())) return false;
      if (!internalGetMFixed64().equals(
          other.internalGetMFixed64())) return false;
      if (!internalGetMSfixed32().equals(
          other.internalGetMSfixed32())) return false;
      if (!internalGetMSfixed64().equals(
          other.internalGetMSfixed64())) return false;
      if (!internalGetMBool().equals(
          other.internalGetMBool())) return false;
      if (!internalGetMString().equals(
          other.internalGetMString())) return false;
      if (!getUnknownFields().equals(other.getUnknownFields())) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      if (!internalGetMInt32().getMap().isEmpty()) {
        hash = (37 * hash) + M_INT32_FIELD_NUMBER;
        hash = (53 * hash) + internalGetMInt32().hashCode();
      }
      if (!internalGetMInt64().getMap().isEmpty()) {
        hash = (37 * hash) + M_INT64_FIELD_NUMBER;
        hash = (53 * hash) + internalGetMInt64().hashCode();
      }
      if (!internalGetMUint32().getMap().isEmpty()) {
        hash = (37 * hash) + M_UINT32_FIELD_NUMBER;
        hash = (53 * hash) + internalGetMUint32().hashCode();
      }
      if (!internalGetMUint64().getMap().isEmpty()) {
        hash = (37 * hash) + M_UINT64_FIELD_NUMBER;
        hash = (53 * hash) + internalGetMUint64().hashCode();
      }
      if (!internalGetMSint32().getMap().isEmpty()) {
        hash = (37 * hash) + M_SINT32_FIELD_NUMBER;
        hash = (53 * hash) + internalGetMSint32().hashCode();
      }
      if (!internalGetMSint64().getMap().isEmpty()) {
        hash = (37 * hash) + M_SINT64_FIELD_NUMBER;
        hash = (53 * hash) + internalGetMSint64().hashCode();
      }
      if (!internalGetMFixed32().getMap().isEmpty()) {
        hash = (37 * hash) + M_FIXED32_FIELD_NUMBER;
        hash = (53 * hash) + internalGetMFixed32().hashCode();
      }
      if (!internalGetMFixed64().getMap().isEmpty()) {
        hash = (37 * hash) + M_FIXED64_FIELD_NUMBER;
        hash = (53 * hash) + internalGetMFixed64().hashCode();
      }
      if (!internalGetMSfixed32().getMap().isEmpty()) {
        hash = (37 * hash) + M_SFIXED32_FIELD_NUMBER;
        hash = (53 * hash) + internalGetMSfixed32().hashCode();
      }
      if (!internalGetMSfixed64().getMap().isEmpty()) {
        hash = (37 * hash) + M_SFIXED64_FIELD_NUMBER;
        hash = (53 * hash) + internalGetMSfixed64().hashCode();
      }
      if (!internalGetMBool().getMap().isEmpty()) {
        hash = (37 * hash) + M_BOOL_FIELD_NUMBER;
        hash = (53 * hash) + internalGetMBool().hashCode();
      }
      if (!internalGetMString().getMap().isEmpty()) {
        hash = (37 * hash) + M_STRING_FIELD_NUMBER;
        hash = (53 * hash) + internalGetMString().hashCode();
      }
      hash = (29 * hash) + getUnknownFields().hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static protobuf_unittest.MapProto2Unittest.TestMaps parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static protobuf_unittest.MapProto2Unittest.TestMaps parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static protobuf_unittest.MapProto2Unittest.TestMaps parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static protobuf_unittest.MapProto2Unittest.TestMaps parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static protobuf_unittest.MapProto2Unittest.TestMaps parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static protobuf_unittest.MapProto2Unittest.TestMaps parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static protobuf_unittest.MapProto2Unittest.TestMaps parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static protobuf_unittest.MapProto2Unittest.TestMaps parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static protobuf_unittest.MapProto2Unittest.TestMaps parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static protobuf_unittest.MapProto2Unittest.TestMaps parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static protobuf_unittest.MapProto2Unittest.TestMaps parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static protobuf_unittest.MapProto2Unittest.TestMaps parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(protobuf_unittest.MapProto2Unittest.TestMaps prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * <pre>
     * Test all key types: string, plus the non-floating-point scalars.
     * </pre>
     *
     * Protobuf type {@code protobuf_unittest.TestMaps}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:protobuf_unittest.TestMaps)
        protobuf_unittest.MapProto2Unittest.TestMapsOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return protobuf_unittest.MapProto2Unittest.internal_static_protobuf_unittest_TestMaps_descriptor;
      }

      @SuppressWarnings({"rawtypes"})
      protected com.google.protobuf.MapField internalGetMapField(
          int number) {
        switch (number) {
          case 1:
            return internalGetMInt32();
          case 2:
            return internalGetMInt64();
          case 3:
            return internalGetMUint32();
          case 4:
            return internalGetMUint64();
          case 5:
            return internalGetMSint32();
          case 6:
            return internalGetMSint64();
          case 7:
            return internalGetMFixed32();
          case 8:
            return internalGetMFixed64();
          case 9:
            return internalGetMSfixed32();
          case 10:
            return internalGetMSfixed64();
          case 11:
            return internalGetMBool();
          case 12:
            return internalGetMString();
          default:
            throw new RuntimeException(
                "Invalid map field number: " + number);
        }
      }
      @SuppressWarnings({"rawtypes"})
      protected com.google.protobuf.MapField internalGetMutableMapField(
          int number) {
        switch (number) {
          case 1:
            return internalGetMutableMInt32();
          case 2:
            return internalGetMutableMInt64();
          case 3:
            return internalGetMutableMUint32();
          case 4:
            return internalGetMutableMUint64();
          case 5:
            return internalGetMutableMSint32();
          case 6:
            return internalGetMutableMSint64();
          case 7:
            return internalGetMutableMFixed32();
          case 8:
            return internalGetMutableMFixed64();
          case 9:
            return internalGetMutableMSfixed32();
          case 10:
            return internalGetMutableMSfixed64();
          case 11:
            return internalGetMutableMBool();
          case 12:
            return internalGetMutableMString();
          default:
            throw new RuntimeException(
                "Invalid map field number: " + number);
        }
      }
      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return protobuf_unittest.MapProto2Unittest.internal_static_protobuf_unittest_TestMaps_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                protobuf_unittest.MapProto2Unittest.TestMaps.class, protobuf_unittest.MapProto2Unittest.TestMaps.Builder.class);
      }

      // Construct using protobuf_unittest.MapProto2Unittest.TestMaps.newBuilder()
      private Builder() {

      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);

      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        bitField0_ = 0;
        internalGetMutableMInt32().clear();
        internalGetMutableMInt64().clear();
        internalGetMutableMUint32().clear();
        internalGetMutableMUint64().clear();
        internalGetMutableMSint32().clear();
        internalGetMutableMSint64().clear();
        internalGetMutableMFixed32().clear();
        internalGetMutableMFixed64().clear();
        internalGetMutableMSfixed32().clear();
        internalGetMutableMSfixed64().clear();
        internalGetMutableMBool().clear();
        internalGetMutableMString().clear();
        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return protobuf_unittest.MapProto2Unittest.internal_static_protobuf_unittest_TestMaps_descriptor;
      }

      @java.lang.Override
      public protobuf_unittest.MapProto2Unittest.TestMaps getDefaultInstanceForType() {
        return protobuf_unittest.MapProto2Unittest.TestMaps.getDefaultInstance();
      }

      @java.lang.Override
      public protobuf_unittest.MapProto2Unittest.TestMaps build() {
        protobuf_unittest.MapProto2Unittest.TestMaps result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public protobuf_unittest.MapProto2Unittest.TestMaps buildPartial() {
        protobuf_unittest.MapProto2Unittest.TestMaps result = new protobuf_unittest.MapProto2Unittest.TestMaps(this);
        if (bitField0_ != 0) { buildPartial0(result); }
        onBuilt();
        return result;
      }

      private void buildPartial0(protobuf_unittest.MapProto2Unittest.TestMaps result) {
        int from_bitField0_ = bitField0_;
        if (((from_bitField0_ & 0x00000001) != 0)) {
          result.mInt32_ = internalGetMInt32();
          result.mInt32_.makeImmutable();
        }
        if (((from_bitField0_ & 0x00000002) != 0)) {
          result.mInt64_ = internalGetMInt64();
          result.mInt64_.makeImmutable();
        }
        if (((from_bitField0_ & 0x00000004) != 0)) {
          result.mUint32_ = internalGetMUint32();
          result.mUint32_.makeImmutable();
        }
        if (((from_bitField0_ & 0x00000008) != 0)) {
          result.mUint64_ = internalGetMUint64();
          result.mUint64_.makeImmutable();
        }
        if (((from_bitField0_ & 0x00000010) != 0)) {
          result.mSint32_ = internalGetMSint32();
          result.mSint32_.makeImmutable();
        }
        if (((from_bitField0_ & 0x00000020) != 0)) {
          result.mSint64_ = internalGetMSint64();
          result.mSint64_.makeImmutable();
        }
        if (((from_bitField0_ & 0x00000040) != 0)) {
          result.mFixed32_ = internalGetMFixed32();
          result.mFixed32_.makeImmutable();
        }
        if (((from_bitField0_ & 0x00000080) != 0)) {
          result.mFixed64_ = internalGetMFixed64();
          result.mFixed64_.makeImmutable();
        }
        if (((from_bitField0_ & 0x00000100) != 0)) {
          result.mSfixed32_ = internalGetMSfixed32();
          result.mSfixed32_.makeImmutable();
        }
        if (((from_bitField0_ & 0x00000200) != 0)) {
          result.mSfixed64_ = internalGetMSfixed64();
          result.mSfixed64_.makeImmutable();
        }
        if (((from_bitField0_ & 0x00000400) != 0)) {
          result.mBool_ = internalGetMBool();
          result.mBool_.makeImmutable();
        }
        if (((from_bitField0_ & 0x00000800) != 0)) {
          result.mString_ = internalGetMString();
          result.mString_.makeImmutable();
        }
      }

      @java.lang.Override
      public Builder clone() {
        return super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof protobuf_unittest.MapProto2Unittest.TestMaps) {
          return mergeFrom((protobuf_unittest.MapProto2Unittest.TestMaps)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(protobuf_unittest.MapProto2Unittest.TestMaps other) {
        if (other == protobuf_unittest.MapProto2Unittest.TestMaps.getDefaultInstance()) return this;
        internalGetMutableMInt32().mergeFrom(
            other.internalGetMInt32());
        bitField0_ |= 0x00000001;
        internalGetMutableMInt64().mergeFrom(
            other.internalGetMInt64());
        bitField0_ |= 0x00000002;
        internalGetMutableMUint32().mergeFrom(
            other.internalGetMUint32());
        bitField0_ |= 0x00000004;
        internalGetMutableMUint64().mergeFrom(
            other.internalGetMUint64());
        bitField0_ |= 0x00000008;
        internalGetMutableMSint32().mergeFrom(
            other.internalGetMSint32());
        bitField0_ |= 0x00000010;
        internalGetMutableMSint64().mergeFrom(
            other.internalGetMSint64());
        bitField0_ |= 0x00000020;
        internalGetMutableMFixed32().mergeFrom(
            other.internalGetMFixed32());
        bitField0_ |= 0x00000040;
        internalGetMutableMFixed64().mergeFrom(
            other.internalGetMFixed64());
        bitField0_ |= 0x00000080;
        internalGetMutableMSfixed32().mergeFrom(
            other.internalGetMSfixed32());
        bitField0_ |= 0x00000100;
        internalGetMutableMSfixed64().mergeFrom(
            other.internalGetMSfixed64());
        bitField0_ |= 0x00000200;
        internalGetMutableMBool().mergeFrom(
            other.internalGetMBool());
        bitField0_ |= 0x00000400;
        internalGetMutableMString().mergeFrom(
            other.internalGetMString());
        bitField0_ |= 0x00000800;
        this.mergeUnknownFields(other.getUnknownFields());
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        if (extensionRegistry == null) {
          throw new java.lang.NullPointerException();
        }
        try {
          boolean done = false;
          while (!done) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                done = true;
                break;
              case 10: {
                com.google.protobuf.MapEntry<java.lang.Integer, protobuf_unittest.MapProto2Unittest.TestIntIntMap>
                mInt32__ = input.readMessage(
                    MInt32DefaultEntryHolder.defaultEntry.getParserForType(), extensionRegistry);
                internalGetMutableMInt32().getMutableMap().put(
                    mInt32__.getKey(), mInt32__.getValue());
                bitField0_ |= 0x00000001;
                break;
              } // case 10
              case 18: {
                com.google.protobuf.MapEntry<java.lang.Long, protobuf_unittest.MapProto2Unittest.TestIntIntMap>
                mInt64__ = input.readMessage(
                    MInt64DefaultEntryHolder.defaultEntry.getParserForType(), extensionRegistry);
                internalGetMutableMInt64().getMutableMap().put(
                    mInt64__.getKey(), mInt64__.getValue());
                bitField0_ |= 0x00000002;
                break;
              } // case 18
              case 26: {
                com.google.protobuf.MapEntry<java.lang.Integer, protobuf_unittest.MapProto2Unittest.TestIntIntMap>
                mUint32__ = input.readMessage(
                    MUint32DefaultEntryHolder.defaultEntry.getParserForType(), extensionRegistry);
                internalGetMutableMUint32().getMutableMap().put(
                    mUint32__.getKey(), mUint32__.getValue());
                bitField0_ |= 0x00000004;
                break;
              } // case 26
              case 34: {
                com.google.protobuf.MapEntry<java.lang.Long, protobuf_unittest.MapProto2Unittest.TestIntIntMap>
                mUint64__ = input.readMessage(
                    MUint64DefaultEntryHolder.defaultEntry.getParserForType(), extensionRegistry);
                internalGetMutableMUint64().getMutableMap().put(
                    mUint64__.getKey(), mUint64__.getValue());
                bitField0_ |= 0x00000008;
                break;
              } // case 34
              case 42: {
                com.google.protobuf.MapEntry<java.lang.Integer, protobuf_unittest.MapProto2Unittest.TestIntIntMap>
                mSint32__ = input.readMessage(
                    MSint32DefaultEntryHolder.defaultEntry.getParserForType(), extensionRegistry);
                internalGetMutableMSint32().getMutableMap().put(
                    mSint32__.getKey(), mSint32__.getValue());
                bitField0_ |= 0x00000010;
                break;
              } // case 42
              case 50: {
                com.google.protobuf.MapEntry<java.lang.Long, protobuf_unittest.MapProto2Unittest.TestIntIntMap>
                mSint64__ = input.readMessage(
                    MSint64DefaultEntryHolder.defaultEntry.getParserForType(), extensionRegistry);
                internalGetMutableMSint64().getMutableMap().put(
                    mSint64__.getKey(), mSint64__.getValue());
                bitField0_ |= 0x00000020;
                break;
              } // case 50
              case 58: {
                com.google.protobuf.MapEntry<java.lang.Integer, protobuf_unittest.MapProto2Unittest.TestIntIntMap>
                mFixed32__ = input.readMessage(
                    MFixed32DefaultEntryHolder.defaultEntry.getParserForType(), extensionRegistry);
                internalGetMutableMFixed32().getMutableMap().put(
                    mFixed32__.getKey(), mFixed32__.getValue());
                bitField0_ |= 0x00000040;
                break;
              } // case 58
              case 66: {
                com.google.protobuf.MapEntry<java.lang.Long, protobuf_unittest.MapProto2Unittest.TestIntIntMap>
                mFixed64__ = input.readMessage(
                    MFixed64DefaultEntryHolder.defaultEntry.getParserForType(), extensionRegistry);
                internalGetMutableMFixed64().getMutableMap().put(
                    mFixed64__.getKey(), mFixed64__.getValue());
                bitField0_ |= 0x00000080;
                break;
              } // case 66
              case 74: {
                com.google.protobuf.MapEntry<java.lang.Integer, protobuf_unittest.MapProto2Unittest.TestIntIntMap>
                mSfixed32__ = input.readMessage(
                    MSfixed32DefaultEntryHolder.defaultEntry.getParserForType(), extensionRegistry);
                internalGetMutableMSfixed32().getMutableMap().put(
                    mSfixed32__.getKey(), mSfixed32__.getValue());
                bitField0_ |= 0x00000100;
                break;
              } // case 74
              case 82: {
                com.google.protobuf.MapEntry<java.lang.Long, protobuf_unittest.MapProto2Unittest.TestIntIntMap>
                mSfixed64__ = input.readMessage(
                    MSfixed64DefaultEntryHolder.defaultEntry.getParserForType(), extensionRegistry);
                internalGetMutableMSfixed64().getMutableMap().put(
                    mSfixed64__.getKey(), mSfixed64__.getValue());
                bitField0_ |= 0x00000200;
                break;
              } // case 82
              case 90: {
                com.google.protobuf.MapEntry<java.lang.Boolean, protobuf_unittest.MapProto2Unittest.TestIntIntMap>
                mBool__ = input.readMessage(
                    MBoolDefaultEntryHolder.defaultEntry.getParserForType(), extensionRegistry);
                internalGetMutableMBool().getMutableMap().put(
                    mBool__.getKey(), mBool__.getValue());
                bitField0_ |= 0x00000400;
                break;
              } // case 90
              case 98: {
                com.google.protobuf.MapEntry<java.lang.String, protobuf_unittest.MapProto2Unittest.TestIntIntMap>
                mString__ = input.readMessage(
                    MStringDefaultEntryHolder.defaultEntry.getParserForType(), extensionRegistry);
                internalGetMutableMString().getMutableMap().put(
                    mString__.getKey(), mString__.getValue());
                bitField0_ |= 0x00000800;
                break;
              } // case 98
              default: {
                if (!super.parseUnknownField(input, extensionRegistry, tag)) {
                  done = true; // was an endgroup tag
                }
                break;
              } // default:
            } // switch (tag)
          } // while (!done)
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.unwrapIOException();
        } finally {
          onChanged();
        } // finally
        return this;
      }
      private int bitField0_;

      private com.google.protobuf.MapField<
          java.lang.Integer, protobuf_unittest.MapProto2Unittest.TestIntIntMap> mInt32_;
      private com.google.protobuf.MapField<java.lang.Integer, protobuf_unittest.MapProto2Unittest.TestIntIntMap>
          internalGetMInt32() {
        if (mInt32_ == null) {
          return com.google.protobuf.MapField.emptyMapField(
              MInt32DefaultEntryHolder.defaultEntry);
        }
        return mInt32_;
      }
      private com.google.protobuf.MapField<java.lang.Integer, protobuf_unittest.MapProto2Unittest.TestIntIntMap>
          internalGetMutableMInt32() {
        if (mInt32_ == null) {
          mInt32_ = com.google.protobuf.MapField.newMapField(
              MInt32DefaultEntryHolder.defaultEntry);
        }
        if (!mInt32_.isMutable()) {
          mInt32_ = mInt32_.copy();
        }
        bitField0_ |= 0x00000001;
        onChanged();
        return mInt32_;
      }
      public int getMInt32Count() {
        return internalGetMInt32().getMap().size();
      }
      /**
       * <code>map&lt;int32, .protobuf_unittest.TestIntIntMap&gt; m_int32 = 1;</code>
       */
      @java.lang.Override
      public boolean containsMInt32(
          int key) {
        
        return internalGetMInt32().getMap().containsKey(key);
      }
      /**
       * Use {@link #getMInt32Map()} instead.
       */
      @java.lang.Override
      @java.lang.Deprecated
      public java.util.Map<java.lang.Integer, protobuf_unittest.MapProto2Unittest.TestIntIntMap> getMInt32() {
        return getMInt32Map();
      }
      /**
       * <code>map&lt;int32, .protobuf_unittest.TestIntIntMap&gt; m_int32 = 1;</code>
       */
      @java.lang.Override
      public java.util.Map<java.lang.Integer, protobuf_unittest.MapProto2Unittest.TestIntIntMap> getMInt32Map() {
        return internalGetMInt32().getMap();
      }
      /**
       * <code>map&lt;int32, .protobuf_unittest.TestIntIntMap&gt; m_int32 = 1;</code>
       */
      @java.lang.Override
      public /* nullable */
protobuf_unittest.MapProto2Unittest.TestIntIntMap getMInt32OrDefault(
          int key,
          /* nullable */
protobuf_unittest.MapProto2Unittest.TestIntIntMap defaultValue) {
        
        java.util.Map<java.lang.Integer, protobuf_unittest.MapProto2Unittest.TestIntIntMap> map =
            internalGetMInt32().getMap();
        return map.containsKey(key) ? map.get(key) : defaultValue;
      }
      /**
       * <code>map&lt;int32, .protobuf_unittest.TestIntIntMap&gt; m_int32 = 1;</code>
       */
      @java.lang.Override
      public protobuf_unittest.MapProto2Unittest.TestIntIntMap getMInt32OrThrow(
          int key) {
        
        java.util.Map<java.lang.Integer, protobuf_unittest.MapProto2Unittest.TestIntIntMap> map =
            internalGetMInt32().getMap();
        if (!map.containsKey(key)) {
          throw new java.lang.IllegalArgumentException();
        }
        return map.get(key);
      }
      public Builder clearMInt32() {
        bitField0_ = (bitField0_ & ~0x00000001);
        internalGetMutableMInt32().getMutableMap()
            .clear();
        return this;
      }
      /**
       * <code>map&lt;int32, .protobuf_unittest.TestIntIntMap&gt; m_int32 = 1;</code>
       */
      public Builder removeMInt32(
          int key) {
        
        internalGetMutableMInt32().getMutableMap()
            .remove(key);
        return this;
      }
      /**
       * Use alternate mutation accessors instead.
       */
      @java.lang.Deprecated
      public java.util.Map<java.lang.Integer, protobuf_unittest.MapProto2Unittest.TestIntIntMap>
          getMutableMInt32() {
        bitField0_ |= 0x00000001;
        return internalGetMutableMInt32().getMutableMap();
      }
      /**
       * <code>map&lt;int32, .protobuf_unittest.TestIntIntMap&gt; m_int32 = 1;</code>
       */
      public Builder putMInt32(
          int key,
          protobuf_unittest.MapProto2Unittest.TestIntIntMap value) {
        
        if (value == null) { throw new NullPointerException("map value"); }
        internalGetMutableMInt32().getMutableMap()
            .put(key, value);
        bitField0_ |= 0x00000001;
        return this;
      }
      /**
       * <code>map&lt;int32, .protobuf_unittest.TestIntIntMap&gt; m_int32 = 1;</code>
       */
      public Builder putAllMInt32(
          java.util.Map<java.lang.Integer, protobuf_unittest.MapProto2Unittest.TestIntIntMap> values) {
        internalGetMutableMInt32().getMutableMap()
            .putAll(values);
        bitField0_ |= 0x00000001;
        return this;
      }

      private com.google.protobuf.MapField<
          java.lang.Long, protobuf_unittest.MapProto2Unittest.TestIntIntMap> mInt64_;
      private com.google.protobuf.MapField<java.lang.Long, protobuf_unittest.MapProto2Unittest.TestIntIntMap>
          internalGetMInt64() {
        if (mInt64_ == null) {
          return com.google.protobuf.MapField.emptyMapField(
              MInt64DefaultEntryHolder.defaultEntry);
        }
        return mInt64_;
      }
      private com.google.protobuf.MapField<java.lang.Long, protobuf_unittest.MapProto2Unittest.TestIntIntMap>
          internalGetMutableMInt64() {
        if (mInt64_ == null) {
          mInt64_ = com.google.protobuf.MapField.newMapField(
              MInt64DefaultEntryHolder.defaultEntry);
        }
        if (!mInt64_.isMutable()) {
          mInt64_ = mInt64_.copy();
        }
        bitField0_ |= 0x00000002;
        onChanged();
        return mInt64_;
      }
      public int getMInt64Count() {
        return internalGetMInt64().getMap().size();
      }
      /**
       * <code>map&lt;int64, .protobuf_unittest.TestIntIntMap&gt; m_int64 = 2;</code>
       */
      @java.lang.Override
      public boolean containsMInt64(
          long key) {
        
        return internalGetMInt64().getMap().containsKey(key);
      }
      /**
       * Use {@link #getMInt64Map()} instead.
       */
      @java.lang.Override
      @java.lang.Deprecated
      public java.util.Map<java.lang.Long, protobuf_unittest.MapProto2Unittest.TestIntIntMap> getMInt64() {
        return getMInt64Map();
      }
      /**
       * <code>map&lt;int64, .protobuf_unittest.TestIntIntMap&gt; m_int64 = 2;</code>
       */
      @java.lang.Override
      public java.util.Map<java.lang.Long, protobuf_unittest.MapProto2Unittest.TestIntIntMap> getMInt64Map() {
        return internalGetMInt64().getMap();
      }
      /**
       * <code>map&lt;int64, .protobuf_unittest.TestIntIntMap&gt; m_int64 = 2;</code>
       */
      @java.lang.Override
      public /* nullable */
protobuf_unittest.MapProto2Unittest.TestIntIntMap getMInt64OrDefault(
          long key,
          /* nullable */
protobuf_unittest.MapProto2Unittest.TestIntIntMap defaultValue) {
        
        java.util.Map<java.lang.Long, protobuf_unittest.MapProto2Unittest.TestIntIntMap> map =
            internalGetMInt64().getMap();
        return map.containsKey(key) ? map.get(key) : defaultValue;
      }
      /**
       * <code>map&lt;int64, .protobuf_unittest.TestIntIntMap&gt; m_int64 = 2;</code>
       */
      @java.lang.Override
      public protobuf_unittest.MapProto2Unittest.TestIntIntMap getMInt64OrThrow(
          long key) {
        
        java.util.Map<java.lang.Long, protobuf_unittest.MapProto2Unittest.TestIntIntMap> map =
            internalGetMInt64().getMap();
        if (!map.containsKey(key)) {
          throw new java.lang.IllegalArgumentException();
        }
        return map.get(key);
      }
      public Builder clearMInt64() {
        bitField0_ = (bitField0_ & ~0x00000002);
        internalGetMutableMInt64().getMutableMap()
            .clear();
        return this;
      }
      /**
       * <code>map&lt;int64, .protobuf_unittest.TestIntIntMap&gt; m_int64 = 2;</code>
       */
      public Builder removeMInt64(
          long key) {
        
        internalGetMutableMInt64().getMutableMap()
            .remove(key);
        return this;
      }
      /**
       * Use alternate mutation accessors instead.
       */
      @java.lang.Deprecated
      public java.util.Map<java.lang.Long, protobuf_unittest.MapProto2Unittest.TestIntIntMap>
          getMutableMInt64() {
        bitField0_ |= 0x00000002;
        return internalGetMutableMInt64().getMutableMap();
      }
      /**
       * <code>map&lt;int64, .protobuf_unittest.TestIntIntMap&gt; m_int64 = 2;</code>
       */
      public Builder putMInt64(
          long key,
          protobuf_unittest.MapProto2Unittest.TestIntIntMap value) {
        
        if (value == null) { throw new NullPointerException("map value"); }
        internalGetMutableMInt64().getMutableMap()
            .put(key, value);
        bitField0_ |= 0x00000002;
        return this;
      }
      /**
       * <code>map&lt;int64, .protobuf_unittest.TestIntIntMap&gt; m_int64 = 2;</code>
       */
      public Builder putAllMInt64(
          java.util.Map<java.lang.Long, protobuf_unittest.MapProto2Unittest.TestIntIntMap> values) {
        internalGetMutableMInt64().getMutableMap()
            .putAll(values);
        bitField0_ |= 0x00000002;
        return this;
      }

      private com.google.protobuf.MapField<
          java.lang.Integer, protobuf_unittest.MapProto2Unittest.TestIntIntMap> mUint32_;
      private com.google.protobuf.MapField<java.lang.Integer, protobuf_unittest.MapProto2Unittest.TestIntIntMap>
          internalGetMUint32() {
        if (mUint32_ == null) {
          return com.google.protobuf.MapField.emptyMapField(
              MUint32DefaultEntryHolder.defaultEntry);
        }
        return mUint32_;
      }
      private com.google.protobuf.MapField<java.lang.Integer, protobuf_unittest.MapProto2Unittest.TestIntIntMap>
          internalGetMutableMUint32() {
        if (mUint32_ == null) {
          mUint32_ = com.google.protobuf.MapField.newMapField(
              MUint32DefaultEntryHolder.defaultEntry);
        }
        if (!mUint32_.isMutable()) {
          mUint32_ = mUint32_.copy();
        }
        bitField0_ |= 0x00000004;
        onChanged();
        return mUint32_;
      }
      public int getMUint32Count() {
        return internalGetMUint32().getMap().size();
      }
      /**
       * <code>map&lt;uint32, .protobuf_unittest.TestIntIntMap&gt; m_uint32 = 3;</code>
       */
      @java.lang.Override
      public boolean containsMUint32(
          int key) {
        
        return internalGetMUint32().getMap().containsKey(key);
      }
      /**
       * Use {@link #getMUint32Map()} instead.
       */
      @java.lang.Override
      @java.lang.Deprecated
      public java.util.Map<java.lang.Integer, protobuf_unittest.MapProto2Unittest.TestIntIntMap> getMUint32() {
        return getMUint32Map();
      }
      /**
       * <code>map&lt;uint32, .protobuf_unittest.TestIntIntMap&gt; m_uint32 = 3;</code>
       */
      @java.lang.Override
      public java.util.Map<java.lang.Integer, protobuf_unittest.MapProto2Unittest.TestIntIntMap> getMUint32Map() {
        return internalGetMUint32().getMap();
      }
      /**
       * <code>map&lt;uint32, .protobuf_unittest.TestIntIntMap&gt; m_uint32 = 3;</code>
       */
      @java.lang.Override
      public /* nullable */
protobuf_unittest.MapProto2Unittest.TestIntIntMap getMUint32OrDefault(
          int key,
          /* nullable */
protobuf_unittest.MapProto2Unittest.TestIntIntMap defaultValue) {
        
        java.util.Map<java.lang.Integer, protobuf_unittest.MapProto2Unittest.TestIntIntMap> map =
            internalGetMUint32().getMap();
        return map.containsKey(key) ? map.get(key) : defaultValue;
      }
      /**
       * <code>map&lt;uint32, .protobuf_unittest.TestIntIntMap&gt; m_uint32 = 3;</code>
       */
      @java.lang.Override
      public protobuf_unittest.MapProto2Unittest.TestIntIntMap getMUint32OrThrow(
          int key) {
        
        java.util.Map<java.lang.Integer, protobuf_unittest.MapProto2Unittest.TestIntIntMap> map =
            internalGetMUint32().getMap();
        if (!map.containsKey(key)) {
          throw new java.lang.IllegalArgumentException();
        }
        return map.get(key);
      }
      public Builder clearMUint32() {
        bitField0_ = (bitField0_ & ~0x00000004);
        internalGetMutableMUint32().getMutableMap()
            .clear();
        return this;
      }
      /**
       * <code>map&lt;uint32, .protobuf_unittest.TestIntIntMap&gt; m_uint32 = 3;</code>
       */
      public Builder removeMUint32(
          int key) {
        
        internalGetMutableMUint32().getMutableMap()
            .remove(key);
        return this;
      }
      /**
       * Use alternate mutation accessors instead.
       */
      @java.lang.Deprecated
      public java.util.Map<java.lang.Integer, protobuf_unittest.MapProto2Unittest.TestIntIntMap>
          getMutableMUint32() {
        bitField0_ |= 0x00000004;
        return internalGetMutableMUint32().getMutableMap();
      }
      /**
       * <code>map&lt;uint32, .protobuf_unittest.TestIntIntMap&gt; m_uint32 = 3;</code>
       */
      public Builder putMUint32(
          int key,
          protobuf_unittest.MapProto2Unittest.TestIntIntMap value) {
        
        if (value == null) { throw new NullPointerException("map value"); }
        internalGetMutableMUint32().getMutableMap()
            .put(key, value);
        bitField0_ |= 0x00000004;
        return this;
      }
      /**
       * <code>map&lt;uint32, .protobuf_unittest.TestIntIntMap&gt; m_uint32 = 3;</code>
       */
      public Builder putAllMUint32(
          java.util.Map<java.lang.Integer, protobuf_unittest.MapProto2Unittest.TestIntIntMap> values) {
        internalGetMutableMUint32().getMutableMap()
            .putAll(values);
        bitField0_ |= 0x00000004;
        return this;
      }

      private com.google.protobuf.MapField<
          java.lang.Long, protobuf_unittest.MapProto2Unittest.TestIntIntMap> mUint64_;
      private com.google.protobuf.MapField<java.lang.Long, protobuf_unittest.MapProto2Unittest.TestIntIntMap>
          internalGetMUint64() {
        if (mUint64_ == null) {
          return com.google.protobuf.MapField.emptyMapField(
              MUint64DefaultEntryHolder.defaultEntry);
        }
        return mUint64_;
      }
      private com.google.protobuf.MapField<java.lang.Long, protobuf_unittest.MapProto2Unittest.TestIntIntMap>
          internalGetMutableMUint64() {
        if (mUint64_ == null) {
          mUint64_ = com.google.protobuf.MapField.newMapField(
              MUint64DefaultEntryHolder.defaultEntry);
        }
        if (!mUint64_.isMutable()) {
          mUint64_ = mUint64_.copy();
        }
        bitField0_ |= 0x00000008;
        onChanged();
        return mUint64_;
      }
      public int getMUint64Count() {
        return internalGetMUint64().getMap().size();
      }
      /**
       * <code>map&lt;uint64, .protobuf_unittest.TestIntIntMap&gt; m_uint64 = 4;</code>
       */
      @java.lang.Override
      public boolean containsMUint64(
          long key) {
        
        return internalGetMUint64().getMap().containsKey(key);
      }
      /**
       * Use {@link #getMUint64Map()} instead.
       */
      @java.lang.Override
      @java.lang.Deprecated
      public java.util.Map<java.lang.Long, protobuf_unittest.MapProto2Unittest.TestIntIntMap> getMUint64() {
        return getMUint64Map();
      }
      /**
       * <code>map&lt;uint64, .protobuf_unittest.TestIntIntMap&gt; m_uint64 = 4;</code>
       */
      @java.lang.Override
      public java.util.Map<java.lang.Long, protobuf_unittest.MapProto2Unittest.TestIntIntMap> getMUint64Map() {
        return internalGetMUint64().getMap();
      }
      /**
       * <code>map&lt;uint64, .protobuf_unittest.TestIntIntMap&gt; m_uint64 = 4;</code>
       */
      @java.lang.Override
      public /* nullable */
protobuf_unittest.MapProto2Unittest.TestIntIntMap getMUint64OrDefault(
          long key,
          /* nullable */
protobuf_unittest.MapProto2Unittest.TestIntIntMap defaultValue) {
        
        java.util.Map<java.lang.Long, protobuf_unittest.MapProto2Unittest.TestIntIntMap> map =
            internalGetMUint64().getMap();
        return map.containsKey(key) ? map.get(key) : defaultValue;
      }
      /**
       * <code>map&lt;uint64, .protobuf_unittest.TestIntIntMap&gt; m_uint64 = 4;</code>
       */
      @java.lang.Override
      public protobuf_unittest.MapProto2Unittest.TestIntIntMap getMUint64OrThrow(
          long key) {
        
        java.util.Map<java.lang.Long, protobuf_unittest.MapProto2Unittest.TestIntIntMap> map =
            internalGetMUint64().getMap();
        if (!map.containsKey(key)) {
          throw new java.lang.IllegalArgumentException();
        }
        return map.get(key);
      }
      public Builder clearMUint64() {
        bitField0_ = (bitField0_ & ~0x00000008);
        internalGetMutableMUint64().getMutableMap()
            .clear();
        return this;
      }
      /**
       * <code>map&lt;uint64, .protobuf_unittest.TestIntIntMap&gt; m_uint64 = 4;</code>
       */
      public Builder removeMUint64(
          long key) {
        
        internalGetMutableMUint64().getMutableMap()
            .remove(key);
        return this;
      }
      /**
       * Use alternate mutation accessors instead.
       */
      @java.lang.Deprecated
      public java.util.Map<java.lang.Long, protobuf_unittest.MapProto2Unittest.TestIntIntMap>
          getMutableMUint64() {
        bitField0_ |= 0x00000008;
        return internalGetMutableMUint64().getMutableMap();
      }
      /**
       * <code>map&lt;uint64, .protobuf_unittest.TestIntIntMap&gt; m_uint64 = 4;</code>
       */
      public Builder putMUint64(
          long key,
          protobuf_unittest.MapProto2Unittest.TestIntIntMap value) {
        
        if (value == null) { throw new NullPointerException("map value"); }
        internalGetMutableMUint64().getMutableMap()
            .put(key, value);
        bitField0_ |= 0x00000008;
        return this;
      }
      /**
       * <code>map&lt;uint64, .protobuf_unittest.TestIntIntMap&gt; m_uint64 = 4;</code>
       */
      public Builder putAllMUint64(
          java.util.Map<java.lang.Long, protobuf_unittest.MapProto2Unittest.TestIntIntMap> values) {
        internalGetMutableMUint64().getMutableMap()
            .putAll(values);
        bitField0_ |= 0x00000008;
        return this;
      }

      private com.google.protobuf.MapField<
          java.lang.Integer, protobuf_unittest.MapProto2Unittest.TestIntIntMap> mSint32_;
      private com.google.protobuf.MapField<java.lang.Integer, protobuf_unittest.MapProto2Unittest.TestIntIntMap>
          internalGetMSint32() {
        if (mSint32_ == null) {
          return com.google.protobuf.MapField.emptyMapField(
              MSint32DefaultEntryHolder.defaultEntry);
        }
        return mSint32_;
      }
      private com.google.protobuf.MapField<java.lang.Integer, protobuf_unittest.MapProto2Unittest.TestIntIntMap>
          internalGetMutableMSint32() {
        if (mSint32_ == null) {
          mSint32_ = com.google.protobuf.MapField.newMapField(
              MSint32DefaultEntryHolder.defaultEntry);
        }
        if (!mSint32_.isMutable()) {
          mSint32_ = mSint32_.copy();
        }
        bitField0_ |= 0x00000010;
        onChanged();
        return mSint32_;
      }
      public int getMSint32Count() {
        return internalGetMSint32().getMap().size();
      }
      /**
       * <code>map&lt;sint32, .protobuf_unittest.TestIntIntMap&gt; m_sint32 = 5;</code>
       */
      @java.lang.Override
      public boolean containsMSint32(
          int key) {
        
        return internalGetMSint32().getMap().containsKey(key);
      }
      /**
       * Use {@link #getMSint32Map()} instead.
       */
      @java.lang.Override
      @java.lang.Deprecated
      public java.util.Map<java.lang.Integer, protobuf_unittest.MapProto2Unittest.TestIntIntMap> getMSint32() {
        return getMSint32Map();
      }
      /**
       * <code>map&lt;sint32, .protobuf_unittest.TestIntIntMap&gt; m_sint32 = 5;</code>
       */
      @java.lang.Override
      public java.util.Map<java.lang.Integer, protobuf_unittest.MapProto2Unittest.TestIntIntMap> getMSint32Map() {
        return internalGetMSint32().getMap();
      }
      /**
       * <code>map&lt;sint32, .protobuf_unittest.TestIntIntMap&gt; m_sint32 = 5;</code>
       */
      @java.lang.Override
      public /* nullable */
protobuf_unittest.MapProto2Unittest.TestIntIntMap getMSint32OrDefault(
          int key,
          /* nullable */
protobuf_unittest.MapProto2Unittest.TestIntIntMap defaultValue) {
        
        java.util.Map<java.lang.Integer, protobuf_unittest.MapProto2Unittest.TestIntIntMap> map =
            internalGetMSint32().getMap();
        return map.containsKey(key) ? map.get(key) : defaultValue;
      }
      /**
       * <code>map&lt;sint32, .protobuf_unittest.TestIntIntMap&gt; m_sint32 = 5;</code>
       */
      @java.lang.Override
      public protobuf_unittest.MapProto2Unittest.TestIntIntMap getMSint32OrThrow(
          int key) {
        
        java.util.Map<java.lang.Integer, protobuf_unittest.MapProto2Unittest.TestIntIntMap> map =
            internalGetMSint32().getMap();
        if (!map.containsKey(key)) {
          throw new java.lang.IllegalArgumentException();
        }
        return map.get(key);
      }
      public Builder clearMSint32() {
        bitField0_ = (bitField0_ & ~0x00000010);
        internalGetMutableMSint32().getMutableMap()
            .clear();
        return this;
      }
      /**
       * <code>map&lt;sint32, .protobuf_unittest.TestIntIntMap&gt; m_sint32 = 5;</code>
       */
      public Builder removeMSint32(
          int key) {
        
        internalGetMutableMSint32().getMutableMap()
            .remove(key);
        return this;
      }
      /**
       * Use alternate mutation accessors instead.
       */
      @java.lang.Deprecated
      public java.util.Map<java.lang.Integer, protobuf_unittest.MapProto2Unittest.TestIntIntMap>
          getMutableMSint32() {
        bitField0_ |= 0x00000010;
        return internalGetMutableMSint32().getMutableMap();
      }
      /**
       * <code>map&lt;sint32, .protobuf_unittest.TestIntIntMap&gt; m_sint32 = 5;</code>
       */
      public Builder putMSint32(
          int key,
          protobuf_unittest.MapProto2Unittest.TestIntIntMap value) {
        
        if (value == null) { throw new NullPointerException("map value"); }
        internalGetMutableMSint32().getMutableMap()
            .put(key, value);
        bitField0_ |= 0x00000010;
        return this;
      }
      /**
       * <code>map&lt;sint32, .protobuf_unittest.TestIntIntMap&gt; m_sint32 = 5;</code>
       */
      public Builder putAllMSint32(
          java.util.Map<java.lang.Integer, protobuf_unittest.MapProto2Unittest.TestIntIntMap> values) {
        internalGetMutableMSint32().getMutableMap()
            .putAll(values);
        bitField0_ |= 0x00000010;
        return this;
      }

      private com.google.protobuf.MapField<
          java.lang.Long, protobuf_unittest.MapProto2Unittest.TestIntIntMap> mSint64_;
      private com.google.protobuf.MapField<java.lang.Long, protobuf_unittest.MapProto2Unittest.TestIntIntMap>
          internalGetMSint64() {
        if (mSint64_ == null) {
          return com.google.protobuf.MapField.emptyMapField(
              MSint64DefaultEntryHolder.defaultEntry);
        }
        return mSint64_;
      }
      private com.google.protobuf.MapField<java.lang.Long, protobuf_unittest.MapProto2Unittest.TestIntIntMap>
          internalGetMutableMSint64() {
        if (mSint64_ == null) {
          mSint64_ = com.google.protobuf.MapField.newMapField(
              MSint64DefaultEntryHolder.defaultEntry);
        }
        if (!mSint64_.isMutable()) {
          mSint64_ = mSint64_.copy();
        }
        bitField0_ |= 0x00000020;
        onChanged();
        return mSint64_;
      }
      public int getMSint64Count() {
        return internalGetMSint64().getMap().size();
      }
      /**
       * <code>map&lt;sint64, .protobuf_unittest.TestIntIntMap&gt; m_sint64 = 6;</code>
       */
      @java.lang.Override
      public boolean containsMSint64(
          long key) {
        
        return internalGetMSint64().getMap().containsKey(key);
      }
      /**
       * Use {@link #getMSint64Map()} instead.
       */
      @java.lang.Override
      @java.lang.Deprecated
      public java.util.Map<java.lang.Long, protobuf_unittest.MapProto2Unittest.TestIntIntMap> getMSint64() {
        return getMSint64Map();
      }
      /**
       * <code>map&lt;sint64, .protobuf_unittest.TestIntIntMap&gt; m_sint64 = 6;</code>
       */
      @java.lang.Override
      public java.util.Map<java.lang.Long, protobuf_unittest.MapProto2Unittest.TestIntIntMap> getMSint64Map() {
        return internalGetMSint64().getMap();
      }
      /**
       * <code>map&lt;sint64, .protobuf_unittest.TestIntIntMap&gt; m_sint64 = 6;</code>
       */
      @java.lang.Override
      public /* nullable */
protobuf_unittest.MapProto2Unittest.TestIntIntMap getMSint64OrDefault(
          long key,
          /* nullable */
protobuf_unittest.MapProto2Unittest.TestIntIntMap defaultValue) {
        
        java.util.Map<java.lang.Long, protobuf_unittest.MapProto2Unittest.TestIntIntMap> map =
            internalGetMSint64().getMap();
        return map.containsKey(key) ? map.get(key) : defaultValue;
      }
      /**
       * <code>map&lt;sint64, .protobuf_unittest.TestIntIntMap&gt; m_sint64 = 6;</code>
       */
      @java.lang.Override
      public protobuf_unittest.MapProto2Unittest.TestIntIntMap getMSint64OrThrow(
          long key) {
        
        java.util.Map<java.lang.Long, protobuf_unittest.MapProto2Unittest.TestIntIntMap> map =
            internalGetMSint64().getMap();
        if (!map.containsKey(key)) {
          throw new java.lang.IllegalArgumentException();
        }
        return map.get(key);
      }
      public Builder clearMSint64() {
        bitField0_ = (bitField0_ & ~0x00000020);
        internalGetMutableMSint64().getMutableMap()
            .clear();
        return this;
      }
      /**
       * <code>map&lt;sint64, .protobuf_unittest.TestIntIntMap&gt; m_sint64 = 6;</code>
       */
      public Builder removeMSint64(
          long key) {
        
        internalGetMutableMSint64().getMutableMap()
            .remove(key);
        return this;
      }
      /**
       * Use alternate mutation accessors instead.
       */
      @java.lang.Deprecated
      public java.util.Map<java.lang.Long, protobuf_unittest.MapProto2Unittest.TestIntIntMap>
          getMutableMSint64() {
        bitField0_ |= 0x00000020;
        return internalGetMutableMSint64().getMutableMap();
      }
      /**
       * <code>map&lt;sint64, .protobuf_unittest.TestIntIntMap&gt; m_sint64 = 6;</code>
       */
      public Builder putMSint64(
          long key,
          protobuf_unittest.MapProto2Unittest.TestIntIntMap value) {
        
        if (value == null) { throw new NullPointerException("map value"); }
        internalGetMutableMSint64().getMutableMap()
            .put(key, value);
        bitField0_ |= 0x00000020;
        return this;
      }
      /**
       * <code>map&lt;sint64, .protobuf_unittest.TestIntIntMap&gt; m_sint64 = 6;</code>
       */
      public Builder putAllMSint64(
          java.util.Map<java.lang.Long, protobuf_unittest.MapProto2Unittest.TestIntIntMap> values) {
        internalGetMutableMSint64().getMutableMap()
            .putAll(values);
        bitField0_ |= 0x00000020;
        return this;
      }

      private com.google.protobuf.MapField<
          java.lang.Integer, protobuf_unittest.MapProto2Unittest.TestIntIntMap> mFixed32_;
      private com.google.protobuf.MapField<java.lang.Integer, protobuf_unittest.MapProto2Unittest.TestIntIntMap>
          internalGetMFixed32() {
        if (mFixed32_ == null) {
          return com.google.protobuf.MapField.emptyMapField(
              MFixed32DefaultEntryHolder.defaultEntry);
        }
        return mFixed32_;
      }
      private com.google.protobuf.MapField<java.lang.Integer, protobuf_unittest.MapProto2Unittest.TestIntIntMap>
          internalGetMutableMFixed32() {
        if (mFixed32_ == null) {
          mFixed32_ = com.google.protobuf.MapField.newMapField(
              MFixed32DefaultEntryHolder.defaultEntry);
        }
        if (!mFixed32_.isMutable()) {
          mFixed32_ = mFixed32_.copy();
        }
        bitField0_ |= 0x00000040;
        onChanged();
        return mFixed32_;
      }
      public int getMFixed32Count() {
        return internalGetMFixed32().getMap().size();
      }
      /**
       * <code>map&lt;fixed32, .protobuf_unittest.TestIntIntMap&gt; m_fixed32 = 7;</code>
       */
      @java.lang.Override
      public boolean containsMFixed32(
          int key) {
        
        return internalGetMFixed32().getMap().containsKey(key);
      }
      /**
       * Use {@link #getMFixed32Map()} instead.
       */
      @java.lang.Override
      @java.lang.Deprecated
      public java.util.Map<java.lang.Integer, protobuf_unittest.MapProto2Unittest.TestIntIntMap> getMFixed32() {
        return getMFixed32Map();
      }
      /**
       * <code>map&lt;fixed32, .protobuf_unittest.TestIntIntMap&gt; m_fixed32 = 7;</code>
       */
      @java.lang.Override
      public java.util.Map<java.lang.Integer, protobuf_unittest.MapProto2Unittest.TestIntIntMap> getMFixed32Map() {
        return internalGetMFixed32().getMap();
      }
      /**
       * <code>map&lt;fixed32, .protobuf_unittest.TestIntIntMap&gt; m_fixed32 = 7;</code>
       */
      @java.lang.Override
      public /* nullable */
protobuf_unittest.MapProto2Unittest.TestIntIntMap getMFixed32OrDefault(
          int key,
          /* nullable */
protobuf_unittest.MapProto2Unittest.TestIntIntMap defaultValue) {
        
        java.util.Map<java.lang.Integer, protobuf_unittest.MapProto2Unittest.TestIntIntMap> map =
            internalGetMFixed32().getMap();
        return map.containsKey(key) ? map.get(key) : defaultValue;
      }
      /**
       * <code>map&lt;fixed32, .protobuf_unittest.TestIntIntMap&gt; m_fixed32 = 7;</code>
       */
      @java.lang.Override
      public protobuf_unittest.MapProto2Unittest.TestIntIntMap getMFixed32OrThrow(
          int key) {
        
        java.util.Map<java.lang.Integer, protobuf_unittest.MapProto2Unittest.TestIntIntMap> map =
            internalGetMFixed32().getMap();
        if (!map.containsKey(key)) {
          throw new java.lang.IllegalArgumentException();
        }
        return map.get(key);
      }
      public Builder clearMFixed32() {
        bitField0_ = (bitField0_ & ~0x00000040);
        internalGetMutableMFixed32().getMutableMap()
            .clear();
        return this;
      }
      /**
       * <code>map&lt;fixed32, .protobuf_unittest.TestIntIntMap&gt; m_fixed32 = 7;</code>
       */
      public Builder removeMFixed32(
          int key) {
        
        internalGetMutableMFixed32().getMutableMap()
            .remove(key);
        return this;
      }
      /**
       * Use alternate mutation accessors instead.
       */
      @java.lang.Deprecated
      public java.util.Map<java.lang.Integer, protobuf_unittest.MapProto2Unittest.TestIntIntMap>
          getMutableMFixed32() {
        bitField0_ |= 0x00000040;
        return internalGetMutableMFixed32().getMutableMap();
      }
      /**
       * <code>map&lt;fixed32, .protobuf_unittest.TestIntIntMap&gt; m_fixed32 = 7;</code>
       */
      public Builder putMFixed32(
          int key,
          protobuf_unittest.MapProto2Unittest.TestIntIntMap value) {
        
        if (value == null) { throw new NullPointerException("map value"); }
        internalGetMutableMFixed32().getMutableMap()
            .put(key, value);
        bitField0_ |= 0x00000040;
        return this;
      }
      /**
       * <code>map&lt;fixed32, .protobuf_unittest.TestIntIntMap&gt; m_fixed32 = 7;</code>
       */
      public Builder putAllMFixed32(
          java.util.Map<java.lang.Integer, protobuf_unittest.MapProto2Unittest.TestIntIntMap> values) {
        internalGetMutableMFixed32().getMutableMap()
            .putAll(values);
        bitField0_ |= 0x00000040;
        return this;
      }

      private com.google.protobuf.MapField<
          java.lang.Long, protobuf_unittest.MapProto2Unittest.TestIntIntMap> mFixed64_;
      private com.google.protobuf.MapField<java.lang.Long, protobuf_unittest.MapProto2Unittest.TestIntIntMap>
          internalGetMFixed64() {
        if (mFixed64_ == null) {
          return com.google.protobuf.MapField.emptyMapField(
              MFixed64DefaultEntryHolder.defaultEntry);
        }
        return mFixed64_;
      }
      private com.google.protobuf.MapField<java.lang.Long, protobuf_unittest.MapProto2Unittest.TestIntIntMap>
          internalGetMutableMFixed64() {
        if (mFixed64_ == null) {
          mFixed64_ = com.google.protobuf.MapField.newMapField(
              MFixed64DefaultEntryHolder.defaultEntry);
        }
        if (!mFixed64_.isMutable()) {
          mFixed64_ = mFixed64_.copy();
        }
        bitField0_ |= 0x00000080;
        onChanged();
        return mFixed64_;
      }
      public int getMFixed64Count() {
        return internalGetMFixed64().getMap().size();
      }
      /**
       * <code>map&lt;fixed64, .protobuf_unittest.TestIntIntMap&gt; m_fixed64 = 8;</code>
       */
      @java.lang.Override
      public boolean containsMFixed64(
          long key) {
        
        return internalGetMFixed64().getMap().containsKey(key);
      }
      /**
       * Use {@link #getMFixed64Map()} instead.
       */
      @java.lang.Override
      @java.lang.Deprecated
      public java.util.Map<java.lang.Long, protobuf_unittest.MapProto2Unittest.TestIntIntMap> getMFixed64() {
        return getMFixed64Map();
      }
      /**
       * <code>map&lt;fixed64, .protobuf_unittest.TestIntIntMap&gt; m_fixed64 = 8;</code>
       */
      @java.lang.Override
      public java.util.Map<java.lang.Long, protobuf_unittest.MapProto2Unittest.TestIntIntMap> getMFixed64Map() {
        return internalGetMFixed64().getMap();
      }
      /**
       * <code>map&lt;fixed64, .protobuf_unittest.TestIntIntMap&gt; m_fixed64 = 8;</code>
       */
      @java.lang.Override
      public /* nullable */
protobuf_unittest.MapProto2Unittest.TestIntIntMap getMFixed64OrDefault(
          long key,
          /* nullable */
protobuf_unittest.MapProto2Unittest.TestIntIntMap defaultValue) {
        
        java.util.Map<java.lang.Long, protobuf_unittest.MapProto2Unittest.TestIntIntMap> map =
            internalGetMFixed64().getMap();
        return map.containsKey(key) ? map.get(key) : defaultValue;
      }
      /**
       * <code>map&lt;fixed64, .protobuf_unittest.TestIntIntMap&gt; m_fixed64 = 8;</code>
       */
      @java.lang.Override
      public protobuf_unittest.MapProto2Unittest.TestIntIntMap getMFixed64OrThrow(
          long key) {
        
        java.util.Map<java.lang.Long, protobuf_unittest.MapProto2Unittest.TestIntIntMap> map =
            internalGetMFixed64().getMap();
        if (!map.containsKey(key)) {
          throw new java.lang.IllegalArgumentException();
        }
        return map.get(key);
      }
      public Builder clearMFixed64() {
        bitField0_ = (bitField0_ & ~0x00000080);
        internalGetMutableMFixed64().getMutableMap()
            .clear();
        return this;
      }
      /**
       * <code>map&lt;fixed64, .protobuf_unittest.TestIntIntMap&gt; m_fixed64 = 8;</code>
       */
      public Builder removeMFixed64(
          long key) {
        
        internalGetMutableMFixed64().getMutableMap()
            .remove(key);
        return this;
      }
      /**
       * Use alternate mutation accessors instead.
       */
      @java.lang.Deprecated
      public java.util.Map<java.lang.Long, protobuf_unittest.MapProto2Unittest.TestIntIntMap>
          getMutableMFixed64() {
        bitField0_ |= 0x00000080;
        return internalGetMutableMFixed64().getMutableMap();
      }
      /**
       * <code>map&lt;fixed64, .protobuf_unittest.TestIntIntMap&gt; m_fixed64 = 8;</code>
       */
      public Builder putMFixed64(
          long key,
          protobuf_unittest.MapProto2Unittest.TestIntIntMap value) {
        
        if (value == null) { throw new NullPointerException("map value"); }
        internalGetMutableMFixed64().getMutableMap()
            .put(key, value);
        bitField0_ |= 0x00000080;
        return this;
      }
      /**
       * <code>map&lt;fixed64, .protobuf_unittest.TestIntIntMap&gt; m_fixed64 = 8;</code>
       */
      public Builder putAllMFixed64(
          java.util.Map<java.lang.Long, protobuf_unittest.MapProto2Unittest.TestIntIntMap> values) {
        internalGetMutableMFixed64().getMutableMap()
            .putAll(values);
        bitField0_ |= 0x00000080;
        return this;
      }

      private com.google.protobuf.MapField<
          java.lang.Integer, protobuf_unittest.MapProto2Unittest.TestIntIntMap> mSfixed32_;
      private com.google.protobuf.MapField<java.lang.Integer, protobuf_unittest.MapProto2Unittest.TestIntIntMap>
          internalGetMSfixed32() {
        if (mSfixed32_ == null) {
          return com.google.protobuf.MapField.emptyMapField(
              MSfixed32DefaultEntryHolder.defaultEntry);
        }
        return mSfixed32_;
      }
      private com.google.protobuf.MapField<java.lang.Integer, protobuf_unittest.MapProto2Unittest.TestIntIntMap>
          internalGetMutableMSfixed32() {
        if (mSfixed32_ == null) {
          mSfixed32_ = com.google.protobuf.MapField.newMapField(
              MSfixed32DefaultEntryHolder.defaultEntry);
        }
        if (!mSfixed32_.isMutable()) {
          mSfixed32_ = mSfixed32_.copy();
        }
        bitField0_ |= 0x00000100;
        onChanged();
        return mSfixed32_;
      }
      public int getMSfixed32Count() {
        return internalGetMSfixed32().getMap().size();
      }
      /**
       * <code>map&lt;sfixed32, .protobuf_unittest.TestIntIntMap&gt; m_sfixed32 = 9;</code>
       */
      @java.lang.Override
      public boolean containsMSfixed32(
          int key) {
        
        return internalGetMSfixed32().getMap().containsKey(key);
      }
      /**
       * Use {@link #getMSfixed32Map()} instead.
       */
      @java.lang.Override
      @java.lang.Deprecated
      public java.util.Map<java.lang.Integer, protobuf_unittest.MapProto2Unittest.TestIntIntMap> getMSfixed32() {
        return getMSfixed32Map();
      }
      /**
       * <code>map&lt;sfixed32, .protobuf_unittest.TestIntIntMap&gt; m_sfixed32 = 9;</code>
       */
      @java.lang.Override
      public java.util.Map<java.lang.Integer, protobuf_unittest.MapProto2Unittest.TestIntIntMap> getMSfixed32Map() {
        return internalGetMSfixed32().getMap();
      }
      /**
       * <code>map&lt;sfixed32, .protobuf_unittest.TestIntIntMap&gt; m_sfixed32 = 9;</code>
       */
      @java.lang.Override
      public /* nullable */
protobuf_unittest.MapProto2Unittest.TestIntIntMap getMSfixed32OrDefault(
          int key,
          /* nullable */
protobuf_unittest.MapProto2Unittest.TestIntIntMap defaultValue) {
        
        java.util.Map<java.lang.Integer, protobuf_unittest.MapProto2Unittest.TestIntIntMap> map =
            internalGetMSfixed32().getMap();
        return map.containsKey(key) ? map.get(key) : defaultValue;
      }
      /**
       * <code>map&lt;sfixed32, .protobuf_unittest.TestIntIntMap&gt; m_sfixed32 = 9;</code>
       */
      @java.lang.Override
      public protobuf_unittest.MapProto2Unittest.TestIntIntMap getMSfixed32OrThrow(
          int key) {
        
        java.util.Map<java.lang.Integer, protobuf_unittest.MapProto2Unittest.TestIntIntMap> map =
            internalGetMSfixed32().getMap();
        if (!map.containsKey(key)) {
          throw new java.lang.IllegalArgumentException();
        }
        return map.get(key);
      }
      public Builder clearMSfixed32() {
        bitField0_ = (bitField0_ & ~0x00000100);
        internalGetMutableMSfixed32().getMutableMap()
            .clear();
        return this;
      }
      /**
       * <code>map&lt;sfixed32, .protobuf_unittest.TestIntIntMap&gt; m_sfixed32 = 9;</code>
       */
      public Builder removeMSfixed32(
          int key) {
        
        internalGetMutableMSfixed32().getMutableMap()
            .remove(key);
        return this;
      }
      /**
       * Use alternate mutation accessors instead.
       */
      @java.lang.Deprecated
      public java.util.Map<java.lang.Integer, protobuf_unittest.MapProto2Unittest.TestIntIntMap>
          getMutableMSfixed32() {
        bitField0_ |= 0x00000100;
        return internalGetMutableMSfixed32().getMutableMap();
      }
      /**
       * <code>map&lt;sfixed32, .protobuf_unittest.TestIntIntMap&gt; m_sfixed32 = 9;</code>
       */
      public Builder putMSfixed32(
          int key,
          protobuf_unittest.MapProto2Unittest.TestIntIntMap value) {
        
        if (value == null) { throw new NullPointerException("map value"); }
        internalGetMutableMSfixed32().getMutableMap()
            .put(key, value);
        bitField0_ |= 0x00000100;
        return this;
      }
      /**
       * <code>map&lt;sfixed32, .protobuf_unittest.TestIntIntMap&gt; m_sfixed32 = 9;</code>
       */
      public Builder putAllMSfixed32(
          java.util.Map<java.lang.Integer, protobuf_unittest.MapProto2Unittest.TestIntIntMap> values) {
        internalGetMutableMSfixed32().getMutableMap()
            .putAll(values);
        bitField0_ |= 0x00000100;
        return this;
      }

      private com.google.protobuf.MapField<
          java.lang.Long, protobuf_unittest.MapProto2Unittest.TestIntIntMap> mSfixed64_;
      private com.google.protobuf.MapField<java.lang.Long, protobuf_unittest.MapProto2Unittest.TestIntIntMap>
          internalGetMSfixed64() {
        if (mSfixed64_ == null) {
          return com.google.protobuf.MapField.emptyMapField(
              MSfixed64DefaultEntryHolder.defaultEntry);
        }
        return mSfixed64_;
      }
      private com.google.protobuf.MapField<java.lang.Long, protobuf_unittest.MapProto2Unittest.TestIntIntMap>
          internalGetMutableMSfixed64() {
        if (mSfixed64_ == null) {
          mSfixed64_ = com.google.protobuf.MapField.newMapField(
              MSfixed64DefaultEntryHolder.defaultEntry);
        }
        if (!mSfixed64_.isMutable()) {
          mSfixed64_ = mSfixed64_.copy();
        }
        bitField0_ |= 0x00000200;
        onChanged();
        return mSfixed64_;
      }
      public int getMSfixed64Count() {
        return internalGetMSfixed64().getMap().size();
      }
      /**
       * <code>map&lt;sfixed64, .protobuf_unittest.TestIntIntMap&gt; m_sfixed64 = 10;</code>
       */
      @java.lang.Override
      public boolean containsMSfixed64(
          long key) {
        
        return internalGetMSfixed64().getMap().containsKey(key);
      }
      /**
       * Use {@link #getMSfixed64Map()} instead.
       */
      @java.lang.Override
      @java.lang.Deprecated
      public java.util.Map<java.lang.Long, protobuf_unittest.MapProto2Unittest.TestIntIntMap> getMSfixed64() {
        return getMSfixed64Map();
      }
      /**
       * <code>map&lt;sfixed64, .protobuf_unittest.TestIntIntMap&gt; m_sfixed64 = 10;</code>
       */
      @java.lang.Override
      public java.util.Map<java.lang.Long, protobuf_unittest.MapProto2Unittest.TestIntIntMap> getMSfixed64Map() {
        return internalGetMSfixed64().getMap();
      }
      /**
       * <code>map&lt;sfixed64, .protobuf_unittest.TestIntIntMap&gt; m_sfixed64 = 10;</code>
       */
      @java.lang.Override
      public /* nullable */
protobuf_unittest.MapProto2Unittest.TestIntIntMap getMSfixed64OrDefault(
          long key,
          /* nullable */
protobuf_unittest.MapProto2Unittest.TestIntIntMap defaultValue) {
        
        java.util.Map<java.lang.Long, protobuf_unittest.MapProto2Unittest.TestIntIntMap> map =
            internalGetMSfixed64().getMap();
        return map.containsKey(key) ? map.get(key) : defaultValue;
      }
      /**
       * <code>map&lt;sfixed64, .protobuf_unittest.TestIntIntMap&gt; m_sfixed64 = 10;</code>
       */
      @java.lang.Override
      public protobuf_unittest.MapProto2Unittest.TestIntIntMap getMSfixed64OrThrow(
          long key) {
        
        java.util.Map<java.lang.Long, protobuf_unittest.MapProto2Unittest.TestIntIntMap> map =
            internalGetMSfixed64().getMap();
        if (!map.containsKey(key)) {
          throw new java.lang.IllegalArgumentException();
        }
        return map.get(key);
      }
      public Builder clearMSfixed64() {
        bitField0_ = (bitField0_ & ~0x00000200);
        internalGetMutableMSfixed64().getMutableMap()
            .clear();
        return this;
      }
      /**
       * <code>map&lt;sfixed64, .protobuf_unittest.TestIntIntMap&gt; m_sfixed64 = 10;</code>
       */
      public Builder removeMSfixed64(
          long key) {
        
        internalGetMutableMSfixed64().getMutableMap()
            .remove(key);
        return this;
      }
      /**
       * Use alternate mutation accessors instead.
       */
      @java.lang.Deprecated
      public java.util.Map<java.lang.Long, protobuf_unittest.MapProto2Unittest.TestIntIntMap>
          getMutableMSfixed64() {
        bitField0_ |= 0x00000200;
        return internalGetMutableMSfixed64().getMutableMap();
      }
      /**
       * <code>map&lt;sfixed64, .protobuf_unittest.TestIntIntMap&gt; m_sfixed64 = 10;</code>
       */
      public Builder putMSfixed64(
          long key,
          protobuf_unittest.MapProto2Unittest.TestIntIntMap value) {
        
        if (value == null) { throw new NullPointerException("map value"); }
        internalGetMutableMSfixed64().getMutableMap()
            .put(key, value);
        bitField0_ |= 0x00000200;
        return this;
      }
      /**
       * <code>map&lt;sfixed64, .protobuf_unittest.TestIntIntMap&gt; m_sfixed64 = 10;</code>
       */
      public Builder putAllMSfixed64(
          java.util.Map<java.lang.Long, protobuf_unittest.MapProto2Unittest.TestIntIntMap> values) {
        internalGetMutableMSfixed64().getMutableMap()
            .putAll(values);
        bitField0_ |= 0x00000200;
        return this;
      }

      private com.google.protobuf.MapField<
          java.lang.Boolean, protobuf_unittest.MapProto2Unittest.TestIntIntMap> mBool_;
      private com.google.protobuf.MapField<java.lang.Boolean, protobuf_unittest.MapProto2Unittest.TestIntIntMap>
          internalGetMBool() {
        if (mBool_ == null) {
          return com.google.protobuf.MapField.emptyMapField(
              MBoolDefaultEntryHolder.defaultEntry);
        }
        return mBool_;
      }
      private com.google.protobuf.MapField<java.lang.Boolean, protobuf_unittest.MapProto2Unittest.TestIntIntMap>
          internalGetMutableMBool() {
        if (mBool_ == null) {
          mBool_ = com.google.protobuf.MapField.newMapField(
              MBoolDefaultEntryHolder.defaultEntry);
        }
        if (!mBool_.isMutable()) {
          mBool_ = mBool_.copy();
        }
        bitField0_ |= 0x00000400;
        onChanged();
        return mBool_;
      }
      public int getMBoolCount() {
        return internalGetMBool().getMap().size();
      }
      /**
       * <code>map&lt;bool, .protobuf_unittest.TestIntIntMap&gt; m_bool = 11;</code>
       */
      @java.lang.Override
      public boolean containsMBool(
          boolean key) {
        
        return internalGetMBool().getMap().containsKey(key);
      }
      /**
       * Use {@link #getMBoolMap()} instead.
       */
      @java.lang.Override
      @java.lang.Deprecated
      public java.util.Map<java.lang.Boolean, protobuf_unittest.MapProto2Unittest.TestIntIntMap> getMBool() {
        return getMBoolMap();
      }
      /**
       * <code>map&lt;bool, .protobuf_unittest.TestIntIntMap&gt; m_bool = 11;</code>
       */
      @java.lang.Override
      public java.util.Map<java.lang.Boolean, protobuf_unittest.MapProto2Unittest.TestIntIntMap> getMBoolMap() {
        return internalGetMBool().getMap();
      }
      /**
       * <code>map&lt;bool, .protobuf_unittest.TestIntIntMap&gt; m_bool = 11;</code>
       */
      @java.lang.Override
      public /* nullable */
protobuf_unittest.MapProto2Unittest.TestIntIntMap getMBoolOrDefault(
          boolean key,
          /* nullable */
protobuf_unittest.MapProto2Unittest.TestIntIntMap defaultValue) {
        
        java.util.Map<java.lang.Boolean, protobuf_unittest.MapProto2Unittest.TestIntIntMap> map =
            internalGetMBool().getMap();
        return map.containsKey(key) ? map.get(key) : defaultValue;
      }
      /**
       * <code>map&lt;bool, .protobuf_unittest.TestIntIntMap&gt; m_bool = 11;</code>
       */
      @java.lang.Override
      public protobuf_unittest.MapProto2Unittest.TestIntIntMap getMBoolOrThrow(
          boolean key) {
        
        java.util.Map<java.lang.Boolean, protobuf_unittest.MapProto2Unittest.TestIntIntMap> map =
            internalGetMBool().getMap();
        if (!map.containsKey(key)) {
          throw new java.lang.IllegalArgumentException();
        }
        return map.get(key);
      }
      public Builder clearMBool() {
        bitField0_ = (bitField0_ & ~0x00000400);
        internalGetMutableMBool().getMutableMap()
            .clear();
        return this;
      }
      /**
       * <code>map&lt;bool, .protobuf_unittest.TestIntIntMap&gt; m_bool = 11;</code>
       */
      public Builder removeMBool(
          boolean key) {
        
        internalGetMutableMBool().getMutableMap()
            .remove(key);
        return this;
      }
      /**
       * Use alternate mutation accessors instead.
       */
      @java.lang.Deprecated
      public java.util.Map<java.lang.Boolean, protobuf_unittest.MapProto2Unittest.TestIntIntMap>
          getMutableMBool() {
        bitField0_ |= 0x00000400;
        return internalGetMutableMBool().getMutableMap();
      }
      /**
       * <code>map&lt;bool, .protobuf_unittest.TestIntIntMap&gt; m_bool = 11;</code>
       */
      public Builder putMBool(
          boolean key,
          protobuf_unittest.MapProto2Unittest.TestIntIntMap value) {
        
        if (value == null) { throw new NullPointerException("map value"); }
        internalGetMutableMBool().getMutableMap()
            .put(key, value);
        bitField0_ |= 0x00000400;
        return this;
      }
      /**
       * <code>map&lt;bool, .protobuf_unittest.TestIntIntMap&gt; m_bool = 11;</code>
       */
      public Builder putAllMBool(
          java.util.Map<java.lang.Boolean, protobuf_unittest.MapProto2Unittest.TestIntIntMap> values) {
        internalGetMutableMBool().getMutableMap()
            .putAll(values);
        bitField0_ |= 0x00000400;
        return this;
      }

      private com.google.protobuf.MapField<
          java.lang.String, protobuf_unittest.MapProto2Unittest.TestIntIntMap> mString_;
      private com.google.protobuf.MapField<java.lang.String, protobuf_unittest.MapProto2Unittest.TestIntIntMap>
          internalGetMString() {
        if (mString_ == null) {
          return com.google.protobuf.MapField.emptyMapField(
              MStringDefaultEntryHolder.defaultEntry);
        }
        return mString_;
      }
      private com.google.protobuf.MapField<java.lang.String, protobuf_unittest.MapProto2Unittest.TestIntIntMap>
          internalGetMutableMString() {
        if (mString_ == null) {
          mString_ = com.google.protobuf.MapField.newMapField(
              MStringDefaultEntryHolder.defaultEntry);
        }
        if (!mString_.isMutable()) {
          mString_ = mString_.copy();
        }
        bitField0_ |= 0x00000800;
        onChanged();
        return mString_;
      }
      public int getMStringCount() {
        return internalGetMString().getMap().size();
      }
      /**
       * <code>map&lt;string, .protobuf_unittest.TestIntIntMap&gt; m_string = 12;</code>
       */
      @java.lang.Override
      public boolean containsMString(
          java.lang.String key) {
        if (key == null) { throw new NullPointerException("map key"); }
        return internalGetMString().getMap().containsKey(key);
      }
      /**
       * Use {@link #getMStringMap()} instead.
       */
      @java.lang.Override
      @java.lang.Deprecated
      public java.util.Map<java.lang.String, protobuf_unittest.MapProto2Unittest.TestIntIntMap> getMString() {
        return getMStringMap();
      }
      /**
       * <code>map&lt;string, .protobuf_unittest.TestIntIntMap&gt; m_string = 12;</code>
       */
      @java.lang.Override
      public java.util.Map<java.lang.String, protobuf_unittest.MapProto2Unittest.TestIntIntMap> getMStringMap() {
        return internalGetMString().getMap();
      }
      /**
       * <code>map&lt;string, .protobuf_unittest.TestIntIntMap&gt; m_string = 12;</code>
       */
      @java.lang.Override
      public /* nullable */
protobuf_unittest.MapProto2Unittest.TestIntIntMap getMStringOrDefault(
          java.lang.String key,
          /* nullable */
protobuf_unittest.MapProto2Unittest.TestIntIntMap defaultValue) {
        if (key == null) { throw new NullPointerException("map key"); }
        java.util.Map<java.lang.String, protobuf_unittest.MapProto2Unittest.TestIntIntMap> map =
            internalGetMString().getMap();
        return map.containsKey(key) ? map.get(key) : defaultValue;
      }
      /**
       * <code>map&lt;string, .protobuf_unittest.TestIntIntMap&gt; m_string = 12;</code>
       */
      @java.lang.Override
      public protobuf_unittest.MapProto2Unittest.TestIntIntMap getMStringOrThrow(
          java.lang.String key) {
        if (key == null) { throw new NullPointerException("map key"); }
        java.util.Map<java.lang.String, protobuf_unittest.MapProto2Unittest.TestIntIntMap> map =
            internalGetMString().getMap();
        if (!map.containsKey(key)) {
          throw new java.lang.IllegalArgumentException();
        }
        return map.get(key);
      }
      public Builder clearMString() {
        bitField0_ = (bitField0_ & ~0x00000800);
        internalGetMutableMString().getMutableMap()
            .clear();
        return this;
      }
      /**
       * <code>map&lt;string, .protobuf_unittest.TestIntIntMap&gt; m_string = 12;</code>
       */
      public Builder removeMString(
          java.lang.String key) {
        if (key == null) { throw new NullPointerException("map key"); }
        internalGetMutableMString().getMutableMap()
            .remove(key);
        return this;
      }
      /**
       * Use alternate mutation accessors instead.
       */
      @java.lang.Deprecated
      public java.util.Map<java.lang.String, protobuf_unittest.MapProto2Unittest.TestIntIntMap>
          getMutableMString() {
        bitField0_ |= 0x00000800;
        return internalGetMutableMString().getMutableMap();
      }
      /**
       * <code>map&lt;string, .protobuf_unittest.TestIntIntMap&gt; m_string = 12;</code>
       */
      public Builder putMString(
          java.lang.String key,
          protobuf_unittest.MapProto2Unittest.TestIntIntMap value) {
        if (key == null) { throw new NullPointerException("map key"); }
        if (value == null) { throw new NullPointerException("map value"); }
        internalGetMutableMString().getMutableMap()
            .put(key, value);
        bitField0_ |= 0x00000800;
        return this;
      }
      /**
       * <code>map&lt;string, .protobuf_unittest.TestIntIntMap&gt; m_string = 12;</code>
       */
      public Builder putAllMString(
          java.util.Map<java.lang.String, protobuf_unittest.MapProto2Unittest.TestIntIntMap> values) {
        internalGetMutableMString().getMutableMap()
            .putAll(values);
        bitField0_ |= 0x00000800;
        return this;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:protobuf_unittest.TestMaps)
    }

    // @@protoc_insertion_point(class_scope:protobuf_unittest.TestMaps)
    private static final protobuf_unittest.MapProto2Unittest.TestMaps DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new protobuf_unittest.MapProto2Unittest.TestMaps();
    }

    public static protobuf_unittest.MapProto2Unittest.TestMaps getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    @java.lang.Deprecated public static final com.google.protobuf.Parser<TestMaps>
        PARSER = new com.google.protobuf.AbstractParser<TestMaps>() {
      @java.lang.Override
      public TestMaps parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        Builder builder = newBuilder();
        try {
          builder.mergeFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.setUnfinishedMessage(builder.buildPartial());
        } catch (com.google.protobuf.UninitializedMessageException e) {
          throw e.asInvalidProtocolBufferException().setUnfinishedMessage(builder.buildPartial());
        } catch (java.io.IOException e) {
          throw new com.google.protobuf.InvalidProtocolBufferException(e)
              .setUnfinishedMessage(builder.buildPartial());
        }
        return builder.buildPartial();
      }
    };

    public static com.google.protobuf.Parser<TestMaps> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<TestMaps> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public protobuf_unittest.MapProto2Unittest.TestMaps getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface TestSubmessageMapsOrBuilder extends
      // @@protoc_insertion_point(interface_extends:protobuf_unittest.TestSubmessageMaps)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>optional .protobuf_unittest.TestMaps m = 1;</code>
     * @return Whether the m field is set.
     */
    boolean hasM();
    /**
     * <code>optional .protobuf_unittest.TestMaps m = 1;</code>
     * @return The m.
     */
    protobuf_unittest.MapProto2Unittest.TestMaps getM();
    /**
     * <code>optional .protobuf_unittest.TestMaps m = 1;</code>
     */
    protobuf_unittest.MapProto2Unittest.TestMapsOrBuilder getMOrBuilder();
  }
  /**
   * <pre>
   * Test maps in submessages.
   * </pre>
   *
   * Protobuf type {@code protobuf_unittest.TestSubmessageMaps}
   */
  public static final class TestSubmessageMaps extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:protobuf_unittest.TestSubmessageMaps)
      TestSubmessageMapsOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use TestSubmessageMaps.newBuilder() to construct.
    private TestSubmessageMaps(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private TestSubmessageMaps() {
    }

    @java.lang.Override
    @SuppressWarnings({"unused"})
    protected java.lang.Object newInstance(
        UnusedPrivateParameter unused) {
      return new TestSubmessageMaps();
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return protobuf_unittest.MapProto2Unittest.internal_static_protobuf_unittest_TestSubmessageMaps_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return protobuf_unittest.MapProto2Unittest.internal_static_protobuf_unittest_TestSubmessageMaps_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              protobuf_unittest.MapProto2Unittest.TestSubmessageMaps.class, protobuf_unittest.MapProto2Unittest.TestSubmessageMaps.Builder.class);
    }

    private int bitField0_;
    public static final int M_FIELD_NUMBER = 1;
    private protobuf_unittest.MapProto2Unittest.TestMaps m_;
    /**
     * <code>optional .protobuf_unittest.TestMaps m = 1;</code>
     * @return Whether the m field is set.
     */
    @java.lang.Override
    public boolean hasM() {
      return ((bitField0_ & 0x00000001) != 0);
    }
    /**
     * <code>optional .protobuf_unittest.TestMaps m = 1;</code>
     * @return The m.
     */
    @java.lang.Override
    public protobuf_unittest.MapProto2Unittest.TestMaps getM() {
      return m_ == null ? protobuf_unittest.MapProto2Unittest.TestMaps.getDefaultInstance() : m_;
    }
    /**
     * <code>optional .protobuf_unittest.TestMaps m = 1;</code>
     */
    @java.lang.Override
    public protobuf_unittest.MapProto2Unittest.TestMapsOrBuilder getMOrBuilder() {
      return m_ == null ? protobuf_unittest.MapProto2Unittest.TestMaps.getDefaultInstance() : m_;
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (((bitField0_ & 0x00000001) != 0)) {
        output.writeMessage(1, getM());
      }
      getUnknownFields().writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, getM());
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof protobuf_unittest.MapProto2Unittest.TestSubmessageMaps)) {
        return super.equals(obj);
      }
      protobuf_unittest.MapProto2Unittest.TestSubmessageMaps other = (protobuf_unittest.MapProto2Unittest.TestSubmessageMaps) obj;

      if (hasM() != other.hasM()) return false;
      if (hasM()) {
        if (!getM()
            .equals(other.getM())) return false;
      }
      if (!getUnknownFields().equals(other.getUnknownFields())) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      if (hasM()) {
        hash = (37 * hash) + M_FIELD_NUMBER;
        hash = (53 * hash) + getM().hashCode();
      }
      hash = (29 * hash) + getUnknownFields().hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static protobuf_unittest.MapProto2Unittest.TestSubmessageMaps parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static protobuf_unittest.MapProto2Unittest.TestSubmessageMaps parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static protobuf_unittest.MapProto2Unittest.TestSubmessageMaps parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static protobuf_unittest.MapProto2Unittest.TestSubmessageMaps parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static protobuf_unittest.MapProto2Unittest.TestSubmessageMaps parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static protobuf_unittest.MapProto2Unittest.TestSubmessageMaps parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static protobuf_unittest.MapProto2Unittest.TestSubmessageMaps parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static protobuf_unittest.MapProto2Unittest.TestSubmessageMaps parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static protobuf_unittest.MapProto2Unittest.TestSubmessageMaps parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static protobuf_unittest.MapProto2Unittest.TestSubmessageMaps parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static protobuf_unittest.MapProto2Unittest.TestSubmessageMaps parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static protobuf_unittest.MapProto2Unittest.TestSubmessageMaps parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(protobuf_unittest.MapProto2Unittest.TestSubmessageMaps prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * <pre>
     * Test maps in submessages.
     * </pre>
     *
     * Protobuf type {@code protobuf_unittest.TestSubmessageMaps}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:protobuf_unittest.TestSubmessageMaps)
        protobuf_unittest.MapProto2Unittest.TestSubmessageMapsOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return protobuf_unittest.MapProto2Unittest.internal_static_protobuf_unittest_TestSubmessageMaps_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return protobuf_unittest.MapProto2Unittest.internal_static_protobuf_unittest_TestSubmessageMaps_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                protobuf_unittest.MapProto2Unittest.TestSubmessageMaps.class, protobuf_unittest.MapProto2Unittest.TestSubmessageMaps.Builder.class);
      }

      // Construct using protobuf_unittest.MapProto2Unittest.TestSubmessageMaps.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
          getMFieldBuilder();
        }
      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        bitField0_ = 0;
        m_ = null;
        if (mBuilder_ != null) {
          mBuilder_.dispose();
          mBuilder_ = null;
        }
        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return protobuf_unittest.MapProto2Unittest.internal_static_protobuf_unittest_TestSubmessageMaps_descriptor;
      }

      @java.lang.Override
      public protobuf_unittest.MapProto2Unittest.TestSubmessageMaps getDefaultInstanceForType() {
        return protobuf_unittest.MapProto2Unittest.TestSubmessageMaps.getDefaultInstance();
      }

      @java.lang.Override
      public protobuf_unittest.MapProto2Unittest.TestSubmessageMaps build() {
        protobuf_unittest.MapProto2Unittest.TestSubmessageMaps result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public protobuf_unittest.MapProto2Unittest.TestSubmessageMaps buildPartial() {
        protobuf_unittest.MapProto2Unittest.TestSubmessageMaps result = new protobuf_unittest.MapProto2Unittest.TestSubmessageMaps(this);
        if (bitField0_ != 0) { buildPartial0(result); }
        onBuilt();
        return result;
      }

      private void buildPartial0(protobuf_unittest.MapProto2Unittest.TestSubmessageMaps result) {
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) != 0)) {
          result.m_ = mBuilder_ == null
              ? m_
              : mBuilder_.build();
          to_bitField0_ |= 0x00000001;
        }
        result.bitField0_ |= to_bitField0_;
      }

      @java.lang.Override
      public Builder clone() {
        return super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof protobuf_unittest.MapProto2Unittest.TestSubmessageMaps) {
          return mergeFrom((protobuf_unittest.MapProto2Unittest.TestSubmessageMaps)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(protobuf_unittest.MapProto2Unittest.TestSubmessageMaps other) {
        if (other == protobuf_unittest.MapProto2Unittest.TestSubmessageMaps.getDefaultInstance()) return this;
        if (other.hasM()) {
          mergeM(other.getM());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        if (extensionRegistry == null) {
          throw new java.lang.NullPointerException();
        }
        try {
          boolean done = false;
          while (!done) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                done = true;
                break;
              case 10: {
                input.readMessage(
                    getMFieldBuilder().getBuilder(),
                    extensionRegistry);
                bitField0_ |= 0x00000001;
                break;
              } // case 10
              default: {
                if (!super.parseUnknownField(input, extensionRegistry, tag)) {
                  done = true; // was an endgroup tag
                }
                break;
              } // default:
            } // switch (tag)
          } // while (!done)
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.unwrapIOException();
        } finally {
          onChanged();
        } // finally
        return this;
      }
      private int bitField0_;

      private protobuf_unittest.MapProto2Unittest.TestMaps m_;
      private com.google.protobuf.SingleFieldBuilderV3<
          protobuf_unittest.MapProto2Unittest.TestMaps, protobuf_unittest.MapProto2Unittest.TestMaps.Builder, protobuf_unittest.MapProto2Unittest.TestMapsOrBuilder> mBuilder_;
      /**
       * <code>optional .protobuf_unittest.TestMaps m = 1;</code>
       * @return Whether the m field is set.
       */
      public boolean hasM() {
        return ((bitField0_ & 0x00000001) != 0);
      }
      /**
       * <code>optional .protobuf_unittest.TestMaps m = 1;</code>
       * @return The m.
       */
      public protobuf_unittest.MapProto2Unittest.TestMaps getM() {
        if (mBuilder_ == null) {
          return m_ == null ? protobuf_unittest.MapProto2Unittest.TestMaps.getDefaultInstance() : m_;
        } else {
          return mBuilder_.getMessage();
        }
      }
      /**
       * <code>optional .protobuf_unittest.TestMaps m = 1;</code>
       */
      public Builder setM(protobuf_unittest.MapProto2Unittest.TestMaps value) {
        if (mBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          m_ = value;
        } else {
          mBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000001;
        onChanged();
        return this;
      }
      /**
       * <code>optional .protobuf_unittest.TestMaps m = 1;</code>
       */
      public Builder setM(
          protobuf_unittest.MapProto2Unittest.TestMaps.Builder builderForValue) {
        if (mBuilder_ == null) {
          m_ = builderForValue.build();
        } else {
          mBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000001;
        onChanged();
        return this;
      }
      /**
       * <code>optional .protobuf_unittest.TestMaps m = 1;</code>
       */
      public Builder mergeM(protobuf_unittest.MapProto2Unittest.TestMaps value) {
        if (mBuilder_ == null) {
          if (((bitField0_ & 0x00000001) != 0) &&
            m_ != null &&
            m_ != protobuf_unittest.MapProto2Unittest.TestMaps.getDefaultInstance()) {
            getMBuilder().mergeFrom(value);
          } else {
            m_ = value;
          }
        } else {
          mBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x00000001;
        onChanged();
        return this;
      }
      /**
       * <code>optional .protobuf_unittest.TestMaps m = 1;</code>
       */
      public Builder clearM() {
        bitField0_ = (bitField0_ & ~0x00000001);
        m_ = null;
        if (mBuilder_ != null) {
          mBuilder_.dispose();
          mBuilder_ = null;
        }
        onChanged();
        return this;
      }
      /**
       * <code>optional .protobuf_unittest.TestMaps m = 1;</code>
       */
      public protobuf_unittest.MapProto2Unittest.TestMaps.Builder getMBuilder() {
        bitField0_ |= 0x00000001;
        onChanged();
        return getMFieldBuilder().getBuilder();
      }
      /**
       * <code>optional .protobuf_unittest.TestMaps m = 1;</code>
       */
      public protobuf_unittest.MapProto2Unittest.TestMapsOrBuilder getMOrBuilder() {
        if (mBuilder_ != null) {
          return mBuilder_.getMessageOrBuilder();
        } else {
          return m_ == null ?
              protobuf_unittest.MapProto2Unittest.TestMaps.getDefaultInstance() : m_;
        }
      }
      /**
       * <code>optional .protobuf_unittest.TestMaps m = 1;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          protobuf_unittest.MapProto2Unittest.TestMaps, protobuf_unittest.MapProto2Unittest.TestMaps.Builder, protobuf_unittest.MapProto2Unittest.TestMapsOrBuilder> 
          getMFieldBuilder() {
        if (mBuilder_ == null) {
          mBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              protobuf_unittest.MapProto2Unittest.TestMaps, protobuf_unittest.MapProto2Unittest.TestMaps.Builder, protobuf_unittest.MapProto2Unittest.TestMapsOrBuilder>(
                  getM(),
                  getParentForChildren(),
                  isClean());
          m_ = null;
        }
        return mBuilder_;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:protobuf_unittest.TestSubmessageMaps)
    }

    // @@protoc_insertion_point(class_scope:protobuf_unittest.TestSubmessageMaps)
    private static final protobuf_unittest.MapProto2Unittest.TestSubmessageMaps DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new protobuf_unittest.MapProto2Unittest.TestSubmessageMaps();
    }

    public static protobuf_unittest.MapProto2Unittest.TestSubmessageMaps getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    @java.lang.Deprecated public static final com.google.protobuf.Parser<TestSubmessageMaps>
        PARSER = new com.google.protobuf.AbstractParser<TestSubmessageMaps>() {
      @java.lang.Override
      public TestSubmessageMaps parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        Builder builder = newBuilder();
        try {
          builder.mergeFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.setUnfinishedMessage(builder.buildPartial());
        } catch (com.google.protobuf.UninitializedMessageException e) {
          throw e.asInvalidProtocolBufferException().setUnfinishedMessage(builder.buildPartial());
        } catch (java.io.IOException e) {
          throw new com.google.protobuf.InvalidProtocolBufferException(e)
              .setUnfinishedMessage(builder.buildPartial());
        }
        return builder.buildPartial();
      }
    };

    public static com.google.protobuf.Parser<TestSubmessageMaps> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<TestSubmessageMaps> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public protobuf_unittest.MapProto2Unittest.TestSubmessageMaps getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_protobuf_unittest_TestEnumMap_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_protobuf_unittest_TestEnumMap_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_protobuf_unittest_TestEnumMap_KnownMapFieldEntry_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_protobuf_unittest_TestEnumMap_KnownMapFieldEntry_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_protobuf_unittest_TestEnumMap_UnknownMapFieldEntry_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_protobuf_unittest_TestEnumMap_UnknownMapFieldEntry_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_protobuf_unittest_TestEnumMapPlusExtra_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_protobuf_unittest_TestEnumMapPlusExtra_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_protobuf_unittest_TestEnumMapPlusExtra_KnownMapFieldEntry_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_protobuf_unittest_TestEnumMapPlusExtra_KnownMapFieldEntry_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_protobuf_unittest_TestEnumMapPlusExtra_UnknownMapFieldEntry_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_protobuf_unittest_TestEnumMapPlusExtra_UnknownMapFieldEntry_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_protobuf_unittest_TestImportEnumMap_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_protobuf_unittest_TestImportEnumMap_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_protobuf_unittest_TestImportEnumMap_ImportEnumAmpEntry_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_protobuf_unittest_TestImportEnumMap_ImportEnumAmpEntry_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_protobuf_unittest_TestIntIntMap_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_protobuf_unittest_TestIntIntMap_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_protobuf_unittest_TestIntIntMap_MEntry_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_protobuf_unittest_TestIntIntMap_MEntry_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_protobuf_unittest_TestMaps_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_protobuf_unittest_TestMaps_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_protobuf_unittest_TestMaps_MInt32Entry_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_protobuf_unittest_TestMaps_MInt32Entry_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_protobuf_unittest_TestMaps_MInt64Entry_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_protobuf_unittest_TestMaps_MInt64Entry_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_protobuf_unittest_TestMaps_MUint32Entry_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_protobuf_unittest_TestMaps_MUint32Entry_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_protobuf_unittest_TestMaps_MUint64Entry_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_protobuf_unittest_TestMaps_MUint64Entry_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_protobuf_unittest_TestMaps_MSint32Entry_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_protobuf_unittest_TestMaps_MSint32Entry_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_protobuf_unittest_TestMaps_MSint64Entry_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_protobuf_unittest_TestMaps_MSint64Entry_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_protobuf_unittest_TestMaps_MFixed32Entry_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_protobuf_unittest_TestMaps_MFixed32Entry_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_protobuf_unittest_TestMaps_MFixed64Entry_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_protobuf_unittest_TestMaps_MFixed64Entry_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_protobuf_unittest_TestMaps_MSfixed32Entry_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_protobuf_unittest_TestMaps_MSfixed32Entry_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_protobuf_unittest_TestMaps_MSfixed64Entry_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_protobuf_unittest_TestMaps_MSfixed64Entry_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_protobuf_unittest_TestMaps_MBoolEntry_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_protobuf_unittest_TestMaps_MBoolEntry_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_protobuf_unittest_TestMaps_MStringEntry_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_protobuf_unittest_TestMaps_MStringEntry_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_protobuf_unittest_TestSubmessageMaps_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_protobuf_unittest_TestSubmessageMaps_fieldAccessorTable;

  public static com.google.protobuf.Descriptors.FileDescriptor
      getDescriptor() {
    return descriptor;
  }
  private static  com.google.protobuf.Descriptors.FileDescriptor
      descriptor;
  static {
    java.lang.String[] descriptorData = {
      "\n)google/protobuf/map_proto2_unittest.pr" +
      "oto\022\021protobuf_unittest\032%google/protobuf/" +
      "unittest_import.proto\"\333\002\n\013TestEnumMap\022J\n" +
      "\017known_map_field\030e \003(\01321.protobuf_unitte" +
      "st.TestEnumMap.KnownMapFieldEntry\022N\n\021unk" +
      "nown_map_field\030f \003(\01323.protobuf_unittest" +
      ".TestEnumMap.UnknownMapFieldEntry\032V\n\022Kno" +
      "wnMapFieldEntry\022\013\n\003key\030\001 \001(\005\022/\n\005value\030\002 " +
      "\001(\0162 .protobuf_unittest.Proto2MapEnum:\0028" +
      "\001\032X\n\024UnknownMapFieldEntry\022\013\n\003key\030\001 \001(\005\022/" +
      "\n\005value\030\002 \001(\0162 .protobuf_unittest.Proto2" +
      "MapEnum:\0028\001\"\210\003\n\024TestEnumMapPlusExtra\022S\n\017" +
      "known_map_field\030e \003(\0132:.protobuf_unittes" +
      "t.TestEnumMapPlusExtra.KnownMapFieldEntr" +
      "y\022W\n\021unknown_map_field\030f \003(\0132<.protobuf_" +
      "unittest.TestEnumMapPlusExtra.UnknownMap" +
      "FieldEntry\032_\n\022KnownMapFieldEntry\022\013\n\003key\030" +
      "\001 \001(\005\0228\n\005value\030\002 \001(\0162).protobuf_unittest" +
      ".Proto2MapEnumPlusExtra:\0028\001\032a\n\024UnknownMa" +
      "pFieldEntry\022\013\n\003key\030\001 \001(\005\0228\n\005value\030\002 \001(\0162" +
      ").protobuf_unittest.Proto2MapEnumPlusExt" +
      "ra:\0028\001\"\307\001\n\021TestImportEnumMap\022P\n\017import_e" +
      "num_amp\030\001 \003(\01327.protobuf_unittest.TestIm" +
      "portEnumMap.ImportEnumAmpEntry\032`\n\022Import" +
      "EnumAmpEntry\022\013\n\003key\030\001 \001(\005\0229\n\005value\030\002 \001(\016" +
      "2*.protobuf_unittest_import.ImportEnumFo" +
      "rMap:\0028\001\"m\n\rTestIntIntMap\0222\n\001m\030\001 \003(\0132\'.p" +
      "rotobuf_unittest.TestIntIntMap.MEntry\032(\n" +
      "\006MEntry\022\013\n\003key\030\001 \001(\005\022\r\n\005value\030\002 \001(\005:\0028\001\"" +
      "\270\r\n\010TestMaps\0228\n\007m_int32\030\001 \003(\0132\'.protobuf" +
      "_unittest.TestMaps.MInt32Entry\0228\n\007m_int6" +
      "4\030\002 \003(\0132\'.protobuf_unittest.TestMaps.MIn" +
      "t64Entry\022:\n\010m_uint32\030\003 \003(\0132(.protobuf_un" +
      "ittest.TestMaps.MUint32Entry\022:\n\010m_uint64" +
      "\030\004 \003(\0132(.protobuf_unittest.TestMaps.MUin" +
      "t64Entry\022:\n\010m_sint32\030\005 \003(\0132(.protobuf_un" +
      "ittest.TestMaps.MSint32Entry\022:\n\010m_sint64" +
      "\030\006 \003(\0132(.protobuf_unittest.TestMaps.MSin" +
      "t64Entry\022<\n\tm_fixed32\030\007 \003(\0132).protobuf_u" +
      "nittest.TestMaps.MFixed32Entry\022<\n\tm_fixe" +
      "d64\030\010 \003(\0132).protobuf_unittest.TestMaps.M" +
      "Fixed64Entry\022>\n\nm_sfixed32\030\t \003(\0132*.proto" +
      "buf_unittest.TestMaps.MSfixed32Entry\022>\n\n" +
      "m_sfixed64\030\n \003(\0132*.protobuf_unittest.Tes" +
      "tMaps.MSfixed64Entry\0226\n\006m_bool\030\013 \003(\0132&.p" +
      "rotobuf_unittest.TestMaps.MBoolEntry\022:\n\010" +
      "m_string\030\014 \003(\0132(.protobuf_unittest.TestM" +
      "aps.MStringEntry\032O\n\013MInt32Entry\022\013\n\003key\030\001" +
      " \001(\005\022/\n\005value\030\002 \001(\0132 .protobuf_unittest." +
      "TestIntIntMap:\0028\001\032O\n\013MInt64Entry\022\013\n\003key\030" +
      "\001 \001(\003\022/\n\005value\030\002 \001(\0132 .protobuf_unittest" +
      ".TestIntIntMap:\0028\001\032P\n\014MUint32Entry\022\013\n\003ke" +
      "y\030\001 \001(\r\022/\n\005value\030\002 \001(\0132 .protobuf_unitte" +
      "st.TestIntIntMap:\0028\001\032P\n\014MUint64Entry\022\013\n\003" +
      "key\030\001 \001(\004\022/\n\005value\030\002 \001(\0132 .protobuf_unit" +
      "test.TestIntIntMap:\0028\001\032P\n\014MSint32Entry\022\013" +
      "\n\003key\030\001 \001(\021\022/\n\005value\030\002 \001(\0132 .protobuf_un" +
      "ittest.TestIntIntMap:\0028\001\032P\n\014MSint64Entry" +
      "\022\013\n\003key\030\001 \001(\022\022/\n\005value\030\002 \001(\0132 .protobuf_" +
      "unittest.TestIntIntMap:\0028\001\032Q\n\rMFixed32En" +
      "try\022\013\n\003key\030\001 \001(\007\022/\n\005value\030\002 \001(\0132 .protob" +
      "uf_unittest.TestIntIntMap:\0028\001\032Q\n\rMFixed6" +
      "4Entry\022\013\n\003key\030\001 \001(\006\022/\n\005value\030\002 \001(\0132 .pro" +
      "tobuf_unittest.TestIntIntMap:\0028\001\032R\n\016MSfi" +
      "xed32Entry\022\013\n\003key\030\001 \001(\017\022/\n\005value\030\002 \001(\0132 " +
      ".protobuf_unittest.TestIntIntMap:\0028\001\032R\n\016" +
      "MSfixed64Entry\022\013\n\003key\030\001 \001(\020\022/\n\005value\030\002 \001" +
      "(\0132 .protobuf_unittest.TestIntIntMap:\0028\001" +
      "\032N\n\nMBoolEntry\022\013\n\003key\030\001 \001(\010\022/\n\005value\030\002 \001" +
      "(\0132 .protobuf_unittest.TestIntIntMap:\0028\001" +
      "\032P\n\014MStringEntry\022\013\n\003key\030\001 \001(\t\022/\n\005value\030\002" +
      " \001(\0132 .protobuf_unittest.TestIntIntMap:\002" +
      "8\001\"<\n\022TestSubmessageMaps\022&\n\001m\030\001 \001(\0132\033.pr" +
      "otobuf_unittest.TestMaps*Z\n\rProto2MapEnu" +
      "m\022\027\n\023PROTO2_MAP_ENUM_FOO\020\000\022\027\n\023PROTO2_MAP" +
      "_ENUM_BAR\020\001\022\027\n\023PROTO2_MAP_ENUM_BAZ\020\002*\206\001\n" +
      "\026Proto2MapEnumPlusExtra\022\031\n\025E_PROTO2_MAP_" +
      "ENUM_FOO\020\000\022\031\n\025E_PROTO2_MAP_ENUM_BAR\020\001\022\031\n" +
      "\025E_PROTO2_MAP_ENUM_BAZ\020\002\022\033\n\027E_PROTO2_MAP" +
      "_ENUM_EXTRA\020\003B\003\370\001\001"
    };
    descriptor = com.google.protobuf.Descriptors.FileDescriptor
      .internalBuildGeneratedFileFrom(descriptorData,
        new com.google.protobuf.Descriptors.FileDescriptor[] {
          com.google.protobuf.test.UnittestImport.getDescriptor(),
        });
    internal_static_protobuf_unittest_TestEnumMap_descriptor =
      getDescriptor().getMessageTypes().get(0);
    internal_static_protobuf_unittest_TestEnumMap_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_protobuf_unittest_TestEnumMap_descriptor,
        new java.lang.String[] { "KnownMapField", "UnknownMapField", });
    internal_static_protobuf_unittest_TestEnumMap_KnownMapFieldEntry_descriptor =
      internal_static_protobuf_unittest_TestEnumMap_descriptor.getNestedTypes().get(0);
    internal_static_protobuf_unittest_TestEnumMap_KnownMapFieldEntry_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_protobuf_unittest_TestEnumMap_KnownMapFieldEntry_descriptor,
        new java.lang.String[] { "Key", "Value", });
    internal_static_protobuf_unittest_TestEnumMap_UnknownMapFieldEntry_descriptor =
      internal_static_protobuf_unittest_TestEnumMap_descriptor.getNestedTypes().get(1);
    internal_static_protobuf_unittest_TestEnumMap_UnknownMapFieldEntry_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_protobuf_unittest_TestEnumMap_UnknownMapFieldEntry_descriptor,
        new java.lang.String[] { "Key", "Value", });
    internal_static_protobuf_unittest_TestEnumMapPlusExtra_descriptor =
      getDescriptor().getMessageTypes().get(1);
    internal_static_protobuf_unittest_TestEnumMapPlusExtra_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_protobuf_unittest_TestEnumMapPlusExtra_descriptor,
        new java.lang.String[] { "KnownMapField", "UnknownMapField", });
    internal_static_protobuf_unittest_TestEnumMapPlusExtra_KnownMapFieldEntry_descriptor =
      internal_static_protobuf_unittest_TestEnumMapPlusExtra_descriptor.getNestedTypes().get(0);
    internal_static_protobuf_unittest_TestEnumMapPlusExtra_KnownMapFieldEntry_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_protobuf_unittest_TestEnumMapPlusExtra_KnownMapFieldEntry_descriptor,
        new java.lang.String[] { "Key", "Value", });
    internal_static_protobuf_unittest_TestEnumMapPlusExtra_UnknownMapFieldEntry_descriptor =
      internal_static_protobuf_unittest_TestEnumMapPlusExtra_descriptor.getNestedTypes().get(1);
    internal_static_protobuf_unittest_TestEnumMapPlusExtra_UnknownMapFieldEntry_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_protobuf_unittest_TestEnumMapPlusExtra_UnknownMapFieldEntry_descriptor,
        new java.lang.String[] { "Key", "Value", });
    internal_static_protobuf_unittest_TestImportEnumMap_descriptor =
      getDescriptor().getMessageTypes().get(2);
    internal_static_protobuf_unittest_TestImportEnumMap_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_protobuf_unittest_TestImportEnumMap_descriptor,
        new java.lang.String[] { "ImportEnumAmp", });
    internal_static_protobuf_unittest_TestImportEnumMap_ImportEnumAmpEntry_descriptor =
      internal_static_protobuf_unittest_TestImportEnumMap_descriptor.getNestedTypes().get(0);
    internal_static_protobuf_unittest_TestImportEnumMap_ImportEnumAmpEntry_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_protobuf_unittest_TestImportEnumMap_ImportEnumAmpEntry_descriptor,
        new java.lang.String[] { "Key", "Value", });
    internal_static_protobuf_unittest_TestIntIntMap_descriptor =
      getDescriptor().getMessageTypes().get(3);
    internal_static_protobuf_unittest_TestIntIntMap_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_protobuf_unittest_TestIntIntMap_descriptor,
        new java.lang.String[] { "M", });
    internal_static_protobuf_unittest_TestIntIntMap_MEntry_descriptor =
      internal_static_protobuf_unittest_TestIntIntMap_descriptor.getNestedTypes().get(0);
    internal_static_protobuf_unittest_TestIntIntMap_MEntry_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_protobuf_unittest_TestIntIntMap_MEntry_descriptor,
        new java.lang.String[] { "Key", "Value", });
    internal_static_protobuf_unittest_TestMaps_descriptor =
      getDescriptor().getMessageTypes().get(4);
    internal_static_protobuf_unittest_TestMaps_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_protobuf_unittest_TestMaps_descriptor,
        new java.lang.String[] { "MInt32", "MInt64", "MUint32", "MUint64", "MSint32", "MSint64", "MFixed32", "MFixed64", "MSfixed32", "MSfixed64", "MBool", "MString", });
    internal_static_protobuf_unittest_TestMaps_MInt32Entry_descriptor =
      internal_static_protobuf_unittest_TestMaps_descriptor.getNestedTypes().get(0);
    internal_static_protobuf_unittest_TestMaps_MInt32Entry_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_protobuf_unittest_TestMaps_MInt32Entry_descriptor,
        new java.lang.String[] { "Key", "Value", });
    internal_static_protobuf_unittest_TestMaps_MInt64Entry_descriptor =
      internal_static_protobuf_unittest_TestMaps_descriptor.getNestedTypes().get(1);
    internal_static_protobuf_unittest_TestMaps_MInt64Entry_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_protobuf_unittest_TestMaps_MInt64Entry_descriptor,
        new java.lang.String[] { "Key", "Value", });
    internal_static_protobuf_unittest_TestMaps_MUint32Entry_descriptor =
      internal_static_protobuf_unittest_TestMaps_descriptor.getNestedTypes().get(2);
    internal_static_protobuf_unittest_TestMaps_MUint32Entry_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_protobuf_unittest_TestMaps_MUint32Entry_descriptor,
        new java.lang.String[] { "Key", "Value", });
    internal_static_protobuf_unittest_TestMaps_MUint64Entry_descriptor =
      internal_static_protobuf_unittest_TestMaps_descriptor.getNestedTypes().get(3);
    internal_static_protobuf_unittest_TestMaps_MUint64Entry_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_protobuf_unittest_TestMaps_MUint64Entry_descriptor,
        new java.lang.String[] { "Key", "Value", });
    internal_static_protobuf_unittest_TestMaps_MSint32Entry_descriptor =
      internal_static_protobuf_unittest_TestMaps_descriptor.getNestedTypes().get(4);
    internal_static_protobuf_unittest_TestMaps_MSint32Entry_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_protobuf_unittest_TestMaps_MSint32Entry_descriptor,
        new java.lang.String[] { "Key", "Value", });
    internal_static_protobuf_unittest_TestMaps_MSint64Entry_descriptor =
      internal_static_protobuf_unittest_TestMaps_descriptor.getNestedTypes().get(5);
    internal_static_protobuf_unittest_TestMaps_MSint64Entry_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_protobuf_unittest_TestMaps_MSint64Entry_descriptor,
        new java.lang.String[] { "Key", "Value", });
    internal_static_protobuf_unittest_TestMaps_MFixed32Entry_descriptor =
      internal_static_protobuf_unittest_TestMaps_descriptor.getNestedTypes().get(6);
    internal_static_protobuf_unittest_TestMaps_MFixed32Entry_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_protobuf_unittest_TestMaps_MFixed32Entry_descriptor,
        new java.lang.String[] { "Key", "Value", });
    internal_static_protobuf_unittest_TestMaps_MFixed64Entry_descriptor =
      internal_static_protobuf_unittest_TestMaps_descriptor.getNestedTypes().get(7);
    internal_static_protobuf_unittest_TestMaps_MFixed64Entry_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_protobuf_unittest_TestMaps_MFixed64Entry_descriptor,
        new java.lang.String[] { "Key", "Value", });
    internal_static_protobuf_unittest_TestMaps_MSfixed32Entry_descriptor =
      internal_static_protobuf_unittest_TestMaps_descriptor.getNestedTypes().get(8);
    internal_static_protobuf_unittest_TestMaps_MSfixed32Entry_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_protobuf_unittest_TestMaps_MSfixed32Entry_descriptor,
        new java.lang.String[] { "Key", "Value", });
    internal_static_protobuf_unittest_TestMaps_MSfixed64Entry_descriptor =
      internal_static_protobuf_unittest_TestMaps_descriptor.getNestedTypes().get(9);
    internal_static_protobuf_unittest_TestMaps_MSfixed64Entry_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_protobuf_unittest_TestMaps_MSfixed64Entry_descriptor,
        new java.lang.String[] { "Key", "Value", });
    internal_static_protobuf_unittest_TestMaps_MBoolEntry_descriptor =
      internal_static_protobuf_unittest_TestMaps_descriptor.getNestedTypes().get(10);
    internal_static_protobuf_unittest_TestMaps_MBoolEntry_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_protobuf_unittest_TestMaps_MBoolEntry_descriptor,
        new java.lang.String[] { "Key", "Value", });
    internal_static_protobuf_unittest_TestMaps_MStringEntry_descriptor =
      internal_static_protobuf_unittest_TestMaps_descriptor.getNestedTypes().get(11);
    internal_static_protobuf_unittest_TestMaps_MStringEntry_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_protobuf_unittest_TestMaps_MStringEntry_descriptor,
        new java.lang.String[] { "Key", "Value", });
    internal_static_protobuf_unittest_TestSubmessageMaps_descriptor =
      getDescriptor().getMessageTypes().get(5);
    internal_static_protobuf_unittest_TestSubmessageMaps_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_protobuf_unittest_TestSubmessageMaps_descriptor,
        new java.lang.String[] { "M", });
    com.google.protobuf.test.UnittestImport.getDescriptor();
  }

  // @@protoc_insertion_point(outer_class_scope)
}
