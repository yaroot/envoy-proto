// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: google/protobuf/map_lite_unittest.proto

package protobuf_unittest;

public final class MapLiteUnittest {
  private MapLiteUnittest() {}
  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistryLite registry) {
    registry.add(protobuf_unittest.MapLiteUnittest.TestRequiredLite.single);
  }

  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistry registry) {
    registerAllExtensions(
        (com.google.protobuf.ExtensionRegistryLite) registry);
  }
  /**
   * Protobuf enum {@code protobuf_unittest.Proto2MapEnumLite}
   */
  public enum Proto2MapEnumLite
      implements com.google.protobuf.ProtocolMessageEnum {
    /**
     * <code>PROTO2_MAP_ENUM_FOO_LITE = 0;</code>
     */
    PROTO2_MAP_ENUM_FOO_LITE(0),
    /**
     * <code>PROTO2_MAP_ENUM_BAR_LITE = 1;</code>
     */
    PROTO2_MAP_ENUM_BAR_LITE(1),
    /**
     * <code>PROTO2_MAP_ENUM_BAZ_LITE = 2;</code>
     */
    PROTO2_MAP_ENUM_BAZ_LITE(2),
    ;

    /**
     * <code>PROTO2_MAP_ENUM_FOO_LITE = 0;</code>
     */
    public static final int PROTO2_MAP_ENUM_FOO_LITE_VALUE = 0;
    /**
     * <code>PROTO2_MAP_ENUM_BAR_LITE = 1;</code>
     */
    public static final int PROTO2_MAP_ENUM_BAR_LITE_VALUE = 1;
    /**
     * <code>PROTO2_MAP_ENUM_BAZ_LITE = 2;</code>
     */
    public static final int PROTO2_MAP_ENUM_BAZ_LITE_VALUE = 2;


    public final int getNumber() {
      return value;
    }

    /**
     * @param value The numeric wire value of the corresponding enum entry.
     * @return The enum associated with the given numeric wire value.
     * @deprecated Use {@link #forNumber(int)} instead.
     */
    @java.lang.Deprecated
    public static Proto2MapEnumLite valueOf(int value) {
      return forNumber(value);
    }

    /**
     * @param value The numeric wire value of the corresponding enum entry.
     * @return The enum associated with the given numeric wire value.
     */
    public static Proto2MapEnumLite forNumber(int value) {
      switch (value) {
        case 0: return PROTO2_MAP_ENUM_FOO_LITE;
        case 1: return PROTO2_MAP_ENUM_BAR_LITE;
        case 2: return PROTO2_MAP_ENUM_BAZ_LITE;
        default: return null;
      }
    }

    public static com.google.protobuf.Internal.EnumLiteMap<Proto2MapEnumLite>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static final com.google.protobuf.Internal.EnumLiteMap<
        Proto2MapEnumLite> internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<Proto2MapEnumLite>() {
            public Proto2MapEnumLite findValueByNumber(int number) {
              return Proto2MapEnumLite.forNumber(number);
            }
          };

    public final com.google.protobuf.Descriptors.EnumValueDescriptor
        getValueDescriptor() {
      return getDescriptor().getValues().get(ordinal());
    }
    public final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptorForType() {
      return getDescriptor();
    }
    public static final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptor() {
      return protobuf_unittest.MapLiteUnittest.getDescriptor().getEnumTypes().get(0);
    }

    private static final Proto2MapEnumLite[] VALUES = values();

    public static Proto2MapEnumLite valueOf(
        com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
      if (desc.getType() != getDescriptor()) {
        throw new java.lang.IllegalArgumentException(
          "EnumValueDescriptor is not for this type.");
      }
      return VALUES[desc.getIndex()];
    }

    private final int value;

    private Proto2MapEnumLite(int value) {
      this.value = value;
    }

    // @@protoc_insertion_point(enum_scope:protobuf_unittest.Proto2MapEnumLite)
  }

  /**
   * Protobuf enum {@code protobuf_unittest.Proto2MapEnumPlusExtraLite}
   */
  public enum Proto2MapEnumPlusExtraLite
      implements com.google.protobuf.ProtocolMessageEnum {
    /**
     * <code>E_PROTO2_MAP_ENUM_FOO_LITE = 0;</code>
     */
    E_PROTO2_MAP_ENUM_FOO_LITE(0),
    /**
     * <code>E_PROTO2_MAP_ENUM_BAR_LITE = 1;</code>
     */
    E_PROTO2_MAP_ENUM_BAR_LITE(1),
    /**
     * <code>E_PROTO2_MAP_ENUM_BAZ_LITE = 2;</code>
     */
    E_PROTO2_MAP_ENUM_BAZ_LITE(2),
    /**
     * <code>E_PROTO2_MAP_ENUM_EXTRA_LITE = 3;</code>
     */
    E_PROTO2_MAP_ENUM_EXTRA_LITE(3),
    ;

    /**
     * <code>E_PROTO2_MAP_ENUM_FOO_LITE = 0;</code>
     */
    public static final int E_PROTO2_MAP_ENUM_FOO_LITE_VALUE = 0;
    /**
     * <code>E_PROTO2_MAP_ENUM_BAR_LITE = 1;</code>
     */
    public static final int E_PROTO2_MAP_ENUM_BAR_LITE_VALUE = 1;
    /**
     * <code>E_PROTO2_MAP_ENUM_BAZ_LITE = 2;</code>
     */
    public static final int E_PROTO2_MAP_ENUM_BAZ_LITE_VALUE = 2;
    /**
     * <code>E_PROTO2_MAP_ENUM_EXTRA_LITE = 3;</code>
     */
    public static final int E_PROTO2_MAP_ENUM_EXTRA_LITE_VALUE = 3;


    public final int getNumber() {
      return value;
    }

    /**
     * @param value The numeric wire value of the corresponding enum entry.
     * @return The enum associated with the given numeric wire value.
     * @deprecated Use {@link #forNumber(int)} instead.
     */
    @java.lang.Deprecated
    public static Proto2MapEnumPlusExtraLite valueOf(int value) {
      return forNumber(value);
    }

    /**
     * @param value The numeric wire value of the corresponding enum entry.
     * @return The enum associated with the given numeric wire value.
     */
    public static Proto2MapEnumPlusExtraLite forNumber(int value) {
      switch (value) {
        case 0: return E_PROTO2_MAP_ENUM_FOO_LITE;
        case 1: return E_PROTO2_MAP_ENUM_BAR_LITE;
        case 2: return E_PROTO2_MAP_ENUM_BAZ_LITE;
        case 3: return E_PROTO2_MAP_ENUM_EXTRA_LITE;
        default: return null;
      }
    }

    public static com.google.protobuf.Internal.EnumLiteMap<Proto2MapEnumPlusExtraLite>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static final com.google.protobuf.Internal.EnumLiteMap<
        Proto2MapEnumPlusExtraLite> internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<Proto2MapEnumPlusExtraLite>() {
            public Proto2MapEnumPlusExtraLite findValueByNumber(int number) {
              return Proto2MapEnumPlusExtraLite.forNumber(number);
            }
          };

    public final com.google.protobuf.Descriptors.EnumValueDescriptor
        getValueDescriptor() {
      return getDescriptor().getValues().get(ordinal());
    }
    public final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptorForType() {
      return getDescriptor();
    }
    public static final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptor() {
      return protobuf_unittest.MapLiteUnittest.getDescriptor().getEnumTypes().get(1);
    }

    private static final Proto2MapEnumPlusExtraLite[] VALUES = values();

    public static Proto2MapEnumPlusExtraLite valueOf(
        com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
      if (desc.getType() != getDescriptor()) {
        throw new java.lang.IllegalArgumentException(
          "EnumValueDescriptor is not for this type.");
      }
      return VALUES[desc.getIndex()];
    }

    private final int value;

    private Proto2MapEnumPlusExtraLite(int value) {
      this.value = value;
    }

    // @@protoc_insertion_point(enum_scope:protobuf_unittest.Proto2MapEnumPlusExtraLite)
  }

  /**
   * Protobuf enum {@code protobuf_unittest.MapEnumLite}
   */
  public enum MapEnumLite
      implements com.google.protobuf.ProtocolMessageEnum {
    /**
     * <code>MAP_ENUM_FOO_LITE = 0;</code>
     */
    MAP_ENUM_FOO_LITE(0),
    /**
     * <code>MAP_ENUM_BAR_LITE = 1;</code>
     */
    MAP_ENUM_BAR_LITE(1),
    /**
     * <code>MAP_ENUM_BAZ_LITE = 2;</code>
     */
    MAP_ENUM_BAZ_LITE(2),
    ;

    /**
     * <code>MAP_ENUM_FOO_LITE = 0;</code>
     */
    public static final int MAP_ENUM_FOO_LITE_VALUE = 0;
    /**
     * <code>MAP_ENUM_BAR_LITE = 1;</code>
     */
    public static final int MAP_ENUM_BAR_LITE_VALUE = 1;
    /**
     * <code>MAP_ENUM_BAZ_LITE = 2;</code>
     */
    public static final int MAP_ENUM_BAZ_LITE_VALUE = 2;


    public final int getNumber() {
      return value;
    }

    /**
     * @param value The numeric wire value of the corresponding enum entry.
     * @return The enum associated with the given numeric wire value.
     * @deprecated Use {@link #forNumber(int)} instead.
     */
    @java.lang.Deprecated
    public static MapEnumLite valueOf(int value) {
      return forNumber(value);
    }

    /**
     * @param value The numeric wire value of the corresponding enum entry.
     * @return The enum associated with the given numeric wire value.
     */
    public static MapEnumLite forNumber(int value) {
      switch (value) {
        case 0: return MAP_ENUM_FOO_LITE;
        case 1: return MAP_ENUM_BAR_LITE;
        case 2: return MAP_ENUM_BAZ_LITE;
        default: return null;
      }
    }

    public static com.google.protobuf.Internal.EnumLiteMap<MapEnumLite>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static final com.google.protobuf.Internal.EnumLiteMap<
        MapEnumLite> internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<MapEnumLite>() {
            public MapEnumLite findValueByNumber(int number) {
              return MapEnumLite.forNumber(number);
            }
          };

    public final com.google.protobuf.Descriptors.EnumValueDescriptor
        getValueDescriptor() {
      return getDescriptor().getValues().get(ordinal());
    }
    public final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptorForType() {
      return getDescriptor();
    }
    public static final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptor() {
      return protobuf_unittest.MapLiteUnittest.getDescriptor().getEnumTypes().get(2);
    }

    private static final MapEnumLite[] VALUES = values();

    public static MapEnumLite valueOf(
        com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
      if (desc.getType() != getDescriptor()) {
        throw new java.lang.IllegalArgumentException(
          "EnumValueDescriptor is not for this type.");
      }
      return VALUES[desc.getIndex()];
    }

    private final int value;

    private MapEnumLite(int value) {
      this.value = value;
    }

    // @@protoc_insertion_point(enum_scope:protobuf_unittest.MapEnumLite)
  }

  public interface TestMapLiteOrBuilder extends
      // @@protoc_insertion_point(interface_extends:protobuf_unittest.TestMapLite)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>map&lt;int32, int32&gt; map_int32_int32 = 1;</code>
     */
    int getMapInt32Int32Count();
    /**
     * <code>map&lt;int32, int32&gt; map_int32_int32 = 1;</code>
     */
    boolean containsMapInt32Int32(
        int key);
    /**
     * Use {@link #getMapInt32Int32Map()} instead.
     */
    @java.lang.Deprecated
    java.util.Map<java.lang.Integer, java.lang.Integer>
    getMapInt32Int32();
    /**
     * <code>map&lt;int32, int32&gt; map_int32_int32 = 1;</code>
     */
    java.util.Map<java.lang.Integer, java.lang.Integer>
    getMapInt32Int32Map();
    /**
     * <code>map&lt;int32, int32&gt; map_int32_int32 = 1;</code>
     */

    int getMapInt32Int32OrDefault(
        int key,
        int defaultValue);
    /**
     * <code>map&lt;int32, int32&gt; map_int32_int32 = 1;</code>
     */

    int getMapInt32Int32OrThrow(
        int key);

    /**
     * <code>map&lt;int64, int64&gt; map_int64_int64 = 2;</code>
     */
    int getMapInt64Int64Count();
    /**
     * <code>map&lt;int64, int64&gt; map_int64_int64 = 2;</code>
     */
    boolean containsMapInt64Int64(
        long key);
    /**
     * Use {@link #getMapInt64Int64Map()} instead.
     */
    @java.lang.Deprecated
    java.util.Map<java.lang.Long, java.lang.Long>
    getMapInt64Int64();
    /**
     * <code>map&lt;int64, int64&gt; map_int64_int64 = 2;</code>
     */
    java.util.Map<java.lang.Long, java.lang.Long>
    getMapInt64Int64Map();
    /**
     * <code>map&lt;int64, int64&gt; map_int64_int64 = 2;</code>
     */

    long getMapInt64Int64OrDefault(
        long key,
        long defaultValue);
    /**
     * <code>map&lt;int64, int64&gt; map_int64_int64 = 2;</code>
     */

    long getMapInt64Int64OrThrow(
        long key);

    /**
     * <code>map&lt;uint32, uint32&gt; map_uint32_uint32 = 3;</code>
     */
    int getMapUint32Uint32Count();
    /**
     * <code>map&lt;uint32, uint32&gt; map_uint32_uint32 = 3;</code>
     */
    boolean containsMapUint32Uint32(
        int key);
    /**
     * Use {@link #getMapUint32Uint32Map()} instead.
     */
    @java.lang.Deprecated
    java.util.Map<java.lang.Integer, java.lang.Integer>
    getMapUint32Uint32();
    /**
     * <code>map&lt;uint32, uint32&gt; map_uint32_uint32 = 3;</code>
     */
    java.util.Map<java.lang.Integer, java.lang.Integer>
    getMapUint32Uint32Map();
    /**
     * <code>map&lt;uint32, uint32&gt; map_uint32_uint32 = 3;</code>
     */

    int getMapUint32Uint32OrDefault(
        int key,
        int defaultValue);
    /**
     * <code>map&lt;uint32, uint32&gt; map_uint32_uint32 = 3;</code>
     */

    int getMapUint32Uint32OrThrow(
        int key);

    /**
     * <code>map&lt;uint64, uint64&gt; map_uint64_uint64 = 4;</code>
     */
    int getMapUint64Uint64Count();
    /**
     * <code>map&lt;uint64, uint64&gt; map_uint64_uint64 = 4;</code>
     */
    boolean containsMapUint64Uint64(
        long key);
    /**
     * Use {@link #getMapUint64Uint64Map()} instead.
     */
    @java.lang.Deprecated
    java.util.Map<java.lang.Long, java.lang.Long>
    getMapUint64Uint64();
    /**
     * <code>map&lt;uint64, uint64&gt; map_uint64_uint64 = 4;</code>
     */
    java.util.Map<java.lang.Long, java.lang.Long>
    getMapUint64Uint64Map();
    /**
     * <code>map&lt;uint64, uint64&gt; map_uint64_uint64 = 4;</code>
     */

    long getMapUint64Uint64OrDefault(
        long key,
        long defaultValue);
    /**
     * <code>map&lt;uint64, uint64&gt; map_uint64_uint64 = 4;</code>
     */

    long getMapUint64Uint64OrThrow(
        long key);

    /**
     * <code>map&lt;sint32, sint32&gt; map_sint32_sint32 = 5;</code>
     */
    int getMapSint32Sint32Count();
    /**
     * <code>map&lt;sint32, sint32&gt; map_sint32_sint32 = 5;</code>
     */
    boolean containsMapSint32Sint32(
        int key);
    /**
     * Use {@link #getMapSint32Sint32Map()} instead.
     */
    @java.lang.Deprecated
    java.util.Map<java.lang.Integer, java.lang.Integer>
    getMapSint32Sint32();
    /**
     * <code>map&lt;sint32, sint32&gt; map_sint32_sint32 = 5;</code>
     */
    java.util.Map<java.lang.Integer, java.lang.Integer>
    getMapSint32Sint32Map();
    /**
     * <code>map&lt;sint32, sint32&gt; map_sint32_sint32 = 5;</code>
     */

    int getMapSint32Sint32OrDefault(
        int key,
        int defaultValue);
    /**
     * <code>map&lt;sint32, sint32&gt; map_sint32_sint32 = 5;</code>
     */

    int getMapSint32Sint32OrThrow(
        int key);

    /**
     * <code>map&lt;sint64, sint64&gt; map_sint64_sint64 = 6;</code>
     */
    int getMapSint64Sint64Count();
    /**
     * <code>map&lt;sint64, sint64&gt; map_sint64_sint64 = 6;</code>
     */
    boolean containsMapSint64Sint64(
        long key);
    /**
     * Use {@link #getMapSint64Sint64Map()} instead.
     */
    @java.lang.Deprecated
    java.util.Map<java.lang.Long, java.lang.Long>
    getMapSint64Sint64();
    /**
     * <code>map&lt;sint64, sint64&gt; map_sint64_sint64 = 6;</code>
     */
    java.util.Map<java.lang.Long, java.lang.Long>
    getMapSint64Sint64Map();
    /**
     * <code>map&lt;sint64, sint64&gt; map_sint64_sint64 = 6;</code>
     */

    long getMapSint64Sint64OrDefault(
        long key,
        long defaultValue);
    /**
     * <code>map&lt;sint64, sint64&gt; map_sint64_sint64 = 6;</code>
     */

    long getMapSint64Sint64OrThrow(
        long key);

    /**
     * <code>map&lt;fixed32, fixed32&gt; map_fixed32_fixed32 = 7;</code>
     */
    int getMapFixed32Fixed32Count();
    /**
     * <code>map&lt;fixed32, fixed32&gt; map_fixed32_fixed32 = 7;</code>
     */
    boolean containsMapFixed32Fixed32(
        int key);
    /**
     * Use {@link #getMapFixed32Fixed32Map()} instead.
     */
    @java.lang.Deprecated
    java.util.Map<java.lang.Integer, java.lang.Integer>
    getMapFixed32Fixed32();
    /**
     * <code>map&lt;fixed32, fixed32&gt; map_fixed32_fixed32 = 7;</code>
     */
    java.util.Map<java.lang.Integer, java.lang.Integer>
    getMapFixed32Fixed32Map();
    /**
     * <code>map&lt;fixed32, fixed32&gt; map_fixed32_fixed32 = 7;</code>
     */

    int getMapFixed32Fixed32OrDefault(
        int key,
        int defaultValue);
    /**
     * <code>map&lt;fixed32, fixed32&gt; map_fixed32_fixed32 = 7;</code>
     */

    int getMapFixed32Fixed32OrThrow(
        int key);

    /**
     * <code>map&lt;fixed64, fixed64&gt; map_fixed64_fixed64 = 8;</code>
     */
    int getMapFixed64Fixed64Count();
    /**
     * <code>map&lt;fixed64, fixed64&gt; map_fixed64_fixed64 = 8;</code>
     */
    boolean containsMapFixed64Fixed64(
        long key);
    /**
     * Use {@link #getMapFixed64Fixed64Map()} instead.
     */
    @java.lang.Deprecated
    java.util.Map<java.lang.Long, java.lang.Long>
    getMapFixed64Fixed64();
    /**
     * <code>map&lt;fixed64, fixed64&gt; map_fixed64_fixed64 = 8;</code>
     */
    java.util.Map<java.lang.Long, java.lang.Long>
    getMapFixed64Fixed64Map();
    /**
     * <code>map&lt;fixed64, fixed64&gt; map_fixed64_fixed64 = 8;</code>
     */

    long getMapFixed64Fixed64OrDefault(
        long key,
        long defaultValue);
    /**
     * <code>map&lt;fixed64, fixed64&gt; map_fixed64_fixed64 = 8;</code>
     */

    long getMapFixed64Fixed64OrThrow(
        long key);

    /**
     * <code>map&lt;sfixed32, sfixed32&gt; map_sfixed32_sfixed32 = 9;</code>
     */
    int getMapSfixed32Sfixed32Count();
    /**
     * <code>map&lt;sfixed32, sfixed32&gt; map_sfixed32_sfixed32 = 9;</code>
     */
    boolean containsMapSfixed32Sfixed32(
        int key);
    /**
     * Use {@link #getMapSfixed32Sfixed32Map()} instead.
     */
    @java.lang.Deprecated
    java.util.Map<java.lang.Integer, java.lang.Integer>
    getMapSfixed32Sfixed32();
    /**
     * <code>map&lt;sfixed32, sfixed32&gt; map_sfixed32_sfixed32 = 9;</code>
     */
    java.util.Map<java.lang.Integer, java.lang.Integer>
    getMapSfixed32Sfixed32Map();
    /**
     * <code>map&lt;sfixed32, sfixed32&gt; map_sfixed32_sfixed32 = 9;</code>
     */

    int getMapSfixed32Sfixed32OrDefault(
        int key,
        int defaultValue);
    /**
     * <code>map&lt;sfixed32, sfixed32&gt; map_sfixed32_sfixed32 = 9;</code>
     */

    int getMapSfixed32Sfixed32OrThrow(
        int key);

    /**
     * <code>map&lt;sfixed64, sfixed64&gt; map_sfixed64_sfixed64 = 10;</code>
     */
    int getMapSfixed64Sfixed64Count();
    /**
     * <code>map&lt;sfixed64, sfixed64&gt; map_sfixed64_sfixed64 = 10;</code>
     */
    boolean containsMapSfixed64Sfixed64(
        long key);
    /**
     * Use {@link #getMapSfixed64Sfixed64Map()} instead.
     */
    @java.lang.Deprecated
    java.util.Map<java.lang.Long, java.lang.Long>
    getMapSfixed64Sfixed64();
    /**
     * <code>map&lt;sfixed64, sfixed64&gt; map_sfixed64_sfixed64 = 10;</code>
     */
    java.util.Map<java.lang.Long, java.lang.Long>
    getMapSfixed64Sfixed64Map();
    /**
     * <code>map&lt;sfixed64, sfixed64&gt; map_sfixed64_sfixed64 = 10;</code>
     */

    long getMapSfixed64Sfixed64OrDefault(
        long key,
        long defaultValue);
    /**
     * <code>map&lt;sfixed64, sfixed64&gt; map_sfixed64_sfixed64 = 10;</code>
     */

    long getMapSfixed64Sfixed64OrThrow(
        long key);

    /**
     * <code>map&lt;int32, float&gt; map_int32_float = 11;</code>
     */
    int getMapInt32FloatCount();
    /**
     * <code>map&lt;int32, float&gt; map_int32_float = 11;</code>
     */
    boolean containsMapInt32Float(
        int key);
    /**
     * Use {@link #getMapInt32FloatMap()} instead.
     */
    @java.lang.Deprecated
    java.util.Map<java.lang.Integer, java.lang.Float>
    getMapInt32Float();
    /**
     * <code>map&lt;int32, float&gt; map_int32_float = 11;</code>
     */
    java.util.Map<java.lang.Integer, java.lang.Float>
    getMapInt32FloatMap();
    /**
     * <code>map&lt;int32, float&gt; map_int32_float = 11;</code>
     */

    float getMapInt32FloatOrDefault(
        int key,
        float defaultValue);
    /**
     * <code>map&lt;int32, float&gt; map_int32_float = 11;</code>
     */

    float getMapInt32FloatOrThrow(
        int key);

    /**
     * <code>map&lt;int32, double&gt; map_int32_double = 12;</code>
     */
    int getMapInt32DoubleCount();
    /**
     * <code>map&lt;int32, double&gt; map_int32_double = 12;</code>
     */
    boolean containsMapInt32Double(
        int key);
    /**
     * Use {@link #getMapInt32DoubleMap()} instead.
     */
    @java.lang.Deprecated
    java.util.Map<java.lang.Integer, java.lang.Double>
    getMapInt32Double();
    /**
     * <code>map&lt;int32, double&gt; map_int32_double = 12;</code>
     */
    java.util.Map<java.lang.Integer, java.lang.Double>
    getMapInt32DoubleMap();
    /**
     * <code>map&lt;int32, double&gt; map_int32_double = 12;</code>
     */

    double getMapInt32DoubleOrDefault(
        int key,
        double defaultValue);
    /**
     * <code>map&lt;int32, double&gt; map_int32_double = 12;</code>
     */

    double getMapInt32DoubleOrThrow(
        int key);

    /**
     * <code>map&lt;bool, bool&gt; map_bool_bool = 13;</code>
     */
    int getMapBoolBoolCount();
    /**
     * <code>map&lt;bool, bool&gt; map_bool_bool = 13;</code>
     */
    boolean containsMapBoolBool(
        boolean key);
    /**
     * Use {@link #getMapBoolBoolMap()} instead.
     */
    @java.lang.Deprecated
    java.util.Map<java.lang.Boolean, java.lang.Boolean>
    getMapBoolBool();
    /**
     * <code>map&lt;bool, bool&gt; map_bool_bool = 13;</code>
     */
    java.util.Map<java.lang.Boolean, java.lang.Boolean>
    getMapBoolBoolMap();
    /**
     * <code>map&lt;bool, bool&gt; map_bool_bool = 13;</code>
     */

    boolean getMapBoolBoolOrDefault(
        boolean key,
        boolean defaultValue);
    /**
     * <code>map&lt;bool, bool&gt; map_bool_bool = 13;</code>
     */

    boolean getMapBoolBoolOrThrow(
        boolean key);

    /**
     * <code>map&lt;string, string&gt; map_string_string = 14;</code>
     */
    int getMapStringStringCount();
    /**
     * <code>map&lt;string, string&gt; map_string_string = 14;</code>
     */
    boolean containsMapStringString(
        java.lang.String key);
    /**
     * Use {@link #getMapStringStringMap()} instead.
     */
    @java.lang.Deprecated
    java.util.Map<java.lang.String, java.lang.String>
    getMapStringString();
    /**
     * <code>map&lt;string, string&gt; map_string_string = 14;</code>
     */
    java.util.Map<java.lang.String, java.lang.String>
    getMapStringStringMap();
    /**
     * <code>map&lt;string, string&gt; map_string_string = 14;</code>
     */

    /* nullable */
java.lang.String getMapStringStringOrDefault(
        java.lang.String key,
        /* nullable */
java.lang.String defaultValue);
    /**
     * <code>map&lt;string, string&gt; map_string_string = 14;</code>
     */

    java.lang.String getMapStringStringOrThrow(
        java.lang.String key);

    /**
     * <code>map&lt;int32, bytes&gt; map_int32_bytes = 15;</code>
     */
    int getMapInt32BytesCount();
    /**
     * <code>map&lt;int32, bytes&gt; map_int32_bytes = 15;</code>
     */
    boolean containsMapInt32Bytes(
        int key);
    /**
     * Use {@link #getMapInt32BytesMap()} instead.
     */
    @java.lang.Deprecated
    java.util.Map<java.lang.Integer, com.google.protobuf.ByteString>
    getMapInt32Bytes();
    /**
     * <code>map&lt;int32, bytes&gt; map_int32_bytes = 15;</code>
     */
    java.util.Map<java.lang.Integer, com.google.protobuf.ByteString>
    getMapInt32BytesMap();
    /**
     * <code>map&lt;int32, bytes&gt; map_int32_bytes = 15;</code>
     */

    /* nullable */
com.google.protobuf.ByteString getMapInt32BytesOrDefault(
        int key,
        /* nullable */
com.google.protobuf.ByteString defaultValue);
    /**
     * <code>map&lt;int32, bytes&gt; map_int32_bytes = 15;</code>
     */

    com.google.protobuf.ByteString getMapInt32BytesOrThrow(
        int key);

    /**
     * <code>map&lt;int32, .protobuf_unittest.MapEnumLite&gt; map_int32_enum = 16;</code>
     */
    int getMapInt32EnumCount();
    /**
     * <code>map&lt;int32, .protobuf_unittest.MapEnumLite&gt; map_int32_enum = 16;</code>
     */
    boolean containsMapInt32Enum(
        int key);
    /**
     * Use {@link #getMapInt32EnumMap()} instead.
     */
    @java.lang.Deprecated
    java.util.Map<java.lang.Integer, protobuf_unittest.MapLiteUnittest.MapEnumLite>
    getMapInt32Enum();
    /**
     * <code>map&lt;int32, .protobuf_unittest.MapEnumLite&gt; map_int32_enum = 16;</code>
     */
    java.util.Map<java.lang.Integer, protobuf_unittest.MapLiteUnittest.MapEnumLite>
    getMapInt32EnumMap();
    /**
     * <code>map&lt;int32, .protobuf_unittest.MapEnumLite&gt; map_int32_enum = 16;</code>
     */
    /* nullable */
protobuf_unittest.MapLiteUnittest.MapEnumLite getMapInt32EnumOrDefault(
        int key,
        /* nullable */
protobuf_unittest.MapLiteUnittest.MapEnumLite         defaultValue);
    /**
     * <code>map&lt;int32, .protobuf_unittest.MapEnumLite&gt; map_int32_enum = 16;</code>
     */
    protobuf_unittest.MapLiteUnittest.MapEnumLite getMapInt32EnumOrThrow(
        int key);

    /**
     * <code>map&lt;int32, .protobuf_unittest.ForeignMessageLite&gt; map_int32_foreign_message = 17;</code>
     */
    int getMapInt32ForeignMessageCount();
    /**
     * <code>map&lt;int32, .protobuf_unittest.ForeignMessageLite&gt; map_int32_foreign_message = 17;</code>
     */
    boolean containsMapInt32ForeignMessage(
        int key);
    /**
     * Use {@link #getMapInt32ForeignMessageMap()} instead.
     */
    @java.lang.Deprecated
    java.util.Map<java.lang.Integer, com.google.protobuf.UnittestLite.ForeignMessageLite>
    getMapInt32ForeignMessage();
    /**
     * <code>map&lt;int32, .protobuf_unittest.ForeignMessageLite&gt; map_int32_foreign_message = 17;</code>
     */
    java.util.Map<java.lang.Integer, com.google.protobuf.UnittestLite.ForeignMessageLite>
    getMapInt32ForeignMessageMap();
    /**
     * <code>map&lt;int32, .protobuf_unittest.ForeignMessageLite&gt; map_int32_foreign_message = 17;</code>
     */

    /* nullable */
com.google.protobuf.UnittestLite.ForeignMessageLite getMapInt32ForeignMessageOrDefault(
        int key,
        /* nullable */
com.google.protobuf.UnittestLite.ForeignMessageLite defaultValue);
    /**
     * <code>map&lt;int32, .protobuf_unittest.ForeignMessageLite&gt; map_int32_foreign_message = 17;</code>
     */

    com.google.protobuf.UnittestLite.ForeignMessageLite getMapInt32ForeignMessageOrThrow(
        int key);

    /**
     * <code>map&lt;int32, int32&gt; teboring = 18;</code>
     */
    int getTeboringCount();
    /**
     * <code>map&lt;int32, int32&gt; teboring = 18;</code>
     */
    boolean containsTeboring(
        int key);
    /**
     * Use {@link #getTeboringMap()} instead.
     */
    @java.lang.Deprecated
    java.util.Map<java.lang.Integer, java.lang.Integer>
    getTeboring();
    /**
     * <code>map&lt;int32, int32&gt; teboring = 18;</code>
     */
    java.util.Map<java.lang.Integer, java.lang.Integer>
    getTeboringMap();
    /**
     * <code>map&lt;int32, int32&gt; teboring = 18;</code>
     */

    int getTeboringOrDefault(
        int key,
        int defaultValue);
    /**
     * <code>map&lt;int32, int32&gt; teboring = 18;</code>
     */

    int getTeboringOrThrow(
        int key);
  }
  /**
   * Protobuf type {@code protobuf_unittest.TestMapLite}
   */
  public static final class TestMapLite extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:protobuf_unittest.TestMapLite)
      TestMapLiteOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use TestMapLite.newBuilder() to construct.
    private TestMapLite(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private TestMapLite() {
    }

    @java.lang.Override
    @SuppressWarnings({"unused"})
    protected java.lang.Object newInstance(
        UnusedPrivateParameter unused) {
      return new TestMapLite();
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private TestMapLite(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 10: {
              if (!((mutable_bitField0_ & 0x00000001) != 0)) {
                mapInt32Int32_ = com.google.protobuf.MapField.newMapField(
                    MapInt32Int32DefaultEntryHolder.defaultEntry);
                mutable_bitField0_ |= 0x00000001;
              }
              com.google.protobuf.MapEntry<java.lang.Integer, java.lang.Integer>
              mapInt32Int32__ = input.readMessage(
                  MapInt32Int32DefaultEntryHolder.defaultEntry.getParserForType(), extensionRegistry);
              mapInt32Int32_.getMutableMap().put(
                  mapInt32Int32__.getKey(), mapInt32Int32__.getValue());
              break;
            }
            case 18: {
              if (!((mutable_bitField0_ & 0x00000002) != 0)) {
                mapInt64Int64_ = com.google.protobuf.MapField.newMapField(
                    MapInt64Int64DefaultEntryHolder.defaultEntry);
                mutable_bitField0_ |= 0x00000002;
              }
              com.google.protobuf.MapEntry<java.lang.Long, java.lang.Long>
              mapInt64Int64__ = input.readMessage(
                  MapInt64Int64DefaultEntryHolder.defaultEntry.getParserForType(), extensionRegistry);
              mapInt64Int64_.getMutableMap().put(
                  mapInt64Int64__.getKey(), mapInt64Int64__.getValue());
              break;
            }
            case 26: {
              if (!((mutable_bitField0_ & 0x00000004) != 0)) {
                mapUint32Uint32_ = com.google.protobuf.MapField.newMapField(
                    MapUint32Uint32DefaultEntryHolder.defaultEntry);
                mutable_bitField0_ |= 0x00000004;
              }
              com.google.protobuf.MapEntry<java.lang.Integer, java.lang.Integer>
              mapUint32Uint32__ = input.readMessage(
                  MapUint32Uint32DefaultEntryHolder.defaultEntry.getParserForType(), extensionRegistry);
              mapUint32Uint32_.getMutableMap().put(
                  mapUint32Uint32__.getKey(), mapUint32Uint32__.getValue());
              break;
            }
            case 34: {
              if (!((mutable_bitField0_ & 0x00000008) != 0)) {
                mapUint64Uint64_ = com.google.protobuf.MapField.newMapField(
                    MapUint64Uint64DefaultEntryHolder.defaultEntry);
                mutable_bitField0_ |= 0x00000008;
              }
              com.google.protobuf.MapEntry<java.lang.Long, java.lang.Long>
              mapUint64Uint64__ = input.readMessage(
                  MapUint64Uint64DefaultEntryHolder.defaultEntry.getParserForType(), extensionRegistry);
              mapUint64Uint64_.getMutableMap().put(
                  mapUint64Uint64__.getKey(), mapUint64Uint64__.getValue());
              break;
            }
            case 42: {
              if (!((mutable_bitField0_ & 0x00000010) != 0)) {
                mapSint32Sint32_ = com.google.protobuf.MapField.newMapField(
                    MapSint32Sint32DefaultEntryHolder.defaultEntry);
                mutable_bitField0_ |= 0x00000010;
              }
              com.google.protobuf.MapEntry<java.lang.Integer, java.lang.Integer>
              mapSint32Sint32__ = input.readMessage(
                  MapSint32Sint32DefaultEntryHolder.defaultEntry.getParserForType(), extensionRegistry);
              mapSint32Sint32_.getMutableMap().put(
                  mapSint32Sint32__.getKey(), mapSint32Sint32__.getValue());
              break;
            }
            case 50: {
              if (!((mutable_bitField0_ & 0x00000020) != 0)) {
                mapSint64Sint64_ = com.google.protobuf.MapField.newMapField(
                    MapSint64Sint64DefaultEntryHolder.defaultEntry);
                mutable_bitField0_ |= 0x00000020;
              }
              com.google.protobuf.MapEntry<java.lang.Long, java.lang.Long>
              mapSint64Sint64__ = input.readMessage(
                  MapSint64Sint64DefaultEntryHolder.defaultEntry.getParserForType(), extensionRegistry);
              mapSint64Sint64_.getMutableMap().put(
                  mapSint64Sint64__.getKey(), mapSint64Sint64__.getValue());
              break;
            }
            case 58: {
              if (!((mutable_bitField0_ & 0x00000040) != 0)) {
                mapFixed32Fixed32_ = com.google.protobuf.MapField.newMapField(
                    MapFixed32Fixed32DefaultEntryHolder.defaultEntry);
                mutable_bitField0_ |= 0x00000040;
              }
              com.google.protobuf.MapEntry<java.lang.Integer, java.lang.Integer>
              mapFixed32Fixed32__ = input.readMessage(
                  MapFixed32Fixed32DefaultEntryHolder.defaultEntry.getParserForType(), extensionRegistry);
              mapFixed32Fixed32_.getMutableMap().put(
                  mapFixed32Fixed32__.getKey(), mapFixed32Fixed32__.getValue());
              break;
            }
            case 66: {
              if (!((mutable_bitField0_ & 0x00000080) != 0)) {
                mapFixed64Fixed64_ = com.google.protobuf.MapField.newMapField(
                    MapFixed64Fixed64DefaultEntryHolder.defaultEntry);
                mutable_bitField0_ |= 0x00000080;
              }
              com.google.protobuf.MapEntry<java.lang.Long, java.lang.Long>
              mapFixed64Fixed64__ = input.readMessage(
                  MapFixed64Fixed64DefaultEntryHolder.defaultEntry.getParserForType(), extensionRegistry);
              mapFixed64Fixed64_.getMutableMap().put(
                  mapFixed64Fixed64__.getKey(), mapFixed64Fixed64__.getValue());
              break;
            }
            case 74: {
              if (!((mutable_bitField0_ & 0x00000100) != 0)) {
                mapSfixed32Sfixed32_ = com.google.protobuf.MapField.newMapField(
                    MapSfixed32Sfixed32DefaultEntryHolder.defaultEntry);
                mutable_bitField0_ |= 0x00000100;
              }
              com.google.protobuf.MapEntry<java.lang.Integer, java.lang.Integer>
              mapSfixed32Sfixed32__ = input.readMessage(
                  MapSfixed32Sfixed32DefaultEntryHolder.defaultEntry.getParserForType(), extensionRegistry);
              mapSfixed32Sfixed32_.getMutableMap().put(
                  mapSfixed32Sfixed32__.getKey(), mapSfixed32Sfixed32__.getValue());
              break;
            }
            case 82: {
              if (!((mutable_bitField0_ & 0x00000200) != 0)) {
                mapSfixed64Sfixed64_ = com.google.protobuf.MapField.newMapField(
                    MapSfixed64Sfixed64DefaultEntryHolder.defaultEntry);
                mutable_bitField0_ |= 0x00000200;
              }
              com.google.protobuf.MapEntry<java.lang.Long, java.lang.Long>
              mapSfixed64Sfixed64__ = input.readMessage(
                  MapSfixed64Sfixed64DefaultEntryHolder.defaultEntry.getParserForType(), extensionRegistry);
              mapSfixed64Sfixed64_.getMutableMap().put(
                  mapSfixed64Sfixed64__.getKey(), mapSfixed64Sfixed64__.getValue());
              break;
            }
            case 90: {
              if (!((mutable_bitField0_ & 0x00000400) != 0)) {
                mapInt32Float_ = com.google.protobuf.MapField.newMapField(
                    MapInt32FloatDefaultEntryHolder.defaultEntry);
                mutable_bitField0_ |= 0x00000400;
              }
              com.google.protobuf.MapEntry<java.lang.Integer, java.lang.Float>
              mapInt32Float__ = input.readMessage(
                  MapInt32FloatDefaultEntryHolder.defaultEntry.getParserForType(), extensionRegistry);
              mapInt32Float_.getMutableMap().put(
                  mapInt32Float__.getKey(), mapInt32Float__.getValue());
              break;
            }
            case 98: {
              if (!((mutable_bitField0_ & 0x00000800) != 0)) {
                mapInt32Double_ = com.google.protobuf.MapField.newMapField(
                    MapInt32DoubleDefaultEntryHolder.defaultEntry);
                mutable_bitField0_ |= 0x00000800;
              }
              com.google.protobuf.MapEntry<java.lang.Integer, java.lang.Double>
              mapInt32Double__ = input.readMessage(
                  MapInt32DoubleDefaultEntryHolder.defaultEntry.getParserForType(), extensionRegistry);
              mapInt32Double_.getMutableMap().put(
                  mapInt32Double__.getKey(), mapInt32Double__.getValue());
              break;
            }
            case 106: {
              if (!((mutable_bitField0_ & 0x00001000) != 0)) {
                mapBoolBool_ = com.google.protobuf.MapField.newMapField(
                    MapBoolBoolDefaultEntryHolder.defaultEntry);
                mutable_bitField0_ |= 0x00001000;
              }
              com.google.protobuf.MapEntry<java.lang.Boolean, java.lang.Boolean>
              mapBoolBool__ = input.readMessage(
                  MapBoolBoolDefaultEntryHolder.defaultEntry.getParserForType(), extensionRegistry);
              mapBoolBool_.getMutableMap().put(
                  mapBoolBool__.getKey(), mapBoolBool__.getValue());
              break;
            }
            case 114: {
              if (!((mutable_bitField0_ & 0x00002000) != 0)) {
                mapStringString_ = com.google.protobuf.MapField.newMapField(
                    MapStringStringDefaultEntryHolder.defaultEntry);
                mutable_bitField0_ |= 0x00002000;
              }
              com.google.protobuf.MapEntry<java.lang.String, java.lang.String>
              mapStringString__ = input.readMessage(
                  MapStringStringDefaultEntryHolder.defaultEntry.getParserForType(), extensionRegistry);
              mapStringString_.getMutableMap().put(
                  mapStringString__.getKey(), mapStringString__.getValue());
              break;
            }
            case 122: {
              if (!((mutable_bitField0_ & 0x00004000) != 0)) {
                mapInt32Bytes_ = com.google.protobuf.MapField.newMapField(
                    MapInt32BytesDefaultEntryHolder.defaultEntry);
                mutable_bitField0_ |= 0x00004000;
              }
              com.google.protobuf.MapEntry<java.lang.Integer, com.google.protobuf.ByteString>
              mapInt32Bytes__ = input.readMessage(
                  MapInt32BytesDefaultEntryHolder.defaultEntry.getParserForType(), extensionRegistry);
              mapInt32Bytes_.getMutableMap().put(
                  mapInt32Bytes__.getKey(), mapInt32Bytes__.getValue());
              break;
            }
            case 130: {
              if (!((mutable_bitField0_ & 0x00008000) != 0)) {
                mapInt32Enum_ = com.google.protobuf.MapField.newMapField(
                    MapInt32EnumDefaultEntryHolder.defaultEntry);
                mutable_bitField0_ |= 0x00008000;
              }
              com.google.protobuf.ByteString bytes = input.readBytes();
              com.google.protobuf.MapEntry<java.lang.Integer, java.lang.Integer>
              mapInt32Enum__ = MapInt32EnumDefaultEntryHolder.defaultEntry.getParserForType().parseFrom(bytes);
              if (protobuf_unittest.MapLiteUnittest.MapEnumLite.forNumber(mapInt32Enum__.getValue()) == null) {
                unknownFields.mergeLengthDelimitedField(16, bytes);
              } else {
                mapInt32Enum_.getMutableMap().put(
                    mapInt32Enum__.getKey(), mapInt32Enum__.getValue());
              }
              break;
            }
            case 138: {
              if (!((mutable_bitField0_ & 0x00010000) != 0)) {
                mapInt32ForeignMessage_ = com.google.protobuf.MapField.newMapField(
                    MapInt32ForeignMessageDefaultEntryHolder.defaultEntry);
                mutable_bitField0_ |= 0x00010000;
              }
              com.google.protobuf.MapEntry<java.lang.Integer, com.google.protobuf.UnittestLite.ForeignMessageLite>
              mapInt32ForeignMessage__ = input.readMessage(
                  MapInt32ForeignMessageDefaultEntryHolder.defaultEntry.getParserForType(), extensionRegistry);
              mapInt32ForeignMessage_.getMutableMap().put(
                  mapInt32ForeignMessage__.getKey(), mapInt32ForeignMessage__.getValue());
              break;
            }
            case 146: {
              if (!((mutable_bitField0_ & 0x00020000) != 0)) {
                teboring_ = com.google.protobuf.MapField.newMapField(
                    TeboringDefaultEntryHolder.defaultEntry);
                mutable_bitField0_ |= 0x00020000;
              }
              com.google.protobuf.MapEntry<java.lang.Integer, java.lang.Integer>
              teboring__ = input.readMessage(
                  TeboringDefaultEntryHolder.defaultEntry.getParserForType(), extensionRegistry);
              teboring_.getMutableMap().put(
                  teboring__.getKey(), teboring__.getValue());
              break;
            }
            default: {
              if (!parseUnknownField(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (com.google.protobuf.UninitializedMessageException e) {
        throw e.asInvalidProtocolBufferException().setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return protobuf_unittest.MapLiteUnittest.internal_static_protobuf_unittest_TestMapLite_descriptor;
    }

    @SuppressWarnings({"rawtypes"})
    @java.lang.Override
    protected com.google.protobuf.MapField internalGetMapField(
        int number) {
      switch (number) {
        case 1:
          return internalGetMapInt32Int32();
        case 2:
          return internalGetMapInt64Int64();
        case 3:
          return internalGetMapUint32Uint32();
        case 4:
          return internalGetMapUint64Uint64();
        case 5:
          return internalGetMapSint32Sint32();
        case 6:
          return internalGetMapSint64Sint64();
        case 7:
          return internalGetMapFixed32Fixed32();
        case 8:
          return internalGetMapFixed64Fixed64();
        case 9:
          return internalGetMapSfixed32Sfixed32();
        case 10:
          return internalGetMapSfixed64Sfixed64();
        case 11:
          return internalGetMapInt32Float();
        case 12:
          return internalGetMapInt32Double();
        case 13:
          return internalGetMapBoolBool();
        case 14:
          return internalGetMapStringString();
        case 15:
          return internalGetMapInt32Bytes();
        case 16:
          return internalGetMapInt32Enum();
        case 17:
          return internalGetMapInt32ForeignMessage();
        case 18:
          return internalGetTeboring();
        default:
          throw new RuntimeException(
              "Invalid map field number: " + number);
      }
    }
    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return protobuf_unittest.MapLiteUnittest.internal_static_protobuf_unittest_TestMapLite_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              protobuf_unittest.MapLiteUnittest.TestMapLite.class, protobuf_unittest.MapLiteUnittest.TestMapLite.Builder.class);
    }

    public static final int MAP_INT32_INT32_FIELD_NUMBER = 1;
    private static final class MapInt32Int32DefaultEntryHolder {
      static final com.google.protobuf.MapEntry<
          java.lang.Integer, java.lang.Integer> defaultEntry =
              com.google.protobuf.MapEntry
              .<java.lang.Integer, java.lang.Integer>newDefaultInstance(
                  protobuf_unittest.MapLiteUnittest.internal_static_protobuf_unittest_TestMapLite_MapInt32Int32Entry_descriptor, 
                  com.google.protobuf.WireFormat.FieldType.INT32,
                  0,
                  com.google.protobuf.WireFormat.FieldType.INT32,
                  0);
    }
    private com.google.protobuf.MapField<
        java.lang.Integer, java.lang.Integer> mapInt32Int32_;
    private com.google.protobuf.MapField<java.lang.Integer, java.lang.Integer>
    internalGetMapInt32Int32() {
      if (mapInt32Int32_ == null) {
        return com.google.protobuf.MapField.emptyMapField(
            MapInt32Int32DefaultEntryHolder.defaultEntry);
      }
      return mapInt32Int32_;
    }

    public int getMapInt32Int32Count() {
      return internalGetMapInt32Int32().getMap().size();
    }
    /**
     * <code>map&lt;int32, int32&gt; map_int32_int32 = 1;</code>
     */

    @java.lang.Override
    public boolean containsMapInt32Int32(
        int key) {
      
      return internalGetMapInt32Int32().getMap().containsKey(key);
    }
    /**
     * Use {@link #getMapInt32Int32Map()} instead.
     */
    @java.lang.Override
    @java.lang.Deprecated
    public java.util.Map<java.lang.Integer, java.lang.Integer> getMapInt32Int32() {
      return getMapInt32Int32Map();
    }
    /**
     * <code>map&lt;int32, int32&gt; map_int32_int32 = 1;</code>
     */
    @java.lang.Override

    public java.util.Map<java.lang.Integer, java.lang.Integer> getMapInt32Int32Map() {
      return internalGetMapInt32Int32().getMap();
    }
    /**
     * <code>map&lt;int32, int32&gt; map_int32_int32 = 1;</code>
     */
    @java.lang.Override

    public int getMapInt32Int32OrDefault(
        int key,
        int defaultValue) {
      
      java.util.Map<java.lang.Integer, java.lang.Integer> map =
          internalGetMapInt32Int32().getMap();
      return map.containsKey(key) ? map.get(key) : defaultValue;
    }
    /**
     * <code>map&lt;int32, int32&gt; map_int32_int32 = 1;</code>
     */
    @java.lang.Override

    public int getMapInt32Int32OrThrow(
        int key) {
      
      java.util.Map<java.lang.Integer, java.lang.Integer> map =
          internalGetMapInt32Int32().getMap();
      if (!map.containsKey(key)) {
        throw new java.lang.IllegalArgumentException();
      }
      return map.get(key);
    }

    public static final int MAP_INT64_INT64_FIELD_NUMBER = 2;
    private static final class MapInt64Int64DefaultEntryHolder {
      static final com.google.protobuf.MapEntry<
          java.lang.Long, java.lang.Long> defaultEntry =
              com.google.protobuf.MapEntry
              .<java.lang.Long, java.lang.Long>newDefaultInstance(
                  protobuf_unittest.MapLiteUnittest.internal_static_protobuf_unittest_TestMapLite_MapInt64Int64Entry_descriptor, 
                  com.google.protobuf.WireFormat.FieldType.INT64,
                  0L,
                  com.google.protobuf.WireFormat.FieldType.INT64,
                  0L);
    }
    private com.google.protobuf.MapField<
        java.lang.Long, java.lang.Long> mapInt64Int64_;
    private com.google.protobuf.MapField<java.lang.Long, java.lang.Long>
    internalGetMapInt64Int64() {
      if (mapInt64Int64_ == null) {
        return com.google.protobuf.MapField.emptyMapField(
            MapInt64Int64DefaultEntryHolder.defaultEntry);
      }
      return mapInt64Int64_;
    }

    public int getMapInt64Int64Count() {
      return internalGetMapInt64Int64().getMap().size();
    }
    /**
     * <code>map&lt;int64, int64&gt; map_int64_int64 = 2;</code>
     */

    @java.lang.Override
    public boolean containsMapInt64Int64(
        long key) {
      
      return internalGetMapInt64Int64().getMap().containsKey(key);
    }
    /**
     * Use {@link #getMapInt64Int64Map()} instead.
     */
    @java.lang.Override
    @java.lang.Deprecated
    public java.util.Map<java.lang.Long, java.lang.Long> getMapInt64Int64() {
      return getMapInt64Int64Map();
    }
    /**
     * <code>map&lt;int64, int64&gt; map_int64_int64 = 2;</code>
     */
    @java.lang.Override

    public java.util.Map<java.lang.Long, java.lang.Long> getMapInt64Int64Map() {
      return internalGetMapInt64Int64().getMap();
    }
    /**
     * <code>map&lt;int64, int64&gt; map_int64_int64 = 2;</code>
     */
    @java.lang.Override

    public long getMapInt64Int64OrDefault(
        long key,
        long defaultValue) {
      
      java.util.Map<java.lang.Long, java.lang.Long> map =
          internalGetMapInt64Int64().getMap();
      return map.containsKey(key) ? map.get(key) : defaultValue;
    }
    /**
     * <code>map&lt;int64, int64&gt; map_int64_int64 = 2;</code>
     */
    @java.lang.Override

    public long getMapInt64Int64OrThrow(
        long key) {
      
      java.util.Map<java.lang.Long, java.lang.Long> map =
          internalGetMapInt64Int64().getMap();
      if (!map.containsKey(key)) {
        throw new java.lang.IllegalArgumentException();
      }
      return map.get(key);
    }

    public static final int MAP_UINT32_UINT32_FIELD_NUMBER = 3;
    private static final class MapUint32Uint32DefaultEntryHolder {
      static final com.google.protobuf.MapEntry<
          java.lang.Integer, java.lang.Integer> defaultEntry =
              com.google.protobuf.MapEntry
              .<java.lang.Integer, java.lang.Integer>newDefaultInstance(
                  protobuf_unittest.MapLiteUnittest.internal_static_protobuf_unittest_TestMapLite_MapUint32Uint32Entry_descriptor, 
                  com.google.protobuf.WireFormat.FieldType.UINT32,
                  0,
                  com.google.protobuf.WireFormat.FieldType.UINT32,
                  0);
    }
    private com.google.protobuf.MapField<
        java.lang.Integer, java.lang.Integer> mapUint32Uint32_;
    private com.google.protobuf.MapField<java.lang.Integer, java.lang.Integer>
    internalGetMapUint32Uint32() {
      if (mapUint32Uint32_ == null) {
        return com.google.protobuf.MapField.emptyMapField(
            MapUint32Uint32DefaultEntryHolder.defaultEntry);
      }
      return mapUint32Uint32_;
    }

    public int getMapUint32Uint32Count() {
      return internalGetMapUint32Uint32().getMap().size();
    }
    /**
     * <code>map&lt;uint32, uint32&gt; map_uint32_uint32 = 3;</code>
     */

    @java.lang.Override
    public boolean containsMapUint32Uint32(
        int key) {
      
      return internalGetMapUint32Uint32().getMap().containsKey(key);
    }
    /**
     * Use {@link #getMapUint32Uint32Map()} instead.
     */
    @java.lang.Override
    @java.lang.Deprecated
    public java.util.Map<java.lang.Integer, java.lang.Integer> getMapUint32Uint32() {
      return getMapUint32Uint32Map();
    }
    /**
     * <code>map&lt;uint32, uint32&gt; map_uint32_uint32 = 3;</code>
     */
    @java.lang.Override

    public java.util.Map<java.lang.Integer, java.lang.Integer> getMapUint32Uint32Map() {
      return internalGetMapUint32Uint32().getMap();
    }
    /**
     * <code>map&lt;uint32, uint32&gt; map_uint32_uint32 = 3;</code>
     */
    @java.lang.Override

    public int getMapUint32Uint32OrDefault(
        int key,
        int defaultValue) {
      
      java.util.Map<java.lang.Integer, java.lang.Integer> map =
          internalGetMapUint32Uint32().getMap();
      return map.containsKey(key) ? map.get(key) : defaultValue;
    }
    /**
     * <code>map&lt;uint32, uint32&gt; map_uint32_uint32 = 3;</code>
     */
    @java.lang.Override

    public int getMapUint32Uint32OrThrow(
        int key) {
      
      java.util.Map<java.lang.Integer, java.lang.Integer> map =
          internalGetMapUint32Uint32().getMap();
      if (!map.containsKey(key)) {
        throw new java.lang.IllegalArgumentException();
      }
      return map.get(key);
    }

    public static final int MAP_UINT64_UINT64_FIELD_NUMBER = 4;
    private static final class MapUint64Uint64DefaultEntryHolder {
      static final com.google.protobuf.MapEntry<
          java.lang.Long, java.lang.Long> defaultEntry =
              com.google.protobuf.MapEntry
              .<java.lang.Long, java.lang.Long>newDefaultInstance(
                  protobuf_unittest.MapLiteUnittest.internal_static_protobuf_unittest_TestMapLite_MapUint64Uint64Entry_descriptor, 
                  com.google.protobuf.WireFormat.FieldType.UINT64,
                  0L,
                  com.google.protobuf.WireFormat.FieldType.UINT64,
                  0L);
    }
    private com.google.protobuf.MapField<
        java.lang.Long, java.lang.Long> mapUint64Uint64_;
    private com.google.protobuf.MapField<java.lang.Long, java.lang.Long>
    internalGetMapUint64Uint64() {
      if (mapUint64Uint64_ == null) {
        return com.google.protobuf.MapField.emptyMapField(
            MapUint64Uint64DefaultEntryHolder.defaultEntry);
      }
      return mapUint64Uint64_;
    }

    public int getMapUint64Uint64Count() {
      return internalGetMapUint64Uint64().getMap().size();
    }
    /**
     * <code>map&lt;uint64, uint64&gt; map_uint64_uint64 = 4;</code>
     */

    @java.lang.Override
    public boolean containsMapUint64Uint64(
        long key) {
      
      return internalGetMapUint64Uint64().getMap().containsKey(key);
    }
    /**
     * Use {@link #getMapUint64Uint64Map()} instead.
     */
    @java.lang.Override
    @java.lang.Deprecated
    public java.util.Map<java.lang.Long, java.lang.Long> getMapUint64Uint64() {
      return getMapUint64Uint64Map();
    }
    /**
     * <code>map&lt;uint64, uint64&gt; map_uint64_uint64 = 4;</code>
     */
    @java.lang.Override

    public java.util.Map<java.lang.Long, java.lang.Long> getMapUint64Uint64Map() {
      return internalGetMapUint64Uint64().getMap();
    }
    /**
     * <code>map&lt;uint64, uint64&gt; map_uint64_uint64 = 4;</code>
     */
    @java.lang.Override

    public long getMapUint64Uint64OrDefault(
        long key,
        long defaultValue) {
      
      java.util.Map<java.lang.Long, java.lang.Long> map =
          internalGetMapUint64Uint64().getMap();
      return map.containsKey(key) ? map.get(key) : defaultValue;
    }
    /**
     * <code>map&lt;uint64, uint64&gt; map_uint64_uint64 = 4;</code>
     */
    @java.lang.Override

    public long getMapUint64Uint64OrThrow(
        long key) {
      
      java.util.Map<java.lang.Long, java.lang.Long> map =
          internalGetMapUint64Uint64().getMap();
      if (!map.containsKey(key)) {
        throw new java.lang.IllegalArgumentException();
      }
      return map.get(key);
    }

    public static final int MAP_SINT32_SINT32_FIELD_NUMBER = 5;
    private static final class MapSint32Sint32DefaultEntryHolder {
      static final com.google.protobuf.MapEntry<
          java.lang.Integer, java.lang.Integer> defaultEntry =
              com.google.protobuf.MapEntry
              .<java.lang.Integer, java.lang.Integer>newDefaultInstance(
                  protobuf_unittest.MapLiteUnittest.internal_static_protobuf_unittest_TestMapLite_MapSint32Sint32Entry_descriptor, 
                  com.google.protobuf.WireFormat.FieldType.SINT32,
                  0,
                  com.google.protobuf.WireFormat.FieldType.SINT32,
                  0);
    }
    private com.google.protobuf.MapField<
        java.lang.Integer, java.lang.Integer> mapSint32Sint32_;
    private com.google.protobuf.MapField<java.lang.Integer, java.lang.Integer>
    internalGetMapSint32Sint32() {
      if (mapSint32Sint32_ == null) {
        return com.google.protobuf.MapField.emptyMapField(
            MapSint32Sint32DefaultEntryHolder.defaultEntry);
      }
      return mapSint32Sint32_;
    }

    public int getMapSint32Sint32Count() {
      return internalGetMapSint32Sint32().getMap().size();
    }
    /**
     * <code>map&lt;sint32, sint32&gt; map_sint32_sint32 = 5;</code>
     */

    @java.lang.Override
    public boolean containsMapSint32Sint32(
        int key) {
      
      return internalGetMapSint32Sint32().getMap().containsKey(key);
    }
    /**
     * Use {@link #getMapSint32Sint32Map()} instead.
     */
    @java.lang.Override
    @java.lang.Deprecated
    public java.util.Map<java.lang.Integer, java.lang.Integer> getMapSint32Sint32() {
      return getMapSint32Sint32Map();
    }
    /**
     * <code>map&lt;sint32, sint32&gt; map_sint32_sint32 = 5;</code>
     */
    @java.lang.Override

    public java.util.Map<java.lang.Integer, java.lang.Integer> getMapSint32Sint32Map() {
      return internalGetMapSint32Sint32().getMap();
    }
    /**
     * <code>map&lt;sint32, sint32&gt; map_sint32_sint32 = 5;</code>
     */
    @java.lang.Override

    public int getMapSint32Sint32OrDefault(
        int key,
        int defaultValue) {
      
      java.util.Map<java.lang.Integer, java.lang.Integer> map =
          internalGetMapSint32Sint32().getMap();
      return map.containsKey(key) ? map.get(key) : defaultValue;
    }
    /**
     * <code>map&lt;sint32, sint32&gt; map_sint32_sint32 = 5;</code>
     */
    @java.lang.Override

    public int getMapSint32Sint32OrThrow(
        int key) {
      
      java.util.Map<java.lang.Integer, java.lang.Integer> map =
          internalGetMapSint32Sint32().getMap();
      if (!map.containsKey(key)) {
        throw new java.lang.IllegalArgumentException();
      }
      return map.get(key);
    }

    public static final int MAP_SINT64_SINT64_FIELD_NUMBER = 6;
    private static final class MapSint64Sint64DefaultEntryHolder {
      static final com.google.protobuf.MapEntry<
          java.lang.Long, java.lang.Long> defaultEntry =
              com.google.protobuf.MapEntry
              .<java.lang.Long, java.lang.Long>newDefaultInstance(
                  protobuf_unittest.MapLiteUnittest.internal_static_protobuf_unittest_TestMapLite_MapSint64Sint64Entry_descriptor, 
                  com.google.protobuf.WireFormat.FieldType.SINT64,
                  0L,
                  com.google.protobuf.WireFormat.FieldType.SINT64,
                  0L);
    }
    private com.google.protobuf.MapField<
        java.lang.Long, java.lang.Long> mapSint64Sint64_;
    private com.google.protobuf.MapField<java.lang.Long, java.lang.Long>
    internalGetMapSint64Sint64() {
      if (mapSint64Sint64_ == null) {
        return com.google.protobuf.MapField.emptyMapField(
            MapSint64Sint64DefaultEntryHolder.defaultEntry);
      }
      return mapSint64Sint64_;
    }

    public int getMapSint64Sint64Count() {
      return internalGetMapSint64Sint64().getMap().size();
    }
    /**
     * <code>map&lt;sint64, sint64&gt; map_sint64_sint64 = 6;</code>
     */

    @java.lang.Override
    public boolean containsMapSint64Sint64(
        long key) {
      
      return internalGetMapSint64Sint64().getMap().containsKey(key);
    }
    /**
     * Use {@link #getMapSint64Sint64Map()} instead.
     */
    @java.lang.Override
    @java.lang.Deprecated
    public java.util.Map<java.lang.Long, java.lang.Long> getMapSint64Sint64() {
      return getMapSint64Sint64Map();
    }
    /**
     * <code>map&lt;sint64, sint64&gt; map_sint64_sint64 = 6;</code>
     */
    @java.lang.Override

    public java.util.Map<java.lang.Long, java.lang.Long> getMapSint64Sint64Map() {
      return internalGetMapSint64Sint64().getMap();
    }
    /**
     * <code>map&lt;sint64, sint64&gt; map_sint64_sint64 = 6;</code>
     */
    @java.lang.Override

    public long getMapSint64Sint64OrDefault(
        long key,
        long defaultValue) {
      
      java.util.Map<java.lang.Long, java.lang.Long> map =
          internalGetMapSint64Sint64().getMap();
      return map.containsKey(key) ? map.get(key) : defaultValue;
    }
    /**
     * <code>map&lt;sint64, sint64&gt; map_sint64_sint64 = 6;</code>
     */
    @java.lang.Override

    public long getMapSint64Sint64OrThrow(
        long key) {
      
      java.util.Map<java.lang.Long, java.lang.Long> map =
          internalGetMapSint64Sint64().getMap();
      if (!map.containsKey(key)) {
        throw new java.lang.IllegalArgumentException();
      }
      return map.get(key);
    }

    public static final int MAP_FIXED32_FIXED32_FIELD_NUMBER = 7;
    private static final class MapFixed32Fixed32DefaultEntryHolder {
      static final com.google.protobuf.MapEntry<
          java.lang.Integer, java.lang.Integer> defaultEntry =
              com.google.protobuf.MapEntry
              .<java.lang.Integer, java.lang.Integer>newDefaultInstance(
                  protobuf_unittest.MapLiteUnittest.internal_static_protobuf_unittest_TestMapLite_MapFixed32Fixed32Entry_descriptor, 
                  com.google.protobuf.WireFormat.FieldType.FIXED32,
                  0,
                  com.google.protobuf.WireFormat.FieldType.FIXED32,
                  0);
    }
    private com.google.protobuf.MapField<
        java.lang.Integer, java.lang.Integer> mapFixed32Fixed32_;
    private com.google.protobuf.MapField<java.lang.Integer, java.lang.Integer>
    internalGetMapFixed32Fixed32() {
      if (mapFixed32Fixed32_ == null) {
        return com.google.protobuf.MapField.emptyMapField(
            MapFixed32Fixed32DefaultEntryHolder.defaultEntry);
      }
      return mapFixed32Fixed32_;
    }

    public int getMapFixed32Fixed32Count() {
      return internalGetMapFixed32Fixed32().getMap().size();
    }
    /**
     * <code>map&lt;fixed32, fixed32&gt; map_fixed32_fixed32 = 7;</code>
     */

    @java.lang.Override
    public boolean containsMapFixed32Fixed32(
        int key) {
      
      return internalGetMapFixed32Fixed32().getMap().containsKey(key);
    }
    /**
     * Use {@link #getMapFixed32Fixed32Map()} instead.
     */
    @java.lang.Override
    @java.lang.Deprecated
    public java.util.Map<java.lang.Integer, java.lang.Integer> getMapFixed32Fixed32() {
      return getMapFixed32Fixed32Map();
    }
    /**
     * <code>map&lt;fixed32, fixed32&gt; map_fixed32_fixed32 = 7;</code>
     */
    @java.lang.Override

    public java.util.Map<java.lang.Integer, java.lang.Integer> getMapFixed32Fixed32Map() {
      return internalGetMapFixed32Fixed32().getMap();
    }
    /**
     * <code>map&lt;fixed32, fixed32&gt; map_fixed32_fixed32 = 7;</code>
     */
    @java.lang.Override

    public int getMapFixed32Fixed32OrDefault(
        int key,
        int defaultValue) {
      
      java.util.Map<java.lang.Integer, java.lang.Integer> map =
          internalGetMapFixed32Fixed32().getMap();
      return map.containsKey(key) ? map.get(key) : defaultValue;
    }
    /**
     * <code>map&lt;fixed32, fixed32&gt; map_fixed32_fixed32 = 7;</code>
     */
    @java.lang.Override

    public int getMapFixed32Fixed32OrThrow(
        int key) {
      
      java.util.Map<java.lang.Integer, java.lang.Integer> map =
          internalGetMapFixed32Fixed32().getMap();
      if (!map.containsKey(key)) {
        throw new java.lang.IllegalArgumentException();
      }
      return map.get(key);
    }

    public static final int MAP_FIXED64_FIXED64_FIELD_NUMBER = 8;
    private static final class MapFixed64Fixed64DefaultEntryHolder {
      static final com.google.protobuf.MapEntry<
          java.lang.Long, java.lang.Long> defaultEntry =
              com.google.protobuf.MapEntry
              .<java.lang.Long, java.lang.Long>newDefaultInstance(
                  protobuf_unittest.MapLiteUnittest.internal_static_protobuf_unittest_TestMapLite_MapFixed64Fixed64Entry_descriptor, 
                  com.google.protobuf.WireFormat.FieldType.FIXED64,
                  0L,
                  com.google.protobuf.WireFormat.FieldType.FIXED64,
                  0L);
    }
    private com.google.protobuf.MapField<
        java.lang.Long, java.lang.Long> mapFixed64Fixed64_;
    private com.google.protobuf.MapField<java.lang.Long, java.lang.Long>
    internalGetMapFixed64Fixed64() {
      if (mapFixed64Fixed64_ == null) {
        return com.google.protobuf.MapField.emptyMapField(
            MapFixed64Fixed64DefaultEntryHolder.defaultEntry);
      }
      return mapFixed64Fixed64_;
    }

    public int getMapFixed64Fixed64Count() {
      return internalGetMapFixed64Fixed64().getMap().size();
    }
    /**
     * <code>map&lt;fixed64, fixed64&gt; map_fixed64_fixed64 = 8;</code>
     */

    @java.lang.Override
    public boolean containsMapFixed64Fixed64(
        long key) {
      
      return internalGetMapFixed64Fixed64().getMap().containsKey(key);
    }
    /**
     * Use {@link #getMapFixed64Fixed64Map()} instead.
     */
    @java.lang.Override
    @java.lang.Deprecated
    public java.util.Map<java.lang.Long, java.lang.Long> getMapFixed64Fixed64() {
      return getMapFixed64Fixed64Map();
    }
    /**
     * <code>map&lt;fixed64, fixed64&gt; map_fixed64_fixed64 = 8;</code>
     */
    @java.lang.Override

    public java.util.Map<java.lang.Long, java.lang.Long> getMapFixed64Fixed64Map() {
      return internalGetMapFixed64Fixed64().getMap();
    }
    /**
     * <code>map&lt;fixed64, fixed64&gt; map_fixed64_fixed64 = 8;</code>
     */
    @java.lang.Override

    public long getMapFixed64Fixed64OrDefault(
        long key,
        long defaultValue) {
      
      java.util.Map<java.lang.Long, java.lang.Long> map =
          internalGetMapFixed64Fixed64().getMap();
      return map.containsKey(key) ? map.get(key) : defaultValue;
    }
    /**
     * <code>map&lt;fixed64, fixed64&gt; map_fixed64_fixed64 = 8;</code>
     */
    @java.lang.Override

    public long getMapFixed64Fixed64OrThrow(
        long key) {
      
      java.util.Map<java.lang.Long, java.lang.Long> map =
          internalGetMapFixed64Fixed64().getMap();
      if (!map.containsKey(key)) {
        throw new java.lang.IllegalArgumentException();
      }
      return map.get(key);
    }

    public static final int MAP_SFIXED32_SFIXED32_FIELD_NUMBER = 9;
    private static final class MapSfixed32Sfixed32DefaultEntryHolder {
      static final com.google.protobuf.MapEntry<
          java.lang.Integer, java.lang.Integer> defaultEntry =
              com.google.protobuf.MapEntry
              .<java.lang.Integer, java.lang.Integer>newDefaultInstance(
                  protobuf_unittest.MapLiteUnittest.internal_static_protobuf_unittest_TestMapLite_MapSfixed32Sfixed32Entry_descriptor, 
                  com.google.protobuf.WireFormat.FieldType.SFIXED32,
                  0,
                  com.google.protobuf.WireFormat.FieldType.SFIXED32,
                  0);
    }
    private com.google.protobuf.MapField<
        java.lang.Integer, java.lang.Integer> mapSfixed32Sfixed32_;
    private com.google.protobuf.MapField<java.lang.Integer, java.lang.Integer>
    internalGetMapSfixed32Sfixed32() {
      if (mapSfixed32Sfixed32_ == null) {
        return com.google.protobuf.MapField.emptyMapField(
            MapSfixed32Sfixed32DefaultEntryHolder.defaultEntry);
      }
      return mapSfixed32Sfixed32_;
    }

    public int getMapSfixed32Sfixed32Count() {
      return internalGetMapSfixed32Sfixed32().getMap().size();
    }
    /**
     * <code>map&lt;sfixed32, sfixed32&gt; map_sfixed32_sfixed32 = 9;</code>
     */

    @java.lang.Override
    public boolean containsMapSfixed32Sfixed32(
        int key) {
      
      return internalGetMapSfixed32Sfixed32().getMap().containsKey(key);
    }
    /**
     * Use {@link #getMapSfixed32Sfixed32Map()} instead.
     */
    @java.lang.Override
    @java.lang.Deprecated
    public java.util.Map<java.lang.Integer, java.lang.Integer> getMapSfixed32Sfixed32() {
      return getMapSfixed32Sfixed32Map();
    }
    /**
     * <code>map&lt;sfixed32, sfixed32&gt; map_sfixed32_sfixed32 = 9;</code>
     */
    @java.lang.Override

    public java.util.Map<java.lang.Integer, java.lang.Integer> getMapSfixed32Sfixed32Map() {
      return internalGetMapSfixed32Sfixed32().getMap();
    }
    /**
     * <code>map&lt;sfixed32, sfixed32&gt; map_sfixed32_sfixed32 = 9;</code>
     */
    @java.lang.Override

    public int getMapSfixed32Sfixed32OrDefault(
        int key,
        int defaultValue) {
      
      java.util.Map<java.lang.Integer, java.lang.Integer> map =
          internalGetMapSfixed32Sfixed32().getMap();
      return map.containsKey(key) ? map.get(key) : defaultValue;
    }
    /**
     * <code>map&lt;sfixed32, sfixed32&gt; map_sfixed32_sfixed32 = 9;</code>
     */
    @java.lang.Override

    public int getMapSfixed32Sfixed32OrThrow(
        int key) {
      
      java.util.Map<java.lang.Integer, java.lang.Integer> map =
          internalGetMapSfixed32Sfixed32().getMap();
      if (!map.containsKey(key)) {
        throw new java.lang.IllegalArgumentException();
      }
      return map.get(key);
    }

    public static final int MAP_SFIXED64_SFIXED64_FIELD_NUMBER = 10;
    private static final class MapSfixed64Sfixed64DefaultEntryHolder {
      static final com.google.protobuf.MapEntry<
          java.lang.Long, java.lang.Long> defaultEntry =
              com.google.protobuf.MapEntry
              .<java.lang.Long, java.lang.Long>newDefaultInstance(
                  protobuf_unittest.MapLiteUnittest.internal_static_protobuf_unittest_TestMapLite_MapSfixed64Sfixed64Entry_descriptor, 
                  com.google.protobuf.WireFormat.FieldType.SFIXED64,
                  0L,
                  com.google.protobuf.WireFormat.FieldType.SFIXED64,
                  0L);
    }
    private com.google.protobuf.MapField<
        java.lang.Long, java.lang.Long> mapSfixed64Sfixed64_;
    private com.google.protobuf.MapField<java.lang.Long, java.lang.Long>
    internalGetMapSfixed64Sfixed64() {
      if (mapSfixed64Sfixed64_ == null) {
        return com.google.protobuf.MapField.emptyMapField(
            MapSfixed64Sfixed64DefaultEntryHolder.defaultEntry);
      }
      return mapSfixed64Sfixed64_;
    }

    public int getMapSfixed64Sfixed64Count() {
      return internalGetMapSfixed64Sfixed64().getMap().size();
    }
    /**
     * <code>map&lt;sfixed64, sfixed64&gt; map_sfixed64_sfixed64 = 10;</code>
     */

    @java.lang.Override
    public boolean containsMapSfixed64Sfixed64(
        long key) {
      
      return internalGetMapSfixed64Sfixed64().getMap().containsKey(key);
    }
    /**
     * Use {@link #getMapSfixed64Sfixed64Map()} instead.
     */
    @java.lang.Override
    @java.lang.Deprecated
    public java.util.Map<java.lang.Long, java.lang.Long> getMapSfixed64Sfixed64() {
      return getMapSfixed64Sfixed64Map();
    }
    /**
     * <code>map&lt;sfixed64, sfixed64&gt; map_sfixed64_sfixed64 = 10;</code>
     */
    @java.lang.Override

    public java.util.Map<java.lang.Long, java.lang.Long> getMapSfixed64Sfixed64Map() {
      return internalGetMapSfixed64Sfixed64().getMap();
    }
    /**
     * <code>map&lt;sfixed64, sfixed64&gt; map_sfixed64_sfixed64 = 10;</code>
     */
    @java.lang.Override

    public long getMapSfixed64Sfixed64OrDefault(
        long key,
        long defaultValue) {
      
      java.util.Map<java.lang.Long, java.lang.Long> map =
          internalGetMapSfixed64Sfixed64().getMap();
      return map.containsKey(key) ? map.get(key) : defaultValue;
    }
    /**
     * <code>map&lt;sfixed64, sfixed64&gt; map_sfixed64_sfixed64 = 10;</code>
     */
    @java.lang.Override

    public long getMapSfixed64Sfixed64OrThrow(
        long key) {
      
      java.util.Map<java.lang.Long, java.lang.Long> map =
          internalGetMapSfixed64Sfixed64().getMap();
      if (!map.containsKey(key)) {
        throw new java.lang.IllegalArgumentException();
      }
      return map.get(key);
    }

    public static final int MAP_INT32_FLOAT_FIELD_NUMBER = 11;
    private static final class MapInt32FloatDefaultEntryHolder {
      static final com.google.protobuf.MapEntry<
          java.lang.Integer, java.lang.Float> defaultEntry =
              com.google.protobuf.MapEntry
              .<java.lang.Integer, java.lang.Float>newDefaultInstance(
                  protobuf_unittest.MapLiteUnittest.internal_static_protobuf_unittest_TestMapLite_MapInt32FloatEntry_descriptor, 
                  com.google.protobuf.WireFormat.FieldType.INT32,
                  0,
                  com.google.protobuf.WireFormat.FieldType.FLOAT,
                  0F);
    }
    private com.google.protobuf.MapField<
        java.lang.Integer, java.lang.Float> mapInt32Float_;
    private com.google.protobuf.MapField<java.lang.Integer, java.lang.Float>
    internalGetMapInt32Float() {
      if (mapInt32Float_ == null) {
        return com.google.protobuf.MapField.emptyMapField(
            MapInt32FloatDefaultEntryHolder.defaultEntry);
      }
      return mapInt32Float_;
    }

    public int getMapInt32FloatCount() {
      return internalGetMapInt32Float().getMap().size();
    }
    /**
     * <code>map&lt;int32, float&gt; map_int32_float = 11;</code>
     */

    @java.lang.Override
    public boolean containsMapInt32Float(
        int key) {
      
      return internalGetMapInt32Float().getMap().containsKey(key);
    }
    /**
     * Use {@link #getMapInt32FloatMap()} instead.
     */
    @java.lang.Override
    @java.lang.Deprecated
    public java.util.Map<java.lang.Integer, java.lang.Float> getMapInt32Float() {
      return getMapInt32FloatMap();
    }
    /**
     * <code>map&lt;int32, float&gt; map_int32_float = 11;</code>
     */
    @java.lang.Override

    public java.util.Map<java.lang.Integer, java.lang.Float> getMapInt32FloatMap() {
      return internalGetMapInt32Float().getMap();
    }
    /**
     * <code>map&lt;int32, float&gt; map_int32_float = 11;</code>
     */
    @java.lang.Override

    public float getMapInt32FloatOrDefault(
        int key,
        float defaultValue) {
      
      java.util.Map<java.lang.Integer, java.lang.Float> map =
          internalGetMapInt32Float().getMap();
      return map.containsKey(key) ? map.get(key) : defaultValue;
    }
    /**
     * <code>map&lt;int32, float&gt; map_int32_float = 11;</code>
     */
    @java.lang.Override

    public float getMapInt32FloatOrThrow(
        int key) {
      
      java.util.Map<java.lang.Integer, java.lang.Float> map =
          internalGetMapInt32Float().getMap();
      if (!map.containsKey(key)) {
        throw new java.lang.IllegalArgumentException();
      }
      return map.get(key);
    }

    public static final int MAP_INT32_DOUBLE_FIELD_NUMBER = 12;
    private static final class MapInt32DoubleDefaultEntryHolder {
      static final com.google.protobuf.MapEntry<
          java.lang.Integer, java.lang.Double> defaultEntry =
              com.google.protobuf.MapEntry
              .<java.lang.Integer, java.lang.Double>newDefaultInstance(
                  protobuf_unittest.MapLiteUnittest.internal_static_protobuf_unittest_TestMapLite_MapInt32DoubleEntry_descriptor, 
                  com.google.protobuf.WireFormat.FieldType.INT32,
                  0,
                  com.google.protobuf.WireFormat.FieldType.DOUBLE,
                  0D);
    }
    private com.google.protobuf.MapField<
        java.lang.Integer, java.lang.Double> mapInt32Double_;
    private com.google.protobuf.MapField<java.lang.Integer, java.lang.Double>
    internalGetMapInt32Double() {
      if (mapInt32Double_ == null) {
        return com.google.protobuf.MapField.emptyMapField(
            MapInt32DoubleDefaultEntryHolder.defaultEntry);
      }
      return mapInt32Double_;
    }

    public int getMapInt32DoubleCount() {
      return internalGetMapInt32Double().getMap().size();
    }
    /**
     * <code>map&lt;int32, double&gt; map_int32_double = 12;</code>
     */

    @java.lang.Override
    public boolean containsMapInt32Double(
        int key) {
      
      return internalGetMapInt32Double().getMap().containsKey(key);
    }
    /**
     * Use {@link #getMapInt32DoubleMap()} instead.
     */
    @java.lang.Override
    @java.lang.Deprecated
    public java.util.Map<java.lang.Integer, java.lang.Double> getMapInt32Double() {
      return getMapInt32DoubleMap();
    }
    /**
     * <code>map&lt;int32, double&gt; map_int32_double = 12;</code>
     */
    @java.lang.Override

    public java.util.Map<java.lang.Integer, java.lang.Double> getMapInt32DoubleMap() {
      return internalGetMapInt32Double().getMap();
    }
    /**
     * <code>map&lt;int32, double&gt; map_int32_double = 12;</code>
     */
    @java.lang.Override

    public double getMapInt32DoubleOrDefault(
        int key,
        double defaultValue) {
      
      java.util.Map<java.lang.Integer, java.lang.Double> map =
          internalGetMapInt32Double().getMap();
      return map.containsKey(key) ? map.get(key) : defaultValue;
    }
    /**
     * <code>map&lt;int32, double&gt; map_int32_double = 12;</code>
     */
    @java.lang.Override

    public double getMapInt32DoubleOrThrow(
        int key) {
      
      java.util.Map<java.lang.Integer, java.lang.Double> map =
          internalGetMapInt32Double().getMap();
      if (!map.containsKey(key)) {
        throw new java.lang.IllegalArgumentException();
      }
      return map.get(key);
    }

    public static final int MAP_BOOL_BOOL_FIELD_NUMBER = 13;
    private static final class MapBoolBoolDefaultEntryHolder {
      static final com.google.protobuf.MapEntry<
          java.lang.Boolean, java.lang.Boolean> defaultEntry =
              com.google.protobuf.MapEntry
              .<java.lang.Boolean, java.lang.Boolean>newDefaultInstance(
                  protobuf_unittest.MapLiteUnittest.internal_static_protobuf_unittest_TestMapLite_MapBoolBoolEntry_descriptor, 
                  com.google.protobuf.WireFormat.FieldType.BOOL,
                  false,
                  com.google.protobuf.WireFormat.FieldType.BOOL,
                  false);
    }
    private com.google.protobuf.MapField<
        java.lang.Boolean, java.lang.Boolean> mapBoolBool_;
    private com.google.protobuf.MapField<java.lang.Boolean, java.lang.Boolean>
    internalGetMapBoolBool() {
      if (mapBoolBool_ == null) {
        return com.google.protobuf.MapField.emptyMapField(
            MapBoolBoolDefaultEntryHolder.defaultEntry);
      }
      return mapBoolBool_;
    }

    public int getMapBoolBoolCount() {
      return internalGetMapBoolBool().getMap().size();
    }
    /**
     * <code>map&lt;bool, bool&gt; map_bool_bool = 13;</code>
     */

    @java.lang.Override
    public boolean containsMapBoolBool(
        boolean key) {
      
      return internalGetMapBoolBool().getMap().containsKey(key);
    }
    /**
     * Use {@link #getMapBoolBoolMap()} instead.
     */
    @java.lang.Override
    @java.lang.Deprecated
    public java.util.Map<java.lang.Boolean, java.lang.Boolean> getMapBoolBool() {
      return getMapBoolBoolMap();
    }
    /**
     * <code>map&lt;bool, bool&gt; map_bool_bool = 13;</code>
     */
    @java.lang.Override

    public java.util.Map<java.lang.Boolean, java.lang.Boolean> getMapBoolBoolMap() {
      return internalGetMapBoolBool().getMap();
    }
    /**
     * <code>map&lt;bool, bool&gt; map_bool_bool = 13;</code>
     */
    @java.lang.Override

    public boolean getMapBoolBoolOrDefault(
        boolean key,
        boolean defaultValue) {
      
      java.util.Map<java.lang.Boolean, java.lang.Boolean> map =
          internalGetMapBoolBool().getMap();
      return map.containsKey(key) ? map.get(key) : defaultValue;
    }
    /**
     * <code>map&lt;bool, bool&gt; map_bool_bool = 13;</code>
     */
    @java.lang.Override

    public boolean getMapBoolBoolOrThrow(
        boolean key) {
      
      java.util.Map<java.lang.Boolean, java.lang.Boolean> map =
          internalGetMapBoolBool().getMap();
      if (!map.containsKey(key)) {
        throw new java.lang.IllegalArgumentException();
      }
      return map.get(key);
    }

    public static final int MAP_STRING_STRING_FIELD_NUMBER = 14;
    private static final class MapStringStringDefaultEntryHolder {
      static final com.google.protobuf.MapEntry<
          java.lang.String, java.lang.String> defaultEntry =
              com.google.protobuf.MapEntry
              .<java.lang.String, java.lang.String>newDefaultInstance(
                  protobuf_unittest.MapLiteUnittest.internal_static_protobuf_unittest_TestMapLite_MapStringStringEntry_descriptor, 
                  com.google.protobuf.WireFormat.FieldType.STRING,
                  "",
                  com.google.protobuf.WireFormat.FieldType.STRING,
                  "");
    }
    private com.google.protobuf.MapField<
        java.lang.String, java.lang.String> mapStringString_;
    private com.google.protobuf.MapField<java.lang.String, java.lang.String>
    internalGetMapStringString() {
      if (mapStringString_ == null) {
        return com.google.protobuf.MapField.emptyMapField(
            MapStringStringDefaultEntryHolder.defaultEntry);
      }
      return mapStringString_;
    }

    public int getMapStringStringCount() {
      return internalGetMapStringString().getMap().size();
    }
    /**
     * <code>map&lt;string, string&gt; map_string_string = 14;</code>
     */

    @java.lang.Override
    public boolean containsMapStringString(
        java.lang.String key) {
      if (key == null) { throw new NullPointerException("map key"); }
      return internalGetMapStringString().getMap().containsKey(key);
    }
    /**
     * Use {@link #getMapStringStringMap()} instead.
     */
    @java.lang.Override
    @java.lang.Deprecated
    public java.util.Map<java.lang.String, java.lang.String> getMapStringString() {
      return getMapStringStringMap();
    }
    /**
     * <code>map&lt;string, string&gt; map_string_string = 14;</code>
     */
    @java.lang.Override

    public java.util.Map<java.lang.String, java.lang.String> getMapStringStringMap() {
      return internalGetMapStringString().getMap();
    }
    /**
     * <code>map&lt;string, string&gt; map_string_string = 14;</code>
     */
    @java.lang.Override

    public java.lang.String getMapStringStringOrDefault(
        java.lang.String key,
        java.lang.String defaultValue) {
      if (key == null) { throw new NullPointerException("map key"); }
      java.util.Map<java.lang.String, java.lang.String> map =
          internalGetMapStringString().getMap();
      return map.containsKey(key) ? map.get(key) : defaultValue;
    }
    /**
     * <code>map&lt;string, string&gt; map_string_string = 14;</code>
     */
    @java.lang.Override

    public java.lang.String getMapStringStringOrThrow(
        java.lang.String key) {
      if (key == null) { throw new NullPointerException("map key"); }
      java.util.Map<java.lang.String, java.lang.String> map =
          internalGetMapStringString().getMap();
      if (!map.containsKey(key)) {
        throw new java.lang.IllegalArgumentException();
      }
      return map.get(key);
    }

    public static final int MAP_INT32_BYTES_FIELD_NUMBER = 15;
    private static final class MapInt32BytesDefaultEntryHolder {
      static final com.google.protobuf.MapEntry<
          java.lang.Integer, com.google.protobuf.ByteString> defaultEntry =
              com.google.protobuf.MapEntry
              .<java.lang.Integer, com.google.protobuf.ByteString>newDefaultInstance(
                  protobuf_unittest.MapLiteUnittest.internal_static_protobuf_unittest_TestMapLite_MapInt32BytesEntry_descriptor, 
                  com.google.protobuf.WireFormat.FieldType.INT32,
                  0,
                  com.google.protobuf.WireFormat.FieldType.BYTES,
                  com.google.protobuf.ByteString.EMPTY);
    }
    private com.google.protobuf.MapField<
        java.lang.Integer, com.google.protobuf.ByteString> mapInt32Bytes_;
    private com.google.protobuf.MapField<java.lang.Integer, com.google.protobuf.ByteString>
    internalGetMapInt32Bytes() {
      if (mapInt32Bytes_ == null) {
        return com.google.protobuf.MapField.emptyMapField(
            MapInt32BytesDefaultEntryHolder.defaultEntry);
      }
      return mapInt32Bytes_;
    }

    public int getMapInt32BytesCount() {
      return internalGetMapInt32Bytes().getMap().size();
    }
    /**
     * <code>map&lt;int32, bytes&gt; map_int32_bytes = 15;</code>
     */

    @java.lang.Override
    public boolean containsMapInt32Bytes(
        int key) {
      
      return internalGetMapInt32Bytes().getMap().containsKey(key);
    }
    /**
     * Use {@link #getMapInt32BytesMap()} instead.
     */
    @java.lang.Override
    @java.lang.Deprecated
    public java.util.Map<java.lang.Integer, com.google.protobuf.ByteString> getMapInt32Bytes() {
      return getMapInt32BytesMap();
    }
    /**
     * <code>map&lt;int32, bytes&gt; map_int32_bytes = 15;</code>
     */
    @java.lang.Override

    public java.util.Map<java.lang.Integer, com.google.protobuf.ByteString> getMapInt32BytesMap() {
      return internalGetMapInt32Bytes().getMap();
    }
    /**
     * <code>map&lt;int32, bytes&gt; map_int32_bytes = 15;</code>
     */
    @java.lang.Override

    public com.google.protobuf.ByteString getMapInt32BytesOrDefault(
        int key,
        com.google.protobuf.ByteString defaultValue) {
      
      java.util.Map<java.lang.Integer, com.google.protobuf.ByteString> map =
          internalGetMapInt32Bytes().getMap();
      return map.containsKey(key) ? map.get(key) : defaultValue;
    }
    /**
     * <code>map&lt;int32, bytes&gt; map_int32_bytes = 15;</code>
     */
    @java.lang.Override

    public com.google.protobuf.ByteString getMapInt32BytesOrThrow(
        int key) {
      
      java.util.Map<java.lang.Integer, com.google.protobuf.ByteString> map =
          internalGetMapInt32Bytes().getMap();
      if (!map.containsKey(key)) {
        throw new java.lang.IllegalArgumentException();
      }
      return map.get(key);
    }

    public static final int MAP_INT32_ENUM_FIELD_NUMBER = 16;
    private static final class MapInt32EnumDefaultEntryHolder {
      static final com.google.protobuf.MapEntry<
          java.lang.Integer, java.lang.Integer> defaultEntry =
              com.google.protobuf.MapEntry
              .<java.lang.Integer, java.lang.Integer>newDefaultInstance(
                  protobuf_unittest.MapLiteUnittest.internal_static_protobuf_unittest_TestMapLite_MapInt32EnumEntry_descriptor, 
                  com.google.protobuf.WireFormat.FieldType.INT32,
                  0,
                  com.google.protobuf.WireFormat.FieldType.ENUM,
                  protobuf_unittest.MapLiteUnittest.MapEnumLite.MAP_ENUM_FOO_LITE.getNumber());
    }
    private com.google.protobuf.MapField<
        java.lang.Integer, java.lang.Integer> mapInt32Enum_;
    private com.google.protobuf.MapField<java.lang.Integer, java.lang.Integer>
    internalGetMapInt32Enum() {
      if (mapInt32Enum_ == null) {
        return com.google.protobuf.MapField.emptyMapField(
            MapInt32EnumDefaultEntryHolder.defaultEntry);
      }
      return mapInt32Enum_;
    }
    private static final
    com.google.protobuf.Internal.MapAdapter.Converter<
        java.lang.Integer, protobuf_unittest.MapLiteUnittest.MapEnumLite> mapInt32EnumValueConverter =
            com.google.protobuf.Internal.MapAdapter.newEnumConverter(
                protobuf_unittest.MapLiteUnittest.MapEnumLite.internalGetValueMap(),
                protobuf_unittest.MapLiteUnittest.MapEnumLite.MAP_ENUM_FOO_LITE);
    private static final java.util.Map<java.lang.Integer, protobuf_unittest.MapLiteUnittest.MapEnumLite>
    internalGetAdaptedMapInt32EnumMap(
        java.util.Map<java.lang.Integer, java.lang.Integer> map) {
      return new com.google.protobuf.Internal.MapAdapter<
          java.lang.Integer, protobuf_unittest.MapLiteUnittest.MapEnumLite, java.lang.Integer>(
              map, mapInt32EnumValueConverter);
    }

    public int getMapInt32EnumCount() {
      return internalGetMapInt32Enum().getMap().size();
    }
    /**
     * <code>map&lt;int32, .protobuf_unittest.MapEnumLite&gt; map_int32_enum = 16;</code>
     */

    @java.lang.Override
    public boolean containsMapInt32Enum(
        int key) {
      
      return internalGetMapInt32Enum().getMap().containsKey(key);
    }
    /**
     * Use {@link #getMapInt32EnumMap()} instead.
     */
    @java.lang.Override
    @java.lang.Deprecated
    public java.util.Map<java.lang.Integer, protobuf_unittest.MapLiteUnittest.MapEnumLite>
    getMapInt32Enum() {
      return getMapInt32EnumMap();
    }
    /**
     * <code>map&lt;int32, .protobuf_unittest.MapEnumLite&gt; map_int32_enum = 16;</code>
     */
    @java.lang.Override

    public java.util.Map<java.lang.Integer, protobuf_unittest.MapLiteUnittest.MapEnumLite>
    getMapInt32EnumMap() {
      return internalGetAdaptedMapInt32EnumMap(
          internalGetMapInt32Enum().getMap());}
    /**
     * <code>map&lt;int32, .protobuf_unittest.MapEnumLite&gt; map_int32_enum = 16;</code>
     */
    @java.lang.Override

    public /* nullable */
protobuf_unittest.MapLiteUnittest.MapEnumLite getMapInt32EnumOrDefault(
        int key,
        /* nullable */
protobuf_unittest.MapLiteUnittest.MapEnumLite defaultValue) {
      
      java.util.Map<java.lang.Integer, java.lang.Integer> map =
          internalGetMapInt32Enum().getMap();
      return map.containsKey(key)
             ? mapInt32EnumValueConverter.doForward(map.get(key))
             : defaultValue;
    }
    /**
     * <code>map&lt;int32, .protobuf_unittest.MapEnumLite&gt; map_int32_enum = 16;</code>
     */
    @java.lang.Override

    public protobuf_unittest.MapLiteUnittest.MapEnumLite getMapInt32EnumOrThrow(
        int key) {
      
      java.util.Map<java.lang.Integer, java.lang.Integer> map =
          internalGetMapInt32Enum().getMap();
      if (!map.containsKey(key)) {
        throw new java.lang.IllegalArgumentException();
      }
      return mapInt32EnumValueConverter.doForward(map.get(key));
    }

    public static final int MAP_INT32_FOREIGN_MESSAGE_FIELD_NUMBER = 17;
    private static final class MapInt32ForeignMessageDefaultEntryHolder {
      static final com.google.protobuf.MapEntry<
          java.lang.Integer, com.google.protobuf.UnittestLite.ForeignMessageLite> defaultEntry =
              com.google.protobuf.MapEntry
              .<java.lang.Integer, com.google.protobuf.UnittestLite.ForeignMessageLite>newDefaultInstance(
                  protobuf_unittest.MapLiteUnittest.internal_static_protobuf_unittest_TestMapLite_MapInt32ForeignMessageEntry_descriptor, 
                  com.google.protobuf.WireFormat.FieldType.INT32,
                  0,
                  com.google.protobuf.WireFormat.FieldType.MESSAGE,
                  com.google.protobuf.UnittestLite.ForeignMessageLite.getDefaultInstance());
    }
    private com.google.protobuf.MapField<
        java.lang.Integer, com.google.protobuf.UnittestLite.ForeignMessageLite> mapInt32ForeignMessage_;
    private com.google.protobuf.MapField<java.lang.Integer, com.google.protobuf.UnittestLite.ForeignMessageLite>
    internalGetMapInt32ForeignMessage() {
      if (mapInt32ForeignMessage_ == null) {
        return com.google.protobuf.MapField.emptyMapField(
            MapInt32ForeignMessageDefaultEntryHolder.defaultEntry);
      }
      return mapInt32ForeignMessage_;
    }

    public int getMapInt32ForeignMessageCount() {
      return internalGetMapInt32ForeignMessage().getMap().size();
    }
    /**
     * <code>map&lt;int32, .protobuf_unittest.ForeignMessageLite&gt; map_int32_foreign_message = 17;</code>
     */

    @java.lang.Override
    public boolean containsMapInt32ForeignMessage(
        int key) {
      
      return internalGetMapInt32ForeignMessage().getMap().containsKey(key);
    }
    /**
     * Use {@link #getMapInt32ForeignMessageMap()} instead.
     */
    @java.lang.Override
    @java.lang.Deprecated
    public java.util.Map<java.lang.Integer, com.google.protobuf.UnittestLite.ForeignMessageLite> getMapInt32ForeignMessage() {
      return getMapInt32ForeignMessageMap();
    }
    /**
     * <code>map&lt;int32, .protobuf_unittest.ForeignMessageLite&gt; map_int32_foreign_message = 17;</code>
     */
    @java.lang.Override

    public java.util.Map<java.lang.Integer, com.google.protobuf.UnittestLite.ForeignMessageLite> getMapInt32ForeignMessageMap() {
      return internalGetMapInt32ForeignMessage().getMap();
    }
    /**
     * <code>map&lt;int32, .protobuf_unittest.ForeignMessageLite&gt; map_int32_foreign_message = 17;</code>
     */
    @java.lang.Override

    public com.google.protobuf.UnittestLite.ForeignMessageLite getMapInt32ForeignMessageOrDefault(
        int key,
        com.google.protobuf.UnittestLite.ForeignMessageLite defaultValue) {
      
      java.util.Map<java.lang.Integer, com.google.protobuf.UnittestLite.ForeignMessageLite> map =
          internalGetMapInt32ForeignMessage().getMap();
      return map.containsKey(key) ? map.get(key) : defaultValue;
    }
    /**
     * <code>map&lt;int32, .protobuf_unittest.ForeignMessageLite&gt; map_int32_foreign_message = 17;</code>
     */
    @java.lang.Override

    public com.google.protobuf.UnittestLite.ForeignMessageLite getMapInt32ForeignMessageOrThrow(
        int key) {
      
      java.util.Map<java.lang.Integer, com.google.protobuf.UnittestLite.ForeignMessageLite> map =
          internalGetMapInt32ForeignMessage().getMap();
      if (!map.containsKey(key)) {
        throw new java.lang.IllegalArgumentException();
      }
      return map.get(key);
    }

    public static final int TEBORING_FIELD_NUMBER = 18;
    private static final class TeboringDefaultEntryHolder {
      static final com.google.protobuf.MapEntry<
          java.lang.Integer, java.lang.Integer> defaultEntry =
              com.google.protobuf.MapEntry
              .<java.lang.Integer, java.lang.Integer>newDefaultInstance(
                  protobuf_unittest.MapLiteUnittest.internal_static_protobuf_unittest_TestMapLite_TeboringEntry_descriptor, 
                  com.google.protobuf.WireFormat.FieldType.INT32,
                  0,
                  com.google.protobuf.WireFormat.FieldType.INT32,
                  0);
    }
    private com.google.protobuf.MapField<
        java.lang.Integer, java.lang.Integer> teboring_;
    private com.google.protobuf.MapField<java.lang.Integer, java.lang.Integer>
    internalGetTeboring() {
      if (teboring_ == null) {
        return com.google.protobuf.MapField.emptyMapField(
            TeboringDefaultEntryHolder.defaultEntry);
      }
      return teboring_;
    }

    public int getTeboringCount() {
      return internalGetTeboring().getMap().size();
    }
    /**
     * <code>map&lt;int32, int32&gt; teboring = 18;</code>
     */

    @java.lang.Override
    public boolean containsTeboring(
        int key) {
      
      return internalGetTeboring().getMap().containsKey(key);
    }
    /**
     * Use {@link #getTeboringMap()} instead.
     */
    @java.lang.Override
    @java.lang.Deprecated
    public java.util.Map<java.lang.Integer, java.lang.Integer> getTeboring() {
      return getTeboringMap();
    }
    /**
     * <code>map&lt;int32, int32&gt; teboring = 18;</code>
     */
    @java.lang.Override

    public java.util.Map<java.lang.Integer, java.lang.Integer> getTeboringMap() {
      return internalGetTeboring().getMap();
    }
    /**
     * <code>map&lt;int32, int32&gt; teboring = 18;</code>
     */
    @java.lang.Override

    public int getTeboringOrDefault(
        int key,
        int defaultValue) {
      
      java.util.Map<java.lang.Integer, java.lang.Integer> map =
          internalGetTeboring().getMap();
      return map.containsKey(key) ? map.get(key) : defaultValue;
    }
    /**
     * <code>map&lt;int32, int32&gt; teboring = 18;</code>
     */
    @java.lang.Override

    public int getTeboringOrThrow(
        int key) {
      
      java.util.Map<java.lang.Integer, java.lang.Integer> map =
          internalGetTeboring().getMap();
      if (!map.containsKey(key)) {
        throw new java.lang.IllegalArgumentException();
      }
      return map.get(key);
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      com.google.protobuf.GeneratedMessageV3
        .serializeIntegerMapTo(
          output,
          internalGetMapInt32Int32(),
          MapInt32Int32DefaultEntryHolder.defaultEntry,
          1);
      com.google.protobuf.GeneratedMessageV3
        .serializeLongMapTo(
          output,
          internalGetMapInt64Int64(),
          MapInt64Int64DefaultEntryHolder.defaultEntry,
          2);
      com.google.protobuf.GeneratedMessageV3
        .serializeIntegerMapTo(
          output,
          internalGetMapUint32Uint32(),
          MapUint32Uint32DefaultEntryHolder.defaultEntry,
          3);
      com.google.protobuf.GeneratedMessageV3
        .serializeLongMapTo(
          output,
          internalGetMapUint64Uint64(),
          MapUint64Uint64DefaultEntryHolder.defaultEntry,
          4);
      com.google.protobuf.GeneratedMessageV3
        .serializeIntegerMapTo(
          output,
          internalGetMapSint32Sint32(),
          MapSint32Sint32DefaultEntryHolder.defaultEntry,
          5);
      com.google.protobuf.GeneratedMessageV3
        .serializeLongMapTo(
          output,
          internalGetMapSint64Sint64(),
          MapSint64Sint64DefaultEntryHolder.defaultEntry,
          6);
      com.google.protobuf.GeneratedMessageV3
        .serializeIntegerMapTo(
          output,
          internalGetMapFixed32Fixed32(),
          MapFixed32Fixed32DefaultEntryHolder.defaultEntry,
          7);
      com.google.protobuf.GeneratedMessageV3
        .serializeLongMapTo(
          output,
          internalGetMapFixed64Fixed64(),
          MapFixed64Fixed64DefaultEntryHolder.defaultEntry,
          8);
      com.google.protobuf.GeneratedMessageV3
        .serializeIntegerMapTo(
          output,
          internalGetMapSfixed32Sfixed32(),
          MapSfixed32Sfixed32DefaultEntryHolder.defaultEntry,
          9);
      com.google.protobuf.GeneratedMessageV3
        .serializeLongMapTo(
          output,
          internalGetMapSfixed64Sfixed64(),
          MapSfixed64Sfixed64DefaultEntryHolder.defaultEntry,
          10);
      com.google.protobuf.GeneratedMessageV3
        .serializeIntegerMapTo(
          output,
          internalGetMapInt32Float(),
          MapInt32FloatDefaultEntryHolder.defaultEntry,
          11);
      com.google.protobuf.GeneratedMessageV3
        .serializeIntegerMapTo(
          output,
          internalGetMapInt32Double(),
          MapInt32DoubleDefaultEntryHolder.defaultEntry,
          12);
      com.google.protobuf.GeneratedMessageV3
        .serializeBooleanMapTo(
          output,
          internalGetMapBoolBool(),
          MapBoolBoolDefaultEntryHolder.defaultEntry,
          13);
      com.google.protobuf.GeneratedMessageV3
        .serializeStringMapTo(
          output,
          internalGetMapStringString(),
          MapStringStringDefaultEntryHolder.defaultEntry,
          14);
      com.google.protobuf.GeneratedMessageV3
        .serializeIntegerMapTo(
          output,
          internalGetMapInt32Bytes(),
          MapInt32BytesDefaultEntryHolder.defaultEntry,
          15);
      com.google.protobuf.GeneratedMessageV3
        .serializeIntegerMapTo(
          output,
          internalGetMapInt32Enum(),
          MapInt32EnumDefaultEntryHolder.defaultEntry,
          16);
      com.google.protobuf.GeneratedMessageV3
        .serializeIntegerMapTo(
          output,
          internalGetMapInt32ForeignMessage(),
          MapInt32ForeignMessageDefaultEntryHolder.defaultEntry,
          17);
      com.google.protobuf.GeneratedMessageV3
        .serializeIntegerMapTo(
          output,
          internalGetTeboring(),
          TeboringDefaultEntryHolder.defaultEntry,
          18);
      unknownFields.writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      for (java.util.Map.Entry<java.lang.Integer, java.lang.Integer> entry
           : internalGetMapInt32Int32().getMap().entrySet()) {
        com.google.protobuf.MapEntry<java.lang.Integer, java.lang.Integer>
        mapInt32Int32__ = MapInt32Int32DefaultEntryHolder.defaultEntry.newBuilderForType()
            .setKey(entry.getKey())
            .setValue(entry.getValue())
            .build();
        size += com.google.protobuf.CodedOutputStream
            .computeMessageSize(1, mapInt32Int32__);
      }
      for (java.util.Map.Entry<java.lang.Long, java.lang.Long> entry
           : internalGetMapInt64Int64().getMap().entrySet()) {
        com.google.protobuf.MapEntry<java.lang.Long, java.lang.Long>
        mapInt64Int64__ = MapInt64Int64DefaultEntryHolder.defaultEntry.newBuilderForType()
            .setKey(entry.getKey())
            .setValue(entry.getValue())
            .build();
        size += com.google.protobuf.CodedOutputStream
            .computeMessageSize(2, mapInt64Int64__);
      }
      for (java.util.Map.Entry<java.lang.Integer, java.lang.Integer> entry
           : internalGetMapUint32Uint32().getMap().entrySet()) {
        com.google.protobuf.MapEntry<java.lang.Integer, java.lang.Integer>
        mapUint32Uint32__ = MapUint32Uint32DefaultEntryHolder.defaultEntry.newBuilderForType()
            .setKey(entry.getKey())
            .setValue(entry.getValue())
            .build();
        size += com.google.protobuf.CodedOutputStream
            .computeMessageSize(3, mapUint32Uint32__);
      }
      for (java.util.Map.Entry<java.lang.Long, java.lang.Long> entry
           : internalGetMapUint64Uint64().getMap().entrySet()) {
        com.google.protobuf.MapEntry<java.lang.Long, java.lang.Long>
        mapUint64Uint64__ = MapUint64Uint64DefaultEntryHolder.defaultEntry.newBuilderForType()
            .setKey(entry.getKey())
            .setValue(entry.getValue())
            .build();
        size += com.google.protobuf.CodedOutputStream
            .computeMessageSize(4, mapUint64Uint64__);
      }
      for (java.util.Map.Entry<java.lang.Integer, java.lang.Integer> entry
           : internalGetMapSint32Sint32().getMap().entrySet()) {
        com.google.protobuf.MapEntry<java.lang.Integer, java.lang.Integer>
        mapSint32Sint32__ = MapSint32Sint32DefaultEntryHolder.defaultEntry.newBuilderForType()
            .setKey(entry.getKey())
            .setValue(entry.getValue())
            .build();
        size += com.google.protobuf.CodedOutputStream
            .computeMessageSize(5, mapSint32Sint32__);
      }
      for (java.util.Map.Entry<java.lang.Long, java.lang.Long> entry
           : internalGetMapSint64Sint64().getMap().entrySet()) {
        com.google.protobuf.MapEntry<java.lang.Long, java.lang.Long>
        mapSint64Sint64__ = MapSint64Sint64DefaultEntryHolder.defaultEntry.newBuilderForType()
            .setKey(entry.getKey())
            .setValue(entry.getValue())
            .build();
        size += com.google.protobuf.CodedOutputStream
            .computeMessageSize(6, mapSint64Sint64__);
      }
      for (java.util.Map.Entry<java.lang.Integer, java.lang.Integer> entry
           : internalGetMapFixed32Fixed32().getMap().entrySet()) {
        com.google.protobuf.MapEntry<java.lang.Integer, java.lang.Integer>
        mapFixed32Fixed32__ = MapFixed32Fixed32DefaultEntryHolder.defaultEntry.newBuilderForType()
            .setKey(entry.getKey())
            .setValue(entry.getValue())
            .build();
        size += com.google.protobuf.CodedOutputStream
            .computeMessageSize(7, mapFixed32Fixed32__);
      }
      for (java.util.Map.Entry<java.lang.Long, java.lang.Long> entry
           : internalGetMapFixed64Fixed64().getMap().entrySet()) {
        com.google.protobuf.MapEntry<java.lang.Long, java.lang.Long>
        mapFixed64Fixed64__ = MapFixed64Fixed64DefaultEntryHolder.defaultEntry.newBuilderForType()
            .setKey(entry.getKey())
            .setValue(entry.getValue())
            .build();
        size += com.google.protobuf.CodedOutputStream
            .computeMessageSize(8, mapFixed64Fixed64__);
      }
      for (java.util.Map.Entry<java.lang.Integer, java.lang.Integer> entry
           : internalGetMapSfixed32Sfixed32().getMap().entrySet()) {
        com.google.protobuf.MapEntry<java.lang.Integer, java.lang.Integer>
        mapSfixed32Sfixed32__ = MapSfixed32Sfixed32DefaultEntryHolder.defaultEntry.newBuilderForType()
            .setKey(entry.getKey())
            .setValue(entry.getValue())
            .build();
        size += com.google.protobuf.CodedOutputStream
            .computeMessageSize(9, mapSfixed32Sfixed32__);
      }
      for (java.util.Map.Entry<java.lang.Long, java.lang.Long> entry
           : internalGetMapSfixed64Sfixed64().getMap().entrySet()) {
        com.google.protobuf.MapEntry<java.lang.Long, java.lang.Long>
        mapSfixed64Sfixed64__ = MapSfixed64Sfixed64DefaultEntryHolder.defaultEntry.newBuilderForType()
            .setKey(entry.getKey())
            .setValue(entry.getValue())
            .build();
        size += com.google.protobuf.CodedOutputStream
            .computeMessageSize(10, mapSfixed64Sfixed64__);
      }
      for (java.util.Map.Entry<java.lang.Integer, java.lang.Float> entry
           : internalGetMapInt32Float().getMap().entrySet()) {
        com.google.protobuf.MapEntry<java.lang.Integer, java.lang.Float>
        mapInt32Float__ = MapInt32FloatDefaultEntryHolder.defaultEntry.newBuilderForType()
            .setKey(entry.getKey())
            .setValue(entry.getValue())
            .build();
        size += com.google.protobuf.CodedOutputStream
            .computeMessageSize(11, mapInt32Float__);
      }
      for (java.util.Map.Entry<java.lang.Integer, java.lang.Double> entry
           : internalGetMapInt32Double().getMap().entrySet()) {
        com.google.protobuf.MapEntry<java.lang.Integer, java.lang.Double>
        mapInt32Double__ = MapInt32DoubleDefaultEntryHolder.defaultEntry.newBuilderForType()
            .setKey(entry.getKey())
            .setValue(entry.getValue())
            .build();
        size += com.google.protobuf.CodedOutputStream
            .computeMessageSize(12, mapInt32Double__);
      }
      for (java.util.Map.Entry<java.lang.Boolean, java.lang.Boolean> entry
           : internalGetMapBoolBool().getMap().entrySet()) {
        com.google.protobuf.MapEntry<java.lang.Boolean, java.lang.Boolean>
        mapBoolBool__ = MapBoolBoolDefaultEntryHolder.defaultEntry.newBuilderForType()
            .setKey(entry.getKey())
            .setValue(entry.getValue())
            .build();
        size += com.google.protobuf.CodedOutputStream
            .computeMessageSize(13, mapBoolBool__);
      }
      for (java.util.Map.Entry<java.lang.String, java.lang.String> entry
           : internalGetMapStringString().getMap().entrySet()) {
        com.google.protobuf.MapEntry<java.lang.String, java.lang.String>
        mapStringString__ = MapStringStringDefaultEntryHolder.defaultEntry.newBuilderForType()
            .setKey(entry.getKey())
            .setValue(entry.getValue())
            .build();
        size += com.google.protobuf.CodedOutputStream
            .computeMessageSize(14, mapStringString__);
      }
      for (java.util.Map.Entry<java.lang.Integer, com.google.protobuf.ByteString> entry
           : internalGetMapInt32Bytes().getMap().entrySet()) {
        com.google.protobuf.MapEntry<java.lang.Integer, com.google.protobuf.ByteString>
        mapInt32Bytes__ = MapInt32BytesDefaultEntryHolder.defaultEntry.newBuilderForType()
            .setKey(entry.getKey())
            .setValue(entry.getValue())
            .build();
        size += com.google.protobuf.CodedOutputStream
            .computeMessageSize(15, mapInt32Bytes__);
      }
      for (java.util.Map.Entry<java.lang.Integer, java.lang.Integer> entry
           : internalGetMapInt32Enum().getMap().entrySet()) {
        com.google.protobuf.MapEntry<java.lang.Integer, java.lang.Integer>
        mapInt32Enum__ = MapInt32EnumDefaultEntryHolder.defaultEntry.newBuilderForType()
            .setKey(entry.getKey())
            .setValue(entry.getValue())
            .build();
        size += com.google.protobuf.CodedOutputStream
            .computeMessageSize(16, mapInt32Enum__);
      }
      for (java.util.Map.Entry<java.lang.Integer, com.google.protobuf.UnittestLite.ForeignMessageLite> entry
           : internalGetMapInt32ForeignMessage().getMap().entrySet()) {
        com.google.protobuf.MapEntry<java.lang.Integer, com.google.protobuf.UnittestLite.ForeignMessageLite>
        mapInt32ForeignMessage__ = MapInt32ForeignMessageDefaultEntryHolder.defaultEntry.newBuilderForType()
            .setKey(entry.getKey())
            .setValue(entry.getValue())
            .build();
        size += com.google.protobuf.CodedOutputStream
            .computeMessageSize(17, mapInt32ForeignMessage__);
      }
      for (java.util.Map.Entry<java.lang.Integer, java.lang.Integer> entry
           : internalGetTeboring().getMap().entrySet()) {
        com.google.protobuf.MapEntry<java.lang.Integer, java.lang.Integer>
        teboring__ = TeboringDefaultEntryHolder.defaultEntry.newBuilderForType()
            .setKey(entry.getKey())
            .setValue(entry.getValue())
            .build();
        size += com.google.protobuf.CodedOutputStream
            .computeMessageSize(18, teboring__);
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof protobuf_unittest.MapLiteUnittest.TestMapLite)) {
        return super.equals(obj);
      }
      protobuf_unittest.MapLiteUnittest.TestMapLite other = (protobuf_unittest.MapLiteUnittest.TestMapLite) obj;

      if (!internalGetMapInt32Int32().equals(
          other.internalGetMapInt32Int32())) return false;
      if (!internalGetMapInt64Int64().equals(
          other.internalGetMapInt64Int64())) return false;
      if (!internalGetMapUint32Uint32().equals(
          other.internalGetMapUint32Uint32())) return false;
      if (!internalGetMapUint64Uint64().equals(
          other.internalGetMapUint64Uint64())) return false;
      if (!internalGetMapSint32Sint32().equals(
          other.internalGetMapSint32Sint32())) return false;
      if (!internalGetMapSint64Sint64().equals(
          other.internalGetMapSint64Sint64())) return false;
      if (!internalGetMapFixed32Fixed32().equals(
          other.internalGetMapFixed32Fixed32())) return false;
      if (!internalGetMapFixed64Fixed64().equals(
          other.internalGetMapFixed64Fixed64())) return false;
      if (!internalGetMapSfixed32Sfixed32().equals(
          other.internalGetMapSfixed32Sfixed32())) return false;
      if (!internalGetMapSfixed64Sfixed64().equals(
          other.internalGetMapSfixed64Sfixed64())) return false;
      if (!internalGetMapInt32Float().equals(
          other.internalGetMapInt32Float())) return false;
      if (!internalGetMapInt32Double().equals(
          other.internalGetMapInt32Double())) return false;
      if (!internalGetMapBoolBool().equals(
          other.internalGetMapBoolBool())) return false;
      if (!internalGetMapStringString().equals(
          other.internalGetMapStringString())) return false;
      if (!internalGetMapInt32Bytes().equals(
          other.internalGetMapInt32Bytes())) return false;
      if (!internalGetMapInt32Enum().equals(
          other.internalGetMapInt32Enum())) return false;
      if (!internalGetMapInt32ForeignMessage().equals(
          other.internalGetMapInt32ForeignMessage())) return false;
      if (!internalGetTeboring().equals(
          other.internalGetTeboring())) return false;
      if (!unknownFields.equals(other.unknownFields)) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      if (!internalGetMapInt32Int32().getMap().isEmpty()) {
        hash = (37 * hash) + MAP_INT32_INT32_FIELD_NUMBER;
        hash = (53 * hash) + internalGetMapInt32Int32().hashCode();
      }
      if (!internalGetMapInt64Int64().getMap().isEmpty()) {
        hash = (37 * hash) + MAP_INT64_INT64_FIELD_NUMBER;
        hash = (53 * hash) + internalGetMapInt64Int64().hashCode();
      }
      if (!internalGetMapUint32Uint32().getMap().isEmpty()) {
        hash = (37 * hash) + MAP_UINT32_UINT32_FIELD_NUMBER;
        hash = (53 * hash) + internalGetMapUint32Uint32().hashCode();
      }
      if (!internalGetMapUint64Uint64().getMap().isEmpty()) {
        hash = (37 * hash) + MAP_UINT64_UINT64_FIELD_NUMBER;
        hash = (53 * hash) + internalGetMapUint64Uint64().hashCode();
      }
      if (!internalGetMapSint32Sint32().getMap().isEmpty()) {
        hash = (37 * hash) + MAP_SINT32_SINT32_FIELD_NUMBER;
        hash = (53 * hash) + internalGetMapSint32Sint32().hashCode();
      }
      if (!internalGetMapSint64Sint64().getMap().isEmpty()) {
        hash = (37 * hash) + MAP_SINT64_SINT64_FIELD_NUMBER;
        hash = (53 * hash) + internalGetMapSint64Sint64().hashCode();
      }
      if (!internalGetMapFixed32Fixed32().getMap().isEmpty()) {
        hash = (37 * hash) + MAP_FIXED32_FIXED32_FIELD_NUMBER;
        hash = (53 * hash) + internalGetMapFixed32Fixed32().hashCode();
      }
      if (!internalGetMapFixed64Fixed64().getMap().isEmpty()) {
        hash = (37 * hash) + MAP_FIXED64_FIXED64_FIELD_NUMBER;
        hash = (53 * hash) + internalGetMapFixed64Fixed64().hashCode();
      }
      if (!internalGetMapSfixed32Sfixed32().getMap().isEmpty()) {
        hash = (37 * hash) + MAP_SFIXED32_SFIXED32_FIELD_NUMBER;
        hash = (53 * hash) + internalGetMapSfixed32Sfixed32().hashCode();
      }
      if (!internalGetMapSfixed64Sfixed64().getMap().isEmpty()) {
        hash = (37 * hash) + MAP_SFIXED64_SFIXED64_FIELD_NUMBER;
        hash = (53 * hash) + internalGetMapSfixed64Sfixed64().hashCode();
      }
      if (!internalGetMapInt32Float().getMap().isEmpty()) {
        hash = (37 * hash) + MAP_INT32_FLOAT_FIELD_NUMBER;
        hash = (53 * hash) + internalGetMapInt32Float().hashCode();
      }
      if (!internalGetMapInt32Double().getMap().isEmpty()) {
        hash = (37 * hash) + MAP_INT32_DOUBLE_FIELD_NUMBER;
        hash = (53 * hash) + internalGetMapInt32Double().hashCode();
      }
      if (!internalGetMapBoolBool().getMap().isEmpty()) {
        hash = (37 * hash) + MAP_BOOL_BOOL_FIELD_NUMBER;
        hash = (53 * hash) + internalGetMapBoolBool().hashCode();
      }
      if (!internalGetMapStringString().getMap().isEmpty()) {
        hash = (37 * hash) + MAP_STRING_STRING_FIELD_NUMBER;
        hash = (53 * hash) + internalGetMapStringString().hashCode();
      }
      if (!internalGetMapInt32Bytes().getMap().isEmpty()) {
        hash = (37 * hash) + MAP_INT32_BYTES_FIELD_NUMBER;
        hash = (53 * hash) + internalGetMapInt32Bytes().hashCode();
      }
      if (!internalGetMapInt32Enum().getMap().isEmpty()) {
        hash = (37 * hash) + MAP_INT32_ENUM_FIELD_NUMBER;
        hash = (53 * hash) + internalGetMapInt32Enum().hashCode();
      }
      if (!internalGetMapInt32ForeignMessage().getMap().isEmpty()) {
        hash = (37 * hash) + MAP_INT32_FOREIGN_MESSAGE_FIELD_NUMBER;
        hash = (53 * hash) + internalGetMapInt32ForeignMessage().hashCode();
      }
      if (!internalGetTeboring().getMap().isEmpty()) {
        hash = (37 * hash) + TEBORING_FIELD_NUMBER;
        hash = (53 * hash) + internalGetTeboring().hashCode();
      }
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static protobuf_unittest.MapLiteUnittest.TestMapLite parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static protobuf_unittest.MapLiteUnittest.TestMapLite parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static protobuf_unittest.MapLiteUnittest.TestMapLite parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static protobuf_unittest.MapLiteUnittest.TestMapLite parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static protobuf_unittest.MapLiteUnittest.TestMapLite parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static protobuf_unittest.MapLiteUnittest.TestMapLite parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static protobuf_unittest.MapLiteUnittest.TestMapLite parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static protobuf_unittest.MapLiteUnittest.TestMapLite parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static protobuf_unittest.MapLiteUnittest.TestMapLite parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static protobuf_unittest.MapLiteUnittest.TestMapLite parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static protobuf_unittest.MapLiteUnittest.TestMapLite parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static protobuf_unittest.MapLiteUnittest.TestMapLite parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(protobuf_unittest.MapLiteUnittest.TestMapLite prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code protobuf_unittest.TestMapLite}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:protobuf_unittest.TestMapLite)
        protobuf_unittest.MapLiteUnittest.TestMapLiteOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return protobuf_unittest.MapLiteUnittest.internal_static_protobuf_unittest_TestMapLite_descriptor;
      }

      @SuppressWarnings({"rawtypes"})
      protected com.google.protobuf.MapField internalGetMapField(
          int number) {
        switch (number) {
          case 1:
            return internalGetMapInt32Int32();
          case 2:
            return internalGetMapInt64Int64();
          case 3:
            return internalGetMapUint32Uint32();
          case 4:
            return internalGetMapUint64Uint64();
          case 5:
            return internalGetMapSint32Sint32();
          case 6:
            return internalGetMapSint64Sint64();
          case 7:
            return internalGetMapFixed32Fixed32();
          case 8:
            return internalGetMapFixed64Fixed64();
          case 9:
            return internalGetMapSfixed32Sfixed32();
          case 10:
            return internalGetMapSfixed64Sfixed64();
          case 11:
            return internalGetMapInt32Float();
          case 12:
            return internalGetMapInt32Double();
          case 13:
            return internalGetMapBoolBool();
          case 14:
            return internalGetMapStringString();
          case 15:
            return internalGetMapInt32Bytes();
          case 16:
            return internalGetMapInt32Enum();
          case 17:
            return internalGetMapInt32ForeignMessage();
          case 18:
            return internalGetTeboring();
          default:
            throw new RuntimeException(
                "Invalid map field number: " + number);
        }
      }
      @SuppressWarnings({"rawtypes"})
      protected com.google.protobuf.MapField internalGetMutableMapField(
          int number) {
        switch (number) {
          case 1:
            return internalGetMutableMapInt32Int32();
          case 2:
            return internalGetMutableMapInt64Int64();
          case 3:
            return internalGetMutableMapUint32Uint32();
          case 4:
            return internalGetMutableMapUint64Uint64();
          case 5:
            return internalGetMutableMapSint32Sint32();
          case 6:
            return internalGetMutableMapSint64Sint64();
          case 7:
            return internalGetMutableMapFixed32Fixed32();
          case 8:
            return internalGetMutableMapFixed64Fixed64();
          case 9:
            return internalGetMutableMapSfixed32Sfixed32();
          case 10:
            return internalGetMutableMapSfixed64Sfixed64();
          case 11:
            return internalGetMutableMapInt32Float();
          case 12:
            return internalGetMutableMapInt32Double();
          case 13:
            return internalGetMutableMapBoolBool();
          case 14:
            return internalGetMutableMapStringString();
          case 15:
            return internalGetMutableMapInt32Bytes();
          case 16:
            return internalGetMutableMapInt32Enum();
          case 17:
            return internalGetMutableMapInt32ForeignMessage();
          case 18:
            return internalGetMutableTeboring();
          default:
            throw new RuntimeException(
                "Invalid map field number: " + number);
        }
      }
      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return protobuf_unittest.MapLiteUnittest.internal_static_protobuf_unittest_TestMapLite_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                protobuf_unittest.MapLiteUnittest.TestMapLite.class, protobuf_unittest.MapLiteUnittest.TestMapLite.Builder.class);
      }

      // Construct using protobuf_unittest.MapLiteUnittest.TestMapLite.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        internalGetMutableMapInt32Int32().clear();
        internalGetMutableMapInt64Int64().clear();
        internalGetMutableMapUint32Uint32().clear();
        internalGetMutableMapUint64Uint64().clear();
        internalGetMutableMapSint32Sint32().clear();
        internalGetMutableMapSint64Sint64().clear();
        internalGetMutableMapFixed32Fixed32().clear();
        internalGetMutableMapFixed64Fixed64().clear();
        internalGetMutableMapSfixed32Sfixed32().clear();
        internalGetMutableMapSfixed64Sfixed64().clear();
        internalGetMutableMapInt32Float().clear();
        internalGetMutableMapInt32Double().clear();
        internalGetMutableMapBoolBool().clear();
        internalGetMutableMapStringString().clear();
        internalGetMutableMapInt32Bytes().clear();
        internalGetMutableMapInt32Enum().clear();
        internalGetMutableMapInt32ForeignMessage().clear();
        internalGetMutableTeboring().clear();
        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return protobuf_unittest.MapLiteUnittest.internal_static_protobuf_unittest_TestMapLite_descriptor;
      }

      @java.lang.Override
      public protobuf_unittest.MapLiteUnittest.TestMapLite getDefaultInstanceForType() {
        return protobuf_unittest.MapLiteUnittest.TestMapLite.getDefaultInstance();
      }

      @java.lang.Override
      public protobuf_unittest.MapLiteUnittest.TestMapLite build() {
        protobuf_unittest.MapLiteUnittest.TestMapLite result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public protobuf_unittest.MapLiteUnittest.TestMapLite buildPartial() {
        protobuf_unittest.MapLiteUnittest.TestMapLite result = new protobuf_unittest.MapLiteUnittest.TestMapLite(this);
        int from_bitField0_ = bitField0_;
        result.mapInt32Int32_ = internalGetMapInt32Int32();
        result.mapInt32Int32_.makeImmutable();
        result.mapInt64Int64_ = internalGetMapInt64Int64();
        result.mapInt64Int64_.makeImmutable();
        result.mapUint32Uint32_ = internalGetMapUint32Uint32();
        result.mapUint32Uint32_.makeImmutable();
        result.mapUint64Uint64_ = internalGetMapUint64Uint64();
        result.mapUint64Uint64_.makeImmutable();
        result.mapSint32Sint32_ = internalGetMapSint32Sint32();
        result.mapSint32Sint32_.makeImmutable();
        result.mapSint64Sint64_ = internalGetMapSint64Sint64();
        result.mapSint64Sint64_.makeImmutable();
        result.mapFixed32Fixed32_ = internalGetMapFixed32Fixed32();
        result.mapFixed32Fixed32_.makeImmutable();
        result.mapFixed64Fixed64_ = internalGetMapFixed64Fixed64();
        result.mapFixed64Fixed64_.makeImmutable();
        result.mapSfixed32Sfixed32_ = internalGetMapSfixed32Sfixed32();
        result.mapSfixed32Sfixed32_.makeImmutable();
        result.mapSfixed64Sfixed64_ = internalGetMapSfixed64Sfixed64();
        result.mapSfixed64Sfixed64_.makeImmutable();
        result.mapInt32Float_ = internalGetMapInt32Float();
        result.mapInt32Float_.makeImmutable();
        result.mapInt32Double_ = internalGetMapInt32Double();
        result.mapInt32Double_.makeImmutable();
        result.mapBoolBool_ = internalGetMapBoolBool();
        result.mapBoolBool_.makeImmutable();
        result.mapStringString_ = internalGetMapStringString();
        result.mapStringString_.makeImmutable();
        result.mapInt32Bytes_ = internalGetMapInt32Bytes();
        result.mapInt32Bytes_.makeImmutable();
        result.mapInt32Enum_ = internalGetMapInt32Enum();
        result.mapInt32Enum_.makeImmutable();
        result.mapInt32ForeignMessage_ = internalGetMapInt32ForeignMessage();
        result.mapInt32ForeignMessage_.makeImmutable();
        result.teboring_ = internalGetTeboring();
        result.teboring_.makeImmutable();
        onBuilt();
        return result;
      }

      @java.lang.Override
      public Builder clone() {
        return super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof protobuf_unittest.MapLiteUnittest.TestMapLite) {
          return mergeFrom((protobuf_unittest.MapLiteUnittest.TestMapLite)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(protobuf_unittest.MapLiteUnittest.TestMapLite other) {
        if (other == protobuf_unittest.MapLiteUnittest.TestMapLite.getDefaultInstance()) return this;
        internalGetMutableMapInt32Int32().mergeFrom(
            other.internalGetMapInt32Int32());
        internalGetMutableMapInt64Int64().mergeFrom(
            other.internalGetMapInt64Int64());
        internalGetMutableMapUint32Uint32().mergeFrom(
            other.internalGetMapUint32Uint32());
        internalGetMutableMapUint64Uint64().mergeFrom(
            other.internalGetMapUint64Uint64());
        internalGetMutableMapSint32Sint32().mergeFrom(
            other.internalGetMapSint32Sint32());
        internalGetMutableMapSint64Sint64().mergeFrom(
            other.internalGetMapSint64Sint64());
        internalGetMutableMapFixed32Fixed32().mergeFrom(
            other.internalGetMapFixed32Fixed32());
        internalGetMutableMapFixed64Fixed64().mergeFrom(
            other.internalGetMapFixed64Fixed64());
        internalGetMutableMapSfixed32Sfixed32().mergeFrom(
            other.internalGetMapSfixed32Sfixed32());
        internalGetMutableMapSfixed64Sfixed64().mergeFrom(
            other.internalGetMapSfixed64Sfixed64());
        internalGetMutableMapInt32Float().mergeFrom(
            other.internalGetMapInt32Float());
        internalGetMutableMapInt32Double().mergeFrom(
            other.internalGetMapInt32Double());
        internalGetMutableMapBoolBool().mergeFrom(
            other.internalGetMapBoolBool());
        internalGetMutableMapStringString().mergeFrom(
            other.internalGetMapStringString());
        internalGetMutableMapInt32Bytes().mergeFrom(
            other.internalGetMapInt32Bytes());
        internalGetMutableMapInt32Enum().mergeFrom(
            other.internalGetMapInt32Enum());
        internalGetMutableMapInt32ForeignMessage().mergeFrom(
            other.internalGetMapInt32ForeignMessage());
        internalGetMutableTeboring().mergeFrom(
            other.internalGetTeboring());
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        protobuf_unittest.MapLiteUnittest.TestMapLite parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (protobuf_unittest.MapLiteUnittest.TestMapLite) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private com.google.protobuf.MapField<
          java.lang.Integer, java.lang.Integer> mapInt32Int32_;
      private com.google.protobuf.MapField<java.lang.Integer, java.lang.Integer>
      internalGetMapInt32Int32() {
        if (mapInt32Int32_ == null) {
          return com.google.protobuf.MapField.emptyMapField(
              MapInt32Int32DefaultEntryHolder.defaultEntry);
        }
        return mapInt32Int32_;
      }
      private com.google.protobuf.MapField<java.lang.Integer, java.lang.Integer>
      internalGetMutableMapInt32Int32() {
        onChanged();;
        if (mapInt32Int32_ == null) {
          mapInt32Int32_ = com.google.protobuf.MapField.newMapField(
              MapInt32Int32DefaultEntryHolder.defaultEntry);
        }
        if (!mapInt32Int32_.isMutable()) {
          mapInt32Int32_ = mapInt32Int32_.copy();
        }
        return mapInt32Int32_;
      }

      public int getMapInt32Int32Count() {
        return internalGetMapInt32Int32().getMap().size();
      }
      /**
       * <code>map&lt;int32, int32&gt; map_int32_int32 = 1;</code>
       */

      @java.lang.Override
      public boolean containsMapInt32Int32(
          int key) {
        
        return internalGetMapInt32Int32().getMap().containsKey(key);
      }
      /**
       * Use {@link #getMapInt32Int32Map()} instead.
       */
      @java.lang.Override
      @java.lang.Deprecated
      public java.util.Map<java.lang.Integer, java.lang.Integer> getMapInt32Int32() {
        return getMapInt32Int32Map();
      }
      /**
       * <code>map&lt;int32, int32&gt; map_int32_int32 = 1;</code>
       */
      @java.lang.Override

      public java.util.Map<java.lang.Integer, java.lang.Integer> getMapInt32Int32Map() {
        return internalGetMapInt32Int32().getMap();
      }
      /**
       * <code>map&lt;int32, int32&gt; map_int32_int32 = 1;</code>
       */
      @java.lang.Override

      public int getMapInt32Int32OrDefault(
          int key,
          int defaultValue) {
        
        java.util.Map<java.lang.Integer, java.lang.Integer> map =
            internalGetMapInt32Int32().getMap();
        return map.containsKey(key) ? map.get(key) : defaultValue;
      }
      /**
       * <code>map&lt;int32, int32&gt; map_int32_int32 = 1;</code>
       */
      @java.lang.Override

      public int getMapInt32Int32OrThrow(
          int key) {
        
        java.util.Map<java.lang.Integer, java.lang.Integer> map =
            internalGetMapInt32Int32().getMap();
        if (!map.containsKey(key)) {
          throw new java.lang.IllegalArgumentException();
        }
        return map.get(key);
      }

      public Builder clearMapInt32Int32() {
        internalGetMutableMapInt32Int32().getMutableMap()
            .clear();
        return this;
      }
      /**
       * <code>map&lt;int32, int32&gt; map_int32_int32 = 1;</code>
       */

      public Builder removeMapInt32Int32(
          int key) {
        
        internalGetMutableMapInt32Int32().getMutableMap()
            .remove(key);
        return this;
      }
      /**
       * Use alternate mutation accessors instead.
       */
      @java.lang.Deprecated
      public java.util.Map<java.lang.Integer, java.lang.Integer>
      getMutableMapInt32Int32() {
        return internalGetMutableMapInt32Int32().getMutableMap();
      }
      /**
       * <code>map&lt;int32, int32&gt; map_int32_int32 = 1;</code>
       */
      public Builder putMapInt32Int32(
          int key,
          int value) {
        
        
        internalGetMutableMapInt32Int32().getMutableMap()
            .put(key, value);
        return this;
      }
      /**
       * <code>map&lt;int32, int32&gt; map_int32_int32 = 1;</code>
       */

      public Builder putAllMapInt32Int32(
          java.util.Map<java.lang.Integer, java.lang.Integer> values) {
        internalGetMutableMapInt32Int32().getMutableMap()
            .putAll(values);
        return this;
      }

      private com.google.protobuf.MapField<
          java.lang.Long, java.lang.Long> mapInt64Int64_;
      private com.google.protobuf.MapField<java.lang.Long, java.lang.Long>
      internalGetMapInt64Int64() {
        if (mapInt64Int64_ == null) {
          return com.google.protobuf.MapField.emptyMapField(
              MapInt64Int64DefaultEntryHolder.defaultEntry);
        }
        return mapInt64Int64_;
      }
      private com.google.protobuf.MapField<java.lang.Long, java.lang.Long>
      internalGetMutableMapInt64Int64() {
        onChanged();;
        if (mapInt64Int64_ == null) {
          mapInt64Int64_ = com.google.protobuf.MapField.newMapField(
              MapInt64Int64DefaultEntryHolder.defaultEntry);
        }
        if (!mapInt64Int64_.isMutable()) {
          mapInt64Int64_ = mapInt64Int64_.copy();
        }
        return mapInt64Int64_;
      }

      public int getMapInt64Int64Count() {
        return internalGetMapInt64Int64().getMap().size();
      }
      /**
       * <code>map&lt;int64, int64&gt; map_int64_int64 = 2;</code>
       */

      @java.lang.Override
      public boolean containsMapInt64Int64(
          long key) {
        
        return internalGetMapInt64Int64().getMap().containsKey(key);
      }
      /**
       * Use {@link #getMapInt64Int64Map()} instead.
       */
      @java.lang.Override
      @java.lang.Deprecated
      public java.util.Map<java.lang.Long, java.lang.Long> getMapInt64Int64() {
        return getMapInt64Int64Map();
      }
      /**
       * <code>map&lt;int64, int64&gt; map_int64_int64 = 2;</code>
       */
      @java.lang.Override

      public java.util.Map<java.lang.Long, java.lang.Long> getMapInt64Int64Map() {
        return internalGetMapInt64Int64().getMap();
      }
      /**
       * <code>map&lt;int64, int64&gt; map_int64_int64 = 2;</code>
       */
      @java.lang.Override

      public long getMapInt64Int64OrDefault(
          long key,
          long defaultValue) {
        
        java.util.Map<java.lang.Long, java.lang.Long> map =
            internalGetMapInt64Int64().getMap();
        return map.containsKey(key) ? map.get(key) : defaultValue;
      }
      /**
       * <code>map&lt;int64, int64&gt; map_int64_int64 = 2;</code>
       */
      @java.lang.Override

      public long getMapInt64Int64OrThrow(
          long key) {
        
        java.util.Map<java.lang.Long, java.lang.Long> map =
            internalGetMapInt64Int64().getMap();
        if (!map.containsKey(key)) {
          throw new java.lang.IllegalArgumentException();
        }
        return map.get(key);
      }

      public Builder clearMapInt64Int64() {
        internalGetMutableMapInt64Int64().getMutableMap()
            .clear();
        return this;
      }
      /**
       * <code>map&lt;int64, int64&gt; map_int64_int64 = 2;</code>
       */

      public Builder removeMapInt64Int64(
          long key) {
        
        internalGetMutableMapInt64Int64().getMutableMap()
            .remove(key);
        return this;
      }
      /**
       * Use alternate mutation accessors instead.
       */
      @java.lang.Deprecated
      public java.util.Map<java.lang.Long, java.lang.Long>
      getMutableMapInt64Int64() {
        return internalGetMutableMapInt64Int64().getMutableMap();
      }
      /**
       * <code>map&lt;int64, int64&gt; map_int64_int64 = 2;</code>
       */
      public Builder putMapInt64Int64(
          long key,
          long value) {
        
        
        internalGetMutableMapInt64Int64().getMutableMap()
            .put(key, value);
        return this;
      }
      /**
       * <code>map&lt;int64, int64&gt; map_int64_int64 = 2;</code>
       */

      public Builder putAllMapInt64Int64(
          java.util.Map<java.lang.Long, java.lang.Long> values) {
        internalGetMutableMapInt64Int64().getMutableMap()
            .putAll(values);
        return this;
      }

      private com.google.protobuf.MapField<
          java.lang.Integer, java.lang.Integer> mapUint32Uint32_;
      private com.google.protobuf.MapField<java.lang.Integer, java.lang.Integer>
      internalGetMapUint32Uint32() {
        if (mapUint32Uint32_ == null) {
          return com.google.protobuf.MapField.emptyMapField(
              MapUint32Uint32DefaultEntryHolder.defaultEntry);
        }
        return mapUint32Uint32_;
      }
      private com.google.protobuf.MapField<java.lang.Integer, java.lang.Integer>
      internalGetMutableMapUint32Uint32() {
        onChanged();;
        if (mapUint32Uint32_ == null) {
          mapUint32Uint32_ = com.google.protobuf.MapField.newMapField(
              MapUint32Uint32DefaultEntryHolder.defaultEntry);
        }
        if (!mapUint32Uint32_.isMutable()) {
          mapUint32Uint32_ = mapUint32Uint32_.copy();
        }
        return mapUint32Uint32_;
      }

      public int getMapUint32Uint32Count() {
        return internalGetMapUint32Uint32().getMap().size();
      }
      /**
       * <code>map&lt;uint32, uint32&gt; map_uint32_uint32 = 3;</code>
       */

      @java.lang.Override
      public boolean containsMapUint32Uint32(
          int key) {
        
        return internalGetMapUint32Uint32().getMap().containsKey(key);
      }
      /**
       * Use {@link #getMapUint32Uint32Map()} instead.
       */
      @java.lang.Override
      @java.lang.Deprecated
      public java.util.Map<java.lang.Integer, java.lang.Integer> getMapUint32Uint32() {
        return getMapUint32Uint32Map();
      }
      /**
       * <code>map&lt;uint32, uint32&gt; map_uint32_uint32 = 3;</code>
       */
      @java.lang.Override

      public java.util.Map<java.lang.Integer, java.lang.Integer> getMapUint32Uint32Map() {
        return internalGetMapUint32Uint32().getMap();
      }
      /**
       * <code>map&lt;uint32, uint32&gt; map_uint32_uint32 = 3;</code>
       */
      @java.lang.Override

      public int getMapUint32Uint32OrDefault(
          int key,
          int defaultValue) {
        
        java.util.Map<java.lang.Integer, java.lang.Integer> map =
            internalGetMapUint32Uint32().getMap();
        return map.containsKey(key) ? map.get(key) : defaultValue;
      }
      /**
       * <code>map&lt;uint32, uint32&gt; map_uint32_uint32 = 3;</code>
       */
      @java.lang.Override

      public int getMapUint32Uint32OrThrow(
          int key) {
        
        java.util.Map<java.lang.Integer, java.lang.Integer> map =
            internalGetMapUint32Uint32().getMap();
        if (!map.containsKey(key)) {
          throw new java.lang.IllegalArgumentException();
        }
        return map.get(key);
      }

      public Builder clearMapUint32Uint32() {
        internalGetMutableMapUint32Uint32().getMutableMap()
            .clear();
        return this;
      }
      /**
       * <code>map&lt;uint32, uint32&gt; map_uint32_uint32 = 3;</code>
       */

      public Builder removeMapUint32Uint32(
          int key) {
        
        internalGetMutableMapUint32Uint32().getMutableMap()
            .remove(key);
        return this;
      }
      /**
       * Use alternate mutation accessors instead.
       */
      @java.lang.Deprecated
      public java.util.Map<java.lang.Integer, java.lang.Integer>
      getMutableMapUint32Uint32() {
        return internalGetMutableMapUint32Uint32().getMutableMap();
      }
      /**
       * <code>map&lt;uint32, uint32&gt; map_uint32_uint32 = 3;</code>
       */
      public Builder putMapUint32Uint32(
          int key,
          int value) {
        
        
        internalGetMutableMapUint32Uint32().getMutableMap()
            .put(key, value);
        return this;
      }
      /**
       * <code>map&lt;uint32, uint32&gt; map_uint32_uint32 = 3;</code>
       */

      public Builder putAllMapUint32Uint32(
          java.util.Map<java.lang.Integer, java.lang.Integer> values) {
        internalGetMutableMapUint32Uint32().getMutableMap()
            .putAll(values);
        return this;
      }

      private com.google.protobuf.MapField<
          java.lang.Long, java.lang.Long> mapUint64Uint64_;
      private com.google.protobuf.MapField<java.lang.Long, java.lang.Long>
      internalGetMapUint64Uint64() {
        if (mapUint64Uint64_ == null) {
          return com.google.protobuf.MapField.emptyMapField(
              MapUint64Uint64DefaultEntryHolder.defaultEntry);
        }
        return mapUint64Uint64_;
      }
      private com.google.protobuf.MapField<java.lang.Long, java.lang.Long>
      internalGetMutableMapUint64Uint64() {
        onChanged();;
        if (mapUint64Uint64_ == null) {
          mapUint64Uint64_ = com.google.protobuf.MapField.newMapField(
              MapUint64Uint64DefaultEntryHolder.defaultEntry);
        }
        if (!mapUint64Uint64_.isMutable()) {
          mapUint64Uint64_ = mapUint64Uint64_.copy();
        }
        return mapUint64Uint64_;
      }

      public int getMapUint64Uint64Count() {
        return internalGetMapUint64Uint64().getMap().size();
      }
      /**
       * <code>map&lt;uint64, uint64&gt; map_uint64_uint64 = 4;</code>
       */

      @java.lang.Override
      public boolean containsMapUint64Uint64(
          long key) {
        
        return internalGetMapUint64Uint64().getMap().containsKey(key);
      }
      /**
       * Use {@link #getMapUint64Uint64Map()} instead.
       */
      @java.lang.Override
      @java.lang.Deprecated
      public java.util.Map<java.lang.Long, java.lang.Long> getMapUint64Uint64() {
        return getMapUint64Uint64Map();
      }
      /**
       * <code>map&lt;uint64, uint64&gt; map_uint64_uint64 = 4;</code>
       */
      @java.lang.Override

      public java.util.Map<java.lang.Long, java.lang.Long> getMapUint64Uint64Map() {
        return internalGetMapUint64Uint64().getMap();
      }
      /**
       * <code>map&lt;uint64, uint64&gt; map_uint64_uint64 = 4;</code>
       */
      @java.lang.Override

      public long getMapUint64Uint64OrDefault(
          long key,
          long defaultValue) {
        
        java.util.Map<java.lang.Long, java.lang.Long> map =
            internalGetMapUint64Uint64().getMap();
        return map.containsKey(key) ? map.get(key) : defaultValue;
      }
      /**
       * <code>map&lt;uint64, uint64&gt; map_uint64_uint64 = 4;</code>
       */
      @java.lang.Override

      public long getMapUint64Uint64OrThrow(
          long key) {
        
        java.util.Map<java.lang.Long, java.lang.Long> map =
            internalGetMapUint64Uint64().getMap();
        if (!map.containsKey(key)) {
          throw new java.lang.IllegalArgumentException();
        }
        return map.get(key);
      }

      public Builder clearMapUint64Uint64() {
        internalGetMutableMapUint64Uint64().getMutableMap()
            .clear();
        return this;
      }
      /**
       * <code>map&lt;uint64, uint64&gt; map_uint64_uint64 = 4;</code>
       */

      public Builder removeMapUint64Uint64(
          long key) {
        
        internalGetMutableMapUint64Uint64().getMutableMap()
            .remove(key);
        return this;
      }
      /**
       * Use alternate mutation accessors instead.
       */
      @java.lang.Deprecated
      public java.util.Map<java.lang.Long, java.lang.Long>
      getMutableMapUint64Uint64() {
        return internalGetMutableMapUint64Uint64().getMutableMap();
      }
      /**
       * <code>map&lt;uint64, uint64&gt; map_uint64_uint64 = 4;</code>
       */
      public Builder putMapUint64Uint64(
          long key,
          long value) {
        
        
        internalGetMutableMapUint64Uint64().getMutableMap()
            .put(key, value);
        return this;
      }
      /**
       * <code>map&lt;uint64, uint64&gt; map_uint64_uint64 = 4;</code>
       */

      public Builder putAllMapUint64Uint64(
          java.util.Map<java.lang.Long, java.lang.Long> values) {
        internalGetMutableMapUint64Uint64().getMutableMap()
            .putAll(values);
        return this;
      }

      private com.google.protobuf.MapField<
          java.lang.Integer, java.lang.Integer> mapSint32Sint32_;
      private com.google.protobuf.MapField<java.lang.Integer, java.lang.Integer>
      internalGetMapSint32Sint32() {
        if (mapSint32Sint32_ == null) {
          return com.google.protobuf.MapField.emptyMapField(
              MapSint32Sint32DefaultEntryHolder.defaultEntry);
        }
        return mapSint32Sint32_;
      }
      private com.google.protobuf.MapField<java.lang.Integer, java.lang.Integer>
      internalGetMutableMapSint32Sint32() {
        onChanged();;
        if (mapSint32Sint32_ == null) {
          mapSint32Sint32_ = com.google.protobuf.MapField.newMapField(
              MapSint32Sint32DefaultEntryHolder.defaultEntry);
        }
        if (!mapSint32Sint32_.isMutable()) {
          mapSint32Sint32_ = mapSint32Sint32_.copy();
        }
        return mapSint32Sint32_;
      }

      public int getMapSint32Sint32Count() {
        return internalGetMapSint32Sint32().getMap().size();
      }
      /**
       * <code>map&lt;sint32, sint32&gt; map_sint32_sint32 = 5;</code>
       */

      @java.lang.Override
      public boolean containsMapSint32Sint32(
          int key) {
        
        return internalGetMapSint32Sint32().getMap().containsKey(key);
      }
      /**
       * Use {@link #getMapSint32Sint32Map()} instead.
       */
      @java.lang.Override
      @java.lang.Deprecated
      public java.util.Map<java.lang.Integer, java.lang.Integer> getMapSint32Sint32() {
        return getMapSint32Sint32Map();
      }
      /**
       * <code>map&lt;sint32, sint32&gt; map_sint32_sint32 = 5;</code>
       */
      @java.lang.Override

      public java.util.Map<java.lang.Integer, java.lang.Integer> getMapSint32Sint32Map() {
        return internalGetMapSint32Sint32().getMap();
      }
      /**
       * <code>map&lt;sint32, sint32&gt; map_sint32_sint32 = 5;</code>
       */
      @java.lang.Override

      public int getMapSint32Sint32OrDefault(
          int key,
          int defaultValue) {
        
        java.util.Map<java.lang.Integer, java.lang.Integer> map =
            internalGetMapSint32Sint32().getMap();
        return map.containsKey(key) ? map.get(key) : defaultValue;
      }
      /**
       * <code>map&lt;sint32, sint32&gt; map_sint32_sint32 = 5;</code>
       */
      @java.lang.Override

      public int getMapSint32Sint32OrThrow(
          int key) {
        
        java.util.Map<java.lang.Integer, java.lang.Integer> map =
            internalGetMapSint32Sint32().getMap();
        if (!map.containsKey(key)) {
          throw new java.lang.IllegalArgumentException();
        }
        return map.get(key);
      }

      public Builder clearMapSint32Sint32() {
        internalGetMutableMapSint32Sint32().getMutableMap()
            .clear();
        return this;
      }
      /**
       * <code>map&lt;sint32, sint32&gt; map_sint32_sint32 = 5;</code>
       */

      public Builder removeMapSint32Sint32(
          int key) {
        
        internalGetMutableMapSint32Sint32().getMutableMap()
            .remove(key);
        return this;
      }
      /**
       * Use alternate mutation accessors instead.
       */
      @java.lang.Deprecated
      public java.util.Map<java.lang.Integer, java.lang.Integer>
      getMutableMapSint32Sint32() {
        return internalGetMutableMapSint32Sint32().getMutableMap();
      }
      /**
       * <code>map&lt;sint32, sint32&gt; map_sint32_sint32 = 5;</code>
       */
      public Builder putMapSint32Sint32(
          int key,
          int value) {
        
        
        internalGetMutableMapSint32Sint32().getMutableMap()
            .put(key, value);
        return this;
      }
      /**
       * <code>map&lt;sint32, sint32&gt; map_sint32_sint32 = 5;</code>
       */

      public Builder putAllMapSint32Sint32(
          java.util.Map<java.lang.Integer, java.lang.Integer> values) {
        internalGetMutableMapSint32Sint32().getMutableMap()
            .putAll(values);
        return this;
      }

      private com.google.protobuf.MapField<
          java.lang.Long, java.lang.Long> mapSint64Sint64_;
      private com.google.protobuf.MapField<java.lang.Long, java.lang.Long>
      internalGetMapSint64Sint64() {
        if (mapSint64Sint64_ == null) {
          return com.google.protobuf.MapField.emptyMapField(
              MapSint64Sint64DefaultEntryHolder.defaultEntry);
        }
        return mapSint64Sint64_;
      }
      private com.google.protobuf.MapField<java.lang.Long, java.lang.Long>
      internalGetMutableMapSint64Sint64() {
        onChanged();;
        if (mapSint64Sint64_ == null) {
          mapSint64Sint64_ = com.google.protobuf.MapField.newMapField(
              MapSint64Sint64DefaultEntryHolder.defaultEntry);
        }
        if (!mapSint64Sint64_.isMutable()) {
          mapSint64Sint64_ = mapSint64Sint64_.copy();
        }
        return mapSint64Sint64_;
      }

      public int getMapSint64Sint64Count() {
        return internalGetMapSint64Sint64().getMap().size();
      }
      /**
       * <code>map&lt;sint64, sint64&gt; map_sint64_sint64 = 6;</code>
       */

      @java.lang.Override
      public boolean containsMapSint64Sint64(
          long key) {
        
        return internalGetMapSint64Sint64().getMap().containsKey(key);
      }
      /**
       * Use {@link #getMapSint64Sint64Map()} instead.
       */
      @java.lang.Override
      @java.lang.Deprecated
      public java.util.Map<java.lang.Long, java.lang.Long> getMapSint64Sint64() {
        return getMapSint64Sint64Map();
      }
      /**
       * <code>map&lt;sint64, sint64&gt; map_sint64_sint64 = 6;</code>
       */
      @java.lang.Override

      public java.util.Map<java.lang.Long, java.lang.Long> getMapSint64Sint64Map() {
        return internalGetMapSint64Sint64().getMap();
      }
      /**
       * <code>map&lt;sint64, sint64&gt; map_sint64_sint64 = 6;</code>
       */
      @java.lang.Override

      public long getMapSint64Sint64OrDefault(
          long key,
          long defaultValue) {
        
        java.util.Map<java.lang.Long, java.lang.Long> map =
            internalGetMapSint64Sint64().getMap();
        return map.containsKey(key) ? map.get(key) : defaultValue;
      }
      /**
       * <code>map&lt;sint64, sint64&gt; map_sint64_sint64 = 6;</code>
       */
      @java.lang.Override

      public long getMapSint64Sint64OrThrow(
          long key) {
        
        java.util.Map<java.lang.Long, java.lang.Long> map =
            internalGetMapSint64Sint64().getMap();
        if (!map.containsKey(key)) {
          throw new java.lang.IllegalArgumentException();
        }
        return map.get(key);
      }

      public Builder clearMapSint64Sint64() {
        internalGetMutableMapSint64Sint64().getMutableMap()
            .clear();
        return this;
      }
      /**
       * <code>map&lt;sint64, sint64&gt; map_sint64_sint64 = 6;</code>
       */

      public Builder removeMapSint64Sint64(
          long key) {
        
        internalGetMutableMapSint64Sint64().getMutableMap()
            .remove(key);
        return this;
      }
      /**
       * Use alternate mutation accessors instead.
       */
      @java.lang.Deprecated
      public java.util.Map<java.lang.Long, java.lang.Long>
      getMutableMapSint64Sint64() {
        return internalGetMutableMapSint64Sint64().getMutableMap();
      }
      /**
       * <code>map&lt;sint64, sint64&gt; map_sint64_sint64 = 6;</code>
       */
      public Builder putMapSint64Sint64(
          long key,
          long value) {
        
        
        internalGetMutableMapSint64Sint64().getMutableMap()
            .put(key, value);
        return this;
      }
      /**
       * <code>map&lt;sint64, sint64&gt; map_sint64_sint64 = 6;</code>
       */

      public Builder putAllMapSint64Sint64(
          java.util.Map<java.lang.Long, java.lang.Long> values) {
        internalGetMutableMapSint64Sint64().getMutableMap()
            .putAll(values);
        return this;
      }

      private com.google.protobuf.MapField<
          java.lang.Integer, java.lang.Integer> mapFixed32Fixed32_;
      private com.google.protobuf.MapField<java.lang.Integer, java.lang.Integer>
      internalGetMapFixed32Fixed32() {
        if (mapFixed32Fixed32_ == null) {
          return com.google.protobuf.MapField.emptyMapField(
              MapFixed32Fixed32DefaultEntryHolder.defaultEntry);
        }
        return mapFixed32Fixed32_;
      }
      private com.google.protobuf.MapField<java.lang.Integer, java.lang.Integer>
      internalGetMutableMapFixed32Fixed32() {
        onChanged();;
        if (mapFixed32Fixed32_ == null) {
          mapFixed32Fixed32_ = com.google.protobuf.MapField.newMapField(
              MapFixed32Fixed32DefaultEntryHolder.defaultEntry);
        }
        if (!mapFixed32Fixed32_.isMutable()) {
          mapFixed32Fixed32_ = mapFixed32Fixed32_.copy();
        }
        return mapFixed32Fixed32_;
      }

      public int getMapFixed32Fixed32Count() {
        return internalGetMapFixed32Fixed32().getMap().size();
      }
      /**
       * <code>map&lt;fixed32, fixed32&gt; map_fixed32_fixed32 = 7;</code>
       */

      @java.lang.Override
      public boolean containsMapFixed32Fixed32(
          int key) {
        
        return internalGetMapFixed32Fixed32().getMap().containsKey(key);
      }
      /**
       * Use {@link #getMapFixed32Fixed32Map()} instead.
       */
      @java.lang.Override
      @java.lang.Deprecated
      public java.util.Map<java.lang.Integer, java.lang.Integer> getMapFixed32Fixed32() {
        return getMapFixed32Fixed32Map();
      }
      /**
       * <code>map&lt;fixed32, fixed32&gt; map_fixed32_fixed32 = 7;</code>
       */
      @java.lang.Override

      public java.util.Map<java.lang.Integer, java.lang.Integer> getMapFixed32Fixed32Map() {
        return internalGetMapFixed32Fixed32().getMap();
      }
      /**
       * <code>map&lt;fixed32, fixed32&gt; map_fixed32_fixed32 = 7;</code>
       */
      @java.lang.Override

      public int getMapFixed32Fixed32OrDefault(
          int key,
          int defaultValue) {
        
        java.util.Map<java.lang.Integer, java.lang.Integer> map =
            internalGetMapFixed32Fixed32().getMap();
        return map.containsKey(key) ? map.get(key) : defaultValue;
      }
      /**
       * <code>map&lt;fixed32, fixed32&gt; map_fixed32_fixed32 = 7;</code>
       */
      @java.lang.Override

      public int getMapFixed32Fixed32OrThrow(
          int key) {
        
        java.util.Map<java.lang.Integer, java.lang.Integer> map =
            internalGetMapFixed32Fixed32().getMap();
        if (!map.containsKey(key)) {
          throw new java.lang.IllegalArgumentException();
        }
        return map.get(key);
      }

      public Builder clearMapFixed32Fixed32() {
        internalGetMutableMapFixed32Fixed32().getMutableMap()
            .clear();
        return this;
      }
      /**
       * <code>map&lt;fixed32, fixed32&gt; map_fixed32_fixed32 = 7;</code>
       */

      public Builder removeMapFixed32Fixed32(
          int key) {
        
        internalGetMutableMapFixed32Fixed32().getMutableMap()
            .remove(key);
        return this;
      }
      /**
       * Use alternate mutation accessors instead.
       */
      @java.lang.Deprecated
      public java.util.Map<java.lang.Integer, java.lang.Integer>
      getMutableMapFixed32Fixed32() {
        return internalGetMutableMapFixed32Fixed32().getMutableMap();
      }
      /**
       * <code>map&lt;fixed32, fixed32&gt; map_fixed32_fixed32 = 7;</code>
       */
      public Builder putMapFixed32Fixed32(
          int key,
          int value) {
        
        
        internalGetMutableMapFixed32Fixed32().getMutableMap()
            .put(key, value);
        return this;
      }
      /**
       * <code>map&lt;fixed32, fixed32&gt; map_fixed32_fixed32 = 7;</code>
       */

      public Builder putAllMapFixed32Fixed32(
          java.util.Map<java.lang.Integer, java.lang.Integer> values) {
        internalGetMutableMapFixed32Fixed32().getMutableMap()
            .putAll(values);
        return this;
      }

      private com.google.protobuf.MapField<
          java.lang.Long, java.lang.Long> mapFixed64Fixed64_;
      private com.google.protobuf.MapField<java.lang.Long, java.lang.Long>
      internalGetMapFixed64Fixed64() {
        if (mapFixed64Fixed64_ == null) {
          return com.google.protobuf.MapField.emptyMapField(
              MapFixed64Fixed64DefaultEntryHolder.defaultEntry);
        }
        return mapFixed64Fixed64_;
      }
      private com.google.protobuf.MapField<java.lang.Long, java.lang.Long>
      internalGetMutableMapFixed64Fixed64() {
        onChanged();;
        if (mapFixed64Fixed64_ == null) {
          mapFixed64Fixed64_ = com.google.protobuf.MapField.newMapField(
              MapFixed64Fixed64DefaultEntryHolder.defaultEntry);
        }
        if (!mapFixed64Fixed64_.isMutable()) {
          mapFixed64Fixed64_ = mapFixed64Fixed64_.copy();
        }
        return mapFixed64Fixed64_;
      }

      public int getMapFixed64Fixed64Count() {
        return internalGetMapFixed64Fixed64().getMap().size();
      }
      /**
       * <code>map&lt;fixed64, fixed64&gt; map_fixed64_fixed64 = 8;</code>
       */

      @java.lang.Override
      public boolean containsMapFixed64Fixed64(
          long key) {
        
        return internalGetMapFixed64Fixed64().getMap().containsKey(key);
      }
      /**
       * Use {@link #getMapFixed64Fixed64Map()} instead.
       */
      @java.lang.Override
      @java.lang.Deprecated
      public java.util.Map<java.lang.Long, java.lang.Long> getMapFixed64Fixed64() {
        return getMapFixed64Fixed64Map();
      }
      /**
       * <code>map&lt;fixed64, fixed64&gt; map_fixed64_fixed64 = 8;</code>
       */
      @java.lang.Override

      public java.util.Map<java.lang.Long, java.lang.Long> getMapFixed64Fixed64Map() {
        return internalGetMapFixed64Fixed64().getMap();
      }
      /**
       * <code>map&lt;fixed64, fixed64&gt; map_fixed64_fixed64 = 8;</code>
       */
      @java.lang.Override

      public long getMapFixed64Fixed64OrDefault(
          long key,
          long defaultValue) {
        
        java.util.Map<java.lang.Long, java.lang.Long> map =
            internalGetMapFixed64Fixed64().getMap();
        return map.containsKey(key) ? map.get(key) : defaultValue;
      }
      /**
       * <code>map&lt;fixed64, fixed64&gt; map_fixed64_fixed64 = 8;</code>
       */
      @java.lang.Override

      public long getMapFixed64Fixed64OrThrow(
          long key) {
        
        java.util.Map<java.lang.Long, java.lang.Long> map =
            internalGetMapFixed64Fixed64().getMap();
        if (!map.containsKey(key)) {
          throw new java.lang.IllegalArgumentException();
        }
        return map.get(key);
      }

      public Builder clearMapFixed64Fixed64() {
        internalGetMutableMapFixed64Fixed64().getMutableMap()
            .clear();
        return this;
      }
      /**
       * <code>map&lt;fixed64, fixed64&gt; map_fixed64_fixed64 = 8;</code>
       */

      public Builder removeMapFixed64Fixed64(
          long key) {
        
        internalGetMutableMapFixed64Fixed64().getMutableMap()
            .remove(key);
        return this;
      }
      /**
       * Use alternate mutation accessors instead.
       */
      @java.lang.Deprecated
      public java.util.Map<java.lang.Long, java.lang.Long>
      getMutableMapFixed64Fixed64() {
        return internalGetMutableMapFixed64Fixed64().getMutableMap();
      }
      /**
       * <code>map&lt;fixed64, fixed64&gt; map_fixed64_fixed64 = 8;</code>
       */
      public Builder putMapFixed64Fixed64(
          long key,
          long value) {
        
        
        internalGetMutableMapFixed64Fixed64().getMutableMap()
            .put(key, value);
        return this;
      }
      /**
       * <code>map&lt;fixed64, fixed64&gt; map_fixed64_fixed64 = 8;</code>
       */

      public Builder putAllMapFixed64Fixed64(
          java.util.Map<java.lang.Long, java.lang.Long> values) {
        internalGetMutableMapFixed64Fixed64().getMutableMap()
            .putAll(values);
        return this;
      }

      private com.google.protobuf.MapField<
          java.lang.Integer, java.lang.Integer> mapSfixed32Sfixed32_;
      private com.google.protobuf.MapField<java.lang.Integer, java.lang.Integer>
      internalGetMapSfixed32Sfixed32() {
        if (mapSfixed32Sfixed32_ == null) {
          return com.google.protobuf.MapField.emptyMapField(
              MapSfixed32Sfixed32DefaultEntryHolder.defaultEntry);
        }
        return mapSfixed32Sfixed32_;
      }
      private com.google.protobuf.MapField<java.lang.Integer, java.lang.Integer>
      internalGetMutableMapSfixed32Sfixed32() {
        onChanged();;
        if (mapSfixed32Sfixed32_ == null) {
          mapSfixed32Sfixed32_ = com.google.protobuf.MapField.newMapField(
              MapSfixed32Sfixed32DefaultEntryHolder.defaultEntry);
        }
        if (!mapSfixed32Sfixed32_.isMutable()) {
          mapSfixed32Sfixed32_ = mapSfixed32Sfixed32_.copy();
        }
        return mapSfixed32Sfixed32_;
      }

      public int getMapSfixed32Sfixed32Count() {
        return internalGetMapSfixed32Sfixed32().getMap().size();
      }
      /**
       * <code>map&lt;sfixed32, sfixed32&gt; map_sfixed32_sfixed32 = 9;</code>
       */

      @java.lang.Override
      public boolean containsMapSfixed32Sfixed32(
          int key) {
        
        return internalGetMapSfixed32Sfixed32().getMap().containsKey(key);
      }
      /**
       * Use {@link #getMapSfixed32Sfixed32Map()} instead.
       */
      @java.lang.Override
      @java.lang.Deprecated
      public java.util.Map<java.lang.Integer, java.lang.Integer> getMapSfixed32Sfixed32() {
        return getMapSfixed32Sfixed32Map();
      }
      /**
       * <code>map&lt;sfixed32, sfixed32&gt; map_sfixed32_sfixed32 = 9;</code>
       */
      @java.lang.Override

      public java.util.Map<java.lang.Integer, java.lang.Integer> getMapSfixed32Sfixed32Map() {
        return internalGetMapSfixed32Sfixed32().getMap();
      }
      /**
       * <code>map&lt;sfixed32, sfixed32&gt; map_sfixed32_sfixed32 = 9;</code>
       */
      @java.lang.Override

      public int getMapSfixed32Sfixed32OrDefault(
          int key,
          int defaultValue) {
        
        java.util.Map<java.lang.Integer, java.lang.Integer> map =
            internalGetMapSfixed32Sfixed32().getMap();
        return map.containsKey(key) ? map.get(key) : defaultValue;
      }
      /**
       * <code>map&lt;sfixed32, sfixed32&gt; map_sfixed32_sfixed32 = 9;</code>
       */
      @java.lang.Override

      public int getMapSfixed32Sfixed32OrThrow(
          int key) {
        
        java.util.Map<java.lang.Integer, java.lang.Integer> map =
            internalGetMapSfixed32Sfixed32().getMap();
        if (!map.containsKey(key)) {
          throw new java.lang.IllegalArgumentException();
        }
        return map.get(key);
      }

      public Builder clearMapSfixed32Sfixed32() {
        internalGetMutableMapSfixed32Sfixed32().getMutableMap()
            .clear();
        return this;
      }
      /**
       * <code>map&lt;sfixed32, sfixed32&gt; map_sfixed32_sfixed32 = 9;</code>
       */

      public Builder removeMapSfixed32Sfixed32(
          int key) {
        
        internalGetMutableMapSfixed32Sfixed32().getMutableMap()
            .remove(key);
        return this;
      }
      /**
       * Use alternate mutation accessors instead.
       */
      @java.lang.Deprecated
      public java.util.Map<java.lang.Integer, java.lang.Integer>
      getMutableMapSfixed32Sfixed32() {
        return internalGetMutableMapSfixed32Sfixed32().getMutableMap();
      }
      /**
       * <code>map&lt;sfixed32, sfixed32&gt; map_sfixed32_sfixed32 = 9;</code>
       */
      public Builder putMapSfixed32Sfixed32(
          int key,
          int value) {
        
        
        internalGetMutableMapSfixed32Sfixed32().getMutableMap()
            .put(key, value);
        return this;
      }
      /**
       * <code>map&lt;sfixed32, sfixed32&gt; map_sfixed32_sfixed32 = 9;</code>
       */

      public Builder putAllMapSfixed32Sfixed32(
          java.util.Map<java.lang.Integer, java.lang.Integer> values) {
        internalGetMutableMapSfixed32Sfixed32().getMutableMap()
            .putAll(values);
        return this;
      }

      private com.google.protobuf.MapField<
          java.lang.Long, java.lang.Long> mapSfixed64Sfixed64_;
      private com.google.protobuf.MapField<java.lang.Long, java.lang.Long>
      internalGetMapSfixed64Sfixed64() {
        if (mapSfixed64Sfixed64_ == null) {
          return com.google.protobuf.MapField.emptyMapField(
              MapSfixed64Sfixed64DefaultEntryHolder.defaultEntry);
        }
        return mapSfixed64Sfixed64_;
      }
      private com.google.protobuf.MapField<java.lang.Long, java.lang.Long>
      internalGetMutableMapSfixed64Sfixed64() {
        onChanged();;
        if (mapSfixed64Sfixed64_ == null) {
          mapSfixed64Sfixed64_ = com.google.protobuf.MapField.newMapField(
              MapSfixed64Sfixed64DefaultEntryHolder.defaultEntry);
        }
        if (!mapSfixed64Sfixed64_.isMutable()) {
          mapSfixed64Sfixed64_ = mapSfixed64Sfixed64_.copy();
        }
        return mapSfixed64Sfixed64_;
      }

      public int getMapSfixed64Sfixed64Count() {
        return internalGetMapSfixed64Sfixed64().getMap().size();
      }
      /**
       * <code>map&lt;sfixed64, sfixed64&gt; map_sfixed64_sfixed64 = 10;</code>
       */

      @java.lang.Override
      public boolean containsMapSfixed64Sfixed64(
          long key) {
        
        return internalGetMapSfixed64Sfixed64().getMap().containsKey(key);
      }
      /**
       * Use {@link #getMapSfixed64Sfixed64Map()} instead.
       */
      @java.lang.Override
      @java.lang.Deprecated
      public java.util.Map<java.lang.Long, java.lang.Long> getMapSfixed64Sfixed64() {
        return getMapSfixed64Sfixed64Map();
      }
      /**
       * <code>map&lt;sfixed64, sfixed64&gt; map_sfixed64_sfixed64 = 10;</code>
       */
      @java.lang.Override

      public java.util.Map<java.lang.Long, java.lang.Long> getMapSfixed64Sfixed64Map() {
        return internalGetMapSfixed64Sfixed64().getMap();
      }
      /**
       * <code>map&lt;sfixed64, sfixed64&gt; map_sfixed64_sfixed64 = 10;</code>
       */
      @java.lang.Override

      public long getMapSfixed64Sfixed64OrDefault(
          long key,
          long defaultValue) {
        
        java.util.Map<java.lang.Long, java.lang.Long> map =
            internalGetMapSfixed64Sfixed64().getMap();
        return map.containsKey(key) ? map.get(key) : defaultValue;
      }
      /**
       * <code>map&lt;sfixed64, sfixed64&gt; map_sfixed64_sfixed64 = 10;</code>
       */
      @java.lang.Override

      public long getMapSfixed64Sfixed64OrThrow(
          long key) {
        
        java.util.Map<java.lang.Long, java.lang.Long> map =
            internalGetMapSfixed64Sfixed64().getMap();
        if (!map.containsKey(key)) {
          throw new java.lang.IllegalArgumentException();
        }
        return map.get(key);
      }

      public Builder clearMapSfixed64Sfixed64() {
        internalGetMutableMapSfixed64Sfixed64().getMutableMap()
            .clear();
        return this;
      }
      /**
       * <code>map&lt;sfixed64, sfixed64&gt; map_sfixed64_sfixed64 = 10;</code>
       */

      public Builder removeMapSfixed64Sfixed64(
          long key) {
        
        internalGetMutableMapSfixed64Sfixed64().getMutableMap()
            .remove(key);
        return this;
      }
      /**
       * Use alternate mutation accessors instead.
       */
      @java.lang.Deprecated
      public java.util.Map<java.lang.Long, java.lang.Long>
      getMutableMapSfixed64Sfixed64() {
        return internalGetMutableMapSfixed64Sfixed64().getMutableMap();
      }
      /**
       * <code>map&lt;sfixed64, sfixed64&gt; map_sfixed64_sfixed64 = 10;</code>
       */
      public Builder putMapSfixed64Sfixed64(
          long key,
          long value) {
        
        
        internalGetMutableMapSfixed64Sfixed64().getMutableMap()
            .put(key, value);
        return this;
      }
      /**
       * <code>map&lt;sfixed64, sfixed64&gt; map_sfixed64_sfixed64 = 10;</code>
       */

      public Builder putAllMapSfixed64Sfixed64(
          java.util.Map<java.lang.Long, java.lang.Long> values) {
        internalGetMutableMapSfixed64Sfixed64().getMutableMap()
            .putAll(values);
        return this;
      }

      private com.google.protobuf.MapField<
          java.lang.Integer, java.lang.Float> mapInt32Float_;
      private com.google.protobuf.MapField<java.lang.Integer, java.lang.Float>
      internalGetMapInt32Float() {
        if (mapInt32Float_ == null) {
          return com.google.protobuf.MapField.emptyMapField(
              MapInt32FloatDefaultEntryHolder.defaultEntry);
        }
        return mapInt32Float_;
      }
      private com.google.protobuf.MapField<java.lang.Integer, java.lang.Float>
      internalGetMutableMapInt32Float() {
        onChanged();;
        if (mapInt32Float_ == null) {
          mapInt32Float_ = com.google.protobuf.MapField.newMapField(
              MapInt32FloatDefaultEntryHolder.defaultEntry);
        }
        if (!mapInt32Float_.isMutable()) {
          mapInt32Float_ = mapInt32Float_.copy();
        }
        return mapInt32Float_;
      }

      public int getMapInt32FloatCount() {
        return internalGetMapInt32Float().getMap().size();
      }
      /**
       * <code>map&lt;int32, float&gt; map_int32_float = 11;</code>
       */

      @java.lang.Override
      public boolean containsMapInt32Float(
          int key) {
        
        return internalGetMapInt32Float().getMap().containsKey(key);
      }
      /**
       * Use {@link #getMapInt32FloatMap()} instead.
       */
      @java.lang.Override
      @java.lang.Deprecated
      public java.util.Map<java.lang.Integer, java.lang.Float> getMapInt32Float() {
        return getMapInt32FloatMap();
      }
      /**
       * <code>map&lt;int32, float&gt; map_int32_float = 11;</code>
       */
      @java.lang.Override

      public java.util.Map<java.lang.Integer, java.lang.Float> getMapInt32FloatMap() {
        return internalGetMapInt32Float().getMap();
      }
      /**
       * <code>map&lt;int32, float&gt; map_int32_float = 11;</code>
       */
      @java.lang.Override

      public float getMapInt32FloatOrDefault(
          int key,
          float defaultValue) {
        
        java.util.Map<java.lang.Integer, java.lang.Float> map =
            internalGetMapInt32Float().getMap();
        return map.containsKey(key) ? map.get(key) : defaultValue;
      }
      /**
       * <code>map&lt;int32, float&gt; map_int32_float = 11;</code>
       */
      @java.lang.Override

      public float getMapInt32FloatOrThrow(
          int key) {
        
        java.util.Map<java.lang.Integer, java.lang.Float> map =
            internalGetMapInt32Float().getMap();
        if (!map.containsKey(key)) {
          throw new java.lang.IllegalArgumentException();
        }
        return map.get(key);
      }

      public Builder clearMapInt32Float() {
        internalGetMutableMapInt32Float().getMutableMap()
            .clear();
        return this;
      }
      /**
       * <code>map&lt;int32, float&gt; map_int32_float = 11;</code>
       */

      public Builder removeMapInt32Float(
          int key) {
        
        internalGetMutableMapInt32Float().getMutableMap()
            .remove(key);
        return this;
      }
      /**
       * Use alternate mutation accessors instead.
       */
      @java.lang.Deprecated
      public java.util.Map<java.lang.Integer, java.lang.Float>
      getMutableMapInt32Float() {
        return internalGetMutableMapInt32Float().getMutableMap();
      }
      /**
       * <code>map&lt;int32, float&gt; map_int32_float = 11;</code>
       */
      public Builder putMapInt32Float(
          int key,
          float value) {
        
        
        internalGetMutableMapInt32Float().getMutableMap()
            .put(key, value);
        return this;
      }
      /**
       * <code>map&lt;int32, float&gt; map_int32_float = 11;</code>
       */

      public Builder putAllMapInt32Float(
          java.util.Map<java.lang.Integer, java.lang.Float> values) {
        internalGetMutableMapInt32Float().getMutableMap()
            .putAll(values);
        return this;
      }

      private com.google.protobuf.MapField<
          java.lang.Integer, java.lang.Double> mapInt32Double_;
      private com.google.protobuf.MapField<java.lang.Integer, java.lang.Double>
      internalGetMapInt32Double() {
        if (mapInt32Double_ == null) {
          return com.google.protobuf.MapField.emptyMapField(
              MapInt32DoubleDefaultEntryHolder.defaultEntry);
        }
        return mapInt32Double_;
      }
      private com.google.protobuf.MapField<java.lang.Integer, java.lang.Double>
      internalGetMutableMapInt32Double() {
        onChanged();;
        if (mapInt32Double_ == null) {
          mapInt32Double_ = com.google.protobuf.MapField.newMapField(
              MapInt32DoubleDefaultEntryHolder.defaultEntry);
        }
        if (!mapInt32Double_.isMutable()) {
          mapInt32Double_ = mapInt32Double_.copy();
        }
        return mapInt32Double_;
      }

      public int getMapInt32DoubleCount() {
        return internalGetMapInt32Double().getMap().size();
      }
      /**
       * <code>map&lt;int32, double&gt; map_int32_double = 12;</code>
       */

      @java.lang.Override
      public boolean containsMapInt32Double(
          int key) {
        
        return internalGetMapInt32Double().getMap().containsKey(key);
      }
      /**
       * Use {@link #getMapInt32DoubleMap()} instead.
       */
      @java.lang.Override
      @java.lang.Deprecated
      public java.util.Map<java.lang.Integer, java.lang.Double> getMapInt32Double() {
        return getMapInt32DoubleMap();
      }
      /**
       * <code>map&lt;int32, double&gt; map_int32_double = 12;</code>
       */
      @java.lang.Override

      public java.util.Map<java.lang.Integer, java.lang.Double> getMapInt32DoubleMap() {
        return internalGetMapInt32Double().getMap();
      }
      /**
       * <code>map&lt;int32, double&gt; map_int32_double = 12;</code>
       */
      @java.lang.Override

      public double getMapInt32DoubleOrDefault(
          int key,
          double defaultValue) {
        
        java.util.Map<java.lang.Integer, java.lang.Double> map =
            internalGetMapInt32Double().getMap();
        return map.containsKey(key) ? map.get(key) : defaultValue;
      }
      /**
       * <code>map&lt;int32, double&gt; map_int32_double = 12;</code>
       */
      @java.lang.Override

      public double getMapInt32DoubleOrThrow(
          int key) {
        
        java.util.Map<java.lang.Integer, java.lang.Double> map =
            internalGetMapInt32Double().getMap();
        if (!map.containsKey(key)) {
          throw new java.lang.IllegalArgumentException();
        }
        return map.get(key);
      }

      public Builder clearMapInt32Double() {
        internalGetMutableMapInt32Double().getMutableMap()
            .clear();
        return this;
      }
      /**
       * <code>map&lt;int32, double&gt; map_int32_double = 12;</code>
       */

      public Builder removeMapInt32Double(
          int key) {
        
        internalGetMutableMapInt32Double().getMutableMap()
            .remove(key);
        return this;
      }
      /**
       * Use alternate mutation accessors instead.
       */
      @java.lang.Deprecated
      public java.util.Map<java.lang.Integer, java.lang.Double>
      getMutableMapInt32Double() {
        return internalGetMutableMapInt32Double().getMutableMap();
      }
      /**
       * <code>map&lt;int32, double&gt; map_int32_double = 12;</code>
       */
      public Builder putMapInt32Double(
          int key,
          double value) {
        
        
        internalGetMutableMapInt32Double().getMutableMap()
            .put(key, value);
        return this;
      }
      /**
       * <code>map&lt;int32, double&gt; map_int32_double = 12;</code>
       */

      public Builder putAllMapInt32Double(
          java.util.Map<java.lang.Integer, java.lang.Double> values) {
        internalGetMutableMapInt32Double().getMutableMap()
            .putAll(values);
        return this;
      }

      private com.google.protobuf.MapField<
          java.lang.Boolean, java.lang.Boolean> mapBoolBool_;
      private com.google.protobuf.MapField<java.lang.Boolean, java.lang.Boolean>
      internalGetMapBoolBool() {
        if (mapBoolBool_ == null) {
          return com.google.protobuf.MapField.emptyMapField(
              MapBoolBoolDefaultEntryHolder.defaultEntry);
        }
        return mapBoolBool_;
      }
      private com.google.protobuf.MapField<java.lang.Boolean, java.lang.Boolean>
      internalGetMutableMapBoolBool() {
        onChanged();;
        if (mapBoolBool_ == null) {
          mapBoolBool_ = com.google.protobuf.MapField.newMapField(
              MapBoolBoolDefaultEntryHolder.defaultEntry);
        }
        if (!mapBoolBool_.isMutable()) {
          mapBoolBool_ = mapBoolBool_.copy();
        }
        return mapBoolBool_;
      }

      public int getMapBoolBoolCount() {
        return internalGetMapBoolBool().getMap().size();
      }
      /**
       * <code>map&lt;bool, bool&gt; map_bool_bool = 13;</code>
       */

      @java.lang.Override
      public boolean containsMapBoolBool(
          boolean key) {
        
        return internalGetMapBoolBool().getMap().containsKey(key);
      }
      /**
       * Use {@link #getMapBoolBoolMap()} instead.
       */
      @java.lang.Override
      @java.lang.Deprecated
      public java.util.Map<java.lang.Boolean, java.lang.Boolean> getMapBoolBool() {
        return getMapBoolBoolMap();
      }
      /**
       * <code>map&lt;bool, bool&gt; map_bool_bool = 13;</code>
       */
      @java.lang.Override

      public java.util.Map<java.lang.Boolean, java.lang.Boolean> getMapBoolBoolMap() {
        return internalGetMapBoolBool().getMap();
      }
      /**
       * <code>map&lt;bool, bool&gt; map_bool_bool = 13;</code>
       */
      @java.lang.Override

      public boolean getMapBoolBoolOrDefault(
          boolean key,
          boolean defaultValue) {
        
        java.util.Map<java.lang.Boolean, java.lang.Boolean> map =
            internalGetMapBoolBool().getMap();
        return map.containsKey(key) ? map.get(key) : defaultValue;
      }
      /**
       * <code>map&lt;bool, bool&gt; map_bool_bool = 13;</code>
       */
      @java.lang.Override

      public boolean getMapBoolBoolOrThrow(
          boolean key) {
        
        java.util.Map<java.lang.Boolean, java.lang.Boolean> map =
            internalGetMapBoolBool().getMap();
        if (!map.containsKey(key)) {
          throw new java.lang.IllegalArgumentException();
        }
        return map.get(key);
      }

      public Builder clearMapBoolBool() {
        internalGetMutableMapBoolBool().getMutableMap()
            .clear();
        return this;
      }
      /**
       * <code>map&lt;bool, bool&gt; map_bool_bool = 13;</code>
       */

      public Builder removeMapBoolBool(
          boolean key) {
        
        internalGetMutableMapBoolBool().getMutableMap()
            .remove(key);
        return this;
      }
      /**
       * Use alternate mutation accessors instead.
       */
      @java.lang.Deprecated
      public java.util.Map<java.lang.Boolean, java.lang.Boolean>
      getMutableMapBoolBool() {
        return internalGetMutableMapBoolBool().getMutableMap();
      }
      /**
       * <code>map&lt;bool, bool&gt; map_bool_bool = 13;</code>
       */
      public Builder putMapBoolBool(
          boolean key,
          boolean value) {
        
        
        internalGetMutableMapBoolBool().getMutableMap()
            .put(key, value);
        return this;
      }
      /**
       * <code>map&lt;bool, bool&gt; map_bool_bool = 13;</code>
       */

      public Builder putAllMapBoolBool(
          java.util.Map<java.lang.Boolean, java.lang.Boolean> values) {
        internalGetMutableMapBoolBool().getMutableMap()
            .putAll(values);
        return this;
      }

      private com.google.protobuf.MapField<
          java.lang.String, java.lang.String> mapStringString_;
      private com.google.protobuf.MapField<java.lang.String, java.lang.String>
      internalGetMapStringString() {
        if (mapStringString_ == null) {
          return com.google.protobuf.MapField.emptyMapField(
              MapStringStringDefaultEntryHolder.defaultEntry);
        }
        return mapStringString_;
      }
      private com.google.protobuf.MapField<java.lang.String, java.lang.String>
      internalGetMutableMapStringString() {
        onChanged();;
        if (mapStringString_ == null) {
          mapStringString_ = com.google.protobuf.MapField.newMapField(
              MapStringStringDefaultEntryHolder.defaultEntry);
        }
        if (!mapStringString_.isMutable()) {
          mapStringString_ = mapStringString_.copy();
        }
        return mapStringString_;
      }

      public int getMapStringStringCount() {
        return internalGetMapStringString().getMap().size();
      }
      /**
       * <code>map&lt;string, string&gt; map_string_string = 14;</code>
       */

      @java.lang.Override
      public boolean containsMapStringString(
          java.lang.String key) {
        if (key == null) { throw new NullPointerException("map key"); }
        return internalGetMapStringString().getMap().containsKey(key);
      }
      /**
       * Use {@link #getMapStringStringMap()} instead.
       */
      @java.lang.Override
      @java.lang.Deprecated
      public java.util.Map<java.lang.String, java.lang.String> getMapStringString() {
        return getMapStringStringMap();
      }
      /**
       * <code>map&lt;string, string&gt; map_string_string = 14;</code>
       */
      @java.lang.Override

      public java.util.Map<java.lang.String, java.lang.String> getMapStringStringMap() {
        return internalGetMapStringString().getMap();
      }
      /**
       * <code>map&lt;string, string&gt; map_string_string = 14;</code>
       */
      @java.lang.Override

      public java.lang.String getMapStringStringOrDefault(
          java.lang.String key,
          java.lang.String defaultValue) {
        if (key == null) { throw new NullPointerException("map key"); }
        java.util.Map<java.lang.String, java.lang.String> map =
            internalGetMapStringString().getMap();
        return map.containsKey(key) ? map.get(key) : defaultValue;
      }
      /**
       * <code>map&lt;string, string&gt; map_string_string = 14;</code>
       */
      @java.lang.Override

      public java.lang.String getMapStringStringOrThrow(
          java.lang.String key) {
        if (key == null) { throw new NullPointerException("map key"); }
        java.util.Map<java.lang.String, java.lang.String> map =
            internalGetMapStringString().getMap();
        if (!map.containsKey(key)) {
          throw new java.lang.IllegalArgumentException();
        }
        return map.get(key);
      }

      public Builder clearMapStringString() {
        internalGetMutableMapStringString().getMutableMap()
            .clear();
        return this;
      }
      /**
       * <code>map&lt;string, string&gt; map_string_string = 14;</code>
       */

      public Builder removeMapStringString(
          java.lang.String key) {
        if (key == null) { throw new NullPointerException("map key"); }
        internalGetMutableMapStringString().getMutableMap()
            .remove(key);
        return this;
      }
      /**
       * Use alternate mutation accessors instead.
       */
      @java.lang.Deprecated
      public java.util.Map<java.lang.String, java.lang.String>
      getMutableMapStringString() {
        return internalGetMutableMapStringString().getMutableMap();
      }
      /**
       * <code>map&lt;string, string&gt; map_string_string = 14;</code>
       */
      public Builder putMapStringString(
          java.lang.String key,
          java.lang.String value) {
        if (key == null) { throw new NullPointerException("map key"); }
        if (value == null) {
  throw new NullPointerException("map value");
}

        internalGetMutableMapStringString().getMutableMap()
            .put(key, value);
        return this;
      }
      /**
       * <code>map&lt;string, string&gt; map_string_string = 14;</code>
       */

      public Builder putAllMapStringString(
          java.util.Map<java.lang.String, java.lang.String> values) {
        internalGetMutableMapStringString().getMutableMap()
            .putAll(values);
        return this;
      }

      private com.google.protobuf.MapField<
          java.lang.Integer, com.google.protobuf.ByteString> mapInt32Bytes_;
      private com.google.protobuf.MapField<java.lang.Integer, com.google.protobuf.ByteString>
      internalGetMapInt32Bytes() {
        if (mapInt32Bytes_ == null) {
          return com.google.protobuf.MapField.emptyMapField(
              MapInt32BytesDefaultEntryHolder.defaultEntry);
        }
        return mapInt32Bytes_;
      }
      private com.google.protobuf.MapField<java.lang.Integer, com.google.protobuf.ByteString>
      internalGetMutableMapInt32Bytes() {
        onChanged();;
        if (mapInt32Bytes_ == null) {
          mapInt32Bytes_ = com.google.protobuf.MapField.newMapField(
              MapInt32BytesDefaultEntryHolder.defaultEntry);
        }
        if (!mapInt32Bytes_.isMutable()) {
          mapInt32Bytes_ = mapInt32Bytes_.copy();
        }
        return mapInt32Bytes_;
      }

      public int getMapInt32BytesCount() {
        return internalGetMapInt32Bytes().getMap().size();
      }
      /**
       * <code>map&lt;int32, bytes&gt; map_int32_bytes = 15;</code>
       */

      @java.lang.Override
      public boolean containsMapInt32Bytes(
          int key) {
        
        return internalGetMapInt32Bytes().getMap().containsKey(key);
      }
      /**
       * Use {@link #getMapInt32BytesMap()} instead.
       */
      @java.lang.Override
      @java.lang.Deprecated
      public java.util.Map<java.lang.Integer, com.google.protobuf.ByteString> getMapInt32Bytes() {
        return getMapInt32BytesMap();
      }
      /**
       * <code>map&lt;int32, bytes&gt; map_int32_bytes = 15;</code>
       */
      @java.lang.Override

      public java.util.Map<java.lang.Integer, com.google.protobuf.ByteString> getMapInt32BytesMap() {
        return internalGetMapInt32Bytes().getMap();
      }
      /**
       * <code>map&lt;int32, bytes&gt; map_int32_bytes = 15;</code>
       */
      @java.lang.Override

      public com.google.protobuf.ByteString getMapInt32BytesOrDefault(
          int key,
          com.google.protobuf.ByteString defaultValue) {
        
        java.util.Map<java.lang.Integer, com.google.protobuf.ByteString> map =
            internalGetMapInt32Bytes().getMap();
        return map.containsKey(key) ? map.get(key) : defaultValue;
      }
      /**
       * <code>map&lt;int32, bytes&gt; map_int32_bytes = 15;</code>
       */
      @java.lang.Override

      public com.google.protobuf.ByteString getMapInt32BytesOrThrow(
          int key) {
        
        java.util.Map<java.lang.Integer, com.google.protobuf.ByteString> map =
            internalGetMapInt32Bytes().getMap();
        if (!map.containsKey(key)) {
          throw new java.lang.IllegalArgumentException();
        }
        return map.get(key);
      }

      public Builder clearMapInt32Bytes() {
        internalGetMutableMapInt32Bytes().getMutableMap()
            .clear();
        return this;
      }
      /**
       * <code>map&lt;int32, bytes&gt; map_int32_bytes = 15;</code>
       */

      public Builder removeMapInt32Bytes(
          int key) {
        
        internalGetMutableMapInt32Bytes().getMutableMap()
            .remove(key);
        return this;
      }
      /**
       * Use alternate mutation accessors instead.
       */
      @java.lang.Deprecated
      public java.util.Map<java.lang.Integer, com.google.protobuf.ByteString>
      getMutableMapInt32Bytes() {
        return internalGetMutableMapInt32Bytes().getMutableMap();
      }
      /**
       * <code>map&lt;int32, bytes&gt; map_int32_bytes = 15;</code>
       */
      public Builder putMapInt32Bytes(
          int key,
          com.google.protobuf.ByteString value) {
        
        if (value == null) {
  throw new NullPointerException("map value");
}

        internalGetMutableMapInt32Bytes().getMutableMap()
            .put(key, value);
        return this;
      }
      /**
       * <code>map&lt;int32, bytes&gt; map_int32_bytes = 15;</code>
       */

      public Builder putAllMapInt32Bytes(
          java.util.Map<java.lang.Integer, com.google.protobuf.ByteString> values) {
        internalGetMutableMapInt32Bytes().getMutableMap()
            .putAll(values);
        return this;
      }

      private com.google.protobuf.MapField<
          java.lang.Integer, java.lang.Integer> mapInt32Enum_;
      private com.google.protobuf.MapField<java.lang.Integer, java.lang.Integer>
      internalGetMapInt32Enum() {
        if (mapInt32Enum_ == null) {
          return com.google.protobuf.MapField.emptyMapField(
              MapInt32EnumDefaultEntryHolder.defaultEntry);
        }
        return mapInt32Enum_;
      }
      private com.google.protobuf.MapField<java.lang.Integer, java.lang.Integer>
      internalGetMutableMapInt32Enum() {
        onChanged();;
        if (mapInt32Enum_ == null) {
          mapInt32Enum_ = com.google.protobuf.MapField.newMapField(
              MapInt32EnumDefaultEntryHolder.defaultEntry);
        }
        if (!mapInt32Enum_.isMutable()) {
          mapInt32Enum_ = mapInt32Enum_.copy();
        }
        return mapInt32Enum_;
      }

      public int getMapInt32EnumCount() {
        return internalGetMapInt32Enum().getMap().size();
      }
      /**
       * <code>map&lt;int32, .protobuf_unittest.MapEnumLite&gt; map_int32_enum = 16;</code>
       */

      @java.lang.Override
      public boolean containsMapInt32Enum(
          int key) {
        
        return internalGetMapInt32Enum().getMap().containsKey(key);
      }
      /**
       * Use {@link #getMapInt32EnumMap()} instead.
       */
      @java.lang.Override
      @java.lang.Deprecated
      public java.util.Map<java.lang.Integer, protobuf_unittest.MapLiteUnittest.MapEnumLite>
      getMapInt32Enum() {
        return getMapInt32EnumMap();
      }
      /**
       * <code>map&lt;int32, .protobuf_unittest.MapEnumLite&gt; map_int32_enum = 16;</code>
       */
      @java.lang.Override

      public java.util.Map<java.lang.Integer, protobuf_unittest.MapLiteUnittest.MapEnumLite>
      getMapInt32EnumMap() {
        return internalGetAdaptedMapInt32EnumMap(
            internalGetMapInt32Enum().getMap());}
      /**
       * <code>map&lt;int32, .protobuf_unittest.MapEnumLite&gt; map_int32_enum = 16;</code>
       */
      @java.lang.Override

      public /* nullable */
protobuf_unittest.MapLiteUnittest.MapEnumLite getMapInt32EnumOrDefault(
          int key,
          /* nullable */
protobuf_unittest.MapLiteUnittest.MapEnumLite defaultValue) {
        
        java.util.Map<java.lang.Integer, java.lang.Integer> map =
            internalGetMapInt32Enum().getMap();
        return map.containsKey(key)
               ? mapInt32EnumValueConverter.doForward(map.get(key))
               : defaultValue;
      }
      /**
       * <code>map&lt;int32, .protobuf_unittest.MapEnumLite&gt; map_int32_enum = 16;</code>
       */
      @java.lang.Override

      public protobuf_unittest.MapLiteUnittest.MapEnumLite getMapInt32EnumOrThrow(
          int key) {
        
        java.util.Map<java.lang.Integer, java.lang.Integer> map =
            internalGetMapInt32Enum().getMap();
        if (!map.containsKey(key)) {
          throw new java.lang.IllegalArgumentException();
        }
        return mapInt32EnumValueConverter.doForward(map.get(key));
      }

      public Builder clearMapInt32Enum() {
        internalGetMutableMapInt32Enum().getMutableMap()
            .clear();
        return this;
      }
      /**
       * <code>map&lt;int32, .protobuf_unittest.MapEnumLite&gt; map_int32_enum = 16;</code>
       */

      public Builder removeMapInt32Enum(
          int key) {
        
        internalGetMutableMapInt32Enum().getMutableMap()
            .remove(key);
        return this;
      }
      /**
       * Use alternate mutation accessors instead.
       */
      @java.lang.Deprecated
      public java.util.Map<java.lang.Integer, protobuf_unittest.MapLiteUnittest.MapEnumLite>
      getMutableMapInt32Enum() {
        return internalGetAdaptedMapInt32EnumMap(
             internalGetMutableMapInt32Enum().getMutableMap());
      }
      /**
       * <code>map&lt;int32, .protobuf_unittest.MapEnumLite&gt; map_int32_enum = 16;</code>
       */
      public Builder putMapInt32Enum(
          int key,
          protobuf_unittest.MapLiteUnittest.MapEnumLite value) {
        
        
        internalGetMutableMapInt32Enum().getMutableMap()
            .put(key, mapInt32EnumValueConverter.doBackward(value));
        return this;
      }
      /**
       * <code>map&lt;int32, .protobuf_unittest.MapEnumLite&gt; map_int32_enum = 16;</code>
       */
      public Builder putAllMapInt32Enum(
          java.util.Map<java.lang.Integer, protobuf_unittest.MapLiteUnittest.MapEnumLite> values) {
        internalGetAdaptedMapInt32EnumMap(
            internalGetMutableMapInt32Enum().getMutableMap())
                .putAll(values);
        return this;
      }

      private com.google.protobuf.MapField<
          java.lang.Integer, com.google.protobuf.UnittestLite.ForeignMessageLite> mapInt32ForeignMessage_;
      private com.google.protobuf.MapField<java.lang.Integer, com.google.protobuf.UnittestLite.ForeignMessageLite>
      internalGetMapInt32ForeignMessage() {
        if (mapInt32ForeignMessage_ == null) {
          return com.google.protobuf.MapField.emptyMapField(
              MapInt32ForeignMessageDefaultEntryHolder.defaultEntry);
        }
        return mapInt32ForeignMessage_;
      }
      private com.google.protobuf.MapField<java.lang.Integer, com.google.protobuf.UnittestLite.ForeignMessageLite>
      internalGetMutableMapInt32ForeignMessage() {
        onChanged();;
        if (mapInt32ForeignMessage_ == null) {
          mapInt32ForeignMessage_ = com.google.protobuf.MapField.newMapField(
              MapInt32ForeignMessageDefaultEntryHolder.defaultEntry);
        }
        if (!mapInt32ForeignMessage_.isMutable()) {
          mapInt32ForeignMessage_ = mapInt32ForeignMessage_.copy();
        }
        return mapInt32ForeignMessage_;
      }

      public int getMapInt32ForeignMessageCount() {
        return internalGetMapInt32ForeignMessage().getMap().size();
      }
      /**
       * <code>map&lt;int32, .protobuf_unittest.ForeignMessageLite&gt; map_int32_foreign_message = 17;</code>
       */

      @java.lang.Override
      public boolean containsMapInt32ForeignMessage(
          int key) {
        
        return internalGetMapInt32ForeignMessage().getMap().containsKey(key);
      }
      /**
       * Use {@link #getMapInt32ForeignMessageMap()} instead.
       */
      @java.lang.Override
      @java.lang.Deprecated
      public java.util.Map<java.lang.Integer, com.google.protobuf.UnittestLite.ForeignMessageLite> getMapInt32ForeignMessage() {
        return getMapInt32ForeignMessageMap();
      }
      /**
       * <code>map&lt;int32, .protobuf_unittest.ForeignMessageLite&gt; map_int32_foreign_message = 17;</code>
       */
      @java.lang.Override

      public java.util.Map<java.lang.Integer, com.google.protobuf.UnittestLite.ForeignMessageLite> getMapInt32ForeignMessageMap() {
        return internalGetMapInt32ForeignMessage().getMap();
      }
      /**
       * <code>map&lt;int32, .protobuf_unittest.ForeignMessageLite&gt; map_int32_foreign_message = 17;</code>
       */
      @java.lang.Override

      public com.google.protobuf.UnittestLite.ForeignMessageLite getMapInt32ForeignMessageOrDefault(
          int key,
          com.google.protobuf.UnittestLite.ForeignMessageLite defaultValue) {
        
        java.util.Map<java.lang.Integer, com.google.protobuf.UnittestLite.ForeignMessageLite> map =
            internalGetMapInt32ForeignMessage().getMap();
        return map.containsKey(key) ? map.get(key) : defaultValue;
      }
      /**
       * <code>map&lt;int32, .protobuf_unittest.ForeignMessageLite&gt; map_int32_foreign_message = 17;</code>
       */
      @java.lang.Override

      public com.google.protobuf.UnittestLite.ForeignMessageLite getMapInt32ForeignMessageOrThrow(
          int key) {
        
        java.util.Map<java.lang.Integer, com.google.protobuf.UnittestLite.ForeignMessageLite> map =
            internalGetMapInt32ForeignMessage().getMap();
        if (!map.containsKey(key)) {
          throw new java.lang.IllegalArgumentException();
        }
        return map.get(key);
      }

      public Builder clearMapInt32ForeignMessage() {
        internalGetMutableMapInt32ForeignMessage().getMutableMap()
            .clear();
        return this;
      }
      /**
       * <code>map&lt;int32, .protobuf_unittest.ForeignMessageLite&gt; map_int32_foreign_message = 17;</code>
       */

      public Builder removeMapInt32ForeignMessage(
          int key) {
        
        internalGetMutableMapInt32ForeignMessage().getMutableMap()
            .remove(key);
        return this;
      }
      /**
       * Use alternate mutation accessors instead.
       */
      @java.lang.Deprecated
      public java.util.Map<java.lang.Integer, com.google.protobuf.UnittestLite.ForeignMessageLite>
      getMutableMapInt32ForeignMessage() {
        return internalGetMutableMapInt32ForeignMessage().getMutableMap();
      }
      /**
       * <code>map&lt;int32, .protobuf_unittest.ForeignMessageLite&gt; map_int32_foreign_message = 17;</code>
       */
      public Builder putMapInt32ForeignMessage(
          int key,
          com.google.protobuf.UnittestLite.ForeignMessageLite value) {
        
        if (value == null) {
  throw new NullPointerException("map value");
}

        internalGetMutableMapInt32ForeignMessage().getMutableMap()
            .put(key, value);
        return this;
      }
      /**
       * <code>map&lt;int32, .protobuf_unittest.ForeignMessageLite&gt; map_int32_foreign_message = 17;</code>
       */

      public Builder putAllMapInt32ForeignMessage(
          java.util.Map<java.lang.Integer, com.google.protobuf.UnittestLite.ForeignMessageLite> values) {
        internalGetMutableMapInt32ForeignMessage().getMutableMap()
            .putAll(values);
        return this;
      }

      private com.google.protobuf.MapField<
          java.lang.Integer, java.lang.Integer> teboring_;
      private com.google.protobuf.MapField<java.lang.Integer, java.lang.Integer>
      internalGetTeboring() {
        if (teboring_ == null) {
          return com.google.protobuf.MapField.emptyMapField(
              TeboringDefaultEntryHolder.defaultEntry);
        }
        return teboring_;
      }
      private com.google.protobuf.MapField<java.lang.Integer, java.lang.Integer>
      internalGetMutableTeboring() {
        onChanged();;
        if (teboring_ == null) {
          teboring_ = com.google.protobuf.MapField.newMapField(
              TeboringDefaultEntryHolder.defaultEntry);
        }
        if (!teboring_.isMutable()) {
          teboring_ = teboring_.copy();
        }
        return teboring_;
      }

      public int getTeboringCount() {
        return internalGetTeboring().getMap().size();
      }
      /**
       * <code>map&lt;int32, int32&gt; teboring = 18;</code>
       */

      @java.lang.Override
      public boolean containsTeboring(
          int key) {
        
        return internalGetTeboring().getMap().containsKey(key);
      }
      /**
       * Use {@link #getTeboringMap()} instead.
       */
      @java.lang.Override
      @java.lang.Deprecated
      public java.util.Map<java.lang.Integer, java.lang.Integer> getTeboring() {
        return getTeboringMap();
      }
      /**
       * <code>map&lt;int32, int32&gt; teboring = 18;</code>
       */
      @java.lang.Override

      public java.util.Map<java.lang.Integer, java.lang.Integer> getTeboringMap() {
        return internalGetTeboring().getMap();
      }
      /**
       * <code>map&lt;int32, int32&gt; teboring = 18;</code>
       */
      @java.lang.Override

      public int getTeboringOrDefault(
          int key,
          int defaultValue) {
        
        java.util.Map<java.lang.Integer, java.lang.Integer> map =
            internalGetTeboring().getMap();
        return map.containsKey(key) ? map.get(key) : defaultValue;
      }
      /**
       * <code>map&lt;int32, int32&gt; teboring = 18;</code>
       */
      @java.lang.Override

      public int getTeboringOrThrow(
          int key) {
        
        java.util.Map<java.lang.Integer, java.lang.Integer> map =
            internalGetTeboring().getMap();
        if (!map.containsKey(key)) {
          throw new java.lang.IllegalArgumentException();
        }
        return map.get(key);
      }

      public Builder clearTeboring() {
        internalGetMutableTeboring().getMutableMap()
            .clear();
        return this;
      }
      /**
       * <code>map&lt;int32, int32&gt; teboring = 18;</code>
       */

      public Builder removeTeboring(
          int key) {
        
        internalGetMutableTeboring().getMutableMap()
            .remove(key);
        return this;
      }
      /**
       * Use alternate mutation accessors instead.
       */
      @java.lang.Deprecated
      public java.util.Map<java.lang.Integer, java.lang.Integer>
      getMutableTeboring() {
        return internalGetMutableTeboring().getMutableMap();
      }
      /**
       * <code>map&lt;int32, int32&gt; teboring = 18;</code>
       */
      public Builder putTeboring(
          int key,
          int value) {
        
        
        internalGetMutableTeboring().getMutableMap()
            .put(key, value);
        return this;
      }
      /**
       * <code>map&lt;int32, int32&gt; teboring = 18;</code>
       */

      public Builder putAllTeboring(
          java.util.Map<java.lang.Integer, java.lang.Integer> values) {
        internalGetMutableTeboring().getMutableMap()
            .putAll(values);
        return this;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:protobuf_unittest.TestMapLite)
    }

    // @@protoc_insertion_point(class_scope:protobuf_unittest.TestMapLite)
    private static final protobuf_unittest.MapLiteUnittest.TestMapLite DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new protobuf_unittest.MapLiteUnittest.TestMapLite();
    }

    public static protobuf_unittest.MapLiteUnittest.TestMapLite getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    @java.lang.Deprecated public static final com.google.protobuf.Parser<TestMapLite>
        PARSER = new com.google.protobuf.AbstractParser<TestMapLite>() {
      @java.lang.Override
      public TestMapLite parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new TestMapLite(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<TestMapLite> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<TestMapLite> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public protobuf_unittest.MapLiteUnittest.TestMapLite getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface TestArenaMapLiteOrBuilder extends
      // @@protoc_insertion_point(interface_extends:protobuf_unittest.TestArenaMapLite)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>map&lt;int32, int32&gt; map_int32_int32 = 1;</code>
     */
    int getMapInt32Int32Count();
    /**
     * <code>map&lt;int32, int32&gt; map_int32_int32 = 1;</code>
     */
    boolean containsMapInt32Int32(
        int key);
    /**
     * Use {@link #getMapInt32Int32Map()} instead.
     */
    @java.lang.Deprecated
    java.util.Map<java.lang.Integer, java.lang.Integer>
    getMapInt32Int32();
    /**
     * <code>map&lt;int32, int32&gt; map_int32_int32 = 1;</code>
     */
    java.util.Map<java.lang.Integer, java.lang.Integer>
    getMapInt32Int32Map();
    /**
     * <code>map&lt;int32, int32&gt; map_int32_int32 = 1;</code>
     */

    int getMapInt32Int32OrDefault(
        int key,
        int defaultValue);
    /**
     * <code>map&lt;int32, int32&gt; map_int32_int32 = 1;</code>
     */

    int getMapInt32Int32OrThrow(
        int key);

    /**
     * <code>map&lt;int64, int64&gt; map_int64_int64 = 2;</code>
     */
    int getMapInt64Int64Count();
    /**
     * <code>map&lt;int64, int64&gt; map_int64_int64 = 2;</code>
     */
    boolean containsMapInt64Int64(
        long key);
    /**
     * Use {@link #getMapInt64Int64Map()} instead.
     */
    @java.lang.Deprecated
    java.util.Map<java.lang.Long, java.lang.Long>
    getMapInt64Int64();
    /**
     * <code>map&lt;int64, int64&gt; map_int64_int64 = 2;</code>
     */
    java.util.Map<java.lang.Long, java.lang.Long>
    getMapInt64Int64Map();
    /**
     * <code>map&lt;int64, int64&gt; map_int64_int64 = 2;</code>
     */

    long getMapInt64Int64OrDefault(
        long key,
        long defaultValue);
    /**
     * <code>map&lt;int64, int64&gt; map_int64_int64 = 2;</code>
     */

    long getMapInt64Int64OrThrow(
        long key);

    /**
     * <code>map&lt;uint32, uint32&gt; map_uint32_uint32 = 3;</code>
     */
    int getMapUint32Uint32Count();
    /**
     * <code>map&lt;uint32, uint32&gt; map_uint32_uint32 = 3;</code>
     */
    boolean containsMapUint32Uint32(
        int key);
    /**
     * Use {@link #getMapUint32Uint32Map()} instead.
     */
    @java.lang.Deprecated
    java.util.Map<java.lang.Integer, java.lang.Integer>
    getMapUint32Uint32();
    /**
     * <code>map&lt;uint32, uint32&gt; map_uint32_uint32 = 3;</code>
     */
    java.util.Map<java.lang.Integer, java.lang.Integer>
    getMapUint32Uint32Map();
    /**
     * <code>map&lt;uint32, uint32&gt; map_uint32_uint32 = 3;</code>
     */

    int getMapUint32Uint32OrDefault(
        int key,
        int defaultValue);
    /**
     * <code>map&lt;uint32, uint32&gt; map_uint32_uint32 = 3;</code>
     */

    int getMapUint32Uint32OrThrow(
        int key);

    /**
     * <code>map&lt;uint64, uint64&gt; map_uint64_uint64 = 4;</code>
     */
    int getMapUint64Uint64Count();
    /**
     * <code>map&lt;uint64, uint64&gt; map_uint64_uint64 = 4;</code>
     */
    boolean containsMapUint64Uint64(
        long key);
    /**
     * Use {@link #getMapUint64Uint64Map()} instead.
     */
    @java.lang.Deprecated
    java.util.Map<java.lang.Long, java.lang.Long>
    getMapUint64Uint64();
    /**
     * <code>map&lt;uint64, uint64&gt; map_uint64_uint64 = 4;</code>
     */
    java.util.Map<java.lang.Long, java.lang.Long>
    getMapUint64Uint64Map();
    /**
     * <code>map&lt;uint64, uint64&gt; map_uint64_uint64 = 4;</code>
     */

    long getMapUint64Uint64OrDefault(
        long key,
        long defaultValue);
    /**
     * <code>map&lt;uint64, uint64&gt; map_uint64_uint64 = 4;</code>
     */

    long getMapUint64Uint64OrThrow(
        long key);

    /**
     * <code>map&lt;sint32, sint32&gt; map_sint32_sint32 = 5;</code>
     */
    int getMapSint32Sint32Count();
    /**
     * <code>map&lt;sint32, sint32&gt; map_sint32_sint32 = 5;</code>
     */
    boolean containsMapSint32Sint32(
        int key);
    /**
     * Use {@link #getMapSint32Sint32Map()} instead.
     */
    @java.lang.Deprecated
    java.util.Map<java.lang.Integer, java.lang.Integer>
    getMapSint32Sint32();
    /**
     * <code>map&lt;sint32, sint32&gt; map_sint32_sint32 = 5;</code>
     */
    java.util.Map<java.lang.Integer, java.lang.Integer>
    getMapSint32Sint32Map();
    /**
     * <code>map&lt;sint32, sint32&gt; map_sint32_sint32 = 5;</code>
     */

    int getMapSint32Sint32OrDefault(
        int key,
        int defaultValue);
    /**
     * <code>map&lt;sint32, sint32&gt; map_sint32_sint32 = 5;</code>
     */

    int getMapSint32Sint32OrThrow(
        int key);

    /**
     * <code>map&lt;sint64, sint64&gt; map_sint64_sint64 = 6;</code>
     */
    int getMapSint64Sint64Count();
    /**
     * <code>map&lt;sint64, sint64&gt; map_sint64_sint64 = 6;</code>
     */
    boolean containsMapSint64Sint64(
        long key);
    /**
     * Use {@link #getMapSint64Sint64Map()} instead.
     */
    @java.lang.Deprecated
    java.util.Map<java.lang.Long, java.lang.Long>
    getMapSint64Sint64();
    /**
     * <code>map&lt;sint64, sint64&gt; map_sint64_sint64 = 6;</code>
     */
    java.util.Map<java.lang.Long, java.lang.Long>
    getMapSint64Sint64Map();
    /**
     * <code>map&lt;sint64, sint64&gt; map_sint64_sint64 = 6;</code>
     */

    long getMapSint64Sint64OrDefault(
        long key,
        long defaultValue);
    /**
     * <code>map&lt;sint64, sint64&gt; map_sint64_sint64 = 6;</code>
     */

    long getMapSint64Sint64OrThrow(
        long key);

    /**
     * <code>map&lt;fixed32, fixed32&gt; map_fixed32_fixed32 = 7;</code>
     */
    int getMapFixed32Fixed32Count();
    /**
     * <code>map&lt;fixed32, fixed32&gt; map_fixed32_fixed32 = 7;</code>
     */
    boolean containsMapFixed32Fixed32(
        int key);
    /**
     * Use {@link #getMapFixed32Fixed32Map()} instead.
     */
    @java.lang.Deprecated
    java.util.Map<java.lang.Integer, java.lang.Integer>
    getMapFixed32Fixed32();
    /**
     * <code>map&lt;fixed32, fixed32&gt; map_fixed32_fixed32 = 7;</code>
     */
    java.util.Map<java.lang.Integer, java.lang.Integer>
    getMapFixed32Fixed32Map();
    /**
     * <code>map&lt;fixed32, fixed32&gt; map_fixed32_fixed32 = 7;</code>
     */

    int getMapFixed32Fixed32OrDefault(
        int key,
        int defaultValue);
    /**
     * <code>map&lt;fixed32, fixed32&gt; map_fixed32_fixed32 = 7;</code>
     */

    int getMapFixed32Fixed32OrThrow(
        int key);

    /**
     * <code>map&lt;fixed64, fixed64&gt; map_fixed64_fixed64 = 8;</code>
     */
    int getMapFixed64Fixed64Count();
    /**
     * <code>map&lt;fixed64, fixed64&gt; map_fixed64_fixed64 = 8;</code>
     */
    boolean containsMapFixed64Fixed64(
        long key);
    /**
     * Use {@link #getMapFixed64Fixed64Map()} instead.
     */
    @java.lang.Deprecated
    java.util.Map<java.lang.Long, java.lang.Long>
    getMapFixed64Fixed64();
    /**
     * <code>map&lt;fixed64, fixed64&gt; map_fixed64_fixed64 = 8;</code>
     */
    java.util.Map<java.lang.Long, java.lang.Long>
    getMapFixed64Fixed64Map();
    /**
     * <code>map&lt;fixed64, fixed64&gt; map_fixed64_fixed64 = 8;</code>
     */

    long getMapFixed64Fixed64OrDefault(
        long key,
        long defaultValue);
    /**
     * <code>map&lt;fixed64, fixed64&gt; map_fixed64_fixed64 = 8;</code>
     */

    long getMapFixed64Fixed64OrThrow(
        long key);

    /**
     * <code>map&lt;sfixed32, sfixed32&gt; map_sfixed32_sfixed32 = 9;</code>
     */
    int getMapSfixed32Sfixed32Count();
    /**
     * <code>map&lt;sfixed32, sfixed32&gt; map_sfixed32_sfixed32 = 9;</code>
     */
    boolean containsMapSfixed32Sfixed32(
        int key);
    /**
     * Use {@link #getMapSfixed32Sfixed32Map()} instead.
     */
    @java.lang.Deprecated
    java.util.Map<java.lang.Integer, java.lang.Integer>
    getMapSfixed32Sfixed32();
    /**
     * <code>map&lt;sfixed32, sfixed32&gt; map_sfixed32_sfixed32 = 9;</code>
     */
    java.util.Map<java.lang.Integer, java.lang.Integer>
    getMapSfixed32Sfixed32Map();
    /**
     * <code>map&lt;sfixed32, sfixed32&gt; map_sfixed32_sfixed32 = 9;</code>
     */

    int getMapSfixed32Sfixed32OrDefault(
        int key,
        int defaultValue);
    /**
     * <code>map&lt;sfixed32, sfixed32&gt; map_sfixed32_sfixed32 = 9;</code>
     */

    int getMapSfixed32Sfixed32OrThrow(
        int key);

    /**
     * <code>map&lt;sfixed64, sfixed64&gt; map_sfixed64_sfixed64 = 10;</code>
     */
    int getMapSfixed64Sfixed64Count();
    /**
     * <code>map&lt;sfixed64, sfixed64&gt; map_sfixed64_sfixed64 = 10;</code>
     */
    boolean containsMapSfixed64Sfixed64(
        long key);
    /**
     * Use {@link #getMapSfixed64Sfixed64Map()} instead.
     */
    @java.lang.Deprecated
    java.util.Map<java.lang.Long, java.lang.Long>
    getMapSfixed64Sfixed64();
    /**
     * <code>map&lt;sfixed64, sfixed64&gt; map_sfixed64_sfixed64 = 10;</code>
     */
    java.util.Map<java.lang.Long, java.lang.Long>
    getMapSfixed64Sfixed64Map();
    /**
     * <code>map&lt;sfixed64, sfixed64&gt; map_sfixed64_sfixed64 = 10;</code>
     */

    long getMapSfixed64Sfixed64OrDefault(
        long key,
        long defaultValue);
    /**
     * <code>map&lt;sfixed64, sfixed64&gt; map_sfixed64_sfixed64 = 10;</code>
     */

    long getMapSfixed64Sfixed64OrThrow(
        long key);

    /**
     * <code>map&lt;int32, float&gt; map_int32_float = 11;</code>
     */
    int getMapInt32FloatCount();
    /**
     * <code>map&lt;int32, float&gt; map_int32_float = 11;</code>
     */
    boolean containsMapInt32Float(
        int key);
    /**
     * Use {@link #getMapInt32FloatMap()} instead.
     */
    @java.lang.Deprecated
    java.util.Map<java.lang.Integer, java.lang.Float>
    getMapInt32Float();
    /**
     * <code>map&lt;int32, float&gt; map_int32_float = 11;</code>
     */
    java.util.Map<java.lang.Integer, java.lang.Float>
    getMapInt32FloatMap();
    /**
     * <code>map&lt;int32, float&gt; map_int32_float = 11;</code>
     */

    float getMapInt32FloatOrDefault(
        int key,
        float defaultValue);
    /**
     * <code>map&lt;int32, float&gt; map_int32_float = 11;</code>
     */

    float getMapInt32FloatOrThrow(
        int key);

    /**
     * <code>map&lt;int32, double&gt; map_int32_double = 12;</code>
     */
    int getMapInt32DoubleCount();
    /**
     * <code>map&lt;int32, double&gt; map_int32_double = 12;</code>
     */
    boolean containsMapInt32Double(
        int key);
    /**
     * Use {@link #getMapInt32DoubleMap()} instead.
     */
    @java.lang.Deprecated
    java.util.Map<java.lang.Integer, java.lang.Double>
    getMapInt32Double();
    /**
     * <code>map&lt;int32, double&gt; map_int32_double = 12;</code>
     */
    java.util.Map<java.lang.Integer, java.lang.Double>
    getMapInt32DoubleMap();
    /**
     * <code>map&lt;int32, double&gt; map_int32_double = 12;</code>
     */

    double getMapInt32DoubleOrDefault(
        int key,
        double defaultValue);
    /**
     * <code>map&lt;int32, double&gt; map_int32_double = 12;</code>
     */

    double getMapInt32DoubleOrThrow(
        int key);

    /**
     * <code>map&lt;bool, bool&gt; map_bool_bool = 13;</code>
     */
    int getMapBoolBoolCount();
    /**
     * <code>map&lt;bool, bool&gt; map_bool_bool = 13;</code>
     */
    boolean containsMapBoolBool(
        boolean key);
    /**
     * Use {@link #getMapBoolBoolMap()} instead.
     */
    @java.lang.Deprecated
    java.util.Map<java.lang.Boolean, java.lang.Boolean>
    getMapBoolBool();
    /**
     * <code>map&lt;bool, bool&gt; map_bool_bool = 13;</code>
     */
    java.util.Map<java.lang.Boolean, java.lang.Boolean>
    getMapBoolBoolMap();
    /**
     * <code>map&lt;bool, bool&gt; map_bool_bool = 13;</code>
     */

    boolean getMapBoolBoolOrDefault(
        boolean key,
        boolean defaultValue);
    /**
     * <code>map&lt;bool, bool&gt; map_bool_bool = 13;</code>
     */

    boolean getMapBoolBoolOrThrow(
        boolean key);

    /**
     * <code>map&lt;string, string&gt; map_string_string = 14;</code>
     */
    int getMapStringStringCount();
    /**
     * <code>map&lt;string, string&gt; map_string_string = 14;</code>
     */
    boolean containsMapStringString(
        java.lang.String key);
    /**
     * Use {@link #getMapStringStringMap()} instead.
     */
    @java.lang.Deprecated
    java.util.Map<java.lang.String, java.lang.String>
    getMapStringString();
    /**
     * <code>map&lt;string, string&gt; map_string_string = 14;</code>
     */
    java.util.Map<java.lang.String, java.lang.String>
    getMapStringStringMap();
    /**
     * <code>map&lt;string, string&gt; map_string_string = 14;</code>
     */

    /* nullable */
java.lang.String getMapStringStringOrDefault(
        java.lang.String key,
        /* nullable */
java.lang.String defaultValue);
    /**
     * <code>map&lt;string, string&gt; map_string_string = 14;</code>
     */

    java.lang.String getMapStringStringOrThrow(
        java.lang.String key);

    /**
     * <code>map&lt;int32, bytes&gt; map_int32_bytes = 15;</code>
     */
    int getMapInt32BytesCount();
    /**
     * <code>map&lt;int32, bytes&gt; map_int32_bytes = 15;</code>
     */
    boolean containsMapInt32Bytes(
        int key);
    /**
     * Use {@link #getMapInt32BytesMap()} instead.
     */
    @java.lang.Deprecated
    java.util.Map<java.lang.Integer, com.google.protobuf.ByteString>
    getMapInt32Bytes();
    /**
     * <code>map&lt;int32, bytes&gt; map_int32_bytes = 15;</code>
     */
    java.util.Map<java.lang.Integer, com.google.protobuf.ByteString>
    getMapInt32BytesMap();
    /**
     * <code>map&lt;int32, bytes&gt; map_int32_bytes = 15;</code>
     */

    /* nullable */
com.google.protobuf.ByteString getMapInt32BytesOrDefault(
        int key,
        /* nullable */
com.google.protobuf.ByteString defaultValue);
    /**
     * <code>map&lt;int32, bytes&gt; map_int32_bytes = 15;</code>
     */

    com.google.protobuf.ByteString getMapInt32BytesOrThrow(
        int key);

    /**
     * <code>map&lt;int32, .protobuf_unittest.MapEnumLite&gt; map_int32_enum = 16;</code>
     */
    int getMapInt32EnumCount();
    /**
     * <code>map&lt;int32, .protobuf_unittest.MapEnumLite&gt; map_int32_enum = 16;</code>
     */
    boolean containsMapInt32Enum(
        int key);
    /**
     * Use {@link #getMapInt32EnumMap()} instead.
     */
    @java.lang.Deprecated
    java.util.Map<java.lang.Integer, protobuf_unittest.MapLiteUnittest.MapEnumLite>
    getMapInt32Enum();
    /**
     * <code>map&lt;int32, .protobuf_unittest.MapEnumLite&gt; map_int32_enum = 16;</code>
     */
    java.util.Map<java.lang.Integer, protobuf_unittest.MapLiteUnittest.MapEnumLite>
    getMapInt32EnumMap();
    /**
     * <code>map&lt;int32, .protobuf_unittest.MapEnumLite&gt; map_int32_enum = 16;</code>
     */
    /* nullable */
protobuf_unittest.MapLiteUnittest.MapEnumLite getMapInt32EnumOrDefault(
        int key,
        /* nullable */
protobuf_unittest.MapLiteUnittest.MapEnumLite         defaultValue);
    /**
     * <code>map&lt;int32, .protobuf_unittest.MapEnumLite&gt; map_int32_enum = 16;</code>
     */
    protobuf_unittest.MapLiteUnittest.MapEnumLite getMapInt32EnumOrThrow(
        int key);

    /**
     * <code>map&lt;int32, .protobuf_unittest.ForeignMessageArenaLite&gt; map_int32_foreign_message = 17;</code>
     */
    int getMapInt32ForeignMessageCount();
    /**
     * <code>map&lt;int32, .protobuf_unittest.ForeignMessageArenaLite&gt; map_int32_foreign_message = 17;</code>
     */
    boolean containsMapInt32ForeignMessage(
        int key);
    /**
     * Use {@link #getMapInt32ForeignMessageMap()} instead.
     */
    @java.lang.Deprecated
    java.util.Map<java.lang.Integer, protobuf_unittest.MapLiteUnittest.ForeignMessageArenaLite>
    getMapInt32ForeignMessage();
    /**
     * <code>map&lt;int32, .protobuf_unittest.ForeignMessageArenaLite&gt; map_int32_foreign_message = 17;</code>
     */
    java.util.Map<java.lang.Integer, protobuf_unittest.MapLiteUnittest.ForeignMessageArenaLite>
    getMapInt32ForeignMessageMap();
    /**
     * <code>map&lt;int32, .protobuf_unittest.ForeignMessageArenaLite&gt; map_int32_foreign_message = 17;</code>
     */

    /* nullable */
protobuf_unittest.MapLiteUnittest.ForeignMessageArenaLite getMapInt32ForeignMessageOrDefault(
        int key,
        /* nullable */
protobuf_unittest.MapLiteUnittest.ForeignMessageArenaLite defaultValue);
    /**
     * <code>map&lt;int32, .protobuf_unittest.ForeignMessageArenaLite&gt; map_int32_foreign_message = 17;</code>
     */

    protobuf_unittest.MapLiteUnittest.ForeignMessageArenaLite getMapInt32ForeignMessageOrThrow(
        int key);
  }
  /**
   * Protobuf type {@code protobuf_unittest.TestArenaMapLite}
   */
  public static final class TestArenaMapLite extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:protobuf_unittest.TestArenaMapLite)
      TestArenaMapLiteOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use TestArenaMapLite.newBuilder() to construct.
    private TestArenaMapLite(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private TestArenaMapLite() {
    }

    @java.lang.Override
    @SuppressWarnings({"unused"})
    protected java.lang.Object newInstance(
        UnusedPrivateParameter unused) {
      return new TestArenaMapLite();
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private TestArenaMapLite(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 10: {
              if (!((mutable_bitField0_ & 0x00000001) != 0)) {
                mapInt32Int32_ = com.google.protobuf.MapField.newMapField(
                    MapInt32Int32DefaultEntryHolder.defaultEntry);
                mutable_bitField0_ |= 0x00000001;
              }
              com.google.protobuf.MapEntry<java.lang.Integer, java.lang.Integer>
              mapInt32Int32__ = input.readMessage(
                  MapInt32Int32DefaultEntryHolder.defaultEntry.getParserForType(), extensionRegistry);
              mapInt32Int32_.getMutableMap().put(
                  mapInt32Int32__.getKey(), mapInt32Int32__.getValue());
              break;
            }
            case 18: {
              if (!((mutable_bitField0_ & 0x00000002) != 0)) {
                mapInt64Int64_ = com.google.protobuf.MapField.newMapField(
                    MapInt64Int64DefaultEntryHolder.defaultEntry);
                mutable_bitField0_ |= 0x00000002;
              }
              com.google.protobuf.MapEntry<java.lang.Long, java.lang.Long>
              mapInt64Int64__ = input.readMessage(
                  MapInt64Int64DefaultEntryHolder.defaultEntry.getParserForType(), extensionRegistry);
              mapInt64Int64_.getMutableMap().put(
                  mapInt64Int64__.getKey(), mapInt64Int64__.getValue());
              break;
            }
            case 26: {
              if (!((mutable_bitField0_ & 0x00000004) != 0)) {
                mapUint32Uint32_ = com.google.protobuf.MapField.newMapField(
                    MapUint32Uint32DefaultEntryHolder.defaultEntry);
                mutable_bitField0_ |= 0x00000004;
              }
              com.google.protobuf.MapEntry<java.lang.Integer, java.lang.Integer>
              mapUint32Uint32__ = input.readMessage(
                  MapUint32Uint32DefaultEntryHolder.defaultEntry.getParserForType(), extensionRegistry);
              mapUint32Uint32_.getMutableMap().put(
                  mapUint32Uint32__.getKey(), mapUint32Uint32__.getValue());
              break;
            }
            case 34: {
              if (!((mutable_bitField0_ & 0x00000008) != 0)) {
                mapUint64Uint64_ = com.google.protobuf.MapField.newMapField(
                    MapUint64Uint64DefaultEntryHolder.defaultEntry);
                mutable_bitField0_ |= 0x00000008;
              }
              com.google.protobuf.MapEntry<java.lang.Long, java.lang.Long>
              mapUint64Uint64__ = input.readMessage(
                  MapUint64Uint64DefaultEntryHolder.defaultEntry.getParserForType(), extensionRegistry);
              mapUint64Uint64_.getMutableMap().put(
                  mapUint64Uint64__.getKey(), mapUint64Uint64__.getValue());
              break;
            }
            case 42: {
              if (!((mutable_bitField0_ & 0x00000010) != 0)) {
                mapSint32Sint32_ = com.google.protobuf.MapField.newMapField(
                    MapSint32Sint32DefaultEntryHolder.defaultEntry);
                mutable_bitField0_ |= 0x00000010;
              }
              com.google.protobuf.MapEntry<java.lang.Integer, java.lang.Integer>
              mapSint32Sint32__ = input.readMessage(
                  MapSint32Sint32DefaultEntryHolder.defaultEntry.getParserForType(), extensionRegistry);
              mapSint32Sint32_.getMutableMap().put(
                  mapSint32Sint32__.getKey(), mapSint32Sint32__.getValue());
              break;
            }
            case 50: {
              if (!((mutable_bitField0_ & 0x00000020) != 0)) {
                mapSint64Sint64_ = com.google.protobuf.MapField.newMapField(
                    MapSint64Sint64DefaultEntryHolder.defaultEntry);
                mutable_bitField0_ |= 0x00000020;
              }
              com.google.protobuf.MapEntry<java.lang.Long, java.lang.Long>
              mapSint64Sint64__ = input.readMessage(
                  MapSint64Sint64DefaultEntryHolder.defaultEntry.getParserForType(), extensionRegistry);
              mapSint64Sint64_.getMutableMap().put(
                  mapSint64Sint64__.getKey(), mapSint64Sint64__.getValue());
              break;
            }
            case 58: {
              if (!((mutable_bitField0_ & 0x00000040) != 0)) {
                mapFixed32Fixed32_ = com.google.protobuf.MapField.newMapField(
                    MapFixed32Fixed32DefaultEntryHolder.defaultEntry);
                mutable_bitField0_ |= 0x00000040;
              }
              com.google.protobuf.MapEntry<java.lang.Integer, java.lang.Integer>
              mapFixed32Fixed32__ = input.readMessage(
                  MapFixed32Fixed32DefaultEntryHolder.defaultEntry.getParserForType(), extensionRegistry);
              mapFixed32Fixed32_.getMutableMap().put(
                  mapFixed32Fixed32__.getKey(), mapFixed32Fixed32__.getValue());
              break;
            }
            case 66: {
              if (!((mutable_bitField0_ & 0x00000080) != 0)) {
                mapFixed64Fixed64_ = com.google.protobuf.MapField.newMapField(
                    MapFixed64Fixed64DefaultEntryHolder.defaultEntry);
                mutable_bitField0_ |= 0x00000080;
              }
              com.google.protobuf.MapEntry<java.lang.Long, java.lang.Long>
              mapFixed64Fixed64__ = input.readMessage(
                  MapFixed64Fixed64DefaultEntryHolder.defaultEntry.getParserForType(), extensionRegistry);
              mapFixed64Fixed64_.getMutableMap().put(
                  mapFixed64Fixed64__.getKey(), mapFixed64Fixed64__.getValue());
              break;
            }
            case 74: {
              if (!((mutable_bitField0_ & 0x00000100) != 0)) {
                mapSfixed32Sfixed32_ = com.google.protobuf.MapField.newMapField(
                    MapSfixed32Sfixed32DefaultEntryHolder.defaultEntry);
                mutable_bitField0_ |= 0x00000100;
              }
              com.google.protobuf.MapEntry<java.lang.Integer, java.lang.Integer>
              mapSfixed32Sfixed32__ = input.readMessage(
                  MapSfixed32Sfixed32DefaultEntryHolder.defaultEntry.getParserForType(), extensionRegistry);
              mapSfixed32Sfixed32_.getMutableMap().put(
                  mapSfixed32Sfixed32__.getKey(), mapSfixed32Sfixed32__.getValue());
              break;
            }
            case 82: {
              if (!((mutable_bitField0_ & 0x00000200) != 0)) {
                mapSfixed64Sfixed64_ = com.google.protobuf.MapField.newMapField(
                    MapSfixed64Sfixed64DefaultEntryHolder.defaultEntry);
                mutable_bitField0_ |= 0x00000200;
              }
              com.google.protobuf.MapEntry<java.lang.Long, java.lang.Long>
              mapSfixed64Sfixed64__ = input.readMessage(
                  MapSfixed64Sfixed64DefaultEntryHolder.defaultEntry.getParserForType(), extensionRegistry);
              mapSfixed64Sfixed64_.getMutableMap().put(
                  mapSfixed64Sfixed64__.getKey(), mapSfixed64Sfixed64__.getValue());
              break;
            }
            case 90: {
              if (!((mutable_bitField0_ & 0x00000400) != 0)) {
                mapInt32Float_ = com.google.protobuf.MapField.newMapField(
                    MapInt32FloatDefaultEntryHolder.defaultEntry);
                mutable_bitField0_ |= 0x00000400;
              }
              com.google.protobuf.MapEntry<java.lang.Integer, java.lang.Float>
              mapInt32Float__ = input.readMessage(
                  MapInt32FloatDefaultEntryHolder.defaultEntry.getParserForType(), extensionRegistry);
              mapInt32Float_.getMutableMap().put(
                  mapInt32Float__.getKey(), mapInt32Float__.getValue());
              break;
            }
            case 98: {
              if (!((mutable_bitField0_ & 0x00000800) != 0)) {
                mapInt32Double_ = com.google.protobuf.MapField.newMapField(
                    MapInt32DoubleDefaultEntryHolder.defaultEntry);
                mutable_bitField0_ |= 0x00000800;
              }
              com.google.protobuf.MapEntry<java.lang.Integer, java.lang.Double>
              mapInt32Double__ = input.readMessage(
                  MapInt32DoubleDefaultEntryHolder.defaultEntry.getParserForType(), extensionRegistry);
              mapInt32Double_.getMutableMap().put(
                  mapInt32Double__.getKey(), mapInt32Double__.getValue());
              break;
            }
            case 106: {
              if (!((mutable_bitField0_ & 0x00001000) != 0)) {
                mapBoolBool_ = com.google.protobuf.MapField.newMapField(
                    MapBoolBoolDefaultEntryHolder.defaultEntry);
                mutable_bitField0_ |= 0x00001000;
              }
              com.google.protobuf.MapEntry<java.lang.Boolean, java.lang.Boolean>
              mapBoolBool__ = input.readMessage(
                  MapBoolBoolDefaultEntryHolder.defaultEntry.getParserForType(), extensionRegistry);
              mapBoolBool_.getMutableMap().put(
                  mapBoolBool__.getKey(), mapBoolBool__.getValue());
              break;
            }
            case 114: {
              if (!((mutable_bitField0_ & 0x00002000) != 0)) {
                mapStringString_ = com.google.protobuf.MapField.newMapField(
                    MapStringStringDefaultEntryHolder.defaultEntry);
                mutable_bitField0_ |= 0x00002000;
              }
              com.google.protobuf.MapEntry<java.lang.String, java.lang.String>
              mapStringString__ = input.readMessage(
                  MapStringStringDefaultEntryHolder.defaultEntry.getParserForType(), extensionRegistry);
              mapStringString_.getMutableMap().put(
                  mapStringString__.getKey(), mapStringString__.getValue());
              break;
            }
            case 122: {
              if (!((mutable_bitField0_ & 0x00004000) != 0)) {
                mapInt32Bytes_ = com.google.protobuf.MapField.newMapField(
                    MapInt32BytesDefaultEntryHolder.defaultEntry);
                mutable_bitField0_ |= 0x00004000;
              }
              com.google.protobuf.MapEntry<java.lang.Integer, com.google.protobuf.ByteString>
              mapInt32Bytes__ = input.readMessage(
                  MapInt32BytesDefaultEntryHolder.defaultEntry.getParserForType(), extensionRegistry);
              mapInt32Bytes_.getMutableMap().put(
                  mapInt32Bytes__.getKey(), mapInt32Bytes__.getValue());
              break;
            }
            case 130: {
              if (!((mutable_bitField0_ & 0x00008000) != 0)) {
                mapInt32Enum_ = com.google.protobuf.MapField.newMapField(
                    MapInt32EnumDefaultEntryHolder.defaultEntry);
                mutable_bitField0_ |= 0x00008000;
              }
              com.google.protobuf.ByteString bytes = input.readBytes();
              com.google.protobuf.MapEntry<java.lang.Integer, java.lang.Integer>
              mapInt32Enum__ = MapInt32EnumDefaultEntryHolder.defaultEntry.getParserForType().parseFrom(bytes);
              if (protobuf_unittest.MapLiteUnittest.MapEnumLite.forNumber(mapInt32Enum__.getValue()) == null) {
                unknownFields.mergeLengthDelimitedField(16, bytes);
              } else {
                mapInt32Enum_.getMutableMap().put(
                    mapInt32Enum__.getKey(), mapInt32Enum__.getValue());
              }
              break;
            }
            case 138: {
              if (!((mutable_bitField0_ & 0x00010000) != 0)) {
                mapInt32ForeignMessage_ = com.google.protobuf.MapField.newMapField(
                    MapInt32ForeignMessageDefaultEntryHolder.defaultEntry);
                mutable_bitField0_ |= 0x00010000;
              }
              com.google.protobuf.MapEntry<java.lang.Integer, protobuf_unittest.MapLiteUnittest.ForeignMessageArenaLite>
              mapInt32ForeignMessage__ = input.readMessage(
                  MapInt32ForeignMessageDefaultEntryHolder.defaultEntry.getParserForType(), extensionRegistry);
              mapInt32ForeignMessage_.getMutableMap().put(
                  mapInt32ForeignMessage__.getKey(), mapInt32ForeignMessage__.getValue());
              break;
            }
            default: {
              if (!parseUnknownField(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (com.google.protobuf.UninitializedMessageException e) {
        throw e.asInvalidProtocolBufferException().setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return protobuf_unittest.MapLiteUnittest.internal_static_protobuf_unittest_TestArenaMapLite_descriptor;
    }

    @SuppressWarnings({"rawtypes"})
    @java.lang.Override
    protected com.google.protobuf.MapField internalGetMapField(
        int number) {
      switch (number) {
        case 1:
          return internalGetMapInt32Int32();
        case 2:
          return internalGetMapInt64Int64();
        case 3:
          return internalGetMapUint32Uint32();
        case 4:
          return internalGetMapUint64Uint64();
        case 5:
          return internalGetMapSint32Sint32();
        case 6:
          return internalGetMapSint64Sint64();
        case 7:
          return internalGetMapFixed32Fixed32();
        case 8:
          return internalGetMapFixed64Fixed64();
        case 9:
          return internalGetMapSfixed32Sfixed32();
        case 10:
          return internalGetMapSfixed64Sfixed64();
        case 11:
          return internalGetMapInt32Float();
        case 12:
          return internalGetMapInt32Double();
        case 13:
          return internalGetMapBoolBool();
        case 14:
          return internalGetMapStringString();
        case 15:
          return internalGetMapInt32Bytes();
        case 16:
          return internalGetMapInt32Enum();
        case 17:
          return internalGetMapInt32ForeignMessage();
        default:
          throw new RuntimeException(
              "Invalid map field number: " + number);
      }
    }
    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return protobuf_unittest.MapLiteUnittest.internal_static_protobuf_unittest_TestArenaMapLite_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              protobuf_unittest.MapLiteUnittest.TestArenaMapLite.class, protobuf_unittest.MapLiteUnittest.TestArenaMapLite.Builder.class);
    }

    public static final int MAP_INT32_INT32_FIELD_NUMBER = 1;
    private static final class MapInt32Int32DefaultEntryHolder {
      static final com.google.protobuf.MapEntry<
          java.lang.Integer, java.lang.Integer> defaultEntry =
              com.google.protobuf.MapEntry
              .<java.lang.Integer, java.lang.Integer>newDefaultInstance(
                  protobuf_unittest.MapLiteUnittest.internal_static_protobuf_unittest_TestArenaMapLite_MapInt32Int32Entry_descriptor, 
                  com.google.protobuf.WireFormat.FieldType.INT32,
                  0,
                  com.google.protobuf.WireFormat.FieldType.INT32,
                  0);
    }
    private com.google.protobuf.MapField<
        java.lang.Integer, java.lang.Integer> mapInt32Int32_;
    private com.google.protobuf.MapField<java.lang.Integer, java.lang.Integer>
    internalGetMapInt32Int32() {
      if (mapInt32Int32_ == null) {
        return com.google.protobuf.MapField.emptyMapField(
            MapInt32Int32DefaultEntryHolder.defaultEntry);
      }
      return mapInt32Int32_;
    }

    public int getMapInt32Int32Count() {
      return internalGetMapInt32Int32().getMap().size();
    }
    /**
     * <code>map&lt;int32, int32&gt; map_int32_int32 = 1;</code>
     */

    @java.lang.Override
    public boolean containsMapInt32Int32(
        int key) {
      
      return internalGetMapInt32Int32().getMap().containsKey(key);
    }
    /**
     * Use {@link #getMapInt32Int32Map()} instead.
     */
    @java.lang.Override
    @java.lang.Deprecated
    public java.util.Map<java.lang.Integer, java.lang.Integer> getMapInt32Int32() {
      return getMapInt32Int32Map();
    }
    /**
     * <code>map&lt;int32, int32&gt; map_int32_int32 = 1;</code>
     */
    @java.lang.Override

    public java.util.Map<java.lang.Integer, java.lang.Integer> getMapInt32Int32Map() {
      return internalGetMapInt32Int32().getMap();
    }
    /**
     * <code>map&lt;int32, int32&gt; map_int32_int32 = 1;</code>
     */
    @java.lang.Override

    public int getMapInt32Int32OrDefault(
        int key,
        int defaultValue) {
      
      java.util.Map<java.lang.Integer, java.lang.Integer> map =
          internalGetMapInt32Int32().getMap();
      return map.containsKey(key) ? map.get(key) : defaultValue;
    }
    /**
     * <code>map&lt;int32, int32&gt; map_int32_int32 = 1;</code>
     */
    @java.lang.Override

    public int getMapInt32Int32OrThrow(
        int key) {
      
      java.util.Map<java.lang.Integer, java.lang.Integer> map =
          internalGetMapInt32Int32().getMap();
      if (!map.containsKey(key)) {
        throw new java.lang.IllegalArgumentException();
      }
      return map.get(key);
    }

    public static final int MAP_INT64_INT64_FIELD_NUMBER = 2;
    private static final class MapInt64Int64DefaultEntryHolder {
      static final com.google.protobuf.MapEntry<
          java.lang.Long, java.lang.Long> defaultEntry =
              com.google.protobuf.MapEntry
              .<java.lang.Long, java.lang.Long>newDefaultInstance(
                  protobuf_unittest.MapLiteUnittest.internal_static_protobuf_unittest_TestArenaMapLite_MapInt64Int64Entry_descriptor, 
                  com.google.protobuf.WireFormat.FieldType.INT64,
                  0L,
                  com.google.protobuf.WireFormat.FieldType.INT64,
                  0L);
    }
    private com.google.protobuf.MapField<
        java.lang.Long, java.lang.Long> mapInt64Int64_;
    private com.google.protobuf.MapField<java.lang.Long, java.lang.Long>
    internalGetMapInt64Int64() {
      if (mapInt64Int64_ == null) {
        return com.google.protobuf.MapField.emptyMapField(
            MapInt64Int64DefaultEntryHolder.defaultEntry);
      }
      return mapInt64Int64_;
    }

    public int getMapInt64Int64Count() {
      return internalGetMapInt64Int64().getMap().size();
    }
    /**
     * <code>map&lt;int64, int64&gt; map_int64_int64 = 2;</code>
     */

    @java.lang.Override
    public boolean containsMapInt64Int64(
        long key) {
      
      return internalGetMapInt64Int64().getMap().containsKey(key);
    }
    /**
     * Use {@link #getMapInt64Int64Map()} instead.
     */
    @java.lang.Override
    @java.lang.Deprecated
    public java.util.Map<java.lang.Long, java.lang.Long> getMapInt64Int64() {
      return getMapInt64Int64Map();
    }
    /**
     * <code>map&lt;int64, int64&gt; map_int64_int64 = 2;</code>
     */
    @java.lang.Override

    public java.util.Map<java.lang.Long, java.lang.Long> getMapInt64Int64Map() {
      return internalGetMapInt64Int64().getMap();
    }
    /**
     * <code>map&lt;int64, int64&gt; map_int64_int64 = 2;</code>
     */
    @java.lang.Override

    public long getMapInt64Int64OrDefault(
        long key,
        long defaultValue) {
      
      java.util.Map<java.lang.Long, java.lang.Long> map =
          internalGetMapInt64Int64().getMap();
      return map.containsKey(key) ? map.get(key) : defaultValue;
    }
    /**
     * <code>map&lt;int64, int64&gt; map_int64_int64 = 2;</code>
     */
    @java.lang.Override

    public long getMapInt64Int64OrThrow(
        long key) {
      
      java.util.Map<java.lang.Long, java.lang.Long> map =
          internalGetMapInt64Int64().getMap();
      if (!map.containsKey(key)) {
        throw new java.lang.IllegalArgumentException();
      }
      return map.get(key);
    }

    public static final int MAP_UINT32_UINT32_FIELD_NUMBER = 3;
    private static final class MapUint32Uint32DefaultEntryHolder {
      static final com.google.protobuf.MapEntry<
          java.lang.Integer, java.lang.Integer> defaultEntry =
              com.google.protobuf.MapEntry
              .<java.lang.Integer, java.lang.Integer>newDefaultInstance(
                  protobuf_unittest.MapLiteUnittest.internal_static_protobuf_unittest_TestArenaMapLite_MapUint32Uint32Entry_descriptor, 
                  com.google.protobuf.WireFormat.FieldType.UINT32,
                  0,
                  com.google.protobuf.WireFormat.FieldType.UINT32,
                  0);
    }
    private com.google.protobuf.MapField<
        java.lang.Integer, java.lang.Integer> mapUint32Uint32_;
    private com.google.protobuf.MapField<java.lang.Integer, java.lang.Integer>
    internalGetMapUint32Uint32() {
      if (mapUint32Uint32_ == null) {
        return com.google.protobuf.MapField.emptyMapField(
            MapUint32Uint32DefaultEntryHolder.defaultEntry);
      }
      return mapUint32Uint32_;
    }

    public int getMapUint32Uint32Count() {
      return internalGetMapUint32Uint32().getMap().size();
    }
    /**
     * <code>map&lt;uint32, uint32&gt; map_uint32_uint32 = 3;</code>
     */

    @java.lang.Override
    public boolean containsMapUint32Uint32(
        int key) {
      
      return internalGetMapUint32Uint32().getMap().containsKey(key);
    }
    /**
     * Use {@link #getMapUint32Uint32Map()} instead.
     */
    @java.lang.Override
    @java.lang.Deprecated
    public java.util.Map<java.lang.Integer, java.lang.Integer> getMapUint32Uint32() {
      return getMapUint32Uint32Map();
    }
    /**
     * <code>map&lt;uint32, uint32&gt; map_uint32_uint32 = 3;</code>
     */
    @java.lang.Override

    public java.util.Map<java.lang.Integer, java.lang.Integer> getMapUint32Uint32Map() {
      return internalGetMapUint32Uint32().getMap();
    }
    /**
     * <code>map&lt;uint32, uint32&gt; map_uint32_uint32 = 3;</code>
     */
    @java.lang.Override

    public int getMapUint32Uint32OrDefault(
        int key,
        int defaultValue) {
      
      java.util.Map<java.lang.Integer, java.lang.Integer> map =
          internalGetMapUint32Uint32().getMap();
      return map.containsKey(key) ? map.get(key) : defaultValue;
    }
    /**
     * <code>map&lt;uint32, uint32&gt; map_uint32_uint32 = 3;</code>
     */
    @java.lang.Override

    public int getMapUint32Uint32OrThrow(
        int key) {
      
      java.util.Map<java.lang.Integer, java.lang.Integer> map =
          internalGetMapUint32Uint32().getMap();
      if (!map.containsKey(key)) {
        throw new java.lang.IllegalArgumentException();
      }
      return map.get(key);
    }

    public static final int MAP_UINT64_UINT64_FIELD_NUMBER = 4;
    private static final class MapUint64Uint64DefaultEntryHolder {
      static final com.google.protobuf.MapEntry<
          java.lang.Long, java.lang.Long> defaultEntry =
              com.google.protobuf.MapEntry
              .<java.lang.Long, java.lang.Long>newDefaultInstance(
                  protobuf_unittest.MapLiteUnittest.internal_static_protobuf_unittest_TestArenaMapLite_MapUint64Uint64Entry_descriptor, 
                  com.google.protobuf.WireFormat.FieldType.UINT64,
                  0L,
                  com.google.protobuf.WireFormat.FieldType.UINT64,
                  0L);
    }
    private com.google.protobuf.MapField<
        java.lang.Long, java.lang.Long> mapUint64Uint64_;
    private com.google.protobuf.MapField<java.lang.Long, java.lang.Long>
    internalGetMapUint64Uint64() {
      if (mapUint64Uint64_ == null) {
        return com.google.protobuf.MapField.emptyMapField(
            MapUint64Uint64DefaultEntryHolder.defaultEntry);
      }
      return mapUint64Uint64_;
    }

    public int getMapUint64Uint64Count() {
      return internalGetMapUint64Uint64().getMap().size();
    }
    /**
     * <code>map&lt;uint64, uint64&gt; map_uint64_uint64 = 4;</code>
     */

    @java.lang.Override
    public boolean containsMapUint64Uint64(
        long key) {
      
      return internalGetMapUint64Uint64().getMap().containsKey(key);
    }
    /**
     * Use {@link #getMapUint64Uint64Map()} instead.
     */
    @java.lang.Override
    @java.lang.Deprecated
    public java.util.Map<java.lang.Long, java.lang.Long> getMapUint64Uint64() {
      return getMapUint64Uint64Map();
    }
    /**
     * <code>map&lt;uint64, uint64&gt; map_uint64_uint64 = 4;</code>
     */
    @java.lang.Override

    public java.util.Map<java.lang.Long, java.lang.Long> getMapUint64Uint64Map() {
      return internalGetMapUint64Uint64().getMap();
    }
    /**
     * <code>map&lt;uint64, uint64&gt; map_uint64_uint64 = 4;</code>
     */
    @java.lang.Override

    public long getMapUint64Uint64OrDefault(
        long key,
        long defaultValue) {
      
      java.util.Map<java.lang.Long, java.lang.Long> map =
          internalGetMapUint64Uint64().getMap();
      return map.containsKey(key) ? map.get(key) : defaultValue;
    }
    /**
     * <code>map&lt;uint64, uint64&gt; map_uint64_uint64 = 4;</code>
     */
    @java.lang.Override

    public long getMapUint64Uint64OrThrow(
        long key) {
      
      java.util.Map<java.lang.Long, java.lang.Long> map =
          internalGetMapUint64Uint64().getMap();
      if (!map.containsKey(key)) {
        throw new java.lang.IllegalArgumentException();
      }
      return map.get(key);
    }

    public static final int MAP_SINT32_SINT32_FIELD_NUMBER = 5;
    private static final class MapSint32Sint32DefaultEntryHolder {
      static final com.google.protobuf.MapEntry<
          java.lang.Integer, java.lang.Integer> defaultEntry =
              com.google.protobuf.MapEntry
              .<java.lang.Integer, java.lang.Integer>newDefaultInstance(
                  protobuf_unittest.MapLiteUnittest.internal_static_protobuf_unittest_TestArenaMapLite_MapSint32Sint32Entry_descriptor, 
                  com.google.protobuf.WireFormat.FieldType.SINT32,
                  0,
                  com.google.protobuf.WireFormat.FieldType.SINT32,
                  0);
    }
    private com.google.protobuf.MapField<
        java.lang.Integer, java.lang.Integer> mapSint32Sint32_;
    private com.google.protobuf.MapField<java.lang.Integer, java.lang.Integer>
    internalGetMapSint32Sint32() {
      if (mapSint32Sint32_ == null) {
        return com.google.protobuf.MapField.emptyMapField(
            MapSint32Sint32DefaultEntryHolder.defaultEntry);
      }
      return mapSint32Sint32_;
    }

    public int getMapSint32Sint32Count() {
      return internalGetMapSint32Sint32().getMap().size();
    }
    /**
     * <code>map&lt;sint32, sint32&gt; map_sint32_sint32 = 5;</code>
     */

    @java.lang.Override
    public boolean containsMapSint32Sint32(
        int key) {
      
      return internalGetMapSint32Sint32().getMap().containsKey(key);
    }
    /**
     * Use {@link #getMapSint32Sint32Map()} instead.
     */
    @java.lang.Override
    @java.lang.Deprecated
    public java.util.Map<java.lang.Integer, java.lang.Integer> getMapSint32Sint32() {
      return getMapSint32Sint32Map();
    }
    /**
     * <code>map&lt;sint32, sint32&gt; map_sint32_sint32 = 5;</code>
     */
    @java.lang.Override

    public java.util.Map<java.lang.Integer, java.lang.Integer> getMapSint32Sint32Map() {
      return internalGetMapSint32Sint32().getMap();
    }
    /**
     * <code>map&lt;sint32, sint32&gt; map_sint32_sint32 = 5;</code>
     */
    @java.lang.Override

    public int getMapSint32Sint32OrDefault(
        int key,
        int defaultValue) {
      
      java.util.Map<java.lang.Integer, java.lang.Integer> map =
          internalGetMapSint32Sint32().getMap();
      return map.containsKey(key) ? map.get(key) : defaultValue;
    }
    /**
     * <code>map&lt;sint32, sint32&gt; map_sint32_sint32 = 5;</code>
     */
    @java.lang.Override

    public int getMapSint32Sint32OrThrow(
        int key) {
      
      java.util.Map<java.lang.Integer, java.lang.Integer> map =
          internalGetMapSint32Sint32().getMap();
      if (!map.containsKey(key)) {
        throw new java.lang.IllegalArgumentException();
      }
      return map.get(key);
    }

    public static final int MAP_SINT64_SINT64_FIELD_NUMBER = 6;
    private static final class MapSint64Sint64DefaultEntryHolder {
      static final com.google.protobuf.MapEntry<
          java.lang.Long, java.lang.Long> defaultEntry =
              com.google.protobuf.MapEntry
              .<java.lang.Long, java.lang.Long>newDefaultInstance(
                  protobuf_unittest.MapLiteUnittest.internal_static_protobuf_unittest_TestArenaMapLite_MapSint64Sint64Entry_descriptor, 
                  com.google.protobuf.WireFormat.FieldType.SINT64,
                  0L,
                  com.google.protobuf.WireFormat.FieldType.SINT64,
                  0L);
    }
    private com.google.protobuf.MapField<
        java.lang.Long, java.lang.Long> mapSint64Sint64_;
    private com.google.protobuf.MapField<java.lang.Long, java.lang.Long>
    internalGetMapSint64Sint64() {
      if (mapSint64Sint64_ == null) {
        return com.google.protobuf.MapField.emptyMapField(
            MapSint64Sint64DefaultEntryHolder.defaultEntry);
      }
      return mapSint64Sint64_;
    }

    public int getMapSint64Sint64Count() {
      return internalGetMapSint64Sint64().getMap().size();
    }
    /**
     * <code>map&lt;sint64, sint64&gt; map_sint64_sint64 = 6;</code>
     */

    @java.lang.Override
    public boolean containsMapSint64Sint64(
        long key) {
      
      return internalGetMapSint64Sint64().getMap().containsKey(key);
    }
    /**
     * Use {@link #getMapSint64Sint64Map()} instead.
     */
    @java.lang.Override
    @java.lang.Deprecated
    public java.util.Map<java.lang.Long, java.lang.Long> getMapSint64Sint64() {
      return getMapSint64Sint64Map();
    }
    /**
     * <code>map&lt;sint64, sint64&gt; map_sint64_sint64 = 6;</code>
     */
    @java.lang.Override

    public java.util.Map<java.lang.Long, java.lang.Long> getMapSint64Sint64Map() {
      return internalGetMapSint64Sint64().getMap();
    }
    /**
     * <code>map&lt;sint64, sint64&gt; map_sint64_sint64 = 6;</code>
     */
    @java.lang.Override

    public long getMapSint64Sint64OrDefault(
        long key,
        long defaultValue) {
      
      java.util.Map<java.lang.Long, java.lang.Long> map =
          internalGetMapSint64Sint64().getMap();
      return map.containsKey(key) ? map.get(key) : defaultValue;
    }
    /**
     * <code>map&lt;sint64, sint64&gt; map_sint64_sint64 = 6;</code>
     */
    @java.lang.Override

    public long getMapSint64Sint64OrThrow(
        long key) {
      
      java.util.Map<java.lang.Long, java.lang.Long> map =
          internalGetMapSint64Sint64().getMap();
      if (!map.containsKey(key)) {
        throw new java.lang.IllegalArgumentException();
      }
      return map.get(key);
    }

    public static final int MAP_FIXED32_FIXED32_FIELD_NUMBER = 7;
    private static final class MapFixed32Fixed32DefaultEntryHolder {
      static final com.google.protobuf.MapEntry<
          java.lang.Integer, java.lang.Integer> defaultEntry =
              com.google.protobuf.MapEntry
              .<java.lang.Integer, java.lang.Integer>newDefaultInstance(
                  protobuf_unittest.MapLiteUnittest.internal_static_protobuf_unittest_TestArenaMapLite_MapFixed32Fixed32Entry_descriptor, 
                  com.google.protobuf.WireFormat.FieldType.FIXED32,
                  0,
                  com.google.protobuf.WireFormat.FieldType.FIXED32,
                  0);
    }
    private com.google.protobuf.MapField<
        java.lang.Integer, java.lang.Integer> mapFixed32Fixed32_;
    private com.google.protobuf.MapField<java.lang.Integer, java.lang.Integer>
    internalGetMapFixed32Fixed32() {
      if (mapFixed32Fixed32_ == null) {
        return com.google.protobuf.MapField.emptyMapField(
            MapFixed32Fixed32DefaultEntryHolder.defaultEntry);
      }
      return mapFixed32Fixed32_;
    }

    public int getMapFixed32Fixed32Count() {
      return internalGetMapFixed32Fixed32().getMap().size();
    }
    /**
     * <code>map&lt;fixed32, fixed32&gt; map_fixed32_fixed32 = 7;</code>
     */

    @java.lang.Override
    public boolean containsMapFixed32Fixed32(
        int key) {
      
      return internalGetMapFixed32Fixed32().getMap().containsKey(key);
    }
    /**
     * Use {@link #getMapFixed32Fixed32Map()} instead.
     */
    @java.lang.Override
    @java.lang.Deprecated
    public java.util.Map<java.lang.Integer, java.lang.Integer> getMapFixed32Fixed32() {
      return getMapFixed32Fixed32Map();
    }
    /**
     * <code>map&lt;fixed32, fixed32&gt; map_fixed32_fixed32 = 7;</code>
     */
    @java.lang.Override

    public java.util.Map<java.lang.Integer, java.lang.Integer> getMapFixed32Fixed32Map() {
      return internalGetMapFixed32Fixed32().getMap();
    }
    /**
     * <code>map&lt;fixed32, fixed32&gt; map_fixed32_fixed32 = 7;</code>
     */
    @java.lang.Override

    public int getMapFixed32Fixed32OrDefault(
        int key,
        int defaultValue) {
      
      java.util.Map<java.lang.Integer, java.lang.Integer> map =
          internalGetMapFixed32Fixed32().getMap();
      return map.containsKey(key) ? map.get(key) : defaultValue;
    }
    /**
     * <code>map&lt;fixed32, fixed32&gt; map_fixed32_fixed32 = 7;</code>
     */
    @java.lang.Override

    public int getMapFixed32Fixed32OrThrow(
        int key) {
      
      java.util.Map<java.lang.Integer, java.lang.Integer> map =
          internalGetMapFixed32Fixed32().getMap();
      if (!map.containsKey(key)) {
        throw new java.lang.IllegalArgumentException();
      }
      return map.get(key);
    }

    public static final int MAP_FIXED64_FIXED64_FIELD_NUMBER = 8;
    private static final class MapFixed64Fixed64DefaultEntryHolder {
      static final com.google.protobuf.MapEntry<
          java.lang.Long, java.lang.Long> defaultEntry =
              com.google.protobuf.MapEntry
              .<java.lang.Long, java.lang.Long>newDefaultInstance(
                  protobuf_unittest.MapLiteUnittest.internal_static_protobuf_unittest_TestArenaMapLite_MapFixed64Fixed64Entry_descriptor, 
                  com.google.protobuf.WireFormat.FieldType.FIXED64,
                  0L,
                  com.google.protobuf.WireFormat.FieldType.FIXED64,
                  0L);
    }
    private com.google.protobuf.MapField<
        java.lang.Long, java.lang.Long> mapFixed64Fixed64_;
    private com.google.protobuf.MapField<java.lang.Long, java.lang.Long>
    internalGetMapFixed64Fixed64() {
      if (mapFixed64Fixed64_ == null) {
        return com.google.protobuf.MapField.emptyMapField(
            MapFixed64Fixed64DefaultEntryHolder.defaultEntry);
      }
      return mapFixed64Fixed64_;
    }

    public int getMapFixed64Fixed64Count() {
      return internalGetMapFixed64Fixed64().getMap().size();
    }
    /**
     * <code>map&lt;fixed64, fixed64&gt; map_fixed64_fixed64 = 8;</code>
     */

    @java.lang.Override
    public boolean containsMapFixed64Fixed64(
        long key) {
      
      return internalGetMapFixed64Fixed64().getMap().containsKey(key);
    }
    /**
     * Use {@link #getMapFixed64Fixed64Map()} instead.
     */
    @java.lang.Override
    @java.lang.Deprecated
    public java.util.Map<java.lang.Long, java.lang.Long> getMapFixed64Fixed64() {
      return getMapFixed64Fixed64Map();
    }
    /**
     * <code>map&lt;fixed64, fixed64&gt; map_fixed64_fixed64 = 8;</code>
     */
    @java.lang.Override

    public java.util.Map<java.lang.Long, java.lang.Long> getMapFixed64Fixed64Map() {
      return internalGetMapFixed64Fixed64().getMap();
    }
    /**
     * <code>map&lt;fixed64, fixed64&gt; map_fixed64_fixed64 = 8;</code>
     */
    @java.lang.Override

    public long getMapFixed64Fixed64OrDefault(
        long key,
        long defaultValue) {
      
      java.util.Map<java.lang.Long, java.lang.Long> map =
          internalGetMapFixed64Fixed64().getMap();
      return map.containsKey(key) ? map.get(key) : defaultValue;
    }
    /**
     * <code>map&lt;fixed64, fixed64&gt; map_fixed64_fixed64 = 8;</code>
     */
    @java.lang.Override

    public long getMapFixed64Fixed64OrThrow(
        long key) {
      
      java.util.Map<java.lang.Long, java.lang.Long> map =
          internalGetMapFixed64Fixed64().getMap();
      if (!map.containsKey(key)) {
        throw new java.lang.IllegalArgumentException();
      }
      return map.get(key);
    }

    public static final int MAP_SFIXED32_SFIXED32_FIELD_NUMBER = 9;
    private static final class MapSfixed32Sfixed32DefaultEntryHolder {
      static final com.google.protobuf.MapEntry<
          java.lang.Integer, java.lang.Integer> defaultEntry =
              com.google.protobuf.MapEntry
              .<java.lang.Integer, java.lang.Integer>newDefaultInstance(
                  protobuf_unittest.MapLiteUnittest.internal_static_protobuf_unittest_TestArenaMapLite_MapSfixed32Sfixed32Entry_descriptor, 
                  com.google.protobuf.WireFormat.FieldType.SFIXED32,
                  0,
                  com.google.protobuf.WireFormat.FieldType.SFIXED32,
                  0);
    }
    private com.google.protobuf.MapField<
        java.lang.Integer, java.lang.Integer> mapSfixed32Sfixed32_;
    private com.google.protobuf.MapField<java.lang.Integer, java.lang.Integer>
    internalGetMapSfixed32Sfixed32() {
      if (mapSfixed32Sfixed32_ == null) {
        return com.google.protobuf.MapField.emptyMapField(
            MapSfixed32Sfixed32DefaultEntryHolder.defaultEntry);
      }
      return mapSfixed32Sfixed32_;
    }

    public int getMapSfixed32Sfixed32Count() {
      return internalGetMapSfixed32Sfixed32().getMap().size();
    }
    /**
     * <code>map&lt;sfixed32, sfixed32&gt; map_sfixed32_sfixed32 = 9;</code>
     */

    @java.lang.Override
    public boolean containsMapSfixed32Sfixed32(
        int key) {
      
      return internalGetMapSfixed32Sfixed32().getMap().containsKey(key);
    }
    /**
     * Use {@link #getMapSfixed32Sfixed32Map()} instead.
     */
    @java.lang.Override
    @java.lang.Deprecated
    public java.util.Map<java.lang.Integer, java.lang.Integer> getMapSfixed32Sfixed32() {
      return getMapSfixed32Sfixed32Map();
    }
    /**
     * <code>map&lt;sfixed32, sfixed32&gt; map_sfixed32_sfixed32 = 9;</code>
     */
    @java.lang.Override

    public java.util.Map<java.lang.Integer, java.lang.Integer> getMapSfixed32Sfixed32Map() {
      return internalGetMapSfixed32Sfixed32().getMap();
    }
    /**
     * <code>map&lt;sfixed32, sfixed32&gt; map_sfixed32_sfixed32 = 9;</code>
     */
    @java.lang.Override

    public int getMapSfixed32Sfixed32OrDefault(
        int key,
        int defaultValue) {
      
      java.util.Map<java.lang.Integer, java.lang.Integer> map =
          internalGetMapSfixed32Sfixed32().getMap();
      return map.containsKey(key) ? map.get(key) : defaultValue;
    }
    /**
     * <code>map&lt;sfixed32, sfixed32&gt; map_sfixed32_sfixed32 = 9;</code>
     */
    @java.lang.Override

    public int getMapSfixed32Sfixed32OrThrow(
        int key) {
      
      java.util.Map<java.lang.Integer, java.lang.Integer> map =
          internalGetMapSfixed32Sfixed32().getMap();
      if (!map.containsKey(key)) {
        throw new java.lang.IllegalArgumentException();
      }
      return map.get(key);
    }

    public static final int MAP_SFIXED64_SFIXED64_FIELD_NUMBER = 10;
    private static final class MapSfixed64Sfixed64DefaultEntryHolder {
      static final com.google.protobuf.MapEntry<
          java.lang.Long, java.lang.Long> defaultEntry =
              com.google.protobuf.MapEntry
              .<java.lang.Long, java.lang.Long>newDefaultInstance(
                  protobuf_unittest.MapLiteUnittest.internal_static_protobuf_unittest_TestArenaMapLite_MapSfixed64Sfixed64Entry_descriptor, 
                  com.google.protobuf.WireFormat.FieldType.SFIXED64,
                  0L,
                  com.google.protobuf.WireFormat.FieldType.SFIXED64,
                  0L);
    }
    private com.google.protobuf.MapField<
        java.lang.Long, java.lang.Long> mapSfixed64Sfixed64_;
    private com.google.protobuf.MapField<java.lang.Long, java.lang.Long>
    internalGetMapSfixed64Sfixed64() {
      if (mapSfixed64Sfixed64_ == null) {
        return com.google.protobuf.MapField.emptyMapField(
            MapSfixed64Sfixed64DefaultEntryHolder.defaultEntry);
      }
      return mapSfixed64Sfixed64_;
    }

    public int getMapSfixed64Sfixed64Count() {
      return internalGetMapSfixed64Sfixed64().getMap().size();
    }
    /**
     * <code>map&lt;sfixed64, sfixed64&gt; map_sfixed64_sfixed64 = 10;</code>
     */

    @java.lang.Override
    public boolean containsMapSfixed64Sfixed64(
        long key) {
      
      return internalGetMapSfixed64Sfixed64().getMap().containsKey(key);
    }
    /**
     * Use {@link #getMapSfixed64Sfixed64Map()} instead.
     */
    @java.lang.Override
    @java.lang.Deprecated
    public java.util.Map<java.lang.Long, java.lang.Long> getMapSfixed64Sfixed64() {
      return getMapSfixed64Sfixed64Map();
    }
    /**
     * <code>map&lt;sfixed64, sfixed64&gt; map_sfixed64_sfixed64 = 10;</code>
     */
    @java.lang.Override

    public java.util.Map<java.lang.Long, java.lang.Long> getMapSfixed64Sfixed64Map() {
      return internalGetMapSfixed64Sfixed64().getMap();
    }
    /**
     * <code>map&lt;sfixed64, sfixed64&gt; map_sfixed64_sfixed64 = 10;</code>
     */
    @java.lang.Override

    public long getMapSfixed64Sfixed64OrDefault(
        long key,
        long defaultValue) {
      
      java.util.Map<java.lang.Long, java.lang.Long> map =
          internalGetMapSfixed64Sfixed64().getMap();
      return map.containsKey(key) ? map.get(key) : defaultValue;
    }
    /**
     * <code>map&lt;sfixed64, sfixed64&gt; map_sfixed64_sfixed64 = 10;</code>
     */
    @java.lang.Override

    public long getMapSfixed64Sfixed64OrThrow(
        long key) {
      
      java.util.Map<java.lang.Long, java.lang.Long> map =
          internalGetMapSfixed64Sfixed64().getMap();
      if (!map.containsKey(key)) {
        throw new java.lang.IllegalArgumentException();
      }
      return map.get(key);
    }

    public static final int MAP_INT32_FLOAT_FIELD_NUMBER = 11;
    private static final class MapInt32FloatDefaultEntryHolder {
      static final com.google.protobuf.MapEntry<
          java.lang.Integer, java.lang.Float> defaultEntry =
              com.google.protobuf.MapEntry
              .<java.lang.Integer, java.lang.Float>newDefaultInstance(
                  protobuf_unittest.MapLiteUnittest.internal_static_protobuf_unittest_TestArenaMapLite_MapInt32FloatEntry_descriptor, 
                  com.google.protobuf.WireFormat.FieldType.INT32,
                  0,
                  com.google.protobuf.WireFormat.FieldType.FLOAT,
                  0F);
    }
    private com.google.protobuf.MapField<
        java.lang.Integer, java.lang.Float> mapInt32Float_;
    private com.google.protobuf.MapField<java.lang.Integer, java.lang.Float>
    internalGetMapInt32Float() {
      if (mapInt32Float_ == null) {
        return com.google.protobuf.MapField.emptyMapField(
            MapInt32FloatDefaultEntryHolder.defaultEntry);
      }
      return mapInt32Float_;
    }

    public int getMapInt32FloatCount() {
      return internalGetMapInt32Float().getMap().size();
    }
    /**
     * <code>map&lt;int32, float&gt; map_int32_float = 11;</code>
     */

    @java.lang.Override
    public boolean containsMapInt32Float(
        int key) {
      
      return internalGetMapInt32Float().getMap().containsKey(key);
    }
    /**
     * Use {@link #getMapInt32FloatMap()} instead.
     */
    @java.lang.Override
    @java.lang.Deprecated
    public java.util.Map<java.lang.Integer, java.lang.Float> getMapInt32Float() {
      return getMapInt32FloatMap();
    }
    /**
     * <code>map&lt;int32, float&gt; map_int32_float = 11;</code>
     */
    @java.lang.Override

    public java.util.Map<java.lang.Integer, java.lang.Float> getMapInt32FloatMap() {
      return internalGetMapInt32Float().getMap();
    }
    /**
     * <code>map&lt;int32, float&gt; map_int32_float = 11;</code>
     */
    @java.lang.Override

    public float getMapInt32FloatOrDefault(
        int key,
        float defaultValue) {
      
      java.util.Map<java.lang.Integer, java.lang.Float> map =
          internalGetMapInt32Float().getMap();
      return map.containsKey(key) ? map.get(key) : defaultValue;
    }
    /**
     * <code>map&lt;int32, float&gt; map_int32_float = 11;</code>
     */
    @java.lang.Override

    public float getMapInt32FloatOrThrow(
        int key) {
      
      java.util.Map<java.lang.Integer, java.lang.Float> map =
          internalGetMapInt32Float().getMap();
      if (!map.containsKey(key)) {
        throw new java.lang.IllegalArgumentException();
      }
      return map.get(key);
    }

    public static final int MAP_INT32_DOUBLE_FIELD_NUMBER = 12;
    private static final class MapInt32DoubleDefaultEntryHolder {
      static final com.google.protobuf.MapEntry<
          java.lang.Integer, java.lang.Double> defaultEntry =
              com.google.protobuf.MapEntry
              .<java.lang.Integer, java.lang.Double>newDefaultInstance(
                  protobuf_unittest.MapLiteUnittest.internal_static_protobuf_unittest_TestArenaMapLite_MapInt32DoubleEntry_descriptor, 
                  com.google.protobuf.WireFormat.FieldType.INT32,
                  0,
                  com.google.protobuf.WireFormat.FieldType.DOUBLE,
                  0D);
    }
    private com.google.protobuf.MapField<
        java.lang.Integer, java.lang.Double> mapInt32Double_;
    private com.google.protobuf.MapField<java.lang.Integer, java.lang.Double>
    internalGetMapInt32Double() {
      if (mapInt32Double_ == null) {
        return com.google.protobuf.MapField.emptyMapField(
            MapInt32DoubleDefaultEntryHolder.defaultEntry);
      }
      return mapInt32Double_;
    }

    public int getMapInt32DoubleCount() {
      return internalGetMapInt32Double().getMap().size();
    }
    /**
     * <code>map&lt;int32, double&gt; map_int32_double = 12;</code>
     */

    @java.lang.Override
    public boolean containsMapInt32Double(
        int key) {
      
      return internalGetMapInt32Double().getMap().containsKey(key);
    }
    /**
     * Use {@link #getMapInt32DoubleMap()} instead.
     */
    @java.lang.Override
    @java.lang.Deprecated
    public java.util.Map<java.lang.Integer, java.lang.Double> getMapInt32Double() {
      return getMapInt32DoubleMap();
    }
    /**
     * <code>map&lt;int32, double&gt; map_int32_double = 12;</code>
     */
    @java.lang.Override

    public java.util.Map<java.lang.Integer, java.lang.Double> getMapInt32DoubleMap() {
      return internalGetMapInt32Double().getMap();
    }
    /**
     * <code>map&lt;int32, double&gt; map_int32_double = 12;</code>
     */
    @java.lang.Override

    public double getMapInt32DoubleOrDefault(
        int key,
        double defaultValue) {
      
      java.util.Map<java.lang.Integer, java.lang.Double> map =
          internalGetMapInt32Double().getMap();
      return map.containsKey(key) ? map.get(key) : defaultValue;
    }
    /**
     * <code>map&lt;int32, double&gt; map_int32_double = 12;</code>
     */
    @java.lang.Override

    public double getMapInt32DoubleOrThrow(
        int key) {
      
      java.util.Map<java.lang.Integer, java.lang.Double> map =
          internalGetMapInt32Double().getMap();
      if (!map.containsKey(key)) {
        throw new java.lang.IllegalArgumentException();
      }
      return map.get(key);
    }

    public static final int MAP_BOOL_BOOL_FIELD_NUMBER = 13;
    private static final class MapBoolBoolDefaultEntryHolder {
      static final com.google.protobuf.MapEntry<
          java.lang.Boolean, java.lang.Boolean> defaultEntry =
              com.google.protobuf.MapEntry
              .<java.lang.Boolean, java.lang.Boolean>newDefaultInstance(
                  protobuf_unittest.MapLiteUnittest.internal_static_protobuf_unittest_TestArenaMapLite_MapBoolBoolEntry_descriptor, 
                  com.google.protobuf.WireFormat.FieldType.BOOL,
                  false,
                  com.google.protobuf.WireFormat.FieldType.BOOL,
                  false);
    }
    private com.google.protobuf.MapField<
        java.lang.Boolean, java.lang.Boolean> mapBoolBool_;
    private com.google.protobuf.MapField<java.lang.Boolean, java.lang.Boolean>
    internalGetMapBoolBool() {
      if (mapBoolBool_ == null) {
        return com.google.protobuf.MapField.emptyMapField(
            MapBoolBoolDefaultEntryHolder.defaultEntry);
      }
      return mapBoolBool_;
    }

    public int getMapBoolBoolCount() {
      return internalGetMapBoolBool().getMap().size();
    }
    /**
     * <code>map&lt;bool, bool&gt; map_bool_bool = 13;</code>
     */

    @java.lang.Override
    public boolean containsMapBoolBool(
        boolean key) {
      
      return internalGetMapBoolBool().getMap().containsKey(key);
    }
    /**
     * Use {@link #getMapBoolBoolMap()} instead.
     */
    @java.lang.Override
    @java.lang.Deprecated
    public java.util.Map<java.lang.Boolean, java.lang.Boolean> getMapBoolBool() {
      return getMapBoolBoolMap();
    }
    /**
     * <code>map&lt;bool, bool&gt; map_bool_bool = 13;</code>
     */
    @java.lang.Override

    public java.util.Map<java.lang.Boolean, java.lang.Boolean> getMapBoolBoolMap() {
      return internalGetMapBoolBool().getMap();
    }
    /**
     * <code>map&lt;bool, bool&gt; map_bool_bool = 13;</code>
     */
    @java.lang.Override

    public boolean getMapBoolBoolOrDefault(
        boolean key,
        boolean defaultValue) {
      
      java.util.Map<java.lang.Boolean, java.lang.Boolean> map =
          internalGetMapBoolBool().getMap();
      return map.containsKey(key) ? map.get(key) : defaultValue;
    }
    /**
     * <code>map&lt;bool, bool&gt; map_bool_bool = 13;</code>
     */
    @java.lang.Override

    public boolean getMapBoolBoolOrThrow(
        boolean key) {
      
      java.util.Map<java.lang.Boolean, java.lang.Boolean> map =
          internalGetMapBoolBool().getMap();
      if (!map.containsKey(key)) {
        throw new java.lang.IllegalArgumentException();
      }
      return map.get(key);
    }

    public static final int MAP_STRING_STRING_FIELD_NUMBER = 14;
    private static final class MapStringStringDefaultEntryHolder {
      static final com.google.protobuf.MapEntry<
          java.lang.String, java.lang.String> defaultEntry =
              com.google.protobuf.MapEntry
              .<java.lang.String, java.lang.String>newDefaultInstance(
                  protobuf_unittest.MapLiteUnittest.internal_static_protobuf_unittest_TestArenaMapLite_MapStringStringEntry_descriptor, 
                  com.google.protobuf.WireFormat.FieldType.STRING,
                  "",
                  com.google.protobuf.WireFormat.FieldType.STRING,
                  "");
    }
    private com.google.protobuf.MapField<
        java.lang.String, java.lang.String> mapStringString_;
    private com.google.protobuf.MapField<java.lang.String, java.lang.String>
    internalGetMapStringString() {
      if (mapStringString_ == null) {
        return com.google.protobuf.MapField.emptyMapField(
            MapStringStringDefaultEntryHolder.defaultEntry);
      }
      return mapStringString_;
    }

    public int getMapStringStringCount() {
      return internalGetMapStringString().getMap().size();
    }
    /**
     * <code>map&lt;string, string&gt; map_string_string = 14;</code>
     */

    @java.lang.Override
    public boolean containsMapStringString(
        java.lang.String key) {
      if (key == null) { throw new NullPointerException("map key"); }
      return internalGetMapStringString().getMap().containsKey(key);
    }
    /**
     * Use {@link #getMapStringStringMap()} instead.
     */
    @java.lang.Override
    @java.lang.Deprecated
    public java.util.Map<java.lang.String, java.lang.String> getMapStringString() {
      return getMapStringStringMap();
    }
    /**
     * <code>map&lt;string, string&gt; map_string_string = 14;</code>
     */
    @java.lang.Override

    public java.util.Map<java.lang.String, java.lang.String> getMapStringStringMap() {
      return internalGetMapStringString().getMap();
    }
    /**
     * <code>map&lt;string, string&gt; map_string_string = 14;</code>
     */
    @java.lang.Override

    public java.lang.String getMapStringStringOrDefault(
        java.lang.String key,
        java.lang.String defaultValue) {
      if (key == null) { throw new NullPointerException("map key"); }
      java.util.Map<java.lang.String, java.lang.String> map =
          internalGetMapStringString().getMap();
      return map.containsKey(key) ? map.get(key) : defaultValue;
    }
    /**
     * <code>map&lt;string, string&gt; map_string_string = 14;</code>
     */
    @java.lang.Override

    public java.lang.String getMapStringStringOrThrow(
        java.lang.String key) {
      if (key == null) { throw new NullPointerException("map key"); }
      java.util.Map<java.lang.String, java.lang.String> map =
          internalGetMapStringString().getMap();
      if (!map.containsKey(key)) {
        throw new java.lang.IllegalArgumentException();
      }
      return map.get(key);
    }

    public static final int MAP_INT32_BYTES_FIELD_NUMBER = 15;
    private static final class MapInt32BytesDefaultEntryHolder {
      static final com.google.protobuf.MapEntry<
          java.lang.Integer, com.google.protobuf.ByteString> defaultEntry =
              com.google.protobuf.MapEntry
              .<java.lang.Integer, com.google.protobuf.ByteString>newDefaultInstance(
                  protobuf_unittest.MapLiteUnittest.internal_static_protobuf_unittest_TestArenaMapLite_MapInt32BytesEntry_descriptor, 
                  com.google.protobuf.WireFormat.FieldType.INT32,
                  0,
                  com.google.protobuf.WireFormat.FieldType.BYTES,
                  com.google.protobuf.ByteString.EMPTY);
    }
    private com.google.protobuf.MapField<
        java.lang.Integer, com.google.protobuf.ByteString> mapInt32Bytes_;
    private com.google.protobuf.MapField<java.lang.Integer, com.google.protobuf.ByteString>
    internalGetMapInt32Bytes() {
      if (mapInt32Bytes_ == null) {
        return com.google.protobuf.MapField.emptyMapField(
            MapInt32BytesDefaultEntryHolder.defaultEntry);
      }
      return mapInt32Bytes_;
    }

    public int getMapInt32BytesCount() {
      return internalGetMapInt32Bytes().getMap().size();
    }
    /**
     * <code>map&lt;int32, bytes&gt; map_int32_bytes = 15;</code>
     */

    @java.lang.Override
    public boolean containsMapInt32Bytes(
        int key) {
      
      return internalGetMapInt32Bytes().getMap().containsKey(key);
    }
    /**
     * Use {@link #getMapInt32BytesMap()} instead.
     */
    @java.lang.Override
    @java.lang.Deprecated
    public java.util.Map<java.lang.Integer, com.google.protobuf.ByteString> getMapInt32Bytes() {
      return getMapInt32BytesMap();
    }
    /**
     * <code>map&lt;int32, bytes&gt; map_int32_bytes = 15;</code>
     */
    @java.lang.Override

    public java.util.Map<java.lang.Integer, com.google.protobuf.ByteString> getMapInt32BytesMap() {
      return internalGetMapInt32Bytes().getMap();
    }
    /**
     * <code>map&lt;int32, bytes&gt; map_int32_bytes = 15;</code>
     */
    @java.lang.Override

    public com.google.protobuf.ByteString getMapInt32BytesOrDefault(
        int key,
        com.google.protobuf.ByteString defaultValue) {
      
      java.util.Map<java.lang.Integer, com.google.protobuf.ByteString> map =
          internalGetMapInt32Bytes().getMap();
      return map.containsKey(key) ? map.get(key) : defaultValue;
    }
    /**
     * <code>map&lt;int32, bytes&gt; map_int32_bytes = 15;</code>
     */
    @java.lang.Override

    public com.google.protobuf.ByteString getMapInt32BytesOrThrow(
        int key) {
      
      java.util.Map<java.lang.Integer, com.google.protobuf.ByteString> map =
          internalGetMapInt32Bytes().getMap();
      if (!map.containsKey(key)) {
        throw new java.lang.IllegalArgumentException();
      }
      return map.get(key);
    }

    public static final int MAP_INT32_ENUM_FIELD_NUMBER = 16;
    private static final class MapInt32EnumDefaultEntryHolder {
      static final com.google.protobuf.MapEntry<
          java.lang.Integer, java.lang.Integer> defaultEntry =
              com.google.protobuf.MapEntry
              .<java.lang.Integer, java.lang.Integer>newDefaultInstance(
                  protobuf_unittest.MapLiteUnittest.internal_static_protobuf_unittest_TestArenaMapLite_MapInt32EnumEntry_descriptor, 
                  com.google.protobuf.WireFormat.FieldType.INT32,
                  0,
                  com.google.protobuf.WireFormat.FieldType.ENUM,
                  protobuf_unittest.MapLiteUnittest.MapEnumLite.MAP_ENUM_FOO_LITE.getNumber());
    }
    private com.google.protobuf.MapField<
        java.lang.Integer, java.lang.Integer> mapInt32Enum_;
    private com.google.protobuf.MapField<java.lang.Integer, java.lang.Integer>
    internalGetMapInt32Enum() {
      if (mapInt32Enum_ == null) {
        return com.google.protobuf.MapField.emptyMapField(
            MapInt32EnumDefaultEntryHolder.defaultEntry);
      }
      return mapInt32Enum_;
    }
    private static final
    com.google.protobuf.Internal.MapAdapter.Converter<
        java.lang.Integer, protobuf_unittest.MapLiteUnittest.MapEnumLite> mapInt32EnumValueConverter =
            com.google.protobuf.Internal.MapAdapter.newEnumConverter(
                protobuf_unittest.MapLiteUnittest.MapEnumLite.internalGetValueMap(),
                protobuf_unittest.MapLiteUnittest.MapEnumLite.MAP_ENUM_FOO_LITE);
    private static final java.util.Map<java.lang.Integer, protobuf_unittest.MapLiteUnittest.MapEnumLite>
    internalGetAdaptedMapInt32EnumMap(
        java.util.Map<java.lang.Integer, java.lang.Integer> map) {
      return new com.google.protobuf.Internal.MapAdapter<
          java.lang.Integer, protobuf_unittest.MapLiteUnittest.MapEnumLite, java.lang.Integer>(
              map, mapInt32EnumValueConverter);
    }

    public int getMapInt32EnumCount() {
      return internalGetMapInt32Enum().getMap().size();
    }
    /**
     * <code>map&lt;int32, .protobuf_unittest.MapEnumLite&gt; map_int32_enum = 16;</code>
     */

    @java.lang.Override
    public boolean containsMapInt32Enum(
        int key) {
      
      return internalGetMapInt32Enum().getMap().containsKey(key);
    }
    /**
     * Use {@link #getMapInt32EnumMap()} instead.
     */
    @java.lang.Override
    @java.lang.Deprecated
    public java.util.Map<java.lang.Integer, protobuf_unittest.MapLiteUnittest.MapEnumLite>
    getMapInt32Enum() {
      return getMapInt32EnumMap();
    }
    /**
     * <code>map&lt;int32, .protobuf_unittest.MapEnumLite&gt; map_int32_enum = 16;</code>
     */
    @java.lang.Override

    public java.util.Map<java.lang.Integer, protobuf_unittest.MapLiteUnittest.MapEnumLite>
    getMapInt32EnumMap() {
      return internalGetAdaptedMapInt32EnumMap(
          internalGetMapInt32Enum().getMap());}
    /**
     * <code>map&lt;int32, .protobuf_unittest.MapEnumLite&gt; map_int32_enum = 16;</code>
     */
    @java.lang.Override

    public /* nullable */
protobuf_unittest.MapLiteUnittest.MapEnumLite getMapInt32EnumOrDefault(
        int key,
        /* nullable */
protobuf_unittest.MapLiteUnittest.MapEnumLite defaultValue) {
      
      java.util.Map<java.lang.Integer, java.lang.Integer> map =
          internalGetMapInt32Enum().getMap();
      return map.containsKey(key)
             ? mapInt32EnumValueConverter.doForward(map.get(key))
             : defaultValue;
    }
    /**
     * <code>map&lt;int32, .protobuf_unittest.MapEnumLite&gt; map_int32_enum = 16;</code>
     */
    @java.lang.Override

    public protobuf_unittest.MapLiteUnittest.MapEnumLite getMapInt32EnumOrThrow(
        int key) {
      
      java.util.Map<java.lang.Integer, java.lang.Integer> map =
          internalGetMapInt32Enum().getMap();
      if (!map.containsKey(key)) {
        throw new java.lang.IllegalArgumentException();
      }
      return mapInt32EnumValueConverter.doForward(map.get(key));
    }

    public static final int MAP_INT32_FOREIGN_MESSAGE_FIELD_NUMBER = 17;
    private static final class MapInt32ForeignMessageDefaultEntryHolder {
      static final com.google.protobuf.MapEntry<
          java.lang.Integer, protobuf_unittest.MapLiteUnittest.ForeignMessageArenaLite> defaultEntry =
              com.google.protobuf.MapEntry
              .<java.lang.Integer, protobuf_unittest.MapLiteUnittest.ForeignMessageArenaLite>newDefaultInstance(
                  protobuf_unittest.MapLiteUnittest.internal_static_protobuf_unittest_TestArenaMapLite_MapInt32ForeignMessageEntry_descriptor, 
                  com.google.protobuf.WireFormat.FieldType.INT32,
                  0,
                  com.google.protobuf.WireFormat.FieldType.MESSAGE,
                  protobuf_unittest.MapLiteUnittest.ForeignMessageArenaLite.getDefaultInstance());
    }
    private com.google.protobuf.MapField<
        java.lang.Integer, protobuf_unittest.MapLiteUnittest.ForeignMessageArenaLite> mapInt32ForeignMessage_;
    private com.google.protobuf.MapField<java.lang.Integer, protobuf_unittest.MapLiteUnittest.ForeignMessageArenaLite>
    internalGetMapInt32ForeignMessage() {
      if (mapInt32ForeignMessage_ == null) {
        return com.google.protobuf.MapField.emptyMapField(
            MapInt32ForeignMessageDefaultEntryHolder.defaultEntry);
      }
      return mapInt32ForeignMessage_;
    }

    public int getMapInt32ForeignMessageCount() {
      return internalGetMapInt32ForeignMessage().getMap().size();
    }
    /**
     * <code>map&lt;int32, .protobuf_unittest.ForeignMessageArenaLite&gt; map_int32_foreign_message = 17;</code>
     */

    @java.lang.Override
    public boolean containsMapInt32ForeignMessage(
        int key) {
      
      return internalGetMapInt32ForeignMessage().getMap().containsKey(key);
    }
    /**
     * Use {@link #getMapInt32ForeignMessageMap()} instead.
     */
    @java.lang.Override
    @java.lang.Deprecated
    public java.util.Map<java.lang.Integer, protobuf_unittest.MapLiteUnittest.ForeignMessageArenaLite> getMapInt32ForeignMessage() {
      return getMapInt32ForeignMessageMap();
    }
    /**
     * <code>map&lt;int32, .protobuf_unittest.ForeignMessageArenaLite&gt; map_int32_foreign_message = 17;</code>
     */
    @java.lang.Override

    public java.util.Map<java.lang.Integer, protobuf_unittest.MapLiteUnittest.ForeignMessageArenaLite> getMapInt32ForeignMessageMap() {
      return internalGetMapInt32ForeignMessage().getMap();
    }
    /**
     * <code>map&lt;int32, .protobuf_unittest.ForeignMessageArenaLite&gt; map_int32_foreign_message = 17;</code>
     */
    @java.lang.Override

    public protobuf_unittest.MapLiteUnittest.ForeignMessageArenaLite getMapInt32ForeignMessageOrDefault(
        int key,
        protobuf_unittest.MapLiteUnittest.ForeignMessageArenaLite defaultValue) {
      
      java.util.Map<java.lang.Integer, protobuf_unittest.MapLiteUnittest.ForeignMessageArenaLite> map =
          internalGetMapInt32ForeignMessage().getMap();
      return map.containsKey(key) ? map.get(key) : defaultValue;
    }
    /**
     * <code>map&lt;int32, .protobuf_unittest.ForeignMessageArenaLite&gt; map_int32_foreign_message = 17;</code>
     */
    @java.lang.Override

    public protobuf_unittest.MapLiteUnittest.ForeignMessageArenaLite getMapInt32ForeignMessageOrThrow(
        int key) {
      
      java.util.Map<java.lang.Integer, protobuf_unittest.MapLiteUnittest.ForeignMessageArenaLite> map =
          internalGetMapInt32ForeignMessage().getMap();
      if (!map.containsKey(key)) {
        throw new java.lang.IllegalArgumentException();
      }
      return map.get(key);
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      com.google.protobuf.GeneratedMessageV3
        .serializeIntegerMapTo(
          output,
          internalGetMapInt32Int32(),
          MapInt32Int32DefaultEntryHolder.defaultEntry,
          1);
      com.google.protobuf.GeneratedMessageV3
        .serializeLongMapTo(
          output,
          internalGetMapInt64Int64(),
          MapInt64Int64DefaultEntryHolder.defaultEntry,
          2);
      com.google.protobuf.GeneratedMessageV3
        .serializeIntegerMapTo(
          output,
          internalGetMapUint32Uint32(),
          MapUint32Uint32DefaultEntryHolder.defaultEntry,
          3);
      com.google.protobuf.GeneratedMessageV3
        .serializeLongMapTo(
          output,
          internalGetMapUint64Uint64(),
          MapUint64Uint64DefaultEntryHolder.defaultEntry,
          4);
      com.google.protobuf.GeneratedMessageV3
        .serializeIntegerMapTo(
          output,
          internalGetMapSint32Sint32(),
          MapSint32Sint32DefaultEntryHolder.defaultEntry,
          5);
      com.google.protobuf.GeneratedMessageV3
        .serializeLongMapTo(
          output,
          internalGetMapSint64Sint64(),
          MapSint64Sint64DefaultEntryHolder.defaultEntry,
          6);
      com.google.protobuf.GeneratedMessageV3
        .serializeIntegerMapTo(
          output,
          internalGetMapFixed32Fixed32(),
          MapFixed32Fixed32DefaultEntryHolder.defaultEntry,
          7);
      com.google.protobuf.GeneratedMessageV3
        .serializeLongMapTo(
          output,
          internalGetMapFixed64Fixed64(),
          MapFixed64Fixed64DefaultEntryHolder.defaultEntry,
          8);
      com.google.protobuf.GeneratedMessageV3
        .serializeIntegerMapTo(
          output,
          internalGetMapSfixed32Sfixed32(),
          MapSfixed32Sfixed32DefaultEntryHolder.defaultEntry,
          9);
      com.google.protobuf.GeneratedMessageV3
        .serializeLongMapTo(
          output,
          internalGetMapSfixed64Sfixed64(),
          MapSfixed64Sfixed64DefaultEntryHolder.defaultEntry,
          10);
      com.google.protobuf.GeneratedMessageV3
        .serializeIntegerMapTo(
          output,
          internalGetMapInt32Float(),
          MapInt32FloatDefaultEntryHolder.defaultEntry,
          11);
      com.google.protobuf.GeneratedMessageV3
        .serializeIntegerMapTo(
          output,
          internalGetMapInt32Double(),
          MapInt32DoubleDefaultEntryHolder.defaultEntry,
          12);
      com.google.protobuf.GeneratedMessageV3
        .serializeBooleanMapTo(
          output,
          internalGetMapBoolBool(),
          MapBoolBoolDefaultEntryHolder.defaultEntry,
          13);
      com.google.protobuf.GeneratedMessageV3
        .serializeStringMapTo(
          output,
          internalGetMapStringString(),
          MapStringStringDefaultEntryHolder.defaultEntry,
          14);
      com.google.protobuf.GeneratedMessageV3
        .serializeIntegerMapTo(
          output,
          internalGetMapInt32Bytes(),
          MapInt32BytesDefaultEntryHolder.defaultEntry,
          15);
      com.google.protobuf.GeneratedMessageV3
        .serializeIntegerMapTo(
          output,
          internalGetMapInt32Enum(),
          MapInt32EnumDefaultEntryHolder.defaultEntry,
          16);
      com.google.protobuf.GeneratedMessageV3
        .serializeIntegerMapTo(
          output,
          internalGetMapInt32ForeignMessage(),
          MapInt32ForeignMessageDefaultEntryHolder.defaultEntry,
          17);
      unknownFields.writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      for (java.util.Map.Entry<java.lang.Integer, java.lang.Integer> entry
           : internalGetMapInt32Int32().getMap().entrySet()) {
        com.google.protobuf.MapEntry<java.lang.Integer, java.lang.Integer>
        mapInt32Int32__ = MapInt32Int32DefaultEntryHolder.defaultEntry.newBuilderForType()
            .setKey(entry.getKey())
            .setValue(entry.getValue())
            .build();
        size += com.google.protobuf.CodedOutputStream
            .computeMessageSize(1, mapInt32Int32__);
      }
      for (java.util.Map.Entry<java.lang.Long, java.lang.Long> entry
           : internalGetMapInt64Int64().getMap().entrySet()) {
        com.google.protobuf.MapEntry<java.lang.Long, java.lang.Long>
        mapInt64Int64__ = MapInt64Int64DefaultEntryHolder.defaultEntry.newBuilderForType()
            .setKey(entry.getKey())
            .setValue(entry.getValue())
            .build();
        size += com.google.protobuf.CodedOutputStream
            .computeMessageSize(2, mapInt64Int64__);
      }
      for (java.util.Map.Entry<java.lang.Integer, java.lang.Integer> entry
           : internalGetMapUint32Uint32().getMap().entrySet()) {
        com.google.protobuf.MapEntry<java.lang.Integer, java.lang.Integer>
        mapUint32Uint32__ = MapUint32Uint32DefaultEntryHolder.defaultEntry.newBuilderForType()
            .setKey(entry.getKey())
            .setValue(entry.getValue())
            .build();
        size += com.google.protobuf.CodedOutputStream
            .computeMessageSize(3, mapUint32Uint32__);
      }
      for (java.util.Map.Entry<java.lang.Long, java.lang.Long> entry
           : internalGetMapUint64Uint64().getMap().entrySet()) {
        com.google.protobuf.MapEntry<java.lang.Long, java.lang.Long>
        mapUint64Uint64__ = MapUint64Uint64DefaultEntryHolder.defaultEntry.newBuilderForType()
            .setKey(entry.getKey())
            .setValue(entry.getValue())
            .build();
        size += com.google.protobuf.CodedOutputStream
            .computeMessageSize(4, mapUint64Uint64__);
      }
      for (java.util.Map.Entry<java.lang.Integer, java.lang.Integer> entry
           : internalGetMapSint32Sint32().getMap().entrySet()) {
        com.google.protobuf.MapEntry<java.lang.Integer, java.lang.Integer>
        mapSint32Sint32__ = MapSint32Sint32DefaultEntryHolder.defaultEntry.newBuilderForType()
            .setKey(entry.getKey())
            .setValue(entry.getValue())
            .build();
        size += com.google.protobuf.CodedOutputStream
            .computeMessageSize(5, mapSint32Sint32__);
      }
      for (java.util.Map.Entry<java.lang.Long, java.lang.Long> entry
           : internalGetMapSint64Sint64().getMap().entrySet()) {
        com.google.protobuf.MapEntry<java.lang.Long, java.lang.Long>
        mapSint64Sint64__ = MapSint64Sint64DefaultEntryHolder.defaultEntry.newBuilderForType()
            .setKey(entry.getKey())
            .setValue(entry.getValue())
            .build();
        size += com.google.protobuf.CodedOutputStream
            .computeMessageSize(6, mapSint64Sint64__);
      }
      for (java.util.Map.Entry<java.lang.Integer, java.lang.Integer> entry
           : internalGetMapFixed32Fixed32().getMap().entrySet()) {
        com.google.protobuf.MapEntry<java.lang.Integer, java.lang.Integer>
        mapFixed32Fixed32__ = MapFixed32Fixed32DefaultEntryHolder.defaultEntry.newBuilderForType()
            .setKey(entry.getKey())
            .setValue(entry.getValue())
            .build();
        size += com.google.protobuf.CodedOutputStream
            .computeMessageSize(7, mapFixed32Fixed32__);
      }
      for (java.util.Map.Entry<java.lang.Long, java.lang.Long> entry
           : internalGetMapFixed64Fixed64().getMap().entrySet()) {
        com.google.protobuf.MapEntry<java.lang.Long, java.lang.Long>
        mapFixed64Fixed64__ = MapFixed64Fixed64DefaultEntryHolder.defaultEntry.newBuilderForType()
            .setKey(entry.getKey())
            .setValue(entry.getValue())
            .build();
        size += com.google.protobuf.CodedOutputStream
            .computeMessageSize(8, mapFixed64Fixed64__);
      }
      for (java.util.Map.Entry<java.lang.Integer, java.lang.Integer> entry
           : internalGetMapSfixed32Sfixed32().getMap().entrySet()) {
        com.google.protobuf.MapEntry<java.lang.Integer, java.lang.Integer>
        mapSfixed32Sfixed32__ = MapSfixed32Sfixed32DefaultEntryHolder.defaultEntry.newBuilderForType()
            .setKey(entry.getKey())
            .setValue(entry.getValue())
            .build();
        size += com.google.protobuf.CodedOutputStream
            .computeMessageSize(9, mapSfixed32Sfixed32__);
      }
      for (java.util.Map.Entry<java.lang.Long, java.lang.Long> entry
           : internalGetMapSfixed64Sfixed64().getMap().entrySet()) {
        com.google.protobuf.MapEntry<java.lang.Long, java.lang.Long>
        mapSfixed64Sfixed64__ = MapSfixed64Sfixed64DefaultEntryHolder.defaultEntry.newBuilderForType()
            .setKey(entry.getKey())
            .setValue(entry.getValue())
            .build();
        size += com.google.protobuf.CodedOutputStream
            .computeMessageSize(10, mapSfixed64Sfixed64__);
      }
      for (java.util.Map.Entry<java.lang.Integer, java.lang.Float> entry
           : internalGetMapInt32Float().getMap().entrySet()) {
        com.google.protobuf.MapEntry<java.lang.Integer, java.lang.Float>
        mapInt32Float__ = MapInt32FloatDefaultEntryHolder.defaultEntry.newBuilderForType()
            .setKey(entry.getKey())
            .setValue(entry.getValue())
            .build();
        size += com.google.protobuf.CodedOutputStream
            .computeMessageSize(11, mapInt32Float__);
      }
      for (java.util.Map.Entry<java.lang.Integer, java.lang.Double> entry
           : internalGetMapInt32Double().getMap().entrySet()) {
        com.google.protobuf.MapEntry<java.lang.Integer, java.lang.Double>
        mapInt32Double__ = MapInt32DoubleDefaultEntryHolder.defaultEntry.newBuilderForType()
            .setKey(entry.getKey())
            .setValue(entry.getValue())
            .build();
        size += com.google.protobuf.CodedOutputStream
            .computeMessageSize(12, mapInt32Double__);
      }
      for (java.util.Map.Entry<java.lang.Boolean, java.lang.Boolean> entry
           : internalGetMapBoolBool().getMap().entrySet()) {
        com.google.protobuf.MapEntry<java.lang.Boolean, java.lang.Boolean>
        mapBoolBool__ = MapBoolBoolDefaultEntryHolder.defaultEntry.newBuilderForType()
            .setKey(entry.getKey())
            .setValue(entry.getValue())
            .build();
        size += com.google.protobuf.CodedOutputStream
            .computeMessageSize(13, mapBoolBool__);
      }
      for (java.util.Map.Entry<java.lang.String, java.lang.String> entry
           : internalGetMapStringString().getMap().entrySet()) {
        com.google.protobuf.MapEntry<java.lang.String, java.lang.String>
        mapStringString__ = MapStringStringDefaultEntryHolder.defaultEntry.newBuilderForType()
            .setKey(entry.getKey())
            .setValue(entry.getValue())
            .build();
        size += com.google.protobuf.CodedOutputStream
            .computeMessageSize(14, mapStringString__);
      }
      for (java.util.Map.Entry<java.lang.Integer, com.google.protobuf.ByteString> entry
           : internalGetMapInt32Bytes().getMap().entrySet()) {
        com.google.protobuf.MapEntry<java.lang.Integer, com.google.protobuf.ByteString>
        mapInt32Bytes__ = MapInt32BytesDefaultEntryHolder.defaultEntry.newBuilderForType()
            .setKey(entry.getKey())
            .setValue(entry.getValue())
            .build();
        size += com.google.protobuf.CodedOutputStream
            .computeMessageSize(15, mapInt32Bytes__);
      }
      for (java.util.Map.Entry<java.lang.Integer, java.lang.Integer> entry
           : internalGetMapInt32Enum().getMap().entrySet()) {
        com.google.protobuf.MapEntry<java.lang.Integer, java.lang.Integer>
        mapInt32Enum__ = MapInt32EnumDefaultEntryHolder.defaultEntry.newBuilderForType()
            .setKey(entry.getKey())
            .setValue(entry.getValue())
            .build();
        size += com.google.protobuf.CodedOutputStream
            .computeMessageSize(16, mapInt32Enum__);
      }
      for (java.util.Map.Entry<java.lang.Integer, protobuf_unittest.MapLiteUnittest.ForeignMessageArenaLite> entry
           : internalGetMapInt32ForeignMessage().getMap().entrySet()) {
        com.google.protobuf.MapEntry<java.lang.Integer, protobuf_unittest.MapLiteUnittest.ForeignMessageArenaLite>
        mapInt32ForeignMessage__ = MapInt32ForeignMessageDefaultEntryHolder.defaultEntry.newBuilderForType()
            .setKey(entry.getKey())
            .setValue(entry.getValue())
            .build();
        size += com.google.protobuf.CodedOutputStream
            .computeMessageSize(17, mapInt32ForeignMessage__);
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof protobuf_unittest.MapLiteUnittest.TestArenaMapLite)) {
        return super.equals(obj);
      }
      protobuf_unittest.MapLiteUnittest.TestArenaMapLite other = (protobuf_unittest.MapLiteUnittest.TestArenaMapLite) obj;

      if (!internalGetMapInt32Int32().equals(
          other.internalGetMapInt32Int32())) return false;
      if (!internalGetMapInt64Int64().equals(
          other.internalGetMapInt64Int64())) return false;
      if (!internalGetMapUint32Uint32().equals(
          other.internalGetMapUint32Uint32())) return false;
      if (!internalGetMapUint64Uint64().equals(
          other.internalGetMapUint64Uint64())) return false;
      if (!internalGetMapSint32Sint32().equals(
          other.internalGetMapSint32Sint32())) return false;
      if (!internalGetMapSint64Sint64().equals(
          other.internalGetMapSint64Sint64())) return false;
      if (!internalGetMapFixed32Fixed32().equals(
          other.internalGetMapFixed32Fixed32())) return false;
      if (!internalGetMapFixed64Fixed64().equals(
          other.internalGetMapFixed64Fixed64())) return false;
      if (!internalGetMapSfixed32Sfixed32().equals(
          other.internalGetMapSfixed32Sfixed32())) return false;
      if (!internalGetMapSfixed64Sfixed64().equals(
          other.internalGetMapSfixed64Sfixed64())) return false;
      if (!internalGetMapInt32Float().equals(
          other.internalGetMapInt32Float())) return false;
      if (!internalGetMapInt32Double().equals(
          other.internalGetMapInt32Double())) return false;
      if (!internalGetMapBoolBool().equals(
          other.internalGetMapBoolBool())) return false;
      if (!internalGetMapStringString().equals(
          other.internalGetMapStringString())) return false;
      if (!internalGetMapInt32Bytes().equals(
          other.internalGetMapInt32Bytes())) return false;
      if (!internalGetMapInt32Enum().equals(
          other.internalGetMapInt32Enum())) return false;
      if (!internalGetMapInt32ForeignMessage().equals(
          other.internalGetMapInt32ForeignMessage())) return false;
      if (!unknownFields.equals(other.unknownFields)) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      if (!internalGetMapInt32Int32().getMap().isEmpty()) {
        hash = (37 * hash) + MAP_INT32_INT32_FIELD_NUMBER;
        hash = (53 * hash) + internalGetMapInt32Int32().hashCode();
      }
      if (!internalGetMapInt64Int64().getMap().isEmpty()) {
        hash = (37 * hash) + MAP_INT64_INT64_FIELD_NUMBER;
        hash = (53 * hash) + internalGetMapInt64Int64().hashCode();
      }
      if (!internalGetMapUint32Uint32().getMap().isEmpty()) {
        hash = (37 * hash) + MAP_UINT32_UINT32_FIELD_NUMBER;
        hash = (53 * hash) + internalGetMapUint32Uint32().hashCode();
      }
      if (!internalGetMapUint64Uint64().getMap().isEmpty()) {
        hash = (37 * hash) + MAP_UINT64_UINT64_FIELD_NUMBER;
        hash = (53 * hash) + internalGetMapUint64Uint64().hashCode();
      }
      if (!internalGetMapSint32Sint32().getMap().isEmpty()) {
        hash = (37 * hash) + MAP_SINT32_SINT32_FIELD_NUMBER;
        hash = (53 * hash) + internalGetMapSint32Sint32().hashCode();
      }
      if (!internalGetMapSint64Sint64().getMap().isEmpty()) {
        hash = (37 * hash) + MAP_SINT64_SINT64_FIELD_NUMBER;
        hash = (53 * hash) + internalGetMapSint64Sint64().hashCode();
      }
      if (!internalGetMapFixed32Fixed32().getMap().isEmpty()) {
        hash = (37 * hash) + MAP_FIXED32_FIXED32_FIELD_NUMBER;
        hash = (53 * hash) + internalGetMapFixed32Fixed32().hashCode();
      }
      if (!internalGetMapFixed64Fixed64().getMap().isEmpty()) {
        hash = (37 * hash) + MAP_FIXED64_FIXED64_FIELD_NUMBER;
        hash = (53 * hash) + internalGetMapFixed64Fixed64().hashCode();
      }
      if (!internalGetMapSfixed32Sfixed32().getMap().isEmpty()) {
        hash = (37 * hash) + MAP_SFIXED32_SFIXED32_FIELD_NUMBER;
        hash = (53 * hash) + internalGetMapSfixed32Sfixed32().hashCode();
      }
      if (!internalGetMapSfixed64Sfixed64().getMap().isEmpty()) {
        hash = (37 * hash) + MAP_SFIXED64_SFIXED64_FIELD_NUMBER;
        hash = (53 * hash) + internalGetMapSfixed64Sfixed64().hashCode();
      }
      if (!internalGetMapInt32Float().getMap().isEmpty()) {
        hash = (37 * hash) + MAP_INT32_FLOAT_FIELD_NUMBER;
        hash = (53 * hash) + internalGetMapInt32Float().hashCode();
      }
      if (!internalGetMapInt32Double().getMap().isEmpty()) {
        hash = (37 * hash) + MAP_INT32_DOUBLE_FIELD_NUMBER;
        hash = (53 * hash) + internalGetMapInt32Double().hashCode();
      }
      if (!internalGetMapBoolBool().getMap().isEmpty()) {
        hash = (37 * hash) + MAP_BOOL_BOOL_FIELD_NUMBER;
        hash = (53 * hash) + internalGetMapBoolBool().hashCode();
      }
      if (!internalGetMapStringString().getMap().isEmpty()) {
        hash = (37 * hash) + MAP_STRING_STRING_FIELD_NUMBER;
        hash = (53 * hash) + internalGetMapStringString().hashCode();
      }
      if (!internalGetMapInt32Bytes().getMap().isEmpty()) {
        hash = (37 * hash) + MAP_INT32_BYTES_FIELD_NUMBER;
        hash = (53 * hash) + internalGetMapInt32Bytes().hashCode();
      }
      if (!internalGetMapInt32Enum().getMap().isEmpty()) {
        hash = (37 * hash) + MAP_INT32_ENUM_FIELD_NUMBER;
        hash = (53 * hash) + internalGetMapInt32Enum().hashCode();
      }
      if (!internalGetMapInt32ForeignMessage().getMap().isEmpty()) {
        hash = (37 * hash) + MAP_INT32_FOREIGN_MESSAGE_FIELD_NUMBER;
        hash = (53 * hash) + internalGetMapInt32ForeignMessage().hashCode();
      }
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static protobuf_unittest.MapLiteUnittest.TestArenaMapLite parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static protobuf_unittest.MapLiteUnittest.TestArenaMapLite parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static protobuf_unittest.MapLiteUnittest.TestArenaMapLite parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static protobuf_unittest.MapLiteUnittest.TestArenaMapLite parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static protobuf_unittest.MapLiteUnittest.TestArenaMapLite parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static protobuf_unittest.MapLiteUnittest.TestArenaMapLite parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static protobuf_unittest.MapLiteUnittest.TestArenaMapLite parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static protobuf_unittest.MapLiteUnittest.TestArenaMapLite parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static protobuf_unittest.MapLiteUnittest.TestArenaMapLite parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static protobuf_unittest.MapLiteUnittest.TestArenaMapLite parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static protobuf_unittest.MapLiteUnittest.TestArenaMapLite parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static protobuf_unittest.MapLiteUnittest.TestArenaMapLite parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(protobuf_unittest.MapLiteUnittest.TestArenaMapLite prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code protobuf_unittest.TestArenaMapLite}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:protobuf_unittest.TestArenaMapLite)
        protobuf_unittest.MapLiteUnittest.TestArenaMapLiteOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return protobuf_unittest.MapLiteUnittest.internal_static_protobuf_unittest_TestArenaMapLite_descriptor;
      }

      @SuppressWarnings({"rawtypes"})
      protected com.google.protobuf.MapField internalGetMapField(
          int number) {
        switch (number) {
          case 1:
            return internalGetMapInt32Int32();
          case 2:
            return internalGetMapInt64Int64();
          case 3:
            return internalGetMapUint32Uint32();
          case 4:
            return internalGetMapUint64Uint64();
          case 5:
            return internalGetMapSint32Sint32();
          case 6:
            return internalGetMapSint64Sint64();
          case 7:
            return internalGetMapFixed32Fixed32();
          case 8:
            return internalGetMapFixed64Fixed64();
          case 9:
            return internalGetMapSfixed32Sfixed32();
          case 10:
            return internalGetMapSfixed64Sfixed64();
          case 11:
            return internalGetMapInt32Float();
          case 12:
            return internalGetMapInt32Double();
          case 13:
            return internalGetMapBoolBool();
          case 14:
            return internalGetMapStringString();
          case 15:
            return internalGetMapInt32Bytes();
          case 16:
            return internalGetMapInt32Enum();
          case 17:
            return internalGetMapInt32ForeignMessage();
          default:
            throw new RuntimeException(
                "Invalid map field number: " + number);
        }
      }
      @SuppressWarnings({"rawtypes"})
      protected com.google.protobuf.MapField internalGetMutableMapField(
          int number) {
        switch (number) {
          case 1:
            return internalGetMutableMapInt32Int32();
          case 2:
            return internalGetMutableMapInt64Int64();
          case 3:
            return internalGetMutableMapUint32Uint32();
          case 4:
            return internalGetMutableMapUint64Uint64();
          case 5:
            return internalGetMutableMapSint32Sint32();
          case 6:
            return internalGetMutableMapSint64Sint64();
          case 7:
            return internalGetMutableMapFixed32Fixed32();
          case 8:
            return internalGetMutableMapFixed64Fixed64();
          case 9:
            return internalGetMutableMapSfixed32Sfixed32();
          case 10:
            return internalGetMutableMapSfixed64Sfixed64();
          case 11:
            return internalGetMutableMapInt32Float();
          case 12:
            return internalGetMutableMapInt32Double();
          case 13:
            return internalGetMutableMapBoolBool();
          case 14:
            return internalGetMutableMapStringString();
          case 15:
            return internalGetMutableMapInt32Bytes();
          case 16:
            return internalGetMutableMapInt32Enum();
          case 17:
            return internalGetMutableMapInt32ForeignMessage();
          default:
            throw new RuntimeException(
                "Invalid map field number: " + number);
        }
      }
      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return protobuf_unittest.MapLiteUnittest.internal_static_protobuf_unittest_TestArenaMapLite_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                protobuf_unittest.MapLiteUnittest.TestArenaMapLite.class, protobuf_unittest.MapLiteUnittest.TestArenaMapLite.Builder.class);
      }

      // Construct using protobuf_unittest.MapLiteUnittest.TestArenaMapLite.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        internalGetMutableMapInt32Int32().clear();
        internalGetMutableMapInt64Int64().clear();
        internalGetMutableMapUint32Uint32().clear();
        internalGetMutableMapUint64Uint64().clear();
        internalGetMutableMapSint32Sint32().clear();
        internalGetMutableMapSint64Sint64().clear();
        internalGetMutableMapFixed32Fixed32().clear();
        internalGetMutableMapFixed64Fixed64().clear();
        internalGetMutableMapSfixed32Sfixed32().clear();
        internalGetMutableMapSfixed64Sfixed64().clear();
        internalGetMutableMapInt32Float().clear();
        internalGetMutableMapInt32Double().clear();
        internalGetMutableMapBoolBool().clear();
        internalGetMutableMapStringString().clear();
        internalGetMutableMapInt32Bytes().clear();
        internalGetMutableMapInt32Enum().clear();
        internalGetMutableMapInt32ForeignMessage().clear();
        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return protobuf_unittest.MapLiteUnittest.internal_static_protobuf_unittest_TestArenaMapLite_descriptor;
      }

      @java.lang.Override
      public protobuf_unittest.MapLiteUnittest.TestArenaMapLite getDefaultInstanceForType() {
        return protobuf_unittest.MapLiteUnittest.TestArenaMapLite.getDefaultInstance();
      }

      @java.lang.Override
      public protobuf_unittest.MapLiteUnittest.TestArenaMapLite build() {
        protobuf_unittest.MapLiteUnittest.TestArenaMapLite result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public protobuf_unittest.MapLiteUnittest.TestArenaMapLite buildPartial() {
        protobuf_unittest.MapLiteUnittest.TestArenaMapLite result = new protobuf_unittest.MapLiteUnittest.TestArenaMapLite(this);
        int from_bitField0_ = bitField0_;
        result.mapInt32Int32_ = internalGetMapInt32Int32();
        result.mapInt32Int32_.makeImmutable();
        result.mapInt64Int64_ = internalGetMapInt64Int64();
        result.mapInt64Int64_.makeImmutable();
        result.mapUint32Uint32_ = internalGetMapUint32Uint32();
        result.mapUint32Uint32_.makeImmutable();
        result.mapUint64Uint64_ = internalGetMapUint64Uint64();
        result.mapUint64Uint64_.makeImmutable();
        result.mapSint32Sint32_ = internalGetMapSint32Sint32();
        result.mapSint32Sint32_.makeImmutable();
        result.mapSint64Sint64_ = internalGetMapSint64Sint64();
        result.mapSint64Sint64_.makeImmutable();
        result.mapFixed32Fixed32_ = internalGetMapFixed32Fixed32();
        result.mapFixed32Fixed32_.makeImmutable();
        result.mapFixed64Fixed64_ = internalGetMapFixed64Fixed64();
        result.mapFixed64Fixed64_.makeImmutable();
        result.mapSfixed32Sfixed32_ = internalGetMapSfixed32Sfixed32();
        result.mapSfixed32Sfixed32_.makeImmutable();
        result.mapSfixed64Sfixed64_ = internalGetMapSfixed64Sfixed64();
        result.mapSfixed64Sfixed64_.makeImmutable();
        result.mapInt32Float_ = internalGetMapInt32Float();
        result.mapInt32Float_.makeImmutable();
        result.mapInt32Double_ = internalGetMapInt32Double();
        result.mapInt32Double_.makeImmutable();
        result.mapBoolBool_ = internalGetMapBoolBool();
        result.mapBoolBool_.makeImmutable();
        result.mapStringString_ = internalGetMapStringString();
        result.mapStringString_.makeImmutable();
        result.mapInt32Bytes_ = internalGetMapInt32Bytes();
        result.mapInt32Bytes_.makeImmutable();
        result.mapInt32Enum_ = internalGetMapInt32Enum();
        result.mapInt32Enum_.makeImmutable();
        result.mapInt32ForeignMessage_ = internalGetMapInt32ForeignMessage();
        result.mapInt32ForeignMessage_.makeImmutable();
        onBuilt();
        return result;
      }

      @java.lang.Override
      public Builder clone() {
        return super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof protobuf_unittest.MapLiteUnittest.TestArenaMapLite) {
          return mergeFrom((protobuf_unittest.MapLiteUnittest.TestArenaMapLite)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(protobuf_unittest.MapLiteUnittest.TestArenaMapLite other) {
        if (other == protobuf_unittest.MapLiteUnittest.TestArenaMapLite.getDefaultInstance()) return this;
        internalGetMutableMapInt32Int32().mergeFrom(
            other.internalGetMapInt32Int32());
        internalGetMutableMapInt64Int64().mergeFrom(
            other.internalGetMapInt64Int64());
        internalGetMutableMapUint32Uint32().mergeFrom(
            other.internalGetMapUint32Uint32());
        internalGetMutableMapUint64Uint64().mergeFrom(
            other.internalGetMapUint64Uint64());
        internalGetMutableMapSint32Sint32().mergeFrom(
            other.internalGetMapSint32Sint32());
        internalGetMutableMapSint64Sint64().mergeFrom(
            other.internalGetMapSint64Sint64());
        internalGetMutableMapFixed32Fixed32().mergeFrom(
            other.internalGetMapFixed32Fixed32());
        internalGetMutableMapFixed64Fixed64().mergeFrom(
            other.internalGetMapFixed64Fixed64());
        internalGetMutableMapSfixed32Sfixed32().mergeFrom(
            other.internalGetMapSfixed32Sfixed32());
        internalGetMutableMapSfixed64Sfixed64().mergeFrom(
            other.internalGetMapSfixed64Sfixed64());
        internalGetMutableMapInt32Float().mergeFrom(
            other.internalGetMapInt32Float());
        internalGetMutableMapInt32Double().mergeFrom(
            other.internalGetMapInt32Double());
        internalGetMutableMapBoolBool().mergeFrom(
            other.internalGetMapBoolBool());
        internalGetMutableMapStringString().mergeFrom(
            other.internalGetMapStringString());
        internalGetMutableMapInt32Bytes().mergeFrom(
            other.internalGetMapInt32Bytes());
        internalGetMutableMapInt32Enum().mergeFrom(
            other.internalGetMapInt32Enum());
        internalGetMutableMapInt32ForeignMessage().mergeFrom(
            other.internalGetMapInt32ForeignMessage());
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        protobuf_unittest.MapLiteUnittest.TestArenaMapLite parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (protobuf_unittest.MapLiteUnittest.TestArenaMapLite) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private com.google.protobuf.MapField<
          java.lang.Integer, java.lang.Integer> mapInt32Int32_;
      private com.google.protobuf.MapField<java.lang.Integer, java.lang.Integer>
      internalGetMapInt32Int32() {
        if (mapInt32Int32_ == null) {
          return com.google.protobuf.MapField.emptyMapField(
              MapInt32Int32DefaultEntryHolder.defaultEntry);
        }
        return mapInt32Int32_;
      }
      private com.google.protobuf.MapField<java.lang.Integer, java.lang.Integer>
      internalGetMutableMapInt32Int32() {
        onChanged();;
        if (mapInt32Int32_ == null) {
          mapInt32Int32_ = com.google.protobuf.MapField.newMapField(
              MapInt32Int32DefaultEntryHolder.defaultEntry);
        }
        if (!mapInt32Int32_.isMutable()) {
          mapInt32Int32_ = mapInt32Int32_.copy();
        }
        return mapInt32Int32_;
      }

      public int getMapInt32Int32Count() {
        return internalGetMapInt32Int32().getMap().size();
      }
      /**
       * <code>map&lt;int32, int32&gt; map_int32_int32 = 1;</code>
       */

      @java.lang.Override
      public boolean containsMapInt32Int32(
          int key) {
        
        return internalGetMapInt32Int32().getMap().containsKey(key);
      }
      /**
       * Use {@link #getMapInt32Int32Map()} instead.
       */
      @java.lang.Override
      @java.lang.Deprecated
      public java.util.Map<java.lang.Integer, java.lang.Integer> getMapInt32Int32() {
        return getMapInt32Int32Map();
      }
      /**
       * <code>map&lt;int32, int32&gt; map_int32_int32 = 1;</code>
       */
      @java.lang.Override

      public java.util.Map<java.lang.Integer, java.lang.Integer> getMapInt32Int32Map() {
        return internalGetMapInt32Int32().getMap();
      }
      /**
       * <code>map&lt;int32, int32&gt; map_int32_int32 = 1;</code>
       */
      @java.lang.Override

      public int getMapInt32Int32OrDefault(
          int key,
          int defaultValue) {
        
        java.util.Map<java.lang.Integer, java.lang.Integer> map =
            internalGetMapInt32Int32().getMap();
        return map.containsKey(key) ? map.get(key) : defaultValue;
      }
      /**
       * <code>map&lt;int32, int32&gt; map_int32_int32 = 1;</code>
       */
      @java.lang.Override

      public int getMapInt32Int32OrThrow(
          int key) {
        
        java.util.Map<java.lang.Integer, java.lang.Integer> map =
            internalGetMapInt32Int32().getMap();
        if (!map.containsKey(key)) {
          throw new java.lang.IllegalArgumentException();
        }
        return map.get(key);
      }

      public Builder clearMapInt32Int32() {
        internalGetMutableMapInt32Int32().getMutableMap()
            .clear();
        return this;
      }
      /**
       * <code>map&lt;int32, int32&gt; map_int32_int32 = 1;</code>
       */

      public Builder removeMapInt32Int32(
          int key) {
        
        internalGetMutableMapInt32Int32().getMutableMap()
            .remove(key);
        return this;
      }
      /**
       * Use alternate mutation accessors instead.
       */
      @java.lang.Deprecated
      public java.util.Map<java.lang.Integer, java.lang.Integer>
      getMutableMapInt32Int32() {
        return internalGetMutableMapInt32Int32().getMutableMap();
      }
      /**
       * <code>map&lt;int32, int32&gt; map_int32_int32 = 1;</code>
       */
      public Builder putMapInt32Int32(
          int key,
          int value) {
        
        
        internalGetMutableMapInt32Int32().getMutableMap()
            .put(key, value);
        return this;
      }
      /**
       * <code>map&lt;int32, int32&gt; map_int32_int32 = 1;</code>
       */

      public Builder putAllMapInt32Int32(
          java.util.Map<java.lang.Integer, java.lang.Integer> values) {
        internalGetMutableMapInt32Int32().getMutableMap()
            .putAll(values);
        return this;
      }

      private com.google.protobuf.MapField<
          java.lang.Long, java.lang.Long> mapInt64Int64_;
      private com.google.protobuf.MapField<java.lang.Long, java.lang.Long>
      internalGetMapInt64Int64() {
        if (mapInt64Int64_ == null) {
          return com.google.protobuf.MapField.emptyMapField(
              MapInt64Int64DefaultEntryHolder.defaultEntry);
        }
        return mapInt64Int64_;
      }
      private com.google.protobuf.MapField<java.lang.Long, java.lang.Long>
      internalGetMutableMapInt64Int64() {
        onChanged();;
        if (mapInt64Int64_ == null) {
          mapInt64Int64_ = com.google.protobuf.MapField.newMapField(
              MapInt64Int64DefaultEntryHolder.defaultEntry);
        }
        if (!mapInt64Int64_.isMutable()) {
          mapInt64Int64_ = mapInt64Int64_.copy();
        }
        return mapInt64Int64_;
      }

      public int getMapInt64Int64Count() {
        return internalGetMapInt64Int64().getMap().size();
      }
      /**
       * <code>map&lt;int64, int64&gt; map_int64_int64 = 2;</code>
       */

      @java.lang.Override
      public boolean containsMapInt64Int64(
          long key) {
        
        return internalGetMapInt64Int64().getMap().containsKey(key);
      }
      /**
       * Use {@link #getMapInt64Int64Map()} instead.
       */
      @java.lang.Override
      @java.lang.Deprecated
      public java.util.Map<java.lang.Long, java.lang.Long> getMapInt64Int64() {
        return getMapInt64Int64Map();
      }
      /**
       * <code>map&lt;int64, int64&gt; map_int64_int64 = 2;</code>
       */
      @java.lang.Override

      public java.util.Map<java.lang.Long, java.lang.Long> getMapInt64Int64Map() {
        return internalGetMapInt64Int64().getMap();
      }
      /**
       * <code>map&lt;int64, int64&gt; map_int64_int64 = 2;</code>
       */
      @java.lang.Override

      public long getMapInt64Int64OrDefault(
          long key,
          long defaultValue) {
        
        java.util.Map<java.lang.Long, java.lang.Long> map =
            internalGetMapInt64Int64().getMap();
        return map.containsKey(key) ? map.get(key) : defaultValue;
      }
      /**
       * <code>map&lt;int64, int64&gt; map_int64_int64 = 2;</code>
       */
      @java.lang.Override

      public long getMapInt64Int64OrThrow(
          long key) {
        
        java.util.Map<java.lang.Long, java.lang.Long> map =
            internalGetMapInt64Int64().getMap();
        if (!map.containsKey(key)) {
          throw new java.lang.IllegalArgumentException();
        }
        return map.get(key);
      }

      public Builder clearMapInt64Int64() {
        internalGetMutableMapInt64Int64().getMutableMap()
            .clear();
        return this;
      }
      /**
       * <code>map&lt;int64, int64&gt; map_int64_int64 = 2;</code>
       */

      public Builder removeMapInt64Int64(
          long key) {
        
        internalGetMutableMapInt64Int64().getMutableMap()
            .remove(key);
        return this;
      }
      /**
       * Use alternate mutation accessors instead.
       */
      @java.lang.Deprecated
      public java.util.Map<java.lang.Long, java.lang.Long>
      getMutableMapInt64Int64() {
        return internalGetMutableMapInt64Int64().getMutableMap();
      }
      /**
       * <code>map&lt;int64, int64&gt; map_int64_int64 = 2;</code>
       */
      public Builder putMapInt64Int64(
          long key,
          long value) {
        
        
        internalGetMutableMapInt64Int64().getMutableMap()
            .put(key, value);
        return this;
      }
      /**
       * <code>map&lt;int64, int64&gt; map_int64_int64 = 2;</code>
       */

      public Builder putAllMapInt64Int64(
          java.util.Map<java.lang.Long, java.lang.Long> values) {
        internalGetMutableMapInt64Int64().getMutableMap()
            .putAll(values);
        return this;
      }

      private com.google.protobuf.MapField<
          java.lang.Integer, java.lang.Integer> mapUint32Uint32_;
      private com.google.protobuf.MapField<java.lang.Integer, java.lang.Integer>
      internalGetMapUint32Uint32() {
        if (mapUint32Uint32_ == null) {
          return com.google.protobuf.MapField.emptyMapField(
              MapUint32Uint32DefaultEntryHolder.defaultEntry);
        }
        return mapUint32Uint32_;
      }
      private com.google.protobuf.MapField<java.lang.Integer, java.lang.Integer>
      internalGetMutableMapUint32Uint32() {
        onChanged();;
        if (mapUint32Uint32_ == null) {
          mapUint32Uint32_ = com.google.protobuf.MapField.newMapField(
              MapUint32Uint32DefaultEntryHolder.defaultEntry);
        }
        if (!mapUint32Uint32_.isMutable()) {
          mapUint32Uint32_ = mapUint32Uint32_.copy();
        }
        return mapUint32Uint32_;
      }

      public int getMapUint32Uint32Count() {
        return internalGetMapUint32Uint32().getMap().size();
      }
      /**
       * <code>map&lt;uint32, uint32&gt; map_uint32_uint32 = 3;</code>
       */

      @java.lang.Override
      public boolean containsMapUint32Uint32(
          int key) {
        
        return internalGetMapUint32Uint32().getMap().containsKey(key);
      }
      /**
       * Use {@link #getMapUint32Uint32Map()} instead.
       */
      @java.lang.Override
      @java.lang.Deprecated
      public java.util.Map<java.lang.Integer, java.lang.Integer> getMapUint32Uint32() {
        return getMapUint32Uint32Map();
      }
      /**
       * <code>map&lt;uint32, uint32&gt; map_uint32_uint32 = 3;</code>
       */
      @java.lang.Override

      public java.util.Map<java.lang.Integer, java.lang.Integer> getMapUint32Uint32Map() {
        return internalGetMapUint32Uint32().getMap();
      }
      /**
       * <code>map&lt;uint32, uint32&gt; map_uint32_uint32 = 3;</code>
       */
      @java.lang.Override

      public int getMapUint32Uint32OrDefault(
          int key,
          int defaultValue) {
        
        java.util.Map<java.lang.Integer, java.lang.Integer> map =
            internalGetMapUint32Uint32().getMap();
        return map.containsKey(key) ? map.get(key) : defaultValue;
      }
      /**
       * <code>map&lt;uint32, uint32&gt; map_uint32_uint32 = 3;</code>
       */
      @java.lang.Override

      public int getMapUint32Uint32OrThrow(
          int key) {
        
        java.util.Map<java.lang.Integer, java.lang.Integer> map =
            internalGetMapUint32Uint32().getMap();
        if (!map.containsKey(key)) {
          throw new java.lang.IllegalArgumentException();
        }
        return map.get(key);
      }

      public Builder clearMapUint32Uint32() {
        internalGetMutableMapUint32Uint32().getMutableMap()
            .clear();
        return this;
      }
      /**
       * <code>map&lt;uint32, uint32&gt; map_uint32_uint32 = 3;</code>
       */

      public Builder removeMapUint32Uint32(
          int key) {
        
        internalGetMutableMapUint32Uint32().getMutableMap()
            .remove(key);
        return this;
      }
      /**
       * Use alternate mutation accessors instead.
       */
      @java.lang.Deprecated
      public java.util.Map<java.lang.Integer, java.lang.Integer>
      getMutableMapUint32Uint32() {
        return internalGetMutableMapUint32Uint32().getMutableMap();
      }
      /**
       * <code>map&lt;uint32, uint32&gt; map_uint32_uint32 = 3;</code>
       */
      public Builder putMapUint32Uint32(
          int key,
          int value) {
        
        
        internalGetMutableMapUint32Uint32().getMutableMap()
            .put(key, value);
        return this;
      }
      /**
       * <code>map&lt;uint32, uint32&gt; map_uint32_uint32 = 3;</code>
       */

      public Builder putAllMapUint32Uint32(
          java.util.Map<java.lang.Integer, java.lang.Integer> values) {
        internalGetMutableMapUint32Uint32().getMutableMap()
            .putAll(values);
        return this;
      }

      private com.google.protobuf.MapField<
          java.lang.Long, java.lang.Long> mapUint64Uint64_;
      private com.google.protobuf.MapField<java.lang.Long, java.lang.Long>
      internalGetMapUint64Uint64() {
        if (mapUint64Uint64_ == null) {
          return com.google.protobuf.MapField.emptyMapField(
              MapUint64Uint64DefaultEntryHolder.defaultEntry);
        }
        return mapUint64Uint64_;
      }
      private com.google.protobuf.MapField<java.lang.Long, java.lang.Long>
      internalGetMutableMapUint64Uint64() {
        onChanged();;
        if (mapUint64Uint64_ == null) {
          mapUint64Uint64_ = com.google.protobuf.MapField.newMapField(
              MapUint64Uint64DefaultEntryHolder.defaultEntry);
        }
        if (!mapUint64Uint64_.isMutable()) {
          mapUint64Uint64_ = mapUint64Uint64_.copy();
        }
        return mapUint64Uint64_;
      }

      public int getMapUint64Uint64Count() {
        return internalGetMapUint64Uint64().getMap().size();
      }
      /**
       * <code>map&lt;uint64, uint64&gt; map_uint64_uint64 = 4;</code>
       */

      @java.lang.Override
      public boolean containsMapUint64Uint64(
          long key) {
        
        return internalGetMapUint64Uint64().getMap().containsKey(key);
      }
      /**
       * Use {@link #getMapUint64Uint64Map()} instead.
       */
      @java.lang.Override
      @java.lang.Deprecated
      public java.util.Map<java.lang.Long, java.lang.Long> getMapUint64Uint64() {
        return getMapUint64Uint64Map();
      }
      /**
       * <code>map&lt;uint64, uint64&gt; map_uint64_uint64 = 4;</code>
       */
      @java.lang.Override

      public java.util.Map<java.lang.Long, java.lang.Long> getMapUint64Uint64Map() {
        return internalGetMapUint64Uint64().getMap();
      }
      /**
       * <code>map&lt;uint64, uint64&gt; map_uint64_uint64 = 4;</code>
       */
      @java.lang.Override

      public long getMapUint64Uint64OrDefault(
          long key,
          long defaultValue) {
        
        java.util.Map<java.lang.Long, java.lang.Long> map =
            internalGetMapUint64Uint64().getMap();
        return map.containsKey(key) ? map.get(key) : defaultValue;
      }
      /**
       * <code>map&lt;uint64, uint64&gt; map_uint64_uint64 = 4;</code>
       */
      @java.lang.Override

      public long getMapUint64Uint64OrThrow(
          long key) {
        
        java.util.Map<java.lang.Long, java.lang.Long> map =
            internalGetMapUint64Uint64().getMap();
        if (!map.containsKey(key)) {
          throw new java.lang.IllegalArgumentException();
        }
        return map.get(key);
      }

      public Builder clearMapUint64Uint64() {
        internalGetMutableMapUint64Uint64().getMutableMap()
            .clear();
        return this;
      }
      /**
       * <code>map&lt;uint64, uint64&gt; map_uint64_uint64 = 4;</code>
       */

      public Builder removeMapUint64Uint64(
          long key) {
        
        internalGetMutableMapUint64Uint64().getMutableMap()
            .remove(key);
        return this;
      }
      /**
       * Use alternate mutation accessors instead.
       */
      @java.lang.Deprecated
      public java.util.Map<java.lang.Long, java.lang.Long>
      getMutableMapUint64Uint64() {
        return internalGetMutableMapUint64Uint64().getMutableMap();
      }
      /**
       * <code>map&lt;uint64, uint64&gt; map_uint64_uint64 = 4;</code>
       */
      public Builder putMapUint64Uint64(
          long key,
          long value) {
        
        
        internalGetMutableMapUint64Uint64().getMutableMap()
            .put(key, value);
        return this;
      }
      /**
       * <code>map&lt;uint64, uint64&gt; map_uint64_uint64 = 4;</code>
       */

      public Builder putAllMapUint64Uint64(
          java.util.Map<java.lang.Long, java.lang.Long> values) {
        internalGetMutableMapUint64Uint64().getMutableMap()
            .putAll(values);
        return this;
      }

      private com.google.protobuf.MapField<
          java.lang.Integer, java.lang.Integer> mapSint32Sint32_;
      private com.google.protobuf.MapField<java.lang.Integer, java.lang.Integer>
      internalGetMapSint32Sint32() {
        if (mapSint32Sint32_ == null) {
          return com.google.protobuf.MapField.emptyMapField(
              MapSint32Sint32DefaultEntryHolder.defaultEntry);
        }
        return mapSint32Sint32_;
      }
      private com.google.protobuf.MapField<java.lang.Integer, java.lang.Integer>
      internalGetMutableMapSint32Sint32() {
        onChanged();;
        if (mapSint32Sint32_ == null) {
          mapSint32Sint32_ = com.google.protobuf.MapField.newMapField(
              MapSint32Sint32DefaultEntryHolder.defaultEntry);
        }
        if (!mapSint32Sint32_.isMutable()) {
          mapSint32Sint32_ = mapSint32Sint32_.copy();
        }
        return mapSint32Sint32_;
      }

      public int getMapSint32Sint32Count() {
        return internalGetMapSint32Sint32().getMap().size();
      }
      /**
       * <code>map&lt;sint32, sint32&gt; map_sint32_sint32 = 5;</code>
       */

      @java.lang.Override
      public boolean containsMapSint32Sint32(
          int key) {
        
        return internalGetMapSint32Sint32().getMap().containsKey(key);
      }
      /**
       * Use {@link #getMapSint32Sint32Map()} instead.
       */
      @java.lang.Override
      @java.lang.Deprecated
      public java.util.Map<java.lang.Integer, java.lang.Integer> getMapSint32Sint32() {
        return getMapSint32Sint32Map();
      }
      /**
       * <code>map&lt;sint32, sint32&gt; map_sint32_sint32 = 5;</code>
       */
      @java.lang.Override

      public java.util.Map<java.lang.Integer, java.lang.Integer> getMapSint32Sint32Map() {
        return internalGetMapSint32Sint32().getMap();
      }
      /**
       * <code>map&lt;sint32, sint32&gt; map_sint32_sint32 = 5;</code>
       */
      @java.lang.Override

      public int getMapSint32Sint32OrDefault(
          int key,
          int defaultValue) {
        
        java.util.Map<java.lang.Integer, java.lang.Integer> map =
            internalGetMapSint32Sint32().getMap();
        return map.containsKey(key) ? map.get(key) : defaultValue;
      }
      /**
       * <code>map&lt;sint32, sint32&gt; map_sint32_sint32 = 5;</code>
       */
      @java.lang.Override

      public int getMapSint32Sint32OrThrow(
          int key) {
        
        java.util.Map<java.lang.Integer, java.lang.Integer> map =
            internalGetMapSint32Sint32().getMap();
        if (!map.containsKey(key)) {
          throw new java.lang.IllegalArgumentException();
        }
        return map.get(key);
      }

      public Builder clearMapSint32Sint32() {
        internalGetMutableMapSint32Sint32().getMutableMap()
            .clear();
        return this;
      }
      /**
       * <code>map&lt;sint32, sint32&gt; map_sint32_sint32 = 5;</code>
       */

      public Builder removeMapSint32Sint32(
          int key) {
        
        internalGetMutableMapSint32Sint32().getMutableMap()
            .remove(key);
        return this;
      }
      /**
       * Use alternate mutation accessors instead.
       */
      @java.lang.Deprecated
      public java.util.Map<java.lang.Integer, java.lang.Integer>
      getMutableMapSint32Sint32() {
        return internalGetMutableMapSint32Sint32().getMutableMap();
      }
      /**
       * <code>map&lt;sint32, sint32&gt; map_sint32_sint32 = 5;</code>
       */
      public Builder putMapSint32Sint32(
          int key,
          int value) {
        
        
        internalGetMutableMapSint32Sint32().getMutableMap()
            .put(key, value);
        return this;
      }
      /**
       * <code>map&lt;sint32, sint32&gt; map_sint32_sint32 = 5;</code>
       */

      public Builder putAllMapSint32Sint32(
          java.util.Map<java.lang.Integer, java.lang.Integer> values) {
        internalGetMutableMapSint32Sint32().getMutableMap()
            .putAll(values);
        return this;
      }

      private com.google.protobuf.MapField<
          java.lang.Long, java.lang.Long> mapSint64Sint64_;
      private com.google.protobuf.MapField<java.lang.Long, java.lang.Long>
      internalGetMapSint64Sint64() {
        if (mapSint64Sint64_ == null) {
          return com.google.protobuf.MapField.emptyMapField(
              MapSint64Sint64DefaultEntryHolder.defaultEntry);
        }
        return mapSint64Sint64_;
      }
      private com.google.protobuf.MapField<java.lang.Long, java.lang.Long>
      internalGetMutableMapSint64Sint64() {
        onChanged();;
        if (mapSint64Sint64_ == null) {
          mapSint64Sint64_ = com.google.protobuf.MapField.newMapField(
              MapSint64Sint64DefaultEntryHolder.defaultEntry);
        }
        if (!mapSint64Sint64_.isMutable()) {
          mapSint64Sint64_ = mapSint64Sint64_.copy();
        }
        return mapSint64Sint64_;
      }

      public int getMapSint64Sint64Count() {
        return internalGetMapSint64Sint64().getMap().size();
      }
      /**
       * <code>map&lt;sint64, sint64&gt; map_sint64_sint64 = 6;</code>
       */

      @java.lang.Override
      public boolean containsMapSint64Sint64(
          long key) {
        
        return internalGetMapSint64Sint64().getMap().containsKey(key);
      }
      /**
       * Use {@link #getMapSint64Sint64Map()} instead.
       */
      @java.lang.Override
      @java.lang.Deprecated
      public java.util.Map<java.lang.Long, java.lang.Long> getMapSint64Sint64() {
        return getMapSint64Sint64Map();
      }
      /**
       * <code>map&lt;sint64, sint64&gt; map_sint64_sint64 = 6;</code>
       */
      @java.lang.Override

      public java.util.Map<java.lang.Long, java.lang.Long> getMapSint64Sint64Map() {
        return internalGetMapSint64Sint64().getMap();
      }
      /**
       * <code>map&lt;sint64, sint64&gt; map_sint64_sint64 = 6;</code>
       */
      @java.lang.Override

      public long getMapSint64Sint64OrDefault(
          long key,
          long defaultValue) {
        
        java.util.Map<java.lang.Long, java.lang.Long> map =
            internalGetMapSint64Sint64().getMap();
        return map.containsKey(key) ? map.get(key) : defaultValue;
      }
      /**
       * <code>map&lt;sint64, sint64&gt; map_sint64_sint64 = 6;</code>
       */
      @java.lang.Override

      public long getMapSint64Sint64OrThrow(
          long key) {
        
        java.util.Map<java.lang.Long, java.lang.Long> map =
            internalGetMapSint64Sint64().getMap();
        if (!map.containsKey(key)) {
          throw new java.lang.IllegalArgumentException();
        }
        return map.get(key);
      }

      public Builder clearMapSint64Sint64() {
        internalGetMutableMapSint64Sint64().getMutableMap()
            .clear();
        return this;
      }
      /**
       * <code>map&lt;sint64, sint64&gt; map_sint64_sint64 = 6;</code>
       */

      public Builder removeMapSint64Sint64(
          long key) {
        
        internalGetMutableMapSint64Sint64().getMutableMap()
            .remove(key);
        return this;
      }
      /**
       * Use alternate mutation accessors instead.
       */
      @java.lang.Deprecated
      public java.util.Map<java.lang.Long, java.lang.Long>
      getMutableMapSint64Sint64() {
        return internalGetMutableMapSint64Sint64().getMutableMap();
      }
      /**
       * <code>map&lt;sint64, sint64&gt; map_sint64_sint64 = 6;</code>
       */
      public Builder putMapSint64Sint64(
          long key,
          long value) {
        
        
        internalGetMutableMapSint64Sint64().getMutableMap()
            .put(key, value);
        return this;
      }
      /**
       * <code>map&lt;sint64, sint64&gt; map_sint64_sint64 = 6;</code>
       */

      public Builder putAllMapSint64Sint64(
          java.util.Map<java.lang.Long, java.lang.Long> values) {
        internalGetMutableMapSint64Sint64().getMutableMap()
            .putAll(values);
        return this;
      }

      private com.google.protobuf.MapField<
          java.lang.Integer, java.lang.Integer> mapFixed32Fixed32_;
      private com.google.protobuf.MapField<java.lang.Integer, java.lang.Integer>
      internalGetMapFixed32Fixed32() {
        if (mapFixed32Fixed32_ == null) {
          return com.google.protobuf.MapField.emptyMapField(
              MapFixed32Fixed32DefaultEntryHolder.defaultEntry);
        }
        return mapFixed32Fixed32_;
      }
      private com.google.protobuf.MapField<java.lang.Integer, java.lang.Integer>
      internalGetMutableMapFixed32Fixed32() {
        onChanged();;
        if (mapFixed32Fixed32_ == null) {
          mapFixed32Fixed32_ = com.google.protobuf.MapField.newMapField(
              MapFixed32Fixed32DefaultEntryHolder.defaultEntry);
        }
        if (!mapFixed32Fixed32_.isMutable()) {
          mapFixed32Fixed32_ = mapFixed32Fixed32_.copy();
        }
        return mapFixed32Fixed32_;
      }

      public int getMapFixed32Fixed32Count() {
        return internalGetMapFixed32Fixed32().getMap().size();
      }
      /**
       * <code>map&lt;fixed32, fixed32&gt; map_fixed32_fixed32 = 7;</code>
       */

      @java.lang.Override
      public boolean containsMapFixed32Fixed32(
          int key) {
        
        return internalGetMapFixed32Fixed32().getMap().containsKey(key);
      }
      /**
       * Use {@link #getMapFixed32Fixed32Map()} instead.
       */
      @java.lang.Override
      @java.lang.Deprecated
      public java.util.Map<java.lang.Integer, java.lang.Integer> getMapFixed32Fixed32() {
        return getMapFixed32Fixed32Map();
      }
      /**
       * <code>map&lt;fixed32, fixed32&gt; map_fixed32_fixed32 = 7;</code>
       */
      @java.lang.Override

      public java.util.Map<java.lang.Integer, java.lang.Integer> getMapFixed32Fixed32Map() {
        return internalGetMapFixed32Fixed32().getMap();
      }
      /**
       * <code>map&lt;fixed32, fixed32&gt; map_fixed32_fixed32 = 7;</code>
       */
      @java.lang.Override

      public int getMapFixed32Fixed32OrDefault(
          int key,
          int defaultValue) {
        
        java.util.Map<java.lang.Integer, java.lang.Integer> map =
            internalGetMapFixed32Fixed32().getMap();
        return map.containsKey(key) ? map.get(key) : defaultValue;
      }
      /**
       * <code>map&lt;fixed32, fixed32&gt; map_fixed32_fixed32 = 7;</code>
       */
      @java.lang.Override

      public int getMapFixed32Fixed32OrThrow(
          int key) {
        
        java.util.Map<java.lang.Integer, java.lang.Integer> map =
            internalGetMapFixed32Fixed32().getMap();
        if (!map.containsKey(key)) {
          throw new java.lang.IllegalArgumentException();
        }
        return map.get(key);
      }

      public Builder clearMapFixed32Fixed32() {
        internalGetMutableMapFixed32Fixed32().getMutableMap()
            .clear();
        return this;
      }
      /**
       * <code>map&lt;fixed32, fixed32&gt; map_fixed32_fixed32 = 7;</code>
       */

      public Builder removeMapFixed32Fixed32(
          int key) {
        
        internalGetMutableMapFixed32Fixed32().getMutableMap()
            .remove(key);
        return this;
      }
      /**
       * Use alternate mutation accessors instead.
       */
      @java.lang.Deprecated
      public java.util.Map<java.lang.Integer, java.lang.Integer>
      getMutableMapFixed32Fixed32() {
        return internalGetMutableMapFixed32Fixed32().getMutableMap();
      }
      /**
       * <code>map&lt;fixed32, fixed32&gt; map_fixed32_fixed32 = 7;</code>
       */
      public Builder putMapFixed32Fixed32(
          int key,
          int value) {
        
        
        internalGetMutableMapFixed32Fixed32().getMutableMap()
            .put(key, value);
        return this;
      }
      /**
       * <code>map&lt;fixed32, fixed32&gt; map_fixed32_fixed32 = 7;</code>
       */

      public Builder putAllMapFixed32Fixed32(
          java.util.Map<java.lang.Integer, java.lang.Integer> values) {
        internalGetMutableMapFixed32Fixed32().getMutableMap()
            .putAll(values);
        return this;
      }

      private com.google.protobuf.MapField<
          java.lang.Long, java.lang.Long> mapFixed64Fixed64_;
      private com.google.protobuf.MapField<java.lang.Long, java.lang.Long>
      internalGetMapFixed64Fixed64() {
        if (mapFixed64Fixed64_ == null) {
          return com.google.protobuf.MapField.emptyMapField(
              MapFixed64Fixed64DefaultEntryHolder.defaultEntry);
        }
        return mapFixed64Fixed64_;
      }
      private com.google.protobuf.MapField<java.lang.Long, java.lang.Long>
      internalGetMutableMapFixed64Fixed64() {
        onChanged();;
        if (mapFixed64Fixed64_ == null) {
          mapFixed64Fixed64_ = com.google.protobuf.MapField.newMapField(
              MapFixed64Fixed64DefaultEntryHolder.defaultEntry);
        }
        if (!mapFixed64Fixed64_.isMutable()) {
          mapFixed64Fixed64_ = mapFixed64Fixed64_.copy();
        }
        return mapFixed64Fixed64_;
      }

      public int getMapFixed64Fixed64Count() {
        return internalGetMapFixed64Fixed64().getMap().size();
      }
      /**
       * <code>map&lt;fixed64, fixed64&gt; map_fixed64_fixed64 = 8;</code>
       */

      @java.lang.Override
      public boolean containsMapFixed64Fixed64(
          long key) {
        
        return internalGetMapFixed64Fixed64().getMap().containsKey(key);
      }
      /**
       * Use {@link #getMapFixed64Fixed64Map()} instead.
       */
      @java.lang.Override
      @java.lang.Deprecated
      public java.util.Map<java.lang.Long, java.lang.Long> getMapFixed64Fixed64() {
        return getMapFixed64Fixed64Map();
      }
      /**
       * <code>map&lt;fixed64, fixed64&gt; map_fixed64_fixed64 = 8;</code>
       */
      @java.lang.Override

      public java.util.Map<java.lang.Long, java.lang.Long> getMapFixed64Fixed64Map() {
        return internalGetMapFixed64Fixed64().getMap();
      }
      /**
       * <code>map&lt;fixed64, fixed64&gt; map_fixed64_fixed64 = 8;</code>
       */
      @java.lang.Override

      public long getMapFixed64Fixed64OrDefault(
          long key,
          long defaultValue) {
        
        java.util.Map<java.lang.Long, java.lang.Long> map =
            internalGetMapFixed64Fixed64().getMap();
        return map.containsKey(key) ? map.get(key) : defaultValue;
      }
      /**
       * <code>map&lt;fixed64, fixed64&gt; map_fixed64_fixed64 = 8;</code>
       */
      @java.lang.Override

      public long getMapFixed64Fixed64OrThrow(
          long key) {
        
        java.util.Map<java.lang.Long, java.lang.Long> map =
            internalGetMapFixed64Fixed64().getMap();
        if (!map.containsKey(key)) {
          throw new java.lang.IllegalArgumentException();
        }
        return map.get(key);
      }

      public Builder clearMapFixed64Fixed64() {
        internalGetMutableMapFixed64Fixed64().getMutableMap()
            .clear();
        return this;
      }
      /**
       * <code>map&lt;fixed64, fixed64&gt; map_fixed64_fixed64 = 8;</code>
       */

      public Builder removeMapFixed64Fixed64(
          long key) {
        
        internalGetMutableMapFixed64Fixed64().getMutableMap()
            .remove(key);
        return this;
      }
      /**
       * Use alternate mutation accessors instead.
       */
      @java.lang.Deprecated
      public java.util.Map<java.lang.Long, java.lang.Long>
      getMutableMapFixed64Fixed64() {
        return internalGetMutableMapFixed64Fixed64().getMutableMap();
      }
      /**
       * <code>map&lt;fixed64, fixed64&gt; map_fixed64_fixed64 = 8;</code>
       */
      public Builder putMapFixed64Fixed64(
          long key,
          long value) {
        
        
        internalGetMutableMapFixed64Fixed64().getMutableMap()
            .put(key, value);
        return this;
      }
      /**
       * <code>map&lt;fixed64, fixed64&gt; map_fixed64_fixed64 = 8;</code>
       */

      public Builder putAllMapFixed64Fixed64(
          java.util.Map<java.lang.Long, java.lang.Long> values) {
        internalGetMutableMapFixed64Fixed64().getMutableMap()
            .putAll(values);
        return this;
      }

      private com.google.protobuf.MapField<
          java.lang.Integer, java.lang.Integer> mapSfixed32Sfixed32_;
      private com.google.protobuf.MapField<java.lang.Integer, java.lang.Integer>
      internalGetMapSfixed32Sfixed32() {
        if (mapSfixed32Sfixed32_ == null) {
          return com.google.protobuf.MapField.emptyMapField(
              MapSfixed32Sfixed32DefaultEntryHolder.defaultEntry);
        }
        return mapSfixed32Sfixed32_;
      }
      private com.google.protobuf.MapField<java.lang.Integer, java.lang.Integer>
      internalGetMutableMapSfixed32Sfixed32() {
        onChanged();;
        if (mapSfixed32Sfixed32_ == null) {
          mapSfixed32Sfixed32_ = com.google.protobuf.MapField.newMapField(
              MapSfixed32Sfixed32DefaultEntryHolder.defaultEntry);
        }
        if (!mapSfixed32Sfixed32_.isMutable()) {
          mapSfixed32Sfixed32_ = mapSfixed32Sfixed32_.copy();
        }
        return mapSfixed32Sfixed32_;
      }

      public int getMapSfixed32Sfixed32Count() {
        return internalGetMapSfixed32Sfixed32().getMap().size();
      }
      /**
       * <code>map&lt;sfixed32, sfixed32&gt; map_sfixed32_sfixed32 = 9;</code>
       */

      @java.lang.Override
      public boolean containsMapSfixed32Sfixed32(
          int key) {
        
        return internalGetMapSfixed32Sfixed32().getMap().containsKey(key);
      }
      /**
       * Use {@link #getMapSfixed32Sfixed32Map()} instead.
       */
      @java.lang.Override
      @java.lang.Deprecated
      public java.util.Map<java.lang.Integer, java.lang.Integer> getMapSfixed32Sfixed32() {
        return getMapSfixed32Sfixed32Map();
      }
      /**
       * <code>map&lt;sfixed32, sfixed32&gt; map_sfixed32_sfixed32 = 9;</code>
       */
      @java.lang.Override

      public java.util.Map<java.lang.Integer, java.lang.Integer> getMapSfixed32Sfixed32Map() {
        return internalGetMapSfixed32Sfixed32().getMap();
      }
      /**
       * <code>map&lt;sfixed32, sfixed32&gt; map_sfixed32_sfixed32 = 9;</code>
       */
      @java.lang.Override

      public int getMapSfixed32Sfixed32OrDefault(
          int key,
          int defaultValue) {
        
        java.util.Map<java.lang.Integer, java.lang.Integer> map =
            internalGetMapSfixed32Sfixed32().getMap();
        return map.containsKey(key) ? map.get(key) : defaultValue;
      }
      /**
       * <code>map&lt;sfixed32, sfixed32&gt; map_sfixed32_sfixed32 = 9;</code>
       */
      @java.lang.Override

      public int getMapSfixed32Sfixed32OrThrow(
          int key) {
        
        java.util.Map<java.lang.Integer, java.lang.Integer> map =
            internalGetMapSfixed32Sfixed32().getMap();
        if (!map.containsKey(key)) {
          throw new java.lang.IllegalArgumentException();
        }
        return map.get(key);
      }

      public Builder clearMapSfixed32Sfixed32() {
        internalGetMutableMapSfixed32Sfixed32().getMutableMap()
            .clear();
        return this;
      }
      /**
       * <code>map&lt;sfixed32, sfixed32&gt; map_sfixed32_sfixed32 = 9;</code>
       */

      public Builder removeMapSfixed32Sfixed32(
          int key) {
        
        internalGetMutableMapSfixed32Sfixed32().getMutableMap()
            .remove(key);
        return this;
      }
      /**
       * Use alternate mutation accessors instead.
       */
      @java.lang.Deprecated
      public java.util.Map<java.lang.Integer, java.lang.Integer>
      getMutableMapSfixed32Sfixed32() {
        return internalGetMutableMapSfixed32Sfixed32().getMutableMap();
      }
      /**
       * <code>map&lt;sfixed32, sfixed32&gt; map_sfixed32_sfixed32 = 9;</code>
       */
      public Builder putMapSfixed32Sfixed32(
          int key,
          int value) {
        
        
        internalGetMutableMapSfixed32Sfixed32().getMutableMap()
            .put(key, value);
        return this;
      }
      /**
       * <code>map&lt;sfixed32, sfixed32&gt; map_sfixed32_sfixed32 = 9;</code>
       */

      public Builder putAllMapSfixed32Sfixed32(
          java.util.Map<java.lang.Integer, java.lang.Integer> values) {
        internalGetMutableMapSfixed32Sfixed32().getMutableMap()
            .putAll(values);
        return this;
      }

      private com.google.protobuf.MapField<
          java.lang.Long, java.lang.Long> mapSfixed64Sfixed64_;
      private com.google.protobuf.MapField<java.lang.Long, java.lang.Long>
      internalGetMapSfixed64Sfixed64() {
        if (mapSfixed64Sfixed64_ == null) {
          return com.google.protobuf.MapField.emptyMapField(
              MapSfixed64Sfixed64DefaultEntryHolder.defaultEntry);
        }
        return mapSfixed64Sfixed64_;
      }
      private com.google.protobuf.MapField<java.lang.Long, java.lang.Long>
      internalGetMutableMapSfixed64Sfixed64() {
        onChanged();;
        if (mapSfixed64Sfixed64_ == null) {
          mapSfixed64Sfixed64_ = com.google.protobuf.MapField.newMapField(
              MapSfixed64Sfixed64DefaultEntryHolder.defaultEntry);
        }
        if (!mapSfixed64Sfixed64_.isMutable()) {
          mapSfixed64Sfixed64_ = mapSfixed64Sfixed64_.copy();
        }
        return mapSfixed64Sfixed64_;
      }

      public int getMapSfixed64Sfixed64Count() {
        return internalGetMapSfixed64Sfixed64().getMap().size();
      }
      /**
       * <code>map&lt;sfixed64, sfixed64&gt; map_sfixed64_sfixed64 = 10;</code>
       */

      @java.lang.Override
      public boolean containsMapSfixed64Sfixed64(
          long key) {
        
        return internalGetMapSfixed64Sfixed64().getMap().containsKey(key);
      }
      /**
       * Use {@link #getMapSfixed64Sfixed64Map()} instead.
       */
      @java.lang.Override
      @java.lang.Deprecated
      public java.util.Map<java.lang.Long, java.lang.Long> getMapSfixed64Sfixed64() {
        return getMapSfixed64Sfixed64Map();
      }
      /**
       * <code>map&lt;sfixed64, sfixed64&gt; map_sfixed64_sfixed64 = 10;</code>
       */
      @java.lang.Override

      public java.util.Map<java.lang.Long, java.lang.Long> getMapSfixed64Sfixed64Map() {
        return internalGetMapSfixed64Sfixed64().getMap();
      }
      /**
       * <code>map&lt;sfixed64, sfixed64&gt; map_sfixed64_sfixed64 = 10;</code>
       */
      @java.lang.Override

      public long getMapSfixed64Sfixed64OrDefault(
          long key,
          long defaultValue) {
        
        java.util.Map<java.lang.Long, java.lang.Long> map =
            internalGetMapSfixed64Sfixed64().getMap();
        return map.containsKey(key) ? map.get(key) : defaultValue;
      }
      /**
       * <code>map&lt;sfixed64, sfixed64&gt; map_sfixed64_sfixed64 = 10;</code>
       */
      @java.lang.Override

      public long getMapSfixed64Sfixed64OrThrow(
          long key) {
        
        java.util.Map<java.lang.Long, java.lang.Long> map =
            internalGetMapSfixed64Sfixed64().getMap();
        if (!map.containsKey(key)) {
          throw new java.lang.IllegalArgumentException();
        }
        return map.get(key);
      }

      public Builder clearMapSfixed64Sfixed64() {
        internalGetMutableMapSfixed64Sfixed64().getMutableMap()
            .clear();
        return this;
      }
      /**
       * <code>map&lt;sfixed64, sfixed64&gt; map_sfixed64_sfixed64 = 10;</code>
       */

      public Builder removeMapSfixed64Sfixed64(
          long key) {
        
        internalGetMutableMapSfixed64Sfixed64().getMutableMap()
            .remove(key);
        return this;
      }
      /**
       * Use alternate mutation accessors instead.
       */
      @java.lang.Deprecated
      public java.util.Map<java.lang.Long, java.lang.Long>
      getMutableMapSfixed64Sfixed64() {
        return internalGetMutableMapSfixed64Sfixed64().getMutableMap();
      }
      /**
       * <code>map&lt;sfixed64, sfixed64&gt; map_sfixed64_sfixed64 = 10;</code>
       */
      public Builder putMapSfixed64Sfixed64(
          long key,
          long value) {
        
        
        internalGetMutableMapSfixed64Sfixed64().getMutableMap()
            .put(key, value);
        return this;
      }
      /**
       * <code>map&lt;sfixed64, sfixed64&gt; map_sfixed64_sfixed64 = 10;</code>
       */

      public Builder putAllMapSfixed64Sfixed64(
          java.util.Map<java.lang.Long, java.lang.Long> values) {
        internalGetMutableMapSfixed64Sfixed64().getMutableMap()
            .putAll(values);
        return this;
      }

      private com.google.protobuf.MapField<
          java.lang.Integer, java.lang.Float> mapInt32Float_;
      private com.google.protobuf.MapField<java.lang.Integer, java.lang.Float>
      internalGetMapInt32Float() {
        if (mapInt32Float_ == null) {
          return com.google.protobuf.MapField.emptyMapField(
              MapInt32FloatDefaultEntryHolder.defaultEntry);
        }
        return mapInt32Float_;
      }
      private com.google.protobuf.MapField<java.lang.Integer, java.lang.Float>
      internalGetMutableMapInt32Float() {
        onChanged();;
        if (mapInt32Float_ == null) {
          mapInt32Float_ = com.google.protobuf.MapField.newMapField(
              MapInt32FloatDefaultEntryHolder.defaultEntry);
        }
        if (!mapInt32Float_.isMutable()) {
          mapInt32Float_ = mapInt32Float_.copy();
        }
        return mapInt32Float_;
      }

      public int getMapInt32FloatCount() {
        return internalGetMapInt32Float().getMap().size();
      }
      /**
       * <code>map&lt;int32, float&gt; map_int32_float = 11;</code>
       */

      @java.lang.Override
      public boolean containsMapInt32Float(
          int key) {
        
        return internalGetMapInt32Float().getMap().containsKey(key);
      }
      /**
       * Use {@link #getMapInt32FloatMap()} instead.
       */
      @java.lang.Override
      @java.lang.Deprecated
      public java.util.Map<java.lang.Integer, java.lang.Float> getMapInt32Float() {
        return getMapInt32FloatMap();
      }
      /**
       * <code>map&lt;int32, float&gt; map_int32_float = 11;</code>
       */
      @java.lang.Override

      public java.util.Map<java.lang.Integer, java.lang.Float> getMapInt32FloatMap() {
        return internalGetMapInt32Float().getMap();
      }
      /**
       * <code>map&lt;int32, float&gt; map_int32_float = 11;</code>
       */
      @java.lang.Override

      public float getMapInt32FloatOrDefault(
          int key,
          float defaultValue) {
        
        java.util.Map<java.lang.Integer, java.lang.Float> map =
            internalGetMapInt32Float().getMap();
        return map.containsKey(key) ? map.get(key) : defaultValue;
      }
      /**
       * <code>map&lt;int32, float&gt; map_int32_float = 11;</code>
       */
      @java.lang.Override

      public float getMapInt32FloatOrThrow(
          int key) {
        
        java.util.Map<java.lang.Integer, java.lang.Float> map =
            internalGetMapInt32Float().getMap();
        if (!map.containsKey(key)) {
          throw new java.lang.IllegalArgumentException();
        }
        return map.get(key);
      }

      public Builder clearMapInt32Float() {
        internalGetMutableMapInt32Float().getMutableMap()
            .clear();
        return this;
      }
      /**
       * <code>map&lt;int32, float&gt; map_int32_float = 11;</code>
       */

      public Builder removeMapInt32Float(
          int key) {
        
        internalGetMutableMapInt32Float().getMutableMap()
            .remove(key);
        return this;
      }
      /**
       * Use alternate mutation accessors instead.
       */
      @java.lang.Deprecated
      public java.util.Map<java.lang.Integer, java.lang.Float>
      getMutableMapInt32Float() {
        return internalGetMutableMapInt32Float().getMutableMap();
      }
      /**
       * <code>map&lt;int32, float&gt; map_int32_float = 11;</code>
       */
      public Builder putMapInt32Float(
          int key,
          float value) {
        
        
        internalGetMutableMapInt32Float().getMutableMap()
            .put(key, value);
        return this;
      }
      /**
       * <code>map&lt;int32, float&gt; map_int32_float = 11;</code>
       */

      public Builder putAllMapInt32Float(
          java.util.Map<java.lang.Integer, java.lang.Float> values) {
        internalGetMutableMapInt32Float().getMutableMap()
            .putAll(values);
        return this;
      }

      private com.google.protobuf.MapField<
          java.lang.Integer, java.lang.Double> mapInt32Double_;
      private com.google.protobuf.MapField<java.lang.Integer, java.lang.Double>
      internalGetMapInt32Double() {
        if (mapInt32Double_ == null) {
          return com.google.protobuf.MapField.emptyMapField(
              MapInt32DoubleDefaultEntryHolder.defaultEntry);
        }
        return mapInt32Double_;
      }
      private com.google.protobuf.MapField<java.lang.Integer, java.lang.Double>
      internalGetMutableMapInt32Double() {
        onChanged();;
        if (mapInt32Double_ == null) {
          mapInt32Double_ = com.google.protobuf.MapField.newMapField(
              MapInt32DoubleDefaultEntryHolder.defaultEntry);
        }
        if (!mapInt32Double_.isMutable()) {
          mapInt32Double_ = mapInt32Double_.copy();
        }
        return mapInt32Double_;
      }

      public int getMapInt32DoubleCount() {
        return internalGetMapInt32Double().getMap().size();
      }
      /**
       * <code>map&lt;int32, double&gt; map_int32_double = 12;</code>
       */

      @java.lang.Override
      public boolean containsMapInt32Double(
          int key) {
        
        return internalGetMapInt32Double().getMap().containsKey(key);
      }
      /**
       * Use {@link #getMapInt32DoubleMap()} instead.
       */
      @java.lang.Override
      @java.lang.Deprecated
      public java.util.Map<java.lang.Integer, java.lang.Double> getMapInt32Double() {
        return getMapInt32DoubleMap();
      }
      /**
       * <code>map&lt;int32, double&gt; map_int32_double = 12;</code>
       */
      @java.lang.Override

      public java.util.Map<java.lang.Integer, java.lang.Double> getMapInt32DoubleMap() {
        return internalGetMapInt32Double().getMap();
      }
      /**
       * <code>map&lt;int32, double&gt; map_int32_double = 12;</code>
       */
      @java.lang.Override

      public double getMapInt32DoubleOrDefault(
          int key,
          double defaultValue) {
        
        java.util.Map<java.lang.Integer, java.lang.Double> map =
            internalGetMapInt32Double().getMap();
        return map.containsKey(key) ? map.get(key) : defaultValue;
      }
      /**
       * <code>map&lt;int32, double&gt; map_int32_double = 12;</code>
       */
      @java.lang.Override

      public double getMapInt32DoubleOrThrow(
          int key) {
        
        java.util.Map<java.lang.Integer, java.lang.Double> map =
            internalGetMapInt32Double().getMap();
        if (!map.containsKey(key)) {
          throw new java.lang.IllegalArgumentException();
        }
        return map.get(key);
      }

      public Builder clearMapInt32Double() {
        internalGetMutableMapInt32Double().getMutableMap()
            .clear();
        return this;
      }
      /**
       * <code>map&lt;int32, double&gt; map_int32_double = 12;</code>
       */

      public Builder removeMapInt32Double(
          int key) {
        
        internalGetMutableMapInt32Double().getMutableMap()
            .remove(key);
        return this;
      }
      /**
       * Use alternate mutation accessors instead.
       */
      @java.lang.Deprecated
      public java.util.Map<java.lang.Integer, java.lang.Double>
      getMutableMapInt32Double() {
        return internalGetMutableMapInt32Double().getMutableMap();
      }
      /**
       * <code>map&lt;int32, double&gt; map_int32_double = 12;</code>
       */
      public Builder putMapInt32Double(
          int key,
          double value) {
        
        
        internalGetMutableMapInt32Double().getMutableMap()
            .put(key, value);
        return this;
      }
      /**
       * <code>map&lt;int32, double&gt; map_int32_double = 12;</code>
       */

      public Builder putAllMapInt32Double(
          java.util.Map<java.lang.Integer, java.lang.Double> values) {
        internalGetMutableMapInt32Double().getMutableMap()
            .putAll(values);
        return this;
      }

      private com.google.protobuf.MapField<
          java.lang.Boolean, java.lang.Boolean> mapBoolBool_;
      private com.google.protobuf.MapField<java.lang.Boolean, java.lang.Boolean>
      internalGetMapBoolBool() {
        if (mapBoolBool_ == null) {
          return com.google.protobuf.MapField.emptyMapField(
              MapBoolBoolDefaultEntryHolder.defaultEntry);
        }
        return mapBoolBool_;
      }
      private com.google.protobuf.MapField<java.lang.Boolean, java.lang.Boolean>
      internalGetMutableMapBoolBool() {
        onChanged();;
        if (mapBoolBool_ == null) {
          mapBoolBool_ = com.google.protobuf.MapField.newMapField(
              MapBoolBoolDefaultEntryHolder.defaultEntry);
        }
        if (!mapBoolBool_.isMutable()) {
          mapBoolBool_ = mapBoolBool_.copy();
        }
        return mapBoolBool_;
      }

      public int getMapBoolBoolCount() {
        return internalGetMapBoolBool().getMap().size();
      }
      /**
       * <code>map&lt;bool, bool&gt; map_bool_bool = 13;</code>
       */

      @java.lang.Override
      public boolean containsMapBoolBool(
          boolean key) {
        
        return internalGetMapBoolBool().getMap().containsKey(key);
      }
      /**
       * Use {@link #getMapBoolBoolMap()} instead.
       */
      @java.lang.Override
      @java.lang.Deprecated
      public java.util.Map<java.lang.Boolean, java.lang.Boolean> getMapBoolBool() {
        return getMapBoolBoolMap();
      }
      /**
       * <code>map&lt;bool, bool&gt; map_bool_bool = 13;</code>
       */
      @java.lang.Override

      public java.util.Map<java.lang.Boolean, java.lang.Boolean> getMapBoolBoolMap() {
        return internalGetMapBoolBool().getMap();
      }
      /**
       * <code>map&lt;bool, bool&gt; map_bool_bool = 13;</code>
       */
      @java.lang.Override

      public boolean getMapBoolBoolOrDefault(
          boolean key,
          boolean defaultValue) {
        
        java.util.Map<java.lang.Boolean, java.lang.Boolean> map =
            internalGetMapBoolBool().getMap();
        return map.containsKey(key) ? map.get(key) : defaultValue;
      }
      /**
       * <code>map&lt;bool, bool&gt; map_bool_bool = 13;</code>
       */
      @java.lang.Override

      public boolean getMapBoolBoolOrThrow(
          boolean key) {
        
        java.util.Map<java.lang.Boolean, java.lang.Boolean> map =
            internalGetMapBoolBool().getMap();
        if (!map.containsKey(key)) {
          throw new java.lang.IllegalArgumentException();
        }
        return map.get(key);
      }

      public Builder clearMapBoolBool() {
        internalGetMutableMapBoolBool().getMutableMap()
            .clear();
        return this;
      }
      /**
       * <code>map&lt;bool, bool&gt; map_bool_bool = 13;</code>
       */

      public Builder removeMapBoolBool(
          boolean key) {
        
        internalGetMutableMapBoolBool().getMutableMap()
            .remove(key);
        return this;
      }
      /**
       * Use alternate mutation accessors instead.
       */
      @java.lang.Deprecated
      public java.util.Map<java.lang.Boolean, java.lang.Boolean>
      getMutableMapBoolBool() {
        return internalGetMutableMapBoolBool().getMutableMap();
      }
      /**
       * <code>map&lt;bool, bool&gt; map_bool_bool = 13;</code>
       */
      public Builder putMapBoolBool(
          boolean key,
          boolean value) {
        
        
        internalGetMutableMapBoolBool().getMutableMap()
            .put(key, value);
        return this;
      }
      /**
       * <code>map&lt;bool, bool&gt; map_bool_bool = 13;</code>
       */

      public Builder putAllMapBoolBool(
          java.util.Map<java.lang.Boolean, java.lang.Boolean> values) {
        internalGetMutableMapBoolBool().getMutableMap()
            .putAll(values);
        return this;
      }

      private com.google.protobuf.MapField<
          java.lang.String, java.lang.String> mapStringString_;
      private com.google.protobuf.MapField<java.lang.String, java.lang.String>
      internalGetMapStringString() {
        if (mapStringString_ == null) {
          return com.google.protobuf.MapField.emptyMapField(
              MapStringStringDefaultEntryHolder.defaultEntry);
        }
        return mapStringString_;
      }
      private com.google.protobuf.MapField<java.lang.String, java.lang.String>
      internalGetMutableMapStringString() {
        onChanged();;
        if (mapStringString_ == null) {
          mapStringString_ = com.google.protobuf.MapField.newMapField(
              MapStringStringDefaultEntryHolder.defaultEntry);
        }
        if (!mapStringString_.isMutable()) {
          mapStringString_ = mapStringString_.copy();
        }
        return mapStringString_;
      }

      public int getMapStringStringCount() {
        return internalGetMapStringString().getMap().size();
      }
      /**
       * <code>map&lt;string, string&gt; map_string_string = 14;</code>
       */

      @java.lang.Override
      public boolean containsMapStringString(
          java.lang.String key) {
        if (key == null) { throw new NullPointerException("map key"); }
        return internalGetMapStringString().getMap().containsKey(key);
      }
      /**
       * Use {@link #getMapStringStringMap()} instead.
       */
      @java.lang.Override
      @java.lang.Deprecated
      public java.util.Map<java.lang.String, java.lang.String> getMapStringString() {
        return getMapStringStringMap();
      }
      /**
       * <code>map&lt;string, string&gt; map_string_string = 14;</code>
       */
      @java.lang.Override

      public java.util.Map<java.lang.String, java.lang.String> getMapStringStringMap() {
        return internalGetMapStringString().getMap();
      }
      /**
       * <code>map&lt;string, string&gt; map_string_string = 14;</code>
       */
      @java.lang.Override

      public java.lang.String getMapStringStringOrDefault(
          java.lang.String key,
          java.lang.String defaultValue) {
        if (key == null) { throw new NullPointerException("map key"); }
        java.util.Map<java.lang.String, java.lang.String> map =
            internalGetMapStringString().getMap();
        return map.containsKey(key) ? map.get(key) : defaultValue;
      }
      /**
       * <code>map&lt;string, string&gt; map_string_string = 14;</code>
       */
      @java.lang.Override

      public java.lang.String getMapStringStringOrThrow(
          java.lang.String key) {
        if (key == null) { throw new NullPointerException("map key"); }
        java.util.Map<java.lang.String, java.lang.String> map =
            internalGetMapStringString().getMap();
        if (!map.containsKey(key)) {
          throw new java.lang.IllegalArgumentException();
        }
        return map.get(key);
      }

      public Builder clearMapStringString() {
        internalGetMutableMapStringString().getMutableMap()
            .clear();
        return this;
      }
      /**
       * <code>map&lt;string, string&gt; map_string_string = 14;</code>
       */

      public Builder removeMapStringString(
          java.lang.String key) {
        if (key == null) { throw new NullPointerException("map key"); }
        internalGetMutableMapStringString().getMutableMap()
            .remove(key);
        return this;
      }
      /**
       * Use alternate mutation accessors instead.
       */
      @java.lang.Deprecated
      public java.util.Map<java.lang.String, java.lang.String>
      getMutableMapStringString() {
        return internalGetMutableMapStringString().getMutableMap();
      }
      /**
       * <code>map&lt;string, string&gt; map_string_string = 14;</code>
       */
      public Builder putMapStringString(
          java.lang.String key,
          java.lang.String value) {
        if (key == null) { throw new NullPointerException("map key"); }
        if (value == null) {
  throw new NullPointerException("map value");
}

        internalGetMutableMapStringString().getMutableMap()
            .put(key, value);
        return this;
      }
      /**
       * <code>map&lt;string, string&gt; map_string_string = 14;</code>
       */

      public Builder putAllMapStringString(
          java.util.Map<java.lang.String, java.lang.String> values) {
        internalGetMutableMapStringString().getMutableMap()
            .putAll(values);
        return this;
      }

      private com.google.protobuf.MapField<
          java.lang.Integer, com.google.protobuf.ByteString> mapInt32Bytes_;
      private com.google.protobuf.MapField<java.lang.Integer, com.google.protobuf.ByteString>
      internalGetMapInt32Bytes() {
        if (mapInt32Bytes_ == null) {
          return com.google.protobuf.MapField.emptyMapField(
              MapInt32BytesDefaultEntryHolder.defaultEntry);
        }
        return mapInt32Bytes_;
      }
      private com.google.protobuf.MapField<java.lang.Integer, com.google.protobuf.ByteString>
      internalGetMutableMapInt32Bytes() {
        onChanged();;
        if (mapInt32Bytes_ == null) {
          mapInt32Bytes_ = com.google.protobuf.MapField.newMapField(
              MapInt32BytesDefaultEntryHolder.defaultEntry);
        }
        if (!mapInt32Bytes_.isMutable()) {
          mapInt32Bytes_ = mapInt32Bytes_.copy();
        }
        return mapInt32Bytes_;
      }

      public int getMapInt32BytesCount() {
        return internalGetMapInt32Bytes().getMap().size();
      }
      /**
       * <code>map&lt;int32, bytes&gt; map_int32_bytes = 15;</code>
       */

      @java.lang.Override
      public boolean containsMapInt32Bytes(
          int key) {
        
        return internalGetMapInt32Bytes().getMap().containsKey(key);
      }
      /**
       * Use {@link #getMapInt32BytesMap()} instead.
       */
      @java.lang.Override
      @java.lang.Deprecated
      public java.util.Map<java.lang.Integer, com.google.protobuf.ByteString> getMapInt32Bytes() {
        return getMapInt32BytesMap();
      }
      /**
       * <code>map&lt;int32, bytes&gt; map_int32_bytes = 15;</code>
       */
      @java.lang.Override

      public java.util.Map<java.lang.Integer, com.google.protobuf.ByteString> getMapInt32BytesMap() {
        return internalGetMapInt32Bytes().getMap();
      }
      /**
       * <code>map&lt;int32, bytes&gt; map_int32_bytes = 15;</code>
       */
      @java.lang.Override

      public com.google.protobuf.ByteString getMapInt32BytesOrDefault(
          int key,
          com.google.protobuf.ByteString defaultValue) {
        
        java.util.Map<java.lang.Integer, com.google.protobuf.ByteString> map =
            internalGetMapInt32Bytes().getMap();
        return map.containsKey(key) ? map.get(key) : defaultValue;
      }
      /**
       * <code>map&lt;int32, bytes&gt; map_int32_bytes = 15;</code>
       */
      @java.lang.Override

      public com.google.protobuf.ByteString getMapInt32BytesOrThrow(
          int key) {
        
        java.util.Map<java.lang.Integer, com.google.protobuf.ByteString> map =
            internalGetMapInt32Bytes().getMap();
        if (!map.containsKey(key)) {
          throw new java.lang.IllegalArgumentException();
        }
        return map.get(key);
      }

      public Builder clearMapInt32Bytes() {
        internalGetMutableMapInt32Bytes().getMutableMap()
            .clear();
        return this;
      }
      /**
       * <code>map&lt;int32, bytes&gt; map_int32_bytes = 15;</code>
       */

      public Builder removeMapInt32Bytes(
          int key) {
        
        internalGetMutableMapInt32Bytes().getMutableMap()
            .remove(key);
        return this;
      }
      /**
       * Use alternate mutation accessors instead.
       */
      @java.lang.Deprecated
      public java.util.Map<java.lang.Integer, com.google.protobuf.ByteString>
      getMutableMapInt32Bytes() {
        return internalGetMutableMapInt32Bytes().getMutableMap();
      }
      /**
       * <code>map&lt;int32, bytes&gt; map_int32_bytes = 15;</code>
       */
      public Builder putMapInt32Bytes(
          int key,
          com.google.protobuf.ByteString value) {
        
        if (value == null) {
  throw new NullPointerException("map value");
}

        internalGetMutableMapInt32Bytes().getMutableMap()
            .put(key, value);
        return this;
      }
      /**
       * <code>map&lt;int32, bytes&gt; map_int32_bytes = 15;</code>
       */

      public Builder putAllMapInt32Bytes(
          java.util.Map<java.lang.Integer, com.google.protobuf.ByteString> values) {
        internalGetMutableMapInt32Bytes().getMutableMap()
            .putAll(values);
        return this;
      }

      private com.google.protobuf.MapField<
          java.lang.Integer, java.lang.Integer> mapInt32Enum_;
      private com.google.protobuf.MapField<java.lang.Integer, java.lang.Integer>
      internalGetMapInt32Enum() {
        if (mapInt32Enum_ == null) {
          return com.google.protobuf.MapField.emptyMapField(
              MapInt32EnumDefaultEntryHolder.defaultEntry);
        }
        return mapInt32Enum_;
      }
      private com.google.protobuf.MapField<java.lang.Integer, java.lang.Integer>
      internalGetMutableMapInt32Enum() {
        onChanged();;
        if (mapInt32Enum_ == null) {
          mapInt32Enum_ = com.google.protobuf.MapField.newMapField(
              MapInt32EnumDefaultEntryHolder.defaultEntry);
        }
        if (!mapInt32Enum_.isMutable()) {
          mapInt32Enum_ = mapInt32Enum_.copy();
        }
        return mapInt32Enum_;
      }

      public int getMapInt32EnumCount() {
        return internalGetMapInt32Enum().getMap().size();
      }
      /**
       * <code>map&lt;int32, .protobuf_unittest.MapEnumLite&gt; map_int32_enum = 16;</code>
       */

      @java.lang.Override
      public boolean containsMapInt32Enum(
          int key) {
        
        return internalGetMapInt32Enum().getMap().containsKey(key);
      }
      /**
       * Use {@link #getMapInt32EnumMap()} instead.
       */
      @java.lang.Override
      @java.lang.Deprecated
      public java.util.Map<java.lang.Integer, protobuf_unittest.MapLiteUnittest.MapEnumLite>
      getMapInt32Enum() {
        return getMapInt32EnumMap();
      }
      /**
       * <code>map&lt;int32, .protobuf_unittest.MapEnumLite&gt; map_int32_enum = 16;</code>
       */
      @java.lang.Override

      public java.util.Map<java.lang.Integer, protobuf_unittest.MapLiteUnittest.MapEnumLite>
      getMapInt32EnumMap() {
        return internalGetAdaptedMapInt32EnumMap(
            internalGetMapInt32Enum().getMap());}
      /**
       * <code>map&lt;int32, .protobuf_unittest.MapEnumLite&gt; map_int32_enum = 16;</code>
       */
      @java.lang.Override

      public /* nullable */
protobuf_unittest.MapLiteUnittest.MapEnumLite getMapInt32EnumOrDefault(
          int key,
          /* nullable */
protobuf_unittest.MapLiteUnittest.MapEnumLite defaultValue) {
        
        java.util.Map<java.lang.Integer, java.lang.Integer> map =
            internalGetMapInt32Enum().getMap();
        return map.containsKey(key)
               ? mapInt32EnumValueConverter.doForward(map.get(key))
               : defaultValue;
      }
      /**
       * <code>map&lt;int32, .protobuf_unittest.MapEnumLite&gt; map_int32_enum = 16;</code>
       */
      @java.lang.Override

      public protobuf_unittest.MapLiteUnittest.MapEnumLite getMapInt32EnumOrThrow(
          int key) {
        
        java.util.Map<java.lang.Integer, java.lang.Integer> map =
            internalGetMapInt32Enum().getMap();
        if (!map.containsKey(key)) {
          throw new java.lang.IllegalArgumentException();
        }
        return mapInt32EnumValueConverter.doForward(map.get(key));
      }

      public Builder clearMapInt32Enum() {
        internalGetMutableMapInt32Enum().getMutableMap()
            .clear();
        return this;
      }
      /**
       * <code>map&lt;int32, .protobuf_unittest.MapEnumLite&gt; map_int32_enum = 16;</code>
       */

      public Builder removeMapInt32Enum(
          int key) {
        
        internalGetMutableMapInt32Enum().getMutableMap()
            .remove(key);
        return this;
      }
      /**
       * Use alternate mutation accessors instead.
       */
      @java.lang.Deprecated
      public java.util.Map<java.lang.Integer, protobuf_unittest.MapLiteUnittest.MapEnumLite>
      getMutableMapInt32Enum() {
        return internalGetAdaptedMapInt32EnumMap(
             internalGetMutableMapInt32Enum().getMutableMap());
      }
      /**
       * <code>map&lt;int32, .protobuf_unittest.MapEnumLite&gt; map_int32_enum = 16;</code>
       */
      public Builder putMapInt32Enum(
          int key,
          protobuf_unittest.MapLiteUnittest.MapEnumLite value) {
        
        
        internalGetMutableMapInt32Enum().getMutableMap()
            .put(key, mapInt32EnumValueConverter.doBackward(value));
        return this;
      }
      /**
       * <code>map&lt;int32, .protobuf_unittest.MapEnumLite&gt; map_int32_enum = 16;</code>
       */
      public Builder putAllMapInt32Enum(
          java.util.Map<java.lang.Integer, protobuf_unittest.MapLiteUnittest.MapEnumLite> values) {
        internalGetAdaptedMapInt32EnumMap(
            internalGetMutableMapInt32Enum().getMutableMap())
                .putAll(values);
        return this;
      }

      private com.google.protobuf.MapField<
          java.lang.Integer, protobuf_unittest.MapLiteUnittest.ForeignMessageArenaLite> mapInt32ForeignMessage_;
      private com.google.protobuf.MapField<java.lang.Integer, protobuf_unittest.MapLiteUnittest.ForeignMessageArenaLite>
      internalGetMapInt32ForeignMessage() {
        if (mapInt32ForeignMessage_ == null) {
          return com.google.protobuf.MapField.emptyMapField(
              MapInt32ForeignMessageDefaultEntryHolder.defaultEntry);
        }
        return mapInt32ForeignMessage_;
      }
      private com.google.protobuf.MapField<java.lang.Integer, protobuf_unittest.MapLiteUnittest.ForeignMessageArenaLite>
      internalGetMutableMapInt32ForeignMessage() {
        onChanged();;
        if (mapInt32ForeignMessage_ == null) {
          mapInt32ForeignMessage_ = com.google.protobuf.MapField.newMapField(
              MapInt32ForeignMessageDefaultEntryHolder.defaultEntry);
        }
        if (!mapInt32ForeignMessage_.isMutable()) {
          mapInt32ForeignMessage_ = mapInt32ForeignMessage_.copy();
        }
        return mapInt32ForeignMessage_;
      }

      public int getMapInt32ForeignMessageCount() {
        return internalGetMapInt32ForeignMessage().getMap().size();
      }
      /**
       * <code>map&lt;int32, .protobuf_unittest.ForeignMessageArenaLite&gt; map_int32_foreign_message = 17;</code>
       */

      @java.lang.Override
      public boolean containsMapInt32ForeignMessage(
          int key) {
        
        return internalGetMapInt32ForeignMessage().getMap().containsKey(key);
      }
      /**
       * Use {@link #getMapInt32ForeignMessageMap()} instead.
       */
      @java.lang.Override
      @java.lang.Deprecated
      public java.util.Map<java.lang.Integer, protobuf_unittest.MapLiteUnittest.ForeignMessageArenaLite> getMapInt32ForeignMessage() {
        return getMapInt32ForeignMessageMap();
      }
      /**
       * <code>map&lt;int32, .protobuf_unittest.ForeignMessageArenaLite&gt; map_int32_foreign_message = 17;</code>
       */
      @java.lang.Override

      public java.util.Map<java.lang.Integer, protobuf_unittest.MapLiteUnittest.ForeignMessageArenaLite> getMapInt32ForeignMessageMap() {
        return internalGetMapInt32ForeignMessage().getMap();
      }
      /**
       * <code>map&lt;int32, .protobuf_unittest.ForeignMessageArenaLite&gt; map_int32_foreign_message = 17;</code>
       */
      @java.lang.Override

      public protobuf_unittest.MapLiteUnittest.ForeignMessageArenaLite getMapInt32ForeignMessageOrDefault(
          int key,
          protobuf_unittest.MapLiteUnittest.ForeignMessageArenaLite defaultValue) {
        
        java.util.Map<java.lang.Integer, protobuf_unittest.MapLiteUnittest.ForeignMessageArenaLite> map =
            internalGetMapInt32ForeignMessage().getMap();
        return map.containsKey(key) ? map.get(key) : defaultValue;
      }
      /**
       * <code>map&lt;int32, .protobuf_unittest.ForeignMessageArenaLite&gt; map_int32_foreign_message = 17;</code>
       */
      @java.lang.Override

      public protobuf_unittest.MapLiteUnittest.ForeignMessageArenaLite getMapInt32ForeignMessageOrThrow(
          int key) {
        
        java.util.Map<java.lang.Integer, protobuf_unittest.MapLiteUnittest.ForeignMessageArenaLite> map =
            internalGetMapInt32ForeignMessage().getMap();
        if (!map.containsKey(key)) {
          throw new java.lang.IllegalArgumentException();
        }
        return map.get(key);
      }

      public Builder clearMapInt32ForeignMessage() {
        internalGetMutableMapInt32ForeignMessage().getMutableMap()
            .clear();
        return this;
      }
      /**
       * <code>map&lt;int32, .protobuf_unittest.ForeignMessageArenaLite&gt; map_int32_foreign_message = 17;</code>
       */

      public Builder removeMapInt32ForeignMessage(
          int key) {
        
        internalGetMutableMapInt32ForeignMessage().getMutableMap()
            .remove(key);
        return this;
      }
      /**
       * Use alternate mutation accessors instead.
       */
      @java.lang.Deprecated
      public java.util.Map<java.lang.Integer, protobuf_unittest.MapLiteUnittest.ForeignMessageArenaLite>
      getMutableMapInt32ForeignMessage() {
        return internalGetMutableMapInt32ForeignMessage().getMutableMap();
      }
      /**
       * <code>map&lt;int32, .protobuf_unittest.ForeignMessageArenaLite&gt; map_int32_foreign_message = 17;</code>
       */
      public Builder putMapInt32ForeignMessage(
          int key,
          protobuf_unittest.MapLiteUnittest.ForeignMessageArenaLite value) {
        
        if (value == null) {
  throw new NullPointerException("map value");
}

        internalGetMutableMapInt32ForeignMessage().getMutableMap()
            .put(key, value);
        return this;
      }
      /**
       * <code>map&lt;int32, .protobuf_unittest.ForeignMessageArenaLite&gt; map_int32_foreign_message = 17;</code>
       */

      public Builder putAllMapInt32ForeignMessage(
          java.util.Map<java.lang.Integer, protobuf_unittest.MapLiteUnittest.ForeignMessageArenaLite> values) {
        internalGetMutableMapInt32ForeignMessage().getMutableMap()
            .putAll(values);
        return this;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:protobuf_unittest.TestArenaMapLite)
    }

    // @@protoc_insertion_point(class_scope:protobuf_unittest.TestArenaMapLite)
    private static final protobuf_unittest.MapLiteUnittest.TestArenaMapLite DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new protobuf_unittest.MapLiteUnittest.TestArenaMapLite();
    }

    public static protobuf_unittest.MapLiteUnittest.TestArenaMapLite getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    @java.lang.Deprecated public static final com.google.protobuf.Parser<TestArenaMapLite>
        PARSER = new com.google.protobuf.AbstractParser<TestArenaMapLite>() {
      @java.lang.Override
      public TestArenaMapLite parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new TestArenaMapLite(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<TestArenaMapLite> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<TestArenaMapLite> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public protobuf_unittest.MapLiteUnittest.TestArenaMapLite getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface TestRequiredMessageMapLiteOrBuilder extends
      // @@protoc_insertion_point(interface_extends:protobuf_unittest.TestRequiredMessageMapLite)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>map&lt;int32, .protobuf_unittest.TestRequiredLite&gt; map_field = 1;</code>
     */
    int getMapFieldCount();
    /**
     * <code>map&lt;int32, .protobuf_unittest.TestRequiredLite&gt; map_field = 1;</code>
     */
    boolean containsMapField(
        int key);
    /**
     * Use {@link #getMapFieldMap()} instead.
     */
    @java.lang.Deprecated
    java.util.Map<java.lang.Integer, protobuf_unittest.MapLiteUnittest.TestRequiredLite>
    getMapField();
    /**
     * <code>map&lt;int32, .protobuf_unittest.TestRequiredLite&gt; map_field = 1;</code>
     */
    java.util.Map<java.lang.Integer, protobuf_unittest.MapLiteUnittest.TestRequiredLite>
    getMapFieldMap();
    /**
     * <code>map&lt;int32, .protobuf_unittest.TestRequiredLite&gt; map_field = 1;</code>
     */

    /* nullable */
protobuf_unittest.MapLiteUnittest.TestRequiredLite getMapFieldOrDefault(
        int key,
        /* nullable */
protobuf_unittest.MapLiteUnittest.TestRequiredLite defaultValue);
    /**
     * <code>map&lt;int32, .protobuf_unittest.TestRequiredLite&gt; map_field = 1;</code>
     */

    protobuf_unittest.MapLiteUnittest.TestRequiredLite getMapFieldOrThrow(
        int key);
  }
  /**
   * <pre>
   * Test embedded message with required fields
   * </pre>
   *
   * Protobuf type {@code protobuf_unittest.TestRequiredMessageMapLite}
   */
  public static final class TestRequiredMessageMapLite extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:protobuf_unittest.TestRequiredMessageMapLite)
      TestRequiredMessageMapLiteOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use TestRequiredMessageMapLite.newBuilder() to construct.
    private TestRequiredMessageMapLite(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private TestRequiredMessageMapLite() {
    }

    @java.lang.Override
    @SuppressWarnings({"unused"})
    protected java.lang.Object newInstance(
        UnusedPrivateParameter unused) {
      return new TestRequiredMessageMapLite();
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private TestRequiredMessageMapLite(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 10: {
              if (!((mutable_bitField0_ & 0x00000001) != 0)) {
                mapField_ = com.google.protobuf.MapField.newMapField(
                    MapFieldDefaultEntryHolder.defaultEntry);
                mutable_bitField0_ |= 0x00000001;
              }
              com.google.protobuf.MapEntry<java.lang.Integer, protobuf_unittest.MapLiteUnittest.TestRequiredLite>
              mapField__ = input.readMessage(
                  MapFieldDefaultEntryHolder.defaultEntry.getParserForType(), extensionRegistry);
              mapField_.getMutableMap().put(
                  mapField__.getKey(), mapField__.getValue());
              break;
            }
            default: {
              if (!parseUnknownField(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (com.google.protobuf.UninitializedMessageException e) {
        throw e.asInvalidProtocolBufferException().setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return protobuf_unittest.MapLiteUnittest.internal_static_protobuf_unittest_TestRequiredMessageMapLite_descriptor;
    }

    @SuppressWarnings({"rawtypes"})
    @java.lang.Override
    protected com.google.protobuf.MapField internalGetMapField(
        int number) {
      switch (number) {
        case 1:
          return internalGetMapField();
        default:
          throw new RuntimeException(
              "Invalid map field number: " + number);
      }
    }
    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return protobuf_unittest.MapLiteUnittest.internal_static_protobuf_unittest_TestRequiredMessageMapLite_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              protobuf_unittest.MapLiteUnittest.TestRequiredMessageMapLite.class, protobuf_unittest.MapLiteUnittest.TestRequiredMessageMapLite.Builder.class);
    }

    public static final int MAP_FIELD_FIELD_NUMBER = 1;
    private static final class MapFieldDefaultEntryHolder {
      static final com.google.protobuf.MapEntry<
          java.lang.Integer, protobuf_unittest.MapLiteUnittest.TestRequiredLite> defaultEntry =
              com.google.protobuf.MapEntry
              .<java.lang.Integer, protobuf_unittest.MapLiteUnittest.TestRequiredLite>newDefaultInstance(
                  protobuf_unittest.MapLiteUnittest.internal_static_protobuf_unittest_TestRequiredMessageMapLite_MapFieldEntry_descriptor, 
                  com.google.protobuf.WireFormat.FieldType.INT32,
                  0,
                  com.google.protobuf.WireFormat.FieldType.MESSAGE,
                  protobuf_unittest.MapLiteUnittest.TestRequiredLite.getDefaultInstance());
    }
    private com.google.protobuf.MapField<
        java.lang.Integer, protobuf_unittest.MapLiteUnittest.TestRequiredLite> mapField_;
    private com.google.protobuf.MapField<java.lang.Integer, protobuf_unittest.MapLiteUnittest.TestRequiredLite>
    internalGetMapField() {
      if (mapField_ == null) {
        return com.google.protobuf.MapField.emptyMapField(
            MapFieldDefaultEntryHolder.defaultEntry);
      }
      return mapField_;
    }

    public int getMapFieldCount() {
      return internalGetMapField().getMap().size();
    }
    /**
     * <code>map&lt;int32, .protobuf_unittest.TestRequiredLite&gt; map_field = 1;</code>
     */

    @java.lang.Override
    public boolean containsMapField(
        int key) {
      
      return internalGetMapField().getMap().containsKey(key);
    }
    /**
     * Use {@link #getMapFieldMap()} instead.
     */
    @java.lang.Override
    @java.lang.Deprecated
    public java.util.Map<java.lang.Integer, protobuf_unittest.MapLiteUnittest.TestRequiredLite> getMapField() {
      return getMapFieldMap();
    }
    /**
     * <code>map&lt;int32, .protobuf_unittest.TestRequiredLite&gt; map_field = 1;</code>
     */
    @java.lang.Override

    public java.util.Map<java.lang.Integer, protobuf_unittest.MapLiteUnittest.TestRequiredLite> getMapFieldMap() {
      return internalGetMapField().getMap();
    }
    /**
     * <code>map&lt;int32, .protobuf_unittest.TestRequiredLite&gt; map_field = 1;</code>
     */
    @java.lang.Override

    public protobuf_unittest.MapLiteUnittest.TestRequiredLite getMapFieldOrDefault(
        int key,
        protobuf_unittest.MapLiteUnittest.TestRequiredLite defaultValue) {
      
      java.util.Map<java.lang.Integer, protobuf_unittest.MapLiteUnittest.TestRequiredLite> map =
          internalGetMapField().getMap();
      return map.containsKey(key) ? map.get(key) : defaultValue;
    }
    /**
     * <code>map&lt;int32, .protobuf_unittest.TestRequiredLite&gt; map_field = 1;</code>
     */
    @java.lang.Override

    public protobuf_unittest.MapLiteUnittest.TestRequiredLite getMapFieldOrThrow(
        int key) {
      
      java.util.Map<java.lang.Integer, protobuf_unittest.MapLiteUnittest.TestRequiredLite> map =
          internalGetMapField().getMap();
      if (!map.containsKey(key)) {
        throw new java.lang.IllegalArgumentException();
      }
      return map.get(key);
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      for (protobuf_unittest.MapLiteUnittest.TestRequiredLite item : getMapFieldMap().values()) {
        if (!item.isInitialized()) {
          memoizedIsInitialized = 0;
          return false;
        }
      }
      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      com.google.protobuf.GeneratedMessageV3
        .serializeIntegerMapTo(
          output,
          internalGetMapField(),
          MapFieldDefaultEntryHolder.defaultEntry,
          1);
      unknownFields.writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      for (java.util.Map.Entry<java.lang.Integer, protobuf_unittest.MapLiteUnittest.TestRequiredLite> entry
           : internalGetMapField().getMap().entrySet()) {
        com.google.protobuf.MapEntry<java.lang.Integer, protobuf_unittest.MapLiteUnittest.TestRequiredLite>
        mapField__ = MapFieldDefaultEntryHolder.defaultEntry.newBuilderForType()
            .setKey(entry.getKey())
            .setValue(entry.getValue())
            .build();
        size += com.google.protobuf.CodedOutputStream
            .computeMessageSize(1, mapField__);
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof protobuf_unittest.MapLiteUnittest.TestRequiredMessageMapLite)) {
        return super.equals(obj);
      }
      protobuf_unittest.MapLiteUnittest.TestRequiredMessageMapLite other = (protobuf_unittest.MapLiteUnittest.TestRequiredMessageMapLite) obj;

      if (!internalGetMapField().equals(
          other.internalGetMapField())) return false;
      if (!unknownFields.equals(other.unknownFields)) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      if (!internalGetMapField().getMap().isEmpty()) {
        hash = (37 * hash) + MAP_FIELD_FIELD_NUMBER;
        hash = (53 * hash) + internalGetMapField().hashCode();
      }
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static protobuf_unittest.MapLiteUnittest.TestRequiredMessageMapLite parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static protobuf_unittest.MapLiteUnittest.TestRequiredMessageMapLite parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static protobuf_unittest.MapLiteUnittest.TestRequiredMessageMapLite parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static protobuf_unittest.MapLiteUnittest.TestRequiredMessageMapLite parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static protobuf_unittest.MapLiteUnittest.TestRequiredMessageMapLite parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static protobuf_unittest.MapLiteUnittest.TestRequiredMessageMapLite parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static protobuf_unittest.MapLiteUnittest.TestRequiredMessageMapLite parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static protobuf_unittest.MapLiteUnittest.TestRequiredMessageMapLite parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static protobuf_unittest.MapLiteUnittest.TestRequiredMessageMapLite parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static protobuf_unittest.MapLiteUnittest.TestRequiredMessageMapLite parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static protobuf_unittest.MapLiteUnittest.TestRequiredMessageMapLite parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static protobuf_unittest.MapLiteUnittest.TestRequiredMessageMapLite parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(protobuf_unittest.MapLiteUnittest.TestRequiredMessageMapLite prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * <pre>
     * Test embedded message with required fields
     * </pre>
     *
     * Protobuf type {@code protobuf_unittest.TestRequiredMessageMapLite}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:protobuf_unittest.TestRequiredMessageMapLite)
        protobuf_unittest.MapLiteUnittest.TestRequiredMessageMapLiteOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return protobuf_unittest.MapLiteUnittest.internal_static_protobuf_unittest_TestRequiredMessageMapLite_descriptor;
      }

      @SuppressWarnings({"rawtypes"})
      protected com.google.protobuf.MapField internalGetMapField(
          int number) {
        switch (number) {
          case 1:
            return internalGetMapField();
          default:
            throw new RuntimeException(
                "Invalid map field number: " + number);
        }
      }
      @SuppressWarnings({"rawtypes"})
      protected com.google.protobuf.MapField internalGetMutableMapField(
          int number) {
        switch (number) {
          case 1:
            return internalGetMutableMapField();
          default:
            throw new RuntimeException(
                "Invalid map field number: " + number);
        }
      }
      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return protobuf_unittest.MapLiteUnittest.internal_static_protobuf_unittest_TestRequiredMessageMapLite_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                protobuf_unittest.MapLiteUnittest.TestRequiredMessageMapLite.class, protobuf_unittest.MapLiteUnittest.TestRequiredMessageMapLite.Builder.class);
      }

      // Construct using protobuf_unittest.MapLiteUnittest.TestRequiredMessageMapLite.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        internalGetMutableMapField().clear();
        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return protobuf_unittest.MapLiteUnittest.internal_static_protobuf_unittest_TestRequiredMessageMapLite_descriptor;
      }

      @java.lang.Override
      public protobuf_unittest.MapLiteUnittest.TestRequiredMessageMapLite getDefaultInstanceForType() {
        return protobuf_unittest.MapLiteUnittest.TestRequiredMessageMapLite.getDefaultInstance();
      }

      @java.lang.Override
      public protobuf_unittest.MapLiteUnittest.TestRequiredMessageMapLite build() {
        protobuf_unittest.MapLiteUnittest.TestRequiredMessageMapLite result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public protobuf_unittest.MapLiteUnittest.TestRequiredMessageMapLite buildPartial() {
        protobuf_unittest.MapLiteUnittest.TestRequiredMessageMapLite result = new protobuf_unittest.MapLiteUnittest.TestRequiredMessageMapLite(this);
        int from_bitField0_ = bitField0_;
        result.mapField_ = internalGetMapField();
        result.mapField_.makeImmutable();
        onBuilt();
        return result;
      }

      @java.lang.Override
      public Builder clone() {
        return super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof protobuf_unittest.MapLiteUnittest.TestRequiredMessageMapLite) {
          return mergeFrom((protobuf_unittest.MapLiteUnittest.TestRequiredMessageMapLite)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(protobuf_unittest.MapLiteUnittest.TestRequiredMessageMapLite other) {
        if (other == protobuf_unittest.MapLiteUnittest.TestRequiredMessageMapLite.getDefaultInstance()) return this;
        internalGetMutableMapField().mergeFrom(
            other.internalGetMapField());
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        for (protobuf_unittest.MapLiteUnittest.TestRequiredLite item : getMapFieldMap().values()) {
          if (!item.isInitialized()) {
            return false;
          }
        }
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        protobuf_unittest.MapLiteUnittest.TestRequiredMessageMapLite parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (protobuf_unittest.MapLiteUnittest.TestRequiredMessageMapLite) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private com.google.protobuf.MapField<
          java.lang.Integer, protobuf_unittest.MapLiteUnittest.TestRequiredLite> mapField_;
      private com.google.protobuf.MapField<java.lang.Integer, protobuf_unittest.MapLiteUnittest.TestRequiredLite>
      internalGetMapField() {
        if (mapField_ == null) {
          return com.google.protobuf.MapField.emptyMapField(
              MapFieldDefaultEntryHolder.defaultEntry);
        }
        return mapField_;
      }
      private com.google.protobuf.MapField<java.lang.Integer, protobuf_unittest.MapLiteUnittest.TestRequiredLite>
      internalGetMutableMapField() {
        onChanged();;
        if (mapField_ == null) {
          mapField_ = com.google.protobuf.MapField.newMapField(
              MapFieldDefaultEntryHolder.defaultEntry);
        }
        if (!mapField_.isMutable()) {
          mapField_ = mapField_.copy();
        }
        return mapField_;
      }

      public int getMapFieldCount() {
        return internalGetMapField().getMap().size();
      }
      /**
       * <code>map&lt;int32, .protobuf_unittest.TestRequiredLite&gt; map_field = 1;</code>
       */

      @java.lang.Override
      public boolean containsMapField(
          int key) {
        
        return internalGetMapField().getMap().containsKey(key);
      }
      /**
       * Use {@link #getMapFieldMap()} instead.
       */
      @java.lang.Override
      @java.lang.Deprecated
      public java.util.Map<java.lang.Integer, protobuf_unittest.MapLiteUnittest.TestRequiredLite> getMapField() {
        return getMapFieldMap();
      }
      /**
       * <code>map&lt;int32, .protobuf_unittest.TestRequiredLite&gt; map_field = 1;</code>
       */
      @java.lang.Override

      public java.util.Map<java.lang.Integer, protobuf_unittest.MapLiteUnittest.TestRequiredLite> getMapFieldMap() {
        return internalGetMapField().getMap();
      }
      /**
       * <code>map&lt;int32, .protobuf_unittest.TestRequiredLite&gt; map_field = 1;</code>
       */
      @java.lang.Override

      public protobuf_unittest.MapLiteUnittest.TestRequiredLite getMapFieldOrDefault(
          int key,
          protobuf_unittest.MapLiteUnittest.TestRequiredLite defaultValue) {
        
        java.util.Map<java.lang.Integer, protobuf_unittest.MapLiteUnittest.TestRequiredLite> map =
            internalGetMapField().getMap();
        return map.containsKey(key) ? map.get(key) : defaultValue;
      }
      /**
       * <code>map&lt;int32, .protobuf_unittest.TestRequiredLite&gt; map_field = 1;</code>
       */
      @java.lang.Override

      public protobuf_unittest.MapLiteUnittest.TestRequiredLite getMapFieldOrThrow(
          int key) {
        
        java.util.Map<java.lang.Integer, protobuf_unittest.MapLiteUnittest.TestRequiredLite> map =
            internalGetMapField().getMap();
        if (!map.containsKey(key)) {
          throw new java.lang.IllegalArgumentException();
        }
        return map.get(key);
      }

      public Builder clearMapField() {
        internalGetMutableMapField().getMutableMap()
            .clear();
        return this;
      }
      /**
       * <code>map&lt;int32, .protobuf_unittest.TestRequiredLite&gt; map_field = 1;</code>
       */

      public Builder removeMapField(
          int key) {
        
        internalGetMutableMapField().getMutableMap()
            .remove(key);
        return this;
      }
      /**
       * Use alternate mutation accessors instead.
       */
      @java.lang.Deprecated
      public java.util.Map<java.lang.Integer, protobuf_unittest.MapLiteUnittest.TestRequiredLite>
      getMutableMapField() {
        return internalGetMutableMapField().getMutableMap();
      }
      /**
       * <code>map&lt;int32, .protobuf_unittest.TestRequiredLite&gt; map_field = 1;</code>
       */
      public Builder putMapField(
          int key,
          protobuf_unittest.MapLiteUnittest.TestRequiredLite value) {
        
        if (value == null) {
  throw new NullPointerException("map value");
}

        internalGetMutableMapField().getMutableMap()
            .put(key, value);
        return this;
      }
      /**
       * <code>map&lt;int32, .protobuf_unittest.TestRequiredLite&gt; map_field = 1;</code>
       */

      public Builder putAllMapField(
          java.util.Map<java.lang.Integer, protobuf_unittest.MapLiteUnittest.TestRequiredLite> values) {
        internalGetMutableMapField().getMutableMap()
            .putAll(values);
        return this;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:protobuf_unittest.TestRequiredMessageMapLite)
    }

    // @@protoc_insertion_point(class_scope:protobuf_unittest.TestRequiredMessageMapLite)
    private static final protobuf_unittest.MapLiteUnittest.TestRequiredMessageMapLite DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new protobuf_unittest.MapLiteUnittest.TestRequiredMessageMapLite();
    }

    public static protobuf_unittest.MapLiteUnittest.TestRequiredMessageMapLite getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    @java.lang.Deprecated public static final com.google.protobuf.Parser<TestRequiredMessageMapLite>
        PARSER = new com.google.protobuf.AbstractParser<TestRequiredMessageMapLite>() {
      @java.lang.Override
      public TestRequiredMessageMapLite parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new TestRequiredMessageMapLite(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<TestRequiredMessageMapLite> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<TestRequiredMessageMapLite> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public protobuf_unittest.MapLiteUnittest.TestRequiredMessageMapLite getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface TestEnumMapLiteOrBuilder extends
      // @@protoc_insertion_point(interface_extends:protobuf_unittest.TestEnumMapLite)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>map&lt;int32, .protobuf_unittest.Proto2MapEnumLite&gt; known_map_field = 101;</code>
     */
    int getKnownMapFieldCount();
    /**
     * <code>map&lt;int32, .protobuf_unittest.Proto2MapEnumLite&gt; known_map_field = 101;</code>
     */
    boolean containsKnownMapField(
        int key);
    /**
     * Use {@link #getKnownMapFieldMap()} instead.
     */
    @java.lang.Deprecated
    java.util.Map<java.lang.Integer, protobuf_unittest.MapLiteUnittest.Proto2MapEnumLite>
    getKnownMapField();
    /**
     * <code>map&lt;int32, .protobuf_unittest.Proto2MapEnumLite&gt; known_map_field = 101;</code>
     */
    java.util.Map<java.lang.Integer, protobuf_unittest.MapLiteUnittest.Proto2MapEnumLite>
    getKnownMapFieldMap();
    /**
     * <code>map&lt;int32, .protobuf_unittest.Proto2MapEnumLite&gt; known_map_field = 101;</code>
     */
    /* nullable */
protobuf_unittest.MapLiteUnittest.Proto2MapEnumLite getKnownMapFieldOrDefault(
        int key,
        /* nullable */
protobuf_unittest.MapLiteUnittest.Proto2MapEnumLite         defaultValue);
    /**
     * <code>map&lt;int32, .protobuf_unittest.Proto2MapEnumLite&gt; known_map_field = 101;</code>
     */
    protobuf_unittest.MapLiteUnittest.Proto2MapEnumLite getKnownMapFieldOrThrow(
        int key);

    /**
     * <code>map&lt;int32, .protobuf_unittest.Proto2MapEnumLite&gt; unknown_map_field = 102;</code>
     */
    int getUnknownMapFieldCount();
    /**
     * <code>map&lt;int32, .protobuf_unittest.Proto2MapEnumLite&gt; unknown_map_field = 102;</code>
     */
    boolean containsUnknownMapField(
        int key);
    /**
     * Use {@link #getUnknownMapFieldMap()} instead.
     */
    @java.lang.Deprecated
    java.util.Map<java.lang.Integer, protobuf_unittest.MapLiteUnittest.Proto2MapEnumLite>
    getUnknownMapField();
    /**
     * <code>map&lt;int32, .protobuf_unittest.Proto2MapEnumLite&gt; unknown_map_field = 102;</code>
     */
    java.util.Map<java.lang.Integer, protobuf_unittest.MapLiteUnittest.Proto2MapEnumLite>
    getUnknownMapFieldMap();
    /**
     * <code>map&lt;int32, .protobuf_unittest.Proto2MapEnumLite&gt; unknown_map_field = 102;</code>
     */
    /* nullable */
protobuf_unittest.MapLiteUnittest.Proto2MapEnumLite getUnknownMapFieldOrDefault(
        int key,
        /* nullable */
protobuf_unittest.MapLiteUnittest.Proto2MapEnumLite         defaultValue);
    /**
     * <code>map&lt;int32, .protobuf_unittest.Proto2MapEnumLite&gt; unknown_map_field = 102;</code>
     */
    protobuf_unittest.MapLiteUnittest.Proto2MapEnumLite getUnknownMapFieldOrThrow(
        int key);
  }
  /**
   * Protobuf type {@code protobuf_unittest.TestEnumMapLite}
   */
  public static final class TestEnumMapLite extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:protobuf_unittest.TestEnumMapLite)
      TestEnumMapLiteOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use TestEnumMapLite.newBuilder() to construct.
    private TestEnumMapLite(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private TestEnumMapLite() {
    }

    @java.lang.Override
    @SuppressWarnings({"unused"})
    protected java.lang.Object newInstance(
        UnusedPrivateParameter unused) {
      return new TestEnumMapLite();
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private TestEnumMapLite(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 810: {
              if (!((mutable_bitField0_ & 0x00000001) != 0)) {
                knownMapField_ = com.google.protobuf.MapField.newMapField(
                    KnownMapFieldDefaultEntryHolder.defaultEntry);
                mutable_bitField0_ |= 0x00000001;
              }
              com.google.protobuf.ByteString bytes = input.readBytes();
              com.google.protobuf.MapEntry<java.lang.Integer, java.lang.Integer>
              knownMapField__ = KnownMapFieldDefaultEntryHolder.defaultEntry.getParserForType().parseFrom(bytes);
              if (protobuf_unittest.MapLiteUnittest.Proto2MapEnumLite.forNumber(knownMapField__.getValue()) == null) {
                unknownFields.mergeLengthDelimitedField(101, bytes);
              } else {
                knownMapField_.getMutableMap().put(
                    knownMapField__.getKey(), knownMapField__.getValue());
              }
              break;
            }
            case 818: {
              if (!((mutable_bitField0_ & 0x00000002) != 0)) {
                unknownMapField_ = com.google.protobuf.MapField.newMapField(
                    UnknownMapFieldDefaultEntryHolder.defaultEntry);
                mutable_bitField0_ |= 0x00000002;
              }
              com.google.protobuf.ByteString bytes = input.readBytes();
              com.google.protobuf.MapEntry<java.lang.Integer, java.lang.Integer>
              unknownMapField__ = UnknownMapFieldDefaultEntryHolder.defaultEntry.getParserForType().parseFrom(bytes);
              if (protobuf_unittest.MapLiteUnittest.Proto2MapEnumLite.forNumber(unknownMapField__.getValue()) == null) {
                unknownFields.mergeLengthDelimitedField(102, bytes);
              } else {
                unknownMapField_.getMutableMap().put(
                    unknownMapField__.getKey(), unknownMapField__.getValue());
              }
              break;
            }
            default: {
              if (!parseUnknownField(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (com.google.protobuf.UninitializedMessageException e) {
        throw e.asInvalidProtocolBufferException().setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return protobuf_unittest.MapLiteUnittest.internal_static_protobuf_unittest_TestEnumMapLite_descriptor;
    }

    @SuppressWarnings({"rawtypes"})
    @java.lang.Override
    protected com.google.protobuf.MapField internalGetMapField(
        int number) {
      switch (number) {
        case 101:
          return internalGetKnownMapField();
        case 102:
          return internalGetUnknownMapField();
        default:
          throw new RuntimeException(
              "Invalid map field number: " + number);
      }
    }
    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return protobuf_unittest.MapLiteUnittest.internal_static_protobuf_unittest_TestEnumMapLite_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              protobuf_unittest.MapLiteUnittest.TestEnumMapLite.class, protobuf_unittest.MapLiteUnittest.TestEnumMapLite.Builder.class);
    }

    public static final int KNOWN_MAP_FIELD_FIELD_NUMBER = 101;
    private static final class KnownMapFieldDefaultEntryHolder {
      static final com.google.protobuf.MapEntry<
          java.lang.Integer, java.lang.Integer> defaultEntry =
              com.google.protobuf.MapEntry
              .<java.lang.Integer, java.lang.Integer>newDefaultInstance(
                  protobuf_unittest.MapLiteUnittest.internal_static_protobuf_unittest_TestEnumMapLite_KnownMapFieldEntry_descriptor, 
                  com.google.protobuf.WireFormat.FieldType.INT32,
                  0,
                  com.google.protobuf.WireFormat.FieldType.ENUM,
                  protobuf_unittest.MapLiteUnittest.Proto2MapEnumLite.PROTO2_MAP_ENUM_FOO_LITE.getNumber());
    }
    private com.google.protobuf.MapField<
        java.lang.Integer, java.lang.Integer> knownMapField_;
    private com.google.protobuf.MapField<java.lang.Integer, java.lang.Integer>
    internalGetKnownMapField() {
      if (knownMapField_ == null) {
        return com.google.protobuf.MapField.emptyMapField(
            KnownMapFieldDefaultEntryHolder.defaultEntry);
      }
      return knownMapField_;
    }
    private static final
    com.google.protobuf.Internal.MapAdapter.Converter<
        java.lang.Integer, protobuf_unittest.MapLiteUnittest.Proto2MapEnumLite> knownMapFieldValueConverter =
            com.google.protobuf.Internal.MapAdapter.newEnumConverter(
                protobuf_unittest.MapLiteUnittest.Proto2MapEnumLite.internalGetValueMap(),
                protobuf_unittest.MapLiteUnittest.Proto2MapEnumLite.PROTO2_MAP_ENUM_FOO_LITE);
    private static final java.util.Map<java.lang.Integer, protobuf_unittest.MapLiteUnittest.Proto2MapEnumLite>
    internalGetAdaptedKnownMapFieldMap(
        java.util.Map<java.lang.Integer, java.lang.Integer> map) {
      return new com.google.protobuf.Internal.MapAdapter<
          java.lang.Integer, protobuf_unittest.MapLiteUnittest.Proto2MapEnumLite, java.lang.Integer>(
              map, knownMapFieldValueConverter);
    }

    public int getKnownMapFieldCount() {
      return internalGetKnownMapField().getMap().size();
    }
    /**
     * <code>map&lt;int32, .protobuf_unittest.Proto2MapEnumLite&gt; known_map_field = 101;</code>
     */

    @java.lang.Override
    public boolean containsKnownMapField(
        int key) {
      
      return internalGetKnownMapField().getMap().containsKey(key);
    }
    /**
     * Use {@link #getKnownMapFieldMap()} instead.
     */
    @java.lang.Override
    @java.lang.Deprecated
    public java.util.Map<java.lang.Integer, protobuf_unittest.MapLiteUnittest.Proto2MapEnumLite>
    getKnownMapField() {
      return getKnownMapFieldMap();
    }
    /**
     * <code>map&lt;int32, .protobuf_unittest.Proto2MapEnumLite&gt; known_map_field = 101;</code>
     */
    @java.lang.Override

    public java.util.Map<java.lang.Integer, protobuf_unittest.MapLiteUnittest.Proto2MapEnumLite>
    getKnownMapFieldMap() {
      return internalGetAdaptedKnownMapFieldMap(
          internalGetKnownMapField().getMap());}
    /**
     * <code>map&lt;int32, .protobuf_unittest.Proto2MapEnumLite&gt; known_map_field = 101;</code>
     */
    @java.lang.Override

    public /* nullable */
protobuf_unittest.MapLiteUnittest.Proto2MapEnumLite getKnownMapFieldOrDefault(
        int key,
        /* nullable */
protobuf_unittest.MapLiteUnittest.Proto2MapEnumLite defaultValue) {
      
      java.util.Map<java.lang.Integer, java.lang.Integer> map =
          internalGetKnownMapField().getMap();
      return map.containsKey(key)
             ? knownMapFieldValueConverter.doForward(map.get(key))
             : defaultValue;
    }
    /**
     * <code>map&lt;int32, .protobuf_unittest.Proto2MapEnumLite&gt; known_map_field = 101;</code>
     */
    @java.lang.Override

    public protobuf_unittest.MapLiteUnittest.Proto2MapEnumLite getKnownMapFieldOrThrow(
        int key) {
      
      java.util.Map<java.lang.Integer, java.lang.Integer> map =
          internalGetKnownMapField().getMap();
      if (!map.containsKey(key)) {
        throw new java.lang.IllegalArgumentException();
      }
      return knownMapFieldValueConverter.doForward(map.get(key));
    }

    public static final int UNKNOWN_MAP_FIELD_FIELD_NUMBER = 102;
    private static final class UnknownMapFieldDefaultEntryHolder {
      static final com.google.protobuf.MapEntry<
          java.lang.Integer, java.lang.Integer> defaultEntry =
              com.google.protobuf.MapEntry
              .<java.lang.Integer, java.lang.Integer>newDefaultInstance(
                  protobuf_unittest.MapLiteUnittest.internal_static_protobuf_unittest_TestEnumMapLite_UnknownMapFieldEntry_descriptor, 
                  com.google.protobuf.WireFormat.FieldType.INT32,
                  0,
                  com.google.protobuf.WireFormat.FieldType.ENUM,
                  protobuf_unittest.MapLiteUnittest.Proto2MapEnumLite.PROTO2_MAP_ENUM_FOO_LITE.getNumber());
    }
    private com.google.protobuf.MapField<
        java.lang.Integer, java.lang.Integer> unknownMapField_;
    private com.google.protobuf.MapField<java.lang.Integer, java.lang.Integer>
    internalGetUnknownMapField() {
      if (unknownMapField_ == null) {
        return com.google.protobuf.MapField.emptyMapField(
            UnknownMapFieldDefaultEntryHolder.defaultEntry);
      }
      return unknownMapField_;
    }
    private static final
    com.google.protobuf.Internal.MapAdapter.Converter<
        java.lang.Integer, protobuf_unittest.MapLiteUnittest.Proto2MapEnumLite> unknownMapFieldValueConverter =
            com.google.protobuf.Internal.MapAdapter.newEnumConverter(
                protobuf_unittest.MapLiteUnittest.Proto2MapEnumLite.internalGetValueMap(),
                protobuf_unittest.MapLiteUnittest.Proto2MapEnumLite.PROTO2_MAP_ENUM_FOO_LITE);
    private static final java.util.Map<java.lang.Integer, protobuf_unittest.MapLiteUnittest.Proto2MapEnumLite>
    internalGetAdaptedUnknownMapFieldMap(
        java.util.Map<java.lang.Integer, java.lang.Integer> map) {
      return new com.google.protobuf.Internal.MapAdapter<
          java.lang.Integer, protobuf_unittest.MapLiteUnittest.Proto2MapEnumLite, java.lang.Integer>(
              map, unknownMapFieldValueConverter);
    }

    public int getUnknownMapFieldCount() {
      return internalGetUnknownMapField().getMap().size();
    }
    /**
     * <code>map&lt;int32, .protobuf_unittest.Proto2MapEnumLite&gt; unknown_map_field = 102;</code>
     */

    @java.lang.Override
    public boolean containsUnknownMapField(
        int key) {
      
      return internalGetUnknownMapField().getMap().containsKey(key);
    }
    /**
     * Use {@link #getUnknownMapFieldMap()} instead.
     */
    @java.lang.Override
    @java.lang.Deprecated
    public java.util.Map<java.lang.Integer, protobuf_unittest.MapLiteUnittest.Proto2MapEnumLite>
    getUnknownMapField() {
      return getUnknownMapFieldMap();
    }
    /**
     * <code>map&lt;int32, .protobuf_unittest.Proto2MapEnumLite&gt; unknown_map_field = 102;</code>
     */
    @java.lang.Override

    public java.util.Map<java.lang.Integer, protobuf_unittest.MapLiteUnittest.Proto2MapEnumLite>
    getUnknownMapFieldMap() {
      return internalGetAdaptedUnknownMapFieldMap(
          internalGetUnknownMapField().getMap());}
    /**
     * <code>map&lt;int32, .protobuf_unittest.Proto2MapEnumLite&gt; unknown_map_field = 102;</code>
     */
    @java.lang.Override

    public /* nullable */
protobuf_unittest.MapLiteUnittest.Proto2MapEnumLite getUnknownMapFieldOrDefault(
        int key,
        /* nullable */
protobuf_unittest.MapLiteUnittest.Proto2MapEnumLite defaultValue) {
      
      java.util.Map<java.lang.Integer, java.lang.Integer> map =
          internalGetUnknownMapField().getMap();
      return map.containsKey(key)
             ? unknownMapFieldValueConverter.doForward(map.get(key))
             : defaultValue;
    }
    /**
     * <code>map&lt;int32, .protobuf_unittest.Proto2MapEnumLite&gt; unknown_map_field = 102;</code>
     */
    @java.lang.Override

    public protobuf_unittest.MapLiteUnittest.Proto2MapEnumLite getUnknownMapFieldOrThrow(
        int key) {
      
      java.util.Map<java.lang.Integer, java.lang.Integer> map =
          internalGetUnknownMapField().getMap();
      if (!map.containsKey(key)) {
        throw new java.lang.IllegalArgumentException();
      }
      return unknownMapFieldValueConverter.doForward(map.get(key));
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      com.google.protobuf.GeneratedMessageV3
        .serializeIntegerMapTo(
          output,
          internalGetKnownMapField(),
          KnownMapFieldDefaultEntryHolder.defaultEntry,
          101);
      com.google.protobuf.GeneratedMessageV3
        .serializeIntegerMapTo(
          output,
          internalGetUnknownMapField(),
          UnknownMapFieldDefaultEntryHolder.defaultEntry,
          102);
      unknownFields.writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      for (java.util.Map.Entry<java.lang.Integer, java.lang.Integer> entry
           : internalGetKnownMapField().getMap().entrySet()) {
        com.google.protobuf.MapEntry<java.lang.Integer, java.lang.Integer>
        knownMapField__ = KnownMapFieldDefaultEntryHolder.defaultEntry.newBuilderForType()
            .setKey(entry.getKey())
            .setValue(entry.getValue())
            .build();
        size += com.google.protobuf.CodedOutputStream
            .computeMessageSize(101, knownMapField__);
      }
      for (java.util.Map.Entry<java.lang.Integer, java.lang.Integer> entry
           : internalGetUnknownMapField().getMap().entrySet()) {
        com.google.protobuf.MapEntry<java.lang.Integer, java.lang.Integer>
        unknownMapField__ = UnknownMapFieldDefaultEntryHolder.defaultEntry.newBuilderForType()
            .setKey(entry.getKey())
            .setValue(entry.getValue())
            .build();
        size += com.google.protobuf.CodedOutputStream
            .computeMessageSize(102, unknownMapField__);
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof protobuf_unittest.MapLiteUnittest.TestEnumMapLite)) {
        return super.equals(obj);
      }
      protobuf_unittest.MapLiteUnittest.TestEnumMapLite other = (protobuf_unittest.MapLiteUnittest.TestEnumMapLite) obj;

      if (!internalGetKnownMapField().equals(
          other.internalGetKnownMapField())) return false;
      if (!internalGetUnknownMapField().equals(
          other.internalGetUnknownMapField())) return false;
      if (!unknownFields.equals(other.unknownFields)) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      if (!internalGetKnownMapField().getMap().isEmpty()) {
        hash = (37 * hash) + KNOWN_MAP_FIELD_FIELD_NUMBER;
        hash = (53 * hash) + internalGetKnownMapField().hashCode();
      }
      if (!internalGetUnknownMapField().getMap().isEmpty()) {
        hash = (37 * hash) + UNKNOWN_MAP_FIELD_FIELD_NUMBER;
        hash = (53 * hash) + internalGetUnknownMapField().hashCode();
      }
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static protobuf_unittest.MapLiteUnittest.TestEnumMapLite parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static protobuf_unittest.MapLiteUnittest.TestEnumMapLite parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static protobuf_unittest.MapLiteUnittest.TestEnumMapLite parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static protobuf_unittest.MapLiteUnittest.TestEnumMapLite parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static protobuf_unittest.MapLiteUnittest.TestEnumMapLite parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static protobuf_unittest.MapLiteUnittest.TestEnumMapLite parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static protobuf_unittest.MapLiteUnittest.TestEnumMapLite parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static protobuf_unittest.MapLiteUnittest.TestEnumMapLite parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static protobuf_unittest.MapLiteUnittest.TestEnumMapLite parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static protobuf_unittest.MapLiteUnittest.TestEnumMapLite parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static protobuf_unittest.MapLiteUnittest.TestEnumMapLite parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static protobuf_unittest.MapLiteUnittest.TestEnumMapLite parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(protobuf_unittest.MapLiteUnittest.TestEnumMapLite prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code protobuf_unittest.TestEnumMapLite}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:protobuf_unittest.TestEnumMapLite)
        protobuf_unittest.MapLiteUnittest.TestEnumMapLiteOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return protobuf_unittest.MapLiteUnittest.internal_static_protobuf_unittest_TestEnumMapLite_descriptor;
      }

      @SuppressWarnings({"rawtypes"})
      protected com.google.protobuf.MapField internalGetMapField(
          int number) {
        switch (number) {
          case 101:
            return internalGetKnownMapField();
          case 102:
            return internalGetUnknownMapField();
          default:
            throw new RuntimeException(
                "Invalid map field number: " + number);
        }
      }
      @SuppressWarnings({"rawtypes"})
      protected com.google.protobuf.MapField internalGetMutableMapField(
          int number) {
        switch (number) {
          case 101:
            return internalGetMutableKnownMapField();
          case 102:
            return internalGetMutableUnknownMapField();
          default:
            throw new RuntimeException(
                "Invalid map field number: " + number);
        }
      }
      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return protobuf_unittest.MapLiteUnittest.internal_static_protobuf_unittest_TestEnumMapLite_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                protobuf_unittest.MapLiteUnittest.TestEnumMapLite.class, protobuf_unittest.MapLiteUnittest.TestEnumMapLite.Builder.class);
      }

      // Construct using protobuf_unittest.MapLiteUnittest.TestEnumMapLite.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        internalGetMutableKnownMapField().clear();
        internalGetMutableUnknownMapField().clear();
        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return protobuf_unittest.MapLiteUnittest.internal_static_protobuf_unittest_TestEnumMapLite_descriptor;
      }

      @java.lang.Override
      public protobuf_unittest.MapLiteUnittest.TestEnumMapLite getDefaultInstanceForType() {
        return protobuf_unittest.MapLiteUnittest.TestEnumMapLite.getDefaultInstance();
      }

      @java.lang.Override
      public protobuf_unittest.MapLiteUnittest.TestEnumMapLite build() {
        protobuf_unittest.MapLiteUnittest.TestEnumMapLite result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public protobuf_unittest.MapLiteUnittest.TestEnumMapLite buildPartial() {
        protobuf_unittest.MapLiteUnittest.TestEnumMapLite result = new protobuf_unittest.MapLiteUnittest.TestEnumMapLite(this);
        int from_bitField0_ = bitField0_;
        result.knownMapField_ = internalGetKnownMapField();
        result.knownMapField_.makeImmutable();
        result.unknownMapField_ = internalGetUnknownMapField();
        result.unknownMapField_.makeImmutable();
        onBuilt();
        return result;
      }

      @java.lang.Override
      public Builder clone() {
        return super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof protobuf_unittest.MapLiteUnittest.TestEnumMapLite) {
          return mergeFrom((protobuf_unittest.MapLiteUnittest.TestEnumMapLite)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(protobuf_unittest.MapLiteUnittest.TestEnumMapLite other) {
        if (other == protobuf_unittest.MapLiteUnittest.TestEnumMapLite.getDefaultInstance()) return this;
        internalGetMutableKnownMapField().mergeFrom(
            other.internalGetKnownMapField());
        internalGetMutableUnknownMapField().mergeFrom(
            other.internalGetUnknownMapField());
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        protobuf_unittest.MapLiteUnittest.TestEnumMapLite parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (protobuf_unittest.MapLiteUnittest.TestEnumMapLite) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private com.google.protobuf.MapField<
          java.lang.Integer, java.lang.Integer> knownMapField_;
      private com.google.protobuf.MapField<java.lang.Integer, java.lang.Integer>
      internalGetKnownMapField() {
        if (knownMapField_ == null) {
          return com.google.protobuf.MapField.emptyMapField(
              KnownMapFieldDefaultEntryHolder.defaultEntry);
        }
        return knownMapField_;
      }
      private com.google.protobuf.MapField<java.lang.Integer, java.lang.Integer>
      internalGetMutableKnownMapField() {
        onChanged();;
        if (knownMapField_ == null) {
          knownMapField_ = com.google.protobuf.MapField.newMapField(
              KnownMapFieldDefaultEntryHolder.defaultEntry);
        }
        if (!knownMapField_.isMutable()) {
          knownMapField_ = knownMapField_.copy();
        }
        return knownMapField_;
      }

      public int getKnownMapFieldCount() {
        return internalGetKnownMapField().getMap().size();
      }
      /**
       * <code>map&lt;int32, .protobuf_unittest.Proto2MapEnumLite&gt; known_map_field = 101;</code>
       */

      @java.lang.Override
      public boolean containsKnownMapField(
          int key) {
        
        return internalGetKnownMapField().getMap().containsKey(key);
      }
      /**
       * Use {@link #getKnownMapFieldMap()} instead.
       */
      @java.lang.Override
      @java.lang.Deprecated
      public java.util.Map<java.lang.Integer, protobuf_unittest.MapLiteUnittest.Proto2MapEnumLite>
      getKnownMapField() {
        return getKnownMapFieldMap();
      }
      /**
       * <code>map&lt;int32, .protobuf_unittest.Proto2MapEnumLite&gt; known_map_field = 101;</code>
       */
      @java.lang.Override

      public java.util.Map<java.lang.Integer, protobuf_unittest.MapLiteUnittest.Proto2MapEnumLite>
      getKnownMapFieldMap() {
        return internalGetAdaptedKnownMapFieldMap(
            internalGetKnownMapField().getMap());}
      /**
       * <code>map&lt;int32, .protobuf_unittest.Proto2MapEnumLite&gt; known_map_field = 101;</code>
       */
      @java.lang.Override

      public /* nullable */
protobuf_unittest.MapLiteUnittest.Proto2MapEnumLite getKnownMapFieldOrDefault(
          int key,
          /* nullable */
protobuf_unittest.MapLiteUnittest.Proto2MapEnumLite defaultValue) {
        
        java.util.Map<java.lang.Integer, java.lang.Integer> map =
            internalGetKnownMapField().getMap();
        return map.containsKey(key)
               ? knownMapFieldValueConverter.doForward(map.get(key))
               : defaultValue;
      }
      /**
       * <code>map&lt;int32, .protobuf_unittest.Proto2MapEnumLite&gt; known_map_field = 101;</code>
       */
      @java.lang.Override

      public protobuf_unittest.MapLiteUnittest.Proto2MapEnumLite getKnownMapFieldOrThrow(
          int key) {
        
        java.util.Map<java.lang.Integer, java.lang.Integer> map =
            internalGetKnownMapField().getMap();
        if (!map.containsKey(key)) {
          throw new java.lang.IllegalArgumentException();
        }
        return knownMapFieldValueConverter.doForward(map.get(key));
      }

      public Builder clearKnownMapField() {
        internalGetMutableKnownMapField().getMutableMap()
            .clear();
        return this;
      }
      /**
       * <code>map&lt;int32, .protobuf_unittest.Proto2MapEnumLite&gt; known_map_field = 101;</code>
       */

      public Builder removeKnownMapField(
          int key) {
        
        internalGetMutableKnownMapField().getMutableMap()
            .remove(key);
        return this;
      }
      /**
       * Use alternate mutation accessors instead.
       */
      @java.lang.Deprecated
      public java.util.Map<java.lang.Integer, protobuf_unittest.MapLiteUnittest.Proto2MapEnumLite>
      getMutableKnownMapField() {
        return internalGetAdaptedKnownMapFieldMap(
             internalGetMutableKnownMapField().getMutableMap());
      }
      /**
       * <code>map&lt;int32, .protobuf_unittest.Proto2MapEnumLite&gt; known_map_field = 101;</code>
       */
      public Builder putKnownMapField(
          int key,
          protobuf_unittest.MapLiteUnittest.Proto2MapEnumLite value) {
        
        
        internalGetMutableKnownMapField().getMutableMap()
            .put(key, knownMapFieldValueConverter.doBackward(value));
        return this;
      }
      /**
       * <code>map&lt;int32, .protobuf_unittest.Proto2MapEnumLite&gt; known_map_field = 101;</code>
       */
      public Builder putAllKnownMapField(
          java.util.Map<java.lang.Integer, protobuf_unittest.MapLiteUnittest.Proto2MapEnumLite> values) {
        internalGetAdaptedKnownMapFieldMap(
            internalGetMutableKnownMapField().getMutableMap())
                .putAll(values);
        return this;
      }

      private com.google.protobuf.MapField<
          java.lang.Integer, java.lang.Integer> unknownMapField_;
      private com.google.protobuf.MapField<java.lang.Integer, java.lang.Integer>
      internalGetUnknownMapField() {
        if (unknownMapField_ == null) {
          return com.google.protobuf.MapField.emptyMapField(
              UnknownMapFieldDefaultEntryHolder.defaultEntry);
        }
        return unknownMapField_;
      }
      private com.google.protobuf.MapField<java.lang.Integer, java.lang.Integer>
      internalGetMutableUnknownMapField() {
        onChanged();;
        if (unknownMapField_ == null) {
          unknownMapField_ = com.google.protobuf.MapField.newMapField(
              UnknownMapFieldDefaultEntryHolder.defaultEntry);
        }
        if (!unknownMapField_.isMutable()) {
          unknownMapField_ = unknownMapField_.copy();
        }
        return unknownMapField_;
      }

      public int getUnknownMapFieldCount() {
        return internalGetUnknownMapField().getMap().size();
      }
      /**
       * <code>map&lt;int32, .protobuf_unittest.Proto2MapEnumLite&gt; unknown_map_field = 102;</code>
       */

      @java.lang.Override
      public boolean containsUnknownMapField(
          int key) {
        
        return internalGetUnknownMapField().getMap().containsKey(key);
      }
      /**
       * Use {@link #getUnknownMapFieldMap()} instead.
       */
      @java.lang.Override
      @java.lang.Deprecated
      public java.util.Map<java.lang.Integer, protobuf_unittest.MapLiteUnittest.Proto2MapEnumLite>
      getUnknownMapField() {
        return getUnknownMapFieldMap();
      }
      /**
       * <code>map&lt;int32, .protobuf_unittest.Proto2MapEnumLite&gt; unknown_map_field = 102;</code>
       */
      @java.lang.Override

      public java.util.Map<java.lang.Integer, protobuf_unittest.MapLiteUnittest.Proto2MapEnumLite>
      getUnknownMapFieldMap() {
        return internalGetAdaptedUnknownMapFieldMap(
            internalGetUnknownMapField().getMap());}
      /**
       * <code>map&lt;int32, .protobuf_unittest.Proto2MapEnumLite&gt; unknown_map_field = 102;</code>
       */
      @java.lang.Override

      public /* nullable */
protobuf_unittest.MapLiteUnittest.Proto2MapEnumLite getUnknownMapFieldOrDefault(
          int key,
          /* nullable */
protobuf_unittest.MapLiteUnittest.Proto2MapEnumLite defaultValue) {
        
        java.util.Map<java.lang.Integer, java.lang.Integer> map =
            internalGetUnknownMapField().getMap();
        return map.containsKey(key)
               ? unknownMapFieldValueConverter.doForward(map.get(key))
               : defaultValue;
      }
      /**
       * <code>map&lt;int32, .protobuf_unittest.Proto2MapEnumLite&gt; unknown_map_field = 102;</code>
       */
      @java.lang.Override

      public protobuf_unittest.MapLiteUnittest.Proto2MapEnumLite getUnknownMapFieldOrThrow(
          int key) {
        
        java.util.Map<java.lang.Integer, java.lang.Integer> map =
            internalGetUnknownMapField().getMap();
        if (!map.containsKey(key)) {
          throw new java.lang.IllegalArgumentException();
        }
        return unknownMapFieldValueConverter.doForward(map.get(key));
      }

      public Builder clearUnknownMapField() {
        internalGetMutableUnknownMapField().getMutableMap()
            .clear();
        return this;
      }
      /**
       * <code>map&lt;int32, .protobuf_unittest.Proto2MapEnumLite&gt; unknown_map_field = 102;</code>
       */

      public Builder removeUnknownMapField(
          int key) {
        
        internalGetMutableUnknownMapField().getMutableMap()
            .remove(key);
        return this;
      }
      /**
       * Use alternate mutation accessors instead.
       */
      @java.lang.Deprecated
      public java.util.Map<java.lang.Integer, protobuf_unittest.MapLiteUnittest.Proto2MapEnumLite>
      getMutableUnknownMapField() {
        return internalGetAdaptedUnknownMapFieldMap(
             internalGetMutableUnknownMapField().getMutableMap());
      }
      /**
       * <code>map&lt;int32, .protobuf_unittest.Proto2MapEnumLite&gt; unknown_map_field = 102;</code>
       */
      public Builder putUnknownMapField(
          int key,
          protobuf_unittest.MapLiteUnittest.Proto2MapEnumLite value) {
        
        
        internalGetMutableUnknownMapField().getMutableMap()
            .put(key, unknownMapFieldValueConverter.doBackward(value));
        return this;
      }
      /**
       * <code>map&lt;int32, .protobuf_unittest.Proto2MapEnumLite&gt; unknown_map_field = 102;</code>
       */
      public Builder putAllUnknownMapField(
          java.util.Map<java.lang.Integer, protobuf_unittest.MapLiteUnittest.Proto2MapEnumLite> values) {
        internalGetAdaptedUnknownMapFieldMap(
            internalGetMutableUnknownMapField().getMutableMap())
                .putAll(values);
        return this;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:protobuf_unittest.TestEnumMapLite)
    }

    // @@protoc_insertion_point(class_scope:protobuf_unittest.TestEnumMapLite)
    private static final protobuf_unittest.MapLiteUnittest.TestEnumMapLite DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new protobuf_unittest.MapLiteUnittest.TestEnumMapLite();
    }

    public static protobuf_unittest.MapLiteUnittest.TestEnumMapLite getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    @java.lang.Deprecated public static final com.google.protobuf.Parser<TestEnumMapLite>
        PARSER = new com.google.protobuf.AbstractParser<TestEnumMapLite>() {
      @java.lang.Override
      public TestEnumMapLite parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new TestEnumMapLite(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<TestEnumMapLite> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<TestEnumMapLite> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public protobuf_unittest.MapLiteUnittest.TestEnumMapLite getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface TestEnumMapPlusExtraLiteOrBuilder extends
      // @@protoc_insertion_point(interface_extends:protobuf_unittest.TestEnumMapPlusExtraLite)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>map&lt;int32, .protobuf_unittest.Proto2MapEnumPlusExtraLite&gt; known_map_field = 101;</code>
     */
    int getKnownMapFieldCount();
    /**
     * <code>map&lt;int32, .protobuf_unittest.Proto2MapEnumPlusExtraLite&gt; known_map_field = 101;</code>
     */
    boolean containsKnownMapField(
        int key);
    /**
     * Use {@link #getKnownMapFieldMap()} instead.
     */
    @java.lang.Deprecated
    java.util.Map<java.lang.Integer, protobuf_unittest.MapLiteUnittest.Proto2MapEnumPlusExtraLite>
    getKnownMapField();
    /**
     * <code>map&lt;int32, .protobuf_unittest.Proto2MapEnumPlusExtraLite&gt; known_map_field = 101;</code>
     */
    java.util.Map<java.lang.Integer, protobuf_unittest.MapLiteUnittest.Proto2MapEnumPlusExtraLite>
    getKnownMapFieldMap();
    /**
     * <code>map&lt;int32, .protobuf_unittest.Proto2MapEnumPlusExtraLite&gt; known_map_field = 101;</code>
     */
    /* nullable */
protobuf_unittest.MapLiteUnittest.Proto2MapEnumPlusExtraLite getKnownMapFieldOrDefault(
        int key,
        /* nullable */
protobuf_unittest.MapLiteUnittest.Proto2MapEnumPlusExtraLite         defaultValue);
    /**
     * <code>map&lt;int32, .protobuf_unittest.Proto2MapEnumPlusExtraLite&gt; known_map_field = 101;</code>
     */
    protobuf_unittest.MapLiteUnittest.Proto2MapEnumPlusExtraLite getKnownMapFieldOrThrow(
        int key);

    /**
     * <code>map&lt;int32, .protobuf_unittest.Proto2MapEnumPlusExtraLite&gt; unknown_map_field = 102;</code>
     */
    int getUnknownMapFieldCount();
    /**
     * <code>map&lt;int32, .protobuf_unittest.Proto2MapEnumPlusExtraLite&gt; unknown_map_field = 102;</code>
     */
    boolean containsUnknownMapField(
        int key);
    /**
     * Use {@link #getUnknownMapFieldMap()} instead.
     */
    @java.lang.Deprecated
    java.util.Map<java.lang.Integer, protobuf_unittest.MapLiteUnittest.Proto2MapEnumPlusExtraLite>
    getUnknownMapField();
    /**
     * <code>map&lt;int32, .protobuf_unittest.Proto2MapEnumPlusExtraLite&gt; unknown_map_field = 102;</code>
     */
    java.util.Map<java.lang.Integer, protobuf_unittest.MapLiteUnittest.Proto2MapEnumPlusExtraLite>
    getUnknownMapFieldMap();
    /**
     * <code>map&lt;int32, .protobuf_unittest.Proto2MapEnumPlusExtraLite&gt; unknown_map_field = 102;</code>
     */
    /* nullable */
protobuf_unittest.MapLiteUnittest.Proto2MapEnumPlusExtraLite getUnknownMapFieldOrDefault(
        int key,
        /* nullable */
protobuf_unittest.MapLiteUnittest.Proto2MapEnumPlusExtraLite         defaultValue);
    /**
     * <code>map&lt;int32, .protobuf_unittest.Proto2MapEnumPlusExtraLite&gt; unknown_map_field = 102;</code>
     */
    protobuf_unittest.MapLiteUnittest.Proto2MapEnumPlusExtraLite getUnknownMapFieldOrThrow(
        int key);
  }
  /**
   * Protobuf type {@code protobuf_unittest.TestEnumMapPlusExtraLite}
   */
  public static final class TestEnumMapPlusExtraLite extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:protobuf_unittest.TestEnumMapPlusExtraLite)
      TestEnumMapPlusExtraLiteOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use TestEnumMapPlusExtraLite.newBuilder() to construct.
    private TestEnumMapPlusExtraLite(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private TestEnumMapPlusExtraLite() {
    }

    @java.lang.Override
    @SuppressWarnings({"unused"})
    protected java.lang.Object newInstance(
        UnusedPrivateParameter unused) {
      return new TestEnumMapPlusExtraLite();
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private TestEnumMapPlusExtraLite(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 810: {
              if (!((mutable_bitField0_ & 0x00000001) != 0)) {
                knownMapField_ = com.google.protobuf.MapField.newMapField(
                    KnownMapFieldDefaultEntryHolder.defaultEntry);
                mutable_bitField0_ |= 0x00000001;
              }
              com.google.protobuf.ByteString bytes = input.readBytes();
              com.google.protobuf.MapEntry<java.lang.Integer, java.lang.Integer>
              knownMapField__ = KnownMapFieldDefaultEntryHolder.defaultEntry.getParserForType().parseFrom(bytes);
              if (protobuf_unittest.MapLiteUnittest.Proto2MapEnumPlusExtraLite.forNumber(knownMapField__.getValue()) == null) {
                unknownFields.mergeLengthDelimitedField(101, bytes);
              } else {
                knownMapField_.getMutableMap().put(
                    knownMapField__.getKey(), knownMapField__.getValue());
              }
              break;
            }
            case 818: {
              if (!((mutable_bitField0_ & 0x00000002) != 0)) {
                unknownMapField_ = com.google.protobuf.MapField.newMapField(
                    UnknownMapFieldDefaultEntryHolder.defaultEntry);
                mutable_bitField0_ |= 0x00000002;
              }
              com.google.protobuf.ByteString bytes = input.readBytes();
              com.google.protobuf.MapEntry<java.lang.Integer, java.lang.Integer>
              unknownMapField__ = UnknownMapFieldDefaultEntryHolder.defaultEntry.getParserForType().parseFrom(bytes);
              if (protobuf_unittest.MapLiteUnittest.Proto2MapEnumPlusExtraLite.forNumber(unknownMapField__.getValue()) == null) {
                unknownFields.mergeLengthDelimitedField(102, bytes);
              } else {
                unknownMapField_.getMutableMap().put(
                    unknownMapField__.getKey(), unknownMapField__.getValue());
              }
              break;
            }
            default: {
              if (!parseUnknownField(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (com.google.protobuf.UninitializedMessageException e) {
        throw e.asInvalidProtocolBufferException().setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return protobuf_unittest.MapLiteUnittest.internal_static_protobuf_unittest_TestEnumMapPlusExtraLite_descriptor;
    }

    @SuppressWarnings({"rawtypes"})
    @java.lang.Override
    protected com.google.protobuf.MapField internalGetMapField(
        int number) {
      switch (number) {
        case 101:
          return internalGetKnownMapField();
        case 102:
          return internalGetUnknownMapField();
        default:
          throw new RuntimeException(
              "Invalid map field number: " + number);
      }
    }
    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return protobuf_unittest.MapLiteUnittest.internal_static_protobuf_unittest_TestEnumMapPlusExtraLite_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              protobuf_unittest.MapLiteUnittest.TestEnumMapPlusExtraLite.class, protobuf_unittest.MapLiteUnittest.TestEnumMapPlusExtraLite.Builder.class);
    }

    public static final int KNOWN_MAP_FIELD_FIELD_NUMBER = 101;
    private static final class KnownMapFieldDefaultEntryHolder {
      static final com.google.protobuf.MapEntry<
          java.lang.Integer, java.lang.Integer> defaultEntry =
              com.google.protobuf.MapEntry
              .<java.lang.Integer, java.lang.Integer>newDefaultInstance(
                  protobuf_unittest.MapLiteUnittest.internal_static_protobuf_unittest_TestEnumMapPlusExtraLite_KnownMapFieldEntry_descriptor, 
                  com.google.protobuf.WireFormat.FieldType.INT32,
                  0,
                  com.google.protobuf.WireFormat.FieldType.ENUM,
                  protobuf_unittest.MapLiteUnittest.Proto2MapEnumPlusExtraLite.E_PROTO2_MAP_ENUM_FOO_LITE.getNumber());
    }
    private com.google.protobuf.MapField<
        java.lang.Integer, java.lang.Integer> knownMapField_;
    private com.google.protobuf.MapField<java.lang.Integer, java.lang.Integer>
    internalGetKnownMapField() {
      if (knownMapField_ == null) {
        return com.google.protobuf.MapField.emptyMapField(
            KnownMapFieldDefaultEntryHolder.defaultEntry);
      }
      return knownMapField_;
    }
    private static final
    com.google.protobuf.Internal.MapAdapter.Converter<
        java.lang.Integer, protobuf_unittest.MapLiteUnittest.Proto2MapEnumPlusExtraLite> knownMapFieldValueConverter =
            com.google.protobuf.Internal.MapAdapter.newEnumConverter(
                protobuf_unittest.MapLiteUnittest.Proto2MapEnumPlusExtraLite.internalGetValueMap(),
                protobuf_unittest.MapLiteUnittest.Proto2MapEnumPlusExtraLite.E_PROTO2_MAP_ENUM_FOO_LITE);
    private static final java.util.Map<java.lang.Integer, protobuf_unittest.MapLiteUnittest.Proto2MapEnumPlusExtraLite>
    internalGetAdaptedKnownMapFieldMap(
        java.util.Map<java.lang.Integer, java.lang.Integer> map) {
      return new com.google.protobuf.Internal.MapAdapter<
          java.lang.Integer, protobuf_unittest.MapLiteUnittest.Proto2MapEnumPlusExtraLite, java.lang.Integer>(
              map, knownMapFieldValueConverter);
    }

    public int getKnownMapFieldCount() {
      return internalGetKnownMapField().getMap().size();
    }
    /**
     * <code>map&lt;int32, .protobuf_unittest.Proto2MapEnumPlusExtraLite&gt; known_map_field = 101;</code>
     */

    @java.lang.Override
    public boolean containsKnownMapField(
        int key) {
      
      return internalGetKnownMapField().getMap().containsKey(key);
    }
    /**
     * Use {@link #getKnownMapFieldMap()} instead.
     */
    @java.lang.Override
    @java.lang.Deprecated
    public java.util.Map<java.lang.Integer, protobuf_unittest.MapLiteUnittest.Proto2MapEnumPlusExtraLite>
    getKnownMapField() {
      return getKnownMapFieldMap();
    }
    /**
     * <code>map&lt;int32, .protobuf_unittest.Proto2MapEnumPlusExtraLite&gt; known_map_field = 101;</code>
     */
    @java.lang.Override

    public java.util.Map<java.lang.Integer, protobuf_unittest.MapLiteUnittest.Proto2MapEnumPlusExtraLite>
    getKnownMapFieldMap() {
      return internalGetAdaptedKnownMapFieldMap(
          internalGetKnownMapField().getMap());}
    /**
     * <code>map&lt;int32, .protobuf_unittest.Proto2MapEnumPlusExtraLite&gt; known_map_field = 101;</code>
     */
    @java.lang.Override

    public /* nullable */
protobuf_unittest.MapLiteUnittest.Proto2MapEnumPlusExtraLite getKnownMapFieldOrDefault(
        int key,
        /* nullable */
protobuf_unittest.MapLiteUnittest.Proto2MapEnumPlusExtraLite defaultValue) {
      
      java.util.Map<java.lang.Integer, java.lang.Integer> map =
          internalGetKnownMapField().getMap();
      return map.containsKey(key)
             ? knownMapFieldValueConverter.doForward(map.get(key))
             : defaultValue;
    }
    /**
     * <code>map&lt;int32, .protobuf_unittest.Proto2MapEnumPlusExtraLite&gt; known_map_field = 101;</code>
     */
    @java.lang.Override

    public protobuf_unittest.MapLiteUnittest.Proto2MapEnumPlusExtraLite getKnownMapFieldOrThrow(
        int key) {
      
      java.util.Map<java.lang.Integer, java.lang.Integer> map =
          internalGetKnownMapField().getMap();
      if (!map.containsKey(key)) {
        throw new java.lang.IllegalArgumentException();
      }
      return knownMapFieldValueConverter.doForward(map.get(key));
    }

    public static final int UNKNOWN_MAP_FIELD_FIELD_NUMBER = 102;
    private static final class UnknownMapFieldDefaultEntryHolder {
      static final com.google.protobuf.MapEntry<
          java.lang.Integer, java.lang.Integer> defaultEntry =
              com.google.protobuf.MapEntry
              .<java.lang.Integer, java.lang.Integer>newDefaultInstance(
                  protobuf_unittest.MapLiteUnittest.internal_static_protobuf_unittest_TestEnumMapPlusExtraLite_UnknownMapFieldEntry_descriptor, 
                  com.google.protobuf.WireFormat.FieldType.INT32,
                  0,
                  com.google.protobuf.WireFormat.FieldType.ENUM,
                  protobuf_unittest.MapLiteUnittest.Proto2MapEnumPlusExtraLite.E_PROTO2_MAP_ENUM_FOO_LITE.getNumber());
    }
    private com.google.protobuf.MapField<
        java.lang.Integer, java.lang.Integer> unknownMapField_;
    private com.google.protobuf.MapField<java.lang.Integer, java.lang.Integer>
    internalGetUnknownMapField() {
      if (unknownMapField_ == null) {
        return com.google.protobuf.MapField.emptyMapField(
            UnknownMapFieldDefaultEntryHolder.defaultEntry);
      }
      return unknownMapField_;
    }
    private static final
    com.google.protobuf.Internal.MapAdapter.Converter<
        java.lang.Integer, protobuf_unittest.MapLiteUnittest.Proto2MapEnumPlusExtraLite> unknownMapFieldValueConverter =
            com.google.protobuf.Internal.MapAdapter.newEnumConverter(
                protobuf_unittest.MapLiteUnittest.Proto2MapEnumPlusExtraLite.internalGetValueMap(),
                protobuf_unittest.MapLiteUnittest.Proto2MapEnumPlusExtraLite.E_PROTO2_MAP_ENUM_FOO_LITE);
    private static final java.util.Map<java.lang.Integer, protobuf_unittest.MapLiteUnittest.Proto2MapEnumPlusExtraLite>
    internalGetAdaptedUnknownMapFieldMap(
        java.util.Map<java.lang.Integer, java.lang.Integer> map) {
      return new com.google.protobuf.Internal.MapAdapter<
          java.lang.Integer, protobuf_unittest.MapLiteUnittest.Proto2MapEnumPlusExtraLite, java.lang.Integer>(
              map, unknownMapFieldValueConverter);
    }

    public int getUnknownMapFieldCount() {
      return internalGetUnknownMapField().getMap().size();
    }
    /**
     * <code>map&lt;int32, .protobuf_unittest.Proto2MapEnumPlusExtraLite&gt; unknown_map_field = 102;</code>
     */

    @java.lang.Override
    public boolean containsUnknownMapField(
        int key) {
      
      return internalGetUnknownMapField().getMap().containsKey(key);
    }
    /**
     * Use {@link #getUnknownMapFieldMap()} instead.
     */
    @java.lang.Override
    @java.lang.Deprecated
    public java.util.Map<java.lang.Integer, protobuf_unittest.MapLiteUnittest.Proto2MapEnumPlusExtraLite>
    getUnknownMapField() {
      return getUnknownMapFieldMap();
    }
    /**
     * <code>map&lt;int32, .protobuf_unittest.Proto2MapEnumPlusExtraLite&gt; unknown_map_field = 102;</code>
     */
    @java.lang.Override

    public java.util.Map<java.lang.Integer, protobuf_unittest.MapLiteUnittest.Proto2MapEnumPlusExtraLite>
    getUnknownMapFieldMap() {
      return internalGetAdaptedUnknownMapFieldMap(
          internalGetUnknownMapField().getMap());}
    /**
     * <code>map&lt;int32, .protobuf_unittest.Proto2MapEnumPlusExtraLite&gt; unknown_map_field = 102;</code>
     */
    @java.lang.Override

    public /* nullable */
protobuf_unittest.MapLiteUnittest.Proto2MapEnumPlusExtraLite getUnknownMapFieldOrDefault(
        int key,
        /* nullable */
protobuf_unittest.MapLiteUnittest.Proto2MapEnumPlusExtraLite defaultValue) {
      
      java.util.Map<java.lang.Integer, java.lang.Integer> map =
          internalGetUnknownMapField().getMap();
      return map.containsKey(key)
             ? unknownMapFieldValueConverter.doForward(map.get(key))
             : defaultValue;
    }
    /**
     * <code>map&lt;int32, .protobuf_unittest.Proto2MapEnumPlusExtraLite&gt; unknown_map_field = 102;</code>
     */
    @java.lang.Override

    public protobuf_unittest.MapLiteUnittest.Proto2MapEnumPlusExtraLite getUnknownMapFieldOrThrow(
        int key) {
      
      java.util.Map<java.lang.Integer, java.lang.Integer> map =
          internalGetUnknownMapField().getMap();
      if (!map.containsKey(key)) {
        throw new java.lang.IllegalArgumentException();
      }
      return unknownMapFieldValueConverter.doForward(map.get(key));
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      com.google.protobuf.GeneratedMessageV3
        .serializeIntegerMapTo(
          output,
          internalGetKnownMapField(),
          KnownMapFieldDefaultEntryHolder.defaultEntry,
          101);
      com.google.protobuf.GeneratedMessageV3
        .serializeIntegerMapTo(
          output,
          internalGetUnknownMapField(),
          UnknownMapFieldDefaultEntryHolder.defaultEntry,
          102);
      unknownFields.writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      for (java.util.Map.Entry<java.lang.Integer, java.lang.Integer> entry
           : internalGetKnownMapField().getMap().entrySet()) {
        com.google.protobuf.MapEntry<java.lang.Integer, java.lang.Integer>
        knownMapField__ = KnownMapFieldDefaultEntryHolder.defaultEntry.newBuilderForType()
            .setKey(entry.getKey())
            .setValue(entry.getValue())
            .build();
        size += com.google.protobuf.CodedOutputStream
            .computeMessageSize(101, knownMapField__);
      }
      for (java.util.Map.Entry<java.lang.Integer, java.lang.Integer> entry
           : internalGetUnknownMapField().getMap().entrySet()) {
        com.google.protobuf.MapEntry<java.lang.Integer, java.lang.Integer>
        unknownMapField__ = UnknownMapFieldDefaultEntryHolder.defaultEntry.newBuilderForType()
            .setKey(entry.getKey())
            .setValue(entry.getValue())
            .build();
        size += com.google.protobuf.CodedOutputStream
            .computeMessageSize(102, unknownMapField__);
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof protobuf_unittest.MapLiteUnittest.TestEnumMapPlusExtraLite)) {
        return super.equals(obj);
      }
      protobuf_unittest.MapLiteUnittest.TestEnumMapPlusExtraLite other = (protobuf_unittest.MapLiteUnittest.TestEnumMapPlusExtraLite) obj;

      if (!internalGetKnownMapField().equals(
          other.internalGetKnownMapField())) return false;
      if (!internalGetUnknownMapField().equals(
          other.internalGetUnknownMapField())) return false;
      if (!unknownFields.equals(other.unknownFields)) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      if (!internalGetKnownMapField().getMap().isEmpty()) {
        hash = (37 * hash) + KNOWN_MAP_FIELD_FIELD_NUMBER;
        hash = (53 * hash) + internalGetKnownMapField().hashCode();
      }
      if (!internalGetUnknownMapField().getMap().isEmpty()) {
        hash = (37 * hash) + UNKNOWN_MAP_FIELD_FIELD_NUMBER;
        hash = (53 * hash) + internalGetUnknownMapField().hashCode();
      }
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static protobuf_unittest.MapLiteUnittest.TestEnumMapPlusExtraLite parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static protobuf_unittest.MapLiteUnittest.TestEnumMapPlusExtraLite parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static protobuf_unittest.MapLiteUnittest.TestEnumMapPlusExtraLite parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static protobuf_unittest.MapLiteUnittest.TestEnumMapPlusExtraLite parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static protobuf_unittest.MapLiteUnittest.TestEnumMapPlusExtraLite parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static protobuf_unittest.MapLiteUnittest.TestEnumMapPlusExtraLite parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static protobuf_unittest.MapLiteUnittest.TestEnumMapPlusExtraLite parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static protobuf_unittest.MapLiteUnittest.TestEnumMapPlusExtraLite parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static protobuf_unittest.MapLiteUnittest.TestEnumMapPlusExtraLite parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static protobuf_unittest.MapLiteUnittest.TestEnumMapPlusExtraLite parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static protobuf_unittest.MapLiteUnittest.TestEnumMapPlusExtraLite parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static protobuf_unittest.MapLiteUnittest.TestEnumMapPlusExtraLite parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(protobuf_unittest.MapLiteUnittest.TestEnumMapPlusExtraLite prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code protobuf_unittest.TestEnumMapPlusExtraLite}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:protobuf_unittest.TestEnumMapPlusExtraLite)
        protobuf_unittest.MapLiteUnittest.TestEnumMapPlusExtraLiteOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return protobuf_unittest.MapLiteUnittest.internal_static_protobuf_unittest_TestEnumMapPlusExtraLite_descriptor;
      }

      @SuppressWarnings({"rawtypes"})
      protected com.google.protobuf.MapField internalGetMapField(
          int number) {
        switch (number) {
          case 101:
            return internalGetKnownMapField();
          case 102:
            return internalGetUnknownMapField();
          default:
            throw new RuntimeException(
                "Invalid map field number: " + number);
        }
      }
      @SuppressWarnings({"rawtypes"})
      protected com.google.protobuf.MapField internalGetMutableMapField(
          int number) {
        switch (number) {
          case 101:
            return internalGetMutableKnownMapField();
          case 102:
            return internalGetMutableUnknownMapField();
          default:
            throw new RuntimeException(
                "Invalid map field number: " + number);
        }
      }
      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return protobuf_unittest.MapLiteUnittest.internal_static_protobuf_unittest_TestEnumMapPlusExtraLite_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                protobuf_unittest.MapLiteUnittest.TestEnumMapPlusExtraLite.class, protobuf_unittest.MapLiteUnittest.TestEnumMapPlusExtraLite.Builder.class);
      }

      // Construct using protobuf_unittest.MapLiteUnittest.TestEnumMapPlusExtraLite.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        internalGetMutableKnownMapField().clear();
        internalGetMutableUnknownMapField().clear();
        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return protobuf_unittest.MapLiteUnittest.internal_static_protobuf_unittest_TestEnumMapPlusExtraLite_descriptor;
      }

      @java.lang.Override
      public protobuf_unittest.MapLiteUnittest.TestEnumMapPlusExtraLite getDefaultInstanceForType() {
        return protobuf_unittest.MapLiteUnittest.TestEnumMapPlusExtraLite.getDefaultInstance();
      }

      @java.lang.Override
      public protobuf_unittest.MapLiteUnittest.TestEnumMapPlusExtraLite build() {
        protobuf_unittest.MapLiteUnittest.TestEnumMapPlusExtraLite result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public protobuf_unittest.MapLiteUnittest.TestEnumMapPlusExtraLite buildPartial() {
        protobuf_unittest.MapLiteUnittest.TestEnumMapPlusExtraLite result = new protobuf_unittest.MapLiteUnittest.TestEnumMapPlusExtraLite(this);
        int from_bitField0_ = bitField0_;
        result.knownMapField_ = internalGetKnownMapField();
        result.knownMapField_.makeImmutable();
        result.unknownMapField_ = internalGetUnknownMapField();
        result.unknownMapField_.makeImmutable();
        onBuilt();
        return result;
      }

      @java.lang.Override
      public Builder clone() {
        return super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof protobuf_unittest.MapLiteUnittest.TestEnumMapPlusExtraLite) {
          return mergeFrom((protobuf_unittest.MapLiteUnittest.TestEnumMapPlusExtraLite)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(protobuf_unittest.MapLiteUnittest.TestEnumMapPlusExtraLite other) {
        if (other == protobuf_unittest.MapLiteUnittest.TestEnumMapPlusExtraLite.getDefaultInstance()) return this;
        internalGetMutableKnownMapField().mergeFrom(
            other.internalGetKnownMapField());
        internalGetMutableUnknownMapField().mergeFrom(
            other.internalGetUnknownMapField());
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        protobuf_unittest.MapLiteUnittest.TestEnumMapPlusExtraLite parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (protobuf_unittest.MapLiteUnittest.TestEnumMapPlusExtraLite) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private com.google.protobuf.MapField<
          java.lang.Integer, java.lang.Integer> knownMapField_;
      private com.google.protobuf.MapField<java.lang.Integer, java.lang.Integer>
      internalGetKnownMapField() {
        if (knownMapField_ == null) {
          return com.google.protobuf.MapField.emptyMapField(
              KnownMapFieldDefaultEntryHolder.defaultEntry);
        }
        return knownMapField_;
      }
      private com.google.protobuf.MapField<java.lang.Integer, java.lang.Integer>
      internalGetMutableKnownMapField() {
        onChanged();;
        if (knownMapField_ == null) {
          knownMapField_ = com.google.protobuf.MapField.newMapField(
              KnownMapFieldDefaultEntryHolder.defaultEntry);
        }
        if (!knownMapField_.isMutable()) {
          knownMapField_ = knownMapField_.copy();
        }
        return knownMapField_;
      }

      public int getKnownMapFieldCount() {
        return internalGetKnownMapField().getMap().size();
      }
      /**
       * <code>map&lt;int32, .protobuf_unittest.Proto2MapEnumPlusExtraLite&gt; known_map_field = 101;</code>
       */

      @java.lang.Override
      public boolean containsKnownMapField(
          int key) {
        
        return internalGetKnownMapField().getMap().containsKey(key);
      }
      /**
       * Use {@link #getKnownMapFieldMap()} instead.
       */
      @java.lang.Override
      @java.lang.Deprecated
      public java.util.Map<java.lang.Integer, protobuf_unittest.MapLiteUnittest.Proto2MapEnumPlusExtraLite>
      getKnownMapField() {
        return getKnownMapFieldMap();
      }
      /**
       * <code>map&lt;int32, .protobuf_unittest.Proto2MapEnumPlusExtraLite&gt; known_map_field = 101;</code>
       */
      @java.lang.Override

      public java.util.Map<java.lang.Integer, protobuf_unittest.MapLiteUnittest.Proto2MapEnumPlusExtraLite>
      getKnownMapFieldMap() {
        return internalGetAdaptedKnownMapFieldMap(
            internalGetKnownMapField().getMap());}
      /**
       * <code>map&lt;int32, .protobuf_unittest.Proto2MapEnumPlusExtraLite&gt; known_map_field = 101;</code>
       */
      @java.lang.Override

      public /* nullable */
protobuf_unittest.MapLiteUnittest.Proto2MapEnumPlusExtraLite getKnownMapFieldOrDefault(
          int key,
          /* nullable */
protobuf_unittest.MapLiteUnittest.Proto2MapEnumPlusExtraLite defaultValue) {
        
        java.util.Map<java.lang.Integer, java.lang.Integer> map =
            internalGetKnownMapField().getMap();
        return map.containsKey(key)
               ? knownMapFieldValueConverter.doForward(map.get(key))
               : defaultValue;
      }
      /**
       * <code>map&lt;int32, .protobuf_unittest.Proto2MapEnumPlusExtraLite&gt; known_map_field = 101;</code>
       */
      @java.lang.Override

      public protobuf_unittest.MapLiteUnittest.Proto2MapEnumPlusExtraLite getKnownMapFieldOrThrow(
          int key) {
        
        java.util.Map<java.lang.Integer, java.lang.Integer> map =
            internalGetKnownMapField().getMap();
        if (!map.containsKey(key)) {
          throw new java.lang.IllegalArgumentException();
        }
        return knownMapFieldValueConverter.doForward(map.get(key));
      }

      public Builder clearKnownMapField() {
        internalGetMutableKnownMapField().getMutableMap()
            .clear();
        return this;
      }
      /**
       * <code>map&lt;int32, .protobuf_unittest.Proto2MapEnumPlusExtraLite&gt; known_map_field = 101;</code>
       */

      public Builder removeKnownMapField(
          int key) {
        
        internalGetMutableKnownMapField().getMutableMap()
            .remove(key);
        return this;
      }
      /**
       * Use alternate mutation accessors instead.
       */
      @java.lang.Deprecated
      public java.util.Map<java.lang.Integer, protobuf_unittest.MapLiteUnittest.Proto2MapEnumPlusExtraLite>
      getMutableKnownMapField() {
        return internalGetAdaptedKnownMapFieldMap(
             internalGetMutableKnownMapField().getMutableMap());
      }
      /**
       * <code>map&lt;int32, .protobuf_unittest.Proto2MapEnumPlusExtraLite&gt; known_map_field = 101;</code>
       */
      public Builder putKnownMapField(
          int key,
          protobuf_unittest.MapLiteUnittest.Proto2MapEnumPlusExtraLite value) {
        
        
        internalGetMutableKnownMapField().getMutableMap()
            .put(key, knownMapFieldValueConverter.doBackward(value));
        return this;
      }
      /**
       * <code>map&lt;int32, .protobuf_unittest.Proto2MapEnumPlusExtraLite&gt; known_map_field = 101;</code>
       */
      public Builder putAllKnownMapField(
          java.util.Map<java.lang.Integer, protobuf_unittest.MapLiteUnittest.Proto2MapEnumPlusExtraLite> values) {
        internalGetAdaptedKnownMapFieldMap(
            internalGetMutableKnownMapField().getMutableMap())
                .putAll(values);
        return this;
      }

      private com.google.protobuf.MapField<
          java.lang.Integer, java.lang.Integer> unknownMapField_;
      private com.google.protobuf.MapField<java.lang.Integer, java.lang.Integer>
      internalGetUnknownMapField() {
        if (unknownMapField_ == null) {
          return com.google.protobuf.MapField.emptyMapField(
              UnknownMapFieldDefaultEntryHolder.defaultEntry);
        }
        return unknownMapField_;
      }
      private com.google.protobuf.MapField<java.lang.Integer, java.lang.Integer>
      internalGetMutableUnknownMapField() {
        onChanged();;
        if (unknownMapField_ == null) {
          unknownMapField_ = com.google.protobuf.MapField.newMapField(
              UnknownMapFieldDefaultEntryHolder.defaultEntry);
        }
        if (!unknownMapField_.isMutable()) {
          unknownMapField_ = unknownMapField_.copy();
        }
        return unknownMapField_;
      }

      public int getUnknownMapFieldCount() {
        return internalGetUnknownMapField().getMap().size();
      }
      /**
       * <code>map&lt;int32, .protobuf_unittest.Proto2MapEnumPlusExtraLite&gt; unknown_map_field = 102;</code>
       */

      @java.lang.Override
      public boolean containsUnknownMapField(
          int key) {
        
        return internalGetUnknownMapField().getMap().containsKey(key);
      }
      /**
       * Use {@link #getUnknownMapFieldMap()} instead.
       */
      @java.lang.Override
      @java.lang.Deprecated
      public java.util.Map<java.lang.Integer, protobuf_unittest.MapLiteUnittest.Proto2MapEnumPlusExtraLite>
      getUnknownMapField() {
        return getUnknownMapFieldMap();
      }
      /**
       * <code>map&lt;int32, .protobuf_unittest.Proto2MapEnumPlusExtraLite&gt; unknown_map_field = 102;</code>
       */
      @java.lang.Override

      public java.util.Map<java.lang.Integer, protobuf_unittest.MapLiteUnittest.Proto2MapEnumPlusExtraLite>
      getUnknownMapFieldMap() {
        return internalGetAdaptedUnknownMapFieldMap(
            internalGetUnknownMapField().getMap());}
      /**
       * <code>map&lt;int32, .protobuf_unittest.Proto2MapEnumPlusExtraLite&gt; unknown_map_field = 102;</code>
       */
      @java.lang.Override

      public /* nullable */
protobuf_unittest.MapLiteUnittest.Proto2MapEnumPlusExtraLite getUnknownMapFieldOrDefault(
          int key,
          /* nullable */
protobuf_unittest.MapLiteUnittest.Proto2MapEnumPlusExtraLite defaultValue) {
        
        java.util.Map<java.lang.Integer, java.lang.Integer> map =
            internalGetUnknownMapField().getMap();
        return map.containsKey(key)
               ? unknownMapFieldValueConverter.doForward(map.get(key))
               : defaultValue;
      }
      /**
       * <code>map&lt;int32, .protobuf_unittest.Proto2MapEnumPlusExtraLite&gt; unknown_map_field = 102;</code>
       */
      @java.lang.Override

      public protobuf_unittest.MapLiteUnittest.Proto2MapEnumPlusExtraLite getUnknownMapFieldOrThrow(
          int key) {
        
        java.util.Map<java.lang.Integer, java.lang.Integer> map =
            internalGetUnknownMapField().getMap();
        if (!map.containsKey(key)) {
          throw new java.lang.IllegalArgumentException();
        }
        return unknownMapFieldValueConverter.doForward(map.get(key));
      }

      public Builder clearUnknownMapField() {
        internalGetMutableUnknownMapField().getMutableMap()
            .clear();
        return this;
      }
      /**
       * <code>map&lt;int32, .protobuf_unittest.Proto2MapEnumPlusExtraLite&gt; unknown_map_field = 102;</code>
       */

      public Builder removeUnknownMapField(
          int key) {
        
        internalGetMutableUnknownMapField().getMutableMap()
            .remove(key);
        return this;
      }
      /**
       * Use alternate mutation accessors instead.
       */
      @java.lang.Deprecated
      public java.util.Map<java.lang.Integer, protobuf_unittest.MapLiteUnittest.Proto2MapEnumPlusExtraLite>
      getMutableUnknownMapField() {
        return internalGetAdaptedUnknownMapFieldMap(
             internalGetMutableUnknownMapField().getMutableMap());
      }
      /**
       * <code>map&lt;int32, .protobuf_unittest.Proto2MapEnumPlusExtraLite&gt; unknown_map_field = 102;</code>
       */
      public Builder putUnknownMapField(
          int key,
          protobuf_unittest.MapLiteUnittest.Proto2MapEnumPlusExtraLite value) {
        
        
        internalGetMutableUnknownMapField().getMutableMap()
            .put(key, unknownMapFieldValueConverter.doBackward(value));
        return this;
      }
      /**
       * <code>map&lt;int32, .protobuf_unittest.Proto2MapEnumPlusExtraLite&gt; unknown_map_field = 102;</code>
       */
      public Builder putAllUnknownMapField(
          java.util.Map<java.lang.Integer, protobuf_unittest.MapLiteUnittest.Proto2MapEnumPlusExtraLite> values) {
        internalGetAdaptedUnknownMapFieldMap(
            internalGetMutableUnknownMapField().getMutableMap())
                .putAll(values);
        return this;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:protobuf_unittest.TestEnumMapPlusExtraLite)
    }

    // @@protoc_insertion_point(class_scope:protobuf_unittest.TestEnumMapPlusExtraLite)
    private static final protobuf_unittest.MapLiteUnittest.TestEnumMapPlusExtraLite DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new protobuf_unittest.MapLiteUnittest.TestEnumMapPlusExtraLite();
    }

    public static protobuf_unittest.MapLiteUnittest.TestEnumMapPlusExtraLite getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    @java.lang.Deprecated public static final com.google.protobuf.Parser<TestEnumMapPlusExtraLite>
        PARSER = new com.google.protobuf.AbstractParser<TestEnumMapPlusExtraLite>() {
      @java.lang.Override
      public TestEnumMapPlusExtraLite parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new TestEnumMapPlusExtraLite(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<TestEnumMapPlusExtraLite> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<TestEnumMapPlusExtraLite> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public protobuf_unittest.MapLiteUnittest.TestEnumMapPlusExtraLite getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface TestMessageMapLiteOrBuilder extends
      // @@protoc_insertion_point(interface_extends:protobuf_unittest.TestMessageMapLite)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>map&lt;int32, .protobuf_unittest.TestAllTypesLite&gt; map_int32_message = 1;</code>
     */
    int getMapInt32MessageCount();
    /**
     * <code>map&lt;int32, .protobuf_unittest.TestAllTypesLite&gt; map_int32_message = 1;</code>
     */
    boolean containsMapInt32Message(
        int key);
    /**
     * Use {@link #getMapInt32MessageMap()} instead.
     */
    @java.lang.Deprecated
    java.util.Map<java.lang.Integer, com.google.protobuf.UnittestLite.TestAllTypesLite>
    getMapInt32Message();
    /**
     * <code>map&lt;int32, .protobuf_unittest.TestAllTypesLite&gt; map_int32_message = 1;</code>
     */
    java.util.Map<java.lang.Integer, com.google.protobuf.UnittestLite.TestAllTypesLite>
    getMapInt32MessageMap();
    /**
     * <code>map&lt;int32, .protobuf_unittest.TestAllTypesLite&gt; map_int32_message = 1;</code>
     */

    /* nullable */
com.google.protobuf.UnittestLite.TestAllTypesLite getMapInt32MessageOrDefault(
        int key,
        /* nullable */
com.google.protobuf.UnittestLite.TestAllTypesLite defaultValue);
    /**
     * <code>map&lt;int32, .protobuf_unittest.TestAllTypesLite&gt; map_int32_message = 1;</code>
     */

    com.google.protobuf.UnittestLite.TestAllTypesLite getMapInt32MessageOrThrow(
        int key);
  }
  /**
   * Protobuf type {@code protobuf_unittest.TestMessageMapLite}
   */
  public static final class TestMessageMapLite extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:protobuf_unittest.TestMessageMapLite)
      TestMessageMapLiteOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use TestMessageMapLite.newBuilder() to construct.
    private TestMessageMapLite(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private TestMessageMapLite() {
    }

    @java.lang.Override
    @SuppressWarnings({"unused"})
    protected java.lang.Object newInstance(
        UnusedPrivateParameter unused) {
      return new TestMessageMapLite();
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private TestMessageMapLite(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 10: {
              if (!((mutable_bitField0_ & 0x00000001) != 0)) {
                mapInt32Message_ = com.google.protobuf.MapField.newMapField(
                    MapInt32MessageDefaultEntryHolder.defaultEntry);
                mutable_bitField0_ |= 0x00000001;
              }
              com.google.protobuf.MapEntry<java.lang.Integer, com.google.protobuf.UnittestLite.TestAllTypesLite>
              mapInt32Message__ = input.readMessage(
                  MapInt32MessageDefaultEntryHolder.defaultEntry.getParserForType(), extensionRegistry);
              mapInt32Message_.getMutableMap().put(
                  mapInt32Message__.getKey(), mapInt32Message__.getValue());
              break;
            }
            default: {
              if (!parseUnknownField(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (com.google.protobuf.UninitializedMessageException e) {
        throw e.asInvalidProtocolBufferException().setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return protobuf_unittest.MapLiteUnittest.internal_static_protobuf_unittest_TestMessageMapLite_descriptor;
    }

    @SuppressWarnings({"rawtypes"})
    @java.lang.Override
    protected com.google.protobuf.MapField internalGetMapField(
        int number) {
      switch (number) {
        case 1:
          return internalGetMapInt32Message();
        default:
          throw new RuntimeException(
              "Invalid map field number: " + number);
      }
    }
    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return protobuf_unittest.MapLiteUnittest.internal_static_protobuf_unittest_TestMessageMapLite_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              protobuf_unittest.MapLiteUnittest.TestMessageMapLite.class, protobuf_unittest.MapLiteUnittest.TestMessageMapLite.Builder.class);
    }

    public static final int MAP_INT32_MESSAGE_FIELD_NUMBER = 1;
    private static final class MapInt32MessageDefaultEntryHolder {
      static final com.google.protobuf.MapEntry<
          java.lang.Integer, com.google.protobuf.UnittestLite.TestAllTypesLite> defaultEntry =
              com.google.protobuf.MapEntry
              .<java.lang.Integer, com.google.protobuf.UnittestLite.TestAllTypesLite>newDefaultInstance(
                  protobuf_unittest.MapLiteUnittest.internal_static_protobuf_unittest_TestMessageMapLite_MapInt32MessageEntry_descriptor, 
                  com.google.protobuf.WireFormat.FieldType.INT32,
                  0,
                  com.google.protobuf.WireFormat.FieldType.MESSAGE,
                  com.google.protobuf.UnittestLite.TestAllTypesLite.getDefaultInstance());
    }
    private com.google.protobuf.MapField<
        java.lang.Integer, com.google.protobuf.UnittestLite.TestAllTypesLite> mapInt32Message_;
    private com.google.protobuf.MapField<java.lang.Integer, com.google.protobuf.UnittestLite.TestAllTypesLite>
    internalGetMapInt32Message() {
      if (mapInt32Message_ == null) {
        return com.google.protobuf.MapField.emptyMapField(
            MapInt32MessageDefaultEntryHolder.defaultEntry);
      }
      return mapInt32Message_;
    }

    public int getMapInt32MessageCount() {
      return internalGetMapInt32Message().getMap().size();
    }
    /**
     * <code>map&lt;int32, .protobuf_unittest.TestAllTypesLite&gt; map_int32_message = 1;</code>
     */

    @java.lang.Override
    public boolean containsMapInt32Message(
        int key) {
      
      return internalGetMapInt32Message().getMap().containsKey(key);
    }
    /**
     * Use {@link #getMapInt32MessageMap()} instead.
     */
    @java.lang.Override
    @java.lang.Deprecated
    public java.util.Map<java.lang.Integer, com.google.protobuf.UnittestLite.TestAllTypesLite> getMapInt32Message() {
      return getMapInt32MessageMap();
    }
    /**
     * <code>map&lt;int32, .protobuf_unittest.TestAllTypesLite&gt; map_int32_message = 1;</code>
     */
    @java.lang.Override

    public java.util.Map<java.lang.Integer, com.google.protobuf.UnittestLite.TestAllTypesLite> getMapInt32MessageMap() {
      return internalGetMapInt32Message().getMap();
    }
    /**
     * <code>map&lt;int32, .protobuf_unittest.TestAllTypesLite&gt; map_int32_message = 1;</code>
     */
    @java.lang.Override

    public com.google.protobuf.UnittestLite.TestAllTypesLite getMapInt32MessageOrDefault(
        int key,
        com.google.protobuf.UnittestLite.TestAllTypesLite defaultValue) {
      
      java.util.Map<java.lang.Integer, com.google.protobuf.UnittestLite.TestAllTypesLite> map =
          internalGetMapInt32Message().getMap();
      return map.containsKey(key) ? map.get(key) : defaultValue;
    }
    /**
     * <code>map&lt;int32, .protobuf_unittest.TestAllTypesLite&gt; map_int32_message = 1;</code>
     */
    @java.lang.Override

    public com.google.protobuf.UnittestLite.TestAllTypesLite getMapInt32MessageOrThrow(
        int key) {
      
      java.util.Map<java.lang.Integer, com.google.protobuf.UnittestLite.TestAllTypesLite> map =
          internalGetMapInt32Message().getMap();
      if (!map.containsKey(key)) {
        throw new java.lang.IllegalArgumentException();
      }
      return map.get(key);
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      com.google.protobuf.GeneratedMessageV3
        .serializeIntegerMapTo(
          output,
          internalGetMapInt32Message(),
          MapInt32MessageDefaultEntryHolder.defaultEntry,
          1);
      unknownFields.writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      for (java.util.Map.Entry<java.lang.Integer, com.google.protobuf.UnittestLite.TestAllTypesLite> entry
           : internalGetMapInt32Message().getMap().entrySet()) {
        com.google.protobuf.MapEntry<java.lang.Integer, com.google.protobuf.UnittestLite.TestAllTypesLite>
        mapInt32Message__ = MapInt32MessageDefaultEntryHolder.defaultEntry.newBuilderForType()
            .setKey(entry.getKey())
            .setValue(entry.getValue())
            .build();
        size += com.google.protobuf.CodedOutputStream
            .computeMessageSize(1, mapInt32Message__);
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof protobuf_unittest.MapLiteUnittest.TestMessageMapLite)) {
        return super.equals(obj);
      }
      protobuf_unittest.MapLiteUnittest.TestMessageMapLite other = (protobuf_unittest.MapLiteUnittest.TestMessageMapLite) obj;

      if (!internalGetMapInt32Message().equals(
          other.internalGetMapInt32Message())) return false;
      if (!unknownFields.equals(other.unknownFields)) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      if (!internalGetMapInt32Message().getMap().isEmpty()) {
        hash = (37 * hash) + MAP_INT32_MESSAGE_FIELD_NUMBER;
        hash = (53 * hash) + internalGetMapInt32Message().hashCode();
      }
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static protobuf_unittest.MapLiteUnittest.TestMessageMapLite parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static protobuf_unittest.MapLiteUnittest.TestMessageMapLite parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static protobuf_unittest.MapLiteUnittest.TestMessageMapLite parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static protobuf_unittest.MapLiteUnittest.TestMessageMapLite parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static protobuf_unittest.MapLiteUnittest.TestMessageMapLite parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static protobuf_unittest.MapLiteUnittest.TestMessageMapLite parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static protobuf_unittest.MapLiteUnittest.TestMessageMapLite parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static protobuf_unittest.MapLiteUnittest.TestMessageMapLite parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static protobuf_unittest.MapLiteUnittest.TestMessageMapLite parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static protobuf_unittest.MapLiteUnittest.TestMessageMapLite parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static protobuf_unittest.MapLiteUnittest.TestMessageMapLite parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static protobuf_unittest.MapLiteUnittest.TestMessageMapLite parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(protobuf_unittest.MapLiteUnittest.TestMessageMapLite prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code protobuf_unittest.TestMessageMapLite}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:protobuf_unittest.TestMessageMapLite)
        protobuf_unittest.MapLiteUnittest.TestMessageMapLiteOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return protobuf_unittest.MapLiteUnittest.internal_static_protobuf_unittest_TestMessageMapLite_descriptor;
      }

      @SuppressWarnings({"rawtypes"})
      protected com.google.protobuf.MapField internalGetMapField(
          int number) {
        switch (number) {
          case 1:
            return internalGetMapInt32Message();
          default:
            throw new RuntimeException(
                "Invalid map field number: " + number);
        }
      }
      @SuppressWarnings({"rawtypes"})
      protected com.google.protobuf.MapField internalGetMutableMapField(
          int number) {
        switch (number) {
          case 1:
            return internalGetMutableMapInt32Message();
          default:
            throw new RuntimeException(
                "Invalid map field number: " + number);
        }
      }
      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return protobuf_unittest.MapLiteUnittest.internal_static_protobuf_unittest_TestMessageMapLite_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                protobuf_unittest.MapLiteUnittest.TestMessageMapLite.class, protobuf_unittest.MapLiteUnittest.TestMessageMapLite.Builder.class);
      }

      // Construct using protobuf_unittest.MapLiteUnittest.TestMessageMapLite.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        internalGetMutableMapInt32Message().clear();
        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return protobuf_unittest.MapLiteUnittest.internal_static_protobuf_unittest_TestMessageMapLite_descriptor;
      }

      @java.lang.Override
      public protobuf_unittest.MapLiteUnittest.TestMessageMapLite getDefaultInstanceForType() {
        return protobuf_unittest.MapLiteUnittest.TestMessageMapLite.getDefaultInstance();
      }

      @java.lang.Override
      public protobuf_unittest.MapLiteUnittest.TestMessageMapLite build() {
        protobuf_unittest.MapLiteUnittest.TestMessageMapLite result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public protobuf_unittest.MapLiteUnittest.TestMessageMapLite buildPartial() {
        protobuf_unittest.MapLiteUnittest.TestMessageMapLite result = new protobuf_unittest.MapLiteUnittest.TestMessageMapLite(this);
        int from_bitField0_ = bitField0_;
        result.mapInt32Message_ = internalGetMapInt32Message();
        result.mapInt32Message_.makeImmutable();
        onBuilt();
        return result;
      }

      @java.lang.Override
      public Builder clone() {
        return super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof protobuf_unittest.MapLiteUnittest.TestMessageMapLite) {
          return mergeFrom((protobuf_unittest.MapLiteUnittest.TestMessageMapLite)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(protobuf_unittest.MapLiteUnittest.TestMessageMapLite other) {
        if (other == protobuf_unittest.MapLiteUnittest.TestMessageMapLite.getDefaultInstance()) return this;
        internalGetMutableMapInt32Message().mergeFrom(
            other.internalGetMapInt32Message());
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        protobuf_unittest.MapLiteUnittest.TestMessageMapLite parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (protobuf_unittest.MapLiteUnittest.TestMessageMapLite) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private com.google.protobuf.MapField<
          java.lang.Integer, com.google.protobuf.UnittestLite.TestAllTypesLite> mapInt32Message_;
      private com.google.protobuf.MapField<java.lang.Integer, com.google.protobuf.UnittestLite.TestAllTypesLite>
      internalGetMapInt32Message() {
        if (mapInt32Message_ == null) {
          return com.google.protobuf.MapField.emptyMapField(
              MapInt32MessageDefaultEntryHolder.defaultEntry);
        }
        return mapInt32Message_;
      }
      private com.google.protobuf.MapField<java.lang.Integer, com.google.protobuf.UnittestLite.TestAllTypesLite>
      internalGetMutableMapInt32Message() {
        onChanged();;
        if (mapInt32Message_ == null) {
          mapInt32Message_ = com.google.protobuf.MapField.newMapField(
              MapInt32MessageDefaultEntryHolder.defaultEntry);
        }
        if (!mapInt32Message_.isMutable()) {
          mapInt32Message_ = mapInt32Message_.copy();
        }
        return mapInt32Message_;
      }

      public int getMapInt32MessageCount() {
        return internalGetMapInt32Message().getMap().size();
      }
      /**
       * <code>map&lt;int32, .protobuf_unittest.TestAllTypesLite&gt; map_int32_message = 1;</code>
       */

      @java.lang.Override
      public boolean containsMapInt32Message(
          int key) {
        
        return internalGetMapInt32Message().getMap().containsKey(key);
      }
      /**
       * Use {@link #getMapInt32MessageMap()} instead.
       */
      @java.lang.Override
      @java.lang.Deprecated
      public java.util.Map<java.lang.Integer, com.google.protobuf.UnittestLite.TestAllTypesLite> getMapInt32Message() {
        return getMapInt32MessageMap();
      }
      /**
       * <code>map&lt;int32, .protobuf_unittest.TestAllTypesLite&gt; map_int32_message = 1;</code>
       */
      @java.lang.Override

      public java.util.Map<java.lang.Integer, com.google.protobuf.UnittestLite.TestAllTypesLite> getMapInt32MessageMap() {
        return internalGetMapInt32Message().getMap();
      }
      /**
       * <code>map&lt;int32, .protobuf_unittest.TestAllTypesLite&gt; map_int32_message = 1;</code>
       */
      @java.lang.Override

      public com.google.protobuf.UnittestLite.TestAllTypesLite getMapInt32MessageOrDefault(
          int key,
          com.google.protobuf.UnittestLite.TestAllTypesLite defaultValue) {
        
        java.util.Map<java.lang.Integer, com.google.protobuf.UnittestLite.TestAllTypesLite> map =
            internalGetMapInt32Message().getMap();
        return map.containsKey(key) ? map.get(key) : defaultValue;
      }
      /**
       * <code>map&lt;int32, .protobuf_unittest.TestAllTypesLite&gt; map_int32_message = 1;</code>
       */
      @java.lang.Override

      public com.google.protobuf.UnittestLite.TestAllTypesLite getMapInt32MessageOrThrow(
          int key) {
        
        java.util.Map<java.lang.Integer, com.google.protobuf.UnittestLite.TestAllTypesLite> map =
            internalGetMapInt32Message().getMap();
        if (!map.containsKey(key)) {
          throw new java.lang.IllegalArgumentException();
        }
        return map.get(key);
      }

      public Builder clearMapInt32Message() {
        internalGetMutableMapInt32Message().getMutableMap()
            .clear();
        return this;
      }
      /**
       * <code>map&lt;int32, .protobuf_unittest.TestAllTypesLite&gt; map_int32_message = 1;</code>
       */

      public Builder removeMapInt32Message(
          int key) {
        
        internalGetMutableMapInt32Message().getMutableMap()
            .remove(key);
        return this;
      }
      /**
       * Use alternate mutation accessors instead.
       */
      @java.lang.Deprecated
      public java.util.Map<java.lang.Integer, com.google.protobuf.UnittestLite.TestAllTypesLite>
      getMutableMapInt32Message() {
        return internalGetMutableMapInt32Message().getMutableMap();
      }
      /**
       * <code>map&lt;int32, .protobuf_unittest.TestAllTypesLite&gt; map_int32_message = 1;</code>
       */
      public Builder putMapInt32Message(
          int key,
          com.google.protobuf.UnittestLite.TestAllTypesLite value) {
        
        if (value == null) {
  throw new NullPointerException("map value");
}

        internalGetMutableMapInt32Message().getMutableMap()
            .put(key, value);
        return this;
      }
      /**
       * <code>map&lt;int32, .protobuf_unittest.TestAllTypesLite&gt; map_int32_message = 1;</code>
       */

      public Builder putAllMapInt32Message(
          java.util.Map<java.lang.Integer, com.google.protobuf.UnittestLite.TestAllTypesLite> values) {
        internalGetMutableMapInt32Message().getMutableMap()
            .putAll(values);
        return this;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:protobuf_unittest.TestMessageMapLite)
    }

    // @@protoc_insertion_point(class_scope:protobuf_unittest.TestMessageMapLite)
    private static final protobuf_unittest.MapLiteUnittest.TestMessageMapLite DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new protobuf_unittest.MapLiteUnittest.TestMessageMapLite();
    }

    public static protobuf_unittest.MapLiteUnittest.TestMessageMapLite getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    @java.lang.Deprecated public static final com.google.protobuf.Parser<TestMessageMapLite>
        PARSER = new com.google.protobuf.AbstractParser<TestMessageMapLite>() {
      @java.lang.Override
      public TestMessageMapLite parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new TestMessageMapLite(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<TestMessageMapLite> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<TestMessageMapLite> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public protobuf_unittest.MapLiteUnittest.TestMessageMapLite getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface TestRequiredLiteOrBuilder extends
      // @@protoc_insertion_point(interface_extends:protobuf_unittest.TestRequiredLite)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>required int32 a = 1;</code>
     * @return Whether the a field is set.
     */
    boolean hasA();
    /**
     * <code>required int32 a = 1;</code>
     * @return The a.
     */
    int getA();

    /**
     * <code>required int32 b = 2;</code>
     * @return Whether the b field is set.
     */
    boolean hasB();
    /**
     * <code>required int32 b = 2;</code>
     * @return The b.
     */
    int getB();

    /**
     * <code>required int32 c = 3;</code>
     * @return Whether the c field is set.
     */
    boolean hasC();
    /**
     * <code>required int32 c = 3;</code>
     * @return The c.
     */
    int getC();
  }
  /**
   * Protobuf type {@code protobuf_unittest.TestRequiredLite}
   */
  public static final class TestRequiredLite extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:protobuf_unittest.TestRequiredLite)
      TestRequiredLiteOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use TestRequiredLite.newBuilder() to construct.
    private TestRequiredLite(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private TestRequiredLite() {
    }

    @java.lang.Override
    @SuppressWarnings({"unused"})
    protected java.lang.Object newInstance(
        UnusedPrivateParameter unused) {
      return new TestRequiredLite();
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private TestRequiredLite(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 8: {
              bitField0_ |= 0x00000001;
              a_ = input.readInt32();
              break;
            }
            case 16: {
              bitField0_ |= 0x00000002;
              b_ = input.readInt32();
              break;
            }
            case 24: {
              bitField0_ |= 0x00000004;
              c_ = input.readInt32();
              break;
            }
            default: {
              if (!parseUnknownField(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (com.google.protobuf.UninitializedMessageException e) {
        throw e.asInvalidProtocolBufferException().setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return protobuf_unittest.MapLiteUnittest.internal_static_protobuf_unittest_TestRequiredLite_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return protobuf_unittest.MapLiteUnittest.internal_static_protobuf_unittest_TestRequiredLite_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              protobuf_unittest.MapLiteUnittest.TestRequiredLite.class, protobuf_unittest.MapLiteUnittest.TestRequiredLite.Builder.class);
    }

    private int bitField0_;
    public static final int A_FIELD_NUMBER = 1;
    private int a_;
    /**
     * <code>required int32 a = 1;</code>
     * @return Whether the a field is set.
     */
    @java.lang.Override
    public boolean hasA() {
      return ((bitField0_ & 0x00000001) != 0);
    }
    /**
     * <code>required int32 a = 1;</code>
     * @return The a.
     */
    @java.lang.Override
    public int getA() {
      return a_;
    }

    public static final int B_FIELD_NUMBER = 2;
    private int b_;
    /**
     * <code>required int32 b = 2;</code>
     * @return Whether the b field is set.
     */
    @java.lang.Override
    public boolean hasB() {
      return ((bitField0_ & 0x00000002) != 0);
    }
    /**
     * <code>required int32 b = 2;</code>
     * @return The b.
     */
    @java.lang.Override
    public int getB() {
      return b_;
    }

    public static final int C_FIELD_NUMBER = 3;
    private int c_;
    /**
     * <code>required int32 c = 3;</code>
     * @return Whether the c field is set.
     */
    @java.lang.Override
    public boolean hasC() {
      return ((bitField0_ & 0x00000004) != 0);
    }
    /**
     * <code>required int32 c = 3;</code>
     * @return The c.
     */
    @java.lang.Override
    public int getC() {
      return c_;
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      if (!hasA()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasB()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasC()) {
        memoizedIsInitialized = 0;
        return false;
      }
      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (((bitField0_ & 0x00000001) != 0)) {
        output.writeInt32(1, a_);
      }
      if (((bitField0_ & 0x00000002) != 0)) {
        output.writeInt32(2, b_);
      }
      if (((bitField0_ & 0x00000004) != 0)) {
        output.writeInt32(3, c_);
      }
      unknownFields.writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(1, a_);
      }
      if (((bitField0_ & 0x00000002) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(2, b_);
      }
      if (((bitField0_ & 0x00000004) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(3, c_);
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof protobuf_unittest.MapLiteUnittest.TestRequiredLite)) {
        return super.equals(obj);
      }
      protobuf_unittest.MapLiteUnittest.TestRequiredLite other = (protobuf_unittest.MapLiteUnittest.TestRequiredLite) obj;

      if (hasA() != other.hasA()) return false;
      if (hasA()) {
        if (getA()
            != other.getA()) return false;
      }
      if (hasB() != other.hasB()) return false;
      if (hasB()) {
        if (getB()
            != other.getB()) return false;
      }
      if (hasC() != other.hasC()) return false;
      if (hasC()) {
        if (getC()
            != other.getC()) return false;
      }
      if (!unknownFields.equals(other.unknownFields)) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      if (hasA()) {
        hash = (37 * hash) + A_FIELD_NUMBER;
        hash = (53 * hash) + getA();
      }
      if (hasB()) {
        hash = (37 * hash) + B_FIELD_NUMBER;
        hash = (53 * hash) + getB();
      }
      if (hasC()) {
        hash = (37 * hash) + C_FIELD_NUMBER;
        hash = (53 * hash) + getC();
      }
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static protobuf_unittest.MapLiteUnittest.TestRequiredLite parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static protobuf_unittest.MapLiteUnittest.TestRequiredLite parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static protobuf_unittest.MapLiteUnittest.TestRequiredLite parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static protobuf_unittest.MapLiteUnittest.TestRequiredLite parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static protobuf_unittest.MapLiteUnittest.TestRequiredLite parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static protobuf_unittest.MapLiteUnittest.TestRequiredLite parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static protobuf_unittest.MapLiteUnittest.TestRequiredLite parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static protobuf_unittest.MapLiteUnittest.TestRequiredLite parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static protobuf_unittest.MapLiteUnittest.TestRequiredLite parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static protobuf_unittest.MapLiteUnittest.TestRequiredLite parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static protobuf_unittest.MapLiteUnittest.TestRequiredLite parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static protobuf_unittest.MapLiteUnittest.TestRequiredLite parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(protobuf_unittest.MapLiteUnittest.TestRequiredLite prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code protobuf_unittest.TestRequiredLite}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:protobuf_unittest.TestRequiredLite)
        protobuf_unittest.MapLiteUnittest.TestRequiredLiteOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return protobuf_unittest.MapLiteUnittest.internal_static_protobuf_unittest_TestRequiredLite_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return protobuf_unittest.MapLiteUnittest.internal_static_protobuf_unittest_TestRequiredLite_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                protobuf_unittest.MapLiteUnittest.TestRequiredLite.class, protobuf_unittest.MapLiteUnittest.TestRequiredLite.Builder.class);
      }

      // Construct using protobuf_unittest.MapLiteUnittest.TestRequiredLite.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        a_ = 0;
        bitField0_ = (bitField0_ & ~0x00000001);
        b_ = 0;
        bitField0_ = (bitField0_ & ~0x00000002);
        c_ = 0;
        bitField0_ = (bitField0_ & ~0x00000004);
        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return protobuf_unittest.MapLiteUnittest.internal_static_protobuf_unittest_TestRequiredLite_descriptor;
      }

      @java.lang.Override
      public protobuf_unittest.MapLiteUnittest.TestRequiredLite getDefaultInstanceForType() {
        return protobuf_unittest.MapLiteUnittest.TestRequiredLite.getDefaultInstance();
      }

      @java.lang.Override
      public protobuf_unittest.MapLiteUnittest.TestRequiredLite build() {
        protobuf_unittest.MapLiteUnittest.TestRequiredLite result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public protobuf_unittest.MapLiteUnittest.TestRequiredLite buildPartial() {
        protobuf_unittest.MapLiteUnittest.TestRequiredLite result = new protobuf_unittest.MapLiteUnittest.TestRequiredLite(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) != 0)) {
          result.a_ = a_;
          to_bitField0_ |= 0x00000001;
        }
        if (((from_bitField0_ & 0x00000002) != 0)) {
          result.b_ = b_;
          to_bitField0_ |= 0x00000002;
        }
        if (((from_bitField0_ & 0x00000004) != 0)) {
          result.c_ = c_;
          to_bitField0_ |= 0x00000004;
        }
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      @java.lang.Override
      public Builder clone() {
        return super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof protobuf_unittest.MapLiteUnittest.TestRequiredLite) {
          return mergeFrom((protobuf_unittest.MapLiteUnittest.TestRequiredLite)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(protobuf_unittest.MapLiteUnittest.TestRequiredLite other) {
        if (other == protobuf_unittest.MapLiteUnittest.TestRequiredLite.getDefaultInstance()) return this;
        if (other.hasA()) {
          setA(other.getA());
        }
        if (other.hasB()) {
          setB(other.getB());
        }
        if (other.hasC()) {
          setC(other.getC());
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        if (!hasA()) {
          return false;
        }
        if (!hasB()) {
          return false;
        }
        if (!hasC()) {
          return false;
        }
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        protobuf_unittest.MapLiteUnittest.TestRequiredLite parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (protobuf_unittest.MapLiteUnittest.TestRequiredLite) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private int a_ ;
      /**
       * <code>required int32 a = 1;</code>
       * @return Whether the a field is set.
       */
      @java.lang.Override
      public boolean hasA() {
        return ((bitField0_ & 0x00000001) != 0);
      }
      /**
       * <code>required int32 a = 1;</code>
       * @return The a.
       */
      @java.lang.Override
      public int getA() {
        return a_;
      }
      /**
       * <code>required int32 a = 1;</code>
       * @param value The a to set.
       * @return This builder for chaining.
       */
      public Builder setA(int value) {
        bitField0_ |= 0x00000001;
        a_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required int32 a = 1;</code>
       * @return This builder for chaining.
       */
      public Builder clearA() {
        bitField0_ = (bitField0_ & ~0x00000001);
        a_ = 0;
        onChanged();
        return this;
      }

      private int b_ ;
      /**
       * <code>required int32 b = 2;</code>
       * @return Whether the b field is set.
       */
      @java.lang.Override
      public boolean hasB() {
        return ((bitField0_ & 0x00000002) != 0);
      }
      /**
       * <code>required int32 b = 2;</code>
       * @return The b.
       */
      @java.lang.Override
      public int getB() {
        return b_;
      }
      /**
       * <code>required int32 b = 2;</code>
       * @param value The b to set.
       * @return This builder for chaining.
       */
      public Builder setB(int value) {
        bitField0_ |= 0x00000002;
        b_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required int32 b = 2;</code>
       * @return This builder for chaining.
       */
      public Builder clearB() {
        bitField0_ = (bitField0_ & ~0x00000002);
        b_ = 0;
        onChanged();
        return this;
      }

      private int c_ ;
      /**
       * <code>required int32 c = 3;</code>
       * @return Whether the c field is set.
       */
      @java.lang.Override
      public boolean hasC() {
        return ((bitField0_ & 0x00000004) != 0);
      }
      /**
       * <code>required int32 c = 3;</code>
       * @return The c.
       */
      @java.lang.Override
      public int getC() {
        return c_;
      }
      /**
       * <code>required int32 c = 3;</code>
       * @param value The c to set.
       * @return This builder for chaining.
       */
      public Builder setC(int value) {
        bitField0_ |= 0x00000004;
        c_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required int32 c = 3;</code>
       * @return This builder for chaining.
       */
      public Builder clearC() {
        bitField0_ = (bitField0_ & ~0x00000004);
        c_ = 0;
        onChanged();
        return this;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:protobuf_unittest.TestRequiredLite)
    }

    // @@protoc_insertion_point(class_scope:protobuf_unittest.TestRequiredLite)
    private static final protobuf_unittest.MapLiteUnittest.TestRequiredLite DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new protobuf_unittest.MapLiteUnittest.TestRequiredLite();
    }

    public static protobuf_unittest.MapLiteUnittest.TestRequiredLite getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    @java.lang.Deprecated public static final com.google.protobuf.Parser<TestRequiredLite>
        PARSER = new com.google.protobuf.AbstractParser<TestRequiredLite>() {
      @java.lang.Override
      public TestRequiredLite parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new TestRequiredLite(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<TestRequiredLite> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<TestRequiredLite> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public protobuf_unittest.MapLiteUnittest.TestRequiredLite getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

    public static final int SINGLE_FIELD_NUMBER = 1000;
    /**
     * <code>extend .protobuf_unittest.TestAllExtensionsLite { ... }</code>
     */
    public static final
      com.google.protobuf.GeneratedMessage.GeneratedExtension<
        com.google.protobuf.UnittestLite.TestAllExtensionsLite,
        protobuf_unittest.MapLiteUnittest.TestRequiredLite> single = com.google.protobuf.GeneratedMessage
            .newMessageScopedGeneratedExtension(
          protobuf_unittest.MapLiteUnittest.TestRequiredLite.getDefaultInstance(),
          0,
          protobuf_unittest.MapLiteUnittest.TestRequiredLite.class,
          protobuf_unittest.MapLiteUnittest.TestRequiredLite.getDefaultInstance());
  }

  public interface ForeignMessageArenaLiteOrBuilder extends
      // @@protoc_insertion_point(interface_extends:protobuf_unittest.ForeignMessageArenaLite)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>optional int32 c = 1;</code>
     * @return Whether the c field is set.
     */
    boolean hasC();
    /**
     * <code>optional int32 c = 1;</code>
     * @return The c.
     */
    int getC();
  }
  /**
   * Protobuf type {@code protobuf_unittest.ForeignMessageArenaLite}
   */
  public static final class ForeignMessageArenaLite extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:protobuf_unittest.ForeignMessageArenaLite)
      ForeignMessageArenaLiteOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use ForeignMessageArenaLite.newBuilder() to construct.
    private ForeignMessageArenaLite(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private ForeignMessageArenaLite() {
    }

    @java.lang.Override
    @SuppressWarnings({"unused"})
    protected java.lang.Object newInstance(
        UnusedPrivateParameter unused) {
      return new ForeignMessageArenaLite();
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private ForeignMessageArenaLite(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 8: {
              bitField0_ |= 0x00000001;
              c_ = input.readInt32();
              break;
            }
            default: {
              if (!parseUnknownField(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (com.google.protobuf.UninitializedMessageException e) {
        throw e.asInvalidProtocolBufferException().setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return protobuf_unittest.MapLiteUnittest.internal_static_protobuf_unittest_ForeignMessageArenaLite_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return protobuf_unittest.MapLiteUnittest.internal_static_protobuf_unittest_ForeignMessageArenaLite_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              protobuf_unittest.MapLiteUnittest.ForeignMessageArenaLite.class, protobuf_unittest.MapLiteUnittest.ForeignMessageArenaLite.Builder.class);
    }

    private int bitField0_;
    public static final int C_FIELD_NUMBER = 1;
    private int c_;
    /**
     * <code>optional int32 c = 1;</code>
     * @return Whether the c field is set.
     */
    @java.lang.Override
    public boolean hasC() {
      return ((bitField0_ & 0x00000001) != 0);
    }
    /**
     * <code>optional int32 c = 1;</code>
     * @return The c.
     */
    @java.lang.Override
    public int getC() {
      return c_;
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (((bitField0_ & 0x00000001) != 0)) {
        output.writeInt32(1, c_);
      }
      unknownFields.writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(1, c_);
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof protobuf_unittest.MapLiteUnittest.ForeignMessageArenaLite)) {
        return super.equals(obj);
      }
      protobuf_unittest.MapLiteUnittest.ForeignMessageArenaLite other = (protobuf_unittest.MapLiteUnittest.ForeignMessageArenaLite) obj;

      if (hasC() != other.hasC()) return false;
      if (hasC()) {
        if (getC()
            != other.getC()) return false;
      }
      if (!unknownFields.equals(other.unknownFields)) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      if (hasC()) {
        hash = (37 * hash) + C_FIELD_NUMBER;
        hash = (53 * hash) + getC();
      }
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static protobuf_unittest.MapLiteUnittest.ForeignMessageArenaLite parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static protobuf_unittest.MapLiteUnittest.ForeignMessageArenaLite parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static protobuf_unittest.MapLiteUnittest.ForeignMessageArenaLite parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static protobuf_unittest.MapLiteUnittest.ForeignMessageArenaLite parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static protobuf_unittest.MapLiteUnittest.ForeignMessageArenaLite parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static protobuf_unittest.MapLiteUnittest.ForeignMessageArenaLite parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static protobuf_unittest.MapLiteUnittest.ForeignMessageArenaLite parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static protobuf_unittest.MapLiteUnittest.ForeignMessageArenaLite parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static protobuf_unittest.MapLiteUnittest.ForeignMessageArenaLite parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static protobuf_unittest.MapLiteUnittest.ForeignMessageArenaLite parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static protobuf_unittest.MapLiteUnittest.ForeignMessageArenaLite parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static protobuf_unittest.MapLiteUnittest.ForeignMessageArenaLite parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(protobuf_unittest.MapLiteUnittest.ForeignMessageArenaLite prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code protobuf_unittest.ForeignMessageArenaLite}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:protobuf_unittest.ForeignMessageArenaLite)
        protobuf_unittest.MapLiteUnittest.ForeignMessageArenaLiteOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return protobuf_unittest.MapLiteUnittest.internal_static_protobuf_unittest_ForeignMessageArenaLite_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return protobuf_unittest.MapLiteUnittest.internal_static_protobuf_unittest_ForeignMessageArenaLite_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                protobuf_unittest.MapLiteUnittest.ForeignMessageArenaLite.class, protobuf_unittest.MapLiteUnittest.ForeignMessageArenaLite.Builder.class);
      }

      // Construct using protobuf_unittest.MapLiteUnittest.ForeignMessageArenaLite.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        c_ = 0;
        bitField0_ = (bitField0_ & ~0x00000001);
        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return protobuf_unittest.MapLiteUnittest.internal_static_protobuf_unittest_ForeignMessageArenaLite_descriptor;
      }

      @java.lang.Override
      public protobuf_unittest.MapLiteUnittest.ForeignMessageArenaLite getDefaultInstanceForType() {
        return protobuf_unittest.MapLiteUnittest.ForeignMessageArenaLite.getDefaultInstance();
      }

      @java.lang.Override
      public protobuf_unittest.MapLiteUnittest.ForeignMessageArenaLite build() {
        protobuf_unittest.MapLiteUnittest.ForeignMessageArenaLite result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public protobuf_unittest.MapLiteUnittest.ForeignMessageArenaLite buildPartial() {
        protobuf_unittest.MapLiteUnittest.ForeignMessageArenaLite result = new protobuf_unittest.MapLiteUnittest.ForeignMessageArenaLite(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) != 0)) {
          result.c_ = c_;
          to_bitField0_ |= 0x00000001;
        }
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      @java.lang.Override
      public Builder clone() {
        return super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof protobuf_unittest.MapLiteUnittest.ForeignMessageArenaLite) {
          return mergeFrom((protobuf_unittest.MapLiteUnittest.ForeignMessageArenaLite)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(protobuf_unittest.MapLiteUnittest.ForeignMessageArenaLite other) {
        if (other == protobuf_unittest.MapLiteUnittest.ForeignMessageArenaLite.getDefaultInstance()) return this;
        if (other.hasC()) {
          setC(other.getC());
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        protobuf_unittest.MapLiteUnittest.ForeignMessageArenaLite parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (protobuf_unittest.MapLiteUnittest.ForeignMessageArenaLite) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private int c_ ;
      /**
       * <code>optional int32 c = 1;</code>
       * @return Whether the c field is set.
       */
      @java.lang.Override
      public boolean hasC() {
        return ((bitField0_ & 0x00000001) != 0);
      }
      /**
       * <code>optional int32 c = 1;</code>
       * @return The c.
       */
      @java.lang.Override
      public int getC() {
        return c_;
      }
      /**
       * <code>optional int32 c = 1;</code>
       * @param value The c to set.
       * @return This builder for chaining.
       */
      public Builder setC(int value) {
        bitField0_ |= 0x00000001;
        c_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 c = 1;</code>
       * @return This builder for chaining.
       */
      public Builder clearC() {
        bitField0_ = (bitField0_ & ~0x00000001);
        c_ = 0;
        onChanged();
        return this;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:protobuf_unittest.ForeignMessageArenaLite)
    }

    // @@protoc_insertion_point(class_scope:protobuf_unittest.ForeignMessageArenaLite)
    private static final protobuf_unittest.MapLiteUnittest.ForeignMessageArenaLite DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new protobuf_unittest.MapLiteUnittest.ForeignMessageArenaLite();
    }

    public static protobuf_unittest.MapLiteUnittest.ForeignMessageArenaLite getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    @java.lang.Deprecated public static final com.google.protobuf.Parser<ForeignMessageArenaLite>
        PARSER = new com.google.protobuf.AbstractParser<ForeignMessageArenaLite>() {
      @java.lang.Override
      public ForeignMessageArenaLite parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new ForeignMessageArenaLite(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<ForeignMessageArenaLite> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<ForeignMessageArenaLite> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public protobuf_unittest.MapLiteUnittest.ForeignMessageArenaLite getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_protobuf_unittest_TestMapLite_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_protobuf_unittest_TestMapLite_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_protobuf_unittest_TestMapLite_MapInt32Int32Entry_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_protobuf_unittest_TestMapLite_MapInt32Int32Entry_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_protobuf_unittest_TestMapLite_MapInt64Int64Entry_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_protobuf_unittest_TestMapLite_MapInt64Int64Entry_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_protobuf_unittest_TestMapLite_MapUint32Uint32Entry_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_protobuf_unittest_TestMapLite_MapUint32Uint32Entry_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_protobuf_unittest_TestMapLite_MapUint64Uint64Entry_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_protobuf_unittest_TestMapLite_MapUint64Uint64Entry_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_protobuf_unittest_TestMapLite_MapSint32Sint32Entry_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_protobuf_unittest_TestMapLite_MapSint32Sint32Entry_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_protobuf_unittest_TestMapLite_MapSint64Sint64Entry_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_protobuf_unittest_TestMapLite_MapSint64Sint64Entry_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_protobuf_unittest_TestMapLite_MapFixed32Fixed32Entry_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_protobuf_unittest_TestMapLite_MapFixed32Fixed32Entry_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_protobuf_unittest_TestMapLite_MapFixed64Fixed64Entry_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_protobuf_unittest_TestMapLite_MapFixed64Fixed64Entry_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_protobuf_unittest_TestMapLite_MapSfixed32Sfixed32Entry_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_protobuf_unittest_TestMapLite_MapSfixed32Sfixed32Entry_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_protobuf_unittest_TestMapLite_MapSfixed64Sfixed64Entry_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_protobuf_unittest_TestMapLite_MapSfixed64Sfixed64Entry_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_protobuf_unittest_TestMapLite_MapInt32FloatEntry_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_protobuf_unittest_TestMapLite_MapInt32FloatEntry_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_protobuf_unittest_TestMapLite_MapInt32DoubleEntry_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_protobuf_unittest_TestMapLite_MapInt32DoubleEntry_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_protobuf_unittest_TestMapLite_MapBoolBoolEntry_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_protobuf_unittest_TestMapLite_MapBoolBoolEntry_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_protobuf_unittest_TestMapLite_MapStringStringEntry_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_protobuf_unittest_TestMapLite_MapStringStringEntry_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_protobuf_unittest_TestMapLite_MapInt32BytesEntry_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_protobuf_unittest_TestMapLite_MapInt32BytesEntry_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_protobuf_unittest_TestMapLite_MapInt32EnumEntry_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_protobuf_unittest_TestMapLite_MapInt32EnumEntry_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_protobuf_unittest_TestMapLite_MapInt32ForeignMessageEntry_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_protobuf_unittest_TestMapLite_MapInt32ForeignMessageEntry_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_protobuf_unittest_TestMapLite_TeboringEntry_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_protobuf_unittest_TestMapLite_TeboringEntry_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_protobuf_unittest_TestArenaMapLite_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_protobuf_unittest_TestArenaMapLite_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_protobuf_unittest_TestArenaMapLite_MapInt32Int32Entry_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_protobuf_unittest_TestArenaMapLite_MapInt32Int32Entry_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_protobuf_unittest_TestArenaMapLite_MapInt64Int64Entry_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_protobuf_unittest_TestArenaMapLite_MapInt64Int64Entry_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_protobuf_unittest_TestArenaMapLite_MapUint32Uint32Entry_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_protobuf_unittest_TestArenaMapLite_MapUint32Uint32Entry_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_protobuf_unittest_TestArenaMapLite_MapUint64Uint64Entry_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_protobuf_unittest_TestArenaMapLite_MapUint64Uint64Entry_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_protobuf_unittest_TestArenaMapLite_MapSint32Sint32Entry_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_protobuf_unittest_TestArenaMapLite_MapSint32Sint32Entry_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_protobuf_unittest_TestArenaMapLite_MapSint64Sint64Entry_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_protobuf_unittest_TestArenaMapLite_MapSint64Sint64Entry_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_protobuf_unittest_TestArenaMapLite_MapFixed32Fixed32Entry_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_protobuf_unittest_TestArenaMapLite_MapFixed32Fixed32Entry_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_protobuf_unittest_TestArenaMapLite_MapFixed64Fixed64Entry_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_protobuf_unittest_TestArenaMapLite_MapFixed64Fixed64Entry_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_protobuf_unittest_TestArenaMapLite_MapSfixed32Sfixed32Entry_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_protobuf_unittest_TestArenaMapLite_MapSfixed32Sfixed32Entry_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_protobuf_unittest_TestArenaMapLite_MapSfixed64Sfixed64Entry_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_protobuf_unittest_TestArenaMapLite_MapSfixed64Sfixed64Entry_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_protobuf_unittest_TestArenaMapLite_MapInt32FloatEntry_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_protobuf_unittest_TestArenaMapLite_MapInt32FloatEntry_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_protobuf_unittest_TestArenaMapLite_MapInt32DoubleEntry_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_protobuf_unittest_TestArenaMapLite_MapInt32DoubleEntry_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_protobuf_unittest_TestArenaMapLite_MapBoolBoolEntry_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_protobuf_unittest_TestArenaMapLite_MapBoolBoolEntry_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_protobuf_unittest_TestArenaMapLite_MapStringStringEntry_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_protobuf_unittest_TestArenaMapLite_MapStringStringEntry_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_protobuf_unittest_TestArenaMapLite_MapInt32BytesEntry_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_protobuf_unittest_TestArenaMapLite_MapInt32BytesEntry_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_protobuf_unittest_TestArenaMapLite_MapInt32EnumEntry_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_protobuf_unittest_TestArenaMapLite_MapInt32EnumEntry_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_protobuf_unittest_TestArenaMapLite_MapInt32ForeignMessageEntry_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_protobuf_unittest_TestArenaMapLite_MapInt32ForeignMessageEntry_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_protobuf_unittest_TestRequiredMessageMapLite_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_protobuf_unittest_TestRequiredMessageMapLite_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_protobuf_unittest_TestRequiredMessageMapLite_MapFieldEntry_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_protobuf_unittest_TestRequiredMessageMapLite_MapFieldEntry_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_protobuf_unittest_TestEnumMapLite_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_protobuf_unittest_TestEnumMapLite_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_protobuf_unittest_TestEnumMapLite_KnownMapFieldEntry_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_protobuf_unittest_TestEnumMapLite_KnownMapFieldEntry_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_protobuf_unittest_TestEnumMapLite_UnknownMapFieldEntry_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_protobuf_unittest_TestEnumMapLite_UnknownMapFieldEntry_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_protobuf_unittest_TestEnumMapPlusExtraLite_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_protobuf_unittest_TestEnumMapPlusExtraLite_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_protobuf_unittest_TestEnumMapPlusExtraLite_KnownMapFieldEntry_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_protobuf_unittest_TestEnumMapPlusExtraLite_KnownMapFieldEntry_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_protobuf_unittest_TestEnumMapPlusExtraLite_UnknownMapFieldEntry_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_protobuf_unittest_TestEnumMapPlusExtraLite_UnknownMapFieldEntry_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_protobuf_unittest_TestMessageMapLite_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_protobuf_unittest_TestMessageMapLite_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_protobuf_unittest_TestMessageMapLite_MapInt32MessageEntry_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_protobuf_unittest_TestMessageMapLite_MapInt32MessageEntry_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_protobuf_unittest_TestRequiredLite_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_protobuf_unittest_TestRequiredLite_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_protobuf_unittest_ForeignMessageArenaLite_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_protobuf_unittest_ForeignMessageArenaLite_fieldAccessorTable;

  public static com.google.protobuf.Descriptors.FileDescriptor
      getDescriptor() {
    return descriptor;
  }
  private static  com.google.protobuf.Descriptors.FileDescriptor
      descriptor;
  static {
    java.lang.String[] descriptorData = {
      "\n\'google/protobuf/map_lite_unittest.prot" +
      "o\022\021protobuf_unittest\032#google/protobuf/un" +
      "ittest_lite.proto\"\327\023\n\013TestMapLite\022J\n\017map" +
      "_int32_int32\030\001 \003(\01321.protobuf_unittest.T" +
      "estMapLite.MapInt32Int32Entry\022J\n\017map_int" +
      "64_int64\030\002 \003(\01321.protobuf_unittest.TestM" +
      "apLite.MapInt64Int64Entry\022N\n\021map_uint32_" +
      "uint32\030\003 \003(\01323.protobuf_unittest.TestMap" +
      "Lite.MapUint32Uint32Entry\022N\n\021map_uint64_" +
      "uint64\030\004 \003(\01323.protobuf_unittest.TestMap" +
      "Lite.MapUint64Uint64Entry\022N\n\021map_sint32_" +
      "sint32\030\005 \003(\01323.protobuf_unittest.TestMap" +
      "Lite.MapSint32Sint32Entry\022N\n\021map_sint64_" +
      "sint64\030\006 \003(\01323.protobuf_unittest.TestMap" +
      "Lite.MapSint64Sint64Entry\022R\n\023map_fixed32" +
      "_fixed32\030\007 \003(\01325.protobuf_unittest.TestM" +
      "apLite.MapFixed32Fixed32Entry\022R\n\023map_fix" +
      "ed64_fixed64\030\010 \003(\01325.protobuf_unittest.T" +
      "estMapLite.MapFixed64Fixed64Entry\022V\n\025map" +
      "_sfixed32_sfixed32\030\t \003(\01327.protobuf_unit" +
      "test.TestMapLite.MapSfixed32Sfixed32Entr" +
      "y\022V\n\025map_sfixed64_sfixed64\030\n \003(\01327.proto" +
      "buf_unittest.TestMapLite.MapSfixed64Sfix" +
      "ed64Entry\022J\n\017map_int32_float\030\013 \003(\01321.pro" +
      "tobuf_unittest.TestMapLite.MapInt32Float" +
      "Entry\022L\n\020map_int32_double\030\014 \003(\01322.protob" +
      "uf_unittest.TestMapLite.MapInt32DoubleEn" +
      "try\022F\n\rmap_bool_bool\030\r \003(\0132/.protobuf_un" +
      "ittest.TestMapLite.MapBoolBoolEntry\022N\n\021m" +
      "ap_string_string\030\016 \003(\01323.protobuf_unitte" +
      "st.TestMapLite.MapStringStringEntry\022J\n\017m" +
      "ap_int32_bytes\030\017 \003(\01321.protobuf_unittest" +
      ".TestMapLite.MapInt32BytesEntry\022H\n\016map_i" +
      "nt32_enum\030\020 \003(\01320.protobuf_unittest.Test" +
      "MapLite.MapInt32EnumEntry\022]\n\031map_int32_f" +
      "oreign_message\030\021 \003(\0132:.protobuf_unittest" +
      ".TestMapLite.MapInt32ForeignMessageEntry" +
      "\022>\n\010teboring\030\022 \003(\0132,.protobuf_unittest.T" +
      "estMapLite.TeboringEntry\0324\n\022MapInt32Int3" +
      "2Entry\022\013\n\003key\030\001 \001(\005\022\r\n\005value\030\002 \001(\005:\0028\001\0324" +
      "\n\022MapInt64Int64Entry\022\013\n\003key\030\001 \001(\003\022\r\n\005val" +
      "ue\030\002 \001(\003:\0028\001\0326\n\024MapUint32Uint32Entry\022\013\n\003" +
      "key\030\001 \001(\r\022\r\n\005value\030\002 \001(\r:\0028\001\0326\n\024MapUint6" +
      "4Uint64Entry\022\013\n\003key\030\001 \001(\004\022\r\n\005value\030\002 \001(\004" +
      ":\0028\001\0326\n\024MapSint32Sint32Entry\022\013\n\003key\030\001 \001(" +
      "\021\022\r\n\005value\030\002 \001(\021:\0028\001\0326\n\024MapSint64Sint64E" +
      "ntry\022\013\n\003key\030\001 \001(\022\022\r\n\005value\030\002 \001(\022:\0028\001\0328\n\026" +
      "MapFixed32Fixed32Entry\022\013\n\003key\030\001 \001(\007\022\r\n\005v" +
      "alue\030\002 \001(\007:\0028\001\0328\n\026MapFixed64Fixed64Entry" +
      "\022\013\n\003key\030\001 \001(\006\022\r\n\005value\030\002 \001(\006:\0028\001\032:\n\030MapS" +
      "fixed32Sfixed32Entry\022\013\n\003key\030\001 \001(\017\022\r\n\005val" +
      "ue\030\002 \001(\017:\0028\001\032:\n\030MapSfixed64Sfixed64Entry" +
      "\022\013\n\003key\030\001 \001(\020\022\r\n\005value\030\002 \001(\020:\0028\001\0324\n\022MapI" +
      "nt32FloatEntry\022\013\n\003key\030\001 \001(\005\022\r\n\005value\030\002 \001" +
      "(\002:\0028\001\0325\n\023MapInt32DoubleEntry\022\013\n\003key\030\001 \001" +
      "(\005\022\r\n\005value\030\002 \001(\001:\0028\001\0322\n\020MapBoolBoolEntr" +
      "y\022\013\n\003key\030\001 \001(\010\022\r\n\005value\030\002 \001(\010:\0028\001\0326\n\024Map" +
      "StringStringEntry\022\013\n\003key\030\001 \001(\t\022\r\n\005value\030" +
      "\002 \001(\t:\0028\001\0324\n\022MapInt32BytesEntry\022\013\n\003key\030\001" +
      " \001(\005\022\r\n\005value\030\002 \001(\014:\0028\001\032S\n\021MapInt32EnumE" +
      "ntry\022\013\n\003key\030\001 \001(\005\022-\n\005value\030\002 \001(\0162\036.proto" +
      "buf_unittest.MapEnumLite:\0028\001\032d\n\033MapInt32" +
      "ForeignMessageEntry\022\013\n\003key\030\001 \001(\005\0224\n\005valu" +
      "e\030\002 \001(\0132%.protobuf_unittest.ForeignMessa" +
      "geLite:\0028\001\032/\n\rTeboringEntry\022\013\n\003key\030\001 \001(\005" +
      "\022\r\n\005value\030\002 \001(\005:\0028\001\"\305\023\n\020TestArenaMapLite" +
      "\022O\n\017map_int32_int32\030\001 \003(\01326.protobuf_uni" +
      "ttest.TestArenaMapLite.MapInt32Int32Entr" +
      "y\022O\n\017map_int64_int64\030\002 \003(\01326.protobuf_un" +
      "ittest.TestArenaMapLite.MapInt64Int64Ent" +
      "ry\022S\n\021map_uint32_uint32\030\003 \003(\01328.protobuf" +
      "_unittest.TestArenaMapLite.MapUint32Uint" +
      "32Entry\022S\n\021map_uint64_uint64\030\004 \003(\01328.pro" +
      "tobuf_unittest.TestArenaMapLite.MapUint6" +
      "4Uint64Entry\022S\n\021map_sint32_sint32\030\005 \003(\0132" +
      "8.protobuf_unittest.TestArenaMapLite.Map" +
      "Sint32Sint32Entry\022S\n\021map_sint64_sint64\030\006" +
      " \003(\01328.protobuf_unittest.TestArenaMapLit" +
      "e.MapSint64Sint64Entry\022W\n\023map_fixed32_fi" +
      "xed32\030\007 \003(\0132:.protobuf_unittest.TestAren" +
      "aMapLite.MapFixed32Fixed32Entry\022W\n\023map_f" +
      "ixed64_fixed64\030\010 \003(\0132:.protobuf_unittest" +
      ".TestArenaMapLite.MapFixed64Fixed64Entry" +
      "\022[\n\025map_sfixed32_sfixed32\030\t \003(\0132<.protob" +
      "uf_unittest.TestArenaMapLite.MapSfixed32" +
      "Sfixed32Entry\022[\n\025map_sfixed64_sfixed64\030\n" +
      " \003(\0132<.protobuf_unittest.TestArenaMapLit" +
      "e.MapSfixed64Sfixed64Entry\022O\n\017map_int32_" +
      "float\030\013 \003(\01326.protobuf_unittest.TestAren" +
      "aMapLite.MapInt32FloatEntry\022Q\n\020map_int32" +
      "_double\030\014 \003(\01327.protobuf_unittest.TestAr" +
      "enaMapLite.MapInt32DoubleEntry\022K\n\rmap_bo" +
      "ol_bool\030\r \003(\01324.protobuf_unittest.TestAr" +
      "enaMapLite.MapBoolBoolEntry\022S\n\021map_strin" +
      "g_string\030\016 \003(\01328.protobuf_unittest.TestA" +
      "renaMapLite.MapStringStringEntry\022O\n\017map_" +
      "int32_bytes\030\017 \003(\01326.protobuf_unittest.Te" +
      "stArenaMapLite.MapInt32BytesEntry\022M\n\016map" +
      "_int32_enum\030\020 \003(\01325.protobuf_unittest.Te" +
      "stArenaMapLite.MapInt32EnumEntry\022b\n\031map_" +
      "int32_foreign_message\030\021 \003(\0132?.protobuf_u" +
      "nittest.TestArenaMapLite.MapInt32Foreign" +
      "MessageEntry\0324\n\022MapInt32Int32Entry\022\013\n\003ke" +
      "y\030\001 \001(\005\022\r\n\005value\030\002 \001(\005:\0028\001\0324\n\022MapInt64In" +
      "t64Entry\022\013\n\003key\030\001 \001(\003\022\r\n\005value\030\002 \001(\003:\0028\001" +
      "\0326\n\024MapUint32Uint32Entry\022\013\n\003key\030\001 \001(\r\022\r\n" +
      "\005value\030\002 \001(\r:\0028\001\0326\n\024MapUint64Uint64Entry" +
      "\022\013\n\003key\030\001 \001(\004\022\r\n\005value\030\002 \001(\004:\0028\001\0326\n\024MapS" +
      "int32Sint32Entry\022\013\n\003key\030\001 \001(\021\022\r\n\005value\030\002" +
      " \001(\021:\0028\001\0326\n\024MapSint64Sint64Entry\022\013\n\003key\030" +
      "\001 \001(\022\022\r\n\005value\030\002 \001(\022:\0028\001\0328\n\026MapFixed32Fi" +
      "xed32Entry\022\013\n\003key\030\001 \001(\007\022\r\n\005value\030\002 \001(\007:\002" +
      "8\001\0328\n\026MapFixed64Fixed64Entry\022\013\n\003key\030\001 \001(" +
      "\006\022\r\n\005value\030\002 \001(\006:\0028\001\032:\n\030MapSfixed32Sfixe" +
      "d32Entry\022\013\n\003key\030\001 \001(\017\022\r\n\005value\030\002 \001(\017:\0028\001" +
      "\032:\n\030MapSfixed64Sfixed64Entry\022\013\n\003key\030\001 \001(" +
      "\020\022\r\n\005value\030\002 \001(\020:\0028\001\0324\n\022MapInt32FloatEnt" +
      "ry\022\013\n\003key\030\001 \001(\005\022\r\n\005value\030\002 \001(\002:\0028\001\0325\n\023Ma" +
      "pInt32DoubleEntry\022\013\n\003key\030\001 \001(\005\022\r\n\005value\030" +
      "\002 \001(\001:\0028\001\0322\n\020MapBoolBoolEntry\022\013\n\003key\030\001 \001" +
      "(\010\022\r\n\005value\030\002 \001(\010:\0028\001\0326\n\024MapStringString" +
      "Entry\022\013\n\003key\030\001 \001(\t\022\r\n\005value\030\002 \001(\t:\0028\001\0324\n" +
      "\022MapInt32BytesEntry\022\013\n\003key\030\001 \001(\005\022\r\n\005valu" +
      "e\030\002 \001(\014:\0028\001\032S\n\021MapInt32EnumEntry\022\013\n\003key\030" +
      "\001 \001(\005\022-\n\005value\030\002 \001(\0162\036.protobuf_unittest" +
      ".MapEnumLite:\0028\001\032i\n\033MapInt32ForeignMessa" +
      "geEntry\022\013\n\003key\030\001 \001(\005\0229\n\005value\030\002 \001(\0132*.pr" +
      "otobuf_unittest.ForeignMessageArenaLite:" +
      "\0028\001\"\302\001\n\032TestRequiredMessageMapLite\022N\n\tma" +
      "p_field\030\001 \003(\0132;.protobuf_unittest.TestRe" +
      "quiredMessageMapLite.MapFieldEntry\032T\n\rMa" +
      "pFieldEntry\022\013\n\003key\030\001 \001(\005\0222\n\005value\030\002 \001(\0132" +
      "#.protobuf_unittest.TestRequiredLite:\0028\001" +
      "\"\357\002\n\017TestEnumMapLite\022N\n\017known_map_field\030" +
      "e \003(\01325.protobuf_unittest.TestEnumMapLit" +
      "e.KnownMapFieldEntry\022R\n\021unknown_map_fiel" +
      "d\030f \003(\01327.protobuf_unittest.TestEnumMapL" +
      "ite.UnknownMapFieldEntry\032Z\n\022KnownMapFiel" +
      "dEntry\022\013\n\003key\030\001 \001(\005\0223\n\005value\030\002 \001(\0162$.pro" +
      "tobuf_unittest.Proto2MapEnumLite:\0028\001\032\\\n\024" +
      "UnknownMapFieldEntry\022\013\n\003key\030\001 \001(\005\0223\n\005val" +
      "ue\030\002 \001(\0162$.protobuf_unittest.Proto2MapEn" +
      "umLite:\0028\001\"\234\003\n\030TestEnumMapPlusExtraLite\022" +
      "W\n\017known_map_field\030e \003(\0132>.protobuf_unit" +
      "test.TestEnumMapPlusExtraLite.KnownMapFi" +
      "eldEntry\022[\n\021unknown_map_field\030f \003(\0132@.pr" +
      "otobuf_unittest.TestEnumMapPlusExtraLite" +
      ".UnknownMapFieldEntry\032c\n\022KnownMapFieldEn" +
      "try\022\013\n\003key\030\001 \001(\005\022<\n\005value\030\002 \001(\0162-.protob" +
      "uf_unittest.Proto2MapEnumPlusExtraLite:\002" +
      "8\001\032e\n\024UnknownMapFieldEntry\022\013\n\003key\030\001 \001(\005\022" +
      "<\n\005value\030\002 \001(\0162-.protobuf_unittest.Proto" +
      "2MapEnumPlusExtraLite:\0028\001\"\310\001\n\022TestMessag" +
      "eMapLite\022U\n\021map_int32_message\030\001 \003(\0132:.pr" +
      "otobuf_unittest.TestMessageMapLite.MapIn" +
      "t32MessageEntry\032[\n\024MapInt32MessageEntry\022" +
      "\013\n\003key\030\001 \001(\005\0222\n\005value\030\002 \001(\0132#.protobuf_u" +
      "nittest.TestAllTypesLite:\0028\001\"\223\001\n\020TestReq" +
      "uiredLite\022\t\n\001a\030\001 \002(\005\022\t\n\001b\030\002 \002(\005\022\t\n\001c\030\003 \002" +
      "(\0052^\n\006single\022(.protobuf_unittest.TestAll" +
      "ExtensionsLite\030\350\007 \001(\0132#.protobuf_unittes" +
      "t.TestRequiredLite\"$\n\027ForeignMessageAren" +
      "aLite\022\t\n\001c\030\001 \001(\005*m\n\021Proto2MapEnumLite\022\034\n" +
      "\030PROTO2_MAP_ENUM_FOO_LITE\020\000\022\034\n\030PROTO2_MA" +
      "P_ENUM_BAR_LITE\020\001\022\034\n\030PROTO2_MAP_ENUM_BAZ" +
      "_LITE\020\002*\236\001\n\032Proto2MapEnumPlusExtraLite\022\036" +
      "\n\032E_PROTO2_MAP_ENUM_FOO_LITE\020\000\022\036\n\032E_PROT" +
      "O2_MAP_ENUM_BAR_LITE\020\001\022\036\n\032E_PROTO2_MAP_E" +
      "NUM_BAZ_LITE\020\002\022 \n\034E_PROTO2_MAP_ENUM_EXTR" +
      "A_LITE\020\003*R\n\013MapEnumLite\022\025\n\021MAP_ENUM_FOO_" +
      "LITE\020\000\022\025\n\021MAP_ENUM_BAR_LITE\020\001\022\025\n\021MAP_ENU" +
      "M_BAZ_LITE\020\002B\005H\003\370\001\001"
    };
    descriptor = com.google.protobuf.Descriptors.FileDescriptor
      .internalBuildGeneratedFileFrom(descriptorData,
        new com.google.protobuf.Descriptors.FileDescriptor[] {
          com.google.protobuf.UnittestLite.getDescriptor(),
        });
    internal_static_protobuf_unittest_TestMapLite_descriptor =
      getDescriptor().getMessageTypes().get(0);
    internal_static_protobuf_unittest_TestMapLite_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_protobuf_unittest_TestMapLite_descriptor,
        new java.lang.String[] { "MapInt32Int32", "MapInt64Int64", "MapUint32Uint32", "MapUint64Uint64", "MapSint32Sint32", "MapSint64Sint64", "MapFixed32Fixed32", "MapFixed64Fixed64", "MapSfixed32Sfixed32", "MapSfixed64Sfixed64", "MapInt32Float", "MapInt32Double", "MapBoolBool", "MapStringString", "MapInt32Bytes", "MapInt32Enum", "MapInt32ForeignMessage", "Teboring", });
    internal_static_protobuf_unittest_TestMapLite_MapInt32Int32Entry_descriptor =
      internal_static_protobuf_unittest_TestMapLite_descriptor.getNestedTypes().get(0);
    internal_static_protobuf_unittest_TestMapLite_MapInt32Int32Entry_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_protobuf_unittest_TestMapLite_MapInt32Int32Entry_descriptor,
        new java.lang.String[] { "Key", "Value", });
    internal_static_protobuf_unittest_TestMapLite_MapInt64Int64Entry_descriptor =
      internal_static_protobuf_unittest_TestMapLite_descriptor.getNestedTypes().get(1);
    internal_static_protobuf_unittest_TestMapLite_MapInt64Int64Entry_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_protobuf_unittest_TestMapLite_MapInt64Int64Entry_descriptor,
        new java.lang.String[] { "Key", "Value", });
    internal_static_protobuf_unittest_TestMapLite_MapUint32Uint32Entry_descriptor =
      internal_static_protobuf_unittest_TestMapLite_descriptor.getNestedTypes().get(2);
    internal_static_protobuf_unittest_TestMapLite_MapUint32Uint32Entry_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_protobuf_unittest_TestMapLite_MapUint32Uint32Entry_descriptor,
        new java.lang.String[] { "Key", "Value", });
    internal_static_protobuf_unittest_TestMapLite_MapUint64Uint64Entry_descriptor =
      internal_static_protobuf_unittest_TestMapLite_descriptor.getNestedTypes().get(3);
    internal_static_protobuf_unittest_TestMapLite_MapUint64Uint64Entry_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_protobuf_unittest_TestMapLite_MapUint64Uint64Entry_descriptor,
        new java.lang.String[] { "Key", "Value", });
    internal_static_protobuf_unittest_TestMapLite_MapSint32Sint32Entry_descriptor =
      internal_static_protobuf_unittest_TestMapLite_descriptor.getNestedTypes().get(4);
    internal_static_protobuf_unittest_TestMapLite_MapSint32Sint32Entry_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_protobuf_unittest_TestMapLite_MapSint32Sint32Entry_descriptor,
        new java.lang.String[] { "Key", "Value", });
    internal_static_protobuf_unittest_TestMapLite_MapSint64Sint64Entry_descriptor =
      internal_static_protobuf_unittest_TestMapLite_descriptor.getNestedTypes().get(5);
    internal_static_protobuf_unittest_TestMapLite_MapSint64Sint64Entry_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_protobuf_unittest_TestMapLite_MapSint64Sint64Entry_descriptor,
        new java.lang.String[] { "Key", "Value", });
    internal_static_protobuf_unittest_TestMapLite_MapFixed32Fixed32Entry_descriptor =
      internal_static_protobuf_unittest_TestMapLite_descriptor.getNestedTypes().get(6);
    internal_static_protobuf_unittest_TestMapLite_MapFixed32Fixed32Entry_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_protobuf_unittest_TestMapLite_MapFixed32Fixed32Entry_descriptor,
        new java.lang.String[] { "Key", "Value", });
    internal_static_protobuf_unittest_TestMapLite_MapFixed64Fixed64Entry_descriptor =
      internal_static_protobuf_unittest_TestMapLite_descriptor.getNestedTypes().get(7);
    internal_static_protobuf_unittest_TestMapLite_MapFixed64Fixed64Entry_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_protobuf_unittest_TestMapLite_MapFixed64Fixed64Entry_descriptor,
        new java.lang.String[] { "Key", "Value", });
    internal_static_protobuf_unittest_TestMapLite_MapSfixed32Sfixed32Entry_descriptor =
      internal_static_protobuf_unittest_TestMapLite_descriptor.getNestedTypes().get(8);
    internal_static_protobuf_unittest_TestMapLite_MapSfixed32Sfixed32Entry_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_protobuf_unittest_TestMapLite_MapSfixed32Sfixed32Entry_descriptor,
        new java.lang.String[] { "Key", "Value", });
    internal_static_protobuf_unittest_TestMapLite_MapSfixed64Sfixed64Entry_descriptor =
      internal_static_protobuf_unittest_TestMapLite_descriptor.getNestedTypes().get(9);
    internal_static_protobuf_unittest_TestMapLite_MapSfixed64Sfixed64Entry_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_protobuf_unittest_TestMapLite_MapSfixed64Sfixed64Entry_descriptor,
        new java.lang.String[] { "Key", "Value", });
    internal_static_protobuf_unittest_TestMapLite_MapInt32FloatEntry_descriptor =
      internal_static_protobuf_unittest_TestMapLite_descriptor.getNestedTypes().get(10);
    internal_static_protobuf_unittest_TestMapLite_MapInt32FloatEntry_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_protobuf_unittest_TestMapLite_MapInt32FloatEntry_descriptor,
        new java.lang.String[] { "Key", "Value", });
    internal_static_protobuf_unittest_TestMapLite_MapInt32DoubleEntry_descriptor =
      internal_static_protobuf_unittest_TestMapLite_descriptor.getNestedTypes().get(11);
    internal_static_protobuf_unittest_TestMapLite_MapInt32DoubleEntry_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_protobuf_unittest_TestMapLite_MapInt32DoubleEntry_descriptor,
        new java.lang.String[] { "Key", "Value", });
    internal_static_protobuf_unittest_TestMapLite_MapBoolBoolEntry_descriptor =
      internal_static_protobuf_unittest_TestMapLite_descriptor.getNestedTypes().get(12);
    internal_static_protobuf_unittest_TestMapLite_MapBoolBoolEntry_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_protobuf_unittest_TestMapLite_MapBoolBoolEntry_descriptor,
        new java.lang.String[] { "Key", "Value", });
    internal_static_protobuf_unittest_TestMapLite_MapStringStringEntry_descriptor =
      internal_static_protobuf_unittest_TestMapLite_descriptor.getNestedTypes().get(13);
    internal_static_protobuf_unittest_TestMapLite_MapStringStringEntry_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_protobuf_unittest_TestMapLite_MapStringStringEntry_descriptor,
        new java.lang.String[] { "Key", "Value", });
    internal_static_protobuf_unittest_TestMapLite_MapInt32BytesEntry_descriptor =
      internal_static_protobuf_unittest_TestMapLite_descriptor.getNestedTypes().get(14);
    internal_static_protobuf_unittest_TestMapLite_MapInt32BytesEntry_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_protobuf_unittest_TestMapLite_MapInt32BytesEntry_descriptor,
        new java.lang.String[] { "Key", "Value", });
    internal_static_protobuf_unittest_TestMapLite_MapInt32EnumEntry_descriptor =
      internal_static_protobuf_unittest_TestMapLite_descriptor.getNestedTypes().get(15);
    internal_static_protobuf_unittest_TestMapLite_MapInt32EnumEntry_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_protobuf_unittest_TestMapLite_MapInt32EnumEntry_descriptor,
        new java.lang.String[] { "Key", "Value", });
    internal_static_protobuf_unittest_TestMapLite_MapInt32ForeignMessageEntry_descriptor =
      internal_static_protobuf_unittest_TestMapLite_descriptor.getNestedTypes().get(16);
    internal_static_protobuf_unittest_TestMapLite_MapInt32ForeignMessageEntry_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_protobuf_unittest_TestMapLite_MapInt32ForeignMessageEntry_descriptor,
        new java.lang.String[] { "Key", "Value", });
    internal_static_protobuf_unittest_TestMapLite_TeboringEntry_descriptor =
      internal_static_protobuf_unittest_TestMapLite_descriptor.getNestedTypes().get(17);
    internal_static_protobuf_unittest_TestMapLite_TeboringEntry_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_protobuf_unittest_TestMapLite_TeboringEntry_descriptor,
        new java.lang.String[] { "Key", "Value", });
    internal_static_protobuf_unittest_TestArenaMapLite_descriptor =
      getDescriptor().getMessageTypes().get(1);
    internal_static_protobuf_unittest_TestArenaMapLite_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_protobuf_unittest_TestArenaMapLite_descriptor,
        new java.lang.String[] { "MapInt32Int32", "MapInt64Int64", "MapUint32Uint32", "MapUint64Uint64", "MapSint32Sint32", "MapSint64Sint64", "MapFixed32Fixed32", "MapFixed64Fixed64", "MapSfixed32Sfixed32", "MapSfixed64Sfixed64", "MapInt32Float", "MapInt32Double", "MapBoolBool", "MapStringString", "MapInt32Bytes", "MapInt32Enum", "MapInt32ForeignMessage", });
    internal_static_protobuf_unittest_TestArenaMapLite_MapInt32Int32Entry_descriptor =
      internal_static_protobuf_unittest_TestArenaMapLite_descriptor.getNestedTypes().get(0);
    internal_static_protobuf_unittest_TestArenaMapLite_MapInt32Int32Entry_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_protobuf_unittest_TestArenaMapLite_MapInt32Int32Entry_descriptor,
        new java.lang.String[] { "Key", "Value", });
    internal_static_protobuf_unittest_TestArenaMapLite_MapInt64Int64Entry_descriptor =
      internal_static_protobuf_unittest_TestArenaMapLite_descriptor.getNestedTypes().get(1);
    internal_static_protobuf_unittest_TestArenaMapLite_MapInt64Int64Entry_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_protobuf_unittest_TestArenaMapLite_MapInt64Int64Entry_descriptor,
        new java.lang.String[] { "Key", "Value", });
    internal_static_protobuf_unittest_TestArenaMapLite_MapUint32Uint32Entry_descriptor =
      internal_static_protobuf_unittest_TestArenaMapLite_descriptor.getNestedTypes().get(2);
    internal_static_protobuf_unittest_TestArenaMapLite_MapUint32Uint32Entry_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_protobuf_unittest_TestArenaMapLite_MapUint32Uint32Entry_descriptor,
        new java.lang.String[] { "Key", "Value", });
    internal_static_protobuf_unittest_TestArenaMapLite_MapUint64Uint64Entry_descriptor =
      internal_static_protobuf_unittest_TestArenaMapLite_descriptor.getNestedTypes().get(3);
    internal_static_protobuf_unittest_TestArenaMapLite_MapUint64Uint64Entry_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_protobuf_unittest_TestArenaMapLite_MapUint64Uint64Entry_descriptor,
        new java.lang.String[] { "Key", "Value", });
    internal_static_protobuf_unittest_TestArenaMapLite_MapSint32Sint32Entry_descriptor =
      internal_static_protobuf_unittest_TestArenaMapLite_descriptor.getNestedTypes().get(4);
    internal_static_protobuf_unittest_TestArenaMapLite_MapSint32Sint32Entry_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_protobuf_unittest_TestArenaMapLite_MapSint32Sint32Entry_descriptor,
        new java.lang.String[] { "Key", "Value", });
    internal_static_protobuf_unittest_TestArenaMapLite_MapSint64Sint64Entry_descriptor =
      internal_static_protobuf_unittest_TestArenaMapLite_descriptor.getNestedTypes().get(5);
    internal_static_protobuf_unittest_TestArenaMapLite_MapSint64Sint64Entry_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_protobuf_unittest_TestArenaMapLite_MapSint64Sint64Entry_descriptor,
        new java.lang.String[] { "Key", "Value", });
    internal_static_protobuf_unittest_TestArenaMapLite_MapFixed32Fixed32Entry_descriptor =
      internal_static_protobuf_unittest_TestArenaMapLite_descriptor.getNestedTypes().get(6);
    internal_static_protobuf_unittest_TestArenaMapLite_MapFixed32Fixed32Entry_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_protobuf_unittest_TestArenaMapLite_MapFixed32Fixed32Entry_descriptor,
        new java.lang.String[] { "Key", "Value", });
    internal_static_protobuf_unittest_TestArenaMapLite_MapFixed64Fixed64Entry_descriptor =
      internal_static_protobuf_unittest_TestArenaMapLite_descriptor.getNestedTypes().get(7);
    internal_static_protobuf_unittest_TestArenaMapLite_MapFixed64Fixed64Entry_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_protobuf_unittest_TestArenaMapLite_MapFixed64Fixed64Entry_descriptor,
        new java.lang.String[] { "Key", "Value", });
    internal_static_protobuf_unittest_TestArenaMapLite_MapSfixed32Sfixed32Entry_descriptor =
      internal_static_protobuf_unittest_TestArenaMapLite_descriptor.getNestedTypes().get(8);
    internal_static_protobuf_unittest_TestArenaMapLite_MapSfixed32Sfixed32Entry_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_protobuf_unittest_TestArenaMapLite_MapSfixed32Sfixed32Entry_descriptor,
        new java.lang.String[] { "Key", "Value", });
    internal_static_protobuf_unittest_TestArenaMapLite_MapSfixed64Sfixed64Entry_descriptor =
      internal_static_protobuf_unittest_TestArenaMapLite_descriptor.getNestedTypes().get(9);
    internal_static_protobuf_unittest_TestArenaMapLite_MapSfixed64Sfixed64Entry_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_protobuf_unittest_TestArenaMapLite_MapSfixed64Sfixed64Entry_descriptor,
        new java.lang.String[] { "Key", "Value", });
    internal_static_protobuf_unittest_TestArenaMapLite_MapInt32FloatEntry_descriptor =
      internal_static_protobuf_unittest_TestArenaMapLite_descriptor.getNestedTypes().get(10);
    internal_static_protobuf_unittest_TestArenaMapLite_MapInt32FloatEntry_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_protobuf_unittest_TestArenaMapLite_MapInt32FloatEntry_descriptor,
        new java.lang.String[] { "Key", "Value", });
    internal_static_protobuf_unittest_TestArenaMapLite_MapInt32DoubleEntry_descriptor =
      internal_static_protobuf_unittest_TestArenaMapLite_descriptor.getNestedTypes().get(11);
    internal_static_protobuf_unittest_TestArenaMapLite_MapInt32DoubleEntry_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_protobuf_unittest_TestArenaMapLite_MapInt32DoubleEntry_descriptor,
        new java.lang.String[] { "Key", "Value", });
    internal_static_protobuf_unittest_TestArenaMapLite_MapBoolBoolEntry_descriptor =
      internal_static_protobuf_unittest_TestArenaMapLite_descriptor.getNestedTypes().get(12);
    internal_static_protobuf_unittest_TestArenaMapLite_MapBoolBoolEntry_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_protobuf_unittest_TestArenaMapLite_MapBoolBoolEntry_descriptor,
        new java.lang.String[] { "Key", "Value", });
    internal_static_protobuf_unittest_TestArenaMapLite_MapStringStringEntry_descriptor =
      internal_static_protobuf_unittest_TestArenaMapLite_descriptor.getNestedTypes().get(13);
    internal_static_protobuf_unittest_TestArenaMapLite_MapStringStringEntry_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_protobuf_unittest_TestArenaMapLite_MapStringStringEntry_descriptor,
        new java.lang.String[] { "Key", "Value", });
    internal_static_protobuf_unittest_TestArenaMapLite_MapInt32BytesEntry_descriptor =
      internal_static_protobuf_unittest_TestArenaMapLite_descriptor.getNestedTypes().get(14);
    internal_static_protobuf_unittest_TestArenaMapLite_MapInt32BytesEntry_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_protobuf_unittest_TestArenaMapLite_MapInt32BytesEntry_descriptor,
        new java.lang.String[] { "Key", "Value", });
    internal_static_protobuf_unittest_TestArenaMapLite_MapInt32EnumEntry_descriptor =
      internal_static_protobuf_unittest_TestArenaMapLite_descriptor.getNestedTypes().get(15);
    internal_static_protobuf_unittest_TestArenaMapLite_MapInt32EnumEntry_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_protobuf_unittest_TestArenaMapLite_MapInt32EnumEntry_descriptor,
        new java.lang.String[] { "Key", "Value", });
    internal_static_protobuf_unittest_TestArenaMapLite_MapInt32ForeignMessageEntry_descriptor =
      internal_static_protobuf_unittest_TestArenaMapLite_descriptor.getNestedTypes().get(16);
    internal_static_protobuf_unittest_TestArenaMapLite_MapInt32ForeignMessageEntry_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_protobuf_unittest_TestArenaMapLite_MapInt32ForeignMessageEntry_descriptor,
        new java.lang.String[] { "Key", "Value", });
    internal_static_protobuf_unittest_TestRequiredMessageMapLite_descriptor =
      getDescriptor().getMessageTypes().get(2);
    internal_static_protobuf_unittest_TestRequiredMessageMapLite_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_protobuf_unittest_TestRequiredMessageMapLite_descriptor,
        new java.lang.String[] { "MapField", });
    internal_static_protobuf_unittest_TestRequiredMessageMapLite_MapFieldEntry_descriptor =
      internal_static_protobuf_unittest_TestRequiredMessageMapLite_descriptor.getNestedTypes().get(0);
    internal_static_protobuf_unittest_TestRequiredMessageMapLite_MapFieldEntry_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_protobuf_unittest_TestRequiredMessageMapLite_MapFieldEntry_descriptor,
        new java.lang.String[] { "Key", "Value", });
    internal_static_protobuf_unittest_TestEnumMapLite_descriptor =
      getDescriptor().getMessageTypes().get(3);
    internal_static_protobuf_unittest_TestEnumMapLite_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_protobuf_unittest_TestEnumMapLite_descriptor,
        new java.lang.String[] { "KnownMapField", "UnknownMapField", });
    internal_static_protobuf_unittest_TestEnumMapLite_KnownMapFieldEntry_descriptor =
      internal_static_protobuf_unittest_TestEnumMapLite_descriptor.getNestedTypes().get(0);
    internal_static_protobuf_unittest_TestEnumMapLite_KnownMapFieldEntry_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_protobuf_unittest_TestEnumMapLite_KnownMapFieldEntry_descriptor,
        new java.lang.String[] { "Key", "Value", });
    internal_static_protobuf_unittest_TestEnumMapLite_UnknownMapFieldEntry_descriptor =
      internal_static_protobuf_unittest_TestEnumMapLite_descriptor.getNestedTypes().get(1);
    internal_static_protobuf_unittest_TestEnumMapLite_UnknownMapFieldEntry_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_protobuf_unittest_TestEnumMapLite_UnknownMapFieldEntry_descriptor,
        new java.lang.String[] { "Key", "Value", });
    internal_static_protobuf_unittest_TestEnumMapPlusExtraLite_descriptor =
      getDescriptor().getMessageTypes().get(4);
    internal_static_protobuf_unittest_TestEnumMapPlusExtraLite_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_protobuf_unittest_TestEnumMapPlusExtraLite_descriptor,
        new java.lang.String[] { "KnownMapField", "UnknownMapField", });
    internal_static_protobuf_unittest_TestEnumMapPlusExtraLite_KnownMapFieldEntry_descriptor =
      internal_static_protobuf_unittest_TestEnumMapPlusExtraLite_descriptor.getNestedTypes().get(0);
    internal_static_protobuf_unittest_TestEnumMapPlusExtraLite_KnownMapFieldEntry_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_protobuf_unittest_TestEnumMapPlusExtraLite_KnownMapFieldEntry_descriptor,
        new java.lang.String[] { "Key", "Value", });
    internal_static_protobuf_unittest_TestEnumMapPlusExtraLite_UnknownMapFieldEntry_descriptor =
      internal_static_protobuf_unittest_TestEnumMapPlusExtraLite_descriptor.getNestedTypes().get(1);
    internal_static_protobuf_unittest_TestEnumMapPlusExtraLite_UnknownMapFieldEntry_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_protobuf_unittest_TestEnumMapPlusExtraLite_UnknownMapFieldEntry_descriptor,
        new java.lang.String[] { "Key", "Value", });
    internal_static_protobuf_unittest_TestMessageMapLite_descriptor =
      getDescriptor().getMessageTypes().get(5);
    internal_static_protobuf_unittest_TestMessageMapLite_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_protobuf_unittest_TestMessageMapLite_descriptor,
        new java.lang.String[] { "MapInt32Message", });
    internal_static_protobuf_unittest_TestMessageMapLite_MapInt32MessageEntry_descriptor =
      internal_static_protobuf_unittest_TestMessageMapLite_descriptor.getNestedTypes().get(0);
    internal_static_protobuf_unittest_TestMessageMapLite_MapInt32MessageEntry_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_protobuf_unittest_TestMessageMapLite_MapInt32MessageEntry_descriptor,
        new java.lang.String[] { "Key", "Value", });
    internal_static_protobuf_unittest_TestRequiredLite_descriptor =
      getDescriptor().getMessageTypes().get(6);
    internal_static_protobuf_unittest_TestRequiredLite_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_protobuf_unittest_TestRequiredLite_descriptor,
        new java.lang.String[] { "A", "B", "C", });
    internal_static_protobuf_unittest_ForeignMessageArenaLite_descriptor =
      getDescriptor().getMessageTypes().get(7);
    internal_static_protobuf_unittest_ForeignMessageArenaLite_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_protobuf_unittest_ForeignMessageArenaLite_descriptor,
        new java.lang.String[] { "C", });
    com.google.protobuf.UnittestLite.getDescriptor();
  }

  // @@protoc_insertion_point(outer_class_scope)
}
