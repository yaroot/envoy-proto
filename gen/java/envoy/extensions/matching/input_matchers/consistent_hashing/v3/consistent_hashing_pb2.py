# -*- coding: utf-8 -*-
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: envoy/extensions/matching/input_matchers/consistent_hashing/v3/consistent_hashing.proto
"""Generated protocol buffer code."""
from google.protobuf import descriptor as _descriptor
from google.protobuf import message as _message
from google.protobuf import reflection as _reflection
from google.protobuf import symbol_database as _symbol_database
# @@protoc_insertion_point(imports)

_sym_db = _symbol_database.Default()


from udpa.annotations import status_pb2 as udpa_dot_annotations_dot_status__pb2
from validate import validate_pb2 as validate_dot_validate__pb2


DESCRIPTOR = _descriptor.FileDescriptor(
  name='envoy/extensions/matching/input_matchers/consistent_hashing/v3/consistent_hashing.proto',
  package='envoy.extensions.matching.input_matchers.consistent_hashing.v3',
  syntax='proto3',
  serialized_options=b'\nLio.envoyproxy.envoy.extensions.matching.input_matchers.consistent_hashing.v3B\026ConsistentHashingProtoP\001\272\200\310\321\006\002\020\002',
  create_key=_descriptor._internal_create_key,
  serialized_pb=b'\nWenvoy/extensions/matching/input_matchers/consistent_hashing/v3/consistent_hashing.proto\x12>envoy.extensions.matching.input_matchers.consistent_hashing.v3\x1a\x1dudpa/annotations/status.proto\x1a\x17validate/validate.proto\"M\n\x11\x43onsistentHashing\x12\x11\n\tthreshold\x18\x01 \x01(\r\x12\x17\n\x06modulo\x18\x02 \x01(\rB\x07\xfa\x42\x04*\x02 \x00\x12\x0c\n\x04seed\x18\x03 \x01(\x04\x42p\nLio.envoyproxy.envoy.extensions.matching.input_matchers.consistent_hashing.v3B\x16\x43onsistentHashingProtoP\x01\xba\x80\xc8\xd1\x06\x02\x10\x02\x62\x06proto3'
  ,
  dependencies=[udpa_dot_annotations_dot_status__pb2.DESCRIPTOR,validate_dot_validate__pb2.DESCRIPTOR,])




_CONSISTENTHASHING = _descriptor.Descriptor(
  name='ConsistentHashing',
  full_name='envoy.extensions.matching.input_matchers.consistent_hashing.v3.ConsistentHashing',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  create_key=_descriptor._internal_create_key,
  fields=[
    _descriptor.FieldDescriptor(
      name='threshold', full_name='envoy.extensions.matching.input_matchers.consistent_hashing.v3.ConsistentHashing.threshold', index=0,
      number=1, type=13, cpp_type=3, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='modulo', full_name='envoy.extensions.matching.input_matchers.consistent_hashing.v3.ConsistentHashing.modulo', index=1,
      number=2, type=13, cpp_type=3, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=b'\372B\004*\002 \000', file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='seed', full_name='envoy.extensions.matching.input_matchers.consistent_hashing.v3.ConsistentHashing.seed', index=2,
      number=3, type=4, cpp_type=4, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=211,
  serialized_end=288,
)

DESCRIPTOR.message_types_by_name['ConsistentHashing'] = _CONSISTENTHASHING
_sym_db.RegisterFileDescriptor(DESCRIPTOR)

ConsistentHashing = _reflection.GeneratedProtocolMessageType('ConsistentHashing', (_message.Message,), {
  'DESCRIPTOR' : _CONSISTENTHASHING,
  '__module__' : 'envoy.extensions.matching.input_matchers.consistent_hashing.v3.consistent_hashing_pb2'
  # @@protoc_insertion_point(class_scope:envoy.extensions.matching.input_matchers.consistent_hashing.v3.ConsistentHashing)
  })
_sym_db.RegisterMessage(ConsistentHashing)


DESCRIPTOR._options = None
_CONSISTENTHASHING.fields_by_name['modulo']._options = None
# @@protoc_insertion_point(module_scope)
