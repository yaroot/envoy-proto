// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: envoy/service/rate_limit_quota/v3/rlqs.proto

package io.envoyproxy.envoy.service.rate_limit_quota.v3;

public interface RateLimitQuotaUsageReportsOrBuilder extends
    // @@protoc_insertion_point(interface_extends:envoy.service.rate_limit_quota.v3.RateLimitQuotaUsageReports)
    com.google.protobuf.MessageOrBuilder {

  /**
   * <pre>
   * All quota requests must specify the domain. This enables sharing the quota
   * server between different applications without fear of overlap.
   * E.g., "envoy".
   * Should only be provided in the first report, all subsequent messages on the same
   * stream are considered to be in the same domain. In case the domain needs to be
   * changes, close the stream, and reopen a new one with the different domain.
   * </pre>
   *
   * <code>string domain = 1 [(.validate.rules) = { ... }</code>
   * @return The domain.
   */
  java.lang.String getDomain();
  /**
   * <pre>
   * All quota requests must specify the domain. This enables sharing the quota
   * server between different applications without fear of overlap.
   * E.g., "envoy".
   * Should only be provided in the first report, all subsequent messages on the same
   * stream are considered to be in the same domain. In case the domain needs to be
   * changes, close the stream, and reopen a new one with the different domain.
   * </pre>
   *
   * <code>string domain = 1 [(.validate.rules) = { ... }</code>
   * @return The bytes for domain.
   */
  com.google.protobuf.ByteString
      getDomainBytes();

  /**
   * <pre>
   * A list of quota usage reports. The list is processed by the RLQS server in the same order
   * it's provided by the client.
   * </pre>
   *
   * <code>repeated .envoy.service.rate_limit_quota.v3.RateLimitQuotaUsageReports.BucketQuotaUsage bucket_quota_usages = 2 [(.validate.rules) = { ... }</code>
   */
  java.util.List<io.envoyproxy.envoy.service.rate_limit_quota.v3.RateLimitQuotaUsageReports.BucketQuotaUsage> 
      getBucketQuotaUsagesList();
  /**
   * <pre>
   * A list of quota usage reports. The list is processed by the RLQS server in the same order
   * it's provided by the client.
   * </pre>
   *
   * <code>repeated .envoy.service.rate_limit_quota.v3.RateLimitQuotaUsageReports.BucketQuotaUsage bucket_quota_usages = 2 [(.validate.rules) = { ... }</code>
   */
  io.envoyproxy.envoy.service.rate_limit_quota.v3.RateLimitQuotaUsageReports.BucketQuotaUsage getBucketQuotaUsages(int index);
  /**
   * <pre>
   * A list of quota usage reports. The list is processed by the RLQS server in the same order
   * it's provided by the client.
   * </pre>
   *
   * <code>repeated .envoy.service.rate_limit_quota.v3.RateLimitQuotaUsageReports.BucketQuotaUsage bucket_quota_usages = 2 [(.validate.rules) = { ... }</code>
   */
  int getBucketQuotaUsagesCount();
  /**
   * <pre>
   * A list of quota usage reports. The list is processed by the RLQS server in the same order
   * it's provided by the client.
   * </pre>
   *
   * <code>repeated .envoy.service.rate_limit_quota.v3.RateLimitQuotaUsageReports.BucketQuotaUsage bucket_quota_usages = 2 [(.validate.rules) = { ... }</code>
   */
  java.util.List<? extends io.envoyproxy.envoy.service.rate_limit_quota.v3.RateLimitQuotaUsageReports.BucketQuotaUsageOrBuilder> 
      getBucketQuotaUsagesOrBuilderList();
  /**
   * <pre>
   * A list of quota usage reports. The list is processed by the RLQS server in the same order
   * it's provided by the client.
   * </pre>
   *
   * <code>repeated .envoy.service.rate_limit_quota.v3.RateLimitQuotaUsageReports.BucketQuotaUsage bucket_quota_usages = 2 [(.validate.rules) = { ... }</code>
   */
  io.envoyproxy.envoy.service.rate_limit_quota.v3.RateLimitQuotaUsageReports.BucketQuotaUsageOrBuilder getBucketQuotaUsagesOrBuilder(
      int index);
}
