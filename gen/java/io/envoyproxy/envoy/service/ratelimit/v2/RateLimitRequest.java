// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: envoy/service/ratelimit/v2/rls.proto

package io.envoyproxy.envoy.service.ratelimit.v2;

/**
 * <pre>
 * Main message for a rate limit request. The rate limit service is designed to be fully generic
 * in the sense that it can operate on arbitrary hierarchical key/value pairs. The loaded
 * configuration will parse the request and find the most specific limit to apply. In addition,
 * a RateLimitRequest can contain multiple "descriptors" to limit on. When multiple descriptors
 * are provided, the server will limit on *ALL* of them and return an OVER_LIMIT response if any
 * of them are over limit. This enables more complex application level rate limiting scenarios
 * if desired.
 * </pre>
 *
 * Protobuf type {@code envoy.service.ratelimit.v2.RateLimitRequest}
 */
public final class RateLimitRequest extends
    com.google.protobuf.GeneratedMessageV3 implements
    // @@protoc_insertion_point(message_implements:envoy.service.ratelimit.v2.RateLimitRequest)
    RateLimitRequestOrBuilder {
private static final long serialVersionUID = 0L;
  // Use RateLimitRequest.newBuilder() to construct.
  private RateLimitRequest(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
    super(builder);
  }
  private RateLimitRequest() {
    domain_ = "";
    descriptors_ = java.util.Collections.emptyList();
  }

  @java.lang.Override
  @SuppressWarnings({"unused"})
  protected java.lang.Object newInstance(
      UnusedPrivateParameter unused) {
    return new RateLimitRequest();
  }

  @java.lang.Override
  public final com.google.protobuf.UnknownFieldSet
  getUnknownFields() {
    return this.unknownFields;
  }
  public static final com.google.protobuf.Descriptors.Descriptor
      getDescriptor() {
    return io.envoyproxy.envoy.service.ratelimit.v2.RlsProto.internal_static_envoy_service_ratelimit_v2_RateLimitRequest_descriptor;
  }

  @java.lang.Override
  protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internalGetFieldAccessorTable() {
    return io.envoyproxy.envoy.service.ratelimit.v2.RlsProto.internal_static_envoy_service_ratelimit_v2_RateLimitRequest_fieldAccessorTable
        .ensureFieldAccessorsInitialized(
            io.envoyproxy.envoy.service.ratelimit.v2.RateLimitRequest.class, io.envoyproxy.envoy.service.ratelimit.v2.RateLimitRequest.Builder.class);
  }

  public static final int DOMAIN_FIELD_NUMBER = 1;
  @SuppressWarnings("serial")
  private volatile java.lang.Object domain_ = "";
  /**
   * <pre>
   * All rate limit requests must specify a domain. This enables the configuration to be per
   * application without fear of overlap. E.g., "envoy".
   * </pre>
   *
   * <code>string domain = 1;</code>
   * @return The domain.
   */
  @java.lang.Override
  public java.lang.String getDomain() {
    java.lang.Object ref = domain_;
    if (ref instanceof java.lang.String) {
      return (java.lang.String) ref;
    } else {
      com.google.protobuf.ByteString bs = 
          (com.google.protobuf.ByteString) ref;
      java.lang.String s = bs.toStringUtf8();
      domain_ = s;
      return s;
    }
  }
  /**
   * <pre>
   * All rate limit requests must specify a domain. This enables the configuration to be per
   * application without fear of overlap. E.g., "envoy".
   * </pre>
   *
   * <code>string domain = 1;</code>
   * @return The bytes for domain.
   */
  @java.lang.Override
  public com.google.protobuf.ByteString
      getDomainBytes() {
    java.lang.Object ref = domain_;
    if (ref instanceof java.lang.String) {
      com.google.protobuf.ByteString b = 
          com.google.protobuf.ByteString.copyFromUtf8(
              (java.lang.String) ref);
      domain_ = b;
      return b;
    } else {
      return (com.google.protobuf.ByteString) ref;
    }
  }

  public static final int DESCRIPTORS_FIELD_NUMBER = 2;
  @SuppressWarnings("serial")
  private java.util.List<io.envoyproxy.envoy.api.v2.ratelimit.RateLimitDescriptor> descriptors_;
  /**
   * <pre>
   * All rate limit requests must specify at least one RateLimitDescriptor. Each descriptor is
   * processed by the service (see below). If any of the descriptors are over limit, the entire
   * request is considered to be over limit.
   * </pre>
   *
   * <code>repeated .envoy.api.v2.ratelimit.RateLimitDescriptor descriptors = 2;</code>
   */
  @java.lang.Override
  public java.util.List<io.envoyproxy.envoy.api.v2.ratelimit.RateLimitDescriptor> getDescriptorsList() {
    return descriptors_;
  }
  /**
   * <pre>
   * All rate limit requests must specify at least one RateLimitDescriptor. Each descriptor is
   * processed by the service (see below). If any of the descriptors are over limit, the entire
   * request is considered to be over limit.
   * </pre>
   *
   * <code>repeated .envoy.api.v2.ratelimit.RateLimitDescriptor descriptors = 2;</code>
   */
  @java.lang.Override
  public java.util.List<? extends io.envoyproxy.envoy.api.v2.ratelimit.RateLimitDescriptorOrBuilder> 
      getDescriptorsOrBuilderList() {
    return descriptors_;
  }
  /**
   * <pre>
   * All rate limit requests must specify at least one RateLimitDescriptor. Each descriptor is
   * processed by the service (see below). If any of the descriptors are over limit, the entire
   * request is considered to be over limit.
   * </pre>
   *
   * <code>repeated .envoy.api.v2.ratelimit.RateLimitDescriptor descriptors = 2;</code>
   */
  @java.lang.Override
  public int getDescriptorsCount() {
    return descriptors_.size();
  }
  /**
   * <pre>
   * All rate limit requests must specify at least one RateLimitDescriptor. Each descriptor is
   * processed by the service (see below). If any of the descriptors are over limit, the entire
   * request is considered to be over limit.
   * </pre>
   *
   * <code>repeated .envoy.api.v2.ratelimit.RateLimitDescriptor descriptors = 2;</code>
   */
  @java.lang.Override
  public io.envoyproxy.envoy.api.v2.ratelimit.RateLimitDescriptor getDescriptors(int index) {
    return descriptors_.get(index);
  }
  /**
   * <pre>
   * All rate limit requests must specify at least one RateLimitDescriptor. Each descriptor is
   * processed by the service (see below). If any of the descriptors are over limit, the entire
   * request is considered to be over limit.
   * </pre>
   *
   * <code>repeated .envoy.api.v2.ratelimit.RateLimitDescriptor descriptors = 2;</code>
   */
  @java.lang.Override
  public io.envoyproxy.envoy.api.v2.ratelimit.RateLimitDescriptorOrBuilder getDescriptorsOrBuilder(
      int index) {
    return descriptors_.get(index);
  }

  public static final int HITS_ADDEND_FIELD_NUMBER = 3;
  private int hitsAddend_ = 0;
  /**
   * <pre>
   * Rate limit requests can optionally specify the number of hits a request adds to the matched
   * limit. If the value is not set in the message, a request increases the matched limit by 1.
   * </pre>
   *
   * <code>uint32 hits_addend = 3;</code>
   * @return The hitsAddend.
   */
  @java.lang.Override
  public int getHitsAddend() {
    return hitsAddend_;
  }

  private byte memoizedIsInitialized = -1;
  @java.lang.Override
  public final boolean isInitialized() {
    byte isInitialized = memoizedIsInitialized;
    if (isInitialized == 1) return true;
    if (isInitialized == 0) return false;

    memoizedIsInitialized = 1;
    return true;
  }

  @java.lang.Override
  public void writeTo(com.google.protobuf.CodedOutputStream output)
                      throws java.io.IOException {
    if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(domain_)) {
      com.google.protobuf.GeneratedMessageV3.writeString(output, 1, domain_);
    }
    for (int i = 0; i < descriptors_.size(); i++) {
      output.writeMessage(2, descriptors_.get(i));
    }
    if (hitsAddend_ != 0) {
      output.writeUInt32(3, hitsAddend_);
    }
    getUnknownFields().writeTo(output);
  }

  @java.lang.Override
  public int getSerializedSize() {
    int size = memoizedSize;
    if (size != -1) return size;

    size = 0;
    if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(domain_)) {
      size += com.google.protobuf.GeneratedMessageV3.computeStringSize(1, domain_);
    }
    for (int i = 0; i < descriptors_.size(); i++) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(2, descriptors_.get(i));
    }
    if (hitsAddend_ != 0) {
      size += com.google.protobuf.CodedOutputStream
        .computeUInt32Size(3, hitsAddend_);
    }
    size += getUnknownFields().getSerializedSize();
    memoizedSize = size;
    return size;
  }

  @java.lang.Override
  public boolean equals(final java.lang.Object obj) {
    if (obj == this) {
     return true;
    }
    if (!(obj instanceof io.envoyproxy.envoy.service.ratelimit.v2.RateLimitRequest)) {
      return super.equals(obj);
    }
    io.envoyproxy.envoy.service.ratelimit.v2.RateLimitRequest other = (io.envoyproxy.envoy.service.ratelimit.v2.RateLimitRequest) obj;

    if (!getDomain()
        .equals(other.getDomain())) return false;
    if (!getDescriptorsList()
        .equals(other.getDescriptorsList())) return false;
    if (getHitsAddend()
        != other.getHitsAddend()) return false;
    if (!getUnknownFields().equals(other.getUnknownFields())) return false;
    return true;
  }

  @java.lang.Override
  public int hashCode() {
    if (memoizedHashCode != 0) {
      return memoizedHashCode;
    }
    int hash = 41;
    hash = (19 * hash) + getDescriptor().hashCode();
    hash = (37 * hash) + DOMAIN_FIELD_NUMBER;
    hash = (53 * hash) + getDomain().hashCode();
    if (getDescriptorsCount() > 0) {
      hash = (37 * hash) + DESCRIPTORS_FIELD_NUMBER;
      hash = (53 * hash) + getDescriptorsList().hashCode();
    }
    hash = (37 * hash) + HITS_ADDEND_FIELD_NUMBER;
    hash = (53 * hash) + getHitsAddend();
    hash = (29 * hash) + getUnknownFields().hashCode();
    memoizedHashCode = hash;
    return hash;
  }

  public static io.envoyproxy.envoy.service.ratelimit.v2.RateLimitRequest parseFrom(
      java.nio.ByteBuffer data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static io.envoyproxy.envoy.service.ratelimit.v2.RateLimitRequest parseFrom(
      java.nio.ByteBuffer data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static io.envoyproxy.envoy.service.ratelimit.v2.RateLimitRequest parseFrom(
      com.google.protobuf.ByteString data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static io.envoyproxy.envoy.service.ratelimit.v2.RateLimitRequest parseFrom(
      com.google.protobuf.ByteString data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static io.envoyproxy.envoy.service.ratelimit.v2.RateLimitRequest parseFrom(byte[] data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static io.envoyproxy.envoy.service.ratelimit.v2.RateLimitRequest parseFrom(
      byte[] data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static io.envoyproxy.envoy.service.ratelimit.v2.RateLimitRequest parseFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input);
  }
  public static io.envoyproxy.envoy.service.ratelimit.v2.RateLimitRequest parseFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input, extensionRegistry);
  }
  public static io.envoyproxy.envoy.service.ratelimit.v2.RateLimitRequest parseDelimitedFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseDelimitedWithIOException(PARSER, input);
  }
  public static io.envoyproxy.envoy.service.ratelimit.v2.RateLimitRequest parseDelimitedFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
  }
  public static io.envoyproxy.envoy.service.ratelimit.v2.RateLimitRequest parseFrom(
      com.google.protobuf.CodedInputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input);
  }
  public static io.envoyproxy.envoy.service.ratelimit.v2.RateLimitRequest parseFrom(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input, extensionRegistry);
  }

  @java.lang.Override
  public Builder newBuilderForType() { return newBuilder(); }
  public static Builder newBuilder() {
    return DEFAULT_INSTANCE.toBuilder();
  }
  public static Builder newBuilder(io.envoyproxy.envoy.service.ratelimit.v2.RateLimitRequest prototype) {
    return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
  }
  @java.lang.Override
  public Builder toBuilder() {
    return this == DEFAULT_INSTANCE
        ? new Builder() : new Builder().mergeFrom(this);
  }

  @java.lang.Override
  protected Builder newBuilderForType(
      com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
    Builder builder = new Builder(parent);
    return builder;
  }
  /**
   * <pre>
   * Main message for a rate limit request. The rate limit service is designed to be fully generic
   * in the sense that it can operate on arbitrary hierarchical key/value pairs. The loaded
   * configuration will parse the request and find the most specific limit to apply. In addition,
   * a RateLimitRequest can contain multiple "descriptors" to limit on. When multiple descriptors
   * are provided, the server will limit on *ALL* of them and return an OVER_LIMIT response if any
   * of them are over limit. This enables more complex application level rate limiting scenarios
   * if desired.
   * </pre>
   *
   * Protobuf type {@code envoy.service.ratelimit.v2.RateLimitRequest}
   */
  public static final class Builder extends
      com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
      // @@protoc_insertion_point(builder_implements:envoy.service.ratelimit.v2.RateLimitRequest)
      io.envoyproxy.envoy.service.ratelimit.v2.RateLimitRequestOrBuilder {
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return io.envoyproxy.envoy.service.ratelimit.v2.RlsProto.internal_static_envoy_service_ratelimit_v2_RateLimitRequest_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return io.envoyproxy.envoy.service.ratelimit.v2.RlsProto.internal_static_envoy_service_ratelimit_v2_RateLimitRequest_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              io.envoyproxy.envoy.service.ratelimit.v2.RateLimitRequest.class, io.envoyproxy.envoy.service.ratelimit.v2.RateLimitRequest.Builder.class);
    }

    // Construct using io.envoyproxy.envoy.service.ratelimit.v2.RateLimitRequest.newBuilder()
    private Builder() {

    }

    private Builder(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      super(parent);

    }
    @java.lang.Override
    public Builder clear() {
      super.clear();
      bitField0_ = 0;
      domain_ = "";
      if (descriptorsBuilder_ == null) {
        descriptors_ = java.util.Collections.emptyList();
      } else {
        descriptors_ = null;
        descriptorsBuilder_.clear();
      }
      bitField0_ = (bitField0_ & ~0x00000002);
      hitsAddend_ = 0;
      return this;
    }

    @java.lang.Override
    public com.google.protobuf.Descriptors.Descriptor
        getDescriptorForType() {
      return io.envoyproxy.envoy.service.ratelimit.v2.RlsProto.internal_static_envoy_service_ratelimit_v2_RateLimitRequest_descriptor;
    }

    @java.lang.Override
    public io.envoyproxy.envoy.service.ratelimit.v2.RateLimitRequest getDefaultInstanceForType() {
      return io.envoyproxy.envoy.service.ratelimit.v2.RateLimitRequest.getDefaultInstance();
    }

    @java.lang.Override
    public io.envoyproxy.envoy.service.ratelimit.v2.RateLimitRequest build() {
      io.envoyproxy.envoy.service.ratelimit.v2.RateLimitRequest result = buildPartial();
      if (!result.isInitialized()) {
        throw newUninitializedMessageException(result);
      }
      return result;
    }

    @java.lang.Override
    public io.envoyproxy.envoy.service.ratelimit.v2.RateLimitRequest buildPartial() {
      io.envoyproxy.envoy.service.ratelimit.v2.RateLimitRequest result = new io.envoyproxy.envoy.service.ratelimit.v2.RateLimitRequest(this);
      buildPartialRepeatedFields(result);
      if (bitField0_ != 0) { buildPartial0(result); }
      onBuilt();
      return result;
    }

    private void buildPartialRepeatedFields(io.envoyproxy.envoy.service.ratelimit.v2.RateLimitRequest result) {
      if (descriptorsBuilder_ == null) {
        if (((bitField0_ & 0x00000002) != 0)) {
          descriptors_ = java.util.Collections.unmodifiableList(descriptors_);
          bitField0_ = (bitField0_ & ~0x00000002);
        }
        result.descriptors_ = descriptors_;
      } else {
        result.descriptors_ = descriptorsBuilder_.build();
      }
    }

    private void buildPartial0(io.envoyproxy.envoy.service.ratelimit.v2.RateLimitRequest result) {
      int from_bitField0_ = bitField0_;
      if (((from_bitField0_ & 0x00000001) != 0)) {
        result.domain_ = domain_;
      }
      if (((from_bitField0_ & 0x00000004) != 0)) {
        result.hitsAddend_ = hitsAddend_;
      }
    }

    @java.lang.Override
    public Builder clone() {
      return super.clone();
    }
    @java.lang.Override
    public Builder setField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        java.lang.Object value) {
      return super.setField(field, value);
    }
    @java.lang.Override
    public Builder clearField(
        com.google.protobuf.Descriptors.FieldDescriptor field) {
      return super.clearField(field);
    }
    @java.lang.Override
    public Builder clearOneof(
        com.google.protobuf.Descriptors.OneofDescriptor oneof) {
      return super.clearOneof(oneof);
    }
    @java.lang.Override
    public Builder setRepeatedField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        int index, java.lang.Object value) {
      return super.setRepeatedField(field, index, value);
    }
    @java.lang.Override
    public Builder addRepeatedField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        java.lang.Object value) {
      return super.addRepeatedField(field, value);
    }
    @java.lang.Override
    public Builder mergeFrom(com.google.protobuf.Message other) {
      if (other instanceof io.envoyproxy.envoy.service.ratelimit.v2.RateLimitRequest) {
        return mergeFrom((io.envoyproxy.envoy.service.ratelimit.v2.RateLimitRequest)other);
      } else {
        super.mergeFrom(other);
        return this;
      }
    }

    public Builder mergeFrom(io.envoyproxy.envoy.service.ratelimit.v2.RateLimitRequest other) {
      if (other == io.envoyproxy.envoy.service.ratelimit.v2.RateLimitRequest.getDefaultInstance()) return this;
      if (!other.getDomain().isEmpty()) {
        domain_ = other.domain_;
        bitField0_ |= 0x00000001;
        onChanged();
      }
      if (descriptorsBuilder_ == null) {
        if (!other.descriptors_.isEmpty()) {
          if (descriptors_.isEmpty()) {
            descriptors_ = other.descriptors_;
            bitField0_ = (bitField0_ & ~0x00000002);
          } else {
            ensureDescriptorsIsMutable();
            descriptors_.addAll(other.descriptors_);
          }
          onChanged();
        }
      } else {
        if (!other.descriptors_.isEmpty()) {
          if (descriptorsBuilder_.isEmpty()) {
            descriptorsBuilder_.dispose();
            descriptorsBuilder_ = null;
            descriptors_ = other.descriptors_;
            bitField0_ = (bitField0_ & ~0x00000002);
            descriptorsBuilder_ = 
              com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?
                 getDescriptorsFieldBuilder() : null;
          } else {
            descriptorsBuilder_.addAllMessages(other.descriptors_);
          }
        }
      }
      if (other.getHitsAddend() != 0) {
        setHitsAddend(other.getHitsAddend());
      }
      this.mergeUnknownFields(other.getUnknownFields());
      onChanged();
      return this;
    }

    @java.lang.Override
    public final boolean isInitialized() {
      return true;
    }

    @java.lang.Override
    public Builder mergeFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 10: {
              domain_ = input.readStringRequireUtf8();
              bitField0_ |= 0x00000001;
              break;
            } // case 10
            case 18: {
              io.envoyproxy.envoy.api.v2.ratelimit.RateLimitDescriptor m =
                  input.readMessage(
                      io.envoyproxy.envoy.api.v2.ratelimit.RateLimitDescriptor.parser(),
                      extensionRegistry);
              if (descriptorsBuilder_ == null) {
                ensureDescriptorsIsMutable();
                descriptors_.add(m);
              } else {
                descriptorsBuilder_.addMessage(m);
              }
              break;
            } // case 18
            case 24: {
              hitsAddend_ = input.readUInt32();
              bitField0_ |= 0x00000004;
              break;
            } // case 24
            default: {
              if (!super.parseUnknownField(input, extensionRegistry, tag)) {
                done = true; // was an endgroup tag
              }
              break;
            } // default:
          } // switch (tag)
        } // while (!done)
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.unwrapIOException();
      } finally {
        onChanged();
      } // finally
      return this;
    }
    private int bitField0_;

    private java.lang.Object domain_ = "";
    /**
     * <pre>
     * All rate limit requests must specify a domain. This enables the configuration to be per
     * application without fear of overlap. E.g., "envoy".
     * </pre>
     *
     * <code>string domain = 1;</code>
     * @return The domain.
     */
    public java.lang.String getDomain() {
      java.lang.Object ref = domain_;
      if (!(ref instanceof java.lang.String)) {
        com.google.protobuf.ByteString bs =
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        domain_ = s;
        return s;
      } else {
        return (java.lang.String) ref;
      }
    }
    /**
     * <pre>
     * All rate limit requests must specify a domain. This enables the configuration to be per
     * application without fear of overlap. E.g., "envoy".
     * </pre>
     *
     * <code>string domain = 1;</code>
     * @return The bytes for domain.
     */
    public com.google.protobuf.ByteString
        getDomainBytes() {
      java.lang.Object ref = domain_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        domain_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }
    /**
     * <pre>
     * All rate limit requests must specify a domain. This enables the configuration to be per
     * application without fear of overlap. E.g., "envoy".
     * </pre>
     *
     * <code>string domain = 1;</code>
     * @param value The domain to set.
     * @return This builder for chaining.
     */
    public Builder setDomain(
        java.lang.String value) {
      if (value == null) { throw new NullPointerException(); }
      domain_ = value;
      bitField0_ |= 0x00000001;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * All rate limit requests must specify a domain. This enables the configuration to be per
     * application without fear of overlap. E.g., "envoy".
     * </pre>
     *
     * <code>string domain = 1;</code>
     * @return This builder for chaining.
     */
    public Builder clearDomain() {
      domain_ = getDefaultInstance().getDomain();
      bitField0_ = (bitField0_ & ~0x00000001);
      onChanged();
      return this;
    }
    /**
     * <pre>
     * All rate limit requests must specify a domain. This enables the configuration to be per
     * application without fear of overlap. E.g., "envoy".
     * </pre>
     *
     * <code>string domain = 1;</code>
     * @param value The bytes for domain to set.
     * @return This builder for chaining.
     */
    public Builder setDomainBytes(
        com.google.protobuf.ByteString value) {
      if (value == null) { throw new NullPointerException(); }
      checkByteStringIsUtf8(value);
      domain_ = value;
      bitField0_ |= 0x00000001;
      onChanged();
      return this;
    }

    private java.util.List<io.envoyproxy.envoy.api.v2.ratelimit.RateLimitDescriptor> descriptors_ =
      java.util.Collections.emptyList();
    private void ensureDescriptorsIsMutable() {
      if (!((bitField0_ & 0x00000002) != 0)) {
        descriptors_ = new java.util.ArrayList<io.envoyproxy.envoy.api.v2.ratelimit.RateLimitDescriptor>(descriptors_);
        bitField0_ |= 0x00000002;
       }
    }

    private com.google.protobuf.RepeatedFieldBuilderV3<
        io.envoyproxy.envoy.api.v2.ratelimit.RateLimitDescriptor, io.envoyproxy.envoy.api.v2.ratelimit.RateLimitDescriptor.Builder, io.envoyproxy.envoy.api.v2.ratelimit.RateLimitDescriptorOrBuilder> descriptorsBuilder_;

    /**
     * <pre>
     * All rate limit requests must specify at least one RateLimitDescriptor. Each descriptor is
     * processed by the service (see below). If any of the descriptors are over limit, the entire
     * request is considered to be over limit.
     * </pre>
     *
     * <code>repeated .envoy.api.v2.ratelimit.RateLimitDescriptor descriptors = 2;</code>
     */
    public java.util.List<io.envoyproxy.envoy.api.v2.ratelimit.RateLimitDescriptor> getDescriptorsList() {
      if (descriptorsBuilder_ == null) {
        return java.util.Collections.unmodifiableList(descriptors_);
      } else {
        return descriptorsBuilder_.getMessageList();
      }
    }
    /**
     * <pre>
     * All rate limit requests must specify at least one RateLimitDescriptor. Each descriptor is
     * processed by the service (see below). If any of the descriptors are over limit, the entire
     * request is considered to be over limit.
     * </pre>
     *
     * <code>repeated .envoy.api.v2.ratelimit.RateLimitDescriptor descriptors = 2;</code>
     */
    public int getDescriptorsCount() {
      if (descriptorsBuilder_ == null) {
        return descriptors_.size();
      } else {
        return descriptorsBuilder_.getCount();
      }
    }
    /**
     * <pre>
     * All rate limit requests must specify at least one RateLimitDescriptor. Each descriptor is
     * processed by the service (see below). If any of the descriptors are over limit, the entire
     * request is considered to be over limit.
     * </pre>
     *
     * <code>repeated .envoy.api.v2.ratelimit.RateLimitDescriptor descriptors = 2;</code>
     */
    public io.envoyproxy.envoy.api.v2.ratelimit.RateLimitDescriptor getDescriptors(int index) {
      if (descriptorsBuilder_ == null) {
        return descriptors_.get(index);
      } else {
        return descriptorsBuilder_.getMessage(index);
      }
    }
    /**
     * <pre>
     * All rate limit requests must specify at least one RateLimitDescriptor. Each descriptor is
     * processed by the service (see below). If any of the descriptors are over limit, the entire
     * request is considered to be over limit.
     * </pre>
     *
     * <code>repeated .envoy.api.v2.ratelimit.RateLimitDescriptor descriptors = 2;</code>
     */
    public Builder setDescriptors(
        int index, io.envoyproxy.envoy.api.v2.ratelimit.RateLimitDescriptor value) {
      if (descriptorsBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureDescriptorsIsMutable();
        descriptors_.set(index, value);
        onChanged();
      } else {
        descriptorsBuilder_.setMessage(index, value);
      }
      return this;
    }
    /**
     * <pre>
     * All rate limit requests must specify at least one RateLimitDescriptor. Each descriptor is
     * processed by the service (see below). If any of the descriptors are over limit, the entire
     * request is considered to be over limit.
     * </pre>
     *
     * <code>repeated .envoy.api.v2.ratelimit.RateLimitDescriptor descriptors = 2;</code>
     */
    public Builder setDescriptors(
        int index, io.envoyproxy.envoy.api.v2.ratelimit.RateLimitDescriptor.Builder builderForValue) {
      if (descriptorsBuilder_ == null) {
        ensureDescriptorsIsMutable();
        descriptors_.set(index, builderForValue.build());
        onChanged();
      } else {
        descriptorsBuilder_.setMessage(index, builderForValue.build());
      }
      return this;
    }
    /**
     * <pre>
     * All rate limit requests must specify at least one RateLimitDescriptor. Each descriptor is
     * processed by the service (see below). If any of the descriptors are over limit, the entire
     * request is considered to be over limit.
     * </pre>
     *
     * <code>repeated .envoy.api.v2.ratelimit.RateLimitDescriptor descriptors = 2;</code>
     */
    public Builder addDescriptors(io.envoyproxy.envoy.api.v2.ratelimit.RateLimitDescriptor value) {
      if (descriptorsBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureDescriptorsIsMutable();
        descriptors_.add(value);
        onChanged();
      } else {
        descriptorsBuilder_.addMessage(value);
      }
      return this;
    }
    /**
     * <pre>
     * All rate limit requests must specify at least one RateLimitDescriptor. Each descriptor is
     * processed by the service (see below). If any of the descriptors are over limit, the entire
     * request is considered to be over limit.
     * </pre>
     *
     * <code>repeated .envoy.api.v2.ratelimit.RateLimitDescriptor descriptors = 2;</code>
     */
    public Builder addDescriptors(
        int index, io.envoyproxy.envoy.api.v2.ratelimit.RateLimitDescriptor value) {
      if (descriptorsBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureDescriptorsIsMutable();
        descriptors_.add(index, value);
        onChanged();
      } else {
        descriptorsBuilder_.addMessage(index, value);
      }
      return this;
    }
    /**
     * <pre>
     * All rate limit requests must specify at least one RateLimitDescriptor. Each descriptor is
     * processed by the service (see below). If any of the descriptors are over limit, the entire
     * request is considered to be over limit.
     * </pre>
     *
     * <code>repeated .envoy.api.v2.ratelimit.RateLimitDescriptor descriptors = 2;</code>
     */
    public Builder addDescriptors(
        io.envoyproxy.envoy.api.v2.ratelimit.RateLimitDescriptor.Builder builderForValue) {
      if (descriptorsBuilder_ == null) {
        ensureDescriptorsIsMutable();
        descriptors_.add(builderForValue.build());
        onChanged();
      } else {
        descriptorsBuilder_.addMessage(builderForValue.build());
      }
      return this;
    }
    /**
     * <pre>
     * All rate limit requests must specify at least one RateLimitDescriptor. Each descriptor is
     * processed by the service (see below). If any of the descriptors are over limit, the entire
     * request is considered to be over limit.
     * </pre>
     *
     * <code>repeated .envoy.api.v2.ratelimit.RateLimitDescriptor descriptors = 2;</code>
     */
    public Builder addDescriptors(
        int index, io.envoyproxy.envoy.api.v2.ratelimit.RateLimitDescriptor.Builder builderForValue) {
      if (descriptorsBuilder_ == null) {
        ensureDescriptorsIsMutable();
        descriptors_.add(index, builderForValue.build());
        onChanged();
      } else {
        descriptorsBuilder_.addMessage(index, builderForValue.build());
      }
      return this;
    }
    /**
     * <pre>
     * All rate limit requests must specify at least one RateLimitDescriptor. Each descriptor is
     * processed by the service (see below). If any of the descriptors are over limit, the entire
     * request is considered to be over limit.
     * </pre>
     *
     * <code>repeated .envoy.api.v2.ratelimit.RateLimitDescriptor descriptors = 2;</code>
     */
    public Builder addAllDescriptors(
        java.lang.Iterable<? extends io.envoyproxy.envoy.api.v2.ratelimit.RateLimitDescriptor> values) {
      if (descriptorsBuilder_ == null) {
        ensureDescriptorsIsMutable();
        com.google.protobuf.AbstractMessageLite.Builder.addAll(
            values, descriptors_);
        onChanged();
      } else {
        descriptorsBuilder_.addAllMessages(values);
      }
      return this;
    }
    /**
     * <pre>
     * All rate limit requests must specify at least one RateLimitDescriptor. Each descriptor is
     * processed by the service (see below). If any of the descriptors are over limit, the entire
     * request is considered to be over limit.
     * </pre>
     *
     * <code>repeated .envoy.api.v2.ratelimit.RateLimitDescriptor descriptors = 2;</code>
     */
    public Builder clearDescriptors() {
      if (descriptorsBuilder_ == null) {
        descriptors_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000002);
        onChanged();
      } else {
        descriptorsBuilder_.clear();
      }
      return this;
    }
    /**
     * <pre>
     * All rate limit requests must specify at least one RateLimitDescriptor. Each descriptor is
     * processed by the service (see below). If any of the descriptors are over limit, the entire
     * request is considered to be over limit.
     * </pre>
     *
     * <code>repeated .envoy.api.v2.ratelimit.RateLimitDescriptor descriptors = 2;</code>
     */
    public Builder removeDescriptors(int index) {
      if (descriptorsBuilder_ == null) {
        ensureDescriptorsIsMutable();
        descriptors_.remove(index);
        onChanged();
      } else {
        descriptorsBuilder_.remove(index);
      }
      return this;
    }
    /**
     * <pre>
     * All rate limit requests must specify at least one RateLimitDescriptor. Each descriptor is
     * processed by the service (see below). If any of the descriptors are over limit, the entire
     * request is considered to be over limit.
     * </pre>
     *
     * <code>repeated .envoy.api.v2.ratelimit.RateLimitDescriptor descriptors = 2;</code>
     */
    public io.envoyproxy.envoy.api.v2.ratelimit.RateLimitDescriptor.Builder getDescriptorsBuilder(
        int index) {
      return getDescriptorsFieldBuilder().getBuilder(index);
    }
    /**
     * <pre>
     * All rate limit requests must specify at least one RateLimitDescriptor. Each descriptor is
     * processed by the service (see below). If any of the descriptors are over limit, the entire
     * request is considered to be over limit.
     * </pre>
     *
     * <code>repeated .envoy.api.v2.ratelimit.RateLimitDescriptor descriptors = 2;</code>
     */
    public io.envoyproxy.envoy.api.v2.ratelimit.RateLimitDescriptorOrBuilder getDescriptorsOrBuilder(
        int index) {
      if (descriptorsBuilder_ == null) {
        return descriptors_.get(index);  } else {
        return descriptorsBuilder_.getMessageOrBuilder(index);
      }
    }
    /**
     * <pre>
     * All rate limit requests must specify at least one RateLimitDescriptor. Each descriptor is
     * processed by the service (see below). If any of the descriptors are over limit, the entire
     * request is considered to be over limit.
     * </pre>
     *
     * <code>repeated .envoy.api.v2.ratelimit.RateLimitDescriptor descriptors = 2;</code>
     */
    public java.util.List<? extends io.envoyproxy.envoy.api.v2.ratelimit.RateLimitDescriptorOrBuilder> 
         getDescriptorsOrBuilderList() {
      if (descriptorsBuilder_ != null) {
        return descriptorsBuilder_.getMessageOrBuilderList();
      } else {
        return java.util.Collections.unmodifiableList(descriptors_);
      }
    }
    /**
     * <pre>
     * All rate limit requests must specify at least one RateLimitDescriptor. Each descriptor is
     * processed by the service (see below). If any of the descriptors are over limit, the entire
     * request is considered to be over limit.
     * </pre>
     *
     * <code>repeated .envoy.api.v2.ratelimit.RateLimitDescriptor descriptors = 2;</code>
     */
    public io.envoyproxy.envoy.api.v2.ratelimit.RateLimitDescriptor.Builder addDescriptorsBuilder() {
      return getDescriptorsFieldBuilder().addBuilder(
          io.envoyproxy.envoy.api.v2.ratelimit.RateLimitDescriptor.getDefaultInstance());
    }
    /**
     * <pre>
     * All rate limit requests must specify at least one RateLimitDescriptor. Each descriptor is
     * processed by the service (see below). If any of the descriptors are over limit, the entire
     * request is considered to be over limit.
     * </pre>
     *
     * <code>repeated .envoy.api.v2.ratelimit.RateLimitDescriptor descriptors = 2;</code>
     */
    public io.envoyproxy.envoy.api.v2.ratelimit.RateLimitDescriptor.Builder addDescriptorsBuilder(
        int index) {
      return getDescriptorsFieldBuilder().addBuilder(
          index, io.envoyproxy.envoy.api.v2.ratelimit.RateLimitDescriptor.getDefaultInstance());
    }
    /**
     * <pre>
     * All rate limit requests must specify at least one RateLimitDescriptor. Each descriptor is
     * processed by the service (see below). If any of the descriptors are over limit, the entire
     * request is considered to be over limit.
     * </pre>
     *
     * <code>repeated .envoy.api.v2.ratelimit.RateLimitDescriptor descriptors = 2;</code>
     */
    public java.util.List<io.envoyproxy.envoy.api.v2.ratelimit.RateLimitDescriptor.Builder> 
         getDescriptorsBuilderList() {
      return getDescriptorsFieldBuilder().getBuilderList();
    }
    private com.google.protobuf.RepeatedFieldBuilderV3<
        io.envoyproxy.envoy.api.v2.ratelimit.RateLimitDescriptor, io.envoyproxy.envoy.api.v2.ratelimit.RateLimitDescriptor.Builder, io.envoyproxy.envoy.api.v2.ratelimit.RateLimitDescriptorOrBuilder> 
        getDescriptorsFieldBuilder() {
      if (descriptorsBuilder_ == null) {
        descriptorsBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<
            io.envoyproxy.envoy.api.v2.ratelimit.RateLimitDescriptor, io.envoyproxy.envoy.api.v2.ratelimit.RateLimitDescriptor.Builder, io.envoyproxy.envoy.api.v2.ratelimit.RateLimitDescriptorOrBuilder>(
                descriptors_,
                ((bitField0_ & 0x00000002) != 0),
                getParentForChildren(),
                isClean());
        descriptors_ = null;
      }
      return descriptorsBuilder_;
    }

    private int hitsAddend_ ;
    /**
     * <pre>
     * Rate limit requests can optionally specify the number of hits a request adds to the matched
     * limit. If the value is not set in the message, a request increases the matched limit by 1.
     * </pre>
     *
     * <code>uint32 hits_addend = 3;</code>
     * @return The hitsAddend.
     */
    @java.lang.Override
    public int getHitsAddend() {
      return hitsAddend_;
    }
    /**
     * <pre>
     * Rate limit requests can optionally specify the number of hits a request adds to the matched
     * limit. If the value is not set in the message, a request increases the matched limit by 1.
     * </pre>
     *
     * <code>uint32 hits_addend = 3;</code>
     * @param value The hitsAddend to set.
     * @return This builder for chaining.
     */
    public Builder setHitsAddend(int value) {
      
      hitsAddend_ = value;
      bitField0_ |= 0x00000004;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * Rate limit requests can optionally specify the number of hits a request adds to the matched
     * limit. If the value is not set in the message, a request increases the matched limit by 1.
     * </pre>
     *
     * <code>uint32 hits_addend = 3;</code>
     * @return This builder for chaining.
     */
    public Builder clearHitsAddend() {
      bitField0_ = (bitField0_ & ~0x00000004);
      hitsAddend_ = 0;
      onChanged();
      return this;
    }
    @java.lang.Override
    public final Builder setUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return super.setUnknownFields(unknownFields);
    }

    @java.lang.Override
    public final Builder mergeUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return super.mergeUnknownFields(unknownFields);
    }


    // @@protoc_insertion_point(builder_scope:envoy.service.ratelimit.v2.RateLimitRequest)
  }

  // @@protoc_insertion_point(class_scope:envoy.service.ratelimit.v2.RateLimitRequest)
  private static final io.envoyproxy.envoy.service.ratelimit.v2.RateLimitRequest DEFAULT_INSTANCE;
  static {
    DEFAULT_INSTANCE = new io.envoyproxy.envoy.service.ratelimit.v2.RateLimitRequest();
  }

  public static io.envoyproxy.envoy.service.ratelimit.v2.RateLimitRequest getDefaultInstance() {
    return DEFAULT_INSTANCE;
  }

  private static final com.google.protobuf.Parser<RateLimitRequest>
      PARSER = new com.google.protobuf.AbstractParser<RateLimitRequest>() {
    @java.lang.Override
    public RateLimitRequest parsePartialFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      Builder builder = newBuilder();
      try {
        builder.mergeFrom(input, extensionRegistry);
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(builder.buildPartial());
      } catch (com.google.protobuf.UninitializedMessageException e) {
        throw e.asInvalidProtocolBufferException().setUnfinishedMessage(builder.buildPartial());
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(e)
            .setUnfinishedMessage(builder.buildPartial());
      }
      return builder.buildPartial();
    }
  };

  public static com.google.protobuf.Parser<RateLimitRequest> parser() {
    return PARSER;
  }

  @java.lang.Override
  public com.google.protobuf.Parser<RateLimitRequest> getParserForType() {
    return PARSER;
  }

  @java.lang.Override
  public io.envoyproxy.envoy.service.ratelimit.v2.RateLimitRequest getDefaultInstanceForType() {
    return DEFAULT_INSTANCE;
  }

}

