// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: envoy/service/status/v2/csds.proto

package io.envoyproxy.envoy.service.status.v2;

public interface ClientStatusRequestOrBuilder extends
    // @@protoc_insertion_point(interface_extends:envoy.service.status.v2.ClientStatusRequest)
    com.google.protobuf.MessageOrBuilder {

  /**
   * <pre>
   * Management server can use these match criteria to identify clients.
   * The match follows OR semantics.
   * </pre>
   *
   * <code>repeated .envoy.type.matcher.NodeMatcher node_matchers = 1;</code>
   */
  java.util.List<io.envoyproxy.envoy.type.matcher.NodeMatcher> 
      getNodeMatchersList();
  /**
   * <pre>
   * Management server can use these match criteria to identify clients.
   * The match follows OR semantics.
   * </pre>
   *
   * <code>repeated .envoy.type.matcher.NodeMatcher node_matchers = 1;</code>
   */
  io.envoyproxy.envoy.type.matcher.NodeMatcher getNodeMatchers(int index);
  /**
   * <pre>
   * Management server can use these match criteria to identify clients.
   * The match follows OR semantics.
   * </pre>
   *
   * <code>repeated .envoy.type.matcher.NodeMatcher node_matchers = 1;</code>
   */
  int getNodeMatchersCount();
  /**
   * <pre>
   * Management server can use these match criteria to identify clients.
   * The match follows OR semantics.
   * </pre>
   *
   * <code>repeated .envoy.type.matcher.NodeMatcher node_matchers = 1;</code>
   */
  java.util.List<? extends io.envoyproxy.envoy.type.matcher.NodeMatcherOrBuilder> 
      getNodeMatchersOrBuilderList();
  /**
   * <pre>
   * Management server can use these match criteria to identify clients.
   * The match follows OR semantics.
   * </pre>
   *
   * <code>repeated .envoy.type.matcher.NodeMatcher node_matchers = 1;</code>
   */
  io.envoyproxy.envoy.type.matcher.NodeMatcherOrBuilder getNodeMatchersOrBuilder(
      int index);
}
