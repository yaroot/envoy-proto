// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: envoy/service/auth/v2/external_auth.proto

package io.envoyproxy.envoy.service.auth.v2;

public interface OkHttpResponseOrBuilder extends
    // @@protoc_insertion_point(interface_extends:envoy.service.auth.v2.OkHttpResponse)
    com.google.protobuf.MessageOrBuilder {

  /**
   * <pre>
   * HTTP entity headers in addition to the original request headers. This allows the authorization
   * service to append, to add or to override headers from the original request before
   * dispatching it to the upstream. Note that the `append` field in `HeaderValueOption` defaults to
   * false when used in this message. By setting the `append` field to `true`,
   * the filter will append the correspondent header value to the matched request header.
   * By leaving `append` as false, the filter will either add a new header, or override an existing
   * one if there is a match.
   * </pre>
   *
   * <code>repeated .envoy.api.v2.core.HeaderValueOption headers = 2;</code>
   */
  java.util.List<io.envoyproxy.envoy.api.v2.core.HeaderValueOption> 
      getHeadersList();
  /**
   * <pre>
   * HTTP entity headers in addition to the original request headers. This allows the authorization
   * service to append, to add or to override headers from the original request before
   * dispatching it to the upstream. Note that the `append` field in `HeaderValueOption` defaults to
   * false when used in this message. By setting the `append` field to `true`,
   * the filter will append the correspondent header value to the matched request header.
   * By leaving `append` as false, the filter will either add a new header, or override an existing
   * one if there is a match.
   * </pre>
   *
   * <code>repeated .envoy.api.v2.core.HeaderValueOption headers = 2;</code>
   */
  io.envoyproxy.envoy.api.v2.core.HeaderValueOption getHeaders(int index);
  /**
   * <pre>
   * HTTP entity headers in addition to the original request headers. This allows the authorization
   * service to append, to add or to override headers from the original request before
   * dispatching it to the upstream. Note that the `append` field in `HeaderValueOption` defaults to
   * false when used in this message. By setting the `append` field to `true`,
   * the filter will append the correspondent header value to the matched request header.
   * By leaving `append` as false, the filter will either add a new header, or override an existing
   * one if there is a match.
   * </pre>
   *
   * <code>repeated .envoy.api.v2.core.HeaderValueOption headers = 2;</code>
   */
  int getHeadersCount();
  /**
   * <pre>
   * HTTP entity headers in addition to the original request headers. This allows the authorization
   * service to append, to add or to override headers from the original request before
   * dispatching it to the upstream. Note that the `append` field in `HeaderValueOption` defaults to
   * false when used in this message. By setting the `append` field to `true`,
   * the filter will append the correspondent header value to the matched request header.
   * By leaving `append` as false, the filter will either add a new header, or override an existing
   * one if there is a match.
   * </pre>
   *
   * <code>repeated .envoy.api.v2.core.HeaderValueOption headers = 2;</code>
   */
  java.util.List<? extends io.envoyproxy.envoy.api.v2.core.HeaderValueOptionOrBuilder> 
      getHeadersOrBuilderList();
  /**
   * <pre>
   * HTTP entity headers in addition to the original request headers. This allows the authorization
   * service to append, to add or to override headers from the original request before
   * dispatching it to the upstream. Note that the `append` field in `HeaderValueOption` defaults to
   * false when used in this message. By setting the `append` field to `true`,
   * the filter will append the correspondent header value to the matched request header.
   * By leaving `append` as false, the filter will either add a new header, or override an existing
   * one if there is a match.
   * </pre>
   *
   * <code>repeated .envoy.api.v2.core.HeaderValueOption headers = 2;</code>
   */
  io.envoyproxy.envoy.api.v2.core.HeaderValueOptionOrBuilder getHeadersOrBuilder(
      int index);
}
