// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: envoy/service/auth/v3/external_auth.proto

package io.envoyproxy.envoy.service.auth.v3;

/**
 * <pre>
 * HTTP attributes for an OK response.
 * [#next-free-field: 9]
 * </pre>
 *
 * Protobuf type {@code envoy.service.auth.v3.OkHttpResponse}
 */
public final class OkHttpResponse extends
    com.google.protobuf.GeneratedMessageV3 implements
    // @@protoc_insertion_point(message_implements:envoy.service.auth.v3.OkHttpResponse)
    OkHttpResponseOrBuilder {
private static final long serialVersionUID = 0L;
  // Use OkHttpResponse.newBuilder() to construct.
  private OkHttpResponse(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
    super(builder);
  }
  private OkHttpResponse() {
    headers_ = java.util.Collections.emptyList();
    headersToRemove_ = com.google.protobuf.LazyStringArrayList.EMPTY;
    responseHeadersToAdd_ = java.util.Collections.emptyList();
    queryParametersToSet_ = java.util.Collections.emptyList();
    queryParametersToRemove_ = com.google.protobuf.LazyStringArrayList.EMPTY;
  }

  @java.lang.Override
  @SuppressWarnings({"unused"})
  protected java.lang.Object newInstance(
      UnusedPrivateParameter unused) {
    return new OkHttpResponse();
  }

  @java.lang.Override
  public final com.google.protobuf.UnknownFieldSet
  getUnknownFields() {
    return this.unknownFields;
  }
  public static final com.google.protobuf.Descriptors.Descriptor
      getDescriptor() {
    return io.envoyproxy.envoy.service.auth.v3.ExternalAuthProto.internal_static_envoy_service_auth_v3_OkHttpResponse_descriptor;
  }

  @java.lang.Override
  protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internalGetFieldAccessorTable() {
    return io.envoyproxy.envoy.service.auth.v3.ExternalAuthProto.internal_static_envoy_service_auth_v3_OkHttpResponse_fieldAccessorTable
        .ensureFieldAccessorsInitialized(
            io.envoyproxy.envoy.service.auth.v3.OkHttpResponse.class, io.envoyproxy.envoy.service.auth.v3.OkHttpResponse.Builder.class);
  }

  public static final int HEADERS_FIELD_NUMBER = 2;
  @SuppressWarnings("serial")
  private java.util.List<io.envoyproxy.envoy.config.core.v3.HeaderValueOption> headers_;
  /**
   * <pre>
   * HTTP entity headers in addition to the original request headers. This allows the authorization
   * service to append, to add or to override headers from the original request before
   * dispatching it to the upstream. Note that the :ref:`append field in HeaderValueOption &lt;envoy_v3_api_field_config.core.v3.HeaderValueOption.append&gt;` defaults to
   * false when used in this message. By setting the ``append`` field to ``true``,
   * the filter will append the correspondent header value to the matched request header.
   * By leaving ``append`` as false, the filter will either add a new header, or override an existing
   * one if there is a match.
   * </pre>
   *
   * <code>repeated .envoy.config.core.v3.HeaderValueOption headers = 2;</code>
   */
  @java.lang.Override
  public java.util.List<io.envoyproxy.envoy.config.core.v3.HeaderValueOption> getHeadersList() {
    return headers_;
  }
  /**
   * <pre>
   * HTTP entity headers in addition to the original request headers. This allows the authorization
   * service to append, to add or to override headers from the original request before
   * dispatching it to the upstream. Note that the :ref:`append field in HeaderValueOption &lt;envoy_v3_api_field_config.core.v3.HeaderValueOption.append&gt;` defaults to
   * false when used in this message. By setting the ``append`` field to ``true``,
   * the filter will append the correspondent header value to the matched request header.
   * By leaving ``append`` as false, the filter will either add a new header, or override an existing
   * one if there is a match.
   * </pre>
   *
   * <code>repeated .envoy.config.core.v3.HeaderValueOption headers = 2;</code>
   */
  @java.lang.Override
  public java.util.List<? extends io.envoyproxy.envoy.config.core.v3.HeaderValueOptionOrBuilder> 
      getHeadersOrBuilderList() {
    return headers_;
  }
  /**
   * <pre>
   * HTTP entity headers in addition to the original request headers. This allows the authorization
   * service to append, to add or to override headers from the original request before
   * dispatching it to the upstream. Note that the :ref:`append field in HeaderValueOption &lt;envoy_v3_api_field_config.core.v3.HeaderValueOption.append&gt;` defaults to
   * false when used in this message. By setting the ``append`` field to ``true``,
   * the filter will append the correspondent header value to the matched request header.
   * By leaving ``append`` as false, the filter will either add a new header, or override an existing
   * one if there is a match.
   * </pre>
   *
   * <code>repeated .envoy.config.core.v3.HeaderValueOption headers = 2;</code>
   */
  @java.lang.Override
  public int getHeadersCount() {
    return headers_.size();
  }
  /**
   * <pre>
   * HTTP entity headers in addition to the original request headers. This allows the authorization
   * service to append, to add or to override headers from the original request before
   * dispatching it to the upstream. Note that the :ref:`append field in HeaderValueOption &lt;envoy_v3_api_field_config.core.v3.HeaderValueOption.append&gt;` defaults to
   * false when used in this message. By setting the ``append`` field to ``true``,
   * the filter will append the correspondent header value to the matched request header.
   * By leaving ``append`` as false, the filter will either add a new header, or override an existing
   * one if there is a match.
   * </pre>
   *
   * <code>repeated .envoy.config.core.v3.HeaderValueOption headers = 2;</code>
   */
  @java.lang.Override
  public io.envoyproxy.envoy.config.core.v3.HeaderValueOption getHeaders(int index) {
    return headers_.get(index);
  }
  /**
   * <pre>
   * HTTP entity headers in addition to the original request headers. This allows the authorization
   * service to append, to add or to override headers from the original request before
   * dispatching it to the upstream. Note that the :ref:`append field in HeaderValueOption &lt;envoy_v3_api_field_config.core.v3.HeaderValueOption.append&gt;` defaults to
   * false when used in this message. By setting the ``append`` field to ``true``,
   * the filter will append the correspondent header value to the matched request header.
   * By leaving ``append`` as false, the filter will either add a new header, or override an existing
   * one if there is a match.
   * </pre>
   *
   * <code>repeated .envoy.config.core.v3.HeaderValueOption headers = 2;</code>
   */
  @java.lang.Override
  public io.envoyproxy.envoy.config.core.v3.HeaderValueOptionOrBuilder getHeadersOrBuilder(
      int index) {
    return headers_.get(index);
  }

  public static final int HEADERS_TO_REMOVE_FIELD_NUMBER = 5;
  @SuppressWarnings("serial")
  private com.google.protobuf.LazyStringList headersToRemove_;
  /**
   * <pre>
   * HTTP entity headers to remove from the original request before dispatching
   * it to the upstream. This allows the authorization service to act on auth
   * related headers (like ``Authorization``), process them, and consume them.
   * Under this model, the upstream will either receive the request (if it's
   * authorized) or not receive it (if it's not), but will not see headers
   * containing authorization credentials.
   * Pseudo headers (such as ``:authority``, ``:method``, ``:path`` etc), as well as
   * the header ``Host``, may not be removed as that would make the request
   * malformed. If mentioned in ``headers_to_remove`` these special headers will
   * be ignored.
   * When using the HTTP service this must instead be set by the HTTP
   * authorization service as a comma separated list like so:
   * ``x-envoy-auth-headers-to-remove: one-auth-header, another-auth-header``.
   * </pre>
   *
   * <code>repeated string headers_to_remove = 5;</code>
   * @return A list containing the headersToRemove.
   */
  public com.google.protobuf.ProtocolStringList
      getHeadersToRemoveList() {
    return headersToRemove_;
  }
  /**
   * <pre>
   * HTTP entity headers to remove from the original request before dispatching
   * it to the upstream. This allows the authorization service to act on auth
   * related headers (like ``Authorization``), process them, and consume them.
   * Under this model, the upstream will either receive the request (if it's
   * authorized) or not receive it (if it's not), but will not see headers
   * containing authorization credentials.
   * Pseudo headers (such as ``:authority``, ``:method``, ``:path`` etc), as well as
   * the header ``Host``, may not be removed as that would make the request
   * malformed. If mentioned in ``headers_to_remove`` these special headers will
   * be ignored.
   * When using the HTTP service this must instead be set by the HTTP
   * authorization service as a comma separated list like so:
   * ``x-envoy-auth-headers-to-remove: one-auth-header, another-auth-header``.
   * </pre>
   *
   * <code>repeated string headers_to_remove = 5;</code>
   * @return The count of headersToRemove.
   */
  public int getHeadersToRemoveCount() {
    return headersToRemove_.size();
  }
  /**
   * <pre>
   * HTTP entity headers to remove from the original request before dispatching
   * it to the upstream. This allows the authorization service to act on auth
   * related headers (like ``Authorization``), process them, and consume them.
   * Under this model, the upstream will either receive the request (if it's
   * authorized) or not receive it (if it's not), but will not see headers
   * containing authorization credentials.
   * Pseudo headers (such as ``:authority``, ``:method``, ``:path`` etc), as well as
   * the header ``Host``, may not be removed as that would make the request
   * malformed. If mentioned in ``headers_to_remove`` these special headers will
   * be ignored.
   * When using the HTTP service this must instead be set by the HTTP
   * authorization service as a comma separated list like so:
   * ``x-envoy-auth-headers-to-remove: one-auth-header, another-auth-header``.
   * </pre>
   *
   * <code>repeated string headers_to_remove = 5;</code>
   * @param index The index of the element to return.
   * @return The headersToRemove at the given index.
   */
  public java.lang.String getHeadersToRemove(int index) {
    return headersToRemove_.get(index);
  }
  /**
   * <pre>
   * HTTP entity headers to remove from the original request before dispatching
   * it to the upstream. This allows the authorization service to act on auth
   * related headers (like ``Authorization``), process them, and consume them.
   * Under this model, the upstream will either receive the request (if it's
   * authorized) or not receive it (if it's not), but will not see headers
   * containing authorization credentials.
   * Pseudo headers (such as ``:authority``, ``:method``, ``:path`` etc), as well as
   * the header ``Host``, may not be removed as that would make the request
   * malformed. If mentioned in ``headers_to_remove`` these special headers will
   * be ignored.
   * When using the HTTP service this must instead be set by the HTTP
   * authorization service as a comma separated list like so:
   * ``x-envoy-auth-headers-to-remove: one-auth-header, another-auth-header``.
   * </pre>
   *
   * <code>repeated string headers_to_remove = 5;</code>
   * @param index The index of the value to return.
   * @return The bytes of the headersToRemove at the given index.
   */
  public com.google.protobuf.ByteString
      getHeadersToRemoveBytes(int index) {
    return headersToRemove_.getByteString(index);
  }

  public static final int DYNAMIC_METADATA_FIELD_NUMBER = 3;
  private com.google.protobuf.Struct dynamicMetadata_;
  /**
   * <pre>
   * This field has been deprecated in favor of :ref:`CheckResponse.dynamic_metadata
   * &lt;envoy_v3_api_field_service.auth.v3.CheckResponse.dynamic_metadata&gt;`. Until it is removed,
   * setting this field overrides :ref:`CheckResponse.dynamic_metadata
   * &lt;envoy_v3_api_field_service.auth.v3.CheckResponse.dynamic_metadata&gt;`.
   * </pre>
   *
   * <code>.google.protobuf.Struct dynamic_metadata = 3 [deprecated = true, (.envoy.annotations.deprecated_at_minor_version) = "3.0"];</code>
   * @deprecated envoy.service.auth.v3.OkHttpResponse.dynamic_metadata is deprecated.
   *     See envoy/service/auth/v3/external_auth.proto;l=98
   * @return Whether the dynamicMetadata field is set.
   */
  @java.lang.Override
  @java.lang.Deprecated public boolean hasDynamicMetadata() {
    return dynamicMetadata_ != null;
  }
  /**
   * <pre>
   * This field has been deprecated in favor of :ref:`CheckResponse.dynamic_metadata
   * &lt;envoy_v3_api_field_service.auth.v3.CheckResponse.dynamic_metadata&gt;`. Until it is removed,
   * setting this field overrides :ref:`CheckResponse.dynamic_metadata
   * &lt;envoy_v3_api_field_service.auth.v3.CheckResponse.dynamic_metadata&gt;`.
   * </pre>
   *
   * <code>.google.protobuf.Struct dynamic_metadata = 3 [deprecated = true, (.envoy.annotations.deprecated_at_minor_version) = "3.0"];</code>
   * @deprecated envoy.service.auth.v3.OkHttpResponse.dynamic_metadata is deprecated.
   *     See envoy/service/auth/v3/external_auth.proto;l=98
   * @return The dynamicMetadata.
   */
  @java.lang.Override
  @java.lang.Deprecated public com.google.protobuf.Struct getDynamicMetadata() {
    return dynamicMetadata_ == null ? com.google.protobuf.Struct.getDefaultInstance() : dynamicMetadata_;
  }
  /**
   * <pre>
   * This field has been deprecated in favor of :ref:`CheckResponse.dynamic_metadata
   * &lt;envoy_v3_api_field_service.auth.v3.CheckResponse.dynamic_metadata&gt;`. Until it is removed,
   * setting this field overrides :ref:`CheckResponse.dynamic_metadata
   * &lt;envoy_v3_api_field_service.auth.v3.CheckResponse.dynamic_metadata&gt;`.
   * </pre>
   *
   * <code>.google.protobuf.Struct dynamic_metadata = 3 [deprecated = true, (.envoy.annotations.deprecated_at_minor_version) = "3.0"];</code>
   */
  @java.lang.Override
  @java.lang.Deprecated public com.google.protobuf.StructOrBuilder getDynamicMetadataOrBuilder() {
    return dynamicMetadata_ == null ? com.google.protobuf.Struct.getDefaultInstance() : dynamicMetadata_;
  }

  public static final int RESPONSE_HEADERS_TO_ADD_FIELD_NUMBER = 6;
  @SuppressWarnings("serial")
  private java.util.List<io.envoyproxy.envoy.config.core.v3.HeaderValueOption> responseHeadersToAdd_;
  /**
   * <pre>
   * This field allows the authorization service to send HTTP response headers
   * to the downstream client on success. Note that the :ref:`append field in HeaderValueOption &lt;envoy_v3_api_field_config.core.v3.HeaderValueOption.append&gt;`
   * defaults to false when used in this message.
   * </pre>
   *
   * <code>repeated .envoy.config.core.v3.HeaderValueOption response_headers_to_add = 6;</code>
   */
  @java.lang.Override
  public java.util.List<io.envoyproxy.envoy.config.core.v3.HeaderValueOption> getResponseHeadersToAddList() {
    return responseHeadersToAdd_;
  }
  /**
   * <pre>
   * This field allows the authorization service to send HTTP response headers
   * to the downstream client on success. Note that the :ref:`append field in HeaderValueOption &lt;envoy_v3_api_field_config.core.v3.HeaderValueOption.append&gt;`
   * defaults to false when used in this message.
   * </pre>
   *
   * <code>repeated .envoy.config.core.v3.HeaderValueOption response_headers_to_add = 6;</code>
   */
  @java.lang.Override
  public java.util.List<? extends io.envoyproxy.envoy.config.core.v3.HeaderValueOptionOrBuilder> 
      getResponseHeadersToAddOrBuilderList() {
    return responseHeadersToAdd_;
  }
  /**
   * <pre>
   * This field allows the authorization service to send HTTP response headers
   * to the downstream client on success. Note that the :ref:`append field in HeaderValueOption &lt;envoy_v3_api_field_config.core.v3.HeaderValueOption.append&gt;`
   * defaults to false when used in this message.
   * </pre>
   *
   * <code>repeated .envoy.config.core.v3.HeaderValueOption response_headers_to_add = 6;</code>
   */
  @java.lang.Override
  public int getResponseHeadersToAddCount() {
    return responseHeadersToAdd_.size();
  }
  /**
   * <pre>
   * This field allows the authorization service to send HTTP response headers
   * to the downstream client on success. Note that the :ref:`append field in HeaderValueOption &lt;envoy_v3_api_field_config.core.v3.HeaderValueOption.append&gt;`
   * defaults to false when used in this message.
   * </pre>
   *
   * <code>repeated .envoy.config.core.v3.HeaderValueOption response_headers_to_add = 6;</code>
   */
  @java.lang.Override
  public io.envoyproxy.envoy.config.core.v3.HeaderValueOption getResponseHeadersToAdd(int index) {
    return responseHeadersToAdd_.get(index);
  }
  /**
   * <pre>
   * This field allows the authorization service to send HTTP response headers
   * to the downstream client on success. Note that the :ref:`append field in HeaderValueOption &lt;envoy_v3_api_field_config.core.v3.HeaderValueOption.append&gt;`
   * defaults to false when used in this message.
   * </pre>
   *
   * <code>repeated .envoy.config.core.v3.HeaderValueOption response_headers_to_add = 6;</code>
   */
  @java.lang.Override
  public io.envoyproxy.envoy.config.core.v3.HeaderValueOptionOrBuilder getResponseHeadersToAddOrBuilder(
      int index) {
    return responseHeadersToAdd_.get(index);
  }

  public static final int QUERY_PARAMETERS_TO_SET_FIELD_NUMBER = 7;
  @SuppressWarnings("serial")
  private java.util.List<io.envoyproxy.envoy.config.core.v3.QueryParameter> queryParametersToSet_;
  /**
   * <pre>
   * This field allows the authorization service to set (and overwrite) query
   * string parameters on the original request before it is sent upstream.
   * </pre>
   *
   * <code>repeated .envoy.config.core.v3.QueryParameter query_parameters_to_set = 7;</code>
   */
  @java.lang.Override
  public java.util.List<io.envoyproxy.envoy.config.core.v3.QueryParameter> getQueryParametersToSetList() {
    return queryParametersToSet_;
  }
  /**
   * <pre>
   * This field allows the authorization service to set (and overwrite) query
   * string parameters on the original request before it is sent upstream.
   * </pre>
   *
   * <code>repeated .envoy.config.core.v3.QueryParameter query_parameters_to_set = 7;</code>
   */
  @java.lang.Override
  public java.util.List<? extends io.envoyproxy.envoy.config.core.v3.QueryParameterOrBuilder> 
      getQueryParametersToSetOrBuilderList() {
    return queryParametersToSet_;
  }
  /**
   * <pre>
   * This field allows the authorization service to set (and overwrite) query
   * string parameters on the original request before it is sent upstream.
   * </pre>
   *
   * <code>repeated .envoy.config.core.v3.QueryParameter query_parameters_to_set = 7;</code>
   */
  @java.lang.Override
  public int getQueryParametersToSetCount() {
    return queryParametersToSet_.size();
  }
  /**
   * <pre>
   * This field allows the authorization service to set (and overwrite) query
   * string parameters on the original request before it is sent upstream.
   * </pre>
   *
   * <code>repeated .envoy.config.core.v3.QueryParameter query_parameters_to_set = 7;</code>
   */
  @java.lang.Override
  public io.envoyproxy.envoy.config.core.v3.QueryParameter getQueryParametersToSet(int index) {
    return queryParametersToSet_.get(index);
  }
  /**
   * <pre>
   * This field allows the authorization service to set (and overwrite) query
   * string parameters on the original request before it is sent upstream.
   * </pre>
   *
   * <code>repeated .envoy.config.core.v3.QueryParameter query_parameters_to_set = 7;</code>
   */
  @java.lang.Override
  public io.envoyproxy.envoy.config.core.v3.QueryParameterOrBuilder getQueryParametersToSetOrBuilder(
      int index) {
    return queryParametersToSet_.get(index);
  }

  public static final int QUERY_PARAMETERS_TO_REMOVE_FIELD_NUMBER = 8;
  @SuppressWarnings("serial")
  private com.google.protobuf.LazyStringList queryParametersToRemove_;
  /**
   * <pre>
   * This field allows the authorization service to specify which query parameters
   * should be removed from the original request before it is sent upstream. Each
   * element in this list is a case-sensitive query parameter name to be removed.
   * </pre>
   *
   * <code>repeated string query_parameters_to_remove = 8;</code>
   * @return A list containing the queryParametersToRemove.
   */
  public com.google.protobuf.ProtocolStringList
      getQueryParametersToRemoveList() {
    return queryParametersToRemove_;
  }
  /**
   * <pre>
   * This field allows the authorization service to specify which query parameters
   * should be removed from the original request before it is sent upstream. Each
   * element in this list is a case-sensitive query parameter name to be removed.
   * </pre>
   *
   * <code>repeated string query_parameters_to_remove = 8;</code>
   * @return The count of queryParametersToRemove.
   */
  public int getQueryParametersToRemoveCount() {
    return queryParametersToRemove_.size();
  }
  /**
   * <pre>
   * This field allows the authorization service to specify which query parameters
   * should be removed from the original request before it is sent upstream. Each
   * element in this list is a case-sensitive query parameter name to be removed.
   * </pre>
   *
   * <code>repeated string query_parameters_to_remove = 8;</code>
   * @param index The index of the element to return.
   * @return The queryParametersToRemove at the given index.
   */
  public java.lang.String getQueryParametersToRemove(int index) {
    return queryParametersToRemove_.get(index);
  }
  /**
   * <pre>
   * This field allows the authorization service to specify which query parameters
   * should be removed from the original request before it is sent upstream. Each
   * element in this list is a case-sensitive query parameter name to be removed.
   * </pre>
   *
   * <code>repeated string query_parameters_to_remove = 8;</code>
   * @param index The index of the value to return.
   * @return The bytes of the queryParametersToRemove at the given index.
   */
  public com.google.protobuf.ByteString
      getQueryParametersToRemoveBytes(int index) {
    return queryParametersToRemove_.getByteString(index);
  }

  private byte memoizedIsInitialized = -1;
  @java.lang.Override
  public final boolean isInitialized() {
    byte isInitialized = memoizedIsInitialized;
    if (isInitialized == 1) return true;
    if (isInitialized == 0) return false;

    memoizedIsInitialized = 1;
    return true;
  }

  @java.lang.Override
  public void writeTo(com.google.protobuf.CodedOutputStream output)
                      throws java.io.IOException {
    for (int i = 0; i < headers_.size(); i++) {
      output.writeMessage(2, headers_.get(i));
    }
    if (dynamicMetadata_ != null) {
      output.writeMessage(3, getDynamicMetadata());
    }
    for (int i = 0; i < headersToRemove_.size(); i++) {
      com.google.protobuf.GeneratedMessageV3.writeString(output, 5, headersToRemove_.getRaw(i));
    }
    for (int i = 0; i < responseHeadersToAdd_.size(); i++) {
      output.writeMessage(6, responseHeadersToAdd_.get(i));
    }
    for (int i = 0; i < queryParametersToSet_.size(); i++) {
      output.writeMessage(7, queryParametersToSet_.get(i));
    }
    for (int i = 0; i < queryParametersToRemove_.size(); i++) {
      com.google.protobuf.GeneratedMessageV3.writeString(output, 8, queryParametersToRemove_.getRaw(i));
    }
    getUnknownFields().writeTo(output);
  }

  @java.lang.Override
  public int getSerializedSize() {
    int size = memoizedSize;
    if (size != -1) return size;

    size = 0;
    for (int i = 0; i < headers_.size(); i++) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(2, headers_.get(i));
    }
    if (dynamicMetadata_ != null) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(3, getDynamicMetadata());
    }
    {
      int dataSize = 0;
      for (int i = 0; i < headersToRemove_.size(); i++) {
        dataSize += computeStringSizeNoTag(headersToRemove_.getRaw(i));
      }
      size += dataSize;
      size += 1 * getHeadersToRemoveList().size();
    }
    for (int i = 0; i < responseHeadersToAdd_.size(); i++) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(6, responseHeadersToAdd_.get(i));
    }
    for (int i = 0; i < queryParametersToSet_.size(); i++) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(7, queryParametersToSet_.get(i));
    }
    {
      int dataSize = 0;
      for (int i = 0; i < queryParametersToRemove_.size(); i++) {
        dataSize += computeStringSizeNoTag(queryParametersToRemove_.getRaw(i));
      }
      size += dataSize;
      size += 1 * getQueryParametersToRemoveList().size();
    }
    size += getUnknownFields().getSerializedSize();
    memoizedSize = size;
    return size;
  }

  @java.lang.Override
  public boolean equals(final java.lang.Object obj) {
    if (obj == this) {
     return true;
    }
    if (!(obj instanceof io.envoyproxy.envoy.service.auth.v3.OkHttpResponse)) {
      return super.equals(obj);
    }
    io.envoyproxy.envoy.service.auth.v3.OkHttpResponse other = (io.envoyproxy.envoy.service.auth.v3.OkHttpResponse) obj;

    if (!getHeadersList()
        .equals(other.getHeadersList())) return false;
    if (!getHeadersToRemoveList()
        .equals(other.getHeadersToRemoveList())) return false;
    if (hasDynamicMetadata() != other.hasDynamicMetadata()) return false;
    if (hasDynamicMetadata()) {
      if (!getDynamicMetadata()
          .equals(other.getDynamicMetadata())) return false;
    }
    if (!getResponseHeadersToAddList()
        .equals(other.getResponseHeadersToAddList())) return false;
    if (!getQueryParametersToSetList()
        .equals(other.getQueryParametersToSetList())) return false;
    if (!getQueryParametersToRemoveList()
        .equals(other.getQueryParametersToRemoveList())) return false;
    if (!getUnknownFields().equals(other.getUnknownFields())) return false;
    return true;
  }

  @java.lang.Override
  public int hashCode() {
    if (memoizedHashCode != 0) {
      return memoizedHashCode;
    }
    int hash = 41;
    hash = (19 * hash) + getDescriptor().hashCode();
    if (getHeadersCount() > 0) {
      hash = (37 * hash) + HEADERS_FIELD_NUMBER;
      hash = (53 * hash) + getHeadersList().hashCode();
    }
    if (getHeadersToRemoveCount() > 0) {
      hash = (37 * hash) + HEADERS_TO_REMOVE_FIELD_NUMBER;
      hash = (53 * hash) + getHeadersToRemoveList().hashCode();
    }
    if (hasDynamicMetadata()) {
      hash = (37 * hash) + DYNAMIC_METADATA_FIELD_NUMBER;
      hash = (53 * hash) + getDynamicMetadata().hashCode();
    }
    if (getResponseHeadersToAddCount() > 0) {
      hash = (37 * hash) + RESPONSE_HEADERS_TO_ADD_FIELD_NUMBER;
      hash = (53 * hash) + getResponseHeadersToAddList().hashCode();
    }
    if (getQueryParametersToSetCount() > 0) {
      hash = (37 * hash) + QUERY_PARAMETERS_TO_SET_FIELD_NUMBER;
      hash = (53 * hash) + getQueryParametersToSetList().hashCode();
    }
    if (getQueryParametersToRemoveCount() > 0) {
      hash = (37 * hash) + QUERY_PARAMETERS_TO_REMOVE_FIELD_NUMBER;
      hash = (53 * hash) + getQueryParametersToRemoveList().hashCode();
    }
    hash = (29 * hash) + getUnknownFields().hashCode();
    memoizedHashCode = hash;
    return hash;
  }

  public static io.envoyproxy.envoy.service.auth.v3.OkHttpResponse parseFrom(
      java.nio.ByteBuffer data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static io.envoyproxy.envoy.service.auth.v3.OkHttpResponse parseFrom(
      java.nio.ByteBuffer data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static io.envoyproxy.envoy.service.auth.v3.OkHttpResponse parseFrom(
      com.google.protobuf.ByteString data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static io.envoyproxy.envoy.service.auth.v3.OkHttpResponse parseFrom(
      com.google.protobuf.ByteString data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static io.envoyproxy.envoy.service.auth.v3.OkHttpResponse parseFrom(byte[] data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static io.envoyproxy.envoy.service.auth.v3.OkHttpResponse parseFrom(
      byte[] data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static io.envoyproxy.envoy.service.auth.v3.OkHttpResponse parseFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input);
  }
  public static io.envoyproxy.envoy.service.auth.v3.OkHttpResponse parseFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input, extensionRegistry);
  }
  public static io.envoyproxy.envoy.service.auth.v3.OkHttpResponse parseDelimitedFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseDelimitedWithIOException(PARSER, input);
  }
  public static io.envoyproxy.envoy.service.auth.v3.OkHttpResponse parseDelimitedFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
  }
  public static io.envoyproxy.envoy.service.auth.v3.OkHttpResponse parseFrom(
      com.google.protobuf.CodedInputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input);
  }
  public static io.envoyproxy.envoy.service.auth.v3.OkHttpResponse parseFrom(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input, extensionRegistry);
  }

  @java.lang.Override
  public Builder newBuilderForType() { return newBuilder(); }
  public static Builder newBuilder() {
    return DEFAULT_INSTANCE.toBuilder();
  }
  public static Builder newBuilder(io.envoyproxy.envoy.service.auth.v3.OkHttpResponse prototype) {
    return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
  }
  @java.lang.Override
  public Builder toBuilder() {
    return this == DEFAULT_INSTANCE
        ? new Builder() : new Builder().mergeFrom(this);
  }

  @java.lang.Override
  protected Builder newBuilderForType(
      com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
    Builder builder = new Builder(parent);
    return builder;
  }
  /**
   * <pre>
   * HTTP attributes for an OK response.
   * [#next-free-field: 9]
   * </pre>
   *
   * Protobuf type {@code envoy.service.auth.v3.OkHttpResponse}
   */
  public static final class Builder extends
      com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
      // @@protoc_insertion_point(builder_implements:envoy.service.auth.v3.OkHttpResponse)
      io.envoyproxy.envoy.service.auth.v3.OkHttpResponseOrBuilder {
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return io.envoyproxy.envoy.service.auth.v3.ExternalAuthProto.internal_static_envoy_service_auth_v3_OkHttpResponse_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return io.envoyproxy.envoy.service.auth.v3.ExternalAuthProto.internal_static_envoy_service_auth_v3_OkHttpResponse_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              io.envoyproxy.envoy.service.auth.v3.OkHttpResponse.class, io.envoyproxy.envoy.service.auth.v3.OkHttpResponse.Builder.class);
    }

    // Construct using io.envoyproxy.envoy.service.auth.v3.OkHttpResponse.newBuilder()
    private Builder() {

    }

    private Builder(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      super(parent);

    }
    @java.lang.Override
    public Builder clear() {
      super.clear();
      bitField0_ = 0;
      if (headersBuilder_ == null) {
        headers_ = java.util.Collections.emptyList();
      } else {
        headers_ = null;
        headersBuilder_.clear();
      }
      bitField0_ = (bitField0_ & ~0x00000001);
      headersToRemove_ = com.google.protobuf.LazyStringArrayList.EMPTY;
      bitField0_ = (bitField0_ & ~0x00000002);
      dynamicMetadata_ = null;
      if (dynamicMetadataBuilder_ != null) {
        dynamicMetadataBuilder_.dispose();
        dynamicMetadataBuilder_ = null;
      }
      if (responseHeadersToAddBuilder_ == null) {
        responseHeadersToAdd_ = java.util.Collections.emptyList();
      } else {
        responseHeadersToAdd_ = null;
        responseHeadersToAddBuilder_.clear();
      }
      bitField0_ = (bitField0_ & ~0x00000008);
      if (queryParametersToSetBuilder_ == null) {
        queryParametersToSet_ = java.util.Collections.emptyList();
      } else {
        queryParametersToSet_ = null;
        queryParametersToSetBuilder_.clear();
      }
      bitField0_ = (bitField0_ & ~0x00000010);
      queryParametersToRemove_ = com.google.protobuf.LazyStringArrayList.EMPTY;
      bitField0_ = (bitField0_ & ~0x00000020);
      return this;
    }

    @java.lang.Override
    public com.google.protobuf.Descriptors.Descriptor
        getDescriptorForType() {
      return io.envoyproxy.envoy.service.auth.v3.ExternalAuthProto.internal_static_envoy_service_auth_v3_OkHttpResponse_descriptor;
    }

    @java.lang.Override
    public io.envoyproxy.envoy.service.auth.v3.OkHttpResponse getDefaultInstanceForType() {
      return io.envoyproxy.envoy.service.auth.v3.OkHttpResponse.getDefaultInstance();
    }

    @java.lang.Override
    public io.envoyproxy.envoy.service.auth.v3.OkHttpResponse build() {
      io.envoyproxy.envoy.service.auth.v3.OkHttpResponse result = buildPartial();
      if (!result.isInitialized()) {
        throw newUninitializedMessageException(result);
      }
      return result;
    }

    @java.lang.Override
    public io.envoyproxy.envoy.service.auth.v3.OkHttpResponse buildPartial() {
      io.envoyproxy.envoy.service.auth.v3.OkHttpResponse result = new io.envoyproxy.envoy.service.auth.v3.OkHttpResponse(this);
      buildPartialRepeatedFields(result);
      if (bitField0_ != 0) { buildPartial0(result); }
      onBuilt();
      return result;
    }

    private void buildPartialRepeatedFields(io.envoyproxy.envoy.service.auth.v3.OkHttpResponse result) {
      if (headersBuilder_ == null) {
        if (((bitField0_ & 0x00000001) != 0)) {
          headers_ = java.util.Collections.unmodifiableList(headers_);
          bitField0_ = (bitField0_ & ~0x00000001);
        }
        result.headers_ = headers_;
      } else {
        result.headers_ = headersBuilder_.build();
      }
      if (((bitField0_ & 0x00000002) != 0)) {
        headersToRemove_ = headersToRemove_.getUnmodifiableView();
        bitField0_ = (bitField0_ & ~0x00000002);
      }
      result.headersToRemove_ = headersToRemove_;
      if (responseHeadersToAddBuilder_ == null) {
        if (((bitField0_ & 0x00000008) != 0)) {
          responseHeadersToAdd_ = java.util.Collections.unmodifiableList(responseHeadersToAdd_);
          bitField0_ = (bitField0_ & ~0x00000008);
        }
        result.responseHeadersToAdd_ = responseHeadersToAdd_;
      } else {
        result.responseHeadersToAdd_ = responseHeadersToAddBuilder_.build();
      }
      if (queryParametersToSetBuilder_ == null) {
        if (((bitField0_ & 0x00000010) != 0)) {
          queryParametersToSet_ = java.util.Collections.unmodifiableList(queryParametersToSet_);
          bitField0_ = (bitField0_ & ~0x00000010);
        }
        result.queryParametersToSet_ = queryParametersToSet_;
      } else {
        result.queryParametersToSet_ = queryParametersToSetBuilder_.build();
      }
      if (((bitField0_ & 0x00000020) != 0)) {
        queryParametersToRemove_ = queryParametersToRemove_.getUnmodifiableView();
        bitField0_ = (bitField0_ & ~0x00000020);
      }
      result.queryParametersToRemove_ = queryParametersToRemove_;
    }

    private void buildPartial0(io.envoyproxy.envoy.service.auth.v3.OkHttpResponse result) {
      int from_bitField0_ = bitField0_;
      if (((from_bitField0_ & 0x00000004) != 0)) {
        result.dynamicMetadata_ = dynamicMetadataBuilder_ == null
            ? dynamicMetadata_
            : dynamicMetadataBuilder_.build();
      }
    }

    @java.lang.Override
    public Builder clone() {
      return super.clone();
    }
    @java.lang.Override
    public Builder setField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        java.lang.Object value) {
      return super.setField(field, value);
    }
    @java.lang.Override
    public Builder clearField(
        com.google.protobuf.Descriptors.FieldDescriptor field) {
      return super.clearField(field);
    }
    @java.lang.Override
    public Builder clearOneof(
        com.google.protobuf.Descriptors.OneofDescriptor oneof) {
      return super.clearOneof(oneof);
    }
    @java.lang.Override
    public Builder setRepeatedField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        int index, java.lang.Object value) {
      return super.setRepeatedField(field, index, value);
    }
    @java.lang.Override
    public Builder addRepeatedField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        java.lang.Object value) {
      return super.addRepeatedField(field, value);
    }
    @java.lang.Override
    public Builder mergeFrom(com.google.protobuf.Message other) {
      if (other instanceof io.envoyproxy.envoy.service.auth.v3.OkHttpResponse) {
        return mergeFrom((io.envoyproxy.envoy.service.auth.v3.OkHttpResponse)other);
      } else {
        super.mergeFrom(other);
        return this;
      }
    }

    public Builder mergeFrom(io.envoyproxy.envoy.service.auth.v3.OkHttpResponse other) {
      if (other == io.envoyproxy.envoy.service.auth.v3.OkHttpResponse.getDefaultInstance()) return this;
      if (headersBuilder_ == null) {
        if (!other.headers_.isEmpty()) {
          if (headers_.isEmpty()) {
            headers_ = other.headers_;
            bitField0_ = (bitField0_ & ~0x00000001);
          } else {
            ensureHeadersIsMutable();
            headers_.addAll(other.headers_);
          }
          onChanged();
        }
      } else {
        if (!other.headers_.isEmpty()) {
          if (headersBuilder_.isEmpty()) {
            headersBuilder_.dispose();
            headersBuilder_ = null;
            headers_ = other.headers_;
            bitField0_ = (bitField0_ & ~0x00000001);
            headersBuilder_ = 
              com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?
                 getHeadersFieldBuilder() : null;
          } else {
            headersBuilder_.addAllMessages(other.headers_);
          }
        }
      }
      if (!other.headersToRemove_.isEmpty()) {
        if (headersToRemove_.isEmpty()) {
          headersToRemove_ = other.headersToRemove_;
          bitField0_ = (bitField0_ & ~0x00000002);
        } else {
          ensureHeadersToRemoveIsMutable();
          headersToRemove_.addAll(other.headersToRemove_);
        }
        onChanged();
      }
      if (other.hasDynamicMetadata()) {
        mergeDynamicMetadata(other.getDynamicMetadata());
      }
      if (responseHeadersToAddBuilder_ == null) {
        if (!other.responseHeadersToAdd_.isEmpty()) {
          if (responseHeadersToAdd_.isEmpty()) {
            responseHeadersToAdd_ = other.responseHeadersToAdd_;
            bitField0_ = (bitField0_ & ~0x00000008);
          } else {
            ensureResponseHeadersToAddIsMutable();
            responseHeadersToAdd_.addAll(other.responseHeadersToAdd_);
          }
          onChanged();
        }
      } else {
        if (!other.responseHeadersToAdd_.isEmpty()) {
          if (responseHeadersToAddBuilder_.isEmpty()) {
            responseHeadersToAddBuilder_.dispose();
            responseHeadersToAddBuilder_ = null;
            responseHeadersToAdd_ = other.responseHeadersToAdd_;
            bitField0_ = (bitField0_ & ~0x00000008);
            responseHeadersToAddBuilder_ = 
              com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?
                 getResponseHeadersToAddFieldBuilder() : null;
          } else {
            responseHeadersToAddBuilder_.addAllMessages(other.responseHeadersToAdd_);
          }
        }
      }
      if (queryParametersToSetBuilder_ == null) {
        if (!other.queryParametersToSet_.isEmpty()) {
          if (queryParametersToSet_.isEmpty()) {
            queryParametersToSet_ = other.queryParametersToSet_;
            bitField0_ = (bitField0_ & ~0x00000010);
          } else {
            ensureQueryParametersToSetIsMutable();
            queryParametersToSet_.addAll(other.queryParametersToSet_);
          }
          onChanged();
        }
      } else {
        if (!other.queryParametersToSet_.isEmpty()) {
          if (queryParametersToSetBuilder_.isEmpty()) {
            queryParametersToSetBuilder_.dispose();
            queryParametersToSetBuilder_ = null;
            queryParametersToSet_ = other.queryParametersToSet_;
            bitField0_ = (bitField0_ & ~0x00000010);
            queryParametersToSetBuilder_ = 
              com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?
                 getQueryParametersToSetFieldBuilder() : null;
          } else {
            queryParametersToSetBuilder_.addAllMessages(other.queryParametersToSet_);
          }
        }
      }
      if (!other.queryParametersToRemove_.isEmpty()) {
        if (queryParametersToRemove_.isEmpty()) {
          queryParametersToRemove_ = other.queryParametersToRemove_;
          bitField0_ = (bitField0_ & ~0x00000020);
        } else {
          ensureQueryParametersToRemoveIsMutable();
          queryParametersToRemove_.addAll(other.queryParametersToRemove_);
        }
        onChanged();
      }
      this.mergeUnknownFields(other.getUnknownFields());
      onChanged();
      return this;
    }

    @java.lang.Override
    public final boolean isInitialized() {
      return true;
    }

    @java.lang.Override
    public Builder mergeFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 18: {
              io.envoyproxy.envoy.config.core.v3.HeaderValueOption m =
                  input.readMessage(
                      io.envoyproxy.envoy.config.core.v3.HeaderValueOption.parser(),
                      extensionRegistry);
              if (headersBuilder_ == null) {
                ensureHeadersIsMutable();
                headers_.add(m);
              } else {
                headersBuilder_.addMessage(m);
              }
              break;
            } // case 18
            case 26: {
              input.readMessage(
                  getDynamicMetadataFieldBuilder().getBuilder(),
                  extensionRegistry);
              bitField0_ |= 0x00000004;
              break;
            } // case 26
            case 42: {
              java.lang.String s = input.readStringRequireUtf8();
              ensureHeadersToRemoveIsMutable();
              headersToRemove_.add(s);
              break;
            } // case 42
            case 50: {
              io.envoyproxy.envoy.config.core.v3.HeaderValueOption m =
                  input.readMessage(
                      io.envoyproxy.envoy.config.core.v3.HeaderValueOption.parser(),
                      extensionRegistry);
              if (responseHeadersToAddBuilder_ == null) {
                ensureResponseHeadersToAddIsMutable();
                responseHeadersToAdd_.add(m);
              } else {
                responseHeadersToAddBuilder_.addMessage(m);
              }
              break;
            } // case 50
            case 58: {
              io.envoyproxy.envoy.config.core.v3.QueryParameter m =
                  input.readMessage(
                      io.envoyproxy.envoy.config.core.v3.QueryParameter.parser(),
                      extensionRegistry);
              if (queryParametersToSetBuilder_ == null) {
                ensureQueryParametersToSetIsMutable();
                queryParametersToSet_.add(m);
              } else {
                queryParametersToSetBuilder_.addMessage(m);
              }
              break;
            } // case 58
            case 66: {
              java.lang.String s = input.readStringRequireUtf8();
              ensureQueryParametersToRemoveIsMutable();
              queryParametersToRemove_.add(s);
              break;
            } // case 66
            default: {
              if (!super.parseUnknownField(input, extensionRegistry, tag)) {
                done = true; // was an endgroup tag
              }
              break;
            } // default:
          } // switch (tag)
        } // while (!done)
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.unwrapIOException();
      } finally {
        onChanged();
      } // finally
      return this;
    }
    private int bitField0_;

    private java.util.List<io.envoyproxy.envoy.config.core.v3.HeaderValueOption> headers_ =
      java.util.Collections.emptyList();
    private void ensureHeadersIsMutable() {
      if (!((bitField0_ & 0x00000001) != 0)) {
        headers_ = new java.util.ArrayList<io.envoyproxy.envoy.config.core.v3.HeaderValueOption>(headers_);
        bitField0_ |= 0x00000001;
       }
    }

    private com.google.protobuf.RepeatedFieldBuilderV3<
        io.envoyproxy.envoy.config.core.v3.HeaderValueOption, io.envoyproxy.envoy.config.core.v3.HeaderValueOption.Builder, io.envoyproxy.envoy.config.core.v3.HeaderValueOptionOrBuilder> headersBuilder_;

    /**
     * <pre>
     * HTTP entity headers in addition to the original request headers. This allows the authorization
     * service to append, to add or to override headers from the original request before
     * dispatching it to the upstream. Note that the :ref:`append field in HeaderValueOption &lt;envoy_v3_api_field_config.core.v3.HeaderValueOption.append&gt;` defaults to
     * false when used in this message. By setting the ``append`` field to ``true``,
     * the filter will append the correspondent header value to the matched request header.
     * By leaving ``append`` as false, the filter will either add a new header, or override an existing
     * one if there is a match.
     * </pre>
     *
     * <code>repeated .envoy.config.core.v3.HeaderValueOption headers = 2;</code>
     */
    public java.util.List<io.envoyproxy.envoy.config.core.v3.HeaderValueOption> getHeadersList() {
      if (headersBuilder_ == null) {
        return java.util.Collections.unmodifiableList(headers_);
      } else {
        return headersBuilder_.getMessageList();
      }
    }
    /**
     * <pre>
     * HTTP entity headers in addition to the original request headers. This allows the authorization
     * service to append, to add or to override headers from the original request before
     * dispatching it to the upstream. Note that the :ref:`append field in HeaderValueOption &lt;envoy_v3_api_field_config.core.v3.HeaderValueOption.append&gt;` defaults to
     * false when used in this message. By setting the ``append`` field to ``true``,
     * the filter will append the correspondent header value to the matched request header.
     * By leaving ``append`` as false, the filter will either add a new header, or override an existing
     * one if there is a match.
     * </pre>
     *
     * <code>repeated .envoy.config.core.v3.HeaderValueOption headers = 2;</code>
     */
    public int getHeadersCount() {
      if (headersBuilder_ == null) {
        return headers_.size();
      } else {
        return headersBuilder_.getCount();
      }
    }
    /**
     * <pre>
     * HTTP entity headers in addition to the original request headers. This allows the authorization
     * service to append, to add or to override headers from the original request before
     * dispatching it to the upstream. Note that the :ref:`append field in HeaderValueOption &lt;envoy_v3_api_field_config.core.v3.HeaderValueOption.append&gt;` defaults to
     * false when used in this message. By setting the ``append`` field to ``true``,
     * the filter will append the correspondent header value to the matched request header.
     * By leaving ``append`` as false, the filter will either add a new header, or override an existing
     * one if there is a match.
     * </pre>
     *
     * <code>repeated .envoy.config.core.v3.HeaderValueOption headers = 2;</code>
     */
    public io.envoyproxy.envoy.config.core.v3.HeaderValueOption getHeaders(int index) {
      if (headersBuilder_ == null) {
        return headers_.get(index);
      } else {
        return headersBuilder_.getMessage(index);
      }
    }
    /**
     * <pre>
     * HTTP entity headers in addition to the original request headers. This allows the authorization
     * service to append, to add or to override headers from the original request before
     * dispatching it to the upstream. Note that the :ref:`append field in HeaderValueOption &lt;envoy_v3_api_field_config.core.v3.HeaderValueOption.append&gt;` defaults to
     * false when used in this message. By setting the ``append`` field to ``true``,
     * the filter will append the correspondent header value to the matched request header.
     * By leaving ``append`` as false, the filter will either add a new header, or override an existing
     * one if there is a match.
     * </pre>
     *
     * <code>repeated .envoy.config.core.v3.HeaderValueOption headers = 2;</code>
     */
    public Builder setHeaders(
        int index, io.envoyproxy.envoy.config.core.v3.HeaderValueOption value) {
      if (headersBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureHeadersIsMutable();
        headers_.set(index, value);
        onChanged();
      } else {
        headersBuilder_.setMessage(index, value);
      }
      return this;
    }
    /**
     * <pre>
     * HTTP entity headers in addition to the original request headers. This allows the authorization
     * service to append, to add or to override headers from the original request before
     * dispatching it to the upstream. Note that the :ref:`append field in HeaderValueOption &lt;envoy_v3_api_field_config.core.v3.HeaderValueOption.append&gt;` defaults to
     * false when used in this message. By setting the ``append`` field to ``true``,
     * the filter will append the correspondent header value to the matched request header.
     * By leaving ``append`` as false, the filter will either add a new header, or override an existing
     * one if there is a match.
     * </pre>
     *
     * <code>repeated .envoy.config.core.v3.HeaderValueOption headers = 2;</code>
     */
    public Builder setHeaders(
        int index, io.envoyproxy.envoy.config.core.v3.HeaderValueOption.Builder builderForValue) {
      if (headersBuilder_ == null) {
        ensureHeadersIsMutable();
        headers_.set(index, builderForValue.build());
        onChanged();
      } else {
        headersBuilder_.setMessage(index, builderForValue.build());
      }
      return this;
    }
    /**
     * <pre>
     * HTTP entity headers in addition to the original request headers. This allows the authorization
     * service to append, to add or to override headers from the original request before
     * dispatching it to the upstream. Note that the :ref:`append field in HeaderValueOption &lt;envoy_v3_api_field_config.core.v3.HeaderValueOption.append&gt;` defaults to
     * false when used in this message. By setting the ``append`` field to ``true``,
     * the filter will append the correspondent header value to the matched request header.
     * By leaving ``append`` as false, the filter will either add a new header, or override an existing
     * one if there is a match.
     * </pre>
     *
     * <code>repeated .envoy.config.core.v3.HeaderValueOption headers = 2;</code>
     */
    public Builder addHeaders(io.envoyproxy.envoy.config.core.v3.HeaderValueOption value) {
      if (headersBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureHeadersIsMutable();
        headers_.add(value);
        onChanged();
      } else {
        headersBuilder_.addMessage(value);
      }
      return this;
    }
    /**
     * <pre>
     * HTTP entity headers in addition to the original request headers. This allows the authorization
     * service to append, to add or to override headers from the original request before
     * dispatching it to the upstream. Note that the :ref:`append field in HeaderValueOption &lt;envoy_v3_api_field_config.core.v3.HeaderValueOption.append&gt;` defaults to
     * false when used in this message. By setting the ``append`` field to ``true``,
     * the filter will append the correspondent header value to the matched request header.
     * By leaving ``append`` as false, the filter will either add a new header, or override an existing
     * one if there is a match.
     * </pre>
     *
     * <code>repeated .envoy.config.core.v3.HeaderValueOption headers = 2;</code>
     */
    public Builder addHeaders(
        int index, io.envoyproxy.envoy.config.core.v3.HeaderValueOption value) {
      if (headersBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureHeadersIsMutable();
        headers_.add(index, value);
        onChanged();
      } else {
        headersBuilder_.addMessage(index, value);
      }
      return this;
    }
    /**
     * <pre>
     * HTTP entity headers in addition to the original request headers. This allows the authorization
     * service to append, to add or to override headers from the original request before
     * dispatching it to the upstream. Note that the :ref:`append field in HeaderValueOption &lt;envoy_v3_api_field_config.core.v3.HeaderValueOption.append&gt;` defaults to
     * false when used in this message. By setting the ``append`` field to ``true``,
     * the filter will append the correspondent header value to the matched request header.
     * By leaving ``append`` as false, the filter will either add a new header, or override an existing
     * one if there is a match.
     * </pre>
     *
     * <code>repeated .envoy.config.core.v3.HeaderValueOption headers = 2;</code>
     */
    public Builder addHeaders(
        io.envoyproxy.envoy.config.core.v3.HeaderValueOption.Builder builderForValue) {
      if (headersBuilder_ == null) {
        ensureHeadersIsMutable();
        headers_.add(builderForValue.build());
        onChanged();
      } else {
        headersBuilder_.addMessage(builderForValue.build());
      }
      return this;
    }
    /**
     * <pre>
     * HTTP entity headers in addition to the original request headers. This allows the authorization
     * service to append, to add or to override headers from the original request before
     * dispatching it to the upstream. Note that the :ref:`append field in HeaderValueOption &lt;envoy_v3_api_field_config.core.v3.HeaderValueOption.append&gt;` defaults to
     * false when used in this message. By setting the ``append`` field to ``true``,
     * the filter will append the correspondent header value to the matched request header.
     * By leaving ``append`` as false, the filter will either add a new header, or override an existing
     * one if there is a match.
     * </pre>
     *
     * <code>repeated .envoy.config.core.v3.HeaderValueOption headers = 2;</code>
     */
    public Builder addHeaders(
        int index, io.envoyproxy.envoy.config.core.v3.HeaderValueOption.Builder builderForValue) {
      if (headersBuilder_ == null) {
        ensureHeadersIsMutable();
        headers_.add(index, builderForValue.build());
        onChanged();
      } else {
        headersBuilder_.addMessage(index, builderForValue.build());
      }
      return this;
    }
    /**
     * <pre>
     * HTTP entity headers in addition to the original request headers. This allows the authorization
     * service to append, to add or to override headers from the original request before
     * dispatching it to the upstream. Note that the :ref:`append field in HeaderValueOption &lt;envoy_v3_api_field_config.core.v3.HeaderValueOption.append&gt;` defaults to
     * false when used in this message. By setting the ``append`` field to ``true``,
     * the filter will append the correspondent header value to the matched request header.
     * By leaving ``append`` as false, the filter will either add a new header, or override an existing
     * one if there is a match.
     * </pre>
     *
     * <code>repeated .envoy.config.core.v3.HeaderValueOption headers = 2;</code>
     */
    public Builder addAllHeaders(
        java.lang.Iterable<? extends io.envoyproxy.envoy.config.core.v3.HeaderValueOption> values) {
      if (headersBuilder_ == null) {
        ensureHeadersIsMutable();
        com.google.protobuf.AbstractMessageLite.Builder.addAll(
            values, headers_);
        onChanged();
      } else {
        headersBuilder_.addAllMessages(values);
      }
      return this;
    }
    /**
     * <pre>
     * HTTP entity headers in addition to the original request headers. This allows the authorization
     * service to append, to add or to override headers from the original request before
     * dispatching it to the upstream. Note that the :ref:`append field in HeaderValueOption &lt;envoy_v3_api_field_config.core.v3.HeaderValueOption.append&gt;` defaults to
     * false when used in this message. By setting the ``append`` field to ``true``,
     * the filter will append the correspondent header value to the matched request header.
     * By leaving ``append`` as false, the filter will either add a new header, or override an existing
     * one if there is a match.
     * </pre>
     *
     * <code>repeated .envoy.config.core.v3.HeaderValueOption headers = 2;</code>
     */
    public Builder clearHeaders() {
      if (headersBuilder_ == null) {
        headers_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000001);
        onChanged();
      } else {
        headersBuilder_.clear();
      }
      return this;
    }
    /**
     * <pre>
     * HTTP entity headers in addition to the original request headers. This allows the authorization
     * service to append, to add or to override headers from the original request before
     * dispatching it to the upstream. Note that the :ref:`append field in HeaderValueOption &lt;envoy_v3_api_field_config.core.v3.HeaderValueOption.append&gt;` defaults to
     * false when used in this message. By setting the ``append`` field to ``true``,
     * the filter will append the correspondent header value to the matched request header.
     * By leaving ``append`` as false, the filter will either add a new header, or override an existing
     * one if there is a match.
     * </pre>
     *
     * <code>repeated .envoy.config.core.v3.HeaderValueOption headers = 2;</code>
     */
    public Builder removeHeaders(int index) {
      if (headersBuilder_ == null) {
        ensureHeadersIsMutable();
        headers_.remove(index);
        onChanged();
      } else {
        headersBuilder_.remove(index);
      }
      return this;
    }
    /**
     * <pre>
     * HTTP entity headers in addition to the original request headers. This allows the authorization
     * service to append, to add or to override headers from the original request before
     * dispatching it to the upstream. Note that the :ref:`append field in HeaderValueOption &lt;envoy_v3_api_field_config.core.v3.HeaderValueOption.append&gt;` defaults to
     * false when used in this message. By setting the ``append`` field to ``true``,
     * the filter will append the correspondent header value to the matched request header.
     * By leaving ``append`` as false, the filter will either add a new header, or override an existing
     * one if there is a match.
     * </pre>
     *
     * <code>repeated .envoy.config.core.v3.HeaderValueOption headers = 2;</code>
     */
    public io.envoyproxy.envoy.config.core.v3.HeaderValueOption.Builder getHeadersBuilder(
        int index) {
      return getHeadersFieldBuilder().getBuilder(index);
    }
    /**
     * <pre>
     * HTTP entity headers in addition to the original request headers. This allows the authorization
     * service to append, to add or to override headers from the original request before
     * dispatching it to the upstream. Note that the :ref:`append field in HeaderValueOption &lt;envoy_v3_api_field_config.core.v3.HeaderValueOption.append&gt;` defaults to
     * false when used in this message. By setting the ``append`` field to ``true``,
     * the filter will append the correspondent header value to the matched request header.
     * By leaving ``append`` as false, the filter will either add a new header, or override an existing
     * one if there is a match.
     * </pre>
     *
     * <code>repeated .envoy.config.core.v3.HeaderValueOption headers = 2;</code>
     */
    public io.envoyproxy.envoy.config.core.v3.HeaderValueOptionOrBuilder getHeadersOrBuilder(
        int index) {
      if (headersBuilder_ == null) {
        return headers_.get(index);  } else {
        return headersBuilder_.getMessageOrBuilder(index);
      }
    }
    /**
     * <pre>
     * HTTP entity headers in addition to the original request headers. This allows the authorization
     * service to append, to add or to override headers from the original request before
     * dispatching it to the upstream. Note that the :ref:`append field in HeaderValueOption &lt;envoy_v3_api_field_config.core.v3.HeaderValueOption.append&gt;` defaults to
     * false when used in this message. By setting the ``append`` field to ``true``,
     * the filter will append the correspondent header value to the matched request header.
     * By leaving ``append`` as false, the filter will either add a new header, or override an existing
     * one if there is a match.
     * </pre>
     *
     * <code>repeated .envoy.config.core.v3.HeaderValueOption headers = 2;</code>
     */
    public java.util.List<? extends io.envoyproxy.envoy.config.core.v3.HeaderValueOptionOrBuilder> 
         getHeadersOrBuilderList() {
      if (headersBuilder_ != null) {
        return headersBuilder_.getMessageOrBuilderList();
      } else {
        return java.util.Collections.unmodifiableList(headers_);
      }
    }
    /**
     * <pre>
     * HTTP entity headers in addition to the original request headers. This allows the authorization
     * service to append, to add or to override headers from the original request before
     * dispatching it to the upstream. Note that the :ref:`append field in HeaderValueOption &lt;envoy_v3_api_field_config.core.v3.HeaderValueOption.append&gt;` defaults to
     * false when used in this message. By setting the ``append`` field to ``true``,
     * the filter will append the correspondent header value to the matched request header.
     * By leaving ``append`` as false, the filter will either add a new header, or override an existing
     * one if there is a match.
     * </pre>
     *
     * <code>repeated .envoy.config.core.v3.HeaderValueOption headers = 2;</code>
     */
    public io.envoyproxy.envoy.config.core.v3.HeaderValueOption.Builder addHeadersBuilder() {
      return getHeadersFieldBuilder().addBuilder(
          io.envoyproxy.envoy.config.core.v3.HeaderValueOption.getDefaultInstance());
    }
    /**
     * <pre>
     * HTTP entity headers in addition to the original request headers. This allows the authorization
     * service to append, to add or to override headers from the original request before
     * dispatching it to the upstream. Note that the :ref:`append field in HeaderValueOption &lt;envoy_v3_api_field_config.core.v3.HeaderValueOption.append&gt;` defaults to
     * false when used in this message. By setting the ``append`` field to ``true``,
     * the filter will append the correspondent header value to the matched request header.
     * By leaving ``append`` as false, the filter will either add a new header, or override an existing
     * one if there is a match.
     * </pre>
     *
     * <code>repeated .envoy.config.core.v3.HeaderValueOption headers = 2;</code>
     */
    public io.envoyproxy.envoy.config.core.v3.HeaderValueOption.Builder addHeadersBuilder(
        int index) {
      return getHeadersFieldBuilder().addBuilder(
          index, io.envoyproxy.envoy.config.core.v3.HeaderValueOption.getDefaultInstance());
    }
    /**
     * <pre>
     * HTTP entity headers in addition to the original request headers. This allows the authorization
     * service to append, to add or to override headers from the original request before
     * dispatching it to the upstream. Note that the :ref:`append field in HeaderValueOption &lt;envoy_v3_api_field_config.core.v3.HeaderValueOption.append&gt;` defaults to
     * false when used in this message. By setting the ``append`` field to ``true``,
     * the filter will append the correspondent header value to the matched request header.
     * By leaving ``append`` as false, the filter will either add a new header, or override an existing
     * one if there is a match.
     * </pre>
     *
     * <code>repeated .envoy.config.core.v3.HeaderValueOption headers = 2;</code>
     */
    public java.util.List<io.envoyproxy.envoy.config.core.v3.HeaderValueOption.Builder> 
         getHeadersBuilderList() {
      return getHeadersFieldBuilder().getBuilderList();
    }
    private com.google.protobuf.RepeatedFieldBuilderV3<
        io.envoyproxy.envoy.config.core.v3.HeaderValueOption, io.envoyproxy.envoy.config.core.v3.HeaderValueOption.Builder, io.envoyproxy.envoy.config.core.v3.HeaderValueOptionOrBuilder> 
        getHeadersFieldBuilder() {
      if (headersBuilder_ == null) {
        headersBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<
            io.envoyproxy.envoy.config.core.v3.HeaderValueOption, io.envoyproxy.envoy.config.core.v3.HeaderValueOption.Builder, io.envoyproxy.envoy.config.core.v3.HeaderValueOptionOrBuilder>(
                headers_,
                ((bitField0_ & 0x00000001) != 0),
                getParentForChildren(),
                isClean());
        headers_ = null;
      }
      return headersBuilder_;
    }

    private com.google.protobuf.LazyStringList headersToRemove_ = com.google.protobuf.LazyStringArrayList.EMPTY;
    private void ensureHeadersToRemoveIsMutable() {
      if (!((bitField0_ & 0x00000002) != 0)) {
        headersToRemove_ = new com.google.protobuf.LazyStringArrayList(headersToRemove_);
        bitField0_ |= 0x00000002;
       }
    }
    /**
     * <pre>
     * HTTP entity headers to remove from the original request before dispatching
     * it to the upstream. This allows the authorization service to act on auth
     * related headers (like ``Authorization``), process them, and consume them.
     * Under this model, the upstream will either receive the request (if it's
     * authorized) or not receive it (if it's not), but will not see headers
     * containing authorization credentials.
     * Pseudo headers (such as ``:authority``, ``:method``, ``:path`` etc), as well as
     * the header ``Host``, may not be removed as that would make the request
     * malformed. If mentioned in ``headers_to_remove`` these special headers will
     * be ignored.
     * When using the HTTP service this must instead be set by the HTTP
     * authorization service as a comma separated list like so:
     * ``x-envoy-auth-headers-to-remove: one-auth-header, another-auth-header``.
     * </pre>
     *
     * <code>repeated string headers_to_remove = 5;</code>
     * @return A list containing the headersToRemove.
     */
    public com.google.protobuf.ProtocolStringList
        getHeadersToRemoveList() {
      return headersToRemove_.getUnmodifiableView();
    }
    /**
     * <pre>
     * HTTP entity headers to remove from the original request before dispatching
     * it to the upstream. This allows the authorization service to act on auth
     * related headers (like ``Authorization``), process them, and consume them.
     * Under this model, the upstream will either receive the request (if it's
     * authorized) or not receive it (if it's not), but will not see headers
     * containing authorization credentials.
     * Pseudo headers (such as ``:authority``, ``:method``, ``:path`` etc), as well as
     * the header ``Host``, may not be removed as that would make the request
     * malformed. If mentioned in ``headers_to_remove`` these special headers will
     * be ignored.
     * When using the HTTP service this must instead be set by the HTTP
     * authorization service as a comma separated list like so:
     * ``x-envoy-auth-headers-to-remove: one-auth-header, another-auth-header``.
     * </pre>
     *
     * <code>repeated string headers_to_remove = 5;</code>
     * @return The count of headersToRemove.
     */
    public int getHeadersToRemoveCount() {
      return headersToRemove_.size();
    }
    /**
     * <pre>
     * HTTP entity headers to remove from the original request before dispatching
     * it to the upstream. This allows the authorization service to act on auth
     * related headers (like ``Authorization``), process them, and consume them.
     * Under this model, the upstream will either receive the request (if it's
     * authorized) or not receive it (if it's not), but will not see headers
     * containing authorization credentials.
     * Pseudo headers (such as ``:authority``, ``:method``, ``:path`` etc), as well as
     * the header ``Host``, may not be removed as that would make the request
     * malformed. If mentioned in ``headers_to_remove`` these special headers will
     * be ignored.
     * When using the HTTP service this must instead be set by the HTTP
     * authorization service as a comma separated list like so:
     * ``x-envoy-auth-headers-to-remove: one-auth-header, another-auth-header``.
     * </pre>
     *
     * <code>repeated string headers_to_remove = 5;</code>
     * @param index The index of the element to return.
     * @return The headersToRemove at the given index.
     */
    public java.lang.String getHeadersToRemove(int index) {
      return headersToRemove_.get(index);
    }
    /**
     * <pre>
     * HTTP entity headers to remove from the original request before dispatching
     * it to the upstream. This allows the authorization service to act on auth
     * related headers (like ``Authorization``), process them, and consume them.
     * Under this model, the upstream will either receive the request (if it's
     * authorized) or not receive it (if it's not), but will not see headers
     * containing authorization credentials.
     * Pseudo headers (such as ``:authority``, ``:method``, ``:path`` etc), as well as
     * the header ``Host``, may not be removed as that would make the request
     * malformed. If mentioned in ``headers_to_remove`` these special headers will
     * be ignored.
     * When using the HTTP service this must instead be set by the HTTP
     * authorization service as a comma separated list like so:
     * ``x-envoy-auth-headers-to-remove: one-auth-header, another-auth-header``.
     * </pre>
     *
     * <code>repeated string headers_to_remove = 5;</code>
     * @param index The index of the value to return.
     * @return The bytes of the headersToRemove at the given index.
     */
    public com.google.protobuf.ByteString
        getHeadersToRemoveBytes(int index) {
      return headersToRemove_.getByteString(index);
    }
    /**
     * <pre>
     * HTTP entity headers to remove from the original request before dispatching
     * it to the upstream. This allows the authorization service to act on auth
     * related headers (like ``Authorization``), process them, and consume them.
     * Under this model, the upstream will either receive the request (if it's
     * authorized) or not receive it (if it's not), but will not see headers
     * containing authorization credentials.
     * Pseudo headers (such as ``:authority``, ``:method``, ``:path`` etc), as well as
     * the header ``Host``, may not be removed as that would make the request
     * malformed. If mentioned in ``headers_to_remove`` these special headers will
     * be ignored.
     * When using the HTTP service this must instead be set by the HTTP
     * authorization service as a comma separated list like so:
     * ``x-envoy-auth-headers-to-remove: one-auth-header, another-auth-header``.
     * </pre>
     *
     * <code>repeated string headers_to_remove = 5;</code>
     * @param index The index to set the value at.
     * @param value The headersToRemove to set.
     * @return This builder for chaining.
     */
    public Builder setHeadersToRemove(
        int index, java.lang.String value) {
      if (value == null) { throw new NullPointerException(); }
      ensureHeadersToRemoveIsMutable();
      headersToRemove_.set(index, value);
      onChanged();
      return this;
    }
    /**
     * <pre>
     * HTTP entity headers to remove from the original request before dispatching
     * it to the upstream. This allows the authorization service to act on auth
     * related headers (like ``Authorization``), process them, and consume them.
     * Under this model, the upstream will either receive the request (if it's
     * authorized) or not receive it (if it's not), but will not see headers
     * containing authorization credentials.
     * Pseudo headers (such as ``:authority``, ``:method``, ``:path`` etc), as well as
     * the header ``Host``, may not be removed as that would make the request
     * malformed. If mentioned in ``headers_to_remove`` these special headers will
     * be ignored.
     * When using the HTTP service this must instead be set by the HTTP
     * authorization service as a comma separated list like so:
     * ``x-envoy-auth-headers-to-remove: one-auth-header, another-auth-header``.
     * </pre>
     *
     * <code>repeated string headers_to_remove = 5;</code>
     * @param value The headersToRemove to add.
     * @return This builder for chaining.
     */
    public Builder addHeadersToRemove(
        java.lang.String value) {
      if (value == null) { throw new NullPointerException(); }
      ensureHeadersToRemoveIsMutable();
      headersToRemove_.add(value);
      onChanged();
      return this;
    }
    /**
     * <pre>
     * HTTP entity headers to remove from the original request before dispatching
     * it to the upstream. This allows the authorization service to act on auth
     * related headers (like ``Authorization``), process them, and consume them.
     * Under this model, the upstream will either receive the request (if it's
     * authorized) or not receive it (if it's not), but will not see headers
     * containing authorization credentials.
     * Pseudo headers (such as ``:authority``, ``:method``, ``:path`` etc), as well as
     * the header ``Host``, may not be removed as that would make the request
     * malformed. If mentioned in ``headers_to_remove`` these special headers will
     * be ignored.
     * When using the HTTP service this must instead be set by the HTTP
     * authorization service as a comma separated list like so:
     * ``x-envoy-auth-headers-to-remove: one-auth-header, another-auth-header``.
     * </pre>
     *
     * <code>repeated string headers_to_remove = 5;</code>
     * @param values The headersToRemove to add.
     * @return This builder for chaining.
     */
    public Builder addAllHeadersToRemove(
        java.lang.Iterable<java.lang.String> values) {
      ensureHeadersToRemoveIsMutable();
      com.google.protobuf.AbstractMessageLite.Builder.addAll(
          values, headersToRemove_);
      onChanged();
      return this;
    }
    /**
     * <pre>
     * HTTP entity headers to remove from the original request before dispatching
     * it to the upstream. This allows the authorization service to act on auth
     * related headers (like ``Authorization``), process them, and consume them.
     * Under this model, the upstream will either receive the request (if it's
     * authorized) or not receive it (if it's not), but will not see headers
     * containing authorization credentials.
     * Pseudo headers (such as ``:authority``, ``:method``, ``:path`` etc), as well as
     * the header ``Host``, may not be removed as that would make the request
     * malformed. If mentioned in ``headers_to_remove`` these special headers will
     * be ignored.
     * When using the HTTP service this must instead be set by the HTTP
     * authorization service as a comma separated list like so:
     * ``x-envoy-auth-headers-to-remove: one-auth-header, another-auth-header``.
     * </pre>
     *
     * <code>repeated string headers_to_remove = 5;</code>
     * @return This builder for chaining.
     */
    public Builder clearHeadersToRemove() {
      headersToRemove_ = com.google.protobuf.LazyStringArrayList.EMPTY;
      bitField0_ = (bitField0_ & ~0x00000002);
      onChanged();
      return this;
    }
    /**
     * <pre>
     * HTTP entity headers to remove from the original request before dispatching
     * it to the upstream. This allows the authorization service to act on auth
     * related headers (like ``Authorization``), process them, and consume them.
     * Under this model, the upstream will either receive the request (if it's
     * authorized) or not receive it (if it's not), but will not see headers
     * containing authorization credentials.
     * Pseudo headers (such as ``:authority``, ``:method``, ``:path`` etc), as well as
     * the header ``Host``, may not be removed as that would make the request
     * malformed. If mentioned in ``headers_to_remove`` these special headers will
     * be ignored.
     * When using the HTTP service this must instead be set by the HTTP
     * authorization service as a comma separated list like so:
     * ``x-envoy-auth-headers-to-remove: one-auth-header, another-auth-header``.
     * </pre>
     *
     * <code>repeated string headers_to_remove = 5;</code>
     * @param value The bytes of the headersToRemove to add.
     * @return This builder for chaining.
     */
    public Builder addHeadersToRemoveBytes(
        com.google.protobuf.ByteString value) {
      if (value == null) { throw new NullPointerException(); }
      checkByteStringIsUtf8(value);
      ensureHeadersToRemoveIsMutable();
      headersToRemove_.add(value);
      onChanged();
      return this;
    }

    private com.google.protobuf.Struct dynamicMetadata_;
    private com.google.protobuf.SingleFieldBuilderV3<
        com.google.protobuf.Struct, com.google.protobuf.Struct.Builder, com.google.protobuf.StructOrBuilder> dynamicMetadataBuilder_;
    /**
     * <pre>
     * This field has been deprecated in favor of :ref:`CheckResponse.dynamic_metadata
     * &lt;envoy_v3_api_field_service.auth.v3.CheckResponse.dynamic_metadata&gt;`. Until it is removed,
     * setting this field overrides :ref:`CheckResponse.dynamic_metadata
     * &lt;envoy_v3_api_field_service.auth.v3.CheckResponse.dynamic_metadata&gt;`.
     * </pre>
     *
     * <code>.google.protobuf.Struct dynamic_metadata = 3 [deprecated = true, (.envoy.annotations.deprecated_at_minor_version) = "3.0"];</code>
     * @deprecated envoy.service.auth.v3.OkHttpResponse.dynamic_metadata is deprecated.
     *     See envoy/service/auth/v3/external_auth.proto;l=98
     * @return Whether the dynamicMetadata field is set.
     */
    @java.lang.Deprecated public boolean hasDynamicMetadata() {
      return ((bitField0_ & 0x00000004) != 0);
    }
    /**
     * <pre>
     * This field has been deprecated in favor of :ref:`CheckResponse.dynamic_metadata
     * &lt;envoy_v3_api_field_service.auth.v3.CheckResponse.dynamic_metadata&gt;`. Until it is removed,
     * setting this field overrides :ref:`CheckResponse.dynamic_metadata
     * &lt;envoy_v3_api_field_service.auth.v3.CheckResponse.dynamic_metadata&gt;`.
     * </pre>
     *
     * <code>.google.protobuf.Struct dynamic_metadata = 3 [deprecated = true, (.envoy.annotations.deprecated_at_minor_version) = "3.0"];</code>
     * @deprecated envoy.service.auth.v3.OkHttpResponse.dynamic_metadata is deprecated.
     *     See envoy/service/auth/v3/external_auth.proto;l=98
     * @return The dynamicMetadata.
     */
    @java.lang.Deprecated public com.google.protobuf.Struct getDynamicMetadata() {
      if (dynamicMetadataBuilder_ == null) {
        return dynamicMetadata_ == null ? com.google.protobuf.Struct.getDefaultInstance() : dynamicMetadata_;
      } else {
        return dynamicMetadataBuilder_.getMessage();
      }
    }
    /**
     * <pre>
     * This field has been deprecated in favor of :ref:`CheckResponse.dynamic_metadata
     * &lt;envoy_v3_api_field_service.auth.v3.CheckResponse.dynamic_metadata&gt;`. Until it is removed,
     * setting this field overrides :ref:`CheckResponse.dynamic_metadata
     * &lt;envoy_v3_api_field_service.auth.v3.CheckResponse.dynamic_metadata&gt;`.
     * </pre>
     *
     * <code>.google.protobuf.Struct dynamic_metadata = 3 [deprecated = true, (.envoy.annotations.deprecated_at_minor_version) = "3.0"];</code>
     */
    @java.lang.Deprecated public Builder setDynamicMetadata(com.google.protobuf.Struct value) {
      if (dynamicMetadataBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        dynamicMetadata_ = value;
      } else {
        dynamicMetadataBuilder_.setMessage(value);
      }
      bitField0_ |= 0x00000004;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * This field has been deprecated in favor of :ref:`CheckResponse.dynamic_metadata
     * &lt;envoy_v3_api_field_service.auth.v3.CheckResponse.dynamic_metadata&gt;`. Until it is removed,
     * setting this field overrides :ref:`CheckResponse.dynamic_metadata
     * &lt;envoy_v3_api_field_service.auth.v3.CheckResponse.dynamic_metadata&gt;`.
     * </pre>
     *
     * <code>.google.protobuf.Struct dynamic_metadata = 3 [deprecated = true, (.envoy.annotations.deprecated_at_minor_version) = "3.0"];</code>
     */
    @java.lang.Deprecated public Builder setDynamicMetadata(
        com.google.protobuf.Struct.Builder builderForValue) {
      if (dynamicMetadataBuilder_ == null) {
        dynamicMetadata_ = builderForValue.build();
      } else {
        dynamicMetadataBuilder_.setMessage(builderForValue.build());
      }
      bitField0_ |= 0x00000004;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * This field has been deprecated in favor of :ref:`CheckResponse.dynamic_metadata
     * &lt;envoy_v3_api_field_service.auth.v3.CheckResponse.dynamic_metadata&gt;`. Until it is removed,
     * setting this field overrides :ref:`CheckResponse.dynamic_metadata
     * &lt;envoy_v3_api_field_service.auth.v3.CheckResponse.dynamic_metadata&gt;`.
     * </pre>
     *
     * <code>.google.protobuf.Struct dynamic_metadata = 3 [deprecated = true, (.envoy.annotations.deprecated_at_minor_version) = "3.0"];</code>
     */
    @java.lang.Deprecated public Builder mergeDynamicMetadata(com.google.protobuf.Struct value) {
      if (dynamicMetadataBuilder_ == null) {
        if (((bitField0_ & 0x00000004) != 0) &&
          dynamicMetadata_ != null &&
          dynamicMetadata_ != com.google.protobuf.Struct.getDefaultInstance()) {
          getDynamicMetadataBuilder().mergeFrom(value);
        } else {
          dynamicMetadata_ = value;
        }
      } else {
        dynamicMetadataBuilder_.mergeFrom(value);
      }
      bitField0_ |= 0x00000004;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * This field has been deprecated in favor of :ref:`CheckResponse.dynamic_metadata
     * &lt;envoy_v3_api_field_service.auth.v3.CheckResponse.dynamic_metadata&gt;`. Until it is removed,
     * setting this field overrides :ref:`CheckResponse.dynamic_metadata
     * &lt;envoy_v3_api_field_service.auth.v3.CheckResponse.dynamic_metadata&gt;`.
     * </pre>
     *
     * <code>.google.protobuf.Struct dynamic_metadata = 3 [deprecated = true, (.envoy.annotations.deprecated_at_minor_version) = "3.0"];</code>
     */
    @java.lang.Deprecated public Builder clearDynamicMetadata() {
      bitField0_ = (bitField0_ & ~0x00000004);
      dynamicMetadata_ = null;
      if (dynamicMetadataBuilder_ != null) {
        dynamicMetadataBuilder_.dispose();
        dynamicMetadataBuilder_ = null;
      }
      onChanged();
      return this;
    }
    /**
     * <pre>
     * This field has been deprecated in favor of :ref:`CheckResponse.dynamic_metadata
     * &lt;envoy_v3_api_field_service.auth.v3.CheckResponse.dynamic_metadata&gt;`. Until it is removed,
     * setting this field overrides :ref:`CheckResponse.dynamic_metadata
     * &lt;envoy_v3_api_field_service.auth.v3.CheckResponse.dynamic_metadata&gt;`.
     * </pre>
     *
     * <code>.google.protobuf.Struct dynamic_metadata = 3 [deprecated = true, (.envoy.annotations.deprecated_at_minor_version) = "3.0"];</code>
     */
    @java.lang.Deprecated public com.google.protobuf.Struct.Builder getDynamicMetadataBuilder() {
      bitField0_ |= 0x00000004;
      onChanged();
      return getDynamicMetadataFieldBuilder().getBuilder();
    }
    /**
     * <pre>
     * This field has been deprecated in favor of :ref:`CheckResponse.dynamic_metadata
     * &lt;envoy_v3_api_field_service.auth.v3.CheckResponse.dynamic_metadata&gt;`. Until it is removed,
     * setting this field overrides :ref:`CheckResponse.dynamic_metadata
     * &lt;envoy_v3_api_field_service.auth.v3.CheckResponse.dynamic_metadata&gt;`.
     * </pre>
     *
     * <code>.google.protobuf.Struct dynamic_metadata = 3 [deprecated = true, (.envoy.annotations.deprecated_at_minor_version) = "3.0"];</code>
     */
    @java.lang.Deprecated public com.google.protobuf.StructOrBuilder getDynamicMetadataOrBuilder() {
      if (dynamicMetadataBuilder_ != null) {
        return dynamicMetadataBuilder_.getMessageOrBuilder();
      } else {
        return dynamicMetadata_ == null ?
            com.google.protobuf.Struct.getDefaultInstance() : dynamicMetadata_;
      }
    }
    /**
     * <pre>
     * This field has been deprecated in favor of :ref:`CheckResponse.dynamic_metadata
     * &lt;envoy_v3_api_field_service.auth.v3.CheckResponse.dynamic_metadata&gt;`. Until it is removed,
     * setting this field overrides :ref:`CheckResponse.dynamic_metadata
     * &lt;envoy_v3_api_field_service.auth.v3.CheckResponse.dynamic_metadata&gt;`.
     * </pre>
     *
     * <code>.google.protobuf.Struct dynamic_metadata = 3 [deprecated = true, (.envoy.annotations.deprecated_at_minor_version) = "3.0"];</code>
     */
    private com.google.protobuf.SingleFieldBuilderV3<
        com.google.protobuf.Struct, com.google.protobuf.Struct.Builder, com.google.protobuf.StructOrBuilder> 
        getDynamicMetadataFieldBuilder() {
      if (dynamicMetadataBuilder_ == null) {
        dynamicMetadataBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
            com.google.protobuf.Struct, com.google.protobuf.Struct.Builder, com.google.protobuf.StructOrBuilder>(
                getDynamicMetadata(),
                getParentForChildren(),
                isClean());
        dynamicMetadata_ = null;
      }
      return dynamicMetadataBuilder_;
    }

    private java.util.List<io.envoyproxy.envoy.config.core.v3.HeaderValueOption> responseHeadersToAdd_ =
      java.util.Collections.emptyList();
    private void ensureResponseHeadersToAddIsMutable() {
      if (!((bitField0_ & 0x00000008) != 0)) {
        responseHeadersToAdd_ = new java.util.ArrayList<io.envoyproxy.envoy.config.core.v3.HeaderValueOption>(responseHeadersToAdd_);
        bitField0_ |= 0x00000008;
       }
    }

    private com.google.protobuf.RepeatedFieldBuilderV3<
        io.envoyproxy.envoy.config.core.v3.HeaderValueOption, io.envoyproxy.envoy.config.core.v3.HeaderValueOption.Builder, io.envoyproxy.envoy.config.core.v3.HeaderValueOptionOrBuilder> responseHeadersToAddBuilder_;

    /**
     * <pre>
     * This field allows the authorization service to send HTTP response headers
     * to the downstream client on success. Note that the :ref:`append field in HeaderValueOption &lt;envoy_v3_api_field_config.core.v3.HeaderValueOption.append&gt;`
     * defaults to false when used in this message.
     * </pre>
     *
     * <code>repeated .envoy.config.core.v3.HeaderValueOption response_headers_to_add = 6;</code>
     */
    public java.util.List<io.envoyproxy.envoy.config.core.v3.HeaderValueOption> getResponseHeadersToAddList() {
      if (responseHeadersToAddBuilder_ == null) {
        return java.util.Collections.unmodifiableList(responseHeadersToAdd_);
      } else {
        return responseHeadersToAddBuilder_.getMessageList();
      }
    }
    /**
     * <pre>
     * This field allows the authorization service to send HTTP response headers
     * to the downstream client on success. Note that the :ref:`append field in HeaderValueOption &lt;envoy_v3_api_field_config.core.v3.HeaderValueOption.append&gt;`
     * defaults to false when used in this message.
     * </pre>
     *
     * <code>repeated .envoy.config.core.v3.HeaderValueOption response_headers_to_add = 6;</code>
     */
    public int getResponseHeadersToAddCount() {
      if (responseHeadersToAddBuilder_ == null) {
        return responseHeadersToAdd_.size();
      } else {
        return responseHeadersToAddBuilder_.getCount();
      }
    }
    /**
     * <pre>
     * This field allows the authorization service to send HTTP response headers
     * to the downstream client on success. Note that the :ref:`append field in HeaderValueOption &lt;envoy_v3_api_field_config.core.v3.HeaderValueOption.append&gt;`
     * defaults to false when used in this message.
     * </pre>
     *
     * <code>repeated .envoy.config.core.v3.HeaderValueOption response_headers_to_add = 6;</code>
     */
    public io.envoyproxy.envoy.config.core.v3.HeaderValueOption getResponseHeadersToAdd(int index) {
      if (responseHeadersToAddBuilder_ == null) {
        return responseHeadersToAdd_.get(index);
      } else {
        return responseHeadersToAddBuilder_.getMessage(index);
      }
    }
    /**
     * <pre>
     * This field allows the authorization service to send HTTP response headers
     * to the downstream client on success. Note that the :ref:`append field in HeaderValueOption &lt;envoy_v3_api_field_config.core.v3.HeaderValueOption.append&gt;`
     * defaults to false when used in this message.
     * </pre>
     *
     * <code>repeated .envoy.config.core.v3.HeaderValueOption response_headers_to_add = 6;</code>
     */
    public Builder setResponseHeadersToAdd(
        int index, io.envoyproxy.envoy.config.core.v3.HeaderValueOption value) {
      if (responseHeadersToAddBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureResponseHeadersToAddIsMutable();
        responseHeadersToAdd_.set(index, value);
        onChanged();
      } else {
        responseHeadersToAddBuilder_.setMessage(index, value);
      }
      return this;
    }
    /**
     * <pre>
     * This field allows the authorization service to send HTTP response headers
     * to the downstream client on success. Note that the :ref:`append field in HeaderValueOption &lt;envoy_v3_api_field_config.core.v3.HeaderValueOption.append&gt;`
     * defaults to false when used in this message.
     * </pre>
     *
     * <code>repeated .envoy.config.core.v3.HeaderValueOption response_headers_to_add = 6;</code>
     */
    public Builder setResponseHeadersToAdd(
        int index, io.envoyproxy.envoy.config.core.v3.HeaderValueOption.Builder builderForValue) {
      if (responseHeadersToAddBuilder_ == null) {
        ensureResponseHeadersToAddIsMutable();
        responseHeadersToAdd_.set(index, builderForValue.build());
        onChanged();
      } else {
        responseHeadersToAddBuilder_.setMessage(index, builderForValue.build());
      }
      return this;
    }
    /**
     * <pre>
     * This field allows the authorization service to send HTTP response headers
     * to the downstream client on success. Note that the :ref:`append field in HeaderValueOption &lt;envoy_v3_api_field_config.core.v3.HeaderValueOption.append&gt;`
     * defaults to false when used in this message.
     * </pre>
     *
     * <code>repeated .envoy.config.core.v3.HeaderValueOption response_headers_to_add = 6;</code>
     */
    public Builder addResponseHeadersToAdd(io.envoyproxy.envoy.config.core.v3.HeaderValueOption value) {
      if (responseHeadersToAddBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureResponseHeadersToAddIsMutable();
        responseHeadersToAdd_.add(value);
        onChanged();
      } else {
        responseHeadersToAddBuilder_.addMessage(value);
      }
      return this;
    }
    /**
     * <pre>
     * This field allows the authorization service to send HTTP response headers
     * to the downstream client on success. Note that the :ref:`append field in HeaderValueOption &lt;envoy_v3_api_field_config.core.v3.HeaderValueOption.append&gt;`
     * defaults to false when used in this message.
     * </pre>
     *
     * <code>repeated .envoy.config.core.v3.HeaderValueOption response_headers_to_add = 6;</code>
     */
    public Builder addResponseHeadersToAdd(
        int index, io.envoyproxy.envoy.config.core.v3.HeaderValueOption value) {
      if (responseHeadersToAddBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureResponseHeadersToAddIsMutable();
        responseHeadersToAdd_.add(index, value);
        onChanged();
      } else {
        responseHeadersToAddBuilder_.addMessage(index, value);
      }
      return this;
    }
    /**
     * <pre>
     * This field allows the authorization service to send HTTP response headers
     * to the downstream client on success. Note that the :ref:`append field in HeaderValueOption &lt;envoy_v3_api_field_config.core.v3.HeaderValueOption.append&gt;`
     * defaults to false when used in this message.
     * </pre>
     *
     * <code>repeated .envoy.config.core.v3.HeaderValueOption response_headers_to_add = 6;</code>
     */
    public Builder addResponseHeadersToAdd(
        io.envoyproxy.envoy.config.core.v3.HeaderValueOption.Builder builderForValue) {
      if (responseHeadersToAddBuilder_ == null) {
        ensureResponseHeadersToAddIsMutable();
        responseHeadersToAdd_.add(builderForValue.build());
        onChanged();
      } else {
        responseHeadersToAddBuilder_.addMessage(builderForValue.build());
      }
      return this;
    }
    /**
     * <pre>
     * This field allows the authorization service to send HTTP response headers
     * to the downstream client on success. Note that the :ref:`append field in HeaderValueOption &lt;envoy_v3_api_field_config.core.v3.HeaderValueOption.append&gt;`
     * defaults to false when used in this message.
     * </pre>
     *
     * <code>repeated .envoy.config.core.v3.HeaderValueOption response_headers_to_add = 6;</code>
     */
    public Builder addResponseHeadersToAdd(
        int index, io.envoyproxy.envoy.config.core.v3.HeaderValueOption.Builder builderForValue) {
      if (responseHeadersToAddBuilder_ == null) {
        ensureResponseHeadersToAddIsMutable();
        responseHeadersToAdd_.add(index, builderForValue.build());
        onChanged();
      } else {
        responseHeadersToAddBuilder_.addMessage(index, builderForValue.build());
      }
      return this;
    }
    /**
     * <pre>
     * This field allows the authorization service to send HTTP response headers
     * to the downstream client on success. Note that the :ref:`append field in HeaderValueOption &lt;envoy_v3_api_field_config.core.v3.HeaderValueOption.append&gt;`
     * defaults to false when used in this message.
     * </pre>
     *
     * <code>repeated .envoy.config.core.v3.HeaderValueOption response_headers_to_add = 6;</code>
     */
    public Builder addAllResponseHeadersToAdd(
        java.lang.Iterable<? extends io.envoyproxy.envoy.config.core.v3.HeaderValueOption> values) {
      if (responseHeadersToAddBuilder_ == null) {
        ensureResponseHeadersToAddIsMutable();
        com.google.protobuf.AbstractMessageLite.Builder.addAll(
            values, responseHeadersToAdd_);
        onChanged();
      } else {
        responseHeadersToAddBuilder_.addAllMessages(values);
      }
      return this;
    }
    /**
     * <pre>
     * This field allows the authorization service to send HTTP response headers
     * to the downstream client on success. Note that the :ref:`append field in HeaderValueOption &lt;envoy_v3_api_field_config.core.v3.HeaderValueOption.append&gt;`
     * defaults to false when used in this message.
     * </pre>
     *
     * <code>repeated .envoy.config.core.v3.HeaderValueOption response_headers_to_add = 6;</code>
     */
    public Builder clearResponseHeadersToAdd() {
      if (responseHeadersToAddBuilder_ == null) {
        responseHeadersToAdd_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000008);
        onChanged();
      } else {
        responseHeadersToAddBuilder_.clear();
      }
      return this;
    }
    /**
     * <pre>
     * This field allows the authorization service to send HTTP response headers
     * to the downstream client on success. Note that the :ref:`append field in HeaderValueOption &lt;envoy_v3_api_field_config.core.v3.HeaderValueOption.append&gt;`
     * defaults to false when used in this message.
     * </pre>
     *
     * <code>repeated .envoy.config.core.v3.HeaderValueOption response_headers_to_add = 6;</code>
     */
    public Builder removeResponseHeadersToAdd(int index) {
      if (responseHeadersToAddBuilder_ == null) {
        ensureResponseHeadersToAddIsMutable();
        responseHeadersToAdd_.remove(index);
        onChanged();
      } else {
        responseHeadersToAddBuilder_.remove(index);
      }
      return this;
    }
    /**
     * <pre>
     * This field allows the authorization service to send HTTP response headers
     * to the downstream client on success. Note that the :ref:`append field in HeaderValueOption &lt;envoy_v3_api_field_config.core.v3.HeaderValueOption.append&gt;`
     * defaults to false when used in this message.
     * </pre>
     *
     * <code>repeated .envoy.config.core.v3.HeaderValueOption response_headers_to_add = 6;</code>
     */
    public io.envoyproxy.envoy.config.core.v3.HeaderValueOption.Builder getResponseHeadersToAddBuilder(
        int index) {
      return getResponseHeadersToAddFieldBuilder().getBuilder(index);
    }
    /**
     * <pre>
     * This field allows the authorization service to send HTTP response headers
     * to the downstream client on success. Note that the :ref:`append field in HeaderValueOption &lt;envoy_v3_api_field_config.core.v3.HeaderValueOption.append&gt;`
     * defaults to false when used in this message.
     * </pre>
     *
     * <code>repeated .envoy.config.core.v3.HeaderValueOption response_headers_to_add = 6;</code>
     */
    public io.envoyproxy.envoy.config.core.v3.HeaderValueOptionOrBuilder getResponseHeadersToAddOrBuilder(
        int index) {
      if (responseHeadersToAddBuilder_ == null) {
        return responseHeadersToAdd_.get(index);  } else {
        return responseHeadersToAddBuilder_.getMessageOrBuilder(index);
      }
    }
    /**
     * <pre>
     * This field allows the authorization service to send HTTP response headers
     * to the downstream client on success. Note that the :ref:`append field in HeaderValueOption &lt;envoy_v3_api_field_config.core.v3.HeaderValueOption.append&gt;`
     * defaults to false when used in this message.
     * </pre>
     *
     * <code>repeated .envoy.config.core.v3.HeaderValueOption response_headers_to_add = 6;</code>
     */
    public java.util.List<? extends io.envoyproxy.envoy.config.core.v3.HeaderValueOptionOrBuilder> 
         getResponseHeadersToAddOrBuilderList() {
      if (responseHeadersToAddBuilder_ != null) {
        return responseHeadersToAddBuilder_.getMessageOrBuilderList();
      } else {
        return java.util.Collections.unmodifiableList(responseHeadersToAdd_);
      }
    }
    /**
     * <pre>
     * This field allows the authorization service to send HTTP response headers
     * to the downstream client on success. Note that the :ref:`append field in HeaderValueOption &lt;envoy_v3_api_field_config.core.v3.HeaderValueOption.append&gt;`
     * defaults to false when used in this message.
     * </pre>
     *
     * <code>repeated .envoy.config.core.v3.HeaderValueOption response_headers_to_add = 6;</code>
     */
    public io.envoyproxy.envoy.config.core.v3.HeaderValueOption.Builder addResponseHeadersToAddBuilder() {
      return getResponseHeadersToAddFieldBuilder().addBuilder(
          io.envoyproxy.envoy.config.core.v3.HeaderValueOption.getDefaultInstance());
    }
    /**
     * <pre>
     * This field allows the authorization service to send HTTP response headers
     * to the downstream client on success. Note that the :ref:`append field in HeaderValueOption &lt;envoy_v3_api_field_config.core.v3.HeaderValueOption.append&gt;`
     * defaults to false when used in this message.
     * </pre>
     *
     * <code>repeated .envoy.config.core.v3.HeaderValueOption response_headers_to_add = 6;</code>
     */
    public io.envoyproxy.envoy.config.core.v3.HeaderValueOption.Builder addResponseHeadersToAddBuilder(
        int index) {
      return getResponseHeadersToAddFieldBuilder().addBuilder(
          index, io.envoyproxy.envoy.config.core.v3.HeaderValueOption.getDefaultInstance());
    }
    /**
     * <pre>
     * This field allows the authorization service to send HTTP response headers
     * to the downstream client on success. Note that the :ref:`append field in HeaderValueOption &lt;envoy_v3_api_field_config.core.v3.HeaderValueOption.append&gt;`
     * defaults to false when used in this message.
     * </pre>
     *
     * <code>repeated .envoy.config.core.v3.HeaderValueOption response_headers_to_add = 6;</code>
     */
    public java.util.List<io.envoyproxy.envoy.config.core.v3.HeaderValueOption.Builder> 
         getResponseHeadersToAddBuilderList() {
      return getResponseHeadersToAddFieldBuilder().getBuilderList();
    }
    private com.google.protobuf.RepeatedFieldBuilderV3<
        io.envoyproxy.envoy.config.core.v3.HeaderValueOption, io.envoyproxy.envoy.config.core.v3.HeaderValueOption.Builder, io.envoyproxy.envoy.config.core.v3.HeaderValueOptionOrBuilder> 
        getResponseHeadersToAddFieldBuilder() {
      if (responseHeadersToAddBuilder_ == null) {
        responseHeadersToAddBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<
            io.envoyproxy.envoy.config.core.v3.HeaderValueOption, io.envoyproxy.envoy.config.core.v3.HeaderValueOption.Builder, io.envoyproxy.envoy.config.core.v3.HeaderValueOptionOrBuilder>(
                responseHeadersToAdd_,
                ((bitField0_ & 0x00000008) != 0),
                getParentForChildren(),
                isClean());
        responseHeadersToAdd_ = null;
      }
      return responseHeadersToAddBuilder_;
    }

    private java.util.List<io.envoyproxy.envoy.config.core.v3.QueryParameter> queryParametersToSet_ =
      java.util.Collections.emptyList();
    private void ensureQueryParametersToSetIsMutable() {
      if (!((bitField0_ & 0x00000010) != 0)) {
        queryParametersToSet_ = new java.util.ArrayList<io.envoyproxy.envoy.config.core.v3.QueryParameter>(queryParametersToSet_);
        bitField0_ |= 0x00000010;
       }
    }

    private com.google.protobuf.RepeatedFieldBuilderV3<
        io.envoyproxy.envoy.config.core.v3.QueryParameter, io.envoyproxy.envoy.config.core.v3.QueryParameter.Builder, io.envoyproxy.envoy.config.core.v3.QueryParameterOrBuilder> queryParametersToSetBuilder_;

    /**
     * <pre>
     * This field allows the authorization service to set (and overwrite) query
     * string parameters on the original request before it is sent upstream.
     * </pre>
     *
     * <code>repeated .envoy.config.core.v3.QueryParameter query_parameters_to_set = 7;</code>
     */
    public java.util.List<io.envoyproxy.envoy.config.core.v3.QueryParameter> getQueryParametersToSetList() {
      if (queryParametersToSetBuilder_ == null) {
        return java.util.Collections.unmodifiableList(queryParametersToSet_);
      } else {
        return queryParametersToSetBuilder_.getMessageList();
      }
    }
    /**
     * <pre>
     * This field allows the authorization service to set (and overwrite) query
     * string parameters on the original request before it is sent upstream.
     * </pre>
     *
     * <code>repeated .envoy.config.core.v3.QueryParameter query_parameters_to_set = 7;</code>
     */
    public int getQueryParametersToSetCount() {
      if (queryParametersToSetBuilder_ == null) {
        return queryParametersToSet_.size();
      } else {
        return queryParametersToSetBuilder_.getCount();
      }
    }
    /**
     * <pre>
     * This field allows the authorization service to set (and overwrite) query
     * string parameters on the original request before it is sent upstream.
     * </pre>
     *
     * <code>repeated .envoy.config.core.v3.QueryParameter query_parameters_to_set = 7;</code>
     */
    public io.envoyproxy.envoy.config.core.v3.QueryParameter getQueryParametersToSet(int index) {
      if (queryParametersToSetBuilder_ == null) {
        return queryParametersToSet_.get(index);
      } else {
        return queryParametersToSetBuilder_.getMessage(index);
      }
    }
    /**
     * <pre>
     * This field allows the authorization service to set (and overwrite) query
     * string parameters on the original request before it is sent upstream.
     * </pre>
     *
     * <code>repeated .envoy.config.core.v3.QueryParameter query_parameters_to_set = 7;</code>
     */
    public Builder setQueryParametersToSet(
        int index, io.envoyproxy.envoy.config.core.v3.QueryParameter value) {
      if (queryParametersToSetBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureQueryParametersToSetIsMutable();
        queryParametersToSet_.set(index, value);
        onChanged();
      } else {
        queryParametersToSetBuilder_.setMessage(index, value);
      }
      return this;
    }
    /**
     * <pre>
     * This field allows the authorization service to set (and overwrite) query
     * string parameters on the original request before it is sent upstream.
     * </pre>
     *
     * <code>repeated .envoy.config.core.v3.QueryParameter query_parameters_to_set = 7;</code>
     */
    public Builder setQueryParametersToSet(
        int index, io.envoyproxy.envoy.config.core.v3.QueryParameter.Builder builderForValue) {
      if (queryParametersToSetBuilder_ == null) {
        ensureQueryParametersToSetIsMutable();
        queryParametersToSet_.set(index, builderForValue.build());
        onChanged();
      } else {
        queryParametersToSetBuilder_.setMessage(index, builderForValue.build());
      }
      return this;
    }
    /**
     * <pre>
     * This field allows the authorization service to set (and overwrite) query
     * string parameters on the original request before it is sent upstream.
     * </pre>
     *
     * <code>repeated .envoy.config.core.v3.QueryParameter query_parameters_to_set = 7;</code>
     */
    public Builder addQueryParametersToSet(io.envoyproxy.envoy.config.core.v3.QueryParameter value) {
      if (queryParametersToSetBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureQueryParametersToSetIsMutable();
        queryParametersToSet_.add(value);
        onChanged();
      } else {
        queryParametersToSetBuilder_.addMessage(value);
      }
      return this;
    }
    /**
     * <pre>
     * This field allows the authorization service to set (and overwrite) query
     * string parameters on the original request before it is sent upstream.
     * </pre>
     *
     * <code>repeated .envoy.config.core.v3.QueryParameter query_parameters_to_set = 7;</code>
     */
    public Builder addQueryParametersToSet(
        int index, io.envoyproxy.envoy.config.core.v3.QueryParameter value) {
      if (queryParametersToSetBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureQueryParametersToSetIsMutable();
        queryParametersToSet_.add(index, value);
        onChanged();
      } else {
        queryParametersToSetBuilder_.addMessage(index, value);
      }
      return this;
    }
    /**
     * <pre>
     * This field allows the authorization service to set (and overwrite) query
     * string parameters on the original request before it is sent upstream.
     * </pre>
     *
     * <code>repeated .envoy.config.core.v3.QueryParameter query_parameters_to_set = 7;</code>
     */
    public Builder addQueryParametersToSet(
        io.envoyproxy.envoy.config.core.v3.QueryParameter.Builder builderForValue) {
      if (queryParametersToSetBuilder_ == null) {
        ensureQueryParametersToSetIsMutable();
        queryParametersToSet_.add(builderForValue.build());
        onChanged();
      } else {
        queryParametersToSetBuilder_.addMessage(builderForValue.build());
      }
      return this;
    }
    /**
     * <pre>
     * This field allows the authorization service to set (and overwrite) query
     * string parameters on the original request before it is sent upstream.
     * </pre>
     *
     * <code>repeated .envoy.config.core.v3.QueryParameter query_parameters_to_set = 7;</code>
     */
    public Builder addQueryParametersToSet(
        int index, io.envoyproxy.envoy.config.core.v3.QueryParameter.Builder builderForValue) {
      if (queryParametersToSetBuilder_ == null) {
        ensureQueryParametersToSetIsMutable();
        queryParametersToSet_.add(index, builderForValue.build());
        onChanged();
      } else {
        queryParametersToSetBuilder_.addMessage(index, builderForValue.build());
      }
      return this;
    }
    /**
     * <pre>
     * This field allows the authorization service to set (and overwrite) query
     * string parameters on the original request before it is sent upstream.
     * </pre>
     *
     * <code>repeated .envoy.config.core.v3.QueryParameter query_parameters_to_set = 7;</code>
     */
    public Builder addAllQueryParametersToSet(
        java.lang.Iterable<? extends io.envoyproxy.envoy.config.core.v3.QueryParameter> values) {
      if (queryParametersToSetBuilder_ == null) {
        ensureQueryParametersToSetIsMutable();
        com.google.protobuf.AbstractMessageLite.Builder.addAll(
            values, queryParametersToSet_);
        onChanged();
      } else {
        queryParametersToSetBuilder_.addAllMessages(values);
      }
      return this;
    }
    /**
     * <pre>
     * This field allows the authorization service to set (and overwrite) query
     * string parameters on the original request before it is sent upstream.
     * </pre>
     *
     * <code>repeated .envoy.config.core.v3.QueryParameter query_parameters_to_set = 7;</code>
     */
    public Builder clearQueryParametersToSet() {
      if (queryParametersToSetBuilder_ == null) {
        queryParametersToSet_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000010);
        onChanged();
      } else {
        queryParametersToSetBuilder_.clear();
      }
      return this;
    }
    /**
     * <pre>
     * This field allows the authorization service to set (and overwrite) query
     * string parameters on the original request before it is sent upstream.
     * </pre>
     *
     * <code>repeated .envoy.config.core.v3.QueryParameter query_parameters_to_set = 7;</code>
     */
    public Builder removeQueryParametersToSet(int index) {
      if (queryParametersToSetBuilder_ == null) {
        ensureQueryParametersToSetIsMutable();
        queryParametersToSet_.remove(index);
        onChanged();
      } else {
        queryParametersToSetBuilder_.remove(index);
      }
      return this;
    }
    /**
     * <pre>
     * This field allows the authorization service to set (and overwrite) query
     * string parameters on the original request before it is sent upstream.
     * </pre>
     *
     * <code>repeated .envoy.config.core.v3.QueryParameter query_parameters_to_set = 7;</code>
     */
    public io.envoyproxy.envoy.config.core.v3.QueryParameter.Builder getQueryParametersToSetBuilder(
        int index) {
      return getQueryParametersToSetFieldBuilder().getBuilder(index);
    }
    /**
     * <pre>
     * This field allows the authorization service to set (and overwrite) query
     * string parameters on the original request before it is sent upstream.
     * </pre>
     *
     * <code>repeated .envoy.config.core.v3.QueryParameter query_parameters_to_set = 7;</code>
     */
    public io.envoyproxy.envoy.config.core.v3.QueryParameterOrBuilder getQueryParametersToSetOrBuilder(
        int index) {
      if (queryParametersToSetBuilder_ == null) {
        return queryParametersToSet_.get(index);  } else {
        return queryParametersToSetBuilder_.getMessageOrBuilder(index);
      }
    }
    /**
     * <pre>
     * This field allows the authorization service to set (and overwrite) query
     * string parameters on the original request before it is sent upstream.
     * </pre>
     *
     * <code>repeated .envoy.config.core.v3.QueryParameter query_parameters_to_set = 7;</code>
     */
    public java.util.List<? extends io.envoyproxy.envoy.config.core.v3.QueryParameterOrBuilder> 
         getQueryParametersToSetOrBuilderList() {
      if (queryParametersToSetBuilder_ != null) {
        return queryParametersToSetBuilder_.getMessageOrBuilderList();
      } else {
        return java.util.Collections.unmodifiableList(queryParametersToSet_);
      }
    }
    /**
     * <pre>
     * This field allows the authorization service to set (and overwrite) query
     * string parameters on the original request before it is sent upstream.
     * </pre>
     *
     * <code>repeated .envoy.config.core.v3.QueryParameter query_parameters_to_set = 7;</code>
     */
    public io.envoyproxy.envoy.config.core.v3.QueryParameter.Builder addQueryParametersToSetBuilder() {
      return getQueryParametersToSetFieldBuilder().addBuilder(
          io.envoyproxy.envoy.config.core.v3.QueryParameter.getDefaultInstance());
    }
    /**
     * <pre>
     * This field allows the authorization service to set (and overwrite) query
     * string parameters on the original request before it is sent upstream.
     * </pre>
     *
     * <code>repeated .envoy.config.core.v3.QueryParameter query_parameters_to_set = 7;</code>
     */
    public io.envoyproxy.envoy.config.core.v3.QueryParameter.Builder addQueryParametersToSetBuilder(
        int index) {
      return getQueryParametersToSetFieldBuilder().addBuilder(
          index, io.envoyproxy.envoy.config.core.v3.QueryParameter.getDefaultInstance());
    }
    /**
     * <pre>
     * This field allows the authorization service to set (and overwrite) query
     * string parameters on the original request before it is sent upstream.
     * </pre>
     *
     * <code>repeated .envoy.config.core.v3.QueryParameter query_parameters_to_set = 7;</code>
     */
    public java.util.List<io.envoyproxy.envoy.config.core.v3.QueryParameter.Builder> 
         getQueryParametersToSetBuilderList() {
      return getQueryParametersToSetFieldBuilder().getBuilderList();
    }
    private com.google.protobuf.RepeatedFieldBuilderV3<
        io.envoyproxy.envoy.config.core.v3.QueryParameter, io.envoyproxy.envoy.config.core.v3.QueryParameter.Builder, io.envoyproxy.envoy.config.core.v3.QueryParameterOrBuilder> 
        getQueryParametersToSetFieldBuilder() {
      if (queryParametersToSetBuilder_ == null) {
        queryParametersToSetBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<
            io.envoyproxy.envoy.config.core.v3.QueryParameter, io.envoyproxy.envoy.config.core.v3.QueryParameter.Builder, io.envoyproxy.envoy.config.core.v3.QueryParameterOrBuilder>(
                queryParametersToSet_,
                ((bitField0_ & 0x00000010) != 0),
                getParentForChildren(),
                isClean());
        queryParametersToSet_ = null;
      }
      return queryParametersToSetBuilder_;
    }

    private com.google.protobuf.LazyStringList queryParametersToRemove_ = com.google.protobuf.LazyStringArrayList.EMPTY;
    private void ensureQueryParametersToRemoveIsMutable() {
      if (!((bitField0_ & 0x00000020) != 0)) {
        queryParametersToRemove_ = new com.google.protobuf.LazyStringArrayList(queryParametersToRemove_);
        bitField0_ |= 0x00000020;
       }
    }
    /**
     * <pre>
     * This field allows the authorization service to specify which query parameters
     * should be removed from the original request before it is sent upstream. Each
     * element in this list is a case-sensitive query parameter name to be removed.
     * </pre>
     *
     * <code>repeated string query_parameters_to_remove = 8;</code>
     * @return A list containing the queryParametersToRemove.
     */
    public com.google.protobuf.ProtocolStringList
        getQueryParametersToRemoveList() {
      return queryParametersToRemove_.getUnmodifiableView();
    }
    /**
     * <pre>
     * This field allows the authorization service to specify which query parameters
     * should be removed from the original request before it is sent upstream. Each
     * element in this list is a case-sensitive query parameter name to be removed.
     * </pre>
     *
     * <code>repeated string query_parameters_to_remove = 8;</code>
     * @return The count of queryParametersToRemove.
     */
    public int getQueryParametersToRemoveCount() {
      return queryParametersToRemove_.size();
    }
    /**
     * <pre>
     * This field allows the authorization service to specify which query parameters
     * should be removed from the original request before it is sent upstream. Each
     * element in this list is a case-sensitive query parameter name to be removed.
     * </pre>
     *
     * <code>repeated string query_parameters_to_remove = 8;</code>
     * @param index The index of the element to return.
     * @return The queryParametersToRemove at the given index.
     */
    public java.lang.String getQueryParametersToRemove(int index) {
      return queryParametersToRemove_.get(index);
    }
    /**
     * <pre>
     * This field allows the authorization service to specify which query parameters
     * should be removed from the original request before it is sent upstream. Each
     * element in this list is a case-sensitive query parameter name to be removed.
     * </pre>
     *
     * <code>repeated string query_parameters_to_remove = 8;</code>
     * @param index The index of the value to return.
     * @return The bytes of the queryParametersToRemove at the given index.
     */
    public com.google.protobuf.ByteString
        getQueryParametersToRemoveBytes(int index) {
      return queryParametersToRemove_.getByteString(index);
    }
    /**
     * <pre>
     * This field allows the authorization service to specify which query parameters
     * should be removed from the original request before it is sent upstream. Each
     * element in this list is a case-sensitive query parameter name to be removed.
     * </pre>
     *
     * <code>repeated string query_parameters_to_remove = 8;</code>
     * @param index The index to set the value at.
     * @param value The queryParametersToRemove to set.
     * @return This builder for chaining.
     */
    public Builder setQueryParametersToRemove(
        int index, java.lang.String value) {
      if (value == null) { throw new NullPointerException(); }
      ensureQueryParametersToRemoveIsMutable();
      queryParametersToRemove_.set(index, value);
      onChanged();
      return this;
    }
    /**
     * <pre>
     * This field allows the authorization service to specify which query parameters
     * should be removed from the original request before it is sent upstream. Each
     * element in this list is a case-sensitive query parameter name to be removed.
     * </pre>
     *
     * <code>repeated string query_parameters_to_remove = 8;</code>
     * @param value The queryParametersToRemove to add.
     * @return This builder for chaining.
     */
    public Builder addQueryParametersToRemove(
        java.lang.String value) {
      if (value == null) { throw new NullPointerException(); }
      ensureQueryParametersToRemoveIsMutable();
      queryParametersToRemove_.add(value);
      onChanged();
      return this;
    }
    /**
     * <pre>
     * This field allows the authorization service to specify which query parameters
     * should be removed from the original request before it is sent upstream. Each
     * element in this list is a case-sensitive query parameter name to be removed.
     * </pre>
     *
     * <code>repeated string query_parameters_to_remove = 8;</code>
     * @param values The queryParametersToRemove to add.
     * @return This builder for chaining.
     */
    public Builder addAllQueryParametersToRemove(
        java.lang.Iterable<java.lang.String> values) {
      ensureQueryParametersToRemoveIsMutable();
      com.google.protobuf.AbstractMessageLite.Builder.addAll(
          values, queryParametersToRemove_);
      onChanged();
      return this;
    }
    /**
     * <pre>
     * This field allows the authorization service to specify which query parameters
     * should be removed from the original request before it is sent upstream. Each
     * element in this list is a case-sensitive query parameter name to be removed.
     * </pre>
     *
     * <code>repeated string query_parameters_to_remove = 8;</code>
     * @return This builder for chaining.
     */
    public Builder clearQueryParametersToRemove() {
      queryParametersToRemove_ = com.google.protobuf.LazyStringArrayList.EMPTY;
      bitField0_ = (bitField0_ & ~0x00000020);
      onChanged();
      return this;
    }
    /**
     * <pre>
     * This field allows the authorization service to specify which query parameters
     * should be removed from the original request before it is sent upstream. Each
     * element in this list is a case-sensitive query parameter name to be removed.
     * </pre>
     *
     * <code>repeated string query_parameters_to_remove = 8;</code>
     * @param value The bytes of the queryParametersToRemove to add.
     * @return This builder for chaining.
     */
    public Builder addQueryParametersToRemoveBytes(
        com.google.protobuf.ByteString value) {
      if (value == null) { throw new NullPointerException(); }
      checkByteStringIsUtf8(value);
      ensureQueryParametersToRemoveIsMutable();
      queryParametersToRemove_.add(value);
      onChanged();
      return this;
    }
    @java.lang.Override
    public final Builder setUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return super.setUnknownFields(unknownFields);
    }

    @java.lang.Override
    public final Builder mergeUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return super.mergeUnknownFields(unknownFields);
    }


    // @@protoc_insertion_point(builder_scope:envoy.service.auth.v3.OkHttpResponse)
  }

  // @@protoc_insertion_point(class_scope:envoy.service.auth.v3.OkHttpResponse)
  private static final io.envoyproxy.envoy.service.auth.v3.OkHttpResponse DEFAULT_INSTANCE;
  static {
    DEFAULT_INSTANCE = new io.envoyproxy.envoy.service.auth.v3.OkHttpResponse();
  }

  public static io.envoyproxy.envoy.service.auth.v3.OkHttpResponse getDefaultInstance() {
    return DEFAULT_INSTANCE;
  }

  private static final com.google.protobuf.Parser<OkHttpResponse>
      PARSER = new com.google.protobuf.AbstractParser<OkHttpResponse>() {
    @java.lang.Override
    public OkHttpResponse parsePartialFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      Builder builder = newBuilder();
      try {
        builder.mergeFrom(input, extensionRegistry);
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(builder.buildPartial());
      } catch (com.google.protobuf.UninitializedMessageException e) {
        throw e.asInvalidProtocolBufferException().setUnfinishedMessage(builder.buildPartial());
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(e)
            .setUnfinishedMessage(builder.buildPartial());
      }
      return builder.buildPartial();
    }
  };

  public static com.google.protobuf.Parser<OkHttpResponse> parser() {
    return PARSER;
  }

  @java.lang.Override
  public com.google.protobuf.Parser<OkHttpResponse> getParserForType() {
    return PARSER;
  }

  @java.lang.Override
  public io.envoyproxy.envoy.service.auth.v3.OkHttpResponse getDefaultInstanceForType() {
    return DEFAULT_INSTANCE;
  }

}

