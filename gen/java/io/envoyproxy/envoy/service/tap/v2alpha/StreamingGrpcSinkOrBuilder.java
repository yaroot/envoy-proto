// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: envoy/service/tap/v2alpha/common.proto

package io.envoyproxy.envoy.service.tap.v2alpha;

public interface StreamingGrpcSinkOrBuilder extends
    // @@protoc_insertion_point(interface_extends:envoy.service.tap.v2alpha.StreamingGrpcSink)
    com.google.protobuf.MessageOrBuilder {

  /**
   * <pre>
   * Opaque identifier, that will be sent back to the streaming grpc server.
   * </pre>
   *
   * <code>string tap_id = 1;</code>
   * @return The tapId.
   */
  java.lang.String getTapId();
  /**
   * <pre>
   * Opaque identifier, that will be sent back to the streaming grpc server.
   * </pre>
   *
   * <code>string tap_id = 1;</code>
   * @return The bytes for tapId.
   */
  com.google.protobuf.ByteString
      getTapIdBytes();

  /**
   * <pre>
   * The gRPC server that hosts the Tap Sink Service.
   * </pre>
   *
   * <code>.envoy.api.v2.core.GrpcService grpc_service = 2 [(.validate.rules) = { ... }</code>
   * @return Whether the grpcService field is set.
   */
  boolean hasGrpcService();
  /**
   * <pre>
   * The gRPC server that hosts the Tap Sink Service.
   * </pre>
   *
   * <code>.envoy.api.v2.core.GrpcService grpc_service = 2 [(.validate.rules) = { ... }</code>
   * @return The grpcService.
   */
  io.envoyproxy.envoy.api.v2.core.GrpcService getGrpcService();
  /**
   * <pre>
   * The gRPC server that hosts the Tap Sink Service.
   * </pre>
   *
   * <code>.envoy.api.v2.core.GrpcService grpc_service = 2 [(.validate.rules) = { ... }</code>
   */
  io.envoyproxy.envoy.api.v2.core.GrpcServiceOrBuilder getGrpcServiceOrBuilder();
}
