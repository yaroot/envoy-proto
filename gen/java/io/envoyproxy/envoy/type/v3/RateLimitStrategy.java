// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: envoy/type/v3/ratelimit_strategy.proto

package io.envoyproxy.envoy.type.v3;

/**
 * Protobuf type {@code envoy.type.v3.RateLimitStrategy}
 */
public final class RateLimitStrategy extends
    com.google.protobuf.GeneratedMessageV3 implements
    // @@protoc_insertion_point(message_implements:envoy.type.v3.RateLimitStrategy)
    RateLimitStrategyOrBuilder {
private static final long serialVersionUID = 0L;
  // Use RateLimitStrategy.newBuilder() to construct.
  private RateLimitStrategy(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
    super(builder);
  }
  private RateLimitStrategy() {
  }

  @java.lang.Override
  @SuppressWarnings({"unused"})
  protected java.lang.Object newInstance(
      UnusedPrivateParameter unused) {
    return new RateLimitStrategy();
  }

  @java.lang.Override
  public final com.google.protobuf.UnknownFieldSet
  getUnknownFields() {
    return this.unknownFields;
  }
  private RateLimitStrategy(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    this();
    if (extensionRegistry == null) {
      throw new java.lang.NullPointerException();
    }
    com.google.protobuf.UnknownFieldSet.Builder unknownFields =
        com.google.protobuf.UnknownFieldSet.newBuilder();
    try {
      boolean done = false;
      while (!done) {
        int tag = input.readTag();
        switch (tag) {
          case 0:
            done = true;
            break;
          case 8: {
            int rawValue = input.readEnum();
            strategyCase_ = 1;
            strategy_ = rawValue;
            break;
          }
          case 18: {
            io.envoyproxy.envoy.type.v3.RateLimitStrategy.RequestsPerTimeUnit.Builder subBuilder = null;
            if (strategyCase_ == 2) {
              subBuilder = ((io.envoyproxy.envoy.type.v3.RateLimitStrategy.RequestsPerTimeUnit) strategy_).toBuilder();
            }
            strategy_ =
                input.readMessage(io.envoyproxy.envoy.type.v3.RateLimitStrategy.RequestsPerTimeUnit.parser(), extensionRegistry);
            if (subBuilder != null) {
              subBuilder.mergeFrom((io.envoyproxy.envoy.type.v3.RateLimitStrategy.RequestsPerTimeUnit) strategy_);
              strategy_ = subBuilder.buildPartial();
            }
            strategyCase_ = 2;
            break;
          }
          case 26: {
            io.envoyproxy.envoy.type.v3.TokenBucket.Builder subBuilder = null;
            if (strategyCase_ == 3) {
              subBuilder = ((io.envoyproxy.envoy.type.v3.TokenBucket) strategy_).toBuilder();
            }
            strategy_ =
                input.readMessage(io.envoyproxy.envoy.type.v3.TokenBucket.parser(), extensionRegistry);
            if (subBuilder != null) {
              subBuilder.mergeFrom((io.envoyproxy.envoy.type.v3.TokenBucket) strategy_);
              strategy_ = subBuilder.buildPartial();
            }
            strategyCase_ = 3;
            break;
          }
          default: {
            if (!parseUnknownField(
                input, unknownFields, extensionRegistry, tag)) {
              done = true;
            }
            break;
          }
        }
      }
    } catch (com.google.protobuf.InvalidProtocolBufferException e) {
      throw e.setUnfinishedMessage(this);
    } catch (com.google.protobuf.UninitializedMessageException e) {
      throw e.asInvalidProtocolBufferException().setUnfinishedMessage(this);
    } catch (java.io.IOException e) {
      throw new com.google.protobuf.InvalidProtocolBufferException(
          e).setUnfinishedMessage(this);
    } finally {
      this.unknownFields = unknownFields.build();
      makeExtensionsImmutable();
    }
  }
  public static final com.google.protobuf.Descriptors.Descriptor
      getDescriptor() {
    return io.envoyproxy.envoy.type.v3.RatelimitStrategyProto.internal_static_envoy_type_v3_RateLimitStrategy_descriptor;
  }

  @java.lang.Override
  protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internalGetFieldAccessorTable() {
    return io.envoyproxy.envoy.type.v3.RatelimitStrategyProto.internal_static_envoy_type_v3_RateLimitStrategy_fieldAccessorTable
        .ensureFieldAccessorsInitialized(
            io.envoyproxy.envoy.type.v3.RateLimitStrategy.class, io.envoyproxy.envoy.type.v3.RateLimitStrategy.Builder.class);
  }

  /**
   * <pre>
   * Choose between allow all and deny all.
   * </pre>
   *
   * Protobuf enum {@code envoy.type.v3.RateLimitStrategy.BlanketRule}
   */
  public enum BlanketRule
      implements com.google.protobuf.ProtocolMessageEnum {
    /**
     * <code>ALLOW_ALL = 0;</code>
     */
    ALLOW_ALL(0),
    /**
     * <code>DENY_ALL = 1;</code>
     */
    DENY_ALL(1),
    UNRECOGNIZED(-1),
    ;

    /**
     * <code>ALLOW_ALL = 0;</code>
     */
    public static final int ALLOW_ALL_VALUE = 0;
    /**
     * <code>DENY_ALL = 1;</code>
     */
    public static final int DENY_ALL_VALUE = 1;


    public final int getNumber() {
      if (this == UNRECOGNIZED) {
        throw new java.lang.IllegalArgumentException(
            "Can't get the number of an unknown enum value.");
      }
      return value;
    }

    /**
     * @param value The numeric wire value of the corresponding enum entry.
     * @return The enum associated with the given numeric wire value.
     * @deprecated Use {@link #forNumber(int)} instead.
     */
    @java.lang.Deprecated
    public static BlanketRule valueOf(int value) {
      return forNumber(value);
    }

    /**
     * @param value The numeric wire value of the corresponding enum entry.
     * @return The enum associated with the given numeric wire value.
     */
    public static BlanketRule forNumber(int value) {
      switch (value) {
        case 0: return ALLOW_ALL;
        case 1: return DENY_ALL;
        default: return null;
      }
    }

    public static com.google.protobuf.Internal.EnumLiteMap<BlanketRule>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static final com.google.protobuf.Internal.EnumLiteMap<
        BlanketRule> internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<BlanketRule>() {
            public BlanketRule findValueByNumber(int number) {
              return BlanketRule.forNumber(number);
            }
          };

    public final com.google.protobuf.Descriptors.EnumValueDescriptor
        getValueDescriptor() {
      if (this == UNRECOGNIZED) {
        throw new java.lang.IllegalStateException(
            "Can't get the descriptor of an unrecognized enum value.");
      }
      return getDescriptor().getValues().get(ordinal());
    }
    public final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptorForType() {
      return getDescriptor();
    }
    public static final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptor() {
      return io.envoyproxy.envoy.type.v3.RateLimitStrategy.getDescriptor().getEnumTypes().get(0);
    }

    private static final BlanketRule[] VALUES = values();

    public static BlanketRule valueOf(
        com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
      if (desc.getType() != getDescriptor()) {
        throw new java.lang.IllegalArgumentException(
          "EnumValueDescriptor is not for this type.");
      }
      if (desc.getIndex() == -1) {
        return UNRECOGNIZED;
      }
      return VALUES[desc.getIndex()];
    }

    private final int value;

    private BlanketRule(int value) {
      this.value = value;
    }

    // @@protoc_insertion_point(enum_scope:envoy.type.v3.RateLimitStrategy.BlanketRule)
  }

  public interface RequestsPerTimeUnitOrBuilder extends
      // @@protoc_insertion_point(interface_extends:envoy.type.v3.RateLimitStrategy.RequestsPerTimeUnit)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <pre>
     * The desired number of requests per :ref:`time_unit
     * &lt;envoy_v3_api_field_type.v3.RateLimitStrategy.RequestsPerTimeUnit.time_unit&gt;` to allow.
     * If set to ``0``, deny all (equivalent to ``BlanketRule.DENY_ALL``).
     * .. note::
     *   Note that the algorithm implementation determines the course of action for the requests
     *   over the limit. As long as the ``requests_per_time_unit`` converges on the desired value,
     *   it's allowed to treat this field as a soft-limit: allow bursts, redistribute the allowance
     *   over time, etc.
     * </pre>
     *
     * <code>uint64 requests_per_time_unit = 1;</code>
     * @return The requestsPerTimeUnit.
     */
    long getRequestsPerTimeUnit();

    /**
     * <pre>
     * The unit of time. Ignored when :ref:`requests_per_time_unit
     * &lt;envoy_v3_api_field_type.v3.RateLimitStrategy.RequestsPerTimeUnit.requests_per_time_unit&gt;`
     * is ``0`` (deny all).
     * </pre>
     *
     * <code>.envoy.type.v3.RateLimitUnit time_unit = 2 [(.validate.rules) = { ... }</code>
     * @return The enum numeric value on the wire for timeUnit.
     */
    int getTimeUnitValue();
    /**
     * <pre>
     * The unit of time. Ignored when :ref:`requests_per_time_unit
     * &lt;envoy_v3_api_field_type.v3.RateLimitStrategy.RequestsPerTimeUnit.requests_per_time_unit&gt;`
     * is ``0`` (deny all).
     * </pre>
     *
     * <code>.envoy.type.v3.RateLimitUnit time_unit = 2 [(.validate.rules) = { ... }</code>
     * @return The timeUnit.
     */
    io.envoyproxy.envoy.type.v3.RateLimitUnit getTimeUnit();
  }
  /**
   * <pre>
   * Best-effort limit of the number of requests per time unit.
   * Allows to specify the desired requests per second (RPS, QPS), requests per minute (QPM, RPM),
   * etc., without specifying a rate limiting algorithm implementation.
   * ``RequestsPerTimeUnit`` strategy does not demand any specific rate limiting algorithm to be
   * used (in contrast to the :ref:`TokenBucket &lt;envoy_v3_api_msg_type.v3.TokenBucket&gt;`,
   * for example). It implies that the implementation details of rate limiting algorithm are
   * irrelevant as long as the configured number of "requests per time unit" is achieved.
   * Note that the ``TokenBucket`` is still a valid implementation of the ``RequestsPerTimeUnit``
   * strategy, and may be chosen to enforce the rate limit. However, there's no guarantee it will be
   * the ``TokenBucket`` in particular, and not the Leaky Bucket, the Sliding Window, or any other
   * rate limiting algorithm that fulfills the requirements.
   * </pre>
   *
   * Protobuf type {@code envoy.type.v3.RateLimitStrategy.RequestsPerTimeUnit}
   */
  public static final class RequestsPerTimeUnit extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:envoy.type.v3.RateLimitStrategy.RequestsPerTimeUnit)
      RequestsPerTimeUnitOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use RequestsPerTimeUnit.newBuilder() to construct.
    private RequestsPerTimeUnit(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private RequestsPerTimeUnit() {
      timeUnit_ = 0;
    }

    @java.lang.Override
    @SuppressWarnings({"unused"})
    protected java.lang.Object newInstance(
        UnusedPrivateParameter unused) {
      return new RequestsPerTimeUnit();
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private RequestsPerTimeUnit(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 8: {

              requestsPerTimeUnit_ = input.readUInt64();
              break;
            }
            case 16: {
              int rawValue = input.readEnum();

              timeUnit_ = rawValue;
              break;
            }
            default: {
              if (!parseUnknownField(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (com.google.protobuf.UninitializedMessageException e) {
        throw e.asInvalidProtocolBufferException().setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return io.envoyproxy.envoy.type.v3.RatelimitStrategyProto.internal_static_envoy_type_v3_RateLimitStrategy_RequestsPerTimeUnit_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return io.envoyproxy.envoy.type.v3.RatelimitStrategyProto.internal_static_envoy_type_v3_RateLimitStrategy_RequestsPerTimeUnit_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              io.envoyproxy.envoy.type.v3.RateLimitStrategy.RequestsPerTimeUnit.class, io.envoyproxy.envoy.type.v3.RateLimitStrategy.RequestsPerTimeUnit.Builder.class);
    }

    public static final int REQUESTS_PER_TIME_UNIT_FIELD_NUMBER = 1;
    private long requestsPerTimeUnit_;
    /**
     * <pre>
     * The desired number of requests per :ref:`time_unit
     * &lt;envoy_v3_api_field_type.v3.RateLimitStrategy.RequestsPerTimeUnit.time_unit&gt;` to allow.
     * If set to ``0``, deny all (equivalent to ``BlanketRule.DENY_ALL``).
     * .. note::
     *   Note that the algorithm implementation determines the course of action for the requests
     *   over the limit. As long as the ``requests_per_time_unit`` converges on the desired value,
     *   it's allowed to treat this field as a soft-limit: allow bursts, redistribute the allowance
     *   over time, etc.
     * </pre>
     *
     * <code>uint64 requests_per_time_unit = 1;</code>
     * @return The requestsPerTimeUnit.
     */
    @java.lang.Override
    public long getRequestsPerTimeUnit() {
      return requestsPerTimeUnit_;
    }

    public static final int TIME_UNIT_FIELD_NUMBER = 2;
    private int timeUnit_;
    /**
     * <pre>
     * The unit of time. Ignored when :ref:`requests_per_time_unit
     * &lt;envoy_v3_api_field_type.v3.RateLimitStrategy.RequestsPerTimeUnit.requests_per_time_unit&gt;`
     * is ``0`` (deny all).
     * </pre>
     *
     * <code>.envoy.type.v3.RateLimitUnit time_unit = 2 [(.validate.rules) = { ... }</code>
     * @return The enum numeric value on the wire for timeUnit.
     */
    @java.lang.Override public int getTimeUnitValue() {
      return timeUnit_;
    }
    /**
     * <pre>
     * The unit of time. Ignored when :ref:`requests_per_time_unit
     * &lt;envoy_v3_api_field_type.v3.RateLimitStrategy.RequestsPerTimeUnit.requests_per_time_unit&gt;`
     * is ``0`` (deny all).
     * </pre>
     *
     * <code>.envoy.type.v3.RateLimitUnit time_unit = 2 [(.validate.rules) = { ... }</code>
     * @return The timeUnit.
     */
    @java.lang.Override public io.envoyproxy.envoy.type.v3.RateLimitUnit getTimeUnit() {
      @SuppressWarnings("deprecation")
      io.envoyproxy.envoy.type.v3.RateLimitUnit result = io.envoyproxy.envoy.type.v3.RateLimitUnit.valueOf(timeUnit_);
      return result == null ? io.envoyproxy.envoy.type.v3.RateLimitUnit.UNRECOGNIZED : result;
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (requestsPerTimeUnit_ != 0L) {
        output.writeUInt64(1, requestsPerTimeUnit_);
      }
      if (timeUnit_ != io.envoyproxy.envoy.type.v3.RateLimitUnit.UNKNOWN.getNumber()) {
        output.writeEnum(2, timeUnit_);
      }
      unknownFields.writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (requestsPerTimeUnit_ != 0L) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt64Size(1, requestsPerTimeUnit_);
      }
      if (timeUnit_ != io.envoyproxy.envoy.type.v3.RateLimitUnit.UNKNOWN.getNumber()) {
        size += com.google.protobuf.CodedOutputStream
          .computeEnumSize(2, timeUnit_);
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof io.envoyproxy.envoy.type.v3.RateLimitStrategy.RequestsPerTimeUnit)) {
        return super.equals(obj);
      }
      io.envoyproxy.envoy.type.v3.RateLimitStrategy.RequestsPerTimeUnit other = (io.envoyproxy.envoy.type.v3.RateLimitStrategy.RequestsPerTimeUnit) obj;

      if (getRequestsPerTimeUnit()
          != other.getRequestsPerTimeUnit()) return false;
      if (timeUnit_ != other.timeUnit_) return false;
      if (!unknownFields.equals(other.unknownFields)) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      hash = (37 * hash) + REQUESTS_PER_TIME_UNIT_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
          getRequestsPerTimeUnit());
      hash = (37 * hash) + TIME_UNIT_FIELD_NUMBER;
      hash = (53 * hash) + timeUnit_;
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static io.envoyproxy.envoy.type.v3.RateLimitStrategy.RequestsPerTimeUnit parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static io.envoyproxy.envoy.type.v3.RateLimitStrategy.RequestsPerTimeUnit parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static io.envoyproxy.envoy.type.v3.RateLimitStrategy.RequestsPerTimeUnit parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static io.envoyproxy.envoy.type.v3.RateLimitStrategy.RequestsPerTimeUnit parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static io.envoyproxy.envoy.type.v3.RateLimitStrategy.RequestsPerTimeUnit parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static io.envoyproxy.envoy.type.v3.RateLimitStrategy.RequestsPerTimeUnit parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static io.envoyproxy.envoy.type.v3.RateLimitStrategy.RequestsPerTimeUnit parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static io.envoyproxy.envoy.type.v3.RateLimitStrategy.RequestsPerTimeUnit parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static io.envoyproxy.envoy.type.v3.RateLimitStrategy.RequestsPerTimeUnit parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static io.envoyproxy.envoy.type.v3.RateLimitStrategy.RequestsPerTimeUnit parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static io.envoyproxy.envoy.type.v3.RateLimitStrategy.RequestsPerTimeUnit parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static io.envoyproxy.envoy.type.v3.RateLimitStrategy.RequestsPerTimeUnit parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(io.envoyproxy.envoy.type.v3.RateLimitStrategy.RequestsPerTimeUnit prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * <pre>
     * Best-effort limit of the number of requests per time unit.
     * Allows to specify the desired requests per second (RPS, QPS), requests per minute (QPM, RPM),
     * etc., without specifying a rate limiting algorithm implementation.
     * ``RequestsPerTimeUnit`` strategy does not demand any specific rate limiting algorithm to be
     * used (in contrast to the :ref:`TokenBucket &lt;envoy_v3_api_msg_type.v3.TokenBucket&gt;`,
     * for example). It implies that the implementation details of rate limiting algorithm are
     * irrelevant as long as the configured number of "requests per time unit" is achieved.
     * Note that the ``TokenBucket`` is still a valid implementation of the ``RequestsPerTimeUnit``
     * strategy, and may be chosen to enforce the rate limit. However, there's no guarantee it will be
     * the ``TokenBucket`` in particular, and not the Leaky Bucket, the Sliding Window, or any other
     * rate limiting algorithm that fulfills the requirements.
     * </pre>
     *
     * Protobuf type {@code envoy.type.v3.RateLimitStrategy.RequestsPerTimeUnit}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:envoy.type.v3.RateLimitStrategy.RequestsPerTimeUnit)
        io.envoyproxy.envoy.type.v3.RateLimitStrategy.RequestsPerTimeUnitOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return io.envoyproxy.envoy.type.v3.RatelimitStrategyProto.internal_static_envoy_type_v3_RateLimitStrategy_RequestsPerTimeUnit_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return io.envoyproxy.envoy.type.v3.RatelimitStrategyProto.internal_static_envoy_type_v3_RateLimitStrategy_RequestsPerTimeUnit_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                io.envoyproxy.envoy.type.v3.RateLimitStrategy.RequestsPerTimeUnit.class, io.envoyproxy.envoy.type.v3.RateLimitStrategy.RequestsPerTimeUnit.Builder.class);
      }

      // Construct using io.envoyproxy.envoy.type.v3.RateLimitStrategy.RequestsPerTimeUnit.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        requestsPerTimeUnit_ = 0L;

        timeUnit_ = 0;

        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return io.envoyproxy.envoy.type.v3.RatelimitStrategyProto.internal_static_envoy_type_v3_RateLimitStrategy_RequestsPerTimeUnit_descriptor;
      }

      @java.lang.Override
      public io.envoyproxy.envoy.type.v3.RateLimitStrategy.RequestsPerTimeUnit getDefaultInstanceForType() {
        return io.envoyproxy.envoy.type.v3.RateLimitStrategy.RequestsPerTimeUnit.getDefaultInstance();
      }

      @java.lang.Override
      public io.envoyproxy.envoy.type.v3.RateLimitStrategy.RequestsPerTimeUnit build() {
        io.envoyproxy.envoy.type.v3.RateLimitStrategy.RequestsPerTimeUnit result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public io.envoyproxy.envoy.type.v3.RateLimitStrategy.RequestsPerTimeUnit buildPartial() {
        io.envoyproxy.envoy.type.v3.RateLimitStrategy.RequestsPerTimeUnit result = new io.envoyproxy.envoy.type.v3.RateLimitStrategy.RequestsPerTimeUnit(this);
        result.requestsPerTimeUnit_ = requestsPerTimeUnit_;
        result.timeUnit_ = timeUnit_;
        onBuilt();
        return result;
      }

      @java.lang.Override
      public Builder clone() {
        return super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof io.envoyproxy.envoy.type.v3.RateLimitStrategy.RequestsPerTimeUnit) {
          return mergeFrom((io.envoyproxy.envoy.type.v3.RateLimitStrategy.RequestsPerTimeUnit)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(io.envoyproxy.envoy.type.v3.RateLimitStrategy.RequestsPerTimeUnit other) {
        if (other == io.envoyproxy.envoy.type.v3.RateLimitStrategy.RequestsPerTimeUnit.getDefaultInstance()) return this;
        if (other.getRequestsPerTimeUnit() != 0L) {
          setRequestsPerTimeUnit(other.getRequestsPerTimeUnit());
        }
        if (other.timeUnit_ != 0) {
          setTimeUnitValue(other.getTimeUnitValue());
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        io.envoyproxy.envoy.type.v3.RateLimitStrategy.RequestsPerTimeUnit parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (io.envoyproxy.envoy.type.v3.RateLimitStrategy.RequestsPerTimeUnit) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }

      private long requestsPerTimeUnit_ ;
      /**
       * <pre>
       * The desired number of requests per :ref:`time_unit
       * &lt;envoy_v3_api_field_type.v3.RateLimitStrategy.RequestsPerTimeUnit.time_unit&gt;` to allow.
       * If set to ``0``, deny all (equivalent to ``BlanketRule.DENY_ALL``).
       * .. note::
       *   Note that the algorithm implementation determines the course of action for the requests
       *   over the limit. As long as the ``requests_per_time_unit`` converges on the desired value,
       *   it's allowed to treat this field as a soft-limit: allow bursts, redistribute the allowance
       *   over time, etc.
       * </pre>
       *
       * <code>uint64 requests_per_time_unit = 1;</code>
       * @return The requestsPerTimeUnit.
       */
      @java.lang.Override
      public long getRequestsPerTimeUnit() {
        return requestsPerTimeUnit_;
      }
      /**
       * <pre>
       * The desired number of requests per :ref:`time_unit
       * &lt;envoy_v3_api_field_type.v3.RateLimitStrategy.RequestsPerTimeUnit.time_unit&gt;` to allow.
       * If set to ``0``, deny all (equivalent to ``BlanketRule.DENY_ALL``).
       * .. note::
       *   Note that the algorithm implementation determines the course of action for the requests
       *   over the limit. As long as the ``requests_per_time_unit`` converges on the desired value,
       *   it's allowed to treat this field as a soft-limit: allow bursts, redistribute the allowance
       *   over time, etc.
       * </pre>
       *
       * <code>uint64 requests_per_time_unit = 1;</code>
       * @param value The requestsPerTimeUnit to set.
       * @return This builder for chaining.
       */
      public Builder setRequestsPerTimeUnit(long value) {
        
        requestsPerTimeUnit_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * The desired number of requests per :ref:`time_unit
       * &lt;envoy_v3_api_field_type.v3.RateLimitStrategy.RequestsPerTimeUnit.time_unit&gt;` to allow.
       * If set to ``0``, deny all (equivalent to ``BlanketRule.DENY_ALL``).
       * .. note::
       *   Note that the algorithm implementation determines the course of action for the requests
       *   over the limit. As long as the ``requests_per_time_unit`` converges on the desired value,
       *   it's allowed to treat this field as a soft-limit: allow bursts, redistribute the allowance
       *   over time, etc.
       * </pre>
       *
       * <code>uint64 requests_per_time_unit = 1;</code>
       * @return This builder for chaining.
       */
      public Builder clearRequestsPerTimeUnit() {
        
        requestsPerTimeUnit_ = 0L;
        onChanged();
        return this;
      }

      private int timeUnit_ = 0;
      /**
       * <pre>
       * The unit of time. Ignored when :ref:`requests_per_time_unit
       * &lt;envoy_v3_api_field_type.v3.RateLimitStrategy.RequestsPerTimeUnit.requests_per_time_unit&gt;`
       * is ``0`` (deny all).
       * </pre>
       *
       * <code>.envoy.type.v3.RateLimitUnit time_unit = 2 [(.validate.rules) = { ... }</code>
       * @return The enum numeric value on the wire for timeUnit.
       */
      @java.lang.Override public int getTimeUnitValue() {
        return timeUnit_;
      }
      /**
       * <pre>
       * The unit of time. Ignored when :ref:`requests_per_time_unit
       * &lt;envoy_v3_api_field_type.v3.RateLimitStrategy.RequestsPerTimeUnit.requests_per_time_unit&gt;`
       * is ``0`` (deny all).
       * </pre>
       *
       * <code>.envoy.type.v3.RateLimitUnit time_unit = 2 [(.validate.rules) = { ... }</code>
       * @param value The enum numeric value on the wire for timeUnit to set.
       * @return This builder for chaining.
       */
      public Builder setTimeUnitValue(int value) {
        
        timeUnit_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * The unit of time. Ignored when :ref:`requests_per_time_unit
       * &lt;envoy_v3_api_field_type.v3.RateLimitStrategy.RequestsPerTimeUnit.requests_per_time_unit&gt;`
       * is ``0`` (deny all).
       * </pre>
       *
       * <code>.envoy.type.v3.RateLimitUnit time_unit = 2 [(.validate.rules) = { ... }</code>
       * @return The timeUnit.
       */
      @java.lang.Override
      public io.envoyproxy.envoy.type.v3.RateLimitUnit getTimeUnit() {
        @SuppressWarnings("deprecation")
        io.envoyproxy.envoy.type.v3.RateLimitUnit result = io.envoyproxy.envoy.type.v3.RateLimitUnit.valueOf(timeUnit_);
        return result == null ? io.envoyproxy.envoy.type.v3.RateLimitUnit.UNRECOGNIZED : result;
      }
      /**
       * <pre>
       * The unit of time. Ignored when :ref:`requests_per_time_unit
       * &lt;envoy_v3_api_field_type.v3.RateLimitStrategy.RequestsPerTimeUnit.requests_per_time_unit&gt;`
       * is ``0`` (deny all).
       * </pre>
       *
       * <code>.envoy.type.v3.RateLimitUnit time_unit = 2 [(.validate.rules) = { ... }</code>
       * @param value The timeUnit to set.
       * @return This builder for chaining.
       */
      public Builder setTimeUnit(io.envoyproxy.envoy.type.v3.RateLimitUnit value) {
        if (value == null) {
          throw new NullPointerException();
        }
        
        timeUnit_ = value.getNumber();
        onChanged();
        return this;
      }
      /**
       * <pre>
       * The unit of time. Ignored when :ref:`requests_per_time_unit
       * &lt;envoy_v3_api_field_type.v3.RateLimitStrategy.RequestsPerTimeUnit.requests_per_time_unit&gt;`
       * is ``0`` (deny all).
       * </pre>
       *
       * <code>.envoy.type.v3.RateLimitUnit time_unit = 2 [(.validate.rules) = { ... }</code>
       * @return This builder for chaining.
       */
      public Builder clearTimeUnit() {
        
        timeUnit_ = 0;
        onChanged();
        return this;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:envoy.type.v3.RateLimitStrategy.RequestsPerTimeUnit)
    }

    // @@protoc_insertion_point(class_scope:envoy.type.v3.RateLimitStrategy.RequestsPerTimeUnit)
    private static final io.envoyproxy.envoy.type.v3.RateLimitStrategy.RequestsPerTimeUnit DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new io.envoyproxy.envoy.type.v3.RateLimitStrategy.RequestsPerTimeUnit();
    }

    public static io.envoyproxy.envoy.type.v3.RateLimitStrategy.RequestsPerTimeUnit getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<RequestsPerTimeUnit>
        PARSER = new com.google.protobuf.AbstractParser<RequestsPerTimeUnit>() {
      @java.lang.Override
      public RequestsPerTimeUnit parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new RequestsPerTimeUnit(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<RequestsPerTimeUnit> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<RequestsPerTimeUnit> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public io.envoyproxy.envoy.type.v3.RateLimitStrategy.RequestsPerTimeUnit getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  private int strategyCase_ = 0;
  private java.lang.Object strategy_;
  public enum StrategyCase
      implements com.google.protobuf.Internal.EnumLite,
          com.google.protobuf.AbstractMessage.InternalOneOfEnum {
    BLANKET_RULE(1),
    REQUESTS_PER_TIME_UNIT(2),
    TOKEN_BUCKET(3),
    STRATEGY_NOT_SET(0);
    private final int value;
    private StrategyCase(int value) {
      this.value = value;
    }
    /**
     * @param value The number of the enum to look for.
     * @return The enum associated with the given number.
     * @deprecated Use {@link #forNumber(int)} instead.
     */
    @java.lang.Deprecated
    public static StrategyCase valueOf(int value) {
      return forNumber(value);
    }

    public static StrategyCase forNumber(int value) {
      switch (value) {
        case 1: return BLANKET_RULE;
        case 2: return REQUESTS_PER_TIME_UNIT;
        case 3: return TOKEN_BUCKET;
        case 0: return STRATEGY_NOT_SET;
        default: return null;
      }
    }
    public int getNumber() {
      return this.value;
    }
  };

  public StrategyCase
  getStrategyCase() {
    return StrategyCase.forNumber(
        strategyCase_);
  }

  public static final int BLANKET_RULE_FIELD_NUMBER = 1;
  /**
   * <pre>
   * Allow or Deny the requests.
   * If unset, allow all.
   * </pre>
   *
   * <code>.envoy.type.v3.RateLimitStrategy.BlanketRule blanket_rule = 1 [(.validate.rules) = { ... }</code>
   * @return Whether the blanketRule field is set.
   */
  public boolean hasBlanketRule() {
    return strategyCase_ == 1;
  }
  /**
   * <pre>
   * Allow or Deny the requests.
   * If unset, allow all.
   * </pre>
   *
   * <code>.envoy.type.v3.RateLimitStrategy.BlanketRule blanket_rule = 1 [(.validate.rules) = { ... }</code>
   * @return The enum numeric value on the wire for blanketRule.
   */
  public int getBlanketRuleValue() {
    if (strategyCase_ == 1) {
      return (java.lang.Integer) strategy_;
    }
    return 0;
  }
  /**
   * <pre>
   * Allow or Deny the requests.
   * If unset, allow all.
   * </pre>
   *
   * <code>.envoy.type.v3.RateLimitStrategy.BlanketRule blanket_rule = 1 [(.validate.rules) = { ... }</code>
   * @return The blanketRule.
   */
  public io.envoyproxy.envoy.type.v3.RateLimitStrategy.BlanketRule getBlanketRule() {
    if (strategyCase_ == 1) {
      @SuppressWarnings("deprecation")
      io.envoyproxy.envoy.type.v3.RateLimitStrategy.BlanketRule result = io.envoyproxy.envoy.type.v3.RateLimitStrategy.BlanketRule.valueOf(
          (java.lang.Integer) strategy_);
      return result == null ? io.envoyproxy.envoy.type.v3.RateLimitStrategy.BlanketRule.UNRECOGNIZED : result;
    }
    return io.envoyproxy.envoy.type.v3.RateLimitStrategy.BlanketRule.ALLOW_ALL;
  }

  public static final int REQUESTS_PER_TIME_UNIT_FIELD_NUMBER = 2;
  /**
   * <pre>
   * Best-effort limit of the number of requests per time unit, f.e. requests per second.
   * Does not prescribe any specific rate limiting algorithm, see :ref:`RequestsPerTimeUnit
   * &lt;envoy_v3_api_msg_type.v3.RateLimitStrategy.RequestsPerTimeUnit&gt;` for details.
   * </pre>
   *
   * <code>.envoy.type.v3.RateLimitStrategy.RequestsPerTimeUnit requests_per_time_unit = 2;</code>
   * @return Whether the requestsPerTimeUnit field is set.
   */
  @java.lang.Override
  public boolean hasRequestsPerTimeUnit() {
    return strategyCase_ == 2;
  }
  /**
   * <pre>
   * Best-effort limit of the number of requests per time unit, f.e. requests per second.
   * Does not prescribe any specific rate limiting algorithm, see :ref:`RequestsPerTimeUnit
   * &lt;envoy_v3_api_msg_type.v3.RateLimitStrategy.RequestsPerTimeUnit&gt;` for details.
   * </pre>
   *
   * <code>.envoy.type.v3.RateLimitStrategy.RequestsPerTimeUnit requests_per_time_unit = 2;</code>
   * @return The requestsPerTimeUnit.
   */
  @java.lang.Override
  public io.envoyproxy.envoy.type.v3.RateLimitStrategy.RequestsPerTimeUnit getRequestsPerTimeUnit() {
    if (strategyCase_ == 2) {
       return (io.envoyproxy.envoy.type.v3.RateLimitStrategy.RequestsPerTimeUnit) strategy_;
    }
    return io.envoyproxy.envoy.type.v3.RateLimitStrategy.RequestsPerTimeUnit.getDefaultInstance();
  }
  /**
   * <pre>
   * Best-effort limit of the number of requests per time unit, f.e. requests per second.
   * Does not prescribe any specific rate limiting algorithm, see :ref:`RequestsPerTimeUnit
   * &lt;envoy_v3_api_msg_type.v3.RateLimitStrategy.RequestsPerTimeUnit&gt;` for details.
   * </pre>
   *
   * <code>.envoy.type.v3.RateLimitStrategy.RequestsPerTimeUnit requests_per_time_unit = 2;</code>
   */
  @java.lang.Override
  public io.envoyproxy.envoy.type.v3.RateLimitStrategy.RequestsPerTimeUnitOrBuilder getRequestsPerTimeUnitOrBuilder() {
    if (strategyCase_ == 2) {
       return (io.envoyproxy.envoy.type.v3.RateLimitStrategy.RequestsPerTimeUnit) strategy_;
    }
    return io.envoyproxy.envoy.type.v3.RateLimitStrategy.RequestsPerTimeUnit.getDefaultInstance();
  }

  public static final int TOKEN_BUCKET_FIELD_NUMBER = 3;
  /**
   * <pre>
   * Limit the requests by consuming tokens from the Token Bucket.
   * Allow the same number of requests as the number of tokens available in
   * the token bucket.
   * </pre>
   *
   * <code>.envoy.type.v3.TokenBucket token_bucket = 3;</code>
   * @return Whether the tokenBucket field is set.
   */
  @java.lang.Override
  public boolean hasTokenBucket() {
    return strategyCase_ == 3;
  }
  /**
   * <pre>
   * Limit the requests by consuming tokens from the Token Bucket.
   * Allow the same number of requests as the number of tokens available in
   * the token bucket.
   * </pre>
   *
   * <code>.envoy.type.v3.TokenBucket token_bucket = 3;</code>
   * @return The tokenBucket.
   */
  @java.lang.Override
  public io.envoyproxy.envoy.type.v3.TokenBucket getTokenBucket() {
    if (strategyCase_ == 3) {
       return (io.envoyproxy.envoy.type.v3.TokenBucket) strategy_;
    }
    return io.envoyproxy.envoy.type.v3.TokenBucket.getDefaultInstance();
  }
  /**
   * <pre>
   * Limit the requests by consuming tokens from the Token Bucket.
   * Allow the same number of requests as the number of tokens available in
   * the token bucket.
   * </pre>
   *
   * <code>.envoy.type.v3.TokenBucket token_bucket = 3;</code>
   */
  @java.lang.Override
  public io.envoyproxy.envoy.type.v3.TokenBucketOrBuilder getTokenBucketOrBuilder() {
    if (strategyCase_ == 3) {
       return (io.envoyproxy.envoy.type.v3.TokenBucket) strategy_;
    }
    return io.envoyproxy.envoy.type.v3.TokenBucket.getDefaultInstance();
  }

  private byte memoizedIsInitialized = -1;
  @java.lang.Override
  public final boolean isInitialized() {
    byte isInitialized = memoizedIsInitialized;
    if (isInitialized == 1) return true;
    if (isInitialized == 0) return false;

    memoizedIsInitialized = 1;
    return true;
  }

  @java.lang.Override
  public void writeTo(com.google.protobuf.CodedOutputStream output)
                      throws java.io.IOException {
    if (strategyCase_ == 1) {
      output.writeEnum(1, ((java.lang.Integer) strategy_));
    }
    if (strategyCase_ == 2) {
      output.writeMessage(2, (io.envoyproxy.envoy.type.v3.RateLimitStrategy.RequestsPerTimeUnit) strategy_);
    }
    if (strategyCase_ == 3) {
      output.writeMessage(3, (io.envoyproxy.envoy.type.v3.TokenBucket) strategy_);
    }
    unknownFields.writeTo(output);
  }

  @java.lang.Override
  public int getSerializedSize() {
    int size = memoizedSize;
    if (size != -1) return size;

    size = 0;
    if (strategyCase_ == 1) {
      size += com.google.protobuf.CodedOutputStream
        .computeEnumSize(1, ((java.lang.Integer) strategy_));
    }
    if (strategyCase_ == 2) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(2, (io.envoyproxy.envoy.type.v3.RateLimitStrategy.RequestsPerTimeUnit) strategy_);
    }
    if (strategyCase_ == 3) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(3, (io.envoyproxy.envoy.type.v3.TokenBucket) strategy_);
    }
    size += unknownFields.getSerializedSize();
    memoizedSize = size;
    return size;
  }

  @java.lang.Override
  public boolean equals(final java.lang.Object obj) {
    if (obj == this) {
     return true;
    }
    if (!(obj instanceof io.envoyproxy.envoy.type.v3.RateLimitStrategy)) {
      return super.equals(obj);
    }
    io.envoyproxy.envoy.type.v3.RateLimitStrategy other = (io.envoyproxy.envoy.type.v3.RateLimitStrategy) obj;

    if (!getStrategyCase().equals(other.getStrategyCase())) return false;
    switch (strategyCase_) {
      case 1:
        if (getBlanketRuleValue()
            != other.getBlanketRuleValue()) return false;
        break;
      case 2:
        if (!getRequestsPerTimeUnit()
            .equals(other.getRequestsPerTimeUnit())) return false;
        break;
      case 3:
        if (!getTokenBucket()
            .equals(other.getTokenBucket())) return false;
        break;
      case 0:
      default:
    }
    if (!unknownFields.equals(other.unknownFields)) return false;
    return true;
  }

  @java.lang.Override
  public int hashCode() {
    if (memoizedHashCode != 0) {
      return memoizedHashCode;
    }
    int hash = 41;
    hash = (19 * hash) + getDescriptor().hashCode();
    switch (strategyCase_) {
      case 1:
        hash = (37 * hash) + BLANKET_RULE_FIELD_NUMBER;
        hash = (53 * hash) + getBlanketRuleValue();
        break;
      case 2:
        hash = (37 * hash) + REQUESTS_PER_TIME_UNIT_FIELD_NUMBER;
        hash = (53 * hash) + getRequestsPerTimeUnit().hashCode();
        break;
      case 3:
        hash = (37 * hash) + TOKEN_BUCKET_FIELD_NUMBER;
        hash = (53 * hash) + getTokenBucket().hashCode();
        break;
      case 0:
      default:
    }
    hash = (29 * hash) + unknownFields.hashCode();
    memoizedHashCode = hash;
    return hash;
  }

  public static io.envoyproxy.envoy.type.v3.RateLimitStrategy parseFrom(
      java.nio.ByteBuffer data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static io.envoyproxy.envoy.type.v3.RateLimitStrategy parseFrom(
      java.nio.ByteBuffer data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static io.envoyproxy.envoy.type.v3.RateLimitStrategy parseFrom(
      com.google.protobuf.ByteString data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static io.envoyproxy.envoy.type.v3.RateLimitStrategy parseFrom(
      com.google.protobuf.ByteString data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static io.envoyproxy.envoy.type.v3.RateLimitStrategy parseFrom(byte[] data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static io.envoyproxy.envoy.type.v3.RateLimitStrategy parseFrom(
      byte[] data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static io.envoyproxy.envoy.type.v3.RateLimitStrategy parseFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input);
  }
  public static io.envoyproxy.envoy.type.v3.RateLimitStrategy parseFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input, extensionRegistry);
  }
  public static io.envoyproxy.envoy.type.v3.RateLimitStrategy parseDelimitedFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseDelimitedWithIOException(PARSER, input);
  }
  public static io.envoyproxy.envoy.type.v3.RateLimitStrategy parseDelimitedFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
  }
  public static io.envoyproxy.envoy.type.v3.RateLimitStrategy parseFrom(
      com.google.protobuf.CodedInputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input);
  }
  public static io.envoyproxy.envoy.type.v3.RateLimitStrategy parseFrom(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input, extensionRegistry);
  }

  @java.lang.Override
  public Builder newBuilderForType() { return newBuilder(); }
  public static Builder newBuilder() {
    return DEFAULT_INSTANCE.toBuilder();
  }
  public static Builder newBuilder(io.envoyproxy.envoy.type.v3.RateLimitStrategy prototype) {
    return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
  }
  @java.lang.Override
  public Builder toBuilder() {
    return this == DEFAULT_INSTANCE
        ? new Builder() : new Builder().mergeFrom(this);
  }

  @java.lang.Override
  protected Builder newBuilderForType(
      com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
    Builder builder = new Builder(parent);
    return builder;
  }
  /**
   * Protobuf type {@code envoy.type.v3.RateLimitStrategy}
   */
  public static final class Builder extends
      com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
      // @@protoc_insertion_point(builder_implements:envoy.type.v3.RateLimitStrategy)
      io.envoyproxy.envoy.type.v3.RateLimitStrategyOrBuilder {
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return io.envoyproxy.envoy.type.v3.RatelimitStrategyProto.internal_static_envoy_type_v3_RateLimitStrategy_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return io.envoyproxy.envoy.type.v3.RatelimitStrategyProto.internal_static_envoy_type_v3_RateLimitStrategy_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              io.envoyproxy.envoy.type.v3.RateLimitStrategy.class, io.envoyproxy.envoy.type.v3.RateLimitStrategy.Builder.class);
    }

    // Construct using io.envoyproxy.envoy.type.v3.RateLimitStrategy.newBuilder()
    private Builder() {
      maybeForceBuilderInitialization();
    }

    private Builder(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      super(parent);
      maybeForceBuilderInitialization();
    }
    private void maybeForceBuilderInitialization() {
      if (com.google.protobuf.GeneratedMessageV3
              .alwaysUseFieldBuilders) {
      }
    }
    @java.lang.Override
    public Builder clear() {
      super.clear();
      strategyCase_ = 0;
      strategy_ = null;
      return this;
    }

    @java.lang.Override
    public com.google.protobuf.Descriptors.Descriptor
        getDescriptorForType() {
      return io.envoyproxy.envoy.type.v3.RatelimitStrategyProto.internal_static_envoy_type_v3_RateLimitStrategy_descriptor;
    }

    @java.lang.Override
    public io.envoyproxy.envoy.type.v3.RateLimitStrategy getDefaultInstanceForType() {
      return io.envoyproxy.envoy.type.v3.RateLimitStrategy.getDefaultInstance();
    }

    @java.lang.Override
    public io.envoyproxy.envoy.type.v3.RateLimitStrategy build() {
      io.envoyproxy.envoy.type.v3.RateLimitStrategy result = buildPartial();
      if (!result.isInitialized()) {
        throw newUninitializedMessageException(result);
      }
      return result;
    }

    @java.lang.Override
    public io.envoyproxy.envoy.type.v3.RateLimitStrategy buildPartial() {
      io.envoyproxy.envoy.type.v3.RateLimitStrategy result = new io.envoyproxy.envoy.type.v3.RateLimitStrategy(this);
      if (strategyCase_ == 1) {
        result.strategy_ = strategy_;
      }
      if (strategyCase_ == 2) {
        if (requestsPerTimeUnitBuilder_ == null) {
          result.strategy_ = strategy_;
        } else {
          result.strategy_ = requestsPerTimeUnitBuilder_.build();
        }
      }
      if (strategyCase_ == 3) {
        if (tokenBucketBuilder_ == null) {
          result.strategy_ = strategy_;
        } else {
          result.strategy_ = tokenBucketBuilder_.build();
        }
      }
      result.strategyCase_ = strategyCase_;
      onBuilt();
      return result;
    }

    @java.lang.Override
    public Builder clone() {
      return super.clone();
    }
    @java.lang.Override
    public Builder setField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        java.lang.Object value) {
      return super.setField(field, value);
    }
    @java.lang.Override
    public Builder clearField(
        com.google.protobuf.Descriptors.FieldDescriptor field) {
      return super.clearField(field);
    }
    @java.lang.Override
    public Builder clearOneof(
        com.google.protobuf.Descriptors.OneofDescriptor oneof) {
      return super.clearOneof(oneof);
    }
    @java.lang.Override
    public Builder setRepeatedField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        int index, java.lang.Object value) {
      return super.setRepeatedField(field, index, value);
    }
    @java.lang.Override
    public Builder addRepeatedField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        java.lang.Object value) {
      return super.addRepeatedField(field, value);
    }
    @java.lang.Override
    public Builder mergeFrom(com.google.protobuf.Message other) {
      if (other instanceof io.envoyproxy.envoy.type.v3.RateLimitStrategy) {
        return mergeFrom((io.envoyproxy.envoy.type.v3.RateLimitStrategy)other);
      } else {
        super.mergeFrom(other);
        return this;
      }
    }

    public Builder mergeFrom(io.envoyproxy.envoy.type.v3.RateLimitStrategy other) {
      if (other == io.envoyproxy.envoy.type.v3.RateLimitStrategy.getDefaultInstance()) return this;
      switch (other.getStrategyCase()) {
        case BLANKET_RULE: {
          setBlanketRuleValue(other.getBlanketRuleValue());
          break;
        }
        case REQUESTS_PER_TIME_UNIT: {
          mergeRequestsPerTimeUnit(other.getRequestsPerTimeUnit());
          break;
        }
        case TOKEN_BUCKET: {
          mergeTokenBucket(other.getTokenBucket());
          break;
        }
        case STRATEGY_NOT_SET: {
          break;
        }
      }
      this.mergeUnknownFields(other.unknownFields);
      onChanged();
      return this;
    }

    @java.lang.Override
    public final boolean isInitialized() {
      return true;
    }

    @java.lang.Override
    public Builder mergeFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      io.envoyproxy.envoy.type.v3.RateLimitStrategy parsedMessage = null;
      try {
        parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        parsedMessage = (io.envoyproxy.envoy.type.v3.RateLimitStrategy) e.getUnfinishedMessage();
        throw e.unwrapIOException();
      } finally {
        if (parsedMessage != null) {
          mergeFrom(parsedMessage);
        }
      }
      return this;
    }
    private int strategyCase_ = 0;
    private java.lang.Object strategy_;
    public StrategyCase
        getStrategyCase() {
      return StrategyCase.forNumber(
          strategyCase_);
    }

    public Builder clearStrategy() {
      strategyCase_ = 0;
      strategy_ = null;
      onChanged();
      return this;
    }


    /**
     * <pre>
     * Allow or Deny the requests.
     * If unset, allow all.
     * </pre>
     *
     * <code>.envoy.type.v3.RateLimitStrategy.BlanketRule blanket_rule = 1 [(.validate.rules) = { ... }</code>
     * @return Whether the blanketRule field is set.
     */
    @java.lang.Override
    public boolean hasBlanketRule() {
      return strategyCase_ == 1;
    }
    /**
     * <pre>
     * Allow or Deny the requests.
     * If unset, allow all.
     * </pre>
     *
     * <code>.envoy.type.v3.RateLimitStrategy.BlanketRule blanket_rule = 1 [(.validate.rules) = { ... }</code>
     * @return The enum numeric value on the wire for blanketRule.
     */
    @java.lang.Override
    public int getBlanketRuleValue() {
      if (strategyCase_ == 1) {
        return ((java.lang.Integer) strategy_).intValue();
      }
      return 0;
    }
    /**
     * <pre>
     * Allow or Deny the requests.
     * If unset, allow all.
     * </pre>
     *
     * <code>.envoy.type.v3.RateLimitStrategy.BlanketRule blanket_rule = 1 [(.validate.rules) = { ... }</code>
     * @param value The enum numeric value on the wire for blanketRule to set.
     * @return This builder for chaining.
     */
    public Builder setBlanketRuleValue(int value) {
      strategyCase_ = 1;
      strategy_ = value;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * Allow or Deny the requests.
     * If unset, allow all.
     * </pre>
     *
     * <code>.envoy.type.v3.RateLimitStrategy.BlanketRule blanket_rule = 1 [(.validate.rules) = { ... }</code>
     * @return The blanketRule.
     */
    @java.lang.Override
    public io.envoyproxy.envoy.type.v3.RateLimitStrategy.BlanketRule getBlanketRule() {
      if (strategyCase_ == 1) {
        @SuppressWarnings("deprecation")
        io.envoyproxy.envoy.type.v3.RateLimitStrategy.BlanketRule result = io.envoyproxy.envoy.type.v3.RateLimitStrategy.BlanketRule.valueOf(
            (java.lang.Integer) strategy_);
        return result == null ? io.envoyproxy.envoy.type.v3.RateLimitStrategy.BlanketRule.UNRECOGNIZED : result;
      }
      return io.envoyproxy.envoy.type.v3.RateLimitStrategy.BlanketRule.ALLOW_ALL;
    }
    /**
     * <pre>
     * Allow or Deny the requests.
     * If unset, allow all.
     * </pre>
     *
     * <code>.envoy.type.v3.RateLimitStrategy.BlanketRule blanket_rule = 1 [(.validate.rules) = { ... }</code>
     * @param value The blanketRule to set.
     * @return This builder for chaining.
     */
    public Builder setBlanketRule(io.envoyproxy.envoy.type.v3.RateLimitStrategy.BlanketRule value) {
      if (value == null) {
        throw new NullPointerException();
      }
      strategyCase_ = 1;
      strategy_ = value.getNumber();
      onChanged();
      return this;
    }
    /**
     * <pre>
     * Allow or Deny the requests.
     * If unset, allow all.
     * </pre>
     *
     * <code>.envoy.type.v3.RateLimitStrategy.BlanketRule blanket_rule = 1 [(.validate.rules) = { ... }</code>
     * @return This builder for chaining.
     */
    public Builder clearBlanketRule() {
      if (strategyCase_ == 1) {
        strategyCase_ = 0;
        strategy_ = null;
        onChanged();
      }
      return this;
    }

    private com.google.protobuf.SingleFieldBuilderV3<
        io.envoyproxy.envoy.type.v3.RateLimitStrategy.RequestsPerTimeUnit, io.envoyproxy.envoy.type.v3.RateLimitStrategy.RequestsPerTimeUnit.Builder, io.envoyproxy.envoy.type.v3.RateLimitStrategy.RequestsPerTimeUnitOrBuilder> requestsPerTimeUnitBuilder_;
    /**
     * <pre>
     * Best-effort limit of the number of requests per time unit, f.e. requests per second.
     * Does not prescribe any specific rate limiting algorithm, see :ref:`RequestsPerTimeUnit
     * &lt;envoy_v3_api_msg_type.v3.RateLimitStrategy.RequestsPerTimeUnit&gt;` for details.
     * </pre>
     *
     * <code>.envoy.type.v3.RateLimitStrategy.RequestsPerTimeUnit requests_per_time_unit = 2;</code>
     * @return Whether the requestsPerTimeUnit field is set.
     */
    @java.lang.Override
    public boolean hasRequestsPerTimeUnit() {
      return strategyCase_ == 2;
    }
    /**
     * <pre>
     * Best-effort limit of the number of requests per time unit, f.e. requests per second.
     * Does not prescribe any specific rate limiting algorithm, see :ref:`RequestsPerTimeUnit
     * &lt;envoy_v3_api_msg_type.v3.RateLimitStrategy.RequestsPerTimeUnit&gt;` for details.
     * </pre>
     *
     * <code>.envoy.type.v3.RateLimitStrategy.RequestsPerTimeUnit requests_per_time_unit = 2;</code>
     * @return The requestsPerTimeUnit.
     */
    @java.lang.Override
    public io.envoyproxy.envoy.type.v3.RateLimitStrategy.RequestsPerTimeUnit getRequestsPerTimeUnit() {
      if (requestsPerTimeUnitBuilder_ == null) {
        if (strategyCase_ == 2) {
          return (io.envoyproxy.envoy.type.v3.RateLimitStrategy.RequestsPerTimeUnit) strategy_;
        }
        return io.envoyproxy.envoy.type.v3.RateLimitStrategy.RequestsPerTimeUnit.getDefaultInstance();
      } else {
        if (strategyCase_ == 2) {
          return requestsPerTimeUnitBuilder_.getMessage();
        }
        return io.envoyproxy.envoy.type.v3.RateLimitStrategy.RequestsPerTimeUnit.getDefaultInstance();
      }
    }
    /**
     * <pre>
     * Best-effort limit of the number of requests per time unit, f.e. requests per second.
     * Does not prescribe any specific rate limiting algorithm, see :ref:`RequestsPerTimeUnit
     * &lt;envoy_v3_api_msg_type.v3.RateLimitStrategy.RequestsPerTimeUnit&gt;` for details.
     * </pre>
     *
     * <code>.envoy.type.v3.RateLimitStrategy.RequestsPerTimeUnit requests_per_time_unit = 2;</code>
     */
    public Builder setRequestsPerTimeUnit(io.envoyproxy.envoy.type.v3.RateLimitStrategy.RequestsPerTimeUnit value) {
      if (requestsPerTimeUnitBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        strategy_ = value;
        onChanged();
      } else {
        requestsPerTimeUnitBuilder_.setMessage(value);
      }
      strategyCase_ = 2;
      return this;
    }
    /**
     * <pre>
     * Best-effort limit of the number of requests per time unit, f.e. requests per second.
     * Does not prescribe any specific rate limiting algorithm, see :ref:`RequestsPerTimeUnit
     * &lt;envoy_v3_api_msg_type.v3.RateLimitStrategy.RequestsPerTimeUnit&gt;` for details.
     * </pre>
     *
     * <code>.envoy.type.v3.RateLimitStrategy.RequestsPerTimeUnit requests_per_time_unit = 2;</code>
     */
    public Builder setRequestsPerTimeUnit(
        io.envoyproxy.envoy.type.v3.RateLimitStrategy.RequestsPerTimeUnit.Builder builderForValue) {
      if (requestsPerTimeUnitBuilder_ == null) {
        strategy_ = builderForValue.build();
        onChanged();
      } else {
        requestsPerTimeUnitBuilder_.setMessage(builderForValue.build());
      }
      strategyCase_ = 2;
      return this;
    }
    /**
     * <pre>
     * Best-effort limit of the number of requests per time unit, f.e. requests per second.
     * Does not prescribe any specific rate limiting algorithm, see :ref:`RequestsPerTimeUnit
     * &lt;envoy_v3_api_msg_type.v3.RateLimitStrategy.RequestsPerTimeUnit&gt;` for details.
     * </pre>
     *
     * <code>.envoy.type.v3.RateLimitStrategy.RequestsPerTimeUnit requests_per_time_unit = 2;</code>
     */
    public Builder mergeRequestsPerTimeUnit(io.envoyproxy.envoy.type.v3.RateLimitStrategy.RequestsPerTimeUnit value) {
      if (requestsPerTimeUnitBuilder_ == null) {
        if (strategyCase_ == 2 &&
            strategy_ != io.envoyproxy.envoy.type.v3.RateLimitStrategy.RequestsPerTimeUnit.getDefaultInstance()) {
          strategy_ = io.envoyproxy.envoy.type.v3.RateLimitStrategy.RequestsPerTimeUnit.newBuilder((io.envoyproxy.envoy.type.v3.RateLimitStrategy.RequestsPerTimeUnit) strategy_)
              .mergeFrom(value).buildPartial();
        } else {
          strategy_ = value;
        }
        onChanged();
      } else {
        if (strategyCase_ == 2) {
          requestsPerTimeUnitBuilder_.mergeFrom(value);
        } else {
          requestsPerTimeUnitBuilder_.setMessage(value);
        }
      }
      strategyCase_ = 2;
      return this;
    }
    /**
     * <pre>
     * Best-effort limit of the number of requests per time unit, f.e. requests per second.
     * Does not prescribe any specific rate limiting algorithm, see :ref:`RequestsPerTimeUnit
     * &lt;envoy_v3_api_msg_type.v3.RateLimitStrategy.RequestsPerTimeUnit&gt;` for details.
     * </pre>
     *
     * <code>.envoy.type.v3.RateLimitStrategy.RequestsPerTimeUnit requests_per_time_unit = 2;</code>
     */
    public Builder clearRequestsPerTimeUnit() {
      if (requestsPerTimeUnitBuilder_ == null) {
        if (strategyCase_ == 2) {
          strategyCase_ = 0;
          strategy_ = null;
          onChanged();
        }
      } else {
        if (strategyCase_ == 2) {
          strategyCase_ = 0;
          strategy_ = null;
        }
        requestsPerTimeUnitBuilder_.clear();
      }
      return this;
    }
    /**
     * <pre>
     * Best-effort limit of the number of requests per time unit, f.e. requests per second.
     * Does not prescribe any specific rate limiting algorithm, see :ref:`RequestsPerTimeUnit
     * &lt;envoy_v3_api_msg_type.v3.RateLimitStrategy.RequestsPerTimeUnit&gt;` for details.
     * </pre>
     *
     * <code>.envoy.type.v3.RateLimitStrategy.RequestsPerTimeUnit requests_per_time_unit = 2;</code>
     */
    public io.envoyproxy.envoy.type.v3.RateLimitStrategy.RequestsPerTimeUnit.Builder getRequestsPerTimeUnitBuilder() {
      return getRequestsPerTimeUnitFieldBuilder().getBuilder();
    }
    /**
     * <pre>
     * Best-effort limit of the number of requests per time unit, f.e. requests per second.
     * Does not prescribe any specific rate limiting algorithm, see :ref:`RequestsPerTimeUnit
     * &lt;envoy_v3_api_msg_type.v3.RateLimitStrategy.RequestsPerTimeUnit&gt;` for details.
     * </pre>
     *
     * <code>.envoy.type.v3.RateLimitStrategy.RequestsPerTimeUnit requests_per_time_unit = 2;</code>
     */
    @java.lang.Override
    public io.envoyproxy.envoy.type.v3.RateLimitStrategy.RequestsPerTimeUnitOrBuilder getRequestsPerTimeUnitOrBuilder() {
      if ((strategyCase_ == 2) && (requestsPerTimeUnitBuilder_ != null)) {
        return requestsPerTimeUnitBuilder_.getMessageOrBuilder();
      } else {
        if (strategyCase_ == 2) {
          return (io.envoyproxy.envoy.type.v3.RateLimitStrategy.RequestsPerTimeUnit) strategy_;
        }
        return io.envoyproxy.envoy.type.v3.RateLimitStrategy.RequestsPerTimeUnit.getDefaultInstance();
      }
    }
    /**
     * <pre>
     * Best-effort limit of the number of requests per time unit, f.e. requests per second.
     * Does not prescribe any specific rate limiting algorithm, see :ref:`RequestsPerTimeUnit
     * &lt;envoy_v3_api_msg_type.v3.RateLimitStrategy.RequestsPerTimeUnit&gt;` for details.
     * </pre>
     *
     * <code>.envoy.type.v3.RateLimitStrategy.RequestsPerTimeUnit requests_per_time_unit = 2;</code>
     */
    private com.google.protobuf.SingleFieldBuilderV3<
        io.envoyproxy.envoy.type.v3.RateLimitStrategy.RequestsPerTimeUnit, io.envoyproxy.envoy.type.v3.RateLimitStrategy.RequestsPerTimeUnit.Builder, io.envoyproxy.envoy.type.v3.RateLimitStrategy.RequestsPerTimeUnitOrBuilder> 
        getRequestsPerTimeUnitFieldBuilder() {
      if (requestsPerTimeUnitBuilder_ == null) {
        if (!(strategyCase_ == 2)) {
          strategy_ = io.envoyproxy.envoy.type.v3.RateLimitStrategy.RequestsPerTimeUnit.getDefaultInstance();
        }
        requestsPerTimeUnitBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
            io.envoyproxy.envoy.type.v3.RateLimitStrategy.RequestsPerTimeUnit, io.envoyproxy.envoy.type.v3.RateLimitStrategy.RequestsPerTimeUnit.Builder, io.envoyproxy.envoy.type.v3.RateLimitStrategy.RequestsPerTimeUnitOrBuilder>(
                (io.envoyproxy.envoy.type.v3.RateLimitStrategy.RequestsPerTimeUnit) strategy_,
                getParentForChildren(),
                isClean());
        strategy_ = null;
      }
      strategyCase_ = 2;
      onChanged();;
      return requestsPerTimeUnitBuilder_;
    }

    private com.google.protobuf.SingleFieldBuilderV3<
        io.envoyproxy.envoy.type.v3.TokenBucket, io.envoyproxy.envoy.type.v3.TokenBucket.Builder, io.envoyproxy.envoy.type.v3.TokenBucketOrBuilder> tokenBucketBuilder_;
    /**
     * <pre>
     * Limit the requests by consuming tokens from the Token Bucket.
     * Allow the same number of requests as the number of tokens available in
     * the token bucket.
     * </pre>
     *
     * <code>.envoy.type.v3.TokenBucket token_bucket = 3;</code>
     * @return Whether the tokenBucket field is set.
     */
    @java.lang.Override
    public boolean hasTokenBucket() {
      return strategyCase_ == 3;
    }
    /**
     * <pre>
     * Limit the requests by consuming tokens from the Token Bucket.
     * Allow the same number of requests as the number of tokens available in
     * the token bucket.
     * </pre>
     *
     * <code>.envoy.type.v3.TokenBucket token_bucket = 3;</code>
     * @return The tokenBucket.
     */
    @java.lang.Override
    public io.envoyproxy.envoy.type.v3.TokenBucket getTokenBucket() {
      if (tokenBucketBuilder_ == null) {
        if (strategyCase_ == 3) {
          return (io.envoyproxy.envoy.type.v3.TokenBucket) strategy_;
        }
        return io.envoyproxy.envoy.type.v3.TokenBucket.getDefaultInstance();
      } else {
        if (strategyCase_ == 3) {
          return tokenBucketBuilder_.getMessage();
        }
        return io.envoyproxy.envoy.type.v3.TokenBucket.getDefaultInstance();
      }
    }
    /**
     * <pre>
     * Limit the requests by consuming tokens from the Token Bucket.
     * Allow the same number of requests as the number of tokens available in
     * the token bucket.
     * </pre>
     *
     * <code>.envoy.type.v3.TokenBucket token_bucket = 3;</code>
     */
    public Builder setTokenBucket(io.envoyproxy.envoy.type.v3.TokenBucket value) {
      if (tokenBucketBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        strategy_ = value;
        onChanged();
      } else {
        tokenBucketBuilder_.setMessage(value);
      }
      strategyCase_ = 3;
      return this;
    }
    /**
     * <pre>
     * Limit the requests by consuming tokens from the Token Bucket.
     * Allow the same number of requests as the number of tokens available in
     * the token bucket.
     * </pre>
     *
     * <code>.envoy.type.v3.TokenBucket token_bucket = 3;</code>
     */
    public Builder setTokenBucket(
        io.envoyproxy.envoy.type.v3.TokenBucket.Builder builderForValue) {
      if (tokenBucketBuilder_ == null) {
        strategy_ = builderForValue.build();
        onChanged();
      } else {
        tokenBucketBuilder_.setMessage(builderForValue.build());
      }
      strategyCase_ = 3;
      return this;
    }
    /**
     * <pre>
     * Limit the requests by consuming tokens from the Token Bucket.
     * Allow the same number of requests as the number of tokens available in
     * the token bucket.
     * </pre>
     *
     * <code>.envoy.type.v3.TokenBucket token_bucket = 3;</code>
     */
    public Builder mergeTokenBucket(io.envoyproxy.envoy.type.v3.TokenBucket value) {
      if (tokenBucketBuilder_ == null) {
        if (strategyCase_ == 3 &&
            strategy_ != io.envoyproxy.envoy.type.v3.TokenBucket.getDefaultInstance()) {
          strategy_ = io.envoyproxy.envoy.type.v3.TokenBucket.newBuilder((io.envoyproxy.envoy.type.v3.TokenBucket) strategy_)
              .mergeFrom(value).buildPartial();
        } else {
          strategy_ = value;
        }
        onChanged();
      } else {
        if (strategyCase_ == 3) {
          tokenBucketBuilder_.mergeFrom(value);
        } else {
          tokenBucketBuilder_.setMessage(value);
        }
      }
      strategyCase_ = 3;
      return this;
    }
    /**
     * <pre>
     * Limit the requests by consuming tokens from the Token Bucket.
     * Allow the same number of requests as the number of tokens available in
     * the token bucket.
     * </pre>
     *
     * <code>.envoy.type.v3.TokenBucket token_bucket = 3;</code>
     */
    public Builder clearTokenBucket() {
      if (tokenBucketBuilder_ == null) {
        if (strategyCase_ == 3) {
          strategyCase_ = 0;
          strategy_ = null;
          onChanged();
        }
      } else {
        if (strategyCase_ == 3) {
          strategyCase_ = 0;
          strategy_ = null;
        }
        tokenBucketBuilder_.clear();
      }
      return this;
    }
    /**
     * <pre>
     * Limit the requests by consuming tokens from the Token Bucket.
     * Allow the same number of requests as the number of tokens available in
     * the token bucket.
     * </pre>
     *
     * <code>.envoy.type.v3.TokenBucket token_bucket = 3;</code>
     */
    public io.envoyproxy.envoy.type.v3.TokenBucket.Builder getTokenBucketBuilder() {
      return getTokenBucketFieldBuilder().getBuilder();
    }
    /**
     * <pre>
     * Limit the requests by consuming tokens from the Token Bucket.
     * Allow the same number of requests as the number of tokens available in
     * the token bucket.
     * </pre>
     *
     * <code>.envoy.type.v3.TokenBucket token_bucket = 3;</code>
     */
    @java.lang.Override
    public io.envoyproxy.envoy.type.v3.TokenBucketOrBuilder getTokenBucketOrBuilder() {
      if ((strategyCase_ == 3) && (tokenBucketBuilder_ != null)) {
        return tokenBucketBuilder_.getMessageOrBuilder();
      } else {
        if (strategyCase_ == 3) {
          return (io.envoyproxy.envoy.type.v3.TokenBucket) strategy_;
        }
        return io.envoyproxy.envoy.type.v3.TokenBucket.getDefaultInstance();
      }
    }
    /**
     * <pre>
     * Limit the requests by consuming tokens from the Token Bucket.
     * Allow the same number of requests as the number of tokens available in
     * the token bucket.
     * </pre>
     *
     * <code>.envoy.type.v3.TokenBucket token_bucket = 3;</code>
     */
    private com.google.protobuf.SingleFieldBuilderV3<
        io.envoyproxy.envoy.type.v3.TokenBucket, io.envoyproxy.envoy.type.v3.TokenBucket.Builder, io.envoyproxy.envoy.type.v3.TokenBucketOrBuilder> 
        getTokenBucketFieldBuilder() {
      if (tokenBucketBuilder_ == null) {
        if (!(strategyCase_ == 3)) {
          strategy_ = io.envoyproxy.envoy.type.v3.TokenBucket.getDefaultInstance();
        }
        tokenBucketBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
            io.envoyproxy.envoy.type.v3.TokenBucket, io.envoyproxy.envoy.type.v3.TokenBucket.Builder, io.envoyproxy.envoy.type.v3.TokenBucketOrBuilder>(
                (io.envoyproxy.envoy.type.v3.TokenBucket) strategy_,
                getParentForChildren(),
                isClean());
        strategy_ = null;
      }
      strategyCase_ = 3;
      onChanged();;
      return tokenBucketBuilder_;
    }
    @java.lang.Override
    public final Builder setUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return super.setUnknownFields(unknownFields);
    }

    @java.lang.Override
    public final Builder mergeUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return super.mergeUnknownFields(unknownFields);
    }


    // @@protoc_insertion_point(builder_scope:envoy.type.v3.RateLimitStrategy)
  }

  // @@protoc_insertion_point(class_scope:envoy.type.v3.RateLimitStrategy)
  private static final io.envoyproxy.envoy.type.v3.RateLimitStrategy DEFAULT_INSTANCE;
  static {
    DEFAULT_INSTANCE = new io.envoyproxy.envoy.type.v3.RateLimitStrategy();
  }

  public static io.envoyproxy.envoy.type.v3.RateLimitStrategy getDefaultInstance() {
    return DEFAULT_INSTANCE;
  }

  private static final com.google.protobuf.Parser<RateLimitStrategy>
      PARSER = new com.google.protobuf.AbstractParser<RateLimitStrategy>() {
    @java.lang.Override
    public RateLimitStrategy parsePartialFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return new RateLimitStrategy(input, extensionRegistry);
    }
  };

  public static com.google.protobuf.Parser<RateLimitStrategy> parser() {
    return PARSER;
  }

  @java.lang.Override
  public com.google.protobuf.Parser<RateLimitStrategy> getParserForType() {
    return PARSER;
  }

  @java.lang.Override
  public io.envoyproxy.envoy.type.v3.RateLimitStrategy getDefaultInstanceForType() {
    return DEFAULT_INSTANCE;
  }

}

