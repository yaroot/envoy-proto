// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: envoy/type/matcher/string.proto

package io.envoyproxy.envoy.type.matcher;

/**
 * <pre>
 * Specifies the way to match a string.
 * [#next-free-field: 7]
 * </pre>
 *
 * Protobuf type {@code envoy.type.matcher.StringMatcher}
 */
public final class StringMatcher extends
    com.google.protobuf.GeneratedMessageV3 implements
    // @@protoc_insertion_point(message_implements:envoy.type.matcher.StringMatcher)
    StringMatcherOrBuilder {
private static final long serialVersionUID = 0L;
  // Use StringMatcher.newBuilder() to construct.
  private StringMatcher(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
    super(builder);
  }
  private StringMatcher() {
  }

  @java.lang.Override
  @SuppressWarnings({"unused"})
  protected java.lang.Object newInstance(
      UnusedPrivateParameter unused) {
    return new StringMatcher();
  }

  @java.lang.Override
  public final com.google.protobuf.UnknownFieldSet
  getUnknownFields() {
    return this.unknownFields;
  }
  private StringMatcher(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    this();
    if (extensionRegistry == null) {
      throw new java.lang.NullPointerException();
    }
    com.google.protobuf.UnknownFieldSet.Builder unknownFields =
        com.google.protobuf.UnknownFieldSet.newBuilder();
    try {
      boolean done = false;
      while (!done) {
        int tag = input.readTag();
        switch (tag) {
          case 0:
            done = true;
            break;
          case 10: {
            java.lang.String s = input.readStringRequireUtf8();
            matchPatternCase_ = 1;
            matchPattern_ = s;
            break;
          }
          case 18: {
            java.lang.String s = input.readStringRequireUtf8();
            matchPatternCase_ = 2;
            matchPattern_ = s;
            break;
          }
          case 26: {
            java.lang.String s = input.readStringRequireUtf8();
            matchPatternCase_ = 3;
            matchPattern_ = s;
            break;
          }
          case 34: {
            java.lang.String s = input.readStringRequireUtf8();
            matchPatternCase_ = 4;
            matchPattern_ = s;
            break;
          }
          case 42: {
            io.envoyproxy.envoy.type.matcher.RegexMatcher.Builder subBuilder = null;
            if (matchPatternCase_ == 5) {
              subBuilder = ((io.envoyproxy.envoy.type.matcher.RegexMatcher) matchPattern_).toBuilder();
            }
            matchPattern_ =
                input.readMessage(io.envoyproxy.envoy.type.matcher.RegexMatcher.parser(), extensionRegistry);
            if (subBuilder != null) {
              subBuilder.mergeFrom((io.envoyproxy.envoy.type.matcher.RegexMatcher) matchPattern_);
              matchPattern_ = subBuilder.buildPartial();
            }
            matchPatternCase_ = 5;
            break;
          }
          case 48: {

            ignoreCase_ = input.readBool();
            break;
          }
          default: {
            if (!parseUnknownField(
                input, unknownFields, extensionRegistry, tag)) {
              done = true;
            }
            break;
          }
        }
      }
    } catch (com.google.protobuf.InvalidProtocolBufferException e) {
      throw e.setUnfinishedMessage(this);
    } catch (com.google.protobuf.UninitializedMessageException e) {
      throw e.asInvalidProtocolBufferException().setUnfinishedMessage(this);
    } catch (java.io.IOException e) {
      throw new com.google.protobuf.InvalidProtocolBufferException(
          e).setUnfinishedMessage(this);
    } finally {
      this.unknownFields = unknownFields.build();
      makeExtensionsImmutable();
    }
  }
  public static final com.google.protobuf.Descriptors.Descriptor
      getDescriptor() {
    return io.envoyproxy.envoy.type.matcher.StringProto.internal_static_envoy_type_matcher_StringMatcher_descriptor;
  }

  @java.lang.Override
  protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internalGetFieldAccessorTable() {
    return io.envoyproxy.envoy.type.matcher.StringProto.internal_static_envoy_type_matcher_StringMatcher_fieldAccessorTable
        .ensureFieldAccessorsInitialized(
            io.envoyproxy.envoy.type.matcher.StringMatcher.class, io.envoyproxy.envoy.type.matcher.StringMatcher.Builder.class);
  }

  private int matchPatternCase_ = 0;
  private java.lang.Object matchPattern_;
  public enum MatchPatternCase
      implements com.google.protobuf.Internal.EnumLite,
          com.google.protobuf.AbstractMessage.InternalOneOfEnum {
    EXACT(1),
    PREFIX(2),
    SUFFIX(3),
    @java.lang.Deprecated REGEX(4),
    SAFE_REGEX(5),
    MATCHPATTERN_NOT_SET(0);
    private final int value;
    private MatchPatternCase(int value) {
      this.value = value;
    }
    /**
     * @param value The number of the enum to look for.
     * @return The enum associated with the given number.
     * @deprecated Use {@link #forNumber(int)} instead.
     */
    @java.lang.Deprecated
    public static MatchPatternCase valueOf(int value) {
      return forNumber(value);
    }

    public static MatchPatternCase forNumber(int value) {
      switch (value) {
        case 1: return EXACT;
        case 2: return PREFIX;
        case 3: return SUFFIX;
        case 4: return REGEX;
        case 5: return SAFE_REGEX;
        case 0: return MATCHPATTERN_NOT_SET;
        default: return null;
      }
    }
    public int getNumber() {
      return this.value;
    }
  };

  public MatchPatternCase
  getMatchPatternCase() {
    return MatchPatternCase.forNumber(
        matchPatternCase_);
  }

  public static final int EXACT_FIELD_NUMBER = 1;
  /**
   * <pre>
   * The input string must match exactly the string specified here.
   * Examples:
   * * *abc* only matches the value *abc*.
   * </pre>
   *
   * <code>string exact = 1;</code>
   * @return Whether the exact field is set.
   */
  public boolean hasExact() {
    return matchPatternCase_ == 1;
  }
  /**
   * <pre>
   * The input string must match exactly the string specified here.
   * Examples:
   * * *abc* only matches the value *abc*.
   * </pre>
   *
   * <code>string exact = 1;</code>
   * @return The exact.
   */
  public java.lang.String getExact() {
    java.lang.Object ref = "";
    if (matchPatternCase_ == 1) {
      ref = matchPattern_;
    }
    if (ref instanceof java.lang.String) {
      return (java.lang.String) ref;
    } else {
      com.google.protobuf.ByteString bs = 
          (com.google.protobuf.ByteString) ref;
      java.lang.String s = bs.toStringUtf8();
      if (matchPatternCase_ == 1) {
        matchPattern_ = s;
      }
      return s;
    }
  }
  /**
   * <pre>
   * The input string must match exactly the string specified here.
   * Examples:
   * * *abc* only matches the value *abc*.
   * </pre>
   *
   * <code>string exact = 1;</code>
   * @return The bytes for exact.
   */
  public com.google.protobuf.ByteString
      getExactBytes() {
    java.lang.Object ref = "";
    if (matchPatternCase_ == 1) {
      ref = matchPattern_;
    }
    if (ref instanceof java.lang.String) {
      com.google.protobuf.ByteString b = 
          com.google.protobuf.ByteString.copyFromUtf8(
              (java.lang.String) ref);
      if (matchPatternCase_ == 1) {
        matchPattern_ = b;
      }
      return b;
    } else {
      return (com.google.protobuf.ByteString) ref;
    }
  }

  public static final int PREFIX_FIELD_NUMBER = 2;
  /**
   * <pre>
   * The input string must have the prefix specified here.
   * Note: empty prefix is not allowed, please use regex instead.
   * Examples:
   * * *abc* matches the value *abc.xyz*
   * </pre>
   *
   * <code>string prefix = 2 [(.validate.rules) = { ... }</code>
   * @return Whether the prefix field is set.
   */
  public boolean hasPrefix() {
    return matchPatternCase_ == 2;
  }
  /**
   * <pre>
   * The input string must have the prefix specified here.
   * Note: empty prefix is not allowed, please use regex instead.
   * Examples:
   * * *abc* matches the value *abc.xyz*
   * </pre>
   *
   * <code>string prefix = 2 [(.validate.rules) = { ... }</code>
   * @return The prefix.
   */
  public java.lang.String getPrefix() {
    java.lang.Object ref = "";
    if (matchPatternCase_ == 2) {
      ref = matchPattern_;
    }
    if (ref instanceof java.lang.String) {
      return (java.lang.String) ref;
    } else {
      com.google.protobuf.ByteString bs = 
          (com.google.protobuf.ByteString) ref;
      java.lang.String s = bs.toStringUtf8();
      if (matchPatternCase_ == 2) {
        matchPattern_ = s;
      }
      return s;
    }
  }
  /**
   * <pre>
   * The input string must have the prefix specified here.
   * Note: empty prefix is not allowed, please use regex instead.
   * Examples:
   * * *abc* matches the value *abc.xyz*
   * </pre>
   *
   * <code>string prefix = 2 [(.validate.rules) = { ... }</code>
   * @return The bytes for prefix.
   */
  public com.google.protobuf.ByteString
      getPrefixBytes() {
    java.lang.Object ref = "";
    if (matchPatternCase_ == 2) {
      ref = matchPattern_;
    }
    if (ref instanceof java.lang.String) {
      com.google.protobuf.ByteString b = 
          com.google.protobuf.ByteString.copyFromUtf8(
              (java.lang.String) ref);
      if (matchPatternCase_ == 2) {
        matchPattern_ = b;
      }
      return b;
    } else {
      return (com.google.protobuf.ByteString) ref;
    }
  }

  public static final int SUFFIX_FIELD_NUMBER = 3;
  /**
   * <pre>
   * The input string must have the suffix specified here.
   * Note: empty prefix is not allowed, please use regex instead.
   * Examples:
   * * *abc* matches the value *xyz.abc*
   * </pre>
   *
   * <code>string suffix = 3 [(.validate.rules) = { ... }</code>
   * @return Whether the suffix field is set.
   */
  public boolean hasSuffix() {
    return matchPatternCase_ == 3;
  }
  /**
   * <pre>
   * The input string must have the suffix specified here.
   * Note: empty prefix is not allowed, please use regex instead.
   * Examples:
   * * *abc* matches the value *xyz.abc*
   * </pre>
   *
   * <code>string suffix = 3 [(.validate.rules) = { ... }</code>
   * @return The suffix.
   */
  public java.lang.String getSuffix() {
    java.lang.Object ref = "";
    if (matchPatternCase_ == 3) {
      ref = matchPattern_;
    }
    if (ref instanceof java.lang.String) {
      return (java.lang.String) ref;
    } else {
      com.google.protobuf.ByteString bs = 
          (com.google.protobuf.ByteString) ref;
      java.lang.String s = bs.toStringUtf8();
      if (matchPatternCase_ == 3) {
        matchPattern_ = s;
      }
      return s;
    }
  }
  /**
   * <pre>
   * The input string must have the suffix specified here.
   * Note: empty prefix is not allowed, please use regex instead.
   * Examples:
   * * *abc* matches the value *xyz.abc*
   * </pre>
   *
   * <code>string suffix = 3 [(.validate.rules) = { ... }</code>
   * @return The bytes for suffix.
   */
  public com.google.protobuf.ByteString
      getSuffixBytes() {
    java.lang.Object ref = "";
    if (matchPatternCase_ == 3) {
      ref = matchPattern_;
    }
    if (ref instanceof java.lang.String) {
      com.google.protobuf.ByteString b = 
          com.google.protobuf.ByteString.copyFromUtf8(
              (java.lang.String) ref);
      if (matchPatternCase_ == 3) {
        matchPattern_ = b;
      }
      return b;
    } else {
      return (com.google.protobuf.ByteString) ref;
    }
  }

  public static final int REGEX_FIELD_NUMBER = 4;
  /**
   * <pre>
   * The input string must match the regular expression specified here.
   * The regex grammar is defined `here
   * &lt;https://en.cppreference.com/w/cpp/regex/ecmascript&gt;`_.
   * Examples:
   * * The regex ``&#92;d{3}`` matches the value *123*
   * * The regex ``&#92;d{3}`` does not match the value *1234*
   * * The regex ``&#92;d{3}`` does not match the value *123.456*
   * .. attention::
   *   This field has been deprecated in favor of `safe_regex` as it is not safe for use with
   *   untrusted input in all cases.
   * </pre>
   *
   * <code>string regex = 4 [deprecated = true, (.validate.rules) = { ... }</code>
   * @deprecated envoy.type.matcher.StringMatcher.regex is deprecated.
   *     See envoy/type/matcher/string.proto;l=60
   * @return Whether the regex field is set.
   */
  @java.lang.Deprecated public boolean hasRegex() {
    return matchPatternCase_ == 4;
  }
  /**
   * <pre>
   * The input string must match the regular expression specified here.
   * The regex grammar is defined `here
   * &lt;https://en.cppreference.com/w/cpp/regex/ecmascript&gt;`_.
   * Examples:
   * * The regex ``&#92;d{3}`` matches the value *123*
   * * The regex ``&#92;d{3}`` does not match the value *1234*
   * * The regex ``&#92;d{3}`` does not match the value *123.456*
   * .. attention::
   *   This field has been deprecated in favor of `safe_regex` as it is not safe for use with
   *   untrusted input in all cases.
   * </pre>
   *
   * <code>string regex = 4 [deprecated = true, (.validate.rules) = { ... }</code>
   * @deprecated envoy.type.matcher.StringMatcher.regex is deprecated.
   *     See envoy/type/matcher/string.proto;l=60
   * @return The regex.
   */
  @java.lang.Deprecated public java.lang.String getRegex() {
    java.lang.Object ref = "";
    if (matchPatternCase_ == 4) {
      ref = matchPattern_;
    }
    if (ref instanceof java.lang.String) {
      return (java.lang.String) ref;
    } else {
      com.google.protobuf.ByteString bs = 
          (com.google.protobuf.ByteString) ref;
      java.lang.String s = bs.toStringUtf8();
      if (matchPatternCase_ == 4) {
        matchPattern_ = s;
      }
      return s;
    }
  }
  /**
   * <pre>
   * The input string must match the regular expression specified here.
   * The regex grammar is defined `here
   * &lt;https://en.cppreference.com/w/cpp/regex/ecmascript&gt;`_.
   * Examples:
   * * The regex ``&#92;d{3}`` matches the value *123*
   * * The regex ``&#92;d{3}`` does not match the value *1234*
   * * The regex ``&#92;d{3}`` does not match the value *123.456*
   * .. attention::
   *   This field has been deprecated in favor of `safe_regex` as it is not safe for use with
   *   untrusted input in all cases.
   * </pre>
   *
   * <code>string regex = 4 [deprecated = true, (.validate.rules) = { ... }</code>
   * @deprecated envoy.type.matcher.StringMatcher.regex is deprecated.
   *     See envoy/type/matcher/string.proto;l=60
   * @return The bytes for regex.
   */
  @java.lang.Deprecated public com.google.protobuf.ByteString
      getRegexBytes() {
    java.lang.Object ref = "";
    if (matchPatternCase_ == 4) {
      ref = matchPattern_;
    }
    if (ref instanceof java.lang.String) {
      com.google.protobuf.ByteString b = 
          com.google.protobuf.ByteString.copyFromUtf8(
              (java.lang.String) ref);
      if (matchPatternCase_ == 4) {
        matchPattern_ = b;
      }
      return b;
    } else {
      return (com.google.protobuf.ByteString) ref;
    }
  }

  public static final int SAFE_REGEX_FIELD_NUMBER = 5;
  /**
   * <pre>
   * The input string must match the regular expression specified here.
   * </pre>
   *
   * <code>.envoy.type.matcher.RegexMatcher safe_regex = 5 [(.validate.rules) = { ... }</code>
   * @return Whether the safeRegex field is set.
   */
  @java.lang.Override
  public boolean hasSafeRegex() {
    return matchPatternCase_ == 5;
  }
  /**
   * <pre>
   * The input string must match the regular expression specified here.
   * </pre>
   *
   * <code>.envoy.type.matcher.RegexMatcher safe_regex = 5 [(.validate.rules) = { ... }</code>
   * @return The safeRegex.
   */
  @java.lang.Override
  public io.envoyproxy.envoy.type.matcher.RegexMatcher getSafeRegex() {
    if (matchPatternCase_ == 5) {
       return (io.envoyproxy.envoy.type.matcher.RegexMatcher) matchPattern_;
    }
    return io.envoyproxy.envoy.type.matcher.RegexMatcher.getDefaultInstance();
  }
  /**
   * <pre>
   * The input string must match the regular expression specified here.
   * </pre>
   *
   * <code>.envoy.type.matcher.RegexMatcher safe_regex = 5 [(.validate.rules) = { ... }</code>
   */
  @java.lang.Override
  public io.envoyproxy.envoy.type.matcher.RegexMatcherOrBuilder getSafeRegexOrBuilder() {
    if (matchPatternCase_ == 5) {
       return (io.envoyproxy.envoy.type.matcher.RegexMatcher) matchPattern_;
    }
    return io.envoyproxy.envoy.type.matcher.RegexMatcher.getDefaultInstance();
  }

  public static final int IGNORE_CASE_FIELD_NUMBER = 6;
  private boolean ignoreCase_;
  /**
   * <pre>
   * If true, indicates the exact/prefix/suffix matching should be case insensitive. This has no
   * effect for the safe_regex match.
   * For example, the matcher *data* will match both input string *Data* and *data* if set to true.
   * </pre>
   *
   * <code>bool ignore_case = 6;</code>
   * @return The ignoreCase.
   */
  @java.lang.Override
  public boolean getIgnoreCase() {
    return ignoreCase_;
  }

  private byte memoizedIsInitialized = -1;
  @java.lang.Override
  public final boolean isInitialized() {
    byte isInitialized = memoizedIsInitialized;
    if (isInitialized == 1) return true;
    if (isInitialized == 0) return false;

    memoizedIsInitialized = 1;
    return true;
  }

  @java.lang.Override
  public void writeTo(com.google.protobuf.CodedOutputStream output)
                      throws java.io.IOException {
    if (matchPatternCase_ == 1) {
      com.google.protobuf.GeneratedMessageV3.writeString(output, 1, matchPattern_);
    }
    if (matchPatternCase_ == 2) {
      com.google.protobuf.GeneratedMessageV3.writeString(output, 2, matchPattern_);
    }
    if (matchPatternCase_ == 3) {
      com.google.protobuf.GeneratedMessageV3.writeString(output, 3, matchPattern_);
    }
    if (matchPatternCase_ == 4) {
      com.google.protobuf.GeneratedMessageV3.writeString(output, 4, matchPattern_);
    }
    if (matchPatternCase_ == 5) {
      output.writeMessage(5, (io.envoyproxy.envoy.type.matcher.RegexMatcher) matchPattern_);
    }
    if (ignoreCase_ != false) {
      output.writeBool(6, ignoreCase_);
    }
    unknownFields.writeTo(output);
  }

  @java.lang.Override
  public int getSerializedSize() {
    int size = memoizedSize;
    if (size != -1) return size;

    size = 0;
    if (matchPatternCase_ == 1) {
      size += com.google.protobuf.GeneratedMessageV3.computeStringSize(1, matchPattern_);
    }
    if (matchPatternCase_ == 2) {
      size += com.google.protobuf.GeneratedMessageV3.computeStringSize(2, matchPattern_);
    }
    if (matchPatternCase_ == 3) {
      size += com.google.protobuf.GeneratedMessageV3.computeStringSize(3, matchPattern_);
    }
    if (matchPatternCase_ == 4) {
      size += com.google.protobuf.GeneratedMessageV3.computeStringSize(4, matchPattern_);
    }
    if (matchPatternCase_ == 5) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(5, (io.envoyproxy.envoy.type.matcher.RegexMatcher) matchPattern_);
    }
    if (ignoreCase_ != false) {
      size += com.google.protobuf.CodedOutputStream
        .computeBoolSize(6, ignoreCase_);
    }
    size += unknownFields.getSerializedSize();
    memoizedSize = size;
    return size;
  }

  @java.lang.Override
  public boolean equals(final java.lang.Object obj) {
    if (obj == this) {
     return true;
    }
    if (!(obj instanceof io.envoyproxy.envoy.type.matcher.StringMatcher)) {
      return super.equals(obj);
    }
    io.envoyproxy.envoy.type.matcher.StringMatcher other = (io.envoyproxy.envoy.type.matcher.StringMatcher) obj;

    if (getIgnoreCase()
        != other.getIgnoreCase()) return false;
    if (!getMatchPatternCase().equals(other.getMatchPatternCase())) return false;
    switch (matchPatternCase_) {
      case 1:
        if (!getExact()
            .equals(other.getExact())) return false;
        break;
      case 2:
        if (!getPrefix()
            .equals(other.getPrefix())) return false;
        break;
      case 3:
        if (!getSuffix()
            .equals(other.getSuffix())) return false;
        break;
      case 4:
        if (!getRegex()
            .equals(other.getRegex())) return false;
        break;
      case 5:
        if (!getSafeRegex()
            .equals(other.getSafeRegex())) return false;
        break;
      case 0:
      default:
    }
    if (!unknownFields.equals(other.unknownFields)) return false;
    return true;
  }

  @java.lang.Override
  public int hashCode() {
    if (memoizedHashCode != 0) {
      return memoizedHashCode;
    }
    int hash = 41;
    hash = (19 * hash) + getDescriptor().hashCode();
    hash = (37 * hash) + IGNORE_CASE_FIELD_NUMBER;
    hash = (53 * hash) + com.google.protobuf.Internal.hashBoolean(
        getIgnoreCase());
    switch (matchPatternCase_) {
      case 1:
        hash = (37 * hash) + EXACT_FIELD_NUMBER;
        hash = (53 * hash) + getExact().hashCode();
        break;
      case 2:
        hash = (37 * hash) + PREFIX_FIELD_NUMBER;
        hash = (53 * hash) + getPrefix().hashCode();
        break;
      case 3:
        hash = (37 * hash) + SUFFIX_FIELD_NUMBER;
        hash = (53 * hash) + getSuffix().hashCode();
        break;
      case 4:
        hash = (37 * hash) + REGEX_FIELD_NUMBER;
        hash = (53 * hash) + getRegex().hashCode();
        break;
      case 5:
        hash = (37 * hash) + SAFE_REGEX_FIELD_NUMBER;
        hash = (53 * hash) + getSafeRegex().hashCode();
        break;
      case 0:
      default:
    }
    hash = (29 * hash) + unknownFields.hashCode();
    memoizedHashCode = hash;
    return hash;
  }

  public static io.envoyproxy.envoy.type.matcher.StringMatcher parseFrom(
      java.nio.ByteBuffer data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static io.envoyproxy.envoy.type.matcher.StringMatcher parseFrom(
      java.nio.ByteBuffer data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static io.envoyproxy.envoy.type.matcher.StringMatcher parseFrom(
      com.google.protobuf.ByteString data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static io.envoyproxy.envoy.type.matcher.StringMatcher parseFrom(
      com.google.protobuf.ByteString data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static io.envoyproxy.envoy.type.matcher.StringMatcher parseFrom(byte[] data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static io.envoyproxy.envoy.type.matcher.StringMatcher parseFrom(
      byte[] data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static io.envoyproxy.envoy.type.matcher.StringMatcher parseFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input);
  }
  public static io.envoyproxy.envoy.type.matcher.StringMatcher parseFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input, extensionRegistry);
  }
  public static io.envoyproxy.envoy.type.matcher.StringMatcher parseDelimitedFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseDelimitedWithIOException(PARSER, input);
  }
  public static io.envoyproxy.envoy.type.matcher.StringMatcher parseDelimitedFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
  }
  public static io.envoyproxy.envoy.type.matcher.StringMatcher parseFrom(
      com.google.protobuf.CodedInputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input);
  }
  public static io.envoyproxy.envoy.type.matcher.StringMatcher parseFrom(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input, extensionRegistry);
  }

  @java.lang.Override
  public Builder newBuilderForType() { return newBuilder(); }
  public static Builder newBuilder() {
    return DEFAULT_INSTANCE.toBuilder();
  }
  public static Builder newBuilder(io.envoyproxy.envoy.type.matcher.StringMatcher prototype) {
    return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
  }
  @java.lang.Override
  public Builder toBuilder() {
    return this == DEFAULT_INSTANCE
        ? new Builder() : new Builder().mergeFrom(this);
  }

  @java.lang.Override
  protected Builder newBuilderForType(
      com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
    Builder builder = new Builder(parent);
    return builder;
  }
  /**
   * <pre>
   * Specifies the way to match a string.
   * [#next-free-field: 7]
   * </pre>
   *
   * Protobuf type {@code envoy.type.matcher.StringMatcher}
   */
  public static final class Builder extends
      com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
      // @@protoc_insertion_point(builder_implements:envoy.type.matcher.StringMatcher)
      io.envoyproxy.envoy.type.matcher.StringMatcherOrBuilder {
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return io.envoyproxy.envoy.type.matcher.StringProto.internal_static_envoy_type_matcher_StringMatcher_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return io.envoyproxy.envoy.type.matcher.StringProto.internal_static_envoy_type_matcher_StringMatcher_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              io.envoyproxy.envoy.type.matcher.StringMatcher.class, io.envoyproxy.envoy.type.matcher.StringMatcher.Builder.class);
    }

    // Construct using io.envoyproxy.envoy.type.matcher.StringMatcher.newBuilder()
    private Builder() {
      maybeForceBuilderInitialization();
    }

    private Builder(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      super(parent);
      maybeForceBuilderInitialization();
    }
    private void maybeForceBuilderInitialization() {
      if (com.google.protobuf.GeneratedMessageV3
              .alwaysUseFieldBuilders) {
      }
    }
    @java.lang.Override
    public Builder clear() {
      super.clear();
      ignoreCase_ = false;

      matchPatternCase_ = 0;
      matchPattern_ = null;
      return this;
    }

    @java.lang.Override
    public com.google.protobuf.Descriptors.Descriptor
        getDescriptorForType() {
      return io.envoyproxy.envoy.type.matcher.StringProto.internal_static_envoy_type_matcher_StringMatcher_descriptor;
    }

    @java.lang.Override
    public io.envoyproxy.envoy.type.matcher.StringMatcher getDefaultInstanceForType() {
      return io.envoyproxy.envoy.type.matcher.StringMatcher.getDefaultInstance();
    }

    @java.lang.Override
    public io.envoyproxy.envoy.type.matcher.StringMatcher build() {
      io.envoyproxy.envoy.type.matcher.StringMatcher result = buildPartial();
      if (!result.isInitialized()) {
        throw newUninitializedMessageException(result);
      }
      return result;
    }

    @java.lang.Override
    public io.envoyproxy.envoy.type.matcher.StringMatcher buildPartial() {
      io.envoyproxy.envoy.type.matcher.StringMatcher result = new io.envoyproxy.envoy.type.matcher.StringMatcher(this);
      if (matchPatternCase_ == 1) {
        result.matchPattern_ = matchPattern_;
      }
      if (matchPatternCase_ == 2) {
        result.matchPattern_ = matchPattern_;
      }
      if (matchPatternCase_ == 3) {
        result.matchPattern_ = matchPattern_;
      }
      if (matchPatternCase_ == 4) {
        result.matchPattern_ = matchPattern_;
      }
      if (matchPatternCase_ == 5) {
        if (safeRegexBuilder_ == null) {
          result.matchPattern_ = matchPattern_;
        } else {
          result.matchPattern_ = safeRegexBuilder_.build();
        }
      }
      result.ignoreCase_ = ignoreCase_;
      result.matchPatternCase_ = matchPatternCase_;
      onBuilt();
      return result;
    }

    @java.lang.Override
    public Builder clone() {
      return super.clone();
    }
    @java.lang.Override
    public Builder setField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        java.lang.Object value) {
      return super.setField(field, value);
    }
    @java.lang.Override
    public Builder clearField(
        com.google.protobuf.Descriptors.FieldDescriptor field) {
      return super.clearField(field);
    }
    @java.lang.Override
    public Builder clearOneof(
        com.google.protobuf.Descriptors.OneofDescriptor oneof) {
      return super.clearOneof(oneof);
    }
    @java.lang.Override
    public Builder setRepeatedField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        int index, java.lang.Object value) {
      return super.setRepeatedField(field, index, value);
    }
    @java.lang.Override
    public Builder addRepeatedField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        java.lang.Object value) {
      return super.addRepeatedField(field, value);
    }
    @java.lang.Override
    public Builder mergeFrom(com.google.protobuf.Message other) {
      if (other instanceof io.envoyproxy.envoy.type.matcher.StringMatcher) {
        return mergeFrom((io.envoyproxy.envoy.type.matcher.StringMatcher)other);
      } else {
        super.mergeFrom(other);
        return this;
      }
    }

    public Builder mergeFrom(io.envoyproxy.envoy.type.matcher.StringMatcher other) {
      if (other == io.envoyproxy.envoy.type.matcher.StringMatcher.getDefaultInstance()) return this;
      if (other.getIgnoreCase() != false) {
        setIgnoreCase(other.getIgnoreCase());
      }
      switch (other.getMatchPatternCase()) {
        case EXACT: {
          matchPatternCase_ = 1;
          matchPattern_ = other.matchPattern_;
          onChanged();
          break;
        }
        case PREFIX: {
          matchPatternCase_ = 2;
          matchPattern_ = other.matchPattern_;
          onChanged();
          break;
        }
        case SUFFIX: {
          matchPatternCase_ = 3;
          matchPattern_ = other.matchPattern_;
          onChanged();
          break;
        }
        case REGEX: {
          matchPatternCase_ = 4;
          matchPattern_ = other.matchPattern_;
          onChanged();
          break;
        }
        case SAFE_REGEX: {
          mergeSafeRegex(other.getSafeRegex());
          break;
        }
        case MATCHPATTERN_NOT_SET: {
          break;
        }
      }
      this.mergeUnknownFields(other.unknownFields);
      onChanged();
      return this;
    }

    @java.lang.Override
    public final boolean isInitialized() {
      return true;
    }

    @java.lang.Override
    public Builder mergeFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      io.envoyproxy.envoy.type.matcher.StringMatcher parsedMessage = null;
      try {
        parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        parsedMessage = (io.envoyproxy.envoy.type.matcher.StringMatcher) e.getUnfinishedMessage();
        throw e.unwrapIOException();
      } finally {
        if (parsedMessage != null) {
          mergeFrom(parsedMessage);
        }
      }
      return this;
    }
    private int matchPatternCase_ = 0;
    private java.lang.Object matchPattern_;
    public MatchPatternCase
        getMatchPatternCase() {
      return MatchPatternCase.forNumber(
          matchPatternCase_);
    }

    public Builder clearMatchPattern() {
      matchPatternCase_ = 0;
      matchPattern_ = null;
      onChanged();
      return this;
    }


    /**
     * <pre>
     * The input string must match exactly the string specified here.
     * Examples:
     * * *abc* only matches the value *abc*.
     * </pre>
     *
     * <code>string exact = 1;</code>
     * @return Whether the exact field is set.
     */
    @java.lang.Override
    public boolean hasExact() {
      return matchPatternCase_ == 1;
    }
    /**
     * <pre>
     * The input string must match exactly the string specified here.
     * Examples:
     * * *abc* only matches the value *abc*.
     * </pre>
     *
     * <code>string exact = 1;</code>
     * @return The exact.
     */
    @java.lang.Override
    public java.lang.String getExact() {
      java.lang.Object ref = "";
      if (matchPatternCase_ == 1) {
        ref = matchPattern_;
      }
      if (!(ref instanceof java.lang.String)) {
        com.google.protobuf.ByteString bs =
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (matchPatternCase_ == 1) {
          matchPattern_ = s;
        }
        return s;
      } else {
        return (java.lang.String) ref;
      }
    }
    /**
     * <pre>
     * The input string must match exactly the string specified here.
     * Examples:
     * * *abc* only matches the value *abc*.
     * </pre>
     *
     * <code>string exact = 1;</code>
     * @return The bytes for exact.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString
        getExactBytes() {
      java.lang.Object ref = "";
      if (matchPatternCase_ == 1) {
        ref = matchPattern_;
      }
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        if (matchPatternCase_ == 1) {
          matchPattern_ = b;
        }
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }
    /**
     * <pre>
     * The input string must match exactly the string specified here.
     * Examples:
     * * *abc* only matches the value *abc*.
     * </pre>
     *
     * <code>string exact = 1;</code>
     * @param value The exact to set.
     * @return This builder for chaining.
     */
    public Builder setExact(
        java.lang.String value) {
      if (value == null) {
    throw new NullPointerException();
  }
  matchPatternCase_ = 1;
      matchPattern_ = value;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * The input string must match exactly the string specified here.
     * Examples:
     * * *abc* only matches the value *abc*.
     * </pre>
     *
     * <code>string exact = 1;</code>
     * @return This builder for chaining.
     */
    public Builder clearExact() {
      if (matchPatternCase_ == 1) {
        matchPatternCase_ = 0;
        matchPattern_ = null;
        onChanged();
      }
      return this;
    }
    /**
     * <pre>
     * The input string must match exactly the string specified here.
     * Examples:
     * * *abc* only matches the value *abc*.
     * </pre>
     *
     * <code>string exact = 1;</code>
     * @param value The bytes for exact to set.
     * @return This builder for chaining.
     */
    public Builder setExactBytes(
        com.google.protobuf.ByteString value) {
      if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
      matchPatternCase_ = 1;
      matchPattern_ = value;
      onChanged();
      return this;
    }

    /**
     * <pre>
     * The input string must have the prefix specified here.
     * Note: empty prefix is not allowed, please use regex instead.
     * Examples:
     * * *abc* matches the value *abc.xyz*
     * </pre>
     *
     * <code>string prefix = 2 [(.validate.rules) = { ... }</code>
     * @return Whether the prefix field is set.
     */
    @java.lang.Override
    public boolean hasPrefix() {
      return matchPatternCase_ == 2;
    }
    /**
     * <pre>
     * The input string must have the prefix specified here.
     * Note: empty prefix is not allowed, please use regex instead.
     * Examples:
     * * *abc* matches the value *abc.xyz*
     * </pre>
     *
     * <code>string prefix = 2 [(.validate.rules) = { ... }</code>
     * @return The prefix.
     */
    @java.lang.Override
    public java.lang.String getPrefix() {
      java.lang.Object ref = "";
      if (matchPatternCase_ == 2) {
        ref = matchPattern_;
      }
      if (!(ref instanceof java.lang.String)) {
        com.google.protobuf.ByteString bs =
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (matchPatternCase_ == 2) {
          matchPattern_ = s;
        }
        return s;
      } else {
        return (java.lang.String) ref;
      }
    }
    /**
     * <pre>
     * The input string must have the prefix specified here.
     * Note: empty prefix is not allowed, please use regex instead.
     * Examples:
     * * *abc* matches the value *abc.xyz*
     * </pre>
     *
     * <code>string prefix = 2 [(.validate.rules) = { ... }</code>
     * @return The bytes for prefix.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString
        getPrefixBytes() {
      java.lang.Object ref = "";
      if (matchPatternCase_ == 2) {
        ref = matchPattern_;
      }
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        if (matchPatternCase_ == 2) {
          matchPattern_ = b;
        }
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }
    /**
     * <pre>
     * The input string must have the prefix specified here.
     * Note: empty prefix is not allowed, please use regex instead.
     * Examples:
     * * *abc* matches the value *abc.xyz*
     * </pre>
     *
     * <code>string prefix = 2 [(.validate.rules) = { ... }</code>
     * @param value The prefix to set.
     * @return This builder for chaining.
     */
    public Builder setPrefix(
        java.lang.String value) {
      if (value == null) {
    throw new NullPointerException();
  }
  matchPatternCase_ = 2;
      matchPattern_ = value;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * The input string must have the prefix specified here.
     * Note: empty prefix is not allowed, please use regex instead.
     * Examples:
     * * *abc* matches the value *abc.xyz*
     * </pre>
     *
     * <code>string prefix = 2 [(.validate.rules) = { ... }</code>
     * @return This builder for chaining.
     */
    public Builder clearPrefix() {
      if (matchPatternCase_ == 2) {
        matchPatternCase_ = 0;
        matchPattern_ = null;
        onChanged();
      }
      return this;
    }
    /**
     * <pre>
     * The input string must have the prefix specified here.
     * Note: empty prefix is not allowed, please use regex instead.
     * Examples:
     * * *abc* matches the value *abc.xyz*
     * </pre>
     *
     * <code>string prefix = 2 [(.validate.rules) = { ... }</code>
     * @param value The bytes for prefix to set.
     * @return This builder for chaining.
     */
    public Builder setPrefixBytes(
        com.google.protobuf.ByteString value) {
      if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
      matchPatternCase_ = 2;
      matchPattern_ = value;
      onChanged();
      return this;
    }

    /**
     * <pre>
     * The input string must have the suffix specified here.
     * Note: empty prefix is not allowed, please use regex instead.
     * Examples:
     * * *abc* matches the value *xyz.abc*
     * </pre>
     *
     * <code>string suffix = 3 [(.validate.rules) = { ... }</code>
     * @return Whether the suffix field is set.
     */
    @java.lang.Override
    public boolean hasSuffix() {
      return matchPatternCase_ == 3;
    }
    /**
     * <pre>
     * The input string must have the suffix specified here.
     * Note: empty prefix is not allowed, please use regex instead.
     * Examples:
     * * *abc* matches the value *xyz.abc*
     * </pre>
     *
     * <code>string suffix = 3 [(.validate.rules) = { ... }</code>
     * @return The suffix.
     */
    @java.lang.Override
    public java.lang.String getSuffix() {
      java.lang.Object ref = "";
      if (matchPatternCase_ == 3) {
        ref = matchPattern_;
      }
      if (!(ref instanceof java.lang.String)) {
        com.google.protobuf.ByteString bs =
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (matchPatternCase_ == 3) {
          matchPattern_ = s;
        }
        return s;
      } else {
        return (java.lang.String) ref;
      }
    }
    /**
     * <pre>
     * The input string must have the suffix specified here.
     * Note: empty prefix is not allowed, please use regex instead.
     * Examples:
     * * *abc* matches the value *xyz.abc*
     * </pre>
     *
     * <code>string suffix = 3 [(.validate.rules) = { ... }</code>
     * @return The bytes for suffix.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString
        getSuffixBytes() {
      java.lang.Object ref = "";
      if (matchPatternCase_ == 3) {
        ref = matchPattern_;
      }
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        if (matchPatternCase_ == 3) {
          matchPattern_ = b;
        }
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }
    /**
     * <pre>
     * The input string must have the suffix specified here.
     * Note: empty prefix is not allowed, please use regex instead.
     * Examples:
     * * *abc* matches the value *xyz.abc*
     * </pre>
     *
     * <code>string suffix = 3 [(.validate.rules) = { ... }</code>
     * @param value The suffix to set.
     * @return This builder for chaining.
     */
    public Builder setSuffix(
        java.lang.String value) {
      if (value == null) {
    throw new NullPointerException();
  }
  matchPatternCase_ = 3;
      matchPattern_ = value;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * The input string must have the suffix specified here.
     * Note: empty prefix is not allowed, please use regex instead.
     * Examples:
     * * *abc* matches the value *xyz.abc*
     * </pre>
     *
     * <code>string suffix = 3 [(.validate.rules) = { ... }</code>
     * @return This builder for chaining.
     */
    public Builder clearSuffix() {
      if (matchPatternCase_ == 3) {
        matchPatternCase_ = 0;
        matchPattern_ = null;
        onChanged();
      }
      return this;
    }
    /**
     * <pre>
     * The input string must have the suffix specified here.
     * Note: empty prefix is not allowed, please use regex instead.
     * Examples:
     * * *abc* matches the value *xyz.abc*
     * </pre>
     *
     * <code>string suffix = 3 [(.validate.rules) = { ... }</code>
     * @param value The bytes for suffix to set.
     * @return This builder for chaining.
     */
    public Builder setSuffixBytes(
        com.google.protobuf.ByteString value) {
      if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
      matchPatternCase_ = 3;
      matchPattern_ = value;
      onChanged();
      return this;
    }

    /**
     * <pre>
     * The input string must match the regular expression specified here.
     * The regex grammar is defined `here
     * &lt;https://en.cppreference.com/w/cpp/regex/ecmascript&gt;`_.
     * Examples:
     * * The regex ``&#92;d{3}`` matches the value *123*
     * * The regex ``&#92;d{3}`` does not match the value *1234*
     * * The regex ``&#92;d{3}`` does not match the value *123.456*
     * .. attention::
     *   This field has been deprecated in favor of `safe_regex` as it is not safe for use with
     *   untrusted input in all cases.
     * </pre>
     *
     * <code>string regex = 4 [deprecated = true, (.validate.rules) = { ... }</code>
     * @deprecated envoy.type.matcher.StringMatcher.regex is deprecated.
     *     See envoy/type/matcher/string.proto;l=60
     * @return Whether the regex field is set.
     */
    @java.lang.Override
    @java.lang.Deprecated public boolean hasRegex() {
      return matchPatternCase_ == 4;
    }
    /**
     * <pre>
     * The input string must match the regular expression specified here.
     * The regex grammar is defined `here
     * &lt;https://en.cppreference.com/w/cpp/regex/ecmascript&gt;`_.
     * Examples:
     * * The regex ``&#92;d{3}`` matches the value *123*
     * * The regex ``&#92;d{3}`` does not match the value *1234*
     * * The regex ``&#92;d{3}`` does not match the value *123.456*
     * .. attention::
     *   This field has been deprecated in favor of `safe_regex` as it is not safe for use with
     *   untrusted input in all cases.
     * </pre>
     *
     * <code>string regex = 4 [deprecated = true, (.validate.rules) = { ... }</code>
     * @deprecated envoy.type.matcher.StringMatcher.regex is deprecated.
     *     See envoy/type/matcher/string.proto;l=60
     * @return The regex.
     */
    @java.lang.Override
    @java.lang.Deprecated public java.lang.String getRegex() {
      java.lang.Object ref = "";
      if (matchPatternCase_ == 4) {
        ref = matchPattern_;
      }
      if (!(ref instanceof java.lang.String)) {
        com.google.protobuf.ByteString bs =
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (matchPatternCase_ == 4) {
          matchPattern_ = s;
        }
        return s;
      } else {
        return (java.lang.String) ref;
      }
    }
    /**
     * <pre>
     * The input string must match the regular expression specified here.
     * The regex grammar is defined `here
     * &lt;https://en.cppreference.com/w/cpp/regex/ecmascript&gt;`_.
     * Examples:
     * * The regex ``&#92;d{3}`` matches the value *123*
     * * The regex ``&#92;d{3}`` does not match the value *1234*
     * * The regex ``&#92;d{3}`` does not match the value *123.456*
     * .. attention::
     *   This field has been deprecated in favor of `safe_regex` as it is not safe for use with
     *   untrusted input in all cases.
     * </pre>
     *
     * <code>string regex = 4 [deprecated = true, (.validate.rules) = { ... }</code>
     * @deprecated envoy.type.matcher.StringMatcher.regex is deprecated.
     *     See envoy/type/matcher/string.proto;l=60
     * @return The bytes for regex.
     */
    @java.lang.Override
    @java.lang.Deprecated public com.google.protobuf.ByteString
        getRegexBytes() {
      java.lang.Object ref = "";
      if (matchPatternCase_ == 4) {
        ref = matchPattern_;
      }
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        if (matchPatternCase_ == 4) {
          matchPattern_ = b;
        }
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }
    /**
     * <pre>
     * The input string must match the regular expression specified here.
     * The regex grammar is defined `here
     * &lt;https://en.cppreference.com/w/cpp/regex/ecmascript&gt;`_.
     * Examples:
     * * The regex ``&#92;d{3}`` matches the value *123*
     * * The regex ``&#92;d{3}`` does not match the value *1234*
     * * The regex ``&#92;d{3}`` does not match the value *123.456*
     * .. attention::
     *   This field has been deprecated in favor of `safe_regex` as it is not safe for use with
     *   untrusted input in all cases.
     * </pre>
     *
     * <code>string regex = 4 [deprecated = true, (.validate.rules) = { ... }</code>
     * @deprecated envoy.type.matcher.StringMatcher.regex is deprecated.
     *     See envoy/type/matcher/string.proto;l=60
     * @param value The regex to set.
     * @return This builder for chaining.
     */
    @java.lang.Deprecated public Builder setRegex(
        java.lang.String value) {
      if (value == null) {
    throw new NullPointerException();
  }
  matchPatternCase_ = 4;
      matchPattern_ = value;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * The input string must match the regular expression specified here.
     * The regex grammar is defined `here
     * &lt;https://en.cppreference.com/w/cpp/regex/ecmascript&gt;`_.
     * Examples:
     * * The regex ``&#92;d{3}`` matches the value *123*
     * * The regex ``&#92;d{3}`` does not match the value *1234*
     * * The regex ``&#92;d{3}`` does not match the value *123.456*
     * .. attention::
     *   This field has been deprecated in favor of `safe_regex` as it is not safe for use with
     *   untrusted input in all cases.
     * </pre>
     *
     * <code>string regex = 4 [deprecated = true, (.validate.rules) = { ... }</code>
     * @deprecated envoy.type.matcher.StringMatcher.regex is deprecated.
     *     See envoy/type/matcher/string.proto;l=60
     * @return This builder for chaining.
     */
    @java.lang.Deprecated public Builder clearRegex() {
      if (matchPatternCase_ == 4) {
        matchPatternCase_ = 0;
        matchPattern_ = null;
        onChanged();
      }
      return this;
    }
    /**
     * <pre>
     * The input string must match the regular expression specified here.
     * The regex grammar is defined `here
     * &lt;https://en.cppreference.com/w/cpp/regex/ecmascript&gt;`_.
     * Examples:
     * * The regex ``&#92;d{3}`` matches the value *123*
     * * The regex ``&#92;d{3}`` does not match the value *1234*
     * * The regex ``&#92;d{3}`` does not match the value *123.456*
     * .. attention::
     *   This field has been deprecated in favor of `safe_regex` as it is not safe for use with
     *   untrusted input in all cases.
     * </pre>
     *
     * <code>string regex = 4 [deprecated = true, (.validate.rules) = { ... }</code>
     * @deprecated envoy.type.matcher.StringMatcher.regex is deprecated.
     *     See envoy/type/matcher/string.proto;l=60
     * @param value The bytes for regex to set.
     * @return This builder for chaining.
     */
    @java.lang.Deprecated public Builder setRegexBytes(
        com.google.protobuf.ByteString value) {
      if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
      matchPatternCase_ = 4;
      matchPattern_ = value;
      onChanged();
      return this;
    }

    private com.google.protobuf.SingleFieldBuilderV3<
        io.envoyproxy.envoy.type.matcher.RegexMatcher, io.envoyproxy.envoy.type.matcher.RegexMatcher.Builder, io.envoyproxy.envoy.type.matcher.RegexMatcherOrBuilder> safeRegexBuilder_;
    /**
     * <pre>
     * The input string must match the regular expression specified here.
     * </pre>
     *
     * <code>.envoy.type.matcher.RegexMatcher safe_regex = 5 [(.validate.rules) = { ... }</code>
     * @return Whether the safeRegex field is set.
     */
    @java.lang.Override
    public boolean hasSafeRegex() {
      return matchPatternCase_ == 5;
    }
    /**
     * <pre>
     * The input string must match the regular expression specified here.
     * </pre>
     *
     * <code>.envoy.type.matcher.RegexMatcher safe_regex = 5 [(.validate.rules) = { ... }</code>
     * @return The safeRegex.
     */
    @java.lang.Override
    public io.envoyproxy.envoy.type.matcher.RegexMatcher getSafeRegex() {
      if (safeRegexBuilder_ == null) {
        if (matchPatternCase_ == 5) {
          return (io.envoyproxy.envoy.type.matcher.RegexMatcher) matchPattern_;
        }
        return io.envoyproxy.envoy.type.matcher.RegexMatcher.getDefaultInstance();
      } else {
        if (matchPatternCase_ == 5) {
          return safeRegexBuilder_.getMessage();
        }
        return io.envoyproxy.envoy.type.matcher.RegexMatcher.getDefaultInstance();
      }
    }
    /**
     * <pre>
     * The input string must match the regular expression specified here.
     * </pre>
     *
     * <code>.envoy.type.matcher.RegexMatcher safe_regex = 5 [(.validate.rules) = { ... }</code>
     */
    public Builder setSafeRegex(io.envoyproxy.envoy.type.matcher.RegexMatcher value) {
      if (safeRegexBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        matchPattern_ = value;
        onChanged();
      } else {
        safeRegexBuilder_.setMessage(value);
      }
      matchPatternCase_ = 5;
      return this;
    }
    /**
     * <pre>
     * The input string must match the regular expression specified here.
     * </pre>
     *
     * <code>.envoy.type.matcher.RegexMatcher safe_regex = 5 [(.validate.rules) = { ... }</code>
     */
    public Builder setSafeRegex(
        io.envoyproxy.envoy.type.matcher.RegexMatcher.Builder builderForValue) {
      if (safeRegexBuilder_ == null) {
        matchPattern_ = builderForValue.build();
        onChanged();
      } else {
        safeRegexBuilder_.setMessage(builderForValue.build());
      }
      matchPatternCase_ = 5;
      return this;
    }
    /**
     * <pre>
     * The input string must match the regular expression specified here.
     * </pre>
     *
     * <code>.envoy.type.matcher.RegexMatcher safe_regex = 5 [(.validate.rules) = { ... }</code>
     */
    public Builder mergeSafeRegex(io.envoyproxy.envoy.type.matcher.RegexMatcher value) {
      if (safeRegexBuilder_ == null) {
        if (matchPatternCase_ == 5 &&
            matchPattern_ != io.envoyproxy.envoy.type.matcher.RegexMatcher.getDefaultInstance()) {
          matchPattern_ = io.envoyproxy.envoy.type.matcher.RegexMatcher.newBuilder((io.envoyproxy.envoy.type.matcher.RegexMatcher) matchPattern_)
              .mergeFrom(value).buildPartial();
        } else {
          matchPattern_ = value;
        }
        onChanged();
      } else {
        if (matchPatternCase_ == 5) {
          safeRegexBuilder_.mergeFrom(value);
        } else {
          safeRegexBuilder_.setMessage(value);
        }
      }
      matchPatternCase_ = 5;
      return this;
    }
    /**
     * <pre>
     * The input string must match the regular expression specified here.
     * </pre>
     *
     * <code>.envoy.type.matcher.RegexMatcher safe_regex = 5 [(.validate.rules) = { ... }</code>
     */
    public Builder clearSafeRegex() {
      if (safeRegexBuilder_ == null) {
        if (matchPatternCase_ == 5) {
          matchPatternCase_ = 0;
          matchPattern_ = null;
          onChanged();
        }
      } else {
        if (matchPatternCase_ == 5) {
          matchPatternCase_ = 0;
          matchPattern_ = null;
        }
        safeRegexBuilder_.clear();
      }
      return this;
    }
    /**
     * <pre>
     * The input string must match the regular expression specified here.
     * </pre>
     *
     * <code>.envoy.type.matcher.RegexMatcher safe_regex = 5 [(.validate.rules) = { ... }</code>
     */
    public io.envoyproxy.envoy.type.matcher.RegexMatcher.Builder getSafeRegexBuilder() {
      return getSafeRegexFieldBuilder().getBuilder();
    }
    /**
     * <pre>
     * The input string must match the regular expression specified here.
     * </pre>
     *
     * <code>.envoy.type.matcher.RegexMatcher safe_regex = 5 [(.validate.rules) = { ... }</code>
     */
    @java.lang.Override
    public io.envoyproxy.envoy.type.matcher.RegexMatcherOrBuilder getSafeRegexOrBuilder() {
      if ((matchPatternCase_ == 5) && (safeRegexBuilder_ != null)) {
        return safeRegexBuilder_.getMessageOrBuilder();
      } else {
        if (matchPatternCase_ == 5) {
          return (io.envoyproxy.envoy.type.matcher.RegexMatcher) matchPattern_;
        }
        return io.envoyproxy.envoy.type.matcher.RegexMatcher.getDefaultInstance();
      }
    }
    /**
     * <pre>
     * The input string must match the regular expression specified here.
     * </pre>
     *
     * <code>.envoy.type.matcher.RegexMatcher safe_regex = 5 [(.validate.rules) = { ... }</code>
     */
    private com.google.protobuf.SingleFieldBuilderV3<
        io.envoyproxy.envoy.type.matcher.RegexMatcher, io.envoyproxy.envoy.type.matcher.RegexMatcher.Builder, io.envoyproxy.envoy.type.matcher.RegexMatcherOrBuilder> 
        getSafeRegexFieldBuilder() {
      if (safeRegexBuilder_ == null) {
        if (!(matchPatternCase_ == 5)) {
          matchPattern_ = io.envoyproxy.envoy.type.matcher.RegexMatcher.getDefaultInstance();
        }
        safeRegexBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
            io.envoyproxy.envoy.type.matcher.RegexMatcher, io.envoyproxy.envoy.type.matcher.RegexMatcher.Builder, io.envoyproxy.envoy.type.matcher.RegexMatcherOrBuilder>(
                (io.envoyproxy.envoy.type.matcher.RegexMatcher) matchPattern_,
                getParentForChildren(),
                isClean());
        matchPattern_ = null;
      }
      matchPatternCase_ = 5;
      onChanged();;
      return safeRegexBuilder_;
    }

    private boolean ignoreCase_ ;
    /**
     * <pre>
     * If true, indicates the exact/prefix/suffix matching should be case insensitive. This has no
     * effect for the safe_regex match.
     * For example, the matcher *data* will match both input string *Data* and *data* if set to true.
     * </pre>
     *
     * <code>bool ignore_case = 6;</code>
     * @return The ignoreCase.
     */
    @java.lang.Override
    public boolean getIgnoreCase() {
      return ignoreCase_;
    }
    /**
     * <pre>
     * If true, indicates the exact/prefix/suffix matching should be case insensitive. This has no
     * effect for the safe_regex match.
     * For example, the matcher *data* will match both input string *Data* and *data* if set to true.
     * </pre>
     *
     * <code>bool ignore_case = 6;</code>
     * @param value The ignoreCase to set.
     * @return This builder for chaining.
     */
    public Builder setIgnoreCase(boolean value) {
      
      ignoreCase_ = value;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * If true, indicates the exact/prefix/suffix matching should be case insensitive. This has no
     * effect for the safe_regex match.
     * For example, the matcher *data* will match both input string *Data* and *data* if set to true.
     * </pre>
     *
     * <code>bool ignore_case = 6;</code>
     * @return This builder for chaining.
     */
    public Builder clearIgnoreCase() {
      
      ignoreCase_ = false;
      onChanged();
      return this;
    }
    @java.lang.Override
    public final Builder setUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return super.setUnknownFields(unknownFields);
    }

    @java.lang.Override
    public final Builder mergeUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return super.mergeUnknownFields(unknownFields);
    }


    // @@protoc_insertion_point(builder_scope:envoy.type.matcher.StringMatcher)
  }

  // @@protoc_insertion_point(class_scope:envoy.type.matcher.StringMatcher)
  private static final io.envoyproxy.envoy.type.matcher.StringMatcher DEFAULT_INSTANCE;
  static {
    DEFAULT_INSTANCE = new io.envoyproxy.envoy.type.matcher.StringMatcher();
  }

  public static io.envoyproxy.envoy.type.matcher.StringMatcher getDefaultInstance() {
    return DEFAULT_INSTANCE;
  }

  private static final com.google.protobuf.Parser<StringMatcher>
      PARSER = new com.google.protobuf.AbstractParser<StringMatcher>() {
    @java.lang.Override
    public StringMatcher parsePartialFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return new StringMatcher(input, extensionRegistry);
    }
  };

  public static com.google.protobuf.Parser<StringMatcher> parser() {
    return PARSER;
  }

  @java.lang.Override
  public com.google.protobuf.Parser<StringMatcher> getParserForType() {
    return PARSER;
  }

  @java.lang.Override
  public io.envoyproxy.envoy.type.matcher.StringMatcher getDefaultInstanceForType() {
    return DEFAULT_INSTANCE;
  }

}

