// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: envoy/type/matcher/path.proto

package io.envoyproxy.envoy.type.matcher;

public interface PathMatcherOrBuilder extends
    // @@protoc_insertion_point(interface_extends:envoy.type.matcher.PathMatcher)
    com.google.protobuf.MessageOrBuilder {

  /**
   * <pre>
   * The `path` must match the URL path portion of the :path header. The query and fragment
   * string (if present) are removed in the URL path portion.
   * For example, the path *&#47;data* will match the *:path* header *&#47;data#fragment?param=value*.
   * </pre>
   *
   * <code>.envoy.type.matcher.StringMatcher path = 1 [(.validate.rules) = { ... }</code>
   * @return Whether the path field is set.
   */
  boolean hasPath();
  /**
   * <pre>
   * The `path` must match the URL path portion of the :path header. The query and fragment
   * string (if present) are removed in the URL path portion.
   * For example, the path *&#47;data* will match the *:path* header *&#47;data#fragment?param=value*.
   * </pre>
   *
   * <code>.envoy.type.matcher.StringMatcher path = 1 [(.validate.rules) = { ... }</code>
   * @return The path.
   */
  io.envoyproxy.envoy.type.matcher.StringMatcher getPath();
  /**
   * <pre>
   * The `path` must match the URL path portion of the :path header. The query and fragment
   * string (if present) are removed in the URL path portion.
   * For example, the path *&#47;data* will match the *:path* header *&#47;data#fragment?param=value*.
   * </pre>
   *
   * <code>.envoy.type.matcher.StringMatcher path = 1 [(.validate.rules) = { ... }</code>
   */
  io.envoyproxy.envoy.type.matcher.StringMatcherOrBuilder getPathOrBuilder();

  public io.envoyproxy.envoy.type.matcher.PathMatcher.RuleCase getRuleCase();
}
