// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: envoy/extensions/compression/gzip/decompressor/v3/gzip.proto

package io.envoyproxy.envoy.extensions.compression.gzip.decompressor.v3;

public interface GzipOrBuilder extends
    // @@protoc_insertion_point(interface_extends:envoy.extensions.compression.gzip.decompressor.v3.Gzip)
    com.google.protobuf.MessageOrBuilder {

  /**
   * <pre>
   * Value from 9 to 15 that represents the base two logarithmic of the decompressor's window size.
   * The decompression window size needs to be equal or larger than the compression window size.
   * The default window size is 15.
   * This is so that the decompressor can decompress a response compressed by a compressor with any compression window size.
   * For more details about this parameter, please refer to `zlib manual &lt;https://www.zlib.net/manual.html&gt;`_ &gt; inflateInit2.
   * </pre>
   *
   * <code>.google.protobuf.UInt32Value window_bits = 1 [(.validate.rules) = { ... }</code>
   * @return Whether the windowBits field is set.
   */
  boolean hasWindowBits();
  /**
   * <pre>
   * Value from 9 to 15 that represents the base two logarithmic of the decompressor's window size.
   * The decompression window size needs to be equal or larger than the compression window size.
   * The default window size is 15.
   * This is so that the decompressor can decompress a response compressed by a compressor with any compression window size.
   * For more details about this parameter, please refer to `zlib manual &lt;https://www.zlib.net/manual.html&gt;`_ &gt; inflateInit2.
   * </pre>
   *
   * <code>.google.protobuf.UInt32Value window_bits = 1 [(.validate.rules) = { ... }</code>
   * @return The windowBits.
   */
  com.google.protobuf.UInt32Value getWindowBits();
  /**
   * <pre>
   * Value from 9 to 15 that represents the base two logarithmic of the decompressor's window size.
   * The decompression window size needs to be equal or larger than the compression window size.
   * The default window size is 15.
   * This is so that the decompressor can decompress a response compressed by a compressor with any compression window size.
   * For more details about this parameter, please refer to `zlib manual &lt;https://www.zlib.net/manual.html&gt;`_ &gt; inflateInit2.
   * </pre>
   *
   * <code>.google.protobuf.UInt32Value window_bits = 1 [(.validate.rules) = { ... }</code>
   */
  com.google.protobuf.UInt32ValueOrBuilder getWindowBitsOrBuilder();

  /**
   * <pre>
   * Value for zlib's decompressor output buffer. If not set, defaults to 4096.
   * See https://www.zlib.net/manual.html for more details.
   * </pre>
   *
   * <code>.google.protobuf.UInt32Value chunk_size = 2 [(.validate.rules) = { ... }</code>
   * @return Whether the chunkSize field is set.
   */
  boolean hasChunkSize();
  /**
   * <pre>
   * Value for zlib's decompressor output buffer. If not set, defaults to 4096.
   * See https://www.zlib.net/manual.html for more details.
   * </pre>
   *
   * <code>.google.protobuf.UInt32Value chunk_size = 2 [(.validate.rules) = { ... }</code>
   * @return The chunkSize.
   */
  com.google.protobuf.UInt32Value getChunkSize();
  /**
   * <pre>
   * Value for zlib's decompressor output buffer. If not set, defaults to 4096.
   * See https://www.zlib.net/manual.html for more details.
   * </pre>
   *
   * <code>.google.protobuf.UInt32Value chunk_size = 2 [(.validate.rules) = { ... }</code>
   */
  com.google.protobuf.UInt32ValueOrBuilder getChunkSizeOrBuilder();

  /**
   * <pre>
   * An upper bound to the number of times the output buffer is allowed to be bigger than the size of
   * the accumulated input. This value is used to prevent decompression bombs. If not set, defaults to 100.
   * [#comment:TODO(rojkov): Re-design the Decompressor interface to handle compression bombs gracefully instead of this quick solution.
   * See https://github.com/envoyproxy/envoy/commit/d4c39e635603e2f23e1e08ddecf5a5fb5a706338 for details.]
   * </pre>
   *
   * <code>.google.protobuf.UInt32Value max_inflate_ratio = 3 [(.validate.rules) = { ... }</code>
   * @return Whether the maxInflateRatio field is set.
   */
  boolean hasMaxInflateRatio();
  /**
   * <pre>
   * An upper bound to the number of times the output buffer is allowed to be bigger than the size of
   * the accumulated input. This value is used to prevent decompression bombs. If not set, defaults to 100.
   * [#comment:TODO(rojkov): Re-design the Decompressor interface to handle compression bombs gracefully instead of this quick solution.
   * See https://github.com/envoyproxy/envoy/commit/d4c39e635603e2f23e1e08ddecf5a5fb5a706338 for details.]
   * </pre>
   *
   * <code>.google.protobuf.UInt32Value max_inflate_ratio = 3 [(.validate.rules) = { ... }</code>
   * @return The maxInflateRatio.
   */
  com.google.protobuf.UInt32Value getMaxInflateRatio();
  /**
   * <pre>
   * An upper bound to the number of times the output buffer is allowed to be bigger than the size of
   * the accumulated input. This value is used to prevent decompression bombs. If not set, defaults to 100.
   * [#comment:TODO(rojkov): Re-design the Decompressor interface to handle compression bombs gracefully instead of this quick solution.
   * See https://github.com/envoyproxy/envoy/commit/d4c39e635603e2f23e1e08ddecf5a5fb5a706338 for details.]
   * </pre>
   *
   * <code>.google.protobuf.UInt32Value max_inflate_ratio = 3 [(.validate.rules) = { ... }</code>
   */
  com.google.protobuf.UInt32ValueOrBuilder getMaxInflateRatioOrBuilder();
}
