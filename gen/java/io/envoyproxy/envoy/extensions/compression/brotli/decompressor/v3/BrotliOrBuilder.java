// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: envoy/extensions/compression/brotli/decompressor/v3/brotli.proto

package io.envoyproxy.envoy.extensions.compression.brotli.decompressor.v3;

public interface BrotliOrBuilder extends
    // @@protoc_insertion_point(interface_extends:envoy.extensions.compression.brotli.decompressor.v3.Brotli)
    com.google.protobuf.MessageOrBuilder {

  /**
   * <pre>
   * If true, disables "canny" ring buffer allocation strategy.
   * Ring buffer is allocated according to window size, despite the real size of the content.
   * </pre>
   *
   * <code>bool disable_ring_buffer_reallocation = 1;</code>
   * @return The disableRingBufferReallocation.
   */
  boolean getDisableRingBufferReallocation();

  /**
   * <pre>
   * Value for decompressor's next output buffer. If not set, defaults to 4096.
   * </pre>
   *
   * <code>.google.protobuf.UInt32Value chunk_size = 2 [(.validate.rules) = { ... }</code>
   * @return Whether the chunkSize field is set.
   */
  boolean hasChunkSize();
  /**
   * <pre>
   * Value for decompressor's next output buffer. If not set, defaults to 4096.
   * </pre>
   *
   * <code>.google.protobuf.UInt32Value chunk_size = 2 [(.validate.rules) = { ... }</code>
   * @return The chunkSize.
   */
  com.google.protobuf.UInt32Value getChunkSize();
  /**
   * <pre>
   * Value for decompressor's next output buffer. If not set, defaults to 4096.
   * </pre>
   *
   * <code>.google.protobuf.UInt32Value chunk_size = 2 [(.validate.rules) = { ... }</code>
   */
  com.google.protobuf.UInt32ValueOrBuilder getChunkSizeOrBuilder();
}
