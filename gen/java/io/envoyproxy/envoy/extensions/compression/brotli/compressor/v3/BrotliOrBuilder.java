// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: envoy/extensions/compression/brotli/compressor/v3/brotli.proto

package io.envoyproxy.envoy.extensions.compression.brotli.compressor.v3;

public interface BrotliOrBuilder extends
    // @@protoc_insertion_point(interface_extends:envoy.extensions.compression.brotli.compressor.v3.Brotli)
    com.google.protobuf.MessageOrBuilder {

  /**
   * <pre>
   * Value from 0 to 11 that controls the main compression speed-density lever.
   * The higher quality, the slower compression. The default value is 3.
   * </pre>
   *
   * <code>.google.protobuf.UInt32Value quality = 1 [(.validate.rules) = { ... }</code>
   * @return Whether the quality field is set.
   */
  boolean hasQuality();
  /**
   * <pre>
   * Value from 0 to 11 that controls the main compression speed-density lever.
   * The higher quality, the slower compression. The default value is 3.
   * </pre>
   *
   * <code>.google.protobuf.UInt32Value quality = 1 [(.validate.rules) = { ... }</code>
   * @return The quality.
   */
  com.google.protobuf.UInt32Value getQuality();
  /**
   * <pre>
   * Value from 0 to 11 that controls the main compression speed-density lever.
   * The higher quality, the slower compression. The default value is 3.
   * </pre>
   *
   * <code>.google.protobuf.UInt32Value quality = 1 [(.validate.rules) = { ... }</code>
   */
  com.google.protobuf.UInt32ValueOrBuilder getQualityOrBuilder();

  /**
   * <pre>
   * A value used to tune encoder for specific input. For more information about modes,
   * please refer to brotli manual: https://brotli.org/encode.html#aa6f
   * This field will be set to "DEFAULT" if not specified.
   * </pre>
   *
   * <code>.envoy.extensions.compression.brotli.compressor.v3.Brotli.EncoderMode encoder_mode = 2 [(.validate.rules) = { ... }</code>
   * @return The enum numeric value on the wire for encoderMode.
   */
  int getEncoderModeValue();
  /**
   * <pre>
   * A value used to tune encoder for specific input. For more information about modes,
   * please refer to brotli manual: https://brotli.org/encode.html#aa6f
   * This field will be set to "DEFAULT" if not specified.
   * </pre>
   *
   * <code>.envoy.extensions.compression.brotli.compressor.v3.Brotli.EncoderMode encoder_mode = 2 [(.validate.rules) = { ... }</code>
   * @return The encoderMode.
   */
  io.envoyproxy.envoy.extensions.compression.brotli.compressor.v3.Brotli.EncoderMode getEncoderMode();

  /**
   * <pre>
   * Value from 10 to 24 that represents the base two logarithmic of the compressor's window size.
   * Larger window results in better compression at the expense of memory usage. The default is 18.
   * For more details about this parameter, please refer to brotli manual:
   * https://brotli.org/encode.html#a9a8
   * </pre>
   *
   * <code>.google.protobuf.UInt32Value window_bits = 3 [(.validate.rules) = { ... }</code>
   * @return Whether the windowBits field is set.
   */
  boolean hasWindowBits();
  /**
   * <pre>
   * Value from 10 to 24 that represents the base two logarithmic of the compressor's window size.
   * Larger window results in better compression at the expense of memory usage. The default is 18.
   * For more details about this parameter, please refer to brotli manual:
   * https://brotli.org/encode.html#a9a8
   * </pre>
   *
   * <code>.google.protobuf.UInt32Value window_bits = 3 [(.validate.rules) = { ... }</code>
   * @return The windowBits.
   */
  com.google.protobuf.UInt32Value getWindowBits();
  /**
   * <pre>
   * Value from 10 to 24 that represents the base two logarithmic of the compressor's window size.
   * Larger window results in better compression at the expense of memory usage. The default is 18.
   * For more details about this parameter, please refer to brotli manual:
   * https://brotli.org/encode.html#a9a8
   * </pre>
   *
   * <code>.google.protobuf.UInt32Value window_bits = 3 [(.validate.rules) = { ... }</code>
   */
  com.google.protobuf.UInt32ValueOrBuilder getWindowBitsOrBuilder();

  /**
   * <pre>
   * Value from 16 to 24 that represents the base two logarithmic of the compressor's input block
   * size. Larger input block results in better compression at the expense of memory usage. The
   * default is 24. For more details about this parameter, please refer to brotli manual:
   * https://brotli.org/encode.html#a9a8
   * </pre>
   *
   * <code>.google.protobuf.UInt32Value input_block_bits = 4 [(.validate.rules) = { ... }</code>
   * @return Whether the inputBlockBits field is set.
   */
  boolean hasInputBlockBits();
  /**
   * <pre>
   * Value from 16 to 24 that represents the base two logarithmic of the compressor's input block
   * size. Larger input block results in better compression at the expense of memory usage. The
   * default is 24. For more details about this parameter, please refer to brotli manual:
   * https://brotli.org/encode.html#a9a8
   * </pre>
   *
   * <code>.google.protobuf.UInt32Value input_block_bits = 4 [(.validate.rules) = { ... }</code>
   * @return The inputBlockBits.
   */
  com.google.protobuf.UInt32Value getInputBlockBits();
  /**
   * <pre>
   * Value from 16 to 24 that represents the base two logarithmic of the compressor's input block
   * size. Larger input block results in better compression at the expense of memory usage. The
   * default is 24. For more details about this parameter, please refer to brotli manual:
   * https://brotli.org/encode.html#a9a8
   * </pre>
   *
   * <code>.google.protobuf.UInt32Value input_block_bits = 4 [(.validate.rules) = { ... }</code>
   */
  com.google.protobuf.UInt32ValueOrBuilder getInputBlockBitsOrBuilder();

  /**
   * <pre>
   * Value for compressor's next output buffer. If not set, defaults to 4096.
   * </pre>
   *
   * <code>.google.protobuf.UInt32Value chunk_size = 5 [(.validate.rules) = { ... }</code>
   * @return Whether the chunkSize field is set.
   */
  boolean hasChunkSize();
  /**
   * <pre>
   * Value for compressor's next output buffer. If not set, defaults to 4096.
   * </pre>
   *
   * <code>.google.protobuf.UInt32Value chunk_size = 5 [(.validate.rules) = { ... }</code>
   * @return The chunkSize.
   */
  com.google.protobuf.UInt32Value getChunkSize();
  /**
   * <pre>
   * Value for compressor's next output buffer. If not set, defaults to 4096.
   * </pre>
   *
   * <code>.google.protobuf.UInt32Value chunk_size = 5 [(.validate.rules) = { ... }</code>
   */
  com.google.protobuf.UInt32ValueOrBuilder getChunkSizeOrBuilder();

  /**
   * <pre>
   * If true, disables "literal context modeling" format feature.
   * This flag is a "decoding-speed vs compression ratio" trade-off.
   * </pre>
   *
   * <code>bool disable_literal_context_modeling = 6;</code>
   * @return The disableLiteralContextModeling.
   */
  boolean getDisableLiteralContextModeling();
}
