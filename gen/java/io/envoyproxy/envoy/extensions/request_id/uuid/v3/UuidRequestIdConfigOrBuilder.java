// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: envoy/extensions/request_id/uuid/v3/uuid.proto

package io.envoyproxy.envoy.extensions.request_id.uuid.v3;

public interface UuidRequestIdConfigOrBuilder extends
    // @@protoc_insertion_point(interface_extends:envoy.extensions.request_id.uuid.v3.UuidRequestIdConfig)
    com.google.protobuf.MessageOrBuilder {

  /**
   * <pre>
   * Whether the implementation alters the UUID to contain the trace sampling decision as per the
   * ``UuidRequestIdConfig`` message documentation. This defaults to true. If disabled no
   * modification to the UUID will be performed. It is important to note that if disabled,
   * stable sampling of traces, access logs, etc. will no longer work and only random sampling will
   * be possible.
   * </pre>
   *
   * <code>.google.protobuf.BoolValue pack_trace_reason = 1;</code>
   * @return Whether the packTraceReason field is set.
   */
  boolean hasPackTraceReason();
  /**
   * <pre>
   * Whether the implementation alters the UUID to contain the trace sampling decision as per the
   * ``UuidRequestIdConfig`` message documentation. This defaults to true. If disabled no
   * modification to the UUID will be performed. It is important to note that if disabled,
   * stable sampling of traces, access logs, etc. will no longer work and only random sampling will
   * be possible.
   * </pre>
   *
   * <code>.google.protobuf.BoolValue pack_trace_reason = 1;</code>
   * @return The packTraceReason.
   */
  com.google.protobuf.BoolValue getPackTraceReason();
  /**
   * <pre>
   * Whether the implementation alters the UUID to contain the trace sampling decision as per the
   * ``UuidRequestIdConfig`` message documentation. This defaults to true. If disabled no
   * modification to the UUID will be performed. It is important to note that if disabled,
   * stable sampling of traces, access logs, etc. will no longer work and only random sampling will
   * be possible.
   * </pre>
   *
   * <code>.google.protobuf.BoolValue pack_trace_reason = 1;</code>
   */
  com.google.protobuf.BoolValueOrBuilder getPackTraceReasonOrBuilder();

  /**
   * <pre>
   * Set whether to use :ref:`x-request-id&lt;config_http_conn_man_headers_x-request-id&gt;` for sampling or not.
   * This defaults to true. See the :ref:`context propagation &lt;arch_overview_tracing_context_propagation&gt;`
   * overview for more information.
   * </pre>
   *
   * <code>.google.protobuf.BoolValue use_request_id_for_trace_sampling = 2;</code>
   * @return Whether the useRequestIdForTraceSampling field is set.
   */
  boolean hasUseRequestIdForTraceSampling();
  /**
   * <pre>
   * Set whether to use :ref:`x-request-id&lt;config_http_conn_man_headers_x-request-id&gt;` for sampling or not.
   * This defaults to true. See the :ref:`context propagation &lt;arch_overview_tracing_context_propagation&gt;`
   * overview for more information.
   * </pre>
   *
   * <code>.google.protobuf.BoolValue use_request_id_for_trace_sampling = 2;</code>
   * @return The useRequestIdForTraceSampling.
   */
  com.google.protobuf.BoolValue getUseRequestIdForTraceSampling();
  /**
   * <pre>
   * Set whether to use :ref:`x-request-id&lt;config_http_conn_man_headers_x-request-id&gt;` for sampling or not.
   * This defaults to true. See the :ref:`context propagation &lt;arch_overview_tracing_context_propagation&gt;`
   * overview for more information.
   * </pre>
   *
   * <code>.google.protobuf.BoolValue use_request_id_for_trace_sampling = 2;</code>
   */
  com.google.protobuf.BoolValueOrBuilder getUseRequestIdForTraceSamplingOrBuilder();
}
