// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: envoy/extensions/load_balancing_policies/maglev/v3/maglev.proto

package io.envoyproxy.envoy.extensions.load_balancing_policies.maglev.v3;

/**
 * <pre>
 * This configuration allows the built-in Maglev LB policy to be configured via the LB policy
 * extension point. See the :ref:`load balancing architecture overview
 * &lt;arch_overview_load_balancing_types&gt;` and :ref:`Maglev&lt;arch_overview_load_balancing_types_maglev&gt;` for more information.
 * </pre>
 *
 * Protobuf type {@code envoy.extensions.load_balancing_policies.maglev.v3.Maglev}
 */
public final class Maglev extends
    com.google.protobuf.GeneratedMessageV3 implements
    // @@protoc_insertion_point(message_implements:envoy.extensions.load_balancing_policies.maglev.v3.Maglev)
    MaglevOrBuilder {
private static final long serialVersionUID = 0L;
  // Use Maglev.newBuilder() to construct.
  private Maglev(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
    super(builder);
  }
  private Maglev() {
  }

  @java.lang.Override
  @SuppressWarnings({"unused"})
  protected java.lang.Object newInstance(
      UnusedPrivateParameter unused) {
    return new Maglev();
  }

  @java.lang.Override
  public final com.google.protobuf.UnknownFieldSet
  getUnknownFields() {
    return this.unknownFields;
  }
  public static final com.google.protobuf.Descriptors.Descriptor
      getDescriptor() {
    return io.envoyproxy.envoy.extensions.load_balancing_policies.maglev.v3.MaglevProto.internal_static_envoy_extensions_load_balancing_policies_maglev_v3_Maglev_descriptor;
  }

  @java.lang.Override
  protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internalGetFieldAccessorTable() {
    return io.envoyproxy.envoy.extensions.load_balancing_policies.maglev.v3.MaglevProto.internal_static_envoy_extensions_load_balancing_policies_maglev_v3_Maglev_fieldAccessorTable
        .ensureFieldAccessorsInitialized(
            io.envoyproxy.envoy.extensions.load_balancing_policies.maglev.v3.Maglev.class, io.envoyproxy.envoy.extensions.load_balancing_policies.maglev.v3.Maglev.Builder.class);
  }

  public static final int TABLE_SIZE_FIELD_NUMBER = 1;
  private com.google.protobuf.UInt64Value tableSize_;
  /**
   * <pre>
   * The table size for Maglev hashing. Maglev aims for "minimal disruption" rather than an absolute guarantee.
   * Minimal disruption means that when the set of upstream hosts change, a connection will likely be sent to the same
   * upstream as it was before. Increasing the table size reduces the amount of disruption.
   * The table size must be prime number limited to 5000011. If it is not specified, the default is 65537.
   * </pre>
   *
   * <code>.google.protobuf.UInt64Value table_size = 1 [(.validate.rules) = { ... }</code>
   * @return Whether the tableSize field is set.
   */
  @java.lang.Override
  public boolean hasTableSize() {
    return tableSize_ != null;
  }
  /**
   * <pre>
   * The table size for Maglev hashing. Maglev aims for "minimal disruption" rather than an absolute guarantee.
   * Minimal disruption means that when the set of upstream hosts change, a connection will likely be sent to the same
   * upstream as it was before. Increasing the table size reduces the amount of disruption.
   * The table size must be prime number limited to 5000011. If it is not specified, the default is 65537.
   * </pre>
   *
   * <code>.google.protobuf.UInt64Value table_size = 1 [(.validate.rules) = { ... }</code>
   * @return The tableSize.
   */
  @java.lang.Override
  public com.google.protobuf.UInt64Value getTableSize() {
    return tableSize_ == null ? com.google.protobuf.UInt64Value.getDefaultInstance() : tableSize_;
  }
  /**
   * <pre>
   * The table size for Maglev hashing. Maglev aims for "minimal disruption" rather than an absolute guarantee.
   * Minimal disruption means that when the set of upstream hosts change, a connection will likely be sent to the same
   * upstream as it was before. Increasing the table size reduces the amount of disruption.
   * The table size must be prime number limited to 5000011. If it is not specified, the default is 65537.
   * </pre>
   *
   * <code>.google.protobuf.UInt64Value table_size = 1 [(.validate.rules) = { ... }</code>
   */
  @java.lang.Override
  public com.google.protobuf.UInt64ValueOrBuilder getTableSizeOrBuilder() {
    return tableSize_ == null ? com.google.protobuf.UInt64Value.getDefaultInstance() : tableSize_;
  }

  public static final int CONSISTENT_HASHING_LB_CONFIG_FIELD_NUMBER = 2;
  private io.envoyproxy.envoy.extensions.load_balancing_policies.common.v3.ConsistentHashingLbConfig consistentHashingLbConfig_;
  /**
   * <pre>
   * Common configuration for hashing-based load balancing policies.
   * </pre>
   *
   * <code>.envoy.extensions.load_balancing_policies.common.v3.ConsistentHashingLbConfig consistent_hashing_lb_config = 2;</code>
   * @return Whether the consistentHashingLbConfig field is set.
   */
  @java.lang.Override
  public boolean hasConsistentHashingLbConfig() {
    return consistentHashingLbConfig_ != null;
  }
  /**
   * <pre>
   * Common configuration for hashing-based load balancing policies.
   * </pre>
   *
   * <code>.envoy.extensions.load_balancing_policies.common.v3.ConsistentHashingLbConfig consistent_hashing_lb_config = 2;</code>
   * @return The consistentHashingLbConfig.
   */
  @java.lang.Override
  public io.envoyproxy.envoy.extensions.load_balancing_policies.common.v3.ConsistentHashingLbConfig getConsistentHashingLbConfig() {
    return consistentHashingLbConfig_ == null ? io.envoyproxy.envoy.extensions.load_balancing_policies.common.v3.ConsistentHashingLbConfig.getDefaultInstance() : consistentHashingLbConfig_;
  }
  /**
   * <pre>
   * Common configuration for hashing-based load balancing policies.
   * </pre>
   *
   * <code>.envoy.extensions.load_balancing_policies.common.v3.ConsistentHashingLbConfig consistent_hashing_lb_config = 2;</code>
   */
  @java.lang.Override
  public io.envoyproxy.envoy.extensions.load_balancing_policies.common.v3.ConsistentHashingLbConfigOrBuilder getConsistentHashingLbConfigOrBuilder() {
    return consistentHashingLbConfig_ == null ? io.envoyproxy.envoy.extensions.load_balancing_policies.common.v3.ConsistentHashingLbConfig.getDefaultInstance() : consistentHashingLbConfig_;
  }

  private byte memoizedIsInitialized = -1;
  @java.lang.Override
  public final boolean isInitialized() {
    byte isInitialized = memoizedIsInitialized;
    if (isInitialized == 1) return true;
    if (isInitialized == 0) return false;

    memoizedIsInitialized = 1;
    return true;
  }

  @java.lang.Override
  public void writeTo(com.google.protobuf.CodedOutputStream output)
                      throws java.io.IOException {
    if (tableSize_ != null) {
      output.writeMessage(1, getTableSize());
    }
    if (consistentHashingLbConfig_ != null) {
      output.writeMessage(2, getConsistentHashingLbConfig());
    }
    getUnknownFields().writeTo(output);
  }

  @java.lang.Override
  public int getSerializedSize() {
    int size = memoizedSize;
    if (size != -1) return size;

    size = 0;
    if (tableSize_ != null) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(1, getTableSize());
    }
    if (consistentHashingLbConfig_ != null) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(2, getConsistentHashingLbConfig());
    }
    size += getUnknownFields().getSerializedSize();
    memoizedSize = size;
    return size;
  }

  @java.lang.Override
  public boolean equals(final java.lang.Object obj) {
    if (obj == this) {
     return true;
    }
    if (!(obj instanceof io.envoyproxy.envoy.extensions.load_balancing_policies.maglev.v3.Maglev)) {
      return super.equals(obj);
    }
    io.envoyproxy.envoy.extensions.load_balancing_policies.maglev.v3.Maglev other = (io.envoyproxy.envoy.extensions.load_balancing_policies.maglev.v3.Maglev) obj;

    if (hasTableSize() != other.hasTableSize()) return false;
    if (hasTableSize()) {
      if (!getTableSize()
          .equals(other.getTableSize())) return false;
    }
    if (hasConsistentHashingLbConfig() != other.hasConsistentHashingLbConfig()) return false;
    if (hasConsistentHashingLbConfig()) {
      if (!getConsistentHashingLbConfig()
          .equals(other.getConsistentHashingLbConfig())) return false;
    }
    if (!getUnknownFields().equals(other.getUnknownFields())) return false;
    return true;
  }

  @java.lang.Override
  public int hashCode() {
    if (memoizedHashCode != 0) {
      return memoizedHashCode;
    }
    int hash = 41;
    hash = (19 * hash) + getDescriptor().hashCode();
    if (hasTableSize()) {
      hash = (37 * hash) + TABLE_SIZE_FIELD_NUMBER;
      hash = (53 * hash) + getTableSize().hashCode();
    }
    if (hasConsistentHashingLbConfig()) {
      hash = (37 * hash) + CONSISTENT_HASHING_LB_CONFIG_FIELD_NUMBER;
      hash = (53 * hash) + getConsistentHashingLbConfig().hashCode();
    }
    hash = (29 * hash) + getUnknownFields().hashCode();
    memoizedHashCode = hash;
    return hash;
  }

  public static io.envoyproxy.envoy.extensions.load_balancing_policies.maglev.v3.Maglev parseFrom(
      java.nio.ByteBuffer data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static io.envoyproxy.envoy.extensions.load_balancing_policies.maglev.v3.Maglev parseFrom(
      java.nio.ByteBuffer data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static io.envoyproxy.envoy.extensions.load_balancing_policies.maglev.v3.Maglev parseFrom(
      com.google.protobuf.ByteString data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static io.envoyproxy.envoy.extensions.load_balancing_policies.maglev.v3.Maglev parseFrom(
      com.google.protobuf.ByteString data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static io.envoyproxy.envoy.extensions.load_balancing_policies.maglev.v3.Maglev parseFrom(byte[] data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static io.envoyproxy.envoy.extensions.load_balancing_policies.maglev.v3.Maglev parseFrom(
      byte[] data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static io.envoyproxy.envoy.extensions.load_balancing_policies.maglev.v3.Maglev parseFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input);
  }
  public static io.envoyproxy.envoy.extensions.load_balancing_policies.maglev.v3.Maglev parseFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input, extensionRegistry);
  }
  public static io.envoyproxy.envoy.extensions.load_balancing_policies.maglev.v3.Maglev parseDelimitedFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseDelimitedWithIOException(PARSER, input);
  }
  public static io.envoyproxy.envoy.extensions.load_balancing_policies.maglev.v3.Maglev parseDelimitedFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
  }
  public static io.envoyproxy.envoy.extensions.load_balancing_policies.maglev.v3.Maglev parseFrom(
      com.google.protobuf.CodedInputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input);
  }
  public static io.envoyproxy.envoy.extensions.load_balancing_policies.maglev.v3.Maglev parseFrom(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input, extensionRegistry);
  }

  @java.lang.Override
  public Builder newBuilderForType() { return newBuilder(); }
  public static Builder newBuilder() {
    return DEFAULT_INSTANCE.toBuilder();
  }
  public static Builder newBuilder(io.envoyproxy.envoy.extensions.load_balancing_policies.maglev.v3.Maglev prototype) {
    return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
  }
  @java.lang.Override
  public Builder toBuilder() {
    return this == DEFAULT_INSTANCE
        ? new Builder() : new Builder().mergeFrom(this);
  }

  @java.lang.Override
  protected Builder newBuilderForType(
      com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
    Builder builder = new Builder(parent);
    return builder;
  }
  /**
   * <pre>
   * This configuration allows the built-in Maglev LB policy to be configured via the LB policy
   * extension point. See the :ref:`load balancing architecture overview
   * &lt;arch_overview_load_balancing_types&gt;` and :ref:`Maglev&lt;arch_overview_load_balancing_types_maglev&gt;` for more information.
   * </pre>
   *
   * Protobuf type {@code envoy.extensions.load_balancing_policies.maglev.v3.Maglev}
   */
  public static final class Builder extends
      com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
      // @@protoc_insertion_point(builder_implements:envoy.extensions.load_balancing_policies.maglev.v3.Maglev)
      io.envoyproxy.envoy.extensions.load_balancing_policies.maglev.v3.MaglevOrBuilder {
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return io.envoyproxy.envoy.extensions.load_balancing_policies.maglev.v3.MaglevProto.internal_static_envoy_extensions_load_balancing_policies_maglev_v3_Maglev_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return io.envoyproxy.envoy.extensions.load_balancing_policies.maglev.v3.MaglevProto.internal_static_envoy_extensions_load_balancing_policies_maglev_v3_Maglev_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              io.envoyproxy.envoy.extensions.load_balancing_policies.maglev.v3.Maglev.class, io.envoyproxy.envoy.extensions.load_balancing_policies.maglev.v3.Maglev.Builder.class);
    }

    // Construct using io.envoyproxy.envoy.extensions.load_balancing_policies.maglev.v3.Maglev.newBuilder()
    private Builder() {

    }

    private Builder(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      super(parent);

    }
    @java.lang.Override
    public Builder clear() {
      super.clear();
      bitField0_ = 0;
      tableSize_ = null;
      if (tableSizeBuilder_ != null) {
        tableSizeBuilder_.dispose();
        tableSizeBuilder_ = null;
      }
      consistentHashingLbConfig_ = null;
      if (consistentHashingLbConfigBuilder_ != null) {
        consistentHashingLbConfigBuilder_.dispose();
        consistentHashingLbConfigBuilder_ = null;
      }
      return this;
    }

    @java.lang.Override
    public com.google.protobuf.Descriptors.Descriptor
        getDescriptorForType() {
      return io.envoyproxy.envoy.extensions.load_balancing_policies.maglev.v3.MaglevProto.internal_static_envoy_extensions_load_balancing_policies_maglev_v3_Maglev_descriptor;
    }

    @java.lang.Override
    public io.envoyproxy.envoy.extensions.load_balancing_policies.maglev.v3.Maglev getDefaultInstanceForType() {
      return io.envoyproxy.envoy.extensions.load_balancing_policies.maglev.v3.Maglev.getDefaultInstance();
    }

    @java.lang.Override
    public io.envoyproxy.envoy.extensions.load_balancing_policies.maglev.v3.Maglev build() {
      io.envoyproxy.envoy.extensions.load_balancing_policies.maglev.v3.Maglev result = buildPartial();
      if (!result.isInitialized()) {
        throw newUninitializedMessageException(result);
      }
      return result;
    }

    @java.lang.Override
    public io.envoyproxy.envoy.extensions.load_balancing_policies.maglev.v3.Maglev buildPartial() {
      io.envoyproxy.envoy.extensions.load_balancing_policies.maglev.v3.Maglev result = new io.envoyproxy.envoy.extensions.load_balancing_policies.maglev.v3.Maglev(this);
      if (bitField0_ != 0) { buildPartial0(result); }
      onBuilt();
      return result;
    }

    private void buildPartial0(io.envoyproxy.envoy.extensions.load_balancing_policies.maglev.v3.Maglev result) {
      int from_bitField0_ = bitField0_;
      if (((from_bitField0_ & 0x00000001) != 0)) {
        result.tableSize_ = tableSizeBuilder_ == null
            ? tableSize_
            : tableSizeBuilder_.build();
      }
      if (((from_bitField0_ & 0x00000002) != 0)) {
        result.consistentHashingLbConfig_ = consistentHashingLbConfigBuilder_ == null
            ? consistentHashingLbConfig_
            : consistentHashingLbConfigBuilder_.build();
      }
    }

    @java.lang.Override
    public Builder clone() {
      return super.clone();
    }
    @java.lang.Override
    public Builder setField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        java.lang.Object value) {
      return super.setField(field, value);
    }
    @java.lang.Override
    public Builder clearField(
        com.google.protobuf.Descriptors.FieldDescriptor field) {
      return super.clearField(field);
    }
    @java.lang.Override
    public Builder clearOneof(
        com.google.protobuf.Descriptors.OneofDescriptor oneof) {
      return super.clearOneof(oneof);
    }
    @java.lang.Override
    public Builder setRepeatedField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        int index, java.lang.Object value) {
      return super.setRepeatedField(field, index, value);
    }
    @java.lang.Override
    public Builder addRepeatedField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        java.lang.Object value) {
      return super.addRepeatedField(field, value);
    }
    @java.lang.Override
    public Builder mergeFrom(com.google.protobuf.Message other) {
      if (other instanceof io.envoyproxy.envoy.extensions.load_balancing_policies.maglev.v3.Maglev) {
        return mergeFrom((io.envoyproxy.envoy.extensions.load_balancing_policies.maglev.v3.Maglev)other);
      } else {
        super.mergeFrom(other);
        return this;
      }
    }

    public Builder mergeFrom(io.envoyproxy.envoy.extensions.load_balancing_policies.maglev.v3.Maglev other) {
      if (other == io.envoyproxy.envoy.extensions.load_balancing_policies.maglev.v3.Maglev.getDefaultInstance()) return this;
      if (other.hasTableSize()) {
        mergeTableSize(other.getTableSize());
      }
      if (other.hasConsistentHashingLbConfig()) {
        mergeConsistentHashingLbConfig(other.getConsistentHashingLbConfig());
      }
      this.mergeUnknownFields(other.getUnknownFields());
      onChanged();
      return this;
    }

    @java.lang.Override
    public final boolean isInitialized() {
      return true;
    }

    @java.lang.Override
    public Builder mergeFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 10: {
              input.readMessage(
                  getTableSizeFieldBuilder().getBuilder(),
                  extensionRegistry);
              bitField0_ |= 0x00000001;
              break;
            } // case 10
            case 18: {
              input.readMessage(
                  getConsistentHashingLbConfigFieldBuilder().getBuilder(),
                  extensionRegistry);
              bitField0_ |= 0x00000002;
              break;
            } // case 18
            default: {
              if (!super.parseUnknownField(input, extensionRegistry, tag)) {
                done = true; // was an endgroup tag
              }
              break;
            } // default:
          } // switch (tag)
        } // while (!done)
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.unwrapIOException();
      } finally {
        onChanged();
      } // finally
      return this;
    }
    private int bitField0_;

    private com.google.protobuf.UInt64Value tableSize_;
    private com.google.protobuf.SingleFieldBuilderV3<
        com.google.protobuf.UInt64Value, com.google.protobuf.UInt64Value.Builder, com.google.protobuf.UInt64ValueOrBuilder> tableSizeBuilder_;
    /**
     * <pre>
     * The table size for Maglev hashing. Maglev aims for "minimal disruption" rather than an absolute guarantee.
     * Minimal disruption means that when the set of upstream hosts change, a connection will likely be sent to the same
     * upstream as it was before. Increasing the table size reduces the amount of disruption.
     * The table size must be prime number limited to 5000011. If it is not specified, the default is 65537.
     * </pre>
     *
     * <code>.google.protobuf.UInt64Value table_size = 1 [(.validate.rules) = { ... }</code>
     * @return Whether the tableSize field is set.
     */
    public boolean hasTableSize() {
      return ((bitField0_ & 0x00000001) != 0);
    }
    /**
     * <pre>
     * The table size for Maglev hashing. Maglev aims for "minimal disruption" rather than an absolute guarantee.
     * Minimal disruption means that when the set of upstream hosts change, a connection will likely be sent to the same
     * upstream as it was before. Increasing the table size reduces the amount of disruption.
     * The table size must be prime number limited to 5000011. If it is not specified, the default is 65537.
     * </pre>
     *
     * <code>.google.protobuf.UInt64Value table_size = 1 [(.validate.rules) = { ... }</code>
     * @return The tableSize.
     */
    public com.google.protobuf.UInt64Value getTableSize() {
      if (tableSizeBuilder_ == null) {
        return tableSize_ == null ? com.google.protobuf.UInt64Value.getDefaultInstance() : tableSize_;
      } else {
        return tableSizeBuilder_.getMessage();
      }
    }
    /**
     * <pre>
     * The table size for Maglev hashing. Maglev aims for "minimal disruption" rather than an absolute guarantee.
     * Minimal disruption means that when the set of upstream hosts change, a connection will likely be sent to the same
     * upstream as it was before. Increasing the table size reduces the amount of disruption.
     * The table size must be prime number limited to 5000011. If it is not specified, the default is 65537.
     * </pre>
     *
     * <code>.google.protobuf.UInt64Value table_size = 1 [(.validate.rules) = { ... }</code>
     */
    public Builder setTableSize(com.google.protobuf.UInt64Value value) {
      if (tableSizeBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        tableSize_ = value;
      } else {
        tableSizeBuilder_.setMessage(value);
      }
      bitField0_ |= 0x00000001;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * The table size for Maglev hashing. Maglev aims for "minimal disruption" rather than an absolute guarantee.
     * Minimal disruption means that when the set of upstream hosts change, a connection will likely be sent to the same
     * upstream as it was before. Increasing the table size reduces the amount of disruption.
     * The table size must be prime number limited to 5000011. If it is not specified, the default is 65537.
     * </pre>
     *
     * <code>.google.protobuf.UInt64Value table_size = 1 [(.validate.rules) = { ... }</code>
     */
    public Builder setTableSize(
        com.google.protobuf.UInt64Value.Builder builderForValue) {
      if (tableSizeBuilder_ == null) {
        tableSize_ = builderForValue.build();
      } else {
        tableSizeBuilder_.setMessage(builderForValue.build());
      }
      bitField0_ |= 0x00000001;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * The table size for Maglev hashing. Maglev aims for "minimal disruption" rather than an absolute guarantee.
     * Minimal disruption means that when the set of upstream hosts change, a connection will likely be sent to the same
     * upstream as it was before. Increasing the table size reduces the amount of disruption.
     * The table size must be prime number limited to 5000011. If it is not specified, the default is 65537.
     * </pre>
     *
     * <code>.google.protobuf.UInt64Value table_size = 1 [(.validate.rules) = { ... }</code>
     */
    public Builder mergeTableSize(com.google.protobuf.UInt64Value value) {
      if (tableSizeBuilder_ == null) {
        if (((bitField0_ & 0x00000001) != 0) &&
          tableSize_ != null &&
          tableSize_ != com.google.protobuf.UInt64Value.getDefaultInstance()) {
          getTableSizeBuilder().mergeFrom(value);
        } else {
          tableSize_ = value;
        }
      } else {
        tableSizeBuilder_.mergeFrom(value);
      }
      bitField0_ |= 0x00000001;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * The table size for Maglev hashing. Maglev aims for "minimal disruption" rather than an absolute guarantee.
     * Minimal disruption means that when the set of upstream hosts change, a connection will likely be sent to the same
     * upstream as it was before. Increasing the table size reduces the amount of disruption.
     * The table size must be prime number limited to 5000011. If it is not specified, the default is 65537.
     * </pre>
     *
     * <code>.google.protobuf.UInt64Value table_size = 1 [(.validate.rules) = { ... }</code>
     */
    public Builder clearTableSize() {
      bitField0_ = (bitField0_ & ~0x00000001);
      tableSize_ = null;
      if (tableSizeBuilder_ != null) {
        tableSizeBuilder_.dispose();
        tableSizeBuilder_ = null;
      }
      onChanged();
      return this;
    }
    /**
     * <pre>
     * The table size for Maglev hashing. Maglev aims for "minimal disruption" rather than an absolute guarantee.
     * Minimal disruption means that when the set of upstream hosts change, a connection will likely be sent to the same
     * upstream as it was before. Increasing the table size reduces the amount of disruption.
     * The table size must be prime number limited to 5000011. If it is not specified, the default is 65537.
     * </pre>
     *
     * <code>.google.protobuf.UInt64Value table_size = 1 [(.validate.rules) = { ... }</code>
     */
    public com.google.protobuf.UInt64Value.Builder getTableSizeBuilder() {
      bitField0_ |= 0x00000001;
      onChanged();
      return getTableSizeFieldBuilder().getBuilder();
    }
    /**
     * <pre>
     * The table size for Maglev hashing. Maglev aims for "minimal disruption" rather than an absolute guarantee.
     * Minimal disruption means that when the set of upstream hosts change, a connection will likely be sent to the same
     * upstream as it was before. Increasing the table size reduces the amount of disruption.
     * The table size must be prime number limited to 5000011. If it is not specified, the default is 65537.
     * </pre>
     *
     * <code>.google.protobuf.UInt64Value table_size = 1 [(.validate.rules) = { ... }</code>
     */
    public com.google.protobuf.UInt64ValueOrBuilder getTableSizeOrBuilder() {
      if (tableSizeBuilder_ != null) {
        return tableSizeBuilder_.getMessageOrBuilder();
      } else {
        return tableSize_ == null ?
            com.google.protobuf.UInt64Value.getDefaultInstance() : tableSize_;
      }
    }
    /**
     * <pre>
     * The table size for Maglev hashing. Maglev aims for "minimal disruption" rather than an absolute guarantee.
     * Minimal disruption means that when the set of upstream hosts change, a connection will likely be sent to the same
     * upstream as it was before. Increasing the table size reduces the amount of disruption.
     * The table size must be prime number limited to 5000011. If it is not specified, the default is 65537.
     * </pre>
     *
     * <code>.google.protobuf.UInt64Value table_size = 1 [(.validate.rules) = { ... }</code>
     */
    private com.google.protobuf.SingleFieldBuilderV3<
        com.google.protobuf.UInt64Value, com.google.protobuf.UInt64Value.Builder, com.google.protobuf.UInt64ValueOrBuilder> 
        getTableSizeFieldBuilder() {
      if (tableSizeBuilder_ == null) {
        tableSizeBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
            com.google.protobuf.UInt64Value, com.google.protobuf.UInt64Value.Builder, com.google.protobuf.UInt64ValueOrBuilder>(
                getTableSize(),
                getParentForChildren(),
                isClean());
        tableSize_ = null;
      }
      return tableSizeBuilder_;
    }

    private io.envoyproxy.envoy.extensions.load_balancing_policies.common.v3.ConsistentHashingLbConfig consistentHashingLbConfig_;
    private com.google.protobuf.SingleFieldBuilderV3<
        io.envoyproxy.envoy.extensions.load_balancing_policies.common.v3.ConsistentHashingLbConfig, io.envoyproxy.envoy.extensions.load_balancing_policies.common.v3.ConsistentHashingLbConfig.Builder, io.envoyproxy.envoy.extensions.load_balancing_policies.common.v3.ConsistentHashingLbConfigOrBuilder> consistentHashingLbConfigBuilder_;
    /**
     * <pre>
     * Common configuration for hashing-based load balancing policies.
     * </pre>
     *
     * <code>.envoy.extensions.load_balancing_policies.common.v3.ConsistentHashingLbConfig consistent_hashing_lb_config = 2;</code>
     * @return Whether the consistentHashingLbConfig field is set.
     */
    public boolean hasConsistentHashingLbConfig() {
      return ((bitField0_ & 0x00000002) != 0);
    }
    /**
     * <pre>
     * Common configuration for hashing-based load balancing policies.
     * </pre>
     *
     * <code>.envoy.extensions.load_balancing_policies.common.v3.ConsistentHashingLbConfig consistent_hashing_lb_config = 2;</code>
     * @return The consistentHashingLbConfig.
     */
    public io.envoyproxy.envoy.extensions.load_balancing_policies.common.v3.ConsistentHashingLbConfig getConsistentHashingLbConfig() {
      if (consistentHashingLbConfigBuilder_ == null) {
        return consistentHashingLbConfig_ == null ? io.envoyproxy.envoy.extensions.load_balancing_policies.common.v3.ConsistentHashingLbConfig.getDefaultInstance() : consistentHashingLbConfig_;
      } else {
        return consistentHashingLbConfigBuilder_.getMessage();
      }
    }
    /**
     * <pre>
     * Common configuration for hashing-based load balancing policies.
     * </pre>
     *
     * <code>.envoy.extensions.load_balancing_policies.common.v3.ConsistentHashingLbConfig consistent_hashing_lb_config = 2;</code>
     */
    public Builder setConsistentHashingLbConfig(io.envoyproxy.envoy.extensions.load_balancing_policies.common.v3.ConsistentHashingLbConfig value) {
      if (consistentHashingLbConfigBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        consistentHashingLbConfig_ = value;
      } else {
        consistentHashingLbConfigBuilder_.setMessage(value);
      }
      bitField0_ |= 0x00000002;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * Common configuration for hashing-based load balancing policies.
     * </pre>
     *
     * <code>.envoy.extensions.load_balancing_policies.common.v3.ConsistentHashingLbConfig consistent_hashing_lb_config = 2;</code>
     */
    public Builder setConsistentHashingLbConfig(
        io.envoyproxy.envoy.extensions.load_balancing_policies.common.v3.ConsistentHashingLbConfig.Builder builderForValue) {
      if (consistentHashingLbConfigBuilder_ == null) {
        consistentHashingLbConfig_ = builderForValue.build();
      } else {
        consistentHashingLbConfigBuilder_.setMessage(builderForValue.build());
      }
      bitField0_ |= 0x00000002;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * Common configuration for hashing-based load balancing policies.
     * </pre>
     *
     * <code>.envoy.extensions.load_balancing_policies.common.v3.ConsistentHashingLbConfig consistent_hashing_lb_config = 2;</code>
     */
    public Builder mergeConsistentHashingLbConfig(io.envoyproxy.envoy.extensions.load_balancing_policies.common.v3.ConsistentHashingLbConfig value) {
      if (consistentHashingLbConfigBuilder_ == null) {
        if (((bitField0_ & 0x00000002) != 0) &&
          consistentHashingLbConfig_ != null &&
          consistentHashingLbConfig_ != io.envoyproxy.envoy.extensions.load_balancing_policies.common.v3.ConsistentHashingLbConfig.getDefaultInstance()) {
          getConsistentHashingLbConfigBuilder().mergeFrom(value);
        } else {
          consistentHashingLbConfig_ = value;
        }
      } else {
        consistentHashingLbConfigBuilder_.mergeFrom(value);
      }
      bitField0_ |= 0x00000002;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * Common configuration for hashing-based load balancing policies.
     * </pre>
     *
     * <code>.envoy.extensions.load_balancing_policies.common.v3.ConsistentHashingLbConfig consistent_hashing_lb_config = 2;</code>
     */
    public Builder clearConsistentHashingLbConfig() {
      bitField0_ = (bitField0_ & ~0x00000002);
      consistentHashingLbConfig_ = null;
      if (consistentHashingLbConfigBuilder_ != null) {
        consistentHashingLbConfigBuilder_.dispose();
        consistentHashingLbConfigBuilder_ = null;
      }
      onChanged();
      return this;
    }
    /**
     * <pre>
     * Common configuration for hashing-based load balancing policies.
     * </pre>
     *
     * <code>.envoy.extensions.load_balancing_policies.common.v3.ConsistentHashingLbConfig consistent_hashing_lb_config = 2;</code>
     */
    public io.envoyproxy.envoy.extensions.load_balancing_policies.common.v3.ConsistentHashingLbConfig.Builder getConsistentHashingLbConfigBuilder() {
      bitField0_ |= 0x00000002;
      onChanged();
      return getConsistentHashingLbConfigFieldBuilder().getBuilder();
    }
    /**
     * <pre>
     * Common configuration for hashing-based load balancing policies.
     * </pre>
     *
     * <code>.envoy.extensions.load_balancing_policies.common.v3.ConsistentHashingLbConfig consistent_hashing_lb_config = 2;</code>
     */
    public io.envoyproxy.envoy.extensions.load_balancing_policies.common.v3.ConsistentHashingLbConfigOrBuilder getConsistentHashingLbConfigOrBuilder() {
      if (consistentHashingLbConfigBuilder_ != null) {
        return consistentHashingLbConfigBuilder_.getMessageOrBuilder();
      } else {
        return consistentHashingLbConfig_ == null ?
            io.envoyproxy.envoy.extensions.load_balancing_policies.common.v3.ConsistentHashingLbConfig.getDefaultInstance() : consistentHashingLbConfig_;
      }
    }
    /**
     * <pre>
     * Common configuration for hashing-based load balancing policies.
     * </pre>
     *
     * <code>.envoy.extensions.load_balancing_policies.common.v3.ConsistentHashingLbConfig consistent_hashing_lb_config = 2;</code>
     */
    private com.google.protobuf.SingleFieldBuilderV3<
        io.envoyproxy.envoy.extensions.load_balancing_policies.common.v3.ConsistentHashingLbConfig, io.envoyproxy.envoy.extensions.load_balancing_policies.common.v3.ConsistentHashingLbConfig.Builder, io.envoyproxy.envoy.extensions.load_balancing_policies.common.v3.ConsistentHashingLbConfigOrBuilder> 
        getConsistentHashingLbConfigFieldBuilder() {
      if (consistentHashingLbConfigBuilder_ == null) {
        consistentHashingLbConfigBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
            io.envoyproxy.envoy.extensions.load_balancing_policies.common.v3.ConsistentHashingLbConfig, io.envoyproxy.envoy.extensions.load_balancing_policies.common.v3.ConsistentHashingLbConfig.Builder, io.envoyproxy.envoy.extensions.load_balancing_policies.common.v3.ConsistentHashingLbConfigOrBuilder>(
                getConsistentHashingLbConfig(),
                getParentForChildren(),
                isClean());
        consistentHashingLbConfig_ = null;
      }
      return consistentHashingLbConfigBuilder_;
    }
    @java.lang.Override
    public final Builder setUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return super.setUnknownFields(unknownFields);
    }

    @java.lang.Override
    public final Builder mergeUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return super.mergeUnknownFields(unknownFields);
    }


    // @@protoc_insertion_point(builder_scope:envoy.extensions.load_balancing_policies.maglev.v3.Maglev)
  }

  // @@protoc_insertion_point(class_scope:envoy.extensions.load_balancing_policies.maglev.v3.Maglev)
  private static final io.envoyproxy.envoy.extensions.load_balancing_policies.maglev.v3.Maglev DEFAULT_INSTANCE;
  static {
    DEFAULT_INSTANCE = new io.envoyproxy.envoy.extensions.load_balancing_policies.maglev.v3.Maglev();
  }

  public static io.envoyproxy.envoy.extensions.load_balancing_policies.maglev.v3.Maglev getDefaultInstance() {
    return DEFAULT_INSTANCE;
  }

  private static final com.google.protobuf.Parser<Maglev>
      PARSER = new com.google.protobuf.AbstractParser<Maglev>() {
    @java.lang.Override
    public Maglev parsePartialFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      Builder builder = newBuilder();
      try {
        builder.mergeFrom(input, extensionRegistry);
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(builder.buildPartial());
      } catch (com.google.protobuf.UninitializedMessageException e) {
        throw e.asInvalidProtocolBufferException().setUnfinishedMessage(builder.buildPartial());
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(e)
            .setUnfinishedMessage(builder.buildPartial());
      }
      return builder.buildPartial();
    }
  };

  public static com.google.protobuf.Parser<Maglev> parser() {
    return PARSER;
  }

  @java.lang.Override
  public com.google.protobuf.Parser<Maglev> getParserForType() {
    return PARSER;
  }

  @java.lang.Override
  public io.envoyproxy.envoy.extensions.load_balancing_policies.maglev.v3.Maglev getDefaultInstanceForType() {
    return DEFAULT_INSTANCE;
  }

}

