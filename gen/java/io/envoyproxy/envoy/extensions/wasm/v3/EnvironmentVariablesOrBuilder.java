// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: envoy/extensions/wasm/v3/wasm.proto

package io.envoyproxy.envoy.extensions.wasm.v3;

public interface EnvironmentVariablesOrBuilder extends
    // @@protoc_insertion_point(interface_extends:envoy.extensions.wasm.v3.EnvironmentVariables)
    com.google.protobuf.MessageOrBuilder {

  /**
   * <pre>
   * The keys of *Envoy's* environment variables exposed to this VM. In other words, if a key exists in Envoy's environment
   * variables, then that key-value pair will be injected. Note that if a key does not exist, it will be ignored.
   * </pre>
   *
   * <code>repeated string host_env_keys = 1;</code>
   * @return A list containing the hostEnvKeys.
   */
  java.util.List<java.lang.String>
      getHostEnvKeysList();
  /**
   * <pre>
   * The keys of *Envoy's* environment variables exposed to this VM. In other words, if a key exists in Envoy's environment
   * variables, then that key-value pair will be injected. Note that if a key does not exist, it will be ignored.
   * </pre>
   *
   * <code>repeated string host_env_keys = 1;</code>
   * @return The count of hostEnvKeys.
   */
  int getHostEnvKeysCount();
  /**
   * <pre>
   * The keys of *Envoy's* environment variables exposed to this VM. In other words, if a key exists in Envoy's environment
   * variables, then that key-value pair will be injected. Note that if a key does not exist, it will be ignored.
   * </pre>
   *
   * <code>repeated string host_env_keys = 1;</code>
   * @param index The index of the element to return.
   * @return The hostEnvKeys at the given index.
   */
  java.lang.String getHostEnvKeys(int index);
  /**
   * <pre>
   * The keys of *Envoy's* environment variables exposed to this VM. In other words, if a key exists in Envoy's environment
   * variables, then that key-value pair will be injected. Note that if a key does not exist, it will be ignored.
   * </pre>
   *
   * <code>repeated string host_env_keys = 1;</code>
   * @param index The index of the value to return.
   * @return The bytes of the hostEnvKeys at the given index.
   */
  com.google.protobuf.ByteString
      getHostEnvKeysBytes(int index);

  /**
   * <pre>
   * Explicitly given key-value pairs to be injected to this VM in the form of "KEY=VALUE".
   * </pre>
   *
   * <code>map&lt;string, string&gt; key_values = 2;</code>
   */
  int getKeyValuesCount();
  /**
   * <pre>
   * Explicitly given key-value pairs to be injected to this VM in the form of "KEY=VALUE".
   * </pre>
   *
   * <code>map&lt;string, string&gt; key_values = 2;</code>
   */
  boolean containsKeyValues(
      java.lang.String key);
  /**
   * Use {@link #getKeyValuesMap()} instead.
   */
  @java.lang.Deprecated
  java.util.Map<java.lang.String, java.lang.String>
  getKeyValues();
  /**
   * <pre>
   * Explicitly given key-value pairs to be injected to this VM in the form of "KEY=VALUE".
   * </pre>
   *
   * <code>map&lt;string, string&gt; key_values = 2;</code>
   */
  java.util.Map<java.lang.String, java.lang.String>
  getKeyValuesMap();
  /**
   * <pre>
   * Explicitly given key-value pairs to be injected to this VM in the form of "KEY=VALUE".
   * </pre>
   *
   * <code>map&lt;string, string&gt; key_values = 2;</code>
   */

  /* nullable */
java.lang.String getKeyValuesOrDefault(
      java.lang.String key,
      /* nullable */
java.lang.String defaultValue);
  /**
   * <pre>
   * Explicitly given key-value pairs to be injected to this VM in the form of "KEY=VALUE".
   * </pre>
   *
   * <code>map&lt;string, string&gt; key_values = 2;</code>
   */

  java.lang.String getKeyValuesOrThrow(
      java.lang.String key);
}
