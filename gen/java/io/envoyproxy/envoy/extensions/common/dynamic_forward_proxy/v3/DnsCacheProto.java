// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: envoy/extensions/common/dynamic_forward_proxy/v3/dns_cache.proto

package io.envoyproxy.envoy.extensions.common.dynamic_forward_proxy.v3;

public final class DnsCacheProto {
  private DnsCacheProto() {}
  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistryLite registry) {
  }

  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistry registry) {
    registerAllExtensions(
        (com.google.protobuf.ExtensionRegistryLite) registry);
  }
  static final com.google.protobuf.Descriptors.Descriptor
    internal_static_envoy_extensions_common_dynamic_forward_proxy_v3_DnsCacheCircuitBreakers_descriptor;
  static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_envoy_extensions_common_dynamic_forward_proxy_v3_DnsCacheCircuitBreakers_fieldAccessorTable;
  static final com.google.protobuf.Descriptors.Descriptor
    internal_static_envoy_extensions_common_dynamic_forward_proxy_v3_DnsCacheConfig_descriptor;
  static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_envoy_extensions_common_dynamic_forward_proxy_v3_DnsCacheConfig_fieldAccessorTable;

  public static com.google.protobuf.Descriptors.FileDescriptor
      getDescriptor() {
    return descriptor;
  }
  private static  com.google.protobuf.Descriptors.FileDescriptor
      descriptor;
  static {
    java.lang.String[] descriptorData = {
      "\n@envoy/extensions/common/dynamic_forwar" +
      "d_proxy/v3/dns_cache.proto\0220envoy.extens" +
      "ions.common.dynamic_forward_proxy.v3\032%en" +
      "voy/config/cluster/v3/cluster.proto\032-env" +
      "oy/config/common/key_value/v3/config.pro" +
      "to\032\"envoy/config/core/v3/address.proto\032$" +
      "envoy/config/core/v3/extension.proto\032#en" +
      "voy/config/core/v3/resolver.proto\032\036googl" +
      "e/protobuf/duration.proto\032\036google/protob" +
      "uf/wrappers.proto\032#envoy/annotations/dep" +
      "recation.proto\032\035udpa/annotations/status." +
      "proto\032!udpa/annotations/versioning.proto" +
      "\032\027validate/validate.proto\"U\n\027DnsCacheCir" +
      "cuitBreakers\022:\n\024max_pending_requests\030\001 \001" +
      "(\0132\034.google.protobuf.UInt32Value\"\246\010\n\016Dns" +
      "CacheConfig\022\025\n\004name\030\001 \001(\tB\007\372B\004r\002\020\001\022U\n\021dn" +
      "s_lookup_family\030\002 \001(\01620.envoy.config.clu" +
      "ster.v3.Cluster.DnsLookupFamilyB\010\372B\005\202\001\002\020" +
      "\001\022A\n\020dns_refresh_rate\030\003 \001(\0132\031.google.pro" +
      "tobuf.DurationB\014\372B\t\252\001\0062\004\020\300\204=\022C\n\024dns_min_" +
      "refresh_rate\030\016 \001(\0132\031.google.protobuf.Dur" +
      "ationB\n\372B\007\252\001\0042\002\010\005\0225\n\010host_ttl\030\004 \001(\0132\031.go" +
      "ogle.protobuf.DurationB\010\372B\005\252\001\002*\000\0228\n\tmax_" +
      "hosts\030\005 \001(\0132\034.google.protobuf.UInt32Valu" +
      "eB\007\372B\004*\002 \000\022N\n\030dns_failure_refresh_rate\030\006" +
      " \001(\0132,.envoy.config.cluster.v3.Cluster.R" +
      "efreshRate\022l\n\031dns_cache_circuit_breaker\030" +
      "\007 \001(\0132I.envoy.extensions.common.dynamic_" +
      "forward_proxy.v3.DnsCacheCircuitBreakers" +
      "\022,\n\027use_tcp_for_dns_lookups\030\010 \001(\010B\013\030\001\222\307\206" +
      "\330\004\0033.0\022U\n\025dns_resolution_config\030\t \001(\0132)." +
      "envoy.config.core.v3.DnsResolutionConfig" +
      "B\013\030\001\222\307\206\330\004\0033.0\022M\n\031typed_dns_resolver_conf" +
      "ig\030\014 \001(\0132*.envoy.config.core.v3.TypedExt" +
      "ensionConfig\022A\n\024preresolve_hostnames\030\n \003" +
      "(\0132#.envoy.config.core.v3.SocketAddress\022" +
      ">\n\021dns_query_timeout\030\013 \001(\0132\031.google.prot" +
      "obuf.DurationB\010\372B\005\252\001\002*\000\022O\n\020key_value_con" +
      "fig\030\r \001(\01325.envoy.config.common.key_valu" +
      "e.v3.KeyValueStoreConfig:G\232\305\210\036B\n@envoy.c" +
      "onfig.common.dynamic_forward_proxy.v2alp" +
      "ha.DnsCacheConfigB\312\001\n>io.envoyproxy.envo" +
      "y.extensions.common.dynamic_forward_prox" +
      "y.v3B\rDnsCacheProtoP\001Zogithub.com/envoyp" +
      "roxy/go-control-plane/envoy/extensions/c" +
      "ommon/dynamic_forward_proxy/v3;dynamic_f" +
      "orward_proxyv3\272\200\310\321\006\002\020\002b\006proto3"
    };
    descriptor = com.google.protobuf.Descriptors.FileDescriptor
      .internalBuildGeneratedFileFrom(descriptorData,
        new com.google.protobuf.Descriptors.FileDescriptor[] {
          io.envoyproxy.envoy.config.cluster.v3.ClusterProto.getDescriptor(),
          io.envoyproxy.envoy.config.common.key_value.v3.ConfigProto.getDescriptor(),
          io.envoyproxy.envoy.config.core.v3.AddressProto.getDescriptor(),
          io.envoyproxy.envoy.config.core.v3.ExtensionProto.getDescriptor(),
          io.envoyproxy.envoy.config.core.v3.ResolverProto.getDescriptor(),
          com.google.protobuf.DurationProto.getDescriptor(),
          com.google.protobuf.WrappersProto.getDescriptor(),
          envoy.annotations.Deprecation.getDescriptor(),
          udpa.annotations.Status.getDescriptor(),
          udpa.annotations.Versioning.getDescriptor(),
          io.envoyproxy.pgv.validate.Validate.getDescriptor(),
        });
    internal_static_envoy_extensions_common_dynamic_forward_proxy_v3_DnsCacheCircuitBreakers_descriptor =
      getDescriptor().getMessageTypes().get(0);
    internal_static_envoy_extensions_common_dynamic_forward_proxy_v3_DnsCacheCircuitBreakers_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_envoy_extensions_common_dynamic_forward_proxy_v3_DnsCacheCircuitBreakers_descriptor,
        new java.lang.String[] { "MaxPendingRequests", });
    internal_static_envoy_extensions_common_dynamic_forward_proxy_v3_DnsCacheConfig_descriptor =
      getDescriptor().getMessageTypes().get(1);
    internal_static_envoy_extensions_common_dynamic_forward_proxy_v3_DnsCacheConfig_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_envoy_extensions_common_dynamic_forward_proxy_v3_DnsCacheConfig_descriptor,
        new java.lang.String[] { "Name", "DnsLookupFamily", "DnsRefreshRate", "DnsMinRefreshRate", "HostTtl", "MaxHosts", "DnsFailureRefreshRate", "DnsCacheCircuitBreaker", "UseTcpForDnsLookups", "DnsResolutionConfig", "TypedDnsResolverConfig", "PreresolveHostnames", "DnsQueryTimeout", "KeyValueConfig", });
    com.google.protobuf.ExtensionRegistry registry =
        com.google.protobuf.ExtensionRegistry.newInstance();
    registry.add(envoy.annotations.Deprecation.deprecatedAtMinorVersion);
    registry.add(udpa.annotations.Status.fileStatus);
    registry.add(udpa.annotations.Versioning.versioning);
    registry.add(io.envoyproxy.pgv.validate.Validate.rules);
    com.google.protobuf.Descriptors.FileDescriptor
        .internalUpdateFileDescriptor(descriptor, registry);
    io.envoyproxy.envoy.config.cluster.v3.ClusterProto.getDescriptor();
    io.envoyproxy.envoy.config.common.key_value.v3.ConfigProto.getDescriptor();
    io.envoyproxy.envoy.config.core.v3.AddressProto.getDescriptor();
    io.envoyproxy.envoy.config.core.v3.ExtensionProto.getDescriptor();
    io.envoyproxy.envoy.config.core.v3.ResolverProto.getDescriptor();
    com.google.protobuf.DurationProto.getDescriptor();
    com.google.protobuf.WrappersProto.getDescriptor();
    envoy.annotations.Deprecation.getDescriptor();
    udpa.annotations.Status.getDescriptor();
    udpa.annotations.Versioning.getDescriptor();
    io.envoyproxy.pgv.validate.Validate.getDescriptor();
  }

  // @@protoc_insertion_point(outer_class_scope)
}
