// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: envoy/extensions/rbac/matchers/upstream_ip_port/v3/upstream_ip_port_matcher.proto

package io.envoyproxy.envoy.extensions.rbac.matchers.upstream_ip_port.v3;

public interface UpstreamIpPortMatcherOrBuilder extends
    // @@protoc_insertion_point(interface_extends:envoy.extensions.rbac.matchers.upstream_ip_port.v3.UpstreamIpPortMatcher)
    com.google.protobuf.MessageOrBuilder {

  /**
   * <pre>
   * A CIDR block that will be used to match the upstream IP.
   * Both Ipv4 and Ipv6 ranges can be matched.
   * </pre>
   *
   * <code>.envoy.config.core.v3.CidrRange upstream_ip = 1;</code>
   * @return Whether the upstreamIp field is set.
   */
  boolean hasUpstreamIp();
  /**
   * <pre>
   * A CIDR block that will be used to match the upstream IP.
   * Both Ipv4 and Ipv6 ranges can be matched.
   * </pre>
   *
   * <code>.envoy.config.core.v3.CidrRange upstream_ip = 1;</code>
   * @return The upstreamIp.
   */
  io.envoyproxy.envoy.config.core.v3.CidrRange getUpstreamIp();
  /**
   * <pre>
   * A CIDR block that will be used to match the upstream IP.
   * Both Ipv4 and Ipv6 ranges can be matched.
   * </pre>
   *
   * <code>.envoy.config.core.v3.CidrRange upstream_ip = 1;</code>
   */
  io.envoyproxy.envoy.config.core.v3.CidrRangeOrBuilder getUpstreamIpOrBuilder();

  /**
   * <pre>
   * A port range that will be used to match the upstream port.
   * </pre>
   *
   * <code>.envoy.type.v3.Int64Range upstream_port_range = 2;</code>
   * @return Whether the upstreamPortRange field is set.
   */
  boolean hasUpstreamPortRange();
  /**
   * <pre>
   * A port range that will be used to match the upstream port.
   * </pre>
   *
   * <code>.envoy.type.v3.Int64Range upstream_port_range = 2;</code>
   * @return The upstreamPortRange.
   */
  io.envoyproxy.envoy.type.v3.Int64Range getUpstreamPortRange();
  /**
   * <pre>
   * A port range that will be used to match the upstream port.
   * </pre>
   *
   * <code>.envoy.type.v3.Int64Range upstream_port_range = 2;</code>
   */
  io.envoyproxy.envoy.type.v3.Int64RangeOrBuilder getUpstreamPortRangeOrBuilder();
}
