// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: envoy/extensions/rbac/matchers/upstream_ip_port/v3/upstream_ip_port_matcher.proto

package io.envoyproxy.envoy.extensions.rbac.matchers.upstream_ip_port.v3;

public final class UpstreamIpPortMatcherProto {
  private UpstreamIpPortMatcherProto() {}
  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistryLite registry) {
  }

  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistry registry) {
    registerAllExtensions(
        (com.google.protobuf.ExtensionRegistryLite) registry);
  }
  static final com.google.protobuf.Descriptors.Descriptor
    internal_static_envoy_extensions_rbac_matchers_upstream_ip_port_v3_UpstreamIpPortMatcher_descriptor;
  static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_envoy_extensions_rbac_matchers_upstream_ip_port_v3_UpstreamIpPortMatcher_fieldAccessorTable;

  public static com.google.protobuf.Descriptors.FileDescriptor
      getDescriptor() {
    return descriptor;
  }
  private static  com.google.protobuf.Descriptors.FileDescriptor
      descriptor;
  static {
    java.lang.String[] descriptorData = {
      "\nQenvoy/extensions/rbac/matchers/upstrea" +
      "m_ip_port/v3/upstream_ip_port_matcher.pr" +
      "oto\0222envoy.extensions.rbac.matchers.upst" +
      "ream_ip_port.v3\032\"envoy/config/core/v3/ad" +
      "dress.proto\032\031envoy/type/v3/range.proto\032\035" +
      "udpa/annotations/status.proto\"\205\001\n\025Upstre" +
      "amIpPortMatcher\0224\n\013upstream_ip\030\001 \001(\0132\037.e" +
      "nvoy.config.core.v3.CidrRange\0226\n\023upstrea" +
      "m_port_range\030\002 \001(\0132\031.envoy.type.v3.Int64" +
      "RangeB\326\001\n@io.envoyproxy.envoy.extensions" +
      ".rbac.matchers.upstream_ip_port.v3B\032Upst" +
      "reamIpPortMatcherProtoP\001Zlgithub.com/env" +
      "oyproxy/go-control-plane/envoy/extension" +
      "s/rbac/matchers/upstream_ip_port/v3;upst" +
      "ream_ip_portv3\272\200\310\321\006\002\020\002b\006proto3"
    };
    descriptor = com.google.protobuf.Descriptors.FileDescriptor
      .internalBuildGeneratedFileFrom(descriptorData,
        new com.google.protobuf.Descriptors.FileDescriptor[] {
          io.envoyproxy.envoy.config.core.v3.AddressProto.getDescriptor(),
          io.envoyproxy.envoy.type.v3.RangeProto.getDescriptor(),
          udpa.annotations.Status.getDescriptor(),
        });
    internal_static_envoy_extensions_rbac_matchers_upstream_ip_port_v3_UpstreamIpPortMatcher_descriptor =
      getDescriptor().getMessageTypes().get(0);
    internal_static_envoy_extensions_rbac_matchers_upstream_ip_port_v3_UpstreamIpPortMatcher_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_envoy_extensions_rbac_matchers_upstream_ip_port_v3_UpstreamIpPortMatcher_descriptor,
        new java.lang.String[] { "UpstreamIp", "UpstreamPortRange", });
    com.google.protobuf.ExtensionRegistry registry =
        com.google.protobuf.ExtensionRegistry.newInstance();
    registry.add(udpa.annotations.Status.fileStatus);
    com.google.protobuf.Descriptors.FileDescriptor
        .internalUpdateFileDescriptor(descriptor, registry);
    io.envoyproxy.envoy.config.core.v3.AddressProto.getDescriptor();
    io.envoyproxy.envoy.type.v3.RangeProto.getDescriptor();
    udpa.annotations.Status.getDescriptor();
  }

  // @@protoc_insertion_point(outer_class_scope)
}
