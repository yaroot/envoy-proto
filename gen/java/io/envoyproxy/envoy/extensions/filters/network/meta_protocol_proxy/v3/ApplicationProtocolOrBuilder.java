// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: envoy/extensions/filters/network/meta_protocol_proxy/v3/meta_protocol_proxy.proto

package io.envoyproxy.envoy.extensions.filters.network.meta_protocol_proxy.v3;

public interface ApplicationProtocolOrBuilder extends
    // @@protoc_insertion_point(interface_extends:envoy.extensions.filters.network.meta_protocol_proxy.v3.ApplicationProtocol)
    com.google.protobuf.MessageOrBuilder {

  /**
   * <pre>
   * The name of the application protocol.
   * </pre>
   *
   * <code>string name = 1 [(.validate.rules) = { ... }</code>
   * @return The name.
   */
  java.lang.String getName();
  /**
   * <pre>
   * The name of the application protocol.
   * </pre>
   *
   * <code>string name = 1 [(.validate.rules) = { ... }</code>
   * @return The bytes for name.
   */
  com.google.protobuf.ByteString
      getNameBytes();

  /**
   * <pre>
   * The codec which encodes and decodes the application protocol.
   * </pre>
   *
   * <code>.envoy.config.core.v3.TypedExtensionConfig codec = 2 [(.validate.rules) = { ... }</code>
   * @return Whether the codec field is set.
   */
  boolean hasCodec();
  /**
   * <pre>
   * The codec which encodes and decodes the application protocol.
   * </pre>
   *
   * <code>.envoy.config.core.v3.TypedExtensionConfig codec = 2 [(.validate.rules) = { ... }</code>
   * @return The codec.
   */
  io.envoyproxy.envoy.config.core.v3.TypedExtensionConfig getCodec();
  /**
   * <pre>
   * The codec which encodes and decodes the application protocol.
   * </pre>
   *
   * <code>.envoy.config.core.v3.TypedExtensionConfig codec = 2 [(.validate.rules) = { ... }</code>
   */
  io.envoyproxy.envoy.config.core.v3.TypedExtensionConfigOrBuilder getCodecOrBuilder();
}
