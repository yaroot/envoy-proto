// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: envoy/extensions/filters/network/connection_limit/v3/connection_limit.proto

package io.envoyproxy.envoy.extensions.filters.network.connection_limit.v3;

public interface ConnectionLimitOrBuilder extends
    // @@protoc_insertion_point(interface_extends:envoy.extensions.filters.network.connection_limit.v3.ConnectionLimit)
    com.google.protobuf.MessageOrBuilder {

  /**
   * <pre>
   * The prefix to use when emitting :ref:`statistics
   * &lt;config_network_filters_connection_limit_stats&gt;`.
   * </pre>
   *
   * <code>string stat_prefix = 1 [(.validate.rules) = { ... }</code>
   * @return The statPrefix.
   */
  java.lang.String getStatPrefix();
  /**
   * <pre>
   * The prefix to use when emitting :ref:`statistics
   * &lt;config_network_filters_connection_limit_stats&gt;`.
   * </pre>
   *
   * <code>string stat_prefix = 1 [(.validate.rules) = { ... }</code>
   * @return The bytes for statPrefix.
   */
  com.google.protobuf.ByteString
      getStatPrefixBytes();

  /**
   * <pre>
   * The max connections configuration to use for new incoming connections that are processed
   * by the filter's filter chain. When max_connection is reached, the incoming connection
   * will be closed after delay duration.
   * </pre>
   *
   * <code>.google.protobuf.UInt64Value max_connections = 2 [(.validate.rules) = { ... }</code>
   * @return Whether the maxConnections field is set.
   */
  boolean hasMaxConnections();
  /**
   * <pre>
   * The max connections configuration to use for new incoming connections that are processed
   * by the filter's filter chain. When max_connection is reached, the incoming connection
   * will be closed after delay duration.
   * </pre>
   *
   * <code>.google.protobuf.UInt64Value max_connections = 2 [(.validate.rules) = { ... }</code>
   * @return The maxConnections.
   */
  com.google.protobuf.UInt64Value getMaxConnections();
  /**
   * <pre>
   * The max connections configuration to use for new incoming connections that are processed
   * by the filter's filter chain. When max_connection is reached, the incoming connection
   * will be closed after delay duration.
   * </pre>
   *
   * <code>.google.protobuf.UInt64Value max_connections = 2 [(.validate.rules) = { ... }</code>
   */
  com.google.protobuf.UInt64ValueOrBuilder getMaxConnectionsOrBuilder();

  /**
   * <pre>
   * The delay configuration to use for rejecting the connection after some specified time duration
   * instead of immediately rejecting the connection. That way, a malicious user is not able to
   * retry as fast as possible which provides a better DoS protection for Envoy. If this is not present,
   * the connection will be closed immediately.
   * </pre>
   *
   * <code>.google.protobuf.Duration delay = 3;</code>
   * @return Whether the delay field is set.
   */
  boolean hasDelay();
  /**
   * <pre>
   * The delay configuration to use for rejecting the connection after some specified time duration
   * instead of immediately rejecting the connection. That way, a malicious user is not able to
   * retry as fast as possible which provides a better DoS protection for Envoy. If this is not present,
   * the connection will be closed immediately.
   * </pre>
   *
   * <code>.google.protobuf.Duration delay = 3;</code>
   * @return The delay.
   */
  com.google.protobuf.Duration getDelay();
  /**
   * <pre>
   * The delay configuration to use for rejecting the connection after some specified time duration
   * instead of immediately rejecting the connection. That way, a malicious user is not able to
   * retry as fast as possible which provides a better DoS protection for Envoy. If this is not present,
   * the connection will be closed immediately.
   * </pre>
   *
   * <code>.google.protobuf.Duration delay = 3;</code>
   */
  com.google.protobuf.DurationOrBuilder getDelayOrBuilder();

  /**
   * <pre>
   * Runtime flag that controls whether the filter is enabled or not. If not specified, defaults
   * to enabled.
   * </pre>
   *
   * <code>.envoy.config.core.v3.RuntimeFeatureFlag runtime_enabled = 4;</code>
   * @return Whether the runtimeEnabled field is set.
   */
  boolean hasRuntimeEnabled();
  /**
   * <pre>
   * Runtime flag that controls whether the filter is enabled or not. If not specified, defaults
   * to enabled.
   * </pre>
   *
   * <code>.envoy.config.core.v3.RuntimeFeatureFlag runtime_enabled = 4;</code>
   * @return The runtimeEnabled.
   */
  io.envoyproxy.envoy.config.core.v3.RuntimeFeatureFlag getRuntimeEnabled();
  /**
   * <pre>
   * Runtime flag that controls whether the filter is enabled or not. If not specified, defaults
   * to enabled.
   * </pre>
   *
   * <code>.envoy.config.core.v3.RuntimeFeatureFlag runtime_enabled = 4;</code>
   */
  io.envoyproxy.envoy.config.core.v3.RuntimeFeatureFlagOrBuilder getRuntimeEnabledOrBuilder();
}
