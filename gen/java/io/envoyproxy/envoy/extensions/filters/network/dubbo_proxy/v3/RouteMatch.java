// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: envoy/extensions/filters/network/dubbo_proxy/v3/route.proto

package io.envoyproxy.envoy.extensions.filters.network.dubbo_proxy.v3;

/**
 * Protobuf type {@code envoy.extensions.filters.network.dubbo_proxy.v3.RouteMatch}
 */
public final class RouteMatch extends
    com.google.protobuf.GeneratedMessageV3 implements
    // @@protoc_insertion_point(message_implements:envoy.extensions.filters.network.dubbo_proxy.v3.RouteMatch)
    RouteMatchOrBuilder {
private static final long serialVersionUID = 0L;
  // Use RouteMatch.newBuilder() to construct.
  private RouteMatch(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
    super(builder);
  }
  private RouteMatch() {
    headers_ = java.util.Collections.emptyList();
  }

  @java.lang.Override
  @SuppressWarnings({"unused"})
  protected java.lang.Object newInstance(
      UnusedPrivateParameter unused) {
    return new RouteMatch();
  }

  @java.lang.Override
  public final com.google.protobuf.UnknownFieldSet
  getUnknownFields() {
    return this.unknownFields;
  }
  public static final com.google.protobuf.Descriptors.Descriptor
      getDescriptor() {
    return io.envoyproxy.envoy.extensions.filters.network.dubbo_proxy.v3.RouteProto.internal_static_envoy_extensions_filters_network_dubbo_proxy_v3_RouteMatch_descriptor;
  }

  @java.lang.Override
  protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internalGetFieldAccessorTable() {
    return io.envoyproxy.envoy.extensions.filters.network.dubbo_proxy.v3.RouteProto.internal_static_envoy_extensions_filters_network_dubbo_proxy_v3_RouteMatch_fieldAccessorTable
        .ensureFieldAccessorsInitialized(
            io.envoyproxy.envoy.extensions.filters.network.dubbo_proxy.v3.RouteMatch.class, io.envoyproxy.envoy.extensions.filters.network.dubbo_proxy.v3.RouteMatch.Builder.class);
  }

  public static final int METHOD_FIELD_NUMBER = 1;
  private io.envoyproxy.envoy.extensions.filters.network.dubbo_proxy.v3.MethodMatch method_;
  /**
   * <pre>
   * Method level routing matching.
   * </pre>
   *
   * <code>.envoy.extensions.filters.network.dubbo_proxy.v3.MethodMatch method = 1;</code>
   * @return Whether the method field is set.
   */
  @java.lang.Override
  public boolean hasMethod() {
    return method_ != null;
  }
  /**
   * <pre>
   * Method level routing matching.
   * </pre>
   *
   * <code>.envoy.extensions.filters.network.dubbo_proxy.v3.MethodMatch method = 1;</code>
   * @return The method.
   */
  @java.lang.Override
  public io.envoyproxy.envoy.extensions.filters.network.dubbo_proxy.v3.MethodMatch getMethod() {
    return method_ == null ? io.envoyproxy.envoy.extensions.filters.network.dubbo_proxy.v3.MethodMatch.getDefaultInstance() : method_;
  }
  /**
   * <pre>
   * Method level routing matching.
   * </pre>
   *
   * <code>.envoy.extensions.filters.network.dubbo_proxy.v3.MethodMatch method = 1;</code>
   */
  @java.lang.Override
  public io.envoyproxy.envoy.extensions.filters.network.dubbo_proxy.v3.MethodMatchOrBuilder getMethodOrBuilder() {
    return method_ == null ? io.envoyproxy.envoy.extensions.filters.network.dubbo_proxy.v3.MethodMatch.getDefaultInstance() : method_;
  }

  public static final int HEADERS_FIELD_NUMBER = 2;
  @SuppressWarnings("serial")
  private java.util.List<io.envoyproxy.envoy.config.route.v3.HeaderMatcher> headers_;
  /**
   * <pre>
   * Specifies a set of headers that the route should match on. The router will check the request’s
   * headers against all the specified headers in the route config. A match will happen if all the
   * headers in the route are present in the request with the same values (or based on presence if
   * the value field is not in the config).
   * </pre>
   *
   * <code>repeated .envoy.config.route.v3.HeaderMatcher headers = 2;</code>
   */
  @java.lang.Override
  public java.util.List<io.envoyproxy.envoy.config.route.v3.HeaderMatcher> getHeadersList() {
    return headers_;
  }
  /**
   * <pre>
   * Specifies a set of headers that the route should match on. The router will check the request’s
   * headers against all the specified headers in the route config. A match will happen if all the
   * headers in the route are present in the request with the same values (or based on presence if
   * the value field is not in the config).
   * </pre>
   *
   * <code>repeated .envoy.config.route.v3.HeaderMatcher headers = 2;</code>
   */
  @java.lang.Override
  public java.util.List<? extends io.envoyproxy.envoy.config.route.v3.HeaderMatcherOrBuilder> 
      getHeadersOrBuilderList() {
    return headers_;
  }
  /**
   * <pre>
   * Specifies a set of headers that the route should match on. The router will check the request’s
   * headers against all the specified headers in the route config. A match will happen if all the
   * headers in the route are present in the request with the same values (or based on presence if
   * the value field is not in the config).
   * </pre>
   *
   * <code>repeated .envoy.config.route.v3.HeaderMatcher headers = 2;</code>
   */
  @java.lang.Override
  public int getHeadersCount() {
    return headers_.size();
  }
  /**
   * <pre>
   * Specifies a set of headers that the route should match on. The router will check the request’s
   * headers against all the specified headers in the route config. A match will happen if all the
   * headers in the route are present in the request with the same values (or based on presence if
   * the value field is not in the config).
   * </pre>
   *
   * <code>repeated .envoy.config.route.v3.HeaderMatcher headers = 2;</code>
   */
  @java.lang.Override
  public io.envoyproxy.envoy.config.route.v3.HeaderMatcher getHeaders(int index) {
    return headers_.get(index);
  }
  /**
   * <pre>
   * Specifies a set of headers that the route should match on. The router will check the request’s
   * headers against all the specified headers in the route config. A match will happen if all the
   * headers in the route are present in the request with the same values (or based on presence if
   * the value field is not in the config).
   * </pre>
   *
   * <code>repeated .envoy.config.route.v3.HeaderMatcher headers = 2;</code>
   */
  @java.lang.Override
  public io.envoyproxy.envoy.config.route.v3.HeaderMatcherOrBuilder getHeadersOrBuilder(
      int index) {
    return headers_.get(index);
  }

  private byte memoizedIsInitialized = -1;
  @java.lang.Override
  public final boolean isInitialized() {
    byte isInitialized = memoizedIsInitialized;
    if (isInitialized == 1) return true;
    if (isInitialized == 0) return false;

    memoizedIsInitialized = 1;
    return true;
  }

  @java.lang.Override
  public void writeTo(com.google.protobuf.CodedOutputStream output)
                      throws java.io.IOException {
    if (method_ != null) {
      output.writeMessage(1, getMethod());
    }
    for (int i = 0; i < headers_.size(); i++) {
      output.writeMessage(2, headers_.get(i));
    }
    getUnknownFields().writeTo(output);
  }

  @java.lang.Override
  public int getSerializedSize() {
    int size = memoizedSize;
    if (size != -1) return size;

    size = 0;
    if (method_ != null) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(1, getMethod());
    }
    for (int i = 0; i < headers_.size(); i++) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(2, headers_.get(i));
    }
    size += getUnknownFields().getSerializedSize();
    memoizedSize = size;
    return size;
  }

  @java.lang.Override
  public boolean equals(final java.lang.Object obj) {
    if (obj == this) {
     return true;
    }
    if (!(obj instanceof io.envoyproxy.envoy.extensions.filters.network.dubbo_proxy.v3.RouteMatch)) {
      return super.equals(obj);
    }
    io.envoyproxy.envoy.extensions.filters.network.dubbo_proxy.v3.RouteMatch other = (io.envoyproxy.envoy.extensions.filters.network.dubbo_proxy.v3.RouteMatch) obj;

    if (hasMethod() != other.hasMethod()) return false;
    if (hasMethod()) {
      if (!getMethod()
          .equals(other.getMethod())) return false;
    }
    if (!getHeadersList()
        .equals(other.getHeadersList())) return false;
    if (!getUnknownFields().equals(other.getUnknownFields())) return false;
    return true;
  }

  @java.lang.Override
  public int hashCode() {
    if (memoizedHashCode != 0) {
      return memoizedHashCode;
    }
    int hash = 41;
    hash = (19 * hash) + getDescriptor().hashCode();
    if (hasMethod()) {
      hash = (37 * hash) + METHOD_FIELD_NUMBER;
      hash = (53 * hash) + getMethod().hashCode();
    }
    if (getHeadersCount() > 0) {
      hash = (37 * hash) + HEADERS_FIELD_NUMBER;
      hash = (53 * hash) + getHeadersList().hashCode();
    }
    hash = (29 * hash) + getUnknownFields().hashCode();
    memoizedHashCode = hash;
    return hash;
  }

  public static io.envoyproxy.envoy.extensions.filters.network.dubbo_proxy.v3.RouteMatch parseFrom(
      java.nio.ByteBuffer data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static io.envoyproxy.envoy.extensions.filters.network.dubbo_proxy.v3.RouteMatch parseFrom(
      java.nio.ByteBuffer data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static io.envoyproxy.envoy.extensions.filters.network.dubbo_proxy.v3.RouteMatch parseFrom(
      com.google.protobuf.ByteString data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static io.envoyproxy.envoy.extensions.filters.network.dubbo_proxy.v3.RouteMatch parseFrom(
      com.google.protobuf.ByteString data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static io.envoyproxy.envoy.extensions.filters.network.dubbo_proxy.v3.RouteMatch parseFrom(byte[] data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static io.envoyproxy.envoy.extensions.filters.network.dubbo_proxy.v3.RouteMatch parseFrom(
      byte[] data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static io.envoyproxy.envoy.extensions.filters.network.dubbo_proxy.v3.RouteMatch parseFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input);
  }
  public static io.envoyproxy.envoy.extensions.filters.network.dubbo_proxy.v3.RouteMatch parseFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input, extensionRegistry);
  }
  public static io.envoyproxy.envoy.extensions.filters.network.dubbo_proxy.v3.RouteMatch parseDelimitedFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseDelimitedWithIOException(PARSER, input);
  }
  public static io.envoyproxy.envoy.extensions.filters.network.dubbo_proxy.v3.RouteMatch parseDelimitedFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
  }
  public static io.envoyproxy.envoy.extensions.filters.network.dubbo_proxy.v3.RouteMatch parseFrom(
      com.google.protobuf.CodedInputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input);
  }
  public static io.envoyproxy.envoy.extensions.filters.network.dubbo_proxy.v3.RouteMatch parseFrom(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input, extensionRegistry);
  }

  @java.lang.Override
  public Builder newBuilderForType() { return newBuilder(); }
  public static Builder newBuilder() {
    return DEFAULT_INSTANCE.toBuilder();
  }
  public static Builder newBuilder(io.envoyproxy.envoy.extensions.filters.network.dubbo_proxy.v3.RouteMatch prototype) {
    return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
  }
  @java.lang.Override
  public Builder toBuilder() {
    return this == DEFAULT_INSTANCE
        ? new Builder() : new Builder().mergeFrom(this);
  }

  @java.lang.Override
  protected Builder newBuilderForType(
      com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
    Builder builder = new Builder(parent);
    return builder;
  }
  /**
   * Protobuf type {@code envoy.extensions.filters.network.dubbo_proxy.v3.RouteMatch}
   */
  public static final class Builder extends
      com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
      // @@protoc_insertion_point(builder_implements:envoy.extensions.filters.network.dubbo_proxy.v3.RouteMatch)
      io.envoyproxy.envoy.extensions.filters.network.dubbo_proxy.v3.RouteMatchOrBuilder {
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return io.envoyproxy.envoy.extensions.filters.network.dubbo_proxy.v3.RouteProto.internal_static_envoy_extensions_filters_network_dubbo_proxy_v3_RouteMatch_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return io.envoyproxy.envoy.extensions.filters.network.dubbo_proxy.v3.RouteProto.internal_static_envoy_extensions_filters_network_dubbo_proxy_v3_RouteMatch_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              io.envoyproxy.envoy.extensions.filters.network.dubbo_proxy.v3.RouteMatch.class, io.envoyproxy.envoy.extensions.filters.network.dubbo_proxy.v3.RouteMatch.Builder.class);
    }

    // Construct using io.envoyproxy.envoy.extensions.filters.network.dubbo_proxy.v3.RouteMatch.newBuilder()
    private Builder() {

    }

    private Builder(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      super(parent);

    }
    @java.lang.Override
    public Builder clear() {
      super.clear();
      bitField0_ = 0;
      method_ = null;
      if (methodBuilder_ != null) {
        methodBuilder_.dispose();
        methodBuilder_ = null;
      }
      if (headersBuilder_ == null) {
        headers_ = java.util.Collections.emptyList();
      } else {
        headers_ = null;
        headersBuilder_.clear();
      }
      bitField0_ = (bitField0_ & ~0x00000002);
      return this;
    }

    @java.lang.Override
    public com.google.protobuf.Descriptors.Descriptor
        getDescriptorForType() {
      return io.envoyproxy.envoy.extensions.filters.network.dubbo_proxy.v3.RouteProto.internal_static_envoy_extensions_filters_network_dubbo_proxy_v3_RouteMatch_descriptor;
    }

    @java.lang.Override
    public io.envoyproxy.envoy.extensions.filters.network.dubbo_proxy.v3.RouteMatch getDefaultInstanceForType() {
      return io.envoyproxy.envoy.extensions.filters.network.dubbo_proxy.v3.RouteMatch.getDefaultInstance();
    }

    @java.lang.Override
    public io.envoyproxy.envoy.extensions.filters.network.dubbo_proxy.v3.RouteMatch build() {
      io.envoyproxy.envoy.extensions.filters.network.dubbo_proxy.v3.RouteMatch result = buildPartial();
      if (!result.isInitialized()) {
        throw newUninitializedMessageException(result);
      }
      return result;
    }

    @java.lang.Override
    public io.envoyproxy.envoy.extensions.filters.network.dubbo_proxy.v3.RouteMatch buildPartial() {
      io.envoyproxy.envoy.extensions.filters.network.dubbo_proxy.v3.RouteMatch result = new io.envoyproxy.envoy.extensions.filters.network.dubbo_proxy.v3.RouteMatch(this);
      buildPartialRepeatedFields(result);
      if (bitField0_ != 0) { buildPartial0(result); }
      onBuilt();
      return result;
    }

    private void buildPartialRepeatedFields(io.envoyproxy.envoy.extensions.filters.network.dubbo_proxy.v3.RouteMatch result) {
      if (headersBuilder_ == null) {
        if (((bitField0_ & 0x00000002) != 0)) {
          headers_ = java.util.Collections.unmodifiableList(headers_);
          bitField0_ = (bitField0_ & ~0x00000002);
        }
        result.headers_ = headers_;
      } else {
        result.headers_ = headersBuilder_.build();
      }
    }

    private void buildPartial0(io.envoyproxy.envoy.extensions.filters.network.dubbo_proxy.v3.RouteMatch result) {
      int from_bitField0_ = bitField0_;
      if (((from_bitField0_ & 0x00000001) != 0)) {
        result.method_ = methodBuilder_ == null
            ? method_
            : methodBuilder_.build();
      }
    }

    @java.lang.Override
    public Builder clone() {
      return super.clone();
    }
    @java.lang.Override
    public Builder setField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        java.lang.Object value) {
      return super.setField(field, value);
    }
    @java.lang.Override
    public Builder clearField(
        com.google.protobuf.Descriptors.FieldDescriptor field) {
      return super.clearField(field);
    }
    @java.lang.Override
    public Builder clearOneof(
        com.google.protobuf.Descriptors.OneofDescriptor oneof) {
      return super.clearOneof(oneof);
    }
    @java.lang.Override
    public Builder setRepeatedField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        int index, java.lang.Object value) {
      return super.setRepeatedField(field, index, value);
    }
    @java.lang.Override
    public Builder addRepeatedField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        java.lang.Object value) {
      return super.addRepeatedField(field, value);
    }
    @java.lang.Override
    public Builder mergeFrom(com.google.protobuf.Message other) {
      if (other instanceof io.envoyproxy.envoy.extensions.filters.network.dubbo_proxy.v3.RouteMatch) {
        return mergeFrom((io.envoyproxy.envoy.extensions.filters.network.dubbo_proxy.v3.RouteMatch)other);
      } else {
        super.mergeFrom(other);
        return this;
      }
    }

    public Builder mergeFrom(io.envoyproxy.envoy.extensions.filters.network.dubbo_proxy.v3.RouteMatch other) {
      if (other == io.envoyproxy.envoy.extensions.filters.network.dubbo_proxy.v3.RouteMatch.getDefaultInstance()) return this;
      if (other.hasMethod()) {
        mergeMethod(other.getMethod());
      }
      if (headersBuilder_ == null) {
        if (!other.headers_.isEmpty()) {
          if (headers_.isEmpty()) {
            headers_ = other.headers_;
            bitField0_ = (bitField0_ & ~0x00000002);
          } else {
            ensureHeadersIsMutable();
            headers_.addAll(other.headers_);
          }
          onChanged();
        }
      } else {
        if (!other.headers_.isEmpty()) {
          if (headersBuilder_.isEmpty()) {
            headersBuilder_.dispose();
            headersBuilder_ = null;
            headers_ = other.headers_;
            bitField0_ = (bitField0_ & ~0x00000002);
            headersBuilder_ = 
              com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?
                 getHeadersFieldBuilder() : null;
          } else {
            headersBuilder_.addAllMessages(other.headers_);
          }
        }
      }
      this.mergeUnknownFields(other.getUnknownFields());
      onChanged();
      return this;
    }

    @java.lang.Override
    public final boolean isInitialized() {
      return true;
    }

    @java.lang.Override
    public Builder mergeFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 10: {
              input.readMessage(
                  getMethodFieldBuilder().getBuilder(),
                  extensionRegistry);
              bitField0_ |= 0x00000001;
              break;
            } // case 10
            case 18: {
              io.envoyproxy.envoy.config.route.v3.HeaderMatcher m =
                  input.readMessage(
                      io.envoyproxy.envoy.config.route.v3.HeaderMatcher.parser(),
                      extensionRegistry);
              if (headersBuilder_ == null) {
                ensureHeadersIsMutable();
                headers_.add(m);
              } else {
                headersBuilder_.addMessage(m);
              }
              break;
            } // case 18
            default: {
              if (!super.parseUnknownField(input, extensionRegistry, tag)) {
                done = true; // was an endgroup tag
              }
              break;
            } // default:
          } // switch (tag)
        } // while (!done)
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.unwrapIOException();
      } finally {
        onChanged();
      } // finally
      return this;
    }
    private int bitField0_;

    private io.envoyproxy.envoy.extensions.filters.network.dubbo_proxy.v3.MethodMatch method_;
    private com.google.protobuf.SingleFieldBuilderV3<
        io.envoyproxy.envoy.extensions.filters.network.dubbo_proxy.v3.MethodMatch, io.envoyproxy.envoy.extensions.filters.network.dubbo_proxy.v3.MethodMatch.Builder, io.envoyproxy.envoy.extensions.filters.network.dubbo_proxy.v3.MethodMatchOrBuilder> methodBuilder_;
    /**
     * <pre>
     * Method level routing matching.
     * </pre>
     *
     * <code>.envoy.extensions.filters.network.dubbo_proxy.v3.MethodMatch method = 1;</code>
     * @return Whether the method field is set.
     */
    public boolean hasMethod() {
      return ((bitField0_ & 0x00000001) != 0);
    }
    /**
     * <pre>
     * Method level routing matching.
     * </pre>
     *
     * <code>.envoy.extensions.filters.network.dubbo_proxy.v3.MethodMatch method = 1;</code>
     * @return The method.
     */
    public io.envoyproxy.envoy.extensions.filters.network.dubbo_proxy.v3.MethodMatch getMethod() {
      if (methodBuilder_ == null) {
        return method_ == null ? io.envoyproxy.envoy.extensions.filters.network.dubbo_proxy.v3.MethodMatch.getDefaultInstance() : method_;
      } else {
        return methodBuilder_.getMessage();
      }
    }
    /**
     * <pre>
     * Method level routing matching.
     * </pre>
     *
     * <code>.envoy.extensions.filters.network.dubbo_proxy.v3.MethodMatch method = 1;</code>
     */
    public Builder setMethod(io.envoyproxy.envoy.extensions.filters.network.dubbo_proxy.v3.MethodMatch value) {
      if (methodBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        method_ = value;
      } else {
        methodBuilder_.setMessage(value);
      }
      bitField0_ |= 0x00000001;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * Method level routing matching.
     * </pre>
     *
     * <code>.envoy.extensions.filters.network.dubbo_proxy.v3.MethodMatch method = 1;</code>
     */
    public Builder setMethod(
        io.envoyproxy.envoy.extensions.filters.network.dubbo_proxy.v3.MethodMatch.Builder builderForValue) {
      if (methodBuilder_ == null) {
        method_ = builderForValue.build();
      } else {
        methodBuilder_.setMessage(builderForValue.build());
      }
      bitField0_ |= 0x00000001;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * Method level routing matching.
     * </pre>
     *
     * <code>.envoy.extensions.filters.network.dubbo_proxy.v3.MethodMatch method = 1;</code>
     */
    public Builder mergeMethod(io.envoyproxy.envoy.extensions.filters.network.dubbo_proxy.v3.MethodMatch value) {
      if (methodBuilder_ == null) {
        if (((bitField0_ & 0x00000001) != 0) &&
          method_ != null &&
          method_ != io.envoyproxy.envoy.extensions.filters.network.dubbo_proxy.v3.MethodMatch.getDefaultInstance()) {
          getMethodBuilder().mergeFrom(value);
        } else {
          method_ = value;
        }
      } else {
        methodBuilder_.mergeFrom(value);
      }
      bitField0_ |= 0x00000001;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * Method level routing matching.
     * </pre>
     *
     * <code>.envoy.extensions.filters.network.dubbo_proxy.v3.MethodMatch method = 1;</code>
     */
    public Builder clearMethod() {
      bitField0_ = (bitField0_ & ~0x00000001);
      method_ = null;
      if (methodBuilder_ != null) {
        methodBuilder_.dispose();
        methodBuilder_ = null;
      }
      onChanged();
      return this;
    }
    /**
     * <pre>
     * Method level routing matching.
     * </pre>
     *
     * <code>.envoy.extensions.filters.network.dubbo_proxy.v3.MethodMatch method = 1;</code>
     */
    public io.envoyproxy.envoy.extensions.filters.network.dubbo_proxy.v3.MethodMatch.Builder getMethodBuilder() {
      bitField0_ |= 0x00000001;
      onChanged();
      return getMethodFieldBuilder().getBuilder();
    }
    /**
     * <pre>
     * Method level routing matching.
     * </pre>
     *
     * <code>.envoy.extensions.filters.network.dubbo_proxy.v3.MethodMatch method = 1;</code>
     */
    public io.envoyproxy.envoy.extensions.filters.network.dubbo_proxy.v3.MethodMatchOrBuilder getMethodOrBuilder() {
      if (methodBuilder_ != null) {
        return methodBuilder_.getMessageOrBuilder();
      } else {
        return method_ == null ?
            io.envoyproxy.envoy.extensions.filters.network.dubbo_proxy.v3.MethodMatch.getDefaultInstance() : method_;
      }
    }
    /**
     * <pre>
     * Method level routing matching.
     * </pre>
     *
     * <code>.envoy.extensions.filters.network.dubbo_proxy.v3.MethodMatch method = 1;</code>
     */
    private com.google.protobuf.SingleFieldBuilderV3<
        io.envoyproxy.envoy.extensions.filters.network.dubbo_proxy.v3.MethodMatch, io.envoyproxy.envoy.extensions.filters.network.dubbo_proxy.v3.MethodMatch.Builder, io.envoyproxy.envoy.extensions.filters.network.dubbo_proxy.v3.MethodMatchOrBuilder> 
        getMethodFieldBuilder() {
      if (methodBuilder_ == null) {
        methodBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
            io.envoyproxy.envoy.extensions.filters.network.dubbo_proxy.v3.MethodMatch, io.envoyproxy.envoy.extensions.filters.network.dubbo_proxy.v3.MethodMatch.Builder, io.envoyproxy.envoy.extensions.filters.network.dubbo_proxy.v3.MethodMatchOrBuilder>(
                getMethod(),
                getParentForChildren(),
                isClean());
        method_ = null;
      }
      return methodBuilder_;
    }

    private java.util.List<io.envoyproxy.envoy.config.route.v3.HeaderMatcher> headers_ =
      java.util.Collections.emptyList();
    private void ensureHeadersIsMutable() {
      if (!((bitField0_ & 0x00000002) != 0)) {
        headers_ = new java.util.ArrayList<io.envoyproxy.envoy.config.route.v3.HeaderMatcher>(headers_);
        bitField0_ |= 0x00000002;
       }
    }

    private com.google.protobuf.RepeatedFieldBuilderV3<
        io.envoyproxy.envoy.config.route.v3.HeaderMatcher, io.envoyproxy.envoy.config.route.v3.HeaderMatcher.Builder, io.envoyproxy.envoy.config.route.v3.HeaderMatcherOrBuilder> headersBuilder_;

    /**
     * <pre>
     * Specifies a set of headers that the route should match on. The router will check the request’s
     * headers against all the specified headers in the route config. A match will happen if all the
     * headers in the route are present in the request with the same values (or based on presence if
     * the value field is not in the config).
     * </pre>
     *
     * <code>repeated .envoy.config.route.v3.HeaderMatcher headers = 2;</code>
     */
    public java.util.List<io.envoyproxy.envoy.config.route.v3.HeaderMatcher> getHeadersList() {
      if (headersBuilder_ == null) {
        return java.util.Collections.unmodifiableList(headers_);
      } else {
        return headersBuilder_.getMessageList();
      }
    }
    /**
     * <pre>
     * Specifies a set of headers that the route should match on. The router will check the request’s
     * headers against all the specified headers in the route config. A match will happen if all the
     * headers in the route are present in the request with the same values (or based on presence if
     * the value field is not in the config).
     * </pre>
     *
     * <code>repeated .envoy.config.route.v3.HeaderMatcher headers = 2;</code>
     */
    public int getHeadersCount() {
      if (headersBuilder_ == null) {
        return headers_.size();
      } else {
        return headersBuilder_.getCount();
      }
    }
    /**
     * <pre>
     * Specifies a set of headers that the route should match on. The router will check the request’s
     * headers against all the specified headers in the route config. A match will happen if all the
     * headers in the route are present in the request with the same values (or based on presence if
     * the value field is not in the config).
     * </pre>
     *
     * <code>repeated .envoy.config.route.v3.HeaderMatcher headers = 2;</code>
     */
    public io.envoyproxy.envoy.config.route.v3.HeaderMatcher getHeaders(int index) {
      if (headersBuilder_ == null) {
        return headers_.get(index);
      } else {
        return headersBuilder_.getMessage(index);
      }
    }
    /**
     * <pre>
     * Specifies a set of headers that the route should match on. The router will check the request’s
     * headers against all the specified headers in the route config. A match will happen if all the
     * headers in the route are present in the request with the same values (or based on presence if
     * the value field is not in the config).
     * </pre>
     *
     * <code>repeated .envoy.config.route.v3.HeaderMatcher headers = 2;</code>
     */
    public Builder setHeaders(
        int index, io.envoyproxy.envoy.config.route.v3.HeaderMatcher value) {
      if (headersBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureHeadersIsMutable();
        headers_.set(index, value);
        onChanged();
      } else {
        headersBuilder_.setMessage(index, value);
      }
      return this;
    }
    /**
     * <pre>
     * Specifies a set of headers that the route should match on. The router will check the request’s
     * headers against all the specified headers in the route config. A match will happen if all the
     * headers in the route are present in the request with the same values (or based on presence if
     * the value field is not in the config).
     * </pre>
     *
     * <code>repeated .envoy.config.route.v3.HeaderMatcher headers = 2;</code>
     */
    public Builder setHeaders(
        int index, io.envoyproxy.envoy.config.route.v3.HeaderMatcher.Builder builderForValue) {
      if (headersBuilder_ == null) {
        ensureHeadersIsMutable();
        headers_.set(index, builderForValue.build());
        onChanged();
      } else {
        headersBuilder_.setMessage(index, builderForValue.build());
      }
      return this;
    }
    /**
     * <pre>
     * Specifies a set of headers that the route should match on. The router will check the request’s
     * headers against all the specified headers in the route config. A match will happen if all the
     * headers in the route are present in the request with the same values (or based on presence if
     * the value field is not in the config).
     * </pre>
     *
     * <code>repeated .envoy.config.route.v3.HeaderMatcher headers = 2;</code>
     */
    public Builder addHeaders(io.envoyproxy.envoy.config.route.v3.HeaderMatcher value) {
      if (headersBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureHeadersIsMutable();
        headers_.add(value);
        onChanged();
      } else {
        headersBuilder_.addMessage(value);
      }
      return this;
    }
    /**
     * <pre>
     * Specifies a set of headers that the route should match on. The router will check the request’s
     * headers against all the specified headers in the route config. A match will happen if all the
     * headers in the route are present in the request with the same values (or based on presence if
     * the value field is not in the config).
     * </pre>
     *
     * <code>repeated .envoy.config.route.v3.HeaderMatcher headers = 2;</code>
     */
    public Builder addHeaders(
        int index, io.envoyproxy.envoy.config.route.v3.HeaderMatcher value) {
      if (headersBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureHeadersIsMutable();
        headers_.add(index, value);
        onChanged();
      } else {
        headersBuilder_.addMessage(index, value);
      }
      return this;
    }
    /**
     * <pre>
     * Specifies a set of headers that the route should match on. The router will check the request’s
     * headers against all the specified headers in the route config. A match will happen if all the
     * headers in the route are present in the request with the same values (or based on presence if
     * the value field is not in the config).
     * </pre>
     *
     * <code>repeated .envoy.config.route.v3.HeaderMatcher headers = 2;</code>
     */
    public Builder addHeaders(
        io.envoyproxy.envoy.config.route.v3.HeaderMatcher.Builder builderForValue) {
      if (headersBuilder_ == null) {
        ensureHeadersIsMutable();
        headers_.add(builderForValue.build());
        onChanged();
      } else {
        headersBuilder_.addMessage(builderForValue.build());
      }
      return this;
    }
    /**
     * <pre>
     * Specifies a set of headers that the route should match on. The router will check the request’s
     * headers against all the specified headers in the route config. A match will happen if all the
     * headers in the route are present in the request with the same values (or based on presence if
     * the value field is not in the config).
     * </pre>
     *
     * <code>repeated .envoy.config.route.v3.HeaderMatcher headers = 2;</code>
     */
    public Builder addHeaders(
        int index, io.envoyproxy.envoy.config.route.v3.HeaderMatcher.Builder builderForValue) {
      if (headersBuilder_ == null) {
        ensureHeadersIsMutable();
        headers_.add(index, builderForValue.build());
        onChanged();
      } else {
        headersBuilder_.addMessage(index, builderForValue.build());
      }
      return this;
    }
    /**
     * <pre>
     * Specifies a set of headers that the route should match on. The router will check the request’s
     * headers against all the specified headers in the route config. A match will happen if all the
     * headers in the route are present in the request with the same values (or based on presence if
     * the value field is not in the config).
     * </pre>
     *
     * <code>repeated .envoy.config.route.v3.HeaderMatcher headers = 2;</code>
     */
    public Builder addAllHeaders(
        java.lang.Iterable<? extends io.envoyproxy.envoy.config.route.v3.HeaderMatcher> values) {
      if (headersBuilder_ == null) {
        ensureHeadersIsMutable();
        com.google.protobuf.AbstractMessageLite.Builder.addAll(
            values, headers_);
        onChanged();
      } else {
        headersBuilder_.addAllMessages(values);
      }
      return this;
    }
    /**
     * <pre>
     * Specifies a set of headers that the route should match on. The router will check the request’s
     * headers against all the specified headers in the route config. A match will happen if all the
     * headers in the route are present in the request with the same values (or based on presence if
     * the value field is not in the config).
     * </pre>
     *
     * <code>repeated .envoy.config.route.v3.HeaderMatcher headers = 2;</code>
     */
    public Builder clearHeaders() {
      if (headersBuilder_ == null) {
        headers_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000002);
        onChanged();
      } else {
        headersBuilder_.clear();
      }
      return this;
    }
    /**
     * <pre>
     * Specifies a set of headers that the route should match on. The router will check the request’s
     * headers against all the specified headers in the route config. A match will happen if all the
     * headers in the route are present in the request with the same values (or based on presence if
     * the value field is not in the config).
     * </pre>
     *
     * <code>repeated .envoy.config.route.v3.HeaderMatcher headers = 2;</code>
     */
    public Builder removeHeaders(int index) {
      if (headersBuilder_ == null) {
        ensureHeadersIsMutable();
        headers_.remove(index);
        onChanged();
      } else {
        headersBuilder_.remove(index);
      }
      return this;
    }
    /**
     * <pre>
     * Specifies a set of headers that the route should match on. The router will check the request’s
     * headers against all the specified headers in the route config. A match will happen if all the
     * headers in the route are present in the request with the same values (or based on presence if
     * the value field is not in the config).
     * </pre>
     *
     * <code>repeated .envoy.config.route.v3.HeaderMatcher headers = 2;</code>
     */
    public io.envoyproxy.envoy.config.route.v3.HeaderMatcher.Builder getHeadersBuilder(
        int index) {
      return getHeadersFieldBuilder().getBuilder(index);
    }
    /**
     * <pre>
     * Specifies a set of headers that the route should match on. The router will check the request’s
     * headers against all the specified headers in the route config. A match will happen if all the
     * headers in the route are present in the request with the same values (or based on presence if
     * the value field is not in the config).
     * </pre>
     *
     * <code>repeated .envoy.config.route.v3.HeaderMatcher headers = 2;</code>
     */
    public io.envoyproxy.envoy.config.route.v3.HeaderMatcherOrBuilder getHeadersOrBuilder(
        int index) {
      if (headersBuilder_ == null) {
        return headers_.get(index);  } else {
        return headersBuilder_.getMessageOrBuilder(index);
      }
    }
    /**
     * <pre>
     * Specifies a set of headers that the route should match on. The router will check the request’s
     * headers against all the specified headers in the route config. A match will happen if all the
     * headers in the route are present in the request with the same values (or based on presence if
     * the value field is not in the config).
     * </pre>
     *
     * <code>repeated .envoy.config.route.v3.HeaderMatcher headers = 2;</code>
     */
    public java.util.List<? extends io.envoyproxy.envoy.config.route.v3.HeaderMatcherOrBuilder> 
         getHeadersOrBuilderList() {
      if (headersBuilder_ != null) {
        return headersBuilder_.getMessageOrBuilderList();
      } else {
        return java.util.Collections.unmodifiableList(headers_);
      }
    }
    /**
     * <pre>
     * Specifies a set of headers that the route should match on. The router will check the request’s
     * headers against all the specified headers in the route config. A match will happen if all the
     * headers in the route are present in the request with the same values (or based on presence if
     * the value field is not in the config).
     * </pre>
     *
     * <code>repeated .envoy.config.route.v3.HeaderMatcher headers = 2;</code>
     */
    public io.envoyproxy.envoy.config.route.v3.HeaderMatcher.Builder addHeadersBuilder() {
      return getHeadersFieldBuilder().addBuilder(
          io.envoyproxy.envoy.config.route.v3.HeaderMatcher.getDefaultInstance());
    }
    /**
     * <pre>
     * Specifies a set of headers that the route should match on. The router will check the request’s
     * headers against all the specified headers in the route config. A match will happen if all the
     * headers in the route are present in the request with the same values (or based on presence if
     * the value field is not in the config).
     * </pre>
     *
     * <code>repeated .envoy.config.route.v3.HeaderMatcher headers = 2;</code>
     */
    public io.envoyproxy.envoy.config.route.v3.HeaderMatcher.Builder addHeadersBuilder(
        int index) {
      return getHeadersFieldBuilder().addBuilder(
          index, io.envoyproxy.envoy.config.route.v3.HeaderMatcher.getDefaultInstance());
    }
    /**
     * <pre>
     * Specifies a set of headers that the route should match on. The router will check the request’s
     * headers against all the specified headers in the route config. A match will happen if all the
     * headers in the route are present in the request with the same values (or based on presence if
     * the value field is not in the config).
     * </pre>
     *
     * <code>repeated .envoy.config.route.v3.HeaderMatcher headers = 2;</code>
     */
    public java.util.List<io.envoyproxy.envoy.config.route.v3.HeaderMatcher.Builder> 
         getHeadersBuilderList() {
      return getHeadersFieldBuilder().getBuilderList();
    }
    private com.google.protobuf.RepeatedFieldBuilderV3<
        io.envoyproxy.envoy.config.route.v3.HeaderMatcher, io.envoyproxy.envoy.config.route.v3.HeaderMatcher.Builder, io.envoyproxy.envoy.config.route.v3.HeaderMatcherOrBuilder> 
        getHeadersFieldBuilder() {
      if (headersBuilder_ == null) {
        headersBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<
            io.envoyproxy.envoy.config.route.v3.HeaderMatcher, io.envoyproxy.envoy.config.route.v3.HeaderMatcher.Builder, io.envoyproxy.envoy.config.route.v3.HeaderMatcherOrBuilder>(
                headers_,
                ((bitField0_ & 0x00000002) != 0),
                getParentForChildren(),
                isClean());
        headers_ = null;
      }
      return headersBuilder_;
    }
    @java.lang.Override
    public final Builder setUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return super.setUnknownFields(unknownFields);
    }

    @java.lang.Override
    public final Builder mergeUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return super.mergeUnknownFields(unknownFields);
    }


    // @@protoc_insertion_point(builder_scope:envoy.extensions.filters.network.dubbo_proxy.v3.RouteMatch)
  }

  // @@protoc_insertion_point(class_scope:envoy.extensions.filters.network.dubbo_proxy.v3.RouteMatch)
  private static final io.envoyproxy.envoy.extensions.filters.network.dubbo_proxy.v3.RouteMatch DEFAULT_INSTANCE;
  static {
    DEFAULT_INSTANCE = new io.envoyproxy.envoy.extensions.filters.network.dubbo_proxy.v3.RouteMatch();
  }

  public static io.envoyproxy.envoy.extensions.filters.network.dubbo_proxy.v3.RouteMatch getDefaultInstance() {
    return DEFAULT_INSTANCE;
  }

  private static final com.google.protobuf.Parser<RouteMatch>
      PARSER = new com.google.protobuf.AbstractParser<RouteMatch>() {
    @java.lang.Override
    public RouteMatch parsePartialFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      Builder builder = newBuilder();
      try {
        builder.mergeFrom(input, extensionRegistry);
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(builder.buildPartial());
      } catch (com.google.protobuf.UninitializedMessageException e) {
        throw e.asInvalidProtocolBufferException().setUnfinishedMessage(builder.buildPartial());
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(e)
            .setUnfinishedMessage(builder.buildPartial());
      }
      return builder.buildPartial();
    }
  };

  public static com.google.protobuf.Parser<RouteMatch> parser() {
    return PARSER;
  }

  @java.lang.Override
  public com.google.protobuf.Parser<RouteMatch> getParserForType() {
    return PARSER;
  }

  @java.lang.Override
  public io.envoyproxy.envoy.extensions.filters.network.dubbo_proxy.v3.RouteMatch getDefaultInstanceForType() {
    return DEFAULT_INSTANCE;
  }

}

