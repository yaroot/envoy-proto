// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: envoy/extensions/filters/listener/proxy_protocol/v3/proxy_protocol.proto

package io.envoyproxy.envoy.extensions.filters.listener.proxy_protocol.v3;

public interface ProxyProtocolOrBuilder extends
    // @@protoc_insertion_point(interface_extends:envoy.extensions.filters.listener.proxy_protocol.v3.ProxyProtocol)
    com.google.protobuf.MessageOrBuilder {

  /**
   * <pre>
   * The list of rules to apply to requests.
   * </pre>
   *
   * <code>repeated .envoy.extensions.filters.listener.proxy_protocol.v3.ProxyProtocol.Rule rules = 1;</code>
   */
  java.util.List<io.envoyproxy.envoy.extensions.filters.listener.proxy_protocol.v3.ProxyProtocol.Rule> 
      getRulesList();
  /**
   * <pre>
   * The list of rules to apply to requests.
   * </pre>
   *
   * <code>repeated .envoy.extensions.filters.listener.proxy_protocol.v3.ProxyProtocol.Rule rules = 1;</code>
   */
  io.envoyproxy.envoy.extensions.filters.listener.proxy_protocol.v3.ProxyProtocol.Rule getRules(int index);
  /**
   * <pre>
   * The list of rules to apply to requests.
   * </pre>
   *
   * <code>repeated .envoy.extensions.filters.listener.proxy_protocol.v3.ProxyProtocol.Rule rules = 1;</code>
   */
  int getRulesCount();
  /**
   * <pre>
   * The list of rules to apply to requests.
   * </pre>
   *
   * <code>repeated .envoy.extensions.filters.listener.proxy_protocol.v3.ProxyProtocol.Rule rules = 1;</code>
   */
  java.util.List<? extends io.envoyproxy.envoy.extensions.filters.listener.proxy_protocol.v3.ProxyProtocol.RuleOrBuilder> 
      getRulesOrBuilderList();
  /**
   * <pre>
   * The list of rules to apply to requests.
   * </pre>
   *
   * <code>repeated .envoy.extensions.filters.listener.proxy_protocol.v3.ProxyProtocol.Rule rules = 1;</code>
   */
  io.envoyproxy.envoy.extensions.filters.listener.proxy_protocol.v3.ProxyProtocol.RuleOrBuilder getRulesOrBuilder(
      int index);

  /**
   * <pre>
   * Allow requests through that don't use proxy protocol. Defaults to false.
   * .. attention::
   *   This breaks conformance with the specification.
   *   Only enable if ALL traffic to the listener comes from a trusted source.
   *   For more information on the security implications of this feature, see
   *   https://www.haproxy.org/download/2.1/doc/proxy-protocol.txt
   * .. attention::
   *   Requests of 12 or fewer bytes that match the proxy protocol v2 signature
   *   and requests of 6 or fewer bytes that match the proxy protocol v1
   *   signature will timeout (Envoy is unable to differentiate these requests
   *   from incomplete proxy protocol requests).
   * </pre>
   *
   * <code>bool allow_requests_without_proxy_protocol = 2;</code>
   * @return The allowRequestsWithoutProxyProtocol.
   */
  boolean getAllowRequestsWithoutProxyProtocol();
}
