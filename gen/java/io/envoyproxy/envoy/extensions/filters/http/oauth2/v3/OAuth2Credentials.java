// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: envoy/extensions/filters/http/oauth2/v3/oauth.proto

package io.envoyproxy.envoy.extensions.filters.http.oauth2.v3;

/**
 * Protobuf type {@code envoy.extensions.filters.http.oauth2.v3.OAuth2Credentials}
 */
public final class OAuth2Credentials extends
    com.google.protobuf.GeneratedMessageV3 implements
    // @@protoc_insertion_point(message_implements:envoy.extensions.filters.http.oauth2.v3.OAuth2Credentials)
    OAuth2CredentialsOrBuilder {
private static final long serialVersionUID = 0L;
  // Use OAuth2Credentials.newBuilder() to construct.
  private OAuth2Credentials(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
    super(builder);
  }
  private OAuth2Credentials() {
    clientId_ = "";
  }

  @java.lang.Override
  @SuppressWarnings({"unused"})
  protected java.lang.Object newInstance(
      UnusedPrivateParameter unused) {
    return new OAuth2Credentials();
  }

  @java.lang.Override
  public final com.google.protobuf.UnknownFieldSet
  getUnknownFields() {
    return this.unknownFields;
  }
  private OAuth2Credentials(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    this();
    if (extensionRegistry == null) {
      throw new java.lang.NullPointerException();
    }
    com.google.protobuf.UnknownFieldSet.Builder unknownFields =
        com.google.protobuf.UnknownFieldSet.newBuilder();
    try {
      boolean done = false;
      while (!done) {
        int tag = input.readTag();
        switch (tag) {
          case 0:
            done = true;
            break;
          case 10: {
            java.lang.String s = input.readStringRequireUtf8();

            clientId_ = s;
            break;
          }
          case 18: {
            io.envoyproxy.envoy.extensions.transport_sockets.tls.v3.SdsSecretConfig.Builder subBuilder = null;
            if (tokenSecret_ != null) {
              subBuilder = tokenSecret_.toBuilder();
            }
            tokenSecret_ = input.readMessage(io.envoyproxy.envoy.extensions.transport_sockets.tls.v3.SdsSecretConfig.parser(), extensionRegistry);
            if (subBuilder != null) {
              subBuilder.mergeFrom(tokenSecret_);
              tokenSecret_ = subBuilder.buildPartial();
            }

            break;
          }
          case 26: {
            io.envoyproxy.envoy.extensions.transport_sockets.tls.v3.SdsSecretConfig.Builder subBuilder = null;
            if (tokenFormationCase_ == 3) {
              subBuilder = ((io.envoyproxy.envoy.extensions.transport_sockets.tls.v3.SdsSecretConfig) tokenFormation_).toBuilder();
            }
            tokenFormation_ =
                input.readMessage(io.envoyproxy.envoy.extensions.transport_sockets.tls.v3.SdsSecretConfig.parser(), extensionRegistry);
            if (subBuilder != null) {
              subBuilder.mergeFrom((io.envoyproxy.envoy.extensions.transport_sockets.tls.v3.SdsSecretConfig) tokenFormation_);
              tokenFormation_ = subBuilder.buildPartial();
            }
            tokenFormationCase_ = 3;
            break;
          }
          case 34: {
            io.envoyproxy.envoy.extensions.filters.http.oauth2.v3.OAuth2Credentials.CookieNames.Builder subBuilder = null;
            if (cookieNames_ != null) {
              subBuilder = cookieNames_.toBuilder();
            }
            cookieNames_ = input.readMessage(io.envoyproxy.envoy.extensions.filters.http.oauth2.v3.OAuth2Credentials.CookieNames.parser(), extensionRegistry);
            if (subBuilder != null) {
              subBuilder.mergeFrom(cookieNames_);
              cookieNames_ = subBuilder.buildPartial();
            }

            break;
          }
          default: {
            if (!parseUnknownField(
                input, unknownFields, extensionRegistry, tag)) {
              done = true;
            }
            break;
          }
        }
      }
    } catch (com.google.protobuf.InvalidProtocolBufferException e) {
      throw e.setUnfinishedMessage(this);
    } catch (com.google.protobuf.UninitializedMessageException e) {
      throw e.asInvalidProtocolBufferException().setUnfinishedMessage(this);
    } catch (java.io.IOException e) {
      throw new com.google.protobuf.InvalidProtocolBufferException(
          e).setUnfinishedMessage(this);
    } finally {
      this.unknownFields = unknownFields.build();
      makeExtensionsImmutable();
    }
  }
  public static final com.google.protobuf.Descriptors.Descriptor
      getDescriptor() {
    return io.envoyproxy.envoy.extensions.filters.http.oauth2.v3.OauthProto.internal_static_envoy_extensions_filters_http_oauth2_v3_OAuth2Credentials_descriptor;
  }

  @java.lang.Override
  protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internalGetFieldAccessorTable() {
    return io.envoyproxy.envoy.extensions.filters.http.oauth2.v3.OauthProto.internal_static_envoy_extensions_filters_http_oauth2_v3_OAuth2Credentials_fieldAccessorTable
        .ensureFieldAccessorsInitialized(
            io.envoyproxy.envoy.extensions.filters.http.oauth2.v3.OAuth2Credentials.class, io.envoyproxy.envoy.extensions.filters.http.oauth2.v3.OAuth2Credentials.Builder.class);
  }

  public interface CookieNamesOrBuilder extends
      // @@protoc_insertion_point(interface_extends:envoy.extensions.filters.http.oauth2.v3.OAuth2Credentials.CookieNames)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <pre>
     * Cookie name to hold OAuth bearer token value. When the authentication server validates the
     * client and returns an authorization token back to the OAuth filter, no matter what format
     * that token is, if :ref:`forward_bearer_token &lt;envoy_v3_api_field_extensions.filters.http.oauth2.v3.OAuth2Config.forward_bearer_token&gt;`
     * is set to true the filter will send over the bearer token as a cookie with this name to the
     * upstream. Defaults to ``BearerToken``.
     * </pre>
     *
     * <code>string bearer_token = 1 [(.validate.rules) = { ... }</code>
     * @return The bearerToken.
     */
    java.lang.String getBearerToken();
    /**
     * <pre>
     * Cookie name to hold OAuth bearer token value. When the authentication server validates the
     * client and returns an authorization token back to the OAuth filter, no matter what format
     * that token is, if :ref:`forward_bearer_token &lt;envoy_v3_api_field_extensions.filters.http.oauth2.v3.OAuth2Config.forward_bearer_token&gt;`
     * is set to true the filter will send over the bearer token as a cookie with this name to the
     * upstream. Defaults to ``BearerToken``.
     * </pre>
     *
     * <code>string bearer_token = 1 [(.validate.rules) = { ... }</code>
     * @return The bytes for bearerToken.
     */
    com.google.protobuf.ByteString
        getBearerTokenBytes();

    /**
     * <pre>
     * Cookie name to hold OAuth HMAC value. Defaults to ``OauthHMAC``.
     * </pre>
     *
     * <code>string oauth_hmac = 2 [(.validate.rules) = { ... }</code>
     * @return The oauthHmac.
     */
    java.lang.String getOauthHmac();
    /**
     * <pre>
     * Cookie name to hold OAuth HMAC value. Defaults to ``OauthHMAC``.
     * </pre>
     *
     * <code>string oauth_hmac = 2 [(.validate.rules) = { ... }</code>
     * @return The bytes for oauthHmac.
     */
    com.google.protobuf.ByteString
        getOauthHmacBytes();

    /**
     * <pre>
     * Cookie name to hold OAuth expiry value. Defaults to ``OauthExpires``.
     * </pre>
     *
     * <code>string oauth_expires = 3 [(.validate.rules) = { ... }</code>
     * @return The oauthExpires.
     */
    java.lang.String getOauthExpires();
    /**
     * <pre>
     * Cookie name to hold OAuth expiry value. Defaults to ``OauthExpires``.
     * </pre>
     *
     * <code>string oauth_expires = 3 [(.validate.rules) = { ... }</code>
     * @return The bytes for oauthExpires.
     */
    com.google.protobuf.ByteString
        getOauthExpiresBytes();
  }
  /**
   * Protobuf type {@code envoy.extensions.filters.http.oauth2.v3.OAuth2Credentials.CookieNames}
   */
  public static final class CookieNames extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:envoy.extensions.filters.http.oauth2.v3.OAuth2Credentials.CookieNames)
      CookieNamesOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use CookieNames.newBuilder() to construct.
    private CookieNames(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private CookieNames() {
      bearerToken_ = "";
      oauthHmac_ = "";
      oauthExpires_ = "";
    }

    @java.lang.Override
    @SuppressWarnings({"unused"})
    protected java.lang.Object newInstance(
        UnusedPrivateParameter unused) {
      return new CookieNames();
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private CookieNames(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 10: {
              java.lang.String s = input.readStringRequireUtf8();

              bearerToken_ = s;
              break;
            }
            case 18: {
              java.lang.String s = input.readStringRequireUtf8();

              oauthHmac_ = s;
              break;
            }
            case 26: {
              java.lang.String s = input.readStringRequireUtf8();

              oauthExpires_ = s;
              break;
            }
            default: {
              if (!parseUnknownField(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (com.google.protobuf.UninitializedMessageException e) {
        throw e.asInvalidProtocolBufferException().setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return io.envoyproxy.envoy.extensions.filters.http.oauth2.v3.OauthProto.internal_static_envoy_extensions_filters_http_oauth2_v3_OAuth2Credentials_CookieNames_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return io.envoyproxy.envoy.extensions.filters.http.oauth2.v3.OauthProto.internal_static_envoy_extensions_filters_http_oauth2_v3_OAuth2Credentials_CookieNames_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              io.envoyproxy.envoy.extensions.filters.http.oauth2.v3.OAuth2Credentials.CookieNames.class, io.envoyproxy.envoy.extensions.filters.http.oauth2.v3.OAuth2Credentials.CookieNames.Builder.class);
    }

    public static final int BEARER_TOKEN_FIELD_NUMBER = 1;
    private volatile java.lang.Object bearerToken_;
    /**
     * <pre>
     * Cookie name to hold OAuth bearer token value. When the authentication server validates the
     * client and returns an authorization token back to the OAuth filter, no matter what format
     * that token is, if :ref:`forward_bearer_token &lt;envoy_v3_api_field_extensions.filters.http.oauth2.v3.OAuth2Config.forward_bearer_token&gt;`
     * is set to true the filter will send over the bearer token as a cookie with this name to the
     * upstream. Defaults to ``BearerToken``.
     * </pre>
     *
     * <code>string bearer_token = 1 [(.validate.rules) = { ... }</code>
     * @return The bearerToken.
     */
    @java.lang.Override
    public java.lang.String getBearerToken() {
      java.lang.Object ref = bearerToken_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        bearerToken_ = s;
        return s;
      }
    }
    /**
     * <pre>
     * Cookie name to hold OAuth bearer token value. When the authentication server validates the
     * client and returns an authorization token back to the OAuth filter, no matter what format
     * that token is, if :ref:`forward_bearer_token &lt;envoy_v3_api_field_extensions.filters.http.oauth2.v3.OAuth2Config.forward_bearer_token&gt;`
     * is set to true the filter will send over the bearer token as a cookie with this name to the
     * upstream. Defaults to ``BearerToken``.
     * </pre>
     *
     * <code>string bearer_token = 1 [(.validate.rules) = { ... }</code>
     * @return The bytes for bearerToken.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString
        getBearerTokenBytes() {
      java.lang.Object ref = bearerToken_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        bearerToken_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int OAUTH_HMAC_FIELD_NUMBER = 2;
    private volatile java.lang.Object oauthHmac_;
    /**
     * <pre>
     * Cookie name to hold OAuth HMAC value. Defaults to ``OauthHMAC``.
     * </pre>
     *
     * <code>string oauth_hmac = 2 [(.validate.rules) = { ... }</code>
     * @return The oauthHmac.
     */
    @java.lang.Override
    public java.lang.String getOauthHmac() {
      java.lang.Object ref = oauthHmac_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        oauthHmac_ = s;
        return s;
      }
    }
    /**
     * <pre>
     * Cookie name to hold OAuth HMAC value. Defaults to ``OauthHMAC``.
     * </pre>
     *
     * <code>string oauth_hmac = 2 [(.validate.rules) = { ... }</code>
     * @return The bytes for oauthHmac.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString
        getOauthHmacBytes() {
      java.lang.Object ref = oauthHmac_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        oauthHmac_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int OAUTH_EXPIRES_FIELD_NUMBER = 3;
    private volatile java.lang.Object oauthExpires_;
    /**
     * <pre>
     * Cookie name to hold OAuth expiry value. Defaults to ``OauthExpires``.
     * </pre>
     *
     * <code>string oauth_expires = 3 [(.validate.rules) = { ... }</code>
     * @return The oauthExpires.
     */
    @java.lang.Override
    public java.lang.String getOauthExpires() {
      java.lang.Object ref = oauthExpires_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        oauthExpires_ = s;
        return s;
      }
    }
    /**
     * <pre>
     * Cookie name to hold OAuth expiry value. Defaults to ``OauthExpires``.
     * </pre>
     *
     * <code>string oauth_expires = 3 [(.validate.rules) = { ... }</code>
     * @return The bytes for oauthExpires.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString
        getOauthExpiresBytes() {
      java.lang.Object ref = oauthExpires_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        oauthExpires_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(bearerToken_)) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 1, bearerToken_);
      }
      if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(oauthHmac_)) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 2, oauthHmac_);
      }
      if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(oauthExpires_)) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 3, oauthExpires_);
      }
      unknownFields.writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(bearerToken_)) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(1, bearerToken_);
      }
      if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(oauthHmac_)) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(2, oauthHmac_);
      }
      if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(oauthExpires_)) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(3, oauthExpires_);
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof io.envoyproxy.envoy.extensions.filters.http.oauth2.v3.OAuth2Credentials.CookieNames)) {
        return super.equals(obj);
      }
      io.envoyproxy.envoy.extensions.filters.http.oauth2.v3.OAuth2Credentials.CookieNames other = (io.envoyproxy.envoy.extensions.filters.http.oauth2.v3.OAuth2Credentials.CookieNames) obj;

      if (!getBearerToken()
          .equals(other.getBearerToken())) return false;
      if (!getOauthHmac()
          .equals(other.getOauthHmac())) return false;
      if (!getOauthExpires()
          .equals(other.getOauthExpires())) return false;
      if (!unknownFields.equals(other.unknownFields)) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      hash = (37 * hash) + BEARER_TOKEN_FIELD_NUMBER;
      hash = (53 * hash) + getBearerToken().hashCode();
      hash = (37 * hash) + OAUTH_HMAC_FIELD_NUMBER;
      hash = (53 * hash) + getOauthHmac().hashCode();
      hash = (37 * hash) + OAUTH_EXPIRES_FIELD_NUMBER;
      hash = (53 * hash) + getOauthExpires().hashCode();
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static io.envoyproxy.envoy.extensions.filters.http.oauth2.v3.OAuth2Credentials.CookieNames parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static io.envoyproxy.envoy.extensions.filters.http.oauth2.v3.OAuth2Credentials.CookieNames parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static io.envoyproxy.envoy.extensions.filters.http.oauth2.v3.OAuth2Credentials.CookieNames parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static io.envoyproxy.envoy.extensions.filters.http.oauth2.v3.OAuth2Credentials.CookieNames parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static io.envoyproxy.envoy.extensions.filters.http.oauth2.v3.OAuth2Credentials.CookieNames parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static io.envoyproxy.envoy.extensions.filters.http.oauth2.v3.OAuth2Credentials.CookieNames parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static io.envoyproxy.envoy.extensions.filters.http.oauth2.v3.OAuth2Credentials.CookieNames parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static io.envoyproxy.envoy.extensions.filters.http.oauth2.v3.OAuth2Credentials.CookieNames parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static io.envoyproxy.envoy.extensions.filters.http.oauth2.v3.OAuth2Credentials.CookieNames parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static io.envoyproxy.envoy.extensions.filters.http.oauth2.v3.OAuth2Credentials.CookieNames parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static io.envoyproxy.envoy.extensions.filters.http.oauth2.v3.OAuth2Credentials.CookieNames parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static io.envoyproxy.envoy.extensions.filters.http.oauth2.v3.OAuth2Credentials.CookieNames parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(io.envoyproxy.envoy.extensions.filters.http.oauth2.v3.OAuth2Credentials.CookieNames prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code envoy.extensions.filters.http.oauth2.v3.OAuth2Credentials.CookieNames}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:envoy.extensions.filters.http.oauth2.v3.OAuth2Credentials.CookieNames)
        io.envoyproxy.envoy.extensions.filters.http.oauth2.v3.OAuth2Credentials.CookieNamesOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return io.envoyproxy.envoy.extensions.filters.http.oauth2.v3.OauthProto.internal_static_envoy_extensions_filters_http_oauth2_v3_OAuth2Credentials_CookieNames_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return io.envoyproxy.envoy.extensions.filters.http.oauth2.v3.OauthProto.internal_static_envoy_extensions_filters_http_oauth2_v3_OAuth2Credentials_CookieNames_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                io.envoyproxy.envoy.extensions.filters.http.oauth2.v3.OAuth2Credentials.CookieNames.class, io.envoyproxy.envoy.extensions.filters.http.oauth2.v3.OAuth2Credentials.CookieNames.Builder.class);
      }

      // Construct using io.envoyproxy.envoy.extensions.filters.http.oauth2.v3.OAuth2Credentials.CookieNames.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        bearerToken_ = "";

        oauthHmac_ = "";

        oauthExpires_ = "";

        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return io.envoyproxy.envoy.extensions.filters.http.oauth2.v3.OauthProto.internal_static_envoy_extensions_filters_http_oauth2_v3_OAuth2Credentials_CookieNames_descriptor;
      }

      @java.lang.Override
      public io.envoyproxy.envoy.extensions.filters.http.oauth2.v3.OAuth2Credentials.CookieNames getDefaultInstanceForType() {
        return io.envoyproxy.envoy.extensions.filters.http.oauth2.v3.OAuth2Credentials.CookieNames.getDefaultInstance();
      }

      @java.lang.Override
      public io.envoyproxy.envoy.extensions.filters.http.oauth2.v3.OAuth2Credentials.CookieNames build() {
        io.envoyproxy.envoy.extensions.filters.http.oauth2.v3.OAuth2Credentials.CookieNames result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public io.envoyproxy.envoy.extensions.filters.http.oauth2.v3.OAuth2Credentials.CookieNames buildPartial() {
        io.envoyproxy.envoy.extensions.filters.http.oauth2.v3.OAuth2Credentials.CookieNames result = new io.envoyproxy.envoy.extensions.filters.http.oauth2.v3.OAuth2Credentials.CookieNames(this);
        result.bearerToken_ = bearerToken_;
        result.oauthHmac_ = oauthHmac_;
        result.oauthExpires_ = oauthExpires_;
        onBuilt();
        return result;
      }

      @java.lang.Override
      public Builder clone() {
        return super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof io.envoyproxy.envoy.extensions.filters.http.oauth2.v3.OAuth2Credentials.CookieNames) {
          return mergeFrom((io.envoyproxy.envoy.extensions.filters.http.oauth2.v3.OAuth2Credentials.CookieNames)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(io.envoyproxy.envoy.extensions.filters.http.oauth2.v3.OAuth2Credentials.CookieNames other) {
        if (other == io.envoyproxy.envoy.extensions.filters.http.oauth2.v3.OAuth2Credentials.CookieNames.getDefaultInstance()) return this;
        if (!other.getBearerToken().isEmpty()) {
          bearerToken_ = other.bearerToken_;
          onChanged();
        }
        if (!other.getOauthHmac().isEmpty()) {
          oauthHmac_ = other.oauthHmac_;
          onChanged();
        }
        if (!other.getOauthExpires().isEmpty()) {
          oauthExpires_ = other.oauthExpires_;
          onChanged();
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        io.envoyproxy.envoy.extensions.filters.http.oauth2.v3.OAuth2Credentials.CookieNames parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (io.envoyproxy.envoy.extensions.filters.http.oauth2.v3.OAuth2Credentials.CookieNames) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }

      private java.lang.Object bearerToken_ = "";
      /**
       * <pre>
       * Cookie name to hold OAuth bearer token value. When the authentication server validates the
       * client and returns an authorization token back to the OAuth filter, no matter what format
       * that token is, if :ref:`forward_bearer_token &lt;envoy_v3_api_field_extensions.filters.http.oauth2.v3.OAuth2Config.forward_bearer_token&gt;`
       * is set to true the filter will send over the bearer token as a cookie with this name to the
       * upstream. Defaults to ``BearerToken``.
       * </pre>
       *
       * <code>string bearer_token = 1 [(.validate.rules) = { ... }</code>
       * @return The bearerToken.
       */
      public java.lang.String getBearerToken() {
        java.lang.Object ref = bearerToken_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          bearerToken_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <pre>
       * Cookie name to hold OAuth bearer token value. When the authentication server validates the
       * client and returns an authorization token back to the OAuth filter, no matter what format
       * that token is, if :ref:`forward_bearer_token &lt;envoy_v3_api_field_extensions.filters.http.oauth2.v3.OAuth2Config.forward_bearer_token&gt;`
       * is set to true the filter will send over the bearer token as a cookie with this name to the
       * upstream. Defaults to ``BearerToken``.
       * </pre>
       *
       * <code>string bearer_token = 1 [(.validate.rules) = { ... }</code>
       * @return The bytes for bearerToken.
       */
      public com.google.protobuf.ByteString
          getBearerTokenBytes() {
        java.lang.Object ref = bearerToken_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          bearerToken_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       * Cookie name to hold OAuth bearer token value. When the authentication server validates the
       * client and returns an authorization token back to the OAuth filter, no matter what format
       * that token is, if :ref:`forward_bearer_token &lt;envoy_v3_api_field_extensions.filters.http.oauth2.v3.OAuth2Config.forward_bearer_token&gt;`
       * is set to true the filter will send over the bearer token as a cookie with this name to the
       * upstream. Defaults to ``BearerToken``.
       * </pre>
       *
       * <code>string bearer_token = 1 [(.validate.rules) = { ... }</code>
       * @param value The bearerToken to set.
       * @return This builder for chaining.
       */
      public Builder setBearerToken(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        bearerToken_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Cookie name to hold OAuth bearer token value. When the authentication server validates the
       * client and returns an authorization token back to the OAuth filter, no matter what format
       * that token is, if :ref:`forward_bearer_token &lt;envoy_v3_api_field_extensions.filters.http.oauth2.v3.OAuth2Config.forward_bearer_token&gt;`
       * is set to true the filter will send over the bearer token as a cookie with this name to the
       * upstream. Defaults to ``BearerToken``.
       * </pre>
       *
       * <code>string bearer_token = 1 [(.validate.rules) = { ... }</code>
       * @return This builder for chaining.
       */
      public Builder clearBearerToken() {
        
        bearerToken_ = getDefaultInstance().getBearerToken();
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Cookie name to hold OAuth bearer token value. When the authentication server validates the
       * client and returns an authorization token back to the OAuth filter, no matter what format
       * that token is, if :ref:`forward_bearer_token &lt;envoy_v3_api_field_extensions.filters.http.oauth2.v3.OAuth2Config.forward_bearer_token&gt;`
       * is set to true the filter will send over the bearer token as a cookie with this name to the
       * upstream. Defaults to ``BearerToken``.
       * </pre>
       *
       * <code>string bearer_token = 1 [(.validate.rules) = { ... }</code>
       * @param value The bytes for bearerToken to set.
       * @return This builder for chaining.
       */
      public Builder setBearerTokenBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        bearerToken_ = value;
        onChanged();
        return this;
      }

      private java.lang.Object oauthHmac_ = "";
      /**
       * <pre>
       * Cookie name to hold OAuth HMAC value. Defaults to ``OauthHMAC``.
       * </pre>
       *
       * <code>string oauth_hmac = 2 [(.validate.rules) = { ... }</code>
       * @return The oauthHmac.
       */
      public java.lang.String getOauthHmac() {
        java.lang.Object ref = oauthHmac_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          oauthHmac_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <pre>
       * Cookie name to hold OAuth HMAC value. Defaults to ``OauthHMAC``.
       * </pre>
       *
       * <code>string oauth_hmac = 2 [(.validate.rules) = { ... }</code>
       * @return The bytes for oauthHmac.
       */
      public com.google.protobuf.ByteString
          getOauthHmacBytes() {
        java.lang.Object ref = oauthHmac_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          oauthHmac_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       * Cookie name to hold OAuth HMAC value. Defaults to ``OauthHMAC``.
       * </pre>
       *
       * <code>string oauth_hmac = 2 [(.validate.rules) = { ... }</code>
       * @param value The oauthHmac to set.
       * @return This builder for chaining.
       */
      public Builder setOauthHmac(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        oauthHmac_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Cookie name to hold OAuth HMAC value. Defaults to ``OauthHMAC``.
       * </pre>
       *
       * <code>string oauth_hmac = 2 [(.validate.rules) = { ... }</code>
       * @return This builder for chaining.
       */
      public Builder clearOauthHmac() {
        
        oauthHmac_ = getDefaultInstance().getOauthHmac();
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Cookie name to hold OAuth HMAC value. Defaults to ``OauthHMAC``.
       * </pre>
       *
       * <code>string oauth_hmac = 2 [(.validate.rules) = { ... }</code>
       * @param value The bytes for oauthHmac to set.
       * @return This builder for chaining.
       */
      public Builder setOauthHmacBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        oauthHmac_ = value;
        onChanged();
        return this;
      }

      private java.lang.Object oauthExpires_ = "";
      /**
       * <pre>
       * Cookie name to hold OAuth expiry value. Defaults to ``OauthExpires``.
       * </pre>
       *
       * <code>string oauth_expires = 3 [(.validate.rules) = { ... }</code>
       * @return The oauthExpires.
       */
      public java.lang.String getOauthExpires() {
        java.lang.Object ref = oauthExpires_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          oauthExpires_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <pre>
       * Cookie name to hold OAuth expiry value. Defaults to ``OauthExpires``.
       * </pre>
       *
       * <code>string oauth_expires = 3 [(.validate.rules) = { ... }</code>
       * @return The bytes for oauthExpires.
       */
      public com.google.protobuf.ByteString
          getOauthExpiresBytes() {
        java.lang.Object ref = oauthExpires_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          oauthExpires_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       * Cookie name to hold OAuth expiry value. Defaults to ``OauthExpires``.
       * </pre>
       *
       * <code>string oauth_expires = 3 [(.validate.rules) = { ... }</code>
       * @param value The oauthExpires to set.
       * @return This builder for chaining.
       */
      public Builder setOauthExpires(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        oauthExpires_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Cookie name to hold OAuth expiry value. Defaults to ``OauthExpires``.
       * </pre>
       *
       * <code>string oauth_expires = 3 [(.validate.rules) = { ... }</code>
       * @return This builder for chaining.
       */
      public Builder clearOauthExpires() {
        
        oauthExpires_ = getDefaultInstance().getOauthExpires();
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Cookie name to hold OAuth expiry value. Defaults to ``OauthExpires``.
       * </pre>
       *
       * <code>string oauth_expires = 3 [(.validate.rules) = { ... }</code>
       * @param value The bytes for oauthExpires to set.
       * @return This builder for chaining.
       */
      public Builder setOauthExpiresBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        oauthExpires_ = value;
        onChanged();
        return this;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:envoy.extensions.filters.http.oauth2.v3.OAuth2Credentials.CookieNames)
    }

    // @@protoc_insertion_point(class_scope:envoy.extensions.filters.http.oauth2.v3.OAuth2Credentials.CookieNames)
    private static final io.envoyproxy.envoy.extensions.filters.http.oauth2.v3.OAuth2Credentials.CookieNames DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new io.envoyproxy.envoy.extensions.filters.http.oauth2.v3.OAuth2Credentials.CookieNames();
    }

    public static io.envoyproxy.envoy.extensions.filters.http.oauth2.v3.OAuth2Credentials.CookieNames getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<CookieNames>
        PARSER = new com.google.protobuf.AbstractParser<CookieNames>() {
      @java.lang.Override
      public CookieNames parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new CookieNames(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<CookieNames> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<CookieNames> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public io.envoyproxy.envoy.extensions.filters.http.oauth2.v3.OAuth2Credentials.CookieNames getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  private int tokenFormationCase_ = 0;
  private java.lang.Object tokenFormation_;
  public enum TokenFormationCase
      implements com.google.protobuf.Internal.EnumLite,
          com.google.protobuf.AbstractMessage.InternalOneOfEnum {
    HMAC_SECRET(3),
    TOKENFORMATION_NOT_SET(0);
    private final int value;
    private TokenFormationCase(int value) {
      this.value = value;
    }
    /**
     * @param value The number of the enum to look for.
     * @return The enum associated with the given number.
     * @deprecated Use {@link #forNumber(int)} instead.
     */
    @java.lang.Deprecated
    public static TokenFormationCase valueOf(int value) {
      return forNumber(value);
    }

    public static TokenFormationCase forNumber(int value) {
      switch (value) {
        case 3: return HMAC_SECRET;
        case 0: return TOKENFORMATION_NOT_SET;
        default: return null;
      }
    }
    public int getNumber() {
      return this.value;
    }
  };

  public TokenFormationCase
  getTokenFormationCase() {
    return TokenFormationCase.forNumber(
        tokenFormationCase_);
  }

  public static final int CLIENT_ID_FIELD_NUMBER = 1;
  private volatile java.lang.Object clientId_;
  /**
   * <pre>
   * The client_id to be used in the authorize calls. This value will be URL encoded when sent to the OAuth server.
   * </pre>
   *
   * <code>string client_id = 1 [(.validate.rules) = { ... }</code>
   * @return The clientId.
   */
  @java.lang.Override
  public java.lang.String getClientId() {
    java.lang.Object ref = clientId_;
    if (ref instanceof java.lang.String) {
      return (java.lang.String) ref;
    } else {
      com.google.protobuf.ByteString bs = 
          (com.google.protobuf.ByteString) ref;
      java.lang.String s = bs.toStringUtf8();
      clientId_ = s;
      return s;
    }
  }
  /**
   * <pre>
   * The client_id to be used in the authorize calls. This value will be URL encoded when sent to the OAuth server.
   * </pre>
   *
   * <code>string client_id = 1 [(.validate.rules) = { ... }</code>
   * @return The bytes for clientId.
   */
  @java.lang.Override
  public com.google.protobuf.ByteString
      getClientIdBytes() {
    java.lang.Object ref = clientId_;
    if (ref instanceof java.lang.String) {
      com.google.protobuf.ByteString b = 
          com.google.protobuf.ByteString.copyFromUtf8(
              (java.lang.String) ref);
      clientId_ = b;
      return b;
    } else {
      return (com.google.protobuf.ByteString) ref;
    }
  }

  public static final int TOKEN_SECRET_FIELD_NUMBER = 2;
  private io.envoyproxy.envoy.extensions.transport_sockets.tls.v3.SdsSecretConfig tokenSecret_;
  /**
   * <pre>
   * The secret used to retrieve the access token. This value will be URL encoded when sent to the OAuth server.
   * </pre>
   *
   * <code>.envoy.extensions.transport_sockets.tls.v3.SdsSecretConfig token_secret = 2 [(.validate.rules) = { ... }</code>
   * @return Whether the tokenSecret field is set.
   */
  @java.lang.Override
  public boolean hasTokenSecret() {
    return tokenSecret_ != null;
  }
  /**
   * <pre>
   * The secret used to retrieve the access token. This value will be URL encoded when sent to the OAuth server.
   * </pre>
   *
   * <code>.envoy.extensions.transport_sockets.tls.v3.SdsSecretConfig token_secret = 2 [(.validate.rules) = { ... }</code>
   * @return The tokenSecret.
   */
  @java.lang.Override
  public io.envoyproxy.envoy.extensions.transport_sockets.tls.v3.SdsSecretConfig getTokenSecret() {
    return tokenSecret_ == null ? io.envoyproxy.envoy.extensions.transport_sockets.tls.v3.SdsSecretConfig.getDefaultInstance() : tokenSecret_;
  }
  /**
   * <pre>
   * The secret used to retrieve the access token. This value will be URL encoded when sent to the OAuth server.
   * </pre>
   *
   * <code>.envoy.extensions.transport_sockets.tls.v3.SdsSecretConfig token_secret = 2 [(.validate.rules) = { ... }</code>
   */
  @java.lang.Override
  public io.envoyproxy.envoy.extensions.transport_sockets.tls.v3.SdsSecretConfigOrBuilder getTokenSecretOrBuilder() {
    return getTokenSecret();
  }

  public static final int HMAC_SECRET_FIELD_NUMBER = 3;
  /**
   * <pre>
   * If present, the secret token will be a HMAC using the provided secret.
   * </pre>
   *
   * <code>.envoy.extensions.transport_sockets.tls.v3.SdsSecretConfig hmac_secret = 3 [(.validate.rules) = { ... }</code>
   * @return Whether the hmacSecret field is set.
   */
  @java.lang.Override
  public boolean hasHmacSecret() {
    return tokenFormationCase_ == 3;
  }
  /**
   * <pre>
   * If present, the secret token will be a HMAC using the provided secret.
   * </pre>
   *
   * <code>.envoy.extensions.transport_sockets.tls.v3.SdsSecretConfig hmac_secret = 3 [(.validate.rules) = { ... }</code>
   * @return The hmacSecret.
   */
  @java.lang.Override
  public io.envoyproxy.envoy.extensions.transport_sockets.tls.v3.SdsSecretConfig getHmacSecret() {
    if (tokenFormationCase_ == 3) {
       return (io.envoyproxy.envoy.extensions.transport_sockets.tls.v3.SdsSecretConfig) tokenFormation_;
    }
    return io.envoyproxy.envoy.extensions.transport_sockets.tls.v3.SdsSecretConfig.getDefaultInstance();
  }
  /**
   * <pre>
   * If present, the secret token will be a HMAC using the provided secret.
   * </pre>
   *
   * <code>.envoy.extensions.transport_sockets.tls.v3.SdsSecretConfig hmac_secret = 3 [(.validate.rules) = { ... }</code>
   */
  @java.lang.Override
  public io.envoyproxy.envoy.extensions.transport_sockets.tls.v3.SdsSecretConfigOrBuilder getHmacSecretOrBuilder() {
    if (tokenFormationCase_ == 3) {
       return (io.envoyproxy.envoy.extensions.transport_sockets.tls.v3.SdsSecretConfig) tokenFormation_;
    }
    return io.envoyproxy.envoy.extensions.transport_sockets.tls.v3.SdsSecretConfig.getDefaultInstance();
  }

  public static final int COOKIE_NAMES_FIELD_NUMBER = 4;
  private io.envoyproxy.envoy.extensions.filters.http.oauth2.v3.OAuth2Credentials.CookieNames cookieNames_;
  /**
   * <pre>
   * The cookie names used in OAuth filters flow.
   * </pre>
   *
   * <code>.envoy.extensions.filters.http.oauth2.v3.OAuth2Credentials.CookieNames cookie_names = 4;</code>
   * @return Whether the cookieNames field is set.
   */
  @java.lang.Override
  public boolean hasCookieNames() {
    return cookieNames_ != null;
  }
  /**
   * <pre>
   * The cookie names used in OAuth filters flow.
   * </pre>
   *
   * <code>.envoy.extensions.filters.http.oauth2.v3.OAuth2Credentials.CookieNames cookie_names = 4;</code>
   * @return The cookieNames.
   */
  @java.lang.Override
  public io.envoyproxy.envoy.extensions.filters.http.oauth2.v3.OAuth2Credentials.CookieNames getCookieNames() {
    return cookieNames_ == null ? io.envoyproxy.envoy.extensions.filters.http.oauth2.v3.OAuth2Credentials.CookieNames.getDefaultInstance() : cookieNames_;
  }
  /**
   * <pre>
   * The cookie names used in OAuth filters flow.
   * </pre>
   *
   * <code>.envoy.extensions.filters.http.oauth2.v3.OAuth2Credentials.CookieNames cookie_names = 4;</code>
   */
  @java.lang.Override
  public io.envoyproxy.envoy.extensions.filters.http.oauth2.v3.OAuth2Credentials.CookieNamesOrBuilder getCookieNamesOrBuilder() {
    return getCookieNames();
  }

  private byte memoizedIsInitialized = -1;
  @java.lang.Override
  public final boolean isInitialized() {
    byte isInitialized = memoizedIsInitialized;
    if (isInitialized == 1) return true;
    if (isInitialized == 0) return false;

    memoizedIsInitialized = 1;
    return true;
  }

  @java.lang.Override
  public void writeTo(com.google.protobuf.CodedOutputStream output)
                      throws java.io.IOException {
    if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(clientId_)) {
      com.google.protobuf.GeneratedMessageV3.writeString(output, 1, clientId_);
    }
    if (tokenSecret_ != null) {
      output.writeMessage(2, getTokenSecret());
    }
    if (tokenFormationCase_ == 3) {
      output.writeMessage(3, (io.envoyproxy.envoy.extensions.transport_sockets.tls.v3.SdsSecretConfig) tokenFormation_);
    }
    if (cookieNames_ != null) {
      output.writeMessage(4, getCookieNames());
    }
    unknownFields.writeTo(output);
  }

  @java.lang.Override
  public int getSerializedSize() {
    int size = memoizedSize;
    if (size != -1) return size;

    size = 0;
    if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(clientId_)) {
      size += com.google.protobuf.GeneratedMessageV3.computeStringSize(1, clientId_);
    }
    if (tokenSecret_ != null) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(2, getTokenSecret());
    }
    if (tokenFormationCase_ == 3) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(3, (io.envoyproxy.envoy.extensions.transport_sockets.tls.v3.SdsSecretConfig) tokenFormation_);
    }
    if (cookieNames_ != null) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(4, getCookieNames());
    }
    size += unknownFields.getSerializedSize();
    memoizedSize = size;
    return size;
  }

  @java.lang.Override
  public boolean equals(final java.lang.Object obj) {
    if (obj == this) {
     return true;
    }
    if (!(obj instanceof io.envoyproxy.envoy.extensions.filters.http.oauth2.v3.OAuth2Credentials)) {
      return super.equals(obj);
    }
    io.envoyproxy.envoy.extensions.filters.http.oauth2.v3.OAuth2Credentials other = (io.envoyproxy.envoy.extensions.filters.http.oauth2.v3.OAuth2Credentials) obj;

    if (!getClientId()
        .equals(other.getClientId())) return false;
    if (hasTokenSecret() != other.hasTokenSecret()) return false;
    if (hasTokenSecret()) {
      if (!getTokenSecret()
          .equals(other.getTokenSecret())) return false;
    }
    if (hasCookieNames() != other.hasCookieNames()) return false;
    if (hasCookieNames()) {
      if (!getCookieNames()
          .equals(other.getCookieNames())) return false;
    }
    if (!getTokenFormationCase().equals(other.getTokenFormationCase())) return false;
    switch (tokenFormationCase_) {
      case 3:
        if (!getHmacSecret()
            .equals(other.getHmacSecret())) return false;
        break;
      case 0:
      default:
    }
    if (!unknownFields.equals(other.unknownFields)) return false;
    return true;
  }

  @java.lang.Override
  public int hashCode() {
    if (memoizedHashCode != 0) {
      return memoizedHashCode;
    }
    int hash = 41;
    hash = (19 * hash) + getDescriptor().hashCode();
    hash = (37 * hash) + CLIENT_ID_FIELD_NUMBER;
    hash = (53 * hash) + getClientId().hashCode();
    if (hasTokenSecret()) {
      hash = (37 * hash) + TOKEN_SECRET_FIELD_NUMBER;
      hash = (53 * hash) + getTokenSecret().hashCode();
    }
    if (hasCookieNames()) {
      hash = (37 * hash) + COOKIE_NAMES_FIELD_NUMBER;
      hash = (53 * hash) + getCookieNames().hashCode();
    }
    switch (tokenFormationCase_) {
      case 3:
        hash = (37 * hash) + HMAC_SECRET_FIELD_NUMBER;
        hash = (53 * hash) + getHmacSecret().hashCode();
        break;
      case 0:
      default:
    }
    hash = (29 * hash) + unknownFields.hashCode();
    memoizedHashCode = hash;
    return hash;
  }

  public static io.envoyproxy.envoy.extensions.filters.http.oauth2.v3.OAuth2Credentials parseFrom(
      java.nio.ByteBuffer data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static io.envoyproxy.envoy.extensions.filters.http.oauth2.v3.OAuth2Credentials parseFrom(
      java.nio.ByteBuffer data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static io.envoyproxy.envoy.extensions.filters.http.oauth2.v3.OAuth2Credentials parseFrom(
      com.google.protobuf.ByteString data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static io.envoyproxy.envoy.extensions.filters.http.oauth2.v3.OAuth2Credentials parseFrom(
      com.google.protobuf.ByteString data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static io.envoyproxy.envoy.extensions.filters.http.oauth2.v3.OAuth2Credentials parseFrom(byte[] data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static io.envoyproxy.envoy.extensions.filters.http.oauth2.v3.OAuth2Credentials parseFrom(
      byte[] data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static io.envoyproxy.envoy.extensions.filters.http.oauth2.v3.OAuth2Credentials parseFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input);
  }
  public static io.envoyproxy.envoy.extensions.filters.http.oauth2.v3.OAuth2Credentials parseFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input, extensionRegistry);
  }
  public static io.envoyproxy.envoy.extensions.filters.http.oauth2.v3.OAuth2Credentials parseDelimitedFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseDelimitedWithIOException(PARSER, input);
  }
  public static io.envoyproxy.envoy.extensions.filters.http.oauth2.v3.OAuth2Credentials parseDelimitedFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
  }
  public static io.envoyproxy.envoy.extensions.filters.http.oauth2.v3.OAuth2Credentials parseFrom(
      com.google.protobuf.CodedInputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input);
  }
  public static io.envoyproxy.envoy.extensions.filters.http.oauth2.v3.OAuth2Credentials parseFrom(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input, extensionRegistry);
  }

  @java.lang.Override
  public Builder newBuilderForType() { return newBuilder(); }
  public static Builder newBuilder() {
    return DEFAULT_INSTANCE.toBuilder();
  }
  public static Builder newBuilder(io.envoyproxy.envoy.extensions.filters.http.oauth2.v3.OAuth2Credentials prototype) {
    return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
  }
  @java.lang.Override
  public Builder toBuilder() {
    return this == DEFAULT_INSTANCE
        ? new Builder() : new Builder().mergeFrom(this);
  }

  @java.lang.Override
  protected Builder newBuilderForType(
      com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
    Builder builder = new Builder(parent);
    return builder;
  }
  /**
   * Protobuf type {@code envoy.extensions.filters.http.oauth2.v3.OAuth2Credentials}
   */
  public static final class Builder extends
      com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
      // @@protoc_insertion_point(builder_implements:envoy.extensions.filters.http.oauth2.v3.OAuth2Credentials)
      io.envoyproxy.envoy.extensions.filters.http.oauth2.v3.OAuth2CredentialsOrBuilder {
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return io.envoyproxy.envoy.extensions.filters.http.oauth2.v3.OauthProto.internal_static_envoy_extensions_filters_http_oauth2_v3_OAuth2Credentials_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return io.envoyproxy.envoy.extensions.filters.http.oauth2.v3.OauthProto.internal_static_envoy_extensions_filters_http_oauth2_v3_OAuth2Credentials_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              io.envoyproxy.envoy.extensions.filters.http.oauth2.v3.OAuth2Credentials.class, io.envoyproxy.envoy.extensions.filters.http.oauth2.v3.OAuth2Credentials.Builder.class);
    }

    // Construct using io.envoyproxy.envoy.extensions.filters.http.oauth2.v3.OAuth2Credentials.newBuilder()
    private Builder() {
      maybeForceBuilderInitialization();
    }

    private Builder(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      super(parent);
      maybeForceBuilderInitialization();
    }
    private void maybeForceBuilderInitialization() {
      if (com.google.protobuf.GeneratedMessageV3
              .alwaysUseFieldBuilders) {
      }
    }
    @java.lang.Override
    public Builder clear() {
      super.clear();
      clientId_ = "";

      if (tokenSecretBuilder_ == null) {
        tokenSecret_ = null;
      } else {
        tokenSecret_ = null;
        tokenSecretBuilder_ = null;
      }
      if (cookieNamesBuilder_ == null) {
        cookieNames_ = null;
      } else {
        cookieNames_ = null;
        cookieNamesBuilder_ = null;
      }
      tokenFormationCase_ = 0;
      tokenFormation_ = null;
      return this;
    }

    @java.lang.Override
    public com.google.protobuf.Descriptors.Descriptor
        getDescriptorForType() {
      return io.envoyproxy.envoy.extensions.filters.http.oauth2.v3.OauthProto.internal_static_envoy_extensions_filters_http_oauth2_v3_OAuth2Credentials_descriptor;
    }

    @java.lang.Override
    public io.envoyproxy.envoy.extensions.filters.http.oauth2.v3.OAuth2Credentials getDefaultInstanceForType() {
      return io.envoyproxy.envoy.extensions.filters.http.oauth2.v3.OAuth2Credentials.getDefaultInstance();
    }

    @java.lang.Override
    public io.envoyproxy.envoy.extensions.filters.http.oauth2.v3.OAuth2Credentials build() {
      io.envoyproxy.envoy.extensions.filters.http.oauth2.v3.OAuth2Credentials result = buildPartial();
      if (!result.isInitialized()) {
        throw newUninitializedMessageException(result);
      }
      return result;
    }

    @java.lang.Override
    public io.envoyproxy.envoy.extensions.filters.http.oauth2.v3.OAuth2Credentials buildPartial() {
      io.envoyproxy.envoy.extensions.filters.http.oauth2.v3.OAuth2Credentials result = new io.envoyproxy.envoy.extensions.filters.http.oauth2.v3.OAuth2Credentials(this);
      result.clientId_ = clientId_;
      if (tokenSecretBuilder_ == null) {
        result.tokenSecret_ = tokenSecret_;
      } else {
        result.tokenSecret_ = tokenSecretBuilder_.build();
      }
      if (tokenFormationCase_ == 3) {
        if (hmacSecretBuilder_ == null) {
          result.tokenFormation_ = tokenFormation_;
        } else {
          result.tokenFormation_ = hmacSecretBuilder_.build();
        }
      }
      if (cookieNamesBuilder_ == null) {
        result.cookieNames_ = cookieNames_;
      } else {
        result.cookieNames_ = cookieNamesBuilder_.build();
      }
      result.tokenFormationCase_ = tokenFormationCase_;
      onBuilt();
      return result;
    }

    @java.lang.Override
    public Builder clone() {
      return super.clone();
    }
    @java.lang.Override
    public Builder setField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        java.lang.Object value) {
      return super.setField(field, value);
    }
    @java.lang.Override
    public Builder clearField(
        com.google.protobuf.Descriptors.FieldDescriptor field) {
      return super.clearField(field);
    }
    @java.lang.Override
    public Builder clearOneof(
        com.google.protobuf.Descriptors.OneofDescriptor oneof) {
      return super.clearOneof(oneof);
    }
    @java.lang.Override
    public Builder setRepeatedField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        int index, java.lang.Object value) {
      return super.setRepeatedField(field, index, value);
    }
    @java.lang.Override
    public Builder addRepeatedField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        java.lang.Object value) {
      return super.addRepeatedField(field, value);
    }
    @java.lang.Override
    public Builder mergeFrom(com.google.protobuf.Message other) {
      if (other instanceof io.envoyproxy.envoy.extensions.filters.http.oauth2.v3.OAuth2Credentials) {
        return mergeFrom((io.envoyproxy.envoy.extensions.filters.http.oauth2.v3.OAuth2Credentials)other);
      } else {
        super.mergeFrom(other);
        return this;
      }
    }

    public Builder mergeFrom(io.envoyproxy.envoy.extensions.filters.http.oauth2.v3.OAuth2Credentials other) {
      if (other == io.envoyproxy.envoy.extensions.filters.http.oauth2.v3.OAuth2Credentials.getDefaultInstance()) return this;
      if (!other.getClientId().isEmpty()) {
        clientId_ = other.clientId_;
        onChanged();
      }
      if (other.hasTokenSecret()) {
        mergeTokenSecret(other.getTokenSecret());
      }
      if (other.hasCookieNames()) {
        mergeCookieNames(other.getCookieNames());
      }
      switch (other.getTokenFormationCase()) {
        case HMAC_SECRET: {
          mergeHmacSecret(other.getHmacSecret());
          break;
        }
        case TOKENFORMATION_NOT_SET: {
          break;
        }
      }
      this.mergeUnknownFields(other.unknownFields);
      onChanged();
      return this;
    }

    @java.lang.Override
    public final boolean isInitialized() {
      return true;
    }

    @java.lang.Override
    public Builder mergeFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      io.envoyproxy.envoy.extensions.filters.http.oauth2.v3.OAuth2Credentials parsedMessage = null;
      try {
        parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        parsedMessage = (io.envoyproxy.envoy.extensions.filters.http.oauth2.v3.OAuth2Credentials) e.getUnfinishedMessage();
        throw e.unwrapIOException();
      } finally {
        if (parsedMessage != null) {
          mergeFrom(parsedMessage);
        }
      }
      return this;
    }
    private int tokenFormationCase_ = 0;
    private java.lang.Object tokenFormation_;
    public TokenFormationCase
        getTokenFormationCase() {
      return TokenFormationCase.forNumber(
          tokenFormationCase_);
    }

    public Builder clearTokenFormation() {
      tokenFormationCase_ = 0;
      tokenFormation_ = null;
      onChanged();
      return this;
    }


    private java.lang.Object clientId_ = "";
    /**
     * <pre>
     * The client_id to be used in the authorize calls. This value will be URL encoded when sent to the OAuth server.
     * </pre>
     *
     * <code>string client_id = 1 [(.validate.rules) = { ... }</code>
     * @return The clientId.
     */
    public java.lang.String getClientId() {
      java.lang.Object ref = clientId_;
      if (!(ref instanceof java.lang.String)) {
        com.google.protobuf.ByteString bs =
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        clientId_ = s;
        return s;
      } else {
        return (java.lang.String) ref;
      }
    }
    /**
     * <pre>
     * The client_id to be used in the authorize calls. This value will be URL encoded when sent to the OAuth server.
     * </pre>
     *
     * <code>string client_id = 1 [(.validate.rules) = { ... }</code>
     * @return The bytes for clientId.
     */
    public com.google.protobuf.ByteString
        getClientIdBytes() {
      java.lang.Object ref = clientId_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        clientId_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }
    /**
     * <pre>
     * The client_id to be used in the authorize calls. This value will be URL encoded when sent to the OAuth server.
     * </pre>
     *
     * <code>string client_id = 1 [(.validate.rules) = { ... }</code>
     * @param value The clientId to set.
     * @return This builder for chaining.
     */
    public Builder setClientId(
        java.lang.String value) {
      if (value == null) {
    throw new NullPointerException();
  }
  
      clientId_ = value;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * The client_id to be used in the authorize calls. This value will be URL encoded when sent to the OAuth server.
     * </pre>
     *
     * <code>string client_id = 1 [(.validate.rules) = { ... }</code>
     * @return This builder for chaining.
     */
    public Builder clearClientId() {
      
      clientId_ = getDefaultInstance().getClientId();
      onChanged();
      return this;
    }
    /**
     * <pre>
     * The client_id to be used in the authorize calls. This value will be URL encoded when sent to the OAuth server.
     * </pre>
     *
     * <code>string client_id = 1 [(.validate.rules) = { ... }</code>
     * @param value The bytes for clientId to set.
     * @return This builder for chaining.
     */
    public Builder setClientIdBytes(
        com.google.protobuf.ByteString value) {
      if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
      
      clientId_ = value;
      onChanged();
      return this;
    }

    private io.envoyproxy.envoy.extensions.transport_sockets.tls.v3.SdsSecretConfig tokenSecret_;
    private com.google.protobuf.SingleFieldBuilderV3<
        io.envoyproxy.envoy.extensions.transport_sockets.tls.v3.SdsSecretConfig, io.envoyproxy.envoy.extensions.transport_sockets.tls.v3.SdsSecretConfig.Builder, io.envoyproxy.envoy.extensions.transport_sockets.tls.v3.SdsSecretConfigOrBuilder> tokenSecretBuilder_;
    /**
     * <pre>
     * The secret used to retrieve the access token. This value will be URL encoded when sent to the OAuth server.
     * </pre>
     *
     * <code>.envoy.extensions.transport_sockets.tls.v3.SdsSecretConfig token_secret = 2 [(.validate.rules) = { ... }</code>
     * @return Whether the tokenSecret field is set.
     */
    public boolean hasTokenSecret() {
      return tokenSecretBuilder_ != null || tokenSecret_ != null;
    }
    /**
     * <pre>
     * The secret used to retrieve the access token. This value will be URL encoded when sent to the OAuth server.
     * </pre>
     *
     * <code>.envoy.extensions.transport_sockets.tls.v3.SdsSecretConfig token_secret = 2 [(.validate.rules) = { ... }</code>
     * @return The tokenSecret.
     */
    public io.envoyproxy.envoy.extensions.transport_sockets.tls.v3.SdsSecretConfig getTokenSecret() {
      if (tokenSecretBuilder_ == null) {
        return tokenSecret_ == null ? io.envoyproxy.envoy.extensions.transport_sockets.tls.v3.SdsSecretConfig.getDefaultInstance() : tokenSecret_;
      } else {
        return tokenSecretBuilder_.getMessage();
      }
    }
    /**
     * <pre>
     * The secret used to retrieve the access token. This value will be URL encoded when sent to the OAuth server.
     * </pre>
     *
     * <code>.envoy.extensions.transport_sockets.tls.v3.SdsSecretConfig token_secret = 2 [(.validate.rules) = { ... }</code>
     */
    public Builder setTokenSecret(io.envoyproxy.envoy.extensions.transport_sockets.tls.v3.SdsSecretConfig value) {
      if (tokenSecretBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        tokenSecret_ = value;
        onChanged();
      } else {
        tokenSecretBuilder_.setMessage(value);
      }

      return this;
    }
    /**
     * <pre>
     * The secret used to retrieve the access token. This value will be URL encoded when sent to the OAuth server.
     * </pre>
     *
     * <code>.envoy.extensions.transport_sockets.tls.v3.SdsSecretConfig token_secret = 2 [(.validate.rules) = { ... }</code>
     */
    public Builder setTokenSecret(
        io.envoyproxy.envoy.extensions.transport_sockets.tls.v3.SdsSecretConfig.Builder builderForValue) {
      if (tokenSecretBuilder_ == null) {
        tokenSecret_ = builderForValue.build();
        onChanged();
      } else {
        tokenSecretBuilder_.setMessage(builderForValue.build());
      }

      return this;
    }
    /**
     * <pre>
     * The secret used to retrieve the access token. This value will be URL encoded when sent to the OAuth server.
     * </pre>
     *
     * <code>.envoy.extensions.transport_sockets.tls.v3.SdsSecretConfig token_secret = 2 [(.validate.rules) = { ... }</code>
     */
    public Builder mergeTokenSecret(io.envoyproxy.envoy.extensions.transport_sockets.tls.v3.SdsSecretConfig value) {
      if (tokenSecretBuilder_ == null) {
        if (tokenSecret_ != null) {
          tokenSecret_ =
            io.envoyproxy.envoy.extensions.transport_sockets.tls.v3.SdsSecretConfig.newBuilder(tokenSecret_).mergeFrom(value).buildPartial();
        } else {
          tokenSecret_ = value;
        }
        onChanged();
      } else {
        tokenSecretBuilder_.mergeFrom(value);
      }

      return this;
    }
    /**
     * <pre>
     * The secret used to retrieve the access token. This value will be URL encoded when sent to the OAuth server.
     * </pre>
     *
     * <code>.envoy.extensions.transport_sockets.tls.v3.SdsSecretConfig token_secret = 2 [(.validate.rules) = { ... }</code>
     */
    public Builder clearTokenSecret() {
      if (tokenSecretBuilder_ == null) {
        tokenSecret_ = null;
        onChanged();
      } else {
        tokenSecret_ = null;
        tokenSecretBuilder_ = null;
      }

      return this;
    }
    /**
     * <pre>
     * The secret used to retrieve the access token. This value will be URL encoded when sent to the OAuth server.
     * </pre>
     *
     * <code>.envoy.extensions.transport_sockets.tls.v3.SdsSecretConfig token_secret = 2 [(.validate.rules) = { ... }</code>
     */
    public io.envoyproxy.envoy.extensions.transport_sockets.tls.v3.SdsSecretConfig.Builder getTokenSecretBuilder() {
      
      onChanged();
      return getTokenSecretFieldBuilder().getBuilder();
    }
    /**
     * <pre>
     * The secret used to retrieve the access token. This value will be URL encoded when sent to the OAuth server.
     * </pre>
     *
     * <code>.envoy.extensions.transport_sockets.tls.v3.SdsSecretConfig token_secret = 2 [(.validate.rules) = { ... }</code>
     */
    public io.envoyproxy.envoy.extensions.transport_sockets.tls.v3.SdsSecretConfigOrBuilder getTokenSecretOrBuilder() {
      if (tokenSecretBuilder_ != null) {
        return tokenSecretBuilder_.getMessageOrBuilder();
      } else {
        return tokenSecret_ == null ?
            io.envoyproxy.envoy.extensions.transport_sockets.tls.v3.SdsSecretConfig.getDefaultInstance() : tokenSecret_;
      }
    }
    /**
     * <pre>
     * The secret used to retrieve the access token. This value will be URL encoded when sent to the OAuth server.
     * </pre>
     *
     * <code>.envoy.extensions.transport_sockets.tls.v3.SdsSecretConfig token_secret = 2 [(.validate.rules) = { ... }</code>
     */
    private com.google.protobuf.SingleFieldBuilderV3<
        io.envoyproxy.envoy.extensions.transport_sockets.tls.v3.SdsSecretConfig, io.envoyproxy.envoy.extensions.transport_sockets.tls.v3.SdsSecretConfig.Builder, io.envoyproxy.envoy.extensions.transport_sockets.tls.v3.SdsSecretConfigOrBuilder> 
        getTokenSecretFieldBuilder() {
      if (tokenSecretBuilder_ == null) {
        tokenSecretBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
            io.envoyproxy.envoy.extensions.transport_sockets.tls.v3.SdsSecretConfig, io.envoyproxy.envoy.extensions.transport_sockets.tls.v3.SdsSecretConfig.Builder, io.envoyproxy.envoy.extensions.transport_sockets.tls.v3.SdsSecretConfigOrBuilder>(
                getTokenSecret(),
                getParentForChildren(),
                isClean());
        tokenSecret_ = null;
      }
      return tokenSecretBuilder_;
    }

    private com.google.protobuf.SingleFieldBuilderV3<
        io.envoyproxy.envoy.extensions.transport_sockets.tls.v3.SdsSecretConfig, io.envoyproxy.envoy.extensions.transport_sockets.tls.v3.SdsSecretConfig.Builder, io.envoyproxy.envoy.extensions.transport_sockets.tls.v3.SdsSecretConfigOrBuilder> hmacSecretBuilder_;
    /**
     * <pre>
     * If present, the secret token will be a HMAC using the provided secret.
     * </pre>
     *
     * <code>.envoy.extensions.transport_sockets.tls.v3.SdsSecretConfig hmac_secret = 3 [(.validate.rules) = { ... }</code>
     * @return Whether the hmacSecret field is set.
     */
    @java.lang.Override
    public boolean hasHmacSecret() {
      return tokenFormationCase_ == 3;
    }
    /**
     * <pre>
     * If present, the secret token will be a HMAC using the provided secret.
     * </pre>
     *
     * <code>.envoy.extensions.transport_sockets.tls.v3.SdsSecretConfig hmac_secret = 3 [(.validate.rules) = { ... }</code>
     * @return The hmacSecret.
     */
    @java.lang.Override
    public io.envoyproxy.envoy.extensions.transport_sockets.tls.v3.SdsSecretConfig getHmacSecret() {
      if (hmacSecretBuilder_ == null) {
        if (tokenFormationCase_ == 3) {
          return (io.envoyproxy.envoy.extensions.transport_sockets.tls.v3.SdsSecretConfig) tokenFormation_;
        }
        return io.envoyproxy.envoy.extensions.transport_sockets.tls.v3.SdsSecretConfig.getDefaultInstance();
      } else {
        if (tokenFormationCase_ == 3) {
          return hmacSecretBuilder_.getMessage();
        }
        return io.envoyproxy.envoy.extensions.transport_sockets.tls.v3.SdsSecretConfig.getDefaultInstance();
      }
    }
    /**
     * <pre>
     * If present, the secret token will be a HMAC using the provided secret.
     * </pre>
     *
     * <code>.envoy.extensions.transport_sockets.tls.v3.SdsSecretConfig hmac_secret = 3 [(.validate.rules) = { ... }</code>
     */
    public Builder setHmacSecret(io.envoyproxy.envoy.extensions.transport_sockets.tls.v3.SdsSecretConfig value) {
      if (hmacSecretBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        tokenFormation_ = value;
        onChanged();
      } else {
        hmacSecretBuilder_.setMessage(value);
      }
      tokenFormationCase_ = 3;
      return this;
    }
    /**
     * <pre>
     * If present, the secret token will be a HMAC using the provided secret.
     * </pre>
     *
     * <code>.envoy.extensions.transport_sockets.tls.v3.SdsSecretConfig hmac_secret = 3 [(.validate.rules) = { ... }</code>
     */
    public Builder setHmacSecret(
        io.envoyproxy.envoy.extensions.transport_sockets.tls.v3.SdsSecretConfig.Builder builderForValue) {
      if (hmacSecretBuilder_ == null) {
        tokenFormation_ = builderForValue.build();
        onChanged();
      } else {
        hmacSecretBuilder_.setMessage(builderForValue.build());
      }
      tokenFormationCase_ = 3;
      return this;
    }
    /**
     * <pre>
     * If present, the secret token will be a HMAC using the provided secret.
     * </pre>
     *
     * <code>.envoy.extensions.transport_sockets.tls.v3.SdsSecretConfig hmac_secret = 3 [(.validate.rules) = { ... }</code>
     */
    public Builder mergeHmacSecret(io.envoyproxy.envoy.extensions.transport_sockets.tls.v3.SdsSecretConfig value) {
      if (hmacSecretBuilder_ == null) {
        if (tokenFormationCase_ == 3 &&
            tokenFormation_ != io.envoyproxy.envoy.extensions.transport_sockets.tls.v3.SdsSecretConfig.getDefaultInstance()) {
          tokenFormation_ = io.envoyproxy.envoy.extensions.transport_sockets.tls.v3.SdsSecretConfig.newBuilder((io.envoyproxy.envoy.extensions.transport_sockets.tls.v3.SdsSecretConfig) tokenFormation_)
              .mergeFrom(value).buildPartial();
        } else {
          tokenFormation_ = value;
        }
        onChanged();
      } else {
        if (tokenFormationCase_ == 3) {
          hmacSecretBuilder_.mergeFrom(value);
        } else {
          hmacSecretBuilder_.setMessage(value);
        }
      }
      tokenFormationCase_ = 3;
      return this;
    }
    /**
     * <pre>
     * If present, the secret token will be a HMAC using the provided secret.
     * </pre>
     *
     * <code>.envoy.extensions.transport_sockets.tls.v3.SdsSecretConfig hmac_secret = 3 [(.validate.rules) = { ... }</code>
     */
    public Builder clearHmacSecret() {
      if (hmacSecretBuilder_ == null) {
        if (tokenFormationCase_ == 3) {
          tokenFormationCase_ = 0;
          tokenFormation_ = null;
          onChanged();
        }
      } else {
        if (tokenFormationCase_ == 3) {
          tokenFormationCase_ = 0;
          tokenFormation_ = null;
        }
        hmacSecretBuilder_.clear();
      }
      return this;
    }
    /**
     * <pre>
     * If present, the secret token will be a HMAC using the provided secret.
     * </pre>
     *
     * <code>.envoy.extensions.transport_sockets.tls.v3.SdsSecretConfig hmac_secret = 3 [(.validate.rules) = { ... }</code>
     */
    public io.envoyproxy.envoy.extensions.transport_sockets.tls.v3.SdsSecretConfig.Builder getHmacSecretBuilder() {
      return getHmacSecretFieldBuilder().getBuilder();
    }
    /**
     * <pre>
     * If present, the secret token will be a HMAC using the provided secret.
     * </pre>
     *
     * <code>.envoy.extensions.transport_sockets.tls.v3.SdsSecretConfig hmac_secret = 3 [(.validate.rules) = { ... }</code>
     */
    @java.lang.Override
    public io.envoyproxy.envoy.extensions.transport_sockets.tls.v3.SdsSecretConfigOrBuilder getHmacSecretOrBuilder() {
      if ((tokenFormationCase_ == 3) && (hmacSecretBuilder_ != null)) {
        return hmacSecretBuilder_.getMessageOrBuilder();
      } else {
        if (tokenFormationCase_ == 3) {
          return (io.envoyproxy.envoy.extensions.transport_sockets.tls.v3.SdsSecretConfig) tokenFormation_;
        }
        return io.envoyproxy.envoy.extensions.transport_sockets.tls.v3.SdsSecretConfig.getDefaultInstance();
      }
    }
    /**
     * <pre>
     * If present, the secret token will be a HMAC using the provided secret.
     * </pre>
     *
     * <code>.envoy.extensions.transport_sockets.tls.v3.SdsSecretConfig hmac_secret = 3 [(.validate.rules) = { ... }</code>
     */
    private com.google.protobuf.SingleFieldBuilderV3<
        io.envoyproxy.envoy.extensions.transport_sockets.tls.v3.SdsSecretConfig, io.envoyproxy.envoy.extensions.transport_sockets.tls.v3.SdsSecretConfig.Builder, io.envoyproxy.envoy.extensions.transport_sockets.tls.v3.SdsSecretConfigOrBuilder> 
        getHmacSecretFieldBuilder() {
      if (hmacSecretBuilder_ == null) {
        if (!(tokenFormationCase_ == 3)) {
          tokenFormation_ = io.envoyproxy.envoy.extensions.transport_sockets.tls.v3.SdsSecretConfig.getDefaultInstance();
        }
        hmacSecretBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
            io.envoyproxy.envoy.extensions.transport_sockets.tls.v3.SdsSecretConfig, io.envoyproxy.envoy.extensions.transport_sockets.tls.v3.SdsSecretConfig.Builder, io.envoyproxy.envoy.extensions.transport_sockets.tls.v3.SdsSecretConfigOrBuilder>(
                (io.envoyproxy.envoy.extensions.transport_sockets.tls.v3.SdsSecretConfig) tokenFormation_,
                getParentForChildren(),
                isClean());
        tokenFormation_ = null;
      }
      tokenFormationCase_ = 3;
      onChanged();;
      return hmacSecretBuilder_;
    }

    private io.envoyproxy.envoy.extensions.filters.http.oauth2.v3.OAuth2Credentials.CookieNames cookieNames_;
    private com.google.protobuf.SingleFieldBuilderV3<
        io.envoyproxy.envoy.extensions.filters.http.oauth2.v3.OAuth2Credentials.CookieNames, io.envoyproxy.envoy.extensions.filters.http.oauth2.v3.OAuth2Credentials.CookieNames.Builder, io.envoyproxy.envoy.extensions.filters.http.oauth2.v3.OAuth2Credentials.CookieNamesOrBuilder> cookieNamesBuilder_;
    /**
     * <pre>
     * The cookie names used in OAuth filters flow.
     * </pre>
     *
     * <code>.envoy.extensions.filters.http.oauth2.v3.OAuth2Credentials.CookieNames cookie_names = 4;</code>
     * @return Whether the cookieNames field is set.
     */
    public boolean hasCookieNames() {
      return cookieNamesBuilder_ != null || cookieNames_ != null;
    }
    /**
     * <pre>
     * The cookie names used in OAuth filters flow.
     * </pre>
     *
     * <code>.envoy.extensions.filters.http.oauth2.v3.OAuth2Credentials.CookieNames cookie_names = 4;</code>
     * @return The cookieNames.
     */
    public io.envoyproxy.envoy.extensions.filters.http.oauth2.v3.OAuth2Credentials.CookieNames getCookieNames() {
      if (cookieNamesBuilder_ == null) {
        return cookieNames_ == null ? io.envoyproxy.envoy.extensions.filters.http.oauth2.v3.OAuth2Credentials.CookieNames.getDefaultInstance() : cookieNames_;
      } else {
        return cookieNamesBuilder_.getMessage();
      }
    }
    /**
     * <pre>
     * The cookie names used in OAuth filters flow.
     * </pre>
     *
     * <code>.envoy.extensions.filters.http.oauth2.v3.OAuth2Credentials.CookieNames cookie_names = 4;</code>
     */
    public Builder setCookieNames(io.envoyproxy.envoy.extensions.filters.http.oauth2.v3.OAuth2Credentials.CookieNames value) {
      if (cookieNamesBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        cookieNames_ = value;
        onChanged();
      } else {
        cookieNamesBuilder_.setMessage(value);
      }

      return this;
    }
    /**
     * <pre>
     * The cookie names used in OAuth filters flow.
     * </pre>
     *
     * <code>.envoy.extensions.filters.http.oauth2.v3.OAuth2Credentials.CookieNames cookie_names = 4;</code>
     */
    public Builder setCookieNames(
        io.envoyproxy.envoy.extensions.filters.http.oauth2.v3.OAuth2Credentials.CookieNames.Builder builderForValue) {
      if (cookieNamesBuilder_ == null) {
        cookieNames_ = builderForValue.build();
        onChanged();
      } else {
        cookieNamesBuilder_.setMessage(builderForValue.build());
      }

      return this;
    }
    /**
     * <pre>
     * The cookie names used in OAuth filters flow.
     * </pre>
     *
     * <code>.envoy.extensions.filters.http.oauth2.v3.OAuth2Credentials.CookieNames cookie_names = 4;</code>
     */
    public Builder mergeCookieNames(io.envoyproxy.envoy.extensions.filters.http.oauth2.v3.OAuth2Credentials.CookieNames value) {
      if (cookieNamesBuilder_ == null) {
        if (cookieNames_ != null) {
          cookieNames_ =
            io.envoyproxy.envoy.extensions.filters.http.oauth2.v3.OAuth2Credentials.CookieNames.newBuilder(cookieNames_).mergeFrom(value).buildPartial();
        } else {
          cookieNames_ = value;
        }
        onChanged();
      } else {
        cookieNamesBuilder_.mergeFrom(value);
      }

      return this;
    }
    /**
     * <pre>
     * The cookie names used in OAuth filters flow.
     * </pre>
     *
     * <code>.envoy.extensions.filters.http.oauth2.v3.OAuth2Credentials.CookieNames cookie_names = 4;</code>
     */
    public Builder clearCookieNames() {
      if (cookieNamesBuilder_ == null) {
        cookieNames_ = null;
        onChanged();
      } else {
        cookieNames_ = null;
        cookieNamesBuilder_ = null;
      }

      return this;
    }
    /**
     * <pre>
     * The cookie names used in OAuth filters flow.
     * </pre>
     *
     * <code>.envoy.extensions.filters.http.oauth2.v3.OAuth2Credentials.CookieNames cookie_names = 4;</code>
     */
    public io.envoyproxy.envoy.extensions.filters.http.oauth2.v3.OAuth2Credentials.CookieNames.Builder getCookieNamesBuilder() {
      
      onChanged();
      return getCookieNamesFieldBuilder().getBuilder();
    }
    /**
     * <pre>
     * The cookie names used in OAuth filters flow.
     * </pre>
     *
     * <code>.envoy.extensions.filters.http.oauth2.v3.OAuth2Credentials.CookieNames cookie_names = 4;</code>
     */
    public io.envoyproxy.envoy.extensions.filters.http.oauth2.v3.OAuth2Credentials.CookieNamesOrBuilder getCookieNamesOrBuilder() {
      if (cookieNamesBuilder_ != null) {
        return cookieNamesBuilder_.getMessageOrBuilder();
      } else {
        return cookieNames_ == null ?
            io.envoyproxy.envoy.extensions.filters.http.oauth2.v3.OAuth2Credentials.CookieNames.getDefaultInstance() : cookieNames_;
      }
    }
    /**
     * <pre>
     * The cookie names used in OAuth filters flow.
     * </pre>
     *
     * <code>.envoy.extensions.filters.http.oauth2.v3.OAuth2Credentials.CookieNames cookie_names = 4;</code>
     */
    private com.google.protobuf.SingleFieldBuilderV3<
        io.envoyproxy.envoy.extensions.filters.http.oauth2.v3.OAuth2Credentials.CookieNames, io.envoyproxy.envoy.extensions.filters.http.oauth2.v3.OAuth2Credentials.CookieNames.Builder, io.envoyproxy.envoy.extensions.filters.http.oauth2.v3.OAuth2Credentials.CookieNamesOrBuilder> 
        getCookieNamesFieldBuilder() {
      if (cookieNamesBuilder_ == null) {
        cookieNamesBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
            io.envoyproxy.envoy.extensions.filters.http.oauth2.v3.OAuth2Credentials.CookieNames, io.envoyproxy.envoy.extensions.filters.http.oauth2.v3.OAuth2Credentials.CookieNames.Builder, io.envoyproxy.envoy.extensions.filters.http.oauth2.v3.OAuth2Credentials.CookieNamesOrBuilder>(
                getCookieNames(),
                getParentForChildren(),
                isClean());
        cookieNames_ = null;
      }
      return cookieNamesBuilder_;
    }
    @java.lang.Override
    public final Builder setUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return super.setUnknownFields(unknownFields);
    }

    @java.lang.Override
    public final Builder mergeUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return super.mergeUnknownFields(unknownFields);
    }


    // @@protoc_insertion_point(builder_scope:envoy.extensions.filters.http.oauth2.v3.OAuth2Credentials)
  }

  // @@protoc_insertion_point(class_scope:envoy.extensions.filters.http.oauth2.v3.OAuth2Credentials)
  private static final io.envoyproxy.envoy.extensions.filters.http.oauth2.v3.OAuth2Credentials DEFAULT_INSTANCE;
  static {
    DEFAULT_INSTANCE = new io.envoyproxy.envoy.extensions.filters.http.oauth2.v3.OAuth2Credentials();
  }

  public static io.envoyproxy.envoy.extensions.filters.http.oauth2.v3.OAuth2Credentials getDefaultInstance() {
    return DEFAULT_INSTANCE;
  }

  private static final com.google.protobuf.Parser<OAuth2Credentials>
      PARSER = new com.google.protobuf.AbstractParser<OAuth2Credentials>() {
    @java.lang.Override
    public OAuth2Credentials parsePartialFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return new OAuth2Credentials(input, extensionRegistry);
    }
  };

  public static com.google.protobuf.Parser<OAuth2Credentials> parser() {
    return PARSER;
  }

  @java.lang.Override
  public com.google.protobuf.Parser<OAuth2Credentials> getParserForType() {
    return PARSER;
  }

  @java.lang.Override
  public io.envoyproxy.envoy.extensions.filters.http.oauth2.v3.OAuth2Credentials getDefaultInstanceForType() {
    return DEFAULT_INSTANCE;
  }

}

