// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: envoy/extensions/filters/http/cdn_loop/v3/cdn_loop.proto

package io.envoyproxy.envoy.extensions.filters.http.cdn_loop.v3;

public interface CdnLoopConfigOrBuilder extends
    // @@protoc_insertion_point(interface_extends:envoy.extensions.filters.http.cdn_loop.v3.CdnLoopConfig)
    com.google.protobuf.MessageOrBuilder {

  /**
   * <pre>
   * The CDN identifier to use for loop checks and to append to the
   * CDN-Loop header.
   * RFC 8586 calls this the cdn-id. The cdn-id can either be a
   * pseudonym or hostname the CDN is in control of.
   * cdn_id must not be empty.
   * </pre>
   *
   * <code>string cdn_id = 1 [(.validate.rules) = { ... }</code>
   * @return The cdnId.
   */
  java.lang.String getCdnId();
  /**
   * <pre>
   * The CDN identifier to use for loop checks and to append to the
   * CDN-Loop header.
   * RFC 8586 calls this the cdn-id. The cdn-id can either be a
   * pseudonym or hostname the CDN is in control of.
   * cdn_id must not be empty.
   * </pre>
   *
   * <code>string cdn_id = 1 [(.validate.rules) = { ... }</code>
   * @return The bytes for cdnId.
   */
  com.google.protobuf.ByteString
      getCdnIdBytes();

  /**
   * <pre>
   * The maximum allowed count of cdn_id in the downstream CDN-Loop
   * request header.
   * The default of 0 means a request can transit the CdnLoopFilter
   * once. A value of 1 means that a request can transit the
   * CdnLoopFilter twice and so on.
   * </pre>
   *
   * <code>uint32 max_allowed_occurrences = 2;</code>
   * @return The maxAllowedOccurrences.
   */
  int getMaxAllowedOccurrences();
}
