// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: envoy/extensions/filters/http/ratelimit/v3/rate_limit.proto

package io.envoyproxy.envoy.extensions.filters.http.ratelimit.v3;

public interface RateLimitPerRouteOrBuilder extends
    // @@protoc_insertion_point(interface_extends:envoy.extensions.filters.http.ratelimit.v3.RateLimitPerRoute)
    com.google.protobuf.MessageOrBuilder {

  /**
   * <pre>
   * Specifies if the rate limit filter should include the virtual host rate limits.
   * </pre>
   *
   * <code>.envoy.extensions.filters.http.ratelimit.v3.RateLimitPerRoute.VhRateLimitsOptions vh_rate_limits = 1 [(.validate.rules) = { ... }</code>
   * @return The enum numeric value on the wire for vhRateLimits.
   */
  int getVhRateLimitsValue();
  /**
   * <pre>
   * Specifies if the rate limit filter should include the virtual host rate limits.
   * </pre>
   *
   * <code>.envoy.extensions.filters.http.ratelimit.v3.RateLimitPerRoute.VhRateLimitsOptions vh_rate_limits = 1 [(.validate.rules) = { ... }</code>
   * @return The vhRateLimits.
   */
  io.envoyproxy.envoy.extensions.filters.http.ratelimit.v3.RateLimitPerRoute.VhRateLimitsOptions getVhRateLimits();

  /**
   * <pre>
   * Specifies if the rate limit filter should include the lower levels (route level, virtual host level or cluster weight level) rate limits override options.
   * [#not-implemented-hide:]
   * </pre>
   *
   * <code>.envoy.extensions.filters.http.ratelimit.v3.RateLimitPerRoute.OverrideOptions override_option = 2 [(.validate.rules) = { ... }</code>
   * @return The enum numeric value on the wire for overrideOption.
   */
  int getOverrideOptionValue();
  /**
   * <pre>
   * Specifies if the rate limit filter should include the lower levels (route level, virtual host level or cluster weight level) rate limits override options.
   * [#not-implemented-hide:]
   * </pre>
   *
   * <code>.envoy.extensions.filters.http.ratelimit.v3.RateLimitPerRoute.OverrideOptions override_option = 2 [(.validate.rules) = { ... }</code>
   * @return The overrideOption.
   */
  io.envoyproxy.envoy.extensions.filters.http.ratelimit.v3.RateLimitPerRoute.OverrideOptions getOverrideOption();

  /**
   * <pre>
   * Rate limit configuration. If not set, uses the
   * :ref:`VirtualHost.rate_limits&lt;envoy_v3_api_field_config.route.v3.VirtualHost.rate_limits&gt;` or
   * :ref:`RouteAction.rate_limits&lt;envoy_v3_api_field_config.route.v3.RouteAction.rate_limits&gt;` fields instead.
   * [#not-implemented-hide:]
   * </pre>
   *
   * <code>repeated .envoy.extensions.filters.http.ratelimit.v3.RateLimitConfig rate_limits = 3;</code>
   */
  java.util.List<io.envoyproxy.envoy.extensions.filters.http.ratelimit.v3.RateLimitConfig> 
      getRateLimitsList();
  /**
   * <pre>
   * Rate limit configuration. If not set, uses the
   * :ref:`VirtualHost.rate_limits&lt;envoy_v3_api_field_config.route.v3.VirtualHost.rate_limits&gt;` or
   * :ref:`RouteAction.rate_limits&lt;envoy_v3_api_field_config.route.v3.RouteAction.rate_limits&gt;` fields instead.
   * [#not-implemented-hide:]
   * </pre>
   *
   * <code>repeated .envoy.extensions.filters.http.ratelimit.v3.RateLimitConfig rate_limits = 3;</code>
   */
  io.envoyproxy.envoy.extensions.filters.http.ratelimit.v3.RateLimitConfig getRateLimits(int index);
  /**
   * <pre>
   * Rate limit configuration. If not set, uses the
   * :ref:`VirtualHost.rate_limits&lt;envoy_v3_api_field_config.route.v3.VirtualHost.rate_limits&gt;` or
   * :ref:`RouteAction.rate_limits&lt;envoy_v3_api_field_config.route.v3.RouteAction.rate_limits&gt;` fields instead.
   * [#not-implemented-hide:]
   * </pre>
   *
   * <code>repeated .envoy.extensions.filters.http.ratelimit.v3.RateLimitConfig rate_limits = 3;</code>
   */
  int getRateLimitsCount();
  /**
   * <pre>
   * Rate limit configuration. If not set, uses the
   * :ref:`VirtualHost.rate_limits&lt;envoy_v3_api_field_config.route.v3.VirtualHost.rate_limits&gt;` or
   * :ref:`RouteAction.rate_limits&lt;envoy_v3_api_field_config.route.v3.RouteAction.rate_limits&gt;` fields instead.
   * [#not-implemented-hide:]
   * </pre>
   *
   * <code>repeated .envoy.extensions.filters.http.ratelimit.v3.RateLimitConfig rate_limits = 3;</code>
   */
  java.util.List<? extends io.envoyproxy.envoy.extensions.filters.http.ratelimit.v3.RateLimitConfigOrBuilder> 
      getRateLimitsOrBuilderList();
  /**
   * <pre>
   * Rate limit configuration. If not set, uses the
   * :ref:`VirtualHost.rate_limits&lt;envoy_v3_api_field_config.route.v3.VirtualHost.rate_limits&gt;` or
   * :ref:`RouteAction.rate_limits&lt;envoy_v3_api_field_config.route.v3.RouteAction.rate_limits&gt;` fields instead.
   * [#not-implemented-hide:]
   * </pre>
   *
   * <code>repeated .envoy.extensions.filters.http.ratelimit.v3.RateLimitConfig rate_limits = 3;</code>
   */
  io.envoyproxy.envoy.extensions.filters.http.ratelimit.v3.RateLimitConfigOrBuilder getRateLimitsOrBuilder(
      int index);
}
