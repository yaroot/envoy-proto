// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: envoy/extensions/filters/http/alternate_protocols_cache/v3/alternate_protocols_cache.proto

package io.envoyproxy.envoy.extensions.filters.http.alternate_protocols_cache.v3;

public final class AlternateProtocolsCacheProto {
  private AlternateProtocolsCacheProto() {}
  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistryLite registry) {
  }

  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistry registry) {
    registerAllExtensions(
        (com.google.protobuf.ExtensionRegistryLite) registry);
  }
  static final com.google.protobuf.Descriptors.Descriptor
    internal_static_envoy_extensions_filters_http_alternate_protocols_cache_v3_FilterConfig_descriptor;
  static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_envoy_extensions_filters_http_alternate_protocols_cache_v3_FilterConfig_fieldAccessorTable;

  public static com.google.protobuf.Descriptors.FileDescriptor
      getDescriptor() {
    return descriptor;
  }
  private static  com.google.protobuf.Descriptors.FileDescriptor
      descriptor;
  static {
    java.lang.String[] descriptorData = {
      "\nZenvoy/extensions/filters/http/alternat" +
      "e_protocols_cache/v3/alternate_protocols" +
      "_cache.proto\022:envoy.extensions.filters.h" +
      "ttp.alternate_protocols_cache.v3\032#envoy/" +
      "config/core/v3/protocol.proto\032\035udpa/anno" +
      "tations/status.proto\"o\n\014FilterConfig\022_\n!" +
      "alternate_protocols_cache_options\030\001 \001(\0132" +
      "4.envoy.config.core.v3.AlternateProtocol" +
      "sCacheOptionsB\361\001\nHio.envoyproxy.envoy.ex" +
      "tensions.filters.http.alternate_protocol" +
      "s_cache.v3B\034AlternateProtocolsCacheProto" +
      "P\001Z}github.com/envoyproxy/go-control-pla" +
      "ne/envoy/extensions/filters/http/alterna" +
      "te_protocols_cache/v3;alternate_protocol" +
      "s_cachev3\272\200\310\321\006\002\020\002b\006proto3"
    };
    descriptor = com.google.protobuf.Descriptors.FileDescriptor
      .internalBuildGeneratedFileFrom(descriptorData,
        new com.google.protobuf.Descriptors.FileDescriptor[] {
          io.envoyproxy.envoy.config.core.v3.ProtocolProto.getDescriptor(),
          udpa.annotations.Status.getDescriptor(),
        });
    internal_static_envoy_extensions_filters_http_alternate_protocols_cache_v3_FilterConfig_descriptor =
      getDescriptor().getMessageTypes().get(0);
    internal_static_envoy_extensions_filters_http_alternate_protocols_cache_v3_FilterConfig_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_envoy_extensions_filters_http_alternate_protocols_cache_v3_FilterConfig_descriptor,
        new java.lang.String[] { "AlternateProtocolsCacheOptions", });
    com.google.protobuf.ExtensionRegistry registry =
        com.google.protobuf.ExtensionRegistry.newInstance();
    registry.add(udpa.annotations.Status.fileStatus);
    com.google.protobuf.Descriptors.FileDescriptor
        .internalUpdateFileDescriptor(descriptor, registry);
    io.envoyproxy.envoy.config.core.v3.ProtocolProto.getDescriptor();
    udpa.annotations.Status.getDescriptor();
  }

  // @@protoc_insertion_point(outer_class_scope)
}
