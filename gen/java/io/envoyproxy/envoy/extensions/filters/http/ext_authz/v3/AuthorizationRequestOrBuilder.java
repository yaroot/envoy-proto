// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: envoy/extensions/filters/http/ext_authz/v3/ext_authz.proto

package io.envoyproxy.envoy.extensions.filters.http.ext_authz.v3;

public interface AuthorizationRequestOrBuilder extends
    // @@protoc_insertion_point(interface_extends:envoy.extensions.filters.http.ext_authz.v3.AuthorizationRequest)
    com.google.protobuf.MessageOrBuilder {

  /**
   * <pre>
   * Authorization request includes the client request headers that have a correspondent match
   * in the :ref:`list &lt;envoy_v3_api_msg_type.matcher.v3.ListStringMatcher&gt;`.
   * .. note::
   *   In addition to the the user's supplied matchers, ``Host``, ``Method``, ``Path``,
   *   ``Content-Length``, and ``Authorization`` are **automatically included** to the list.
   * .. note::
   *   By default, ``Content-Length`` header is set to ``0`` and the request to the authorization
   *   service has no message body. However, the authorization request *may* include the buffered
   *   client request body (controlled by :ref:`with_request_body
   *   &lt;envoy_v3_api_field_extensions.filters.http.ext_authz.v3.ExtAuthz.with_request_body&gt;`
   *   setting) hence the value of its ``Content-Length`` reflects the size of its payload size.
   *   This field has been deprecated in favor of :ref:`allowed_headers
   *   &lt;envoy_v3_api_field_extensions.filters.http.ext_authz.v3.ExtAuthz.allowed_headers&gt;`.
   * </pre>
   *
   * <code>.envoy.type.matcher.v3.ListStringMatcher allowed_headers = 1 [deprecated = true, (.envoy.annotations.deprecated_at_minor_version) = "3.0"];</code>
   * @deprecated envoy.extensions.filters.http.ext_authz.v3.AuthorizationRequest.allowed_headers is deprecated.
   *     See envoy/extensions/filters/http/ext_authz/v3/ext_authz.proto;l=272
   * @return Whether the allowedHeaders field is set.
   */
  @java.lang.Deprecated boolean hasAllowedHeaders();
  /**
   * <pre>
   * Authorization request includes the client request headers that have a correspondent match
   * in the :ref:`list &lt;envoy_v3_api_msg_type.matcher.v3.ListStringMatcher&gt;`.
   * .. note::
   *   In addition to the the user's supplied matchers, ``Host``, ``Method``, ``Path``,
   *   ``Content-Length``, and ``Authorization`` are **automatically included** to the list.
   * .. note::
   *   By default, ``Content-Length`` header is set to ``0`` and the request to the authorization
   *   service has no message body. However, the authorization request *may* include the buffered
   *   client request body (controlled by :ref:`with_request_body
   *   &lt;envoy_v3_api_field_extensions.filters.http.ext_authz.v3.ExtAuthz.with_request_body&gt;`
   *   setting) hence the value of its ``Content-Length`` reflects the size of its payload size.
   *   This field has been deprecated in favor of :ref:`allowed_headers
   *   &lt;envoy_v3_api_field_extensions.filters.http.ext_authz.v3.ExtAuthz.allowed_headers&gt;`.
   * </pre>
   *
   * <code>.envoy.type.matcher.v3.ListStringMatcher allowed_headers = 1 [deprecated = true, (.envoy.annotations.deprecated_at_minor_version) = "3.0"];</code>
   * @deprecated envoy.extensions.filters.http.ext_authz.v3.AuthorizationRequest.allowed_headers is deprecated.
   *     See envoy/extensions/filters/http/ext_authz/v3/ext_authz.proto;l=272
   * @return The allowedHeaders.
   */
  @java.lang.Deprecated io.envoyproxy.envoy.type.matcher.v3.ListStringMatcher getAllowedHeaders();
  /**
   * <pre>
   * Authorization request includes the client request headers that have a correspondent match
   * in the :ref:`list &lt;envoy_v3_api_msg_type.matcher.v3.ListStringMatcher&gt;`.
   * .. note::
   *   In addition to the the user's supplied matchers, ``Host``, ``Method``, ``Path``,
   *   ``Content-Length``, and ``Authorization`` are **automatically included** to the list.
   * .. note::
   *   By default, ``Content-Length`` header is set to ``0`` and the request to the authorization
   *   service has no message body. However, the authorization request *may* include the buffered
   *   client request body (controlled by :ref:`with_request_body
   *   &lt;envoy_v3_api_field_extensions.filters.http.ext_authz.v3.ExtAuthz.with_request_body&gt;`
   *   setting) hence the value of its ``Content-Length`` reflects the size of its payload size.
   *   This field has been deprecated in favor of :ref:`allowed_headers
   *   &lt;envoy_v3_api_field_extensions.filters.http.ext_authz.v3.ExtAuthz.allowed_headers&gt;`.
   * </pre>
   *
   * <code>.envoy.type.matcher.v3.ListStringMatcher allowed_headers = 1 [deprecated = true, (.envoy.annotations.deprecated_at_minor_version) = "3.0"];</code>
   */
  @java.lang.Deprecated io.envoyproxy.envoy.type.matcher.v3.ListStringMatcherOrBuilder getAllowedHeadersOrBuilder();

  /**
   * <pre>
   * Sets a list of headers that will be included to the request to authorization service. Note that
   * client request of the same key will be overridden.
   * </pre>
   *
   * <code>repeated .envoy.config.core.v3.HeaderValue headers_to_add = 2;</code>
   */
  java.util.List<io.envoyproxy.envoy.config.core.v3.HeaderValue> 
      getHeadersToAddList();
  /**
   * <pre>
   * Sets a list of headers that will be included to the request to authorization service. Note that
   * client request of the same key will be overridden.
   * </pre>
   *
   * <code>repeated .envoy.config.core.v3.HeaderValue headers_to_add = 2;</code>
   */
  io.envoyproxy.envoy.config.core.v3.HeaderValue getHeadersToAdd(int index);
  /**
   * <pre>
   * Sets a list of headers that will be included to the request to authorization service. Note that
   * client request of the same key will be overridden.
   * </pre>
   *
   * <code>repeated .envoy.config.core.v3.HeaderValue headers_to_add = 2;</code>
   */
  int getHeadersToAddCount();
  /**
   * <pre>
   * Sets a list of headers that will be included to the request to authorization service. Note that
   * client request of the same key will be overridden.
   * </pre>
   *
   * <code>repeated .envoy.config.core.v3.HeaderValue headers_to_add = 2;</code>
   */
  java.util.List<? extends io.envoyproxy.envoy.config.core.v3.HeaderValueOrBuilder> 
      getHeadersToAddOrBuilderList();
  /**
   * <pre>
   * Sets a list of headers that will be included to the request to authorization service. Note that
   * client request of the same key will be overridden.
   * </pre>
   *
   * <code>repeated .envoy.config.core.v3.HeaderValue headers_to_add = 2;</code>
   */
  io.envoyproxy.envoy.config.core.v3.HeaderValueOrBuilder getHeadersToAddOrBuilder(
      int index);
}
