// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: envoy/extensions/filters/http/rate_limit_quota/v3/rate_limit_quota.proto

package io.envoyproxy.envoy.extensions.filters.http.rate_limit_quota.v3;

public interface RateLimitQuotaBucketSettingsOrBuilder extends
    // @@protoc_insertion_point(interface_extends:envoy.extensions.filters.http.rate_limit_quota.v3.RateLimitQuotaBucketSettings)
    com.google.protobuf.MessageOrBuilder {

  /**
   * <pre>
   * ``BucketId`` builder.
   * :ref:`BucketId &lt;envoy_v3_api_msg_service.rate_limit_quota.v3.BucketId&gt;` is a map from
   * the string key to the string value which serves as bucket identifier common for on
   * the control plane and the data plane.
   * While ``BucketId`` is always static, ``BucketIdBuilder`` allows to populate map values
   * with the dynamic properties associated with the each individual request.
   * Example 1: static fields only
   * ``BucketIdBuilder``:
   * .. validated-code-block:: yaml
   *   :type-name: envoy.extensions.filters.http.rate_limit_quota.v3.RateLimitQuotaBucketSettings.BucketIdBuilder
   *   bucket_id_builder:
   *     name:
   *       string_value: my_bucket
   *     hello:
   *       string_value: world
   * Produces the following ``BucketId`` for all requests:
   * .. validated-code-block:: yaml
   *   :type-name: envoy.service.rate_limit_quota.v3.BucketId
   *   bucket:
   *     name: my_bucket
   *     hello: world
   * Example 2: static and dynamic fields
   * .. validated-code-block:: yaml
   *   :type-name: envoy.extensions.filters.http.rate_limit_quota.v3.RateLimitQuotaBucketSettings.BucketIdBuilder
   *   bucket_id_builder:
   *     name:
   *       string_value: my_bucket
   *     env:
   *       custom_value:
   *         typed_config:
   *           '&#64;type': type.googleapis.com/envoy.type.matcher.v3.HttpRequestHeaderMatchInput
   *           header_name: environment
   * In this example, the value of ``BucketId`` key ``env`` is substituted from the ``environment``
   * request header.
   * This is equivalent to the following ``pseudo-code``:
   * .. code-block:: yaml
   *    name: 'my_bucket'
   *    env: $header['environment']
   * For example, the request with the HTTP header ``env`` set to ``staging`` will produce
   * the following ``BucketId``:
   * .. validated-code-block:: yaml
   *   :type-name: envoy.service.rate_limit_quota.v3.BucketId
   *   bucket:
   *     name: my_bucket
   *     env: staging
   * For the request with the HTTP header ``environment`` set to ``prod``, will produce:
   * .. validated-code-block:: yaml
   *   :type-name: envoy.service.rate_limit_quota.v3.BucketId
   *   bucket:
   *     name: my_bucket
   *     env: prod
   * .. note::
   *   The order of ``BucketId`` keys do not matter. Buckets ``{ a: 'A', b: 'B' }`` and
   *   ``{ b: 'B', a: 'A' }`` are identical.
   * If not set, requests will NOT be reported to the server, and will always limited
   * according to :ref:`no_assignment_behavior
   * &lt;envoy_v3_api_field_extensions.filters.http.rate_limit_quota.v3.RateLimitQuotaBucketSettings.no_assignment_behavior&gt;`
   * configuration.
   * </pre>
   *
   * <code>.envoy.extensions.filters.http.rate_limit_quota.v3.RateLimitQuotaBucketSettings.BucketIdBuilder bucket_id_builder = 1;</code>
   * @return Whether the bucketIdBuilder field is set.
   */
  boolean hasBucketIdBuilder();
  /**
   * <pre>
   * ``BucketId`` builder.
   * :ref:`BucketId &lt;envoy_v3_api_msg_service.rate_limit_quota.v3.BucketId&gt;` is a map from
   * the string key to the string value which serves as bucket identifier common for on
   * the control plane and the data plane.
   * While ``BucketId`` is always static, ``BucketIdBuilder`` allows to populate map values
   * with the dynamic properties associated with the each individual request.
   * Example 1: static fields only
   * ``BucketIdBuilder``:
   * .. validated-code-block:: yaml
   *   :type-name: envoy.extensions.filters.http.rate_limit_quota.v3.RateLimitQuotaBucketSettings.BucketIdBuilder
   *   bucket_id_builder:
   *     name:
   *       string_value: my_bucket
   *     hello:
   *       string_value: world
   * Produces the following ``BucketId`` for all requests:
   * .. validated-code-block:: yaml
   *   :type-name: envoy.service.rate_limit_quota.v3.BucketId
   *   bucket:
   *     name: my_bucket
   *     hello: world
   * Example 2: static and dynamic fields
   * .. validated-code-block:: yaml
   *   :type-name: envoy.extensions.filters.http.rate_limit_quota.v3.RateLimitQuotaBucketSettings.BucketIdBuilder
   *   bucket_id_builder:
   *     name:
   *       string_value: my_bucket
   *     env:
   *       custom_value:
   *         typed_config:
   *           '&#64;type': type.googleapis.com/envoy.type.matcher.v3.HttpRequestHeaderMatchInput
   *           header_name: environment
   * In this example, the value of ``BucketId`` key ``env`` is substituted from the ``environment``
   * request header.
   * This is equivalent to the following ``pseudo-code``:
   * .. code-block:: yaml
   *    name: 'my_bucket'
   *    env: $header['environment']
   * For example, the request with the HTTP header ``env`` set to ``staging`` will produce
   * the following ``BucketId``:
   * .. validated-code-block:: yaml
   *   :type-name: envoy.service.rate_limit_quota.v3.BucketId
   *   bucket:
   *     name: my_bucket
   *     env: staging
   * For the request with the HTTP header ``environment`` set to ``prod``, will produce:
   * .. validated-code-block:: yaml
   *   :type-name: envoy.service.rate_limit_quota.v3.BucketId
   *   bucket:
   *     name: my_bucket
   *     env: prod
   * .. note::
   *   The order of ``BucketId`` keys do not matter. Buckets ``{ a: 'A', b: 'B' }`` and
   *   ``{ b: 'B', a: 'A' }`` are identical.
   * If not set, requests will NOT be reported to the server, and will always limited
   * according to :ref:`no_assignment_behavior
   * &lt;envoy_v3_api_field_extensions.filters.http.rate_limit_quota.v3.RateLimitQuotaBucketSettings.no_assignment_behavior&gt;`
   * configuration.
   * </pre>
   *
   * <code>.envoy.extensions.filters.http.rate_limit_quota.v3.RateLimitQuotaBucketSettings.BucketIdBuilder bucket_id_builder = 1;</code>
   * @return The bucketIdBuilder.
   */
  io.envoyproxy.envoy.extensions.filters.http.rate_limit_quota.v3.RateLimitQuotaBucketSettings.BucketIdBuilder getBucketIdBuilder();
  /**
   * <pre>
   * ``BucketId`` builder.
   * :ref:`BucketId &lt;envoy_v3_api_msg_service.rate_limit_quota.v3.BucketId&gt;` is a map from
   * the string key to the string value which serves as bucket identifier common for on
   * the control plane and the data plane.
   * While ``BucketId`` is always static, ``BucketIdBuilder`` allows to populate map values
   * with the dynamic properties associated with the each individual request.
   * Example 1: static fields only
   * ``BucketIdBuilder``:
   * .. validated-code-block:: yaml
   *   :type-name: envoy.extensions.filters.http.rate_limit_quota.v3.RateLimitQuotaBucketSettings.BucketIdBuilder
   *   bucket_id_builder:
   *     name:
   *       string_value: my_bucket
   *     hello:
   *       string_value: world
   * Produces the following ``BucketId`` for all requests:
   * .. validated-code-block:: yaml
   *   :type-name: envoy.service.rate_limit_quota.v3.BucketId
   *   bucket:
   *     name: my_bucket
   *     hello: world
   * Example 2: static and dynamic fields
   * .. validated-code-block:: yaml
   *   :type-name: envoy.extensions.filters.http.rate_limit_quota.v3.RateLimitQuotaBucketSettings.BucketIdBuilder
   *   bucket_id_builder:
   *     name:
   *       string_value: my_bucket
   *     env:
   *       custom_value:
   *         typed_config:
   *           '&#64;type': type.googleapis.com/envoy.type.matcher.v3.HttpRequestHeaderMatchInput
   *           header_name: environment
   * In this example, the value of ``BucketId`` key ``env`` is substituted from the ``environment``
   * request header.
   * This is equivalent to the following ``pseudo-code``:
   * .. code-block:: yaml
   *    name: 'my_bucket'
   *    env: $header['environment']
   * For example, the request with the HTTP header ``env`` set to ``staging`` will produce
   * the following ``BucketId``:
   * .. validated-code-block:: yaml
   *   :type-name: envoy.service.rate_limit_quota.v3.BucketId
   *   bucket:
   *     name: my_bucket
   *     env: staging
   * For the request with the HTTP header ``environment`` set to ``prod``, will produce:
   * .. validated-code-block:: yaml
   *   :type-name: envoy.service.rate_limit_quota.v3.BucketId
   *   bucket:
   *     name: my_bucket
   *     env: prod
   * .. note::
   *   The order of ``BucketId`` keys do not matter. Buckets ``{ a: 'A', b: 'B' }`` and
   *   ``{ b: 'B', a: 'A' }`` are identical.
   * If not set, requests will NOT be reported to the server, and will always limited
   * according to :ref:`no_assignment_behavior
   * &lt;envoy_v3_api_field_extensions.filters.http.rate_limit_quota.v3.RateLimitQuotaBucketSettings.no_assignment_behavior&gt;`
   * configuration.
   * </pre>
   *
   * <code>.envoy.extensions.filters.http.rate_limit_quota.v3.RateLimitQuotaBucketSettings.BucketIdBuilder bucket_id_builder = 1;</code>
   */
  io.envoyproxy.envoy.extensions.filters.http.rate_limit_quota.v3.RateLimitQuotaBucketSettings.BucketIdBuilderOrBuilder getBucketIdBuilderOrBuilder();

  /**
   * <pre>
   * The interval at which the data plane (RLQS client) is to report quota usage for this bucket.
   * When the first request is matched to a bucket with no assignment, the data plane is to report
   * the request immediately in the :ref:`RateLimitQuotaUsageReports
   * &lt;envoy_v3_api_msg_service.rate_limit_quota.v3.RateLimitQuotaUsageReports&gt;` message.
   * For the RLQS server, this signals that the data plane is now subscribed to
   * the quota assignments in this bucket, and will start sending the assignment as described in
   * the :ref:`RLQS documentation &lt;envoy_v3_api_file_envoy/service/rate_limit_quota/v3/rlqs.proto&gt;`.
   * After sending the initial report, the data plane is to continue reporting the bucket usage with
   * the internal specified in this field.
   * [#comment: 100000000 nanoseconds = 0.1 seconds]
   * </pre>
   *
   * <code>.google.protobuf.Duration reporting_interval = 2 [(.validate.rules) = { ... }</code>
   * @return Whether the reportingInterval field is set.
   */
  boolean hasReportingInterval();
  /**
   * <pre>
   * The interval at which the data plane (RLQS client) is to report quota usage for this bucket.
   * When the first request is matched to a bucket with no assignment, the data plane is to report
   * the request immediately in the :ref:`RateLimitQuotaUsageReports
   * &lt;envoy_v3_api_msg_service.rate_limit_quota.v3.RateLimitQuotaUsageReports&gt;` message.
   * For the RLQS server, this signals that the data plane is now subscribed to
   * the quota assignments in this bucket, and will start sending the assignment as described in
   * the :ref:`RLQS documentation &lt;envoy_v3_api_file_envoy/service/rate_limit_quota/v3/rlqs.proto&gt;`.
   * After sending the initial report, the data plane is to continue reporting the bucket usage with
   * the internal specified in this field.
   * [#comment: 100000000 nanoseconds = 0.1 seconds]
   * </pre>
   *
   * <code>.google.protobuf.Duration reporting_interval = 2 [(.validate.rules) = { ... }</code>
   * @return The reportingInterval.
   */
  com.google.protobuf.Duration getReportingInterval();
  /**
   * <pre>
   * The interval at which the data plane (RLQS client) is to report quota usage for this bucket.
   * When the first request is matched to a bucket with no assignment, the data plane is to report
   * the request immediately in the :ref:`RateLimitQuotaUsageReports
   * &lt;envoy_v3_api_msg_service.rate_limit_quota.v3.RateLimitQuotaUsageReports&gt;` message.
   * For the RLQS server, this signals that the data plane is now subscribed to
   * the quota assignments in this bucket, and will start sending the assignment as described in
   * the :ref:`RLQS documentation &lt;envoy_v3_api_file_envoy/service/rate_limit_quota/v3/rlqs.proto&gt;`.
   * After sending the initial report, the data plane is to continue reporting the bucket usage with
   * the internal specified in this field.
   * [#comment: 100000000 nanoseconds = 0.1 seconds]
   * </pre>
   *
   * <code>.google.protobuf.Duration reporting_interval = 2 [(.validate.rules) = { ... }</code>
   */
  com.google.protobuf.DurationOrBuilder getReportingIntervalOrBuilder();

  /**
   * <pre>
   * Customize the deny response to the requests over the rate limit.
   * If not set, the filter will be configured as if an empty message is set,
   * and will behave according to the defaults specified in :ref:`DenyResponseSettings
   * &lt;envoy_v3_api_msg_extensions.filters.http.rate_limit_quota.v3.RateLimitQuotaBucketSettings.DenyResponseSettings&gt;`.
   * </pre>
   *
   * <code>.envoy.extensions.filters.http.rate_limit_quota.v3.RateLimitQuotaBucketSettings.DenyResponseSettings deny_response_settings = 3;</code>
   * @return Whether the denyResponseSettings field is set.
   */
  boolean hasDenyResponseSettings();
  /**
   * <pre>
   * Customize the deny response to the requests over the rate limit.
   * If not set, the filter will be configured as if an empty message is set,
   * and will behave according to the defaults specified in :ref:`DenyResponseSettings
   * &lt;envoy_v3_api_msg_extensions.filters.http.rate_limit_quota.v3.RateLimitQuotaBucketSettings.DenyResponseSettings&gt;`.
   * </pre>
   *
   * <code>.envoy.extensions.filters.http.rate_limit_quota.v3.RateLimitQuotaBucketSettings.DenyResponseSettings deny_response_settings = 3;</code>
   * @return The denyResponseSettings.
   */
  io.envoyproxy.envoy.extensions.filters.http.rate_limit_quota.v3.RateLimitQuotaBucketSettings.DenyResponseSettings getDenyResponseSettings();
  /**
   * <pre>
   * Customize the deny response to the requests over the rate limit.
   * If not set, the filter will be configured as if an empty message is set,
   * and will behave according to the defaults specified in :ref:`DenyResponseSettings
   * &lt;envoy_v3_api_msg_extensions.filters.http.rate_limit_quota.v3.RateLimitQuotaBucketSettings.DenyResponseSettings&gt;`.
   * </pre>
   *
   * <code>.envoy.extensions.filters.http.rate_limit_quota.v3.RateLimitQuotaBucketSettings.DenyResponseSettings deny_response_settings = 3;</code>
   */
  io.envoyproxy.envoy.extensions.filters.http.rate_limit_quota.v3.RateLimitQuotaBucketSettings.DenyResponseSettingsOrBuilder getDenyResponseSettingsOrBuilder();

  /**
   * <pre>
   * Configures the behavior in the "no assignment" state: after the first request has been
   * matched to the bucket, and before the the RLQS server returns the first quota assignment.
   * If not set, the default behavior is to allow all requests.
   * </pre>
   *
   * <code>.envoy.extensions.filters.http.rate_limit_quota.v3.RateLimitQuotaBucketSettings.NoAssignmentBehavior no_assignment_behavior = 4;</code>
   * @return Whether the noAssignmentBehavior field is set.
   */
  boolean hasNoAssignmentBehavior();
  /**
   * <pre>
   * Configures the behavior in the "no assignment" state: after the first request has been
   * matched to the bucket, and before the the RLQS server returns the first quota assignment.
   * If not set, the default behavior is to allow all requests.
   * </pre>
   *
   * <code>.envoy.extensions.filters.http.rate_limit_quota.v3.RateLimitQuotaBucketSettings.NoAssignmentBehavior no_assignment_behavior = 4;</code>
   * @return The noAssignmentBehavior.
   */
  io.envoyproxy.envoy.extensions.filters.http.rate_limit_quota.v3.RateLimitQuotaBucketSettings.NoAssignmentBehavior getNoAssignmentBehavior();
  /**
   * <pre>
   * Configures the behavior in the "no assignment" state: after the first request has been
   * matched to the bucket, and before the the RLQS server returns the first quota assignment.
   * If not set, the default behavior is to allow all requests.
   * </pre>
   *
   * <code>.envoy.extensions.filters.http.rate_limit_quota.v3.RateLimitQuotaBucketSettings.NoAssignmentBehavior no_assignment_behavior = 4;</code>
   */
  io.envoyproxy.envoy.extensions.filters.http.rate_limit_quota.v3.RateLimitQuotaBucketSettings.NoAssignmentBehaviorOrBuilder getNoAssignmentBehaviorOrBuilder();

  /**
   * <pre>
   * Configures the behavior in the "expired assignment" state: the bucket's assignment has expired,
   * and cannot be refreshed.
   * If not set, the bucket is abandoned when its ``active`` assignment expires.
   * The process of abandoning the bucket, and restarting the subscription is described in the
   * :ref:`AbandonAction &lt;envoy_v3_api_msg_service.rate_limit_quota.v3.RateLimitQuotaResponse.BucketAction.AbandonAction&gt;`
   * message.
   * </pre>
   *
   * <code>.envoy.extensions.filters.http.rate_limit_quota.v3.RateLimitQuotaBucketSettings.ExpiredAssignmentBehavior expired_assignment_behavior = 5;</code>
   * @return Whether the expiredAssignmentBehavior field is set.
   */
  boolean hasExpiredAssignmentBehavior();
  /**
   * <pre>
   * Configures the behavior in the "expired assignment" state: the bucket's assignment has expired,
   * and cannot be refreshed.
   * If not set, the bucket is abandoned when its ``active`` assignment expires.
   * The process of abandoning the bucket, and restarting the subscription is described in the
   * :ref:`AbandonAction &lt;envoy_v3_api_msg_service.rate_limit_quota.v3.RateLimitQuotaResponse.BucketAction.AbandonAction&gt;`
   * message.
   * </pre>
   *
   * <code>.envoy.extensions.filters.http.rate_limit_quota.v3.RateLimitQuotaBucketSettings.ExpiredAssignmentBehavior expired_assignment_behavior = 5;</code>
   * @return The expiredAssignmentBehavior.
   */
  io.envoyproxy.envoy.extensions.filters.http.rate_limit_quota.v3.RateLimitQuotaBucketSettings.ExpiredAssignmentBehavior getExpiredAssignmentBehavior();
  /**
   * <pre>
   * Configures the behavior in the "expired assignment" state: the bucket's assignment has expired,
   * and cannot be refreshed.
   * If not set, the bucket is abandoned when its ``active`` assignment expires.
   * The process of abandoning the bucket, and restarting the subscription is described in the
   * :ref:`AbandonAction &lt;envoy_v3_api_msg_service.rate_limit_quota.v3.RateLimitQuotaResponse.BucketAction.AbandonAction&gt;`
   * message.
   * </pre>
   *
   * <code>.envoy.extensions.filters.http.rate_limit_quota.v3.RateLimitQuotaBucketSettings.ExpiredAssignmentBehavior expired_assignment_behavior = 5;</code>
   */
  io.envoyproxy.envoy.extensions.filters.http.rate_limit_quota.v3.RateLimitQuotaBucketSettings.ExpiredAssignmentBehaviorOrBuilder getExpiredAssignmentBehaviorOrBuilder();
}
