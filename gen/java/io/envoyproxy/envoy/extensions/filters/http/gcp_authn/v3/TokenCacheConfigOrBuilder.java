// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: envoy/extensions/filters/http/gcp_authn/v3/gcp_authn.proto

package io.envoyproxy.envoy.extensions.filters.http.gcp_authn.v3;

public interface TokenCacheConfigOrBuilder extends
    // @@protoc_insertion_point(interface_extends:envoy.extensions.filters.http.gcp_authn.v3.TokenCacheConfig)
    com.google.protobuf.MessageOrBuilder {

  /**
   * <pre>
   * The number of cache entries. The maximum number of entries is INT64_MAX as it is constrained by underlying cache implementation.
   * Default value 0 (i.e., proto3 defaults) disables the cache by default. Other default values will enable the cache.
   * </pre>
   *
   * <code>.google.protobuf.UInt64Value cache_size = 1 [(.validate.rules) = { ... }</code>
   * @return Whether the cacheSize field is set.
   */
  boolean hasCacheSize();
  /**
   * <pre>
   * The number of cache entries. The maximum number of entries is INT64_MAX as it is constrained by underlying cache implementation.
   * Default value 0 (i.e., proto3 defaults) disables the cache by default. Other default values will enable the cache.
   * </pre>
   *
   * <code>.google.protobuf.UInt64Value cache_size = 1 [(.validate.rules) = { ... }</code>
   * @return The cacheSize.
   */
  com.google.protobuf.UInt64Value getCacheSize();
  /**
   * <pre>
   * The number of cache entries. The maximum number of entries is INT64_MAX as it is constrained by underlying cache implementation.
   * Default value 0 (i.e., proto3 defaults) disables the cache by default. Other default values will enable the cache.
   * </pre>
   *
   * <code>.google.protobuf.UInt64Value cache_size = 1 [(.validate.rules) = { ... }</code>
   */
  com.google.protobuf.UInt64ValueOrBuilder getCacheSizeOrBuilder();
}
