// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: envoy/extensions/filters/http/gcp_authn/v3/gcp_authn.proto

package io.envoyproxy.envoy.extensions.filters.http.gcp_authn.v3;

/**
 * <pre>
 * Filter configuration.
 * </pre>
 *
 * Protobuf type {@code envoy.extensions.filters.http.gcp_authn.v3.GcpAuthnFilterConfig}
 */
public final class GcpAuthnFilterConfig extends
    com.google.protobuf.GeneratedMessageV3 implements
    // @@protoc_insertion_point(message_implements:envoy.extensions.filters.http.gcp_authn.v3.GcpAuthnFilterConfig)
    GcpAuthnFilterConfigOrBuilder {
private static final long serialVersionUID = 0L;
  // Use GcpAuthnFilterConfig.newBuilder() to construct.
  private GcpAuthnFilterConfig(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
    super(builder);
  }
  private GcpAuthnFilterConfig() {
  }

  @java.lang.Override
  @SuppressWarnings({"unused"})
  protected java.lang.Object newInstance(
      UnusedPrivateParameter unused) {
    return new GcpAuthnFilterConfig();
  }

  @java.lang.Override
  public final com.google.protobuf.UnknownFieldSet
  getUnknownFields() {
    return this.unknownFields;
  }
  private GcpAuthnFilterConfig(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    this();
    if (extensionRegistry == null) {
      throw new java.lang.NullPointerException();
    }
    com.google.protobuf.UnknownFieldSet.Builder unknownFields =
        com.google.protobuf.UnknownFieldSet.newBuilder();
    try {
      boolean done = false;
      while (!done) {
        int tag = input.readTag();
        switch (tag) {
          case 0:
            done = true;
            break;
          case 10: {
            io.envoyproxy.envoy.config.core.v3.HttpUri.Builder subBuilder = null;
            if (httpUri_ != null) {
              subBuilder = httpUri_.toBuilder();
            }
            httpUri_ = input.readMessage(io.envoyproxy.envoy.config.core.v3.HttpUri.parser(), extensionRegistry);
            if (subBuilder != null) {
              subBuilder.mergeFrom(httpUri_);
              httpUri_ = subBuilder.buildPartial();
            }

            break;
          }
          case 18: {
            io.envoyproxy.envoy.config.core.v3.RetryPolicy.Builder subBuilder = null;
            if (retryPolicy_ != null) {
              subBuilder = retryPolicy_.toBuilder();
            }
            retryPolicy_ = input.readMessage(io.envoyproxy.envoy.config.core.v3.RetryPolicy.parser(), extensionRegistry);
            if (subBuilder != null) {
              subBuilder.mergeFrom(retryPolicy_);
              retryPolicy_ = subBuilder.buildPartial();
            }

            break;
          }
          case 26: {
            io.envoyproxy.envoy.extensions.filters.http.gcp_authn.v3.TokenCacheConfig.Builder subBuilder = null;
            if (cacheConfig_ != null) {
              subBuilder = cacheConfig_.toBuilder();
            }
            cacheConfig_ = input.readMessage(io.envoyproxy.envoy.extensions.filters.http.gcp_authn.v3.TokenCacheConfig.parser(), extensionRegistry);
            if (subBuilder != null) {
              subBuilder.mergeFrom(cacheConfig_);
              cacheConfig_ = subBuilder.buildPartial();
            }

            break;
          }
          default: {
            if (!parseUnknownField(
                input, unknownFields, extensionRegistry, tag)) {
              done = true;
            }
            break;
          }
        }
      }
    } catch (com.google.protobuf.InvalidProtocolBufferException e) {
      throw e.setUnfinishedMessage(this);
    } catch (com.google.protobuf.UninitializedMessageException e) {
      throw e.asInvalidProtocolBufferException().setUnfinishedMessage(this);
    } catch (java.io.IOException e) {
      throw new com.google.protobuf.InvalidProtocolBufferException(
          e).setUnfinishedMessage(this);
    } finally {
      this.unknownFields = unknownFields.build();
      makeExtensionsImmutable();
    }
  }
  public static final com.google.protobuf.Descriptors.Descriptor
      getDescriptor() {
    return io.envoyproxy.envoy.extensions.filters.http.gcp_authn.v3.GcpAuthnProto.internal_static_envoy_extensions_filters_http_gcp_authn_v3_GcpAuthnFilterConfig_descriptor;
  }

  @java.lang.Override
  protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internalGetFieldAccessorTable() {
    return io.envoyproxy.envoy.extensions.filters.http.gcp_authn.v3.GcpAuthnProto.internal_static_envoy_extensions_filters_http_gcp_authn_v3_GcpAuthnFilterConfig_fieldAccessorTable
        .ensureFieldAccessorsInitialized(
            io.envoyproxy.envoy.extensions.filters.http.gcp_authn.v3.GcpAuthnFilterConfig.class, io.envoyproxy.envoy.extensions.filters.http.gcp_authn.v3.GcpAuthnFilterConfig.Builder.class);
  }

  public static final int HTTP_URI_FIELD_NUMBER = 1;
  private io.envoyproxy.envoy.config.core.v3.HttpUri httpUri_;
  /**
   * <pre>
   * The HTTP URI to fetch tokens from GCE Metadata Server(https://cloud.google.com/compute/docs/metadata/overview).
   * The URL format is "http://metadata.google.internal/computeMetadata/v1/instance/service-accounts/default/identity?audience=[AUDIENCE]"
   * </pre>
   *
   * <code>.envoy.config.core.v3.HttpUri http_uri = 1 [(.validate.rules) = { ... }</code>
   * @return Whether the httpUri field is set.
   */
  @java.lang.Override
  public boolean hasHttpUri() {
    return httpUri_ != null;
  }
  /**
   * <pre>
   * The HTTP URI to fetch tokens from GCE Metadata Server(https://cloud.google.com/compute/docs/metadata/overview).
   * The URL format is "http://metadata.google.internal/computeMetadata/v1/instance/service-accounts/default/identity?audience=[AUDIENCE]"
   * </pre>
   *
   * <code>.envoy.config.core.v3.HttpUri http_uri = 1 [(.validate.rules) = { ... }</code>
   * @return The httpUri.
   */
  @java.lang.Override
  public io.envoyproxy.envoy.config.core.v3.HttpUri getHttpUri() {
    return httpUri_ == null ? io.envoyproxy.envoy.config.core.v3.HttpUri.getDefaultInstance() : httpUri_;
  }
  /**
   * <pre>
   * The HTTP URI to fetch tokens from GCE Metadata Server(https://cloud.google.com/compute/docs/metadata/overview).
   * The URL format is "http://metadata.google.internal/computeMetadata/v1/instance/service-accounts/default/identity?audience=[AUDIENCE]"
   * </pre>
   *
   * <code>.envoy.config.core.v3.HttpUri http_uri = 1 [(.validate.rules) = { ... }</code>
   */
  @java.lang.Override
  public io.envoyproxy.envoy.config.core.v3.HttpUriOrBuilder getHttpUriOrBuilder() {
    return getHttpUri();
  }

  public static final int RETRY_POLICY_FIELD_NUMBER = 2;
  private io.envoyproxy.envoy.config.core.v3.RetryPolicy retryPolicy_;
  /**
   * <pre>
   * Retry policy for fetching tokens.
   * This field is optional. If it is not configured, the filter will be fail-closed (i.e., reject the requests).
   * </pre>
   *
   * <code>.envoy.config.core.v3.RetryPolicy retry_policy = 2;</code>
   * @return Whether the retryPolicy field is set.
   */
  @java.lang.Override
  public boolean hasRetryPolicy() {
    return retryPolicy_ != null;
  }
  /**
   * <pre>
   * Retry policy for fetching tokens.
   * This field is optional. If it is not configured, the filter will be fail-closed (i.e., reject the requests).
   * </pre>
   *
   * <code>.envoy.config.core.v3.RetryPolicy retry_policy = 2;</code>
   * @return The retryPolicy.
   */
  @java.lang.Override
  public io.envoyproxy.envoy.config.core.v3.RetryPolicy getRetryPolicy() {
    return retryPolicy_ == null ? io.envoyproxy.envoy.config.core.v3.RetryPolicy.getDefaultInstance() : retryPolicy_;
  }
  /**
   * <pre>
   * Retry policy for fetching tokens.
   * This field is optional. If it is not configured, the filter will be fail-closed (i.e., reject the requests).
   * </pre>
   *
   * <code>.envoy.config.core.v3.RetryPolicy retry_policy = 2;</code>
   */
  @java.lang.Override
  public io.envoyproxy.envoy.config.core.v3.RetryPolicyOrBuilder getRetryPolicyOrBuilder() {
    return getRetryPolicy();
  }

  public static final int CACHE_CONFIG_FIELD_NUMBER = 3;
  private io.envoyproxy.envoy.extensions.filters.http.gcp_authn.v3.TokenCacheConfig cacheConfig_;
  /**
   * <pre>
   * Token cache configuration. This field is optional.
   * </pre>
   *
   * <code>.envoy.extensions.filters.http.gcp_authn.v3.TokenCacheConfig cache_config = 3;</code>
   * @return Whether the cacheConfig field is set.
   */
  @java.lang.Override
  public boolean hasCacheConfig() {
    return cacheConfig_ != null;
  }
  /**
   * <pre>
   * Token cache configuration. This field is optional.
   * </pre>
   *
   * <code>.envoy.extensions.filters.http.gcp_authn.v3.TokenCacheConfig cache_config = 3;</code>
   * @return The cacheConfig.
   */
  @java.lang.Override
  public io.envoyproxy.envoy.extensions.filters.http.gcp_authn.v3.TokenCacheConfig getCacheConfig() {
    return cacheConfig_ == null ? io.envoyproxy.envoy.extensions.filters.http.gcp_authn.v3.TokenCacheConfig.getDefaultInstance() : cacheConfig_;
  }
  /**
   * <pre>
   * Token cache configuration. This field is optional.
   * </pre>
   *
   * <code>.envoy.extensions.filters.http.gcp_authn.v3.TokenCacheConfig cache_config = 3;</code>
   */
  @java.lang.Override
  public io.envoyproxy.envoy.extensions.filters.http.gcp_authn.v3.TokenCacheConfigOrBuilder getCacheConfigOrBuilder() {
    return getCacheConfig();
  }

  private byte memoizedIsInitialized = -1;
  @java.lang.Override
  public final boolean isInitialized() {
    byte isInitialized = memoizedIsInitialized;
    if (isInitialized == 1) return true;
    if (isInitialized == 0) return false;

    memoizedIsInitialized = 1;
    return true;
  }

  @java.lang.Override
  public void writeTo(com.google.protobuf.CodedOutputStream output)
                      throws java.io.IOException {
    if (httpUri_ != null) {
      output.writeMessage(1, getHttpUri());
    }
    if (retryPolicy_ != null) {
      output.writeMessage(2, getRetryPolicy());
    }
    if (cacheConfig_ != null) {
      output.writeMessage(3, getCacheConfig());
    }
    unknownFields.writeTo(output);
  }

  @java.lang.Override
  public int getSerializedSize() {
    int size = memoizedSize;
    if (size != -1) return size;

    size = 0;
    if (httpUri_ != null) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(1, getHttpUri());
    }
    if (retryPolicy_ != null) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(2, getRetryPolicy());
    }
    if (cacheConfig_ != null) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(3, getCacheConfig());
    }
    size += unknownFields.getSerializedSize();
    memoizedSize = size;
    return size;
  }

  @java.lang.Override
  public boolean equals(final java.lang.Object obj) {
    if (obj == this) {
     return true;
    }
    if (!(obj instanceof io.envoyproxy.envoy.extensions.filters.http.gcp_authn.v3.GcpAuthnFilterConfig)) {
      return super.equals(obj);
    }
    io.envoyproxy.envoy.extensions.filters.http.gcp_authn.v3.GcpAuthnFilterConfig other = (io.envoyproxy.envoy.extensions.filters.http.gcp_authn.v3.GcpAuthnFilterConfig) obj;

    if (hasHttpUri() != other.hasHttpUri()) return false;
    if (hasHttpUri()) {
      if (!getHttpUri()
          .equals(other.getHttpUri())) return false;
    }
    if (hasRetryPolicy() != other.hasRetryPolicy()) return false;
    if (hasRetryPolicy()) {
      if (!getRetryPolicy()
          .equals(other.getRetryPolicy())) return false;
    }
    if (hasCacheConfig() != other.hasCacheConfig()) return false;
    if (hasCacheConfig()) {
      if (!getCacheConfig()
          .equals(other.getCacheConfig())) return false;
    }
    if (!unknownFields.equals(other.unknownFields)) return false;
    return true;
  }

  @java.lang.Override
  public int hashCode() {
    if (memoizedHashCode != 0) {
      return memoizedHashCode;
    }
    int hash = 41;
    hash = (19 * hash) + getDescriptor().hashCode();
    if (hasHttpUri()) {
      hash = (37 * hash) + HTTP_URI_FIELD_NUMBER;
      hash = (53 * hash) + getHttpUri().hashCode();
    }
    if (hasRetryPolicy()) {
      hash = (37 * hash) + RETRY_POLICY_FIELD_NUMBER;
      hash = (53 * hash) + getRetryPolicy().hashCode();
    }
    if (hasCacheConfig()) {
      hash = (37 * hash) + CACHE_CONFIG_FIELD_NUMBER;
      hash = (53 * hash) + getCacheConfig().hashCode();
    }
    hash = (29 * hash) + unknownFields.hashCode();
    memoizedHashCode = hash;
    return hash;
  }

  public static io.envoyproxy.envoy.extensions.filters.http.gcp_authn.v3.GcpAuthnFilterConfig parseFrom(
      java.nio.ByteBuffer data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static io.envoyproxy.envoy.extensions.filters.http.gcp_authn.v3.GcpAuthnFilterConfig parseFrom(
      java.nio.ByteBuffer data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static io.envoyproxy.envoy.extensions.filters.http.gcp_authn.v3.GcpAuthnFilterConfig parseFrom(
      com.google.protobuf.ByteString data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static io.envoyproxy.envoy.extensions.filters.http.gcp_authn.v3.GcpAuthnFilterConfig parseFrom(
      com.google.protobuf.ByteString data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static io.envoyproxy.envoy.extensions.filters.http.gcp_authn.v3.GcpAuthnFilterConfig parseFrom(byte[] data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static io.envoyproxy.envoy.extensions.filters.http.gcp_authn.v3.GcpAuthnFilterConfig parseFrom(
      byte[] data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static io.envoyproxy.envoy.extensions.filters.http.gcp_authn.v3.GcpAuthnFilterConfig parseFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input);
  }
  public static io.envoyproxy.envoy.extensions.filters.http.gcp_authn.v3.GcpAuthnFilterConfig parseFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input, extensionRegistry);
  }
  public static io.envoyproxy.envoy.extensions.filters.http.gcp_authn.v3.GcpAuthnFilterConfig parseDelimitedFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseDelimitedWithIOException(PARSER, input);
  }
  public static io.envoyproxy.envoy.extensions.filters.http.gcp_authn.v3.GcpAuthnFilterConfig parseDelimitedFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
  }
  public static io.envoyproxy.envoy.extensions.filters.http.gcp_authn.v3.GcpAuthnFilterConfig parseFrom(
      com.google.protobuf.CodedInputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input);
  }
  public static io.envoyproxy.envoy.extensions.filters.http.gcp_authn.v3.GcpAuthnFilterConfig parseFrom(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input, extensionRegistry);
  }

  @java.lang.Override
  public Builder newBuilderForType() { return newBuilder(); }
  public static Builder newBuilder() {
    return DEFAULT_INSTANCE.toBuilder();
  }
  public static Builder newBuilder(io.envoyproxy.envoy.extensions.filters.http.gcp_authn.v3.GcpAuthnFilterConfig prototype) {
    return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
  }
  @java.lang.Override
  public Builder toBuilder() {
    return this == DEFAULT_INSTANCE
        ? new Builder() : new Builder().mergeFrom(this);
  }

  @java.lang.Override
  protected Builder newBuilderForType(
      com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
    Builder builder = new Builder(parent);
    return builder;
  }
  /**
   * <pre>
   * Filter configuration.
   * </pre>
   *
   * Protobuf type {@code envoy.extensions.filters.http.gcp_authn.v3.GcpAuthnFilterConfig}
   */
  public static final class Builder extends
      com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
      // @@protoc_insertion_point(builder_implements:envoy.extensions.filters.http.gcp_authn.v3.GcpAuthnFilterConfig)
      io.envoyproxy.envoy.extensions.filters.http.gcp_authn.v3.GcpAuthnFilterConfigOrBuilder {
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return io.envoyproxy.envoy.extensions.filters.http.gcp_authn.v3.GcpAuthnProto.internal_static_envoy_extensions_filters_http_gcp_authn_v3_GcpAuthnFilterConfig_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return io.envoyproxy.envoy.extensions.filters.http.gcp_authn.v3.GcpAuthnProto.internal_static_envoy_extensions_filters_http_gcp_authn_v3_GcpAuthnFilterConfig_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              io.envoyproxy.envoy.extensions.filters.http.gcp_authn.v3.GcpAuthnFilterConfig.class, io.envoyproxy.envoy.extensions.filters.http.gcp_authn.v3.GcpAuthnFilterConfig.Builder.class);
    }

    // Construct using io.envoyproxy.envoy.extensions.filters.http.gcp_authn.v3.GcpAuthnFilterConfig.newBuilder()
    private Builder() {
      maybeForceBuilderInitialization();
    }

    private Builder(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      super(parent);
      maybeForceBuilderInitialization();
    }
    private void maybeForceBuilderInitialization() {
      if (com.google.protobuf.GeneratedMessageV3
              .alwaysUseFieldBuilders) {
      }
    }
    @java.lang.Override
    public Builder clear() {
      super.clear();
      if (httpUriBuilder_ == null) {
        httpUri_ = null;
      } else {
        httpUri_ = null;
        httpUriBuilder_ = null;
      }
      if (retryPolicyBuilder_ == null) {
        retryPolicy_ = null;
      } else {
        retryPolicy_ = null;
        retryPolicyBuilder_ = null;
      }
      if (cacheConfigBuilder_ == null) {
        cacheConfig_ = null;
      } else {
        cacheConfig_ = null;
        cacheConfigBuilder_ = null;
      }
      return this;
    }

    @java.lang.Override
    public com.google.protobuf.Descriptors.Descriptor
        getDescriptorForType() {
      return io.envoyproxy.envoy.extensions.filters.http.gcp_authn.v3.GcpAuthnProto.internal_static_envoy_extensions_filters_http_gcp_authn_v3_GcpAuthnFilterConfig_descriptor;
    }

    @java.lang.Override
    public io.envoyproxy.envoy.extensions.filters.http.gcp_authn.v3.GcpAuthnFilterConfig getDefaultInstanceForType() {
      return io.envoyproxy.envoy.extensions.filters.http.gcp_authn.v3.GcpAuthnFilterConfig.getDefaultInstance();
    }

    @java.lang.Override
    public io.envoyproxy.envoy.extensions.filters.http.gcp_authn.v3.GcpAuthnFilterConfig build() {
      io.envoyproxy.envoy.extensions.filters.http.gcp_authn.v3.GcpAuthnFilterConfig result = buildPartial();
      if (!result.isInitialized()) {
        throw newUninitializedMessageException(result);
      }
      return result;
    }

    @java.lang.Override
    public io.envoyproxy.envoy.extensions.filters.http.gcp_authn.v3.GcpAuthnFilterConfig buildPartial() {
      io.envoyproxy.envoy.extensions.filters.http.gcp_authn.v3.GcpAuthnFilterConfig result = new io.envoyproxy.envoy.extensions.filters.http.gcp_authn.v3.GcpAuthnFilterConfig(this);
      if (httpUriBuilder_ == null) {
        result.httpUri_ = httpUri_;
      } else {
        result.httpUri_ = httpUriBuilder_.build();
      }
      if (retryPolicyBuilder_ == null) {
        result.retryPolicy_ = retryPolicy_;
      } else {
        result.retryPolicy_ = retryPolicyBuilder_.build();
      }
      if (cacheConfigBuilder_ == null) {
        result.cacheConfig_ = cacheConfig_;
      } else {
        result.cacheConfig_ = cacheConfigBuilder_.build();
      }
      onBuilt();
      return result;
    }

    @java.lang.Override
    public Builder clone() {
      return super.clone();
    }
    @java.lang.Override
    public Builder setField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        java.lang.Object value) {
      return super.setField(field, value);
    }
    @java.lang.Override
    public Builder clearField(
        com.google.protobuf.Descriptors.FieldDescriptor field) {
      return super.clearField(field);
    }
    @java.lang.Override
    public Builder clearOneof(
        com.google.protobuf.Descriptors.OneofDescriptor oneof) {
      return super.clearOneof(oneof);
    }
    @java.lang.Override
    public Builder setRepeatedField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        int index, java.lang.Object value) {
      return super.setRepeatedField(field, index, value);
    }
    @java.lang.Override
    public Builder addRepeatedField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        java.lang.Object value) {
      return super.addRepeatedField(field, value);
    }
    @java.lang.Override
    public Builder mergeFrom(com.google.protobuf.Message other) {
      if (other instanceof io.envoyproxy.envoy.extensions.filters.http.gcp_authn.v3.GcpAuthnFilterConfig) {
        return mergeFrom((io.envoyproxy.envoy.extensions.filters.http.gcp_authn.v3.GcpAuthnFilterConfig)other);
      } else {
        super.mergeFrom(other);
        return this;
      }
    }

    public Builder mergeFrom(io.envoyproxy.envoy.extensions.filters.http.gcp_authn.v3.GcpAuthnFilterConfig other) {
      if (other == io.envoyproxy.envoy.extensions.filters.http.gcp_authn.v3.GcpAuthnFilterConfig.getDefaultInstance()) return this;
      if (other.hasHttpUri()) {
        mergeHttpUri(other.getHttpUri());
      }
      if (other.hasRetryPolicy()) {
        mergeRetryPolicy(other.getRetryPolicy());
      }
      if (other.hasCacheConfig()) {
        mergeCacheConfig(other.getCacheConfig());
      }
      this.mergeUnknownFields(other.unknownFields);
      onChanged();
      return this;
    }

    @java.lang.Override
    public final boolean isInitialized() {
      return true;
    }

    @java.lang.Override
    public Builder mergeFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      io.envoyproxy.envoy.extensions.filters.http.gcp_authn.v3.GcpAuthnFilterConfig parsedMessage = null;
      try {
        parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        parsedMessage = (io.envoyproxy.envoy.extensions.filters.http.gcp_authn.v3.GcpAuthnFilterConfig) e.getUnfinishedMessage();
        throw e.unwrapIOException();
      } finally {
        if (parsedMessage != null) {
          mergeFrom(parsedMessage);
        }
      }
      return this;
    }

    private io.envoyproxy.envoy.config.core.v3.HttpUri httpUri_;
    private com.google.protobuf.SingleFieldBuilderV3<
        io.envoyproxy.envoy.config.core.v3.HttpUri, io.envoyproxy.envoy.config.core.v3.HttpUri.Builder, io.envoyproxy.envoy.config.core.v3.HttpUriOrBuilder> httpUriBuilder_;
    /**
     * <pre>
     * The HTTP URI to fetch tokens from GCE Metadata Server(https://cloud.google.com/compute/docs/metadata/overview).
     * The URL format is "http://metadata.google.internal/computeMetadata/v1/instance/service-accounts/default/identity?audience=[AUDIENCE]"
     * </pre>
     *
     * <code>.envoy.config.core.v3.HttpUri http_uri = 1 [(.validate.rules) = { ... }</code>
     * @return Whether the httpUri field is set.
     */
    public boolean hasHttpUri() {
      return httpUriBuilder_ != null || httpUri_ != null;
    }
    /**
     * <pre>
     * The HTTP URI to fetch tokens from GCE Metadata Server(https://cloud.google.com/compute/docs/metadata/overview).
     * The URL format is "http://metadata.google.internal/computeMetadata/v1/instance/service-accounts/default/identity?audience=[AUDIENCE]"
     * </pre>
     *
     * <code>.envoy.config.core.v3.HttpUri http_uri = 1 [(.validate.rules) = { ... }</code>
     * @return The httpUri.
     */
    public io.envoyproxy.envoy.config.core.v3.HttpUri getHttpUri() {
      if (httpUriBuilder_ == null) {
        return httpUri_ == null ? io.envoyproxy.envoy.config.core.v3.HttpUri.getDefaultInstance() : httpUri_;
      } else {
        return httpUriBuilder_.getMessage();
      }
    }
    /**
     * <pre>
     * The HTTP URI to fetch tokens from GCE Metadata Server(https://cloud.google.com/compute/docs/metadata/overview).
     * The URL format is "http://metadata.google.internal/computeMetadata/v1/instance/service-accounts/default/identity?audience=[AUDIENCE]"
     * </pre>
     *
     * <code>.envoy.config.core.v3.HttpUri http_uri = 1 [(.validate.rules) = { ... }</code>
     */
    public Builder setHttpUri(io.envoyproxy.envoy.config.core.v3.HttpUri value) {
      if (httpUriBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        httpUri_ = value;
        onChanged();
      } else {
        httpUriBuilder_.setMessage(value);
      }

      return this;
    }
    /**
     * <pre>
     * The HTTP URI to fetch tokens from GCE Metadata Server(https://cloud.google.com/compute/docs/metadata/overview).
     * The URL format is "http://metadata.google.internal/computeMetadata/v1/instance/service-accounts/default/identity?audience=[AUDIENCE]"
     * </pre>
     *
     * <code>.envoy.config.core.v3.HttpUri http_uri = 1 [(.validate.rules) = { ... }</code>
     */
    public Builder setHttpUri(
        io.envoyproxy.envoy.config.core.v3.HttpUri.Builder builderForValue) {
      if (httpUriBuilder_ == null) {
        httpUri_ = builderForValue.build();
        onChanged();
      } else {
        httpUriBuilder_.setMessage(builderForValue.build());
      }

      return this;
    }
    /**
     * <pre>
     * The HTTP URI to fetch tokens from GCE Metadata Server(https://cloud.google.com/compute/docs/metadata/overview).
     * The URL format is "http://metadata.google.internal/computeMetadata/v1/instance/service-accounts/default/identity?audience=[AUDIENCE]"
     * </pre>
     *
     * <code>.envoy.config.core.v3.HttpUri http_uri = 1 [(.validate.rules) = { ... }</code>
     */
    public Builder mergeHttpUri(io.envoyproxy.envoy.config.core.v3.HttpUri value) {
      if (httpUriBuilder_ == null) {
        if (httpUri_ != null) {
          httpUri_ =
            io.envoyproxy.envoy.config.core.v3.HttpUri.newBuilder(httpUri_).mergeFrom(value).buildPartial();
        } else {
          httpUri_ = value;
        }
        onChanged();
      } else {
        httpUriBuilder_.mergeFrom(value);
      }

      return this;
    }
    /**
     * <pre>
     * The HTTP URI to fetch tokens from GCE Metadata Server(https://cloud.google.com/compute/docs/metadata/overview).
     * The URL format is "http://metadata.google.internal/computeMetadata/v1/instance/service-accounts/default/identity?audience=[AUDIENCE]"
     * </pre>
     *
     * <code>.envoy.config.core.v3.HttpUri http_uri = 1 [(.validate.rules) = { ... }</code>
     */
    public Builder clearHttpUri() {
      if (httpUriBuilder_ == null) {
        httpUri_ = null;
        onChanged();
      } else {
        httpUri_ = null;
        httpUriBuilder_ = null;
      }

      return this;
    }
    /**
     * <pre>
     * The HTTP URI to fetch tokens from GCE Metadata Server(https://cloud.google.com/compute/docs/metadata/overview).
     * The URL format is "http://metadata.google.internal/computeMetadata/v1/instance/service-accounts/default/identity?audience=[AUDIENCE]"
     * </pre>
     *
     * <code>.envoy.config.core.v3.HttpUri http_uri = 1 [(.validate.rules) = { ... }</code>
     */
    public io.envoyproxy.envoy.config.core.v3.HttpUri.Builder getHttpUriBuilder() {
      
      onChanged();
      return getHttpUriFieldBuilder().getBuilder();
    }
    /**
     * <pre>
     * The HTTP URI to fetch tokens from GCE Metadata Server(https://cloud.google.com/compute/docs/metadata/overview).
     * The URL format is "http://metadata.google.internal/computeMetadata/v1/instance/service-accounts/default/identity?audience=[AUDIENCE]"
     * </pre>
     *
     * <code>.envoy.config.core.v3.HttpUri http_uri = 1 [(.validate.rules) = { ... }</code>
     */
    public io.envoyproxy.envoy.config.core.v3.HttpUriOrBuilder getHttpUriOrBuilder() {
      if (httpUriBuilder_ != null) {
        return httpUriBuilder_.getMessageOrBuilder();
      } else {
        return httpUri_ == null ?
            io.envoyproxy.envoy.config.core.v3.HttpUri.getDefaultInstance() : httpUri_;
      }
    }
    /**
     * <pre>
     * The HTTP URI to fetch tokens from GCE Metadata Server(https://cloud.google.com/compute/docs/metadata/overview).
     * The URL format is "http://metadata.google.internal/computeMetadata/v1/instance/service-accounts/default/identity?audience=[AUDIENCE]"
     * </pre>
     *
     * <code>.envoy.config.core.v3.HttpUri http_uri = 1 [(.validate.rules) = { ... }</code>
     */
    private com.google.protobuf.SingleFieldBuilderV3<
        io.envoyproxy.envoy.config.core.v3.HttpUri, io.envoyproxy.envoy.config.core.v3.HttpUri.Builder, io.envoyproxy.envoy.config.core.v3.HttpUriOrBuilder> 
        getHttpUriFieldBuilder() {
      if (httpUriBuilder_ == null) {
        httpUriBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
            io.envoyproxy.envoy.config.core.v3.HttpUri, io.envoyproxy.envoy.config.core.v3.HttpUri.Builder, io.envoyproxy.envoy.config.core.v3.HttpUriOrBuilder>(
                getHttpUri(),
                getParentForChildren(),
                isClean());
        httpUri_ = null;
      }
      return httpUriBuilder_;
    }

    private io.envoyproxy.envoy.config.core.v3.RetryPolicy retryPolicy_;
    private com.google.protobuf.SingleFieldBuilderV3<
        io.envoyproxy.envoy.config.core.v3.RetryPolicy, io.envoyproxy.envoy.config.core.v3.RetryPolicy.Builder, io.envoyproxy.envoy.config.core.v3.RetryPolicyOrBuilder> retryPolicyBuilder_;
    /**
     * <pre>
     * Retry policy for fetching tokens.
     * This field is optional. If it is not configured, the filter will be fail-closed (i.e., reject the requests).
     * </pre>
     *
     * <code>.envoy.config.core.v3.RetryPolicy retry_policy = 2;</code>
     * @return Whether the retryPolicy field is set.
     */
    public boolean hasRetryPolicy() {
      return retryPolicyBuilder_ != null || retryPolicy_ != null;
    }
    /**
     * <pre>
     * Retry policy for fetching tokens.
     * This field is optional. If it is not configured, the filter will be fail-closed (i.e., reject the requests).
     * </pre>
     *
     * <code>.envoy.config.core.v3.RetryPolicy retry_policy = 2;</code>
     * @return The retryPolicy.
     */
    public io.envoyproxy.envoy.config.core.v3.RetryPolicy getRetryPolicy() {
      if (retryPolicyBuilder_ == null) {
        return retryPolicy_ == null ? io.envoyproxy.envoy.config.core.v3.RetryPolicy.getDefaultInstance() : retryPolicy_;
      } else {
        return retryPolicyBuilder_.getMessage();
      }
    }
    /**
     * <pre>
     * Retry policy for fetching tokens.
     * This field is optional. If it is not configured, the filter will be fail-closed (i.e., reject the requests).
     * </pre>
     *
     * <code>.envoy.config.core.v3.RetryPolicy retry_policy = 2;</code>
     */
    public Builder setRetryPolicy(io.envoyproxy.envoy.config.core.v3.RetryPolicy value) {
      if (retryPolicyBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        retryPolicy_ = value;
        onChanged();
      } else {
        retryPolicyBuilder_.setMessage(value);
      }

      return this;
    }
    /**
     * <pre>
     * Retry policy for fetching tokens.
     * This field is optional. If it is not configured, the filter will be fail-closed (i.e., reject the requests).
     * </pre>
     *
     * <code>.envoy.config.core.v3.RetryPolicy retry_policy = 2;</code>
     */
    public Builder setRetryPolicy(
        io.envoyproxy.envoy.config.core.v3.RetryPolicy.Builder builderForValue) {
      if (retryPolicyBuilder_ == null) {
        retryPolicy_ = builderForValue.build();
        onChanged();
      } else {
        retryPolicyBuilder_.setMessage(builderForValue.build());
      }

      return this;
    }
    /**
     * <pre>
     * Retry policy for fetching tokens.
     * This field is optional. If it is not configured, the filter will be fail-closed (i.e., reject the requests).
     * </pre>
     *
     * <code>.envoy.config.core.v3.RetryPolicy retry_policy = 2;</code>
     */
    public Builder mergeRetryPolicy(io.envoyproxy.envoy.config.core.v3.RetryPolicy value) {
      if (retryPolicyBuilder_ == null) {
        if (retryPolicy_ != null) {
          retryPolicy_ =
            io.envoyproxy.envoy.config.core.v3.RetryPolicy.newBuilder(retryPolicy_).mergeFrom(value).buildPartial();
        } else {
          retryPolicy_ = value;
        }
        onChanged();
      } else {
        retryPolicyBuilder_.mergeFrom(value);
      }

      return this;
    }
    /**
     * <pre>
     * Retry policy for fetching tokens.
     * This field is optional. If it is not configured, the filter will be fail-closed (i.e., reject the requests).
     * </pre>
     *
     * <code>.envoy.config.core.v3.RetryPolicy retry_policy = 2;</code>
     */
    public Builder clearRetryPolicy() {
      if (retryPolicyBuilder_ == null) {
        retryPolicy_ = null;
        onChanged();
      } else {
        retryPolicy_ = null;
        retryPolicyBuilder_ = null;
      }

      return this;
    }
    /**
     * <pre>
     * Retry policy for fetching tokens.
     * This field is optional. If it is not configured, the filter will be fail-closed (i.e., reject the requests).
     * </pre>
     *
     * <code>.envoy.config.core.v3.RetryPolicy retry_policy = 2;</code>
     */
    public io.envoyproxy.envoy.config.core.v3.RetryPolicy.Builder getRetryPolicyBuilder() {
      
      onChanged();
      return getRetryPolicyFieldBuilder().getBuilder();
    }
    /**
     * <pre>
     * Retry policy for fetching tokens.
     * This field is optional. If it is not configured, the filter will be fail-closed (i.e., reject the requests).
     * </pre>
     *
     * <code>.envoy.config.core.v3.RetryPolicy retry_policy = 2;</code>
     */
    public io.envoyproxy.envoy.config.core.v3.RetryPolicyOrBuilder getRetryPolicyOrBuilder() {
      if (retryPolicyBuilder_ != null) {
        return retryPolicyBuilder_.getMessageOrBuilder();
      } else {
        return retryPolicy_ == null ?
            io.envoyproxy.envoy.config.core.v3.RetryPolicy.getDefaultInstance() : retryPolicy_;
      }
    }
    /**
     * <pre>
     * Retry policy for fetching tokens.
     * This field is optional. If it is not configured, the filter will be fail-closed (i.e., reject the requests).
     * </pre>
     *
     * <code>.envoy.config.core.v3.RetryPolicy retry_policy = 2;</code>
     */
    private com.google.protobuf.SingleFieldBuilderV3<
        io.envoyproxy.envoy.config.core.v3.RetryPolicy, io.envoyproxy.envoy.config.core.v3.RetryPolicy.Builder, io.envoyproxy.envoy.config.core.v3.RetryPolicyOrBuilder> 
        getRetryPolicyFieldBuilder() {
      if (retryPolicyBuilder_ == null) {
        retryPolicyBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
            io.envoyproxy.envoy.config.core.v3.RetryPolicy, io.envoyproxy.envoy.config.core.v3.RetryPolicy.Builder, io.envoyproxy.envoy.config.core.v3.RetryPolicyOrBuilder>(
                getRetryPolicy(),
                getParentForChildren(),
                isClean());
        retryPolicy_ = null;
      }
      return retryPolicyBuilder_;
    }

    private io.envoyproxy.envoy.extensions.filters.http.gcp_authn.v3.TokenCacheConfig cacheConfig_;
    private com.google.protobuf.SingleFieldBuilderV3<
        io.envoyproxy.envoy.extensions.filters.http.gcp_authn.v3.TokenCacheConfig, io.envoyproxy.envoy.extensions.filters.http.gcp_authn.v3.TokenCacheConfig.Builder, io.envoyproxy.envoy.extensions.filters.http.gcp_authn.v3.TokenCacheConfigOrBuilder> cacheConfigBuilder_;
    /**
     * <pre>
     * Token cache configuration. This field is optional.
     * </pre>
     *
     * <code>.envoy.extensions.filters.http.gcp_authn.v3.TokenCacheConfig cache_config = 3;</code>
     * @return Whether the cacheConfig field is set.
     */
    public boolean hasCacheConfig() {
      return cacheConfigBuilder_ != null || cacheConfig_ != null;
    }
    /**
     * <pre>
     * Token cache configuration. This field is optional.
     * </pre>
     *
     * <code>.envoy.extensions.filters.http.gcp_authn.v3.TokenCacheConfig cache_config = 3;</code>
     * @return The cacheConfig.
     */
    public io.envoyproxy.envoy.extensions.filters.http.gcp_authn.v3.TokenCacheConfig getCacheConfig() {
      if (cacheConfigBuilder_ == null) {
        return cacheConfig_ == null ? io.envoyproxy.envoy.extensions.filters.http.gcp_authn.v3.TokenCacheConfig.getDefaultInstance() : cacheConfig_;
      } else {
        return cacheConfigBuilder_.getMessage();
      }
    }
    /**
     * <pre>
     * Token cache configuration. This field is optional.
     * </pre>
     *
     * <code>.envoy.extensions.filters.http.gcp_authn.v3.TokenCacheConfig cache_config = 3;</code>
     */
    public Builder setCacheConfig(io.envoyproxy.envoy.extensions.filters.http.gcp_authn.v3.TokenCacheConfig value) {
      if (cacheConfigBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        cacheConfig_ = value;
        onChanged();
      } else {
        cacheConfigBuilder_.setMessage(value);
      }

      return this;
    }
    /**
     * <pre>
     * Token cache configuration. This field is optional.
     * </pre>
     *
     * <code>.envoy.extensions.filters.http.gcp_authn.v3.TokenCacheConfig cache_config = 3;</code>
     */
    public Builder setCacheConfig(
        io.envoyproxy.envoy.extensions.filters.http.gcp_authn.v3.TokenCacheConfig.Builder builderForValue) {
      if (cacheConfigBuilder_ == null) {
        cacheConfig_ = builderForValue.build();
        onChanged();
      } else {
        cacheConfigBuilder_.setMessage(builderForValue.build());
      }

      return this;
    }
    /**
     * <pre>
     * Token cache configuration. This field is optional.
     * </pre>
     *
     * <code>.envoy.extensions.filters.http.gcp_authn.v3.TokenCacheConfig cache_config = 3;</code>
     */
    public Builder mergeCacheConfig(io.envoyproxy.envoy.extensions.filters.http.gcp_authn.v3.TokenCacheConfig value) {
      if (cacheConfigBuilder_ == null) {
        if (cacheConfig_ != null) {
          cacheConfig_ =
            io.envoyproxy.envoy.extensions.filters.http.gcp_authn.v3.TokenCacheConfig.newBuilder(cacheConfig_).mergeFrom(value).buildPartial();
        } else {
          cacheConfig_ = value;
        }
        onChanged();
      } else {
        cacheConfigBuilder_.mergeFrom(value);
      }

      return this;
    }
    /**
     * <pre>
     * Token cache configuration. This field is optional.
     * </pre>
     *
     * <code>.envoy.extensions.filters.http.gcp_authn.v3.TokenCacheConfig cache_config = 3;</code>
     */
    public Builder clearCacheConfig() {
      if (cacheConfigBuilder_ == null) {
        cacheConfig_ = null;
        onChanged();
      } else {
        cacheConfig_ = null;
        cacheConfigBuilder_ = null;
      }

      return this;
    }
    /**
     * <pre>
     * Token cache configuration. This field is optional.
     * </pre>
     *
     * <code>.envoy.extensions.filters.http.gcp_authn.v3.TokenCacheConfig cache_config = 3;</code>
     */
    public io.envoyproxy.envoy.extensions.filters.http.gcp_authn.v3.TokenCacheConfig.Builder getCacheConfigBuilder() {
      
      onChanged();
      return getCacheConfigFieldBuilder().getBuilder();
    }
    /**
     * <pre>
     * Token cache configuration. This field is optional.
     * </pre>
     *
     * <code>.envoy.extensions.filters.http.gcp_authn.v3.TokenCacheConfig cache_config = 3;</code>
     */
    public io.envoyproxy.envoy.extensions.filters.http.gcp_authn.v3.TokenCacheConfigOrBuilder getCacheConfigOrBuilder() {
      if (cacheConfigBuilder_ != null) {
        return cacheConfigBuilder_.getMessageOrBuilder();
      } else {
        return cacheConfig_ == null ?
            io.envoyproxy.envoy.extensions.filters.http.gcp_authn.v3.TokenCacheConfig.getDefaultInstance() : cacheConfig_;
      }
    }
    /**
     * <pre>
     * Token cache configuration. This field is optional.
     * </pre>
     *
     * <code>.envoy.extensions.filters.http.gcp_authn.v3.TokenCacheConfig cache_config = 3;</code>
     */
    private com.google.protobuf.SingleFieldBuilderV3<
        io.envoyproxy.envoy.extensions.filters.http.gcp_authn.v3.TokenCacheConfig, io.envoyproxy.envoy.extensions.filters.http.gcp_authn.v3.TokenCacheConfig.Builder, io.envoyproxy.envoy.extensions.filters.http.gcp_authn.v3.TokenCacheConfigOrBuilder> 
        getCacheConfigFieldBuilder() {
      if (cacheConfigBuilder_ == null) {
        cacheConfigBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
            io.envoyproxy.envoy.extensions.filters.http.gcp_authn.v3.TokenCacheConfig, io.envoyproxy.envoy.extensions.filters.http.gcp_authn.v3.TokenCacheConfig.Builder, io.envoyproxy.envoy.extensions.filters.http.gcp_authn.v3.TokenCacheConfigOrBuilder>(
                getCacheConfig(),
                getParentForChildren(),
                isClean());
        cacheConfig_ = null;
      }
      return cacheConfigBuilder_;
    }
    @java.lang.Override
    public final Builder setUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return super.setUnknownFields(unknownFields);
    }

    @java.lang.Override
    public final Builder mergeUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return super.mergeUnknownFields(unknownFields);
    }


    // @@protoc_insertion_point(builder_scope:envoy.extensions.filters.http.gcp_authn.v3.GcpAuthnFilterConfig)
  }

  // @@protoc_insertion_point(class_scope:envoy.extensions.filters.http.gcp_authn.v3.GcpAuthnFilterConfig)
  private static final io.envoyproxy.envoy.extensions.filters.http.gcp_authn.v3.GcpAuthnFilterConfig DEFAULT_INSTANCE;
  static {
    DEFAULT_INSTANCE = new io.envoyproxy.envoy.extensions.filters.http.gcp_authn.v3.GcpAuthnFilterConfig();
  }

  public static io.envoyproxy.envoy.extensions.filters.http.gcp_authn.v3.GcpAuthnFilterConfig getDefaultInstance() {
    return DEFAULT_INSTANCE;
  }

  private static final com.google.protobuf.Parser<GcpAuthnFilterConfig>
      PARSER = new com.google.protobuf.AbstractParser<GcpAuthnFilterConfig>() {
    @java.lang.Override
    public GcpAuthnFilterConfig parsePartialFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return new GcpAuthnFilterConfig(input, extensionRegistry);
    }
  };

  public static com.google.protobuf.Parser<GcpAuthnFilterConfig> parser() {
    return PARSER;
  }

  @java.lang.Override
  public com.google.protobuf.Parser<GcpAuthnFilterConfig> getParserForType() {
    return PARSER;
  }

  @java.lang.Override
  public io.envoyproxy.envoy.extensions.filters.http.gcp_authn.v3.GcpAuthnFilterConfig getDefaultInstanceForType() {
    return DEFAULT_INSTANCE;
  }

}

