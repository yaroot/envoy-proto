// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: envoy/extensions/filters/http/ext_proc/v3/ext_proc.proto

package io.envoyproxy.envoy.extensions.filters.http.ext_proc.v3;

/**
 * <pre>
 * [#next-free-field: 10]
 * </pre>
 *
 * Protobuf type {@code envoy.extensions.filters.http.ext_proc.v3.ExternalProcessor}
 */
public final class ExternalProcessor extends
    com.google.protobuf.GeneratedMessageV3 implements
    // @@protoc_insertion_point(message_implements:envoy.extensions.filters.http.ext_proc.v3.ExternalProcessor)
    ExternalProcessorOrBuilder {
private static final long serialVersionUID = 0L;
  // Use ExternalProcessor.newBuilder() to construct.
  private ExternalProcessor(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
    super(builder);
  }
  private ExternalProcessor() {
    requestAttributes_ = com.google.protobuf.LazyStringArrayList.EMPTY;
    responseAttributes_ = com.google.protobuf.LazyStringArrayList.EMPTY;
    statPrefix_ = "";
  }

  @java.lang.Override
  @SuppressWarnings({"unused"})
  protected java.lang.Object newInstance(
      UnusedPrivateParameter unused) {
    return new ExternalProcessor();
  }

  @java.lang.Override
  public final com.google.protobuf.UnknownFieldSet
  getUnknownFields() {
    return this.unknownFields;
  }
  public static final com.google.protobuf.Descriptors.Descriptor
      getDescriptor() {
    return io.envoyproxy.envoy.extensions.filters.http.ext_proc.v3.ExtProcProto.internal_static_envoy_extensions_filters_http_ext_proc_v3_ExternalProcessor_descriptor;
  }

  @java.lang.Override
  protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internalGetFieldAccessorTable() {
    return io.envoyproxy.envoy.extensions.filters.http.ext_proc.v3.ExtProcProto.internal_static_envoy_extensions_filters_http_ext_proc_v3_ExternalProcessor_fieldAccessorTable
        .ensureFieldAccessorsInitialized(
            io.envoyproxy.envoy.extensions.filters.http.ext_proc.v3.ExternalProcessor.class, io.envoyproxy.envoy.extensions.filters.http.ext_proc.v3.ExternalProcessor.Builder.class);
  }

  public static final int GRPC_SERVICE_FIELD_NUMBER = 1;
  private io.envoyproxy.envoy.config.core.v3.GrpcService grpcService_;
  /**
   * <pre>
   * Configuration for the gRPC service that the filter will communicate with.
   * The filter supports both the "Envoy" and "Google" gRPC clients.
   * </pre>
   *
   * <code>.envoy.config.core.v3.GrpcService grpc_service = 1;</code>
   * @return Whether the grpcService field is set.
   */
  @java.lang.Override
  public boolean hasGrpcService() {
    return grpcService_ != null;
  }
  /**
   * <pre>
   * Configuration for the gRPC service that the filter will communicate with.
   * The filter supports both the "Envoy" and "Google" gRPC clients.
   * </pre>
   *
   * <code>.envoy.config.core.v3.GrpcService grpc_service = 1;</code>
   * @return The grpcService.
   */
  @java.lang.Override
  public io.envoyproxy.envoy.config.core.v3.GrpcService getGrpcService() {
    return grpcService_ == null ? io.envoyproxy.envoy.config.core.v3.GrpcService.getDefaultInstance() : grpcService_;
  }
  /**
   * <pre>
   * Configuration for the gRPC service that the filter will communicate with.
   * The filter supports both the "Envoy" and "Google" gRPC clients.
   * </pre>
   *
   * <code>.envoy.config.core.v3.GrpcService grpc_service = 1;</code>
   */
  @java.lang.Override
  public io.envoyproxy.envoy.config.core.v3.GrpcServiceOrBuilder getGrpcServiceOrBuilder() {
    return grpcService_ == null ? io.envoyproxy.envoy.config.core.v3.GrpcService.getDefaultInstance() : grpcService_;
  }

  public static final int FAILURE_MODE_ALLOW_FIELD_NUMBER = 2;
  private boolean failureModeAllow_ = false;
  /**
   * <pre>
   * By default, if the gRPC stream cannot be established, or if it is closed
   * prematurely with an error, the filter will fail. Specifically, if the
   * response headers have not yet been delivered, then it will return a 500
   * error downstream. If they have been delivered, then instead the HTTP stream to the
   * downstream client will be reset.
   * With this parameter set to true, however, then if the gRPC stream is prematurely closed
   * or could not be opened, processing continues without error.
   * </pre>
   *
   * <code>bool failure_mode_allow = 2;</code>
   * @return The failureModeAllow.
   */
  @java.lang.Override
  public boolean getFailureModeAllow() {
    return failureModeAllow_;
  }

  public static final int PROCESSING_MODE_FIELD_NUMBER = 3;
  private io.envoyproxy.envoy.extensions.filters.http.ext_proc.v3.ProcessingMode processingMode_;
  /**
   * <pre>
   * Specifies default options for how HTTP headers, trailers, and bodies are
   * sent. See ProcessingMode for details.
   * </pre>
   *
   * <code>.envoy.extensions.filters.http.ext_proc.v3.ProcessingMode processing_mode = 3;</code>
   * @return Whether the processingMode field is set.
   */
  @java.lang.Override
  public boolean hasProcessingMode() {
    return processingMode_ != null;
  }
  /**
   * <pre>
   * Specifies default options for how HTTP headers, trailers, and bodies are
   * sent. See ProcessingMode for details.
   * </pre>
   *
   * <code>.envoy.extensions.filters.http.ext_proc.v3.ProcessingMode processing_mode = 3;</code>
   * @return The processingMode.
   */
  @java.lang.Override
  public io.envoyproxy.envoy.extensions.filters.http.ext_proc.v3.ProcessingMode getProcessingMode() {
    return processingMode_ == null ? io.envoyproxy.envoy.extensions.filters.http.ext_proc.v3.ProcessingMode.getDefaultInstance() : processingMode_;
  }
  /**
   * <pre>
   * Specifies default options for how HTTP headers, trailers, and bodies are
   * sent. See ProcessingMode for details.
   * </pre>
   *
   * <code>.envoy.extensions.filters.http.ext_proc.v3.ProcessingMode processing_mode = 3;</code>
   */
  @java.lang.Override
  public io.envoyproxy.envoy.extensions.filters.http.ext_proc.v3.ProcessingModeOrBuilder getProcessingModeOrBuilder() {
    return processingMode_ == null ? io.envoyproxy.envoy.extensions.filters.http.ext_proc.v3.ProcessingMode.getDefaultInstance() : processingMode_;
  }

  public static final int ASYNC_MODE_FIELD_NUMBER = 4;
  private boolean asyncMode_ = false;
  /**
   * <pre>
   * [#not-implemented-hide:]
   * If true, send each part of the HTTP request or response specified by ProcessingMode
   * asynchronously -- in other words, send the message on the gRPC stream and then continue
   * filter processing. If false, which is the default, suspend filter execution after
   * each message is sent to the remote service and wait up to "message_timeout"
   * for a reply.
   * </pre>
   *
   * <code>bool async_mode = 4;</code>
   * @return The asyncMode.
   */
  @java.lang.Override
  public boolean getAsyncMode() {
    return asyncMode_;
  }

  public static final int REQUEST_ATTRIBUTES_FIELD_NUMBER = 5;
  @SuppressWarnings("serial")
  private com.google.protobuf.LazyStringList requestAttributes_;
  /**
   * <pre>
   * [#not-implemented-hide:]
   * Envoy provides a number of :ref:`attributes &lt;arch_overview_attributes&gt;`
   * for expressive policies. Each attribute name provided in this field will be
   * matched against that list and populated in the request_headers message.
   * See the :ref:`attribute documentation &lt;arch_overview_request_attributes&gt;`
   * for the list of supported attributes and their types.
   * </pre>
   *
   * <code>repeated string request_attributes = 5;</code>
   * @return A list containing the requestAttributes.
   */
  public com.google.protobuf.ProtocolStringList
      getRequestAttributesList() {
    return requestAttributes_;
  }
  /**
   * <pre>
   * [#not-implemented-hide:]
   * Envoy provides a number of :ref:`attributes &lt;arch_overview_attributes&gt;`
   * for expressive policies. Each attribute name provided in this field will be
   * matched against that list and populated in the request_headers message.
   * See the :ref:`attribute documentation &lt;arch_overview_request_attributes&gt;`
   * for the list of supported attributes and their types.
   * </pre>
   *
   * <code>repeated string request_attributes = 5;</code>
   * @return The count of requestAttributes.
   */
  public int getRequestAttributesCount() {
    return requestAttributes_.size();
  }
  /**
   * <pre>
   * [#not-implemented-hide:]
   * Envoy provides a number of :ref:`attributes &lt;arch_overview_attributes&gt;`
   * for expressive policies. Each attribute name provided in this field will be
   * matched against that list and populated in the request_headers message.
   * See the :ref:`attribute documentation &lt;arch_overview_request_attributes&gt;`
   * for the list of supported attributes and their types.
   * </pre>
   *
   * <code>repeated string request_attributes = 5;</code>
   * @param index The index of the element to return.
   * @return The requestAttributes at the given index.
   */
  public java.lang.String getRequestAttributes(int index) {
    return requestAttributes_.get(index);
  }
  /**
   * <pre>
   * [#not-implemented-hide:]
   * Envoy provides a number of :ref:`attributes &lt;arch_overview_attributes&gt;`
   * for expressive policies. Each attribute name provided in this field will be
   * matched against that list and populated in the request_headers message.
   * See the :ref:`attribute documentation &lt;arch_overview_request_attributes&gt;`
   * for the list of supported attributes and their types.
   * </pre>
   *
   * <code>repeated string request_attributes = 5;</code>
   * @param index The index of the value to return.
   * @return The bytes of the requestAttributes at the given index.
   */
  public com.google.protobuf.ByteString
      getRequestAttributesBytes(int index) {
    return requestAttributes_.getByteString(index);
  }

  public static final int RESPONSE_ATTRIBUTES_FIELD_NUMBER = 6;
  @SuppressWarnings("serial")
  private com.google.protobuf.LazyStringList responseAttributes_;
  /**
   * <pre>
   * [#not-implemented-hide:]
   * Envoy provides a number of :ref:`attributes &lt;arch_overview_attributes&gt;`
   * for expressive policies. Each attribute name provided in this field will be
   * matched against that list and populated in the response_headers message.
   * See the :ref:`attribute documentation &lt;arch_overview_attributes&gt;`
   * for the list of supported attributes and their types.
   * </pre>
   *
   * <code>repeated string response_attributes = 6;</code>
   * @return A list containing the responseAttributes.
   */
  public com.google.protobuf.ProtocolStringList
      getResponseAttributesList() {
    return responseAttributes_;
  }
  /**
   * <pre>
   * [#not-implemented-hide:]
   * Envoy provides a number of :ref:`attributes &lt;arch_overview_attributes&gt;`
   * for expressive policies. Each attribute name provided in this field will be
   * matched against that list and populated in the response_headers message.
   * See the :ref:`attribute documentation &lt;arch_overview_attributes&gt;`
   * for the list of supported attributes and their types.
   * </pre>
   *
   * <code>repeated string response_attributes = 6;</code>
   * @return The count of responseAttributes.
   */
  public int getResponseAttributesCount() {
    return responseAttributes_.size();
  }
  /**
   * <pre>
   * [#not-implemented-hide:]
   * Envoy provides a number of :ref:`attributes &lt;arch_overview_attributes&gt;`
   * for expressive policies. Each attribute name provided in this field will be
   * matched against that list and populated in the response_headers message.
   * See the :ref:`attribute documentation &lt;arch_overview_attributes&gt;`
   * for the list of supported attributes and their types.
   * </pre>
   *
   * <code>repeated string response_attributes = 6;</code>
   * @param index The index of the element to return.
   * @return The responseAttributes at the given index.
   */
  public java.lang.String getResponseAttributes(int index) {
    return responseAttributes_.get(index);
  }
  /**
   * <pre>
   * [#not-implemented-hide:]
   * Envoy provides a number of :ref:`attributes &lt;arch_overview_attributes&gt;`
   * for expressive policies. Each attribute name provided in this field will be
   * matched against that list and populated in the response_headers message.
   * See the :ref:`attribute documentation &lt;arch_overview_attributes&gt;`
   * for the list of supported attributes and their types.
   * </pre>
   *
   * <code>repeated string response_attributes = 6;</code>
   * @param index The index of the value to return.
   * @return The bytes of the responseAttributes at the given index.
   */
  public com.google.protobuf.ByteString
      getResponseAttributesBytes(int index) {
    return responseAttributes_.getByteString(index);
  }

  public static final int MESSAGE_TIMEOUT_FIELD_NUMBER = 7;
  private com.google.protobuf.Duration messageTimeout_;
  /**
   * <pre>
   * Specifies the timeout for each individual message sent on the stream and
   * when the filter is running in synchronous mode. Whenever
   * the proxy sends a message on the stream that requires a response, it will
   * reset this timer, and will stop processing and return an error (subject
   * to the processing mode) if the timer expires before a matching response
   * is received. There is no timeout when the filter is running in asynchronous
   * mode. Default is 200 milliseconds.
   * </pre>
   *
   * <code>.google.protobuf.Duration message_timeout = 7;</code>
   * @return Whether the messageTimeout field is set.
   */
  @java.lang.Override
  public boolean hasMessageTimeout() {
    return messageTimeout_ != null;
  }
  /**
   * <pre>
   * Specifies the timeout for each individual message sent on the stream and
   * when the filter is running in synchronous mode. Whenever
   * the proxy sends a message on the stream that requires a response, it will
   * reset this timer, and will stop processing and return an error (subject
   * to the processing mode) if the timer expires before a matching response
   * is received. There is no timeout when the filter is running in asynchronous
   * mode. Default is 200 milliseconds.
   * </pre>
   *
   * <code>.google.protobuf.Duration message_timeout = 7;</code>
   * @return The messageTimeout.
   */
  @java.lang.Override
  public com.google.protobuf.Duration getMessageTimeout() {
    return messageTimeout_ == null ? com.google.protobuf.Duration.getDefaultInstance() : messageTimeout_;
  }
  /**
   * <pre>
   * Specifies the timeout for each individual message sent on the stream and
   * when the filter is running in synchronous mode. Whenever
   * the proxy sends a message on the stream that requires a response, it will
   * reset this timer, and will stop processing and return an error (subject
   * to the processing mode) if the timer expires before a matching response
   * is received. There is no timeout when the filter is running in asynchronous
   * mode. Default is 200 milliseconds.
   * </pre>
   *
   * <code>.google.protobuf.Duration message_timeout = 7;</code>
   */
  @java.lang.Override
  public com.google.protobuf.DurationOrBuilder getMessageTimeoutOrBuilder() {
    return messageTimeout_ == null ? com.google.protobuf.Duration.getDefaultInstance() : messageTimeout_;
  }

  public static final int STAT_PREFIX_FIELD_NUMBER = 8;
  @SuppressWarnings("serial")
  private volatile java.lang.Object statPrefix_ = "";
  /**
   * <pre>
   * Optional additional prefix to use when emitting statistics. This allows to distinguish
   * emitted statistics between configured *ext_proc* filters in an HTTP filter chain.
   * </pre>
   *
   * <code>string stat_prefix = 8;</code>
   * @return The statPrefix.
   */
  @java.lang.Override
  public java.lang.String getStatPrefix() {
    java.lang.Object ref = statPrefix_;
    if (ref instanceof java.lang.String) {
      return (java.lang.String) ref;
    } else {
      com.google.protobuf.ByteString bs = 
          (com.google.protobuf.ByteString) ref;
      java.lang.String s = bs.toStringUtf8();
      statPrefix_ = s;
      return s;
    }
  }
  /**
   * <pre>
   * Optional additional prefix to use when emitting statistics. This allows to distinguish
   * emitted statistics between configured *ext_proc* filters in an HTTP filter chain.
   * </pre>
   *
   * <code>string stat_prefix = 8;</code>
   * @return The bytes for statPrefix.
   */
  @java.lang.Override
  public com.google.protobuf.ByteString
      getStatPrefixBytes() {
    java.lang.Object ref = statPrefix_;
    if (ref instanceof java.lang.String) {
      com.google.protobuf.ByteString b = 
          com.google.protobuf.ByteString.copyFromUtf8(
              (java.lang.String) ref);
      statPrefix_ = b;
      return b;
    } else {
      return (com.google.protobuf.ByteString) ref;
    }
  }

  public static final int MUTATION_RULES_FIELD_NUMBER = 9;
  private io.envoyproxy.envoy.config.common.mutation_rules.v3.HeaderMutationRules mutationRules_;
  /**
   * <pre>
   * Rules that determine what modifications an external processing server may
   * make to message headers. If not set, all headers may be modified except
   * for "host", ":authority", ":scheme", ":method", and headers that start
   * with the header prefix set via
   * :ref:`header_prefix &lt;envoy_v3_api_field_config.bootstrap.v3.Bootstrap.header_prefix&gt;`
   * (which is usually "x-envoy").
   * Note that changing headers such as "host" or ":authority" may not in itself
   * change Envoy's routing decision, as routes can be cached. To also force the
   * route to be recomputed, set the
   * :ref:`clear_route_cache &lt;envoy_v3_api_field_service.ext_proc.v3.CommonResponse.clear_route_cache&gt;`
   * field to true in the same response.
   * </pre>
   *
   * <code>.envoy.config.common.mutation_rules.v3.HeaderMutationRules mutation_rules = 9;</code>
   * @return Whether the mutationRules field is set.
   */
  @java.lang.Override
  public boolean hasMutationRules() {
    return mutationRules_ != null;
  }
  /**
   * <pre>
   * Rules that determine what modifications an external processing server may
   * make to message headers. If not set, all headers may be modified except
   * for "host", ":authority", ":scheme", ":method", and headers that start
   * with the header prefix set via
   * :ref:`header_prefix &lt;envoy_v3_api_field_config.bootstrap.v3.Bootstrap.header_prefix&gt;`
   * (which is usually "x-envoy").
   * Note that changing headers such as "host" or ":authority" may not in itself
   * change Envoy's routing decision, as routes can be cached. To also force the
   * route to be recomputed, set the
   * :ref:`clear_route_cache &lt;envoy_v3_api_field_service.ext_proc.v3.CommonResponse.clear_route_cache&gt;`
   * field to true in the same response.
   * </pre>
   *
   * <code>.envoy.config.common.mutation_rules.v3.HeaderMutationRules mutation_rules = 9;</code>
   * @return The mutationRules.
   */
  @java.lang.Override
  public io.envoyproxy.envoy.config.common.mutation_rules.v3.HeaderMutationRules getMutationRules() {
    return mutationRules_ == null ? io.envoyproxy.envoy.config.common.mutation_rules.v3.HeaderMutationRules.getDefaultInstance() : mutationRules_;
  }
  /**
   * <pre>
   * Rules that determine what modifications an external processing server may
   * make to message headers. If not set, all headers may be modified except
   * for "host", ":authority", ":scheme", ":method", and headers that start
   * with the header prefix set via
   * :ref:`header_prefix &lt;envoy_v3_api_field_config.bootstrap.v3.Bootstrap.header_prefix&gt;`
   * (which is usually "x-envoy").
   * Note that changing headers such as "host" or ":authority" may not in itself
   * change Envoy's routing decision, as routes can be cached. To also force the
   * route to be recomputed, set the
   * :ref:`clear_route_cache &lt;envoy_v3_api_field_service.ext_proc.v3.CommonResponse.clear_route_cache&gt;`
   * field to true in the same response.
   * </pre>
   *
   * <code>.envoy.config.common.mutation_rules.v3.HeaderMutationRules mutation_rules = 9;</code>
   */
  @java.lang.Override
  public io.envoyproxy.envoy.config.common.mutation_rules.v3.HeaderMutationRulesOrBuilder getMutationRulesOrBuilder() {
    return mutationRules_ == null ? io.envoyproxy.envoy.config.common.mutation_rules.v3.HeaderMutationRules.getDefaultInstance() : mutationRules_;
  }

  private byte memoizedIsInitialized = -1;
  @java.lang.Override
  public final boolean isInitialized() {
    byte isInitialized = memoizedIsInitialized;
    if (isInitialized == 1) return true;
    if (isInitialized == 0) return false;

    memoizedIsInitialized = 1;
    return true;
  }

  @java.lang.Override
  public void writeTo(com.google.protobuf.CodedOutputStream output)
                      throws java.io.IOException {
    if (grpcService_ != null) {
      output.writeMessage(1, getGrpcService());
    }
    if (failureModeAllow_ != false) {
      output.writeBool(2, failureModeAllow_);
    }
    if (processingMode_ != null) {
      output.writeMessage(3, getProcessingMode());
    }
    if (asyncMode_ != false) {
      output.writeBool(4, asyncMode_);
    }
    for (int i = 0; i < requestAttributes_.size(); i++) {
      com.google.protobuf.GeneratedMessageV3.writeString(output, 5, requestAttributes_.getRaw(i));
    }
    for (int i = 0; i < responseAttributes_.size(); i++) {
      com.google.protobuf.GeneratedMessageV3.writeString(output, 6, responseAttributes_.getRaw(i));
    }
    if (messageTimeout_ != null) {
      output.writeMessage(7, getMessageTimeout());
    }
    if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(statPrefix_)) {
      com.google.protobuf.GeneratedMessageV3.writeString(output, 8, statPrefix_);
    }
    if (mutationRules_ != null) {
      output.writeMessage(9, getMutationRules());
    }
    getUnknownFields().writeTo(output);
  }

  @java.lang.Override
  public int getSerializedSize() {
    int size = memoizedSize;
    if (size != -1) return size;

    size = 0;
    if (grpcService_ != null) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(1, getGrpcService());
    }
    if (failureModeAllow_ != false) {
      size += com.google.protobuf.CodedOutputStream
        .computeBoolSize(2, failureModeAllow_);
    }
    if (processingMode_ != null) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(3, getProcessingMode());
    }
    if (asyncMode_ != false) {
      size += com.google.protobuf.CodedOutputStream
        .computeBoolSize(4, asyncMode_);
    }
    {
      int dataSize = 0;
      for (int i = 0; i < requestAttributes_.size(); i++) {
        dataSize += computeStringSizeNoTag(requestAttributes_.getRaw(i));
      }
      size += dataSize;
      size += 1 * getRequestAttributesList().size();
    }
    {
      int dataSize = 0;
      for (int i = 0; i < responseAttributes_.size(); i++) {
        dataSize += computeStringSizeNoTag(responseAttributes_.getRaw(i));
      }
      size += dataSize;
      size += 1 * getResponseAttributesList().size();
    }
    if (messageTimeout_ != null) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(7, getMessageTimeout());
    }
    if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(statPrefix_)) {
      size += com.google.protobuf.GeneratedMessageV3.computeStringSize(8, statPrefix_);
    }
    if (mutationRules_ != null) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(9, getMutationRules());
    }
    size += getUnknownFields().getSerializedSize();
    memoizedSize = size;
    return size;
  }

  @java.lang.Override
  public boolean equals(final java.lang.Object obj) {
    if (obj == this) {
     return true;
    }
    if (!(obj instanceof io.envoyproxy.envoy.extensions.filters.http.ext_proc.v3.ExternalProcessor)) {
      return super.equals(obj);
    }
    io.envoyproxy.envoy.extensions.filters.http.ext_proc.v3.ExternalProcessor other = (io.envoyproxy.envoy.extensions.filters.http.ext_proc.v3.ExternalProcessor) obj;

    if (hasGrpcService() != other.hasGrpcService()) return false;
    if (hasGrpcService()) {
      if (!getGrpcService()
          .equals(other.getGrpcService())) return false;
    }
    if (getFailureModeAllow()
        != other.getFailureModeAllow()) return false;
    if (hasProcessingMode() != other.hasProcessingMode()) return false;
    if (hasProcessingMode()) {
      if (!getProcessingMode()
          .equals(other.getProcessingMode())) return false;
    }
    if (getAsyncMode()
        != other.getAsyncMode()) return false;
    if (!getRequestAttributesList()
        .equals(other.getRequestAttributesList())) return false;
    if (!getResponseAttributesList()
        .equals(other.getResponseAttributesList())) return false;
    if (hasMessageTimeout() != other.hasMessageTimeout()) return false;
    if (hasMessageTimeout()) {
      if (!getMessageTimeout()
          .equals(other.getMessageTimeout())) return false;
    }
    if (!getStatPrefix()
        .equals(other.getStatPrefix())) return false;
    if (hasMutationRules() != other.hasMutationRules()) return false;
    if (hasMutationRules()) {
      if (!getMutationRules()
          .equals(other.getMutationRules())) return false;
    }
    if (!getUnknownFields().equals(other.getUnknownFields())) return false;
    return true;
  }

  @java.lang.Override
  public int hashCode() {
    if (memoizedHashCode != 0) {
      return memoizedHashCode;
    }
    int hash = 41;
    hash = (19 * hash) + getDescriptor().hashCode();
    if (hasGrpcService()) {
      hash = (37 * hash) + GRPC_SERVICE_FIELD_NUMBER;
      hash = (53 * hash) + getGrpcService().hashCode();
    }
    hash = (37 * hash) + FAILURE_MODE_ALLOW_FIELD_NUMBER;
    hash = (53 * hash) + com.google.protobuf.Internal.hashBoolean(
        getFailureModeAllow());
    if (hasProcessingMode()) {
      hash = (37 * hash) + PROCESSING_MODE_FIELD_NUMBER;
      hash = (53 * hash) + getProcessingMode().hashCode();
    }
    hash = (37 * hash) + ASYNC_MODE_FIELD_NUMBER;
    hash = (53 * hash) + com.google.protobuf.Internal.hashBoolean(
        getAsyncMode());
    if (getRequestAttributesCount() > 0) {
      hash = (37 * hash) + REQUEST_ATTRIBUTES_FIELD_NUMBER;
      hash = (53 * hash) + getRequestAttributesList().hashCode();
    }
    if (getResponseAttributesCount() > 0) {
      hash = (37 * hash) + RESPONSE_ATTRIBUTES_FIELD_NUMBER;
      hash = (53 * hash) + getResponseAttributesList().hashCode();
    }
    if (hasMessageTimeout()) {
      hash = (37 * hash) + MESSAGE_TIMEOUT_FIELD_NUMBER;
      hash = (53 * hash) + getMessageTimeout().hashCode();
    }
    hash = (37 * hash) + STAT_PREFIX_FIELD_NUMBER;
    hash = (53 * hash) + getStatPrefix().hashCode();
    if (hasMutationRules()) {
      hash = (37 * hash) + MUTATION_RULES_FIELD_NUMBER;
      hash = (53 * hash) + getMutationRules().hashCode();
    }
    hash = (29 * hash) + getUnknownFields().hashCode();
    memoizedHashCode = hash;
    return hash;
  }

  public static io.envoyproxy.envoy.extensions.filters.http.ext_proc.v3.ExternalProcessor parseFrom(
      java.nio.ByteBuffer data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static io.envoyproxy.envoy.extensions.filters.http.ext_proc.v3.ExternalProcessor parseFrom(
      java.nio.ByteBuffer data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static io.envoyproxy.envoy.extensions.filters.http.ext_proc.v3.ExternalProcessor parseFrom(
      com.google.protobuf.ByteString data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static io.envoyproxy.envoy.extensions.filters.http.ext_proc.v3.ExternalProcessor parseFrom(
      com.google.protobuf.ByteString data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static io.envoyproxy.envoy.extensions.filters.http.ext_proc.v3.ExternalProcessor parseFrom(byte[] data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static io.envoyproxy.envoy.extensions.filters.http.ext_proc.v3.ExternalProcessor parseFrom(
      byte[] data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static io.envoyproxy.envoy.extensions.filters.http.ext_proc.v3.ExternalProcessor parseFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input);
  }
  public static io.envoyproxy.envoy.extensions.filters.http.ext_proc.v3.ExternalProcessor parseFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input, extensionRegistry);
  }
  public static io.envoyproxy.envoy.extensions.filters.http.ext_proc.v3.ExternalProcessor parseDelimitedFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseDelimitedWithIOException(PARSER, input);
  }
  public static io.envoyproxy.envoy.extensions.filters.http.ext_proc.v3.ExternalProcessor parseDelimitedFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
  }
  public static io.envoyproxy.envoy.extensions.filters.http.ext_proc.v3.ExternalProcessor parseFrom(
      com.google.protobuf.CodedInputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input);
  }
  public static io.envoyproxy.envoy.extensions.filters.http.ext_proc.v3.ExternalProcessor parseFrom(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input, extensionRegistry);
  }

  @java.lang.Override
  public Builder newBuilderForType() { return newBuilder(); }
  public static Builder newBuilder() {
    return DEFAULT_INSTANCE.toBuilder();
  }
  public static Builder newBuilder(io.envoyproxy.envoy.extensions.filters.http.ext_proc.v3.ExternalProcessor prototype) {
    return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
  }
  @java.lang.Override
  public Builder toBuilder() {
    return this == DEFAULT_INSTANCE
        ? new Builder() : new Builder().mergeFrom(this);
  }

  @java.lang.Override
  protected Builder newBuilderForType(
      com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
    Builder builder = new Builder(parent);
    return builder;
  }
  /**
   * <pre>
   * [#next-free-field: 10]
   * </pre>
   *
   * Protobuf type {@code envoy.extensions.filters.http.ext_proc.v3.ExternalProcessor}
   */
  public static final class Builder extends
      com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
      // @@protoc_insertion_point(builder_implements:envoy.extensions.filters.http.ext_proc.v3.ExternalProcessor)
      io.envoyproxy.envoy.extensions.filters.http.ext_proc.v3.ExternalProcessorOrBuilder {
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return io.envoyproxy.envoy.extensions.filters.http.ext_proc.v3.ExtProcProto.internal_static_envoy_extensions_filters_http_ext_proc_v3_ExternalProcessor_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return io.envoyproxy.envoy.extensions.filters.http.ext_proc.v3.ExtProcProto.internal_static_envoy_extensions_filters_http_ext_proc_v3_ExternalProcessor_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              io.envoyproxy.envoy.extensions.filters.http.ext_proc.v3.ExternalProcessor.class, io.envoyproxy.envoy.extensions.filters.http.ext_proc.v3.ExternalProcessor.Builder.class);
    }

    // Construct using io.envoyproxy.envoy.extensions.filters.http.ext_proc.v3.ExternalProcessor.newBuilder()
    private Builder() {

    }

    private Builder(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      super(parent);

    }
    @java.lang.Override
    public Builder clear() {
      super.clear();
      bitField0_ = 0;
      grpcService_ = null;
      if (grpcServiceBuilder_ != null) {
        grpcServiceBuilder_.dispose();
        grpcServiceBuilder_ = null;
      }
      failureModeAllow_ = false;
      processingMode_ = null;
      if (processingModeBuilder_ != null) {
        processingModeBuilder_.dispose();
        processingModeBuilder_ = null;
      }
      asyncMode_ = false;
      requestAttributes_ = com.google.protobuf.LazyStringArrayList.EMPTY;
      bitField0_ = (bitField0_ & ~0x00000010);
      responseAttributes_ = com.google.protobuf.LazyStringArrayList.EMPTY;
      bitField0_ = (bitField0_ & ~0x00000020);
      messageTimeout_ = null;
      if (messageTimeoutBuilder_ != null) {
        messageTimeoutBuilder_.dispose();
        messageTimeoutBuilder_ = null;
      }
      statPrefix_ = "";
      mutationRules_ = null;
      if (mutationRulesBuilder_ != null) {
        mutationRulesBuilder_.dispose();
        mutationRulesBuilder_ = null;
      }
      return this;
    }

    @java.lang.Override
    public com.google.protobuf.Descriptors.Descriptor
        getDescriptorForType() {
      return io.envoyproxy.envoy.extensions.filters.http.ext_proc.v3.ExtProcProto.internal_static_envoy_extensions_filters_http_ext_proc_v3_ExternalProcessor_descriptor;
    }

    @java.lang.Override
    public io.envoyproxy.envoy.extensions.filters.http.ext_proc.v3.ExternalProcessor getDefaultInstanceForType() {
      return io.envoyproxy.envoy.extensions.filters.http.ext_proc.v3.ExternalProcessor.getDefaultInstance();
    }

    @java.lang.Override
    public io.envoyproxy.envoy.extensions.filters.http.ext_proc.v3.ExternalProcessor build() {
      io.envoyproxy.envoy.extensions.filters.http.ext_proc.v3.ExternalProcessor result = buildPartial();
      if (!result.isInitialized()) {
        throw newUninitializedMessageException(result);
      }
      return result;
    }

    @java.lang.Override
    public io.envoyproxy.envoy.extensions.filters.http.ext_proc.v3.ExternalProcessor buildPartial() {
      io.envoyproxy.envoy.extensions.filters.http.ext_proc.v3.ExternalProcessor result = new io.envoyproxy.envoy.extensions.filters.http.ext_proc.v3.ExternalProcessor(this);
      buildPartialRepeatedFields(result);
      if (bitField0_ != 0) { buildPartial0(result); }
      onBuilt();
      return result;
    }

    private void buildPartialRepeatedFields(io.envoyproxy.envoy.extensions.filters.http.ext_proc.v3.ExternalProcessor result) {
      if (((bitField0_ & 0x00000010) != 0)) {
        requestAttributes_ = requestAttributes_.getUnmodifiableView();
        bitField0_ = (bitField0_ & ~0x00000010);
      }
      result.requestAttributes_ = requestAttributes_;
      if (((bitField0_ & 0x00000020) != 0)) {
        responseAttributes_ = responseAttributes_.getUnmodifiableView();
        bitField0_ = (bitField0_ & ~0x00000020);
      }
      result.responseAttributes_ = responseAttributes_;
    }

    private void buildPartial0(io.envoyproxy.envoy.extensions.filters.http.ext_proc.v3.ExternalProcessor result) {
      int from_bitField0_ = bitField0_;
      if (((from_bitField0_ & 0x00000001) != 0)) {
        result.grpcService_ = grpcServiceBuilder_ == null
            ? grpcService_
            : grpcServiceBuilder_.build();
      }
      if (((from_bitField0_ & 0x00000002) != 0)) {
        result.failureModeAllow_ = failureModeAllow_;
      }
      if (((from_bitField0_ & 0x00000004) != 0)) {
        result.processingMode_ = processingModeBuilder_ == null
            ? processingMode_
            : processingModeBuilder_.build();
      }
      if (((from_bitField0_ & 0x00000008) != 0)) {
        result.asyncMode_ = asyncMode_;
      }
      if (((from_bitField0_ & 0x00000040) != 0)) {
        result.messageTimeout_ = messageTimeoutBuilder_ == null
            ? messageTimeout_
            : messageTimeoutBuilder_.build();
      }
      if (((from_bitField0_ & 0x00000080) != 0)) {
        result.statPrefix_ = statPrefix_;
      }
      if (((from_bitField0_ & 0x00000100) != 0)) {
        result.mutationRules_ = mutationRulesBuilder_ == null
            ? mutationRules_
            : mutationRulesBuilder_.build();
      }
    }

    @java.lang.Override
    public Builder clone() {
      return super.clone();
    }
    @java.lang.Override
    public Builder setField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        java.lang.Object value) {
      return super.setField(field, value);
    }
    @java.lang.Override
    public Builder clearField(
        com.google.protobuf.Descriptors.FieldDescriptor field) {
      return super.clearField(field);
    }
    @java.lang.Override
    public Builder clearOneof(
        com.google.protobuf.Descriptors.OneofDescriptor oneof) {
      return super.clearOneof(oneof);
    }
    @java.lang.Override
    public Builder setRepeatedField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        int index, java.lang.Object value) {
      return super.setRepeatedField(field, index, value);
    }
    @java.lang.Override
    public Builder addRepeatedField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        java.lang.Object value) {
      return super.addRepeatedField(field, value);
    }
    @java.lang.Override
    public Builder mergeFrom(com.google.protobuf.Message other) {
      if (other instanceof io.envoyproxy.envoy.extensions.filters.http.ext_proc.v3.ExternalProcessor) {
        return mergeFrom((io.envoyproxy.envoy.extensions.filters.http.ext_proc.v3.ExternalProcessor)other);
      } else {
        super.mergeFrom(other);
        return this;
      }
    }

    public Builder mergeFrom(io.envoyproxy.envoy.extensions.filters.http.ext_proc.v3.ExternalProcessor other) {
      if (other == io.envoyproxy.envoy.extensions.filters.http.ext_proc.v3.ExternalProcessor.getDefaultInstance()) return this;
      if (other.hasGrpcService()) {
        mergeGrpcService(other.getGrpcService());
      }
      if (other.getFailureModeAllow() != false) {
        setFailureModeAllow(other.getFailureModeAllow());
      }
      if (other.hasProcessingMode()) {
        mergeProcessingMode(other.getProcessingMode());
      }
      if (other.getAsyncMode() != false) {
        setAsyncMode(other.getAsyncMode());
      }
      if (!other.requestAttributes_.isEmpty()) {
        if (requestAttributes_.isEmpty()) {
          requestAttributes_ = other.requestAttributes_;
          bitField0_ = (bitField0_ & ~0x00000010);
        } else {
          ensureRequestAttributesIsMutable();
          requestAttributes_.addAll(other.requestAttributes_);
        }
        onChanged();
      }
      if (!other.responseAttributes_.isEmpty()) {
        if (responseAttributes_.isEmpty()) {
          responseAttributes_ = other.responseAttributes_;
          bitField0_ = (bitField0_ & ~0x00000020);
        } else {
          ensureResponseAttributesIsMutable();
          responseAttributes_.addAll(other.responseAttributes_);
        }
        onChanged();
      }
      if (other.hasMessageTimeout()) {
        mergeMessageTimeout(other.getMessageTimeout());
      }
      if (!other.getStatPrefix().isEmpty()) {
        statPrefix_ = other.statPrefix_;
        bitField0_ |= 0x00000080;
        onChanged();
      }
      if (other.hasMutationRules()) {
        mergeMutationRules(other.getMutationRules());
      }
      this.mergeUnknownFields(other.getUnknownFields());
      onChanged();
      return this;
    }

    @java.lang.Override
    public final boolean isInitialized() {
      return true;
    }

    @java.lang.Override
    public Builder mergeFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 10: {
              input.readMessage(
                  getGrpcServiceFieldBuilder().getBuilder(),
                  extensionRegistry);
              bitField0_ |= 0x00000001;
              break;
            } // case 10
            case 16: {
              failureModeAllow_ = input.readBool();
              bitField0_ |= 0x00000002;
              break;
            } // case 16
            case 26: {
              input.readMessage(
                  getProcessingModeFieldBuilder().getBuilder(),
                  extensionRegistry);
              bitField0_ |= 0x00000004;
              break;
            } // case 26
            case 32: {
              asyncMode_ = input.readBool();
              bitField0_ |= 0x00000008;
              break;
            } // case 32
            case 42: {
              java.lang.String s = input.readStringRequireUtf8();
              ensureRequestAttributesIsMutable();
              requestAttributes_.add(s);
              break;
            } // case 42
            case 50: {
              java.lang.String s = input.readStringRequireUtf8();
              ensureResponseAttributesIsMutable();
              responseAttributes_.add(s);
              break;
            } // case 50
            case 58: {
              input.readMessage(
                  getMessageTimeoutFieldBuilder().getBuilder(),
                  extensionRegistry);
              bitField0_ |= 0x00000040;
              break;
            } // case 58
            case 66: {
              statPrefix_ = input.readStringRequireUtf8();
              bitField0_ |= 0x00000080;
              break;
            } // case 66
            case 74: {
              input.readMessage(
                  getMutationRulesFieldBuilder().getBuilder(),
                  extensionRegistry);
              bitField0_ |= 0x00000100;
              break;
            } // case 74
            default: {
              if (!super.parseUnknownField(input, extensionRegistry, tag)) {
                done = true; // was an endgroup tag
              }
              break;
            } // default:
          } // switch (tag)
        } // while (!done)
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.unwrapIOException();
      } finally {
        onChanged();
      } // finally
      return this;
    }
    private int bitField0_;

    private io.envoyproxy.envoy.config.core.v3.GrpcService grpcService_;
    private com.google.protobuf.SingleFieldBuilderV3<
        io.envoyproxy.envoy.config.core.v3.GrpcService, io.envoyproxy.envoy.config.core.v3.GrpcService.Builder, io.envoyproxy.envoy.config.core.v3.GrpcServiceOrBuilder> grpcServiceBuilder_;
    /**
     * <pre>
     * Configuration for the gRPC service that the filter will communicate with.
     * The filter supports both the "Envoy" and "Google" gRPC clients.
     * </pre>
     *
     * <code>.envoy.config.core.v3.GrpcService grpc_service = 1;</code>
     * @return Whether the grpcService field is set.
     */
    public boolean hasGrpcService() {
      return ((bitField0_ & 0x00000001) != 0);
    }
    /**
     * <pre>
     * Configuration for the gRPC service that the filter will communicate with.
     * The filter supports both the "Envoy" and "Google" gRPC clients.
     * </pre>
     *
     * <code>.envoy.config.core.v3.GrpcService grpc_service = 1;</code>
     * @return The grpcService.
     */
    public io.envoyproxy.envoy.config.core.v3.GrpcService getGrpcService() {
      if (grpcServiceBuilder_ == null) {
        return grpcService_ == null ? io.envoyproxy.envoy.config.core.v3.GrpcService.getDefaultInstance() : grpcService_;
      } else {
        return grpcServiceBuilder_.getMessage();
      }
    }
    /**
     * <pre>
     * Configuration for the gRPC service that the filter will communicate with.
     * The filter supports both the "Envoy" and "Google" gRPC clients.
     * </pre>
     *
     * <code>.envoy.config.core.v3.GrpcService grpc_service = 1;</code>
     */
    public Builder setGrpcService(io.envoyproxy.envoy.config.core.v3.GrpcService value) {
      if (grpcServiceBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        grpcService_ = value;
      } else {
        grpcServiceBuilder_.setMessage(value);
      }
      bitField0_ |= 0x00000001;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * Configuration for the gRPC service that the filter will communicate with.
     * The filter supports both the "Envoy" and "Google" gRPC clients.
     * </pre>
     *
     * <code>.envoy.config.core.v3.GrpcService grpc_service = 1;</code>
     */
    public Builder setGrpcService(
        io.envoyproxy.envoy.config.core.v3.GrpcService.Builder builderForValue) {
      if (grpcServiceBuilder_ == null) {
        grpcService_ = builderForValue.build();
      } else {
        grpcServiceBuilder_.setMessage(builderForValue.build());
      }
      bitField0_ |= 0x00000001;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * Configuration for the gRPC service that the filter will communicate with.
     * The filter supports both the "Envoy" and "Google" gRPC clients.
     * </pre>
     *
     * <code>.envoy.config.core.v3.GrpcService grpc_service = 1;</code>
     */
    public Builder mergeGrpcService(io.envoyproxy.envoy.config.core.v3.GrpcService value) {
      if (grpcServiceBuilder_ == null) {
        if (((bitField0_ & 0x00000001) != 0) &&
          grpcService_ != null &&
          grpcService_ != io.envoyproxy.envoy.config.core.v3.GrpcService.getDefaultInstance()) {
          getGrpcServiceBuilder().mergeFrom(value);
        } else {
          grpcService_ = value;
        }
      } else {
        grpcServiceBuilder_.mergeFrom(value);
      }
      bitField0_ |= 0x00000001;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * Configuration for the gRPC service that the filter will communicate with.
     * The filter supports both the "Envoy" and "Google" gRPC clients.
     * </pre>
     *
     * <code>.envoy.config.core.v3.GrpcService grpc_service = 1;</code>
     */
    public Builder clearGrpcService() {
      bitField0_ = (bitField0_ & ~0x00000001);
      grpcService_ = null;
      if (grpcServiceBuilder_ != null) {
        grpcServiceBuilder_.dispose();
        grpcServiceBuilder_ = null;
      }
      onChanged();
      return this;
    }
    /**
     * <pre>
     * Configuration for the gRPC service that the filter will communicate with.
     * The filter supports both the "Envoy" and "Google" gRPC clients.
     * </pre>
     *
     * <code>.envoy.config.core.v3.GrpcService grpc_service = 1;</code>
     */
    public io.envoyproxy.envoy.config.core.v3.GrpcService.Builder getGrpcServiceBuilder() {
      bitField0_ |= 0x00000001;
      onChanged();
      return getGrpcServiceFieldBuilder().getBuilder();
    }
    /**
     * <pre>
     * Configuration for the gRPC service that the filter will communicate with.
     * The filter supports both the "Envoy" and "Google" gRPC clients.
     * </pre>
     *
     * <code>.envoy.config.core.v3.GrpcService grpc_service = 1;</code>
     */
    public io.envoyproxy.envoy.config.core.v3.GrpcServiceOrBuilder getGrpcServiceOrBuilder() {
      if (grpcServiceBuilder_ != null) {
        return grpcServiceBuilder_.getMessageOrBuilder();
      } else {
        return grpcService_ == null ?
            io.envoyproxy.envoy.config.core.v3.GrpcService.getDefaultInstance() : grpcService_;
      }
    }
    /**
     * <pre>
     * Configuration for the gRPC service that the filter will communicate with.
     * The filter supports both the "Envoy" and "Google" gRPC clients.
     * </pre>
     *
     * <code>.envoy.config.core.v3.GrpcService grpc_service = 1;</code>
     */
    private com.google.protobuf.SingleFieldBuilderV3<
        io.envoyproxy.envoy.config.core.v3.GrpcService, io.envoyproxy.envoy.config.core.v3.GrpcService.Builder, io.envoyproxy.envoy.config.core.v3.GrpcServiceOrBuilder> 
        getGrpcServiceFieldBuilder() {
      if (grpcServiceBuilder_ == null) {
        grpcServiceBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
            io.envoyproxy.envoy.config.core.v3.GrpcService, io.envoyproxy.envoy.config.core.v3.GrpcService.Builder, io.envoyproxy.envoy.config.core.v3.GrpcServiceOrBuilder>(
                getGrpcService(),
                getParentForChildren(),
                isClean());
        grpcService_ = null;
      }
      return grpcServiceBuilder_;
    }

    private boolean failureModeAllow_ ;
    /**
     * <pre>
     * By default, if the gRPC stream cannot be established, or if it is closed
     * prematurely with an error, the filter will fail. Specifically, if the
     * response headers have not yet been delivered, then it will return a 500
     * error downstream. If they have been delivered, then instead the HTTP stream to the
     * downstream client will be reset.
     * With this parameter set to true, however, then if the gRPC stream is prematurely closed
     * or could not be opened, processing continues without error.
     * </pre>
     *
     * <code>bool failure_mode_allow = 2;</code>
     * @return The failureModeAllow.
     */
    @java.lang.Override
    public boolean getFailureModeAllow() {
      return failureModeAllow_;
    }
    /**
     * <pre>
     * By default, if the gRPC stream cannot be established, or if it is closed
     * prematurely with an error, the filter will fail. Specifically, if the
     * response headers have not yet been delivered, then it will return a 500
     * error downstream. If they have been delivered, then instead the HTTP stream to the
     * downstream client will be reset.
     * With this parameter set to true, however, then if the gRPC stream is prematurely closed
     * or could not be opened, processing continues without error.
     * </pre>
     *
     * <code>bool failure_mode_allow = 2;</code>
     * @param value The failureModeAllow to set.
     * @return This builder for chaining.
     */
    public Builder setFailureModeAllow(boolean value) {
      
      failureModeAllow_ = value;
      bitField0_ |= 0x00000002;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * By default, if the gRPC stream cannot be established, or if it is closed
     * prematurely with an error, the filter will fail. Specifically, if the
     * response headers have not yet been delivered, then it will return a 500
     * error downstream. If they have been delivered, then instead the HTTP stream to the
     * downstream client will be reset.
     * With this parameter set to true, however, then if the gRPC stream is prematurely closed
     * or could not be opened, processing continues without error.
     * </pre>
     *
     * <code>bool failure_mode_allow = 2;</code>
     * @return This builder for chaining.
     */
    public Builder clearFailureModeAllow() {
      bitField0_ = (bitField0_ & ~0x00000002);
      failureModeAllow_ = false;
      onChanged();
      return this;
    }

    private io.envoyproxy.envoy.extensions.filters.http.ext_proc.v3.ProcessingMode processingMode_;
    private com.google.protobuf.SingleFieldBuilderV3<
        io.envoyproxy.envoy.extensions.filters.http.ext_proc.v3.ProcessingMode, io.envoyproxy.envoy.extensions.filters.http.ext_proc.v3.ProcessingMode.Builder, io.envoyproxy.envoy.extensions.filters.http.ext_proc.v3.ProcessingModeOrBuilder> processingModeBuilder_;
    /**
     * <pre>
     * Specifies default options for how HTTP headers, trailers, and bodies are
     * sent. See ProcessingMode for details.
     * </pre>
     *
     * <code>.envoy.extensions.filters.http.ext_proc.v3.ProcessingMode processing_mode = 3;</code>
     * @return Whether the processingMode field is set.
     */
    public boolean hasProcessingMode() {
      return ((bitField0_ & 0x00000004) != 0);
    }
    /**
     * <pre>
     * Specifies default options for how HTTP headers, trailers, and bodies are
     * sent. See ProcessingMode for details.
     * </pre>
     *
     * <code>.envoy.extensions.filters.http.ext_proc.v3.ProcessingMode processing_mode = 3;</code>
     * @return The processingMode.
     */
    public io.envoyproxy.envoy.extensions.filters.http.ext_proc.v3.ProcessingMode getProcessingMode() {
      if (processingModeBuilder_ == null) {
        return processingMode_ == null ? io.envoyproxy.envoy.extensions.filters.http.ext_proc.v3.ProcessingMode.getDefaultInstance() : processingMode_;
      } else {
        return processingModeBuilder_.getMessage();
      }
    }
    /**
     * <pre>
     * Specifies default options for how HTTP headers, trailers, and bodies are
     * sent. See ProcessingMode for details.
     * </pre>
     *
     * <code>.envoy.extensions.filters.http.ext_proc.v3.ProcessingMode processing_mode = 3;</code>
     */
    public Builder setProcessingMode(io.envoyproxy.envoy.extensions.filters.http.ext_proc.v3.ProcessingMode value) {
      if (processingModeBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        processingMode_ = value;
      } else {
        processingModeBuilder_.setMessage(value);
      }
      bitField0_ |= 0x00000004;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * Specifies default options for how HTTP headers, trailers, and bodies are
     * sent. See ProcessingMode for details.
     * </pre>
     *
     * <code>.envoy.extensions.filters.http.ext_proc.v3.ProcessingMode processing_mode = 3;</code>
     */
    public Builder setProcessingMode(
        io.envoyproxy.envoy.extensions.filters.http.ext_proc.v3.ProcessingMode.Builder builderForValue) {
      if (processingModeBuilder_ == null) {
        processingMode_ = builderForValue.build();
      } else {
        processingModeBuilder_.setMessage(builderForValue.build());
      }
      bitField0_ |= 0x00000004;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * Specifies default options for how HTTP headers, trailers, and bodies are
     * sent. See ProcessingMode for details.
     * </pre>
     *
     * <code>.envoy.extensions.filters.http.ext_proc.v3.ProcessingMode processing_mode = 3;</code>
     */
    public Builder mergeProcessingMode(io.envoyproxy.envoy.extensions.filters.http.ext_proc.v3.ProcessingMode value) {
      if (processingModeBuilder_ == null) {
        if (((bitField0_ & 0x00000004) != 0) &&
          processingMode_ != null &&
          processingMode_ != io.envoyproxy.envoy.extensions.filters.http.ext_proc.v3.ProcessingMode.getDefaultInstance()) {
          getProcessingModeBuilder().mergeFrom(value);
        } else {
          processingMode_ = value;
        }
      } else {
        processingModeBuilder_.mergeFrom(value);
      }
      bitField0_ |= 0x00000004;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * Specifies default options for how HTTP headers, trailers, and bodies are
     * sent. See ProcessingMode for details.
     * </pre>
     *
     * <code>.envoy.extensions.filters.http.ext_proc.v3.ProcessingMode processing_mode = 3;</code>
     */
    public Builder clearProcessingMode() {
      bitField0_ = (bitField0_ & ~0x00000004);
      processingMode_ = null;
      if (processingModeBuilder_ != null) {
        processingModeBuilder_.dispose();
        processingModeBuilder_ = null;
      }
      onChanged();
      return this;
    }
    /**
     * <pre>
     * Specifies default options for how HTTP headers, trailers, and bodies are
     * sent. See ProcessingMode for details.
     * </pre>
     *
     * <code>.envoy.extensions.filters.http.ext_proc.v3.ProcessingMode processing_mode = 3;</code>
     */
    public io.envoyproxy.envoy.extensions.filters.http.ext_proc.v3.ProcessingMode.Builder getProcessingModeBuilder() {
      bitField0_ |= 0x00000004;
      onChanged();
      return getProcessingModeFieldBuilder().getBuilder();
    }
    /**
     * <pre>
     * Specifies default options for how HTTP headers, trailers, and bodies are
     * sent. See ProcessingMode for details.
     * </pre>
     *
     * <code>.envoy.extensions.filters.http.ext_proc.v3.ProcessingMode processing_mode = 3;</code>
     */
    public io.envoyproxy.envoy.extensions.filters.http.ext_proc.v3.ProcessingModeOrBuilder getProcessingModeOrBuilder() {
      if (processingModeBuilder_ != null) {
        return processingModeBuilder_.getMessageOrBuilder();
      } else {
        return processingMode_ == null ?
            io.envoyproxy.envoy.extensions.filters.http.ext_proc.v3.ProcessingMode.getDefaultInstance() : processingMode_;
      }
    }
    /**
     * <pre>
     * Specifies default options for how HTTP headers, trailers, and bodies are
     * sent. See ProcessingMode for details.
     * </pre>
     *
     * <code>.envoy.extensions.filters.http.ext_proc.v3.ProcessingMode processing_mode = 3;</code>
     */
    private com.google.protobuf.SingleFieldBuilderV3<
        io.envoyproxy.envoy.extensions.filters.http.ext_proc.v3.ProcessingMode, io.envoyproxy.envoy.extensions.filters.http.ext_proc.v3.ProcessingMode.Builder, io.envoyproxy.envoy.extensions.filters.http.ext_proc.v3.ProcessingModeOrBuilder> 
        getProcessingModeFieldBuilder() {
      if (processingModeBuilder_ == null) {
        processingModeBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
            io.envoyproxy.envoy.extensions.filters.http.ext_proc.v3.ProcessingMode, io.envoyproxy.envoy.extensions.filters.http.ext_proc.v3.ProcessingMode.Builder, io.envoyproxy.envoy.extensions.filters.http.ext_proc.v3.ProcessingModeOrBuilder>(
                getProcessingMode(),
                getParentForChildren(),
                isClean());
        processingMode_ = null;
      }
      return processingModeBuilder_;
    }

    private boolean asyncMode_ ;
    /**
     * <pre>
     * [#not-implemented-hide:]
     * If true, send each part of the HTTP request or response specified by ProcessingMode
     * asynchronously -- in other words, send the message on the gRPC stream and then continue
     * filter processing. If false, which is the default, suspend filter execution after
     * each message is sent to the remote service and wait up to "message_timeout"
     * for a reply.
     * </pre>
     *
     * <code>bool async_mode = 4;</code>
     * @return The asyncMode.
     */
    @java.lang.Override
    public boolean getAsyncMode() {
      return asyncMode_;
    }
    /**
     * <pre>
     * [#not-implemented-hide:]
     * If true, send each part of the HTTP request or response specified by ProcessingMode
     * asynchronously -- in other words, send the message on the gRPC stream and then continue
     * filter processing. If false, which is the default, suspend filter execution after
     * each message is sent to the remote service and wait up to "message_timeout"
     * for a reply.
     * </pre>
     *
     * <code>bool async_mode = 4;</code>
     * @param value The asyncMode to set.
     * @return This builder for chaining.
     */
    public Builder setAsyncMode(boolean value) {
      
      asyncMode_ = value;
      bitField0_ |= 0x00000008;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * [#not-implemented-hide:]
     * If true, send each part of the HTTP request or response specified by ProcessingMode
     * asynchronously -- in other words, send the message on the gRPC stream and then continue
     * filter processing. If false, which is the default, suspend filter execution after
     * each message is sent to the remote service and wait up to "message_timeout"
     * for a reply.
     * </pre>
     *
     * <code>bool async_mode = 4;</code>
     * @return This builder for chaining.
     */
    public Builder clearAsyncMode() {
      bitField0_ = (bitField0_ & ~0x00000008);
      asyncMode_ = false;
      onChanged();
      return this;
    }

    private com.google.protobuf.LazyStringList requestAttributes_ = com.google.protobuf.LazyStringArrayList.EMPTY;
    private void ensureRequestAttributesIsMutable() {
      if (!((bitField0_ & 0x00000010) != 0)) {
        requestAttributes_ = new com.google.protobuf.LazyStringArrayList(requestAttributes_);
        bitField0_ |= 0x00000010;
       }
    }
    /**
     * <pre>
     * [#not-implemented-hide:]
     * Envoy provides a number of :ref:`attributes &lt;arch_overview_attributes&gt;`
     * for expressive policies. Each attribute name provided in this field will be
     * matched against that list and populated in the request_headers message.
     * See the :ref:`attribute documentation &lt;arch_overview_request_attributes&gt;`
     * for the list of supported attributes and their types.
     * </pre>
     *
     * <code>repeated string request_attributes = 5;</code>
     * @return A list containing the requestAttributes.
     */
    public com.google.protobuf.ProtocolStringList
        getRequestAttributesList() {
      return requestAttributes_.getUnmodifiableView();
    }
    /**
     * <pre>
     * [#not-implemented-hide:]
     * Envoy provides a number of :ref:`attributes &lt;arch_overview_attributes&gt;`
     * for expressive policies. Each attribute name provided in this field will be
     * matched against that list and populated in the request_headers message.
     * See the :ref:`attribute documentation &lt;arch_overview_request_attributes&gt;`
     * for the list of supported attributes and their types.
     * </pre>
     *
     * <code>repeated string request_attributes = 5;</code>
     * @return The count of requestAttributes.
     */
    public int getRequestAttributesCount() {
      return requestAttributes_.size();
    }
    /**
     * <pre>
     * [#not-implemented-hide:]
     * Envoy provides a number of :ref:`attributes &lt;arch_overview_attributes&gt;`
     * for expressive policies. Each attribute name provided in this field will be
     * matched against that list and populated in the request_headers message.
     * See the :ref:`attribute documentation &lt;arch_overview_request_attributes&gt;`
     * for the list of supported attributes and their types.
     * </pre>
     *
     * <code>repeated string request_attributes = 5;</code>
     * @param index The index of the element to return.
     * @return The requestAttributes at the given index.
     */
    public java.lang.String getRequestAttributes(int index) {
      return requestAttributes_.get(index);
    }
    /**
     * <pre>
     * [#not-implemented-hide:]
     * Envoy provides a number of :ref:`attributes &lt;arch_overview_attributes&gt;`
     * for expressive policies. Each attribute name provided in this field will be
     * matched against that list and populated in the request_headers message.
     * See the :ref:`attribute documentation &lt;arch_overview_request_attributes&gt;`
     * for the list of supported attributes and their types.
     * </pre>
     *
     * <code>repeated string request_attributes = 5;</code>
     * @param index The index of the value to return.
     * @return The bytes of the requestAttributes at the given index.
     */
    public com.google.protobuf.ByteString
        getRequestAttributesBytes(int index) {
      return requestAttributes_.getByteString(index);
    }
    /**
     * <pre>
     * [#not-implemented-hide:]
     * Envoy provides a number of :ref:`attributes &lt;arch_overview_attributes&gt;`
     * for expressive policies. Each attribute name provided in this field will be
     * matched against that list and populated in the request_headers message.
     * See the :ref:`attribute documentation &lt;arch_overview_request_attributes&gt;`
     * for the list of supported attributes and their types.
     * </pre>
     *
     * <code>repeated string request_attributes = 5;</code>
     * @param index The index to set the value at.
     * @param value The requestAttributes to set.
     * @return This builder for chaining.
     */
    public Builder setRequestAttributes(
        int index, java.lang.String value) {
      if (value == null) { throw new NullPointerException(); }
      ensureRequestAttributesIsMutable();
      requestAttributes_.set(index, value);
      onChanged();
      return this;
    }
    /**
     * <pre>
     * [#not-implemented-hide:]
     * Envoy provides a number of :ref:`attributes &lt;arch_overview_attributes&gt;`
     * for expressive policies. Each attribute name provided in this field will be
     * matched against that list and populated in the request_headers message.
     * See the :ref:`attribute documentation &lt;arch_overview_request_attributes&gt;`
     * for the list of supported attributes and their types.
     * </pre>
     *
     * <code>repeated string request_attributes = 5;</code>
     * @param value The requestAttributes to add.
     * @return This builder for chaining.
     */
    public Builder addRequestAttributes(
        java.lang.String value) {
      if (value == null) { throw new NullPointerException(); }
      ensureRequestAttributesIsMutable();
      requestAttributes_.add(value);
      onChanged();
      return this;
    }
    /**
     * <pre>
     * [#not-implemented-hide:]
     * Envoy provides a number of :ref:`attributes &lt;arch_overview_attributes&gt;`
     * for expressive policies. Each attribute name provided in this field will be
     * matched against that list and populated in the request_headers message.
     * See the :ref:`attribute documentation &lt;arch_overview_request_attributes&gt;`
     * for the list of supported attributes and their types.
     * </pre>
     *
     * <code>repeated string request_attributes = 5;</code>
     * @param values The requestAttributes to add.
     * @return This builder for chaining.
     */
    public Builder addAllRequestAttributes(
        java.lang.Iterable<java.lang.String> values) {
      ensureRequestAttributesIsMutable();
      com.google.protobuf.AbstractMessageLite.Builder.addAll(
          values, requestAttributes_);
      onChanged();
      return this;
    }
    /**
     * <pre>
     * [#not-implemented-hide:]
     * Envoy provides a number of :ref:`attributes &lt;arch_overview_attributes&gt;`
     * for expressive policies. Each attribute name provided in this field will be
     * matched against that list and populated in the request_headers message.
     * See the :ref:`attribute documentation &lt;arch_overview_request_attributes&gt;`
     * for the list of supported attributes and their types.
     * </pre>
     *
     * <code>repeated string request_attributes = 5;</code>
     * @return This builder for chaining.
     */
    public Builder clearRequestAttributes() {
      requestAttributes_ = com.google.protobuf.LazyStringArrayList.EMPTY;
      bitField0_ = (bitField0_ & ~0x00000010);
      onChanged();
      return this;
    }
    /**
     * <pre>
     * [#not-implemented-hide:]
     * Envoy provides a number of :ref:`attributes &lt;arch_overview_attributes&gt;`
     * for expressive policies. Each attribute name provided in this field will be
     * matched against that list and populated in the request_headers message.
     * See the :ref:`attribute documentation &lt;arch_overview_request_attributes&gt;`
     * for the list of supported attributes and their types.
     * </pre>
     *
     * <code>repeated string request_attributes = 5;</code>
     * @param value The bytes of the requestAttributes to add.
     * @return This builder for chaining.
     */
    public Builder addRequestAttributesBytes(
        com.google.protobuf.ByteString value) {
      if (value == null) { throw new NullPointerException(); }
      checkByteStringIsUtf8(value);
      ensureRequestAttributesIsMutable();
      requestAttributes_.add(value);
      onChanged();
      return this;
    }

    private com.google.protobuf.LazyStringList responseAttributes_ = com.google.protobuf.LazyStringArrayList.EMPTY;
    private void ensureResponseAttributesIsMutable() {
      if (!((bitField0_ & 0x00000020) != 0)) {
        responseAttributes_ = new com.google.protobuf.LazyStringArrayList(responseAttributes_);
        bitField0_ |= 0x00000020;
       }
    }
    /**
     * <pre>
     * [#not-implemented-hide:]
     * Envoy provides a number of :ref:`attributes &lt;arch_overview_attributes&gt;`
     * for expressive policies. Each attribute name provided in this field will be
     * matched against that list and populated in the response_headers message.
     * See the :ref:`attribute documentation &lt;arch_overview_attributes&gt;`
     * for the list of supported attributes and their types.
     * </pre>
     *
     * <code>repeated string response_attributes = 6;</code>
     * @return A list containing the responseAttributes.
     */
    public com.google.protobuf.ProtocolStringList
        getResponseAttributesList() {
      return responseAttributes_.getUnmodifiableView();
    }
    /**
     * <pre>
     * [#not-implemented-hide:]
     * Envoy provides a number of :ref:`attributes &lt;arch_overview_attributes&gt;`
     * for expressive policies. Each attribute name provided in this field will be
     * matched against that list and populated in the response_headers message.
     * See the :ref:`attribute documentation &lt;arch_overview_attributes&gt;`
     * for the list of supported attributes and their types.
     * </pre>
     *
     * <code>repeated string response_attributes = 6;</code>
     * @return The count of responseAttributes.
     */
    public int getResponseAttributesCount() {
      return responseAttributes_.size();
    }
    /**
     * <pre>
     * [#not-implemented-hide:]
     * Envoy provides a number of :ref:`attributes &lt;arch_overview_attributes&gt;`
     * for expressive policies. Each attribute name provided in this field will be
     * matched against that list and populated in the response_headers message.
     * See the :ref:`attribute documentation &lt;arch_overview_attributes&gt;`
     * for the list of supported attributes and their types.
     * </pre>
     *
     * <code>repeated string response_attributes = 6;</code>
     * @param index The index of the element to return.
     * @return The responseAttributes at the given index.
     */
    public java.lang.String getResponseAttributes(int index) {
      return responseAttributes_.get(index);
    }
    /**
     * <pre>
     * [#not-implemented-hide:]
     * Envoy provides a number of :ref:`attributes &lt;arch_overview_attributes&gt;`
     * for expressive policies. Each attribute name provided in this field will be
     * matched against that list and populated in the response_headers message.
     * See the :ref:`attribute documentation &lt;arch_overview_attributes&gt;`
     * for the list of supported attributes and their types.
     * </pre>
     *
     * <code>repeated string response_attributes = 6;</code>
     * @param index The index of the value to return.
     * @return The bytes of the responseAttributes at the given index.
     */
    public com.google.protobuf.ByteString
        getResponseAttributesBytes(int index) {
      return responseAttributes_.getByteString(index);
    }
    /**
     * <pre>
     * [#not-implemented-hide:]
     * Envoy provides a number of :ref:`attributes &lt;arch_overview_attributes&gt;`
     * for expressive policies. Each attribute name provided in this field will be
     * matched against that list and populated in the response_headers message.
     * See the :ref:`attribute documentation &lt;arch_overview_attributes&gt;`
     * for the list of supported attributes and their types.
     * </pre>
     *
     * <code>repeated string response_attributes = 6;</code>
     * @param index The index to set the value at.
     * @param value The responseAttributes to set.
     * @return This builder for chaining.
     */
    public Builder setResponseAttributes(
        int index, java.lang.String value) {
      if (value == null) { throw new NullPointerException(); }
      ensureResponseAttributesIsMutable();
      responseAttributes_.set(index, value);
      onChanged();
      return this;
    }
    /**
     * <pre>
     * [#not-implemented-hide:]
     * Envoy provides a number of :ref:`attributes &lt;arch_overview_attributes&gt;`
     * for expressive policies. Each attribute name provided in this field will be
     * matched against that list and populated in the response_headers message.
     * See the :ref:`attribute documentation &lt;arch_overview_attributes&gt;`
     * for the list of supported attributes and their types.
     * </pre>
     *
     * <code>repeated string response_attributes = 6;</code>
     * @param value The responseAttributes to add.
     * @return This builder for chaining.
     */
    public Builder addResponseAttributes(
        java.lang.String value) {
      if (value == null) { throw new NullPointerException(); }
      ensureResponseAttributesIsMutable();
      responseAttributes_.add(value);
      onChanged();
      return this;
    }
    /**
     * <pre>
     * [#not-implemented-hide:]
     * Envoy provides a number of :ref:`attributes &lt;arch_overview_attributes&gt;`
     * for expressive policies. Each attribute name provided in this field will be
     * matched against that list and populated in the response_headers message.
     * See the :ref:`attribute documentation &lt;arch_overview_attributes&gt;`
     * for the list of supported attributes and their types.
     * </pre>
     *
     * <code>repeated string response_attributes = 6;</code>
     * @param values The responseAttributes to add.
     * @return This builder for chaining.
     */
    public Builder addAllResponseAttributes(
        java.lang.Iterable<java.lang.String> values) {
      ensureResponseAttributesIsMutable();
      com.google.protobuf.AbstractMessageLite.Builder.addAll(
          values, responseAttributes_);
      onChanged();
      return this;
    }
    /**
     * <pre>
     * [#not-implemented-hide:]
     * Envoy provides a number of :ref:`attributes &lt;arch_overview_attributes&gt;`
     * for expressive policies. Each attribute name provided in this field will be
     * matched against that list and populated in the response_headers message.
     * See the :ref:`attribute documentation &lt;arch_overview_attributes&gt;`
     * for the list of supported attributes and their types.
     * </pre>
     *
     * <code>repeated string response_attributes = 6;</code>
     * @return This builder for chaining.
     */
    public Builder clearResponseAttributes() {
      responseAttributes_ = com.google.protobuf.LazyStringArrayList.EMPTY;
      bitField0_ = (bitField0_ & ~0x00000020);
      onChanged();
      return this;
    }
    /**
     * <pre>
     * [#not-implemented-hide:]
     * Envoy provides a number of :ref:`attributes &lt;arch_overview_attributes&gt;`
     * for expressive policies. Each attribute name provided in this field will be
     * matched against that list and populated in the response_headers message.
     * See the :ref:`attribute documentation &lt;arch_overview_attributes&gt;`
     * for the list of supported attributes and their types.
     * </pre>
     *
     * <code>repeated string response_attributes = 6;</code>
     * @param value The bytes of the responseAttributes to add.
     * @return This builder for chaining.
     */
    public Builder addResponseAttributesBytes(
        com.google.protobuf.ByteString value) {
      if (value == null) { throw new NullPointerException(); }
      checkByteStringIsUtf8(value);
      ensureResponseAttributesIsMutable();
      responseAttributes_.add(value);
      onChanged();
      return this;
    }

    private com.google.protobuf.Duration messageTimeout_;
    private com.google.protobuf.SingleFieldBuilderV3<
        com.google.protobuf.Duration, com.google.protobuf.Duration.Builder, com.google.protobuf.DurationOrBuilder> messageTimeoutBuilder_;
    /**
     * <pre>
     * Specifies the timeout for each individual message sent on the stream and
     * when the filter is running in synchronous mode. Whenever
     * the proxy sends a message on the stream that requires a response, it will
     * reset this timer, and will stop processing and return an error (subject
     * to the processing mode) if the timer expires before a matching response
     * is received. There is no timeout when the filter is running in asynchronous
     * mode. Default is 200 milliseconds.
     * </pre>
     *
     * <code>.google.protobuf.Duration message_timeout = 7;</code>
     * @return Whether the messageTimeout field is set.
     */
    public boolean hasMessageTimeout() {
      return ((bitField0_ & 0x00000040) != 0);
    }
    /**
     * <pre>
     * Specifies the timeout for each individual message sent on the stream and
     * when the filter is running in synchronous mode. Whenever
     * the proxy sends a message on the stream that requires a response, it will
     * reset this timer, and will stop processing and return an error (subject
     * to the processing mode) if the timer expires before a matching response
     * is received. There is no timeout when the filter is running in asynchronous
     * mode. Default is 200 milliseconds.
     * </pre>
     *
     * <code>.google.protobuf.Duration message_timeout = 7;</code>
     * @return The messageTimeout.
     */
    public com.google.protobuf.Duration getMessageTimeout() {
      if (messageTimeoutBuilder_ == null) {
        return messageTimeout_ == null ? com.google.protobuf.Duration.getDefaultInstance() : messageTimeout_;
      } else {
        return messageTimeoutBuilder_.getMessage();
      }
    }
    /**
     * <pre>
     * Specifies the timeout for each individual message sent on the stream and
     * when the filter is running in synchronous mode. Whenever
     * the proxy sends a message on the stream that requires a response, it will
     * reset this timer, and will stop processing and return an error (subject
     * to the processing mode) if the timer expires before a matching response
     * is received. There is no timeout when the filter is running in asynchronous
     * mode. Default is 200 milliseconds.
     * </pre>
     *
     * <code>.google.protobuf.Duration message_timeout = 7;</code>
     */
    public Builder setMessageTimeout(com.google.protobuf.Duration value) {
      if (messageTimeoutBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        messageTimeout_ = value;
      } else {
        messageTimeoutBuilder_.setMessage(value);
      }
      bitField0_ |= 0x00000040;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * Specifies the timeout for each individual message sent on the stream and
     * when the filter is running in synchronous mode. Whenever
     * the proxy sends a message on the stream that requires a response, it will
     * reset this timer, and will stop processing and return an error (subject
     * to the processing mode) if the timer expires before a matching response
     * is received. There is no timeout when the filter is running in asynchronous
     * mode. Default is 200 milliseconds.
     * </pre>
     *
     * <code>.google.protobuf.Duration message_timeout = 7;</code>
     */
    public Builder setMessageTimeout(
        com.google.protobuf.Duration.Builder builderForValue) {
      if (messageTimeoutBuilder_ == null) {
        messageTimeout_ = builderForValue.build();
      } else {
        messageTimeoutBuilder_.setMessage(builderForValue.build());
      }
      bitField0_ |= 0x00000040;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * Specifies the timeout for each individual message sent on the stream and
     * when the filter is running in synchronous mode. Whenever
     * the proxy sends a message on the stream that requires a response, it will
     * reset this timer, and will stop processing and return an error (subject
     * to the processing mode) if the timer expires before a matching response
     * is received. There is no timeout when the filter is running in asynchronous
     * mode. Default is 200 milliseconds.
     * </pre>
     *
     * <code>.google.protobuf.Duration message_timeout = 7;</code>
     */
    public Builder mergeMessageTimeout(com.google.protobuf.Duration value) {
      if (messageTimeoutBuilder_ == null) {
        if (((bitField0_ & 0x00000040) != 0) &&
          messageTimeout_ != null &&
          messageTimeout_ != com.google.protobuf.Duration.getDefaultInstance()) {
          getMessageTimeoutBuilder().mergeFrom(value);
        } else {
          messageTimeout_ = value;
        }
      } else {
        messageTimeoutBuilder_.mergeFrom(value);
      }
      bitField0_ |= 0x00000040;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * Specifies the timeout for each individual message sent on the stream and
     * when the filter is running in synchronous mode. Whenever
     * the proxy sends a message on the stream that requires a response, it will
     * reset this timer, and will stop processing and return an error (subject
     * to the processing mode) if the timer expires before a matching response
     * is received. There is no timeout when the filter is running in asynchronous
     * mode. Default is 200 milliseconds.
     * </pre>
     *
     * <code>.google.protobuf.Duration message_timeout = 7;</code>
     */
    public Builder clearMessageTimeout() {
      bitField0_ = (bitField0_ & ~0x00000040);
      messageTimeout_ = null;
      if (messageTimeoutBuilder_ != null) {
        messageTimeoutBuilder_.dispose();
        messageTimeoutBuilder_ = null;
      }
      onChanged();
      return this;
    }
    /**
     * <pre>
     * Specifies the timeout for each individual message sent on the stream and
     * when the filter is running in synchronous mode. Whenever
     * the proxy sends a message on the stream that requires a response, it will
     * reset this timer, and will stop processing and return an error (subject
     * to the processing mode) if the timer expires before a matching response
     * is received. There is no timeout when the filter is running in asynchronous
     * mode. Default is 200 milliseconds.
     * </pre>
     *
     * <code>.google.protobuf.Duration message_timeout = 7;</code>
     */
    public com.google.protobuf.Duration.Builder getMessageTimeoutBuilder() {
      bitField0_ |= 0x00000040;
      onChanged();
      return getMessageTimeoutFieldBuilder().getBuilder();
    }
    /**
     * <pre>
     * Specifies the timeout for each individual message sent on the stream and
     * when the filter is running in synchronous mode. Whenever
     * the proxy sends a message on the stream that requires a response, it will
     * reset this timer, and will stop processing and return an error (subject
     * to the processing mode) if the timer expires before a matching response
     * is received. There is no timeout when the filter is running in asynchronous
     * mode. Default is 200 milliseconds.
     * </pre>
     *
     * <code>.google.protobuf.Duration message_timeout = 7;</code>
     */
    public com.google.protobuf.DurationOrBuilder getMessageTimeoutOrBuilder() {
      if (messageTimeoutBuilder_ != null) {
        return messageTimeoutBuilder_.getMessageOrBuilder();
      } else {
        return messageTimeout_ == null ?
            com.google.protobuf.Duration.getDefaultInstance() : messageTimeout_;
      }
    }
    /**
     * <pre>
     * Specifies the timeout for each individual message sent on the stream and
     * when the filter is running in synchronous mode. Whenever
     * the proxy sends a message on the stream that requires a response, it will
     * reset this timer, and will stop processing and return an error (subject
     * to the processing mode) if the timer expires before a matching response
     * is received. There is no timeout when the filter is running in asynchronous
     * mode. Default is 200 milliseconds.
     * </pre>
     *
     * <code>.google.protobuf.Duration message_timeout = 7;</code>
     */
    private com.google.protobuf.SingleFieldBuilderV3<
        com.google.protobuf.Duration, com.google.protobuf.Duration.Builder, com.google.protobuf.DurationOrBuilder> 
        getMessageTimeoutFieldBuilder() {
      if (messageTimeoutBuilder_ == null) {
        messageTimeoutBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
            com.google.protobuf.Duration, com.google.protobuf.Duration.Builder, com.google.protobuf.DurationOrBuilder>(
                getMessageTimeout(),
                getParentForChildren(),
                isClean());
        messageTimeout_ = null;
      }
      return messageTimeoutBuilder_;
    }

    private java.lang.Object statPrefix_ = "";
    /**
     * <pre>
     * Optional additional prefix to use when emitting statistics. This allows to distinguish
     * emitted statistics between configured *ext_proc* filters in an HTTP filter chain.
     * </pre>
     *
     * <code>string stat_prefix = 8;</code>
     * @return The statPrefix.
     */
    public java.lang.String getStatPrefix() {
      java.lang.Object ref = statPrefix_;
      if (!(ref instanceof java.lang.String)) {
        com.google.protobuf.ByteString bs =
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        statPrefix_ = s;
        return s;
      } else {
        return (java.lang.String) ref;
      }
    }
    /**
     * <pre>
     * Optional additional prefix to use when emitting statistics. This allows to distinguish
     * emitted statistics between configured *ext_proc* filters in an HTTP filter chain.
     * </pre>
     *
     * <code>string stat_prefix = 8;</code>
     * @return The bytes for statPrefix.
     */
    public com.google.protobuf.ByteString
        getStatPrefixBytes() {
      java.lang.Object ref = statPrefix_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        statPrefix_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }
    /**
     * <pre>
     * Optional additional prefix to use when emitting statistics. This allows to distinguish
     * emitted statistics between configured *ext_proc* filters in an HTTP filter chain.
     * </pre>
     *
     * <code>string stat_prefix = 8;</code>
     * @param value The statPrefix to set.
     * @return This builder for chaining.
     */
    public Builder setStatPrefix(
        java.lang.String value) {
      if (value == null) { throw new NullPointerException(); }
      statPrefix_ = value;
      bitField0_ |= 0x00000080;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * Optional additional prefix to use when emitting statistics. This allows to distinguish
     * emitted statistics between configured *ext_proc* filters in an HTTP filter chain.
     * </pre>
     *
     * <code>string stat_prefix = 8;</code>
     * @return This builder for chaining.
     */
    public Builder clearStatPrefix() {
      statPrefix_ = getDefaultInstance().getStatPrefix();
      bitField0_ = (bitField0_ & ~0x00000080);
      onChanged();
      return this;
    }
    /**
     * <pre>
     * Optional additional prefix to use when emitting statistics. This allows to distinguish
     * emitted statistics between configured *ext_proc* filters in an HTTP filter chain.
     * </pre>
     *
     * <code>string stat_prefix = 8;</code>
     * @param value The bytes for statPrefix to set.
     * @return This builder for chaining.
     */
    public Builder setStatPrefixBytes(
        com.google.protobuf.ByteString value) {
      if (value == null) { throw new NullPointerException(); }
      checkByteStringIsUtf8(value);
      statPrefix_ = value;
      bitField0_ |= 0x00000080;
      onChanged();
      return this;
    }

    private io.envoyproxy.envoy.config.common.mutation_rules.v3.HeaderMutationRules mutationRules_;
    private com.google.protobuf.SingleFieldBuilderV3<
        io.envoyproxy.envoy.config.common.mutation_rules.v3.HeaderMutationRules, io.envoyproxy.envoy.config.common.mutation_rules.v3.HeaderMutationRules.Builder, io.envoyproxy.envoy.config.common.mutation_rules.v3.HeaderMutationRulesOrBuilder> mutationRulesBuilder_;
    /**
     * <pre>
     * Rules that determine what modifications an external processing server may
     * make to message headers. If not set, all headers may be modified except
     * for "host", ":authority", ":scheme", ":method", and headers that start
     * with the header prefix set via
     * :ref:`header_prefix &lt;envoy_v3_api_field_config.bootstrap.v3.Bootstrap.header_prefix&gt;`
     * (which is usually "x-envoy").
     * Note that changing headers such as "host" or ":authority" may not in itself
     * change Envoy's routing decision, as routes can be cached. To also force the
     * route to be recomputed, set the
     * :ref:`clear_route_cache &lt;envoy_v3_api_field_service.ext_proc.v3.CommonResponse.clear_route_cache&gt;`
     * field to true in the same response.
     * </pre>
     *
     * <code>.envoy.config.common.mutation_rules.v3.HeaderMutationRules mutation_rules = 9;</code>
     * @return Whether the mutationRules field is set.
     */
    public boolean hasMutationRules() {
      return ((bitField0_ & 0x00000100) != 0);
    }
    /**
     * <pre>
     * Rules that determine what modifications an external processing server may
     * make to message headers. If not set, all headers may be modified except
     * for "host", ":authority", ":scheme", ":method", and headers that start
     * with the header prefix set via
     * :ref:`header_prefix &lt;envoy_v3_api_field_config.bootstrap.v3.Bootstrap.header_prefix&gt;`
     * (which is usually "x-envoy").
     * Note that changing headers such as "host" or ":authority" may not in itself
     * change Envoy's routing decision, as routes can be cached. To also force the
     * route to be recomputed, set the
     * :ref:`clear_route_cache &lt;envoy_v3_api_field_service.ext_proc.v3.CommonResponse.clear_route_cache&gt;`
     * field to true in the same response.
     * </pre>
     *
     * <code>.envoy.config.common.mutation_rules.v3.HeaderMutationRules mutation_rules = 9;</code>
     * @return The mutationRules.
     */
    public io.envoyproxy.envoy.config.common.mutation_rules.v3.HeaderMutationRules getMutationRules() {
      if (mutationRulesBuilder_ == null) {
        return mutationRules_ == null ? io.envoyproxy.envoy.config.common.mutation_rules.v3.HeaderMutationRules.getDefaultInstance() : mutationRules_;
      } else {
        return mutationRulesBuilder_.getMessage();
      }
    }
    /**
     * <pre>
     * Rules that determine what modifications an external processing server may
     * make to message headers. If not set, all headers may be modified except
     * for "host", ":authority", ":scheme", ":method", and headers that start
     * with the header prefix set via
     * :ref:`header_prefix &lt;envoy_v3_api_field_config.bootstrap.v3.Bootstrap.header_prefix&gt;`
     * (which is usually "x-envoy").
     * Note that changing headers such as "host" or ":authority" may not in itself
     * change Envoy's routing decision, as routes can be cached. To also force the
     * route to be recomputed, set the
     * :ref:`clear_route_cache &lt;envoy_v3_api_field_service.ext_proc.v3.CommonResponse.clear_route_cache&gt;`
     * field to true in the same response.
     * </pre>
     *
     * <code>.envoy.config.common.mutation_rules.v3.HeaderMutationRules mutation_rules = 9;</code>
     */
    public Builder setMutationRules(io.envoyproxy.envoy.config.common.mutation_rules.v3.HeaderMutationRules value) {
      if (mutationRulesBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        mutationRules_ = value;
      } else {
        mutationRulesBuilder_.setMessage(value);
      }
      bitField0_ |= 0x00000100;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * Rules that determine what modifications an external processing server may
     * make to message headers. If not set, all headers may be modified except
     * for "host", ":authority", ":scheme", ":method", and headers that start
     * with the header prefix set via
     * :ref:`header_prefix &lt;envoy_v3_api_field_config.bootstrap.v3.Bootstrap.header_prefix&gt;`
     * (which is usually "x-envoy").
     * Note that changing headers such as "host" or ":authority" may not in itself
     * change Envoy's routing decision, as routes can be cached. To also force the
     * route to be recomputed, set the
     * :ref:`clear_route_cache &lt;envoy_v3_api_field_service.ext_proc.v3.CommonResponse.clear_route_cache&gt;`
     * field to true in the same response.
     * </pre>
     *
     * <code>.envoy.config.common.mutation_rules.v3.HeaderMutationRules mutation_rules = 9;</code>
     */
    public Builder setMutationRules(
        io.envoyproxy.envoy.config.common.mutation_rules.v3.HeaderMutationRules.Builder builderForValue) {
      if (mutationRulesBuilder_ == null) {
        mutationRules_ = builderForValue.build();
      } else {
        mutationRulesBuilder_.setMessage(builderForValue.build());
      }
      bitField0_ |= 0x00000100;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * Rules that determine what modifications an external processing server may
     * make to message headers. If not set, all headers may be modified except
     * for "host", ":authority", ":scheme", ":method", and headers that start
     * with the header prefix set via
     * :ref:`header_prefix &lt;envoy_v3_api_field_config.bootstrap.v3.Bootstrap.header_prefix&gt;`
     * (which is usually "x-envoy").
     * Note that changing headers such as "host" or ":authority" may not in itself
     * change Envoy's routing decision, as routes can be cached. To also force the
     * route to be recomputed, set the
     * :ref:`clear_route_cache &lt;envoy_v3_api_field_service.ext_proc.v3.CommonResponse.clear_route_cache&gt;`
     * field to true in the same response.
     * </pre>
     *
     * <code>.envoy.config.common.mutation_rules.v3.HeaderMutationRules mutation_rules = 9;</code>
     */
    public Builder mergeMutationRules(io.envoyproxy.envoy.config.common.mutation_rules.v3.HeaderMutationRules value) {
      if (mutationRulesBuilder_ == null) {
        if (((bitField0_ & 0x00000100) != 0) &&
          mutationRules_ != null &&
          mutationRules_ != io.envoyproxy.envoy.config.common.mutation_rules.v3.HeaderMutationRules.getDefaultInstance()) {
          getMutationRulesBuilder().mergeFrom(value);
        } else {
          mutationRules_ = value;
        }
      } else {
        mutationRulesBuilder_.mergeFrom(value);
      }
      bitField0_ |= 0x00000100;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * Rules that determine what modifications an external processing server may
     * make to message headers. If not set, all headers may be modified except
     * for "host", ":authority", ":scheme", ":method", and headers that start
     * with the header prefix set via
     * :ref:`header_prefix &lt;envoy_v3_api_field_config.bootstrap.v3.Bootstrap.header_prefix&gt;`
     * (which is usually "x-envoy").
     * Note that changing headers such as "host" or ":authority" may not in itself
     * change Envoy's routing decision, as routes can be cached. To also force the
     * route to be recomputed, set the
     * :ref:`clear_route_cache &lt;envoy_v3_api_field_service.ext_proc.v3.CommonResponse.clear_route_cache&gt;`
     * field to true in the same response.
     * </pre>
     *
     * <code>.envoy.config.common.mutation_rules.v3.HeaderMutationRules mutation_rules = 9;</code>
     */
    public Builder clearMutationRules() {
      bitField0_ = (bitField0_ & ~0x00000100);
      mutationRules_ = null;
      if (mutationRulesBuilder_ != null) {
        mutationRulesBuilder_.dispose();
        mutationRulesBuilder_ = null;
      }
      onChanged();
      return this;
    }
    /**
     * <pre>
     * Rules that determine what modifications an external processing server may
     * make to message headers. If not set, all headers may be modified except
     * for "host", ":authority", ":scheme", ":method", and headers that start
     * with the header prefix set via
     * :ref:`header_prefix &lt;envoy_v3_api_field_config.bootstrap.v3.Bootstrap.header_prefix&gt;`
     * (which is usually "x-envoy").
     * Note that changing headers such as "host" or ":authority" may not in itself
     * change Envoy's routing decision, as routes can be cached. To also force the
     * route to be recomputed, set the
     * :ref:`clear_route_cache &lt;envoy_v3_api_field_service.ext_proc.v3.CommonResponse.clear_route_cache&gt;`
     * field to true in the same response.
     * </pre>
     *
     * <code>.envoy.config.common.mutation_rules.v3.HeaderMutationRules mutation_rules = 9;</code>
     */
    public io.envoyproxy.envoy.config.common.mutation_rules.v3.HeaderMutationRules.Builder getMutationRulesBuilder() {
      bitField0_ |= 0x00000100;
      onChanged();
      return getMutationRulesFieldBuilder().getBuilder();
    }
    /**
     * <pre>
     * Rules that determine what modifications an external processing server may
     * make to message headers. If not set, all headers may be modified except
     * for "host", ":authority", ":scheme", ":method", and headers that start
     * with the header prefix set via
     * :ref:`header_prefix &lt;envoy_v3_api_field_config.bootstrap.v3.Bootstrap.header_prefix&gt;`
     * (which is usually "x-envoy").
     * Note that changing headers such as "host" or ":authority" may not in itself
     * change Envoy's routing decision, as routes can be cached. To also force the
     * route to be recomputed, set the
     * :ref:`clear_route_cache &lt;envoy_v3_api_field_service.ext_proc.v3.CommonResponse.clear_route_cache&gt;`
     * field to true in the same response.
     * </pre>
     *
     * <code>.envoy.config.common.mutation_rules.v3.HeaderMutationRules mutation_rules = 9;</code>
     */
    public io.envoyproxy.envoy.config.common.mutation_rules.v3.HeaderMutationRulesOrBuilder getMutationRulesOrBuilder() {
      if (mutationRulesBuilder_ != null) {
        return mutationRulesBuilder_.getMessageOrBuilder();
      } else {
        return mutationRules_ == null ?
            io.envoyproxy.envoy.config.common.mutation_rules.v3.HeaderMutationRules.getDefaultInstance() : mutationRules_;
      }
    }
    /**
     * <pre>
     * Rules that determine what modifications an external processing server may
     * make to message headers. If not set, all headers may be modified except
     * for "host", ":authority", ":scheme", ":method", and headers that start
     * with the header prefix set via
     * :ref:`header_prefix &lt;envoy_v3_api_field_config.bootstrap.v3.Bootstrap.header_prefix&gt;`
     * (which is usually "x-envoy").
     * Note that changing headers such as "host" or ":authority" may not in itself
     * change Envoy's routing decision, as routes can be cached. To also force the
     * route to be recomputed, set the
     * :ref:`clear_route_cache &lt;envoy_v3_api_field_service.ext_proc.v3.CommonResponse.clear_route_cache&gt;`
     * field to true in the same response.
     * </pre>
     *
     * <code>.envoy.config.common.mutation_rules.v3.HeaderMutationRules mutation_rules = 9;</code>
     */
    private com.google.protobuf.SingleFieldBuilderV3<
        io.envoyproxy.envoy.config.common.mutation_rules.v3.HeaderMutationRules, io.envoyproxy.envoy.config.common.mutation_rules.v3.HeaderMutationRules.Builder, io.envoyproxy.envoy.config.common.mutation_rules.v3.HeaderMutationRulesOrBuilder> 
        getMutationRulesFieldBuilder() {
      if (mutationRulesBuilder_ == null) {
        mutationRulesBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
            io.envoyproxy.envoy.config.common.mutation_rules.v3.HeaderMutationRules, io.envoyproxy.envoy.config.common.mutation_rules.v3.HeaderMutationRules.Builder, io.envoyproxy.envoy.config.common.mutation_rules.v3.HeaderMutationRulesOrBuilder>(
                getMutationRules(),
                getParentForChildren(),
                isClean());
        mutationRules_ = null;
      }
      return mutationRulesBuilder_;
    }
    @java.lang.Override
    public final Builder setUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return super.setUnknownFields(unknownFields);
    }

    @java.lang.Override
    public final Builder mergeUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return super.mergeUnknownFields(unknownFields);
    }


    // @@protoc_insertion_point(builder_scope:envoy.extensions.filters.http.ext_proc.v3.ExternalProcessor)
  }

  // @@protoc_insertion_point(class_scope:envoy.extensions.filters.http.ext_proc.v3.ExternalProcessor)
  private static final io.envoyproxy.envoy.extensions.filters.http.ext_proc.v3.ExternalProcessor DEFAULT_INSTANCE;
  static {
    DEFAULT_INSTANCE = new io.envoyproxy.envoy.extensions.filters.http.ext_proc.v3.ExternalProcessor();
  }

  public static io.envoyproxy.envoy.extensions.filters.http.ext_proc.v3.ExternalProcessor getDefaultInstance() {
    return DEFAULT_INSTANCE;
  }

  private static final com.google.protobuf.Parser<ExternalProcessor>
      PARSER = new com.google.protobuf.AbstractParser<ExternalProcessor>() {
    @java.lang.Override
    public ExternalProcessor parsePartialFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      Builder builder = newBuilder();
      try {
        builder.mergeFrom(input, extensionRegistry);
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(builder.buildPartial());
      } catch (com.google.protobuf.UninitializedMessageException e) {
        throw e.asInvalidProtocolBufferException().setUnfinishedMessage(builder.buildPartial());
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(e)
            .setUnfinishedMessage(builder.buildPartial());
      }
      return builder.buildPartial();
    }
  };

  public static com.google.protobuf.Parser<ExternalProcessor> parser() {
    return PARSER;
  }

  @java.lang.Override
  public com.google.protobuf.Parser<ExternalProcessor> getParserForType() {
    return PARSER;
  }

  @java.lang.Override
  public io.envoyproxy.envoy.extensions.filters.http.ext_proc.v3.ExternalProcessor getDefaultInstanceForType() {
    return DEFAULT_INSTANCE;
  }

}

