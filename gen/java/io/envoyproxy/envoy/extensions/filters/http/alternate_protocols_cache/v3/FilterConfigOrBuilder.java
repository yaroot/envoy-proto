// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: envoy/extensions/filters/http/alternate_protocols_cache/v3/alternate_protocols_cache.proto

package io.envoyproxy.envoy.extensions.filters.http.alternate_protocols_cache.v3;

public interface FilterConfigOrBuilder extends
    // @@protoc_insertion_point(interface_extends:envoy.extensions.filters.http.alternate_protocols_cache.v3.FilterConfig)
    com.google.protobuf.MessageOrBuilder {

  /**
   * <pre>
   * If set, causes the use of the alternate protocols cache, which is responsible for
   * parsing and caching HTTP Alt-Svc headers. This enables the use of HTTP/3 for upstream
   * servers that advertise supporting it.
   * TODO(RyanTheOptimist): Make this field required when HTTP/3 is enabled via auto_http.
   * </pre>
   *
   * <code>.envoy.config.core.v3.AlternateProtocolsCacheOptions alternate_protocols_cache_options = 1;</code>
   * @return Whether the alternateProtocolsCacheOptions field is set.
   */
  boolean hasAlternateProtocolsCacheOptions();
  /**
   * <pre>
   * If set, causes the use of the alternate protocols cache, which is responsible for
   * parsing and caching HTTP Alt-Svc headers. This enables the use of HTTP/3 for upstream
   * servers that advertise supporting it.
   * TODO(RyanTheOptimist): Make this field required when HTTP/3 is enabled via auto_http.
   * </pre>
   *
   * <code>.envoy.config.core.v3.AlternateProtocolsCacheOptions alternate_protocols_cache_options = 1;</code>
   * @return The alternateProtocolsCacheOptions.
   */
  io.envoyproxy.envoy.config.core.v3.AlternateProtocolsCacheOptions getAlternateProtocolsCacheOptions();
  /**
   * <pre>
   * If set, causes the use of the alternate protocols cache, which is responsible for
   * parsing and caching HTTP Alt-Svc headers. This enables the use of HTTP/3 for upstream
   * servers that advertise supporting it.
   * TODO(RyanTheOptimist): Make this field required when HTTP/3 is enabled via auto_http.
   * </pre>
   *
   * <code>.envoy.config.core.v3.AlternateProtocolsCacheOptions alternate_protocols_cache_options = 1;</code>
   */
  io.envoyproxy.envoy.config.core.v3.AlternateProtocolsCacheOptionsOrBuilder getAlternateProtocolsCacheOptionsOrBuilder();
}
