// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: envoy/extensions/filters/http/ext_authz/v3/ext_authz.proto

package io.envoyproxy.envoy.extensions.filters.http.ext_authz.v3;

/**
 * <pre>
 * [#next-free-field: 6]
 * </pre>
 *
 * Protobuf type {@code envoy.extensions.filters.http.ext_authz.v3.AuthorizationResponse}
 */
public final class AuthorizationResponse extends
    com.google.protobuf.GeneratedMessageV3 implements
    // @@protoc_insertion_point(message_implements:envoy.extensions.filters.http.ext_authz.v3.AuthorizationResponse)
    AuthorizationResponseOrBuilder {
private static final long serialVersionUID = 0L;
  // Use AuthorizationResponse.newBuilder() to construct.
  private AuthorizationResponse(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
    super(builder);
  }
  private AuthorizationResponse() {
  }

  @java.lang.Override
  @SuppressWarnings({"unused"})
  protected java.lang.Object newInstance(
      UnusedPrivateParameter unused) {
    return new AuthorizationResponse();
  }

  @java.lang.Override
  public final com.google.protobuf.UnknownFieldSet
  getUnknownFields() {
    return this.unknownFields;
  }
  public static final com.google.protobuf.Descriptors.Descriptor
      getDescriptor() {
    return io.envoyproxy.envoy.extensions.filters.http.ext_authz.v3.ExtAuthzProto.internal_static_envoy_extensions_filters_http_ext_authz_v3_AuthorizationResponse_descriptor;
  }

  @java.lang.Override
  protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internalGetFieldAccessorTable() {
    return io.envoyproxy.envoy.extensions.filters.http.ext_authz.v3.ExtAuthzProto.internal_static_envoy_extensions_filters_http_ext_authz_v3_AuthorizationResponse_fieldAccessorTable
        .ensureFieldAccessorsInitialized(
            io.envoyproxy.envoy.extensions.filters.http.ext_authz.v3.AuthorizationResponse.class, io.envoyproxy.envoy.extensions.filters.http.ext_authz.v3.AuthorizationResponse.Builder.class);
  }

  public static final int ALLOWED_UPSTREAM_HEADERS_FIELD_NUMBER = 1;
  private io.envoyproxy.envoy.type.matcher.v3.ListStringMatcher allowedUpstreamHeaders_;
  /**
   * <pre>
   * When this :ref:`list &lt;envoy_v3_api_msg_type.matcher.v3.ListStringMatcher&gt;` is set, authorization
   * response headers that have a correspondent match will be added to the original client request.
   * Note that coexistent headers will be overridden.
   * </pre>
   *
   * <code>.envoy.type.matcher.v3.ListStringMatcher allowed_upstream_headers = 1;</code>
   * @return Whether the allowedUpstreamHeaders field is set.
   */
  @java.lang.Override
  public boolean hasAllowedUpstreamHeaders() {
    return allowedUpstreamHeaders_ != null;
  }
  /**
   * <pre>
   * When this :ref:`list &lt;envoy_v3_api_msg_type.matcher.v3.ListStringMatcher&gt;` is set, authorization
   * response headers that have a correspondent match will be added to the original client request.
   * Note that coexistent headers will be overridden.
   * </pre>
   *
   * <code>.envoy.type.matcher.v3.ListStringMatcher allowed_upstream_headers = 1;</code>
   * @return The allowedUpstreamHeaders.
   */
  @java.lang.Override
  public io.envoyproxy.envoy.type.matcher.v3.ListStringMatcher getAllowedUpstreamHeaders() {
    return allowedUpstreamHeaders_ == null ? io.envoyproxy.envoy.type.matcher.v3.ListStringMatcher.getDefaultInstance() : allowedUpstreamHeaders_;
  }
  /**
   * <pre>
   * When this :ref:`list &lt;envoy_v3_api_msg_type.matcher.v3.ListStringMatcher&gt;` is set, authorization
   * response headers that have a correspondent match will be added to the original client request.
   * Note that coexistent headers will be overridden.
   * </pre>
   *
   * <code>.envoy.type.matcher.v3.ListStringMatcher allowed_upstream_headers = 1;</code>
   */
  @java.lang.Override
  public io.envoyproxy.envoy.type.matcher.v3.ListStringMatcherOrBuilder getAllowedUpstreamHeadersOrBuilder() {
    return allowedUpstreamHeaders_ == null ? io.envoyproxy.envoy.type.matcher.v3.ListStringMatcher.getDefaultInstance() : allowedUpstreamHeaders_;
  }

  public static final int ALLOWED_UPSTREAM_HEADERS_TO_APPEND_FIELD_NUMBER = 3;
  private io.envoyproxy.envoy.type.matcher.v3.ListStringMatcher allowedUpstreamHeadersToAppend_;
  /**
   * <pre>
   * When this :ref:`list &lt;envoy_v3_api_msg_type.matcher.v3.ListStringMatcher&gt;` is set, authorization
   * response headers that have a correspondent match will be added to the client's response. Note
   * that coexistent headers will be appended.
   * </pre>
   *
   * <code>.envoy.type.matcher.v3.ListStringMatcher allowed_upstream_headers_to_append = 3;</code>
   * @return Whether the allowedUpstreamHeadersToAppend field is set.
   */
  @java.lang.Override
  public boolean hasAllowedUpstreamHeadersToAppend() {
    return allowedUpstreamHeadersToAppend_ != null;
  }
  /**
   * <pre>
   * When this :ref:`list &lt;envoy_v3_api_msg_type.matcher.v3.ListStringMatcher&gt;` is set, authorization
   * response headers that have a correspondent match will be added to the client's response. Note
   * that coexistent headers will be appended.
   * </pre>
   *
   * <code>.envoy.type.matcher.v3.ListStringMatcher allowed_upstream_headers_to_append = 3;</code>
   * @return The allowedUpstreamHeadersToAppend.
   */
  @java.lang.Override
  public io.envoyproxy.envoy.type.matcher.v3.ListStringMatcher getAllowedUpstreamHeadersToAppend() {
    return allowedUpstreamHeadersToAppend_ == null ? io.envoyproxy.envoy.type.matcher.v3.ListStringMatcher.getDefaultInstance() : allowedUpstreamHeadersToAppend_;
  }
  /**
   * <pre>
   * When this :ref:`list &lt;envoy_v3_api_msg_type.matcher.v3.ListStringMatcher&gt;` is set, authorization
   * response headers that have a correspondent match will be added to the client's response. Note
   * that coexistent headers will be appended.
   * </pre>
   *
   * <code>.envoy.type.matcher.v3.ListStringMatcher allowed_upstream_headers_to_append = 3;</code>
   */
  @java.lang.Override
  public io.envoyproxy.envoy.type.matcher.v3.ListStringMatcherOrBuilder getAllowedUpstreamHeadersToAppendOrBuilder() {
    return allowedUpstreamHeadersToAppend_ == null ? io.envoyproxy.envoy.type.matcher.v3.ListStringMatcher.getDefaultInstance() : allowedUpstreamHeadersToAppend_;
  }

  public static final int ALLOWED_CLIENT_HEADERS_FIELD_NUMBER = 2;
  private io.envoyproxy.envoy.type.matcher.v3.ListStringMatcher allowedClientHeaders_;
  /**
   * <pre>
   * When this :ref:`list &lt;envoy_v3_api_msg_type.matcher.v3.ListStringMatcher&gt;` is set, authorization
   * response headers that have a correspondent match will be added to the client's response. Note
   * that when this list is *not* set, all the authorization response headers, except ``Authority
   * (Host)`` will be in the response to the client. When a header is included in this list, ``Path``,
   * ``Status``, ``Content-Length``, ``WWWAuthenticate`` and ``Location`` are automatically added.
   * </pre>
   *
   * <code>.envoy.type.matcher.v3.ListStringMatcher allowed_client_headers = 2;</code>
   * @return Whether the allowedClientHeaders field is set.
   */
  @java.lang.Override
  public boolean hasAllowedClientHeaders() {
    return allowedClientHeaders_ != null;
  }
  /**
   * <pre>
   * When this :ref:`list &lt;envoy_v3_api_msg_type.matcher.v3.ListStringMatcher&gt;` is set, authorization
   * response headers that have a correspondent match will be added to the client's response. Note
   * that when this list is *not* set, all the authorization response headers, except ``Authority
   * (Host)`` will be in the response to the client. When a header is included in this list, ``Path``,
   * ``Status``, ``Content-Length``, ``WWWAuthenticate`` and ``Location`` are automatically added.
   * </pre>
   *
   * <code>.envoy.type.matcher.v3.ListStringMatcher allowed_client_headers = 2;</code>
   * @return The allowedClientHeaders.
   */
  @java.lang.Override
  public io.envoyproxy.envoy.type.matcher.v3.ListStringMatcher getAllowedClientHeaders() {
    return allowedClientHeaders_ == null ? io.envoyproxy.envoy.type.matcher.v3.ListStringMatcher.getDefaultInstance() : allowedClientHeaders_;
  }
  /**
   * <pre>
   * When this :ref:`list &lt;envoy_v3_api_msg_type.matcher.v3.ListStringMatcher&gt;` is set, authorization
   * response headers that have a correspondent match will be added to the client's response. Note
   * that when this list is *not* set, all the authorization response headers, except ``Authority
   * (Host)`` will be in the response to the client. When a header is included in this list, ``Path``,
   * ``Status``, ``Content-Length``, ``WWWAuthenticate`` and ``Location`` are automatically added.
   * </pre>
   *
   * <code>.envoy.type.matcher.v3.ListStringMatcher allowed_client_headers = 2;</code>
   */
  @java.lang.Override
  public io.envoyproxy.envoy.type.matcher.v3.ListStringMatcherOrBuilder getAllowedClientHeadersOrBuilder() {
    return allowedClientHeaders_ == null ? io.envoyproxy.envoy.type.matcher.v3.ListStringMatcher.getDefaultInstance() : allowedClientHeaders_;
  }

  public static final int ALLOWED_CLIENT_HEADERS_ON_SUCCESS_FIELD_NUMBER = 4;
  private io.envoyproxy.envoy.type.matcher.v3.ListStringMatcher allowedClientHeadersOnSuccess_;
  /**
   * <pre>
   * When this :ref:`list &lt;envoy_v3_api_msg_type.matcher.v3.ListStringMatcher&gt;` is set, authorization
   * response headers that have a correspondent match will be added to the client's response when
   * the authorization response itself is successful, i.e. not failed or denied. When this list is
   * *not* set, no additional headers will be added to the client's response on success.
   * </pre>
   *
   * <code>.envoy.type.matcher.v3.ListStringMatcher allowed_client_headers_on_success = 4;</code>
   * @return Whether the allowedClientHeadersOnSuccess field is set.
   */
  @java.lang.Override
  public boolean hasAllowedClientHeadersOnSuccess() {
    return allowedClientHeadersOnSuccess_ != null;
  }
  /**
   * <pre>
   * When this :ref:`list &lt;envoy_v3_api_msg_type.matcher.v3.ListStringMatcher&gt;` is set, authorization
   * response headers that have a correspondent match will be added to the client's response when
   * the authorization response itself is successful, i.e. not failed or denied. When this list is
   * *not* set, no additional headers will be added to the client's response on success.
   * </pre>
   *
   * <code>.envoy.type.matcher.v3.ListStringMatcher allowed_client_headers_on_success = 4;</code>
   * @return The allowedClientHeadersOnSuccess.
   */
  @java.lang.Override
  public io.envoyproxy.envoy.type.matcher.v3.ListStringMatcher getAllowedClientHeadersOnSuccess() {
    return allowedClientHeadersOnSuccess_ == null ? io.envoyproxy.envoy.type.matcher.v3.ListStringMatcher.getDefaultInstance() : allowedClientHeadersOnSuccess_;
  }
  /**
   * <pre>
   * When this :ref:`list &lt;envoy_v3_api_msg_type.matcher.v3.ListStringMatcher&gt;` is set, authorization
   * response headers that have a correspondent match will be added to the client's response when
   * the authorization response itself is successful, i.e. not failed or denied. When this list is
   * *not* set, no additional headers will be added to the client's response on success.
   * </pre>
   *
   * <code>.envoy.type.matcher.v3.ListStringMatcher allowed_client_headers_on_success = 4;</code>
   */
  @java.lang.Override
  public io.envoyproxy.envoy.type.matcher.v3.ListStringMatcherOrBuilder getAllowedClientHeadersOnSuccessOrBuilder() {
    return allowedClientHeadersOnSuccess_ == null ? io.envoyproxy.envoy.type.matcher.v3.ListStringMatcher.getDefaultInstance() : allowedClientHeadersOnSuccess_;
  }

  public static final int DYNAMIC_METADATA_FROM_HEADERS_FIELD_NUMBER = 5;
  private io.envoyproxy.envoy.type.matcher.v3.ListStringMatcher dynamicMetadataFromHeaders_;
  /**
   * <pre>
   * When this :ref:`list &lt;envoy_v3_api_msg_type.matcher.v3.ListStringMatcher&gt;` is set, authorization
   * response headers that have a correspondent match will be emitted as dynamic metadata to be consumed
   * by the next filter. This metadata lives in a namespace specified by the canonical name of extension filter
   * that requires it:
   * - :ref:`envoy.filters.http.ext_authz &lt;config_http_filters_ext_authz_dynamic_metadata&gt;` for HTTP filter.
   * - :ref:`envoy.filters.network.ext_authz &lt;config_network_filters_ext_authz_dynamic_metadata&gt;` for network filter.
   * </pre>
   *
   * <code>.envoy.type.matcher.v3.ListStringMatcher dynamic_metadata_from_headers = 5;</code>
   * @return Whether the dynamicMetadataFromHeaders field is set.
   */
  @java.lang.Override
  public boolean hasDynamicMetadataFromHeaders() {
    return dynamicMetadataFromHeaders_ != null;
  }
  /**
   * <pre>
   * When this :ref:`list &lt;envoy_v3_api_msg_type.matcher.v3.ListStringMatcher&gt;` is set, authorization
   * response headers that have a correspondent match will be emitted as dynamic metadata to be consumed
   * by the next filter. This metadata lives in a namespace specified by the canonical name of extension filter
   * that requires it:
   * - :ref:`envoy.filters.http.ext_authz &lt;config_http_filters_ext_authz_dynamic_metadata&gt;` for HTTP filter.
   * - :ref:`envoy.filters.network.ext_authz &lt;config_network_filters_ext_authz_dynamic_metadata&gt;` for network filter.
   * </pre>
   *
   * <code>.envoy.type.matcher.v3.ListStringMatcher dynamic_metadata_from_headers = 5;</code>
   * @return The dynamicMetadataFromHeaders.
   */
  @java.lang.Override
  public io.envoyproxy.envoy.type.matcher.v3.ListStringMatcher getDynamicMetadataFromHeaders() {
    return dynamicMetadataFromHeaders_ == null ? io.envoyproxy.envoy.type.matcher.v3.ListStringMatcher.getDefaultInstance() : dynamicMetadataFromHeaders_;
  }
  /**
   * <pre>
   * When this :ref:`list &lt;envoy_v3_api_msg_type.matcher.v3.ListStringMatcher&gt;` is set, authorization
   * response headers that have a correspondent match will be emitted as dynamic metadata to be consumed
   * by the next filter. This metadata lives in a namespace specified by the canonical name of extension filter
   * that requires it:
   * - :ref:`envoy.filters.http.ext_authz &lt;config_http_filters_ext_authz_dynamic_metadata&gt;` for HTTP filter.
   * - :ref:`envoy.filters.network.ext_authz &lt;config_network_filters_ext_authz_dynamic_metadata&gt;` for network filter.
   * </pre>
   *
   * <code>.envoy.type.matcher.v3.ListStringMatcher dynamic_metadata_from_headers = 5;</code>
   */
  @java.lang.Override
  public io.envoyproxy.envoy.type.matcher.v3.ListStringMatcherOrBuilder getDynamicMetadataFromHeadersOrBuilder() {
    return dynamicMetadataFromHeaders_ == null ? io.envoyproxy.envoy.type.matcher.v3.ListStringMatcher.getDefaultInstance() : dynamicMetadataFromHeaders_;
  }

  private byte memoizedIsInitialized = -1;
  @java.lang.Override
  public final boolean isInitialized() {
    byte isInitialized = memoizedIsInitialized;
    if (isInitialized == 1) return true;
    if (isInitialized == 0) return false;

    memoizedIsInitialized = 1;
    return true;
  }

  @java.lang.Override
  public void writeTo(com.google.protobuf.CodedOutputStream output)
                      throws java.io.IOException {
    if (allowedUpstreamHeaders_ != null) {
      output.writeMessage(1, getAllowedUpstreamHeaders());
    }
    if (allowedClientHeaders_ != null) {
      output.writeMessage(2, getAllowedClientHeaders());
    }
    if (allowedUpstreamHeadersToAppend_ != null) {
      output.writeMessage(3, getAllowedUpstreamHeadersToAppend());
    }
    if (allowedClientHeadersOnSuccess_ != null) {
      output.writeMessage(4, getAllowedClientHeadersOnSuccess());
    }
    if (dynamicMetadataFromHeaders_ != null) {
      output.writeMessage(5, getDynamicMetadataFromHeaders());
    }
    getUnknownFields().writeTo(output);
  }

  @java.lang.Override
  public int getSerializedSize() {
    int size = memoizedSize;
    if (size != -1) return size;

    size = 0;
    if (allowedUpstreamHeaders_ != null) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(1, getAllowedUpstreamHeaders());
    }
    if (allowedClientHeaders_ != null) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(2, getAllowedClientHeaders());
    }
    if (allowedUpstreamHeadersToAppend_ != null) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(3, getAllowedUpstreamHeadersToAppend());
    }
    if (allowedClientHeadersOnSuccess_ != null) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(4, getAllowedClientHeadersOnSuccess());
    }
    if (dynamicMetadataFromHeaders_ != null) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(5, getDynamicMetadataFromHeaders());
    }
    size += getUnknownFields().getSerializedSize();
    memoizedSize = size;
    return size;
  }

  @java.lang.Override
  public boolean equals(final java.lang.Object obj) {
    if (obj == this) {
     return true;
    }
    if (!(obj instanceof io.envoyproxy.envoy.extensions.filters.http.ext_authz.v3.AuthorizationResponse)) {
      return super.equals(obj);
    }
    io.envoyproxy.envoy.extensions.filters.http.ext_authz.v3.AuthorizationResponse other = (io.envoyproxy.envoy.extensions.filters.http.ext_authz.v3.AuthorizationResponse) obj;

    if (hasAllowedUpstreamHeaders() != other.hasAllowedUpstreamHeaders()) return false;
    if (hasAllowedUpstreamHeaders()) {
      if (!getAllowedUpstreamHeaders()
          .equals(other.getAllowedUpstreamHeaders())) return false;
    }
    if (hasAllowedUpstreamHeadersToAppend() != other.hasAllowedUpstreamHeadersToAppend()) return false;
    if (hasAllowedUpstreamHeadersToAppend()) {
      if (!getAllowedUpstreamHeadersToAppend()
          .equals(other.getAllowedUpstreamHeadersToAppend())) return false;
    }
    if (hasAllowedClientHeaders() != other.hasAllowedClientHeaders()) return false;
    if (hasAllowedClientHeaders()) {
      if (!getAllowedClientHeaders()
          .equals(other.getAllowedClientHeaders())) return false;
    }
    if (hasAllowedClientHeadersOnSuccess() != other.hasAllowedClientHeadersOnSuccess()) return false;
    if (hasAllowedClientHeadersOnSuccess()) {
      if (!getAllowedClientHeadersOnSuccess()
          .equals(other.getAllowedClientHeadersOnSuccess())) return false;
    }
    if (hasDynamicMetadataFromHeaders() != other.hasDynamicMetadataFromHeaders()) return false;
    if (hasDynamicMetadataFromHeaders()) {
      if (!getDynamicMetadataFromHeaders()
          .equals(other.getDynamicMetadataFromHeaders())) return false;
    }
    if (!getUnknownFields().equals(other.getUnknownFields())) return false;
    return true;
  }

  @java.lang.Override
  public int hashCode() {
    if (memoizedHashCode != 0) {
      return memoizedHashCode;
    }
    int hash = 41;
    hash = (19 * hash) + getDescriptor().hashCode();
    if (hasAllowedUpstreamHeaders()) {
      hash = (37 * hash) + ALLOWED_UPSTREAM_HEADERS_FIELD_NUMBER;
      hash = (53 * hash) + getAllowedUpstreamHeaders().hashCode();
    }
    if (hasAllowedUpstreamHeadersToAppend()) {
      hash = (37 * hash) + ALLOWED_UPSTREAM_HEADERS_TO_APPEND_FIELD_NUMBER;
      hash = (53 * hash) + getAllowedUpstreamHeadersToAppend().hashCode();
    }
    if (hasAllowedClientHeaders()) {
      hash = (37 * hash) + ALLOWED_CLIENT_HEADERS_FIELD_NUMBER;
      hash = (53 * hash) + getAllowedClientHeaders().hashCode();
    }
    if (hasAllowedClientHeadersOnSuccess()) {
      hash = (37 * hash) + ALLOWED_CLIENT_HEADERS_ON_SUCCESS_FIELD_NUMBER;
      hash = (53 * hash) + getAllowedClientHeadersOnSuccess().hashCode();
    }
    if (hasDynamicMetadataFromHeaders()) {
      hash = (37 * hash) + DYNAMIC_METADATA_FROM_HEADERS_FIELD_NUMBER;
      hash = (53 * hash) + getDynamicMetadataFromHeaders().hashCode();
    }
    hash = (29 * hash) + getUnknownFields().hashCode();
    memoizedHashCode = hash;
    return hash;
  }

  public static io.envoyproxy.envoy.extensions.filters.http.ext_authz.v3.AuthorizationResponse parseFrom(
      java.nio.ByteBuffer data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static io.envoyproxy.envoy.extensions.filters.http.ext_authz.v3.AuthorizationResponse parseFrom(
      java.nio.ByteBuffer data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static io.envoyproxy.envoy.extensions.filters.http.ext_authz.v3.AuthorizationResponse parseFrom(
      com.google.protobuf.ByteString data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static io.envoyproxy.envoy.extensions.filters.http.ext_authz.v3.AuthorizationResponse parseFrom(
      com.google.protobuf.ByteString data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static io.envoyproxy.envoy.extensions.filters.http.ext_authz.v3.AuthorizationResponse parseFrom(byte[] data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static io.envoyproxy.envoy.extensions.filters.http.ext_authz.v3.AuthorizationResponse parseFrom(
      byte[] data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static io.envoyproxy.envoy.extensions.filters.http.ext_authz.v3.AuthorizationResponse parseFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input);
  }
  public static io.envoyproxy.envoy.extensions.filters.http.ext_authz.v3.AuthorizationResponse parseFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input, extensionRegistry);
  }
  public static io.envoyproxy.envoy.extensions.filters.http.ext_authz.v3.AuthorizationResponse parseDelimitedFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseDelimitedWithIOException(PARSER, input);
  }
  public static io.envoyproxy.envoy.extensions.filters.http.ext_authz.v3.AuthorizationResponse parseDelimitedFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
  }
  public static io.envoyproxy.envoy.extensions.filters.http.ext_authz.v3.AuthorizationResponse parseFrom(
      com.google.protobuf.CodedInputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input);
  }
  public static io.envoyproxy.envoy.extensions.filters.http.ext_authz.v3.AuthorizationResponse parseFrom(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input, extensionRegistry);
  }

  @java.lang.Override
  public Builder newBuilderForType() { return newBuilder(); }
  public static Builder newBuilder() {
    return DEFAULT_INSTANCE.toBuilder();
  }
  public static Builder newBuilder(io.envoyproxy.envoy.extensions.filters.http.ext_authz.v3.AuthorizationResponse prototype) {
    return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
  }
  @java.lang.Override
  public Builder toBuilder() {
    return this == DEFAULT_INSTANCE
        ? new Builder() : new Builder().mergeFrom(this);
  }

  @java.lang.Override
  protected Builder newBuilderForType(
      com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
    Builder builder = new Builder(parent);
    return builder;
  }
  /**
   * <pre>
   * [#next-free-field: 6]
   * </pre>
   *
   * Protobuf type {@code envoy.extensions.filters.http.ext_authz.v3.AuthorizationResponse}
   */
  public static final class Builder extends
      com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
      // @@protoc_insertion_point(builder_implements:envoy.extensions.filters.http.ext_authz.v3.AuthorizationResponse)
      io.envoyproxy.envoy.extensions.filters.http.ext_authz.v3.AuthorizationResponseOrBuilder {
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return io.envoyproxy.envoy.extensions.filters.http.ext_authz.v3.ExtAuthzProto.internal_static_envoy_extensions_filters_http_ext_authz_v3_AuthorizationResponse_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return io.envoyproxy.envoy.extensions.filters.http.ext_authz.v3.ExtAuthzProto.internal_static_envoy_extensions_filters_http_ext_authz_v3_AuthorizationResponse_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              io.envoyproxy.envoy.extensions.filters.http.ext_authz.v3.AuthorizationResponse.class, io.envoyproxy.envoy.extensions.filters.http.ext_authz.v3.AuthorizationResponse.Builder.class);
    }

    // Construct using io.envoyproxy.envoy.extensions.filters.http.ext_authz.v3.AuthorizationResponse.newBuilder()
    private Builder() {

    }

    private Builder(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      super(parent);

    }
    @java.lang.Override
    public Builder clear() {
      super.clear();
      bitField0_ = 0;
      allowedUpstreamHeaders_ = null;
      if (allowedUpstreamHeadersBuilder_ != null) {
        allowedUpstreamHeadersBuilder_.dispose();
        allowedUpstreamHeadersBuilder_ = null;
      }
      allowedUpstreamHeadersToAppend_ = null;
      if (allowedUpstreamHeadersToAppendBuilder_ != null) {
        allowedUpstreamHeadersToAppendBuilder_.dispose();
        allowedUpstreamHeadersToAppendBuilder_ = null;
      }
      allowedClientHeaders_ = null;
      if (allowedClientHeadersBuilder_ != null) {
        allowedClientHeadersBuilder_.dispose();
        allowedClientHeadersBuilder_ = null;
      }
      allowedClientHeadersOnSuccess_ = null;
      if (allowedClientHeadersOnSuccessBuilder_ != null) {
        allowedClientHeadersOnSuccessBuilder_.dispose();
        allowedClientHeadersOnSuccessBuilder_ = null;
      }
      dynamicMetadataFromHeaders_ = null;
      if (dynamicMetadataFromHeadersBuilder_ != null) {
        dynamicMetadataFromHeadersBuilder_.dispose();
        dynamicMetadataFromHeadersBuilder_ = null;
      }
      return this;
    }

    @java.lang.Override
    public com.google.protobuf.Descriptors.Descriptor
        getDescriptorForType() {
      return io.envoyproxy.envoy.extensions.filters.http.ext_authz.v3.ExtAuthzProto.internal_static_envoy_extensions_filters_http_ext_authz_v3_AuthorizationResponse_descriptor;
    }

    @java.lang.Override
    public io.envoyproxy.envoy.extensions.filters.http.ext_authz.v3.AuthorizationResponse getDefaultInstanceForType() {
      return io.envoyproxy.envoy.extensions.filters.http.ext_authz.v3.AuthorizationResponse.getDefaultInstance();
    }

    @java.lang.Override
    public io.envoyproxy.envoy.extensions.filters.http.ext_authz.v3.AuthorizationResponse build() {
      io.envoyproxy.envoy.extensions.filters.http.ext_authz.v3.AuthorizationResponse result = buildPartial();
      if (!result.isInitialized()) {
        throw newUninitializedMessageException(result);
      }
      return result;
    }

    @java.lang.Override
    public io.envoyproxy.envoy.extensions.filters.http.ext_authz.v3.AuthorizationResponse buildPartial() {
      io.envoyproxy.envoy.extensions.filters.http.ext_authz.v3.AuthorizationResponse result = new io.envoyproxy.envoy.extensions.filters.http.ext_authz.v3.AuthorizationResponse(this);
      if (bitField0_ != 0) { buildPartial0(result); }
      onBuilt();
      return result;
    }

    private void buildPartial0(io.envoyproxy.envoy.extensions.filters.http.ext_authz.v3.AuthorizationResponse result) {
      int from_bitField0_ = bitField0_;
      if (((from_bitField0_ & 0x00000001) != 0)) {
        result.allowedUpstreamHeaders_ = allowedUpstreamHeadersBuilder_ == null
            ? allowedUpstreamHeaders_
            : allowedUpstreamHeadersBuilder_.build();
      }
      if (((from_bitField0_ & 0x00000002) != 0)) {
        result.allowedUpstreamHeadersToAppend_ = allowedUpstreamHeadersToAppendBuilder_ == null
            ? allowedUpstreamHeadersToAppend_
            : allowedUpstreamHeadersToAppendBuilder_.build();
      }
      if (((from_bitField0_ & 0x00000004) != 0)) {
        result.allowedClientHeaders_ = allowedClientHeadersBuilder_ == null
            ? allowedClientHeaders_
            : allowedClientHeadersBuilder_.build();
      }
      if (((from_bitField0_ & 0x00000008) != 0)) {
        result.allowedClientHeadersOnSuccess_ = allowedClientHeadersOnSuccessBuilder_ == null
            ? allowedClientHeadersOnSuccess_
            : allowedClientHeadersOnSuccessBuilder_.build();
      }
      if (((from_bitField0_ & 0x00000010) != 0)) {
        result.dynamicMetadataFromHeaders_ = dynamicMetadataFromHeadersBuilder_ == null
            ? dynamicMetadataFromHeaders_
            : dynamicMetadataFromHeadersBuilder_.build();
      }
    }

    @java.lang.Override
    public Builder clone() {
      return super.clone();
    }
    @java.lang.Override
    public Builder setField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        java.lang.Object value) {
      return super.setField(field, value);
    }
    @java.lang.Override
    public Builder clearField(
        com.google.protobuf.Descriptors.FieldDescriptor field) {
      return super.clearField(field);
    }
    @java.lang.Override
    public Builder clearOneof(
        com.google.protobuf.Descriptors.OneofDescriptor oneof) {
      return super.clearOneof(oneof);
    }
    @java.lang.Override
    public Builder setRepeatedField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        int index, java.lang.Object value) {
      return super.setRepeatedField(field, index, value);
    }
    @java.lang.Override
    public Builder addRepeatedField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        java.lang.Object value) {
      return super.addRepeatedField(field, value);
    }
    @java.lang.Override
    public Builder mergeFrom(com.google.protobuf.Message other) {
      if (other instanceof io.envoyproxy.envoy.extensions.filters.http.ext_authz.v3.AuthorizationResponse) {
        return mergeFrom((io.envoyproxy.envoy.extensions.filters.http.ext_authz.v3.AuthorizationResponse)other);
      } else {
        super.mergeFrom(other);
        return this;
      }
    }

    public Builder mergeFrom(io.envoyproxy.envoy.extensions.filters.http.ext_authz.v3.AuthorizationResponse other) {
      if (other == io.envoyproxy.envoy.extensions.filters.http.ext_authz.v3.AuthorizationResponse.getDefaultInstance()) return this;
      if (other.hasAllowedUpstreamHeaders()) {
        mergeAllowedUpstreamHeaders(other.getAllowedUpstreamHeaders());
      }
      if (other.hasAllowedUpstreamHeadersToAppend()) {
        mergeAllowedUpstreamHeadersToAppend(other.getAllowedUpstreamHeadersToAppend());
      }
      if (other.hasAllowedClientHeaders()) {
        mergeAllowedClientHeaders(other.getAllowedClientHeaders());
      }
      if (other.hasAllowedClientHeadersOnSuccess()) {
        mergeAllowedClientHeadersOnSuccess(other.getAllowedClientHeadersOnSuccess());
      }
      if (other.hasDynamicMetadataFromHeaders()) {
        mergeDynamicMetadataFromHeaders(other.getDynamicMetadataFromHeaders());
      }
      this.mergeUnknownFields(other.getUnknownFields());
      onChanged();
      return this;
    }

    @java.lang.Override
    public final boolean isInitialized() {
      return true;
    }

    @java.lang.Override
    public Builder mergeFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 10: {
              input.readMessage(
                  getAllowedUpstreamHeadersFieldBuilder().getBuilder(),
                  extensionRegistry);
              bitField0_ |= 0x00000001;
              break;
            } // case 10
            case 18: {
              input.readMessage(
                  getAllowedClientHeadersFieldBuilder().getBuilder(),
                  extensionRegistry);
              bitField0_ |= 0x00000004;
              break;
            } // case 18
            case 26: {
              input.readMessage(
                  getAllowedUpstreamHeadersToAppendFieldBuilder().getBuilder(),
                  extensionRegistry);
              bitField0_ |= 0x00000002;
              break;
            } // case 26
            case 34: {
              input.readMessage(
                  getAllowedClientHeadersOnSuccessFieldBuilder().getBuilder(),
                  extensionRegistry);
              bitField0_ |= 0x00000008;
              break;
            } // case 34
            case 42: {
              input.readMessage(
                  getDynamicMetadataFromHeadersFieldBuilder().getBuilder(),
                  extensionRegistry);
              bitField0_ |= 0x00000010;
              break;
            } // case 42
            default: {
              if (!super.parseUnknownField(input, extensionRegistry, tag)) {
                done = true; // was an endgroup tag
              }
              break;
            } // default:
          } // switch (tag)
        } // while (!done)
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.unwrapIOException();
      } finally {
        onChanged();
      } // finally
      return this;
    }
    private int bitField0_;

    private io.envoyproxy.envoy.type.matcher.v3.ListStringMatcher allowedUpstreamHeaders_;
    private com.google.protobuf.SingleFieldBuilderV3<
        io.envoyproxy.envoy.type.matcher.v3.ListStringMatcher, io.envoyproxy.envoy.type.matcher.v3.ListStringMatcher.Builder, io.envoyproxy.envoy.type.matcher.v3.ListStringMatcherOrBuilder> allowedUpstreamHeadersBuilder_;
    /**
     * <pre>
     * When this :ref:`list &lt;envoy_v3_api_msg_type.matcher.v3.ListStringMatcher&gt;` is set, authorization
     * response headers that have a correspondent match will be added to the original client request.
     * Note that coexistent headers will be overridden.
     * </pre>
     *
     * <code>.envoy.type.matcher.v3.ListStringMatcher allowed_upstream_headers = 1;</code>
     * @return Whether the allowedUpstreamHeaders field is set.
     */
    public boolean hasAllowedUpstreamHeaders() {
      return ((bitField0_ & 0x00000001) != 0);
    }
    /**
     * <pre>
     * When this :ref:`list &lt;envoy_v3_api_msg_type.matcher.v3.ListStringMatcher&gt;` is set, authorization
     * response headers that have a correspondent match will be added to the original client request.
     * Note that coexistent headers will be overridden.
     * </pre>
     *
     * <code>.envoy.type.matcher.v3.ListStringMatcher allowed_upstream_headers = 1;</code>
     * @return The allowedUpstreamHeaders.
     */
    public io.envoyproxy.envoy.type.matcher.v3.ListStringMatcher getAllowedUpstreamHeaders() {
      if (allowedUpstreamHeadersBuilder_ == null) {
        return allowedUpstreamHeaders_ == null ? io.envoyproxy.envoy.type.matcher.v3.ListStringMatcher.getDefaultInstance() : allowedUpstreamHeaders_;
      } else {
        return allowedUpstreamHeadersBuilder_.getMessage();
      }
    }
    /**
     * <pre>
     * When this :ref:`list &lt;envoy_v3_api_msg_type.matcher.v3.ListStringMatcher&gt;` is set, authorization
     * response headers that have a correspondent match will be added to the original client request.
     * Note that coexistent headers will be overridden.
     * </pre>
     *
     * <code>.envoy.type.matcher.v3.ListStringMatcher allowed_upstream_headers = 1;</code>
     */
    public Builder setAllowedUpstreamHeaders(io.envoyproxy.envoy.type.matcher.v3.ListStringMatcher value) {
      if (allowedUpstreamHeadersBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        allowedUpstreamHeaders_ = value;
      } else {
        allowedUpstreamHeadersBuilder_.setMessage(value);
      }
      bitField0_ |= 0x00000001;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * When this :ref:`list &lt;envoy_v3_api_msg_type.matcher.v3.ListStringMatcher&gt;` is set, authorization
     * response headers that have a correspondent match will be added to the original client request.
     * Note that coexistent headers will be overridden.
     * </pre>
     *
     * <code>.envoy.type.matcher.v3.ListStringMatcher allowed_upstream_headers = 1;</code>
     */
    public Builder setAllowedUpstreamHeaders(
        io.envoyproxy.envoy.type.matcher.v3.ListStringMatcher.Builder builderForValue) {
      if (allowedUpstreamHeadersBuilder_ == null) {
        allowedUpstreamHeaders_ = builderForValue.build();
      } else {
        allowedUpstreamHeadersBuilder_.setMessage(builderForValue.build());
      }
      bitField0_ |= 0x00000001;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * When this :ref:`list &lt;envoy_v3_api_msg_type.matcher.v3.ListStringMatcher&gt;` is set, authorization
     * response headers that have a correspondent match will be added to the original client request.
     * Note that coexistent headers will be overridden.
     * </pre>
     *
     * <code>.envoy.type.matcher.v3.ListStringMatcher allowed_upstream_headers = 1;</code>
     */
    public Builder mergeAllowedUpstreamHeaders(io.envoyproxy.envoy.type.matcher.v3.ListStringMatcher value) {
      if (allowedUpstreamHeadersBuilder_ == null) {
        if (((bitField0_ & 0x00000001) != 0) &&
          allowedUpstreamHeaders_ != null &&
          allowedUpstreamHeaders_ != io.envoyproxy.envoy.type.matcher.v3.ListStringMatcher.getDefaultInstance()) {
          getAllowedUpstreamHeadersBuilder().mergeFrom(value);
        } else {
          allowedUpstreamHeaders_ = value;
        }
      } else {
        allowedUpstreamHeadersBuilder_.mergeFrom(value);
      }
      bitField0_ |= 0x00000001;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * When this :ref:`list &lt;envoy_v3_api_msg_type.matcher.v3.ListStringMatcher&gt;` is set, authorization
     * response headers that have a correspondent match will be added to the original client request.
     * Note that coexistent headers will be overridden.
     * </pre>
     *
     * <code>.envoy.type.matcher.v3.ListStringMatcher allowed_upstream_headers = 1;</code>
     */
    public Builder clearAllowedUpstreamHeaders() {
      bitField0_ = (bitField0_ & ~0x00000001);
      allowedUpstreamHeaders_ = null;
      if (allowedUpstreamHeadersBuilder_ != null) {
        allowedUpstreamHeadersBuilder_.dispose();
        allowedUpstreamHeadersBuilder_ = null;
      }
      onChanged();
      return this;
    }
    /**
     * <pre>
     * When this :ref:`list &lt;envoy_v3_api_msg_type.matcher.v3.ListStringMatcher&gt;` is set, authorization
     * response headers that have a correspondent match will be added to the original client request.
     * Note that coexistent headers will be overridden.
     * </pre>
     *
     * <code>.envoy.type.matcher.v3.ListStringMatcher allowed_upstream_headers = 1;</code>
     */
    public io.envoyproxy.envoy.type.matcher.v3.ListStringMatcher.Builder getAllowedUpstreamHeadersBuilder() {
      bitField0_ |= 0x00000001;
      onChanged();
      return getAllowedUpstreamHeadersFieldBuilder().getBuilder();
    }
    /**
     * <pre>
     * When this :ref:`list &lt;envoy_v3_api_msg_type.matcher.v3.ListStringMatcher&gt;` is set, authorization
     * response headers that have a correspondent match will be added to the original client request.
     * Note that coexistent headers will be overridden.
     * </pre>
     *
     * <code>.envoy.type.matcher.v3.ListStringMatcher allowed_upstream_headers = 1;</code>
     */
    public io.envoyproxy.envoy.type.matcher.v3.ListStringMatcherOrBuilder getAllowedUpstreamHeadersOrBuilder() {
      if (allowedUpstreamHeadersBuilder_ != null) {
        return allowedUpstreamHeadersBuilder_.getMessageOrBuilder();
      } else {
        return allowedUpstreamHeaders_ == null ?
            io.envoyproxy.envoy.type.matcher.v3.ListStringMatcher.getDefaultInstance() : allowedUpstreamHeaders_;
      }
    }
    /**
     * <pre>
     * When this :ref:`list &lt;envoy_v3_api_msg_type.matcher.v3.ListStringMatcher&gt;` is set, authorization
     * response headers that have a correspondent match will be added to the original client request.
     * Note that coexistent headers will be overridden.
     * </pre>
     *
     * <code>.envoy.type.matcher.v3.ListStringMatcher allowed_upstream_headers = 1;</code>
     */
    private com.google.protobuf.SingleFieldBuilderV3<
        io.envoyproxy.envoy.type.matcher.v3.ListStringMatcher, io.envoyproxy.envoy.type.matcher.v3.ListStringMatcher.Builder, io.envoyproxy.envoy.type.matcher.v3.ListStringMatcherOrBuilder> 
        getAllowedUpstreamHeadersFieldBuilder() {
      if (allowedUpstreamHeadersBuilder_ == null) {
        allowedUpstreamHeadersBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
            io.envoyproxy.envoy.type.matcher.v3.ListStringMatcher, io.envoyproxy.envoy.type.matcher.v3.ListStringMatcher.Builder, io.envoyproxy.envoy.type.matcher.v3.ListStringMatcherOrBuilder>(
                getAllowedUpstreamHeaders(),
                getParentForChildren(),
                isClean());
        allowedUpstreamHeaders_ = null;
      }
      return allowedUpstreamHeadersBuilder_;
    }

    private io.envoyproxy.envoy.type.matcher.v3.ListStringMatcher allowedUpstreamHeadersToAppend_;
    private com.google.protobuf.SingleFieldBuilderV3<
        io.envoyproxy.envoy.type.matcher.v3.ListStringMatcher, io.envoyproxy.envoy.type.matcher.v3.ListStringMatcher.Builder, io.envoyproxy.envoy.type.matcher.v3.ListStringMatcherOrBuilder> allowedUpstreamHeadersToAppendBuilder_;
    /**
     * <pre>
     * When this :ref:`list &lt;envoy_v3_api_msg_type.matcher.v3.ListStringMatcher&gt;` is set, authorization
     * response headers that have a correspondent match will be added to the client's response. Note
     * that coexistent headers will be appended.
     * </pre>
     *
     * <code>.envoy.type.matcher.v3.ListStringMatcher allowed_upstream_headers_to_append = 3;</code>
     * @return Whether the allowedUpstreamHeadersToAppend field is set.
     */
    public boolean hasAllowedUpstreamHeadersToAppend() {
      return ((bitField0_ & 0x00000002) != 0);
    }
    /**
     * <pre>
     * When this :ref:`list &lt;envoy_v3_api_msg_type.matcher.v3.ListStringMatcher&gt;` is set, authorization
     * response headers that have a correspondent match will be added to the client's response. Note
     * that coexistent headers will be appended.
     * </pre>
     *
     * <code>.envoy.type.matcher.v3.ListStringMatcher allowed_upstream_headers_to_append = 3;</code>
     * @return The allowedUpstreamHeadersToAppend.
     */
    public io.envoyproxy.envoy.type.matcher.v3.ListStringMatcher getAllowedUpstreamHeadersToAppend() {
      if (allowedUpstreamHeadersToAppendBuilder_ == null) {
        return allowedUpstreamHeadersToAppend_ == null ? io.envoyproxy.envoy.type.matcher.v3.ListStringMatcher.getDefaultInstance() : allowedUpstreamHeadersToAppend_;
      } else {
        return allowedUpstreamHeadersToAppendBuilder_.getMessage();
      }
    }
    /**
     * <pre>
     * When this :ref:`list &lt;envoy_v3_api_msg_type.matcher.v3.ListStringMatcher&gt;` is set, authorization
     * response headers that have a correspondent match will be added to the client's response. Note
     * that coexistent headers will be appended.
     * </pre>
     *
     * <code>.envoy.type.matcher.v3.ListStringMatcher allowed_upstream_headers_to_append = 3;</code>
     */
    public Builder setAllowedUpstreamHeadersToAppend(io.envoyproxy.envoy.type.matcher.v3.ListStringMatcher value) {
      if (allowedUpstreamHeadersToAppendBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        allowedUpstreamHeadersToAppend_ = value;
      } else {
        allowedUpstreamHeadersToAppendBuilder_.setMessage(value);
      }
      bitField0_ |= 0x00000002;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * When this :ref:`list &lt;envoy_v3_api_msg_type.matcher.v3.ListStringMatcher&gt;` is set, authorization
     * response headers that have a correspondent match will be added to the client's response. Note
     * that coexistent headers will be appended.
     * </pre>
     *
     * <code>.envoy.type.matcher.v3.ListStringMatcher allowed_upstream_headers_to_append = 3;</code>
     */
    public Builder setAllowedUpstreamHeadersToAppend(
        io.envoyproxy.envoy.type.matcher.v3.ListStringMatcher.Builder builderForValue) {
      if (allowedUpstreamHeadersToAppendBuilder_ == null) {
        allowedUpstreamHeadersToAppend_ = builderForValue.build();
      } else {
        allowedUpstreamHeadersToAppendBuilder_.setMessage(builderForValue.build());
      }
      bitField0_ |= 0x00000002;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * When this :ref:`list &lt;envoy_v3_api_msg_type.matcher.v3.ListStringMatcher&gt;` is set, authorization
     * response headers that have a correspondent match will be added to the client's response. Note
     * that coexistent headers will be appended.
     * </pre>
     *
     * <code>.envoy.type.matcher.v3.ListStringMatcher allowed_upstream_headers_to_append = 3;</code>
     */
    public Builder mergeAllowedUpstreamHeadersToAppend(io.envoyproxy.envoy.type.matcher.v3.ListStringMatcher value) {
      if (allowedUpstreamHeadersToAppendBuilder_ == null) {
        if (((bitField0_ & 0x00000002) != 0) &&
          allowedUpstreamHeadersToAppend_ != null &&
          allowedUpstreamHeadersToAppend_ != io.envoyproxy.envoy.type.matcher.v3.ListStringMatcher.getDefaultInstance()) {
          getAllowedUpstreamHeadersToAppendBuilder().mergeFrom(value);
        } else {
          allowedUpstreamHeadersToAppend_ = value;
        }
      } else {
        allowedUpstreamHeadersToAppendBuilder_.mergeFrom(value);
      }
      bitField0_ |= 0x00000002;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * When this :ref:`list &lt;envoy_v3_api_msg_type.matcher.v3.ListStringMatcher&gt;` is set, authorization
     * response headers that have a correspondent match will be added to the client's response. Note
     * that coexistent headers will be appended.
     * </pre>
     *
     * <code>.envoy.type.matcher.v3.ListStringMatcher allowed_upstream_headers_to_append = 3;</code>
     */
    public Builder clearAllowedUpstreamHeadersToAppend() {
      bitField0_ = (bitField0_ & ~0x00000002);
      allowedUpstreamHeadersToAppend_ = null;
      if (allowedUpstreamHeadersToAppendBuilder_ != null) {
        allowedUpstreamHeadersToAppendBuilder_.dispose();
        allowedUpstreamHeadersToAppendBuilder_ = null;
      }
      onChanged();
      return this;
    }
    /**
     * <pre>
     * When this :ref:`list &lt;envoy_v3_api_msg_type.matcher.v3.ListStringMatcher&gt;` is set, authorization
     * response headers that have a correspondent match will be added to the client's response. Note
     * that coexistent headers will be appended.
     * </pre>
     *
     * <code>.envoy.type.matcher.v3.ListStringMatcher allowed_upstream_headers_to_append = 3;</code>
     */
    public io.envoyproxy.envoy.type.matcher.v3.ListStringMatcher.Builder getAllowedUpstreamHeadersToAppendBuilder() {
      bitField0_ |= 0x00000002;
      onChanged();
      return getAllowedUpstreamHeadersToAppendFieldBuilder().getBuilder();
    }
    /**
     * <pre>
     * When this :ref:`list &lt;envoy_v3_api_msg_type.matcher.v3.ListStringMatcher&gt;` is set, authorization
     * response headers that have a correspondent match will be added to the client's response. Note
     * that coexistent headers will be appended.
     * </pre>
     *
     * <code>.envoy.type.matcher.v3.ListStringMatcher allowed_upstream_headers_to_append = 3;</code>
     */
    public io.envoyproxy.envoy.type.matcher.v3.ListStringMatcherOrBuilder getAllowedUpstreamHeadersToAppendOrBuilder() {
      if (allowedUpstreamHeadersToAppendBuilder_ != null) {
        return allowedUpstreamHeadersToAppendBuilder_.getMessageOrBuilder();
      } else {
        return allowedUpstreamHeadersToAppend_ == null ?
            io.envoyproxy.envoy.type.matcher.v3.ListStringMatcher.getDefaultInstance() : allowedUpstreamHeadersToAppend_;
      }
    }
    /**
     * <pre>
     * When this :ref:`list &lt;envoy_v3_api_msg_type.matcher.v3.ListStringMatcher&gt;` is set, authorization
     * response headers that have a correspondent match will be added to the client's response. Note
     * that coexistent headers will be appended.
     * </pre>
     *
     * <code>.envoy.type.matcher.v3.ListStringMatcher allowed_upstream_headers_to_append = 3;</code>
     */
    private com.google.protobuf.SingleFieldBuilderV3<
        io.envoyproxy.envoy.type.matcher.v3.ListStringMatcher, io.envoyproxy.envoy.type.matcher.v3.ListStringMatcher.Builder, io.envoyproxy.envoy.type.matcher.v3.ListStringMatcherOrBuilder> 
        getAllowedUpstreamHeadersToAppendFieldBuilder() {
      if (allowedUpstreamHeadersToAppendBuilder_ == null) {
        allowedUpstreamHeadersToAppendBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
            io.envoyproxy.envoy.type.matcher.v3.ListStringMatcher, io.envoyproxy.envoy.type.matcher.v3.ListStringMatcher.Builder, io.envoyproxy.envoy.type.matcher.v3.ListStringMatcherOrBuilder>(
                getAllowedUpstreamHeadersToAppend(),
                getParentForChildren(),
                isClean());
        allowedUpstreamHeadersToAppend_ = null;
      }
      return allowedUpstreamHeadersToAppendBuilder_;
    }

    private io.envoyproxy.envoy.type.matcher.v3.ListStringMatcher allowedClientHeaders_;
    private com.google.protobuf.SingleFieldBuilderV3<
        io.envoyproxy.envoy.type.matcher.v3.ListStringMatcher, io.envoyproxy.envoy.type.matcher.v3.ListStringMatcher.Builder, io.envoyproxy.envoy.type.matcher.v3.ListStringMatcherOrBuilder> allowedClientHeadersBuilder_;
    /**
     * <pre>
     * When this :ref:`list &lt;envoy_v3_api_msg_type.matcher.v3.ListStringMatcher&gt;` is set, authorization
     * response headers that have a correspondent match will be added to the client's response. Note
     * that when this list is *not* set, all the authorization response headers, except ``Authority
     * (Host)`` will be in the response to the client. When a header is included in this list, ``Path``,
     * ``Status``, ``Content-Length``, ``WWWAuthenticate`` and ``Location`` are automatically added.
     * </pre>
     *
     * <code>.envoy.type.matcher.v3.ListStringMatcher allowed_client_headers = 2;</code>
     * @return Whether the allowedClientHeaders field is set.
     */
    public boolean hasAllowedClientHeaders() {
      return ((bitField0_ & 0x00000004) != 0);
    }
    /**
     * <pre>
     * When this :ref:`list &lt;envoy_v3_api_msg_type.matcher.v3.ListStringMatcher&gt;` is set, authorization
     * response headers that have a correspondent match will be added to the client's response. Note
     * that when this list is *not* set, all the authorization response headers, except ``Authority
     * (Host)`` will be in the response to the client. When a header is included in this list, ``Path``,
     * ``Status``, ``Content-Length``, ``WWWAuthenticate`` and ``Location`` are automatically added.
     * </pre>
     *
     * <code>.envoy.type.matcher.v3.ListStringMatcher allowed_client_headers = 2;</code>
     * @return The allowedClientHeaders.
     */
    public io.envoyproxy.envoy.type.matcher.v3.ListStringMatcher getAllowedClientHeaders() {
      if (allowedClientHeadersBuilder_ == null) {
        return allowedClientHeaders_ == null ? io.envoyproxy.envoy.type.matcher.v3.ListStringMatcher.getDefaultInstance() : allowedClientHeaders_;
      } else {
        return allowedClientHeadersBuilder_.getMessage();
      }
    }
    /**
     * <pre>
     * When this :ref:`list &lt;envoy_v3_api_msg_type.matcher.v3.ListStringMatcher&gt;` is set, authorization
     * response headers that have a correspondent match will be added to the client's response. Note
     * that when this list is *not* set, all the authorization response headers, except ``Authority
     * (Host)`` will be in the response to the client. When a header is included in this list, ``Path``,
     * ``Status``, ``Content-Length``, ``WWWAuthenticate`` and ``Location`` are automatically added.
     * </pre>
     *
     * <code>.envoy.type.matcher.v3.ListStringMatcher allowed_client_headers = 2;</code>
     */
    public Builder setAllowedClientHeaders(io.envoyproxy.envoy.type.matcher.v3.ListStringMatcher value) {
      if (allowedClientHeadersBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        allowedClientHeaders_ = value;
      } else {
        allowedClientHeadersBuilder_.setMessage(value);
      }
      bitField0_ |= 0x00000004;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * When this :ref:`list &lt;envoy_v3_api_msg_type.matcher.v3.ListStringMatcher&gt;` is set, authorization
     * response headers that have a correspondent match will be added to the client's response. Note
     * that when this list is *not* set, all the authorization response headers, except ``Authority
     * (Host)`` will be in the response to the client. When a header is included in this list, ``Path``,
     * ``Status``, ``Content-Length``, ``WWWAuthenticate`` and ``Location`` are automatically added.
     * </pre>
     *
     * <code>.envoy.type.matcher.v3.ListStringMatcher allowed_client_headers = 2;</code>
     */
    public Builder setAllowedClientHeaders(
        io.envoyproxy.envoy.type.matcher.v3.ListStringMatcher.Builder builderForValue) {
      if (allowedClientHeadersBuilder_ == null) {
        allowedClientHeaders_ = builderForValue.build();
      } else {
        allowedClientHeadersBuilder_.setMessage(builderForValue.build());
      }
      bitField0_ |= 0x00000004;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * When this :ref:`list &lt;envoy_v3_api_msg_type.matcher.v3.ListStringMatcher&gt;` is set, authorization
     * response headers that have a correspondent match will be added to the client's response. Note
     * that when this list is *not* set, all the authorization response headers, except ``Authority
     * (Host)`` will be in the response to the client. When a header is included in this list, ``Path``,
     * ``Status``, ``Content-Length``, ``WWWAuthenticate`` and ``Location`` are automatically added.
     * </pre>
     *
     * <code>.envoy.type.matcher.v3.ListStringMatcher allowed_client_headers = 2;</code>
     */
    public Builder mergeAllowedClientHeaders(io.envoyproxy.envoy.type.matcher.v3.ListStringMatcher value) {
      if (allowedClientHeadersBuilder_ == null) {
        if (((bitField0_ & 0x00000004) != 0) &&
          allowedClientHeaders_ != null &&
          allowedClientHeaders_ != io.envoyproxy.envoy.type.matcher.v3.ListStringMatcher.getDefaultInstance()) {
          getAllowedClientHeadersBuilder().mergeFrom(value);
        } else {
          allowedClientHeaders_ = value;
        }
      } else {
        allowedClientHeadersBuilder_.mergeFrom(value);
      }
      bitField0_ |= 0x00000004;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * When this :ref:`list &lt;envoy_v3_api_msg_type.matcher.v3.ListStringMatcher&gt;` is set, authorization
     * response headers that have a correspondent match will be added to the client's response. Note
     * that when this list is *not* set, all the authorization response headers, except ``Authority
     * (Host)`` will be in the response to the client. When a header is included in this list, ``Path``,
     * ``Status``, ``Content-Length``, ``WWWAuthenticate`` and ``Location`` are automatically added.
     * </pre>
     *
     * <code>.envoy.type.matcher.v3.ListStringMatcher allowed_client_headers = 2;</code>
     */
    public Builder clearAllowedClientHeaders() {
      bitField0_ = (bitField0_ & ~0x00000004);
      allowedClientHeaders_ = null;
      if (allowedClientHeadersBuilder_ != null) {
        allowedClientHeadersBuilder_.dispose();
        allowedClientHeadersBuilder_ = null;
      }
      onChanged();
      return this;
    }
    /**
     * <pre>
     * When this :ref:`list &lt;envoy_v3_api_msg_type.matcher.v3.ListStringMatcher&gt;` is set, authorization
     * response headers that have a correspondent match will be added to the client's response. Note
     * that when this list is *not* set, all the authorization response headers, except ``Authority
     * (Host)`` will be in the response to the client. When a header is included in this list, ``Path``,
     * ``Status``, ``Content-Length``, ``WWWAuthenticate`` and ``Location`` are automatically added.
     * </pre>
     *
     * <code>.envoy.type.matcher.v3.ListStringMatcher allowed_client_headers = 2;</code>
     */
    public io.envoyproxy.envoy.type.matcher.v3.ListStringMatcher.Builder getAllowedClientHeadersBuilder() {
      bitField0_ |= 0x00000004;
      onChanged();
      return getAllowedClientHeadersFieldBuilder().getBuilder();
    }
    /**
     * <pre>
     * When this :ref:`list &lt;envoy_v3_api_msg_type.matcher.v3.ListStringMatcher&gt;` is set, authorization
     * response headers that have a correspondent match will be added to the client's response. Note
     * that when this list is *not* set, all the authorization response headers, except ``Authority
     * (Host)`` will be in the response to the client. When a header is included in this list, ``Path``,
     * ``Status``, ``Content-Length``, ``WWWAuthenticate`` and ``Location`` are automatically added.
     * </pre>
     *
     * <code>.envoy.type.matcher.v3.ListStringMatcher allowed_client_headers = 2;</code>
     */
    public io.envoyproxy.envoy.type.matcher.v3.ListStringMatcherOrBuilder getAllowedClientHeadersOrBuilder() {
      if (allowedClientHeadersBuilder_ != null) {
        return allowedClientHeadersBuilder_.getMessageOrBuilder();
      } else {
        return allowedClientHeaders_ == null ?
            io.envoyproxy.envoy.type.matcher.v3.ListStringMatcher.getDefaultInstance() : allowedClientHeaders_;
      }
    }
    /**
     * <pre>
     * When this :ref:`list &lt;envoy_v3_api_msg_type.matcher.v3.ListStringMatcher&gt;` is set, authorization
     * response headers that have a correspondent match will be added to the client's response. Note
     * that when this list is *not* set, all the authorization response headers, except ``Authority
     * (Host)`` will be in the response to the client. When a header is included in this list, ``Path``,
     * ``Status``, ``Content-Length``, ``WWWAuthenticate`` and ``Location`` are automatically added.
     * </pre>
     *
     * <code>.envoy.type.matcher.v3.ListStringMatcher allowed_client_headers = 2;</code>
     */
    private com.google.protobuf.SingleFieldBuilderV3<
        io.envoyproxy.envoy.type.matcher.v3.ListStringMatcher, io.envoyproxy.envoy.type.matcher.v3.ListStringMatcher.Builder, io.envoyproxy.envoy.type.matcher.v3.ListStringMatcherOrBuilder> 
        getAllowedClientHeadersFieldBuilder() {
      if (allowedClientHeadersBuilder_ == null) {
        allowedClientHeadersBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
            io.envoyproxy.envoy.type.matcher.v3.ListStringMatcher, io.envoyproxy.envoy.type.matcher.v3.ListStringMatcher.Builder, io.envoyproxy.envoy.type.matcher.v3.ListStringMatcherOrBuilder>(
                getAllowedClientHeaders(),
                getParentForChildren(),
                isClean());
        allowedClientHeaders_ = null;
      }
      return allowedClientHeadersBuilder_;
    }

    private io.envoyproxy.envoy.type.matcher.v3.ListStringMatcher allowedClientHeadersOnSuccess_;
    private com.google.protobuf.SingleFieldBuilderV3<
        io.envoyproxy.envoy.type.matcher.v3.ListStringMatcher, io.envoyproxy.envoy.type.matcher.v3.ListStringMatcher.Builder, io.envoyproxy.envoy.type.matcher.v3.ListStringMatcherOrBuilder> allowedClientHeadersOnSuccessBuilder_;
    /**
     * <pre>
     * When this :ref:`list &lt;envoy_v3_api_msg_type.matcher.v3.ListStringMatcher&gt;` is set, authorization
     * response headers that have a correspondent match will be added to the client's response when
     * the authorization response itself is successful, i.e. not failed or denied. When this list is
     * *not* set, no additional headers will be added to the client's response on success.
     * </pre>
     *
     * <code>.envoy.type.matcher.v3.ListStringMatcher allowed_client_headers_on_success = 4;</code>
     * @return Whether the allowedClientHeadersOnSuccess field is set.
     */
    public boolean hasAllowedClientHeadersOnSuccess() {
      return ((bitField0_ & 0x00000008) != 0);
    }
    /**
     * <pre>
     * When this :ref:`list &lt;envoy_v3_api_msg_type.matcher.v3.ListStringMatcher&gt;` is set, authorization
     * response headers that have a correspondent match will be added to the client's response when
     * the authorization response itself is successful, i.e. not failed or denied. When this list is
     * *not* set, no additional headers will be added to the client's response on success.
     * </pre>
     *
     * <code>.envoy.type.matcher.v3.ListStringMatcher allowed_client_headers_on_success = 4;</code>
     * @return The allowedClientHeadersOnSuccess.
     */
    public io.envoyproxy.envoy.type.matcher.v3.ListStringMatcher getAllowedClientHeadersOnSuccess() {
      if (allowedClientHeadersOnSuccessBuilder_ == null) {
        return allowedClientHeadersOnSuccess_ == null ? io.envoyproxy.envoy.type.matcher.v3.ListStringMatcher.getDefaultInstance() : allowedClientHeadersOnSuccess_;
      } else {
        return allowedClientHeadersOnSuccessBuilder_.getMessage();
      }
    }
    /**
     * <pre>
     * When this :ref:`list &lt;envoy_v3_api_msg_type.matcher.v3.ListStringMatcher&gt;` is set, authorization
     * response headers that have a correspondent match will be added to the client's response when
     * the authorization response itself is successful, i.e. not failed or denied. When this list is
     * *not* set, no additional headers will be added to the client's response on success.
     * </pre>
     *
     * <code>.envoy.type.matcher.v3.ListStringMatcher allowed_client_headers_on_success = 4;</code>
     */
    public Builder setAllowedClientHeadersOnSuccess(io.envoyproxy.envoy.type.matcher.v3.ListStringMatcher value) {
      if (allowedClientHeadersOnSuccessBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        allowedClientHeadersOnSuccess_ = value;
      } else {
        allowedClientHeadersOnSuccessBuilder_.setMessage(value);
      }
      bitField0_ |= 0x00000008;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * When this :ref:`list &lt;envoy_v3_api_msg_type.matcher.v3.ListStringMatcher&gt;` is set, authorization
     * response headers that have a correspondent match will be added to the client's response when
     * the authorization response itself is successful, i.e. not failed or denied. When this list is
     * *not* set, no additional headers will be added to the client's response on success.
     * </pre>
     *
     * <code>.envoy.type.matcher.v3.ListStringMatcher allowed_client_headers_on_success = 4;</code>
     */
    public Builder setAllowedClientHeadersOnSuccess(
        io.envoyproxy.envoy.type.matcher.v3.ListStringMatcher.Builder builderForValue) {
      if (allowedClientHeadersOnSuccessBuilder_ == null) {
        allowedClientHeadersOnSuccess_ = builderForValue.build();
      } else {
        allowedClientHeadersOnSuccessBuilder_.setMessage(builderForValue.build());
      }
      bitField0_ |= 0x00000008;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * When this :ref:`list &lt;envoy_v3_api_msg_type.matcher.v3.ListStringMatcher&gt;` is set, authorization
     * response headers that have a correspondent match will be added to the client's response when
     * the authorization response itself is successful, i.e. not failed or denied. When this list is
     * *not* set, no additional headers will be added to the client's response on success.
     * </pre>
     *
     * <code>.envoy.type.matcher.v3.ListStringMatcher allowed_client_headers_on_success = 4;</code>
     */
    public Builder mergeAllowedClientHeadersOnSuccess(io.envoyproxy.envoy.type.matcher.v3.ListStringMatcher value) {
      if (allowedClientHeadersOnSuccessBuilder_ == null) {
        if (((bitField0_ & 0x00000008) != 0) &&
          allowedClientHeadersOnSuccess_ != null &&
          allowedClientHeadersOnSuccess_ != io.envoyproxy.envoy.type.matcher.v3.ListStringMatcher.getDefaultInstance()) {
          getAllowedClientHeadersOnSuccessBuilder().mergeFrom(value);
        } else {
          allowedClientHeadersOnSuccess_ = value;
        }
      } else {
        allowedClientHeadersOnSuccessBuilder_.mergeFrom(value);
      }
      bitField0_ |= 0x00000008;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * When this :ref:`list &lt;envoy_v3_api_msg_type.matcher.v3.ListStringMatcher&gt;` is set, authorization
     * response headers that have a correspondent match will be added to the client's response when
     * the authorization response itself is successful, i.e. not failed or denied. When this list is
     * *not* set, no additional headers will be added to the client's response on success.
     * </pre>
     *
     * <code>.envoy.type.matcher.v3.ListStringMatcher allowed_client_headers_on_success = 4;</code>
     */
    public Builder clearAllowedClientHeadersOnSuccess() {
      bitField0_ = (bitField0_ & ~0x00000008);
      allowedClientHeadersOnSuccess_ = null;
      if (allowedClientHeadersOnSuccessBuilder_ != null) {
        allowedClientHeadersOnSuccessBuilder_.dispose();
        allowedClientHeadersOnSuccessBuilder_ = null;
      }
      onChanged();
      return this;
    }
    /**
     * <pre>
     * When this :ref:`list &lt;envoy_v3_api_msg_type.matcher.v3.ListStringMatcher&gt;` is set, authorization
     * response headers that have a correspondent match will be added to the client's response when
     * the authorization response itself is successful, i.e. not failed or denied. When this list is
     * *not* set, no additional headers will be added to the client's response on success.
     * </pre>
     *
     * <code>.envoy.type.matcher.v3.ListStringMatcher allowed_client_headers_on_success = 4;</code>
     */
    public io.envoyproxy.envoy.type.matcher.v3.ListStringMatcher.Builder getAllowedClientHeadersOnSuccessBuilder() {
      bitField0_ |= 0x00000008;
      onChanged();
      return getAllowedClientHeadersOnSuccessFieldBuilder().getBuilder();
    }
    /**
     * <pre>
     * When this :ref:`list &lt;envoy_v3_api_msg_type.matcher.v3.ListStringMatcher&gt;` is set, authorization
     * response headers that have a correspondent match will be added to the client's response when
     * the authorization response itself is successful, i.e. not failed or denied. When this list is
     * *not* set, no additional headers will be added to the client's response on success.
     * </pre>
     *
     * <code>.envoy.type.matcher.v3.ListStringMatcher allowed_client_headers_on_success = 4;</code>
     */
    public io.envoyproxy.envoy.type.matcher.v3.ListStringMatcherOrBuilder getAllowedClientHeadersOnSuccessOrBuilder() {
      if (allowedClientHeadersOnSuccessBuilder_ != null) {
        return allowedClientHeadersOnSuccessBuilder_.getMessageOrBuilder();
      } else {
        return allowedClientHeadersOnSuccess_ == null ?
            io.envoyproxy.envoy.type.matcher.v3.ListStringMatcher.getDefaultInstance() : allowedClientHeadersOnSuccess_;
      }
    }
    /**
     * <pre>
     * When this :ref:`list &lt;envoy_v3_api_msg_type.matcher.v3.ListStringMatcher&gt;` is set, authorization
     * response headers that have a correspondent match will be added to the client's response when
     * the authorization response itself is successful, i.e. not failed or denied. When this list is
     * *not* set, no additional headers will be added to the client's response on success.
     * </pre>
     *
     * <code>.envoy.type.matcher.v3.ListStringMatcher allowed_client_headers_on_success = 4;</code>
     */
    private com.google.protobuf.SingleFieldBuilderV3<
        io.envoyproxy.envoy.type.matcher.v3.ListStringMatcher, io.envoyproxy.envoy.type.matcher.v3.ListStringMatcher.Builder, io.envoyproxy.envoy.type.matcher.v3.ListStringMatcherOrBuilder> 
        getAllowedClientHeadersOnSuccessFieldBuilder() {
      if (allowedClientHeadersOnSuccessBuilder_ == null) {
        allowedClientHeadersOnSuccessBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
            io.envoyproxy.envoy.type.matcher.v3.ListStringMatcher, io.envoyproxy.envoy.type.matcher.v3.ListStringMatcher.Builder, io.envoyproxy.envoy.type.matcher.v3.ListStringMatcherOrBuilder>(
                getAllowedClientHeadersOnSuccess(),
                getParentForChildren(),
                isClean());
        allowedClientHeadersOnSuccess_ = null;
      }
      return allowedClientHeadersOnSuccessBuilder_;
    }

    private io.envoyproxy.envoy.type.matcher.v3.ListStringMatcher dynamicMetadataFromHeaders_;
    private com.google.protobuf.SingleFieldBuilderV3<
        io.envoyproxy.envoy.type.matcher.v3.ListStringMatcher, io.envoyproxy.envoy.type.matcher.v3.ListStringMatcher.Builder, io.envoyproxy.envoy.type.matcher.v3.ListStringMatcherOrBuilder> dynamicMetadataFromHeadersBuilder_;
    /**
     * <pre>
     * When this :ref:`list &lt;envoy_v3_api_msg_type.matcher.v3.ListStringMatcher&gt;` is set, authorization
     * response headers that have a correspondent match will be emitted as dynamic metadata to be consumed
     * by the next filter. This metadata lives in a namespace specified by the canonical name of extension filter
     * that requires it:
     * - :ref:`envoy.filters.http.ext_authz &lt;config_http_filters_ext_authz_dynamic_metadata&gt;` for HTTP filter.
     * - :ref:`envoy.filters.network.ext_authz &lt;config_network_filters_ext_authz_dynamic_metadata&gt;` for network filter.
     * </pre>
     *
     * <code>.envoy.type.matcher.v3.ListStringMatcher dynamic_metadata_from_headers = 5;</code>
     * @return Whether the dynamicMetadataFromHeaders field is set.
     */
    public boolean hasDynamicMetadataFromHeaders() {
      return ((bitField0_ & 0x00000010) != 0);
    }
    /**
     * <pre>
     * When this :ref:`list &lt;envoy_v3_api_msg_type.matcher.v3.ListStringMatcher&gt;` is set, authorization
     * response headers that have a correspondent match will be emitted as dynamic metadata to be consumed
     * by the next filter. This metadata lives in a namespace specified by the canonical name of extension filter
     * that requires it:
     * - :ref:`envoy.filters.http.ext_authz &lt;config_http_filters_ext_authz_dynamic_metadata&gt;` for HTTP filter.
     * - :ref:`envoy.filters.network.ext_authz &lt;config_network_filters_ext_authz_dynamic_metadata&gt;` for network filter.
     * </pre>
     *
     * <code>.envoy.type.matcher.v3.ListStringMatcher dynamic_metadata_from_headers = 5;</code>
     * @return The dynamicMetadataFromHeaders.
     */
    public io.envoyproxy.envoy.type.matcher.v3.ListStringMatcher getDynamicMetadataFromHeaders() {
      if (dynamicMetadataFromHeadersBuilder_ == null) {
        return dynamicMetadataFromHeaders_ == null ? io.envoyproxy.envoy.type.matcher.v3.ListStringMatcher.getDefaultInstance() : dynamicMetadataFromHeaders_;
      } else {
        return dynamicMetadataFromHeadersBuilder_.getMessage();
      }
    }
    /**
     * <pre>
     * When this :ref:`list &lt;envoy_v3_api_msg_type.matcher.v3.ListStringMatcher&gt;` is set, authorization
     * response headers that have a correspondent match will be emitted as dynamic metadata to be consumed
     * by the next filter. This metadata lives in a namespace specified by the canonical name of extension filter
     * that requires it:
     * - :ref:`envoy.filters.http.ext_authz &lt;config_http_filters_ext_authz_dynamic_metadata&gt;` for HTTP filter.
     * - :ref:`envoy.filters.network.ext_authz &lt;config_network_filters_ext_authz_dynamic_metadata&gt;` for network filter.
     * </pre>
     *
     * <code>.envoy.type.matcher.v3.ListStringMatcher dynamic_metadata_from_headers = 5;</code>
     */
    public Builder setDynamicMetadataFromHeaders(io.envoyproxy.envoy.type.matcher.v3.ListStringMatcher value) {
      if (dynamicMetadataFromHeadersBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        dynamicMetadataFromHeaders_ = value;
      } else {
        dynamicMetadataFromHeadersBuilder_.setMessage(value);
      }
      bitField0_ |= 0x00000010;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * When this :ref:`list &lt;envoy_v3_api_msg_type.matcher.v3.ListStringMatcher&gt;` is set, authorization
     * response headers that have a correspondent match will be emitted as dynamic metadata to be consumed
     * by the next filter. This metadata lives in a namespace specified by the canonical name of extension filter
     * that requires it:
     * - :ref:`envoy.filters.http.ext_authz &lt;config_http_filters_ext_authz_dynamic_metadata&gt;` for HTTP filter.
     * - :ref:`envoy.filters.network.ext_authz &lt;config_network_filters_ext_authz_dynamic_metadata&gt;` for network filter.
     * </pre>
     *
     * <code>.envoy.type.matcher.v3.ListStringMatcher dynamic_metadata_from_headers = 5;</code>
     */
    public Builder setDynamicMetadataFromHeaders(
        io.envoyproxy.envoy.type.matcher.v3.ListStringMatcher.Builder builderForValue) {
      if (dynamicMetadataFromHeadersBuilder_ == null) {
        dynamicMetadataFromHeaders_ = builderForValue.build();
      } else {
        dynamicMetadataFromHeadersBuilder_.setMessage(builderForValue.build());
      }
      bitField0_ |= 0x00000010;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * When this :ref:`list &lt;envoy_v3_api_msg_type.matcher.v3.ListStringMatcher&gt;` is set, authorization
     * response headers that have a correspondent match will be emitted as dynamic metadata to be consumed
     * by the next filter. This metadata lives in a namespace specified by the canonical name of extension filter
     * that requires it:
     * - :ref:`envoy.filters.http.ext_authz &lt;config_http_filters_ext_authz_dynamic_metadata&gt;` for HTTP filter.
     * - :ref:`envoy.filters.network.ext_authz &lt;config_network_filters_ext_authz_dynamic_metadata&gt;` for network filter.
     * </pre>
     *
     * <code>.envoy.type.matcher.v3.ListStringMatcher dynamic_metadata_from_headers = 5;</code>
     */
    public Builder mergeDynamicMetadataFromHeaders(io.envoyproxy.envoy.type.matcher.v3.ListStringMatcher value) {
      if (dynamicMetadataFromHeadersBuilder_ == null) {
        if (((bitField0_ & 0x00000010) != 0) &&
          dynamicMetadataFromHeaders_ != null &&
          dynamicMetadataFromHeaders_ != io.envoyproxy.envoy.type.matcher.v3.ListStringMatcher.getDefaultInstance()) {
          getDynamicMetadataFromHeadersBuilder().mergeFrom(value);
        } else {
          dynamicMetadataFromHeaders_ = value;
        }
      } else {
        dynamicMetadataFromHeadersBuilder_.mergeFrom(value);
      }
      bitField0_ |= 0x00000010;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * When this :ref:`list &lt;envoy_v3_api_msg_type.matcher.v3.ListStringMatcher&gt;` is set, authorization
     * response headers that have a correspondent match will be emitted as dynamic metadata to be consumed
     * by the next filter. This metadata lives in a namespace specified by the canonical name of extension filter
     * that requires it:
     * - :ref:`envoy.filters.http.ext_authz &lt;config_http_filters_ext_authz_dynamic_metadata&gt;` for HTTP filter.
     * - :ref:`envoy.filters.network.ext_authz &lt;config_network_filters_ext_authz_dynamic_metadata&gt;` for network filter.
     * </pre>
     *
     * <code>.envoy.type.matcher.v3.ListStringMatcher dynamic_metadata_from_headers = 5;</code>
     */
    public Builder clearDynamicMetadataFromHeaders() {
      bitField0_ = (bitField0_ & ~0x00000010);
      dynamicMetadataFromHeaders_ = null;
      if (dynamicMetadataFromHeadersBuilder_ != null) {
        dynamicMetadataFromHeadersBuilder_.dispose();
        dynamicMetadataFromHeadersBuilder_ = null;
      }
      onChanged();
      return this;
    }
    /**
     * <pre>
     * When this :ref:`list &lt;envoy_v3_api_msg_type.matcher.v3.ListStringMatcher&gt;` is set, authorization
     * response headers that have a correspondent match will be emitted as dynamic metadata to be consumed
     * by the next filter. This metadata lives in a namespace specified by the canonical name of extension filter
     * that requires it:
     * - :ref:`envoy.filters.http.ext_authz &lt;config_http_filters_ext_authz_dynamic_metadata&gt;` for HTTP filter.
     * - :ref:`envoy.filters.network.ext_authz &lt;config_network_filters_ext_authz_dynamic_metadata&gt;` for network filter.
     * </pre>
     *
     * <code>.envoy.type.matcher.v3.ListStringMatcher dynamic_metadata_from_headers = 5;</code>
     */
    public io.envoyproxy.envoy.type.matcher.v3.ListStringMatcher.Builder getDynamicMetadataFromHeadersBuilder() {
      bitField0_ |= 0x00000010;
      onChanged();
      return getDynamicMetadataFromHeadersFieldBuilder().getBuilder();
    }
    /**
     * <pre>
     * When this :ref:`list &lt;envoy_v3_api_msg_type.matcher.v3.ListStringMatcher&gt;` is set, authorization
     * response headers that have a correspondent match will be emitted as dynamic metadata to be consumed
     * by the next filter. This metadata lives in a namespace specified by the canonical name of extension filter
     * that requires it:
     * - :ref:`envoy.filters.http.ext_authz &lt;config_http_filters_ext_authz_dynamic_metadata&gt;` for HTTP filter.
     * - :ref:`envoy.filters.network.ext_authz &lt;config_network_filters_ext_authz_dynamic_metadata&gt;` for network filter.
     * </pre>
     *
     * <code>.envoy.type.matcher.v3.ListStringMatcher dynamic_metadata_from_headers = 5;</code>
     */
    public io.envoyproxy.envoy.type.matcher.v3.ListStringMatcherOrBuilder getDynamicMetadataFromHeadersOrBuilder() {
      if (dynamicMetadataFromHeadersBuilder_ != null) {
        return dynamicMetadataFromHeadersBuilder_.getMessageOrBuilder();
      } else {
        return dynamicMetadataFromHeaders_ == null ?
            io.envoyproxy.envoy.type.matcher.v3.ListStringMatcher.getDefaultInstance() : dynamicMetadataFromHeaders_;
      }
    }
    /**
     * <pre>
     * When this :ref:`list &lt;envoy_v3_api_msg_type.matcher.v3.ListStringMatcher&gt;` is set, authorization
     * response headers that have a correspondent match will be emitted as dynamic metadata to be consumed
     * by the next filter. This metadata lives in a namespace specified by the canonical name of extension filter
     * that requires it:
     * - :ref:`envoy.filters.http.ext_authz &lt;config_http_filters_ext_authz_dynamic_metadata&gt;` for HTTP filter.
     * - :ref:`envoy.filters.network.ext_authz &lt;config_network_filters_ext_authz_dynamic_metadata&gt;` for network filter.
     * </pre>
     *
     * <code>.envoy.type.matcher.v3.ListStringMatcher dynamic_metadata_from_headers = 5;</code>
     */
    private com.google.protobuf.SingleFieldBuilderV3<
        io.envoyproxy.envoy.type.matcher.v3.ListStringMatcher, io.envoyproxy.envoy.type.matcher.v3.ListStringMatcher.Builder, io.envoyproxy.envoy.type.matcher.v3.ListStringMatcherOrBuilder> 
        getDynamicMetadataFromHeadersFieldBuilder() {
      if (dynamicMetadataFromHeadersBuilder_ == null) {
        dynamicMetadataFromHeadersBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
            io.envoyproxy.envoy.type.matcher.v3.ListStringMatcher, io.envoyproxy.envoy.type.matcher.v3.ListStringMatcher.Builder, io.envoyproxy.envoy.type.matcher.v3.ListStringMatcherOrBuilder>(
                getDynamicMetadataFromHeaders(),
                getParentForChildren(),
                isClean());
        dynamicMetadataFromHeaders_ = null;
      }
      return dynamicMetadataFromHeadersBuilder_;
    }
    @java.lang.Override
    public final Builder setUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return super.setUnknownFields(unknownFields);
    }

    @java.lang.Override
    public final Builder mergeUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return super.mergeUnknownFields(unknownFields);
    }


    // @@protoc_insertion_point(builder_scope:envoy.extensions.filters.http.ext_authz.v3.AuthorizationResponse)
  }

  // @@protoc_insertion_point(class_scope:envoy.extensions.filters.http.ext_authz.v3.AuthorizationResponse)
  private static final io.envoyproxy.envoy.extensions.filters.http.ext_authz.v3.AuthorizationResponse DEFAULT_INSTANCE;
  static {
    DEFAULT_INSTANCE = new io.envoyproxy.envoy.extensions.filters.http.ext_authz.v3.AuthorizationResponse();
  }

  public static io.envoyproxy.envoy.extensions.filters.http.ext_authz.v3.AuthorizationResponse getDefaultInstance() {
    return DEFAULT_INSTANCE;
  }

  private static final com.google.protobuf.Parser<AuthorizationResponse>
      PARSER = new com.google.protobuf.AbstractParser<AuthorizationResponse>() {
    @java.lang.Override
    public AuthorizationResponse parsePartialFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      Builder builder = newBuilder();
      try {
        builder.mergeFrom(input, extensionRegistry);
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(builder.buildPartial());
      } catch (com.google.protobuf.UninitializedMessageException e) {
        throw e.asInvalidProtocolBufferException().setUnfinishedMessage(builder.buildPartial());
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(e)
            .setUnfinishedMessage(builder.buildPartial());
      }
      return builder.buildPartial();
    }
  };

  public static com.google.protobuf.Parser<AuthorizationResponse> parser() {
    return PARSER;
  }

  @java.lang.Override
  public com.google.protobuf.Parser<AuthorizationResponse> getParserForType() {
    return PARSER;
  }

  @java.lang.Override
  public io.envoyproxy.envoy.extensions.filters.http.ext_authz.v3.AuthorizationResponse getDefaultInstanceForType() {
    return DEFAULT_INSTANCE;
  }

}

