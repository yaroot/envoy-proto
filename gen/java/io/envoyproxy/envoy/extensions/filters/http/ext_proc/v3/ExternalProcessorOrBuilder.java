// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: envoy/extensions/filters/http/ext_proc/v3/ext_proc.proto

package io.envoyproxy.envoy.extensions.filters.http.ext_proc.v3;

public interface ExternalProcessorOrBuilder extends
    // @@protoc_insertion_point(interface_extends:envoy.extensions.filters.http.ext_proc.v3.ExternalProcessor)
    com.google.protobuf.MessageOrBuilder {

  /**
   * <pre>
   * Configuration for the gRPC service that the filter will communicate with.
   * The filter supports both the "Envoy" and "Google" gRPC clients.
   * </pre>
   *
   * <code>.envoy.config.core.v3.GrpcService grpc_service = 1;</code>
   * @return Whether the grpcService field is set.
   */
  boolean hasGrpcService();
  /**
   * <pre>
   * Configuration for the gRPC service that the filter will communicate with.
   * The filter supports both the "Envoy" and "Google" gRPC clients.
   * </pre>
   *
   * <code>.envoy.config.core.v3.GrpcService grpc_service = 1;</code>
   * @return The grpcService.
   */
  io.envoyproxy.envoy.config.core.v3.GrpcService getGrpcService();
  /**
   * <pre>
   * Configuration for the gRPC service that the filter will communicate with.
   * The filter supports both the "Envoy" and "Google" gRPC clients.
   * </pre>
   *
   * <code>.envoy.config.core.v3.GrpcService grpc_service = 1;</code>
   */
  io.envoyproxy.envoy.config.core.v3.GrpcServiceOrBuilder getGrpcServiceOrBuilder();

  /**
   * <pre>
   * By default, if the gRPC stream cannot be established, or if it is closed
   * prematurely with an error, the filter will fail. Specifically, if the
   * response headers have not yet been delivered, then it will return a 500
   * error downstream. If they have been delivered, then instead the HTTP stream to the
   * downstream client will be reset.
   * With this parameter set to true, however, then if the gRPC stream is prematurely closed
   * or could not be opened, processing continues without error.
   * </pre>
   *
   * <code>bool failure_mode_allow = 2;</code>
   * @return The failureModeAllow.
   */
  boolean getFailureModeAllow();

  /**
   * <pre>
   * Specifies default options for how HTTP headers, trailers, and bodies are
   * sent. See ProcessingMode for details.
   * </pre>
   *
   * <code>.envoy.extensions.filters.http.ext_proc.v3.ProcessingMode processing_mode = 3;</code>
   * @return Whether the processingMode field is set.
   */
  boolean hasProcessingMode();
  /**
   * <pre>
   * Specifies default options for how HTTP headers, trailers, and bodies are
   * sent. See ProcessingMode for details.
   * </pre>
   *
   * <code>.envoy.extensions.filters.http.ext_proc.v3.ProcessingMode processing_mode = 3;</code>
   * @return The processingMode.
   */
  io.envoyproxy.envoy.extensions.filters.http.ext_proc.v3.ProcessingMode getProcessingMode();
  /**
   * <pre>
   * Specifies default options for how HTTP headers, trailers, and bodies are
   * sent. See ProcessingMode for details.
   * </pre>
   *
   * <code>.envoy.extensions.filters.http.ext_proc.v3.ProcessingMode processing_mode = 3;</code>
   */
  io.envoyproxy.envoy.extensions.filters.http.ext_proc.v3.ProcessingModeOrBuilder getProcessingModeOrBuilder();

  /**
   * <pre>
   * [#not-implemented-hide:]
   * If true, send each part of the HTTP request or response specified by ProcessingMode
   * asynchronously -- in other words, send the message on the gRPC stream and then continue
   * filter processing. If false, which is the default, suspend filter execution after
   * each message is sent to the remote service and wait up to "message_timeout"
   * for a reply.
   * </pre>
   *
   * <code>bool async_mode = 4;</code>
   * @return The asyncMode.
   */
  boolean getAsyncMode();

  /**
   * <pre>
   * [#not-implemented-hide:]
   * Envoy provides a number of :ref:`attributes &lt;arch_overview_attributes&gt;`
   * for expressive policies. Each attribute name provided in this field will be
   * matched against that list and populated in the request_headers message.
   * See the :ref:`attribute documentation &lt;arch_overview_request_attributes&gt;`
   * for the list of supported attributes and their types.
   * </pre>
   *
   * <code>repeated string request_attributes = 5;</code>
   * @return A list containing the requestAttributes.
   */
  java.util.List<java.lang.String>
      getRequestAttributesList();
  /**
   * <pre>
   * [#not-implemented-hide:]
   * Envoy provides a number of :ref:`attributes &lt;arch_overview_attributes&gt;`
   * for expressive policies. Each attribute name provided in this field will be
   * matched against that list and populated in the request_headers message.
   * See the :ref:`attribute documentation &lt;arch_overview_request_attributes&gt;`
   * for the list of supported attributes and their types.
   * </pre>
   *
   * <code>repeated string request_attributes = 5;</code>
   * @return The count of requestAttributes.
   */
  int getRequestAttributesCount();
  /**
   * <pre>
   * [#not-implemented-hide:]
   * Envoy provides a number of :ref:`attributes &lt;arch_overview_attributes&gt;`
   * for expressive policies. Each attribute name provided in this field will be
   * matched against that list and populated in the request_headers message.
   * See the :ref:`attribute documentation &lt;arch_overview_request_attributes&gt;`
   * for the list of supported attributes and their types.
   * </pre>
   *
   * <code>repeated string request_attributes = 5;</code>
   * @param index The index of the element to return.
   * @return The requestAttributes at the given index.
   */
  java.lang.String getRequestAttributes(int index);
  /**
   * <pre>
   * [#not-implemented-hide:]
   * Envoy provides a number of :ref:`attributes &lt;arch_overview_attributes&gt;`
   * for expressive policies. Each attribute name provided in this field will be
   * matched against that list and populated in the request_headers message.
   * See the :ref:`attribute documentation &lt;arch_overview_request_attributes&gt;`
   * for the list of supported attributes and their types.
   * </pre>
   *
   * <code>repeated string request_attributes = 5;</code>
   * @param index The index of the value to return.
   * @return The bytes of the requestAttributes at the given index.
   */
  com.google.protobuf.ByteString
      getRequestAttributesBytes(int index);

  /**
   * <pre>
   * [#not-implemented-hide:]
   * Envoy provides a number of :ref:`attributes &lt;arch_overview_attributes&gt;`
   * for expressive policies. Each attribute name provided in this field will be
   * matched against that list and populated in the response_headers message.
   * See the :ref:`attribute documentation &lt;arch_overview_attributes&gt;`
   * for the list of supported attributes and their types.
   * </pre>
   *
   * <code>repeated string response_attributes = 6;</code>
   * @return A list containing the responseAttributes.
   */
  java.util.List<java.lang.String>
      getResponseAttributesList();
  /**
   * <pre>
   * [#not-implemented-hide:]
   * Envoy provides a number of :ref:`attributes &lt;arch_overview_attributes&gt;`
   * for expressive policies. Each attribute name provided in this field will be
   * matched against that list and populated in the response_headers message.
   * See the :ref:`attribute documentation &lt;arch_overview_attributes&gt;`
   * for the list of supported attributes and their types.
   * </pre>
   *
   * <code>repeated string response_attributes = 6;</code>
   * @return The count of responseAttributes.
   */
  int getResponseAttributesCount();
  /**
   * <pre>
   * [#not-implemented-hide:]
   * Envoy provides a number of :ref:`attributes &lt;arch_overview_attributes&gt;`
   * for expressive policies. Each attribute name provided in this field will be
   * matched against that list and populated in the response_headers message.
   * See the :ref:`attribute documentation &lt;arch_overview_attributes&gt;`
   * for the list of supported attributes and their types.
   * </pre>
   *
   * <code>repeated string response_attributes = 6;</code>
   * @param index The index of the element to return.
   * @return The responseAttributes at the given index.
   */
  java.lang.String getResponseAttributes(int index);
  /**
   * <pre>
   * [#not-implemented-hide:]
   * Envoy provides a number of :ref:`attributes &lt;arch_overview_attributes&gt;`
   * for expressive policies. Each attribute name provided in this field will be
   * matched against that list and populated in the response_headers message.
   * See the :ref:`attribute documentation &lt;arch_overview_attributes&gt;`
   * for the list of supported attributes and their types.
   * </pre>
   *
   * <code>repeated string response_attributes = 6;</code>
   * @param index The index of the value to return.
   * @return The bytes of the responseAttributes at the given index.
   */
  com.google.protobuf.ByteString
      getResponseAttributesBytes(int index);

  /**
   * <pre>
   * Specifies the timeout for each individual message sent on the stream and
   * when the filter is running in synchronous mode. Whenever
   * the proxy sends a message on the stream that requires a response, it will
   * reset this timer, and will stop processing and return an error (subject
   * to the processing mode) if the timer expires before a matching response
   * is received. There is no timeout when the filter is running in asynchronous
   * mode. Default is 200 milliseconds.
   * </pre>
   *
   * <code>.google.protobuf.Duration message_timeout = 7;</code>
   * @return Whether the messageTimeout field is set.
   */
  boolean hasMessageTimeout();
  /**
   * <pre>
   * Specifies the timeout for each individual message sent on the stream and
   * when the filter is running in synchronous mode. Whenever
   * the proxy sends a message on the stream that requires a response, it will
   * reset this timer, and will stop processing and return an error (subject
   * to the processing mode) if the timer expires before a matching response
   * is received. There is no timeout when the filter is running in asynchronous
   * mode. Default is 200 milliseconds.
   * </pre>
   *
   * <code>.google.protobuf.Duration message_timeout = 7;</code>
   * @return The messageTimeout.
   */
  com.google.protobuf.Duration getMessageTimeout();
  /**
   * <pre>
   * Specifies the timeout for each individual message sent on the stream and
   * when the filter is running in synchronous mode. Whenever
   * the proxy sends a message on the stream that requires a response, it will
   * reset this timer, and will stop processing and return an error (subject
   * to the processing mode) if the timer expires before a matching response
   * is received. There is no timeout when the filter is running in asynchronous
   * mode. Default is 200 milliseconds.
   * </pre>
   *
   * <code>.google.protobuf.Duration message_timeout = 7;</code>
   */
  com.google.protobuf.DurationOrBuilder getMessageTimeoutOrBuilder();

  /**
   * <pre>
   * Optional additional prefix to use when emitting statistics. This allows to distinguish
   * emitted statistics between configured *ext_proc* filters in an HTTP filter chain.
   * </pre>
   *
   * <code>string stat_prefix = 8;</code>
   * @return The statPrefix.
   */
  java.lang.String getStatPrefix();
  /**
   * <pre>
   * Optional additional prefix to use when emitting statistics. This allows to distinguish
   * emitted statistics between configured *ext_proc* filters in an HTTP filter chain.
   * </pre>
   *
   * <code>string stat_prefix = 8;</code>
   * @return The bytes for statPrefix.
   */
  com.google.protobuf.ByteString
      getStatPrefixBytes();

  /**
   * <pre>
   * Rules that determine what modifications an external processing server may
   * make to message headers. If not set, all headers may be modified except
   * for "host", ":authority", ":scheme", ":method", and headers that start
   * with the header prefix set via
   * :ref:`header_prefix &lt;envoy_v3_api_field_config.bootstrap.v3.Bootstrap.header_prefix&gt;`
   * (which is usually "x-envoy").
   * Note that changing headers such as "host" or ":authority" may not in itself
   * change Envoy's routing decision, as routes can be cached. To also force the
   * route to be recomputed, set the
   * :ref:`clear_route_cache &lt;envoy_v3_api_field_service.ext_proc.v3.CommonResponse.clear_route_cache&gt;`
   * field to true in the same response.
   * </pre>
   *
   * <code>.envoy.config.common.mutation_rules.v3.HeaderMutationRules mutation_rules = 9;</code>
   * @return Whether the mutationRules field is set.
   */
  boolean hasMutationRules();
  /**
   * <pre>
   * Rules that determine what modifications an external processing server may
   * make to message headers. If not set, all headers may be modified except
   * for "host", ":authority", ":scheme", ":method", and headers that start
   * with the header prefix set via
   * :ref:`header_prefix &lt;envoy_v3_api_field_config.bootstrap.v3.Bootstrap.header_prefix&gt;`
   * (which is usually "x-envoy").
   * Note that changing headers such as "host" or ":authority" may not in itself
   * change Envoy's routing decision, as routes can be cached. To also force the
   * route to be recomputed, set the
   * :ref:`clear_route_cache &lt;envoy_v3_api_field_service.ext_proc.v3.CommonResponse.clear_route_cache&gt;`
   * field to true in the same response.
   * </pre>
   *
   * <code>.envoy.config.common.mutation_rules.v3.HeaderMutationRules mutation_rules = 9;</code>
   * @return The mutationRules.
   */
  io.envoyproxy.envoy.config.common.mutation_rules.v3.HeaderMutationRules getMutationRules();
  /**
   * <pre>
   * Rules that determine what modifications an external processing server may
   * make to message headers. If not set, all headers may be modified except
   * for "host", ":authority", ":scheme", ":method", and headers that start
   * with the header prefix set via
   * :ref:`header_prefix &lt;envoy_v3_api_field_config.bootstrap.v3.Bootstrap.header_prefix&gt;`
   * (which is usually "x-envoy").
   * Note that changing headers such as "host" or ":authority" may not in itself
   * change Envoy's routing decision, as routes can be cached. To also force the
   * route to be recomputed, set the
   * :ref:`clear_route_cache &lt;envoy_v3_api_field_service.ext_proc.v3.CommonResponse.clear_route_cache&gt;`
   * field to true in the same response.
   * </pre>
   *
   * <code>.envoy.config.common.mutation_rules.v3.HeaderMutationRules mutation_rules = 9;</code>
   */
  io.envoyproxy.envoy.config.common.mutation_rules.v3.HeaderMutationRulesOrBuilder getMutationRulesOrBuilder();
}
