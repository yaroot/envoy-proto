// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: envoy/extensions/filters/http/oauth2/v3/oauth.proto

package io.envoyproxy.envoy.extensions.filters.http.oauth2.v3;

public interface OAuth2ConfigOrBuilder extends
    // @@protoc_insertion_point(interface_extends:envoy.extensions.filters.http.oauth2.v3.OAuth2Config)
    com.google.protobuf.MessageOrBuilder {

  /**
   * <pre>
   * Endpoint on the authorization server to retrieve the access token from.
   * </pre>
   *
   * <code>.envoy.config.core.v3.HttpUri token_endpoint = 1;</code>
   * @return Whether the tokenEndpoint field is set.
   */
  boolean hasTokenEndpoint();
  /**
   * <pre>
   * Endpoint on the authorization server to retrieve the access token from.
   * </pre>
   *
   * <code>.envoy.config.core.v3.HttpUri token_endpoint = 1;</code>
   * @return The tokenEndpoint.
   */
  io.envoyproxy.envoy.config.core.v3.HttpUri getTokenEndpoint();
  /**
   * <pre>
   * Endpoint on the authorization server to retrieve the access token from.
   * </pre>
   *
   * <code>.envoy.config.core.v3.HttpUri token_endpoint = 1;</code>
   */
  io.envoyproxy.envoy.config.core.v3.HttpUriOrBuilder getTokenEndpointOrBuilder();

  /**
   * <pre>
   * The endpoint redirect to for authorization in response to unauthorized requests.
   * </pre>
   *
   * <code>string authorization_endpoint = 2 [(.validate.rules) = { ... }</code>
   * @return The authorizationEndpoint.
   */
  java.lang.String getAuthorizationEndpoint();
  /**
   * <pre>
   * The endpoint redirect to for authorization in response to unauthorized requests.
   * </pre>
   *
   * <code>string authorization_endpoint = 2 [(.validate.rules) = { ... }</code>
   * @return The bytes for authorizationEndpoint.
   */
  com.google.protobuf.ByteString
      getAuthorizationEndpointBytes();

  /**
   * <pre>
   * Credentials used for OAuth.
   * </pre>
   *
   * <code>.envoy.extensions.filters.http.oauth2.v3.OAuth2Credentials credentials = 3 [(.validate.rules) = { ... }</code>
   * @return Whether the credentials field is set.
   */
  boolean hasCredentials();
  /**
   * <pre>
   * Credentials used for OAuth.
   * </pre>
   *
   * <code>.envoy.extensions.filters.http.oauth2.v3.OAuth2Credentials credentials = 3 [(.validate.rules) = { ... }</code>
   * @return The credentials.
   */
  io.envoyproxy.envoy.extensions.filters.http.oauth2.v3.OAuth2Credentials getCredentials();
  /**
   * <pre>
   * Credentials used for OAuth.
   * </pre>
   *
   * <code>.envoy.extensions.filters.http.oauth2.v3.OAuth2Credentials credentials = 3 [(.validate.rules) = { ... }</code>
   */
  io.envoyproxy.envoy.extensions.filters.http.oauth2.v3.OAuth2CredentialsOrBuilder getCredentialsOrBuilder();

  /**
   * <pre>
   * The redirect URI passed to the authorization endpoint. Supports header formatting
   * tokens. For more information, including details on header value syntax, see the
   * documentation on :ref:`custom request headers &lt;config_http_conn_man_headers_custom_request_headers&gt;`.
   * This URI should not contain any query parameters.
   * </pre>
   *
   * <code>string redirect_uri = 4 [(.validate.rules) = { ... }</code>
   * @return The redirectUri.
   */
  java.lang.String getRedirectUri();
  /**
   * <pre>
   * The redirect URI passed to the authorization endpoint. Supports header formatting
   * tokens. For more information, including details on header value syntax, see the
   * documentation on :ref:`custom request headers &lt;config_http_conn_man_headers_custom_request_headers&gt;`.
   * This URI should not contain any query parameters.
   * </pre>
   *
   * <code>string redirect_uri = 4 [(.validate.rules) = { ... }</code>
   * @return The bytes for redirectUri.
   */
  com.google.protobuf.ByteString
      getRedirectUriBytes();

  /**
   * <pre>
   * Matching criteria used to determine whether a path appears to be the result of a redirect from the authorization server.
   * </pre>
   *
   * <code>.envoy.type.matcher.v3.PathMatcher redirect_path_matcher = 5 [(.validate.rules) = { ... }</code>
   * @return Whether the redirectPathMatcher field is set.
   */
  boolean hasRedirectPathMatcher();
  /**
   * <pre>
   * Matching criteria used to determine whether a path appears to be the result of a redirect from the authorization server.
   * </pre>
   *
   * <code>.envoy.type.matcher.v3.PathMatcher redirect_path_matcher = 5 [(.validate.rules) = { ... }</code>
   * @return The redirectPathMatcher.
   */
  io.envoyproxy.envoy.type.matcher.v3.PathMatcher getRedirectPathMatcher();
  /**
   * <pre>
   * Matching criteria used to determine whether a path appears to be the result of a redirect from the authorization server.
   * </pre>
   *
   * <code>.envoy.type.matcher.v3.PathMatcher redirect_path_matcher = 5 [(.validate.rules) = { ... }</code>
   */
  io.envoyproxy.envoy.type.matcher.v3.PathMatcherOrBuilder getRedirectPathMatcherOrBuilder();

  /**
   * <pre>
   * The path to sign a user out, clearing their credential cookies.
   * </pre>
   *
   * <code>.envoy.type.matcher.v3.PathMatcher signout_path = 6 [(.validate.rules) = { ... }</code>
   * @return Whether the signoutPath field is set.
   */
  boolean hasSignoutPath();
  /**
   * <pre>
   * The path to sign a user out, clearing their credential cookies.
   * </pre>
   *
   * <code>.envoy.type.matcher.v3.PathMatcher signout_path = 6 [(.validate.rules) = { ... }</code>
   * @return The signoutPath.
   */
  io.envoyproxy.envoy.type.matcher.v3.PathMatcher getSignoutPath();
  /**
   * <pre>
   * The path to sign a user out, clearing their credential cookies.
   * </pre>
   *
   * <code>.envoy.type.matcher.v3.PathMatcher signout_path = 6 [(.validate.rules) = { ... }</code>
   */
  io.envoyproxy.envoy.type.matcher.v3.PathMatcherOrBuilder getSignoutPathOrBuilder();

  /**
   * <pre>
   * Forward the OAuth token as a Bearer to upstream web service.
   * </pre>
   *
   * <code>bool forward_bearer_token = 7;</code>
   * @return The forwardBearerToken.
   */
  boolean getForwardBearerToken();

  /**
   * <pre>
   * Any request that matches any of the provided matchers will be passed through without OAuth validation.
   * </pre>
   *
   * <code>repeated .envoy.config.route.v3.HeaderMatcher pass_through_matcher = 8;</code>
   */
  java.util.List<io.envoyproxy.envoy.config.route.v3.HeaderMatcher> 
      getPassThroughMatcherList();
  /**
   * <pre>
   * Any request that matches any of the provided matchers will be passed through without OAuth validation.
   * </pre>
   *
   * <code>repeated .envoy.config.route.v3.HeaderMatcher pass_through_matcher = 8;</code>
   */
  io.envoyproxy.envoy.config.route.v3.HeaderMatcher getPassThroughMatcher(int index);
  /**
   * <pre>
   * Any request that matches any of the provided matchers will be passed through without OAuth validation.
   * </pre>
   *
   * <code>repeated .envoy.config.route.v3.HeaderMatcher pass_through_matcher = 8;</code>
   */
  int getPassThroughMatcherCount();
  /**
   * <pre>
   * Any request that matches any of the provided matchers will be passed through without OAuth validation.
   * </pre>
   *
   * <code>repeated .envoy.config.route.v3.HeaderMatcher pass_through_matcher = 8;</code>
   */
  java.util.List<? extends io.envoyproxy.envoy.config.route.v3.HeaderMatcherOrBuilder> 
      getPassThroughMatcherOrBuilderList();
  /**
   * <pre>
   * Any request that matches any of the provided matchers will be passed through without OAuth validation.
   * </pre>
   *
   * <code>repeated .envoy.config.route.v3.HeaderMatcher pass_through_matcher = 8;</code>
   */
  io.envoyproxy.envoy.config.route.v3.HeaderMatcherOrBuilder getPassThroughMatcherOrBuilder(
      int index);

  /**
   * <pre>
   * Optional list of OAuth scopes to be claimed in the authorization request. If not specified,
   * defaults to "user" scope.
   * OAuth RFC https://tools.ietf.org/html/rfc6749#section-3.3
   * </pre>
   *
   * <code>repeated string auth_scopes = 9;</code>
   * @return A list containing the authScopes.
   */
  java.util.List<java.lang.String>
      getAuthScopesList();
  /**
   * <pre>
   * Optional list of OAuth scopes to be claimed in the authorization request. If not specified,
   * defaults to "user" scope.
   * OAuth RFC https://tools.ietf.org/html/rfc6749#section-3.3
   * </pre>
   *
   * <code>repeated string auth_scopes = 9;</code>
   * @return The count of authScopes.
   */
  int getAuthScopesCount();
  /**
   * <pre>
   * Optional list of OAuth scopes to be claimed in the authorization request. If not specified,
   * defaults to "user" scope.
   * OAuth RFC https://tools.ietf.org/html/rfc6749#section-3.3
   * </pre>
   *
   * <code>repeated string auth_scopes = 9;</code>
   * @param index The index of the element to return.
   * @return The authScopes at the given index.
   */
  java.lang.String getAuthScopes(int index);
  /**
   * <pre>
   * Optional list of OAuth scopes to be claimed in the authorization request. If not specified,
   * defaults to "user" scope.
   * OAuth RFC https://tools.ietf.org/html/rfc6749#section-3.3
   * </pre>
   *
   * <code>repeated string auth_scopes = 9;</code>
   * @param index The index of the value to return.
   * @return The bytes of the authScopes at the given index.
   */
  com.google.protobuf.ByteString
      getAuthScopesBytes(int index);

  /**
   * <pre>
   * Optional resource parameter for authorization request
   * RFC: https://tools.ietf.org/html/rfc8707
   * </pre>
   *
   * <code>repeated string resources = 10;</code>
   * @return A list containing the resources.
   */
  java.util.List<java.lang.String>
      getResourcesList();
  /**
   * <pre>
   * Optional resource parameter for authorization request
   * RFC: https://tools.ietf.org/html/rfc8707
   * </pre>
   *
   * <code>repeated string resources = 10;</code>
   * @return The count of resources.
   */
  int getResourcesCount();
  /**
   * <pre>
   * Optional resource parameter for authorization request
   * RFC: https://tools.ietf.org/html/rfc8707
   * </pre>
   *
   * <code>repeated string resources = 10;</code>
   * @param index The index of the element to return.
   * @return The resources at the given index.
   */
  java.lang.String getResources(int index);
  /**
   * <pre>
   * Optional resource parameter for authorization request
   * RFC: https://tools.ietf.org/html/rfc8707
   * </pre>
   *
   * <code>repeated string resources = 10;</code>
   * @param index The index of the value to return.
   * @return The bytes of the resources at the given index.
   */
  com.google.protobuf.ByteString
      getResourcesBytes(int index);

  /**
   * <pre>
   * Defines how ``client_id`` and ``client_secret`` are sent in OAuth client to OAuth server requests.
   * RFC https://datatracker.ietf.org/doc/html/rfc6749#section-2.3.1
   * </pre>
   *
   * <code>.envoy.extensions.filters.http.oauth2.v3.OAuth2Config.AuthType auth_type = 11 [(.validate.rules) = { ... }</code>
   * @return The enum numeric value on the wire for authType.
   */
  int getAuthTypeValue();
  /**
   * <pre>
   * Defines how ``client_id`` and ``client_secret`` are sent in OAuth client to OAuth server requests.
   * RFC https://datatracker.ietf.org/doc/html/rfc6749#section-2.3.1
   * </pre>
   *
   * <code>.envoy.extensions.filters.http.oauth2.v3.OAuth2Config.AuthType auth_type = 11 [(.validate.rules) = { ... }</code>
   * @return The authType.
   */
  io.envoyproxy.envoy.extensions.filters.http.oauth2.v3.OAuth2Config.AuthType getAuthType();
}
