// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: envoy/extensions/filters/http/oauth2/v3/oauth.proto

package io.envoyproxy.envoy.extensions.filters.http.oauth2.v3;

/**
 * <pre>
 * OAuth config
 * [#next-free-field: 12]
 * </pre>
 *
 * Protobuf type {@code envoy.extensions.filters.http.oauth2.v3.OAuth2Config}
 */
public final class OAuth2Config extends
    com.google.protobuf.GeneratedMessageV3 implements
    // @@protoc_insertion_point(message_implements:envoy.extensions.filters.http.oauth2.v3.OAuth2Config)
    OAuth2ConfigOrBuilder {
private static final long serialVersionUID = 0L;
  // Use OAuth2Config.newBuilder() to construct.
  private OAuth2Config(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
    super(builder);
  }
  private OAuth2Config() {
    authorizationEndpoint_ = "";
    redirectUri_ = "";
    passThroughMatcher_ = java.util.Collections.emptyList();
    authScopes_ = com.google.protobuf.LazyStringArrayList.EMPTY;
    resources_ = com.google.protobuf.LazyStringArrayList.EMPTY;
    authType_ = 0;
  }

  @java.lang.Override
  @SuppressWarnings({"unused"})
  protected java.lang.Object newInstance(
      UnusedPrivateParameter unused) {
    return new OAuth2Config();
  }

  @java.lang.Override
  public final com.google.protobuf.UnknownFieldSet
  getUnknownFields() {
    return this.unknownFields;
  }
  public static final com.google.protobuf.Descriptors.Descriptor
      getDescriptor() {
    return io.envoyproxy.envoy.extensions.filters.http.oauth2.v3.OauthProto.internal_static_envoy_extensions_filters_http_oauth2_v3_OAuth2Config_descriptor;
  }

  @java.lang.Override
  protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internalGetFieldAccessorTable() {
    return io.envoyproxy.envoy.extensions.filters.http.oauth2.v3.OauthProto.internal_static_envoy_extensions_filters_http_oauth2_v3_OAuth2Config_fieldAccessorTable
        .ensureFieldAccessorsInitialized(
            io.envoyproxy.envoy.extensions.filters.http.oauth2.v3.OAuth2Config.class, io.envoyproxy.envoy.extensions.filters.http.oauth2.v3.OAuth2Config.Builder.class);
  }

  /**
   * Protobuf enum {@code envoy.extensions.filters.http.oauth2.v3.OAuth2Config.AuthType}
   */
  public enum AuthType
      implements com.google.protobuf.ProtocolMessageEnum {
    /**
     * <pre>
     * The ``client_id`` and ``client_secret`` will be sent in the URL encoded request body.
     * This type should only be used when Auth server does not support Basic authentication.
     * </pre>
     *
     * <code>URL_ENCODED_BODY = 0;</code>
     */
    URL_ENCODED_BODY(0),
    /**
     * <pre>
     * The ``client_id`` and ``client_secret`` will be sent using HTTP Basic authentication scheme.
     * </pre>
     *
     * <code>BASIC_AUTH = 1;</code>
     */
    BASIC_AUTH(1),
    UNRECOGNIZED(-1),
    ;

    /**
     * <pre>
     * The ``client_id`` and ``client_secret`` will be sent in the URL encoded request body.
     * This type should only be used when Auth server does not support Basic authentication.
     * </pre>
     *
     * <code>URL_ENCODED_BODY = 0;</code>
     */
    public static final int URL_ENCODED_BODY_VALUE = 0;
    /**
     * <pre>
     * The ``client_id`` and ``client_secret`` will be sent using HTTP Basic authentication scheme.
     * </pre>
     *
     * <code>BASIC_AUTH = 1;</code>
     */
    public static final int BASIC_AUTH_VALUE = 1;


    public final int getNumber() {
      if (this == UNRECOGNIZED) {
        throw new java.lang.IllegalArgumentException(
            "Can't get the number of an unknown enum value.");
      }
      return value;
    }

    /**
     * @param value The numeric wire value of the corresponding enum entry.
     * @return The enum associated with the given numeric wire value.
     * @deprecated Use {@link #forNumber(int)} instead.
     */
    @java.lang.Deprecated
    public static AuthType valueOf(int value) {
      return forNumber(value);
    }

    /**
     * @param value The numeric wire value of the corresponding enum entry.
     * @return The enum associated with the given numeric wire value.
     */
    public static AuthType forNumber(int value) {
      switch (value) {
        case 0: return URL_ENCODED_BODY;
        case 1: return BASIC_AUTH;
        default: return null;
      }
    }

    public static com.google.protobuf.Internal.EnumLiteMap<AuthType>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static final com.google.protobuf.Internal.EnumLiteMap<
        AuthType> internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<AuthType>() {
            public AuthType findValueByNumber(int number) {
              return AuthType.forNumber(number);
            }
          };

    public final com.google.protobuf.Descriptors.EnumValueDescriptor
        getValueDescriptor() {
      if (this == UNRECOGNIZED) {
        throw new java.lang.IllegalStateException(
            "Can't get the descriptor of an unrecognized enum value.");
      }
      return getDescriptor().getValues().get(ordinal());
    }
    public final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptorForType() {
      return getDescriptor();
    }
    public static final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptor() {
      return io.envoyproxy.envoy.extensions.filters.http.oauth2.v3.OAuth2Config.getDescriptor().getEnumTypes().get(0);
    }

    private static final AuthType[] VALUES = values();

    public static AuthType valueOf(
        com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
      if (desc.getType() != getDescriptor()) {
        throw new java.lang.IllegalArgumentException(
          "EnumValueDescriptor is not for this type.");
      }
      if (desc.getIndex() == -1) {
        return UNRECOGNIZED;
      }
      return VALUES[desc.getIndex()];
    }

    private final int value;

    private AuthType(int value) {
      this.value = value;
    }

    // @@protoc_insertion_point(enum_scope:envoy.extensions.filters.http.oauth2.v3.OAuth2Config.AuthType)
  }

  public static final int TOKEN_ENDPOINT_FIELD_NUMBER = 1;
  private io.envoyproxy.envoy.config.core.v3.HttpUri tokenEndpoint_;
  /**
   * <pre>
   * Endpoint on the authorization server to retrieve the access token from.
   * </pre>
   *
   * <code>.envoy.config.core.v3.HttpUri token_endpoint = 1;</code>
   * @return Whether the tokenEndpoint field is set.
   */
  @java.lang.Override
  public boolean hasTokenEndpoint() {
    return tokenEndpoint_ != null;
  }
  /**
   * <pre>
   * Endpoint on the authorization server to retrieve the access token from.
   * </pre>
   *
   * <code>.envoy.config.core.v3.HttpUri token_endpoint = 1;</code>
   * @return The tokenEndpoint.
   */
  @java.lang.Override
  public io.envoyproxy.envoy.config.core.v3.HttpUri getTokenEndpoint() {
    return tokenEndpoint_ == null ? io.envoyproxy.envoy.config.core.v3.HttpUri.getDefaultInstance() : tokenEndpoint_;
  }
  /**
   * <pre>
   * Endpoint on the authorization server to retrieve the access token from.
   * </pre>
   *
   * <code>.envoy.config.core.v3.HttpUri token_endpoint = 1;</code>
   */
  @java.lang.Override
  public io.envoyproxy.envoy.config.core.v3.HttpUriOrBuilder getTokenEndpointOrBuilder() {
    return tokenEndpoint_ == null ? io.envoyproxy.envoy.config.core.v3.HttpUri.getDefaultInstance() : tokenEndpoint_;
  }

  public static final int AUTHORIZATION_ENDPOINT_FIELD_NUMBER = 2;
  @SuppressWarnings("serial")
  private volatile java.lang.Object authorizationEndpoint_ = "";
  /**
   * <pre>
   * The endpoint redirect to for authorization in response to unauthorized requests.
   * </pre>
   *
   * <code>string authorization_endpoint = 2 [(.validate.rules) = { ... }</code>
   * @return The authorizationEndpoint.
   */
  @java.lang.Override
  public java.lang.String getAuthorizationEndpoint() {
    java.lang.Object ref = authorizationEndpoint_;
    if (ref instanceof java.lang.String) {
      return (java.lang.String) ref;
    } else {
      com.google.protobuf.ByteString bs = 
          (com.google.protobuf.ByteString) ref;
      java.lang.String s = bs.toStringUtf8();
      authorizationEndpoint_ = s;
      return s;
    }
  }
  /**
   * <pre>
   * The endpoint redirect to for authorization in response to unauthorized requests.
   * </pre>
   *
   * <code>string authorization_endpoint = 2 [(.validate.rules) = { ... }</code>
   * @return The bytes for authorizationEndpoint.
   */
  @java.lang.Override
  public com.google.protobuf.ByteString
      getAuthorizationEndpointBytes() {
    java.lang.Object ref = authorizationEndpoint_;
    if (ref instanceof java.lang.String) {
      com.google.protobuf.ByteString b = 
          com.google.protobuf.ByteString.copyFromUtf8(
              (java.lang.String) ref);
      authorizationEndpoint_ = b;
      return b;
    } else {
      return (com.google.protobuf.ByteString) ref;
    }
  }

  public static final int CREDENTIALS_FIELD_NUMBER = 3;
  private io.envoyproxy.envoy.extensions.filters.http.oauth2.v3.OAuth2Credentials credentials_;
  /**
   * <pre>
   * Credentials used for OAuth.
   * </pre>
   *
   * <code>.envoy.extensions.filters.http.oauth2.v3.OAuth2Credentials credentials = 3 [(.validate.rules) = { ... }</code>
   * @return Whether the credentials field is set.
   */
  @java.lang.Override
  public boolean hasCredentials() {
    return credentials_ != null;
  }
  /**
   * <pre>
   * Credentials used for OAuth.
   * </pre>
   *
   * <code>.envoy.extensions.filters.http.oauth2.v3.OAuth2Credentials credentials = 3 [(.validate.rules) = { ... }</code>
   * @return The credentials.
   */
  @java.lang.Override
  public io.envoyproxy.envoy.extensions.filters.http.oauth2.v3.OAuth2Credentials getCredentials() {
    return credentials_ == null ? io.envoyproxy.envoy.extensions.filters.http.oauth2.v3.OAuth2Credentials.getDefaultInstance() : credentials_;
  }
  /**
   * <pre>
   * Credentials used for OAuth.
   * </pre>
   *
   * <code>.envoy.extensions.filters.http.oauth2.v3.OAuth2Credentials credentials = 3 [(.validate.rules) = { ... }</code>
   */
  @java.lang.Override
  public io.envoyproxy.envoy.extensions.filters.http.oauth2.v3.OAuth2CredentialsOrBuilder getCredentialsOrBuilder() {
    return credentials_ == null ? io.envoyproxy.envoy.extensions.filters.http.oauth2.v3.OAuth2Credentials.getDefaultInstance() : credentials_;
  }

  public static final int REDIRECT_URI_FIELD_NUMBER = 4;
  @SuppressWarnings("serial")
  private volatile java.lang.Object redirectUri_ = "";
  /**
   * <pre>
   * The redirect URI passed to the authorization endpoint. Supports header formatting
   * tokens. For more information, including details on header value syntax, see the
   * documentation on :ref:`custom request headers &lt;config_http_conn_man_headers_custom_request_headers&gt;`.
   * This URI should not contain any query parameters.
   * </pre>
   *
   * <code>string redirect_uri = 4 [(.validate.rules) = { ... }</code>
   * @return The redirectUri.
   */
  @java.lang.Override
  public java.lang.String getRedirectUri() {
    java.lang.Object ref = redirectUri_;
    if (ref instanceof java.lang.String) {
      return (java.lang.String) ref;
    } else {
      com.google.protobuf.ByteString bs = 
          (com.google.protobuf.ByteString) ref;
      java.lang.String s = bs.toStringUtf8();
      redirectUri_ = s;
      return s;
    }
  }
  /**
   * <pre>
   * The redirect URI passed to the authorization endpoint. Supports header formatting
   * tokens. For more information, including details on header value syntax, see the
   * documentation on :ref:`custom request headers &lt;config_http_conn_man_headers_custom_request_headers&gt;`.
   * This URI should not contain any query parameters.
   * </pre>
   *
   * <code>string redirect_uri = 4 [(.validate.rules) = { ... }</code>
   * @return The bytes for redirectUri.
   */
  @java.lang.Override
  public com.google.protobuf.ByteString
      getRedirectUriBytes() {
    java.lang.Object ref = redirectUri_;
    if (ref instanceof java.lang.String) {
      com.google.protobuf.ByteString b = 
          com.google.protobuf.ByteString.copyFromUtf8(
              (java.lang.String) ref);
      redirectUri_ = b;
      return b;
    } else {
      return (com.google.protobuf.ByteString) ref;
    }
  }

  public static final int REDIRECT_PATH_MATCHER_FIELD_NUMBER = 5;
  private io.envoyproxy.envoy.type.matcher.v3.PathMatcher redirectPathMatcher_;
  /**
   * <pre>
   * Matching criteria used to determine whether a path appears to be the result of a redirect from the authorization server.
   * </pre>
   *
   * <code>.envoy.type.matcher.v3.PathMatcher redirect_path_matcher = 5 [(.validate.rules) = { ... }</code>
   * @return Whether the redirectPathMatcher field is set.
   */
  @java.lang.Override
  public boolean hasRedirectPathMatcher() {
    return redirectPathMatcher_ != null;
  }
  /**
   * <pre>
   * Matching criteria used to determine whether a path appears to be the result of a redirect from the authorization server.
   * </pre>
   *
   * <code>.envoy.type.matcher.v3.PathMatcher redirect_path_matcher = 5 [(.validate.rules) = { ... }</code>
   * @return The redirectPathMatcher.
   */
  @java.lang.Override
  public io.envoyproxy.envoy.type.matcher.v3.PathMatcher getRedirectPathMatcher() {
    return redirectPathMatcher_ == null ? io.envoyproxy.envoy.type.matcher.v3.PathMatcher.getDefaultInstance() : redirectPathMatcher_;
  }
  /**
   * <pre>
   * Matching criteria used to determine whether a path appears to be the result of a redirect from the authorization server.
   * </pre>
   *
   * <code>.envoy.type.matcher.v3.PathMatcher redirect_path_matcher = 5 [(.validate.rules) = { ... }</code>
   */
  @java.lang.Override
  public io.envoyproxy.envoy.type.matcher.v3.PathMatcherOrBuilder getRedirectPathMatcherOrBuilder() {
    return redirectPathMatcher_ == null ? io.envoyproxy.envoy.type.matcher.v3.PathMatcher.getDefaultInstance() : redirectPathMatcher_;
  }

  public static final int SIGNOUT_PATH_FIELD_NUMBER = 6;
  private io.envoyproxy.envoy.type.matcher.v3.PathMatcher signoutPath_;
  /**
   * <pre>
   * The path to sign a user out, clearing their credential cookies.
   * </pre>
   *
   * <code>.envoy.type.matcher.v3.PathMatcher signout_path = 6 [(.validate.rules) = { ... }</code>
   * @return Whether the signoutPath field is set.
   */
  @java.lang.Override
  public boolean hasSignoutPath() {
    return signoutPath_ != null;
  }
  /**
   * <pre>
   * The path to sign a user out, clearing their credential cookies.
   * </pre>
   *
   * <code>.envoy.type.matcher.v3.PathMatcher signout_path = 6 [(.validate.rules) = { ... }</code>
   * @return The signoutPath.
   */
  @java.lang.Override
  public io.envoyproxy.envoy.type.matcher.v3.PathMatcher getSignoutPath() {
    return signoutPath_ == null ? io.envoyproxy.envoy.type.matcher.v3.PathMatcher.getDefaultInstance() : signoutPath_;
  }
  /**
   * <pre>
   * The path to sign a user out, clearing their credential cookies.
   * </pre>
   *
   * <code>.envoy.type.matcher.v3.PathMatcher signout_path = 6 [(.validate.rules) = { ... }</code>
   */
  @java.lang.Override
  public io.envoyproxy.envoy.type.matcher.v3.PathMatcherOrBuilder getSignoutPathOrBuilder() {
    return signoutPath_ == null ? io.envoyproxy.envoy.type.matcher.v3.PathMatcher.getDefaultInstance() : signoutPath_;
  }

  public static final int FORWARD_BEARER_TOKEN_FIELD_NUMBER = 7;
  private boolean forwardBearerToken_ = false;
  /**
   * <pre>
   * Forward the OAuth token as a Bearer to upstream web service.
   * </pre>
   *
   * <code>bool forward_bearer_token = 7;</code>
   * @return The forwardBearerToken.
   */
  @java.lang.Override
  public boolean getForwardBearerToken() {
    return forwardBearerToken_;
  }

  public static final int PASS_THROUGH_MATCHER_FIELD_NUMBER = 8;
  @SuppressWarnings("serial")
  private java.util.List<io.envoyproxy.envoy.config.route.v3.HeaderMatcher> passThroughMatcher_;
  /**
   * <pre>
   * Any request that matches any of the provided matchers will be passed through without OAuth validation.
   * </pre>
   *
   * <code>repeated .envoy.config.route.v3.HeaderMatcher pass_through_matcher = 8;</code>
   */
  @java.lang.Override
  public java.util.List<io.envoyproxy.envoy.config.route.v3.HeaderMatcher> getPassThroughMatcherList() {
    return passThroughMatcher_;
  }
  /**
   * <pre>
   * Any request that matches any of the provided matchers will be passed through without OAuth validation.
   * </pre>
   *
   * <code>repeated .envoy.config.route.v3.HeaderMatcher pass_through_matcher = 8;</code>
   */
  @java.lang.Override
  public java.util.List<? extends io.envoyproxy.envoy.config.route.v3.HeaderMatcherOrBuilder> 
      getPassThroughMatcherOrBuilderList() {
    return passThroughMatcher_;
  }
  /**
   * <pre>
   * Any request that matches any of the provided matchers will be passed through without OAuth validation.
   * </pre>
   *
   * <code>repeated .envoy.config.route.v3.HeaderMatcher pass_through_matcher = 8;</code>
   */
  @java.lang.Override
  public int getPassThroughMatcherCount() {
    return passThroughMatcher_.size();
  }
  /**
   * <pre>
   * Any request that matches any of the provided matchers will be passed through without OAuth validation.
   * </pre>
   *
   * <code>repeated .envoy.config.route.v3.HeaderMatcher pass_through_matcher = 8;</code>
   */
  @java.lang.Override
  public io.envoyproxy.envoy.config.route.v3.HeaderMatcher getPassThroughMatcher(int index) {
    return passThroughMatcher_.get(index);
  }
  /**
   * <pre>
   * Any request that matches any of the provided matchers will be passed through without OAuth validation.
   * </pre>
   *
   * <code>repeated .envoy.config.route.v3.HeaderMatcher pass_through_matcher = 8;</code>
   */
  @java.lang.Override
  public io.envoyproxy.envoy.config.route.v3.HeaderMatcherOrBuilder getPassThroughMatcherOrBuilder(
      int index) {
    return passThroughMatcher_.get(index);
  }

  public static final int AUTH_SCOPES_FIELD_NUMBER = 9;
  @SuppressWarnings("serial")
  private com.google.protobuf.LazyStringList authScopes_;
  /**
   * <pre>
   * Optional list of OAuth scopes to be claimed in the authorization request. If not specified,
   * defaults to "user" scope.
   * OAuth RFC https://tools.ietf.org/html/rfc6749#section-3.3
   * </pre>
   *
   * <code>repeated string auth_scopes = 9;</code>
   * @return A list containing the authScopes.
   */
  public com.google.protobuf.ProtocolStringList
      getAuthScopesList() {
    return authScopes_;
  }
  /**
   * <pre>
   * Optional list of OAuth scopes to be claimed in the authorization request. If not specified,
   * defaults to "user" scope.
   * OAuth RFC https://tools.ietf.org/html/rfc6749#section-3.3
   * </pre>
   *
   * <code>repeated string auth_scopes = 9;</code>
   * @return The count of authScopes.
   */
  public int getAuthScopesCount() {
    return authScopes_.size();
  }
  /**
   * <pre>
   * Optional list of OAuth scopes to be claimed in the authorization request. If not specified,
   * defaults to "user" scope.
   * OAuth RFC https://tools.ietf.org/html/rfc6749#section-3.3
   * </pre>
   *
   * <code>repeated string auth_scopes = 9;</code>
   * @param index The index of the element to return.
   * @return The authScopes at the given index.
   */
  public java.lang.String getAuthScopes(int index) {
    return authScopes_.get(index);
  }
  /**
   * <pre>
   * Optional list of OAuth scopes to be claimed in the authorization request. If not specified,
   * defaults to "user" scope.
   * OAuth RFC https://tools.ietf.org/html/rfc6749#section-3.3
   * </pre>
   *
   * <code>repeated string auth_scopes = 9;</code>
   * @param index The index of the value to return.
   * @return The bytes of the authScopes at the given index.
   */
  public com.google.protobuf.ByteString
      getAuthScopesBytes(int index) {
    return authScopes_.getByteString(index);
  }

  public static final int RESOURCES_FIELD_NUMBER = 10;
  @SuppressWarnings("serial")
  private com.google.protobuf.LazyStringList resources_;
  /**
   * <pre>
   * Optional resource parameter for authorization request
   * RFC: https://tools.ietf.org/html/rfc8707
   * </pre>
   *
   * <code>repeated string resources = 10;</code>
   * @return A list containing the resources.
   */
  public com.google.protobuf.ProtocolStringList
      getResourcesList() {
    return resources_;
  }
  /**
   * <pre>
   * Optional resource parameter for authorization request
   * RFC: https://tools.ietf.org/html/rfc8707
   * </pre>
   *
   * <code>repeated string resources = 10;</code>
   * @return The count of resources.
   */
  public int getResourcesCount() {
    return resources_.size();
  }
  /**
   * <pre>
   * Optional resource parameter for authorization request
   * RFC: https://tools.ietf.org/html/rfc8707
   * </pre>
   *
   * <code>repeated string resources = 10;</code>
   * @param index The index of the element to return.
   * @return The resources at the given index.
   */
  public java.lang.String getResources(int index) {
    return resources_.get(index);
  }
  /**
   * <pre>
   * Optional resource parameter for authorization request
   * RFC: https://tools.ietf.org/html/rfc8707
   * </pre>
   *
   * <code>repeated string resources = 10;</code>
   * @param index The index of the value to return.
   * @return The bytes of the resources at the given index.
   */
  public com.google.protobuf.ByteString
      getResourcesBytes(int index) {
    return resources_.getByteString(index);
  }

  public static final int AUTH_TYPE_FIELD_NUMBER = 11;
  private int authType_ = 0;
  /**
   * <pre>
   * Defines how ``client_id`` and ``client_secret`` are sent in OAuth client to OAuth server requests.
   * RFC https://datatracker.ietf.org/doc/html/rfc6749#section-2.3.1
   * </pre>
   *
   * <code>.envoy.extensions.filters.http.oauth2.v3.OAuth2Config.AuthType auth_type = 11 [(.validate.rules) = { ... }</code>
   * @return The enum numeric value on the wire for authType.
   */
  @java.lang.Override public int getAuthTypeValue() {
    return authType_;
  }
  /**
   * <pre>
   * Defines how ``client_id`` and ``client_secret`` are sent in OAuth client to OAuth server requests.
   * RFC https://datatracker.ietf.org/doc/html/rfc6749#section-2.3.1
   * </pre>
   *
   * <code>.envoy.extensions.filters.http.oauth2.v3.OAuth2Config.AuthType auth_type = 11 [(.validate.rules) = { ... }</code>
   * @return The authType.
   */
  @java.lang.Override public io.envoyproxy.envoy.extensions.filters.http.oauth2.v3.OAuth2Config.AuthType getAuthType() {
    io.envoyproxy.envoy.extensions.filters.http.oauth2.v3.OAuth2Config.AuthType result = io.envoyproxy.envoy.extensions.filters.http.oauth2.v3.OAuth2Config.AuthType.forNumber(authType_);
    return result == null ? io.envoyproxy.envoy.extensions.filters.http.oauth2.v3.OAuth2Config.AuthType.UNRECOGNIZED : result;
  }

  private byte memoizedIsInitialized = -1;
  @java.lang.Override
  public final boolean isInitialized() {
    byte isInitialized = memoizedIsInitialized;
    if (isInitialized == 1) return true;
    if (isInitialized == 0) return false;

    memoizedIsInitialized = 1;
    return true;
  }

  @java.lang.Override
  public void writeTo(com.google.protobuf.CodedOutputStream output)
                      throws java.io.IOException {
    if (tokenEndpoint_ != null) {
      output.writeMessage(1, getTokenEndpoint());
    }
    if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(authorizationEndpoint_)) {
      com.google.protobuf.GeneratedMessageV3.writeString(output, 2, authorizationEndpoint_);
    }
    if (credentials_ != null) {
      output.writeMessage(3, getCredentials());
    }
    if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(redirectUri_)) {
      com.google.protobuf.GeneratedMessageV3.writeString(output, 4, redirectUri_);
    }
    if (redirectPathMatcher_ != null) {
      output.writeMessage(5, getRedirectPathMatcher());
    }
    if (signoutPath_ != null) {
      output.writeMessage(6, getSignoutPath());
    }
    if (forwardBearerToken_ != false) {
      output.writeBool(7, forwardBearerToken_);
    }
    for (int i = 0; i < passThroughMatcher_.size(); i++) {
      output.writeMessage(8, passThroughMatcher_.get(i));
    }
    for (int i = 0; i < authScopes_.size(); i++) {
      com.google.protobuf.GeneratedMessageV3.writeString(output, 9, authScopes_.getRaw(i));
    }
    for (int i = 0; i < resources_.size(); i++) {
      com.google.protobuf.GeneratedMessageV3.writeString(output, 10, resources_.getRaw(i));
    }
    if (authType_ != io.envoyproxy.envoy.extensions.filters.http.oauth2.v3.OAuth2Config.AuthType.URL_ENCODED_BODY.getNumber()) {
      output.writeEnum(11, authType_);
    }
    getUnknownFields().writeTo(output);
  }

  @java.lang.Override
  public int getSerializedSize() {
    int size = memoizedSize;
    if (size != -1) return size;

    size = 0;
    if (tokenEndpoint_ != null) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(1, getTokenEndpoint());
    }
    if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(authorizationEndpoint_)) {
      size += com.google.protobuf.GeneratedMessageV3.computeStringSize(2, authorizationEndpoint_);
    }
    if (credentials_ != null) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(3, getCredentials());
    }
    if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(redirectUri_)) {
      size += com.google.protobuf.GeneratedMessageV3.computeStringSize(4, redirectUri_);
    }
    if (redirectPathMatcher_ != null) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(5, getRedirectPathMatcher());
    }
    if (signoutPath_ != null) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(6, getSignoutPath());
    }
    if (forwardBearerToken_ != false) {
      size += com.google.protobuf.CodedOutputStream
        .computeBoolSize(7, forwardBearerToken_);
    }
    for (int i = 0; i < passThroughMatcher_.size(); i++) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(8, passThroughMatcher_.get(i));
    }
    {
      int dataSize = 0;
      for (int i = 0; i < authScopes_.size(); i++) {
        dataSize += computeStringSizeNoTag(authScopes_.getRaw(i));
      }
      size += dataSize;
      size += 1 * getAuthScopesList().size();
    }
    {
      int dataSize = 0;
      for (int i = 0; i < resources_.size(); i++) {
        dataSize += computeStringSizeNoTag(resources_.getRaw(i));
      }
      size += dataSize;
      size += 1 * getResourcesList().size();
    }
    if (authType_ != io.envoyproxy.envoy.extensions.filters.http.oauth2.v3.OAuth2Config.AuthType.URL_ENCODED_BODY.getNumber()) {
      size += com.google.protobuf.CodedOutputStream
        .computeEnumSize(11, authType_);
    }
    size += getUnknownFields().getSerializedSize();
    memoizedSize = size;
    return size;
  }

  @java.lang.Override
  public boolean equals(final java.lang.Object obj) {
    if (obj == this) {
     return true;
    }
    if (!(obj instanceof io.envoyproxy.envoy.extensions.filters.http.oauth2.v3.OAuth2Config)) {
      return super.equals(obj);
    }
    io.envoyproxy.envoy.extensions.filters.http.oauth2.v3.OAuth2Config other = (io.envoyproxy.envoy.extensions.filters.http.oauth2.v3.OAuth2Config) obj;

    if (hasTokenEndpoint() != other.hasTokenEndpoint()) return false;
    if (hasTokenEndpoint()) {
      if (!getTokenEndpoint()
          .equals(other.getTokenEndpoint())) return false;
    }
    if (!getAuthorizationEndpoint()
        .equals(other.getAuthorizationEndpoint())) return false;
    if (hasCredentials() != other.hasCredentials()) return false;
    if (hasCredentials()) {
      if (!getCredentials()
          .equals(other.getCredentials())) return false;
    }
    if (!getRedirectUri()
        .equals(other.getRedirectUri())) return false;
    if (hasRedirectPathMatcher() != other.hasRedirectPathMatcher()) return false;
    if (hasRedirectPathMatcher()) {
      if (!getRedirectPathMatcher()
          .equals(other.getRedirectPathMatcher())) return false;
    }
    if (hasSignoutPath() != other.hasSignoutPath()) return false;
    if (hasSignoutPath()) {
      if (!getSignoutPath()
          .equals(other.getSignoutPath())) return false;
    }
    if (getForwardBearerToken()
        != other.getForwardBearerToken()) return false;
    if (!getPassThroughMatcherList()
        .equals(other.getPassThroughMatcherList())) return false;
    if (!getAuthScopesList()
        .equals(other.getAuthScopesList())) return false;
    if (!getResourcesList()
        .equals(other.getResourcesList())) return false;
    if (authType_ != other.authType_) return false;
    if (!getUnknownFields().equals(other.getUnknownFields())) return false;
    return true;
  }

  @java.lang.Override
  public int hashCode() {
    if (memoizedHashCode != 0) {
      return memoizedHashCode;
    }
    int hash = 41;
    hash = (19 * hash) + getDescriptor().hashCode();
    if (hasTokenEndpoint()) {
      hash = (37 * hash) + TOKEN_ENDPOINT_FIELD_NUMBER;
      hash = (53 * hash) + getTokenEndpoint().hashCode();
    }
    hash = (37 * hash) + AUTHORIZATION_ENDPOINT_FIELD_NUMBER;
    hash = (53 * hash) + getAuthorizationEndpoint().hashCode();
    if (hasCredentials()) {
      hash = (37 * hash) + CREDENTIALS_FIELD_NUMBER;
      hash = (53 * hash) + getCredentials().hashCode();
    }
    hash = (37 * hash) + REDIRECT_URI_FIELD_NUMBER;
    hash = (53 * hash) + getRedirectUri().hashCode();
    if (hasRedirectPathMatcher()) {
      hash = (37 * hash) + REDIRECT_PATH_MATCHER_FIELD_NUMBER;
      hash = (53 * hash) + getRedirectPathMatcher().hashCode();
    }
    if (hasSignoutPath()) {
      hash = (37 * hash) + SIGNOUT_PATH_FIELD_NUMBER;
      hash = (53 * hash) + getSignoutPath().hashCode();
    }
    hash = (37 * hash) + FORWARD_BEARER_TOKEN_FIELD_NUMBER;
    hash = (53 * hash) + com.google.protobuf.Internal.hashBoolean(
        getForwardBearerToken());
    if (getPassThroughMatcherCount() > 0) {
      hash = (37 * hash) + PASS_THROUGH_MATCHER_FIELD_NUMBER;
      hash = (53 * hash) + getPassThroughMatcherList().hashCode();
    }
    if (getAuthScopesCount() > 0) {
      hash = (37 * hash) + AUTH_SCOPES_FIELD_NUMBER;
      hash = (53 * hash) + getAuthScopesList().hashCode();
    }
    if (getResourcesCount() > 0) {
      hash = (37 * hash) + RESOURCES_FIELD_NUMBER;
      hash = (53 * hash) + getResourcesList().hashCode();
    }
    hash = (37 * hash) + AUTH_TYPE_FIELD_NUMBER;
    hash = (53 * hash) + authType_;
    hash = (29 * hash) + getUnknownFields().hashCode();
    memoizedHashCode = hash;
    return hash;
  }

  public static io.envoyproxy.envoy.extensions.filters.http.oauth2.v3.OAuth2Config parseFrom(
      java.nio.ByteBuffer data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static io.envoyproxy.envoy.extensions.filters.http.oauth2.v3.OAuth2Config parseFrom(
      java.nio.ByteBuffer data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static io.envoyproxy.envoy.extensions.filters.http.oauth2.v3.OAuth2Config parseFrom(
      com.google.protobuf.ByteString data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static io.envoyproxy.envoy.extensions.filters.http.oauth2.v3.OAuth2Config parseFrom(
      com.google.protobuf.ByteString data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static io.envoyproxy.envoy.extensions.filters.http.oauth2.v3.OAuth2Config parseFrom(byte[] data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static io.envoyproxy.envoy.extensions.filters.http.oauth2.v3.OAuth2Config parseFrom(
      byte[] data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static io.envoyproxy.envoy.extensions.filters.http.oauth2.v3.OAuth2Config parseFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input);
  }
  public static io.envoyproxy.envoy.extensions.filters.http.oauth2.v3.OAuth2Config parseFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input, extensionRegistry);
  }
  public static io.envoyproxy.envoy.extensions.filters.http.oauth2.v3.OAuth2Config parseDelimitedFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseDelimitedWithIOException(PARSER, input);
  }
  public static io.envoyproxy.envoy.extensions.filters.http.oauth2.v3.OAuth2Config parseDelimitedFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
  }
  public static io.envoyproxy.envoy.extensions.filters.http.oauth2.v3.OAuth2Config parseFrom(
      com.google.protobuf.CodedInputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input);
  }
  public static io.envoyproxy.envoy.extensions.filters.http.oauth2.v3.OAuth2Config parseFrom(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input, extensionRegistry);
  }

  @java.lang.Override
  public Builder newBuilderForType() { return newBuilder(); }
  public static Builder newBuilder() {
    return DEFAULT_INSTANCE.toBuilder();
  }
  public static Builder newBuilder(io.envoyproxy.envoy.extensions.filters.http.oauth2.v3.OAuth2Config prototype) {
    return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
  }
  @java.lang.Override
  public Builder toBuilder() {
    return this == DEFAULT_INSTANCE
        ? new Builder() : new Builder().mergeFrom(this);
  }

  @java.lang.Override
  protected Builder newBuilderForType(
      com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
    Builder builder = new Builder(parent);
    return builder;
  }
  /**
   * <pre>
   * OAuth config
   * [#next-free-field: 12]
   * </pre>
   *
   * Protobuf type {@code envoy.extensions.filters.http.oauth2.v3.OAuth2Config}
   */
  public static final class Builder extends
      com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
      // @@protoc_insertion_point(builder_implements:envoy.extensions.filters.http.oauth2.v3.OAuth2Config)
      io.envoyproxy.envoy.extensions.filters.http.oauth2.v3.OAuth2ConfigOrBuilder {
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return io.envoyproxy.envoy.extensions.filters.http.oauth2.v3.OauthProto.internal_static_envoy_extensions_filters_http_oauth2_v3_OAuth2Config_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return io.envoyproxy.envoy.extensions.filters.http.oauth2.v3.OauthProto.internal_static_envoy_extensions_filters_http_oauth2_v3_OAuth2Config_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              io.envoyproxy.envoy.extensions.filters.http.oauth2.v3.OAuth2Config.class, io.envoyproxy.envoy.extensions.filters.http.oauth2.v3.OAuth2Config.Builder.class);
    }

    // Construct using io.envoyproxy.envoy.extensions.filters.http.oauth2.v3.OAuth2Config.newBuilder()
    private Builder() {

    }

    private Builder(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      super(parent);

    }
    @java.lang.Override
    public Builder clear() {
      super.clear();
      bitField0_ = 0;
      tokenEndpoint_ = null;
      if (tokenEndpointBuilder_ != null) {
        tokenEndpointBuilder_.dispose();
        tokenEndpointBuilder_ = null;
      }
      authorizationEndpoint_ = "";
      credentials_ = null;
      if (credentialsBuilder_ != null) {
        credentialsBuilder_.dispose();
        credentialsBuilder_ = null;
      }
      redirectUri_ = "";
      redirectPathMatcher_ = null;
      if (redirectPathMatcherBuilder_ != null) {
        redirectPathMatcherBuilder_.dispose();
        redirectPathMatcherBuilder_ = null;
      }
      signoutPath_ = null;
      if (signoutPathBuilder_ != null) {
        signoutPathBuilder_.dispose();
        signoutPathBuilder_ = null;
      }
      forwardBearerToken_ = false;
      if (passThroughMatcherBuilder_ == null) {
        passThroughMatcher_ = java.util.Collections.emptyList();
      } else {
        passThroughMatcher_ = null;
        passThroughMatcherBuilder_.clear();
      }
      bitField0_ = (bitField0_ & ~0x00000080);
      authScopes_ = com.google.protobuf.LazyStringArrayList.EMPTY;
      bitField0_ = (bitField0_ & ~0x00000100);
      resources_ = com.google.protobuf.LazyStringArrayList.EMPTY;
      bitField0_ = (bitField0_ & ~0x00000200);
      authType_ = 0;
      return this;
    }

    @java.lang.Override
    public com.google.protobuf.Descriptors.Descriptor
        getDescriptorForType() {
      return io.envoyproxy.envoy.extensions.filters.http.oauth2.v3.OauthProto.internal_static_envoy_extensions_filters_http_oauth2_v3_OAuth2Config_descriptor;
    }

    @java.lang.Override
    public io.envoyproxy.envoy.extensions.filters.http.oauth2.v3.OAuth2Config getDefaultInstanceForType() {
      return io.envoyproxy.envoy.extensions.filters.http.oauth2.v3.OAuth2Config.getDefaultInstance();
    }

    @java.lang.Override
    public io.envoyproxy.envoy.extensions.filters.http.oauth2.v3.OAuth2Config build() {
      io.envoyproxy.envoy.extensions.filters.http.oauth2.v3.OAuth2Config result = buildPartial();
      if (!result.isInitialized()) {
        throw newUninitializedMessageException(result);
      }
      return result;
    }

    @java.lang.Override
    public io.envoyproxy.envoy.extensions.filters.http.oauth2.v3.OAuth2Config buildPartial() {
      io.envoyproxy.envoy.extensions.filters.http.oauth2.v3.OAuth2Config result = new io.envoyproxy.envoy.extensions.filters.http.oauth2.v3.OAuth2Config(this);
      buildPartialRepeatedFields(result);
      if (bitField0_ != 0) { buildPartial0(result); }
      onBuilt();
      return result;
    }

    private void buildPartialRepeatedFields(io.envoyproxy.envoy.extensions.filters.http.oauth2.v3.OAuth2Config result) {
      if (passThroughMatcherBuilder_ == null) {
        if (((bitField0_ & 0x00000080) != 0)) {
          passThroughMatcher_ = java.util.Collections.unmodifiableList(passThroughMatcher_);
          bitField0_ = (bitField0_ & ~0x00000080);
        }
        result.passThroughMatcher_ = passThroughMatcher_;
      } else {
        result.passThroughMatcher_ = passThroughMatcherBuilder_.build();
      }
      if (((bitField0_ & 0x00000100) != 0)) {
        authScopes_ = authScopes_.getUnmodifiableView();
        bitField0_ = (bitField0_ & ~0x00000100);
      }
      result.authScopes_ = authScopes_;
      if (((bitField0_ & 0x00000200) != 0)) {
        resources_ = resources_.getUnmodifiableView();
        bitField0_ = (bitField0_ & ~0x00000200);
      }
      result.resources_ = resources_;
    }

    private void buildPartial0(io.envoyproxy.envoy.extensions.filters.http.oauth2.v3.OAuth2Config result) {
      int from_bitField0_ = bitField0_;
      if (((from_bitField0_ & 0x00000001) != 0)) {
        result.tokenEndpoint_ = tokenEndpointBuilder_ == null
            ? tokenEndpoint_
            : tokenEndpointBuilder_.build();
      }
      if (((from_bitField0_ & 0x00000002) != 0)) {
        result.authorizationEndpoint_ = authorizationEndpoint_;
      }
      if (((from_bitField0_ & 0x00000004) != 0)) {
        result.credentials_ = credentialsBuilder_ == null
            ? credentials_
            : credentialsBuilder_.build();
      }
      if (((from_bitField0_ & 0x00000008) != 0)) {
        result.redirectUri_ = redirectUri_;
      }
      if (((from_bitField0_ & 0x00000010) != 0)) {
        result.redirectPathMatcher_ = redirectPathMatcherBuilder_ == null
            ? redirectPathMatcher_
            : redirectPathMatcherBuilder_.build();
      }
      if (((from_bitField0_ & 0x00000020) != 0)) {
        result.signoutPath_ = signoutPathBuilder_ == null
            ? signoutPath_
            : signoutPathBuilder_.build();
      }
      if (((from_bitField0_ & 0x00000040) != 0)) {
        result.forwardBearerToken_ = forwardBearerToken_;
      }
      if (((from_bitField0_ & 0x00000400) != 0)) {
        result.authType_ = authType_;
      }
    }

    @java.lang.Override
    public Builder clone() {
      return super.clone();
    }
    @java.lang.Override
    public Builder setField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        java.lang.Object value) {
      return super.setField(field, value);
    }
    @java.lang.Override
    public Builder clearField(
        com.google.protobuf.Descriptors.FieldDescriptor field) {
      return super.clearField(field);
    }
    @java.lang.Override
    public Builder clearOneof(
        com.google.protobuf.Descriptors.OneofDescriptor oneof) {
      return super.clearOneof(oneof);
    }
    @java.lang.Override
    public Builder setRepeatedField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        int index, java.lang.Object value) {
      return super.setRepeatedField(field, index, value);
    }
    @java.lang.Override
    public Builder addRepeatedField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        java.lang.Object value) {
      return super.addRepeatedField(field, value);
    }
    @java.lang.Override
    public Builder mergeFrom(com.google.protobuf.Message other) {
      if (other instanceof io.envoyproxy.envoy.extensions.filters.http.oauth2.v3.OAuth2Config) {
        return mergeFrom((io.envoyproxy.envoy.extensions.filters.http.oauth2.v3.OAuth2Config)other);
      } else {
        super.mergeFrom(other);
        return this;
      }
    }

    public Builder mergeFrom(io.envoyproxy.envoy.extensions.filters.http.oauth2.v3.OAuth2Config other) {
      if (other == io.envoyproxy.envoy.extensions.filters.http.oauth2.v3.OAuth2Config.getDefaultInstance()) return this;
      if (other.hasTokenEndpoint()) {
        mergeTokenEndpoint(other.getTokenEndpoint());
      }
      if (!other.getAuthorizationEndpoint().isEmpty()) {
        authorizationEndpoint_ = other.authorizationEndpoint_;
        bitField0_ |= 0x00000002;
        onChanged();
      }
      if (other.hasCredentials()) {
        mergeCredentials(other.getCredentials());
      }
      if (!other.getRedirectUri().isEmpty()) {
        redirectUri_ = other.redirectUri_;
        bitField0_ |= 0x00000008;
        onChanged();
      }
      if (other.hasRedirectPathMatcher()) {
        mergeRedirectPathMatcher(other.getRedirectPathMatcher());
      }
      if (other.hasSignoutPath()) {
        mergeSignoutPath(other.getSignoutPath());
      }
      if (other.getForwardBearerToken() != false) {
        setForwardBearerToken(other.getForwardBearerToken());
      }
      if (passThroughMatcherBuilder_ == null) {
        if (!other.passThroughMatcher_.isEmpty()) {
          if (passThroughMatcher_.isEmpty()) {
            passThroughMatcher_ = other.passThroughMatcher_;
            bitField0_ = (bitField0_ & ~0x00000080);
          } else {
            ensurePassThroughMatcherIsMutable();
            passThroughMatcher_.addAll(other.passThroughMatcher_);
          }
          onChanged();
        }
      } else {
        if (!other.passThroughMatcher_.isEmpty()) {
          if (passThroughMatcherBuilder_.isEmpty()) {
            passThroughMatcherBuilder_.dispose();
            passThroughMatcherBuilder_ = null;
            passThroughMatcher_ = other.passThroughMatcher_;
            bitField0_ = (bitField0_ & ~0x00000080);
            passThroughMatcherBuilder_ = 
              com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?
                 getPassThroughMatcherFieldBuilder() : null;
          } else {
            passThroughMatcherBuilder_.addAllMessages(other.passThroughMatcher_);
          }
        }
      }
      if (!other.authScopes_.isEmpty()) {
        if (authScopes_.isEmpty()) {
          authScopes_ = other.authScopes_;
          bitField0_ = (bitField0_ & ~0x00000100);
        } else {
          ensureAuthScopesIsMutable();
          authScopes_.addAll(other.authScopes_);
        }
        onChanged();
      }
      if (!other.resources_.isEmpty()) {
        if (resources_.isEmpty()) {
          resources_ = other.resources_;
          bitField0_ = (bitField0_ & ~0x00000200);
        } else {
          ensureResourcesIsMutable();
          resources_.addAll(other.resources_);
        }
        onChanged();
      }
      if (other.authType_ != 0) {
        setAuthTypeValue(other.getAuthTypeValue());
      }
      this.mergeUnknownFields(other.getUnknownFields());
      onChanged();
      return this;
    }

    @java.lang.Override
    public final boolean isInitialized() {
      return true;
    }

    @java.lang.Override
    public Builder mergeFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 10: {
              input.readMessage(
                  getTokenEndpointFieldBuilder().getBuilder(),
                  extensionRegistry);
              bitField0_ |= 0x00000001;
              break;
            } // case 10
            case 18: {
              authorizationEndpoint_ = input.readStringRequireUtf8();
              bitField0_ |= 0x00000002;
              break;
            } // case 18
            case 26: {
              input.readMessage(
                  getCredentialsFieldBuilder().getBuilder(),
                  extensionRegistry);
              bitField0_ |= 0x00000004;
              break;
            } // case 26
            case 34: {
              redirectUri_ = input.readStringRequireUtf8();
              bitField0_ |= 0x00000008;
              break;
            } // case 34
            case 42: {
              input.readMessage(
                  getRedirectPathMatcherFieldBuilder().getBuilder(),
                  extensionRegistry);
              bitField0_ |= 0x00000010;
              break;
            } // case 42
            case 50: {
              input.readMessage(
                  getSignoutPathFieldBuilder().getBuilder(),
                  extensionRegistry);
              bitField0_ |= 0x00000020;
              break;
            } // case 50
            case 56: {
              forwardBearerToken_ = input.readBool();
              bitField0_ |= 0x00000040;
              break;
            } // case 56
            case 66: {
              io.envoyproxy.envoy.config.route.v3.HeaderMatcher m =
                  input.readMessage(
                      io.envoyproxy.envoy.config.route.v3.HeaderMatcher.parser(),
                      extensionRegistry);
              if (passThroughMatcherBuilder_ == null) {
                ensurePassThroughMatcherIsMutable();
                passThroughMatcher_.add(m);
              } else {
                passThroughMatcherBuilder_.addMessage(m);
              }
              break;
            } // case 66
            case 74: {
              java.lang.String s = input.readStringRequireUtf8();
              ensureAuthScopesIsMutable();
              authScopes_.add(s);
              break;
            } // case 74
            case 82: {
              java.lang.String s = input.readStringRequireUtf8();
              ensureResourcesIsMutable();
              resources_.add(s);
              break;
            } // case 82
            case 88: {
              authType_ = input.readEnum();
              bitField0_ |= 0x00000400;
              break;
            } // case 88
            default: {
              if (!super.parseUnknownField(input, extensionRegistry, tag)) {
                done = true; // was an endgroup tag
              }
              break;
            } // default:
          } // switch (tag)
        } // while (!done)
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.unwrapIOException();
      } finally {
        onChanged();
      } // finally
      return this;
    }
    private int bitField0_;

    private io.envoyproxy.envoy.config.core.v3.HttpUri tokenEndpoint_;
    private com.google.protobuf.SingleFieldBuilderV3<
        io.envoyproxy.envoy.config.core.v3.HttpUri, io.envoyproxy.envoy.config.core.v3.HttpUri.Builder, io.envoyproxy.envoy.config.core.v3.HttpUriOrBuilder> tokenEndpointBuilder_;
    /**
     * <pre>
     * Endpoint on the authorization server to retrieve the access token from.
     * </pre>
     *
     * <code>.envoy.config.core.v3.HttpUri token_endpoint = 1;</code>
     * @return Whether the tokenEndpoint field is set.
     */
    public boolean hasTokenEndpoint() {
      return ((bitField0_ & 0x00000001) != 0);
    }
    /**
     * <pre>
     * Endpoint on the authorization server to retrieve the access token from.
     * </pre>
     *
     * <code>.envoy.config.core.v3.HttpUri token_endpoint = 1;</code>
     * @return The tokenEndpoint.
     */
    public io.envoyproxy.envoy.config.core.v3.HttpUri getTokenEndpoint() {
      if (tokenEndpointBuilder_ == null) {
        return tokenEndpoint_ == null ? io.envoyproxy.envoy.config.core.v3.HttpUri.getDefaultInstance() : tokenEndpoint_;
      } else {
        return tokenEndpointBuilder_.getMessage();
      }
    }
    /**
     * <pre>
     * Endpoint on the authorization server to retrieve the access token from.
     * </pre>
     *
     * <code>.envoy.config.core.v3.HttpUri token_endpoint = 1;</code>
     */
    public Builder setTokenEndpoint(io.envoyproxy.envoy.config.core.v3.HttpUri value) {
      if (tokenEndpointBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        tokenEndpoint_ = value;
      } else {
        tokenEndpointBuilder_.setMessage(value);
      }
      bitField0_ |= 0x00000001;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * Endpoint on the authorization server to retrieve the access token from.
     * </pre>
     *
     * <code>.envoy.config.core.v3.HttpUri token_endpoint = 1;</code>
     */
    public Builder setTokenEndpoint(
        io.envoyproxy.envoy.config.core.v3.HttpUri.Builder builderForValue) {
      if (tokenEndpointBuilder_ == null) {
        tokenEndpoint_ = builderForValue.build();
      } else {
        tokenEndpointBuilder_.setMessage(builderForValue.build());
      }
      bitField0_ |= 0x00000001;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * Endpoint on the authorization server to retrieve the access token from.
     * </pre>
     *
     * <code>.envoy.config.core.v3.HttpUri token_endpoint = 1;</code>
     */
    public Builder mergeTokenEndpoint(io.envoyproxy.envoy.config.core.v3.HttpUri value) {
      if (tokenEndpointBuilder_ == null) {
        if (((bitField0_ & 0x00000001) != 0) &&
          tokenEndpoint_ != null &&
          tokenEndpoint_ != io.envoyproxy.envoy.config.core.v3.HttpUri.getDefaultInstance()) {
          getTokenEndpointBuilder().mergeFrom(value);
        } else {
          tokenEndpoint_ = value;
        }
      } else {
        tokenEndpointBuilder_.mergeFrom(value);
      }
      bitField0_ |= 0x00000001;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * Endpoint on the authorization server to retrieve the access token from.
     * </pre>
     *
     * <code>.envoy.config.core.v3.HttpUri token_endpoint = 1;</code>
     */
    public Builder clearTokenEndpoint() {
      bitField0_ = (bitField0_ & ~0x00000001);
      tokenEndpoint_ = null;
      if (tokenEndpointBuilder_ != null) {
        tokenEndpointBuilder_.dispose();
        tokenEndpointBuilder_ = null;
      }
      onChanged();
      return this;
    }
    /**
     * <pre>
     * Endpoint on the authorization server to retrieve the access token from.
     * </pre>
     *
     * <code>.envoy.config.core.v3.HttpUri token_endpoint = 1;</code>
     */
    public io.envoyproxy.envoy.config.core.v3.HttpUri.Builder getTokenEndpointBuilder() {
      bitField0_ |= 0x00000001;
      onChanged();
      return getTokenEndpointFieldBuilder().getBuilder();
    }
    /**
     * <pre>
     * Endpoint on the authorization server to retrieve the access token from.
     * </pre>
     *
     * <code>.envoy.config.core.v3.HttpUri token_endpoint = 1;</code>
     */
    public io.envoyproxy.envoy.config.core.v3.HttpUriOrBuilder getTokenEndpointOrBuilder() {
      if (tokenEndpointBuilder_ != null) {
        return tokenEndpointBuilder_.getMessageOrBuilder();
      } else {
        return tokenEndpoint_ == null ?
            io.envoyproxy.envoy.config.core.v3.HttpUri.getDefaultInstance() : tokenEndpoint_;
      }
    }
    /**
     * <pre>
     * Endpoint on the authorization server to retrieve the access token from.
     * </pre>
     *
     * <code>.envoy.config.core.v3.HttpUri token_endpoint = 1;</code>
     */
    private com.google.protobuf.SingleFieldBuilderV3<
        io.envoyproxy.envoy.config.core.v3.HttpUri, io.envoyproxy.envoy.config.core.v3.HttpUri.Builder, io.envoyproxy.envoy.config.core.v3.HttpUriOrBuilder> 
        getTokenEndpointFieldBuilder() {
      if (tokenEndpointBuilder_ == null) {
        tokenEndpointBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
            io.envoyproxy.envoy.config.core.v3.HttpUri, io.envoyproxy.envoy.config.core.v3.HttpUri.Builder, io.envoyproxy.envoy.config.core.v3.HttpUriOrBuilder>(
                getTokenEndpoint(),
                getParentForChildren(),
                isClean());
        tokenEndpoint_ = null;
      }
      return tokenEndpointBuilder_;
    }

    private java.lang.Object authorizationEndpoint_ = "";
    /**
     * <pre>
     * The endpoint redirect to for authorization in response to unauthorized requests.
     * </pre>
     *
     * <code>string authorization_endpoint = 2 [(.validate.rules) = { ... }</code>
     * @return The authorizationEndpoint.
     */
    public java.lang.String getAuthorizationEndpoint() {
      java.lang.Object ref = authorizationEndpoint_;
      if (!(ref instanceof java.lang.String)) {
        com.google.protobuf.ByteString bs =
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        authorizationEndpoint_ = s;
        return s;
      } else {
        return (java.lang.String) ref;
      }
    }
    /**
     * <pre>
     * The endpoint redirect to for authorization in response to unauthorized requests.
     * </pre>
     *
     * <code>string authorization_endpoint = 2 [(.validate.rules) = { ... }</code>
     * @return The bytes for authorizationEndpoint.
     */
    public com.google.protobuf.ByteString
        getAuthorizationEndpointBytes() {
      java.lang.Object ref = authorizationEndpoint_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        authorizationEndpoint_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }
    /**
     * <pre>
     * The endpoint redirect to for authorization in response to unauthorized requests.
     * </pre>
     *
     * <code>string authorization_endpoint = 2 [(.validate.rules) = { ... }</code>
     * @param value The authorizationEndpoint to set.
     * @return This builder for chaining.
     */
    public Builder setAuthorizationEndpoint(
        java.lang.String value) {
      if (value == null) { throw new NullPointerException(); }
      authorizationEndpoint_ = value;
      bitField0_ |= 0x00000002;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * The endpoint redirect to for authorization in response to unauthorized requests.
     * </pre>
     *
     * <code>string authorization_endpoint = 2 [(.validate.rules) = { ... }</code>
     * @return This builder for chaining.
     */
    public Builder clearAuthorizationEndpoint() {
      authorizationEndpoint_ = getDefaultInstance().getAuthorizationEndpoint();
      bitField0_ = (bitField0_ & ~0x00000002);
      onChanged();
      return this;
    }
    /**
     * <pre>
     * The endpoint redirect to for authorization in response to unauthorized requests.
     * </pre>
     *
     * <code>string authorization_endpoint = 2 [(.validate.rules) = { ... }</code>
     * @param value The bytes for authorizationEndpoint to set.
     * @return This builder for chaining.
     */
    public Builder setAuthorizationEndpointBytes(
        com.google.protobuf.ByteString value) {
      if (value == null) { throw new NullPointerException(); }
      checkByteStringIsUtf8(value);
      authorizationEndpoint_ = value;
      bitField0_ |= 0x00000002;
      onChanged();
      return this;
    }

    private io.envoyproxy.envoy.extensions.filters.http.oauth2.v3.OAuth2Credentials credentials_;
    private com.google.protobuf.SingleFieldBuilderV3<
        io.envoyproxy.envoy.extensions.filters.http.oauth2.v3.OAuth2Credentials, io.envoyproxy.envoy.extensions.filters.http.oauth2.v3.OAuth2Credentials.Builder, io.envoyproxy.envoy.extensions.filters.http.oauth2.v3.OAuth2CredentialsOrBuilder> credentialsBuilder_;
    /**
     * <pre>
     * Credentials used for OAuth.
     * </pre>
     *
     * <code>.envoy.extensions.filters.http.oauth2.v3.OAuth2Credentials credentials = 3 [(.validate.rules) = { ... }</code>
     * @return Whether the credentials field is set.
     */
    public boolean hasCredentials() {
      return ((bitField0_ & 0x00000004) != 0);
    }
    /**
     * <pre>
     * Credentials used for OAuth.
     * </pre>
     *
     * <code>.envoy.extensions.filters.http.oauth2.v3.OAuth2Credentials credentials = 3 [(.validate.rules) = { ... }</code>
     * @return The credentials.
     */
    public io.envoyproxy.envoy.extensions.filters.http.oauth2.v3.OAuth2Credentials getCredentials() {
      if (credentialsBuilder_ == null) {
        return credentials_ == null ? io.envoyproxy.envoy.extensions.filters.http.oauth2.v3.OAuth2Credentials.getDefaultInstance() : credentials_;
      } else {
        return credentialsBuilder_.getMessage();
      }
    }
    /**
     * <pre>
     * Credentials used for OAuth.
     * </pre>
     *
     * <code>.envoy.extensions.filters.http.oauth2.v3.OAuth2Credentials credentials = 3 [(.validate.rules) = { ... }</code>
     */
    public Builder setCredentials(io.envoyproxy.envoy.extensions.filters.http.oauth2.v3.OAuth2Credentials value) {
      if (credentialsBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        credentials_ = value;
      } else {
        credentialsBuilder_.setMessage(value);
      }
      bitField0_ |= 0x00000004;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * Credentials used for OAuth.
     * </pre>
     *
     * <code>.envoy.extensions.filters.http.oauth2.v3.OAuth2Credentials credentials = 3 [(.validate.rules) = { ... }</code>
     */
    public Builder setCredentials(
        io.envoyproxy.envoy.extensions.filters.http.oauth2.v3.OAuth2Credentials.Builder builderForValue) {
      if (credentialsBuilder_ == null) {
        credentials_ = builderForValue.build();
      } else {
        credentialsBuilder_.setMessage(builderForValue.build());
      }
      bitField0_ |= 0x00000004;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * Credentials used for OAuth.
     * </pre>
     *
     * <code>.envoy.extensions.filters.http.oauth2.v3.OAuth2Credentials credentials = 3 [(.validate.rules) = { ... }</code>
     */
    public Builder mergeCredentials(io.envoyproxy.envoy.extensions.filters.http.oauth2.v3.OAuth2Credentials value) {
      if (credentialsBuilder_ == null) {
        if (((bitField0_ & 0x00000004) != 0) &&
          credentials_ != null &&
          credentials_ != io.envoyproxy.envoy.extensions.filters.http.oauth2.v3.OAuth2Credentials.getDefaultInstance()) {
          getCredentialsBuilder().mergeFrom(value);
        } else {
          credentials_ = value;
        }
      } else {
        credentialsBuilder_.mergeFrom(value);
      }
      bitField0_ |= 0x00000004;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * Credentials used for OAuth.
     * </pre>
     *
     * <code>.envoy.extensions.filters.http.oauth2.v3.OAuth2Credentials credentials = 3 [(.validate.rules) = { ... }</code>
     */
    public Builder clearCredentials() {
      bitField0_ = (bitField0_ & ~0x00000004);
      credentials_ = null;
      if (credentialsBuilder_ != null) {
        credentialsBuilder_.dispose();
        credentialsBuilder_ = null;
      }
      onChanged();
      return this;
    }
    /**
     * <pre>
     * Credentials used for OAuth.
     * </pre>
     *
     * <code>.envoy.extensions.filters.http.oauth2.v3.OAuth2Credentials credentials = 3 [(.validate.rules) = { ... }</code>
     */
    public io.envoyproxy.envoy.extensions.filters.http.oauth2.v3.OAuth2Credentials.Builder getCredentialsBuilder() {
      bitField0_ |= 0x00000004;
      onChanged();
      return getCredentialsFieldBuilder().getBuilder();
    }
    /**
     * <pre>
     * Credentials used for OAuth.
     * </pre>
     *
     * <code>.envoy.extensions.filters.http.oauth2.v3.OAuth2Credentials credentials = 3 [(.validate.rules) = { ... }</code>
     */
    public io.envoyproxy.envoy.extensions.filters.http.oauth2.v3.OAuth2CredentialsOrBuilder getCredentialsOrBuilder() {
      if (credentialsBuilder_ != null) {
        return credentialsBuilder_.getMessageOrBuilder();
      } else {
        return credentials_ == null ?
            io.envoyproxy.envoy.extensions.filters.http.oauth2.v3.OAuth2Credentials.getDefaultInstance() : credentials_;
      }
    }
    /**
     * <pre>
     * Credentials used for OAuth.
     * </pre>
     *
     * <code>.envoy.extensions.filters.http.oauth2.v3.OAuth2Credentials credentials = 3 [(.validate.rules) = { ... }</code>
     */
    private com.google.protobuf.SingleFieldBuilderV3<
        io.envoyproxy.envoy.extensions.filters.http.oauth2.v3.OAuth2Credentials, io.envoyproxy.envoy.extensions.filters.http.oauth2.v3.OAuth2Credentials.Builder, io.envoyproxy.envoy.extensions.filters.http.oauth2.v3.OAuth2CredentialsOrBuilder> 
        getCredentialsFieldBuilder() {
      if (credentialsBuilder_ == null) {
        credentialsBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
            io.envoyproxy.envoy.extensions.filters.http.oauth2.v3.OAuth2Credentials, io.envoyproxy.envoy.extensions.filters.http.oauth2.v3.OAuth2Credentials.Builder, io.envoyproxy.envoy.extensions.filters.http.oauth2.v3.OAuth2CredentialsOrBuilder>(
                getCredentials(),
                getParentForChildren(),
                isClean());
        credentials_ = null;
      }
      return credentialsBuilder_;
    }

    private java.lang.Object redirectUri_ = "";
    /**
     * <pre>
     * The redirect URI passed to the authorization endpoint. Supports header formatting
     * tokens. For more information, including details on header value syntax, see the
     * documentation on :ref:`custom request headers &lt;config_http_conn_man_headers_custom_request_headers&gt;`.
     * This URI should not contain any query parameters.
     * </pre>
     *
     * <code>string redirect_uri = 4 [(.validate.rules) = { ... }</code>
     * @return The redirectUri.
     */
    public java.lang.String getRedirectUri() {
      java.lang.Object ref = redirectUri_;
      if (!(ref instanceof java.lang.String)) {
        com.google.protobuf.ByteString bs =
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        redirectUri_ = s;
        return s;
      } else {
        return (java.lang.String) ref;
      }
    }
    /**
     * <pre>
     * The redirect URI passed to the authorization endpoint. Supports header formatting
     * tokens. For more information, including details on header value syntax, see the
     * documentation on :ref:`custom request headers &lt;config_http_conn_man_headers_custom_request_headers&gt;`.
     * This URI should not contain any query parameters.
     * </pre>
     *
     * <code>string redirect_uri = 4 [(.validate.rules) = { ... }</code>
     * @return The bytes for redirectUri.
     */
    public com.google.protobuf.ByteString
        getRedirectUriBytes() {
      java.lang.Object ref = redirectUri_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        redirectUri_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }
    /**
     * <pre>
     * The redirect URI passed to the authorization endpoint. Supports header formatting
     * tokens. For more information, including details on header value syntax, see the
     * documentation on :ref:`custom request headers &lt;config_http_conn_man_headers_custom_request_headers&gt;`.
     * This URI should not contain any query parameters.
     * </pre>
     *
     * <code>string redirect_uri = 4 [(.validate.rules) = { ... }</code>
     * @param value The redirectUri to set.
     * @return This builder for chaining.
     */
    public Builder setRedirectUri(
        java.lang.String value) {
      if (value == null) { throw new NullPointerException(); }
      redirectUri_ = value;
      bitField0_ |= 0x00000008;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * The redirect URI passed to the authorization endpoint. Supports header formatting
     * tokens. For more information, including details on header value syntax, see the
     * documentation on :ref:`custom request headers &lt;config_http_conn_man_headers_custom_request_headers&gt;`.
     * This URI should not contain any query parameters.
     * </pre>
     *
     * <code>string redirect_uri = 4 [(.validate.rules) = { ... }</code>
     * @return This builder for chaining.
     */
    public Builder clearRedirectUri() {
      redirectUri_ = getDefaultInstance().getRedirectUri();
      bitField0_ = (bitField0_ & ~0x00000008);
      onChanged();
      return this;
    }
    /**
     * <pre>
     * The redirect URI passed to the authorization endpoint. Supports header formatting
     * tokens. For more information, including details on header value syntax, see the
     * documentation on :ref:`custom request headers &lt;config_http_conn_man_headers_custom_request_headers&gt;`.
     * This URI should not contain any query parameters.
     * </pre>
     *
     * <code>string redirect_uri = 4 [(.validate.rules) = { ... }</code>
     * @param value The bytes for redirectUri to set.
     * @return This builder for chaining.
     */
    public Builder setRedirectUriBytes(
        com.google.protobuf.ByteString value) {
      if (value == null) { throw new NullPointerException(); }
      checkByteStringIsUtf8(value);
      redirectUri_ = value;
      bitField0_ |= 0x00000008;
      onChanged();
      return this;
    }

    private io.envoyproxy.envoy.type.matcher.v3.PathMatcher redirectPathMatcher_;
    private com.google.protobuf.SingleFieldBuilderV3<
        io.envoyproxy.envoy.type.matcher.v3.PathMatcher, io.envoyproxy.envoy.type.matcher.v3.PathMatcher.Builder, io.envoyproxy.envoy.type.matcher.v3.PathMatcherOrBuilder> redirectPathMatcherBuilder_;
    /**
     * <pre>
     * Matching criteria used to determine whether a path appears to be the result of a redirect from the authorization server.
     * </pre>
     *
     * <code>.envoy.type.matcher.v3.PathMatcher redirect_path_matcher = 5 [(.validate.rules) = { ... }</code>
     * @return Whether the redirectPathMatcher field is set.
     */
    public boolean hasRedirectPathMatcher() {
      return ((bitField0_ & 0x00000010) != 0);
    }
    /**
     * <pre>
     * Matching criteria used to determine whether a path appears to be the result of a redirect from the authorization server.
     * </pre>
     *
     * <code>.envoy.type.matcher.v3.PathMatcher redirect_path_matcher = 5 [(.validate.rules) = { ... }</code>
     * @return The redirectPathMatcher.
     */
    public io.envoyproxy.envoy.type.matcher.v3.PathMatcher getRedirectPathMatcher() {
      if (redirectPathMatcherBuilder_ == null) {
        return redirectPathMatcher_ == null ? io.envoyproxy.envoy.type.matcher.v3.PathMatcher.getDefaultInstance() : redirectPathMatcher_;
      } else {
        return redirectPathMatcherBuilder_.getMessage();
      }
    }
    /**
     * <pre>
     * Matching criteria used to determine whether a path appears to be the result of a redirect from the authorization server.
     * </pre>
     *
     * <code>.envoy.type.matcher.v3.PathMatcher redirect_path_matcher = 5 [(.validate.rules) = { ... }</code>
     */
    public Builder setRedirectPathMatcher(io.envoyproxy.envoy.type.matcher.v3.PathMatcher value) {
      if (redirectPathMatcherBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        redirectPathMatcher_ = value;
      } else {
        redirectPathMatcherBuilder_.setMessage(value);
      }
      bitField0_ |= 0x00000010;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * Matching criteria used to determine whether a path appears to be the result of a redirect from the authorization server.
     * </pre>
     *
     * <code>.envoy.type.matcher.v3.PathMatcher redirect_path_matcher = 5 [(.validate.rules) = { ... }</code>
     */
    public Builder setRedirectPathMatcher(
        io.envoyproxy.envoy.type.matcher.v3.PathMatcher.Builder builderForValue) {
      if (redirectPathMatcherBuilder_ == null) {
        redirectPathMatcher_ = builderForValue.build();
      } else {
        redirectPathMatcherBuilder_.setMessage(builderForValue.build());
      }
      bitField0_ |= 0x00000010;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * Matching criteria used to determine whether a path appears to be the result of a redirect from the authorization server.
     * </pre>
     *
     * <code>.envoy.type.matcher.v3.PathMatcher redirect_path_matcher = 5 [(.validate.rules) = { ... }</code>
     */
    public Builder mergeRedirectPathMatcher(io.envoyproxy.envoy.type.matcher.v3.PathMatcher value) {
      if (redirectPathMatcherBuilder_ == null) {
        if (((bitField0_ & 0x00000010) != 0) &&
          redirectPathMatcher_ != null &&
          redirectPathMatcher_ != io.envoyproxy.envoy.type.matcher.v3.PathMatcher.getDefaultInstance()) {
          getRedirectPathMatcherBuilder().mergeFrom(value);
        } else {
          redirectPathMatcher_ = value;
        }
      } else {
        redirectPathMatcherBuilder_.mergeFrom(value);
      }
      bitField0_ |= 0x00000010;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * Matching criteria used to determine whether a path appears to be the result of a redirect from the authorization server.
     * </pre>
     *
     * <code>.envoy.type.matcher.v3.PathMatcher redirect_path_matcher = 5 [(.validate.rules) = { ... }</code>
     */
    public Builder clearRedirectPathMatcher() {
      bitField0_ = (bitField0_ & ~0x00000010);
      redirectPathMatcher_ = null;
      if (redirectPathMatcherBuilder_ != null) {
        redirectPathMatcherBuilder_.dispose();
        redirectPathMatcherBuilder_ = null;
      }
      onChanged();
      return this;
    }
    /**
     * <pre>
     * Matching criteria used to determine whether a path appears to be the result of a redirect from the authorization server.
     * </pre>
     *
     * <code>.envoy.type.matcher.v3.PathMatcher redirect_path_matcher = 5 [(.validate.rules) = { ... }</code>
     */
    public io.envoyproxy.envoy.type.matcher.v3.PathMatcher.Builder getRedirectPathMatcherBuilder() {
      bitField0_ |= 0x00000010;
      onChanged();
      return getRedirectPathMatcherFieldBuilder().getBuilder();
    }
    /**
     * <pre>
     * Matching criteria used to determine whether a path appears to be the result of a redirect from the authorization server.
     * </pre>
     *
     * <code>.envoy.type.matcher.v3.PathMatcher redirect_path_matcher = 5 [(.validate.rules) = { ... }</code>
     */
    public io.envoyproxy.envoy.type.matcher.v3.PathMatcherOrBuilder getRedirectPathMatcherOrBuilder() {
      if (redirectPathMatcherBuilder_ != null) {
        return redirectPathMatcherBuilder_.getMessageOrBuilder();
      } else {
        return redirectPathMatcher_ == null ?
            io.envoyproxy.envoy.type.matcher.v3.PathMatcher.getDefaultInstance() : redirectPathMatcher_;
      }
    }
    /**
     * <pre>
     * Matching criteria used to determine whether a path appears to be the result of a redirect from the authorization server.
     * </pre>
     *
     * <code>.envoy.type.matcher.v3.PathMatcher redirect_path_matcher = 5 [(.validate.rules) = { ... }</code>
     */
    private com.google.protobuf.SingleFieldBuilderV3<
        io.envoyproxy.envoy.type.matcher.v3.PathMatcher, io.envoyproxy.envoy.type.matcher.v3.PathMatcher.Builder, io.envoyproxy.envoy.type.matcher.v3.PathMatcherOrBuilder> 
        getRedirectPathMatcherFieldBuilder() {
      if (redirectPathMatcherBuilder_ == null) {
        redirectPathMatcherBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
            io.envoyproxy.envoy.type.matcher.v3.PathMatcher, io.envoyproxy.envoy.type.matcher.v3.PathMatcher.Builder, io.envoyproxy.envoy.type.matcher.v3.PathMatcherOrBuilder>(
                getRedirectPathMatcher(),
                getParentForChildren(),
                isClean());
        redirectPathMatcher_ = null;
      }
      return redirectPathMatcherBuilder_;
    }

    private io.envoyproxy.envoy.type.matcher.v3.PathMatcher signoutPath_;
    private com.google.protobuf.SingleFieldBuilderV3<
        io.envoyproxy.envoy.type.matcher.v3.PathMatcher, io.envoyproxy.envoy.type.matcher.v3.PathMatcher.Builder, io.envoyproxy.envoy.type.matcher.v3.PathMatcherOrBuilder> signoutPathBuilder_;
    /**
     * <pre>
     * The path to sign a user out, clearing their credential cookies.
     * </pre>
     *
     * <code>.envoy.type.matcher.v3.PathMatcher signout_path = 6 [(.validate.rules) = { ... }</code>
     * @return Whether the signoutPath field is set.
     */
    public boolean hasSignoutPath() {
      return ((bitField0_ & 0x00000020) != 0);
    }
    /**
     * <pre>
     * The path to sign a user out, clearing their credential cookies.
     * </pre>
     *
     * <code>.envoy.type.matcher.v3.PathMatcher signout_path = 6 [(.validate.rules) = { ... }</code>
     * @return The signoutPath.
     */
    public io.envoyproxy.envoy.type.matcher.v3.PathMatcher getSignoutPath() {
      if (signoutPathBuilder_ == null) {
        return signoutPath_ == null ? io.envoyproxy.envoy.type.matcher.v3.PathMatcher.getDefaultInstance() : signoutPath_;
      } else {
        return signoutPathBuilder_.getMessage();
      }
    }
    /**
     * <pre>
     * The path to sign a user out, clearing their credential cookies.
     * </pre>
     *
     * <code>.envoy.type.matcher.v3.PathMatcher signout_path = 6 [(.validate.rules) = { ... }</code>
     */
    public Builder setSignoutPath(io.envoyproxy.envoy.type.matcher.v3.PathMatcher value) {
      if (signoutPathBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        signoutPath_ = value;
      } else {
        signoutPathBuilder_.setMessage(value);
      }
      bitField0_ |= 0x00000020;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * The path to sign a user out, clearing their credential cookies.
     * </pre>
     *
     * <code>.envoy.type.matcher.v3.PathMatcher signout_path = 6 [(.validate.rules) = { ... }</code>
     */
    public Builder setSignoutPath(
        io.envoyproxy.envoy.type.matcher.v3.PathMatcher.Builder builderForValue) {
      if (signoutPathBuilder_ == null) {
        signoutPath_ = builderForValue.build();
      } else {
        signoutPathBuilder_.setMessage(builderForValue.build());
      }
      bitField0_ |= 0x00000020;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * The path to sign a user out, clearing their credential cookies.
     * </pre>
     *
     * <code>.envoy.type.matcher.v3.PathMatcher signout_path = 6 [(.validate.rules) = { ... }</code>
     */
    public Builder mergeSignoutPath(io.envoyproxy.envoy.type.matcher.v3.PathMatcher value) {
      if (signoutPathBuilder_ == null) {
        if (((bitField0_ & 0x00000020) != 0) &&
          signoutPath_ != null &&
          signoutPath_ != io.envoyproxy.envoy.type.matcher.v3.PathMatcher.getDefaultInstance()) {
          getSignoutPathBuilder().mergeFrom(value);
        } else {
          signoutPath_ = value;
        }
      } else {
        signoutPathBuilder_.mergeFrom(value);
      }
      bitField0_ |= 0x00000020;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * The path to sign a user out, clearing their credential cookies.
     * </pre>
     *
     * <code>.envoy.type.matcher.v3.PathMatcher signout_path = 6 [(.validate.rules) = { ... }</code>
     */
    public Builder clearSignoutPath() {
      bitField0_ = (bitField0_ & ~0x00000020);
      signoutPath_ = null;
      if (signoutPathBuilder_ != null) {
        signoutPathBuilder_.dispose();
        signoutPathBuilder_ = null;
      }
      onChanged();
      return this;
    }
    /**
     * <pre>
     * The path to sign a user out, clearing their credential cookies.
     * </pre>
     *
     * <code>.envoy.type.matcher.v3.PathMatcher signout_path = 6 [(.validate.rules) = { ... }</code>
     */
    public io.envoyproxy.envoy.type.matcher.v3.PathMatcher.Builder getSignoutPathBuilder() {
      bitField0_ |= 0x00000020;
      onChanged();
      return getSignoutPathFieldBuilder().getBuilder();
    }
    /**
     * <pre>
     * The path to sign a user out, clearing their credential cookies.
     * </pre>
     *
     * <code>.envoy.type.matcher.v3.PathMatcher signout_path = 6 [(.validate.rules) = { ... }</code>
     */
    public io.envoyproxy.envoy.type.matcher.v3.PathMatcherOrBuilder getSignoutPathOrBuilder() {
      if (signoutPathBuilder_ != null) {
        return signoutPathBuilder_.getMessageOrBuilder();
      } else {
        return signoutPath_ == null ?
            io.envoyproxy.envoy.type.matcher.v3.PathMatcher.getDefaultInstance() : signoutPath_;
      }
    }
    /**
     * <pre>
     * The path to sign a user out, clearing their credential cookies.
     * </pre>
     *
     * <code>.envoy.type.matcher.v3.PathMatcher signout_path = 6 [(.validate.rules) = { ... }</code>
     */
    private com.google.protobuf.SingleFieldBuilderV3<
        io.envoyproxy.envoy.type.matcher.v3.PathMatcher, io.envoyproxy.envoy.type.matcher.v3.PathMatcher.Builder, io.envoyproxy.envoy.type.matcher.v3.PathMatcherOrBuilder> 
        getSignoutPathFieldBuilder() {
      if (signoutPathBuilder_ == null) {
        signoutPathBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
            io.envoyproxy.envoy.type.matcher.v3.PathMatcher, io.envoyproxy.envoy.type.matcher.v3.PathMatcher.Builder, io.envoyproxy.envoy.type.matcher.v3.PathMatcherOrBuilder>(
                getSignoutPath(),
                getParentForChildren(),
                isClean());
        signoutPath_ = null;
      }
      return signoutPathBuilder_;
    }

    private boolean forwardBearerToken_ ;
    /**
     * <pre>
     * Forward the OAuth token as a Bearer to upstream web service.
     * </pre>
     *
     * <code>bool forward_bearer_token = 7;</code>
     * @return The forwardBearerToken.
     */
    @java.lang.Override
    public boolean getForwardBearerToken() {
      return forwardBearerToken_;
    }
    /**
     * <pre>
     * Forward the OAuth token as a Bearer to upstream web service.
     * </pre>
     *
     * <code>bool forward_bearer_token = 7;</code>
     * @param value The forwardBearerToken to set.
     * @return This builder for chaining.
     */
    public Builder setForwardBearerToken(boolean value) {
      
      forwardBearerToken_ = value;
      bitField0_ |= 0x00000040;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * Forward the OAuth token as a Bearer to upstream web service.
     * </pre>
     *
     * <code>bool forward_bearer_token = 7;</code>
     * @return This builder for chaining.
     */
    public Builder clearForwardBearerToken() {
      bitField0_ = (bitField0_ & ~0x00000040);
      forwardBearerToken_ = false;
      onChanged();
      return this;
    }

    private java.util.List<io.envoyproxy.envoy.config.route.v3.HeaderMatcher> passThroughMatcher_ =
      java.util.Collections.emptyList();
    private void ensurePassThroughMatcherIsMutable() {
      if (!((bitField0_ & 0x00000080) != 0)) {
        passThroughMatcher_ = new java.util.ArrayList<io.envoyproxy.envoy.config.route.v3.HeaderMatcher>(passThroughMatcher_);
        bitField0_ |= 0x00000080;
       }
    }

    private com.google.protobuf.RepeatedFieldBuilderV3<
        io.envoyproxy.envoy.config.route.v3.HeaderMatcher, io.envoyproxy.envoy.config.route.v3.HeaderMatcher.Builder, io.envoyproxy.envoy.config.route.v3.HeaderMatcherOrBuilder> passThroughMatcherBuilder_;

    /**
     * <pre>
     * Any request that matches any of the provided matchers will be passed through without OAuth validation.
     * </pre>
     *
     * <code>repeated .envoy.config.route.v3.HeaderMatcher pass_through_matcher = 8;</code>
     */
    public java.util.List<io.envoyproxy.envoy.config.route.v3.HeaderMatcher> getPassThroughMatcherList() {
      if (passThroughMatcherBuilder_ == null) {
        return java.util.Collections.unmodifiableList(passThroughMatcher_);
      } else {
        return passThroughMatcherBuilder_.getMessageList();
      }
    }
    /**
     * <pre>
     * Any request that matches any of the provided matchers will be passed through without OAuth validation.
     * </pre>
     *
     * <code>repeated .envoy.config.route.v3.HeaderMatcher pass_through_matcher = 8;</code>
     */
    public int getPassThroughMatcherCount() {
      if (passThroughMatcherBuilder_ == null) {
        return passThroughMatcher_.size();
      } else {
        return passThroughMatcherBuilder_.getCount();
      }
    }
    /**
     * <pre>
     * Any request that matches any of the provided matchers will be passed through without OAuth validation.
     * </pre>
     *
     * <code>repeated .envoy.config.route.v3.HeaderMatcher pass_through_matcher = 8;</code>
     */
    public io.envoyproxy.envoy.config.route.v3.HeaderMatcher getPassThroughMatcher(int index) {
      if (passThroughMatcherBuilder_ == null) {
        return passThroughMatcher_.get(index);
      } else {
        return passThroughMatcherBuilder_.getMessage(index);
      }
    }
    /**
     * <pre>
     * Any request that matches any of the provided matchers will be passed through without OAuth validation.
     * </pre>
     *
     * <code>repeated .envoy.config.route.v3.HeaderMatcher pass_through_matcher = 8;</code>
     */
    public Builder setPassThroughMatcher(
        int index, io.envoyproxy.envoy.config.route.v3.HeaderMatcher value) {
      if (passThroughMatcherBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensurePassThroughMatcherIsMutable();
        passThroughMatcher_.set(index, value);
        onChanged();
      } else {
        passThroughMatcherBuilder_.setMessage(index, value);
      }
      return this;
    }
    /**
     * <pre>
     * Any request that matches any of the provided matchers will be passed through without OAuth validation.
     * </pre>
     *
     * <code>repeated .envoy.config.route.v3.HeaderMatcher pass_through_matcher = 8;</code>
     */
    public Builder setPassThroughMatcher(
        int index, io.envoyproxy.envoy.config.route.v3.HeaderMatcher.Builder builderForValue) {
      if (passThroughMatcherBuilder_ == null) {
        ensurePassThroughMatcherIsMutable();
        passThroughMatcher_.set(index, builderForValue.build());
        onChanged();
      } else {
        passThroughMatcherBuilder_.setMessage(index, builderForValue.build());
      }
      return this;
    }
    /**
     * <pre>
     * Any request that matches any of the provided matchers will be passed through without OAuth validation.
     * </pre>
     *
     * <code>repeated .envoy.config.route.v3.HeaderMatcher pass_through_matcher = 8;</code>
     */
    public Builder addPassThroughMatcher(io.envoyproxy.envoy.config.route.v3.HeaderMatcher value) {
      if (passThroughMatcherBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensurePassThroughMatcherIsMutable();
        passThroughMatcher_.add(value);
        onChanged();
      } else {
        passThroughMatcherBuilder_.addMessage(value);
      }
      return this;
    }
    /**
     * <pre>
     * Any request that matches any of the provided matchers will be passed through without OAuth validation.
     * </pre>
     *
     * <code>repeated .envoy.config.route.v3.HeaderMatcher pass_through_matcher = 8;</code>
     */
    public Builder addPassThroughMatcher(
        int index, io.envoyproxy.envoy.config.route.v3.HeaderMatcher value) {
      if (passThroughMatcherBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensurePassThroughMatcherIsMutable();
        passThroughMatcher_.add(index, value);
        onChanged();
      } else {
        passThroughMatcherBuilder_.addMessage(index, value);
      }
      return this;
    }
    /**
     * <pre>
     * Any request that matches any of the provided matchers will be passed through without OAuth validation.
     * </pre>
     *
     * <code>repeated .envoy.config.route.v3.HeaderMatcher pass_through_matcher = 8;</code>
     */
    public Builder addPassThroughMatcher(
        io.envoyproxy.envoy.config.route.v3.HeaderMatcher.Builder builderForValue) {
      if (passThroughMatcherBuilder_ == null) {
        ensurePassThroughMatcherIsMutable();
        passThroughMatcher_.add(builderForValue.build());
        onChanged();
      } else {
        passThroughMatcherBuilder_.addMessage(builderForValue.build());
      }
      return this;
    }
    /**
     * <pre>
     * Any request that matches any of the provided matchers will be passed through without OAuth validation.
     * </pre>
     *
     * <code>repeated .envoy.config.route.v3.HeaderMatcher pass_through_matcher = 8;</code>
     */
    public Builder addPassThroughMatcher(
        int index, io.envoyproxy.envoy.config.route.v3.HeaderMatcher.Builder builderForValue) {
      if (passThroughMatcherBuilder_ == null) {
        ensurePassThroughMatcherIsMutable();
        passThroughMatcher_.add(index, builderForValue.build());
        onChanged();
      } else {
        passThroughMatcherBuilder_.addMessage(index, builderForValue.build());
      }
      return this;
    }
    /**
     * <pre>
     * Any request that matches any of the provided matchers will be passed through without OAuth validation.
     * </pre>
     *
     * <code>repeated .envoy.config.route.v3.HeaderMatcher pass_through_matcher = 8;</code>
     */
    public Builder addAllPassThroughMatcher(
        java.lang.Iterable<? extends io.envoyproxy.envoy.config.route.v3.HeaderMatcher> values) {
      if (passThroughMatcherBuilder_ == null) {
        ensurePassThroughMatcherIsMutable();
        com.google.protobuf.AbstractMessageLite.Builder.addAll(
            values, passThroughMatcher_);
        onChanged();
      } else {
        passThroughMatcherBuilder_.addAllMessages(values);
      }
      return this;
    }
    /**
     * <pre>
     * Any request that matches any of the provided matchers will be passed through without OAuth validation.
     * </pre>
     *
     * <code>repeated .envoy.config.route.v3.HeaderMatcher pass_through_matcher = 8;</code>
     */
    public Builder clearPassThroughMatcher() {
      if (passThroughMatcherBuilder_ == null) {
        passThroughMatcher_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000080);
        onChanged();
      } else {
        passThroughMatcherBuilder_.clear();
      }
      return this;
    }
    /**
     * <pre>
     * Any request that matches any of the provided matchers will be passed through without OAuth validation.
     * </pre>
     *
     * <code>repeated .envoy.config.route.v3.HeaderMatcher pass_through_matcher = 8;</code>
     */
    public Builder removePassThroughMatcher(int index) {
      if (passThroughMatcherBuilder_ == null) {
        ensurePassThroughMatcherIsMutable();
        passThroughMatcher_.remove(index);
        onChanged();
      } else {
        passThroughMatcherBuilder_.remove(index);
      }
      return this;
    }
    /**
     * <pre>
     * Any request that matches any of the provided matchers will be passed through without OAuth validation.
     * </pre>
     *
     * <code>repeated .envoy.config.route.v3.HeaderMatcher pass_through_matcher = 8;</code>
     */
    public io.envoyproxy.envoy.config.route.v3.HeaderMatcher.Builder getPassThroughMatcherBuilder(
        int index) {
      return getPassThroughMatcherFieldBuilder().getBuilder(index);
    }
    /**
     * <pre>
     * Any request that matches any of the provided matchers will be passed through without OAuth validation.
     * </pre>
     *
     * <code>repeated .envoy.config.route.v3.HeaderMatcher pass_through_matcher = 8;</code>
     */
    public io.envoyproxy.envoy.config.route.v3.HeaderMatcherOrBuilder getPassThroughMatcherOrBuilder(
        int index) {
      if (passThroughMatcherBuilder_ == null) {
        return passThroughMatcher_.get(index);  } else {
        return passThroughMatcherBuilder_.getMessageOrBuilder(index);
      }
    }
    /**
     * <pre>
     * Any request that matches any of the provided matchers will be passed through without OAuth validation.
     * </pre>
     *
     * <code>repeated .envoy.config.route.v3.HeaderMatcher pass_through_matcher = 8;</code>
     */
    public java.util.List<? extends io.envoyproxy.envoy.config.route.v3.HeaderMatcherOrBuilder> 
         getPassThroughMatcherOrBuilderList() {
      if (passThroughMatcherBuilder_ != null) {
        return passThroughMatcherBuilder_.getMessageOrBuilderList();
      } else {
        return java.util.Collections.unmodifiableList(passThroughMatcher_);
      }
    }
    /**
     * <pre>
     * Any request that matches any of the provided matchers will be passed through without OAuth validation.
     * </pre>
     *
     * <code>repeated .envoy.config.route.v3.HeaderMatcher pass_through_matcher = 8;</code>
     */
    public io.envoyproxy.envoy.config.route.v3.HeaderMatcher.Builder addPassThroughMatcherBuilder() {
      return getPassThroughMatcherFieldBuilder().addBuilder(
          io.envoyproxy.envoy.config.route.v3.HeaderMatcher.getDefaultInstance());
    }
    /**
     * <pre>
     * Any request that matches any of the provided matchers will be passed through without OAuth validation.
     * </pre>
     *
     * <code>repeated .envoy.config.route.v3.HeaderMatcher pass_through_matcher = 8;</code>
     */
    public io.envoyproxy.envoy.config.route.v3.HeaderMatcher.Builder addPassThroughMatcherBuilder(
        int index) {
      return getPassThroughMatcherFieldBuilder().addBuilder(
          index, io.envoyproxy.envoy.config.route.v3.HeaderMatcher.getDefaultInstance());
    }
    /**
     * <pre>
     * Any request that matches any of the provided matchers will be passed through without OAuth validation.
     * </pre>
     *
     * <code>repeated .envoy.config.route.v3.HeaderMatcher pass_through_matcher = 8;</code>
     */
    public java.util.List<io.envoyproxy.envoy.config.route.v3.HeaderMatcher.Builder> 
         getPassThroughMatcherBuilderList() {
      return getPassThroughMatcherFieldBuilder().getBuilderList();
    }
    private com.google.protobuf.RepeatedFieldBuilderV3<
        io.envoyproxy.envoy.config.route.v3.HeaderMatcher, io.envoyproxy.envoy.config.route.v3.HeaderMatcher.Builder, io.envoyproxy.envoy.config.route.v3.HeaderMatcherOrBuilder> 
        getPassThroughMatcherFieldBuilder() {
      if (passThroughMatcherBuilder_ == null) {
        passThroughMatcherBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<
            io.envoyproxy.envoy.config.route.v3.HeaderMatcher, io.envoyproxy.envoy.config.route.v3.HeaderMatcher.Builder, io.envoyproxy.envoy.config.route.v3.HeaderMatcherOrBuilder>(
                passThroughMatcher_,
                ((bitField0_ & 0x00000080) != 0),
                getParentForChildren(),
                isClean());
        passThroughMatcher_ = null;
      }
      return passThroughMatcherBuilder_;
    }

    private com.google.protobuf.LazyStringList authScopes_ = com.google.protobuf.LazyStringArrayList.EMPTY;
    private void ensureAuthScopesIsMutable() {
      if (!((bitField0_ & 0x00000100) != 0)) {
        authScopes_ = new com.google.protobuf.LazyStringArrayList(authScopes_);
        bitField0_ |= 0x00000100;
       }
    }
    /**
     * <pre>
     * Optional list of OAuth scopes to be claimed in the authorization request. If not specified,
     * defaults to "user" scope.
     * OAuth RFC https://tools.ietf.org/html/rfc6749#section-3.3
     * </pre>
     *
     * <code>repeated string auth_scopes = 9;</code>
     * @return A list containing the authScopes.
     */
    public com.google.protobuf.ProtocolStringList
        getAuthScopesList() {
      return authScopes_.getUnmodifiableView();
    }
    /**
     * <pre>
     * Optional list of OAuth scopes to be claimed in the authorization request. If not specified,
     * defaults to "user" scope.
     * OAuth RFC https://tools.ietf.org/html/rfc6749#section-3.3
     * </pre>
     *
     * <code>repeated string auth_scopes = 9;</code>
     * @return The count of authScopes.
     */
    public int getAuthScopesCount() {
      return authScopes_.size();
    }
    /**
     * <pre>
     * Optional list of OAuth scopes to be claimed in the authorization request. If not specified,
     * defaults to "user" scope.
     * OAuth RFC https://tools.ietf.org/html/rfc6749#section-3.3
     * </pre>
     *
     * <code>repeated string auth_scopes = 9;</code>
     * @param index The index of the element to return.
     * @return The authScopes at the given index.
     */
    public java.lang.String getAuthScopes(int index) {
      return authScopes_.get(index);
    }
    /**
     * <pre>
     * Optional list of OAuth scopes to be claimed in the authorization request. If not specified,
     * defaults to "user" scope.
     * OAuth RFC https://tools.ietf.org/html/rfc6749#section-3.3
     * </pre>
     *
     * <code>repeated string auth_scopes = 9;</code>
     * @param index The index of the value to return.
     * @return The bytes of the authScopes at the given index.
     */
    public com.google.protobuf.ByteString
        getAuthScopesBytes(int index) {
      return authScopes_.getByteString(index);
    }
    /**
     * <pre>
     * Optional list of OAuth scopes to be claimed in the authorization request. If not specified,
     * defaults to "user" scope.
     * OAuth RFC https://tools.ietf.org/html/rfc6749#section-3.3
     * </pre>
     *
     * <code>repeated string auth_scopes = 9;</code>
     * @param index The index to set the value at.
     * @param value The authScopes to set.
     * @return This builder for chaining.
     */
    public Builder setAuthScopes(
        int index, java.lang.String value) {
      if (value == null) { throw new NullPointerException(); }
      ensureAuthScopesIsMutable();
      authScopes_.set(index, value);
      onChanged();
      return this;
    }
    /**
     * <pre>
     * Optional list of OAuth scopes to be claimed in the authorization request. If not specified,
     * defaults to "user" scope.
     * OAuth RFC https://tools.ietf.org/html/rfc6749#section-3.3
     * </pre>
     *
     * <code>repeated string auth_scopes = 9;</code>
     * @param value The authScopes to add.
     * @return This builder for chaining.
     */
    public Builder addAuthScopes(
        java.lang.String value) {
      if (value == null) { throw new NullPointerException(); }
      ensureAuthScopesIsMutable();
      authScopes_.add(value);
      onChanged();
      return this;
    }
    /**
     * <pre>
     * Optional list of OAuth scopes to be claimed in the authorization request. If not specified,
     * defaults to "user" scope.
     * OAuth RFC https://tools.ietf.org/html/rfc6749#section-3.3
     * </pre>
     *
     * <code>repeated string auth_scopes = 9;</code>
     * @param values The authScopes to add.
     * @return This builder for chaining.
     */
    public Builder addAllAuthScopes(
        java.lang.Iterable<java.lang.String> values) {
      ensureAuthScopesIsMutable();
      com.google.protobuf.AbstractMessageLite.Builder.addAll(
          values, authScopes_);
      onChanged();
      return this;
    }
    /**
     * <pre>
     * Optional list of OAuth scopes to be claimed in the authorization request. If not specified,
     * defaults to "user" scope.
     * OAuth RFC https://tools.ietf.org/html/rfc6749#section-3.3
     * </pre>
     *
     * <code>repeated string auth_scopes = 9;</code>
     * @return This builder for chaining.
     */
    public Builder clearAuthScopes() {
      authScopes_ = com.google.protobuf.LazyStringArrayList.EMPTY;
      bitField0_ = (bitField0_ & ~0x00000100);
      onChanged();
      return this;
    }
    /**
     * <pre>
     * Optional list of OAuth scopes to be claimed in the authorization request. If not specified,
     * defaults to "user" scope.
     * OAuth RFC https://tools.ietf.org/html/rfc6749#section-3.3
     * </pre>
     *
     * <code>repeated string auth_scopes = 9;</code>
     * @param value The bytes of the authScopes to add.
     * @return This builder for chaining.
     */
    public Builder addAuthScopesBytes(
        com.google.protobuf.ByteString value) {
      if (value == null) { throw new NullPointerException(); }
      checkByteStringIsUtf8(value);
      ensureAuthScopesIsMutable();
      authScopes_.add(value);
      onChanged();
      return this;
    }

    private com.google.protobuf.LazyStringList resources_ = com.google.protobuf.LazyStringArrayList.EMPTY;
    private void ensureResourcesIsMutable() {
      if (!((bitField0_ & 0x00000200) != 0)) {
        resources_ = new com.google.protobuf.LazyStringArrayList(resources_);
        bitField0_ |= 0x00000200;
       }
    }
    /**
     * <pre>
     * Optional resource parameter for authorization request
     * RFC: https://tools.ietf.org/html/rfc8707
     * </pre>
     *
     * <code>repeated string resources = 10;</code>
     * @return A list containing the resources.
     */
    public com.google.protobuf.ProtocolStringList
        getResourcesList() {
      return resources_.getUnmodifiableView();
    }
    /**
     * <pre>
     * Optional resource parameter for authorization request
     * RFC: https://tools.ietf.org/html/rfc8707
     * </pre>
     *
     * <code>repeated string resources = 10;</code>
     * @return The count of resources.
     */
    public int getResourcesCount() {
      return resources_.size();
    }
    /**
     * <pre>
     * Optional resource parameter for authorization request
     * RFC: https://tools.ietf.org/html/rfc8707
     * </pre>
     *
     * <code>repeated string resources = 10;</code>
     * @param index The index of the element to return.
     * @return The resources at the given index.
     */
    public java.lang.String getResources(int index) {
      return resources_.get(index);
    }
    /**
     * <pre>
     * Optional resource parameter for authorization request
     * RFC: https://tools.ietf.org/html/rfc8707
     * </pre>
     *
     * <code>repeated string resources = 10;</code>
     * @param index The index of the value to return.
     * @return The bytes of the resources at the given index.
     */
    public com.google.protobuf.ByteString
        getResourcesBytes(int index) {
      return resources_.getByteString(index);
    }
    /**
     * <pre>
     * Optional resource parameter for authorization request
     * RFC: https://tools.ietf.org/html/rfc8707
     * </pre>
     *
     * <code>repeated string resources = 10;</code>
     * @param index The index to set the value at.
     * @param value The resources to set.
     * @return This builder for chaining.
     */
    public Builder setResources(
        int index, java.lang.String value) {
      if (value == null) { throw new NullPointerException(); }
      ensureResourcesIsMutable();
      resources_.set(index, value);
      onChanged();
      return this;
    }
    /**
     * <pre>
     * Optional resource parameter for authorization request
     * RFC: https://tools.ietf.org/html/rfc8707
     * </pre>
     *
     * <code>repeated string resources = 10;</code>
     * @param value The resources to add.
     * @return This builder for chaining.
     */
    public Builder addResources(
        java.lang.String value) {
      if (value == null) { throw new NullPointerException(); }
      ensureResourcesIsMutable();
      resources_.add(value);
      onChanged();
      return this;
    }
    /**
     * <pre>
     * Optional resource parameter for authorization request
     * RFC: https://tools.ietf.org/html/rfc8707
     * </pre>
     *
     * <code>repeated string resources = 10;</code>
     * @param values The resources to add.
     * @return This builder for chaining.
     */
    public Builder addAllResources(
        java.lang.Iterable<java.lang.String> values) {
      ensureResourcesIsMutable();
      com.google.protobuf.AbstractMessageLite.Builder.addAll(
          values, resources_);
      onChanged();
      return this;
    }
    /**
     * <pre>
     * Optional resource parameter for authorization request
     * RFC: https://tools.ietf.org/html/rfc8707
     * </pre>
     *
     * <code>repeated string resources = 10;</code>
     * @return This builder for chaining.
     */
    public Builder clearResources() {
      resources_ = com.google.protobuf.LazyStringArrayList.EMPTY;
      bitField0_ = (bitField0_ & ~0x00000200);
      onChanged();
      return this;
    }
    /**
     * <pre>
     * Optional resource parameter for authorization request
     * RFC: https://tools.ietf.org/html/rfc8707
     * </pre>
     *
     * <code>repeated string resources = 10;</code>
     * @param value The bytes of the resources to add.
     * @return This builder for chaining.
     */
    public Builder addResourcesBytes(
        com.google.protobuf.ByteString value) {
      if (value == null) { throw new NullPointerException(); }
      checkByteStringIsUtf8(value);
      ensureResourcesIsMutable();
      resources_.add(value);
      onChanged();
      return this;
    }

    private int authType_ = 0;
    /**
     * <pre>
     * Defines how ``client_id`` and ``client_secret`` are sent in OAuth client to OAuth server requests.
     * RFC https://datatracker.ietf.org/doc/html/rfc6749#section-2.3.1
     * </pre>
     *
     * <code>.envoy.extensions.filters.http.oauth2.v3.OAuth2Config.AuthType auth_type = 11 [(.validate.rules) = { ... }</code>
     * @return The enum numeric value on the wire for authType.
     */
    @java.lang.Override public int getAuthTypeValue() {
      return authType_;
    }
    /**
     * <pre>
     * Defines how ``client_id`` and ``client_secret`` are sent in OAuth client to OAuth server requests.
     * RFC https://datatracker.ietf.org/doc/html/rfc6749#section-2.3.1
     * </pre>
     *
     * <code>.envoy.extensions.filters.http.oauth2.v3.OAuth2Config.AuthType auth_type = 11 [(.validate.rules) = { ... }</code>
     * @param value The enum numeric value on the wire for authType to set.
     * @return This builder for chaining.
     */
    public Builder setAuthTypeValue(int value) {
      authType_ = value;
      bitField0_ |= 0x00000400;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * Defines how ``client_id`` and ``client_secret`` are sent in OAuth client to OAuth server requests.
     * RFC https://datatracker.ietf.org/doc/html/rfc6749#section-2.3.1
     * </pre>
     *
     * <code>.envoy.extensions.filters.http.oauth2.v3.OAuth2Config.AuthType auth_type = 11 [(.validate.rules) = { ... }</code>
     * @return The authType.
     */
    @java.lang.Override
    public io.envoyproxy.envoy.extensions.filters.http.oauth2.v3.OAuth2Config.AuthType getAuthType() {
      io.envoyproxy.envoy.extensions.filters.http.oauth2.v3.OAuth2Config.AuthType result = io.envoyproxy.envoy.extensions.filters.http.oauth2.v3.OAuth2Config.AuthType.forNumber(authType_);
      return result == null ? io.envoyproxy.envoy.extensions.filters.http.oauth2.v3.OAuth2Config.AuthType.UNRECOGNIZED : result;
    }
    /**
     * <pre>
     * Defines how ``client_id`` and ``client_secret`` are sent in OAuth client to OAuth server requests.
     * RFC https://datatracker.ietf.org/doc/html/rfc6749#section-2.3.1
     * </pre>
     *
     * <code>.envoy.extensions.filters.http.oauth2.v3.OAuth2Config.AuthType auth_type = 11 [(.validate.rules) = { ... }</code>
     * @param value The authType to set.
     * @return This builder for chaining.
     */
    public Builder setAuthType(io.envoyproxy.envoy.extensions.filters.http.oauth2.v3.OAuth2Config.AuthType value) {
      if (value == null) {
        throw new NullPointerException();
      }
      bitField0_ |= 0x00000400;
      authType_ = value.getNumber();
      onChanged();
      return this;
    }
    /**
     * <pre>
     * Defines how ``client_id`` and ``client_secret`` are sent in OAuth client to OAuth server requests.
     * RFC https://datatracker.ietf.org/doc/html/rfc6749#section-2.3.1
     * </pre>
     *
     * <code>.envoy.extensions.filters.http.oauth2.v3.OAuth2Config.AuthType auth_type = 11 [(.validate.rules) = { ... }</code>
     * @return This builder for chaining.
     */
    public Builder clearAuthType() {
      bitField0_ = (bitField0_ & ~0x00000400);
      authType_ = 0;
      onChanged();
      return this;
    }
    @java.lang.Override
    public final Builder setUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return super.setUnknownFields(unknownFields);
    }

    @java.lang.Override
    public final Builder mergeUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return super.mergeUnknownFields(unknownFields);
    }


    // @@protoc_insertion_point(builder_scope:envoy.extensions.filters.http.oauth2.v3.OAuth2Config)
  }

  // @@protoc_insertion_point(class_scope:envoy.extensions.filters.http.oauth2.v3.OAuth2Config)
  private static final io.envoyproxy.envoy.extensions.filters.http.oauth2.v3.OAuth2Config DEFAULT_INSTANCE;
  static {
    DEFAULT_INSTANCE = new io.envoyproxy.envoy.extensions.filters.http.oauth2.v3.OAuth2Config();
  }

  public static io.envoyproxy.envoy.extensions.filters.http.oauth2.v3.OAuth2Config getDefaultInstance() {
    return DEFAULT_INSTANCE;
  }

  private static final com.google.protobuf.Parser<OAuth2Config>
      PARSER = new com.google.protobuf.AbstractParser<OAuth2Config>() {
    @java.lang.Override
    public OAuth2Config parsePartialFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      Builder builder = newBuilder();
      try {
        builder.mergeFrom(input, extensionRegistry);
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(builder.buildPartial());
      } catch (com.google.protobuf.UninitializedMessageException e) {
        throw e.asInvalidProtocolBufferException().setUnfinishedMessage(builder.buildPartial());
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(e)
            .setUnfinishedMessage(builder.buildPartial());
      }
      return builder.buildPartial();
    }
  };

  public static com.google.protobuf.Parser<OAuth2Config> parser() {
    return PARSER;
  }

  @java.lang.Override
  public com.google.protobuf.Parser<OAuth2Config> getParserForType() {
    return PARSER;
  }

  @java.lang.Override
  public io.envoyproxy.envoy.extensions.filters.http.oauth2.v3.OAuth2Config getDefaultInstanceForType() {
    return DEFAULT_INSTANCE;
  }

}

