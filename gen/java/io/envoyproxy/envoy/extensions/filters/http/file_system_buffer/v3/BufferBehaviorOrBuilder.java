// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: envoy/extensions/filters/http/file_system_buffer/v3/file_system_buffer.proto

package io.envoyproxy.envoy.extensions.filters.http.file_system_buffer.v3;

public interface BufferBehaviorOrBuilder extends
    // @@protoc_insertion_point(interface_extends:envoy.extensions.filters.http.file_system_buffer.v3.BufferBehavior)
    com.google.protobuf.MessageOrBuilder {

  /**
   * <pre>
   * Don't inject ``content-length`` header.
   * Output immediately, buffer only if output is slower than input.
   * </pre>
   *
   * <code>.envoy.extensions.filters.http.file_system_buffer.v3.BufferBehavior.StreamWhenPossible stream_when_possible = 1;</code>
   * @return Whether the streamWhenPossible field is set.
   */
  boolean hasStreamWhenPossible();
  /**
   * <pre>
   * Don't inject ``content-length`` header.
   * Output immediately, buffer only if output is slower than input.
   * </pre>
   *
   * <code>.envoy.extensions.filters.http.file_system_buffer.v3.BufferBehavior.StreamWhenPossible stream_when_possible = 1;</code>
   * @return The streamWhenPossible.
   */
  io.envoyproxy.envoy.extensions.filters.http.file_system_buffer.v3.BufferBehavior.StreamWhenPossible getStreamWhenPossible();
  /**
   * <pre>
   * Don't inject ``content-length`` header.
   * Output immediately, buffer only if output is slower than input.
   * </pre>
   *
   * <code>.envoy.extensions.filters.http.file_system_buffer.v3.BufferBehavior.StreamWhenPossible stream_when_possible = 1;</code>
   */
  io.envoyproxy.envoy.extensions.filters.http.file_system_buffer.v3.BufferBehavior.StreamWhenPossibleOrBuilder getStreamWhenPossibleOrBuilder();

  /**
   * <pre>
   * Never buffer, do nothing.
   * </pre>
   *
   * <code>.envoy.extensions.filters.http.file_system_buffer.v3.BufferBehavior.Bypass bypass = 2;</code>
   * @return Whether the bypass field is set.
   */
  boolean hasBypass();
  /**
   * <pre>
   * Never buffer, do nothing.
   * </pre>
   *
   * <code>.envoy.extensions.filters.http.file_system_buffer.v3.BufferBehavior.Bypass bypass = 2;</code>
   * @return The bypass.
   */
  io.envoyproxy.envoy.extensions.filters.http.file_system_buffer.v3.BufferBehavior.Bypass getBypass();
  /**
   * <pre>
   * Never buffer, do nothing.
   * </pre>
   *
   * <code>.envoy.extensions.filters.http.file_system_buffer.v3.BufferBehavior.Bypass bypass = 2;</code>
   */
  io.envoyproxy.envoy.extensions.filters.http.file_system_buffer.v3.BufferBehavior.BypassOrBuilder getBypassOrBuilder();

  /**
   * <pre>
   * If ``content-length`` is not present, buffer the entire input,
   * inject ``content-length`` header, then output.
   * If ``content-length`` is already present, act like ``stream_when_possible``.
   * </pre>
   *
   * <code>.envoy.extensions.filters.http.file_system_buffer.v3.BufferBehavior.InjectContentLengthIfNecessary inject_content_length_if_necessary = 3;</code>
   * @return Whether the injectContentLengthIfNecessary field is set.
   */
  boolean hasInjectContentLengthIfNecessary();
  /**
   * <pre>
   * If ``content-length`` is not present, buffer the entire input,
   * inject ``content-length`` header, then output.
   * If ``content-length`` is already present, act like ``stream_when_possible``.
   * </pre>
   *
   * <code>.envoy.extensions.filters.http.file_system_buffer.v3.BufferBehavior.InjectContentLengthIfNecessary inject_content_length_if_necessary = 3;</code>
   * @return The injectContentLengthIfNecessary.
   */
  io.envoyproxy.envoy.extensions.filters.http.file_system_buffer.v3.BufferBehavior.InjectContentLengthIfNecessary getInjectContentLengthIfNecessary();
  /**
   * <pre>
   * If ``content-length`` is not present, buffer the entire input,
   * inject ``content-length`` header, then output.
   * If ``content-length`` is already present, act like ``stream_when_possible``.
   * </pre>
   *
   * <code>.envoy.extensions.filters.http.file_system_buffer.v3.BufferBehavior.InjectContentLengthIfNecessary inject_content_length_if_necessary = 3;</code>
   */
  io.envoyproxy.envoy.extensions.filters.http.file_system_buffer.v3.BufferBehavior.InjectContentLengthIfNecessaryOrBuilder getInjectContentLengthIfNecessaryOrBuilder();

  /**
   * <pre>
   * Always buffer the entire input, and inject ``content-length``,
   * overwriting any provided content-length header.
   * </pre>
   *
   * <code>.envoy.extensions.filters.http.file_system_buffer.v3.BufferBehavior.FullyBufferAndAlwaysInjectContentLength fully_buffer_and_always_inject_content_length = 4;</code>
   * @return Whether the fullyBufferAndAlwaysInjectContentLength field is set.
   */
  boolean hasFullyBufferAndAlwaysInjectContentLength();
  /**
   * <pre>
   * Always buffer the entire input, and inject ``content-length``,
   * overwriting any provided content-length header.
   * </pre>
   *
   * <code>.envoy.extensions.filters.http.file_system_buffer.v3.BufferBehavior.FullyBufferAndAlwaysInjectContentLength fully_buffer_and_always_inject_content_length = 4;</code>
   * @return The fullyBufferAndAlwaysInjectContentLength.
   */
  io.envoyproxy.envoy.extensions.filters.http.file_system_buffer.v3.BufferBehavior.FullyBufferAndAlwaysInjectContentLength getFullyBufferAndAlwaysInjectContentLength();
  /**
   * <pre>
   * Always buffer the entire input, and inject ``content-length``,
   * overwriting any provided content-length header.
   * </pre>
   *
   * <code>.envoy.extensions.filters.http.file_system_buffer.v3.BufferBehavior.FullyBufferAndAlwaysInjectContentLength fully_buffer_and_always_inject_content_length = 4;</code>
   */
  io.envoyproxy.envoy.extensions.filters.http.file_system_buffer.v3.BufferBehavior.FullyBufferAndAlwaysInjectContentLengthOrBuilder getFullyBufferAndAlwaysInjectContentLengthOrBuilder();

  /**
   * <pre>
   * Always buffer the entire input, do not modify ``content-length``.
   * </pre>
   *
   * <code>.envoy.extensions.filters.http.file_system_buffer.v3.BufferBehavior.FullyBuffer fully_buffer = 5;</code>
   * @return Whether the fullyBuffer field is set.
   */
  boolean hasFullyBuffer();
  /**
   * <pre>
   * Always buffer the entire input, do not modify ``content-length``.
   * </pre>
   *
   * <code>.envoy.extensions.filters.http.file_system_buffer.v3.BufferBehavior.FullyBuffer fully_buffer = 5;</code>
   * @return The fullyBuffer.
   */
  io.envoyproxy.envoy.extensions.filters.http.file_system_buffer.v3.BufferBehavior.FullyBuffer getFullyBuffer();
  /**
   * <pre>
   * Always buffer the entire input, do not modify ``content-length``.
   * </pre>
   *
   * <code>.envoy.extensions.filters.http.file_system_buffer.v3.BufferBehavior.FullyBuffer fully_buffer = 5;</code>
   */
  io.envoyproxy.envoy.extensions.filters.http.file_system_buffer.v3.BufferBehavior.FullyBufferOrBuilder getFullyBufferOrBuilder();

  public io.envoyproxy.envoy.extensions.filters.http.file_system_buffer.v3.BufferBehavior.BehaviorCase getBehaviorCase();
}
