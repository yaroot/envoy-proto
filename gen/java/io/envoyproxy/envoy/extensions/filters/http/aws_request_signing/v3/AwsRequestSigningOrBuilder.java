// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: envoy/extensions/filters/http/aws_request_signing/v3/aws_request_signing.proto

package io.envoyproxy.envoy.extensions.filters.http.aws_request_signing.v3;

public interface AwsRequestSigningOrBuilder extends
    // @@protoc_insertion_point(interface_extends:envoy.extensions.filters.http.aws_request_signing.v3.AwsRequestSigning)
    com.google.protobuf.MessageOrBuilder {

  /**
   * <pre>
   * The `service namespace
   * &lt;https://docs.aws.amazon.com/general/latest/gr/aws-arns-and-namespaces.html#genref-aws-service-namespaces&gt;`_
   * of the HTTP endpoint.
   * Example: s3
   * </pre>
   *
   * <code>string service_name = 1 [(.validate.rules) = { ... }</code>
   * @return The serviceName.
   */
  java.lang.String getServiceName();
  /**
   * <pre>
   * The `service namespace
   * &lt;https://docs.aws.amazon.com/general/latest/gr/aws-arns-and-namespaces.html#genref-aws-service-namespaces&gt;`_
   * of the HTTP endpoint.
   * Example: s3
   * </pre>
   *
   * <code>string service_name = 1 [(.validate.rules) = { ... }</code>
   * @return The bytes for serviceName.
   */
  com.google.protobuf.ByteString
      getServiceNameBytes();

  /**
   * <pre>
   * The `region &lt;https://docs.aws.amazon.com/general/latest/gr/rande.html&gt;`_ hosting the HTTP
   * endpoint.
   * Example: us-west-2
   * </pre>
   *
   * <code>string region = 2 [(.validate.rules) = { ... }</code>
   * @return The region.
   */
  java.lang.String getRegion();
  /**
   * <pre>
   * The `region &lt;https://docs.aws.amazon.com/general/latest/gr/rande.html&gt;`_ hosting the HTTP
   * endpoint.
   * Example: us-west-2
   * </pre>
   *
   * <code>string region = 2 [(.validate.rules) = { ... }</code>
   * @return The bytes for region.
   */
  com.google.protobuf.ByteString
      getRegionBytes();

  /**
   * <pre>
   * Indicates that before signing headers, the host header will be swapped with
   * this value. If not set or empty, the original host header value
   * will be used and no rewrite will happen.
   * Note: this rewrite affects both signing and host header forwarding. However, this
   * option shouldn't be used with
   * :ref:`HCM host rewrite &lt;envoy_v3_api_field_config.route.v3.RouteAction.host_rewrite_literal&gt;` given that the
   * value set here would be used for signing whereas the value set in the HCM would be used
   * for host header forwarding which is not the desired outcome.
   * </pre>
   *
   * <code>string host_rewrite = 3;</code>
   * @return The hostRewrite.
   */
  java.lang.String getHostRewrite();
  /**
   * <pre>
   * Indicates that before signing headers, the host header will be swapped with
   * this value. If not set or empty, the original host header value
   * will be used and no rewrite will happen.
   * Note: this rewrite affects both signing and host header forwarding. However, this
   * option shouldn't be used with
   * :ref:`HCM host rewrite &lt;envoy_v3_api_field_config.route.v3.RouteAction.host_rewrite_literal&gt;` given that the
   * value set here would be used for signing whereas the value set in the HCM would be used
   * for host header forwarding which is not the desired outcome.
   * </pre>
   *
   * <code>string host_rewrite = 3;</code>
   * @return The bytes for hostRewrite.
   */
  com.google.protobuf.ByteString
      getHostRewriteBytes();

  /**
   * <pre>
   * Instead of buffering the request to calculate the payload hash, use the literal string ``UNSIGNED-PAYLOAD``
   * to calculate the payload hash. Not all services support this option. See the `S3
   * &lt;https://docs.aws.amazon.com/AmazonS3/latest/API/sig-v4-header-based-auth.html&gt;`_ policy for details.
   * </pre>
   *
   * <code>bool use_unsigned_payload = 4;</code>
   * @return The useUnsignedPayload.
   */
  boolean getUseUnsignedPayload();

  /**
   * <pre>
   * A list of request header string matchers that will be excluded from signing. The excluded header can be matched by
   * any patterns defined in the StringMatcher proto (e.g. exact string, prefix, regex, etc).
   * Example:
   * match_excluded_headers:
   * - prefix: x-envoy
   * - exact: foo
   * - exact: bar
   * When applied, all headers that start with "x-envoy" and headers "foo" and "bar" will not be signed.
   * </pre>
   *
   * <code>repeated .envoy.type.matcher.v3.StringMatcher match_excluded_headers = 5;</code>
   */
  java.util.List<io.envoyproxy.envoy.type.matcher.v3.StringMatcher> 
      getMatchExcludedHeadersList();
  /**
   * <pre>
   * A list of request header string matchers that will be excluded from signing. The excluded header can be matched by
   * any patterns defined in the StringMatcher proto (e.g. exact string, prefix, regex, etc).
   * Example:
   * match_excluded_headers:
   * - prefix: x-envoy
   * - exact: foo
   * - exact: bar
   * When applied, all headers that start with "x-envoy" and headers "foo" and "bar" will not be signed.
   * </pre>
   *
   * <code>repeated .envoy.type.matcher.v3.StringMatcher match_excluded_headers = 5;</code>
   */
  io.envoyproxy.envoy.type.matcher.v3.StringMatcher getMatchExcludedHeaders(int index);
  /**
   * <pre>
   * A list of request header string matchers that will be excluded from signing. The excluded header can be matched by
   * any patterns defined in the StringMatcher proto (e.g. exact string, prefix, regex, etc).
   * Example:
   * match_excluded_headers:
   * - prefix: x-envoy
   * - exact: foo
   * - exact: bar
   * When applied, all headers that start with "x-envoy" and headers "foo" and "bar" will not be signed.
   * </pre>
   *
   * <code>repeated .envoy.type.matcher.v3.StringMatcher match_excluded_headers = 5;</code>
   */
  int getMatchExcludedHeadersCount();
  /**
   * <pre>
   * A list of request header string matchers that will be excluded from signing. The excluded header can be matched by
   * any patterns defined in the StringMatcher proto (e.g. exact string, prefix, regex, etc).
   * Example:
   * match_excluded_headers:
   * - prefix: x-envoy
   * - exact: foo
   * - exact: bar
   * When applied, all headers that start with "x-envoy" and headers "foo" and "bar" will not be signed.
   * </pre>
   *
   * <code>repeated .envoy.type.matcher.v3.StringMatcher match_excluded_headers = 5;</code>
   */
  java.util.List<? extends io.envoyproxy.envoy.type.matcher.v3.StringMatcherOrBuilder> 
      getMatchExcludedHeadersOrBuilderList();
  /**
   * <pre>
   * A list of request header string matchers that will be excluded from signing. The excluded header can be matched by
   * any patterns defined in the StringMatcher proto (e.g. exact string, prefix, regex, etc).
   * Example:
   * match_excluded_headers:
   * - prefix: x-envoy
   * - exact: foo
   * - exact: bar
   * When applied, all headers that start with "x-envoy" and headers "foo" and "bar" will not be signed.
   * </pre>
   *
   * <code>repeated .envoy.type.matcher.v3.StringMatcher match_excluded_headers = 5;</code>
   */
  io.envoyproxy.envoy.type.matcher.v3.StringMatcherOrBuilder getMatchExcludedHeadersOrBuilder(
      int index);
}
