// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: envoy/extensions/filters/http/stateful_session/v3/stateful_session.proto

package io.envoyproxy.envoy.extensions.filters.http.stateful_session.v3;

/**
 * Protobuf type {@code envoy.extensions.filters.http.stateful_session.v3.StatefulSessionPerRoute}
 */
public final class StatefulSessionPerRoute extends
    com.google.protobuf.GeneratedMessageV3 implements
    // @@protoc_insertion_point(message_implements:envoy.extensions.filters.http.stateful_session.v3.StatefulSessionPerRoute)
    StatefulSessionPerRouteOrBuilder {
private static final long serialVersionUID = 0L;
  // Use StatefulSessionPerRoute.newBuilder() to construct.
  private StatefulSessionPerRoute(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
    super(builder);
  }
  private StatefulSessionPerRoute() {
  }

  @java.lang.Override
  @SuppressWarnings({"unused"})
  protected java.lang.Object newInstance(
      UnusedPrivateParameter unused) {
    return new StatefulSessionPerRoute();
  }

  @java.lang.Override
  public final com.google.protobuf.UnknownFieldSet
  getUnknownFields() {
    return this.unknownFields;
  }
  public static final com.google.protobuf.Descriptors.Descriptor
      getDescriptor() {
    return io.envoyproxy.envoy.extensions.filters.http.stateful_session.v3.StatefulSessionProto.internal_static_envoy_extensions_filters_http_stateful_session_v3_StatefulSessionPerRoute_descriptor;
  }

  @java.lang.Override
  protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internalGetFieldAccessorTable() {
    return io.envoyproxy.envoy.extensions.filters.http.stateful_session.v3.StatefulSessionProto.internal_static_envoy_extensions_filters_http_stateful_session_v3_StatefulSessionPerRoute_fieldAccessorTable
        .ensureFieldAccessorsInitialized(
            io.envoyproxy.envoy.extensions.filters.http.stateful_session.v3.StatefulSessionPerRoute.class, io.envoyproxy.envoy.extensions.filters.http.stateful_session.v3.StatefulSessionPerRoute.Builder.class);
  }

  private int overrideCase_ = 0;
  private java.lang.Object override_;
  public enum OverrideCase
      implements com.google.protobuf.Internal.EnumLite,
          com.google.protobuf.AbstractMessage.InternalOneOfEnum {
    DISABLED(1),
    STATEFUL_SESSION(2),
    OVERRIDE_NOT_SET(0);
    private final int value;
    private OverrideCase(int value) {
      this.value = value;
    }
    /**
     * @param value The number of the enum to look for.
     * @return The enum associated with the given number.
     * @deprecated Use {@link #forNumber(int)} instead.
     */
    @java.lang.Deprecated
    public static OverrideCase valueOf(int value) {
      return forNumber(value);
    }

    public static OverrideCase forNumber(int value) {
      switch (value) {
        case 1: return DISABLED;
        case 2: return STATEFUL_SESSION;
        case 0: return OVERRIDE_NOT_SET;
        default: return null;
      }
    }
    public int getNumber() {
      return this.value;
    }
  };

  public OverrideCase
  getOverrideCase() {
    return OverrideCase.forNumber(
        overrideCase_);
  }

  public static final int DISABLED_FIELD_NUMBER = 1;
  /**
   * <pre>
   * Disable the stateful session filter for this particular vhost or route. If disabled is
   * specified in multiple per-filter-configs, the most specific one will be used.
   * </pre>
   *
   * <code>bool disabled = 1 [(.validate.rules) = { ... }</code>
   * @return Whether the disabled field is set.
   */
  @java.lang.Override
  public boolean hasDisabled() {
    return overrideCase_ == 1;
  }
  /**
   * <pre>
   * Disable the stateful session filter for this particular vhost or route. If disabled is
   * specified in multiple per-filter-configs, the most specific one will be used.
   * </pre>
   *
   * <code>bool disabled = 1 [(.validate.rules) = { ... }</code>
   * @return The disabled.
   */
  @java.lang.Override
  public boolean getDisabled() {
    if (overrideCase_ == 1) {
      return (java.lang.Boolean) override_;
    }
    return false;
  }

  public static final int STATEFUL_SESSION_FIELD_NUMBER = 2;
  /**
   * <pre>
   * Per-route stateful session configuration that can be served by RDS or static route table.
   * </pre>
   *
   * <code>.envoy.extensions.filters.http.stateful_session.v3.StatefulSession stateful_session = 2;</code>
   * @return Whether the statefulSession field is set.
   */
  @java.lang.Override
  public boolean hasStatefulSession() {
    return overrideCase_ == 2;
  }
  /**
   * <pre>
   * Per-route stateful session configuration that can be served by RDS or static route table.
   * </pre>
   *
   * <code>.envoy.extensions.filters.http.stateful_session.v3.StatefulSession stateful_session = 2;</code>
   * @return The statefulSession.
   */
  @java.lang.Override
  public io.envoyproxy.envoy.extensions.filters.http.stateful_session.v3.StatefulSession getStatefulSession() {
    if (overrideCase_ == 2) {
       return (io.envoyproxy.envoy.extensions.filters.http.stateful_session.v3.StatefulSession) override_;
    }
    return io.envoyproxy.envoy.extensions.filters.http.stateful_session.v3.StatefulSession.getDefaultInstance();
  }
  /**
   * <pre>
   * Per-route stateful session configuration that can be served by RDS or static route table.
   * </pre>
   *
   * <code>.envoy.extensions.filters.http.stateful_session.v3.StatefulSession stateful_session = 2;</code>
   */
  @java.lang.Override
  public io.envoyproxy.envoy.extensions.filters.http.stateful_session.v3.StatefulSessionOrBuilder getStatefulSessionOrBuilder() {
    if (overrideCase_ == 2) {
       return (io.envoyproxy.envoy.extensions.filters.http.stateful_session.v3.StatefulSession) override_;
    }
    return io.envoyproxy.envoy.extensions.filters.http.stateful_session.v3.StatefulSession.getDefaultInstance();
  }

  private byte memoizedIsInitialized = -1;
  @java.lang.Override
  public final boolean isInitialized() {
    byte isInitialized = memoizedIsInitialized;
    if (isInitialized == 1) return true;
    if (isInitialized == 0) return false;

    memoizedIsInitialized = 1;
    return true;
  }

  @java.lang.Override
  public void writeTo(com.google.protobuf.CodedOutputStream output)
                      throws java.io.IOException {
    if (overrideCase_ == 1) {
      output.writeBool(
          1, (boolean)((java.lang.Boolean) override_));
    }
    if (overrideCase_ == 2) {
      output.writeMessage(2, (io.envoyproxy.envoy.extensions.filters.http.stateful_session.v3.StatefulSession) override_);
    }
    getUnknownFields().writeTo(output);
  }

  @java.lang.Override
  public int getSerializedSize() {
    int size = memoizedSize;
    if (size != -1) return size;

    size = 0;
    if (overrideCase_ == 1) {
      size += com.google.protobuf.CodedOutputStream
        .computeBoolSize(
            1, (boolean)((java.lang.Boolean) override_));
    }
    if (overrideCase_ == 2) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(2, (io.envoyproxy.envoy.extensions.filters.http.stateful_session.v3.StatefulSession) override_);
    }
    size += getUnknownFields().getSerializedSize();
    memoizedSize = size;
    return size;
  }

  @java.lang.Override
  public boolean equals(final java.lang.Object obj) {
    if (obj == this) {
     return true;
    }
    if (!(obj instanceof io.envoyproxy.envoy.extensions.filters.http.stateful_session.v3.StatefulSessionPerRoute)) {
      return super.equals(obj);
    }
    io.envoyproxy.envoy.extensions.filters.http.stateful_session.v3.StatefulSessionPerRoute other = (io.envoyproxy.envoy.extensions.filters.http.stateful_session.v3.StatefulSessionPerRoute) obj;

    if (!getOverrideCase().equals(other.getOverrideCase())) return false;
    switch (overrideCase_) {
      case 1:
        if (getDisabled()
            != other.getDisabled()) return false;
        break;
      case 2:
        if (!getStatefulSession()
            .equals(other.getStatefulSession())) return false;
        break;
      case 0:
      default:
    }
    if (!getUnknownFields().equals(other.getUnknownFields())) return false;
    return true;
  }

  @java.lang.Override
  public int hashCode() {
    if (memoizedHashCode != 0) {
      return memoizedHashCode;
    }
    int hash = 41;
    hash = (19 * hash) + getDescriptor().hashCode();
    switch (overrideCase_) {
      case 1:
        hash = (37 * hash) + DISABLED_FIELD_NUMBER;
        hash = (53 * hash) + com.google.protobuf.Internal.hashBoolean(
            getDisabled());
        break;
      case 2:
        hash = (37 * hash) + STATEFUL_SESSION_FIELD_NUMBER;
        hash = (53 * hash) + getStatefulSession().hashCode();
        break;
      case 0:
      default:
    }
    hash = (29 * hash) + getUnknownFields().hashCode();
    memoizedHashCode = hash;
    return hash;
  }

  public static io.envoyproxy.envoy.extensions.filters.http.stateful_session.v3.StatefulSessionPerRoute parseFrom(
      java.nio.ByteBuffer data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static io.envoyproxy.envoy.extensions.filters.http.stateful_session.v3.StatefulSessionPerRoute parseFrom(
      java.nio.ByteBuffer data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static io.envoyproxy.envoy.extensions.filters.http.stateful_session.v3.StatefulSessionPerRoute parseFrom(
      com.google.protobuf.ByteString data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static io.envoyproxy.envoy.extensions.filters.http.stateful_session.v3.StatefulSessionPerRoute parseFrom(
      com.google.protobuf.ByteString data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static io.envoyproxy.envoy.extensions.filters.http.stateful_session.v3.StatefulSessionPerRoute parseFrom(byte[] data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static io.envoyproxy.envoy.extensions.filters.http.stateful_session.v3.StatefulSessionPerRoute parseFrom(
      byte[] data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static io.envoyproxy.envoy.extensions.filters.http.stateful_session.v3.StatefulSessionPerRoute parseFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input);
  }
  public static io.envoyproxy.envoy.extensions.filters.http.stateful_session.v3.StatefulSessionPerRoute parseFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input, extensionRegistry);
  }
  public static io.envoyproxy.envoy.extensions.filters.http.stateful_session.v3.StatefulSessionPerRoute parseDelimitedFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseDelimitedWithIOException(PARSER, input);
  }
  public static io.envoyproxy.envoy.extensions.filters.http.stateful_session.v3.StatefulSessionPerRoute parseDelimitedFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
  }
  public static io.envoyproxy.envoy.extensions.filters.http.stateful_session.v3.StatefulSessionPerRoute parseFrom(
      com.google.protobuf.CodedInputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input);
  }
  public static io.envoyproxy.envoy.extensions.filters.http.stateful_session.v3.StatefulSessionPerRoute parseFrom(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input, extensionRegistry);
  }

  @java.lang.Override
  public Builder newBuilderForType() { return newBuilder(); }
  public static Builder newBuilder() {
    return DEFAULT_INSTANCE.toBuilder();
  }
  public static Builder newBuilder(io.envoyproxy.envoy.extensions.filters.http.stateful_session.v3.StatefulSessionPerRoute prototype) {
    return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
  }
  @java.lang.Override
  public Builder toBuilder() {
    return this == DEFAULT_INSTANCE
        ? new Builder() : new Builder().mergeFrom(this);
  }

  @java.lang.Override
  protected Builder newBuilderForType(
      com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
    Builder builder = new Builder(parent);
    return builder;
  }
  /**
   * Protobuf type {@code envoy.extensions.filters.http.stateful_session.v3.StatefulSessionPerRoute}
   */
  public static final class Builder extends
      com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
      // @@protoc_insertion_point(builder_implements:envoy.extensions.filters.http.stateful_session.v3.StatefulSessionPerRoute)
      io.envoyproxy.envoy.extensions.filters.http.stateful_session.v3.StatefulSessionPerRouteOrBuilder {
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return io.envoyproxy.envoy.extensions.filters.http.stateful_session.v3.StatefulSessionProto.internal_static_envoy_extensions_filters_http_stateful_session_v3_StatefulSessionPerRoute_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return io.envoyproxy.envoy.extensions.filters.http.stateful_session.v3.StatefulSessionProto.internal_static_envoy_extensions_filters_http_stateful_session_v3_StatefulSessionPerRoute_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              io.envoyproxy.envoy.extensions.filters.http.stateful_session.v3.StatefulSessionPerRoute.class, io.envoyproxy.envoy.extensions.filters.http.stateful_session.v3.StatefulSessionPerRoute.Builder.class);
    }

    // Construct using io.envoyproxy.envoy.extensions.filters.http.stateful_session.v3.StatefulSessionPerRoute.newBuilder()
    private Builder() {

    }

    private Builder(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      super(parent);

    }
    @java.lang.Override
    public Builder clear() {
      super.clear();
      bitField0_ = 0;
      if (statefulSessionBuilder_ != null) {
        statefulSessionBuilder_.clear();
      }
      overrideCase_ = 0;
      override_ = null;
      return this;
    }

    @java.lang.Override
    public com.google.protobuf.Descriptors.Descriptor
        getDescriptorForType() {
      return io.envoyproxy.envoy.extensions.filters.http.stateful_session.v3.StatefulSessionProto.internal_static_envoy_extensions_filters_http_stateful_session_v3_StatefulSessionPerRoute_descriptor;
    }

    @java.lang.Override
    public io.envoyproxy.envoy.extensions.filters.http.stateful_session.v3.StatefulSessionPerRoute getDefaultInstanceForType() {
      return io.envoyproxy.envoy.extensions.filters.http.stateful_session.v3.StatefulSessionPerRoute.getDefaultInstance();
    }

    @java.lang.Override
    public io.envoyproxy.envoy.extensions.filters.http.stateful_session.v3.StatefulSessionPerRoute build() {
      io.envoyproxy.envoy.extensions.filters.http.stateful_session.v3.StatefulSessionPerRoute result = buildPartial();
      if (!result.isInitialized()) {
        throw newUninitializedMessageException(result);
      }
      return result;
    }

    @java.lang.Override
    public io.envoyproxy.envoy.extensions.filters.http.stateful_session.v3.StatefulSessionPerRoute buildPartial() {
      io.envoyproxy.envoy.extensions.filters.http.stateful_session.v3.StatefulSessionPerRoute result = new io.envoyproxy.envoy.extensions.filters.http.stateful_session.v3.StatefulSessionPerRoute(this);
      if (bitField0_ != 0) { buildPartial0(result); }
      buildPartialOneofs(result);
      onBuilt();
      return result;
    }

    private void buildPartial0(io.envoyproxy.envoy.extensions.filters.http.stateful_session.v3.StatefulSessionPerRoute result) {
      int from_bitField0_ = bitField0_;
    }

    private void buildPartialOneofs(io.envoyproxy.envoy.extensions.filters.http.stateful_session.v3.StatefulSessionPerRoute result) {
      result.overrideCase_ = overrideCase_;
      result.override_ = this.override_;
      if (overrideCase_ == 2 &&
          statefulSessionBuilder_ != null) {
        result.override_ = statefulSessionBuilder_.build();
      }
    }

    @java.lang.Override
    public Builder clone() {
      return super.clone();
    }
    @java.lang.Override
    public Builder setField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        java.lang.Object value) {
      return super.setField(field, value);
    }
    @java.lang.Override
    public Builder clearField(
        com.google.protobuf.Descriptors.FieldDescriptor field) {
      return super.clearField(field);
    }
    @java.lang.Override
    public Builder clearOneof(
        com.google.protobuf.Descriptors.OneofDescriptor oneof) {
      return super.clearOneof(oneof);
    }
    @java.lang.Override
    public Builder setRepeatedField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        int index, java.lang.Object value) {
      return super.setRepeatedField(field, index, value);
    }
    @java.lang.Override
    public Builder addRepeatedField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        java.lang.Object value) {
      return super.addRepeatedField(field, value);
    }
    @java.lang.Override
    public Builder mergeFrom(com.google.protobuf.Message other) {
      if (other instanceof io.envoyproxy.envoy.extensions.filters.http.stateful_session.v3.StatefulSessionPerRoute) {
        return mergeFrom((io.envoyproxy.envoy.extensions.filters.http.stateful_session.v3.StatefulSessionPerRoute)other);
      } else {
        super.mergeFrom(other);
        return this;
      }
    }

    public Builder mergeFrom(io.envoyproxy.envoy.extensions.filters.http.stateful_session.v3.StatefulSessionPerRoute other) {
      if (other == io.envoyproxy.envoy.extensions.filters.http.stateful_session.v3.StatefulSessionPerRoute.getDefaultInstance()) return this;
      switch (other.getOverrideCase()) {
        case DISABLED: {
          setDisabled(other.getDisabled());
          break;
        }
        case STATEFUL_SESSION: {
          mergeStatefulSession(other.getStatefulSession());
          break;
        }
        case OVERRIDE_NOT_SET: {
          break;
        }
      }
      this.mergeUnknownFields(other.getUnknownFields());
      onChanged();
      return this;
    }

    @java.lang.Override
    public final boolean isInitialized() {
      return true;
    }

    @java.lang.Override
    public Builder mergeFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 8: {
              override_ = input.readBool();
              overrideCase_ = 1;
              break;
            } // case 8
            case 18: {
              input.readMessage(
                  getStatefulSessionFieldBuilder().getBuilder(),
                  extensionRegistry);
              overrideCase_ = 2;
              break;
            } // case 18
            default: {
              if (!super.parseUnknownField(input, extensionRegistry, tag)) {
                done = true; // was an endgroup tag
              }
              break;
            } // default:
          } // switch (tag)
        } // while (!done)
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.unwrapIOException();
      } finally {
        onChanged();
      } // finally
      return this;
    }
    private int overrideCase_ = 0;
    private java.lang.Object override_;
    public OverrideCase
        getOverrideCase() {
      return OverrideCase.forNumber(
          overrideCase_);
    }

    public Builder clearOverride() {
      overrideCase_ = 0;
      override_ = null;
      onChanged();
      return this;
    }

    private int bitField0_;

    /**
     * <pre>
     * Disable the stateful session filter for this particular vhost or route. If disabled is
     * specified in multiple per-filter-configs, the most specific one will be used.
     * </pre>
     *
     * <code>bool disabled = 1 [(.validate.rules) = { ... }</code>
     * @return Whether the disabled field is set.
     */
    public boolean hasDisabled() {
      return overrideCase_ == 1;
    }
    /**
     * <pre>
     * Disable the stateful session filter for this particular vhost or route. If disabled is
     * specified in multiple per-filter-configs, the most specific one will be used.
     * </pre>
     *
     * <code>bool disabled = 1 [(.validate.rules) = { ... }</code>
     * @return The disabled.
     */
    public boolean getDisabled() {
      if (overrideCase_ == 1) {
        return (java.lang.Boolean) override_;
      }
      return false;
    }
    /**
     * <pre>
     * Disable the stateful session filter for this particular vhost or route. If disabled is
     * specified in multiple per-filter-configs, the most specific one will be used.
     * </pre>
     *
     * <code>bool disabled = 1 [(.validate.rules) = { ... }</code>
     * @param value The disabled to set.
     * @return This builder for chaining.
     */
    public Builder setDisabled(boolean value) {
      
      overrideCase_ = 1;
      override_ = value;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * Disable the stateful session filter for this particular vhost or route. If disabled is
     * specified in multiple per-filter-configs, the most specific one will be used.
     * </pre>
     *
     * <code>bool disabled = 1 [(.validate.rules) = { ... }</code>
     * @return This builder for chaining.
     */
    public Builder clearDisabled() {
      if (overrideCase_ == 1) {
        overrideCase_ = 0;
        override_ = null;
        onChanged();
      }
      return this;
    }

    private com.google.protobuf.SingleFieldBuilderV3<
        io.envoyproxy.envoy.extensions.filters.http.stateful_session.v3.StatefulSession, io.envoyproxy.envoy.extensions.filters.http.stateful_session.v3.StatefulSession.Builder, io.envoyproxy.envoy.extensions.filters.http.stateful_session.v3.StatefulSessionOrBuilder> statefulSessionBuilder_;
    /**
     * <pre>
     * Per-route stateful session configuration that can be served by RDS or static route table.
     * </pre>
     *
     * <code>.envoy.extensions.filters.http.stateful_session.v3.StatefulSession stateful_session = 2;</code>
     * @return Whether the statefulSession field is set.
     */
    @java.lang.Override
    public boolean hasStatefulSession() {
      return overrideCase_ == 2;
    }
    /**
     * <pre>
     * Per-route stateful session configuration that can be served by RDS or static route table.
     * </pre>
     *
     * <code>.envoy.extensions.filters.http.stateful_session.v3.StatefulSession stateful_session = 2;</code>
     * @return The statefulSession.
     */
    @java.lang.Override
    public io.envoyproxy.envoy.extensions.filters.http.stateful_session.v3.StatefulSession getStatefulSession() {
      if (statefulSessionBuilder_ == null) {
        if (overrideCase_ == 2) {
          return (io.envoyproxy.envoy.extensions.filters.http.stateful_session.v3.StatefulSession) override_;
        }
        return io.envoyproxy.envoy.extensions.filters.http.stateful_session.v3.StatefulSession.getDefaultInstance();
      } else {
        if (overrideCase_ == 2) {
          return statefulSessionBuilder_.getMessage();
        }
        return io.envoyproxy.envoy.extensions.filters.http.stateful_session.v3.StatefulSession.getDefaultInstance();
      }
    }
    /**
     * <pre>
     * Per-route stateful session configuration that can be served by RDS or static route table.
     * </pre>
     *
     * <code>.envoy.extensions.filters.http.stateful_session.v3.StatefulSession stateful_session = 2;</code>
     */
    public Builder setStatefulSession(io.envoyproxy.envoy.extensions.filters.http.stateful_session.v3.StatefulSession value) {
      if (statefulSessionBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        override_ = value;
        onChanged();
      } else {
        statefulSessionBuilder_.setMessage(value);
      }
      overrideCase_ = 2;
      return this;
    }
    /**
     * <pre>
     * Per-route stateful session configuration that can be served by RDS or static route table.
     * </pre>
     *
     * <code>.envoy.extensions.filters.http.stateful_session.v3.StatefulSession stateful_session = 2;</code>
     */
    public Builder setStatefulSession(
        io.envoyproxy.envoy.extensions.filters.http.stateful_session.v3.StatefulSession.Builder builderForValue) {
      if (statefulSessionBuilder_ == null) {
        override_ = builderForValue.build();
        onChanged();
      } else {
        statefulSessionBuilder_.setMessage(builderForValue.build());
      }
      overrideCase_ = 2;
      return this;
    }
    /**
     * <pre>
     * Per-route stateful session configuration that can be served by RDS or static route table.
     * </pre>
     *
     * <code>.envoy.extensions.filters.http.stateful_session.v3.StatefulSession stateful_session = 2;</code>
     */
    public Builder mergeStatefulSession(io.envoyproxy.envoy.extensions.filters.http.stateful_session.v3.StatefulSession value) {
      if (statefulSessionBuilder_ == null) {
        if (overrideCase_ == 2 &&
            override_ != io.envoyproxy.envoy.extensions.filters.http.stateful_session.v3.StatefulSession.getDefaultInstance()) {
          override_ = io.envoyproxy.envoy.extensions.filters.http.stateful_session.v3.StatefulSession.newBuilder((io.envoyproxy.envoy.extensions.filters.http.stateful_session.v3.StatefulSession) override_)
              .mergeFrom(value).buildPartial();
        } else {
          override_ = value;
        }
        onChanged();
      } else {
        if (overrideCase_ == 2) {
          statefulSessionBuilder_.mergeFrom(value);
        } else {
          statefulSessionBuilder_.setMessage(value);
        }
      }
      overrideCase_ = 2;
      return this;
    }
    /**
     * <pre>
     * Per-route stateful session configuration that can be served by RDS or static route table.
     * </pre>
     *
     * <code>.envoy.extensions.filters.http.stateful_session.v3.StatefulSession stateful_session = 2;</code>
     */
    public Builder clearStatefulSession() {
      if (statefulSessionBuilder_ == null) {
        if (overrideCase_ == 2) {
          overrideCase_ = 0;
          override_ = null;
          onChanged();
        }
      } else {
        if (overrideCase_ == 2) {
          overrideCase_ = 0;
          override_ = null;
        }
        statefulSessionBuilder_.clear();
      }
      return this;
    }
    /**
     * <pre>
     * Per-route stateful session configuration that can be served by RDS or static route table.
     * </pre>
     *
     * <code>.envoy.extensions.filters.http.stateful_session.v3.StatefulSession stateful_session = 2;</code>
     */
    public io.envoyproxy.envoy.extensions.filters.http.stateful_session.v3.StatefulSession.Builder getStatefulSessionBuilder() {
      return getStatefulSessionFieldBuilder().getBuilder();
    }
    /**
     * <pre>
     * Per-route stateful session configuration that can be served by RDS or static route table.
     * </pre>
     *
     * <code>.envoy.extensions.filters.http.stateful_session.v3.StatefulSession stateful_session = 2;</code>
     */
    @java.lang.Override
    public io.envoyproxy.envoy.extensions.filters.http.stateful_session.v3.StatefulSessionOrBuilder getStatefulSessionOrBuilder() {
      if ((overrideCase_ == 2) && (statefulSessionBuilder_ != null)) {
        return statefulSessionBuilder_.getMessageOrBuilder();
      } else {
        if (overrideCase_ == 2) {
          return (io.envoyproxy.envoy.extensions.filters.http.stateful_session.v3.StatefulSession) override_;
        }
        return io.envoyproxy.envoy.extensions.filters.http.stateful_session.v3.StatefulSession.getDefaultInstance();
      }
    }
    /**
     * <pre>
     * Per-route stateful session configuration that can be served by RDS or static route table.
     * </pre>
     *
     * <code>.envoy.extensions.filters.http.stateful_session.v3.StatefulSession stateful_session = 2;</code>
     */
    private com.google.protobuf.SingleFieldBuilderV3<
        io.envoyproxy.envoy.extensions.filters.http.stateful_session.v3.StatefulSession, io.envoyproxy.envoy.extensions.filters.http.stateful_session.v3.StatefulSession.Builder, io.envoyproxy.envoy.extensions.filters.http.stateful_session.v3.StatefulSessionOrBuilder> 
        getStatefulSessionFieldBuilder() {
      if (statefulSessionBuilder_ == null) {
        if (!(overrideCase_ == 2)) {
          override_ = io.envoyproxy.envoy.extensions.filters.http.stateful_session.v3.StatefulSession.getDefaultInstance();
        }
        statefulSessionBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
            io.envoyproxy.envoy.extensions.filters.http.stateful_session.v3.StatefulSession, io.envoyproxy.envoy.extensions.filters.http.stateful_session.v3.StatefulSession.Builder, io.envoyproxy.envoy.extensions.filters.http.stateful_session.v3.StatefulSessionOrBuilder>(
                (io.envoyproxy.envoy.extensions.filters.http.stateful_session.v3.StatefulSession) override_,
                getParentForChildren(),
                isClean());
        override_ = null;
      }
      overrideCase_ = 2;
      onChanged();
      return statefulSessionBuilder_;
    }
    @java.lang.Override
    public final Builder setUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return super.setUnknownFields(unknownFields);
    }

    @java.lang.Override
    public final Builder mergeUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return super.mergeUnknownFields(unknownFields);
    }


    // @@protoc_insertion_point(builder_scope:envoy.extensions.filters.http.stateful_session.v3.StatefulSessionPerRoute)
  }

  // @@protoc_insertion_point(class_scope:envoy.extensions.filters.http.stateful_session.v3.StatefulSessionPerRoute)
  private static final io.envoyproxy.envoy.extensions.filters.http.stateful_session.v3.StatefulSessionPerRoute DEFAULT_INSTANCE;
  static {
    DEFAULT_INSTANCE = new io.envoyproxy.envoy.extensions.filters.http.stateful_session.v3.StatefulSessionPerRoute();
  }

  public static io.envoyproxy.envoy.extensions.filters.http.stateful_session.v3.StatefulSessionPerRoute getDefaultInstance() {
    return DEFAULT_INSTANCE;
  }

  private static final com.google.protobuf.Parser<StatefulSessionPerRoute>
      PARSER = new com.google.protobuf.AbstractParser<StatefulSessionPerRoute>() {
    @java.lang.Override
    public StatefulSessionPerRoute parsePartialFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      Builder builder = newBuilder();
      try {
        builder.mergeFrom(input, extensionRegistry);
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(builder.buildPartial());
      } catch (com.google.protobuf.UninitializedMessageException e) {
        throw e.asInvalidProtocolBufferException().setUnfinishedMessage(builder.buildPartial());
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(e)
            .setUnfinishedMessage(builder.buildPartial());
      }
      return builder.buildPartial();
    }
  };

  public static com.google.protobuf.Parser<StatefulSessionPerRoute> parser() {
    return PARSER;
  }

  @java.lang.Override
  public com.google.protobuf.Parser<StatefulSessionPerRoute> getParserForType() {
    return PARSER;
  }

  @java.lang.Override
  public io.envoyproxy.envoy.extensions.filters.http.stateful_session.v3.StatefulSessionPerRoute getDefaultInstanceForType() {
    return DEFAULT_INSTANCE;
  }

}

