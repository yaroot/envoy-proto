// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: envoy/extensions/filters/http/rbac/v3/rbac.proto

package io.envoyproxy.envoy.extensions.filters.http.rbac.v3;

public final class RbacProto {
  private RbacProto() {}
  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistryLite registry) {
  }

  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistry registry) {
    registerAllExtensions(
        (com.google.protobuf.ExtensionRegistryLite) registry);
  }
  static final com.google.protobuf.Descriptors.Descriptor
    internal_static_envoy_extensions_filters_http_rbac_v3_RBAC_descriptor;
  static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_envoy_extensions_filters_http_rbac_v3_RBAC_fieldAccessorTable;
  static final com.google.protobuf.Descriptors.Descriptor
    internal_static_envoy_extensions_filters_http_rbac_v3_RBACPerRoute_descriptor;
  static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_envoy_extensions_filters_http_rbac_v3_RBACPerRoute_fieldAccessorTable;

  public static com.google.protobuf.Descriptors.FileDescriptor
      getDescriptor() {
    return descriptor;
  }
  private static  com.google.protobuf.Descriptors.FileDescriptor
      descriptor;
  static {
    java.lang.String[] descriptorData = {
      "\n0envoy/extensions/filters/http/rbac/v3/" +
      "rbac.proto\022%envoy.extensions.filters.htt" +
      "p.rbac.v3\032\037envoy/config/rbac/v3/rbac.pro" +
      "to\032\037xds/annotations/v3/status.proto\032!xds" +
      "/type/matcher/v3/matcher.proto\032\036udpa/ann" +
      "otations/migrate.proto\032\035udpa/annotations" +
      "/status.proto\032!udpa/annotations/versioni" +
      "ng.proto\"\232\003\n\004RBAC\022B\n\005rules\030\001 \001(\0132\032.envoy" +
      ".config.rbac.v3.RBACB\027\362\230\376\217\005\021\022\017rules_spec" +
      "ifier\022N\n\007matcher\030\004 \001(\0132\034.xds.type.matche" +
      "r.v3.MatcherB\037\362\230\376\217\005\021\022\017rules_specifier\322\306\244" +
      "\341\006\002\010\001\022P\n\014shadow_rules\030\002 \001(\0132\032.envoy.conf" +
      "ig.rbac.v3.RBACB\036\362\230\376\217\005\030\022\026shadow_rules_sp" +
      "ecifier\022\\\n\016shadow_matcher\030\005 \001(\0132\034.xds.ty" +
      "pe.matcher.v3.MatcherB&\362\230\376\217\005\030\022\026shadow_ru" +
      "les_specifier\322\306\244\341\006\002\010\001\022 \n\030shadow_rules_st" +
      "at_prefix\030\003 \001(\t:,\232\305\210\036\'\n%envoy.config.fil" +
      "ter.http.rbac.v2.RBAC\"\205\001\n\014RBACPerRoute\0229" +
      "\n\004rbac\030\002 \001(\0132+.envoy.extensions.filters." +
      "http.rbac.v3.RBAC:4\232\305\210\036/\n-envoy.config.f" +
      "ilter.http.rbac.v2.RBACPerRouteJ\004\010\001\020\002B\237\001" +
      "\n3io.envoyproxy.envoy.extensions.filters" +
      ".http.rbac.v3B\tRbacProtoP\001ZSgithub.com/e" +
      "nvoyproxy/go-control-plane/envoy/extensi" +
      "ons/filters/http/rbac/v3;rbacv3\272\200\310\321\006\002\020\002b" +
      "\006proto3"
    };
    descriptor = com.google.protobuf.Descriptors.FileDescriptor
      .internalBuildGeneratedFileFrom(descriptorData,
        new com.google.protobuf.Descriptors.FileDescriptor[] {
          io.envoyproxy.envoy.config.rbac.v3.RbacProto.getDescriptor(),
          xds.annotations.v3.Status.getDescriptor(),
          com.github.xds.type.matcher.v3.MatcherProto.getDescriptor(),
          udpa.annotations.Migrate.getDescriptor(),
          udpa.annotations.Status.getDescriptor(),
          udpa.annotations.Versioning.getDescriptor(),
        });
    internal_static_envoy_extensions_filters_http_rbac_v3_RBAC_descriptor =
      getDescriptor().getMessageTypes().get(0);
    internal_static_envoy_extensions_filters_http_rbac_v3_RBAC_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_envoy_extensions_filters_http_rbac_v3_RBAC_descriptor,
        new java.lang.String[] { "Rules", "Matcher", "ShadowRules", "ShadowMatcher", "ShadowRulesStatPrefix", });
    internal_static_envoy_extensions_filters_http_rbac_v3_RBACPerRoute_descriptor =
      getDescriptor().getMessageTypes().get(1);
    internal_static_envoy_extensions_filters_http_rbac_v3_RBACPerRoute_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_envoy_extensions_filters_http_rbac_v3_RBACPerRoute_descriptor,
        new java.lang.String[] { "Rbac", });
    com.google.protobuf.ExtensionRegistry registry =
        com.google.protobuf.ExtensionRegistry.newInstance();
    registry.add(udpa.annotations.Migrate.fieldMigrate);
    registry.add(udpa.annotations.Status.fileStatus);
    registry.add(udpa.annotations.Versioning.versioning);
    registry.add(xds.annotations.v3.Status.fieldStatus);
    com.google.protobuf.Descriptors.FileDescriptor
        .internalUpdateFileDescriptor(descriptor, registry);
    io.envoyproxy.envoy.config.rbac.v3.RbacProto.getDescriptor();
    xds.annotations.v3.Status.getDescriptor();
    com.github.xds.type.matcher.v3.MatcherProto.getDescriptor();
    udpa.annotations.Migrate.getDescriptor();
    udpa.annotations.Status.getDescriptor();
    udpa.annotations.Versioning.getDescriptor();
  }

  // @@protoc_insertion_point(outer_class_scope)
}
