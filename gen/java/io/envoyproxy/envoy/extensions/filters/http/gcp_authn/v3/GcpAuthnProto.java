// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: envoy/extensions/filters/http/gcp_authn/v3/gcp_authn.proto

package io.envoyproxy.envoy.extensions.filters.http.gcp_authn.v3;

public final class GcpAuthnProto {
  private GcpAuthnProto() {}
  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistryLite registry) {
  }

  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistry registry) {
    registerAllExtensions(
        (com.google.protobuf.ExtensionRegistryLite) registry);
  }
  static final com.google.protobuf.Descriptors.Descriptor
    internal_static_envoy_extensions_filters_http_gcp_authn_v3_GcpAuthnFilterConfig_descriptor;
  static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_envoy_extensions_filters_http_gcp_authn_v3_GcpAuthnFilterConfig_fieldAccessorTable;
  static final com.google.protobuf.Descriptors.Descriptor
    internal_static_envoy_extensions_filters_http_gcp_authn_v3_Audience_descriptor;
  static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_envoy_extensions_filters_http_gcp_authn_v3_Audience_fieldAccessorTable;
  static final com.google.protobuf.Descriptors.Descriptor
    internal_static_envoy_extensions_filters_http_gcp_authn_v3_TokenCacheConfig_descriptor;
  static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_envoy_extensions_filters_http_gcp_authn_v3_TokenCacheConfig_fieldAccessorTable;

  public static com.google.protobuf.Descriptors.FileDescriptor
      getDescriptor() {
    return descriptor;
  }
  private static  com.google.protobuf.Descriptors.FileDescriptor
      descriptor;
  static {
    java.lang.String[] descriptorData = {
      "\n:envoy/extensions/filters/http/gcp_auth" +
      "n/v3/gcp_authn.proto\022*envoy.extensions.f" +
      "ilters.http.gcp_authn.v3\032\037envoy/config/c" +
      "ore/v3/base.proto\032#envoy/config/core/v3/" +
      "http_uri.proto\032\036google/protobuf/wrappers" +
      ".proto\032\035udpa/annotations/status.proto\032\027v" +
      "alidate/validate.proto\"\336\001\n\024GcpAuthnFilte" +
      "rConfig\0229\n\010http_uri\030\001 \001(\0132\035.envoy.config" +
      ".core.v3.HttpUriB\010\372B\005\212\001\002\020\001\0227\n\014retry_poli" +
      "cy\030\002 \001(\0132!.envoy.config.core.v3.RetryPol" +
      "icy\022R\n\014cache_config\030\003 \001(\0132<.envoy.extens" +
      "ions.filters.http.gcp_authn.v3.TokenCach" +
      "eConfig\" \n\010Audience\022\024\n\003url\030\001 \001(\tB\007\372B\004r\002\020" +
      "\001\"U\n\020TokenCacheConfig\022A\n\ncache_size\030\001 \001(" +
      "\0132\034.google.protobuf.UInt64ValueB\017\372B\0142\n\030\377" +
      "\377\377\377\377\377\377\377\177B\262\001\n8io.envoyproxy.envoy.extensi" +
      "ons.filters.http.gcp_authn.v3B\rGcpAuthnP" +
      "rotoP\001Z]github.com/envoyproxy/go-control" +
      "-plane/envoy/extensions/filters/http/gcp" +
      "_authn/v3;gcp_authnv3\272\200\310\321\006\002\020\002b\006proto3"
    };
    descriptor = com.google.protobuf.Descriptors.FileDescriptor
      .internalBuildGeneratedFileFrom(descriptorData,
        new com.google.protobuf.Descriptors.FileDescriptor[] {
          io.envoyproxy.envoy.config.core.v3.BaseProto.getDescriptor(),
          io.envoyproxy.envoy.config.core.v3.HttpUriProto.getDescriptor(),
          com.google.protobuf.WrappersProto.getDescriptor(),
          udpa.annotations.Status.getDescriptor(),
          io.envoyproxy.pgv.validate.Validate.getDescriptor(),
        });
    internal_static_envoy_extensions_filters_http_gcp_authn_v3_GcpAuthnFilterConfig_descriptor =
      getDescriptor().getMessageTypes().get(0);
    internal_static_envoy_extensions_filters_http_gcp_authn_v3_GcpAuthnFilterConfig_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_envoy_extensions_filters_http_gcp_authn_v3_GcpAuthnFilterConfig_descriptor,
        new java.lang.String[] { "HttpUri", "RetryPolicy", "CacheConfig", });
    internal_static_envoy_extensions_filters_http_gcp_authn_v3_Audience_descriptor =
      getDescriptor().getMessageTypes().get(1);
    internal_static_envoy_extensions_filters_http_gcp_authn_v3_Audience_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_envoy_extensions_filters_http_gcp_authn_v3_Audience_descriptor,
        new java.lang.String[] { "Url", });
    internal_static_envoy_extensions_filters_http_gcp_authn_v3_TokenCacheConfig_descriptor =
      getDescriptor().getMessageTypes().get(2);
    internal_static_envoy_extensions_filters_http_gcp_authn_v3_TokenCacheConfig_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_envoy_extensions_filters_http_gcp_authn_v3_TokenCacheConfig_descriptor,
        new java.lang.String[] { "CacheSize", });
    com.google.protobuf.ExtensionRegistry registry =
        com.google.protobuf.ExtensionRegistry.newInstance();
    registry.add(udpa.annotations.Status.fileStatus);
    registry.add(io.envoyproxy.pgv.validate.Validate.rules);
    com.google.protobuf.Descriptors.FileDescriptor
        .internalUpdateFileDescriptor(descriptor, registry);
    io.envoyproxy.envoy.config.core.v3.BaseProto.getDescriptor();
    io.envoyproxy.envoy.config.core.v3.HttpUriProto.getDescriptor();
    com.google.protobuf.WrappersProto.getDescriptor();
    udpa.annotations.Status.getDescriptor();
    io.envoyproxy.pgv.validate.Validate.getDescriptor();
  }

  // @@protoc_insertion_point(outer_class_scope)
}
