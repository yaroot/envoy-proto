// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: envoy/extensions/filters/http/ext_proc/v3/processing_mode.proto

package io.envoyproxy.envoy.extensions.filters.http.ext_proc.v3;

public interface ProcessingModeOrBuilder extends
    // @@protoc_insertion_point(interface_extends:envoy.extensions.filters.http.ext_proc.v3.ProcessingMode)
    com.google.protobuf.MessageOrBuilder {

  /**
   * <pre>
   * How to handle the request header. Default is "SEND".
   * </pre>
   *
   * <code>.envoy.extensions.filters.http.ext_proc.v3.ProcessingMode.HeaderSendMode request_header_mode = 1 [(.validate.rules) = { ... }</code>
   * @return The enum numeric value on the wire for requestHeaderMode.
   */
  int getRequestHeaderModeValue();
  /**
   * <pre>
   * How to handle the request header. Default is "SEND".
   * </pre>
   *
   * <code>.envoy.extensions.filters.http.ext_proc.v3.ProcessingMode.HeaderSendMode request_header_mode = 1 [(.validate.rules) = { ... }</code>
   * @return The requestHeaderMode.
   */
  io.envoyproxy.envoy.extensions.filters.http.ext_proc.v3.ProcessingMode.HeaderSendMode getRequestHeaderMode();

  /**
   * <pre>
   * How to handle the response header. Default is "SEND".
   * </pre>
   *
   * <code>.envoy.extensions.filters.http.ext_proc.v3.ProcessingMode.HeaderSendMode response_header_mode = 2 [(.validate.rules) = { ... }</code>
   * @return The enum numeric value on the wire for responseHeaderMode.
   */
  int getResponseHeaderModeValue();
  /**
   * <pre>
   * How to handle the response header. Default is "SEND".
   * </pre>
   *
   * <code>.envoy.extensions.filters.http.ext_proc.v3.ProcessingMode.HeaderSendMode response_header_mode = 2 [(.validate.rules) = { ... }</code>
   * @return The responseHeaderMode.
   */
  io.envoyproxy.envoy.extensions.filters.http.ext_proc.v3.ProcessingMode.HeaderSendMode getResponseHeaderMode();

  /**
   * <pre>
   * How to handle the request body. Default is "NONE".
   * </pre>
   *
   * <code>.envoy.extensions.filters.http.ext_proc.v3.ProcessingMode.BodySendMode request_body_mode = 3 [(.validate.rules) = { ... }</code>
   * @return The enum numeric value on the wire for requestBodyMode.
   */
  int getRequestBodyModeValue();
  /**
   * <pre>
   * How to handle the request body. Default is "NONE".
   * </pre>
   *
   * <code>.envoy.extensions.filters.http.ext_proc.v3.ProcessingMode.BodySendMode request_body_mode = 3 [(.validate.rules) = { ... }</code>
   * @return The requestBodyMode.
   */
  io.envoyproxy.envoy.extensions.filters.http.ext_proc.v3.ProcessingMode.BodySendMode getRequestBodyMode();

  /**
   * <pre>
   * How do handle the response body. Default is "NONE".
   * </pre>
   *
   * <code>.envoy.extensions.filters.http.ext_proc.v3.ProcessingMode.BodySendMode response_body_mode = 4 [(.validate.rules) = { ... }</code>
   * @return The enum numeric value on the wire for responseBodyMode.
   */
  int getResponseBodyModeValue();
  /**
   * <pre>
   * How do handle the response body. Default is "NONE".
   * </pre>
   *
   * <code>.envoy.extensions.filters.http.ext_proc.v3.ProcessingMode.BodySendMode response_body_mode = 4 [(.validate.rules) = { ... }</code>
   * @return The responseBodyMode.
   */
  io.envoyproxy.envoy.extensions.filters.http.ext_proc.v3.ProcessingMode.BodySendMode getResponseBodyMode();

  /**
   * <pre>
   * How to handle the request trailers. Default is "SKIP".
   * </pre>
   *
   * <code>.envoy.extensions.filters.http.ext_proc.v3.ProcessingMode.HeaderSendMode request_trailer_mode = 5 [(.validate.rules) = { ... }</code>
   * @return The enum numeric value on the wire for requestTrailerMode.
   */
  int getRequestTrailerModeValue();
  /**
   * <pre>
   * How to handle the request trailers. Default is "SKIP".
   * </pre>
   *
   * <code>.envoy.extensions.filters.http.ext_proc.v3.ProcessingMode.HeaderSendMode request_trailer_mode = 5 [(.validate.rules) = { ... }</code>
   * @return The requestTrailerMode.
   */
  io.envoyproxy.envoy.extensions.filters.http.ext_proc.v3.ProcessingMode.HeaderSendMode getRequestTrailerMode();

  /**
   * <pre>
   * How to handle the response trailers. Default is "SKIP".
   * </pre>
   *
   * <code>.envoy.extensions.filters.http.ext_proc.v3.ProcessingMode.HeaderSendMode response_trailer_mode = 6 [(.validate.rules) = { ... }</code>
   * @return The enum numeric value on the wire for responseTrailerMode.
   */
  int getResponseTrailerModeValue();
  /**
   * <pre>
   * How to handle the response trailers. Default is "SKIP".
   * </pre>
   *
   * <code>.envoy.extensions.filters.http.ext_proc.v3.ProcessingMode.HeaderSendMode response_trailer_mode = 6 [(.validate.rules) = { ... }</code>
   * @return The responseTrailerMode.
   */
  io.envoyproxy.envoy.extensions.filters.http.ext_proc.v3.ProcessingMode.HeaderSendMode getResponseTrailerMode();
}
