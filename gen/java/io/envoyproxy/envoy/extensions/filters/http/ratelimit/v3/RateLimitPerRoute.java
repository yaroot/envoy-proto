// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: envoy/extensions/filters/http/ratelimit/v3/rate_limit.proto

package io.envoyproxy.envoy.extensions.filters.http.ratelimit.v3;

/**
 * Protobuf type {@code envoy.extensions.filters.http.ratelimit.v3.RateLimitPerRoute}
 */
public final class RateLimitPerRoute extends
    com.google.protobuf.GeneratedMessageV3 implements
    // @@protoc_insertion_point(message_implements:envoy.extensions.filters.http.ratelimit.v3.RateLimitPerRoute)
    RateLimitPerRouteOrBuilder {
private static final long serialVersionUID = 0L;
  // Use RateLimitPerRoute.newBuilder() to construct.
  private RateLimitPerRoute(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
    super(builder);
  }
  private RateLimitPerRoute() {
    vhRateLimits_ = 0;
    overrideOption_ = 0;
    rateLimits_ = java.util.Collections.emptyList();
  }

  @java.lang.Override
  @SuppressWarnings({"unused"})
  protected java.lang.Object newInstance(
      UnusedPrivateParameter unused) {
    return new RateLimitPerRoute();
  }

  @java.lang.Override
  public final com.google.protobuf.UnknownFieldSet
  getUnknownFields() {
    return this.unknownFields;
  }
  public static final com.google.protobuf.Descriptors.Descriptor
      getDescriptor() {
    return io.envoyproxy.envoy.extensions.filters.http.ratelimit.v3.RateLimitProto.internal_static_envoy_extensions_filters_http_ratelimit_v3_RateLimitPerRoute_descriptor;
  }

  @java.lang.Override
  protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internalGetFieldAccessorTable() {
    return io.envoyproxy.envoy.extensions.filters.http.ratelimit.v3.RateLimitProto.internal_static_envoy_extensions_filters_http_ratelimit_v3_RateLimitPerRoute_fieldAccessorTable
        .ensureFieldAccessorsInitialized(
            io.envoyproxy.envoy.extensions.filters.http.ratelimit.v3.RateLimitPerRoute.class, io.envoyproxy.envoy.extensions.filters.http.ratelimit.v3.RateLimitPerRoute.Builder.class);
  }

  /**
   * <pre>
   * [#next-major-version: unify with local ratelimit, should use common.ratelimit.v3.VhRateLimitsOptions instead.]
   * </pre>
   *
   * Protobuf enum {@code envoy.extensions.filters.http.ratelimit.v3.RateLimitPerRoute.VhRateLimitsOptions}
   */
  public enum VhRateLimitsOptions
      implements com.google.protobuf.ProtocolMessageEnum {
    /**
     * <pre>
     * Use the virtual host rate limits unless the route has a rate limit policy.
     * </pre>
     *
     * <code>OVERRIDE = 0;</code>
     */
    OVERRIDE(0),
    /**
     * <pre>
     * Use the virtual host rate limits even if the route has a rate limit policy.
     * </pre>
     *
     * <code>INCLUDE = 1;</code>
     */
    INCLUDE(1),
    /**
     * <pre>
     * Ignore the virtual host rate limits even if the route does not have a rate limit policy.
     * </pre>
     *
     * <code>IGNORE = 2;</code>
     */
    IGNORE(2),
    UNRECOGNIZED(-1),
    ;

    /**
     * <pre>
     * Use the virtual host rate limits unless the route has a rate limit policy.
     * </pre>
     *
     * <code>OVERRIDE = 0;</code>
     */
    public static final int OVERRIDE_VALUE = 0;
    /**
     * <pre>
     * Use the virtual host rate limits even if the route has a rate limit policy.
     * </pre>
     *
     * <code>INCLUDE = 1;</code>
     */
    public static final int INCLUDE_VALUE = 1;
    /**
     * <pre>
     * Ignore the virtual host rate limits even if the route does not have a rate limit policy.
     * </pre>
     *
     * <code>IGNORE = 2;</code>
     */
    public static final int IGNORE_VALUE = 2;


    public final int getNumber() {
      if (this == UNRECOGNIZED) {
        throw new java.lang.IllegalArgumentException(
            "Can't get the number of an unknown enum value.");
      }
      return value;
    }

    /**
     * @param value The numeric wire value of the corresponding enum entry.
     * @return The enum associated with the given numeric wire value.
     * @deprecated Use {@link #forNumber(int)} instead.
     */
    @java.lang.Deprecated
    public static VhRateLimitsOptions valueOf(int value) {
      return forNumber(value);
    }

    /**
     * @param value The numeric wire value of the corresponding enum entry.
     * @return The enum associated with the given numeric wire value.
     */
    public static VhRateLimitsOptions forNumber(int value) {
      switch (value) {
        case 0: return OVERRIDE;
        case 1: return INCLUDE;
        case 2: return IGNORE;
        default: return null;
      }
    }

    public static com.google.protobuf.Internal.EnumLiteMap<VhRateLimitsOptions>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static final com.google.protobuf.Internal.EnumLiteMap<
        VhRateLimitsOptions> internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<VhRateLimitsOptions>() {
            public VhRateLimitsOptions findValueByNumber(int number) {
              return VhRateLimitsOptions.forNumber(number);
            }
          };

    public final com.google.protobuf.Descriptors.EnumValueDescriptor
        getValueDescriptor() {
      if (this == UNRECOGNIZED) {
        throw new java.lang.IllegalStateException(
            "Can't get the descriptor of an unrecognized enum value.");
      }
      return getDescriptor().getValues().get(ordinal());
    }
    public final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptorForType() {
      return getDescriptor();
    }
    public static final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptor() {
      return io.envoyproxy.envoy.extensions.filters.http.ratelimit.v3.RateLimitPerRoute.getDescriptor().getEnumTypes().get(0);
    }

    private static final VhRateLimitsOptions[] VALUES = values();

    public static VhRateLimitsOptions valueOf(
        com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
      if (desc.getType() != getDescriptor()) {
        throw new java.lang.IllegalArgumentException(
          "EnumValueDescriptor is not for this type.");
      }
      if (desc.getIndex() == -1) {
        return UNRECOGNIZED;
      }
      return VALUES[desc.getIndex()];
    }

    private final int value;

    private VhRateLimitsOptions(int value) {
      this.value = value;
    }

    // @@protoc_insertion_point(enum_scope:envoy.extensions.filters.http.ratelimit.v3.RateLimitPerRoute.VhRateLimitsOptions)
  }

  /**
   * <pre>
   * The override option determines how the filter handles the cases where there is an override config at a more specific level than this one (from least to most specific: virtual host, route, cluster weight).
   * [#not-implemented-hide:]
   * </pre>
   *
   * Protobuf enum {@code envoy.extensions.filters.http.ratelimit.v3.RateLimitPerRoute.OverrideOptions}
   */
  public enum OverrideOptions
      implements com.google.protobuf.ProtocolMessageEnum {
    /**
     * <pre>
     * Client-defined default, typically OVERRIDE_POLICY. If VhRateLimitsOptions is set, that will be used instead.
     * </pre>
     *
     * <code>DEFAULT = 0;</code>
     */
    DEFAULT(0),
    /**
     * <pre>
     * If there is an override config at a more specific level, use that instead of this one.
     * </pre>
     *
     * <code>OVERRIDE_POLICY = 1;</code>
     */
    OVERRIDE_POLICY(1),
    /**
     * <pre>
     * If there is an override config at a more specific level, use data from both.
     * </pre>
     *
     * <code>INCLUDE_POLICY = 2;</code>
     */
    INCLUDE_POLICY(2),
    /**
     * <pre>
     * If there is an override config at a more specific level, ignore it and use only this one.
     * </pre>
     *
     * <code>IGNORE_POLICY = 3;</code>
     */
    IGNORE_POLICY(3),
    UNRECOGNIZED(-1),
    ;

    /**
     * <pre>
     * Client-defined default, typically OVERRIDE_POLICY. If VhRateLimitsOptions is set, that will be used instead.
     * </pre>
     *
     * <code>DEFAULT = 0;</code>
     */
    public static final int DEFAULT_VALUE = 0;
    /**
     * <pre>
     * If there is an override config at a more specific level, use that instead of this one.
     * </pre>
     *
     * <code>OVERRIDE_POLICY = 1;</code>
     */
    public static final int OVERRIDE_POLICY_VALUE = 1;
    /**
     * <pre>
     * If there is an override config at a more specific level, use data from both.
     * </pre>
     *
     * <code>INCLUDE_POLICY = 2;</code>
     */
    public static final int INCLUDE_POLICY_VALUE = 2;
    /**
     * <pre>
     * If there is an override config at a more specific level, ignore it and use only this one.
     * </pre>
     *
     * <code>IGNORE_POLICY = 3;</code>
     */
    public static final int IGNORE_POLICY_VALUE = 3;


    public final int getNumber() {
      if (this == UNRECOGNIZED) {
        throw new java.lang.IllegalArgumentException(
            "Can't get the number of an unknown enum value.");
      }
      return value;
    }

    /**
     * @param value The numeric wire value of the corresponding enum entry.
     * @return The enum associated with the given numeric wire value.
     * @deprecated Use {@link #forNumber(int)} instead.
     */
    @java.lang.Deprecated
    public static OverrideOptions valueOf(int value) {
      return forNumber(value);
    }

    /**
     * @param value The numeric wire value of the corresponding enum entry.
     * @return The enum associated with the given numeric wire value.
     */
    public static OverrideOptions forNumber(int value) {
      switch (value) {
        case 0: return DEFAULT;
        case 1: return OVERRIDE_POLICY;
        case 2: return INCLUDE_POLICY;
        case 3: return IGNORE_POLICY;
        default: return null;
      }
    }

    public static com.google.protobuf.Internal.EnumLiteMap<OverrideOptions>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static final com.google.protobuf.Internal.EnumLiteMap<
        OverrideOptions> internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<OverrideOptions>() {
            public OverrideOptions findValueByNumber(int number) {
              return OverrideOptions.forNumber(number);
            }
          };

    public final com.google.protobuf.Descriptors.EnumValueDescriptor
        getValueDescriptor() {
      if (this == UNRECOGNIZED) {
        throw new java.lang.IllegalStateException(
            "Can't get the descriptor of an unrecognized enum value.");
      }
      return getDescriptor().getValues().get(ordinal());
    }
    public final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptorForType() {
      return getDescriptor();
    }
    public static final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptor() {
      return io.envoyproxy.envoy.extensions.filters.http.ratelimit.v3.RateLimitPerRoute.getDescriptor().getEnumTypes().get(1);
    }

    private static final OverrideOptions[] VALUES = values();

    public static OverrideOptions valueOf(
        com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
      if (desc.getType() != getDescriptor()) {
        throw new java.lang.IllegalArgumentException(
          "EnumValueDescriptor is not for this type.");
      }
      if (desc.getIndex() == -1) {
        return UNRECOGNIZED;
      }
      return VALUES[desc.getIndex()];
    }

    private final int value;

    private OverrideOptions(int value) {
      this.value = value;
    }

    // @@protoc_insertion_point(enum_scope:envoy.extensions.filters.http.ratelimit.v3.RateLimitPerRoute.OverrideOptions)
  }

  public static final int VH_RATE_LIMITS_FIELD_NUMBER = 1;
  private int vhRateLimits_ = 0;
  /**
   * <pre>
   * Specifies if the rate limit filter should include the virtual host rate limits.
   * [#next-major-version: unify with local ratelimit, should use common.ratelimit.v3.VhRateLimitsOptions instead.]
   * </pre>
   *
   * <code>.envoy.extensions.filters.http.ratelimit.v3.RateLimitPerRoute.VhRateLimitsOptions vh_rate_limits = 1 [(.validate.rules) = { ... }</code>
   * @return The enum numeric value on the wire for vhRateLimits.
   */
  @java.lang.Override public int getVhRateLimitsValue() {
    return vhRateLimits_;
  }
  /**
   * <pre>
   * Specifies if the rate limit filter should include the virtual host rate limits.
   * [#next-major-version: unify with local ratelimit, should use common.ratelimit.v3.VhRateLimitsOptions instead.]
   * </pre>
   *
   * <code>.envoy.extensions.filters.http.ratelimit.v3.RateLimitPerRoute.VhRateLimitsOptions vh_rate_limits = 1 [(.validate.rules) = { ... }</code>
   * @return The vhRateLimits.
   */
  @java.lang.Override public io.envoyproxy.envoy.extensions.filters.http.ratelimit.v3.RateLimitPerRoute.VhRateLimitsOptions getVhRateLimits() {
    io.envoyproxy.envoy.extensions.filters.http.ratelimit.v3.RateLimitPerRoute.VhRateLimitsOptions result = io.envoyproxy.envoy.extensions.filters.http.ratelimit.v3.RateLimitPerRoute.VhRateLimitsOptions.forNumber(vhRateLimits_);
    return result == null ? io.envoyproxy.envoy.extensions.filters.http.ratelimit.v3.RateLimitPerRoute.VhRateLimitsOptions.UNRECOGNIZED : result;
  }

  public static final int OVERRIDE_OPTION_FIELD_NUMBER = 2;
  private int overrideOption_ = 0;
  /**
   * <pre>
   * Specifies if the rate limit filter should include the lower levels (route level, virtual host level or cluster weight level) rate limits override options.
   * [#not-implemented-hide:]
   * </pre>
   *
   * <code>.envoy.extensions.filters.http.ratelimit.v3.RateLimitPerRoute.OverrideOptions override_option = 2 [(.validate.rules) = { ... }</code>
   * @return The enum numeric value on the wire for overrideOption.
   */
  @java.lang.Override public int getOverrideOptionValue() {
    return overrideOption_;
  }
  /**
   * <pre>
   * Specifies if the rate limit filter should include the lower levels (route level, virtual host level or cluster weight level) rate limits override options.
   * [#not-implemented-hide:]
   * </pre>
   *
   * <code>.envoy.extensions.filters.http.ratelimit.v3.RateLimitPerRoute.OverrideOptions override_option = 2 [(.validate.rules) = { ... }</code>
   * @return The overrideOption.
   */
  @java.lang.Override public io.envoyproxy.envoy.extensions.filters.http.ratelimit.v3.RateLimitPerRoute.OverrideOptions getOverrideOption() {
    io.envoyproxy.envoy.extensions.filters.http.ratelimit.v3.RateLimitPerRoute.OverrideOptions result = io.envoyproxy.envoy.extensions.filters.http.ratelimit.v3.RateLimitPerRoute.OverrideOptions.forNumber(overrideOption_);
    return result == null ? io.envoyproxy.envoy.extensions.filters.http.ratelimit.v3.RateLimitPerRoute.OverrideOptions.UNRECOGNIZED : result;
  }

  public static final int RATE_LIMITS_FIELD_NUMBER = 3;
  @SuppressWarnings("serial")
  private java.util.List<io.envoyproxy.envoy.extensions.filters.http.ratelimit.v3.RateLimitConfig> rateLimits_;
  /**
   * <pre>
   * Rate limit configuration. If not set, uses the
   * :ref:`VirtualHost.rate_limits&lt;envoy_v3_api_field_config.route.v3.VirtualHost.rate_limits&gt;` or
   * :ref:`RouteAction.rate_limits&lt;envoy_v3_api_field_config.route.v3.RouteAction.rate_limits&gt;` fields instead.
   * [#not-implemented-hide:]
   * </pre>
   *
   * <code>repeated .envoy.extensions.filters.http.ratelimit.v3.RateLimitConfig rate_limits = 3;</code>
   */
  @java.lang.Override
  public java.util.List<io.envoyproxy.envoy.extensions.filters.http.ratelimit.v3.RateLimitConfig> getRateLimitsList() {
    return rateLimits_;
  }
  /**
   * <pre>
   * Rate limit configuration. If not set, uses the
   * :ref:`VirtualHost.rate_limits&lt;envoy_v3_api_field_config.route.v3.VirtualHost.rate_limits&gt;` or
   * :ref:`RouteAction.rate_limits&lt;envoy_v3_api_field_config.route.v3.RouteAction.rate_limits&gt;` fields instead.
   * [#not-implemented-hide:]
   * </pre>
   *
   * <code>repeated .envoy.extensions.filters.http.ratelimit.v3.RateLimitConfig rate_limits = 3;</code>
   */
  @java.lang.Override
  public java.util.List<? extends io.envoyproxy.envoy.extensions.filters.http.ratelimit.v3.RateLimitConfigOrBuilder> 
      getRateLimitsOrBuilderList() {
    return rateLimits_;
  }
  /**
   * <pre>
   * Rate limit configuration. If not set, uses the
   * :ref:`VirtualHost.rate_limits&lt;envoy_v3_api_field_config.route.v3.VirtualHost.rate_limits&gt;` or
   * :ref:`RouteAction.rate_limits&lt;envoy_v3_api_field_config.route.v3.RouteAction.rate_limits&gt;` fields instead.
   * [#not-implemented-hide:]
   * </pre>
   *
   * <code>repeated .envoy.extensions.filters.http.ratelimit.v3.RateLimitConfig rate_limits = 3;</code>
   */
  @java.lang.Override
  public int getRateLimitsCount() {
    return rateLimits_.size();
  }
  /**
   * <pre>
   * Rate limit configuration. If not set, uses the
   * :ref:`VirtualHost.rate_limits&lt;envoy_v3_api_field_config.route.v3.VirtualHost.rate_limits&gt;` or
   * :ref:`RouteAction.rate_limits&lt;envoy_v3_api_field_config.route.v3.RouteAction.rate_limits&gt;` fields instead.
   * [#not-implemented-hide:]
   * </pre>
   *
   * <code>repeated .envoy.extensions.filters.http.ratelimit.v3.RateLimitConfig rate_limits = 3;</code>
   */
  @java.lang.Override
  public io.envoyproxy.envoy.extensions.filters.http.ratelimit.v3.RateLimitConfig getRateLimits(int index) {
    return rateLimits_.get(index);
  }
  /**
   * <pre>
   * Rate limit configuration. If not set, uses the
   * :ref:`VirtualHost.rate_limits&lt;envoy_v3_api_field_config.route.v3.VirtualHost.rate_limits&gt;` or
   * :ref:`RouteAction.rate_limits&lt;envoy_v3_api_field_config.route.v3.RouteAction.rate_limits&gt;` fields instead.
   * [#not-implemented-hide:]
   * </pre>
   *
   * <code>repeated .envoy.extensions.filters.http.ratelimit.v3.RateLimitConfig rate_limits = 3;</code>
   */
  @java.lang.Override
  public io.envoyproxy.envoy.extensions.filters.http.ratelimit.v3.RateLimitConfigOrBuilder getRateLimitsOrBuilder(
      int index) {
    return rateLimits_.get(index);
  }

  private byte memoizedIsInitialized = -1;
  @java.lang.Override
  public final boolean isInitialized() {
    byte isInitialized = memoizedIsInitialized;
    if (isInitialized == 1) return true;
    if (isInitialized == 0) return false;

    memoizedIsInitialized = 1;
    return true;
  }

  @java.lang.Override
  public void writeTo(com.google.protobuf.CodedOutputStream output)
                      throws java.io.IOException {
    if (vhRateLimits_ != io.envoyproxy.envoy.extensions.filters.http.ratelimit.v3.RateLimitPerRoute.VhRateLimitsOptions.OVERRIDE.getNumber()) {
      output.writeEnum(1, vhRateLimits_);
    }
    if (overrideOption_ != io.envoyproxy.envoy.extensions.filters.http.ratelimit.v3.RateLimitPerRoute.OverrideOptions.DEFAULT.getNumber()) {
      output.writeEnum(2, overrideOption_);
    }
    for (int i = 0; i < rateLimits_.size(); i++) {
      output.writeMessage(3, rateLimits_.get(i));
    }
    getUnknownFields().writeTo(output);
  }

  @java.lang.Override
  public int getSerializedSize() {
    int size = memoizedSize;
    if (size != -1) return size;

    size = 0;
    if (vhRateLimits_ != io.envoyproxy.envoy.extensions.filters.http.ratelimit.v3.RateLimitPerRoute.VhRateLimitsOptions.OVERRIDE.getNumber()) {
      size += com.google.protobuf.CodedOutputStream
        .computeEnumSize(1, vhRateLimits_);
    }
    if (overrideOption_ != io.envoyproxy.envoy.extensions.filters.http.ratelimit.v3.RateLimitPerRoute.OverrideOptions.DEFAULT.getNumber()) {
      size += com.google.protobuf.CodedOutputStream
        .computeEnumSize(2, overrideOption_);
    }
    for (int i = 0; i < rateLimits_.size(); i++) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(3, rateLimits_.get(i));
    }
    size += getUnknownFields().getSerializedSize();
    memoizedSize = size;
    return size;
  }

  @java.lang.Override
  public boolean equals(final java.lang.Object obj) {
    if (obj == this) {
     return true;
    }
    if (!(obj instanceof io.envoyproxy.envoy.extensions.filters.http.ratelimit.v3.RateLimitPerRoute)) {
      return super.equals(obj);
    }
    io.envoyproxy.envoy.extensions.filters.http.ratelimit.v3.RateLimitPerRoute other = (io.envoyproxy.envoy.extensions.filters.http.ratelimit.v3.RateLimitPerRoute) obj;

    if (vhRateLimits_ != other.vhRateLimits_) return false;
    if (overrideOption_ != other.overrideOption_) return false;
    if (!getRateLimitsList()
        .equals(other.getRateLimitsList())) return false;
    if (!getUnknownFields().equals(other.getUnknownFields())) return false;
    return true;
  }

  @java.lang.Override
  public int hashCode() {
    if (memoizedHashCode != 0) {
      return memoizedHashCode;
    }
    int hash = 41;
    hash = (19 * hash) + getDescriptor().hashCode();
    hash = (37 * hash) + VH_RATE_LIMITS_FIELD_NUMBER;
    hash = (53 * hash) + vhRateLimits_;
    hash = (37 * hash) + OVERRIDE_OPTION_FIELD_NUMBER;
    hash = (53 * hash) + overrideOption_;
    if (getRateLimitsCount() > 0) {
      hash = (37 * hash) + RATE_LIMITS_FIELD_NUMBER;
      hash = (53 * hash) + getRateLimitsList().hashCode();
    }
    hash = (29 * hash) + getUnknownFields().hashCode();
    memoizedHashCode = hash;
    return hash;
  }

  public static io.envoyproxy.envoy.extensions.filters.http.ratelimit.v3.RateLimitPerRoute parseFrom(
      java.nio.ByteBuffer data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static io.envoyproxy.envoy.extensions.filters.http.ratelimit.v3.RateLimitPerRoute parseFrom(
      java.nio.ByteBuffer data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static io.envoyproxy.envoy.extensions.filters.http.ratelimit.v3.RateLimitPerRoute parseFrom(
      com.google.protobuf.ByteString data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static io.envoyproxy.envoy.extensions.filters.http.ratelimit.v3.RateLimitPerRoute parseFrom(
      com.google.protobuf.ByteString data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static io.envoyproxy.envoy.extensions.filters.http.ratelimit.v3.RateLimitPerRoute parseFrom(byte[] data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static io.envoyproxy.envoy.extensions.filters.http.ratelimit.v3.RateLimitPerRoute parseFrom(
      byte[] data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static io.envoyproxy.envoy.extensions.filters.http.ratelimit.v3.RateLimitPerRoute parseFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input);
  }
  public static io.envoyproxy.envoy.extensions.filters.http.ratelimit.v3.RateLimitPerRoute parseFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input, extensionRegistry);
  }
  public static io.envoyproxy.envoy.extensions.filters.http.ratelimit.v3.RateLimitPerRoute parseDelimitedFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseDelimitedWithIOException(PARSER, input);
  }
  public static io.envoyproxy.envoy.extensions.filters.http.ratelimit.v3.RateLimitPerRoute parseDelimitedFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
  }
  public static io.envoyproxy.envoy.extensions.filters.http.ratelimit.v3.RateLimitPerRoute parseFrom(
      com.google.protobuf.CodedInputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input);
  }
  public static io.envoyproxy.envoy.extensions.filters.http.ratelimit.v3.RateLimitPerRoute parseFrom(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input, extensionRegistry);
  }

  @java.lang.Override
  public Builder newBuilderForType() { return newBuilder(); }
  public static Builder newBuilder() {
    return DEFAULT_INSTANCE.toBuilder();
  }
  public static Builder newBuilder(io.envoyproxy.envoy.extensions.filters.http.ratelimit.v3.RateLimitPerRoute prototype) {
    return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
  }
  @java.lang.Override
  public Builder toBuilder() {
    return this == DEFAULT_INSTANCE
        ? new Builder() : new Builder().mergeFrom(this);
  }

  @java.lang.Override
  protected Builder newBuilderForType(
      com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
    Builder builder = new Builder(parent);
    return builder;
  }
  /**
   * Protobuf type {@code envoy.extensions.filters.http.ratelimit.v3.RateLimitPerRoute}
   */
  public static final class Builder extends
      com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
      // @@protoc_insertion_point(builder_implements:envoy.extensions.filters.http.ratelimit.v3.RateLimitPerRoute)
      io.envoyproxy.envoy.extensions.filters.http.ratelimit.v3.RateLimitPerRouteOrBuilder {
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return io.envoyproxy.envoy.extensions.filters.http.ratelimit.v3.RateLimitProto.internal_static_envoy_extensions_filters_http_ratelimit_v3_RateLimitPerRoute_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return io.envoyproxy.envoy.extensions.filters.http.ratelimit.v3.RateLimitProto.internal_static_envoy_extensions_filters_http_ratelimit_v3_RateLimitPerRoute_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              io.envoyproxy.envoy.extensions.filters.http.ratelimit.v3.RateLimitPerRoute.class, io.envoyproxy.envoy.extensions.filters.http.ratelimit.v3.RateLimitPerRoute.Builder.class);
    }

    // Construct using io.envoyproxy.envoy.extensions.filters.http.ratelimit.v3.RateLimitPerRoute.newBuilder()
    private Builder() {

    }

    private Builder(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      super(parent);

    }
    @java.lang.Override
    public Builder clear() {
      super.clear();
      bitField0_ = 0;
      vhRateLimits_ = 0;
      overrideOption_ = 0;
      if (rateLimitsBuilder_ == null) {
        rateLimits_ = java.util.Collections.emptyList();
      } else {
        rateLimits_ = null;
        rateLimitsBuilder_.clear();
      }
      bitField0_ = (bitField0_ & ~0x00000004);
      return this;
    }

    @java.lang.Override
    public com.google.protobuf.Descriptors.Descriptor
        getDescriptorForType() {
      return io.envoyproxy.envoy.extensions.filters.http.ratelimit.v3.RateLimitProto.internal_static_envoy_extensions_filters_http_ratelimit_v3_RateLimitPerRoute_descriptor;
    }

    @java.lang.Override
    public io.envoyproxy.envoy.extensions.filters.http.ratelimit.v3.RateLimitPerRoute getDefaultInstanceForType() {
      return io.envoyproxy.envoy.extensions.filters.http.ratelimit.v3.RateLimitPerRoute.getDefaultInstance();
    }

    @java.lang.Override
    public io.envoyproxy.envoy.extensions.filters.http.ratelimit.v3.RateLimitPerRoute build() {
      io.envoyproxy.envoy.extensions.filters.http.ratelimit.v3.RateLimitPerRoute result = buildPartial();
      if (!result.isInitialized()) {
        throw newUninitializedMessageException(result);
      }
      return result;
    }

    @java.lang.Override
    public io.envoyproxy.envoy.extensions.filters.http.ratelimit.v3.RateLimitPerRoute buildPartial() {
      io.envoyproxy.envoy.extensions.filters.http.ratelimit.v3.RateLimitPerRoute result = new io.envoyproxy.envoy.extensions.filters.http.ratelimit.v3.RateLimitPerRoute(this);
      buildPartialRepeatedFields(result);
      if (bitField0_ != 0) { buildPartial0(result); }
      onBuilt();
      return result;
    }

    private void buildPartialRepeatedFields(io.envoyproxy.envoy.extensions.filters.http.ratelimit.v3.RateLimitPerRoute result) {
      if (rateLimitsBuilder_ == null) {
        if (((bitField0_ & 0x00000004) != 0)) {
          rateLimits_ = java.util.Collections.unmodifiableList(rateLimits_);
          bitField0_ = (bitField0_ & ~0x00000004);
        }
        result.rateLimits_ = rateLimits_;
      } else {
        result.rateLimits_ = rateLimitsBuilder_.build();
      }
    }

    private void buildPartial0(io.envoyproxy.envoy.extensions.filters.http.ratelimit.v3.RateLimitPerRoute result) {
      int from_bitField0_ = bitField0_;
      if (((from_bitField0_ & 0x00000001) != 0)) {
        result.vhRateLimits_ = vhRateLimits_;
      }
      if (((from_bitField0_ & 0x00000002) != 0)) {
        result.overrideOption_ = overrideOption_;
      }
    }

    @java.lang.Override
    public Builder clone() {
      return super.clone();
    }
    @java.lang.Override
    public Builder setField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        java.lang.Object value) {
      return super.setField(field, value);
    }
    @java.lang.Override
    public Builder clearField(
        com.google.protobuf.Descriptors.FieldDescriptor field) {
      return super.clearField(field);
    }
    @java.lang.Override
    public Builder clearOneof(
        com.google.protobuf.Descriptors.OneofDescriptor oneof) {
      return super.clearOneof(oneof);
    }
    @java.lang.Override
    public Builder setRepeatedField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        int index, java.lang.Object value) {
      return super.setRepeatedField(field, index, value);
    }
    @java.lang.Override
    public Builder addRepeatedField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        java.lang.Object value) {
      return super.addRepeatedField(field, value);
    }
    @java.lang.Override
    public Builder mergeFrom(com.google.protobuf.Message other) {
      if (other instanceof io.envoyproxy.envoy.extensions.filters.http.ratelimit.v3.RateLimitPerRoute) {
        return mergeFrom((io.envoyproxy.envoy.extensions.filters.http.ratelimit.v3.RateLimitPerRoute)other);
      } else {
        super.mergeFrom(other);
        return this;
      }
    }

    public Builder mergeFrom(io.envoyproxy.envoy.extensions.filters.http.ratelimit.v3.RateLimitPerRoute other) {
      if (other == io.envoyproxy.envoy.extensions.filters.http.ratelimit.v3.RateLimitPerRoute.getDefaultInstance()) return this;
      if (other.vhRateLimits_ != 0) {
        setVhRateLimitsValue(other.getVhRateLimitsValue());
      }
      if (other.overrideOption_ != 0) {
        setOverrideOptionValue(other.getOverrideOptionValue());
      }
      if (rateLimitsBuilder_ == null) {
        if (!other.rateLimits_.isEmpty()) {
          if (rateLimits_.isEmpty()) {
            rateLimits_ = other.rateLimits_;
            bitField0_ = (bitField0_ & ~0x00000004);
          } else {
            ensureRateLimitsIsMutable();
            rateLimits_.addAll(other.rateLimits_);
          }
          onChanged();
        }
      } else {
        if (!other.rateLimits_.isEmpty()) {
          if (rateLimitsBuilder_.isEmpty()) {
            rateLimitsBuilder_.dispose();
            rateLimitsBuilder_ = null;
            rateLimits_ = other.rateLimits_;
            bitField0_ = (bitField0_ & ~0x00000004);
            rateLimitsBuilder_ = 
              com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?
                 getRateLimitsFieldBuilder() : null;
          } else {
            rateLimitsBuilder_.addAllMessages(other.rateLimits_);
          }
        }
      }
      this.mergeUnknownFields(other.getUnknownFields());
      onChanged();
      return this;
    }

    @java.lang.Override
    public final boolean isInitialized() {
      return true;
    }

    @java.lang.Override
    public Builder mergeFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 8: {
              vhRateLimits_ = input.readEnum();
              bitField0_ |= 0x00000001;
              break;
            } // case 8
            case 16: {
              overrideOption_ = input.readEnum();
              bitField0_ |= 0x00000002;
              break;
            } // case 16
            case 26: {
              io.envoyproxy.envoy.extensions.filters.http.ratelimit.v3.RateLimitConfig m =
                  input.readMessage(
                      io.envoyproxy.envoy.extensions.filters.http.ratelimit.v3.RateLimitConfig.parser(),
                      extensionRegistry);
              if (rateLimitsBuilder_ == null) {
                ensureRateLimitsIsMutable();
                rateLimits_.add(m);
              } else {
                rateLimitsBuilder_.addMessage(m);
              }
              break;
            } // case 26
            default: {
              if (!super.parseUnknownField(input, extensionRegistry, tag)) {
                done = true; // was an endgroup tag
              }
              break;
            } // default:
          } // switch (tag)
        } // while (!done)
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.unwrapIOException();
      } finally {
        onChanged();
      } // finally
      return this;
    }
    private int bitField0_;

    private int vhRateLimits_ = 0;
    /**
     * <pre>
     * Specifies if the rate limit filter should include the virtual host rate limits.
     * [#next-major-version: unify with local ratelimit, should use common.ratelimit.v3.VhRateLimitsOptions instead.]
     * </pre>
     *
     * <code>.envoy.extensions.filters.http.ratelimit.v3.RateLimitPerRoute.VhRateLimitsOptions vh_rate_limits = 1 [(.validate.rules) = { ... }</code>
     * @return The enum numeric value on the wire for vhRateLimits.
     */
    @java.lang.Override public int getVhRateLimitsValue() {
      return vhRateLimits_;
    }
    /**
     * <pre>
     * Specifies if the rate limit filter should include the virtual host rate limits.
     * [#next-major-version: unify with local ratelimit, should use common.ratelimit.v3.VhRateLimitsOptions instead.]
     * </pre>
     *
     * <code>.envoy.extensions.filters.http.ratelimit.v3.RateLimitPerRoute.VhRateLimitsOptions vh_rate_limits = 1 [(.validate.rules) = { ... }</code>
     * @param value The enum numeric value on the wire for vhRateLimits to set.
     * @return This builder for chaining.
     */
    public Builder setVhRateLimitsValue(int value) {
      vhRateLimits_ = value;
      bitField0_ |= 0x00000001;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * Specifies if the rate limit filter should include the virtual host rate limits.
     * [#next-major-version: unify with local ratelimit, should use common.ratelimit.v3.VhRateLimitsOptions instead.]
     * </pre>
     *
     * <code>.envoy.extensions.filters.http.ratelimit.v3.RateLimitPerRoute.VhRateLimitsOptions vh_rate_limits = 1 [(.validate.rules) = { ... }</code>
     * @return The vhRateLimits.
     */
    @java.lang.Override
    public io.envoyproxy.envoy.extensions.filters.http.ratelimit.v3.RateLimitPerRoute.VhRateLimitsOptions getVhRateLimits() {
      io.envoyproxy.envoy.extensions.filters.http.ratelimit.v3.RateLimitPerRoute.VhRateLimitsOptions result = io.envoyproxy.envoy.extensions.filters.http.ratelimit.v3.RateLimitPerRoute.VhRateLimitsOptions.forNumber(vhRateLimits_);
      return result == null ? io.envoyproxy.envoy.extensions.filters.http.ratelimit.v3.RateLimitPerRoute.VhRateLimitsOptions.UNRECOGNIZED : result;
    }
    /**
     * <pre>
     * Specifies if the rate limit filter should include the virtual host rate limits.
     * [#next-major-version: unify with local ratelimit, should use common.ratelimit.v3.VhRateLimitsOptions instead.]
     * </pre>
     *
     * <code>.envoy.extensions.filters.http.ratelimit.v3.RateLimitPerRoute.VhRateLimitsOptions vh_rate_limits = 1 [(.validate.rules) = { ... }</code>
     * @param value The vhRateLimits to set.
     * @return This builder for chaining.
     */
    public Builder setVhRateLimits(io.envoyproxy.envoy.extensions.filters.http.ratelimit.v3.RateLimitPerRoute.VhRateLimitsOptions value) {
      if (value == null) {
        throw new NullPointerException();
      }
      bitField0_ |= 0x00000001;
      vhRateLimits_ = value.getNumber();
      onChanged();
      return this;
    }
    /**
     * <pre>
     * Specifies if the rate limit filter should include the virtual host rate limits.
     * [#next-major-version: unify with local ratelimit, should use common.ratelimit.v3.VhRateLimitsOptions instead.]
     * </pre>
     *
     * <code>.envoy.extensions.filters.http.ratelimit.v3.RateLimitPerRoute.VhRateLimitsOptions vh_rate_limits = 1 [(.validate.rules) = { ... }</code>
     * @return This builder for chaining.
     */
    public Builder clearVhRateLimits() {
      bitField0_ = (bitField0_ & ~0x00000001);
      vhRateLimits_ = 0;
      onChanged();
      return this;
    }

    private int overrideOption_ = 0;
    /**
     * <pre>
     * Specifies if the rate limit filter should include the lower levels (route level, virtual host level or cluster weight level) rate limits override options.
     * [#not-implemented-hide:]
     * </pre>
     *
     * <code>.envoy.extensions.filters.http.ratelimit.v3.RateLimitPerRoute.OverrideOptions override_option = 2 [(.validate.rules) = { ... }</code>
     * @return The enum numeric value on the wire for overrideOption.
     */
    @java.lang.Override public int getOverrideOptionValue() {
      return overrideOption_;
    }
    /**
     * <pre>
     * Specifies if the rate limit filter should include the lower levels (route level, virtual host level or cluster weight level) rate limits override options.
     * [#not-implemented-hide:]
     * </pre>
     *
     * <code>.envoy.extensions.filters.http.ratelimit.v3.RateLimitPerRoute.OverrideOptions override_option = 2 [(.validate.rules) = { ... }</code>
     * @param value The enum numeric value on the wire for overrideOption to set.
     * @return This builder for chaining.
     */
    public Builder setOverrideOptionValue(int value) {
      overrideOption_ = value;
      bitField0_ |= 0x00000002;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * Specifies if the rate limit filter should include the lower levels (route level, virtual host level or cluster weight level) rate limits override options.
     * [#not-implemented-hide:]
     * </pre>
     *
     * <code>.envoy.extensions.filters.http.ratelimit.v3.RateLimitPerRoute.OverrideOptions override_option = 2 [(.validate.rules) = { ... }</code>
     * @return The overrideOption.
     */
    @java.lang.Override
    public io.envoyproxy.envoy.extensions.filters.http.ratelimit.v3.RateLimitPerRoute.OverrideOptions getOverrideOption() {
      io.envoyproxy.envoy.extensions.filters.http.ratelimit.v3.RateLimitPerRoute.OverrideOptions result = io.envoyproxy.envoy.extensions.filters.http.ratelimit.v3.RateLimitPerRoute.OverrideOptions.forNumber(overrideOption_);
      return result == null ? io.envoyproxy.envoy.extensions.filters.http.ratelimit.v3.RateLimitPerRoute.OverrideOptions.UNRECOGNIZED : result;
    }
    /**
     * <pre>
     * Specifies if the rate limit filter should include the lower levels (route level, virtual host level or cluster weight level) rate limits override options.
     * [#not-implemented-hide:]
     * </pre>
     *
     * <code>.envoy.extensions.filters.http.ratelimit.v3.RateLimitPerRoute.OverrideOptions override_option = 2 [(.validate.rules) = { ... }</code>
     * @param value The overrideOption to set.
     * @return This builder for chaining.
     */
    public Builder setOverrideOption(io.envoyproxy.envoy.extensions.filters.http.ratelimit.v3.RateLimitPerRoute.OverrideOptions value) {
      if (value == null) {
        throw new NullPointerException();
      }
      bitField0_ |= 0x00000002;
      overrideOption_ = value.getNumber();
      onChanged();
      return this;
    }
    /**
     * <pre>
     * Specifies if the rate limit filter should include the lower levels (route level, virtual host level or cluster weight level) rate limits override options.
     * [#not-implemented-hide:]
     * </pre>
     *
     * <code>.envoy.extensions.filters.http.ratelimit.v3.RateLimitPerRoute.OverrideOptions override_option = 2 [(.validate.rules) = { ... }</code>
     * @return This builder for chaining.
     */
    public Builder clearOverrideOption() {
      bitField0_ = (bitField0_ & ~0x00000002);
      overrideOption_ = 0;
      onChanged();
      return this;
    }

    private java.util.List<io.envoyproxy.envoy.extensions.filters.http.ratelimit.v3.RateLimitConfig> rateLimits_ =
      java.util.Collections.emptyList();
    private void ensureRateLimitsIsMutable() {
      if (!((bitField0_ & 0x00000004) != 0)) {
        rateLimits_ = new java.util.ArrayList<io.envoyproxy.envoy.extensions.filters.http.ratelimit.v3.RateLimitConfig>(rateLimits_);
        bitField0_ |= 0x00000004;
       }
    }

    private com.google.protobuf.RepeatedFieldBuilderV3<
        io.envoyproxy.envoy.extensions.filters.http.ratelimit.v3.RateLimitConfig, io.envoyproxy.envoy.extensions.filters.http.ratelimit.v3.RateLimitConfig.Builder, io.envoyproxy.envoy.extensions.filters.http.ratelimit.v3.RateLimitConfigOrBuilder> rateLimitsBuilder_;

    /**
     * <pre>
     * Rate limit configuration. If not set, uses the
     * :ref:`VirtualHost.rate_limits&lt;envoy_v3_api_field_config.route.v3.VirtualHost.rate_limits&gt;` or
     * :ref:`RouteAction.rate_limits&lt;envoy_v3_api_field_config.route.v3.RouteAction.rate_limits&gt;` fields instead.
     * [#not-implemented-hide:]
     * </pre>
     *
     * <code>repeated .envoy.extensions.filters.http.ratelimit.v3.RateLimitConfig rate_limits = 3;</code>
     */
    public java.util.List<io.envoyproxy.envoy.extensions.filters.http.ratelimit.v3.RateLimitConfig> getRateLimitsList() {
      if (rateLimitsBuilder_ == null) {
        return java.util.Collections.unmodifiableList(rateLimits_);
      } else {
        return rateLimitsBuilder_.getMessageList();
      }
    }
    /**
     * <pre>
     * Rate limit configuration. If not set, uses the
     * :ref:`VirtualHost.rate_limits&lt;envoy_v3_api_field_config.route.v3.VirtualHost.rate_limits&gt;` or
     * :ref:`RouteAction.rate_limits&lt;envoy_v3_api_field_config.route.v3.RouteAction.rate_limits&gt;` fields instead.
     * [#not-implemented-hide:]
     * </pre>
     *
     * <code>repeated .envoy.extensions.filters.http.ratelimit.v3.RateLimitConfig rate_limits = 3;</code>
     */
    public int getRateLimitsCount() {
      if (rateLimitsBuilder_ == null) {
        return rateLimits_.size();
      } else {
        return rateLimitsBuilder_.getCount();
      }
    }
    /**
     * <pre>
     * Rate limit configuration. If not set, uses the
     * :ref:`VirtualHost.rate_limits&lt;envoy_v3_api_field_config.route.v3.VirtualHost.rate_limits&gt;` or
     * :ref:`RouteAction.rate_limits&lt;envoy_v3_api_field_config.route.v3.RouteAction.rate_limits&gt;` fields instead.
     * [#not-implemented-hide:]
     * </pre>
     *
     * <code>repeated .envoy.extensions.filters.http.ratelimit.v3.RateLimitConfig rate_limits = 3;</code>
     */
    public io.envoyproxy.envoy.extensions.filters.http.ratelimit.v3.RateLimitConfig getRateLimits(int index) {
      if (rateLimitsBuilder_ == null) {
        return rateLimits_.get(index);
      } else {
        return rateLimitsBuilder_.getMessage(index);
      }
    }
    /**
     * <pre>
     * Rate limit configuration. If not set, uses the
     * :ref:`VirtualHost.rate_limits&lt;envoy_v3_api_field_config.route.v3.VirtualHost.rate_limits&gt;` or
     * :ref:`RouteAction.rate_limits&lt;envoy_v3_api_field_config.route.v3.RouteAction.rate_limits&gt;` fields instead.
     * [#not-implemented-hide:]
     * </pre>
     *
     * <code>repeated .envoy.extensions.filters.http.ratelimit.v3.RateLimitConfig rate_limits = 3;</code>
     */
    public Builder setRateLimits(
        int index, io.envoyproxy.envoy.extensions.filters.http.ratelimit.v3.RateLimitConfig value) {
      if (rateLimitsBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureRateLimitsIsMutable();
        rateLimits_.set(index, value);
        onChanged();
      } else {
        rateLimitsBuilder_.setMessage(index, value);
      }
      return this;
    }
    /**
     * <pre>
     * Rate limit configuration. If not set, uses the
     * :ref:`VirtualHost.rate_limits&lt;envoy_v3_api_field_config.route.v3.VirtualHost.rate_limits&gt;` or
     * :ref:`RouteAction.rate_limits&lt;envoy_v3_api_field_config.route.v3.RouteAction.rate_limits&gt;` fields instead.
     * [#not-implemented-hide:]
     * </pre>
     *
     * <code>repeated .envoy.extensions.filters.http.ratelimit.v3.RateLimitConfig rate_limits = 3;</code>
     */
    public Builder setRateLimits(
        int index, io.envoyproxy.envoy.extensions.filters.http.ratelimit.v3.RateLimitConfig.Builder builderForValue) {
      if (rateLimitsBuilder_ == null) {
        ensureRateLimitsIsMutable();
        rateLimits_.set(index, builderForValue.build());
        onChanged();
      } else {
        rateLimitsBuilder_.setMessage(index, builderForValue.build());
      }
      return this;
    }
    /**
     * <pre>
     * Rate limit configuration. If not set, uses the
     * :ref:`VirtualHost.rate_limits&lt;envoy_v3_api_field_config.route.v3.VirtualHost.rate_limits&gt;` or
     * :ref:`RouteAction.rate_limits&lt;envoy_v3_api_field_config.route.v3.RouteAction.rate_limits&gt;` fields instead.
     * [#not-implemented-hide:]
     * </pre>
     *
     * <code>repeated .envoy.extensions.filters.http.ratelimit.v3.RateLimitConfig rate_limits = 3;</code>
     */
    public Builder addRateLimits(io.envoyproxy.envoy.extensions.filters.http.ratelimit.v3.RateLimitConfig value) {
      if (rateLimitsBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureRateLimitsIsMutable();
        rateLimits_.add(value);
        onChanged();
      } else {
        rateLimitsBuilder_.addMessage(value);
      }
      return this;
    }
    /**
     * <pre>
     * Rate limit configuration. If not set, uses the
     * :ref:`VirtualHost.rate_limits&lt;envoy_v3_api_field_config.route.v3.VirtualHost.rate_limits&gt;` or
     * :ref:`RouteAction.rate_limits&lt;envoy_v3_api_field_config.route.v3.RouteAction.rate_limits&gt;` fields instead.
     * [#not-implemented-hide:]
     * </pre>
     *
     * <code>repeated .envoy.extensions.filters.http.ratelimit.v3.RateLimitConfig rate_limits = 3;</code>
     */
    public Builder addRateLimits(
        int index, io.envoyproxy.envoy.extensions.filters.http.ratelimit.v3.RateLimitConfig value) {
      if (rateLimitsBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureRateLimitsIsMutable();
        rateLimits_.add(index, value);
        onChanged();
      } else {
        rateLimitsBuilder_.addMessage(index, value);
      }
      return this;
    }
    /**
     * <pre>
     * Rate limit configuration. If not set, uses the
     * :ref:`VirtualHost.rate_limits&lt;envoy_v3_api_field_config.route.v3.VirtualHost.rate_limits&gt;` or
     * :ref:`RouteAction.rate_limits&lt;envoy_v3_api_field_config.route.v3.RouteAction.rate_limits&gt;` fields instead.
     * [#not-implemented-hide:]
     * </pre>
     *
     * <code>repeated .envoy.extensions.filters.http.ratelimit.v3.RateLimitConfig rate_limits = 3;</code>
     */
    public Builder addRateLimits(
        io.envoyproxy.envoy.extensions.filters.http.ratelimit.v3.RateLimitConfig.Builder builderForValue) {
      if (rateLimitsBuilder_ == null) {
        ensureRateLimitsIsMutable();
        rateLimits_.add(builderForValue.build());
        onChanged();
      } else {
        rateLimitsBuilder_.addMessage(builderForValue.build());
      }
      return this;
    }
    /**
     * <pre>
     * Rate limit configuration. If not set, uses the
     * :ref:`VirtualHost.rate_limits&lt;envoy_v3_api_field_config.route.v3.VirtualHost.rate_limits&gt;` or
     * :ref:`RouteAction.rate_limits&lt;envoy_v3_api_field_config.route.v3.RouteAction.rate_limits&gt;` fields instead.
     * [#not-implemented-hide:]
     * </pre>
     *
     * <code>repeated .envoy.extensions.filters.http.ratelimit.v3.RateLimitConfig rate_limits = 3;</code>
     */
    public Builder addRateLimits(
        int index, io.envoyproxy.envoy.extensions.filters.http.ratelimit.v3.RateLimitConfig.Builder builderForValue) {
      if (rateLimitsBuilder_ == null) {
        ensureRateLimitsIsMutable();
        rateLimits_.add(index, builderForValue.build());
        onChanged();
      } else {
        rateLimitsBuilder_.addMessage(index, builderForValue.build());
      }
      return this;
    }
    /**
     * <pre>
     * Rate limit configuration. If not set, uses the
     * :ref:`VirtualHost.rate_limits&lt;envoy_v3_api_field_config.route.v3.VirtualHost.rate_limits&gt;` or
     * :ref:`RouteAction.rate_limits&lt;envoy_v3_api_field_config.route.v3.RouteAction.rate_limits&gt;` fields instead.
     * [#not-implemented-hide:]
     * </pre>
     *
     * <code>repeated .envoy.extensions.filters.http.ratelimit.v3.RateLimitConfig rate_limits = 3;</code>
     */
    public Builder addAllRateLimits(
        java.lang.Iterable<? extends io.envoyproxy.envoy.extensions.filters.http.ratelimit.v3.RateLimitConfig> values) {
      if (rateLimitsBuilder_ == null) {
        ensureRateLimitsIsMutable();
        com.google.protobuf.AbstractMessageLite.Builder.addAll(
            values, rateLimits_);
        onChanged();
      } else {
        rateLimitsBuilder_.addAllMessages(values);
      }
      return this;
    }
    /**
     * <pre>
     * Rate limit configuration. If not set, uses the
     * :ref:`VirtualHost.rate_limits&lt;envoy_v3_api_field_config.route.v3.VirtualHost.rate_limits&gt;` or
     * :ref:`RouteAction.rate_limits&lt;envoy_v3_api_field_config.route.v3.RouteAction.rate_limits&gt;` fields instead.
     * [#not-implemented-hide:]
     * </pre>
     *
     * <code>repeated .envoy.extensions.filters.http.ratelimit.v3.RateLimitConfig rate_limits = 3;</code>
     */
    public Builder clearRateLimits() {
      if (rateLimitsBuilder_ == null) {
        rateLimits_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000004);
        onChanged();
      } else {
        rateLimitsBuilder_.clear();
      }
      return this;
    }
    /**
     * <pre>
     * Rate limit configuration. If not set, uses the
     * :ref:`VirtualHost.rate_limits&lt;envoy_v3_api_field_config.route.v3.VirtualHost.rate_limits&gt;` or
     * :ref:`RouteAction.rate_limits&lt;envoy_v3_api_field_config.route.v3.RouteAction.rate_limits&gt;` fields instead.
     * [#not-implemented-hide:]
     * </pre>
     *
     * <code>repeated .envoy.extensions.filters.http.ratelimit.v3.RateLimitConfig rate_limits = 3;</code>
     */
    public Builder removeRateLimits(int index) {
      if (rateLimitsBuilder_ == null) {
        ensureRateLimitsIsMutable();
        rateLimits_.remove(index);
        onChanged();
      } else {
        rateLimitsBuilder_.remove(index);
      }
      return this;
    }
    /**
     * <pre>
     * Rate limit configuration. If not set, uses the
     * :ref:`VirtualHost.rate_limits&lt;envoy_v3_api_field_config.route.v3.VirtualHost.rate_limits&gt;` or
     * :ref:`RouteAction.rate_limits&lt;envoy_v3_api_field_config.route.v3.RouteAction.rate_limits&gt;` fields instead.
     * [#not-implemented-hide:]
     * </pre>
     *
     * <code>repeated .envoy.extensions.filters.http.ratelimit.v3.RateLimitConfig rate_limits = 3;</code>
     */
    public io.envoyproxy.envoy.extensions.filters.http.ratelimit.v3.RateLimitConfig.Builder getRateLimitsBuilder(
        int index) {
      return getRateLimitsFieldBuilder().getBuilder(index);
    }
    /**
     * <pre>
     * Rate limit configuration. If not set, uses the
     * :ref:`VirtualHost.rate_limits&lt;envoy_v3_api_field_config.route.v3.VirtualHost.rate_limits&gt;` or
     * :ref:`RouteAction.rate_limits&lt;envoy_v3_api_field_config.route.v3.RouteAction.rate_limits&gt;` fields instead.
     * [#not-implemented-hide:]
     * </pre>
     *
     * <code>repeated .envoy.extensions.filters.http.ratelimit.v3.RateLimitConfig rate_limits = 3;</code>
     */
    public io.envoyproxy.envoy.extensions.filters.http.ratelimit.v3.RateLimitConfigOrBuilder getRateLimitsOrBuilder(
        int index) {
      if (rateLimitsBuilder_ == null) {
        return rateLimits_.get(index);  } else {
        return rateLimitsBuilder_.getMessageOrBuilder(index);
      }
    }
    /**
     * <pre>
     * Rate limit configuration. If not set, uses the
     * :ref:`VirtualHost.rate_limits&lt;envoy_v3_api_field_config.route.v3.VirtualHost.rate_limits&gt;` or
     * :ref:`RouteAction.rate_limits&lt;envoy_v3_api_field_config.route.v3.RouteAction.rate_limits&gt;` fields instead.
     * [#not-implemented-hide:]
     * </pre>
     *
     * <code>repeated .envoy.extensions.filters.http.ratelimit.v3.RateLimitConfig rate_limits = 3;</code>
     */
    public java.util.List<? extends io.envoyproxy.envoy.extensions.filters.http.ratelimit.v3.RateLimitConfigOrBuilder> 
         getRateLimitsOrBuilderList() {
      if (rateLimitsBuilder_ != null) {
        return rateLimitsBuilder_.getMessageOrBuilderList();
      } else {
        return java.util.Collections.unmodifiableList(rateLimits_);
      }
    }
    /**
     * <pre>
     * Rate limit configuration. If not set, uses the
     * :ref:`VirtualHost.rate_limits&lt;envoy_v3_api_field_config.route.v3.VirtualHost.rate_limits&gt;` or
     * :ref:`RouteAction.rate_limits&lt;envoy_v3_api_field_config.route.v3.RouteAction.rate_limits&gt;` fields instead.
     * [#not-implemented-hide:]
     * </pre>
     *
     * <code>repeated .envoy.extensions.filters.http.ratelimit.v3.RateLimitConfig rate_limits = 3;</code>
     */
    public io.envoyproxy.envoy.extensions.filters.http.ratelimit.v3.RateLimitConfig.Builder addRateLimitsBuilder() {
      return getRateLimitsFieldBuilder().addBuilder(
          io.envoyproxy.envoy.extensions.filters.http.ratelimit.v3.RateLimitConfig.getDefaultInstance());
    }
    /**
     * <pre>
     * Rate limit configuration. If not set, uses the
     * :ref:`VirtualHost.rate_limits&lt;envoy_v3_api_field_config.route.v3.VirtualHost.rate_limits&gt;` or
     * :ref:`RouteAction.rate_limits&lt;envoy_v3_api_field_config.route.v3.RouteAction.rate_limits&gt;` fields instead.
     * [#not-implemented-hide:]
     * </pre>
     *
     * <code>repeated .envoy.extensions.filters.http.ratelimit.v3.RateLimitConfig rate_limits = 3;</code>
     */
    public io.envoyproxy.envoy.extensions.filters.http.ratelimit.v3.RateLimitConfig.Builder addRateLimitsBuilder(
        int index) {
      return getRateLimitsFieldBuilder().addBuilder(
          index, io.envoyproxy.envoy.extensions.filters.http.ratelimit.v3.RateLimitConfig.getDefaultInstance());
    }
    /**
     * <pre>
     * Rate limit configuration. If not set, uses the
     * :ref:`VirtualHost.rate_limits&lt;envoy_v3_api_field_config.route.v3.VirtualHost.rate_limits&gt;` or
     * :ref:`RouteAction.rate_limits&lt;envoy_v3_api_field_config.route.v3.RouteAction.rate_limits&gt;` fields instead.
     * [#not-implemented-hide:]
     * </pre>
     *
     * <code>repeated .envoy.extensions.filters.http.ratelimit.v3.RateLimitConfig rate_limits = 3;</code>
     */
    public java.util.List<io.envoyproxy.envoy.extensions.filters.http.ratelimit.v3.RateLimitConfig.Builder> 
         getRateLimitsBuilderList() {
      return getRateLimitsFieldBuilder().getBuilderList();
    }
    private com.google.protobuf.RepeatedFieldBuilderV3<
        io.envoyproxy.envoy.extensions.filters.http.ratelimit.v3.RateLimitConfig, io.envoyproxy.envoy.extensions.filters.http.ratelimit.v3.RateLimitConfig.Builder, io.envoyproxy.envoy.extensions.filters.http.ratelimit.v3.RateLimitConfigOrBuilder> 
        getRateLimitsFieldBuilder() {
      if (rateLimitsBuilder_ == null) {
        rateLimitsBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<
            io.envoyproxy.envoy.extensions.filters.http.ratelimit.v3.RateLimitConfig, io.envoyproxy.envoy.extensions.filters.http.ratelimit.v3.RateLimitConfig.Builder, io.envoyproxy.envoy.extensions.filters.http.ratelimit.v3.RateLimitConfigOrBuilder>(
                rateLimits_,
                ((bitField0_ & 0x00000004) != 0),
                getParentForChildren(),
                isClean());
        rateLimits_ = null;
      }
      return rateLimitsBuilder_;
    }
    @java.lang.Override
    public final Builder setUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return super.setUnknownFields(unknownFields);
    }

    @java.lang.Override
    public final Builder mergeUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return super.mergeUnknownFields(unknownFields);
    }


    // @@protoc_insertion_point(builder_scope:envoy.extensions.filters.http.ratelimit.v3.RateLimitPerRoute)
  }

  // @@protoc_insertion_point(class_scope:envoy.extensions.filters.http.ratelimit.v3.RateLimitPerRoute)
  private static final io.envoyproxy.envoy.extensions.filters.http.ratelimit.v3.RateLimitPerRoute DEFAULT_INSTANCE;
  static {
    DEFAULT_INSTANCE = new io.envoyproxy.envoy.extensions.filters.http.ratelimit.v3.RateLimitPerRoute();
  }

  public static io.envoyproxy.envoy.extensions.filters.http.ratelimit.v3.RateLimitPerRoute getDefaultInstance() {
    return DEFAULT_INSTANCE;
  }

  private static final com.google.protobuf.Parser<RateLimitPerRoute>
      PARSER = new com.google.protobuf.AbstractParser<RateLimitPerRoute>() {
    @java.lang.Override
    public RateLimitPerRoute parsePartialFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      Builder builder = newBuilder();
      try {
        builder.mergeFrom(input, extensionRegistry);
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(builder.buildPartial());
      } catch (com.google.protobuf.UninitializedMessageException e) {
        throw e.asInvalidProtocolBufferException().setUnfinishedMessage(builder.buildPartial());
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(e)
            .setUnfinishedMessage(builder.buildPartial());
      }
      return builder.buildPartial();
    }
  };

  public static com.google.protobuf.Parser<RateLimitPerRoute> parser() {
    return PARSER;
  }

  @java.lang.Override
  public com.google.protobuf.Parser<RateLimitPerRoute> getParserForType() {
    return PARSER;
  }

  @java.lang.Override
  public io.envoyproxy.envoy.extensions.filters.http.ratelimit.v3.RateLimitPerRoute getDefaultInstanceForType() {
    return DEFAULT_INSTANCE;
  }

}

