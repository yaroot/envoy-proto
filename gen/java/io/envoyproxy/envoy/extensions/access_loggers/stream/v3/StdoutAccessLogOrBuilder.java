// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: envoy/extensions/access_loggers/stream/v3/stream.proto

package io.envoyproxy.envoy.extensions.access_loggers.stream.v3;

public interface StdoutAccessLogOrBuilder extends
    // @@protoc_insertion_point(interface_extends:envoy.extensions.access_loggers.stream.v3.StdoutAccessLog)
    com.google.protobuf.MessageOrBuilder {

  /**
   * <pre>
   * Configuration to form access log data and format.
   * If not specified, use :ref:`default format &lt;config_access_log_default_format&gt;`.
   * </pre>
   *
   * <code>.envoy.config.core.v3.SubstitutionFormatString log_format = 1 [(.validate.rules) = { ... }</code>
   * @return Whether the logFormat field is set.
   */
  boolean hasLogFormat();
  /**
   * <pre>
   * Configuration to form access log data and format.
   * If not specified, use :ref:`default format &lt;config_access_log_default_format&gt;`.
   * </pre>
   *
   * <code>.envoy.config.core.v3.SubstitutionFormatString log_format = 1 [(.validate.rules) = { ... }</code>
   * @return The logFormat.
   */
  io.envoyproxy.envoy.config.core.v3.SubstitutionFormatString getLogFormat();
  /**
   * <pre>
   * Configuration to form access log data and format.
   * If not specified, use :ref:`default format &lt;config_access_log_default_format&gt;`.
   * </pre>
   *
   * <code>.envoy.config.core.v3.SubstitutionFormatString log_format = 1 [(.validate.rules) = { ... }</code>
   */
  io.envoyproxy.envoy.config.core.v3.SubstitutionFormatStringOrBuilder getLogFormatOrBuilder();

  public io.envoyproxy.envoy.extensions.access_loggers.stream.v3.StdoutAccessLog.AccessLogFormatCase getAccessLogFormatCase();
}
