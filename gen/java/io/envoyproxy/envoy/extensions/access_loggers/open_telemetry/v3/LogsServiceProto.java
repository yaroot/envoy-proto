// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: envoy/extensions/access_loggers/open_telemetry/v3/logs_service.proto

package io.envoyproxy.envoy.extensions.access_loggers.open_telemetry.v3;

public final class LogsServiceProto {
  private LogsServiceProto() {}
  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistryLite registry) {
  }

  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistry registry) {
    registerAllExtensions(
        (com.google.protobuf.ExtensionRegistryLite) registry);
  }
  static final com.google.protobuf.Descriptors.Descriptor
    internal_static_envoy_extensions_access_loggers_open_telemetry_v3_OpenTelemetryAccessLogConfig_descriptor;
  static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_envoy_extensions_access_loggers_open_telemetry_v3_OpenTelemetryAccessLogConfig_fieldAccessorTable;

  public static com.google.protobuf.Descriptors.FileDescriptor
      getDescriptor() {
    return descriptor;
  }
  private static  com.google.protobuf.Descriptors.FileDescriptor
      descriptor;
  static {
    java.lang.String[] descriptorData = {
      "\nDenvoy/extensions/access_loggers/open_t" +
      "elemetry/v3/logs_service.proto\0221envoy.ex" +
      "tensions.access_loggers.open_telemetry.v" +
      "3\0321envoy/extensions/access_loggers/grpc/" +
      "v3/als.proto\032*opentelemetry/proto/common" +
      "/v1/common.proto\032\035udpa/annotations/statu" +
      "s.proto\032\027validate/validate.proto\"\305\002\n\034Ope" +
      "nTelemetryAccessLogConfig\022c\n\rcommon_conf" +
      "ig\030\001 \001(\0132B.envoy.extensions.access_logge" +
      "rs.grpc.v3.CommonGrpcAccessLogConfigB\010\372B" +
      "\005\212\001\002\020\001\022H\n\023resource_attributes\030\004 \001(\0132+.op" +
      "entelemetry.proto.common.v1.KeyValueList" +
      "\0225\n\004body\030\002 \001(\0132\'.opentelemetry.proto.com" +
      "mon.v1.AnyValue\022?\n\nattributes\030\003 \001(\0132+.op" +
      "entelemetry.proto.common.v1.KeyValueList" +
      "B\310\001\n?io.envoyproxy.envoy.extensions.acce" +
      "ss_loggers.open_telemetry.v3B\020LogsServic" +
      "eProtoP\001Zigithub.com/envoyproxy/go-contr" +
      "ol-plane/envoy/extensions/access_loggers" +
      "/open_telemetry/v3;open_telemetryv3\272\200\310\321\006" +
      "\002\020\002b\006proto3"
    };
    descriptor = com.google.protobuf.Descriptors.FileDescriptor
      .internalBuildGeneratedFileFrom(descriptorData,
        new com.google.protobuf.Descriptors.FileDescriptor[] {
          io.envoyproxy.envoy.extensions.access_loggers.grpc.v3.AlsProto.getDescriptor(),
          io.opentelemetry.proto.common.v1.CommonProto.getDescriptor(),
          udpa.annotations.Status.getDescriptor(),
          io.envoyproxy.pgv.validate.Validate.getDescriptor(),
        });
    internal_static_envoy_extensions_access_loggers_open_telemetry_v3_OpenTelemetryAccessLogConfig_descriptor =
      getDescriptor().getMessageTypes().get(0);
    internal_static_envoy_extensions_access_loggers_open_telemetry_v3_OpenTelemetryAccessLogConfig_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_envoy_extensions_access_loggers_open_telemetry_v3_OpenTelemetryAccessLogConfig_descriptor,
        new java.lang.String[] { "CommonConfig", "ResourceAttributes", "Body", "Attributes", });
    com.google.protobuf.ExtensionRegistry registry =
        com.google.protobuf.ExtensionRegistry.newInstance();
    registry.add(udpa.annotations.Status.fileStatus);
    registry.add(io.envoyproxy.pgv.validate.Validate.rules);
    com.google.protobuf.Descriptors.FileDescriptor
        .internalUpdateFileDescriptor(descriptor, registry);
    io.envoyproxy.envoy.extensions.access_loggers.grpc.v3.AlsProto.getDescriptor();
    io.opentelemetry.proto.common.v1.CommonProto.getDescriptor();
    udpa.annotations.Status.getDescriptor();
    io.envoyproxy.pgv.validate.Validate.getDescriptor();
  }

  // @@protoc_insertion_point(outer_class_scope)
}
