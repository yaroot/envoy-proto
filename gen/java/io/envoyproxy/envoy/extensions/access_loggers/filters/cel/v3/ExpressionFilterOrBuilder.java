// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: envoy/extensions/access_loggers/filters/cel/v3/cel.proto

package io.envoyproxy.envoy.extensions.access_loggers.filters.cel.v3;

public interface ExpressionFilterOrBuilder extends
    // @@protoc_insertion_point(interface_extends:envoy.extensions.access_loggers.filters.cel.v3.ExpressionFilter)
    com.google.protobuf.MessageOrBuilder {

  /**
   * <pre>
   * Expression that, when evaluated, will be used to filter access logs.
   * Expressions are based on the set of Envoy :ref:`attributes &lt;arch_overview_attributes&gt;`.
   * The provided expression must evaluate to true for logging (expression errors are considered false).
   * Examples:
   * - ``response.code &gt;= 400``
   * - ``(connection.mtls &amp;&amp; request.headers['x-log-mtls'] == 'true') || request.url_path.contains('v1beta3')``
   * </pre>
   *
   * <code>string expression = 1;</code>
   * @return The expression.
   */
  java.lang.String getExpression();
  /**
   * <pre>
   * Expression that, when evaluated, will be used to filter access logs.
   * Expressions are based on the set of Envoy :ref:`attributes &lt;arch_overview_attributes&gt;`.
   * The provided expression must evaluate to true for logging (expression errors are considered false).
   * Examples:
   * - ``response.code &gt;= 400``
   * - ``(connection.mtls &amp;&amp; request.headers['x-log-mtls'] == 'true') || request.url_path.contains('v1beta3')``
   * </pre>
   *
   * <code>string expression = 1;</code>
   * @return The bytes for expression.
   */
  com.google.protobuf.ByteString
      getExpressionBytes();
}
