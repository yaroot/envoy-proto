// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: envoy/extensions/http/custom_response/redirect_policy/v3/redirect_policy.proto

package io.envoyproxy.envoy.extensions.http.custom_response.redirect_policy.v3;

public interface RedirectPolicyOrBuilder extends
    // @@protoc_insertion_point(interface_extends:envoy.extensions.http.custom_response.redirect_policy.v3.RedirectPolicy)
    com.google.protobuf.MessageOrBuilder {

  /**
   * <pre>
   * [#comment: TODO(pradeepcrao): Add the ability to specify the full uri, or just host or
   * path rewrite for the redirection in the same vein as
   * config.route.v3.RedirectAction]
   * The host that will serve the custom response.
   * Example:
   * .. code-block:: yaml
   *    uri: https://www.mydomain.com
   * </pre>
   *
   * <code>string host = 1 [(.validate.rules) = { ... }</code>
   * @return The host.
   */
  java.lang.String getHost();
  /**
   * <pre>
   * [#comment: TODO(pradeepcrao): Add the ability to specify the full uri, or just host or
   * path rewrite for the redirection in the same vein as
   * config.route.v3.RedirectAction]
   * The host that will serve the custom response.
   * Example:
   * .. code-block:: yaml
   *    uri: https://www.mydomain.com
   * </pre>
   *
   * <code>string host = 1 [(.validate.rules) = { ... }</code>
   * @return The bytes for host.
   */
  com.google.protobuf.ByteString
      getHostBytes();

  /**
   * <pre>
   * The path for the custom response.
   * Example:
   *  .. code-block:: yaml
   *    path: /path/to/503_response.txt
   * </pre>
   *
   * <code>string path = 2 [(.validate.rules) = { ... }</code>
   * @return The path.
   */
  java.lang.String getPath();
  /**
   * <pre>
   * The path for the custom response.
   * Example:
   *  .. code-block:: yaml
   *    path: /path/to/503_response.txt
   * </pre>
   *
   * <code>string path = 2 [(.validate.rules) = { ... }</code>
   * @return The bytes for path.
   */
  com.google.protobuf.ByteString
      getPathBytes();

  /**
   * <pre>
   * The new response status code if specified. This is used to override the
   * status code of the response from the new upstream if it is not an error status.
   * </pre>
   *
   * <code>.google.protobuf.UInt32Value status_code = 3 [(.validate.rules) = { ... }</code>
   * @return Whether the statusCode field is set.
   */
  boolean hasStatusCode();
  /**
   * <pre>
   * The new response status code if specified. This is used to override the
   * status code of the response from the new upstream if it is not an error status.
   * </pre>
   *
   * <code>.google.protobuf.UInt32Value status_code = 3 [(.validate.rules) = { ... }</code>
   * @return The statusCode.
   */
  com.google.protobuf.UInt32Value getStatusCode();
  /**
   * <pre>
   * The new response status code if specified. This is used to override the
   * status code of the response from the new upstream if it is not an error status.
   * </pre>
   *
   * <code>.google.protobuf.UInt32Value status_code = 3 [(.validate.rules) = { ... }</code>
   */
  com.google.protobuf.UInt32ValueOrBuilder getStatusCodeOrBuilder();

  /**
   * <pre>
   * HTTP headers to add to the response. This allows the
   * response policy to append, to add or to override headers of
   * the original response for local body, or the custom response from the
   * remote body, before it is sent to a downstream client.
   * Note that these are not applied if the redirected response is an error
   * response.
   * </pre>
   *
   * <code>repeated .envoy.config.core.v3.HeaderValueOption response_headers_to_add = 4 [(.validate.rules) = { ... }</code>
   */
  java.util.List<io.envoyproxy.envoy.config.core.v3.HeaderValueOption> 
      getResponseHeadersToAddList();
  /**
   * <pre>
   * HTTP headers to add to the response. This allows the
   * response policy to append, to add or to override headers of
   * the original response for local body, or the custom response from the
   * remote body, before it is sent to a downstream client.
   * Note that these are not applied if the redirected response is an error
   * response.
   * </pre>
   *
   * <code>repeated .envoy.config.core.v3.HeaderValueOption response_headers_to_add = 4 [(.validate.rules) = { ... }</code>
   */
  io.envoyproxy.envoy.config.core.v3.HeaderValueOption getResponseHeadersToAdd(int index);
  /**
   * <pre>
   * HTTP headers to add to the response. This allows the
   * response policy to append, to add or to override headers of
   * the original response for local body, or the custom response from the
   * remote body, before it is sent to a downstream client.
   * Note that these are not applied if the redirected response is an error
   * response.
   * </pre>
   *
   * <code>repeated .envoy.config.core.v3.HeaderValueOption response_headers_to_add = 4 [(.validate.rules) = { ... }</code>
   */
  int getResponseHeadersToAddCount();
  /**
   * <pre>
   * HTTP headers to add to the response. This allows the
   * response policy to append, to add or to override headers of
   * the original response for local body, or the custom response from the
   * remote body, before it is sent to a downstream client.
   * Note that these are not applied if the redirected response is an error
   * response.
   * </pre>
   *
   * <code>repeated .envoy.config.core.v3.HeaderValueOption response_headers_to_add = 4 [(.validate.rules) = { ... }</code>
   */
  java.util.List<? extends io.envoyproxy.envoy.config.core.v3.HeaderValueOptionOrBuilder> 
      getResponseHeadersToAddOrBuilderList();
  /**
   * <pre>
   * HTTP headers to add to the response. This allows the
   * response policy to append, to add or to override headers of
   * the original response for local body, or the custom response from the
   * remote body, before it is sent to a downstream client.
   * Note that these are not applied if the redirected response is an error
   * response.
   * </pre>
   *
   * <code>repeated .envoy.config.core.v3.HeaderValueOption response_headers_to_add = 4 [(.validate.rules) = { ... }</code>
   */
  io.envoyproxy.envoy.config.core.v3.HeaderValueOptionOrBuilder getResponseHeadersToAddOrBuilder(
      int index);

  /**
   * <pre>
   * HTTP headers to add to the request before it is internally redirected.
   * </pre>
   *
   * <code>repeated .envoy.config.core.v3.HeaderValueOption request_headers_to_add = 5 [(.validate.rules) = { ... }</code>
   */
  java.util.List<io.envoyproxy.envoy.config.core.v3.HeaderValueOption> 
      getRequestHeadersToAddList();
  /**
   * <pre>
   * HTTP headers to add to the request before it is internally redirected.
   * </pre>
   *
   * <code>repeated .envoy.config.core.v3.HeaderValueOption request_headers_to_add = 5 [(.validate.rules) = { ... }</code>
   */
  io.envoyproxy.envoy.config.core.v3.HeaderValueOption getRequestHeadersToAdd(int index);
  /**
   * <pre>
   * HTTP headers to add to the request before it is internally redirected.
   * </pre>
   *
   * <code>repeated .envoy.config.core.v3.HeaderValueOption request_headers_to_add = 5 [(.validate.rules) = { ... }</code>
   */
  int getRequestHeadersToAddCount();
  /**
   * <pre>
   * HTTP headers to add to the request before it is internally redirected.
   * </pre>
   *
   * <code>repeated .envoy.config.core.v3.HeaderValueOption request_headers_to_add = 5 [(.validate.rules) = { ... }</code>
   */
  java.util.List<? extends io.envoyproxy.envoy.config.core.v3.HeaderValueOptionOrBuilder> 
      getRequestHeadersToAddOrBuilderList();
  /**
   * <pre>
   * HTTP headers to add to the request before it is internally redirected.
   * </pre>
   *
   * <code>repeated .envoy.config.core.v3.HeaderValueOption request_headers_to_add = 5 [(.validate.rules) = { ... }</code>
   */
  io.envoyproxy.envoy.config.core.v3.HeaderValueOptionOrBuilder getRequestHeadersToAddOrBuilder(
      int index);

  /**
   * <pre>
   * Custom action to modify request headers before selection of the
   * redirected route.
   * [#comment: TODO(pradeepcrao) add an extension category.]
   * </pre>
   *
   * <code>.envoy.config.core.v3.TypedExtensionConfig modify_request_headers_action = 6;</code>
   * @return Whether the modifyRequestHeadersAction field is set.
   */
  boolean hasModifyRequestHeadersAction();
  /**
   * <pre>
   * Custom action to modify request headers before selection of the
   * redirected route.
   * [#comment: TODO(pradeepcrao) add an extension category.]
   * </pre>
   *
   * <code>.envoy.config.core.v3.TypedExtensionConfig modify_request_headers_action = 6;</code>
   * @return The modifyRequestHeadersAction.
   */
  io.envoyproxy.envoy.config.core.v3.TypedExtensionConfig getModifyRequestHeadersAction();
  /**
   * <pre>
   * Custom action to modify request headers before selection of the
   * redirected route.
   * [#comment: TODO(pradeepcrao) add an extension category.]
   * </pre>
   *
   * <code>.envoy.config.core.v3.TypedExtensionConfig modify_request_headers_action = 6;</code>
   */
  io.envoyproxy.envoy.config.core.v3.TypedExtensionConfigOrBuilder getModifyRequestHeadersActionOrBuilder();
}
