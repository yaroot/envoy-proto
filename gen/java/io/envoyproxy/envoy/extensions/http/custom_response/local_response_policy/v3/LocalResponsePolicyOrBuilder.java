// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: envoy/extensions/http/custom_response/local_response_policy/v3/local_response_policy.proto

package io.envoyproxy.envoy.extensions.http.custom_response.local_response_policy.v3;

public interface LocalResponsePolicyOrBuilder extends
    // @@protoc_insertion_point(interface_extends:envoy.extensions.http.custom_response.local_response_policy.v3.LocalResponsePolicy)
    com.google.protobuf.MessageOrBuilder {

  /**
   * <pre>
   * Optional new local reply body text. It will be used
   * in the `%LOCAL_REPLY_BODY%` command operator in the `body_format`.
   * </pre>
   *
   * <code>.envoy.config.core.v3.DataSource body = 1;</code>
   * @return Whether the body field is set.
   */
  boolean hasBody();
  /**
   * <pre>
   * Optional new local reply body text. It will be used
   * in the `%LOCAL_REPLY_BODY%` command operator in the `body_format`.
   * </pre>
   *
   * <code>.envoy.config.core.v3.DataSource body = 1;</code>
   * @return The body.
   */
  io.envoyproxy.envoy.config.core.v3.DataSource getBody();
  /**
   * <pre>
   * Optional new local reply body text. It will be used
   * in the `%LOCAL_REPLY_BODY%` command operator in the `body_format`.
   * </pre>
   *
   * <code>.envoy.config.core.v3.DataSource body = 1;</code>
   */
  io.envoyproxy.envoy.config.core.v3.DataSourceOrBuilder getBodyOrBuilder();

  /**
   * <pre>
   * Optional body format to be used for this response. If `body_format` is  not
   * provided, and `body` is, the contents of `body` will be used to populate
   * the body of the local reply without formatting.
   * </pre>
   *
   * <code>.envoy.config.core.v3.SubstitutionFormatString body_format = 2;</code>
   * @return Whether the bodyFormat field is set.
   */
  boolean hasBodyFormat();
  /**
   * <pre>
   * Optional body format to be used for this response. If `body_format` is  not
   * provided, and `body` is, the contents of `body` will be used to populate
   * the body of the local reply without formatting.
   * </pre>
   *
   * <code>.envoy.config.core.v3.SubstitutionFormatString body_format = 2;</code>
   * @return The bodyFormat.
   */
  io.envoyproxy.envoy.config.core.v3.SubstitutionFormatString getBodyFormat();
  /**
   * <pre>
   * Optional body format to be used for this response. If `body_format` is  not
   * provided, and `body` is, the contents of `body` will be used to populate
   * the body of the local reply without formatting.
   * </pre>
   *
   * <code>.envoy.config.core.v3.SubstitutionFormatString body_format = 2;</code>
   */
  io.envoyproxy.envoy.config.core.v3.SubstitutionFormatStringOrBuilder getBodyFormatOrBuilder();

  /**
   * <pre>
   * The new response status code if specified.
   * </pre>
   *
   * <code>.google.protobuf.UInt32Value status_code = 3 [(.validate.rules) = { ... }</code>
   * @return Whether the statusCode field is set.
   */
  boolean hasStatusCode();
  /**
   * <pre>
   * The new response status code if specified.
   * </pre>
   *
   * <code>.google.protobuf.UInt32Value status_code = 3 [(.validate.rules) = { ... }</code>
   * @return The statusCode.
   */
  com.google.protobuf.UInt32Value getStatusCode();
  /**
   * <pre>
   * The new response status code if specified.
   * </pre>
   *
   * <code>.google.protobuf.UInt32Value status_code = 3 [(.validate.rules) = { ... }</code>
   */
  com.google.protobuf.UInt32ValueOrBuilder getStatusCodeOrBuilder();

  /**
   * <pre>
   * HTTP headers to add to the response. This allows the
   * response policy to append, to add or to override headers of
   * the original response for local body, or the custom response from the
   * remote body, before it is sent to a downstream client.
   * </pre>
   *
   * <code>repeated .envoy.config.core.v3.HeaderValueOption response_headers_to_add = 4 [(.validate.rules) = { ... }</code>
   */
  java.util.List<io.envoyproxy.envoy.config.core.v3.HeaderValueOption> 
      getResponseHeadersToAddList();
  /**
   * <pre>
   * HTTP headers to add to the response. This allows the
   * response policy to append, to add or to override headers of
   * the original response for local body, or the custom response from the
   * remote body, before it is sent to a downstream client.
   * </pre>
   *
   * <code>repeated .envoy.config.core.v3.HeaderValueOption response_headers_to_add = 4 [(.validate.rules) = { ... }</code>
   */
  io.envoyproxy.envoy.config.core.v3.HeaderValueOption getResponseHeadersToAdd(int index);
  /**
   * <pre>
   * HTTP headers to add to the response. This allows the
   * response policy to append, to add or to override headers of
   * the original response for local body, or the custom response from the
   * remote body, before it is sent to a downstream client.
   * </pre>
   *
   * <code>repeated .envoy.config.core.v3.HeaderValueOption response_headers_to_add = 4 [(.validate.rules) = { ... }</code>
   */
  int getResponseHeadersToAddCount();
  /**
   * <pre>
   * HTTP headers to add to the response. This allows the
   * response policy to append, to add or to override headers of
   * the original response for local body, or the custom response from the
   * remote body, before it is sent to a downstream client.
   * </pre>
   *
   * <code>repeated .envoy.config.core.v3.HeaderValueOption response_headers_to_add = 4 [(.validate.rules) = { ... }</code>
   */
  java.util.List<? extends io.envoyproxy.envoy.config.core.v3.HeaderValueOptionOrBuilder> 
      getResponseHeadersToAddOrBuilderList();
  /**
   * <pre>
   * HTTP headers to add to the response. This allows the
   * response policy to append, to add or to override headers of
   * the original response for local body, or the custom response from the
   * remote body, before it is sent to a downstream client.
   * </pre>
   *
   * <code>repeated .envoy.config.core.v3.HeaderValueOption response_headers_to_add = 4 [(.validate.rules) = { ... }</code>
   */
  io.envoyproxy.envoy.config.core.v3.HeaderValueOptionOrBuilder getResponseHeadersToAddOrBuilder(
      int index);
}
