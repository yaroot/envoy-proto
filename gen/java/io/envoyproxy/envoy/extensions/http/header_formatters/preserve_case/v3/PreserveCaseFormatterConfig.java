// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: envoy/extensions/http/header_formatters/preserve_case/v3/preserve_case.proto

package io.envoyproxy.envoy.extensions.http.header_formatters.preserve_case.v3;

/**
 * <pre>
 * Configuration for the preserve case header formatter.
 * See the :ref:`header casing &lt;config_http_conn_man_header_casing&gt;` configuration guide for more
 * information.
 * </pre>
 *
 * Protobuf type {@code envoy.extensions.http.header_formatters.preserve_case.v3.PreserveCaseFormatterConfig}
 */
public final class PreserveCaseFormatterConfig extends
    com.google.protobuf.GeneratedMessageV3 implements
    // @@protoc_insertion_point(message_implements:envoy.extensions.http.header_formatters.preserve_case.v3.PreserveCaseFormatterConfig)
    PreserveCaseFormatterConfigOrBuilder {
private static final long serialVersionUID = 0L;
  // Use PreserveCaseFormatterConfig.newBuilder() to construct.
  private PreserveCaseFormatterConfig(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
    super(builder);
  }
  private PreserveCaseFormatterConfig() {
    formatterTypeOnEnvoyHeaders_ = 0;
  }

  @java.lang.Override
  @SuppressWarnings({"unused"})
  protected java.lang.Object newInstance(
      UnusedPrivateParameter unused) {
    return new PreserveCaseFormatterConfig();
  }

  @java.lang.Override
  public final com.google.protobuf.UnknownFieldSet
  getUnknownFields() {
    return this.unknownFields;
  }
  public static final com.google.protobuf.Descriptors.Descriptor
      getDescriptor() {
    return io.envoyproxy.envoy.extensions.http.header_formatters.preserve_case.v3.PreserveCaseProto.internal_static_envoy_extensions_http_header_formatters_preserve_case_v3_PreserveCaseFormatterConfig_descriptor;
  }

  @java.lang.Override
  protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internalGetFieldAccessorTable() {
    return io.envoyproxy.envoy.extensions.http.header_formatters.preserve_case.v3.PreserveCaseProto.internal_static_envoy_extensions_http_header_formatters_preserve_case_v3_PreserveCaseFormatterConfig_fieldAccessorTable
        .ensureFieldAccessorsInitialized(
            io.envoyproxy.envoy.extensions.http.header_formatters.preserve_case.v3.PreserveCaseFormatterConfig.class, io.envoyproxy.envoy.extensions.http.header_formatters.preserve_case.v3.PreserveCaseFormatterConfig.Builder.class);
  }

  /**
   * Protobuf enum {@code envoy.extensions.http.header_formatters.preserve_case.v3.PreserveCaseFormatterConfig.FormatterTypeOnEnvoyHeaders}
   */
  public enum FormatterTypeOnEnvoyHeaders
      implements com.google.protobuf.ProtocolMessageEnum {
    /**
     * <pre>
     * Use LowerCase on Envoy added headers.
     * </pre>
     *
     * <code>DEFAULT = 0;</code>
     */
    DEFAULT(0),
    /**
     * <pre>
     * Use ProperCaseHeaderKeyFormatter on Envoy added headers that upper cases the first character
     * in each word. The first character as well as any alpha character following a special
     * character is upper cased.
     * </pre>
     *
     * <code>PROPER_CASE = 1;</code>
     */
    PROPER_CASE(1),
    UNRECOGNIZED(-1),
    ;

    /**
     * <pre>
     * Use LowerCase on Envoy added headers.
     * </pre>
     *
     * <code>DEFAULT = 0;</code>
     */
    public static final int DEFAULT_VALUE = 0;
    /**
     * <pre>
     * Use ProperCaseHeaderKeyFormatter on Envoy added headers that upper cases the first character
     * in each word. The first character as well as any alpha character following a special
     * character is upper cased.
     * </pre>
     *
     * <code>PROPER_CASE = 1;</code>
     */
    public static final int PROPER_CASE_VALUE = 1;


    public final int getNumber() {
      if (this == UNRECOGNIZED) {
        throw new java.lang.IllegalArgumentException(
            "Can't get the number of an unknown enum value.");
      }
      return value;
    }

    /**
     * @param value The numeric wire value of the corresponding enum entry.
     * @return The enum associated with the given numeric wire value.
     * @deprecated Use {@link #forNumber(int)} instead.
     */
    @java.lang.Deprecated
    public static FormatterTypeOnEnvoyHeaders valueOf(int value) {
      return forNumber(value);
    }

    /**
     * @param value The numeric wire value of the corresponding enum entry.
     * @return The enum associated with the given numeric wire value.
     */
    public static FormatterTypeOnEnvoyHeaders forNumber(int value) {
      switch (value) {
        case 0: return DEFAULT;
        case 1: return PROPER_CASE;
        default: return null;
      }
    }

    public static com.google.protobuf.Internal.EnumLiteMap<FormatterTypeOnEnvoyHeaders>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static final com.google.protobuf.Internal.EnumLiteMap<
        FormatterTypeOnEnvoyHeaders> internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<FormatterTypeOnEnvoyHeaders>() {
            public FormatterTypeOnEnvoyHeaders findValueByNumber(int number) {
              return FormatterTypeOnEnvoyHeaders.forNumber(number);
            }
          };

    public final com.google.protobuf.Descriptors.EnumValueDescriptor
        getValueDescriptor() {
      if (this == UNRECOGNIZED) {
        throw new java.lang.IllegalStateException(
            "Can't get the descriptor of an unrecognized enum value.");
      }
      return getDescriptor().getValues().get(ordinal());
    }
    public final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptorForType() {
      return getDescriptor();
    }
    public static final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptor() {
      return io.envoyproxy.envoy.extensions.http.header_formatters.preserve_case.v3.PreserveCaseFormatterConfig.getDescriptor().getEnumTypes().get(0);
    }

    private static final FormatterTypeOnEnvoyHeaders[] VALUES = values();

    public static FormatterTypeOnEnvoyHeaders valueOf(
        com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
      if (desc.getType() != getDescriptor()) {
        throw new java.lang.IllegalArgumentException(
          "EnumValueDescriptor is not for this type.");
      }
      if (desc.getIndex() == -1) {
        return UNRECOGNIZED;
      }
      return VALUES[desc.getIndex()];
    }

    private final int value;

    private FormatterTypeOnEnvoyHeaders(int value) {
      this.value = value;
    }

    // @@protoc_insertion_point(enum_scope:envoy.extensions.http.header_formatters.preserve_case.v3.PreserveCaseFormatterConfig.FormatterTypeOnEnvoyHeaders)
  }

  public static final int FORWARD_REASON_PHRASE_FIELD_NUMBER = 1;
  private boolean forwardReasonPhrase_ = false;
  /**
   * <pre>
   * Allows forwarding reason phrase text.
   * This is off by default, and a standard reason phrase is used for a corresponding HTTP response code.
   * </pre>
   *
   * <code>bool forward_reason_phrase = 1;</code>
   * @return The forwardReasonPhrase.
   */
  @java.lang.Override
  public boolean getForwardReasonPhrase() {
    return forwardReasonPhrase_;
  }

  public static final int FORMATTER_TYPE_ON_ENVOY_HEADERS_FIELD_NUMBER = 2;
  private int formatterTypeOnEnvoyHeaders_ = 0;
  /**
   * <pre>
   * Type of formatter to use on headers which are added by Envoy (which are lower case by default).
   * The default type is DEFAULT, use LowerCase on Envoy headers.
   * </pre>
   *
   * <code>.envoy.extensions.http.header_formatters.preserve_case.v3.PreserveCaseFormatterConfig.FormatterTypeOnEnvoyHeaders formatter_type_on_envoy_headers = 2 [(.validate.rules) = { ... }</code>
   * @return The enum numeric value on the wire for formatterTypeOnEnvoyHeaders.
   */
  @java.lang.Override public int getFormatterTypeOnEnvoyHeadersValue() {
    return formatterTypeOnEnvoyHeaders_;
  }
  /**
   * <pre>
   * Type of formatter to use on headers which are added by Envoy (which are lower case by default).
   * The default type is DEFAULT, use LowerCase on Envoy headers.
   * </pre>
   *
   * <code>.envoy.extensions.http.header_formatters.preserve_case.v3.PreserveCaseFormatterConfig.FormatterTypeOnEnvoyHeaders formatter_type_on_envoy_headers = 2 [(.validate.rules) = { ... }</code>
   * @return The formatterTypeOnEnvoyHeaders.
   */
  @java.lang.Override public io.envoyproxy.envoy.extensions.http.header_formatters.preserve_case.v3.PreserveCaseFormatterConfig.FormatterTypeOnEnvoyHeaders getFormatterTypeOnEnvoyHeaders() {
    io.envoyproxy.envoy.extensions.http.header_formatters.preserve_case.v3.PreserveCaseFormatterConfig.FormatterTypeOnEnvoyHeaders result = io.envoyproxy.envoy.extensions.http.header_formatters.preserve_case.v3.PreserveCaseFormatterConfig.FormatterTypeOnEnvoyHeaders.forNumber(formatterTypeOnEnvoyHeaders_);
    return result == null ? io.envoyproxy.envoy.extensions.http.header_formatters.preserve_case.v3.PreserveCaseFormatterConfig.FormatterTypeOnEnvoyHeaders.UNRECOGNIZED : result;
  }

  private byte memoizedIsInitialized = -1;
  @java.lang.Override
  public final boolean isInitialized() {
    byte isInitialized = memoizedIsInitialized;
    if (isInitialized == 1) return true;
    if (isInitialized == 0) return false;

    memoizedIsInitialized = 1;
    return true;
  }

  @java.lang.Override
  public void writeTo(com.google.protobuf.CodedOutputStream output)
                      throws java.io.IOException {
    if (forwardReasonPhrase_ != false) {
      output.writeBool(1, forwardReasonPhrase_);
    }
    if (formatterTypeOnEnvoyHeaders_ != io.envoyproxy.envoy.extensions.http.header_formatters.preserve_case.v3.PreserveCaseFormatterConfig.FormatterTypeOnEnvoyHeaders.DEFAULT.getNumber()) {
      output.writeEnum(2, formatterTypeOnEnvoyHeaders_);
    }
    getUnknownFields().writeTo(output);
  }

  @java.lang.Override
  public int getSerializedSize() {
    int size = memoizedSize;
    if (size != -1) return size;

    size = 0;
    if (forwardReasonPhrase_ != false) {
      size += com.google.protobuf.CodedOutputStream
        .computeBoolSize(1, forwardReasonPhrase_);
    }
    if (formatterTypeOnEnvoyHeaders_ != io.envoyproxy.envoy.extensions.http.header_formatters.preserve_case.v3.PreserveCaseFormatterConfig.FormatterTypeOnEnvoyHeaders.DEFAULT.getNumber()) {
      size += com.google.protobuf.CodedOutputStream
        .computeEnumSize(2, formatterTypeOnEnvoyHeaders_);
    }
    size += getUnknownFields().getSerializedSize();
    memoizedSize = size;
    return size;
  }

  @java.lang.Override
  public boolean equals(final java.lang.Object obj) {
    if (obj == this) {
     return true;
    }
    if (!(obj instanceof io.envoyproxy.envoy.extensions.http.header_formatters.preserve_case.v3.PreserveCaseFormatterConfig)) {
      return super.equals(obj);
    }
    io.envoyproxy.envoy.extensions.http.header_formatters.preserve_case.v3.PreserveCaseFormatterConfig other = (io.envoyproxy.envoy.extensions.http.header_formatters.preserve_case.v3.PreserveCaseFormatterConfig) obj;

    if (getForwardReasonPhrase()
        != other.getForwardReasonPhrase()) return false;
    if (formatterTypeOnEnvoyHeaders_ != other.formatterTypeOnEnvoyHeaders_) return false;
    if (!getUnknownFields().equals(other.getUnknownFields())) return false;
    return true;
  }

  @java.lang.Override
  public int hashCode() {
    if (memoizedHashCode != 0) {
      return memoizedHashCode;
    }
    int hash = 41;
    hash = (19 * hash) + getDescriptor().hashCode();
    hash = (37 * hash) + FORWARD_REASON_PHRASE_FIELD_NUMBER;
    hash = (53 * hash) + com.google.protobuf.Internal.hashBoolean(
        getForwardReasonPhrase());
    hash = (37 * hash) + FORMATTER_TYPE_ON_ENVOY_HEADERS_FIELD_NUMBER;
    hash = (53 * hash) + formatterTypeOnEnvoyHeaders_;
    hash = (29 * hash) + getUnknownFields().hashCode();
    memoizedHashCode = hash;
    return hash;
  }

  public static io.envoyproxy.envoy.extensions.http.header_formatters.preserve_case.v3.PreserveCaseFormatterConfig parseFrom(
      java.nio.ByteBuffer data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static io.envoyproxy.envoy.extensions.http.header_formatters.preserve_case.v3.PreserveCaseFormatterConfig parseFrom(
      java.nio.ByteBuffer data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static io.envoyproxy.envoy.extensions.http.header_formatters.preserve_case.v3.PreserveCaseFormatterConfig parseFrom(
      com.google.protobuf.ByteString data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static io.envoyproxy.envoy.extensions.http.header_formatters.preserve_case.v3.PreserveCaseFormatterConfig parseFrom(
      com.google.protobuf.ByteString data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static io.envoyproxy.envoy.extensions.http.header_formatters.preserve_case.v3.PreserveCaseFormatterConfig parseFrom(byte[] data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static io.envoyproxy.envoy.extensions.http.header_formatters.preserve_case.v3.PreserveCaseFormatterConfig parseFrom(
      byte[] data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static io.envoyproxy.envoy.extensions.http.header_formatters.preserve_case.v3.PreserveCaseFormatterConfig parseFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input);
  }
  public static io.envoyproxy.envoy.extensions.http.header_formatters.preserve_case.v3.PreserveCaseFormatterConfig parseFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input, extensionRegistry);
  }
  public static io.envoyproxy.envoy.extensions.http.header_formatters.preserve_case.v3.PreserveCaseFormatterConfig parseDelimitedFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseDelimitedWithIOException(PARSER, input);
  }
  public static io.envoyproxy.envoy.extensions.http.header_formatters.preserve_case.v3.PreserveCaseFormatterConfig parseDelimitedFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
  }
  public static io.envoyproxy.envoy.extensions.http.header_formatters.preserve_case.v3.PreserveCaseFormatterConfig parseFrom(
      com.google.protobuf.CodedInputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input);
  }
  public static io.envoyproxy.envoy.extensions.http.header_formatters.preserve_case.v3.PreserveCaseFormatterConfig parseFrom(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input, extensionRegistry);
  }

  @java.lang.Override
  public Builder newBuilderForType() { return newBuilder(); }
  public static Builder newBuilder() {
    return DEFAULT_INSTANCE.toBuilder();
  }
  public static Builder newBuilder(io.envoyproxy.envoy.extensions.http.header_formatters.preserve_case.v3.PreserveCaseFormatterConfig prototype) {
    return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
  }
  @java.lang.Override
  public Builder toBuilder() {
    return this == DEFAULT_INSTANCE
        ? new Builder() : new Builder().mergeFrom(this);
  }

  @java.lang.Override
  protected Builder newBuilderForType(
      com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
    Builder builder = new Builder(parent);
    return builder;
  }
  /**
   * <pre>
   * Configuration for the preserve case header formatter.
   * See the :ref:`header casing &lt;config_http_conn_man_header_casing&gt;` configuration guide for more
   * information.
   * </pre>
   *
   * Protobuf type {@code envoy.extensions.http.header_formatters.preserve_case.v3.PreserveCaseFormatterConfig}
   */
  public static final class Builder extends
      com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
      // @@protoc_insertion_point(builder_implements:envoy.extensions.http.header_formatters.preserve_case.v3.PreserveCaseFormatterConfig)
      io.envoyproxy.envoy.extensions.http.header_formatters.preserve_case.v3.PreserveCaseFormatterConfigOrBuilder {
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return io.envoyproxy.envoy.extensions.http.header_formatters.preserve_case.v3.PreserveCaseProto.internal_static_envoy_extensions_http_header_formatters_preserve_case_v3_PreserveCaseFormatterConfig_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return io.envoyproxy.envoy.extensions.http.header_formatters.preserve_case.v3.PreserveCaseProto.internal_static_envoy_extensions_http_header_formatters_preserve_case_v3_PreserveCaseFormatterConfig_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              io.envoyproxy.envoy.extensions.http.header_formatters.preserve_case.v3.PreserveCaseFormatterConfig.class, io.envoyproxy.envoy.extensions.http.header_formatters.preserve_case.v3.PreserveCaseFormatterConfig.Builder.class);
    }

    // Construct using io.envoyproxy.envoy.extensions.http.header_formatters.preserve_case.v3.PreserveCaseFormatterConfig.newBuilder()
    private Builder() {

    }

    private Builder(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      super(parent);

    }
    @java.lang.Override
    public Builder clear() {
      super.clear();
      bitField0_ = 0;
      forwardReasonPhrase_ = false;
      formatterTypeOnEnvoyHeaders_ = 0;
      return this;
    }

    @java.lang.Override
    public com.google.protobuf.Descriptors.Descriptor
        getDescriptorForType() {
      return io.envoyproxy.envoy.extensions.http.header_formatters.preserve_case.v3.PreserveCaseProto.internal_static_envoy_extensions_http_header_formatters_preserve_case_v3_PreserveCaseFormatterConfig_descriptor;
    }

    @java.lang.Override
    public io.envoyproxy.envoy.extensions.http.header_formatters.preserve_case.v3.PreserveCaseFormatterConfig getDefaultInstanceForType() {
      return io.envoyproxy.envoy.extensions.http.header_formatters.preserve_case.v3.PreserveCaseFormatterConfig.getDefaultInstance();
    }

    @java.lang.Override
    public io.envoyproxy.envoy.extensions.http.header_formatters.preserve_case.v3.PreserveCaseFormatterConfig build() {
      io.envoyproxy.envoy.extensions.http.header_formatters.preserve_case.v3.PreserveCaseFormatterConfig result = buildPartial();
      if (!result.isInitialized()) {
        throw newUninitializedMessageException(result);
      }
      return result;
    }

    @java.lang.Override
    public io.envoyproxy.envoy.extensions.http.header_formatters.preserve_case.v3.PreserveCaseFormatterConfig buildPartial() {
      io.envoyproxy.envoy.extensions.http.header_formatters.preserve_case.v3.PreserveCaseFormatterConfig result = new io.envoyproxy.envoy.extensions.http.header_formatters.preserve_case.v3.PreserveCaseFormatterConfig(this);
      if (bitField0_ != 0) { buildPartial0(result); }
      onBuilt();
      return result;
    }

    private void buildPartial0(io.envoyproxy.envoy.extensions.http.header_formatters.preserve_case.v3.PreserveCaseFormatterConfig result) {
      int from_bitField0_ = bitField0_;
      if (((from_bitField0_ & 0x00000001) != 0)) {
        result.forwardReasonPhrase_ = forwardReasonPhrase_;
      }
      if (((from_bitField0_ & 0x00000002) != 0)) {
        result.formatterTypeOnEnvoyHeaders_ = formatterTypeOnEnvoyHeaders_;
      }
    }

    @java.lang.Override
    public Builder clone() {
      return super.clone();
    }
    @java.lang.Override
    public Builder setField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        java.lang.Object value) {
      return super.setField(field, value);
    }
    @java.lang.Override
    public Builder clearField(
        com.google.protobuf.Descriptors.FieldDescriptor field) {
      return super.clearField(field);
    }
    @java.lang.Override
    public Builder clearOneof(
        com.google.protobuf.Descriptors.OneofDescriptor oneof) {
      return super.clearOneof(oneof);
    }
    @java.lang.Override
    public Builder setRepeatedField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        int index, java.lang.Object value) {
      return super.setRepeatedField(field, index, value);
    }
    @java.lang.Override
    public Builder addRepeatedField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        java.lang.Object value) {
      return super.addRepeatedField(field, value);
    }
    @java.lang.Override
    public Builder mergeFrom(com.google.protobuf.Message other) {
      if (other instanceof io.envoyproxy.envoy.extensions.http.header_formatters.preserve_case.v3.PreserveCaseFormatterConfig) {
        return mergeFrom((io.envoyproxy.envoy.extensions.http.header_formatters.preserve_case.v3.PreserveCaseFormatterConfig)other);
      } else {
        super.mergeFrom(other);
        return this;
      }
    }

    public Builder mergeFrom(io.envoyproxy.envoy.extensions.http.header_formatters.preserve_case.v3.PreserveCaseFormatterConfig other) {
      if (other == io.envoyproxy.envoy.extensions.http.header_formatters.preserve_case.v3.PreserveCaseFormatterConfig.getDefaultInstance()) return this;
      if (other.getForwardReasonPhrase() != false) {
        setForwardReasonPhrase(other.getForwardReasonPhrase());
      }
      if (other.formatterTypeOnEnvoyHeaders_ != 0) {
        setFormatterTypeOnEnvoyHeadersValue(other.getFormatterTypeOnEnvoyHeadersValue());
      }
      this.mergeUnknownFields(other.getUnknownFields());
      onChanged();
      return this;
    }

    @java.lang.Override
    public final boolean isInitialized() {
      return true;
    }

    @java.lang.Override
    public Builder mergeFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 8: {
              forwardReasonPhrase_ = input.readBool();
              bitField0_ |= 0x00000001;
              break;
            } // case 8
            case 16: {
              formatterTypeOnEnvoyHeaders_ = input.readEnum();
              bitField0_ |= 0x00000002;
              break;
            } // case 16
            default: {
              if (!super.parseUnknownField(input, extensionRegistry, tag)) {
                done = true; // was an endgroup tag
              }
              break;
            } // default:
          } // switch (tag)
        } // while (!done)
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.unwrapIOException();
      } finally {
        onChanged();
      } // finally
      return this;
    }
    private int bitField0_;

    private boolean forwardReasonPhrase_ ;
    /**
     * <pre>
     * Allows forwarding reason phrase text.
     * This is off by default, and a standard reason phrase is used for a corresponding HTTP response code.
     * </pre>
     *
     * <code>bool forward_reason_phrase = 1;</code>
     * @return The forwardReasonPhrase.
     */
    @java.lang.Override
    public boolean getForwardReasonPhrase() {
      return forwardReasonPhrase_;
    }
    /**
     * <pre>
     * Allows forwarding reason phrase text.
     * This is off by default, and a standard reason phrase is used for a corresponding HTTP response code.
     * </pre>
     *
     * <code>bool forward_reason_phrase = 1;</code>
     * @param value The forwardReasonPhrase to set.
     * @return This builder for chaining.
     */
    public Builder setForwardReasonPhrase(boolean value) {
      
      forwardReasonPhrase_ = value;
      bitField0_ |= 0x00000001;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * Allows forwarding reason phrase text.
     * This is off by default, and a standard reason phrase is used for a corresponding HTTP response code.
     * </pre>
     *
     * <code>bool forward_reason_phrase = 1;</code>
     * @return This builder for chaining.
     */
    public Builder clearForwardReasonPhrase() {
      bitField0_ = (bitField0_ & ~0x00000001);
      forwardReasonPhrase_ = false;
      onChanged();
      return this;
    }

    private int formatterTypeOnEnvoyHeaders_ = 0;
    /**
     * <pre>
     * Type of formatter to use on headers which are added by Envoy (which are lower case by default).
     * The default type is DEFAULT, use LowerCase on Envoy headers.
     * </pre>
     *
     * <code>.envoy.extensions.http.header_formatters.preserve_case.v3.PreserveCaseFormatterConfig.FormatterTypeOnEnvoyHeaders formatter_type_on_envoy_headers = 2 [(.validate.rules) = { ... }</code>
     * @return The enum numeric value on the wire for formatterTypeOnEnvoyHeaders.
     */
    @java.lang.Override public int getFormatterTypeOnEnvoyHeadersValue() {
      return formatterTypeOnEnvoyHeaders_;
    }
    /**
     * <pre>
     * Type of formatter to use on headers which are added by Envoy (which are lower case by default).
     * The default type is DEFAULT, use LowerCase on Envoy headers.
     * </pre>
     *
     * <code>.envoy.extensions.http.header_formatters.preserve_case.v3.PreserveCaseFormatterConfig.FormatterTypeOnEnvoyHeaders formatter_type_on_envoy_headers = 2 [(.validate.rules) = { ... }</code>
     * @param value The enum numeric value on the wire for formatterTypeOnEnvoyHeaders to set.
     * @return This builder for chaining.
     */
    public Builder setFormatterTypeOnEnvoyHeadersValue(int value) {
      formatterTypeOnEnvoyHeaders_ = value;
      bitField0_ |= 0x00000002;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * Type of formatter to use on headers which are added by Envoy (which are lower case by default).
     * The default type is DEFAULT, use LowerCase on Envoy headers.
     * </pre>
     *
     * <code>.envoy.extensions.http.header_formatters.preserve_case.v3.PreserveCaseFormatterConfig.FormatterTypeOnEnvoyHeaders formatter_type_on_envoy_headers = 2 [(.validate.rules) = { ... }</code>
     * @return The formatterTypeOnEnvoyHeaders.
     */
    @java.lang.Override
    public io.envoyproxy.envoy.extensions.http.header_formatters.preserve_case.v3.PreserveCaseFormatterConfig.FormatterTypeOnEnvoyHeaders getFormatterTypeOnEnvoyHeaders() {
      io.envoyproxy.envoy.extensions.http.header_formatters.preserve_case.v3.PreserveCaseFormatterConfig.FormatterTypeOnEnvoyHeaders result = io.envoyproxy.envoy.extensions.http.header_formatters.preserve_case.v3.PreserveCaseFormatterConfig.FormatterTypeOnEnvoyHeaders.forNumber(formatterTypeOnEnvoyHeaders_);
      return result == null ? io.envoyproxy.envoy.extensions.http.header_formatters.preserve_case.v3.PreserveCaseFormatterConfig.FormatterTypeOnEnvoyHeaders.UNRECOGNIZED : result;
    }
    /**
     * <pre>
     * Type of formatter to use on headers which are added by Envoy (which are lower case by default).
     * The default type is DEFAULT, use LowerCase on Envoy headers.
     * </pre>
     *
     * <code>.envoy.extensions.http.header_formatters.preserve_case.v3.PreserveCaseFormatterConfig.FormatterTypeOnEnvoyHeaders formatter_type_on_envoy_headers = 2 [(.validate.rules) = { ... }</code>
     * @param value The formatterTypeOnEnvoyHeaders to set.
     * @return This builder for chaining.
     */
    public Builder setFormatterTypeOnEnvoyHeaders(io.envoyproxy.envoy.extensions.http.header_formatters.preserve_case.v3.PreserveCaseFormatterConfig.FormatterTypeOnEnvoyHeaders value) {
      if (value == null) {
        throw new NullPointerException();
      }
      bitField0_ |= 0x00000002;
      formatterTypeOnEnvoyHeaders_ = value.getNumber();
      onChanged();
      return this;
    }
    /**
     * <pre>
     * Type of formatter to use on headers which are added by Envoy (which are lower case by default).
     * The default type is DEFAULT, use LowerCase on Envoy headers.
     * </pre>
     *
     * <code>.envoy.extensions.http.header_formatters.preserve_case.v3.PreserveCaseFormatterConfig.FormatterTypeOnEnvoyHeaders formatter_type_on_envoy_headers = 2 [(.validate.rules) = { ... }</code>
     * @return This builder for chaining.
     */
    public Builder clearFormatterTypeOnEnvoyHeaders() {
      bitField0_ = (bitField0_ & ~0x00000002);
      formatterTypeOnEnvoyHeaders_ = 0;
      onChanged();
      return this;
    }
    @java.lang.Override
    public final Builder setUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return super.setUnknownFields(unknownFields);
    }

    @java.lang.Override
    public final Builder mergeUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return super.mergeUnknownFields(unknownFields);
    }


    // @@protoc_insertion_point(builder_scope:envoy.extensions.http.header_formatters.preserve_case.v3.PreserveCaseFormatterConfig)
  }

  // @@protoc_insertion_point(class_scope:envoy.extensions.http.header_formatters.preserve_case.v3.PreserveCaseFormatterConfig)
  private static final io.envoyproxy.envoy.extensions.http.header_formatters.preserve_case.v3.PreserveCaseFormatterConfig DEFAULT_INSTANCE;
  static {
    DEFAULT_INSTANCE = new io.envoyproxy.envoy.extensions.http.header_formatters.preserve_case.v3.PreserveCaseFormatterConfig();
  }

  public static io.envoyproxy.envoy.extensions.http.header_formatters.preserve_case.v3.PreserveCaseFormatterConfig getDefaultInstance() {
    return DEFAULT_INSTANCE;
  }

  private static final com.google.protobuf.Parser<PreserveCaseFormatterConfig>
      PARSER = new com.google.protobuf.AbstractParser<PreserveCaseFormatterConfig>() {
    @java.lang.Override
    public PreserveCaseFormatterConfig parsePartialFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      Builder builder = newBuilder();
      try {
        builder.mergeFrom(input, extensionRegistry);
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(builder.buildPartial());
      } catch (com.google.protobuf.UninitializedMessageException e) {
        throw e.asInvalidProtocolBufferException().setUnfinishedMessage(builder.buildPartial());
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(e)
            .setUnfinishedMessage(builder.buildPartial());
      }
      return builder.buildPartial();
    }
  };

  public static com.google.protobuf.Parser<PreserveCaseFormatterConfig> parser() {
    return PARSER;
  }

  @java.lang.Override
  public com.google.protobuf.Parser<PreserveCaseFormatterConfig> getParserForType() {
    return PARSER;
  }

  @java.lang.Override
  public io.envoyproxy.envoy.extensions.http.header_formatters.preserve_case.v3.PreserveCaseFormatterConfig getDefaultInstanceForType() {
    return DEFAULT_INSTANCE;
  }

}

