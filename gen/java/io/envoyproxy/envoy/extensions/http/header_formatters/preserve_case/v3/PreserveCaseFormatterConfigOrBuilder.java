// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: envoy/extensions/http/header_formatters/preserve_case/v3/preserve_case.proto

package io.envoyproxy.envoy.extensions.http.header_formatters.preserve_case.v3;

public interface PreserveCaseFormatterConfigOrBuilder extends
    // @@protoc_insertion_point(interface_extends:envoy.extensions.http.header_formatters.preserve_case.v3.PreserveCaseFormatterConfig)
    com.google.protobuf.MessageOrBuilder {

  /**
   * <pre>
   * Allows forwarding reason phrase text.
   * This is off by default, and a standard reason phrase is used for a corresponding HTTP response code.
   * </pre>
   *
   * <code>bool forward_reason_phrase = 1;</code>
   * @return The forwardReasonPhrase.
   */
  boolean getForwardReasonPhrase();

  /**
   * <pre>
   * Type of formatter to use on headers which are added by Envoy (which are lower case by default).
   * The default type is DEFAULT, use LowerCase on Envoy headers.
   * </pre>
   *
   * <code>.envoy.extensions.http.header_formatters.preserve_case.v3.PreserveCaseFormatterConfig.FormatterTypeOnEnvoyHeaders formatter_type_on_envoy_headers = 2 [(.validate.rules) = { ... }</code>
   * @return The enum numeric value on the wire for formatterTypeOnEnvoyHeaders.
   */
  int getFormatterTypeOnEnvoyHeadersValue();
  /**
   * <pre>
   * Type of formatter to use on headers which are added by Envoy (which are lower case by default).
   * The default type is DEFAULT, use LowerCase on Envoy headers.
   * </pre>
   *
   * <code>.envoy.extensions.http.header_formatters.preserve_case.v3.PreserveCaseFormatterConfig.FormatterTypeOnEnvoyHeaders formatter_type_on_envoy_headers = 2 [(.validate.rules) = { ... }</code>
   * @return The formatterTypeOnEnvoyHeaders.
   */
  io.envoyproxy.envoy.extensions.http.header_formatters.preserve_case.v3.PreserveCaseFormatterConfig.FormatterTypeOnEnvoyHeaders getFormatterTypeOnEnvoyHeaders();
}
