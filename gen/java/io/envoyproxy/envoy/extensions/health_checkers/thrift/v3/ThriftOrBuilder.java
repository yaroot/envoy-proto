// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: envoy/extensions/health_checkers/thrift/v3/thrift.proto

package io.envoyproxy.envoy.extensions.health_checkers.thrift.v3;

public interface ThriftOrBuilder extends
    // @@protoc_insertion_point(interface_extends:envoy.extensions.health_checkers.thrift.v3.Thrift)
    com.google.protobuf.MessageOrBuilder {

  /**
   * <pre>
   * Specifies the method name that will be set on each health check request dispatched to an upstream host.
   * Note that method name is case sensitive.
   * </pre>
   *
   * <code>string method_name = 1 [(.validate.rules) = { ... }</code>
   * @return The methodName.
   */
  java.lang.String getMethodName();
  /**
   * <pre>
   * Specifies the method name that will be set on each health check request dispatched to an upstream host.
   * Note that method name is case sensitive.
   * </pre>
   *
   * <code>string method_name = 1 [(.validate.rules) = { ... }</code>
   * @return The bytes for methodName.
   */
  com.google.protobuf.ByteString
      getMethodNameBytes();

  /**
   * <pre>
   * Configures the transport type to be used with the health checks. Note that
   * :ref:`AUTO_TRANSPORT&lt;envoy_v3_api_enum_value_extensions.filters.network.thrift_proxy.v3.TransportType.AUTO_TRANSPORT&gt;`
   * is not supported, and we don't honor :ref:`ThriftProtocolOptions&lt;envoy_v3_api_msg_extensions.filters.network.thrift_proxy.v3.ThriftProtocolOptions&gt;`
   * since it's possible to set to :ref:`AUTO_TRANSPORT&lt;envoy_v3_api_enum_value_extensions.filters.network.thrift_proxy.v3.TransportType.AUTO_TRANSPORT&gt;`.
   * [#extension-category: envoy.filters.network]
   * </pre>
   *
   * <code>.envoy.extensions.filters.network.thrift_proxy.v3.TransportType transport = 2 [(.validate.rules) = { ... }</code>
   * @return The enum numeric value on the wire for transport.
   */
  int getTransportValue();
  /**
   * <pre>
   * Configures the transport type to be used with the health checks. Note that
   * :ref:`AUTO_TRANSPORT&lt;envoy_v3_api_enum_value_extensions.filters.network.thrift_proxy.v3.TransportType.AUTO_TRANSPORT&gt;`
   * is not supported, and we don't honor :ref:`ThriftProtocolOptions&lt;envoy_v3_api_msg_extensions.filters.network.thrift_proxy.v3.ThriftProtocolOptions&gt;`
   * since it's possible to set to :ref:`AUTO_TRANSPORT&lt;envoy_v3_api_enum_value_extensions.filters.network.thrift_proxy.v3.TransportType.AUTO_TRANSPORT&gt;`.
   * [#extension-category: envoy.filters.network]
   * </pre>
   *
   * <code>.envoy.extensions.filters.network.thrift_proxy.v3.TransportType transport = 2 [(.validate.rules) = { ... }</code>
   * @return The transport.
   */
  io.envoyproxy.envoy.extensions.filters.network.thrift_proxy.v3.TransportType getTransport();

  /**
   * <pre>
   * Configures the protocol type to be used with the health checks. Note that
   * :ref:`AUTO_PROTOCOL&lt;envoy_v3_api_enum_value_extensions.filters.network.thrift_proxy.v3.ProtocolType.AUTO_PROTOCOL&gt;`
   * and :ref:`TWITTER&lt;envoy_v3_api_enum_value_extensions.filters.network.thrift_proxy.v3.ProtocolType.TWITTER&gt;`
   * are not supported, and we don't honor :ref:`ThriftProtocolOptions&lt;envoy_v3_api_msg_extensions.filters.network.thrift_proxy.v3.ThriftProtocolOptions&gt;`
   * since it's possible to set to :ref:`AUTO_PROTOCOL&lt;envoy_v3_api_enum_value_extensions.filters.network.thrift_proxy.v3.ProtocolType.AUTO_PROTOCOL&gt;`
   * or :ref:`TWITTER&lt;envoy_v3_api_enum_value_extensions.filters.network.thrift_proxy.v3.ProtocolType.TWITTER&gt;`.
   * </pre>
   *
   * <code>.envoy.extensions.filters.network.thrift_proxy.v3.ProtocolType protocol = 3 [(.validate.rules) = { ... }</code>
   * @return The enum numeric value on the wire for protocol.
   */
  int getProtocolValue();
  /**
   * <pre>
   * Configures the protocol type to be used with the health checks. Note that
   * :ref:`AUTO_PROTOCOL&lt;envoy_v3_api_enum_value_extensions.filters.network.thrift_proxy.v3.ProtocolType.AUTO_PROTOCOL&gt;`
   * and :ref:`TWITTER&lt;envoy_v3_api_enum_value_extensions.filters.network.thrift_proxy.v3.ProtocolType.TWITTER&gt;`
   * are not supported, and we don't honor :ref:`ThriftProtocolOptions&lt;envoy_v3_api_msg_extensions.filters.network.thrift_proxy.v3.ThriftProtocolOptions&gt;`
   * since it's possible to set to :ref:`AUTO_PROTOCOL&lt;envoy_v3_api_enum_value_extensions.filters.network.thrift_proxy.v3.ProtocolType.AUTO_PROTOCOL&gt;`
   * or :ref:`TWITTER&lt;envoy_v3_api_enum_value_extensions.filters.network.thrift_proxy.v3.ProtocolType.TWITTER&gt;`.
   * </pre>
   *
   * <code>.envoy.extensions.filters.network.thrift_proxy.v3.ProtocolType protocol = 3 [(.validate.rules) = { ... }</code>
   * @return The protocol.
   */
  io.envoyproxy.envoy.extensions.filters.network.thrift_proxy.v3.ProtocolType getProtocol();
}
