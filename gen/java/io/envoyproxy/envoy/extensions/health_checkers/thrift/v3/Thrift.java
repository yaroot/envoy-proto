// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: envoy/extensions/health_checkers/thrift/v3/thrift.proto

package io.envoyproxy.envoy.extensions.health_checkers.thrift.v3;

/**
 * Protobuf type {@code envoy.extensions.health_checkers.thrift.v3.Thrift}
 */
public final class Thrift extends
    com.google.protobuf.GeneratedMessageV3 implements
    // @@protoc_insertion_point(message_implements:envoy.extensions.health_checkers.thrift.v3.Thrift)
    ThriftOrBuilder {
private static final long serialVersionUID = 0L;
  // Use Thrift.newBuilder() to construct.
  private Thrift(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
    super(builder);
  }
  private Thrift() {
    methodName_ = "";
    transport_ = 0;
    protocol_ = 0;
  }

  @java.lang.Override
  @SuppressWarnings({"unused"})
  protected java.lang.Object newInstance(
      UnusedPrivateParameter unused) {
    return new Thrift();
  }

  @java.lang.Override
  public final com.google.protobuf.UnknownFieldSet
  getUnknownFields() {
    return this.unknownFields;
  }
  public static final com.google.protobuf.Descriptors.Descriptor
      getDescriptor() {
    return io.envoyproxy.envoy.extensions.health_checkers.thrift.v3.ThriftProto.internal_static_envoy_extensions_health_checkers_thrift_v3_Thrift_descriptor;
  }

  @java.lang.Override
  protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internalGetFieldAccessorTable() {
    return io.envoyproxy.envoy.extensions.health_checkers.thrift.v3.ThriftProto.internal_static_envoy_extensions_health_checkers_thrift_v3_Thrift_fieldAccessorTable
        .ensureFieldAccessorsInitialized(
            io.envoyproxy.envoy.extensions.health_checkers.thrift.v3.Thrift.class, io.envoyproxy.envoy.extensions.health_checkers.thrift.v3.Thrift.Builder.class);
  }

  public static final int METHOD_NAME_FIELD_NUMBER = 1;
  @SuppressWarnings("serial")
  private volatile java.lang.Object methodName_ = "";
  /**
   * <pre>
   * Specifies the method name that will be set on each health check request dispatched to an upstream host.
   * Note that method name is case sensitive.
   * </pre>
   *
   * <code>string method_name = 1 [(.validate.rules) = { ... }</code>
   * @return The methodName.
   */
  @java.lang.Override
  public java.lang.String getMethodName() {
    java.lang.Object ref = methodName_;
    if (ref instanceof java.lang.String) {
      return (java.lang.String) ref;
    } else {
      com.google.protobuf.ByteString bs = 
          (com.google.protobuf.ByteString) ref;
      java.lang.String s = bs.toStringUtf8();
      methodName_ = s;
      return s;
    }
  }
  /**
   * <pre>
   * Specifies the method name that will be set on each health check request dispatched to an upstream host.
   * Note that method name is case sensitive.
   * </pre>
   *
   * <code>string method_name = 1 [(.validate.rules) = { ... }</code>
   * @return The bytes for methodName.
   */
  @java.lang.Override
  public com.google.protobuf.ByteString
      getMethodNameBytes() {
    java.lang.Object ref = methodName_;
    if (ref instanceof java.lang.String) {
      com.google.protobuf.ByteString b = 
          com.google.protobuf.ByteString.copyFromUtf8(
              (java.lang.String) ref);
      methodName_ = b;
      return b;
    } else {
      return (com.google.protobuf.ByteString) ref;
    }
  }

  public static final int TRANSPORT_FIELD_NUMBER = 2;
  private int transport_ = 0;
  /**
   * <pre>
   * Configures the transport type to be used with the health checks. Note that
   * :ref:`AUTO_TRANSPORT&lt;envoy_v3_api_enum_value_extensions.filters.network.thrift_proxy.v3.TransportType.AUTO_TRANSPORT&gt;`
   * is not supported, and we don't honor :ref:`ThriftProtocolOptions&lt;envoy_v3_api_msg_extensions.filters.network.thrift_proxy.v3.ThriftProtocolOptions&gt;`
   * since it's possible to set to :ref:`AUTO_TRANSPORT&lt;envoy_v3_api_enum_value_extensions.filters.network.thrift_proxy.v3.TransportType.AUTO_TRANSPORT&gt;`.
   * [#extension-category: envoy.filters.network]
   * </pre>
   *
   * <code>.envoy.extensions.filters.network.thrift_proxy.v3.TransportType transport = 2 [(.validate.rules) = { ... }</code>
   * @return The enum numeric value on the wire for transport.
   */
  @java.lang.Override public int getTransportValue() {
    return transport_;
  }
  /**
   * <pre>
   * Configures the transport type to be used with the health checks. Note that
   * :ref:`AUTO_TRANSPORT&lt;envoy_v3_api_enum_value_extensions.filters.network.thrift_proxy.v3.TransportType.AUTO_TRANSPORT&gt;`
   * is not supported, and we don't honor :ref:`ThriftProtocolOptions&lt;envoy_v3_api_msg_extensions.filters.network.thrift_proxy.v3.ThriftProtocolOptions&gt;`
   * since it's possible to set to :ref:`AUTO_TRANSPORT&lt;envoy_v3_api_enum_value_extensions.filters.network.thrift_proxy.v3.TransportType.AUTO_TRANSPORT&gt;`.
   * [#extension-category: envoy.filters.network]
   * </pre>
   *
   * <code>.envoy.extensions.filters.network.thrift_proxy.v3.TransportType transport = 2 [(.validate.rules) = { ... }</code>
   * @return The transport.
   */
  @java.lang.Override public io.envoyproxy.envoy.extensions.filters.network.thrift_proxy.v3.TransportType getTransport() {
    io.envoyproxy.envoy.extensions.filters.network.thrift_proxy.v3.TransportType result = io.envoyproxy.envoy.extensions.filters.network.thrift_proxy.v3.TransportType.forNumber(transport_);
    return result == null ? io.envoyproxy.envoy.extensions.filters.network.thrift_proxy.v3.TransportType.UNRECOGNIZED : result;
  }

  public static final int PROTOCOL_FIELD_NUMBER = 3;
  private int protocol_ = 0;
  /**
   * <pre>
   * Configures the protocol type to be used with the health checks. Note that
   * :ref:`AUTO_PROTOCOL&lt;envoy_v3_api_enum_value_extensions.filters.network.thrift_proxy.v3.ProtocolType.AUTO_PROTOCOL&gt;`
   * and :ref:`TWITTER&lt;envoy_v3_api_enum_value_extensions.filters.network.thrift_proxy.v3.ProtocolType.TWITTER&gt;`
   * are not supported, and we don't honor :ref:`ThriftProtocolOptions&lt;envoy_v3_api_msg_extensions.filters.network.thrift_proxy.v3.ThriftProtocolOptions&gt;`
   * since it's possible to set to :ref:`AUTO_PROTOCOL&lt;envoy_v3_api_enum_value_extensions.filters.network.thrift_proxy.v3.ProtocolType.AUTO_PROTOCOL&gt;`
   * or :ref:`TWITTER&lt;envoy_v3_api_enum_value_extensions.filters.network.thrift_proxy.v3.ProtocolType.TWITTER&gt;`.
   * </pre>
   *
   * <code>.envoy.extensions.filters.network.thrift_proxy.v3.ProtocolType protocol = 3 [(.validate.rules) = { ... }</code>
   * @return The enum numeric value on the wire for protocol.
   */
  @java.lang.Override public int getProtocolValue() {
    return protocol_;
  }
  /**
   * <pre>
   * Configures the protocol type to be used with the health checks. Note that
   * :ref:`AUTO_PROTOCOL&lt;envoy_v3_api_enum_value_extensions.filters.network.thrift_proxy.v3.ProtocolType.AUTO_PROTOCOL&gt;`
   * and :ref:`TWITTER&lt;envoy_v3_api_enum_value_extensions.filters.network.thrift_proxy.v3.ProtocolType.TWITTER&gt;`
   * are not supported, and we don't honor :ref:`ThriftProtocolOptions&lt;envoy_v3_api_msg_extensions.filters.network.thrift_proxy.v3.ThriftProtocolOptions&gt;`
   * since it's possible to set to :ref:`AUTO_PROTOCOL&lt;envoy_v3_api_enum_value_extensions.filters.network.thrift_proxy.v3.ProtocolType.AUTO_PROTOCOL&gt;`
   * or :ref:`TWITTER&lt;envoy_v3_api_enum_value_extensions.filters.network.thrift_proxy.v3.ProtocolType.TWITTER&gt;`.
   * </pre>
   *
   * <code>.envoy.extensions.filters.network.thrift_proxy.v3.ProtocolType protocol = 3 [(.validate.rules) = { ... }</code>
   * @return The protocol.
   */
  @java.lang.Override public io.envoyproxy.envoy.extensions.filters.network.thrift_proxy.v3.ProtocolType getProtocol() {
    io.envoyproxy.envoy.extensions.filters.network.thrift_proxy.v3.ProtocolType result = io.envoyproxy.envoy.extensions.filters.network.thrift_proxy.v3.ProtocolType.forNumber(protocol_);
    return result == null ? io.envoyproxy.envoy.extensions.filters.network.thrift_proxy.v3.ProtocolType.UNRECOGNIZED : result;
  }

  private byte memoizedIsInitialized = -1;
  @java.lang.Override
  public final boolean isInitialized() {
    byte isInitialized = memoizedIsInitialized;
    if (isInitialized == 1) return true;
    if (isInitialized == 0) return false;

    memoizedIsInitialized = 1;
    return true;
  }

  @java.lang.Override
  public void writeTo(com.google.protobuf.CodedOutputStream output)
                      throws java.io.IOException {
    if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(methodName_)) {
      com.google.protobuf.GeneratedMessageV3.writeString(output, 1, methodName_);
    }
    if (transport_ != io.envoyproxy.envoy.extensions.filters.network.thrift_proxy.v3.TransportType.AUTO_TRANSPORT.getNumber()) {
      output.writeEnum(2, transport_);
    }
    if (protocol_ != io.envoyproxy.envoy.extensions.filters.network.thrift_proxy.v3.ProtocolType.AUTO_PROTOCOL.getNumber()) {
      output.writeEnum(3, protocol_);
    }
    getUnknownFields().writeTo(output);
  }

  @java.lang.Override
  public int getSerializedSize() {
    int size = memoizedSize;
    if (size != -1) return size;

    size = 0;
    if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(methodName_)) {
      size += com.google.protobuf.GeneratedMessageV3.computeStringSize(1, methodName_);
    }
    if (transport_ != io.envoyproxy.envoy.extensions.filters.network.thrift_proxy.v3.TransportType.AUTO_TRANSPORT.getNumber()) {
      size += com.google.protobuf.CodedOutputStream
        .computeEnumSize(2, transport_);
    }
    if (protocol_ != io.envoyproxy.envoy.extensions.filters.network.thrift_proxy.v3.ProtocolType.AUTO_PROTOCOL.getNumber()) {
      size += com.google.protobuf.CodedOutputStream
        .computeEnumSize(3, protocol_);
    }
    size += getUnknownFields().getSerializedSize();
    memoizedSize = size;
    return size;
  }

  @java.lang.Override
  public boolean equals(final java.lang.Object obj) {
    if (obj == this) {
     return true;
    }
    if (!(obj instanceof io.envoyproxy.envoy.extensions.health_checkers.thrift.v3.Thrift)) {
      return super.equals(obj);
    }
    io.envoyproxy.envoy.extensions.health_checkers.thrift.v3.Thrift other = (io.envoyproxy.envoy.extensions.health_checkers.thrift.v3.Thrift) obj;

    if (!getMethodName()
        .equals(other.getMethodName())) return false;
    if (transport_ != other.transport_) return false;
    if (protocol_ != other.protocol_) return false;
    if (!getUnknownFields().equals(other.getUnknownFields())) return false;
    return true;
  }

  @java.lang.Override
  public int hashCode() {
    if (memoizedHashCode != 0) {
      return memoizedHashCode;
    }
    int hash = 41;
    hash = (19 * hash) + getDescriptor().hashCode();
    hash = (37 * hash) + METHOD_NAME_FIELD_NUMBER;
    hash = (53 * hash) + getMethodName().hashCode();
    hash = (37 * hash) + TRANSPORT_FIELD_NUMBER;
    hash = (53 * hash) + transport_;
    hash = (37 * hash) + PROTOCOL_FIELD_NUMBER;
    hash = (53 * hash) + protocol_;
    hash = (29 * hash) + getUnknownFields().hashCode();
    memoizedHashCode = hash;
    return hash;
  }

  public static io.envoyproxy.envoy.extensions.health_checkers.thrift.v3.Thrift parseFrom(
      java.nio.ByteBuffer data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static io.envoyproxy.envoy.extensions.health_checkers.thrift.v3.Thrift parseFrom(
      java.nio.ByteBuffer data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static io.envoyproxy.envoy.extensions.health_checkers.thrift.v3.Thrift parseFrom(
      com.google.protobuf.ByteString data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static io.envoyproxy.envoy.extensions.health_checkers.thrift.v3.Thrift parseFrom(
      com.google.protobuf.ByteString data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static io.envoyproxy.envoy.extensions.health_checkers.thrift.v3.Thrift parseFrom(byte[] data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static io.envoyproxy.envoy.extensions.health_checkers.thrift.v3.Thrift parseFrom(
      byte[] data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static io.envoyproxy.envoy.extensions.health_checkers.thrift.v3.Thrift parseFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input);
  }
  public static io.envoyproxy.envoy.extensions.health_checkers.thrift.v3.Thrift parseFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input, extensionRegistry);
  }
  public static io.envoyproxy.envoy.extensions.health_checkers.thrift.v3.Thrift parseDelimitedFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseDelimitedWithIOException(PARSER, input);
  }
  public static io.envoyproxy.envoy.extensions.health_checkers.thrift.v3.Thrift parseDelimitedFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
  }
  public static io.envoyproxy.envoy.extensions.health_checkers.thrift.v3.Thrift parseFrom(
      com.google.protobuf.CodedInputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input);
  }
  public static io.envoyproxy.envoy.extensions.health_checkers.thrift.v3.Thrift parseFrom(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input, extensionRegistry);
  }

  @java.lang.Override
  public Builder newBuilderForType() { return newBuilder(); }
  public static Builder newBuilder() {
    return DEFAULT_INSTANCE.toBuilder();
  }
  public static Builder newBuilder(io.envoyproxy.envoy.extensions.health_checkers.thrift.v3.Thrift prototype) {
    return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
  }
  @java.lang.Override
  public Builder toBuilder() {
    return this == DEFAULT_INSTANCE
        ? new Builder() : new Builder().mergeFrom(this);
  }

  @java.lang.Override
  protected Builder newBuilderForType(
      com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
    Builder builder = new Builder(parent);
    return builder;
  }
  /**
   * Protobuf type {@code envoy.extensions.health_checkers.thrift.v3.Thrift}
   */
  public static final class Builder extends
      com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
      // @@protoc_insertion_point(builder_implements:envoy.extensions.health_checkers.thrift.v3.Thrift)
      io.envoyproxy.envoy.extensions.health_checkers.thrift.v3.ThriftOrBuilder {
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return io.envoyproxy.envoy.extensions.health_checkers.thrift.v3.ThriftProto.internal_static_envoy_extensions_health_checkers_thrift_v3_Thrift_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return io.envoyproxy.envoy.extensions.health_checkers.thrift.v3.ThriftProto.internal_static_envoy_extensions_health_checkers_thrift_v3_Thrift_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              io.envoyproxy.envoy.extensions.health_checkers.thrift.v3.Thrift.class, io.envoyproxy.envoy.extensions.health_checkers.thrift.v3.Thrift.Builder.class);
    }

    // Construct using io.envoyproxy.envoy.extensions.health_checkers.thrift.v3.Thrift.newBuilder()
    private Builder() {

    }

    private Builder(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      super(parent);

    }
    @java.lang.Override
    public Builder clear() {
      super.clear();
      bitField0_ = 0;
      methodName_ = "";
      transport_ = 0;
      protocol_ = 0;
      return this;
    }

    @java.lang.Override
    public com.google.protobuf.Descriptors.Descriptor
        getDescriptorForType() {
      return io.envoyproxy.envoy.extensions.health_checkers.thrift.v3.ThriftProto.internal_static_envoy_extensions_health_checkers_thrift_v3_Thrift_descriptor;
    }

    @java.lang.Override
    public io.envoyproxy.envoy.extensions.health_checkers.thrift.v3.Thrift getDefaultInstanceForType() {
      return io.envoyproxy.envoy.extensions.health_checkers.thrift.v3.Thrift.getDefaultInstance();
    }

    @java.lang.Override
    public io.envoyproxy.envoy.extensions.health_checkers.thrift.v3.Thrift build() {
      io.envoyproxy.envoy.extensions.health_checkers.thrift.v3.Thrift result = buildPartial();
      if (!result.isInitialized()) {
        throw newUninitializedMessageException(result);
      }
      return result;
    }

    @java.lang.Override
    public io.envoyproxy.envoy.extensions.health_checkers.thrift.v3.Thrift buildPartial() {
      io.envoyproxy.envoy.extensions.health_checkers.thrift.v3.Thrift result = new io.envoyproxy.envoy.extensions.health_checkers.thrift.v3.Thrift(this);
      if (bitField0_ != 0) { buildPartial0(result); }
      onBuilt();
      return result;
    }

    private void buildPartial0(io.envoyproxy.envoy.extensions.health_checkers.thrift.v3.Thrift result) {
      int from_bitField0_ = bitField0_;
      if (((from_bitField0_ & 0x00000001) != 0)) {
        result.methodName_ = methodName_;
      }
      if (((from_bitField0_ & 0x00000002) != 0)) {
        result.transport_ = transport_;
      }
      if (((from_bitField0_ & 0x00000004) != 0)) {
        result.protocol_ = protocol_;
      }
    }

    @java.lang.Override
    public Builder clone() {
      return super.clone();
    }
    @java.lang.Override
    public Builder setField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        java.lang.Object value) {
      return super.setField(field, value);
    }
    @java.lang.Override
    public Builder clearField(
        com.google.protobuf.Descriptors.FieldDescriptor field) {
      return super.clearField(field);
    }
    @java.lang.Override
    public Builder clearOneof(
        com.google.protobuf.Descriptors.OneofDescriptor oneof) {
      return super.clearOneof(oneof);
    }
    @java.lang.Override
    public Builder setRepeatedField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        int index, java.lang.Object value) {
      return super.setRepeatedField(field, index, value);
    }
    @java.lang.Override
    public Builder addRepeatedField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        java.lang.Object value) {
      return super.addRepeatedField(field, value);
    }
    @java.lang.Override
    public Builder mergeFrom(com.google.protobuf.Message other) {
      if (other instanceof io.envoyproxy.envoy.extensions.health_checkers.thrift.v3.Thrift) {
        return mergeFrom((io.envoyproxy.envoy.extensions.health_checkers.thrift.v3.Thrift)other);
      } else {
        super.mergeFrom(other);
        return this;
      }
    }

    public Builder mergeFrom(io.envoyproxy.envoy.extensions.health_checkers.thrift.v3.Thrift other) {
      if (other == io.envoyproxy.envoy.extensions.health_checkers.thrift.v3.Thrift.getDefaultInstance()) return this;
      if (!other.getMethodName().isEmpty()) {
        methodName_ = other.methodName_;
        bitField0_ |= 0x00000001;
        onChanged();
      }
      if (other.transport_ != 0) {
        setTransportValue(other.getTransportValue());
      }
      if (other.protocol_ != 0) {
        setProtocolValue(other.getProtocolValue());
      }
      this.mergeUnknownFields(other.getUnknownFields());
      onChanged();
      return this;
    }

    @java.lang.Override
    public final boolean isInitialized() {
      return true;
    }

    @java.lang.Override
    public Builder mergeFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 10: {
              methodName_ = input.readStringRequireUtf8();
              bitField0_ |= 0x00000001;
              break;
            } // case 10
            case 16: {
              transport_ = input.readEnum();
              bitField0_ |= 0x00000002;
              break;
            } // case 16
            case 24: {
              protocol_ = input.readEnum();
              bitField0_ |= 0x00000004;
              break;
            } // case 24
            default: {
              if (!super.parseUnknownField(input, extensionRegistry, tag)) {
                done = true; // was an endgroup tag
              }
              break;
            } // default:
          } // switch (tag)
        } // while (!done)
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.unwrapIOException();
      } finally {
        onChanged();
      } // finally
      return this;
    }
    private int bitField0_;

    private java.lang.Object methodName_ = "";
    /**
     * <pre>
     * Specifies the method name that will be set on each health check request dispatched to an upstream host.
     * Note that method name is case sensitive.
     * </pre>
     *
     * <code>string method_name = 1 [(.validate.rules) = { ... }</code>
     * @return The methodName.
     */
    public java.lang.String getMethodName() {
      java.lang.Object ref = methodName_;
      if (!(ref instanceof java.lang.String)) {
        com.google.protobuf.ByteString bs =
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        methodName_ = s;
        return s;
      } else {
        return (java.lang.String) ref;
      }
    }
    /**
     * <pre>
     * Specifies the method name that will be set on each health check request dispatched to an upstream host.
     * Note that method name is case sensitive.
     * </pre>
     *
     * <code>string method_name = 1 [(.validate.rules) = { ... }</code>
     * @return The bytes for methodName.
     */
    public com.google.protobuf.ByteString
        getMethodNameBytes() {
      java.lang.Object ref = methodName_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        methodName_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }
    /**
     * <pre>
     * Specifies the method name that will be set on each health check request dispatched to an upstream host.
     * Note that method name is case sensitive.
     * </pre>
     *
     * <code>string method_name = 1 [(.validate.rules) = { ... }</code>
     * @param value The methodName to set.
     * @return This builder for chaining.
     */
    public Builder setMethodName(
        java.lang.String value) {
      if (value == null) { throw new NullPointerException(); }
      methodName_ = value;
      bitField0_ |= 0x00000001;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * Specifies the method name that will be set on each health check request dispatched to an upstream host.
     * Note that method name is case sensitive.
     * </pre>
     *
     * <code>string method_name = 1 [(.validate.rules) = { ... }</code>
     * @return This builder for chaining.
     */
    public Builder clearMethodName() {
      methodName_ = getDefaultInstance().getMethodName();
      bitField0_ = (bitField0_ & ~0x00000001);
      onChanged();
      return this;
    }
    /**
     * <pre>
     * Specifies the method name that will be set on each health check request dispatched to an upstream host.
     * Note that method name is case sensitive.
     * </pre>
     *
     * <code>string method_name = 1 [(.validate.rules) = { ... }</code>
     * @param value The bytes for methodName to set.
     * @return This builder for chaining.
     */
    public Builder setMethodNameBytes(
        com.google.protobuf.ByteString value) {
      if (value == null) { throw new NullPointerException(); }
      checkByteStringIsUtf8(value);
      methodName_ = value;
      bitField0_ |= 0x00000001;
      onChanged();
      return this;
    }

    private int transport_ = 0;
    /**
     * <pre>
     * Configures the transport type to be used with the health checks. Note that
     * :ref:`AUTO_TRANSPORT&lt;envoy_v3_api_enum_value_extensions.filters.network.thrift_proxy.v3.TransportType.AUTO_TRANSPORT&gt;`
     * is not supported, and we don't honor :ref:`ThriftProtocolOptions&lt;envoy_v3_api_msg_extensions.filters.network.thrift_proxy.v3.ThriftProtocolOptions&gt;`
     * since it's possible to set to :ref:`AUTO_TRANSPORT&lt;envoy_v3_api_enum_value_extensions.filters.network.thrift_proxy.v3.TransportType.AUTO_TRANSPORT&gt;`.
     * [#extension-category: envoy.filters.network]
     * </pre>
     *
     * <code>.envoy.extensions.filters.network.thrift_proxy.v3.TransportType transport = 2 [(.validate.rules) = { ... }</code>
     * @return The enum numeric value on the wire for transport.
     */
    @java.lang.Override public int getTransportValue() {
      return transport_;
    }
    /**
     * <pre>
     * Configures the transport type to be used with the health checks. Note that
     * :ref:`AUTO_TRANSPORT&lt;envoy_v3_api_enum_value_extensions.filters.network.thrift_proxy.v3.TransportType.AUTO_TRANSPORT&gt;`
     * is not supported, and we don't honor :ref:`ThriftProtocolOptions&lt;envoy_v3_api_msg_extensions.filters.network.thrift_proxy.v3.ThriftProtocolOptions&gt;`
     * since it's possible to set to :ref:`AUTO_TRANSPORT&lt;envoy_v3_api_enum_value_extensions.filters.network.thrift_proxy.v3.TransportType.AUTO_TRANSPORT&gt;`.
     * [#extension-category: envoy.filters.network]
     * </pre>
     *
     * <code>.envoy.extensions.filters.network.thrift_proxy.v3.TransportType transport = 2 [(.validate.rules) = { ... }</code>
     * @param value The enum numeric value on the wire for transport to set.
     * @return This builder for chaining.
     */
    public Builder setTransportValue(int value) {
      transport_ = value;
      bitField0_ |= 0x00000002;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * Configures the transport type to be used with the health checks. Note that
     * :ref:`AUTO_TRANSPORT&lt;envoy_v3_api_enum_value_extensions.filters.network.thrift_proxy.v3.TransportType.AUTO_TRANSPORT&gt;`
     * is not supported, and we don't honor :ref:`ThriftProtocolOptions&lt;envoy_v3_api_msg_extensions.filters.network.thrift_proxy.v3.ThriftProtocolOptions&gt;`
     * since it's possible to set to :ref:`AUTO_TRANSPORT&lt;envoy_v3_api_enum_value_extensions.filters.network.thrift_proxy.v3.TransportType.AUTO_TRANSPORT&gt;`.
     * [#extension-category: envoy.filters.network]
     * </pre>
     *
     * <code>.envoy.extensions.filters.network.thrift_proxy.v3.TransportType transport = 2 [(.validate.rules) = { ... }</code>
     * @return The transport.
     */
    @java.lang.Override
    public io.envoyproxy.envoy.extensions.filters.network.thrift_proxy.v3.TransportType getTransport() {
      io.envoyproxy.envoy.extensions.filters.network.thrift_proxy.v3.TransportType result = io.envoyproxy.envoy.extensions.filters.network.thrift_proxy.v3.TransportType.forNumber(transport_);
      return result == null ? io.envoyproxy.envoy.extensions.filters.network.thrift_proxy.v3.TransportType.UNRECOGNIZED : result;
    }
    /**
     * <pre>
     * Configures the transport type to be used with the health checks. Note that
     * :ref:`AUTO_TRANSPORT&lt;envoy_v3_api_enum_value_extensions.filters.network.thrift_proxy.v3.TransportType.AUTO_TRANSPORT&gt;`
     * is not supported, and we don't honor :ref:`ThriftProtocolOptions&lt;envoy_v3_api_msg_extensions.filters.network.thrift_proxy.v3.ThriftProtocolOptions&gt;`
     * since it's possible to set to :ref:`AUTO_TRANSPORT&lt;envoy_v3_api_enum_value_extensions.filters.network.thrift_proxy.v3.TransportType.AUTO_TRANSPORT&gt;`.
     * [#extension-category: envoy.filters.network]
     * </pre>
     *
     * <code>.envoy.extensions.filters.network.thrift_proxy.v3.TransportType transport = 2 [(.validate.rules) = { ... }</code>
     * @param value The transport to set.
     * @return This builder for chaining.
     */
    public Builder setTransport(io.envoyproxy.envoy.extensions.filters.network.thrift_proxy.v3.TransportType value) {
      if (value == null) {
        throw new NullPointerException();
      }
      bitField0_ |= 0x00000002;
      transport_ = value.getNumber();
      onChanged();
      return this;
    }
    /**
     * <pre>
     * Configures the transport type to be used with the health checks. Note that
     * :ref:`AUTO_TRANSPORT&lt;envoy_v3_api_enum_value_extensions.filters.network.thrift_proxy.v3.TransportType.AUTO_TRANSPORT&gt;`
     * is not supported, and we don't honor :ref:`ThriftProtocolOptions&lt;envoy_v3_api_msg_extensions.filters.network.thrift_proxy.v3.ThriftProtocolOptions&gt;`
     * since it's possible to set to :ref:`AUTO_TRANSPORT&lt;envoy_v3_api_enum_value_extensions.filters.network.thrift_proxy.v3.TransportType.AUTO_TRANSPORT&gt;`.
     * [#extension-category: envoy.filters.network]
     * </pre>
     *
     * <code>.envoy.extensions.filters.network.thrift_proxy.v3.TransportType transport = 2 [(.validate.rules) = { ... }</code>
     * @return This builder for chaining.
     */
    public Builder clearTransport() {
      bitField0_ = (bitField0_ & ~0x00000002);
      transport_ = 0;
      onChanged();
      return this;
    }

    private int protocol_ = 0;
    /**
     * <pre>
     * Configures the protocol type to be used with the health checks. Note that
     * :ref:`AUTO_PROTOCOL&lt;envoy_v3_api_enum_value_extensions.filters.network.thrift_proxy.v3.ProtocolType.AUTO_PROTOCOL&gt;`
     * and :ref:`TWITTER&lt;envoy_v3_api_enum_value_extensions.filters.network.thrift_proxy.v3.ProtocolType.TWITTER&gt;`
     * are not supported, and we don't honor :ref:`ThriftProtocolOptions&lt;envoy_v3_api_msg_extensions.filters.network.thrift_proxy.v3.ThriftProtocolOptions&gt;`
     * since it's possible to set to :ref:`AUTO_PROTOCOL&lt;envoy_v3_api_enum_value_extensions.filters.network.thrift_proxy.v3.ProtocolType.AUTO_PROTOCOL&gt;`
     * or :ref:`TWITTER&lt;envoy_v3_api_enum_value_extensions.filters.network.thrift_proxy.v3.ProtocolType.TWITTER&gt;`.
     * </pre>
     *
     * <code>.envoy.extensions.filters.network.thrift_proxy.v3.ProtocolType protocol = 3 [(.validate.rules) = { ... }</code>
     * @return The enum numeric value on the wire for protocol.
     */
    @java.lang.Override public int getProtocolValue() {
      return protocol_;
    }
    /**
     * <pre>
     * Configures the protocol type to be used with the health checks. Note that
     * :ref:`AUTO_PROTOCOL&lt;envoy_v3_api_enum_value_extensions.filters.network.thrift_proxy.v3.ProtocolType.AUTO_PROTOCOL&gt;`
     * and :ref:`TWITTER&lt;envoy_v3_api_enum_value_extensions.filters.network.thrift_proxy.v3.ProtocolType.TWITTER&gt;`
     * are not supported, and we don't honor :ref:`ThriftProtocolOptions&lt;envoy_v3_api_msg_extensions.filters.network.thrift_proxy.v3.ThriftProtocolOptions&gt;`
     * since it's possible to set to :ref:`AUTO_PROTOCOL&lt;envoy_v3_api_enum_value_extensions.filters.network.thrift_proxy.v3.ProtocolType.AUTO_PROTOCOL&gt;`
     * or :ref:`TWITTER&lt;envoy_v3_api_enum_value_extensions.filters.network.thrift_proxy.v3.ProtocolType.TWITTER&gt;`.
     * </pre>
     *
     * <code>.envoy.extensions.filters.network.thrift_proxy.v3.ProtocolType protocol = 3 [(.validate.rules) = { ... }</code>
     * @param value The enum numeric value on the wire for protocol to set.
     * @return This builder for chaining.
     */
    public Builder setProtocolValue(int value) {
      protocol_ = value;
      bitField0_ |= 0x00000004;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * Configures the protocol type to be used with the health checks. Note that
     * :ref:`AUTO_PROTOCOL&lt;envoy_v3_api_enum_value_extensions.filters.network.thrift_proxy.v3.ProtocolType.AUTO_PROTOCOL&gt;`
     * and :ref:`TWITTER&lt;envoy_v3_api_enum_value_extensions.filters.network.thrift_proxy.v3.ProtocolType.TWITTER&gt;`
     * are not supported, and we don't honor :ref:`ThriftProtocolOptions&lt;envoy_v3_api_msg_extensions.filters.network.thrift_proxy.v3.ThriftProtocolOptions&gt;`
     * since it's possible to set to :ref:`AUTO_PROTOCOL&lt;envoy_v3_api_enum_value_extensions.filters.network.thrift_proxy.v3.ProtocolType.AUTO_PROTOCOL&gt;`
     * or :ref:`TWITTER&lt;envoy_v3_api_enum_value_extensions.filters.network.thrift_proxy.v3.ProtocolType.TWITTER&gt;`.
     * </pre>
     *
     * <code>.envoy.extensions.filters.network.thrift_proxy.v3.ProtocolType protocol = 3 [(.validate.rules) = { ... }</code>
     * @return The protocol.
     */
    @java.lang.Override
    public io.envoyproxy.envoy.extensions.filters.network.thrift_proxy.v3.ProtocolType getProtocol() {
      io.envoyproxy.envoy.extensions.filters.network.thrift_proxy.v3.ProtocolType result = io.envoyproxy.envoy.extensions.filters.network.thrift_proxy.v3.ProtocolType.forNumber(protocol_);
      return result == null ? io.envoyproxy.envoy.extensions.filters.network.thrift_proxy.v3.ProtocolType.UNRECOGNIZED : result;
    }
    /**
     * <pre>
     * Configures the protocol type to be used with the health checks. Note that
     * :ref:`AUTO_PROTOCOL&lt;envoy_v3_api_enum_value_extensions.filters.network.thrift_proxy.v3.ProtocolType.AUTO_PROTOCOL&gt;`
     * and :ref:`TWITTER&lt;envoy_v3_api_enum_value_extensions.filters.network.thrift_proxy.v3.ProtocolType.TWITTER&gt;`
     * are not supported, and we don't honor :ref:`ThriftProtocolOptions&lt;envoy_v3_api_msg_extensions.filters.network.thrift_proxy.v3.ThriftProtocolOptions&gt;`
     * since it's possible to set to :ref:`AUTO_PROTOCOL&lt;envoy_v3_api_enum_value_extensions.filters.network.thrift_proxy.v3.ProtocolType.AUTO_PROTOCOL&gt;`
     * or :ref:`TWITTER&lt;envoy_v3_api_enum_value_extensions.filters.network.thrift_proxy.v3.ProtocolType.TWITTER&gt;`.
     * </pre>
     *
     * <code>.envoy.extensions.filters.network.thrift_proxy.v3.ProtocolType protocol = 3 [(.validate.rules) = { ... }</code>
     * @param value The protocol to set.
     * @return This builder for chaining.
     */
    public Builder setProtocol(io.envoyproxy.envoy.extensions.filters.network.thrift_proxy.v3.ProtocolType value) {
      if (value == null) {
        throw new NullPointerException();
      }
      bitField0_ |= 0x00000004;
      protocol_ = value.getNumber();
      onChanged();
      return this;
    }
    /**
     * <pre>
     * Configures the protocol type to be used with the health checks. Note that
     * :ref:`AUTO_PROTOCOL&lt;envoy_v3_api_enum_value_extensions.filters.network.thrift_proxy.v3.ProtocolType.AUTO_PROTOCOL&gt;`
     * and :ref:`TWITTER&lt;envoy_v3_api_enum_value_extensions.filters.network.thrift_proxy.v3.ProtocolType.TWITTER&gt;`
     * are not supported, and we don't honor :ref:`ThriftProtocolOptions&lt;envoy_v3_api_msg_extensions.filters.network.thrift_proxy.v3.ThriftProtocolOptions&gt;`
     * since it's possible to set to :ref:`AUTO_PROTOCOL&lt;envoy_v3_api_enum_value_extensions.filters.network.thrift_proxy.v3.ProtocolType.AUTO_PROTOCOL&gt;`
     * or :ref:`TWITTER&lt;envoy_v3_api_enum_value_extensions.filters.network.thrift_proxy.v3.ProtocolType.TWITTER&gt;`.
     * </pre>
     *
     * <code>.envoy.extensions.filters.network.thrift_proxy.v3.ProtocolType protocol = 3 [(.validate.rules) = { ... }</code>
     * @return This builder for chaining.
     */
    public Builder clearProtocol() {
      bitField0_ = (bitField0_ & ~0x00000004);
      protocol_ = 0;
      onChanged();
      return this;
    }
    @java.lang.Override
    public final Builder setUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return super.setUnknownFields(unknownFields);
    }

    @java.lang.Override
    public final Builder mergeUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return super.mergeUnknownFields(unknownFields);
    }


    // @@protoc_insertion_point(builder_scope:envoy.extensions.health_checkers.thrift.v3.Thrift)
  }

  // @@protoc_insertion_point(class_scope:envoy.extensions.health_checkers.thrift.v3.Thrift)
  private static final io.envoyproxy.envoy.extensions.health_checkers.thrift.v3.Thrift DEFAULT_INSTANCE;
  static {
    DEFAULT_INSTANCE = new io.envoyproxy.envoy.extensions.health_checkers.thrift.v3.Thrift();
  }

  public static io.envoyproxy.envoy.extensions.health_checkers.thrift.v3.Thrift getDefaultInstance() {
    return DEFAULT_INSTANCE;
  }

  private static final com.google.protobuf.Parser<Thrift>
      PARSER = new com.google.protobuf.AbstractParser<Thrift>() {
    @java.lang.Override
    public Thrift parsePartialFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      Builder builder = newBuilder();
      try {
        builder.mergeFrom(input, extensionRegistry);
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(builder.buildPartial());
      } catch (com.google.protobuf.UninitializedMessageException e) {
        throw e.asInvalidProtocolBufferException().setUnfinishedMessage(builder.buildPartial());
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(e)
            .setUnfinishedMessage(builder.buildPartial());
      }
      return builder.buildPartial();
    }
  };

  public static com.google.protobuf.Parser<Thrift> parser() {
    return PARSER;
  }

  @java.lang.Override
  public com.google.protobuf.Parser<Thrift> getParserForType() {
    return PARSER;
  }

  @java.lang.Override
  public io.envoyproxy.envoy.extensions.health_checkers.thrift.v3.Thrift getDefaultInstanceForType() {
    return DEFAULT_INSTANCE;
  }

}

