// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: envoy/extensions/transport_sockets/quic/v3/quic_transport.proto

package io.envoyproxy.envoy.extensions.transport_sockets.quic.v3;

public interface QuicDownstreamTransportOrBuilder extends
    // @@protoc_insertion_point(interface_extends:envoy.extensions.transport_sockets.quic.v3.QuicDownstreamTransport)
    com.google.protobuf.MessageOrBuilder {

  /**
   * <code>.envoy.extensions.transport_sockets.tls.v3.DownstreamTlsContext downstream_tls_context = 1 [(.validate.rules) = { ... }</code>
   * @return Whether the downstreamTlsContext field is set.
   */
  boolean hasDownstreamTlsContext();
  /**
   * <code>.envoy.extensions.transport_sockets.tls.v3.DownstreamTlsContext downstream_tls_context = 1 [(.validate.rules) = { ... }</code>
   * @return The downstreamTlsContext.
   */
  io.envoyproxy.envoy.extensions.transport_sockets.tls.v3.DownstreamTlsContext getDownstreamTlsContext();
  /**
   * <code>.envoy.extensions.transport_sockets.tls.v3.DownstreamTlsContext downstream_tls_context = 1 [(.validate.rules) = { ... }</code>
   */
  io.envoyproxy.envoy.extensions.transport_sockets.tls.v3.DownstreamTlsContextOrBuilder getDownstreamTlsContextOrBuilder();

  /**
   * <pre>
   * If false, QUIC will tell TLS to reject any early data and to stop issuing 0-RTT credentials with resumption session tickets. This will prevent clients from sending 0-RTT requests.
   * Default to true.
   * </pre>
   *
   * <code>.google.protobuf.BoolValue enable_early_data = 2;</code>
   * @return Whether the enableEarlyData field is set.
   */
  boolean hasEnableEarlyData();
  /**
   * <pre>
   * If false, QUIC will tell TLS to reject any early data and to stop issuing 0-RTT credentials with resumption session tickets. This will prevent clients from sending 0-RTT requests.
   * Default to true.
   * </pre>
   *
   * <code>.google.protobuf.BoolValue enable_early_data = 2;</code>
   * @return The enableEarlyData.
   */
  com.google.protobuf.BoolValue getEnableEarlyData();
  /**
   * <pre>
   * If false, QUIC will tell TLS to reject any early data and to stop issuing 0-RTT credentials with resumption session tickets. This will prevent clients from sending 0-RTT requests.
   * Default to true.
   * </pre>
   *
   * <code>.google.protobuf.BoolValue enable_early_data = 2;</code>
   */
  com.google.protobuf.BoolValueOrBuilder getEnableEarlyDataOrBuilder();
}
