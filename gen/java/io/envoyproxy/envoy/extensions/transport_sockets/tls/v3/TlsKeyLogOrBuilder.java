// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: envoy/extensions/transport_sockets/tls/v3/tls.proto

package io.envoyproxy.envoy.extensions.transport_sockets.tls.v3;

public interface TlsKeyLogOrBuilder extends
    // @@protoc_insertion_point(interface_extends:envoy.extensions.transport_sockets.tls.v3.TlsKeyLog)
    com.google.protobuf.MessageOrBuilder {

  /**
   * <pre>
   * The path to save the TLS key log.
   * </pre>
   *
   * <code>string path = 1 [(.validate.rules) = { ... }</code>
   * @return The path.
   */
  java.lang.String getPath();
  /**
   * <pre>
   * The path to save the TLS key log.
   * </pre>
   *
   * <code>string path = 1 [(.validate.rules) = { ... }</code>
   * @return The bytes for path.
   */
  com.google.protobuf.ByteString
      getPathBytes();

  /**
   * <pre>
   * The local IP address that will be used to filter the connection which should save the TLS key log
   * If it is not set, any local IP address  will be matched.
   * </pre>
   *
   * <code>repeated .envoy.config.core.v3.CidrRange local_address_range = 2;</code>
   */
  java.util.List<io.envoyproxy.envoy.config.core.v3.CidrRange> 
      getLocalAddressRangeList();
  /**
   * <pre>
   * The local IP address that will be used to filter the connection which should save the TLS key log
   * If it is not set, any local IP address  will be matched.
   * </pre>
   *
   * <code>repeated .envoy.config.core.v3.CidrRange local_address_range = 2;</code>
   */
  io.envoyproxy.envoy.config.core.v3.CidrRange getLocalAddressRange(int index);
  /**
   * <pre>
   * The local IP address that will be used to filter the connection which should save the TLS key log
   * If it is not set, any local IP address  will be matched.
   * </pre>
   *
   * <code>repeated .envoy.config.core.v3.CidrRange local_address_range = 2;</code>
   */
  int getLocalAddressRangeCount();
  /**
   * <pre>
   * The local IP address that will be used to filter the connection which should save the TLS key log
   * If it is not set, any local IP address  will be matched.
   * </pre>
   *
   * <code>repeated .envoy.config.core.v3.CidrRange local_address_range = 2;</code>
   */
  java.util.List<? extends io.envoyproxy.envoy.config.core.v3.CidrRangeOrBuilder> 
      getLocalAddressRangeOrBuilderList();
  /**
   * <pre>
   * The local IP address that will be used to filter the connection which should save the TLS key log
   * If it is not set, any local IP address  will be matched.
   * </pre>
   *
   * <code>repeated .envoy.config.core.v3.CidrRange local_address_range = 2;</code>
   */
  io.envoyproxy.envoy.config.core.v3.CidrRangeOrBuilder getLocalAddressRangeOrBuilder(
      int index);

  /**
   * <pre>
   * The remote IP address that will be used to filter the connection which should save the TLS key log
   * If it is not set, any remote IP address will be matched.
   * </pre>
   *
   * <code>repeated .envoy.config.core.v3.CidrRange remote_address_range = 3;</code>
   */
  java.util.List<io.envoyproxy.envoy.config.core.v3.CidrRange> 
      getRemoteAddressRangeList();
  /**
   * <pre>
   * The remote IP address that will be used to filter the connection which should save the TLS key log
   * If it is not set, any remote IP address will be matched.
   * </pre>
   *
   * <code>repeated .envoy.config.core.v3.CidrRange remote_address_range = 3;</code>
   */
  io.envoyproxy.envoy.config.core.v3.CidrRange getRemoteAddressRange(int index);
  /**
   * <pre>
   * The remote IP address that will be used to filter the connection which should save the TLS key log
   * If it is not set, any remote IP address will be matched.
   * </pre>
   *
   * <code>repeated .envoy.config.core.v3.CidrRange remote_address_range = 3;</code>
   */
  int getRemoteAddressRangeCount();
  /**
   * <pre>
   * The remote IP address that will be used to filter the connection which should save the TLS key log
   * If it is not set, any remote IP address will be matched.
   * </pre>
   *
   * <code>repeated .envoy.config.core.v3.CidrRange remote_address_range = 3;</code>
   */
  java.util.List<? extends io.envoyproxy.envoy.config.core.v3.CidrRangeOrBuilder> 
      getRemoteAddressRangeOrBuilderList();
  /**
   * <pre>
   * The remote IP address that will be used to filter the connection which should save the TLS key log
   * If it is not set, any remote IP address will be matched.
   * </pre>
   *
   * <code>repeated .envoy.config.core.v3.CidrRange remote_address_range = 3;</code>
   */
  io.envoyproxy.envoy.config.core.v3.CidrRangeOrBuilder getRemoteAddressRangeOrBuilder(
      int index);
}
