// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: envoy/extensions/transport_sockets/starttls/v3/starttls.proto

package io.envoyproxy.envoy.extensions.transport_sockets.starttls.v3;

public interface UpstreamStartTlsConfigOrBuilder extends
    // @@protoc_insertion_point(interface_extends:envoy.extensions.transport_sockets.starttls.v3.UpstreamStartTlsConfig)
    com.google.protobuf.MessageOrBuilder {

  /**
   * <pre>
   * (optional) Configuration for clear-text socket used at the beginning of the session.
   * </pre>
   *
   * <code>.envoy.extensions.transport_sockets.raw_buffer.v3.RawBuffer cleartext_socket_config = 1;</code>
   * @return Whether the cleartextSocketConfig field is set.
   */
  boolean hasCleartextSocketConfig();
  /**
   * <pre>
   * (optional) Configuration for clear-text socket used at the beginning of the session.
   * </pre>
   *
   * <code>.envoy.extensions.transport_sockets.raw_buffer.v3.RawBuffer cleartext_socket_config = 1;</code>
   * @return The cleartextSocketConfig.
   */
  io.envoyproxy.envoy.extensions.transport_sockets.raw_buffer.v3.RawBuffer getCleartextSocketConfig();
  /**
   * <pre>
   * (optional) Configuration for clear-text socket used at the beginning of the session.
   * </pre>
   *
   * <code>.envoy.extensions.transport_sockets.raw_buffer.v3.RawBuffer cleartext_socket_config = 1;</code>
   */
  io.envoyproxy.envoy.extensions.transport_sockets.raw_buffer.v3.RawBufferOrBuilder getCleartextSocketConfigOrBuilder();

  /**
   * <pre>
   * Configuration for an upstream TLS socket.
   * </pre>
   *
   * <code>.envoy.extensions.transport_sockets.tls.v3.UpstreamTlsContext tls_socket_config = 2 [(.validate.rules) = { ... }</code>
   * @return Whether the tlsSocketConfig field is set.
   */
  boolean hasTlsSocketConfig();
  /**
   * <pre>
   * Configuration for an upstream TLS socket.
   * </pre>
   *
   * <code>.envoy.extensions.transport_sockets.tls.v3.UpstreamTlsContext tls_socket_config = 2 [(.validate.rules) = { ... }</code>
   * @return The tlsSocketConfig.
   */
  io.envoyproxy.envoy.extensions.transport_sockets.tls.v3.UpstreamTlsContext getTlsSocketConfig();
  /**
   * <pre>
   * Configuration for an upstream TLS socket.
   * </pre>
   *
   * <code>.envoy.extensions.transport_sockets.tls.v3.UpstreamTlsContext tls_socket_config = 2 [(.validate.rules) = { ... }</code>
   */
  io.envoyproxy.envoy.extensions.transport_sockets.tls.v3.UpstreamTlsContextOrBuilder getTlsSocketConfigOrBuilder();
}
