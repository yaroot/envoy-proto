// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: envoy/extensions/matching/input_matchers/ip/v3/ip.proto

package io.envoyproxy.envoy.extensions.matching.input_matchers.ip.v3;

public interface IpOrBuilder extends
    // @@protoc_insertion_point(interface_extends:envoy.extensions.matching.input_matchers.ip.v3.Ip)
    com.google.protobuf.MessageOrBuilder {

  /**
   * <pre>
   * Match if the IP belongs to any of these CIDR ranges.
   * </pre>
   *
   * <code>repeated .envoy.config.core.v3.CidrRange cidr_ranges = 1 [(.validate.rules) = { ... }</code>
   */
  java.util.List<io.envoyproxy.envoy.config.core.v3.CidrRange> 
      getCidrRangesList();
  /**
   * <pre>
   * Match if the IP belongs to any of these CIDR ranges.
   * </pre>
   *
   * <code>repeated .envoy.config.core.v3.CidrRange cidr_ranges = 1 [(.validate.rules) = { ... }</code>
   */
  io.envoyproxy.envoy.config.core.v3.CidrRange getCidrRanges(int index);
  /**
   * <pre>
   * Match if the IP belongs to any of these CIDR ranges.
   * </pre>
   *
   * <code>repeated .envoy.config.core.v3.CidrRange cidr_ranges = 1 [(.validate.rules) = { ... }</code>
   */
  int getCidrRangesCount();
  /**
   * <pre>
   * Match if the IP belongs to any of these CIDR ranges.
   * </pre>
   *
   * <code>repeated .envoy.config.core.v3.CidrRange cidr_ranges = 1 [(.validate.rules) = { ... }</code>
   */
  java.util.List<? extends io.envoyproxy.envoy.config.core.v3.CidrRangeOrBuilder> 
      getCidrRangesOrBuilderList();
  /**
   * <pre>
   * Match if the IP belongs to any of these CIDR ranges.
   * </pre>
   *
   * <code>repeated .envoy.config.core.v3.CidrRange cidr_ranges = 1 [(.validate.rules) = { ... }</code>
   */
  io.envoyproxy.envoy.config.core.v3.CidrRangeOrBuilder getCidrRangesOrBuilder(
      int index);

  /**
   * <pre>
   * The human readable prefix to use when emitting statistics for the IP input
   * matcher. Names in the table below are concatenated to this prefix.
   * .. csv-table::
   *    :header: Name, Type, Description
   *    :widths: 1, 1, 2
   *    ip_parsing_failed, Counter, Total number of IP addresses the matcher was unable to parse
   * </pre>
   *
   * <code>string stat_prefix = 2 [(.validate.rules) = { ... }</code>
   * @return The statPrefix.
   */
  java.lang.String getStatPrefix();
  /**
   * <pre>
   * The human readable prefix to use when emitting statistics for the IP input
   * matcher. Names in the table below are concatenated to this prefix.
   * .. csv-table::
   *    :header: Name, Type, Description
   *    :widths: 1, 1, 2
   *    ip_parsing_failed, Counter, Total number of IP addresses the matcher was unable to parse
   * </pre>
   *
   * <code>string stat_prefix = 2 [(.validate.rules) = { ... }</code>
   * @return The bytes for statPrefix.
   */
  com.google.protobuf.ByteString
      getStatPrefixBytes();
}
