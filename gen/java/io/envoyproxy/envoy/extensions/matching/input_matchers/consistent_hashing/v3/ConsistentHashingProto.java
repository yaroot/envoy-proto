// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: envoy/extensions/matching/input_matchers/consistent_hashing/v3/consistent_hashing.proto

package io.envoyproxy.envoy.extensions.matching.input_matchers.consistent_hashing.v3;

public final class ConsistentHashingProto {
  private ConsistentHashingProto() {}
  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistryLite registry) {
  }

  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistry registry) {
    registerAllExtensions(
        (com.google.protobuf.ExtensionRegistryLite) registry);
  }
  static final com.google.protobuf.Descriptors.Descriptor
    internal_static_envoy_extensions_matching_input_matchers_consistent_hashing_v3_ConsistentHashing_descriptor;
  static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_envoy_extensions_matching_input_matchers_consistent_hashing_v3_ConsistentHashing_fieldAccessorTable;

  public static com.google.protobuf.Descriptors.FileDescriptor
      getDescriptor() {
    return descriptor;
  }
  private static  com.google.protobuf.Descriptors.FileDescriptor
      descriptor;
  static {
    java.lang.String[] descriptorData = {
      "\nWenvoy/extensions/matching/input_matche" +
      "rs/consistent_hashing/v3/consistent_hash" +
      "ing.proto\022>envoy.extensions.matching.inp" +
      "ut_matchers.consistent_hashing.v3\032\035udpa/" +
      "annotations/status.proto\032\027validate/valid" +
      "ate.proto\"M\n\021ConsistentHashing\022\021\n\tthresh" +
      "old\030\001 \001(\r\022\027\n\006modulo\030\002 \001(\rB\007\372B\004*\002 \000\022\014\n\004se" +
      "ed\030\003 \001(\004B\354\001\nLio.envoyproxy.envoy.extensi" +
      "ons.matching.input_matchers.consistent_h" +
      "ashing.v3B\026ConsistentHashingProtoP\001Zzgit" +
      "hub.com/envoyproxy/go-control-plane/envo" +
      "y/extensions/matching/input_matchers/con" +
      "sistent_hashing/v3;consistent_hashingv3\272" +
      "\200\310\321\006\002\020\002b\006proto3"
    };
    descriptor = com.google.protobuf.Descriptors.FileDescriptor
      .internalBuildGeneratedFileFrom(descriptorData,
        new com.google.protobuf.Descriptors.FileDescriptor[] {
          udpa.annotations.Status.getDescriptor(),
          io.envoyproxy.pgv.validate.Validate.getDescriptor(),
        });
    internal_static_envoy_extensions_matching_input_matchers_consistent_hashing_v3_ConsistentHashing_descriptor =
      getDescriptor().getMessageTypes().get(0);
    internal_static_envoy_extensions_matching_input_matchers_consistent_hashing_v3_ConsistentHashing_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_envoy_extensions_matching_input_matchers_consistent_hashing_v3_ConsistentHashing_descriptor,
        new java.lang.String[] { "Threshold", "Modulo", "Seed", });
    com.google.protobuf.ExtensionRegistry registry =
        com.google.protobuf.ExtensionRegistry.newInstance();
    registry.add(udpa.annotations.Status.fileStatus);
    registry.add(io.envoyproxy.pgv.validate.Validate.rules);
    com.google.protobuf.Descriptors.FileDescriptor
        .internalUpdateFileDescriptor(descriptor, registry);
    udpa.annotations.Status.getDescriptor();
    io.envoyproxy.pgv.validate.Validate.getDescriptor();
  }

  // @@protoc_insertion_point(outer_class_scope)
}
