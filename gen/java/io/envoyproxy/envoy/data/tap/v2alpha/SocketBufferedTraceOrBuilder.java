// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: envoy/data/tap/v2alpha/transport.proto

package io.envoyproxy.envoy.data.tap.v2alpha;

public interface SocketBufferedTraceOrBuilder extends
    // @@protoc_insertion_point(interface_extends:envoy.data.tap.v2alpha.SocketBufferedTrace)
    com.google.protobuf.MessageOrBuilder {

  /**
   * <pre>
   * Trace ID unique to the originating Envoy only. Trace IDs can repeat and should not be used
   * for long term stable uniqueness. Matches connection IDs used in Envoy logs.
   * </pre>
   *
   * <code>uint64 trace_id = 1;</code>
   * @return The traceId.
   */
  long getTraceId();

  /**
   * <pre>
   * Connection properties.
   * </pre>
   *
   * <code>.envoy.data.tap.v2alpha.Connection connection = 2;</code>
   * @return Whether the connection field is set.
   */
  boolean hasConnection();
  /**
   * <pre>
   * Connection properties.
   * </pre>
   *
   * <code>.envoy.data.tap.v2alpha.Connection connection = 2;</code>
   * @return The connection.
   */
  io.envoyproxy.envoy.data.tap.v2alpha.Connection getConnection();
  /**
   * <pre>
   * Connection properties.
   * </pre>
   *
   * <code>.envoy.data.tap.v2alpha.Connection connection = 2;</code>
   */
  io.envoyproxy.envoy.data.tap.v2alpha.ConnectionOrBuilder getConnectionOrBuilder();

  /**
   * <pre>
   * Sequence of observed events.
   * </pre>
   *
   * <code>repeated .envoy.data.tap.v2alpha.SocketEvent events = 3;</code>
   */
  java.util.List<io.envoyproxy.envoy.data.tap.v2alpha.SocketEvent> 
      getEventsList();
  /**
   * <pre>
   * Sequence of observed events.
   * </pre>
   *
   * <code>repeated .envoy.data.tap.v2alpha.SocketEvent events = 3;</code>
   */
  io.envoyproxy.envoy.data.tap.v2alpha.SocketEvent getEvents(int index);
  /**
   * <pre>
   * Sequence of observed events.
   * </pre>
   *
   * <code>repeated .envoy.data.tap.v2alpha.SocketEvent events = 3;</code>
   */
  int getEventsCount();
  /**
   * <pre>
   * Sequence of observed events.
   * </pre>
   *
   * <code>repeated .envoy.data.tap.v2alpha.SocketEvent events = 3;</code>
   */
  java.util.List<? extends io.envoyproxy.envoy.data.tap.v2alpha.SocketEventOrBuilder> 
      getEventsOrBuilderList();
  /**
   * <pre>
   * Sequence of observed events.
   * </pre>
   *
   * <code>repeated .envoy.data.tap.v2alpha.SocketEvent events = 3;</code>
   */
  io.envoyproxy.envoy.data.tap.v2alpha.SocketEventOrBuilder getEventsOrBuilder(
      int index);

  /**
   * <pre>
   * Set to true if read events were truncated due to the :ref:`max_buffered_rx_bytes
   * &lt;envoy_api_field_service.tap.v2alpha.OutputConfig.max_buffered_rx_bytes&gt;` setting.
   * </pre>
   *
   * <code>bool read_truncated = 4;</code>
   * @return The readTruncated.
   */
  boolean getReadTruncated();

  /**
   * <pre>
   * Set to true if write events were truncated due to the :ref:`max_buffered_tx_bytes
   * &lt;envoy_api_field_service.tap.v2alpha.OutputConfig.max_buffered_tx_bytes&gt;` setting.
   * </pre>
   *
   * <code>bool write_truncated = 5;</code>
   * @return The writeTruncated.
   */
  boolean getWriteTruncated();
}
