// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: envoy/config/accesslog/v2/als.proto

package io.envoyproxy.envoy.config.accesslog.v2;

/**
 * <pre>
 * Common configuration for gRPC access logs.
 * [#next-free-field: 6]
 * </pre>
 *
 * Protobuf type {@code envoy.config.accesslog.v2.CommonGrpcAccessLogConfig}
 */
public final class CommonGrpcAccessLogConfig extends
    com.google.protobuf.GeneratedMessageV3 implements
    // @@protoc_insertion_point(message_implements:envoy.config.accesslog.v2.CommonGrpcAccessLogConfig)
    CommonGrpcAccessLogConfigOrBuilder {
private static final long serialVersionUID = 0L;
  // Use CommonGrpcAccessLogConfig.newBuilder() to construct.
  private CommonGrpcAccessLogConfig(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
    super(builder);
  }
  private CommonGrpcAccessLogConfig() {
    logName_ = "";
    filterStateObjectsToLog_ = com.google.protobuf.LazyStringArrayList.EMPTY;
  }

  @java.lang.Override
  @SuppressWarnings({"unused"})
  protected java.lang.Object newInstance(
      UnusedPrivateParameter unused) {
    return new CommonGrpcAccessLogConfig();
  }

  @java.lang.Override
  public final com.google.protobuf.UnknownFieldSet
  getUnknownFields() {
    return this.unknownFields;
  }
  public static final com.google.protobuf.Descriptors.Descriptor
      getDescriptor() {
    return io.envoyproxy.envoy.config.accesslog.v2.AlsProto.internal_static_envoy_config_accesslog_v2_CommonGrpcAccessLogConfig_descriptor;
  }

  @java.lang.Override
  protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internalGetFieldAccessorTable() {
    return io.envoyproxy.envoy.config.accesslog.v2.AlsProto.internal_static_envoy_config_accesslog_v2_CommonGrpcAccessLogConfig_fieldAccessorTable
        .ensureFieldAccessorsInitialized(
            io.envoyproxy.envoy.config.accesslog.v2.CommonGrpcAccessLogConfig.class, io.envoyproxy.envoy.config.accesslog.v2.CommonGrpcAccessLogConfig.Builder.class);
  }

  public static final int LOG_NAME_FIELD_NUMBER = 1;
  @SuppressWarnings("serial")
  private volatile java.lang.Object logName_ = "";
  /**
   * <pre>
   * The friendly name of the access log to be returned in :ref:`StreamAccessLogsMessage.Identifier
   * &lt;envoy_api_msg_service.accesslog.v2.StreamAccessLogsMessage.Identifier&gt;`. This allows the
   * access log server to differentiate between different access logs coming from the same Envoy.
   * </pre>
   *
   * <code>string log_name = 1 [(.validate.rules) = { ... }</code>
   * @return The logName.
   */
  @java.lang.Override
  public java.lang.String getLogName() {
    java.lang.Object ref = logName_;
    if (ref instanceof java.lang.String) {
      return (java.lang.String) ref;
    } else {
      com.google.protobuf.ByteString bs = 
          (com.google.protobuf.ByteString) ref;
      java.lang.String s = bs.toStringUtf8();
      logName_ = s;
      return s;
    }
  }
  /**
   * <pre>
   * The friendly name of the access log to be returned in :ref:`StreamAccessLogsMessage.Identifier
   * &lt;envoy_api_msg_service.accesslog.v2.StreamAccessLogsMessage.Identifier&gt;`. This allows the
   * access log server to differentiate between different access logs coming from the same Envoy.
   * </pre>
   *
   * <code>string log_name = 1 [(.validate.rules) = { ... }</code>
   * @return The bytes for logName.
   */
  @java.lang.Override
  public com.google.protobuf.ByteString
      getLogNameBytes() {
    java.lang.Object ref = logName_;
    if (ref instanceof java.lang.String) {
      com.google.protobuf.ByteString b = 
          com.google.protobuf.ByteString.copyFromUtf8(
              (java.lang.String) ref);
      logName_ = b;
      return b;
    } else {
      return (com.google.protobuf.ByteString) ref;
    }
  }

  public static final int GRPC_SERVICE_FIELD_NUMBER = 2;
  private io.envoyproxy.envoy.api.v2.core.GrpcService grpcService_;
  /**
   * <pre>
   * The gRPC service for the access log service.
   * </pre>
   *
   * <code>.envoy.api.v2.core.GrpcService grpc_service = 2 [(.validate.rules) = { ... }</code>
   * @return Whether the grpcService field is set.
   */
  @java.lang.Override
  public boolean hasGrpcService() {
    return grpcService_ != null;
  }
  /**
   * <pre>
   * The gRPC service for the access log service.
   * </pre>
   *
   * <code>.envoy.api.v2.core.GrpcService grpc_service = 2 [(.validate.rules) = { ... }</code>
   * @return The grpcService.
   */
  @java.lang.Override
  public io.envoyproxy.envoy.api.v2.core.GrpcService getGrpcService() {
    return grpcService_ == null ? io.envoyproxy.envoy.api.v2.core.GrpcService.getDefaultInstance() : grpcService_;
  }
  /**
   * <pre>
   * The gRPC service for the access log service.
   * </pre>
   *
   * <code>.envoy.api.v2.core.GrpcService grpc_service = 2 [(.validate.rules) = { ... }</code>
   */
  @java.lang.Override
  public io.envoyproxy.envoy.api.v2.core.GrpcServiceOrBuilder getGrpcServiceOrBuilder() {
    return grpcService_ == null ? io.envoyproxy.envoy.api.v2.core.GrpcService.getDefaultInstance() : grpcService_;
  }

  public static final int BUFFER_FLUSH_INTERVAL_FIELD_NUMBER = 3;
  private com.google.protobuf.Duration bufferFlushInterval_;
  /**
   * <pre>
   * Interval for flushing access logs to the gRPC stream. Logger will flush requests every time
   * this interval is elapsed, or when batch size limit is hit, whichever comes first. Defaults to
   * 1 second.
   * </pre>
   *
   * <code>.google.protobuf.Duration buffer_flush_interval = 3 [(.validate.rules) = { ... }</code>
   * @return Whether the bufferFlushInterval field is set.
   */
  @java.lang.Override
  public boolean hasBufferFlushInterval() {
    return bufferFlushInterval_ != null;
  }
  /**
   * <pre>
   * Interval for flushing access logs to the gRPC stream. Logger will flush requests every time
   * this interval is elapsed, or when batch size limit is hit, whichever comes first. Defaults to
   * 1 second.
   * </pre>
   *
   * <code>.google.protobuf.Duration buffer_flush_interval = 3 [(.validate.rules) = { ... }</code>
   * @return The bufferFlushInterval.
   */
  @java.lang.Override
  public com.google.protobuf.Duration getBufferFlushInterval() {
    return bufferFlushInterval_ == null ? com.google.protobuf.Duration.getDefaultInstance() : bufferFlushInterval_;
  }
  /**
   * <pre>
   * Interval for flushing access logs to the gRPC stream. Logger will flush requests every time
   * this interval is elapsed, or when batch size limit is hit, whichever comes first. Defaults to
   * 1 second.
   * </pre>
   *
   * <code>.google.protobuf.Duration buffer_flush_interval = 3 [(.validate.rules) = { ... }</code>
   */
  @java.lang.Override
  public com.google.protobuf.DurationOrBuilder getBufferFlushIntervalOrBuilder() {
    return bufferFlushInterval_ == null ? com.google.protobuf.Duration.getDefaultInstance() : bufferFlushInterval_;
  }

  public static final int BUFFER_SIZE_BYTES_FIELD_NUMBER = 4;
  private com.google.protobuf.UInt32Value bufferSizeBytes_;
  /**
   * <pre>
   * Soft size limit in bytes for access log entries buffer. Logger will buffer requests until
   * this limit it hit, or every time flush interval is elapsed, whichever comes first. Setting it
   * to zero effectively disables the batching. Defaults to 16384.
   * </pre>
   *
   * <code>.google.protobuf.UInt32Value buffer_size_bytes = 4;</code>
   * @return Whether the bufferSizeBytes field is set.
   */
  @java.lang.Override
  public boolean hasBufferSizeBytes() {
    return bufferSizeBytes_ != null;
  }
  /**
   * <pre>
   * Soft size limit in bytes for access log entries buffer. Logger will buffer requests until
   * this limit it hit, or every time flush interval is elapsed, whichever comes first. Setting it
   * to zero effectively disables the batching. Defaults to 16384.
   * </pre>
   *
   * <code>.google.protobuf.UInt32Value buffer_size_bytes = 4;</code>
   * @return The bufferSizeBytes.
   */
  @java.lang.Override
  public com.google.protobuf.UInt32Value getBufferSizeBytes() {
    return bufferSizeBytes_ == null ? com.google.protobuf.UInt32Value.getDefaultInstance() : bufferSizeBytes_;
  }
  /**
   * <pre>
   * Soft size limit in bytes for access log entries buffer. Logger will buffer requests until
   * this limit it hit, or every time flush interval is elapsed, whichever comes first. Setting it
   * to zero effectively disables the batching. Defaults to 16384.
   * </pre>
   *
   * <code>.google.protobuf.UInt32Value buffer_size_bytes = 4;</code>
   */
  @java.lang.Override
  public com.google.protobuf.UInt32ValueOrBuilder getBufferSizeBytesOrBuilder() {
    return bufferSizeBytes_ == null ? com.google.protobuf.UInt32Value.getDefaultInstance() : bufferSizeBytes_;
  }

  public static final int FILTER_STATE_OBJECTS_TO_LOG_FIELD_NUMBER = 5;
  @SuppressWarnings("serial")
  private com.google.protobuf.LazyStringList filterStateObjectsToLog_;
  /**
   * <pre>
   * Additional filter state objects to log in :ref:`filter_state_objects
   * &lt;envoy_api_field_data.accesslog.v2.AccessLogCommon.filter_state_objects&gt;`.
   * Logger will call `FilterState::Object::serializeAsProto` to serialize the filter state object.
   * </pre>
   *
   * <code>repeated string filter_state_objects_to_log = 5;</code>
   * @return A list containing the filterStateObjectsToLog.
   */
  public com.google.protobuf.ProtocolStringList
      getFilterStateObjectsToLogList() {
    return filterStateObjectsToLog_;
  }
  /**
   * <pre>
   * Additional filter state objects to log in :ref:`filter_state_objects
   * &lt;envoy_api_field_data.accesslog.v2.AccessLogCommon.filter_state_objects&gt;`.
   * Logger will call `FilterState::Object::serializeAsProto` to serialize the filter state object.
   * </pre>
   *
   * <code>repeated string filter_state_objects_to_log = 5;</code>
   * @return The count of filterStateObjectsToLog.
   */
  public int getFilterStateObjectsToLogCount() {
    return filterStateObjectsToLog_.size();
  }
  /**
   * <pre>
   * Additional filter state objects to log in :ref:`filter_state_objects
   * &lt;envoy_api_field_data.accesslog.v2.AccessLogCommon.filter_state_objects&gt;`.
   * Logger will call `FilterState::Object::serializeAsProto` to serialize the filter state object.
   * </pre>
   *
   * <code>repeated string filter_state_objects_to_log = 5;</code>
   * @param index The index of the element to return.
   * @return The filterStateObjectsToLog at the given index.
   */
  public java.lang.String getFilterStateObjectsToLog(int index) {
    return filterStateObjectsToLog_.get(index);
  }
  /**
   * <pre>
   * Additional filter state objects to log in :ref:`filter_state_objects
   * &lt;envoy_api_field_data.accesslog.v2.AccessLogCommon.filter_state_objects&gt;`.
   * Logger will call `FilterState::Object::serializeAsProto` to serialize the filter state object.
   * </pre>
   *
   * <code>repeated string filter_state_objects_to_log = 5;</code>
   * @param index The index of the value to return.
   * @return The bytes of the filterStateObjectsToLog at the given index.
   */
  public com.google.protobuf.ByteString
      getFilterStateObjectsToLogBytes(int index) {
    return filterStateObjectsToLog_.getByteString(index);
  }

  private byte memoizedIsInitialized = -1;
  @java.lang.Override
  public final boolean isInitialized() {
    byte isInitialized = memoizedIsInitialized;
    if (isInitialized == 1) return true;
    if (isInitialized == 0) return false;

    memoizedIsInitialized = 1;
    return true;
  }

  @java.lang.Override
  public void writeTo(com.google.protobuf.CodedOutputStream output)
                      throws java.io.IOException {
    if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(logName_)) {
      com.google.protobuf.GeneratedMessageV3.writeString(output, 1, logName_);
    }
    if (grpcService_ != null) {
      output.writeMessage(2, getGrpcService());
    }
    if (bufferFlushInterval_ != null) {
      output.writeMessage(3, getBufferFlushInterval());
    }
    if (bufferSizeBytes_ != null) {
      output.writeMessage(4, getBufferSizeBytes());
    }
    for (int i = 0; i < filterStateObjectsToLog_.size(); i++) {
      com.google.protobuf.GeneratedMessageV3.writeString(output, 5, filterStateObjectsToLog_.getRaw(i));
    }
    getUnknownFields().writeTo(output);
  }

  @java.lang.Override
  public int getSerializedSize() {
    int size = memoizedSize;
    if (size != -1) return size;

    size = 0;
    if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(logName_)) {
      size += com.google.protobuf.GeneratedMessageV3.computeStringSize(1, logName_);
    }
    if (grpcService_ != null) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(2, getGrpcService());
    }
    if (bufferFlushInterval_ != null) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(3, getBufferFlushInterval());
    }
    if (bufferSizeBytes_ != null) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(4, getBufferSizeBytes());
    }
    {
      int dataSize = 0;
      for (int i = 0; i < filterStateObjectsToLog_.size(); i++) {
        dataSize += computeStringSizeNoTag(filterStateObjectsToLog_.getRaw(i));
      }
      size += dataSize;
      size += 1 * getFilterStateObjectsToLogList().size();
    }
    size += getUnknownFields().getSerializedSize();
    memoizedSize = size;
    return size;
  }

  @java.lang.Override
  public boolean equals(final java.lang.Object obj) {
    if (obj == this) {
     return true;
    }
    if (!(obj instanceof io.envoyproxy.envoy.config.accesslog.v2.CommonGrpcAccessLogConfig)) {
      return super.equals(obj);
    }
    io.envoyproxy.envoy.config.accesslog.v2.CommonGrpcAccessLogConfig other = (io.envoyproxy.envoy.config.accesslog.v2.CommonGrpcAccessLogConfig) obj;

    if (!getLogName()
        .equals(other.getLogName())) return false;
    if (hasGrpcService() != other.hasGrpcService()) return false;
    if (hasGrpcService()) {
      if (!getGrpcService()
          .equals(other.getGrpcService())) return false;
    }
    if (hasBufferFlushInterval() != other.hasBufferFlushInterval()) return false;
    if (hasBufferFlushInterval()) {
      if (!getBufferFlushInterval()
          .equals(other.getBufferFlushInterval())) return false;
    }
    if (hasBufferSizeBytes() != other.hasBufferSizeBytes()) return false;
    if (hasBufferSizeBytes()) {
      if (!getBufferSizeBytes()
          .equals(other.getBufferSizeBytes())) return false;
    }
    if (!getFilterStateObjectsToLogList()
        .equals(other.getFilterStateObjectsToLogList())) return false;
    if (!getUnknownFields().equals(other.getUnknownFields())) return false;
    return true;
  }

  @java.lang.Override
  public int hashCode() {
    if (memoizedHashCode != 0) {
      return memoizedHashCode;
    }
    int hash = 41;
    hash = (19 * hash) + getDescriptor().hashCode();
    hash = (37 * hash) + LOG_NAME_FIELD_NUMBER;
    hash = (53 * hash) + getLogName().hashCode();
    if (hasGrpcService()) {
      hash = (37 * hash) + GRPC_SERVICE_FIELD_NUMBER;
      hash = (53 * hash) + getGrpcService().hashCode();
    }
    if (hasBufferFlushInterval()) {
      hash = (37 * hash) + BUFFER_FLUSH_INTERVAL_FIELD_NUMBER;
      hash = (53 * hash) + getBufferFlushInterval().hashCode();
    }
    if (hasBufferSizeBytes()) {
      hash = (37 * hash) + BUFFER_SIZE_BYTES_FIELD_NUMBER;
      hash = (53 * hash) + getBufferSizeBytes().hashCode();
    }
    if (getFilterStateObjectsToLogCount() > 0) {
      hash = (37 * hash) + FILTER_STATE_OBJECTS_TO_LOG_FIELD_NUMBER;
      hash = (53 * hash) + getFilterStateObjectsToLogList().hashCode();
    }
    hash = (29 * hash) + getUnknownFields().hashCode();
    memoizedHashCode = hash;
    return hash;
  }

  public static io.envoyproxy.envoy.config.accesslog.v2.CommonGrpcAccessLogConfig parseFrom(
      java.nio.ByteBuffer data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static io.envoyproxy.envoy.config.accesslog.v2.CommonGrpcAccessLogConfig parseFrom(
      java.nio.ByteBuffer data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static io.envoyproxy.envoy.config.accesslog.v2.CommonGrpcAccessLogConfig parseFrom(
      com.google.protobuf.ByteString data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static io.envoyproxy.envoy.config.accesslog.v2.CommonGrpcAccessLogConfig parseFrom(
      com.google.protobuf.ByteString data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static io.envoyproxy.envoy.config.accesslog.v2.CommonGrpcAccessLogConfig parseFrom(byte[] data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static io.envoyproxy.envoy.config.accesslog.v2.CommonGrpcAccessLogConfig parseFrom(
      byte[] data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static io.envoyproxy.envoy.config.accesslog.v2.CommonGrpcAccessLogConfig parseFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input);
  }
  public static io.envoyproxy.envoy.config.accesslog.v2.CommonGrpcAccessLogConfig parseFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input, extensionRegistry);
  }
  public static io.envoyproxy.envoy.config.accesslog.v2.CommonGrpcAccessLogConfig parseDelimitedFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseDelimitedWithIOException(PARSER, input);
  }
  public static io.envoyproxy.envoy.config.accesslog.v2.CommonGrpcAccessLogConfig parseDelimitedFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
  }
  public static io.envoyproxy.envoy.config.accesslog.v2.CommonGrpcAccessLogConfig parseFrom(
      com.google.protobuf.CodedInputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input);
  }
  public static io.envoyproxy.envoy.config.accesslog.v2.CommonGrpcAccessLogConfig parseFrom(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input, extensionRegistry);
  }

  @java.lang.Override
  public Builder newBuilderForType() { return newBuilder(); }
  public static Builder newBuilder() {
    return DEFAULT_INSTANCE.toBuilder();
  }
  public static Builder newBuilder(io.envoyproxy.envoy.config.accesslog.v2.CommonGrpcAccessLogConfig prototype) {
    return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
  }
  @java.lang.Override
  public Builder toBuilder() {
    return this == DEFAULT_INSTANCE
        ? new Builder() : new Builder().mergeFrom(this);
  }

  @java.lang.Override
  protected Builder newBuilderForType(
      com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
    Builder builder = new Builder(parent);
    return builder;
  }
  /**
   * <pre>
   * Common configuration for gRPC access logs.
   * [#next-free-field: 6]
   * </pre>
   *
   * Protobuf type {@code envoy.config.accesslog.v2.CommonGrpcAccessLogConfig}
   */
  public static final class Builder extends
      com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
      // @@protoc_insertion_point(builder_implements:envoy.config.accesslog.v2.CommonGrpcAccessLogConfig)
      io.envoyproxy.envoy.config.accesslog.v2.CommonGrpcAccessLogConfigOrBuilder {
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return io.envoyproxy.envoy.config.accesslog.v2.AlsProto.internal_static_envoy_config_accesslog_v2_CommonGrpcAccessLogConfig_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return io.envoyproxy.envoy.config.accesslog.v2.AlsProto.internal_static_envoy_config_accesslog_v2_CommonGrpcAccessLogConfig_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              io.envoyproxy.envoy.config.accesslog.v2.CommonGrpcAccessLogConfig.class, io.envoyproxy.envoy.config.accesslog.v2.CommonGrpcAccessLogConfig.Builder.class);
    }

    // Construct using io.envoyproxy.envoy.config.accesslog.v2.CommonGrpcAccessLogConfig.newBuilder()
    private Builder() {

    }

    private Builder(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      super(parent);

    }
    @java.lang.Override
    public Builder clear() {
      super.clear();
      bitField0_ = 0;
      logName_ = "";
      grpcService_ = null;
      if (grpcServiceBuilder_ != null) {
        grpcServiceBuilder_.dispose();
        grpcServiceBuilder_ = null;
      }
      bufferFlushInterval_ = null;
      if (bufferFlushIntervalBuilder_ != null) {
        bufferFlushIntervalBuilder_.dispose();
        bufferFlushIntervalBuilder_ = null;
      }
      bufferSizeBytes_ = null;
      if (bufferSizeBytesBuilder_ != null) {
        bufferSizeBytesBuilder_.dispose();
        bufferSizeBytesBuilder_ = null;
      }
      filterStateObjectsToLog_ = com.google.protobuf.LazyStringArrayList.EMPTY;
      bitField0_ = (bitField0_ & ~0x00000010);
      return this;
    }

    @java.lang.Override
    public com.google.protobuf.Descriptors.Descriptor
        getDescriptorForType() {
      return io.envoyproxy.envoy.config.accesslog.v2.AlsProto.internal_static_envoy_config_accesslog_v2_CommonGrpcAccessLogConfig_descriptor;
    }

    @java.lang.Override
    public io.envoyproxy.envoy.config.accesslog.v2.CommonGrpcAccessLogConfig getDefaultInstanceForType() {
      return io.envoyproxy.envoy.config.accesslog.v2.CommonGrpcAccessLogConfig.getDefaultInstance();
    }

    @java.lang.Override
    public io.envoyproxy.envoy.config.accesslog.v2.CommonGrpcAccessLogConfig build() {
      io.envoyproxy.envoy.config.accesslog.v2.CommonGrpcAccessLogConfig result = buildPartial();
      if (!result.isInitialized()) {
        throw newUninitializedMessageException(result);
      }
      return result;
    }

    @java.lang.Override
    public io.envoyproxy.envoy.config.accesslog.v2.CommonGrpcAccessLogConfig buildPartial() {
      io.envoyproxy.envoy.config.accesslog.v2.CommonGrpcAccessLogConfig result = new io.envoyproxy.envoy.config.accesslog.v2.CommonGrpcAccessLogConfig(this);
      buildPartialRepeatedFields(result);
      if (bitField0_ != 0) { buildPartial0(result); }
      onBuilt();
      return result;
    }

    private void buildPartialRepeatedFields(io.envoyproxy.envoy.config.accesslog.v2.CommonGrpcAccessLogConfig result) {
      if (((bitField0_ & 0x00000010) != 0)) {
        filterStateObjectsToLog_ = filterStateObjectsToLog_.getUnmodifiableView();
        bitField0_ = (bitField0_ & ~0x00000010);
      }
      result.filterStateObjectsToLog_ = filterStateObjectsToLog_;
    }

    private void buildPartial0(io.envoyproxy.envoy.config.accesslog.v2.CommonGrpcAccessLogConfig result) {
      int from_bitField0_ = bitField0_;
      if (((from_bitField0_ & 0x00000001) != 0)) {
        result.logName_ = logName_;
      }
      if (((from_bitField0_ & 0x00000002) != 0)) {
        result.grpcService_ = grpcServiceBuilder_ == null
            ? grpcService_
            : grpcServiceBuilder_.build();
      }
      if (((from_bitField0_ & 0x00000004) != 0)) {
        result.bufferFlushInterval_ = bufferFlushIntervalBuilder_ == null
            ? bufferFlushInterval_
            : bufferFlushIntervalBuilder_.build();
      }
      if (((from_bitField0_ & 0x00000008) != 0)) {
        result.bufferSizeBytes_ = bufferSizeBytesBuilder_ == null
            ? bufferSizeBytes_
            : bufferSizeBytesBuilder_.build();
      }
    }

    @java.lang.Override
    public Builder clone() {
      return super.clone();
    }
    @java.lang.Override
    public Builder setField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        java.lang.Object value) {
      return super.setField(field, value);
    }
    @java.lang.Override
    public Builder clearField(
        com.google.protobuf.Descriptors.FieldDescriptor field) {
      return super.clearField(field);
    }
    @java.lang.Override
    public Builder clearOneof(
        com.google.protobuf.Descriptors.OneofDescriptor oneof) {
      return super.clearOneof(oneof);
    }
    @java.lang.Override
    public Builder setRepeatedField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        int index, java.lang.Object value) {
      return super.setRepeatedField(field, index, value);
    }
    @java.lang.Override
    public Builder addRepeatedField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        java.lang.Object value) {
      return super.addRepeatedField(field, value);
    }
    @java.lang.Override
    public Builder mergeFrom(com.google.protobuf.Message other) {
      if (other instanceof io.envoyproxy.envoy.config.accesslog.v2.CommonGrpcAccessLogConfig) {
        return mergeFrom((io.envoyproxy.envoy.config.accesslog.v2.CommonGrpcAccessLogConfig)other);
      } else {
        super.mergeFrom(other);
        return this;
      }
    }

    public Builder mergeFrom(io.envoyproxy.envoy.config.accesslog.v2.CommonGrpcAccessLogConfig other) {
      if (other == io.envoyproxy.envoy.config.accesslog.v2.CommonGrpcAccessLogConfig.getDefaultInstance()) return this;
      if (!other.getLogName().isEmpty()) {
        logName_ = other.logName_;
        bitField0_ |= 0x00000001;
        onChanged();
      }
      if (other.hasGrpcService()) {
        mergeGrpcService(other.getGrpcService());
      }
      if (other.hasBufferFlushInterval()) {
        mergeBufferFlushInterval(other.getBufferFlushInterval());
      }
      if (other.hasBufferSizeBytes()) {
        mergeBufferSizeBytes(other.getBufferSizeBytes());
      }
      if (!other.filterStateObjectsToLog_.isEmpty()) {
        if (filterStateObjectsToLog_.isEmpty()) {
          filterStateObjectsToLog_ = other.filterStateObjectsToLog_;
          bitField0_ = (bitField0_ & ~0x00000010);
        } else {
          ensureFilterStateObjectsToLogIsMutable();
          filterStateObjectsToLog_.addAll(other.filterStateObjectsToLog_);
        }
        onChanged();
      }
      this.mergeUnknownFields(other.getUnknownFields());
      onChanged();
      return this;
    }

    @java.lang.Override
    public final boolean isInitialized() {
      return true;
    }

    @java.lang.Override
    public Builder mergeFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 10: {
              logName_ = input.readStringRequireUtf8();
              bitField0_ |= 0x00000001;
              break;
            } // case 10
            case 18: {
              input.readMessage(
                  getGrpcServiceFieldBuilder().getBuilder(),
                  extensionRegistry);
              bitField0_ |= 0x00000002;
              break;
            } // case 18
            case 26: {
              input.readMessage(
                  getBufferFlushIntervalFieldBuilder().getBuilder(),
                  extensionRegistry);
              bitField0_ |= 0x00000004;
              break;
            } // case 26
            case 34: {
              input.readMessage(
                  getBufferSizeBytesFieldBuilder().getBuilder(),
                  extensionRegistry);
              bitField0_ |= 0x00000008;
              break;
            } // case 34
            case 42: {
              java.lang.String s = input.readStringRequireUtf8();
              ensureFilterStateObjectsToLogIsMutable();
              filterStateObjectsToLog_.add(s);
              break;
            } // case 42
            default: {
              if (!super.parseUnknownField(input, extensionRegistry, tag)) {
                done = true; // was an endgroup tag
              }
              break;
            } // default:
          } // switch (tag)
        } // while (!done)
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.unwrapIOException();
      } finally {
        onChanged();
      } // finally
      return this;
    }
    private int bitField0_;

    private java.lang.Object logName_ = "";
    /**
     * <pre>
     * The friendly name of the access log to be returned in :ref:`StreamAccessLogsMessage.Identifier
     * &lt;envoy_api_msg_service.accesslog.v2.StreamAccessLogsMessage.Identifier&gt;`. This allows the
     * access log server to differentiate between different access logs coming from the same Envoy.
     * </pre>
     *
     * <code>string log_name = 1 [(.validate.rules) = { ... }</code>
     * @return The logName.
     */
    public java.lang.String getLogName() {
      java.lang.Object ref = logName_;
      if (!(ref instanceof java.lang.String)) {
        com.google.protobuf.ByteString bs =
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        logName_ = s;
        return s;
      } else {
        return (java.lang.String) ref;
      }
    }
    /**
     * <pre>
     * The friendly name of the access log to be returned in :ref:`StreamAccessLogsMessage.Identifier
     * &lt;envoy_api_msg_service.accesslog.v2.StreamAccessLogsMessage.Identifier&gt;`. This allows the
     * access log server to differentiate between different access logs coming from the same Envoy.
     * </pre>
     *
     * <code>string log_name = 1 [(.validate.rules) = { ... }</code>
     * @return The bytes for logName.
     */
    public com.google.protobuf.ByteString
        getLogNameBytes() {
      java.lang.Object ref = logName_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        logName_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }
    /**
     * <pre>
     * The friendly name of the access log to be returned in :ref:`StreamAccessLogsMessage.Identifier
     * &lt;envoy_api_msg_service.accesslog.v2.StreamAccessLogsMessage.Identifier&gt;`. This allows the
     * access log server to differentiate between different access logs coming from the same Envoy.
     * </pre>
     *
     * <code>string log_name = 1 [(.validate.rules) = { ... }</code>
     * @param value The logName to set.
     * @return This builder for chaining.
     */
    public Builder setLogName(
        java.lang.String value) {
      if (value == null) { throw new NullPointerException(); }
      logName_ = value;
      bitField0_ |= 0x00000001;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * The friendly name of the access log to be returned in :ref:`StreamAccessLogsMessage.Identifier
     * &lt;envoy_api_msg_service.accesslog.v2.StreamAccessLogsMessage.Identifier&gt;`. This allows the
     * access log server to differentiate between different access logs coming from the same Envoy.
     * </pre>
     *
     * <code>string log_name = 1 [(.validate.rules) = { ... }</code>
     * @return This builder for chaining.
     */
    public Builder clearLogName() {
      logName_ = getDefaultInstance().getLogName();
      bitField0_ = (bitField0_ & ~0x00000001);
      onChanged();
      return this;
    }
    /**
     * <pre>
     * The friendly name of the access log to be returned in :ref:`StreamAccessLogsMessage.Identifier
     * &lt;envoy_api_msg_service.accesslog.v2.StreamAccessLogsMessage.Identifier&gt;`. This allows the
     * access log server to differentiate between different access logs coming from the same Envoy.
     * </pre>
     *
     * <code>string log_name = 1 [(.validate.rules) = { ... }</code>
     * @param value The bytes for logName to set.
     * @return This builder for chaining.
     */
    public Builder setLogNameBytes(
        com.google.protobuf.ByteString value) {
      if (value == null) { throw new NullPointerException(); }
      checkByteStringIsUtf8(value);
      logName_ = value;
      bitField0_ |= 0x00000001;
      onChanged();
      return this;
    }

    private io.envoyproxy.envoy.api.v2.core.GrpcService grpcService_;
    private com.google.protobuf.SingleFieldBuilderV3<
        io.envoyproxy.envoy.api.v2.core.GrpcService, io.envoyproxy.envoy.api.v2.core.GrpcService.Builder, io.envoyproxy.envoy.api.v2.core.GrpcServiceOrBuilder> grpcServiceBuilder_;
    /**
     * <pre>
     * The gRPC service for the access log service.
     * </pre>
     *
     * <code>.envoy.api.v2.core.GrpcService grpc_service = 2 [(.validate.rules) = { ... }</code>
     * @return Whether the grpcService field is set.
     */
    public boolean hasGrpcService() {
      return ((bitField0_ & 0x00000002) != 0);
    }
    /**
     * <pre>
     * The gRPC service for the access log service.
     * </pre>
     *
     * <code>.envoy.api.v2.core.GrpcService grpc_service = 2 [(.validate.rules) = { ... }</code>
     * @return The grpcService.
     */
    public io.envoyproxy.envoy.api.v2.core.GrpcService getGrpcService() {
      if (grpcServiceBuilder_ == null) {
        return grpcService_ == null ? io.envoyproxy.envoy.api.v2.core.GrpcService.getDefaultInstance() : grpcService_;
      } else {
        return grpcServiceBuilder_.getMessage();
      }
    }
    /**
     * <pre>
     * The gRPC service for the access log service.
     * </pre>
     *
     * <code>.envoy.api.v2.core.GrpcService grpc_service = 2 [(.validate.rules) = { ... }</code>
     */
    public Builder setGrpcService(io.envoyproxy.envoy.api.v2.core.GrpcService value) {
      if (grpcServiceBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        grpcService_ = value;
      } else {
        grpcServiceBuilder_.setMessage(value);
      }
      bitField0_ |= 0x00000002;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * The gRPC service for the access log service.
     * </pre>
     *
     * <code>.envoy.api.v2.core.GrpcService grpc_service = 2 [(.validate.rules) = { ... }</code>
     */
    public Builder setGrpcService(
        io.envoyproxy.envoy.api.v2.core.GrpcService.Builder builderForValue) {
      if (grpcServiceBuilder_ == null) {
        grpcService_ = builderForValue.build();
      } else {
        grpcServiceBuilder_.setMessage(builderForValue.build());
      }
      bitField0_ |= 0x00000002;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * The gRPC service for the access log service.
     * </pre>
     *
     * <code>.envoy.api.v2.core.GrpcService grpc_service = 2 [(.validate.rules) = { ... }</code>
     */
    public Builder mergeGrpcService(io.envoyproxy.envoy.api.v2.core.GrpcService value) {
      if (grpcServiceBuilder_ == null) {
        if (((bitField0_ & 0x00000002) != 0) &&
          grpcService_ != null &&
          grpcService_ != io.envoyproxy.envoy.api.v2.core.GrpcService.getDefaultInstance()) {
          getGrpcServiceBuilder().mergeFrom(value);
        } else {
          grpcService_ = value;
        }
      } else {
        grpcServiceBuilder_.mergeFrom(value);
      }
      bitField0_ |= 0x00000002;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * The gRPC service for the access log service.
     * </pre>
     *
     * <code>.envoy.api.v2.core.GrpcService grpc_service = 2 [(.validate.rules) = { ... }</code>
     */
    public Builder clearGrpcService() {
      bitField0_ = (bitField0_ & ~0x00000002);
      grpcService_ = null;
      if (grpcServiceBuilder_ != null) {
        grpcServiceBuilder_.dispose();
        grpcServiceBuilder_ = null;
      }
      onChanged();
      return this;
    }
    /**
     * <pre>
     * The gRPC service for the access log service.
     * </pre>
     *
     * <code>.envoy.api.v2.core.GrpcService grpc_service = 2 [(.validate.rules) = { ... }</code>
     */
    public io.envoyproxy.envoy.api.v2.core.GrpcService.Builder getGrpcServiceBuilder() {
      bitField0_ |= 0x00000002;
      onChanged();
      return getGrpcServiceFieldBuilder().getBuilder();
    }
    /**
     * <pre>
     * The gRPC service for the access log service.
     * </pre>
     *
     * <code>.envoy.api.v2.core.GrpcService grpc_service = 2 [(.validate.rules) = { ... }</code>
     */
    public io.envoyproxy.envoy.api.v2.core.GrpcServiceOrBuilder getGrpcServiceOrBuilder() {
      if (grpcServiceBuilder_ != null) {
        return grpcServiceBuilder_.getMessageOrBuilder();
      } else {
        return grpcService_ == null ?
            io.envoyproxy.envoy.api.v2.core.GrpcService.getDefaultInstance() : grpcService_;
      }
    }
    /**
     * <pre>
     * The gRPC service for the access log service.
     * </pre>
     *
     * <code>.envoy.api.v2.core.GrpcService grpc_service = 2 [(.validate.rules) = { ... }</code>
     */
    private com.google.protobuf.SingleFieldBuilderV3<
        io.envoyproxy.envoy.api.v2.core.GrpcService, io.envoyproxy.envoy.api.v2.core.GrpcService.Builder, io.envoyproxy.envoy.api.v2.core.GrpcServiceOrBuilder> 
        getGrpcServiceFieldBuilder() {
      if (grpcServiceBuilder_ == null) {
        grpcServiceBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
            io.envoyproxy.envoy.api.v2.core.GrpcService, io.envoyproxy.envoy.api.v2.core.GrpcService.Builder, io.envoyproxy.envoy.api.v2.core.GrpcServiceOrBuilder>(
                getGrpcService(),
                getParentForChildren(),
                isClean());
        grpcService_ = null;
      }
      return grpcServiceBuilder_;
    }

    private com.google.protobuf.Duration bufferFlushInterval_;
    private com.google.protobuf.SingleFieldBuilderV3<
        com.google.protobuf.Duration, com.google.protobuf.Duration.Builder, com.google.protobuf.DurationOrBuilder> bufferFlushIntervalBuilder_;
    /**
     * <pre>
     * Interval for flushing access logs to the gRPC stream. Logger will flush requests every time
     * this interval is elapsed, or when batch size limit is hit, whichever comes first. Defaults to
     * 1 second.
     * </pre>
     *
     * <code>.google.protobuf.Duration buffer_flush_interval = 3 [(.validate.rules) = { ... }</code>
     * @return Whether the bufferFlushInterval field is set.
     */
    public boolean hasBufferFlushInterval() {
      return ((bitField0_ & 0x00000004) != 0);
    }
    /**
     * <pre>
     * Interval for flushing access logs to the gRPC stream. Logger will flush requests every time
     * this interval is elapsed, or when batch size limit is hit, whichever comes first. Defaults to
     * 1 second.
     * </pre>
     *
     * <code>.google.protobuf.Duration buffer_flush_interval = 3 [(.validate.rules) = { ... }</code>
     * @return The bufferFlushInterval.
     */
    public com.google.protobuf.Duration getBufferFlushInterval() {
      if (bufferFlushIntervalBuilder_ == null) {
        return bufferFlushInterval_ == null ? com.google.protobuf.Duration.getDefaultInstance() : bufferFlushInterval_;
      } else {
        return bufferFlushIntervalBuilder_.getMessage();
      }
    }
    /**
     * <pre>
     * Interval for flushing access logs to the gRPC stream. Logger will flush requests every time
     * this interval is elapsed, or when batch size limit is hit, whichever comes first. Defaults to
     * 1 second.
     * </pre>
     *
     * <code>.google.protobuf.Duration buffer_flush_interval = 3 [(.validate.rules) = { ... }</code>
     */
    public Builder setBufferFlushInterval(com.google.protobuf.Duration value) {
      if (bufferFlushIntervalBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        bufferFlushInterval_ = value;
      } else {
        bufferFlushIntervalBuilder_.setMessage(value);
      }
      bitField0_ |= 0x00000004;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * Interval for flushing access logs to the gRPC stream. Logger will flush requests every time
     * this interval is elapsed, or when batch size limit is hit, whichever comes first. Defaults to
     * 1 second.
     * </pre>
     *
     * <code>.google.protobuf.Duration buffer_flush_interval = 3 [(.validate.rules) = { ... }</code>
     */
    public Builder setBufferFlushInterval(
        com.google.protobuf.Duration.Builder builderForValue) {
      if (bufferFlushIntervalBuilder_ == null) {
        bufferFlushInterval_ = builderForValue.build();
      } else {
        bufferFlushIntervalBuilder_.setMessage(builderForValue.build());
      }
      bitField0_ |= 0x00000004;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * Interval for flushing access logs to the gRPC stream. Logger will flush requests every time
     * this interval is elapsed, or when batch size limit is hit, whichever comes first. Defaults to
     * 1 second.
     * </pre>
     *
     * <code>.google.protobuf.Duration buffer_flush_interval = 3 [(.validate.rules) = { ... }</code>
     */
    public Builder mergeBufferFlushInterval(com.google.protobuf.Duration value) {
      if (bufferFlushIntervalBuilder_ == null) {
        if (((bitField0_ & 0x00000004) != 0) &&
          bufferFlushInterval_ != null &&
          bufferFlushInterval_ != com.google.protobuf.Duration.getDefaultInstance()) {
          getBufferFlushIntervalBuilder().mergeFrom(value);
        } else {
          bufferFlushInterval_ = value;
        }
      } else {
        bufferFlushIntervalBuilder_.mergeFrom(value);
      }
      bitField0_ |= 0x00000004;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * Interval for flushing access logs to the gRPC stream. Logger will flush requests every time
     * this interval is elapsed, or when batch size limit is hit, whichever comes first. Defaults to
     * 1 second.
     * </pre>
     *
     * <code>.google.protobuf.Duration buffer_flush_interval = 3 [(.validate.rules) = { ... }</code>
     */
    public Builder clearBufferFlushInterval() {
      bitField0_ = (bitField0_ & ~0x00000004);
      bufferFlushInterval_ = null;
      if (bufferFlushIntervalBuilder_ != null) {
        bufferFlushIntervalBuilder_.dispose();
        bufferFlushIntervalBuilder_ = null;
      }
      onChanged();
      return this;
    }
    /**
     * <pre>
     * Interval for flushing access logs to the gRPC stream. Logger will flush requests every time
     * this interval is elapsed, or when batch size limit is hit, whichever comes first. Defaults to
     * 1 second.
     * </pre>
     *
     * <code>.google.protobuf.Duration buffer_flush_interval = 3 [(.validate.rules) = { ... }</code>
     */
    public com.google.protobuf.Duration.Builder getBufferFlushIntervalBuilder() {
      bitField0_ |= 0x00000004;
      onChanged();
      return getBufferFlushIntervalFieldBuilder().getBuilder();
    }
    /**
     * <pre>
     * Interval for flushing access logs to the gRPC stream. Logger will flush requests every time
     * this interval is elapsed, or when batch size limit is hit, whichever comes first. Defaults to
     * 1 second.
     * </pre>
     *
     * <code>.google.protobuf.Duration buffer_flush_interval = 3 [(.validate.rules) = { ... }</code>
     */
    public com.google.protobuf.DurationOrBuilder getBufferFlushIntervalOrBuilder() {
      if (bufferFlushIntervalBuilder_ != null) {
        return bufferFlushIntervalBuilder_.getMessageOrBuilder();
      } else {
        return bufferFlushInterval_ == null ?
            com.google.protobuf.Duration.getDefaultInstance() : bufferFlushInterval_;
      }
    }
    /**
     * <pre>
     * Interval for flushing access logs to the gRPC stream. Logger will flush requests every time
     * this interval is elapsed, or when batch size limit is hit, whichever comes first. Defaults to
     * 1 second.
     * </pre>
     *
     * <code>.google.protobuf.Duration buffer_flush_interval = 3 [(.validate.rules) = { ... }</code>
     */
    private com.google.protobuf.SingleFieldBuilderV3<
        com.google.protobuf.Duration, com.google.protobuf.Duration.Builder, com.google.protobuf.DurationOrBuilder> 
        getBufferFlushIntervalFieldBuilder() {
      if (bufferFlushIntervalBuilder_ == null) {
        bufferFlushIntervalBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
            com.google.protobuf.Duration, com.google.protobuf.Duration.Builder, com.google.protobuf.DurationOrBuilder>(
                getBufferFlushInterval(),
                getParentForChildren(),
                isClean());
        bufferFlushInterval_ = null;
      }
      return bufferFlushIntervalBuilder_;
    }

    private com.google.protobuf.UInt32Value bufferSizeBytes_;
    private com.google.protobuf.SingleFieldBuilderV3<
        com.google.protobuf.UInt32Value, com.google.protobuf.UInt32Value.Builder, com.google.protobuf.UInt32ValueOrBuilder> bufferSizeBytesBuilder_;
    /**
     * <pre>
     * Soft size limit in bytes for access log entries buffer. Logger will buffer requests until
     * this limit it hit, or every time flush interval is elapsed, whichever comes first. Setting it
     * to zero effectively disables the batching. Defaults to 16384.
     * </pre>
     *
     * <code>.google.protobuf.UInt32Value buffer_size_bytes = 4;</code>
     * @return Whether the bufferSizeBytes field is set.
     */
    public boolean hasBufferSizeBytes() {
      return ((bitField0_ & 0x00000008) != 0);
    }
    /**
     * <pre>
     * Soft size limit in bytes for access log entries buffer. Logger will buffer requests until
     * this limit it hit, or every time flush interval is elapsed, whichever comes first. Setting it
     * to zero effectively disables the batching. Defaults to 16384.
     * </pre>
     *
     * <code>.google.protobuf.UInt32Value buffer_size_bytes = 4;</code>
     * @return The bufferSizeBytes.
     */
    public com.google.protobuf.UInt32Value getBufferSizeBytes() {
      if (bufferSizeBytesBuilder_ == null) {
        return bufferSizeBytes_ == null ? com.google.protobuf.UInt32Value.getDefaultInstance() : bufferSizeBytes_;
      } else {
        return bufferSizeBytesBuilder_.getMessage();
      }
    }
    /**
     * <pre>
     * Soft size limit in bytes for access log entries buffer. Logger will buffer requests until
     * this limit it hit, or every time flush interval is elapsed, whichever comes first. Setting it
     * to zero effectively disables the batching. Defaults to 16384.
     * </pre>
     *
     * <code>.google.protobuf.UInt32Value buffer_size_bytes = 4;</code>
     */
    public Builder setBufferSizeBytes(com.google.protobuf.UInt32Value value) {
      if (bufferSizeBytesBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        bufferSizeBytes_ = value;
      } else {
        bufferSizeBytesBuilder_.setMessage(value);
      }
      bitField0_ |= 0x00000008;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * Soft size limit in bytes for access log entries buffer. Logger will buffer requests until
     * this limit it hit, or every time flush interval is elapsed, whichever comes first. Setting it
     * to zero effectively disables the batching. Defaults to 16384.
     * </pre>
     *
     * <code>.google.protobuf.UInt32Value buffer_size_bytes = 4;</code>
     */
    public Builder setBufferSizeBytes(
        com.google.protobuf.UInt32Value.Builder builderForValue) {
      if (bufferSizeBytesBuilder_ == null) {
        bufferSizeBytes_ = builderForValue.build();
      } else {
        bufferSizeBytesBuilder_.setMessage(builderForValue.build());
      }
      bitField0_ |= 0x00000008;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * Soft size limit in bytes for access log entries buffer. Logger will buffer requests until
     * this limit it hit, or every time flush interval is elapsed, whichever comes first. Setting it
     * to zero effectively disables the batching. Defaults to 16384.
     * </pre>
     *
     * <code>.google.protobuf.UInt32Value buffer_size_bytes = 4;</code>
     */
    public Builder mergeBufferSizeBytes(com.google.protobuf.UInt32Value value) {
      if (bufferSizeBytesBuilder_ == null) {
        if (((bitField0_ & 0x00000008) != 0) &&
          bufferSizeBytes_ != null &&
          bufferSizeBytes_ != com.google.protobuf.UInt32Value.getDefaultInstance()) {
          getBufferSizeBytesBuilder().mergeFrom(value);
        } else {
          bufferSizeBytes_ = value;
        }
      } else {
        bufferSizeBytesBuilder_.mergeFrom(value);
      }
      bitField0_ |= 0x00000008;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * Soft size limit in bytes for access log entries buffer. Logger will buffer requests until
     * this limit it hit, or every time flush interval is elapsed, whichever comes first. Setting it
     * to zero effectively disables the batching. Defaults to 16384.
     * </pre>
     *
     * <code>.google.protobuf.UInt32Value buffer_size_bytes = 4;</code>
     */
    public Builder clearBufferSizeBytes() {
      bitField0_ = (bitField0_ & ~0x00000008);
      bufferSizeBytes_ = null;
      if (bufferSizeBytesBuilder_ != null) {
        bufferSizeBytesBuilder_.dispose();
        bufferSizeBytesBuilder_ = null;
      }
      onChanged();
      return this;
    }
    /**
     * <pre>
     * Soft size limit in bytes for access log entries buffer. Logger will buffer requests until
     * this limit it hit, or every time flush interval is elapsed, whichever comes first. Setting it
     * to zero effectively disables the batching. Defaults to 16384.
     * </pre>
     *
     * <code>.google.protobuf.UInt32Value buffer_size_bytes = 4;</code>
     */
    public com.google.protobuf.UInt32Value.Builder getBufferSizeBytesBuilder() {
      bitField0_ |= 0x00000008;
      onChanged();
      return getBufferSizeBytesFieldBuilder().getBuilder();
    }
    /**
     * <pre>
     * Soft size limit in bytes for access log entries buffer. Logger will buffer requests until
     * this limit it hit, or every time flush interval is elapsed, whichever comes first. Setting it
     * to zero effectively disables the batching. Defaults to 16384.
     * </pre>
     *
     * <code>.google.protobuf.UInt32Value buffer_size_bytes = 4;</code>
     */
    public com.google.protobuf.UInt32ValueOrBuilder getBufferSizeBytesOrBuilder() {
      if (bufferSizeBytesBuilder_ != null) {
        return bufferSizeBytesBuilder_.getMessageOrBuilder();
      } else {
        return bufferSizeBytes_ == null ?
            com.google.protobuf.UInt32Value.getDefaultInstance() : bufferSizeBytes_;
      }
    }
    /**
     * <pre>
     * Soft size limit in bytes for access log entries buffer. Logger will buffer requests until
     * this limit it hit, or every time flush interval is elapsed, whichever comes first. Setting it
     * to zero effectively disables the batching. Defaults to 16384.
     * </pre>
     *
     * <code>.google.protobuf.UInt32Value buffer_size_bytes = 4;</code>
     */
    private com.google.protobuf.SingleFieldBuilderV3<
        com.google.protobuf.UInt32Value, com.google.protobuf.UInt32Value.Builder, com.google.protobuf.UInt32ValueOrBuilder> 
        getBufferSizeBytesFieldBuilder() {
      if (bufferSizeBytesBuilder_ == null) {
        bufferSizeBytesBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
            com.google.protobuf.UInt32Value, com.google.protobuf.UInt32Value.Builder, com.google.protobuf.UInt32ValueOrBuilder>(
                getBufferSizeBytes(),
                getParentForChildren(),
                isClean());
        bufferSizeBytes_ = null;
      }
      return bufferSizeBytesBuilder_;
    }

    private com.google.protobuf.LazyStringList filterStateObjectsToLog_ = com.google.protobuf.LazyStringArrayList.EMPTY;
    private void ensureFilterStateObjectsToLogIsMutable() {
      if (!((bitField0_ & 0x00000010) != 0)) {
        filterStateObjectsToLog_ = new com.google.protobuf.LazyStringArrayList(filterStateObjectsToLog_);
        bitField0_ |= 0x00000010;
       }
    }
    /**
     * <pre>
     * Additional filter state objects to log in :ref:`filter_state_objects
     * &lt;envoy_api_field_data.accesslog.v2.AccessLogCommon.filter_state_objects&gt;`.
     * Logger will call `FilterState::Object::serializeAsProto` to serialize the filter state object.
     * </pre>
     *
     * <code>repeated string filter_state_objects_to_log = 5;</code>
     * @return A list containing the filterStateObjectsToLog.
     */
    public com.google.protobuf.ProtocolStringList
        getFilterStateObjectsToLogList() {
      return filterStateObjectsToLog_.getUnmodifiableView();
    }
    /**
     * <pre>
     * Additional filter state objects to log in :ref:`filter_state_objects
     * &lt;envoy_api_field_data.accesslog.v2.AccessLogCommon.filter_state_objects&gt;`.
     * Logger will call `FilterState::Object::serializeAsProto` to serialize the filter state object.
     * </pre>
     *
     * <code>repeated string filter_state_objects_to_log = 5;</code>
     * @return The count of filterStateObjectsToLog.
     */
    public int getFilterStateObjectsToLogCount() {
      return filterStateObjectsToLog_.size();
    }
    /**
     * <pre>
     * Additional filter state objects to log in :ref:`filter_state_objects
     * &lt;envoy_api_field_data.accesslog.v2.AccessLogCommon.filter_state_objects&gt;`.
     * Logger will call `FilterState::Object::serializeAsProto` to serialize the filter state object.
     * </pre>
     *
     * <code>repeated string filter_state_objects_to_log = 5;</code>
     * @param index The index of the element to return.
     * @return The filterStateObjectsToLog at the given index.
     */
    public java.lang.String getFilterStateObjectsToLog(int index) {
      return filterStateObjectsToLog_.get(index);
    }
    /**
     * <pre>
     * Additional filter state objects to log in :ref:`filter_state_objects
     * &lt;envoy_api_field_data.accesslog.v2.AccessLogCommon.filter_state_objects&gt;`.
     * Logger will call `FilterState::Object::serializeAsProto` to serialize the filter state object.
     * </pre>
     *
     * <code>repeated string filter_state_objects_to_log = 5;</code>
     * @param index The index of the value to return.
     * @return The bytes of the filterStateObjectsToLog at the given index.
     */
    public com.google.protobuf.ByteString
        getFilterStateObjectsToLogBytes(int index) {
      return filterStateObjectsToLog_.getByteString(index);
    }
    /**
     * <pre>
     * Additional filter state objects to log in :ref:`filter_state_objects
     * &lt;envoy_api_field_data.accesslog.v2.AccessLogCommon.filter_state_objects&gt;`.
     * Logger will call `FilterState::Object::serializeAsProto` to serialize the filter state object.
     * </pre>
     *
     * <code>repeated string filter_state_objects_to_log = 5;</code>
     * @param index The index to set the value at.
     * @param value The filterStateObjectsToLog to set.
     * @return This builder for chaining.
     */
    public Builder setFilterStateObjectsToLog(
        int index, java.lang.String value) {
      if (value == null) { throw new NullPointerException(); }
      ensureFilterStateObjectsToLogIsMutable();
      filterStateObjectsToLog_.set(index, value);
      onChanged();
      return this;
    }
    /**
     * <pre>
     * Additional filter state objects to log in :ref:`filter_state_objects
     * &lt;envoy_api_field_data.accesslog.v2.AccessLogCommon.filter_state_objects&gt;`.
     * Logger will call `FilterState::Object::serializeAsProto` to serialize the filter state object.
     * </pre>
     *
     * <code>repeated string filter_state_objects_to_log = 5;</code>
     * @param value The filterStateObjectsToLog to add.
     * @return This builder for chaining.
     */
    public Builder addFilterStateObjectsToLog(
        java.lang.String value) {
      if (value == null) { throw new NullPointerException(); }
      ensureFilterStateObjectsToLogIsMutable();
      filterStateObjectsToLog_.add(value);
      onChanged();
      return this;
    }
    /**
     * <pre>
     * Additional filter state objects to log in :ref:`filter_state_objects
     * &lt;envoy_api_field_data.accesslog.v2.AccessLogCommon.filter_state_objects&gt;`.
     * Logger will call `FilterState::Object::serializeAsProto` to serialize the filter state object.
     * </pre>
     *
     * <code>repeated string filter_state_objects_to_log = 5;</code>
     * @param values The filterStateObjectsToLog to add.
     * @return This builder for chaining.
     */
    public Builder addAllFilterStateObjectsToLog(
        java.lang.Iterable<java.lang.String> values) {
      ensureFilterStateObjectsToLogIsMutable();
      com.google.protobuf.AbstractMessageLite.Builder.addAll(
          values, filterStateObjectsToLog_);
      onChanged();
      return this;
    }
    /**
     * <pre>
     * Additional filter state objects to log in :ref:`filter_state_objects
     * &lt;envoy_api_field_data.accesslog.v2.AccessLogCommon.filter_state_objects&gt;`.
     * Logger will call `FilterState::Object::serializeAsProto` to serialize the filter state object.
     * </pre>
     *
     * <code>repeated string filter_state_objects_to_log = 5;</code>
     * @return This builder for chaining.
     */
    public Builder clearFilterStateObjectsToLog() {
      filterStateObjectsToLog_ = com.google.protobuf.LazyStringArrayList.EMPTY;
      bitField0_ = (bitField0_ & ~0x00000010);
      onChanged();
      return this;
    }
    /**
     * <pre>
     * Additional filter state objects to log in :ref:`filter_state_objects
     * &lt;envoy_api_field_data.accesslog.v2.AccessLogCommon.filter_state_objects&gt;`.
     * Logger will call `FilterState::Object::serializeAsProto` to serialize the filter state object.
     * </pre>
     *
     * <code>repeated string filter_state_objects_to_log = 5;</code>
     * @param value The bytes of the filterStateObjectsToLog to add.
     * @return This builder for chaining.
     */
    public Builder addFilterStateObjectsToLogBytes(
        com.google.protobuf.ByteString value) {
      if (value == null) { throw new NullPointerException(); }
      checkByteStringIsUtf8(value);
      ensureFilterStateObjectsToLogIsMutable();
      filterStateObjectsToLog_.add(value);
      onChanged();
      return this;
    }
    @java.lang.Override
    public final Builder setUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return super.setUnknownFields(unknownFields);
    }

    @java.lang.Override
    public final Builder mergeUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return super.mergeUnknownFields(unknownFields);
    }


    // @@protoc_insertion_point(builder_scope:envoy.config.accesslog.v2.CommonGrpcAccessLogConfig)
  }

  // @@protoc_insertion_point(class_scope:envoy.config.accesslog.v2.CommonGrpcAccessLogConfig)
  private static final io.envoyproxy.envoy.config.accesslog.v2.CommonGrpcAccessLogConfig DEFAULT_INSTANCE;
  static {
    DEFAULT_INSTANCE = new io.envoyproxy.envoy.config.accesslog.v2.CommonGrpcAccessLogConfig();
  }

  public static io.envoyproxy.envoy.config.accesslog.v2.CommonGrpcAccessLogConfig getDefaultInstance() {
    return DEFAULT_INSTANCE;
  }

  private static final com.google.protobuf.Parser<CommonGrpcAccessLogConfig>
      PARSER = new com.google.protobuf.AbstractParser<CommonGrpcAccessLogConfig>() {
    @java.lang.Override
    public CommonGrpcAccessLogConfig parsePartialFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      Builder builder = newBuilder();
      try {
        builder.mergeFrom(input, extensionRegistry);
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(builder.buildPartial());
      } catch (com.google.protobuf.UninitializedMessageException e) {
        throw e.asInvalidProtocolBufferException().setUnfinishedMessage(builder.buildPartial());
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(e)
            .setUnfinishedMessage(builder.buildPartial());
      }
      return builder.buildPartial();
    }
  };

  public static com.google.protobuf.Parser<CommonGrpcAccessLogConfig> parser() {
    return PARSER;
  }

  @java.lang.Override
  public com.google.protobuf.Parser<CommonGrpcAccessLogConfig> getParserForType() {
    return PARSER;
  }

  @java.lang.Override
  public io.envoyproxy.envoy.config.accesslog.v2.CommonGrpcAccessLogConfig getDefaultInstanceForType() {
    return DEFAULT_INSTANCE;
  }

}

