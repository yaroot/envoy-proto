// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: envoy/config/cluster/v3/cluster.proto

package io.envoyproxy.envoy.config.cluster.v3;

public interface UpstreamConnectionOptionsOrBuilder extends
    // @@protoc_insertion_point(interface_extends:envoy.config.cluster.v3.UpstreamConnectionOptions)
    com.google.protobuf.MessageOrBuilder {

  /**
   * <pre>
   * If set then set SO_KEEPALIVE on the socket to enable TCP Keepalives.
   * </pre>
   *
   * <code>.envoy.config.core.v3.TcpKeepalive tcp_keepalive = 1;</code>
   * @return Whether the tcpKeepalive field is set.
   */
  boolean hasTcpKeepalive();
  /**
   * <pre>
   * If set then set SO_KEEPALIVE on the socket to enable TCP Keepalives.
   * </pre>
   *
   * <code>.envoy.config.core.v3.TcpKeepalive tcp_keepalive = 1;</code>
   * @return The tcpKeepalive.
   */
  io.envoyproxy.envoy.config.core.v3.TcpKeepalive getTcpKeepalive();
  /**
   * <pre>
   * If set then set SO_KEEPALIVE on the socket to enable TCP Keepalives.
   * </pre>
   *
   * <code>.envoy.config.core.v3.TcpKeepalive tcp_keepalive = 1;</code>
   */
  io.envoyproxy.envoy.config.core.v3.TcpKeepaliveOrBuilder getTcpKeepaliveOrBuilder();

  /**
   * <pre>
   * If enabled, associates the interface name of the local address with the upstream connection.
   * This can be used by extensions during processing of requests. The association mechanism is
   * implementation specific. Defaults to false due to performance concerns.
   * </pre>
   *
   * <code>bool set_local_interface_name_on_upstream_connections = 2;</code>
   * @return The setLocalInterfaceNameOnUpstreamConnections.
   */
  boolean getSetLocalInterfaceNameOnUpstreamConnections();
}
