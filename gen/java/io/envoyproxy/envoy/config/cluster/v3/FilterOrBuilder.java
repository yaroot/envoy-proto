// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: envoy/config/cluster/v3/filter.proto

package io.envoyproxy.envoy.config.cluster.v3;

public interface FilterOrBuilder extends
    // @@protoc_insertion_point(interface_extends:envoy.config.cluster.v3.Filter)
    com.google.protobuf.MessageOrBuilder {

  /**
   * <pre>
   * The name of the filter configuration.
   * </pre>
   *
   * <code>string name = 1 [(.validate.rules) = { ... }</code>
   * @return The name.
   */
  java.lang.String getName();
  /**
   * <pre>
   * The name of the filter configuration.
   * </pre>
   *
   * <code>string name = 1 [(.validate.rules) = { ... }</code>
   * @return The bytes for name.
   */
  com.google.protobuf.ByteString
      getNameBytes();

  /**
   * <pre>
   * Filter specific configuration which depends on the filter being
   * instantiated. See the supported filters for further documentation.
   * Note that Envoy's :ref:`downstream network
   * filters &lt;config_network_filters&gt;` are not valid upstream filters.
   * </pre>
   *
   * <code>.google.protobuf.Any typed_config = 2;</code>
   * @return Whether the typedConfig field is set.
   */
  boolean hasTypedConfig();
  /**
   * <pre>
   * Filter specific configuration which depends on the filter being
   * instantiated. See the supported filters for further documentation.
   * Note that Envoy's :ref:`downstream network
   * filters &lt;config_network_filters&gt;` are not valid upstream filters.
   * </pre>
   *
   * <code>.google.protobuf.Any typed_config = 2;</code>
   * @return The typedConfig.
   */
  com.google.protobuf.Any getTypedConfig();
  /**
   * <pre>
   * Filter specific configuration which depends on the filter being
   * instantiated. See the supported filters for further documentation.
   * Note that Envoy's :ref:`downstream network
   * filters &lt;config_network_filters&gt;` are not valid upstream filters.
   * </pre>
   *
   * <code>.google.protobuf.Any typed_config = 2;</code>
   */
  com.google.protobuf.AnyOrBuilder getTypedConfigOrBuilder();
}
