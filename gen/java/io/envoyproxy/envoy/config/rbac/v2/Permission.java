// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: envoy/config/rbac/v2/rbac.proto

package io.envoyproxy.envoy.config.rbac.v2;

/**
 * <pre>
 * Permission defines an action (or actions) that a principal can take.
 * [#next-free-field: 11]
 * </pre>
 *
 * Protobuf type {@code envoy.config.rbac.v2.Permission}
 */
public final class Permission extends
    com.google.protobuf.GeneratedMessageV3 implements
    // @@protoc_insertion_point(message_implements:envoy.config.rbac.v2.Permission)
    PermissionOrBuilder {
private static final long serialVersionUID = 0L;
  // Use Permission.newBuilder() to construct.
  private Permission(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
    super(builder);
  }
  private Permission() {
  }

  @java.lang.Override
  @SuppressWarnings({"unused"})
  protected java.lang.Object newInstance(
      UnusedPrivateParameter unused) {
    return new Permission();
  }

  @java.lang.Override
  public final com.google.protobuf.UnknownFieldSet
  getUnknownFields() {
    return this.unknownFields;
  }
  public static final com.google.protobuf.Descriptors.Descriptor
      getDescriptor() {
    return io.envoyproxy.envoy.config.rbac.v2.RbacProto.internal_static_envoy_config_rbac_v2_Permission_descriptor;
  }

  @java.lang.Override
  protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internalGetFieldAccessorTable() {
    return io.envoyproxy.envoy.config.rbac.v2.RbacProto.internal_static_envoy_config_rbac_v2_Permission_fieldAccessorTable
        .ensureFieldAccessorsInitialized(
            io.envoyproxy.envoy.config.rbac.v2.Permission.class, io.envoyproxy.envoy.config.rbac.v2.Permission.Builder.class);
  }

  public interface SetOrBuilder extends
      // @@protoc_insertion_point(interface_extends:envoy.config.rbac.v2.Permission.Set)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>repeated .envoy.config.rbac.v2.Permission rules = 1 [(.validate.rules) = { ... }</code>
     */
    java.util.List<io.envoyproxy.envoy.config.rbac.v2.Permission> 
        getRulesList();
    /**
     * <code>repeated .envoy.config.rbac.v2.Permission rules = 1 [(.validate.rules) = { ... }</code>
     */
    io.envoyproxy.envoy.config.rbac.v2.Permission getRules(int index);
    /**
     * <code>repeated .envoy.config.rbac.v2.Permission rules = 1 [(.validate.rules) = { ... }</code>
     */
    int getRulesCount();
    /**
     * <code>repeated .envoy.config.rbac.v2.Permission rules = 1 [(.validate.rules) = { ... }</code>
     */
    java.util.List<? extends io.envoyproxy.envoy.config.rbac.v2.PermissionOrBuilder> 
        getRulesOrBuilderList();
    /**
     * <code>repeated .envoy.config.rbac.v2.Permission rules = 1 [(.validate.rules) = { ... }</code>
     */
    io.envoyproxy.envoy.config.rbac.v2.PermissionOrBuilder getRulesOrBuilder(
        int index);
  }
  /**
   * <pre>
   * Used in the `and_rules` and `or_rules` fields in the `rule` oneof. Depending on the context,
   * each are applied with the associated behavior.
   * </pre>
   *
   * Protobuf type {@code envoy.config.rbac.v2.Permission.Set}
   */
  public static final class Set extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:envoy.config.rbac.v2.Permission.Set)
      SetOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use Set.newBuilder() to construct.
    private Set(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private Set() {
      rules_ = java.util.Collections.emptyList();
    }

    @java.lang.Override
    @SuppressWarnings({"unused"})
    protected java.lang.Object newInstance(
        UnusedPrivateParameter unused) {
      return new Set();
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return io.envoyproxy.envoy.config.rbac.v2.RbacProto.internal_static_envoy_config_rbac_v2_Permission_Set_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return io.envoyproxy.envoy.config.rbac.v2.RbacProto.internal_static_envoy_config_rbac_v2_Permission_Set_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              io.envoyproxy.envoy.config.rbac.v2.Permission.Set.class, io.envoyproxy.envoy.config.rbac.v2.Permission.Set.Builder.class);
    }

    public static final int RULES_FIELD_NUMBER = 1;
    @SuppressWarnings("serial")
    private java.util.List<io.envoyproxy.envoy.config.rbac.v2.Permission> rules_;
    /**
     * <code>repeated .envoy.config.rbac.v2.Permission rules = 1 [(.validate.rules) = { ... }</code>
     */
    @java.lang.Override
    public java.util.List<io.envoyproxy.envoy.config.rbac.v2.Permission> getRulesList() {
      return rules_;
    }
    /**
     * <code>repeated .envoy.config.rbac.v2.Permission rules = 1 [(.validate.rules) = { ... }</code>
     */
    @java.lang.Override
    public java.util.List<? extends io.envoyproxy.envoy.config.rbac.v2.PermissionOrBuilder> 
        getRulesOrBuilderList() {
      return rules_;
    }
    /**
     * <code>repeated .envoy.config.rbac.v2.Permission rules = 1 [(.validate.rules) = { ... }</code>
     */
    @java.lang.Override
    public int getRulesCount() {
      return rules_.size();
    }
    /**
     * <code>repeated .envoy.config.rbac.v2.Permission rules = 1 [(.validate.rules) = { ... }</code>
     */
    @java.lang.Override
    public io.envoyproxy.envoy.config.rbac.v2.Permission getRules(int index) {
      return rules_.get(index);
    }
    /**
     * <code>repeated .envoy.config.rbac.v2.Permission rules = 1 [(.validate.rules) = { ... }</code>
     */
    @java.lang.Override
    public io.envoyproxy.envoy.config.rbac.v2.PermissionOrBuilder getRulesOrBuilder(
        int index) {
      return rules_.get(index);
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      for (int i = 0; i < rules_.size(); i++) {
        output.writeMessage(1, rules_.get(i));
      }
      getUnknownFields().writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      for (int i = 0; i < rules_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, rules_.get(i));
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof io.envoyproxy.envoy.config.rbac.v2.Permission.Set)) {
        return super.equals(obj);
      }
      io.envoyproxy.envoy.config.rbac.v2.Permission.Set other = (io.envoyproxy.envoy.config.rbac.v2.Permission.Set) obj;

      if (!getRulesList()
          .equals(other.getRulesList())) return false;
      if (!getUnknownFields().equals(other.getUnknownFields())) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      if (getRulesCount() > 0) {
        hash = (37 * hash) + RULES_FIELD_NUMBER;
        hash = (53 * hash) + getRulesList().hashCode();
      }
      hash = (29 * hash) + getUnknownFields().hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static io.envoyproxy.envoy.config.rbac.v2.Permission.Set parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static io.envoyproxy.envoy.config.rbac.v2.Permission.Set parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static io.envoyproxy.envoy.config.rbac.v2.Permission.Set parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static io.envoyproxy.envoy.config.rbac.v2.Permission.Set parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static io.envoyproxy.envoy.config.rbac.v2.Permission.Set parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static io.envoyproxy.envoy.config.rbac.v2.Permission.Set parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static io.envoyproxy.envoy.config.rbac.v2.Permission.Set parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static io.envoyproxy.envoy.config.rbac.v2.Permission.Set parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static io.envoyproxy.envoy.config.rbac.v2.Permission.Set parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static io.envoyproxy.envoy.config.rbac.v2.Permission.Set parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static io.envoyproxy.envoy.config.rbac.v2.Permission.Set parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static io.envoyproxy.envoy.config.rbac.v2.Permission.Set parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(io.envoyproxy.envoy.config.rbac.v2.Permission.Set prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * <pre>
     * Used in the `and_rules` and `or_rules` fields in the `rule` oneof. Depending on the context,
     * each are applied with the associated behavior.
     * </pre>
     *
     * Protobuf type {@code envoy.config.rbac.v2.Permission.Set}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:envoy.config.rbac.v2.Permission.Set)
        io.envoyproxy.envoy.config.rbac.v2.Permission.SetOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return io.envoyproxy.envoy.config.rbac.v2.RbacProto.internal_static_envoy_config_rbac_v2_Permission_Set_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return io.envoyproxy.envoy.config.rbac.v2.RbacProto.internal_static_envoy_config_rbac_v2_Permission_Set_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                io.envoyproxy.envoy.config.rbac.v2.Permission.Set.class, io.envoyproxy.envoy.config.rbac.v2.Permission.Set.Builder.class);
      }

      // Construct using io.envoyproxy.envoy.config.rbac.v2.Permission.Set.newBuilder()
      private Builder() {

      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);

      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        bitField0_ = 0;
        if (rulesBuilder_ == null) {
          rules_ = java.util.Collections.emptyList();
        } else {
          rules_ = null;
          rulesBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000001);
        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return io.envoyproxy.envoy.config.rbac.v2.RbacProto.internal_static_envoy_config_rbac_v2_Permission_Set_descriptor;
      }

      @java.lang.Override
      public io.envoyproxy.envoy.config.rbac.v2.Permission.Set getDefaultInstanceForType() {
        return io.envoyproxy.envoy.config.rbac.v2.Permission.Set.getDefaultInstance();
      }

      @java.lang.Override
      public io.envoyproxy.envoy.config.rbac.v2.Permission.Set build() {
        io.envoyproxy.envoy.config.rbac.v2.Permission.Set result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public io.envoyproxy.envoy.config.rbac.v2.Permission.Set buildPartial() {
        io.envoyproxy.envoy.config.rbac.v2.Permission.Set result = new io.envoyproxy.envoy.config.rbac.v2.Permission.Set(this);
        buildPartialRepeatedFields(result);
        if (bitField0_ != 0) { buildPartial0(result); }
        onBuilt();
        return result;
      }

      private void buildPartialRepeatedFields(io.envoyproxy.envoy.config.rbac.v2.Permission.Set result) {
        if (rulesBuilder_ == null) {
          if (((bitField0_ & 0x00000001) != 0)) {
            rules_ = java.util.Collections.unmodifiableList(rules_);
            bitField0_ = (bitField0_ & ~0x00000001);
          }
          result.rules_ = rules_;
        } else {
          result.rules_ = rulesBuilder_.build();
        }
      }

      private void buildPartial0(io.envoyproxy.envoy.config.rbac.v2.Permission.Set result) {
        int from_bitField0_ = bitField0_;
      }

      @java.lang.Override
      public Builder clone() {
        return super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof io.envoyproxy.envoy.config.rbac.v2.Permission.Set) {
          return mergeFrom((io.envoyproxy.envoy.config.rbac.v2.Permission.Set)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(io.envoyproxy.envoy.config.rbac.v2.Permission.Set other) {
        if (other == io.envoyproxy.envoy.config.rbac.v2.Permission.Set.getDefaultInstance()) return this;
        if (rulesBuilder_ == null) {
          if (!other.rules_.isEmpty()) {
            if (rules_.isEmpty()) {
              rules_ = other.rules_;
              bitField0_ = (bitField0_ & ~0x00000001);
            } else {
              ensureRulesIsMutable();
              rules_.addAll(other.rules_);
            }
            onChanged();
          }
        } else {
          if (!other.rules_.isEmpty()) {
            if (rulesBuilder_.isEmpty()) {
              rulesBuilder_.dispose();
              rulesBuilder_ = null;
              rules_ = other.rules_;
              bitField0_ = (bitField0_ & ~0x00000001);
              rulesBuilder_ = 
                com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?
                   getRulesFieldBuilder() : null;
            } else {
              rulesBuilder_.addAllMessages(other.rules_);
            }
          }
        }
        this.mergeUnknownFields(other.getUnknownFields());
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        if (extensionRegistry == null) {
          throw new java.lang.NullPointerException();
        }
        try {
          boolean done = false;
          while (!done) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                done = true;
                break;
              case 10: {
                io.envoyproxy.envoy.config.rbac.v2.Permission m =
                    input.readMessage(
                        io.envoyproxy.envoy.config.rbac.v2.Permission.parser(),
                        extensionRegistry);
                if (rulesBuilder_ == null) {
                  ensureRulesIsMutable();
                  rules_.add(m);
                } else {
                  rulesBuilder_.addMessage(m);
                }
                break;
              } // case 10
              default: {
                if (!super.parseUnknownField(input, extensionRegistry, tag)) {
                  done = true; // was an endgroup tag
                }
                break;
              } // default:
            } // switch (tag)
          } // while (!done)
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.unwrapIOException();
        } finally {
          onChanged();
        } // finally
        return this;
      }
      private int bitField0_;

      private java.util.List<io.envoyproxy.envoy.config.rbac.v2.Permission> rules_ =
        java.util.Collections.emptyList();
      private void ensureRulesIsMutable() {
        if (!((bitField0_ & 0x00000001) != 0)) {
          rules_ = new java.util.ArrayList<io.envoyproxy.envoy.config.rbac.v2.Permission>(rules_);
          bitField0_ |= 0x00000001;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilderV3<
          io.envoyproxy.envoy.config.rbac.v2.Permission, io.envoyproxy.envoy.config.rbac.v2.Permission.Builder, io.envoyproxy.envoy.config.rbac.v2.PermissionOrBuilder> rulesBuilder_;

      /**
       * <code>repeated .envoy.config.rbac.v2.Permission rules = 1 [(.validate.rules) = { ... }</code>
       */
      public java.util.List<io.envoyproxy.envoy.config.rbac.v2.Permission> getRulesList() {
        if (rulesBuilder_ == null) {
          return java.util.Collections.unmodifiableList(rules_);
        } else {
          return rulesBuilder_.getMessageList();
        }
      }
      /**
       * <code>repeated .envoy.config.rbac.v2.Permission rules = 1 [(.validate.rules) = { ... }</code>
       */
      public int getRulesCount() {
        if (rulesBuilder_ == null) {
          return rules_.size();
        } else {
          return rulesBuilder_.getCount();
        }
      }
      /**
       * <code>repeated .envoy.config.rbac.v2.Permission rules = 1 [(.validate.rules) = { ... }</code>
       */
      public io.envoyproxy.envoy.config.rbac.v2.Permission getRules(int index) {
        if (rulesBuilder_ == null) {
          return rules_.get(index);
        } else {
          return rulesBuilder_.getMessage(index);
        }
      }
      /**
       * <code>repeated .envoy.config.rbac.v2.Permission rules = 1 [(.validate.rules) = { ... }</code>
       */
      public Builder setRules(
          int index, io.envoyproxy.envoy.config.rbac.v2.Permission value) {
        if (rulesBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureRulesIsMutable();
          rules_.set(index, value);
          onChanged();
        } else {
          rulesBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .envoy.config.rbac.v2.Permission rules = 1 [(.validate.rules) = { ... }</code>
       */
      public Builder setRules(
          int index, io.envoyproxy.envoy.config.rbac.v2.Permission.Builder builderForValue) {
        if (rulesBuilder_ == null) {
          ensureRulesIsMutable();
          rules_.set(index, builderForValue.build());
          onChanged();
        } else {
          rulesBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .envoy.config.rbac.v2.Permission rules = 1 [(.validate.rules) = { ... }</code>
       */
      public Builder addRules(io.envoyproxy.envoy.config.rbac.v2.Permission value) {
        if (rulesBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureRulesIsMutable();
          rules_.add(value);
          onChanged();
        } else {
          rulesBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <code>repeated .envoy.config.rbac.v2.Permission rules = 1 [(.validate.rules) = { ... }</code>
       */
      public Builder addRules(
          int index, io.envoyproxy.envoy.config.rbac.v2.Permission value) {
        if (rulesBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureRulesIsMutable();
          rules_.add(index, value);
          onChanged();
        } else {
          rulesBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .envoy.config.rbac.v2.Permission rules = 1 [(.validate.rules) = { ... }</code>
       */
      public Builder addRules(
          io.envoyproxy.envoy.config.rbac.v2.Permission.Builder builderForValue) {
        if (rulesBuilder_ == null) {
          ensureRulesIsMutable();
          rules_.add(builderForValue.build());
          onChanged();
        } else {
          rulesBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .envoy.config.rbac.v2.Permission rules = 1 [(.validate.rules) = { ... }</code>
       */
      public Builder addRules(
          int index, io.envoyproxy.envoy.config.rbac.v2.Permission.Builder builderForValue) {
        if (rulesBuilder_ == null) {
          ensureRulesIsMutable();
          rules_.add(index, builderForValue.build());
          onChanged();
        } else {
          rulesBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .envoy.config.rbac.v2.Permission rules = 1 [(.validate.rules) = { ... }</code>
       */
      public Builder addAllRules(
          java.lang.Iterable<? extends io.envoyproxy.envoy.config.rbac.v2.Permission> values) {
        if (rulesBuilder_ == null) {
          ensureRulesIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
              values, rules_);
          onChanged();
        } else {
          rulesBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <code>repeated .envoy.config.rbac.v2.Permission rules = 1 [(.validate.rules) = { ... }</code>
       */
      public Builder clearRules() {
        if (rulesBuilder_ == null) {
          rules_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000001);
          onChanged();
        } else {
          rulesBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>repeated .envoy.config.rbac.v2.Permission rules = 1 [(.validate.rules) = { ... }</code>
       */
      public Builder removeRules(int index) {
        if (rulesBuilder_ == null) {
          ensureRulesIsMutable();
          rules_.remove(index);
          onChanged();
        } else {
          rulesBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <code>repeated .envoy.config.rbac.v2.Permission rules = 1 [(.validate.rules) = { ... }</code>
       */
      public io.envoyproxy.envoy.config.rbac.v2.Permission.Builder getRulesBuilder(
          int index) {
        return getRulesFieldBuilder().getBuilder(index);
      }
      /**
       * <code>repeated .envoy.config.rbac.v2.Permission rules = 1 [(.validate.rules) = { ... }</code>
       */
      public io.envoyproxy.envoy.config.rbac.v2.PermissionOrBuilder getRulesOrBuilder(
          int index) {
        if (rulesBuilder_ == null) {
          return rules_.get(index);  } else {
          return rulesBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <code>repeated .envoy.config.rbac.v2.Permission rules = 1 [(.validate.rules) = { ... }</code>
       */
      public java.util.List<? extends io.envoyproxy.envoy.config.rbac.v2.PermissionOrBuilder> 
           getRulesOrBuilderList() {
        if (rulesBuilder_ != null) {
          return rulesBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(rules_);
        }
      }
      /**
       * <code>repeated .envoy.config.rbac.v2.Permission rules = 1 [(.validate.rules) = { ... }</code>
       */
      public io.envoyproxy.envoy.config.rbac.v2.Permission.Builder addRulesBuilder() {
        return getRulesFieldBuilder().addBuilder(
            io.envoyproxy.envoy.config.rbac.v2.Permission.getDefaultInstance());
      }
      /**
       * <code>repeated .envoy.config.rbac.v2.Permission rules = 1 [(.validate.rules) = { ... }</code>
       */
      public io.envoyproxy.envoy.config.rbac.v2.Permission.Builder addRulesBuilder(
          int index) {
        return getRulesFieldBuilder().addBuilder(
            index, io.envoyproxy.envoy.config.rbac.v2.Permission.getDefaultInstance());
      }
      /**
       * <code>repeated .envoy.config.rbac.v2.Permission rules = 1 [(.validate.rules) = { ... }</code>
       */
      public java.util.List<io.envoyproxy.envoy.config.rbac.v2.Permission.Builder> 
           getRulesBuilderList() {
        return getRulesFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilderV3<
          io.envoyproxy.envoy.config.rbac.v2.Permission, io.envoyproxy.envoy.config.rbac.v2.Permission.Builder, io.envoyproxy.envoy.config.rbac.v2.PermissionOrBuilder> 
          getRulesFieldBuilder() {
        if (rulesBuilder_ == null) {
          rulesBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<
              io.envoyproxy.envoy.config.rbac.v2.Permission, io.envoyproxy.envoy.config.rbac.v2.Permission.Builder, io.envoyproxy.envoy.config.rbac.v2.PermissionOrBuilder>(
                  rules_,
                  ((bitField0_ & 0x00000001) != 0),
                  getParentForChildren(),
                  isClean());
          rules_ = null;
        }
        return rulesBuilder_;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:envoy.config.rbac.v2.Permission.Set)
    }

    // @@protoc_insertion_point(class_scope:envoy.config.rbac.v2.Permission.Set)
    private static final io.envoyproxy.envoy.config.rbac.v2.Permission.Set DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new io.envoyproxy.envoy.config.rbac.v2.Permission.Set();
    }

    public static io.envoyproxy.envoy.config.rbac.v2.Permission.Set getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<Set>
        PARSER = new com.google.protobuf.AbstractParser<Set>() {
      @java.lang.Override
      public Set parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        Builder builder = newBuilder();
        try {
          builder.mergeFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.setUnfinishedMessage(builder.buildPartial());
        } catch (com.google.protobuf.UninitializedMessageException e) {
          throw e.asInvalidProtocolBufferException().setUnfinishedMessage(builder.buildPartial());
        } catch (java.io.IOException e) {
          throw new com.google.protobuf.InvalidProtocolBufferException(e)
              .setUnfinishedMessage(builder.buildPartial());
        }
        return builder.buildPartial();
      }
    };

    public static com.google.protobuf.Parser<Set> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<Set> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public io.envoyproxy.envoy.config.rbac.v2.Permission.Set getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  private int ruleCase_ = 0;
  private java.lang.Object rule_;
  public enum RuleCase
      implements com.google.protobuf.Internal.EnumLite,
          com.google.protobuf.AbstractMessage.InternalOneOfEnum {
    AND_RULES(1),
    OR_RULES(2),
    ANY(3),
    HEADER(4),
    URL_PATH(10),
    DESTINATION_IP(5),
    DESTINATION_PORT(6),
    METADATA(7),
    NOT_RULE(8),
    REQUESTED_SERVER_NAME(9),
    RULE_NOT_SET(0);
    private final int value;
    private RuleCase(int value) {
      this.value = value;
    }
    /**
     * @param value The number of the enum to look for.
     * @return The enum associated with the given number.
     * @deprecated Use {@link #forNumber(int)} instead.
     */
    @java.lang.Deprecated
    public static RuleCase valueOf(int value) {
      return forNumber(value);
    }

    public static RuleCase forNumber(int value) {
      switch (value) {
        case 1: return AND_RULES;
        case 2: return OR_RULES;
        case 3: return ANY;
        case 4: return HEADER;
        case 10: return URL_PATH;
        case 5: return DESTINATION_IP;
        case 6: return DESTINATION_PORT;
        case 7: return METADATA;
        case 8: return NOT_RULE;
        case 9: return REQUESTED_SERVER_NAME;
        case 0: return RULE_NOT_SET;
        default: return null;
      }
    }
    public int getNumber() {
      return this.value;
    }
  };

  public RuleCase
  getRuleCase() {
    return RuleCase.forNumber(
        ruleCase_);
  }

  public static final int AND_RULES_FIELD_NUMBER = 1;
  /**
   * <pre>
   * A set of rules that all must match in order to define the action.
   * </pre>
   *
   * <code>.envoy.config.rbac.v2.Permission.Set and_rules = 1;</code>
   * @return Whether the andRules field is set.
   */
  @java.lang.Override
  public boolean hasAndRules() {
    return ruleCase_ == 1;
  }
  /**
   * <pre>
   * A set of rules that all must match in order to define the action.
   * </pre>
   *
   * <code>.envoy.config.rbac.v2.Permission.Set and_rules = 1;</code>
   * @return The andRules.
   */
  @java.lang.Override
  public io.envoyproxy.envoy.config.rbac.v2.Permission.Set getAndRules() {
    if (ruleCase_ == 1) {
       return (io.envoyproxy.envoy.config.rbac.v2.Permission.Set) rule_;
    }
    return io.envoyproxy.envoy.config.rbac.v2.Permission.Set.getDefaultInstance();
  }
  /**
   * <pre>
   * A set of rules that all must match in order to define the action.
   * </pre>
   *
   * <code>.envoy.config.rbac.v2.Permission.Set and_rules = 1;</code>
   */
  @java.lang.Override
  public io.envoyproxy.envoy.config.rbac.v2.Permission.SetOrBuilder getAndRulesOrBuilder() {
    if (ruleCase_ == 1) {
       return (io.envoyproxy.envoy.config.rbac.v2.Permission.Set) rule_;
    }
    return io.envoyproxy.envoy.config.rbac.v2.Permission.Set.getDefaultInstance();
  }

  public static final int OR_RULES_FIELD_NUMBER = 2;
  /**
   * <pre>
   * A set of rules where at least one must match in order to define the action.
   * </pre>
   *
   * <code>.envoy.config.rbac.v2.Permission.Set or_rules = 2;</code>
   * @return Whether the orRules field is set.
   */
  @java.lang.Override
  public boolean hasOrRules() {
    return ruleCase_ == 2;
  }
  /**
   * <pre>
   * A set of rules where at least one must match in order to define the action.
   * </pre>
   *
   * <code>.envoy.config.rbac.v2.Permission.Set or_rules = 2;</code>
   * @return The orRules.
   */
  @java.lang.Override
  public io.envoyproxy.envoy.config.rbac.v2.Permission.Set getOrRules() {
    if (ruleCase_ == 2) {
       return (io.envoyproxy.envoy.config.rbac.v2.Permission.Set) rule_;
    }
    return io.envoyproxy.envoy.config.rbac.v2.Permission.Set.getDefaultInstance();
  }
  /**
   * <pre>
   * A set of rules where at least one must match in order to define the action.
   * </pre>
   *
   * <code>.envoy.config.rbac.v2.Permission.Set or_rules = 2;</code>
   */
  @java.lang.Override
  public io.envoyproxy.envoy.config.rbac.v2.Permission.SetOrBuilder getOrRulesOrBuilder() {
    if (ruleCase_ == 2) {
       return (io.envoyproxy.envoy.config.rbac.v2.Permission.Set) rule_;
    }
    return io.envoyproxy.envoy.config.rbac.v2.Permission.Set.getDefaultInstance();
  }

  public static final int ANY_FIELD_NUMBER = 3;
  /**
   * <pre>
   * When any is set, it matches any action.
   * </pre>
   *
   * <code>bool any = 3 [(.validate.rules) = { ... }</code>
   * @return Whether the any field is set.
   */
  @java.lang.Override
  public boolean hasAny() {
    return ruleCase_ == 3;
  }
  /**
   * <pre>
   * When any is set, it matches any action.
   * </pre>
   *
   * <code>bool any = 3 [(.validate.rules) = { ... }</code>
   * @return The any.
   */
  @java.lang.Override
  public boolean getAny() {
    if (ruleCase_ == 3) {
      return (java.lang.Boolean) rule_;
    }
    return false;
  }

  public static final int HEADER_FIELD_NUMBER = 4;
  /**
   * <pre>
   * A header (or pseudo-header such as :path or :method) on the incoming HTTP request. Only
   * available for HTTP request.
   * Note: the pseudo-header :path includes the query and fragment string. Use the `url_path`
   * field if you want to match the URL path without the query and fragment string.
   * </pre>
   *
   * <code>.envoy.api.v2.route.HeaderMatcher header = 4;</code>
   * @return Whether the header field is set.
   */
  @java.lang.Override
  public boolean hasHeader() {
    return ruleCase_ == 4;
  }
  /**
   * <pre>
   * A header (or pseudo-header such as :path or :method) on the incoming HTTP request. Only
   * available for HTTP request.
   * Note: the pseudo-header :path includes the query and fragment string. Use the `url_path`
   * field if you want to match the URL path without the query and fragment string.
   * </pre>
   *
   * <code>.envoy.api.v2.route.HeaderMatcher header = 4;</code>
   * @return The header.
   */
  @java.lang.Override
  public io.envoyproxy.envoy.api.v2.route.HeaderMatcher getHeader() {
    if (ruleCase_ == 4) {
       return (io.envoyproxy.envoy.api.v2.route.HeaderMatcher) rule_;
    }
    return io.envoyproxy.envoy.api.v2.route.HeaderMatcher.getDefaultInstance();
  }
  /**
   * <pre>
   * A header (or pseudo-header such as :path or :method) on the incoming HTTP request. Only
   * available for HTTP request.
   * Note: the pseudo-header :path includes the query and fragment string. Use the `url_path`
   * field if you want to match the URL path without the query and fragment string.
   * </pre>
   *
   * <code>.envoy.api.v2.route.HeaderMatcher header = 4;</code>
   */
  @java.lang.Override
  public io.envoyproxy.envoy.api.v2.route.HeaderMatcherOrBuilder getHeaderOrBuilder() {
    if (ruleCase_ == 4) {
       return (io.envoyproxy.envoy.api.v2.route.HeaderMatcher) rule_;
    }
    return io.envoyproxy.envoy.api.v2.route.HeaderMatcher.getDefaultInstance();
  }

  public static final int URL_PATH_FIELD_NUMBER = 10;
  /**
   * <pre>
   * A URL path on the incoming HTTP request. Only available for HTTP.
   * </pre>
   *
   * <code>.envoy.type.matcher.PathMatcher url_path = 10;</code>
   * @return Whether the urlPath field is set.
   */
  @java.lang.Override
  public boolean hasUrlPath() {
    return ruleCase_ == 10;
  }
  /**
   * <pre>
   * A URL path on the incoming HTTP request. Only available for HTTP.
   * </pre>
   *
   * <code>.envoy.type.matcher.PathMatcher url_path = 10;</code>
   * @return The urlPath.
   */
  @java.lang.Override
  public io.envoyproxy.envoy.type.matcher.PathMatcher getUrlPath() {
    if (ruleCase_ == 10) {
       return (io.envoyproxy.envoy.type.matcher.PathMatcher) rule_;
    }
    return io.envoyproxy.envoy.type.matcher.PathMatcher.getDefaultInstance();
  }
  /**
   * <pre>
   * A URL path on the incoming HTTP request. Only available for HTTP.
   * </pre>
   *
   * <code>.envoy.type.matcher.PathMatcher url_path = 10;</code>
   */
  @java.lang.Override
  public io.envoyproxy.envoy.type.matcher.PathMatcherOrBuilder getUrlPathOrBuilder() {
    if (ruleCase_ == 10) {
       return (io.envoyproxy.envoy.type.matcher.PathMatcher) rule_;
    }
    return io.envoyproxy.envoy.type.matcher.PathMatcher.getDefaultInstance();
  }

  public static final int DESTINATION_IP_FIELD_NUMBER = 5;
  /**
   * <pre>
   * A CIDR block that describes the destination IP.
   * </pre>
   *
   * <code>.envoy.api.v2.core.CidrRange destination_ip = 5;</code>
   * @return Whether the destinationIp field is set.
   */
  @java.lang.Override
  public boolean hasDestinationIp() {
    return ruleCase_ == 5;
  }
  /**
   * <pre>
   * A CIDR block that describes the destination IP.
   * </pre>
   *
   * <code>.envoy.api.v2.core.CidrRange destination_ip = 5;</code>
   * @return The destinationIp.
   */
  @java.lang.Override
  public io.envoyproxy.envoy.api.v2.core.CidrRange getDestinationIp() {
    if (ruleCase_ == 5) {
       return (io.envoyproxy.envoy.api.v2.core.CidrRange) rule_;
    }
    return io.envoyproxy.envoy.api.v2.core.CidrRange.getDefaultInstance();
  }
  /**
   * <pre>
   * A CIDR block that describes the destination IP.
   * </pre>
   *
   * <code>.envoy.api.v2.core.CidrRange destination_ip = 5;</code>
   */
  @java.lang.Override
  public io.envoyproxy.envoy.api.v2.core.CidrRangeOrBuilder getDestinationIpOrBuilder() {
    if (ruleCase_ == 5) {
       return (io.envoyproxy.envoy.api.v2.core.CidrRange) rule_;
    }
    return io.envoyproxy.envoy.api.v2.core.CidrRange.getDefaultInstance();
  }

  public static final int DESTINATION_PORT_FIELD_NUMBER = 6;
  /**
   * <pre>
   * A port number that describes the destination port connecting to.
   * </pre>
   *
   * <code>uint32 destination_port = 6 [(.validate.rules) = { ... }</code>
   * @return Whether the destinationPort field is set.
   */
  @java.lang.Override
  public boolean hasDestinationPort() {
    return ruleCase_ == 6;
  }
  /**
   * <pre>
   * A port number that describes the destination port connecting to.
   * </pre>
   *
   * <code>uint32 destination_port = 6 [(.validate.rules) = { ... }</code>
   * @return The destinationPort.
   */
  @java.lang.Override
  public int getDestinationPort() {
    if (ruleCase_ == 6) {
      return (java.lang.Integer) rule_;
    }
    return 0;
  }

  public static final int METADATA_FIELD_NUMBER = 7;
  /**
   * <pre>
   * Metadata that describes additional information about the action.
   * </pre>
   *
   * <code>.envoy.type.matcher.MetadataMatcher metadata = 7;</code>
   * @return Whether the metadata field is set.
   */
  @java.lang.Override
  public boolean hasMetadata() {
    return ruleCase_ == 7;
  }
  /**
   * <pre>
   * Metadata that describes additional information about the action.
   * </pre>
   *
   * <code>.envoy.type.matcher.MetadataMatcher metadata = 7;</code>
   * @return The metadata.
   */
  @java.lang.Override
  public io.envoyproxy.envoy.type.matcher.MetadataMatcher getMetadata() {
    if (ruleCase_ == 7) {
       return (io.envoyproxy.envoy.type.matcher.MetadataMatcher) rule_;
    }
    return io.envoyproxy.envoy.type.matcher.MetadataMatcher.getDefaultInstance();
  }
  /**
   * <pre>
   * Metadata that describes additional information about the action.
   * </pre>
   *
   * <code>.envoy.type.matcher.MetadataMatcher metadata = 7;</code>
   */
  @java.lang.Override
  public io.envoyproxy.envoy.type.matcher.MetadataMatcherOrBuilder getMetadataOrBuilder() {
    if (ruleCase_ == 7) {
       return (io.envoyproxy.envoy.type.matcher.MetadataMatcher) rule_;
    }
    return io.envoyproxy.envoy.type.matcher.MetadataMatcher.getDefaultInstance();
  }

  public static final int NOT_RULE_FIELD_NUMBER = 8;
  /**
   * <pre>
   * Negates matching the provided permission. For instance, if the value of `not_rule` would
   * match, this permission would not match. Conversely, if the value of `not_rule` would not
   * match, this permission would match.
   * </pre>
   *
   * <code>.envoy.config.rbac.v2.Permission not_rule = 8;</code>
   * @return Whether the notRule field is set.
   */
  @java.lang.Override
  public boolean hasNotRule() {
    return ruleCase_ == 8;
  }
  /**
   * <pre>
   * Negates matching the provided permission. For instance, if the value of `not_rule` would
   * match, this permission would not match. Conversely, if the value of `not_rule` would not
   * match, this permission would match.
   * </pre>
   *
   * <code>.envoy.config.rbac.v2.Permission not_rule = 8;</code>
   * @return The notRule.
   */
  @java.lang.Override
  public io.envoyproxy.envoy.config.rbac.v2.Permission getNotRule() {
    if (ruleCase_ == 8) {
       return (io.envoyproxy.envoy.config.rbac.v2.Permission) rule_;
    }
    return io.envoyproxy.envoy.config.rbac.v2.Permission.getDefaultInstance();
  }
  /**
   * <pre>
   * Negates matching the provided permission. For instance, if the value of `not_rule` would
   * match, this permission would not match. Conversely, if the value of `not_rule` would not
   * match, this permission would match.
   * </pre>
   *
   * <code>.envoy.config.rbac.v2.Permission not_rule = 8;</code>
   */
  @java.lang.Override
  public io.envoyproxy.envoy.config.rbac.v2.PermissionOrBuilder getNotRuleOrBuilder() {
    if (ruleCase_ == 8) {
       return (io.envoyproxy.envoy.config.rbac.v2.Permission) rule_;
    }
    return io.envoyproxy.envoy.config.rbac.v2.Permission.getDefaultInstance();
  }

  public static final int REQUESTED_SERVER_NAME_FIELD_NUMBER = 9;
  /**
   * <pre>
   * The request server from the client's connection request. This is
   * typically TLS SNI.
   * .. attention::
   *   The behavior of this field may be affected by how Envoy is configured
   *   as explained below.
   *   * If the :ref:`TLS Inspector &lt;config_listener_filters_tls_inspector&gt;`
   *     filter is not added, and if a `FilterChainMatch` is not defined for
   *     the :ref:`server name &lt;envoy_api_field_listener.FilterChainMatch.server_names&gt;`,
   *     a TLS connection's requested SNI server name will be treated as if it
   *     wasn't present.
   *   * A :ref:`listener filter &lt;arch_overview_listener_filters&gt;` may
   *     overwrite a connection's requested server name within Envoy.
   * Please refer to :ref:`this FAQ entry &lt;faq_how_to_setup_sni&gt;` to learn to
   * setup SNI.
   * </pre>
   *
   * <code>.envoy.type.matcher.StringMatcher requested_server_name = 9;</code>
   * @return Whether the requestedServerName field is set.
   */
  @java.lang.Override
  public boolean hasRequestedServerName() {
    return ruleCase_ == 9;
  }
  /**
   * <pre>
   * The request server from the client's connection request. This is
   * typically TLS SNI.
   * .. attention::
   *   The behavior of this field may be affected by how Envoy is configured
   *   as explained below.
   *   * If the :ref:`TLS Inspector &lt;config_listener_filters_tls_inspector&gt;`
   *     filter is not added, and if a `FilterChainMatch` is not defined for
   *     the :ref:`server name &lt;envoy_api_field_listener.FilterChainMatch.server_names&gt;`,
   *     a TLS connection's requested SNI server name will be treated as if it
   *     wasn't present.
   *   * A :ref:`listener filter &lt;arch_overview_listener_filters&gt;` may
   *     overwrite a connection's requested server name within Envoy.
   * Please refer to :ref:`this FAQ entry &lt;faq_how_to_setup_sni&gt;` to learn to
   * setup SNI.
   * </pre>
   *
   * <code>.envoy.type.matcher.StringMatcher requested_server_name = 9;</code>
   * @return The requestedServerName.
   */
  @java.lang.Override
  public io.envoyproxy.envoy.type.matcher.StringMatcher getRequestedServerName() {
    if (ruleCase_ == 9) {
       return (io.envoyproxy.envoy.type.matcher.StringMatcher) rule_;
    }
    return io.envoyproxy.envoy.type.matcher.StringMatcher.getDefaultInstance();
  }
  /**
   * <pre>
   * The request server from the client's connection request. This is
   * typically TLS SNI.
   * .. attention::
   *   The behavior of this field may be affected by how Envoy is configured
   *   as explained below.
   *   * If the :ref:`TLS Inspector &lt;config_listener_filters_tls_inspector&gt;`
   *     filter is not added, and if a `FilterChainMatch` is not defined for
   *     the :ref:`server name &lt;envoy_api_field_listener.FilterChainMatch.server_names&gt;`,
   *     a TLS connection's requested SNI server name will be treated as if it
   *     wasn't present.
   *   * A :ref:`listener filter &lt;arch_overview_listener_filters&gt;` may
   *     overwrite a connection's requested server name within Envoy.
   * Please refer to :ref:`this FAQ entry &lt;faq_how_to_setup_sni&gt;` to learn to
   * setup SNI.
   * </pre>
   *
   * <code>.envoy.type.matcher.StringMatcher requested_server_name = 9;</code>
   */
  @java.lang.Override
  public io.envoyproxy.envoy.type.matcher.StringMatcherOrBuilder getRequestedServerNameOrBuilder() {
    if (ruleCase_ == 9) {
       return (io.envoyproxy.envoy.type.matcher.StringMatcher) rule_;
    }
    return io.envoyproxy.envoy.type.matcher.StringMatcher.getDefaultInstance();
  }

  private byte memoizedIsInitialized = -1;
  @java.lang.Override
  public final boolean isInitialized() {
    byte isInitialized = memoizedIsInitialized;
    if (isInitialized == 1) return true;
    if (isInitialized == 0) return false;

    memoizedIsInitialized = 1;
    return true;
  }

  @java.lang.Override
  public void writeTo(com.google.protobuf.CodedOutputStream output)
                      throws java.io.IOException {
    if (ruleCase_ == 1) {
      output.writeMessage(1, (io.envoyproxy.envoy.config.rbac.v2.Permission.Set) rule_);
    }
    if (ruleCase_ == 2) {
      output.writeMessage(2, (io.envoyproxy.envoy.config.rbac.v2.Permission.Set) rule_);
    }
    if (ruleCase_ == 3) {
      output.writeBool(
          3, (boolean)((java.lang.Boolean) rule_));
    }
    if (ruleCase_ == 4) {
      output.writeMessage(4, (io.envoyproxy.envoy.api.v2.route.HeaderMatcher) rule_);
    }
    if (ruleCase_ == 5) {
      output.writeMessage(5, (io.envoyproxy.envoy.api.v2.core.CidrRange) rule_);
    }
    if (ruleCase_ == 6) {
      output.writeUInt32(
          6, (int)((java.lang.Integer) rule_));
    }
    if (ruleCase_ == 7) {
      output.writeMessage(7, (io.envoyproxy.envoy.type.matcher.MetadataMatcher) rule_);
    }
    if (ruleCase_ == 8) {
      output.writeMessage(8, (io.envoyproxy.envoy.config.rbac.v2.Permission) rule_);
    }
    if (ruleCase_ == 9) {
      output.writeMessage(9, (io.envoyproxy.envoy.type.matcher.StringMatcher) rule_);
    }
    if (ruleCase_ == 10) {
      output.writeMessage(10, (io.envoyproxy.envoy.type.matcher.PathMatcher) rule_);
    }
    getUnknownFields().writeTo(output);
  }

  @java.lang.Override
  public int getSerializedSize() {
    int size = memoizedSize;
    if (size != -1) return size;

    size = 0;
    if (ruleCase_ == 1) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(1, (io.envoyproxy.envoy.config.rbac.v2.Permission.Set) rule_);
    }
    if (ruleCase_ == 2) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(2, (io.envoyproxy.envoy.config.rbac.v2.Permission.Set) rule_);
    }
    if (ruleCase_ == 3) {
      size += com.google.protobuf.CodedOutputStream
        .computeBoolSize(
            3, (boolean)((java.lang.Boolean) rule_));
    }
    if (ruleCase_ == 4) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(4, (io.envoyproxy.envoy.api.v2.route.HeaderMatcher) rule_);
    }
    if (ruleCase_ == 5) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(5, (io.envoyproxy.envoy.api.v2.core.CidrRange) rule_);
    }
    if (ruleCase_ == 6) {
      size += com.google.protobuf.CodedOutputStream
        .computeUInt32Size(
            6, (int)((java.lang.Integer) rule_));
    }
    if (ruleCase_ == 7) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(7, (io.envoyproxy.envoy.type.matcher.MetadataMatcher) rule_);
    }
    if (ruleCase_ == 8) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(8, (io.envoyproxy.envoy.config.rbac.v2.Permission) rule_);
    }
    if (ruleCase_ == 9) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(9, (io.envoyproxy.envoy.type.matcher.StringMatcher) rule_);
    }
    if (ruleCase_ == 10) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(10, (io.envoyproxy.envoy.type.matcher.PathMatcher) rule_);
    }
    size += getUnknownFields().getSerializedSize();
    memoizedSize = size;
    return size;
  }

  @java.lang.Override
  public boolean equals(final java.lang.Object obj) {
    if (obj == this) {
     return true;
    }
    if (!(obj instanceof io.envoyproxy.envoy.config.rbac.v2.Permission)) {
      return super.equals(obj);
    }
    io.envoyproxy.envoy.config.rbac.v2.Permission other = (io.envoyproxy.envoy.config.rbac.v2.Permission) obj;

    if (!getRuleCase().equals(other.getRuleCase())) return false;
    switch (ruleCase_) {
      case 1:
        if (!getAndRules()
            .equals(other.getAndRules())) return false;
        break;
      case 2:
        if (!getOrRules()
            .equals(other.getOrRules())) return false;
        break;
      case 3:
        if (getAny()
            != other.getAny()) return false;
        break;
      case 4:
        if (!getHeader()
            .equals(other.getHeader())) return false;
        break;
      case 10:
        if (!getUrlPath()
            .equals(other.getUrlPath())) return false;
        break;
      case 5:
        if (!getDestinationIp()
            .equals(other.getDestinationIp())) return false;
        break;
      case 6:
        if (getDestinationPort()
            != other.getDestinationPort()) return false;
        break;
      case 7:
        if (!getMetadata()
            .equals(other.getMetadata())) return false;
        break;
      case 8:
        if (!getNotRule()
            .equals(other.getNotRule())) return false;
        break;
      case 9:
        if (!getRequestedServerName()
            .equals(other.getRequestedServerName())) return false;
        break;
      case 0:
      default:
    }
    if (!getUnknownFields().equals(other.getUnknownFields())) return false;
    return true;
  }

  @java.lang.Override
  public int hashCode() {
    if (memoizedHashCode != 0) {
      return memoizedHashCode;
    }
    int hash = 41;
    hash = (19 * hash) + getDescriptor().hashCode();
    switch (ruleCase_) {
      case 1:
        hash = (37 * hash) + AND_RULES_FIELD_NUMBER;
        hash = (53 * hash) + getAndRules().hashCode();
        break;
      case 2:
        hash = (37 * hash) + OR_RULES_FIELD_NUMBER;
        hash = (53 * hash) + getOrRules().hashCode();
        break;
      case 3:
        hash = (37 * hash) + ANY_FIELD_NUMBER;
        hash = (53 * hash) + com.google.protobuf.Internal.hashBoolean(
            getAny());
        break;
      case 4:
        hash = (37 * hash) + HEADER_FIELD_NUMBER;
        hash = (53 * hash) + getHeader().hashCode();
        break;
      case 10:
        hash = (37 * hash) + URL_PATH_FIELD_NUMBER;
        hash = (53 * hash) + getUrlPath().hashCode();
        break;
      case 5:
        hash = (37 * hash) + DESTINATION_IP_FIELD_NUMBER;
        hash = (53 * hash) + getDestinationIp().hashCode();
        break;
      case 6:
        hash = (37 * hash) + DESTINATION_PORT_FIELD_NUMBER;
        hash = (53 * hash) + getDestinationPort();
        break;
      case 7:
        hash = (37 * hash) + METADATA_FIELD_NUMBER;
        hash = (53 * hash) + getMetadata().hashCode();
        break;
      case 8:
        hash = (37 * hash) + NOT_RULE_FIELD_NUMBER;
        hash = (53 * hash) + getNotRule().hashCode();
        break;
      case 9:
        hash = (37 * hash) + REQUESTED_SERVER_NAME_FIELD_NUMBER;
        hash = (53 * hash) + getRequestedServerName().hashCode();
        break;
      case 0:
      default:
    }
    hash = (29 * hash) + getUnknownFields().hashCode();
    memoizedHashCode = hash;
    return hash;
  }

  public static io.envoyproxy.envoy.config.rbac.v2.Permission parseFrom(
      java.nio.ByteBuffer data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static io.envoyproxy.envoy.config.rbac.v2.Permission parseFrom(
      java.nio.ByteBuffer data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static io.envoyproxy.envoy.config.rbac.v2.Permission parseFrom(
      com.google.protobuf.ByteString data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static io.envoyproxy.envoy.config.rbac.v2.Permission parseFrom(
      com.google.protobuf.ByteString data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static io.envoyproxy.envoy.config.rbac.v2.Permission parseFrom(byte[] data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static io.envoyproxy.envoy.config.rbac.v2.Permission parseFrom(
      byte[] data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static io.envoyproxy.envoy.config.rbac.v2.Permission parseFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input);
  }
  public static io.envoyproxy.envoy.config.rbac.v2.Permission parseFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input, extensionRegistry);
  }
  public static io.envoyproxy.envoy.config.rbac.v2.Permission parseDelimitedFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseDelimitedWithIOException(PARSER, input);
  }
  public static io.envoyproxy.envoy.config.rbac.v2.Permission parseDelimitedFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
  }
  public static io.envoyproxy.envoy.config.rbac.v2.Permission parseFrom(
      com.google.protobuf.CodedInputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input);
  }
  public static io.envoyproxy.envoy.config.rbac.v2.Permission parseFrom(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input, extensionRegistry);
  }

  @java.lang.Override
  public Builder newBuilderForType() { return newBuilder(); }
  public static Builder newBuilder() {
    return DEFAULT_INSTANCE.toBuilder();
  }
  public static Builder newBuilder(io.envoyproxy.envoy.config.rbac.v2.Permission prototype) {
    return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
  }
  @java.lang.Override
  public Builder toBuilder() {
    return this == DEFAULT_INSTANCE
        ? new Builder() : new Builder().mergeFrom(this);
  }

  @java.lang.Override
  protected Builder newBuilderForType(
      com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
    Builder builder = new Builder(parent);
    return builder;
  }
  /**
   * <pre>
   * Permission defines an action (or actions) that a principal can take.
   * [#next-free-field: 11]
   * </pre>
   *
   * Protobuf type {@code envoy.config.rbac.v2.Permission}
   */
  public static final class Builder extends
      com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
      // @@protoc_insertion_point(builder_implements:envoy.config.rbac.v2.Permission)
      io.envoyproxy.envoy.config.rbac.v2.PermissionOrBuilder {
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return io.envoyproxy.envoy.config.rbac.v2.RbacProto.internal_static_envoy_config_rbac_v2_Permission_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return io.envoyproxy.envoy.config.rbac.v2.RbacProto.internal_static_envoy_config_rbac_v2_Permission_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              io.envoyproxy.envoy.config.rbac.v2.Permission.class, io.envoyproxy.envoy.config.rbac.v2.Permission.Builder.class);
    }

    // Construct using io.envoyproxy.envoy.config.rbac.v2.Permission.newBuilder()
    private Builder() {

    }

    private Builder(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      super(parent);

    }
    @java.lang.Override
    public Builder clear() {
      super.clear();
      bitField0_ = 0;
      if (andRulesBuilder_ != null) {
        andRulesBuilder_.clear();
      }
      if (orRulesBuilder_ != null) {
        orRulesBuilder_.clear();
      }
      if (headerBuilder_ != null) {
        headerBuilder_.clear();
      }
      if (urlPathBuilder_ != null) {
        urlPathBuilder_.clear();
      }
      if (destinationIpBuilder_ != null) {
        destinationIpBuilder_.clear();
      }
      if (metadataBuilder_ != null) {
        metadataBuilder_.clear();
      }
      if (notRuleBuilder_ != null) {
        notRuleBuilder_.clear();
      }
      if (requestedServerNameBuilder_ != null) {
        requestedServerNameBuilder_.clear();
      }
      ruleCase_ = 0;
      rule_ = null;
      return this;
    }

    @java.lang.Override
    public com.google.protobuf.Descriptors.Descriptor
        getDescriptorForType() {
      return io.envoyproxy.envoy.config.rbac.v2.RbacProto.internal_static_envoy_config_rbac_v2_Permission_descriptor;
    }

    @java.lang.Override
    public io.envoyproxy.envoy.config.rbac.v2.Permission getDefaultInstanceForType() {
      return io.envoyproxy.envoy.config.rbac.v2.Permission.getDefaultInstance();
    }

    @java.lang.Override
    public io.envoyproxy.envoy.config.rbac.v2.Permission build() {
      io.envoyproxy.envoy.config.rbac.v2.Permission result = buildPartial();
      if (!result.isInitialized()) {
        throw newUninitializedMessageException(result);
      }
      return result;
    }

    @java.lang.Override
    public io.envoyproxy.envoy.config.rbac.v2.Permission buildPartial() {
      io.envoyproxy.envoy.config.rbac.v2.Permission result = new io.envoyproxy.envoy.config.rbac.v2.Permission(this);
      if (bitField0_ != 0) { buildPartial0(result); }
      buildPartialOneofs(result);
      onBuilt();
      return result;
    }

    private void buildPartial0(io.envoyproxy.envoy.config.rbac.v2.Permission result) {
      int from_bitField0_ = bitField0_;
    }

    private void buildPartialOneofs(io.envoyproxy.envoy.config.rbac.v2.Permission result) {
      result.ruleCase_ = ruleCase_;
      result.rule_ = this.rule_;
      if (ruleCase_ == 1 &&
          andRulesBuilder_ != null) {
        result.rule_ = andRulesBuilder_.build();
      }
      if (ruleCase_ == 2 &&
          orRulesBuilder_ != null) {
        result.rule_ = orRulesBuilder_.build();
      }
      if (ruleCase_ == 4 &&
          headerBuilder_ != null) {
        result.rule_ = headerBuilder_.build();
      }
      if (ruleCase_ == 10 &&
          urlPathBuilder_ != null) {
        result.rule_ = urlPathBuilder_.build();
      }
      if (ruleCase_ == 5 &&
          destinationIpBuilder_ != null) {
        result.rule_ = destinationIpBuilder_.build();
      }
      if (ruleCase_ == 7 &&
          metadataBuilder_ != null) {
        result.rule_ = metadataBuilder_.build();
      }
      if (ruleCase_ == 8 &&
          notRuleBuilder_ != null) {
        result.rule_ = notRuleBuilder_.build();
      }
      if (ruleCase_ == 9 &&
          requestedServerNameBuilder_ != null) {
        result.rule_ = requestedServerNameBuilder_.build();
      }
    }

    @java.lang.Override
    public Builder clone() {
      return super.clone();
    }
    @java.lang.Override
    public Builder setField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        java.lang.Object value) {
      return super.setField(field, value);
    }
    @java.lang.Override
    public Builder clearField(
        com.google.protobuf.Descriptors.FieldDescriptor field) {
      return super.clearField(field);
    }
    @java.lang.Override
    public Builder clearOneof(
        com.google.protobuf.Descriptors.OneofDescriptor oneof) {
      return super.clearOneof(oneof);
    }
    @java.lang.Override
    public Builder setRepeatedField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        int index, java.lang.Object value) {
      return super.setRepeatedField(field, index, value);
    }
    @java.lang.Override
    public Builder addRepeatedField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        java.lang.Object value) {
      return super.addRepeatedField(field, value);
    }
    @java.lang.Override
    public Builder mergeFrom(com.google.protobuf.Message other) {
      if (other instanceof io.envoyproxy.envoy.config.rbac.v2.Permission) {
        return mergeFrom((io.envoyproxy.envoy.config.rbac.v2.Permission)other);
      } else {
        super.mergeFrom(other);
        return this;
      }
    }

    public Builder mergeFrom(io.envoyproxy.envoy.config.rbac.v2.Permission other) {
      if (other == io.envoyproxy.envoy.config.rbac.v2.Permission.getDefaultInstance()) return this;
      switch (other.getRuleCase()) {
        case AND_RULES: {
          mergeAndRules(other.getAndRules());
          break;
        }
        case OR_RULES: {
          mergeOrRules(other.getOrRules());
          break;
        }
        case ANY: {
          setAny(other.getAny());
          break;
        }
        case HEADER: {
          mergeHeader(other.getHeader());
          break;
        }
        case URL_PATH: {
          mergeUrlPath(other.getUrlPath());
          break;
        }
        case DESTINATION_IP: {
          mergeDestinationIp(other.getDestinationIp());
          break;
        }
        case DESTINATION_PORT: {
          setDestinationPort(other.getDestinationPort());
          break;
        }
        case METADATA: {
          mergeMetadata(other.getMetadata());
          break;
        }
        case NOT_RULE: {
          mergeNotRule(other.getNotRule());
          break;
        }
        case REQUESTED_SERVER_NAME: {
          mergeRequestedServerName(other.getRequestedServerName());
          break;
        }
        case RULE_NOT_SET: {
          break;
        }
      }
      this.mergeUnknownFields(other.getUnknownFields());
      onChanged();
      return this;
    }

    @java.lang.Override
    public final boolean isInitialized() {
      return true;
    }

    @java.lang.Override
    public Builder mergeFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 10: {
              input.readMessage(
                  getAndRulesFieldBuilder().getBuilder(),
                  extensionRegistry);
              ruleCase_ = 1;
              break;
            } // case 10
            case 18: {
              input.readMessage(
                  getOrRulesFieldBuilder().getBuilder(),
                  extensionRegistry);
              ruleCase_ = 2;
              break;
            } // case 18
            case 24: {
              rule_ = input.readBool();
              ruleCase_ = 3;
              break;
            } // case 24
            case 34: {
              input.readMessage(
                  getHeaderFieldBuilder().getBuilder(),
                  extensionRegistry);
              ruleCase_ = 4;
              break;
            } // case 34
            case 42: {
              input.readMessage(
                  getDestinationIpFieldBuilder().getBuilder(),
                  extensionRegistry);
              ruleCase_ = 5;
              break;
            } // case 42
            case 48: {
              rule_ = input.readUInt32();
              ruleCase_ = 6;
              break;
            } // case 48
            case 58: {
              input.readMessage(
                  getMetadataFieldBuilder().getBuilder(),
                  extensionRegistry);
              ruleCase_ = 7;
              break;
            } // case 58
            case 66: {
              input.readMessage(
                  getNotRuleFieldBuilder().getBuilder(),
                  extensionRegistry);
              ruleCase_ = 8;
              break;
            } // case 66
            case 74: {
              input.readMessage(
                  getRequestedServerNameFieldBuilder().getBuilder(),
                  extensionRegistry);
              ruleCase_ = 9;
              break;
            } // case 74
            case 82: {
              input.readMessage(
                  getUrlPathFieldBuilder().getBuilder(),
                  extensionRegistry);
              ruleCase_ = 10;
              break;
            } // case 82
            default: {
              if (!super.parseUnknownField(input, extensionRegistry, tag)) {
                done = true; // was an endgroup tag
              }
              break;
            } // default:
          } // switch (tag)
        } // while (!done)
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.unwrapIOException();
      } finally {
        onChanged();
      } // finally
      return this;
    }
    private int ruleCase_ = 0;
    private java.lang.Object rule_;
    public RuleCase
        getRuleCase() {
      return RuleCase.forNumber(
          ruleCase_);
    }

    public Builder clearRule() {
      ruleCase_ = 0;
      rule_ = null;
      onChanged();
      return this;
    }

    private int bitField0_;

    private com.google.protobuf.SingleFieldBuilderV3<
        io.envoyproxy.envoy.config.rbac.v2.Permission.Set, io.envoyproxy.envoy.config.rbac.v2.Permission.Set.Builder, io.envoyproxy.envoy.config.rbac.v2.Permission.SetOrBuilder> andRulesBuilder_;
    /**
     * <pre>
     * A set of rules that all must match in order to define the action.
     * </pre>
     *
     * <code>.envoy.config.rbac.v2.Permission.Set and_rules = 1;</code>
     * @return Whether the andRules field is set.
     */
    @java.lang.Override
    public boolean hasAndRules() {
      return ruleCase_ == 1;
    }
    /**
     * <pre>
     * A set of rules that all must match in order to define the action.
     * </pre>
     *
     * <code>.envoy.config.rbac.v2.Permission.Set and_rules = 1;</code>
     * @return The andRules.
     */
    @java.lang.Override
    public io.envoyproxy.envoy.config.rbac.v2.Permission.Set getAndRules() {
      if (andRulesBuilder_ == null) {
        if (ruleCase_ == 1) {
          return (io.envoyproxy.envoy.config.rbac.v2.Permission.Set) rule_;
        }
        return io.envoyproxy.envoy.config.rbac.v2.Permission.Set.getDefaultInstance();
      } else {
        if (ruleCase_ == 1) {
          return andRulesBuilder_.getMessage();
        }
        return io.envoyproxy.envoy.config.rbac.v2.Permission.Set.getDefaultInstance();
      }
    }
    /**
     * <pre>
     * A set of rules that all must match in order to define the action.
     * </pre>
     *
     * <code>.envoy.config.rbac.v2.Permission.Set and_rules = 1;</code>
     */
    public Builder setAndRules(io.envoyproxy.envoy.config.rbac.v2.Permission.Set value) {
      if (andRulesBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        rule_ = value;
        onChanged();
      } else {
        andRulesBuilder_.setMessage(value);
      }
      ruleCase_ = 1;
      return this;
    }
    /**
     * <pre>
     * A set of rules that all must match in order to define the action.
     * </pre>
     *
     * <code>.envoy.config.rbac.v2.Permission.Set and_rules = 1;</code>
     */
    public Builder setAndRules(
        io.envoyproxy.envoy.config.rbac.v2.Permission.Set.Builder builderForValue) {
      if (andRulesBuilder_ == null) {
        rule_ = builderForValue.build();
        onChanged();
      } else {
        andRulesBuilder_.setMessage(builderForValue.build());
      }
      ruleCase_ = 1;
      return this;
    }
    /**
     * <pre>
     * A set of rules that all must match in order to define the action.
     * </pre>
     *
     * <code>.envoy.config.rbac.v2.Permission.Set and_rules = 1;</code>
     */
    public Builder mergeAndRules(io.envoyproxy.envoy.config.rbac.v2.Permission.Set value) {
      if (andRulesBuilder_ == null) {
        if (ruleCase_ == 1 &&
            rule_ != io.envoyproxy.envoy.config.rbac.v2.Permission.Set.getDefaultInstance()) {
          rule_ = io.envoyproxy.envoy.config.rbac.v2.Permission.Set.newBuilder((io.envoyproxy.envoy.config.rbac.v2.Permission.Set) rule_)
              .mergeFrom(value).buildPartial();
        } else {
          rule_ = value;
        }
        onChanged();
      } else {
        if (ruleCase_ == 1) {
          andRulesBuilder_.mergeFrom(value);
        } else {
          andRulesBuilder_.setMessage(value);
        }
      }
      ruleCase_ = 1;
      return this;
    }
    /**
     * <pre>
     * A set of rules that all must match in order to define the action.
     * </pre>
     *
     * <code>.envoy.config.rbac.v2.Permission.Set and_rules = 1;</code>
     */
    public Builder clearAndRules() {
      if (andRulesBuilder_ == null) {
        if (ruleCase_ == 1) {
          ruleCase_ = 0;
          rule_ = null;
          onChanged();
        }
      } else {
        if (ruleCase_ == 1) {
          ruleCase_ = 0;
          rule_ = null;
        }
        andRulesBuilder_.clear();
      }
      return this;
    }
    /**
     * <pre>
     * A set of rules that all must match in order to define the action.
     * </pre>
     *
     * <code>.envoy.config.rbac.v2.Permission.Set and_rules = 1;</code>
     */
    public io.envoyproxy.envoy.config.rbac.v2.Permission.Set.Builder getAndRulesBuilder() {
      return getAndRulesFieldBuilder().getBuilder();
    }
    /**
     * <pre>
     * A set of rules that all must match in order to define the action.
     * </pre>
     *
     * <code>.envoy.config.rbac.v2.Permission.Set and_rules = 1;</code>
     */
    @java.lang.Override
    public io.envoyproxy.envoy.config.rbac.v2.Permission.SetOrBuilder getAndRulesOrBuilder() {
      if ((ruleCase_ == 1) && (andRulesBuilder_ != null)) {
        return andRulesBuilder_.getMessageOrBuilder();
      } else {
        if (ruleCase_ == 1) {
          return (io.envoyproxy.envoy.config.rbac.v2.Permission.Set) rule_;
        }
        return io.envoyproxy.envoy.config.rbac.v2.Permission.Set.getDefaultInstance();
      }
    }
    /**
     * <pre>
     * A set of rules that all must match in order to define the action.
     * </pre>
     *
     * <code>.envoy.config.rbac.v2.Permission.Set and_rules = 1;</code>
     */
    private com.google.protobuf.SingleFieldBuilderV3<
        io.envoyproxy.envoy.config.rbac.v2.Permission.Set, io.envoyproxy.envoy.config.rbac.v2.Permission.Set.Builder, io.envoyproxy.envoy.config.rbac.v2.Permission.SetOrBuilder> 
        getAndRulesFieldBuilder() {
      if (andRulesBuilder_ == null) {
        if (!(ruleCase_ == 1)) {
          rule_ = io.envoyproxy.envoy.config.rbac.v2.Permission.Set.getDefaultInstance();
        }
        andRulesBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
            io.envoyproxy.envoy.config.rbac.v2.Permission.Set, io.envoyproxy.envoy.config.rbac.v2.Permission.Set.Builder, io.envoyproxy.envoy.config.rbac.v2.Permission.SetOrBuilder>(
                (io.envoyproxy.envoy.config.rbac.v2.Permission.Set) rule_,
                getParentForChildren(),
                isClean());
        rule_ = null;
      }
      ruleCase_ = 1;
      onChanged();
      return andRulesBuilder_;
    }

    private com.google.protobuf.SingleFieldBuilderV3<
        io.envoyproxy.envoy.config.rbac.v2.Permission.Set, io.envoyproxy.envoy.config.rbac.v2.Permission.Set.Builder, io.envoyproxy.envoy.config.rbac.v2.Permission.SetOrBuilder> orRulesBuilder_;
    /**
     * <pre>
     * A set of rules where at least one must match in order to define the action.
     * </pre>
     *
     * <code>.envoy.config.rbac.v2.Permission.Set or_rules = 2;</code>
     * @return Whether the orRules field is set.
     */
    @java.lang.Override
    public boolean hasOrRules() {
      return ruleCase_ == 2;
    }
    /**
     * <pre>
     * A set of rules where at least one must match in order to define the action.
     * </pre>
     *
     * <code>.envoy.config.rbac.v2.Permission.Set or_rules = 2;</code>
     * @return The orRules.
     */
    @java.lang.Override
    public io.envoyproxy.envoy.config.rbac.v2.Permission.Set getOrRules() {
      if (orRulesBuilder_ == null) {
        if (ruleCase_ == 2) {
          return (io.envoyproxy.envoy.config.rbac.v2.Permission.Set) rule_;
        }
        return io.envoyproxy.envoy.config.rbac.v2.Permission.Set.getDefaultInstance();
      } else {
        if (ruleCase_ == 2) {
          return orRulesBuilder_.getMessage();
        }
        return io.envoyproxy.envoy.config.rbac.v2.Permission.Set.getDefaultInstance();
      }
    }
    /**
     * <pre>
     * A set of rules where at least one must match in order to define the action.
     * </pre>
     *
     * <code>.envoy.config.rbac.v2.Permission.Set or_rules = 2;</code>
     */
    public Builder setOrRules(io.envoyproxy.envoy.config.rbac.v2.Permission.Set value) {
      if (orRulesBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        rule_ = value;
        onChanged();
      } else {
        orRulesBuilder_.setMessage(value);
      }
      ruleCase_ = 2;
      return this;
    }
    /**
     * <pre>
     * A set of rules where at least one must match in order to define the action.
     * </pre>
     *
     * <code>.envoy.config.rbac.v2.Permission.Set or_rules = 2;</code>
     */
    public Builder setOrRules(
        io.envoyproxy.envoy.config.rbac.v2.Permission.Set.Builder builderForValue) {
      if (orRulesBuilder_ == null) {
        rule_ = builderForValue.build();
        onChanged();
      } else {
        orRulesBuilder_.setMessage(builderForValue.build());
      }
      ruleCase_ = 2;
      return this;
    }
    /**
     * <pre>
     * A set of rules where at least one must match in order to define the action.
     * </pre>
     *
     * <code>.envoy.config.rbac.v2.Permission.Set or_rules = 2;</code>
     */
    public Builder mergeOrRules(io.envoyproxy.envoy.config.rbac.v2.Permission.Set value) {
      if (orRulesBuilder_ == null) {
        if (ruleCase_ == 2 &&
            rule_ != io.envoyproxy.envoy.config.rbac.v2.Permission.Set.getDefaultInstance()) {
          rule_ = io.envoyproxy.envoy.config.rbac.v2.Permission.Set.newBuilder((io.envoyproxy.envoy.config.rbac.v2.Permission.Set) rule_)
              .mergeFrom(value).buildPartial();
        } else {
          rule_ = value;
        }
        onChanged();
      } else {
        if (ruleCase_ == 2) {
          orRulesBuilder_.mergeFrom(value);
        } else {
          orRulesBuilder_.setMessage(value);
        }
      }
      ruleCase_ = 2;
      return this;
    }
    /**
     * <pre>
     * A set of rules where at least one must match in order to define the action.
     * </pre>
     *
     * <code>.envoy.config.rbac.v2.Permission.Set or_rules = 2;</code>
     */
    public Builder clearOrRules() {
      if (orRulesBuilder_ == null) {
        if (ruleCase_ == 2) {
          ruleCase_ = 0;
          rule_ = null;
          onChanged();
        }
      } else {
        if (ruleCase_ == 2) {
          ruleCase_ = 0;
          rule_ = null;
        }
        orRulesBuilder_.clear();
      }
      return this;
    }
    /**
     * <pre>
     * A set of rules where at least one must match in order to define the action.
     * </pre>
     *
     * <code>.envoy.config.rbac.v2.Permission.Set or_rules = 2;</code>
     */
    public io.envoyproxy.envoy.config.rbac.v2.Permission.Set.Builder getOrRulesBuilder() {
      return getOrRulesFieldBuilder().getBuilder();
    }
    /**
     * <pre>
     * A set of rules where at least one must match in order to define the action.
     * </pre>
     *
     * <code>.envoy.config.rbac.v2.Permission.Set or_rules = 2;</code>
     */
    @java.lang.Override
    public io.envoyproxy.envoy.config.rbac.v2.Permission.SetOrBuilder getOrRulesOrBuilder() {
      if ((ruleCase_ == 2) && (orRulesBuilder_ != null)) {
        return orRulesBuilder_.getMessageOrBuilder();
      } else {
        if (ruleCase_ == 2) {
          return (io.envoyproxy.envoy.config.rbac.v2.Permission.Set) rule_;
        }
        return io.envoyproxy.envoy.config.rbac.v2.Permission.Set.getDefaultInstance();
      }
    }
    /**
     * <pre>
     * A set of rules where at least one must match in order to define the action.
     * </pre>
     *
     * <code>.envoy.config.rbac.v2.Permission.Set or_rules = 2;</code>
     */
    private com.google.protobuf.SingleFieldBuilderV3<
        io.envoyproxy.envoy.config.rbac.v2.Permission.Set, io.envoyproxy.envoy.config.rbac.v2.Permission.Set.Builder, io.envoyproxy.envoy.config.rbac.v2.Permission.SetOrBuilder> 
        getOrRulesFieldBuilder() {
      if (orRulesBuilder_ == null) {
        if (!(ruleCase_ == 2)) {
          rule_ = io.envoyproxy.envoy.config.rbac.v2.Permission.Set.getDefaultInstance();
        }
        orRulesBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
            io.envoyproxy.envoy.config.rbac.v2.Permission.Set, io.envoyproxy.envoy.config.rbac.v2.Permission.Set.Builder, io.envoyproxy.envoy.config.rbac.v2.Permission.SetOrBuilder>(
                (io.envoyproxy.envoy.config.rbac.v2.Permission.Set) rule_,
                getParentForChildren(),
                isClean());
        rule_ = null;
      }
      ruleCase_ = 2;
      onChanged();
      return orRulesBuilder_;
    }

    /**
     * <pre>
     * When any is set, it matches any action.
     * </pre>
     *
     * <code>bool any = 3 [(.validate.rules) = { ... }</code>
     * @return Whether the any field is set.
     */
    public boolean hasAny() {
      return ruleCase_ == 3;
    }
    /**
     * <pre>
     * When any is set, it matches any action.
     * </pre>
     *
     * <code>bool any = 3 [(.validate.rules) = { ... }</code>
     * @return The any.
     */
    public boolean getAny() {
      if (ruleCase_ == 3) {
        return (java.lang.Boolean) rule_;
      }
      return false;
    }
    /**
     * <pre>
     * When any is set, it matches any action.
     * </pre>
     *
     * <code>bool any = 3 [(.validate.rules) = { ... }</code>
     * @param value The any to set.
     * @return This builder for chaining.
     */
    public Builder setAny(boolean value) {
      
      ruleCase_ = 3;
      rule_ = value;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * When any is set, it matches any action.
     * </pre>
     *
     * <code>bool any = 3 [(.validate.rules) = { ... }</code>
     * @return This builder for chaining.
     */
    public Builder clearAny() {
      if (ruleCase_ == 3) {
        ruleCase_ = 0;
        rule_ = null;
        onChanged();
      }
      return this;
    }

    private com.google.protobuf.SingleFieldBuilderV3<
        io.envoyproxy.envoy.api.v2.route.HeaderMatcher, io.envoyproxy.envoy.api.v2.route.HeaderMatcher.Builder, io.envoyproxy.envoy.api.v2.route.HeaderMatcherOrBuilder> headerBuilder_;
    /**
     * <pre>
     * A header (or pseudo-header such as :path or :method) on the incoming HTTP request. Only
     * available for HTTP request.
     * Note: the pseudo-header :path includes the query and fragment string. Use the `url_path`
     * field if you want to match the URL path without the query and fragment string.
     * </pre>
     *
     * <code>.envoy.api.v2.route.HeaderMatcher header = 4;</code>
     * @return Whether the header field is set.
     */
    @java.lang.Override
    public boolean hasHeader() {
      return ruleCase_ == 4;
    }
    /**
     * <pre>
     * A header (or pseudo-header such as :path or :method) on the incoming HTTP request. Only
     * available for HTTP request.
     * Note: the pseudo-header :path includes the query and fragment string. Use the `url_path`
     * field if you want to match the URL path without the query and fragment string.
     * </pre>
     *
     * <code>.envoy.api.v2.route.HeaderMatcher header = 4;</code>
     * @return The header.
     */
    @java.lang.Override
    public io.envoyproxy.envoy.api.v2.route.HeaderMatcher getHeader() {
      if (headerBuilder_ == null) {
        if (ruleCase_ == 4) {
          return (io.envoyproxy.envoy.api.v2.route.HeaderMatcher) rule_;
        }
        return io.envoyproxy.envoy.api.v2.route.HeaderMatcher.getDefaultInstance();
      } else {
        if (ruleCase_ == 4) {
          return headerBuilder_.getMessage();
        }
        return io.envoyproxy.envoy.api.v2.route.HeaderMatcher.getDefaultInstance();
      }
    }
    /**
     * <pre>
     * A header (or pseudo-header such as :path or :method) on the incoming HTTP request. Only
     * available for HTTP request.
     * Note: the pseudo-header :path includes the query and fragment string. Use the `url_path`
     * field if you want to match the URL path without the query and fragment string.
     * </pre>
     *
     * <code>.envoy.api.v2.route.HeaderMatcher header = 4;</code>
     */
    public Builder setHeader(io.envoyproxy.envoy.api.v2.route.HeaderMatcher value) {
      if (headerBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        rule_ = value;
        onChanged();
      } else {
        headerBuilder_.setMessage(value);
      }
      ruleCase_ = 4;
      return this;
    }
    /**
     * <pre>
     * A header (or pseudo-header such as :path or :method) on the incoming HTTP request. Only
     * available for HTTP request.
     * Note: the pseudo-header :path includes the query and fragment string. Use the `url_path`
     * field if you want to match the URL path without the query and fragment string.
     * </pre>
     *
     * <code>.envoy.api.v2.route.HeaderMatcher header = 4;</code>
     */
    public Builder setHeader(
        io.envoyproxy.envoy.api.v2.route.HeaderMatcher.Builder builderForValue) {
      if (headerBuilder_ == null) {
        rule_ = builderForValue.build();
        onChanged();
      } else {
        headerBuilder_.setMessage(builderForValue.build());
      }
      ruleCase_ = 4;
      return this;
    }
    /**
     * <pre>
     * A header (or pseudo-header such as :path or :method) on the incoming HTTP request. Only
     * available for HTTP request.
     * Note: the pseudo-header :path includes the query and fragment string. Use the `url_path`
     * field if you want to match the URL path without the query and fragment string.
     * </pre>
     *
     * <code>.envoy.api.v2.route.HeaderMatcher header = 4;</code>
     */
    public Builder mergeHeader(io.envoyproxy.envoy.api.v2.route.HeaderMatcher value) {
      if (headerBuilder_ == null) {
        if (ruleCase_ == 4 &&
            rule_ != io.envoyproxy.envoy.api.v2.route.HeaderMatcher.getDefaultInstance()) {
          rule_ = io.envoyproxy.envoy.api.v2.route.HeaderMatcher.newBuilder((io.envoyproxy.envoy.api.v2.route.HeaderMatcher) rule_)
              .mergeFrom(value).buildPartial();
        } else {
          rule_ = value;
        }
        onChanged();
      } else {
        if (ruleCase_ == 4) {
          headerBuilder_.mergeFrom(value);
        } else {
          headerBuilder_.setMessage(value);
        }
      }
      ruleCase_ = 4;
      return this;
    }
    /**
     * <pre>
     * A header (or pseudo-header such as :path or :method) on the incoming HTTP request. Only
     * available for HTTP request.
     * Note: the pseudo-header :path includes the query and fragment string. Use the `url_path`
     * field if you want to match the URL path without the query and fragment string.
     * </pre>
     *
     * <code>.envoy.api.v2.route.HeaderMatcher header = 4;</code>
     */
    public Builder clearHeader() {
      if (headerBuilder_ == null) {
        if (ruleCase_ == 4) {
          ruleCase_ = 0;
          rule_ = null;
          onChanged();
        }
      } else {
        if (ruleCase_ == 4) {
          ruleCase_ = 0;
          rule_ = null;
        }
        headerBuilder_.clear();
      }
      return this;
    }
    /**
     * <pre>
     * A header (or pseudo-header such as :path or :method) on the incoming HTTP request. Only
     * available for HTTP request.
     * Note: the pseudo-header :path includes the query and fragment string. Use the `url_path`
     * field if you want to match the URL path without the query and fragment string.
     * </pre>
     *
     * <code>.envoy.api.v2.route.HeaderMatcher header = 4;</code>
     */
    public io.envoyproxy.envoy.api.v2.route.HeaderMatcher.Builder getHeaderBuilder() {
      return getHeaderFieldBuilder().getBuilder();
    }
    /**
     * <pre>
     * A header (or pseudo-header such as :path or :method) on the incoming HTTP request. Only
     * available for HTTP request.
     * Note: the pseudo-header :path includes the query and fragment string. Use the `url_path`
     * field if you want to match the URL path without the query and fragment string.
     * </pre>
     *
     * <code>.envoy.api.v2.route.HeaderMatcher header = 4;</code>
     */
    @java.lang.Override
    public io.envoyproxy.envoy.api.v2.route.HeaderMatcherOrBuilder getHeaderOrBuilder() {
      if ((ruleCase_ == 4) && (headerBuilder_ != null)) {
        return headerBuilder_.getMessageOrBuilder();
      } else {
        if (ruleCase_ == 4) {
          return (io.envoyproxy.envoy.api.v2.route.HeaderMatcher) rule_;
        }
        return io.envoyproxy.envoy.api.v2.route.HeaderMatcher.getDefaultInstance();
      }
    }
    /**
     * <pre>
     * A header (or pseudo-header such as :path or :method) on the incoming HTTP request. Only
     * available for HTTP request.
     * Note: the pseudo-header :path includes the query and fragment string. Use the `url_path`
     * field if you want to match the URL path without the query and fragment string.
     * </pre>
     *
     * <code>.envoy.api.v2.route.HeaderMatcher header = 4;</code>
     */
    private com.google.protobuf.SingleFieldBuilderV3<
        io.envoyproxy.envoy.api.v2.route.HeaderMatcher, io.envoyproxy.envoy.api.v2.route.HeaderMatcher.Builder, io.envoyproxy.envoy.api.v2.route.HeaderMatcherOrBuilder> 
        getHeaderFieldBuilder() {
      if (headerBuilder_ == null) {
        if (!(ruleCase_ == 4)) {
          rule_ = io.envoyproxy.envoy.api.v2.route.HeaderMatcher.getDefaultInstance();
        }
        headerBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
            io.envoyproxy.envoy.api.v2.route.HeaderMatcher, io.envoyproxy.envoy.api.v2.route.HeaderMatcher.Builder, io.envoyproxy.envoy.api.v2.route.HeaderMatcherOrBuilder>(
                (io.envoyproxy.envoy.api.v2.route.HeaderMatcher) rule_,
                getParentForChildren(),
                isClean());
        rule_ = null;
      }
      ruleCase_ = 4;
      onChanged();
      return headerBuilder_;
    }

    private com.google.protobuf.SingleFieldBuilderV3<
        io.envoyproxy.envoy.type.matcher.PathMatcher, io.envoyproxy.envoy.type.matcher.PathMatcher.Builder, io.envoyproxy.envoy.type.matcher.PathMatcherOrBuilder> urlPathBuilder_;
    /**
     * <pre>
     * A URL path on the incoming HTTP request. Only available for HTTP.
     * </pre>
     *
     * <code>.envoy.type.matcher.PathMatcher url_path = 10;</code>
     * @return Whether the urlPath field is set.
     */
    @java.lang.Override
    public boolean hasUrlPath() {
      return ruleCase_ == 10;
    }
    /**
     * <pre>
     * A URL path on the incoming HTTP request. Only available for HTTP.
     * </pre>
     *
     * <code>.envoy.type.matcher.PathMatcher url_path = 10;</code>
     * @return The urlPath.
     */
    @java.lang.Override
    public io.envoyproxy.envoy.type.matcher.PathMatcher getUrlPath() {
      if (urlPathBuilder_ == null) {
        if (ruleCase_ == 10) {
          return (io.envoyproxy.envoy.type.matcher.PathMatcher) rule_;
        }
        return io.envoyproxy.envoy.type.matcher.PathMatcher.getDefaultInstance();
      } else {
        if (ruleCase_ == 10) {
          return urlPathBuilder_.getMessage();
        }
        return io.envoyproxy.envoy.type.matcher.PathMatcher.getDefaultInstance();
      }
    }
    /**
     * <pre>
     * A URL path on the incoming HTTP request. Only available for HTTP.
     * </pre>
     *
     * <code>.envoy.type.matcher.PathMatcher url_path = 10;</code>
     */
    public Builder setUrlPath(io.envoyproxy.envoy.type.matcher.PathMatcher value) {
      if (urlPathBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        rule_ = value;
        onChanged();
      } else {
        urlPathBuilder_.setMessage(value);
      }
      ruleCase_ = 10;
      return this;
    }
    /**
     * <pre>
     * A URL path on the incoming HTTP request. Only available for HTTP.
     * </pre>
     *
     * <code>.envoy.type.matcher.PathMatcher url_path = 10;</code>
     */
    public Builder setUrlPath(
        io.envoyproxy.envoy.type.matcher.PathMatcher.Builder builderForValue) {
      if (urlPathBuilder_ == null) {
        rule_ = builderForValue.build();
        onChanged();
      } else {
        urlPathBuilder_.setMessage(builderForValue.build());
      }
      ruleCase_ = 10;
      return this;
    }
    /**
     * <pre>
     * A URL path on the incoming HTTP request. Only available for HTTP.
     * </pre>
     *
     * <code>.envoy.type.matcher.PathMatcher url_path = 10;</code>
     */
    public Builder mergeUrlPath(io.envoyproxy.envoy.type.matcher.PathMatcher value) {
      if (urlPathBuilder_ == null) {
        if (ruleCase_ == 10 &&
            rule_ != io.envoyproxy.envoy.type.matcher.PathMatcher.getDefaultInstance()) {
          rule_ = io.envoyproxy.envoy.type.matcher.PathMatcher.newBuilder((io.envoyproxy.envoy.type.matcher.PathMatcher) rule_)
              .mergeFrom(value).buildPartial();
        } else {
          rule_ = value;
        }
        onChanged();
      } else {
        if (ruleCase_ == 10) {
          urlPathBuilder_.mergeFrom(value);
        } else {
          urlPathBuilder_.setMessage(value);
        }
      }
      ruleCase_ = 10;
      return this;
    }
    /**
     * <pre>
     * A URL path on the incoming HTTP request. Only available for HTTP.
     * </pre>
     *
     * <code>.envoy.type.matcher.PathMatcher url_path = 10;</code>
     */
    public Builder clearUrlPath() {
      if (urlPathBuilder_ == null) {
        if (ruleCase_ == 10) {
          ruleCase_ = 0;
          rule_ = null;
          onChanged();
        }
      } else {
        if (ruleCase_ == 10) {
          ruleCase_ = 0;
          rule_ = null;
        }
        urlPathBuilder_.clear();
      }
      return this;
    }
    /**
     * <pre>
     * A URL path on the incoming HTTP request. Only available for HTTP.
     * </pre>
     *
     * <code>.envoy.type.matcher.PathMatcher url_path = 10;</code>
     */
    public io.envoyproxy.envoy.type.matcher.PathMatcher.Builder getUrlPathBuilder() {
      return getUrlPathFieldBuilder().getBuilder();
    }
    /**
     * <pre>
     * A URL path on the incoming HTTP request. Only available for HTTP.
     * </pre>
     *
     * <code>.envoy.type.matcher.PathMatcher url_path = 10;</code>
     */
    @java.lang.Override
    public io.envoyproxy.envoy.type.matcher.PathMatcherOrBuilder getUrlPathOrBuilder() {
      if ((ruleCase_ == 10) && (urlPathBuilder_ != null)) {
        return urlPathBuilder_.getMessageOrBuilder();
      } else {
        if (ruleCase_ == 10) {
          return (io.envoyproxy.envoy.type.matcher.PathMatcher) rule_;
        }
        return io.envoyproxy.envoy.type.matcher.PathMatcher.getDefaultInstance();
      }
    }
    /**
     * <pre>
     * A URL path on the incoming HTTP request. Only available for HTTP.
     * </pre>
     *
     * <code>.envoy.type.matcher.PathMatcher url_path = 10;</code>
     */
    private com.google.protobuf.SingleFieldBuilderV3<
        io.envoyproxy.envoy.type.matcher.PathMatcher, io.envoyproxy.envoy.type.matcher.PathMatcher.Builder, io.envoyproxy.envoy.type.matcher.PathMatcherOrBuilder> 
        getUrlPathFieldBuilder() {
      if (urlPathBuilder_ == null) {
        if (!(ruleCase_ == 10)) {
          rule_ = io.envoyproxy.envoy.type.matcher.PathMatcher.getDefaultInstance();
        }
        urlPathBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
            io.envoyproxy.envoy.type.matcher.PathMatcher, io.envoyproxy.envoy.type.matcher.PathMatcher.Builder, io.envoyproxy.envoy.type.matcher.PathMatcherOrBuilder>(
                (io.envoyproxy.envoy.type.matcher.PathMatcher) rule_,
                getParentForChildren(),
                isClean());
        rule_ = null;
      }
      ruleCase_ = 10;
      onChanged();
      return urlPathBuilder_;
    }

    private com.google.protobuf.SingleFieldBuilderV3<
        io.envoyproxy.envoy.api.v2.core.CidrRange, io.envoyproxy.envoy.api.v2.core.CidrRange.Builder, io.envoyproxy.envoy.api.v2.core.CidrRangeOrBuilder> destinationIpBuilder_;
    /**
     * <pre>
     * A CIDR block that describes the destination IP.
     * </pre>
     *
     * <code>.envoy.api.v2.core.CidrRange destination_ip = 5;</code>
     * @return Whether the destinationIp field is set.
     */
    @java.lang.Override
    public boolean hasDestinationIp() {
      return ruleCase_ == 5;
    }
    /**
     * <pre>
     * A CIDR block that describes the destination IP.
     * </pre>
     *
     * <code>.envoy.api.v2.core.CidrRange destination_ip = 5;</code>
     * @return The destinationIp.
     */
    @java.lang.Override
    public io.envoyproxy.envoy.api.v2.core.CidrRange getDestinationIp() {
      if (destinationIpBuilder_ == null) {
        if (ruleCase_ == 5) {
          return (io.envoyproxy.envoy.api.v2.core.CidrRange) rule_;
        }
        return io.envoyproxy.envoy.api.v2.core.CidrRange.getDefaultInstance();
      } else {
        if (ruleCase_ == 5) {
          return destinationIpBuilder_.getMessage();
        }
        return io.envoyproxy.envoy.api.v2.core.CidrRange.getDefaultInstance();
      }
    }
    /**
     * <pre>
     * A CIDR block that describes the destination IP.
     * </pre>
     *
     * <code>.envoy.api.v2.core.CidrRange destination_ip = 5;</code>
     */
    public Builder setDestinationIp(io.envoyproxy.envoy.api.v2.core.CidrRange value) {
      if (destinationIpBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        rule_ = value;
        onChanged();
      } else {
        destinationIpBuilder_.setMessage(value);
      }
      ruleCase_ = 5;
      return this;
    }
    /**
     * <pre>
     * A CIDR block that describes the destination IP.
     * </pre>
     *
     * <code>.envoy.api.v2.core.CidrRange destination_ip = 5;</code>
     */
    public Builder setDestinationIp(
        io.envoyproxy.envoy.api.v2.core.CidrRange.Builder builderForValue) {
      if (destinationIpBuilder_ == null) {
        rule_ = builderForValue.build();
        onChanged();
      } else {
        destinationIpBuilder_.setMessage(builderForValue.build());
      }
      ruleCase_ = 5;
      return this;
    }
    /**
     * <pre>
     * A CIDR block that describes the destination IP.
     * </pre>
     *
     * <code>.envoy.api.v2.core.CidrRange destination_ip = 5;</code>
     */
    public Builder mergeDestinationIp(io.envoyproxy.envoy.api.v2.core.CidrRange value) {
      if (destinationIpBuilder_ == null) {
        if (ruleCase_ == 5 &&
            rule_ != io.envoyproxy.envoy.api.v2.core.CidrRange.getDefaultInstance()) {
          rule_ = io.envoyproxy.envoy.api.v2.core.CidrRange.newBuilder((io.envoyproxy.envoy.api.v2.core.CidrRange) rule_)
              .mergeFrom(value).buildPartial();
        } else {
          rule_ = value;
        }
        onChanged();
      } else {
        if (ruleCase_ == 5) {
          destinationIpBuilder_.mergeFrom(value);
        } else {
          destinationIpBuilder_.setMessage(value);
        }
      }
      ruleCase_ = 5;
      return this;
    }
    /**
     * <pre>
     * A CIDR block that describes the destination IP.
     * </pre>
     *
     * <code>.envoy.api.v2.core.CidrRange destination_ip = 5;</code>
     */
    public Builder clearDestinationIp() {
      if (destinationIpBuilder_ == null) {
        if (ruleCase_ == 5) {
          ruleCase_ = 0;
          rule_ = null;
          onChanged();
        }
      } else {
        if (ruleCase_ == 5) {
          ruleCase_ = 0;
          rule_ = null;
        }
        destinationIpBuilder_.clear();
      }
      return this;
    }
    /**
     * <pre>
     * A CIDR block that describes the destination IP.
     * </pre>
     *
     * <code>.envoy.api.v2.core.CidrRange destination_ip = 5;</code>
     */
    public io.envoyproxy.envoy.api.v2.core.CidrRange.Builder getDestinationIpBuilder() {
      return getDestinationIpFieldBuilder().getBuilder();
    }
    /**
     * <pre>
     * A CIDR block that describes the destination IP.
     * </pre>
     *
     * <code>.envoy.api.v2.core.CidrRange destination_ip = 5;</code>
     */
    @java.lang.Override
    public io.envoyproxy.envoy.api.v2.core.CidrRangeOrBuilder getDestinationIpOrBuilder() {
      if ((ruleCase_ == 5) && (destinationIpBuilder_ != null)) {
        return destinationIpBuilder_.getMessageOrBuilder();
      } else {
        if (ruleCase_ == 5) {
          return (io.envoyproxy.envoy.api.v2.core.CidrRange) rule_;
        }
        return io.envoyproxy.envoy.api.v2.core.CidrRange.getDefaultInstance();
      }
    }
    /**
     * <pre>
     * A CIDR block that describes the destination IP.
     * </pre>
     *
     * <code>.envoy.api.v2.core.CidrRange destination_ip = 5;</code>
     */
    private com.google.protobuf.SingleFieldBuilderV3<
        io.envoyproxy.envoy.api.v2.core.CidrRange, io.envoyproxy.envoy.api.v2.core.CidrRange.Builder, io.envoyproxy.envoy.api.v2.core.CidrRangeOrBuilder> 
        getDestinationIpFieldBuilder() {
      if (destinationIpBuilder_ == null) {
        if (!(ruleCase_ == 5)) {
          rule_ = io.envoyproxy.envoy.api.v2.core.CidrRange.getDefaultInstance();
        }
        destinationIpBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
            io.envoyproxy.envoy.api.v2.core.CidrRange, io.envoyproxy.envoy.api.v2.core.CidrRange.Builder, io.envoyproxy.envoy.api.v2.core.CidrRangeOrBuilder>(
                (io.envoyproxy.envoy.api.v2.core.CidrRange) rule_,
                getParentForChildren(),
                isClean());
        rule_ = null;
      }
      ruleCase_ = 5;
      onChanged();
      return destinationIpBuilder_;
    }

    /**
     * <pre>
     * A port number that describes the destination port connecting to.
     * </pre>
     *
     * <code>uint32 destination_port = 6 [(.validate.rules) = { ... }</code>
     * @return Whether the destinationPort field is set.
     */
    public boolean hasDestinationPort() {
      return ruleCase_ == 6;
    }
    /**
     * <pre>
     * A port number that describes the destination port connecting to.
     * </pre>
     *
     * <code>uint32 destination_port = 6 [(.validate.rules) = { ... }</code>
     * @return The destinationPort.
     */
    public int getDestinationPort() {
      if (ruleCase_ == 6) {
        return (java.lang.Integer) rule_;
      }
      return 0;
    }
    /**
     * <pre>
     * A port number that describes the destination port connecting to.
     * </pre>
     *
     * <code>uint32 destination_port = 6 [(.validate.rules) = { ... }</code>
     * @param value The destinationPort to set.
     * @return This builder for chaining.
     */
    public Builder setDestinationPort(int value) {
      
      ruleCase_ = 6;
      rule_ = value;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * A port number that describes the destination port connecting to.
     * </pre>
     *
     * <code>uint32 destination_port = 6 [(.validate.rules) = { ... }</code>
     * @return This builder for chaining.
     */
    public Builder clearDestinationPort() {
      if (ruleCase_ == 6) {
        ruleCase_ = 0;
        rule_ = null;
        onChanged();
      }
      return this;
    }

    private com.google.protobuf.SingleFieldBuilderV3<
        io.envoyproxy.envoy.type.matcher.MetadataMatcher, io.envoyproxy.envoy.type.matcher.MetadataMatcher.Builder, io.envoyproxy.envoy.type.matcher.MetadataMatcherOrBuilder> metadataBuilder_;
    /**
     * <pre>
     * Metadata that describes additional information about the action.
     * </pre>
     *
     * <code>.envoy.type.matcher.MetadataMatcher metadata = 7;</code>
     * @return Whether the metadata field is set.
     */
    @java.lang.Override
    public boolean hasMetadata() {
      return ruleCase_ == 7;
    }
    /**
     * <pre>
     * Metadata that describes additional information about the action.
     * </pre>
     *
     * <code>.envoy.type.matcher.MetadataMatcher metadata = 7;</code>
     * @return The metadata.
     */
    @java.lang.Override
    public io.envoyproxy.envoy.type.matcher.MetadataMatcher getMetadata() {
      if (metadataBuilder_ == null) {
        if (ruleCase_ == 7) {
          return (io.envoyproxy.envoy.type.matcher.MetadataMatcher) rule_;
        }
        return io.envoyproxy.envoy.type.matcher.MetadataMatcher.getDefaultInstance();
      } else {
        if (ruleCase_ == 7) {
          return metadataBuilder_.getMessage();
        }
        return io.envoyproxy.envoy.type.matcher.MetadataMatcher.getDefaultInstance();
      }
    }
    /**
     * <pre>
     * Metadata that describes additional information about the action.
     * </pre>
     *
     * <code>.envoy.type.matcher.MetadataMatcher metadata = 7;</code>
     */
    public Builder setMetadata(io.envoyproxy.envoy.type.matcher.MetadataMatcher value) {
      if (metadataBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        rule_ = value;
        onChanged();
      } else {
        metadataBuilder_.setMessage(value);
      }
      ruleCase_ = 7;
      return this;
    }
    /**
     * <pre>
     * Metadata that describes additional information about the action.
     * </pre>
     *
     * <code>.envoy.type.matcher.MetadataMatcher metadata = 7;</code>
     */
    public Builder setMetadata(
        io.envoyproxy.envoy.type.matcher.MetadataMatcher.Builder builderForValue) {
      if (metadataBuilder_ == null) {
        rule_ = builderForValue.build();
        onChanged();
      } else {
        metadataBuilder_.setMessage(builderForValue.build());
      }
      ruleCase_ = 7;
      return this;
    }
    /**
     * <pre>
     * Metadata that describes additional information about the action.
     * </pre>
     *
     * <code>.envoy.type.matcher.MetadataMatcher metadata = 7;</code>
     */
    public Builder mergeMetadata(io.envoyproxy.envoy.type.matcher.MetadataMatcher value) {
      if (metadataBuilder_ == null) {
        if (ruleCase_ == 7 &&
            rule_ != io.envoyproxy.envoy.type.matcher.MetadataMatcher.getDefaultInstance()) {
          rule_ = io.envoyproxy.envoy.type.matcher.MetadataMatcher.newBuilder((io.envoyproxy.envoy.type.matcher.MetadataMatcher) rule_)
              .mergeFrom(value).buildPartial();
        } else {
          rule_ = value;
        }
        onChanged();
      } else {
        if (ruleCase_ == 7) {
          metadataBuilder_.mergeFrom(value);
        } else {
          metadataBuilder_.setMessage(value);
        }
      }
      ruleCase_ = 7;
      return this;
    }
    /**
     * <pre>
     * Metadata that describes additional information about the action.
     * </pre>
     *
     * <code>.envoy.type.matcher.MetadataMatcher metadata = 7;</code>
     */
    public Builder clearMetadata() {
      if (metadataBuilder_ == null) {
        if (ruleCase_ == 7) {
          ruleCase_ = 0;
          rule_ = null;
          onChanged();
        }
      } else {
        if (ruleCase_ == 7) {
          ruleCase_ = 0;
          rule_ = null;
        }
        metadataBuilder_.clear();
      }
      return this;
    }
    /**
     * <pre>
     * Metadata that describes additional information about the action.
     * </pre>
     *
     * <code>.envoy.type.matcher.MetadataMatcher metadata = 7;</code>
     */
    public io.envoyproxy.envoy.type.matcher.MetadataMatcher.Builder getMetadataBuilder() {
      return getMetadataFieldBuilder().getBuilder();
    }
    /**
     * <pre>
     * Metadata that describes additional information about the action.
     * </pre>
     *
     * <code>.envoy.type.matcher.MetadataMatcher metadata = 7;</code>
     */
    @java.lang.Override
    public io.envoyproxy.envoy.type.matcher.MetadataMatcherOrBuilder getMetadataOrBuilder() {
      if ((ruleCase_ == 7) && (metadataBuilder_ != null)) {
        return metadataBuilder_.getMessageOrBuilder();
      } else {
        if (ruleCase_ == 7) {
          return (io.envoyproxy.envoy.type.matcher.MetadataMatcher) rule_;
        }
        return io.envoyproxy.envoy.type.matcher.MetadataMatcher.getDefaultInstance();
      }
    }
    /**
     * <pre>
     * Metadata that describes additional information about the action.
     * </pre>
     *
     * <code>.envoy.type.matcher.MetadataMatcher metadata = 7;</code>
     */
    private com.google.protobuf.SingleFieldBuilderV3<
        io.envoyproxy.envoy.type.matcher.MetadataMatcher, io.envoyproxy.envoy.type.matcher.MetadataMatcher.Builder, io.envoyproxy.envoy.type.matcher.MetadataMatcherOrBuilder> 
        getMetadataFieldBuilder() {
      if (metadataBuilder_ == null) {
        if (!(ruleCase_ == 7)) {
          rule_ = io.envoyproxy.envoy.type.matcher.MetadataMatcher.getDefaultInstance();
        }
        metadataBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
            io.envoyproxy.envoy.type.matcher.MetadataMatcher, io.envoyproxy.envoy.type.matcher.MetadataMatcher.Builder, io.envoyproxy.envoy.type.matcher.MetadataMatcherOrBuilder>(
                (io.envoyproxy.envoy.type.matcher.MetadataMatcher) rule_,
                getParentForChildren(),
                isClean());
        rule_ = null;
      }
      ruleCase_ = 7;
      onChanged();
      return metadataBuilder_;
    }

    private com.google.protobuf.SingleFieldBuilderV3<
        io.envoyproxy.envoy.config.rbac.v2.Permission, io.envoyproxy.envoy.config.rbac.v2.Permission.Builder, io.envoyproxy.envoy.config.rbac.v2.PermissionOrBuilder> notRuleBuilder_;
    /**
     * <pre>
     * Negates matching the provided permission. For instance, if the value of `not_rule` would
     * match, this permission would not match. Conversely, if the value of `not_rule` would not
     * match, this permission would match.
     * </pre>
     *
     * <code>.envoy.config.rbac.v2.Permission not_rule = 8;</code>
     * @return Whether the notRule field is set.
     */
    @java.lang.Override
    public boolean hasNotRule() {
      return ruleCase_ == 8;
    }
    /**
     * <pre>
     * Negates matching the provided permission. For instance, if the value of `not_rule` would
     * match, this permission would not match. Conversely, if the value of `not_rule` would not
     * match, this permission would match.
     * </pre>
     *
     * <code>.envoy.config.rbac.v2.Permission not_rule = 8;</code>
     * @return The notRule.
     */
    @java.lang.Override
    public io.envoyproxy.envoy.config.rbac.v2.Permission getNotRule() {
      if (notRuleBuilder_ == null) {
        if (ruleCase_ == 8) {
          return (io.envoyproxy.envoy.config.rbac.v2.Permission) rule_;
        }
        return io.envoyproxy.envoy.config.rbac.v2.Permission.getDefaultInstance();
      } else {
        if (ruleCase_ == 8) {
          return notRuleBuilder_.getMessage();
        }
        return io.envoyproxy.envoy.config.rbac.v2.Permission.getDefaultInstance();
      }
    }
    /**
     * <pre>
     * Negates matching the provided permission. For instance, if the value of `not_rule` would
     * match, this permission would not match. Conversely, if the value of `not_rule` would not
     * match, this permission would match.
     * </pre>
     *
     * <code>.envoy.config.rbac.v2.Permission not_rule = 8;</code>
     */
    public Builder setNotRule(io.envoyproxy.envoy.config.rbac.v2.Permission value) {
      if (notRuleBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        rule_ = value;
        onChanged();
      } else {
        notRuleBuilder_.setMessage(value);
      }
      ruleCase_ = 8;
      return this;
    }
    /**
     * <pre>
     * Negates matching the provided permission. For instance, if the value of `not_rule` would
     * match, this permission would not match. Conversely, if the value of `not_rule` would not
     * match, this permission would match.
     * </pre>
     *
     * <code>.envoy.config.rbac.v2.Permission not_rule = 8;</code>
     */
    public Builder setNotRule(
        io.envoyproxy.envoy.config.rbac.v2.Permission.Builder builderForValue) {
      if (notRuleBuilder_ == null) {
        rule_ = builderForValue.build();
        onChanged();
      } else {
        notRuleBuilder_.setMessage(builderForValue.build());
      }
      ruleCase_ = 8;
      return this;
    }
    /**
     * <pre>
     * Negates matching the provided permission. For instance, if the value of `not_rule` would
     * match, this permission would not match. Conversely, if the value of `not_rule` would not
     * match, this permission would match.
     * </pre>
     *
     * <code>.envoy.config.rbac.v2.Permission not_rule = 8;</code>
     */
    public Builder mergeNotRule(io.envoyproxy.envoy.config.rbac.v2.Permission value) {
      if (notRuleBuilder_ == null) {
        if (ruleCase_ == 8 &&
            rule_ != io.envoyproxy.envoy.config.rbac.v2.Permission.getDefaultInstance()) {
          rule_ = io.envoyproxy.envoy.config.rbac.v2.Permission.newBuilder((io.envoyproxy.envoy.config.rbac.v2.Permission) rule_)
              .mergeFrom(value).buildPartial();
        } else {
          rule_ = value;
        }
        onChanged();
      } else {
        if (ruleCase_ == 8) {
          notRuleBuilder_.mergeFrom(value);
        } else {
          notRuleBuilder_.setMessage(value);
        }
      }
      ruleCase_ = 8;
      return this;
    }
    /**
     * <pre>
     * Negates matching the provided permission. For instance, if the value of `not_rule` would
     * match, this permission would not match. Conversely, if the value of `not_rule` would not
     * match, this permission would match.
     * </pre>
     *
     * <code>.envoy.config.rbac.v2.Permission not_rule = 8;</code>
     */
    public Builder clearNotRule() {
      if (notRuleBuilder_ == null) {
        if (ruleCase_ == 8) {
          ruleCase_ = 0;
          rule_ = null;
          onChanged();
        }
      } else {
        if (ruleCase_ == 8) {
          ruleCase_ = 0;
          rule_ = null;
        }
        notRuleBuilder_.clear();
      }
      return this;
    }
    /**
     * <pre>
     * Negates matching the provided permission. For instance, if the value of `not_rule` would
     * match, this permission would not match. Conversely, if the value of `not_rule` would not
     * match, this permission would match.
     * </pre>
     *
     * <code>.envoy.config.rbac.v2.Permission not_rule = 8;</code>
     */
    public io.envoyproxy.envoy.config.rbac.v2.Permission.Builder getNotRuleBuilder() {
      return getNotRuleFieldBuilder().getBuilder();
    }
    /**
     * <pre>
     * Negates matching the provided permission. For instance, if the value of `not_rule` would
     * match, this permission would not match. Conversely, if the value of `not_rule` would not
     * match, this permission would match.
     * </pre>
     *
     * <code>.envoy.config.rbac.v2.Permission not_rule = 8;</code>
     */
    @java.lang.Override
    public io.envoyproxy.envoy.config.rbac.v2.PermissionOrBuilder getNotRuleOrBuilder() {
      if ((ruleCase_ == 8) && (notRuleBuilder_ != null)) {
        return notRuleBuilder_.getMessageOrBuilder();
      } else {
        if (ruleCase_ == 8) {
          return (io.envoyproxy.envoy.config.rbac.v2.Permission) rule_;
        }
        return io.envoyproxy.envoy.config.rbac.v2.Permission.getDefaultInstance();
      }
    }
    /**
     * <pre>
     * Negates matching the provided permission. For instance, if the value of `not_rule` would
     * match, this permission would not match. Conversely, if the value of `not_rule` would not
     * match, this permission would match.
     * </pre>
     *
     * <code>.envoy.config.rbac.v2.Permission not_rule = 8;</code>
     */
    private com.google.protobuf.SingleFieldBuilderV3<
        io.envoyproxy.envoy.config.rbac.v2.Permission, io.envoyproxy.envoy.config.rbac.v2.Permission.Builder, io.envoyproxy.envoy.config.rbac.v2.PermissionOrBuilder> 
        getNotRuleFieldBuilder() {
      if (notRuleBuilder_ == null) {
        if (!(ruleCase_ == 8)) {
          rule_ = io.envoyproxy.envoy.config.rbac.v2.Permission.getDefaultInstance();
        }
        notRuleBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
            io.envoyproxy.envoy.config.rbac.v2.Permission, io.envoyproxy.envoy.config.rbac.v2.Permission.Builder, io.envoyproxy.envoy.config.rbac.v2.PermissionOrBuilder>(
                (io.envoyproxy.envoy.config.rbac.v2.Permission) rule_,
                getParentForChildren(),
                isClean());
        rule_ = null;
      }
      ruleCase_ = 8;
      onChanged();
      return notRuleBuilder_;
    }

    private com.google.protobuf.SingleFieldBuilderV3<
        io.envoyproxy.envoy.type.matcher.StringMatcher, io.envoyproxy.envoy.type.matcher.StringMatcher.Builder, io.envoyproxy.envoy.type.matcher.StringMatcherOrBuilder> requestedServerNameBuilder_;
    /**
     * <pre>
     * The request server from the client's connection request. This is
     * typically TLS SNI.
     * .. attention::
     *   The behavior of this field may be affected by how Envoy is configured
     *   as explained below.
     *   * If the :ref:`TLS Inspector &lt;config_listener_filters_tls_inspector&gt;`
     *     filter is not added, and if a `FilterChainMatch` is not defined for
     *     the :ref:`server name &lt;envoy_api_field_listener.FilterChainMatch.server_names&gt;`,
     *     a TLS connection's requested SNI server name will be treated as if it
     *     wasn't present.
     *   * A :ref:`listener filter &lt;arch_overview_listener_filters&gt;` may
     *     overwrite a connection's requested server name within Envoy.
     * Please refer to :ref:`this FAQ entry &lt;faq_how_to_setup_sni&gt;` to learn to
     * setup SNI.
     * </pre>
     *
     * <code>.envoy.type.matcher.StringMatcher requested_server_name = 9;</code>
     * @return Whether the requestedServerName field is set.
     */
    @java.lang.Override
    public boolean hasRequestedServerName() {
      return ruleCase_ == 9;
    }
    /**
     * <pre>
     * The request server from the client's connection request. This is
     * typically TLS SNI.
     * .. attention::
     *   The behavior of this field may be affected by how Envoy is configured
     *   as explained below.
     *   * If the :ref:`TLS Inspector &lt;config_listener_filters_tls_inspector&gt;`
     *     filter is not added, and if a `FilterChainMatch` is not defined for
     *     the :ref:`server name &lt;envoy_api_field_listener.FilterChainMatch.server_names&gt;`,
     *     a TLS connection's requested SNI server name will be treated as if it
     *     wasn't present.
     *   * A :ref:`listener filter &lt;arch_overview_listener_filters&gt;` may
     *     overwrite a connection's requested server name within Envoy.
     * Please refer to :ref:`this FAQ entry &lt;faq_how_to_setup_sni&gt;` to learn to
     * setup SNI.
     * </pre>
     *
     * <code>.envoy.type.matcher.StringMatcher requested_server_name = 9;</code>
     * @return The requestedServerName.
     */
    @java.lang.Override
    public io.envoyproxy.envoy.type.matcher.StringMatcher getRequestedServerName() {
      if (requestedServerNameBuilder_ == null) {
        if (ruleCase_ == 9) {
          return (io.envoyproxy.envoy.type.matcher.StringMatcher) rule_;
        }
        return io.envoyproxy.envoy.type.matcher.StringMatcher.getDefaultInstance();
      } else {
        if (ruleCase_ == 9) {
          return requestedServerNameBuilder_.getMessage();
        }
        return io.envoyproxy.envoy.type.matcher.StringMatcher.getDefaultInstance();
      }
    }
    /**
     * <pre>
     * The request server from the client's connection request. This is
     * typically TLS SNI.
     * .. attention::
     *   The behavior of this field may be affected by how Envoy is configured
     *   as explained below.
     *   * If the :ref:`TLS Inspector &lt;config_listener_filters_tls_inspector&gt;`
     *     filter is not added, and if a `FilterChainMatch` is not defined for
     *     the :ref:`server name &lt;envoy_api_field_listener.FilterChainMatch.server_names&gt;`,
     *     a TLS connection's requested SNI server name will be treated as if it
     *     wasn't present.
     *   * A :ref:`listener filter &lt;arch_overview_listener_filters&gt;` may
     *     overwrite a connection's requested server name within Envoy.
     * Please refer to :ref:`this FAQ entry &lt;faq_how_to_setup_sni&gt;` to learn to
     * setup SNI.
     * </pre>
     *
     * <code>.envoy.type.matcher.StringMatcher requested_server_name = 9;</code>
     */
    public Builder setRequestedServerName(io.envoyproxy.envoy.type.matcher.StringMatcher value) {
      if (requestedServerNameBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        rule_ = value;
        onChanged();
      } else {
        requestedServerNameBuilder_.setMessage(value);
      }
      ruleCase_ = 9;
      return this;
    }
    /**
     * <pre>
     * The request server from the client's connection request. This is
     * typically TLS SNI.
     * .. attention::
     *   The behavior of this field may be affected by how Envoy is configured
     *   as explained below.
     *   * If the :ref:`TLS Inspector &lt;config_listener_filters_tls_inspector&gt;`
     *     filter is not added, and if a `FilterChainMatch` is not defined for
     *     the :ref:`server name &lt;envoy_api_field_listener.FilterChainMatch.server_names&gt;`,
     *     a TLS connection's requested SNI server name will be treated as if it
     *     wasn't present.
     *   * A :ref:`listener filter &lt;arch_overview_listener_filters&gt;` may
     *     overwrite a connection's requested server name within Envoy.
     * Please refer to :ref:`this FAQ entry &lt;faq_how_to_setup_sni&gt;` to learn to
     * setup SNI.
     * </pre>
     *
     * <code>.envoy.type.matcher.StringMatcher requested_server_name = 9;</code>
     */
    public Builder setRequestedServerName(
        io.envoyproxy.envoy.type.matcher.StringMatcher.Builder builderForValue) {
      if (requestedServerNameBuilder_ == null) {
        rule_ = builderForValue.build();
        onChanged();
      } else {
        requestedServerNameBuilder_.setMessage(builderForValue.build());
      }
      ruleCase_ = 9;
      return this;
    }
    /**
     * <pre>
     * The request server from the client's connection request. This is
     * typically TLS SNI.
     * .. attention::
     *   The behavior of this field may be affected by how Envoy is configured
     *   as explained below.
     *   * If the :ref:`TLS Inspector &lt;config_listener_filters_tls_inspector&gt;`
     *     filter is not added, and if a `FilterChainMatch` is not defined for
     *     the :ref:`server name &lt;envoy_api_field_listener.FilterChainMatch.server_names&gt;`,
     *     a TLS connection's requested SNI server name will be treated as if it
     *     wasn't present.
     *   * A :ref:`listener filter &lt;arch_overview_listener_filters&gt;` may
     *     overwrite a connection's requested server name within Envoy.
     * Please refer to :ref:`this FAQ entry &lt;faq_how_to_setup_sni&gt;` to learn to
     * setup SNI.
     * </pre>
     *
     * <code>.envoy.type.matcher.StringMatcher requested_server_name = 9;</code>
     */
    public Builder mergeRequestedServerName(io.envoyproxy.envoy.type.matcher.StringMatcher value) {
      if (requestedServerNameBuilder_ == null) {
        if (ruleCase_ == 9 &&
            rule_ != io.envoyproxy.envoy.type.matcher.StringMatcher.getDefaultInstance()) {
          rule_ = io.envoyproxy.envoy.type.matcher.StringMatcher.newBuilder((io.envoyproxy.envoy.type.matcher.StringMatcher) rule_)
              .mergeFrom(value).buildPartial();
        } else {
          rule_ = value;
        }
        onChanged();
      } else {
        if (ruleCase_ == 9) {
          requestedServerNameBuilder_.mergeFrom(value);
        } else {
          requestedServerNameBuilder_.setMessage(value);
        }
      }
      ruleCase_ = 9;
      return this;
    }
    /**
     * <pre>
     * The request server from the client's connection request. This is
     * typically TLS SNI.
     * .. attention::
     *   The behavior of this field may be affected by how Envoy is configured
     *   as explained below.
     *   * If the :ref:`TLS Inspector &lt;config_listener_filters_tls_inspector&gt;`
     *     filter is not added, and if a `FilterChainMatch` is not defined for
     *     the :ref:`server name &lt;envoy_api_field_listener.FilterChainMatch.server_names&gt;`,
     *     a TLS connection's requested SNI server name will be treated as if it
     *     wasn't present.
     *   * A :ref:`listener filter &lt;arch_overview_listener_filters&gt;` may
     *     overwrite a connection's requested server name within Envoy.
     * Please refer to :ref:`this FAQ entry &lt;faq_how_to_setup_sni&gt;` to learn to
     * setup SNI.
     * </pre>
     *
     * <code>.envoy.type.matcher.StringMatcher requested_server_name = 9;</code>
     */
    public Builder clearRequestedServerName() {
      if (requestedServerNameBuilder_ == null) {
        if (ruleCase_ == 9) {
          ruleCase_ = 0;
          rule_ = null;
          onChanged();
        }
      } else {
        if (ruleCase_ == 9) {
          ruleCase_ = 0;
          rule_ = null;
        }
        requestedServerNameBuilder_.clear();
      }
      return this;
    }
    /**
     * <pre>
     * The request server from the client's connection request. This is
     * typically TLS SNI.
     * .. attention::
     *   The behavior of this field may be affected by how Envoy is configured
     *   as explained below.
     *   * If the :ref:`TLS Inspector &lt;config_listener_filters_tls_inspector&gt;`
     *     filter is not added, and if a `FilterChainMatch` is not defined for
     *     the :ref:`server name &lt;envoy_api_field_listener.FilterChainMatch.server_names&gt;`,
     *     a TLS connection's requested SNI server name will be treated as if it
     *     wasn't present.
     *   * A :ref:`listener filter &lt;arch_overview_listener_filters&gt;` may
     *     overwrite a connection's requested server name within Envoy.
     * Please refer to :ref:`this FAQ entry &lt;faq_how_to_setup_sni&gt;` to learn to
     * setup SNI.
     * </pre>
     *
     * <code>.envoy.type.matcher.StringMatcher requested_server_name = 9;</code>
     */
    public io.envoyproxy.envoy.type.matcher.StringMatcher.Builder getRequestedServerNameBuilder() {
      return getRequestedServerNameFieldBuilder().getBuilder();
    }
    /**
     * <pre>
     * The request server from the client's connection request. This is
     * typically TLS SNI.
     * .. attention::
     *   The behavior of this field may be affected by how Envoy is configured
     *   as explained below.
     *   * If the :ref:`TLS Inspector &lt;config_listener_filters_tls_inspector&gt;`
     *     filter is not added, and if a `FilterChainMatch` is not defined for
     *     the :ref:`server name &lt;envoy_api_field_listener.FilterChainMatch.server_names&gt;`,
     *     a TLS connection's requested SNI server name will be treated as if it
     *     wasn't present.
     *   * A :ref:`listener filter &lt;arch_overview_listener_filters&gt;` may
     *     overwrite a connection's requested server name within Envoy.
     * Please refer to :ref:`this FAQ entry &lt;faq_how_to_setup_sni&gt;` to learn to
     * setup SNI.
     * </pre>
     *
     * <code>.envoy.type.matcher.StringMatcher requested_server_name = 9;</code>
     */
    @java.lang.Override
    public io.envoyproxy.envoy.type.matcher.StringMatcherOrBuilder getRequestedServerNameOrBuilder() {
      if ((ruleCase_ == 9) && (requestedServerNameBuilder_ != null)) {
        return requestedServerNameBuilder_.getMessageOrBuilder();
      } else {
        if (ruleCase_ == 9) {
          return (io.envoyproxy.envoy.type.matcher.StringMatcher) rule_;
        }
        return io.envoyproxy.envoy.type.matcher.StringMatcher.getDefaultInstance();
      }
    }
    /**
     * <pre>
     * The request server from the client's connection request. This is
     * typically TLS SNI.
     * .. attention::
     *   The behavior of this field may be affected by how Envoy is configured
     *   as explained below.
     *   * If the :ref:`TLS Inspector &lt;config_listener_filters_tls_inspector&gt;`
     *     filter is not added, and if a `FilterChainMatch` is not defined for
     *     the :ref:`server name &lt;envoy_api_field_listener.FilterChainMatch.server_names&gt;`,
     *     a TLS connection's requested SNI server name will be treated as if it
     *     wasn't present.
     *   * A :ref:`listener filter &lt;arch_overview_listener_filters&gt;` may
     *     overwrite a connection's requested server name within Envoy.
     * Please refer to :ref:`this FAQ entry &lt;faq_how_to_setup_sni&gt;` to learn to
     * setup SNI.
     * </pre>
     *
     * <code>.envoy.type.matcher.StringMatcher requested_server_name = 9;</code>
     */
    private com.google.protobuf.SingleFieldBuilderV3<
        io.envoyproxy.envoy.type.matcher.StringMatcher, io.envoyproxy.envoy.type.matcher.StringMatcher.Builder, io.envoyproxy.envoy.type.matcher.StringMatcherOrBuilder> 
        getRequestedServerNameFieldBuilder() {
      if (requestedServerNameBuilder_ == null) {
        if (!(ruleCase_ == 9)) {
          rule_ = io.envoyproxy.envoy.type.matcher.StringMatcher.getDefaultInstance();
        }
        requestedServerNameBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
            io.envoyproxy.envoy.type.matcher.StringMatcher, io.envoyproxy.envoy.type.matcher.StringMatcher.Builder, io.envoyproxy.envoy.type.matcher.StringMatcherOrBuilder>(
                (io.envoyproxy.envoy.type.matcher.StringMatcher) rule_,
                getParentForChildren(),
                isClean());
        rule_ = null;
      }
      ruleCase_ = 9;
      onChanged();
      return requestedServerNameBuilder_;
    }
    @java.lang.Override
    public final Builder setUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return super.setUnknownFields(unknownFields);
    }

    @java.lang.Override
    public final Builder mergeUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return super.mergeUnknownFields(unknownFields);
    }


    // @@protoc_insertion_point(builder_scope:envoy.config.rbac.v2.Permission)
  }

  // @@protoc_insertion_point(class_scope:envoy.config.rbac.v2.Permission)
  private static final io.envoyproxy.envoy.config.rbac.v2.Permission DEFAULT_INSTANCE;
  static {
    DEFAULT_INSTANCE = new io.envoyproxy.envoy.config.rbac.v2.Permission();
  }

  public static io.envoyproxy.envoy.config.rbac.v2.Permission getDefaultInstance() {
    return DEFAULT_INSTANCE;
  }

  private static final com.google.protobuf.Parser<Permission>
      PARSER = new com.google.protobuf.AbstractParser<Permission>() {
    @java.lang.Override
    public Permission parsePartialFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      Builder builder = newBuilder();
      try {
        builder.mergeFrom(input, extensionRegistry);
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(builder.buildPartial());
      } catch (com.google.protobuf.UninitializedMessageException e) {
        throw e.asInvalidProtocolBufferException().setUnfinishedMessage(builder.buildPartial());
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(e)
            .setUnfinishedMessage(builder.buildPartial());
      }
      return builder.buildPartial();
    }
  };

  public static com.google.protobuf.Parser<Permission> parser() {
    return PARSER;
  }

  @java.lang.Override
  public com.google.protobuf.Parser<Permission> getParserForType() {
    return PARSER;
  }

  @java.lang.Override
  public io.envoyproxy.envoy.config.rbac.v2.Permission getDefaultInstanceForType() {
    return DEFAULT_INSTANCE;
  }

}

