// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: envoy/config/rbac/v2/rbac.proto

package io.envoyproxy.envoy.config.rbac.v2;

public interface RBACOrBuilder extends
    // @@protoc_insertion_point(interface_extends:envoy.config.rbac.v2.RBAC)
    com.google.protobuf.MessageOrBuilder {

  /**
   * <pre>
   * The action to take if a policy matches. The request is allowed if and only if:
   *   * `action` is "ALLOWED" and at least one policy matches
   *   * `action` is "DENY" and none of the policies match
   * </pre>
   *
   * <code>.envoy.config.rbac.v2.RBAC.Action action = 1;</code>
   * @return The enum numeric value on the wire for action.
   */
  int getActionValue();
  /**
   * <pre>
   * The action to take if a policy matches. The request is allowed if and only if:
   *   * `action` is "ALLOWED" and at least one policy matches
   *   * `action` is "DENY" and none of the policies match
   * </pre>
   *
   * <code>.envoy.config.rbac.v2.RBAC.Action action = 1;</code>
   * @return The action.
   */
  io.envoyproxy.envoy.config.rbac.v2.RBAC.Action getAction();

  /**
   * <pre>
   * Maps from policy name to policy. A match occurs when at least one policy matches the request.
   * </pre>
   *
   * <code>map&lt;string, .envoy.config.rbac.v2.Policy&gt; policies = 2;</code>
   */
  int getPoliciesCount();
  /**
   * <pre>
   * Maps from policy name to policy. A match occurs when at least one policy matches the request.
   * </pre>
   *
   * <code>map&lt;string, .envoy.config.rbac.v2.Policy&gt; policies = 2;</code>
   */
  boolean containsPolicies(
      java.lang.String key);
  /**
   * Use {@link #getPoliciesMap()} instead.
   */
  @java.lang.Deprecated
  java.util.Map<java.lang.String, io.envoyproxy.envoy.config.rbac.v2.Policy>
  getPolicies();
  /**
   * <pre>
   * Maps from policy name to policy. A match occurs when at least one policy matches the request.
   * </pre>
   *
   * <code>map&lt;string, .envoy.config.rbac.v2.Policy&gt; policies = 2;</code>
   */
  java.util.Map<java.lang.String, io.envoyproxy.envoy.config.rbac.v2.Policy>
  getPoliciesMap();
  /**
   * <pre>
   * Maps from policy name to policy. A match occurs when at least one policy matches the request.
   * </pre>
   *
   * <code>map&lt;string, .envoy.config.rbac.v2.Policy&gt; policies = 2;</code>
   */

  /* nullable */
io.envoyproxy.envoy.config.rbac.v2.Policy getPoliciesOrDefault(
      java.lang.String key,
      /* nullable */
io.envoyproxy.envoy.config.rbac.v2.Policy defaultValue);
  /**
   * <pre>
   * Maps from policy name to policy. A match occurs when at least one policy matches the request.
   * </pre>
   *
   * <code>map&lt;string, .envoy.config.rbac.v2.Policy&gt; policies = 2;</code>
   */

  io.envoyproxy.envoy.config.rbac.v2.Policy getPoliciesOrThrow(
      java.lang.String key);
}
