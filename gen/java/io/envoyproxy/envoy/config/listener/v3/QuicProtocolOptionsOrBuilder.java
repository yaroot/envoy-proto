// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: envoy/config/listener/v3/quic_config.proto

package io.envoyproxy.envoy.config.listener.v3;

public interface QuicProtocolOptionsOrBuilder extends
    // @@protoc_insertion_point(interface_extends:envoy.config.listener.v3.QuicProtocolOptions)
    com.google.protobuf.MessageOrBuilder {

  /**
   * <code>.envoy.config.core.v3.QuicProtocolOptions quic_protocol_options = 1;</code>
   * @return Whether the quicProtocolOptions field is set.
   */
  boolean hasQuicProtocolOptions();
  /**
   * <code>.envoy.config.core.v3.QuicProtocolOptions quic_protocol_options = 1;</code>
   * @return The quicProtocolOptions.
   */
  io.envoyproxy.envoy.config.core.v3.QuicProtocolOptions getQuicProtocolOptions();
  /**
   * <code>.envoy.config.core.v3.QuicProtocolOptions quic_protocol_options = 1;</code>
   */
  io.envoyproxy.envoy.config.core.v3.QuicProtocolOptionsOrBuilder getQuicProtocolOptionsOrBuilder();

  /**
   * <pre>
   * Maximum number of milliseconds that connection will be alive when there is
   * no network activity.
   * If it is less than 1ms, Envoy will use 1ms. 300000ms if not specified.
   * </pre>
   *
   * <code>.google.protobuf.Duration idle_timeout = 2;</code>
   * @return Whether the idleTimeout field is set.
   */
  boolean hasIdleTimeout();
  /**
   * <pre>
   * Maximum number of milliseconds that connection will be alive when there is
   * no network activity.
   * If it is less than 1ms, Envoy will use 1ms. 300000ms if not specified.
   * </pre>
   *
   * <code>.google.protobuf.Duration idle_timeout = 2;</code>
   * @return The idleTimeout.
   */
  com.google.protobuf.Duration getIdleTimeout();
  /**
   * <pre>
   * Maximum number of milliseconds that connection will be alive when there is
   * no network activity.
   * If it is less than 1ms, Envoy will use 1ms. 300000ms if not specified.
   * </pre>
   *
   * <code>.google.protobuf.Duration idle_timeout = 2;</code>
   */
  com.google.protobuf.DurationOrBuilder getIdleTimeoutOrBuilder();

  /**
   * <pre>
   * Connection timeout in milliseconds before the crypto handshake is finished.
   * If it is less than 5000ms, Envoy will use 5000ms. 20000ms if not specified.
   * </pre>
   *
   * <code>.google.protobuf.Duration crypto_handshake_timeout = 3;</code>
   * @return Whether the cryptoHandshakeTimeout field is set.
   */
  boolean hasCryptoHandshakeTimeout();
  /**
   * <pre>
   * Connection timeout in milliseconds before the crypto handshake is finished.
   * If it is less than 5000ms, Envoy will use 5000ms. 20000ms if not specified.
   * </pre>
   *
   * <code>.google.protobuf.Duration crypto_handshake_timeout = 3;</code>
   * @return The cryptoHandshakeTimeout.
   */
  com.google.protobuf.Duration getCryptoHandshakeTimeout();
  /**
   * <pre>
   * Connection timeout in milliseconds before the crypto handshake is finished.
   * If it is less than 5000ms, Envoy will use 5000ms. 20000ms if not specified.
   * </pre>
   *
   * <code>.google.protobuf.Duration crypto_handshake_timeout = 3;</code>
   */
  com.google.protobuf.DurationOrBuilder getCryptoHandshakeTimeoutOrBuilder();

  /**
   * <pre>
   * Runtime flag that controls whether the listener is enabled or not. If not specified, defaults
   * to enabled.
   * </pre>
   *
   * <code>.envoy.config.core.v3.RuntimeFeatureFlag enabled = 4;</code>
   * @return Whether the enabled field is set.
   */
  boolean hasEnabled();
  /**
   * <pre>
   * Runtime flag that controls whether the listener is enabled or not. If not specified, defaults
   * to enabled.
   * </pre>
   *
   * <code>.envoy.config.core.v3.RuntimeFeatureFlag enabled = 4;</code>
   * @return The enabled.
   */
  io.envoyproxy.envoy.config.core.v3.RuntimeFeatureFlag getEnabled();
  /**
   * <pre>
   * Runtime flag that controls whether the listener is enabled or not. If not specified, defaults
   * to enabled.
   * </pre>
   *
   * <code>.envoy.config.core.v3.RuntimeFeatureFlag enabled = 4;</code>
   */
  io.envoyproxy.envoy.config.core.v3.RuntimeFeatureFlagOrBuilder getEnabledOrBuilder();

  /**
   * <pre>
   * A multiplier to number of connections which is used to determine how many packets to read per
   * event loop. A reasonable number should allow the listener to process enough payload but not
   * starve TCP and other UDP sockets and also prevent long event loop duration.
   * The default value is 32. This means if there are N QUIC connections, the total number of
   * packets to read in each read event will be 32 * N.
   * The actual number of packets to read in total by the UDP listener is also
   * bound by 6000, regardless of this field or how many connections there are.
   * </pre>
   *
   * <code>.google.protobuf.UInt32Value packets_to_read_to_connection_count_ratio = 5 [(.validate.rules) = { ... }</code>
   * @return Whether the packetsToReadToConnectionCountRatio field is set.
   */
  boolean hasPacketsToReadToConnectionCountRatio();
  /**
   * <pre>
   * A multiplier to number of connections which is used to determine how many packets to read per
   * event loop. A reasonable number should allow the listener to process enough payload but not
   * starve TCP and other UDP sockets and also prevent long event loop duration.
   * The default value is 32. This means if there are N QUIC connections, the total number of
   * packets to read in each read event will be 32 * N.
   * The actual number of packets to read in total by the UDP listener is also
   * bound by 6000, regardless of this field or how many connections there are.
   * </pre>
   *
   * <code>.google.protobuf.UInt32Value packets_to_read_to_connection_count_ratio = 5 [(.validate.rules) = { ... }</code>
   * @return The packetsToReadToConnectionCountRatio.
   */
  com.google.protobuf.UInt32Value getPacketsToReadToConnectionCountRatio();
  /**
   * <pre>
   * A multiplier to number of connections which is used to determine how many packets to read per
   * event loop. A reasonable number should allow the listener to process enough payload but not
   * starve TCP and other UDP sockets and also prevent long event loop duration.
   * The default value is 32. This means if there are N QUIC connections, the total number of
   * packets to read in each read event will be 32 * N.
   * The actual number of packets to read in total by the UDP listener is also
   * bound by 6000, regardless of this field or how many connections there are.
   * </pre>
   *
   * <code>.google.protobuf.UInt32Value packets_to_read_to_connection_count_ratio = 5 [(.validate.rules) = { ... }</code>
   */
  com.google.protobuf.UInt32ValueOrBuilder getPacketsToReadToConnectionCountRatioOrBuilder();

  /**
   * <pre>
   * Configure which implementation of ``quic::QuicCryptoClientStreamBase`` to be used for this listener.
   * If not specified the :ref:`QUICHE default one configured by &lt;envoy_v3_api_msg_extensions.quic.crypto_stream.v3.CryptoServerStreamConfig&gt;` will be used.
   * [#extension-category: envoy.quic.server.crypto_stream]
   * </pre>
   *
   * <code>.envoy.config.core.v3.TypedExtensionConfig crypto_stream_config = 6;</code>
   * @return Whether the cryptoStreamConfig field is set.
   */
  boolean hasCryptoStreamConfig();
  /**
   * <pre>
   * Configure which implementation of ``quic::QuicCryptoClientStreamBase`` to be used for this listener.
   * If not specified the :ref:`QUICHE default one configured by &lt;envoy_v3_api_msg_extensions.quic.crypto_stream.v3.CryptoServerStreamConfig&gt;` will be used.
   * [#extension-category: envoy.quic.server.crypto_stream]
   * </pre>
   *
   * <code>.envoy.config.core.v3.TypedExtensionConfig crypto_stream_config = 6;</code>
   * @return The cryptoStreamConfig.
   */
  io.envoyproxy.envoy.config.core.v3.TypedExtensionConfig getCryptoStreamConfig();
  /**
   * <pre>
   * Configure which implementation of ``quic::QuicCryptoClientStreamBase`` to be used for this listener.
   * If not specified the :ref:`QUICHE default one configured by &lt;envoy_v3_api_msg_extensions.quic.crypto_stream.v3.CryptoServerStreamConfig&gt;` will be used.
   * [#extension-category: envoy.quic.server.crypto_stream]
   * </pre>
   *
   * <code>.envoy.config.core.v3.TypedExtensionConfig crypto_stream_config = 6;</code>
   */
  io.envoyproxy.envoy.config.core.v3.TypedExtensionConfigOrBuilder getCryptoStreamConfigOrBuilder();

  /**
   * <pre>
   * Configure which implementation of ``quic::ProofSource`` to be used for this listener.
   * If not specified the :ref:`default one configured by &lt;envoy_v3_api_msg_extensions.quic.proof_source.v3.ProofSourceConfig&gt;` will be used.
   * [#extension-category: envoy.quic.proof_source]
   * </pre>
   *
   * <code>.envoy.config.core.v3.TypedExtensionConfig proof_source_config = 7;</code>
   * @return Whether the proofSourceConfig field is set.
   */
  boolean hasProofSourceConfig();
  /**
   * <pre>
   * Configure which implementation of ``quic::ProofSource`` to be used for this listener.
   * If not specified the :ref:`default one configured by &lt;envoy_v3_api_msg_extensions.quic.proof_source.v3.ProofSourceConfig&gt;` will be used.
   * [#extension-category: envoy.quic.proof_source]
   * </pre>
   *
   * <code>.envoy.config.core.v3.TypedExtensionConfig proof_source_config = 7;</code>
   * @return The proofSourceConfig.
   */
  io.envoyproxy.envoy.config.core.v3.TypedExtensionConfig getProofSourceConfig();
  /**
   * <pre>
   * Configure which implementation of ``quic::ProofSource`` to be used for this listener.
   * If not specified the :ref:`default one configured by &lt;envoy_v3_api_msg_extensions.quic.proof_source.v3.ProofSourceConfig&gt;` will be used.
   * [#extension-category: envoy.quic.proof_source]
   * </pre>
   *
   * <code>.envoy.config.core.v3.TypedExtensionConfig proof_source_config = 7;</code>
   */
  io.envoyproxy.envoy.config.core.v3.TypedExtensionConfigOrBuilder getProofSourceConfigOrBuilder();

  /**
   * <pre>
   * Config which implementation of ``quic::ConnectionIdGeneratorInterface`` to be used for this listener.
   * If not specified the :ref:`default one configured by &lt;envoy_v3_api_msg_extensions.quic.connection_id_generator.v3.DeterministicConnectionIdGeneratorConfig&gt;` will be used.
   * [#extension-category: envoy.quic.connection_id_generator]
   * </pre>
   *
   * <code>.envoy.config.core.v3.TypedExtensionConfig connection_id_generator_config = 8;</code>
   * @return Whether the connectionIdGeneratorConfig field is set.
   */
  boolean hasConnectionIdGeneratorConfig();
  /**
   * <pre>
   * Config which implementation of ``quic::ConnectionIdGeneratorInterface`` to be used for this listener.
   * If not specified the :ref:`default one configured by &lt;envoy_v3_api_msg_extensions.quic.connection_id_generator.v3.DeterministicConnectionIdGeneratorConfig&gt;` will be used.
   * [#extension-category: envoy.quic.connection_id_generator]
   * </pre>
   *
   * <code>.envoy.config.core.v3.TypedExtensionConfig connection_id_generator_config = 8;</code>
   * @return The connectionIdGeneratorConfig.
   */
  io.envoyproxy.envoy.config.core.v3.TypedExtensionConfig getConnectionIdGeneratorConfig();
  /**
   * <pre>
   * Config which implementation of ``quic::ConnectionIdGeneratorInterface`` to be used for this listener.
   * If not specified the :ref:`default one configured by &lt;envoy_v3_api_msg_extensions.quic.connection_id_generator.v3.DeterministicConnectionIdGeneratorConfig&gt;` will be used.
   * [#extension-category: envoy.quic.connection_id_generator]
   * </pre>
   *
   * <code>.envoy.config.core.v3.TypedExtensionConfig connection_id_generator_config = 8;</code>
   */
  io.envoyproxy.envoy.config.core.v3.TypedExtensionConfigOrBuilder getConnectionIdGeneratorConfigOrBuilder();
}
