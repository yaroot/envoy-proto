// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: envoy/config/listener/v3/udp_listener_config.proto

package io.envoyproxy.envoy.config.listener.v3;

/**
 * <pre>
 * [#next-free-field: 9]
 * </pre>
 *
 * Protobuf type {@code envoy.config.listener.v3.UdpListenerConfig}
 */
public final class UdpListenerConfig extends
    com.google.protobuf.GeneratedMessageV3 implements
    // @@protoc_insertion_point(message_implements:envoy.config.listener.v3.UdpListenerConfig)
    UdpListenerConfigOrBuilder {
private static final long serialVersionUID = 0L;
  // Use UdpListenerConfig.newBuilder() to construct.
  private UdpListenerConfig(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
    super(builder);
  }
  private UdpListenerConfig() {
  }

  @java.lang.Override
  @SuppressWarnings({"unused"})
  protected java.lang.Object newInstance(
      UnusedPrivateParameter unused) {
    return new UdpListenerConfig();
  }

  @java.lang.Override
  public final com.google.protobuf.UnknownFieldSet
  getUnknownFields() {
    return this.unknownFields;
  }
  public static final com.google.protobuf.Descriptors.Descriptor
      getDescriptor() {
    return io.envoyproxy.envoy.config.listener.v3.UdpListenerConfigProto.internal_static_envoy_config_listener_v3_UdpListenerConfig_descriptor;
  }

  @java.lang.Override
  protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internalGetFieldAccessorTable() {
    return io.envoyproxy.envoy.config.listener.v3.UdpListenerConfigProto.internal_static_envoy_config_listener_v3_UdpListenerConfig_fieldAccessorTable
        .ensureFieldAccessorsInitialized(
            io.envoyproxy.envoy.config.listener.v3.UdpListenerConfig.class, io.envoyproxy.envoy.config.listener.v3.UdpListenerConfig.Builder.class);
  }

  public static final int DOWNSTREAM_SOCKET_CONFIG_FIELD_NUMBER = 5;
  private io.envoyproxy.envoy.config.core.v3.UdpSocketConfig downstreamSocketConfig_;
  /**
   * <pre>
   * UDP socket configuration for the listener. The default for
   * :ref:`prefer_gro &lt;envoy_v3_api_field_config.core.v3.UdpSocketConfig.prefer_gro&gt;` is false for
   * listener sockets. If receiving a large amount of datagrams from a small number of sources, it
   * may be worthwhile to enable this option after performance testing.
   * </pre>
   *
   * <code>.envoy.config.core.v3.UdpSocketConfig downstream_socket_config = 5;</code>
   * @return Whether the downstreamSocketConfig field is set.
   */
  @java.lang.Override
  public boolean hasDownstreamSocketConfig() {
    return downstreamSocketConfig_ != null;
  }
  /**
   * <pre>
   * UDP socket configuration for the listener. The default for
   * :ref:`prefer_gro &lt;envoy_v3_api_field_config.core.v3.UdpSocketConfig.prefer_gro&gt;` is false for
   * listener sockets. If receiving a large amount of datagrams from a small number of sources, it
   * may be worthwhile to enable this option after performance testing.
   * </pre>
   *
   * <code>.envoy.config.core.v3.UdpSocketConfig downstream_socket_config = 5;</code>
   * @return The downstreamSocketConfig.
   */
  @java.lang.Override
  public io.envoyproxy.envoy.config.core.v3.UdpSocketConfig getDownstreamSocketConfig() {
    return downstreamSocketConfig_ == null ? io.envoyproxy.envoy.config.core.v3.UdpSocketConfig.getDefaultInstance() : downstreamSocketConfig_;
  }
  /**
   * <pre>
   * UDP socket configuration for the listener. The default for
   * :ref:`prefer_gro &lt;envoy_v3_api_field_config.core.v3.UdpSocketConfig.prefer_gro&gt;` is false for
   * listener sockets. If receiving a large amount of datagrams from a small number of sources, it
   * may be worthwhile to enable this option after performance testing.
   * </pre>
   *
   * <code>.envoy.config.core.v3.UdpSocketConfig downstream_socket_config = 5;</code>
   */
  @java.lang.Override
  public io.envoyproxy.envoy.config.core.v3.UdpSocketConfigOrBuilder getDownstreamSocketConfigOrBuilder() {
    return downstreamSocketConfig_ == null ? io.envoyproxy.envoy.config.core.v3.UdpSocketConfig.getDefaultInstance() : downstreamSocketConfig_;
  }

  public static final int QUIC_OPTIONS_FIELD_NUMBER = 7;
  private io.envoyproxy.envoy.config.listener.v3.QuicProtocolOptions quicOptions_;
  /**
   * <pre>
   * Configuration for QUIC protocol. If empty, QUIC will not be enabled on this listener. Set
   * to the default object to enable QUIC without modifying any additional options.
   * </pre>
   *
   * <code>.envoy.config.listener.v3.QuicProtocolOptions quic_options = 7;</code>
   * @return Whether the quicOptions field is set.
   */
  @java.lang.Override
  public boolean hasQuicOptions() {
    return quicOptions_ != null;
  }
  /**
   * <pre>
   * Configuration for QUIC protocol. If empty, QUIC will not be enabled on this listener. Set
   * to the default object to enable QUIC without modifying any additional options.
   * </pre>
   *
   * <code>.envoy.config.listener.v3.QuicProtocolOptions quic_options = 7;</code>
   * @return The quicOptions.
   */
  @java.lang.Override
  public io.envoyproxy.envoy.config.listener.v3.QuicProtocolOptions getQuicOptions() {
    return quicOptions_ == null ? io.envoyproxy.envoy.config.listener.v3.QuicProtocolOptions.getDefaultInstance() : quicOptions_;
  }
  /**
   * <pre>
   * Configuration for QUIC protocol. If empty, QUIC will not be enabled on this listener. Set
   * to the default object to enable QUIC without modifying any additional options.
   * </pre>
   *
   * <code>.envoy.config.listener.v3.QuicProtocolOptions quic_options = 7;</code>
   */
  @java.lang.Override
  public io.envoyproxy.envoy.config.listener.v3.QuicProtocolOptionsOrBuilder getQuicOptionsOrBuilder() {
    return quicOptions_ == null ? io.envoyproxy.envoy.config.listener.v3.QuicProtocolOptions.getDefaultInstance() : quicOptions_;
  }

  public static final int UDP_PACKET_PACKET_WRITER_CONFIG_FIELD_NUMBER = 8;
  private io.envoyproxy.envoy.config.core.v3.TypedExtensionConfig udpPacketPacketWriterConfig_;
  /**
   * <pre>
   * Configuration for the UDP packet writer. If empty, HTTP/3 will use GSO if available
   * (:ref:`UdpDefaultWriterFactory &lt;envoy_v3_api_msg_extensions.udp_packet_writer.v3.UdpGsoBatchWriterFactory&gt;`)
   * or the default kernel sendmsg if not,
   * (:ref:`UdpDefaultWriterFactory &lt;envoy_v3_api_msg_extensions.udp_packet_writer.v3.UdpDefaultWriterFactory&gt;`)
   * and raw UDP will use kernel sendmsg.
   * [#extension-category: envoy.udp_packet_writer]
   * </pre>
   *
   * <code>.envoy.config.core.v3.TypedExtensionConfig udp_packet_packet_writer_config = 8;</code>
   * @return Whether the udpPacketPacketWriterConfig field is set.
   */
  @java.lang.Override
  public boolean hasUdpPacketPacketWriterConfig() {
    return udpPacketPacketWriterConfig_ != null;
  }
  /**
   * <pre>
   * Configuration for the UDP packet writer. If empty, HTTP/3 will use GSO if available
   * (:ref:`UdpDefaultWriterFactory &lt;envoy_v3_api_msg_extensions.udp_packet_writer.v3.UdpGsoBatchWriterFactory&gt;`)
   * or the default kernel sendmsg if not,
   * (:ref:`UdpDefaultWriterFactory &lt;envoy_v3_api_msg_extensions.udp_packet_writer.v3.UdpDefaultWriterFactory&gt;`)
   * and raw UDP will use kernel sendmsg.
   * [#extension-category: envoy.udp_packet_writer]
   * </pre>
   *
   * <code>.envoy.config.core.v3.TypedExtensionConfig udp_packet_packet_writer_config = 8;</code>
   * @return The udpPacketPacketWriterConfig.
   */
  @java.lang.Override
  public io.envoyproxy.envoy.config.core.v3.TypedExtensionConfig getUdpPacketPacketWriterConfig() {
    return udpPacketPacketWriterConfig_ == null ? io.envoyproxy.envoy.config.core.v3.TypedExtensionConfig.getDefaultInstance() : udpPacketPacketWriterConfig_;
  }
  /**
   * <pre>
   * Configuration for the UDP packet writer. If empty, HTTP/3 will use GSO if available
   * (:ref:`UdpDefaultWriterFactory &lt;envoy_v3_api_msg_extensions.udp_packet_writer.v3.UdpGsoBatchWriterFactory&gt;`)
   * or the default kernel sendmsg if not,
   * (:ref:`UdpDefaultWriterFactory &lt;envoy_v3_api_msg_extensions.udp_packet_writer.v3.UdpDefaultWriterFactory&gt;`)
   * and raw UDP will use kernel sendmsg.
   * [#extension-category: envoy.udp_packet_writer]
   * </pre>
   *
   * <code>.envoy.config.core.v3.TypedExtensionConfig udp_packet_packet_writer_config = 8;</code>
   */
  @java.lang.Override
  public io.envoyproxy.envoy.config.core.v3.TypedExtensionConfigOrBuilder getUdpPacketPacketWriterConfigOrBuilder() {
    return udpPacketPacketWriterConfig_ == null ? io.envoyproxy.envoy.config.core.v3.TypedExtensionConfig.getDefaultInstance() : udpPacketPacketWriterConfig_;
  }

  private byte memoizedIsInitialized = -1;
  @java.lang.Override
  public final boolean isInitialized() {
    byte isInitialized = memoizedIsInitialized;
    if (isInitialized == 1) return true;
    if (isInitialized == 0) return false;

    memoizedIsInitialized = 1;
    return true;
  }

  @java.lang.Override
  public void writeTo(com.google.protobuf.CodedOutputStream output)
                      throws java.io.IOException {
    if (downstreamSocketConfig_ != null) {
      output.writeMessage(5, getDownstreamSocketConfig());
    }
    if (quicOptions_ != null) {
      output.writeMessage(7, getQuicOptions());
    }
    if (udpPacketPacketWriterConfig_ != null) {
      output.writeMessage(8, getUdpPacketPacketWriterConfig());
    }
    getUnknownFields().writeTo(output);
  }

  @java.lang.Override
  public int getSerializedSize() {
    int size = memoizedSize;
    if (size != -1) return size;

    size = 0;
    if (downstreamSocketConfig_ != null) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(5, getDownstreamSocketConfig());
    }
    if (quicOptions_ != null) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(7, getQuicOptions());
    }
    if (udpPacketPacketWriterConfig_ != null) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(8, getUdpPacketPacketWriterConfig());
    }
    size += getUnknownFields().getSerializedSize();
    memoizedSize = size;
    return size;
  }

  @java.lang.Override
  public boolean equals(final java.lang.Object obj) {
    if (obj == this) {
     return true;
    }
    if (!(obj instanceof io.envoyproxy.envoy.config.listener.v3.UdpListenerConfig)) {
      return super.equals(obj);
    }
    io.envoyproxy.envoy.config.listener.v3.UdpListenerConfig other = (io.envoyproxy.envoy.config.listener.v3.UdpListenerConfig) obj;

    if (hasDownstreamSocketConfig() != other.hasDownstreamSocketConfig()) return false;
    if (hasDownstreamSocketConfig()) {
      if (!getDownstreamSocketConfig()
          .equals(other.getDownstreamSocketConfig())) return false;
    }
    if (hasQuicOptions() != other.hasQuicOptions()) return false;
    if (hasQuicOptions()) {
      if (!getQuicOptions()
          .equals(other.getQuicOptions())) return false;
    }
    if (hasUdpPacketPacketWriterConfig() != other.hasUdpPacketPacketWriterConfig()) return false;
    if (hasUdpPacketPacketWriterConfig()) {
      if (!getUdpPacketPacketWriterConfig()
          .equals(other.getUdpPacketPacketWriterConfig())) return false;
    }
    if (!getUnknownFields().equals(other.getUnknownFields())) return false;
    return true;
  }

  @java.lang.Override
  public int hashCode() {
    if (memoizedHashCode != 0) {
      return memoizedHashCode;
    }
    int hash = 41;
    hash = (19 * hash) + getDescriptor().hashCode();
    if (hasDownstreamSocketConfig()) {
      hash = (37 * hash) + DOWNSTREAM_SOCKET_CONFIG_FIELD_NUMBER;
      hash = (53 * hash) + getDownstreamSocketConfig().hashCode();
    }
    if (hasQuicOptions()) {
      hash = (37 * hash) + QUIC_OPTIONS_FIELD_NUMBER;
      hash = (53 * hash) + getQuicOptions().hashCode();
    }
    if (hasUdpPacketPacketWriterConfig()) {
      hash = (37 * hash) + UDP_PACKET_PACKET_WRITER_CONFIG_FIELD_NUMBER;
      hash = (53 * hash) + getUdpPacketPacketWriterConfig().hashCode();
    }
    hash = (29 * hash) + getUnknownFields().hashCode();
    memoizedHashCode = hash;
    return hash;
  }

  public static io.envoyproxy.envoy.config.listener.v3.UdpListenerConfig parseFrom(
      java.nio.ByteBuffer data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static io.envoyproxy.envoy.config.listener.v3.UdpListenerConfig parseFrom(
      java.nio.ByteBuffer data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static io.envoyproxy.envoy.config.listener.v3.UdpListenerConfig parseFrom(
      com.google.protobuf.ByteString data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static io.envoyproxy.envoy.config.listener.v3.UdpListenerConfig parseFrom(
      com.google.protobuf.ByteString data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static io.envoyproxy.envoy.config.listener.v3.UdpListenerConfig parseFrom(byte[] data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static io.envoyproxy.envoy.config.listener.v3.UdpListenerConfig parseFrom(
      byte[] data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static io.envoyproxy.envoy.config.listener.v3.UdpListenerConfig parseFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input);
  }
  public static io.envoyproxy.envoy.config.listener.v3.UdpListenerConfig parseFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input, extensionRegistry);
  }
  public static io.envoyproxy.envoy.config.listener.v3.UdpListenerConfig parseDelimitedFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseDelimitedWithIOException(PARSER, input);
  }
  public static io.envoyproxy.envoy.config.listener.v3.UdpListenerConfig parseDelimitedFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
  }
  public static io.envoyproxy.envoy.config.listener.v3.UdpListenerConfig parseFrom(
      com.google.protobuf.CodedInputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input);
  }
  public static io.envoyproxy.envoy.config.listener.v3.UdpListenerConfig parseFrom(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input, extensionRegistry);
  }

  @java.lang.Override
  public Builder newBuilderForType() { return newBuilder(); }
  public static Builder newBuilder() {
    return DEFAULT_INSTANCE.toBuilder();
  }
  public static Builder newBuilder(io.envoyproxy.envoy.config.listener.v3.UdpListenerConfig prototype) {
    return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
  }
  @java.lang.Override
  public Builder toBuilder() {
    return this == DEFAULT_INSTANCE
        ? new Builder() : new Builder().mergeFrom(this);
  }

  @java.lang.Override
  protected Builder newBuilderForType(
      com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
    Builder builder = new Builder(parent);
    return builder;
  }
  /**
   * <pre>
   * [#next-free-field: 9]
   * </pre>
   *
   * Protobuf type {@code envoy.config.listener.v3.UdpListenerConfig}
   */
  public static final class Builder extends
      com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
      // @@protoc_insertion_point(builder_implements:envoy.config.listener.v3.UdpListenerConfig)
      io.envoyproxy.envoy.config.listener.v3.UdpListenerConfigOrBuilder {
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return io.envoyproxy.envoy.config.listener.v3.UdpListenerConfigProto.internal_static_envoy_config_listener_v3_UdpListenerConfig_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return io.envoyproxy.envoy.config.listener.v3.UdpListenerConfigProto.internal_static_envoy_config_listener_v3_UdpListenerConfig_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              io.envoyproxy.envoy.config.listener.v3.UdpListenerConfig.class, io.envoyproxy.envoy.config.listener.v3.UdpListenerConfig.Builder.class);
    }

    // Construct using io.envoyproxy.envoy.config.listener.v3.UdpListenerConfig.newBuilder()
    private Builder() {

    }

    private Builder(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      super(parent);

    }
    @java.lang.Override
    public Builder clear() {
      super.clear();
      bitField0_ = 0;
      downstreamSocketConfig_ = null;
      if (downstreamSocketConfigBuilder_ != null) {
        downstreamSocketConfigBuilder_.dispose();
        downstreamSocketConfigBuilder_ = null;
      }
      quicOptions_ = null;
      if (quicOptionsBuilder_ != null) {
        quicOptionsBuilder_.dispose();
        quicOptionsBuilder_ = null;
      }
      udpPacketPacketWriterConfig_ = null;
      if (udpPacketPacketWriterConfigBuilder_ != null) {
        udpPacketPacketWriterConfigBuilder_.dispose();
        udpPacketPacketWriterConfigBuilder_ = null;
      }
      return this;
    }

    @java.lang.Override
    public com.google.protobuf.Descriptors.Descriptor
        getDescriptorForType() {
      return io.envoyproxy.envoy.config.listener.v3.UdpListenerConfigProto.internal_static_envoy_config_listener_v3_UdpListenerConfig_descriptor;
    }

    @java.lang.Override
    public io.envoyproxy.envoy.config.listener.v3.UdpListenerConfig getDefaultInstanceForType() {
      return io.envoyproxy.envoy.config.listener.v3.UdpListenerConfig.getDefaultInstance();
    }

    @java.lang.Override
    public io.envoyproxy.envoy.config.listener.v3.UdpListenerConfig build() {
      io.envoyproxy.envoy.config.listener.v3.UdpListenerConfig result = buildPartial();
      if (!result.isInitialized()) {
        throw newUninitializedMessageException(result);
      }
      return result;
    }

    @java.lang.Override
    public io.envoyproxy.envoy.config.listener.v3.UdpListenerConfig buildPartial() {
      io.envoyproxy.envoy.config.listener.v3.UdpListenerConfig result = new io.envoyproxy.envoy.config.listener.v3.UdpListenerConfig(this);
      if (bitField0_ != 0) { buildPartial0(result); }
      onBuilt();
      return result;
    }

    private void buildPartial0(io.envoyproxy.envoy.config.listener.v3.UdpListenerConfig result) {
      int from_bitField0_ = bitField0_;
      if (((from_bitField0_ & 0x00000001) != 0)) {
        result.downstreamSocketConfig_ = downstreamSocketConfigBuilder_ == null
            ? downstreamSocketConfig_
            : downstreamSocketConfigBuilder_.build();
      }
      if (((from_bitField0_ & 0x00000002) != 0)) {
        result.quicOptions_ = quicOptionsBuilder_ == null
            ? quicOptions_
            : quicOptionsBuilder_.build();
      }
      if (((from_bitField0_ & 0x00000004) != 0)) {
        result.udpPacketPacketWriterConfig_ = udpPacketPacketWriterConfigBuilder_ == null
            ? udpPacketPacketWriterConfig_
            : udpPacketPacketWriterConfigBuilder_.build();
      }
    }

    @java.lang.Override
    public Builder clone() {
      return super.clone();
    }
    @java.lang.Override
    public Builder setField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        java.lang.Object value) {
      return super.setField(field, value);
    }
    @java.lang.Override
    public Builder clearField(
        com.google.protobuf.Descriptors.FieldDescriptor field) {
      return super.clearField(field);
    }
    @java.lang.Override
    public Builder clearOneof(
        com.google.protobuf.Descriptors.OneofDescriptor oneof) {
      return super.clearOneof(oneof);
    }
    @java.lang.Override
    public Builder setRepeatedField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        int index, java.lang.Object value) {
      return super.setRepeatedField(field, index, value);
    }
    @java.lang.Override
    public Builder addRepeatedField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        java.lang.Object value) {
      return super.addRepeatedField(field, value);
    }
    @java.lang.Override
    public Builder mergeFrom(com.google.protobuf.Message other) {
      if (other instanceof io.envoyproxy.envoy.config.listener.v3.UdpListenerConfig) {
        return mergeFrom((io.envoyproxy.envoy.config.listener.v3.UdpListenerConfig)other);
      } else {
        super.mergeFrom(other);
        return this;
      }
    }

    public Builder mergeFrom(io.envoyproxy.envoy.config.listener.v3.UdpListenerConfig other) {
      if (other == io.envoyproxy.envoy.config.listener.v3.UdpListenerConfig.getDefaultInstance()) return this;
      if (other.hasDownstreamSocketConfig()) {
        mergeDownstreamSocketConfig(other.getDownstreamSocketConfig());
      }
      if (other.hasQuicOptions()) {
        mergeQuicOptions(other.getQuicOptions());
      }
      if (other.hasUdpPacketPacketWriterConfig()) {
        mergeUdpPacketPacketWriterConfig(other.getUdpPacketPacketWriterConfig());
      }
      this.mergeUnknownFields(other.getUnknownFields());
      onChanged();
      return this;
    }

    @java.lang.Override
    public final boolean isInitialized() {
      return true;
    }

    @java.lang.Override
    public Builder mergeFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 42: {
              input.readMessage(
                  getDownstreamSocketConfigFieldBuilder().getBuilder(),
                  extensionRegistry);
              bitField0_ |= 0x00000001;
              break;
            } // case 42
            case 58: {
              input.readMessage(
                  getQuicOptionsFieldBuilder().getBuilder(),
                  extensionRegistry);
              bitField0_ |= 0x00000002;
              break;
            } // case 58
            case 66: {
              input.readMessage(
                  getUdpPacketPacketWriterConfigFieldBuilder().getBuilder(),
                  extensionRegistry);
              bitField0_ |= 0x00000004;
              break;
            } // case 66
            default: {
              if (!super.parseUnknownField(input, extensionRegistry, tag)) {
                done = true; // was an endgroup tag
              }
              break;
            } // default:
          } // switch (tag)
        } // while (!done)
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.unwrapIOException();
      } finally {
        onChanged();
      } // finally
      return this;
    }
    private int bitField0_;

    private io.envoyproxy.envoy.config.core.v3.UdpSocketConfig downstreamSocketConfig_;
    private com.google.protobuf.SingleFieldBuilderV3<
        io.envoyproxy.envoy.config.core.v3.UdpSocketConfig, io.envoyproxy.envoy.config.core.v3.UdpSocketConfig.Builder, io.envoyproxy.envoy.config.core.v3.UdpSocketConfigOrBuilder> downstreamSocketConfigBuilder_;
    /**
     * <pre>
     * UDP socket configuration for the listener. The default for
     * :ref:`prefer_gro &lt;envoy_v3_api_field_config.core.v3.UdpSocketConfig.prefer_gro&gt;` is false for
     * listener sockets. If receiving a large amount of datagrams from a small number of sources, it
     * may be worthwhile to enable this option after performance testing.
     * </pre>
     *
     * <code>.envoy.config.core.v3.UdpSocketConfig downstream_socket_config = 5;</code>
     * @return Whether the downstreamSocketConfig field is set.
     */
    public boolean hasDownstreamSocketConfig() {
      return ((bitField0_ & 0x00000001) != 0);
    }
    /**
     * <pre>
     * UDP socket configuration for the listener. The default for
     * :ref:`prefer_gro &lt;envoy_v3_api_field_config.core.v3.UdpSocketConfig.prefer_gro&gt;` is false for
     * listener sockets. If receiving a large amount of datagrams from a small number of sources, it
     * may be worthwhile to enable this option after performance testing.
     * </pre>
     *
     * <code>.envoy.config.core.v3.UdpSocketConfig downstream_socket_config = 5;</code>
     * @return The downstreamSocketConfig.
     */
    public io.envoyproxy.envoy.config.core.v3.UdpSocketConfig getDownstreamSocketConfig() {
      if (downstreamSocketConfigBuilder_ == null) {
        return downstreamSocketConfig_ == null ? io.envoyproxy.envoy.config.core.v3.UdpSocketConfig.getDefaultInstance() : downstreamSocketConfig_;
      } else {
        return downstreamSocketConfigBuilder_.getMessage();
      }
    }
    /**
     * <pre>
     * UDP socket configuration for the listener. The default for
     * :ref:`prefer_gro &lt;envoy_v3_api_field_config.core.v3.UdpSocketConfig.prefer_gro&gt;` is false for
     * listener sockets. If receiving a large amount of datagrams from a small number of sources, it
     * may be worthwhile to enable this option after performance testing.
     * </pre>
     *
     * <code>.envoy.config.core.v3.UdpSocketConfig downstream_socket_config = 5;</code>
     */
    public Builder setDownstreamSocketConfig(io.envoyproxy.envoy.config.core.v3.UdpSocketConfig value) {
      if (downstreamSocketConfigBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        downstreamSocketConfig_ = value;
      } else {
        downstreamSocketConfigBuilder_.setMessage(value);
      }
      bitField0_ |= 0x00000001;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * UDP socket configuration for the listener. The default for
     * :ref:`prefer_gro &lt;envoy_v3_api_field_config.core.v3.UdpSocketConfig.prefer_gro&gt;` is false for
     * listener sockets. If receiving a large amount of datagrams from a small number of sources, it
     * may be worthwhile to enable this option after performance testing.
     * </pre>
     *
     * <code>.envoy.config.core.v3.UdpSocketConfig downstream_socket_config = 5;</code>
     */
    public Builder setDownstreamSocketConfig(
        io.envoyproxy.envoy.config.core.v3.UdpSocketConfig.Builder builderForValue) {
      if (downstreamSocketConfigBuilder_ == null) {
        downstreamSocketConfig_ = builderForValue.build();
      } else {
        downstreamSocketConfigBuilder_.setMessage(builderForValue.build());
      }
      bitField0_ |= 0x00000001;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * UDP socket configuration for the listener. The default for
     * :ref:`prefer_gro &lt;envoy_v3_api_field_config.core.v3.UdpSocketConfig.prefer_gro&gt;` is false for
     * listener sockets. If receiving a large amount of datagrams from a small number of sources, it
     * may be worthwhile to enable this option after performance testing.
     * </pre>
     *
     * <code>.envoy.config.core.v3.UdpSocketConfig downstream_socket_config = 5;</code>
     */
    public Builder mergeDownstreamSocketConfig(io.envoyproxy.envoy.config.core.v3.UdpSocketConfig value) {
      if (downstreamSocketConfigBuilder_ == null) {
        if (((bitField0_ & 0x00000001) != 0) &&
          downstreamSocketConfig_ != null &&
          downstreamSocketConfig_ != io.envoyproxy.envoy.config.core.v3.UdpSocketConfig.getDefaultInstance()) {
          getDownstreamSocketConfigBuilder().mergeFrom(value);
        } else {
          downstreamSocketConfig_ = value;
        }
      } else {
        downstreamSocketConfigBuilder_.mergeFrom(value);
      }
      bitField0_ |= 0x00000001;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * UDP socket configuration for the listener. The default for
     * :ref:`prefer_gro &lt;envoy_v3_api_field_config.core.v3.UdpSocketConfig.prefer_gro&gt;` is false for
     * listener sockets. If receiving a large amount of datagrams from a small number of sources, it
     * may be worthwhile to enable this option after performance testing.
     * </pre>
     *
     * <code>.envoy.config.core.v3.UdpSocketConfig downstream_socket_config = 5;</code>
     */
    public Builder clearDownstreamSocketConfig() {
      bitField0_ = (bitField0_ & ~0x00000001);
      downstreamSocketConfig_ = null;
      if (downstreamSocketConfigBuilder_ != null) {
        downstreamSocketConfigBuilder_.dispose();
        downstreamSocketConfigBuilder_ = null;
      }
      onChanged();
      return this;
    }
    /**
     * <pre>
     * UDP socket configuration for the listener. The default for
     * :ref:`prefer_gro &lt;envoy_v3_api_field_config.core.v3.UdpSocketConfig.prefer_gro&gt;` is false for
     * listener sockets. If receiving a large amount of datagrams from a small number of sources, it
     * may be worthwhile to enable this option after performance testing.
     * </pre>
     *
     * <code>.envoy.config.core.v3.UdpSocketConfig downstream_socket_config = 5;</code>
     */
    public io.envoyproxy.envoy.config.core.v3.UdpSocketConfig.Builder getDownstreamSocketConfigBuilder() {
      bitField0_ |= 0x00000001;
      onChanged();
      return getDownstreamSocketConfigFieldBuilder().getBuilder();
    }
    /**
     * <pre>
     * UDP socket configuration for the listener. The default for
     * :ref:`prefer_gro &lt;envoy_v3_api_field_config.core.v3.UdpSocketConfig.prefer_gro&gt;` is false for
     * listener sockets. If receiving a large amount of datagrams from a small number of sources, it
     * may be worthwhile to enable this option after performance testing.
     * </pre>
     *
     * <code>.envoy.config.core.v3.UdpSocketConfig downstream_socket_config = 5;</code>
     */
    public io.envoyproxy.envoy.config.core.v3.UdpSocketConfigOrBuilder getDownstreamSocketConfigOrBuilder() {
      if (downstreamSocketConfigBuilder_ != null) {
        return downstreamSocketConfigBuilder_.getMessageOrBuilder();
      } else {
        return downstreamSocketConfig_ == null ?
            io.envoyproxy.envoy.config.core.v3.UdpSocketConfig.getDefaultInstance() : downstreamSocketConfig_;
      }
    }
    /**
     * <pre>
     * UDP socket configuration for the listener. The default for
     * :ref:`prefer_gro &lt;envoy_v3_api_field_config.core.v3.UdpSocketConfig.prefer_gro&gt;` is false for
     * listener sockets. If receiving a large amount of datagrams from a small number of sources, it
     * may be worthwhile to enable this option after performance testing.
     * </pre>
     *
     * <code>.envoy.config.core.v3.UdpSocketConfig downstream_socket_config = 5;</code>
     */
    private com.google.protobuf.SingleFieldBuilderV3<
        io.envoyproxy.envoy.config.core.v3.UdpSocketConfig, io.envoyproxy.envoy.config.core.v3.UdpSocketConfig.Builder, io.envoyproxy.envoy.config.core.v3.UdpSocketConfigOrBuilder> 
        getDownstreamSocketConfigFieldBuilder() {
      if (downstreamSocketConfigBuilder_ == null) {
        downstreamSocketConfigBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
            io.envoyproxy.envoy.config.core.v3.UdpSocketConfig, io.envoyproxy.envoy.config.core.v3.UdpSocketConfig.Builder, io.envoyproxy.envoy.config.core.v3.UdpSocketConfigOrBuilder>(
                getDownstreamSocketConfig(),
                getParentForChildren(),
                isClean());
        downstreamSocketConfig_ = null;
      }
      return downstreamSocketConfigBuilder_;
    }

    private io.envoyproxy.envoy.config.listener.v3.QuicProtocolOptions quicOptions_;
    private com.google.protobuf.SingleFieldBuilderV3<
        io.envoyproxy.envoy.config.listener.v3.QuicProtocolOptions, io.envoyproxy.envoy.config.listener.v3.QuicProtocolOptions.Builder, io.envoyproxy.envoy.config.listener.v3.QuicProtocolOptionsOrBuilder> quicOptionsBuilder_;
    /**
     * <pre>
     * Configuration for QUIC protocol. If empty, QUIC will not be enabled on this listener. Set
     * to the default object to enable QUIC without modifying any additional options.
     * </pre>
     *
     * <code>.envoy.config.listener.v3.QuicProtocolOptions quic_options = 7;</code>
     * @return Whether the quicOptions field is set.
     */
    public boolean hasQuicOptions() {
      return ((bitField0_ & 0x00000002) != 0);
    }
    /**
     * <pre>
     * Configuration for QUIC protocol. If empty, QUIC will not be enabled on this listener. Set
     * to the default object to enable QUIC without modifying any additional options.
     * </pre>
     *
     * <code>.envoy.config.listener.v3.QuicProtocolOptions quic_options = 7;</code>
     * @return The quicOptions.
     */
    public io.envoyproxy.envoy.config.listener.v3.QuicProtocolOptions getQuicOptions() {
      if (quicOptionsBuilder_ == null) {
        return quicOptions_ == null ? io.envoyproxy.envoy.config.listener.v3.QuicProtocolOptions.getDefaultInstance() : quicOptions_;
      } else {
        return quicOptionsBuilder_.getMessage();
      }
    }
    /**
     * <pre>
     * Configuration for QUIC protocol. If empty, QUIC will not be enabled on this listener. Set
     * to the default object to enable QUIC without modifying any additional options.
     * </pre>
     *
     * <code>.envoy.config.listener.v3.QuicProtocolOptions quic_options = 7;</code>
     */
    public Builder setQuicOptions(io.envoyproxy.envoy.config.listener.v3.QuicProtocolOptions value) {
      if (quicOptionsBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        quicOptions_ = value;
      } else {
        quicOptionsBuilder_.setMessage(value);
      }
      bitField0_ |= 0x00000002;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * Configuration for QUIC protocol. If empty, QUIC will not be enabled on this listener. Set
     * to the default object to enable QUIC without modifying any additional options.
     * </pre>
     *
     * <code>.envoy.config.listener.v3.QuicProtocolOptions quic_options = 7;</code>
     */
    public Builder setQuicOptions(
        io.envoyproxy.envoy.config.listener.v3.QuicProtocolOptions.Builder builderForValue) {
      if (quicOptionsBuilder_ == null) {
        quicOptions_ = builderForValue.build();
      } else {
        quicOptionsBuilder_.setMessage(builderForValue.build());
      }
      bitField0_ |= 0x00000002;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * Configuration for QUIC protocol. If empty, QUIC will not be enabled on this listener. Set
     * to the default object to enable QUIC without modifying any additional options.
     * </pre>
     *
     * <code>.envoy.config.listener.v3.QuicProtocolOptions quic_options = 7;</code>
     */
    public Builder mergeQuicOptions(io.envoyproxy.envoy.config.listener.v3.QuicProtocolOptions value) {
      if (quicOptionsBuilder_ == null) {
        if (((bitField0_ & 0x00000002) != 0) &&
          quicOptions_ != null &&
          quicOptions_ != io.envoyproxy.envoy.config.listener.v3.QuicProtocolOptions.getDefaultInstance()) {
          getQuicOptionsBuilder().mergeFrom(value);
        } else {
          quicOptions_ = value;
        }
      } else {
        quicOptionsBuilder_.mergeFrom(value);
      }
      bitField0_ |= 0x00000002;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * Configuration for QUIC protocol. If empty, QUIC will not be enabled on this listener. Set
     * to the default object to enable QUIC without modifying any additional options.
     * </pre>
     *
     * <code>.envoy.config.listener.v3.QuicProtocolOptions quic_options = 7;</code>
     */
    public Builder clearQuicOptions() {
      bitField0_ = (bitField0_ & ~0x00000002);
      quicOptions_ = null;
      if (quicOptionsBuilder_ != null) {
        quicOptionsBuilder_.dispose();
        quicOptionsBuilder_ = null;
      }
      onChanged();
      return this;
    }
    /**
     * <pre>
     * Configuration for QUIC protocol. If empty, QUIC will not be enabled on this listener. Set
     * to the default object to enable QUIC without modifying any additional options.
     * </pre>
     *
     * <code>.envoy.config.listener.v3.QuicProtocolOptions quic_options = 7;</code>
     */
    public io.envoyproxy.envoy.config.listener.v3.QuicProtocolOptions.Builder getQuicOptionsBuilder() {
      bitField0_ |= 0x00000002;
      onChanged();
      return getQuicOptionsFieldBuilder().getBuilder();
    }
    /**
     * <pre>
     * Configuration for QUIC protocol. If empty, QUIC will not be enabled on this listener. Set
     * to the default object to enable QUIC without modifying any additional options.
     * </pre>
     *
     * <code>.envoy.config.listener.v3.QuicProtocolOptions quic_options = 7;</code>
     */
    public io.envoyproxy.envoy.config.listener.v3.QuicProtocolOptionsOrBuilder getQuicOptionsOrBuilder() {
      if (quicOptionsBuilder_ != null) {
        return quicOptionsBuilder_.getMessageOrBuilder();
      } else {
        return quicOptions_ == null ?
            io.envoyproxy.envoy.config.listener.v3.QuicProtocolOptions.getDefaultInstance() : quicOptions_;
      }
    }
    /**
     * <pre>
     * Configuration for QUIC protocol. If empty, QUIC will not be enabled on this listener. Set
     * to the default object to enable QUIC without modifying any additional options.
     * </pre>
     *
     * <code>.envoy.config.listener.v3.QuicProtocolOptions quic_options = 7;</code>
     */
    private com.google.protobuf.SingleFieldBuilderV3<
        io.envoyproxy.envoy.config.listener.v3.QuicProtocolOptions, io.envoyproxy.envoy.config.listener.v3.QuicProtocolOptions.Builder, io.envoyproxy.envoy.config.listener.v3.QuicProtocolOptionsOrBuilder> 
        getQuicOptionsFieldBuilder() {
      if (quicOptionsBuilder_ == null) {
        quicOptionsBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
            io.envoyproxy.envoy.config.listener.v3.QuicProtocolOptions, io.envoyproxy.envoy.config.listener.v3.QuicProtocolOptions.Builder, io.envoyproxy.envoy.config.listener.v3.QuicProtocolOptionsOrBuilder>(
                getQuicOptions(),
                getParentForChildren(),
                isClean());
        quicOptions_ = null;
      }
      return quicOptionsBuilder_;
    }

    private io.envoyproxy.envoy.config.core.v3.TypedExtensionConfig udpPacketPacketWriterConfig_;
    private com.google.protobuf.SingleFieldBuilderV3<
        io.envoyproxy.envoy.config.core.v3.TypedExtensionConfig, io.envoyproxy.envoy.config.core.v3.TypedExtensionConfig.Builder, io.envoyproxy.envoy.config.core.v3.TypedExtensionConfigOrBuilder> udpPacketPacketWriterConfigBuilder_;
    /**
     * <pre>
     * Configuration for the UDP packet writer. If empty, HTTP/3 will use GSO if available
     * (:ref:`UdpDefaultWriterFactory &lt;envoy_v3_api_msg_extensions.udp_packet_writer.v3.UdpGsoBatchWriterFactory&gt;`)
     * or the default kernel sendmsg if not,
     * (:ref:`UdpDefaultWriterFactory &lt;envoy_v3_api_msg_extensions.udp_packet_writer.v3.UdpDefaultWriterFactory&gt;`)
     * and raw UDP will use kernel sendmsg.
     * [#extension-category: envoy.udp_packet_writer]
     * </pre>
     *
     * <code>.envoy.config.core.v3.TypedExtensionConfig udp_packet_packet_writer_config = 8;</code>
     * @return Whether the udpPacketPacketWriterConfig field is set.
     */
    public boolean hasUdpPacketPacketWriterConfig() {
      return ((bitField0_ & 0x00000004) != 0);
    }
    /**
     * <pre>
     * Configuration for the UDP packet writer. If empty, HTTP/3 will use GSO if available
     * (:ref:`UdpDefaultWriterFactory &lt;envoy_v3_api_msg_extensions.udp_packet_writer.v3.UdpGsoBatchWriterFactory&gt;`)
     * or the default kernel sendmsg if not,
     * (:ref:`UdpDefaultWriterFactory &lt;envoy_v3_api_msg_extensions.udp_packet_writer.v3.UdpDefaultWriterFactory&gt;`)
     * and raw UDP will use kernel sendmsg.
     * [#extension-category: envoy.udp_packet_writer]
     * </pre>
     *
     * <code>.envoy.config.core.v3.TypedExtensionConfig udp_packet_packet_writer_config = 8;</code>
     * @return The udpPacketPacketWriterConfig.
     */
    public io.envoyproxy.envoy.config.core.v3.TypedExtensionConfig getUdpPacketPacketWriterConfig() {
      if (udpPacketPacketWriterConfigBuilder_ == null) {
        return udpPacketPacketWriterConfig_ == null ? io.envoyproxy.envoy.config.core.v3.TypedExtensionConfig.getDefaultInstance() : udpPacketPacketWriterConfig_;
      } else {
        return udpPacketPacketWriterConfigBuilder_.getMessage();
      }
    }
    /**
     * <pre>
     * Configuration for the UDP packet writer. If empty, HTTP/3 will use GSO if available
     * (:ref:`UdpDefaultWriterFactory &lt;envoy_v3_api_msg_extensions.udp_packet_writer.v3.UdpGsoBatchWriterFactory&gt;`)
     * or the default kernel sendmsg if not,
     * (:ref:`UdpDefaultWriterFactory &lt;envoy_v3_api_msg_extensions.udp_packet_writer.v3.UdpDefaultWriterFactory&gt;`)
     * and raw UDP will use kernel sendmsg.
     * [#extension-category: envoy.udp_packet_writer]
     * </pre>
     *
     * <code>.envoy.config.core.v3.TypedExtensionConfig udp_packet_packet_writer_config = 8;</code>
     */
    public Builder setUdpPacketPacketWriterConfig(io.envoyproxy.envoy.config.core.v3.TypedExtensionConfig value) {
      if (udpPacketPacketWriterConfigBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        udpPacketPacketWriterConfig_ = value;
      } else {
        udpPacketPacketWriterConfigBuilder_.setMessage(value);
      }
      bitField0_ |= 0x00000004;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * Configuration for the UDP packet writer. If empty, HTTP/3 will use GSO if available
     * (:ref:`UdpDefaultWriterFactory &lt;envoy_v3_api_msg_extensions.udp_packet_writer.v3.UdpGsoBatchWriterFactory&gt;`)
     * or the default kernel sendmsg if not,
     * (:ref:`UdpDefaultWriterFactory &lt;envoy_v3_api_msg_extensions.udp_packet_writer.v3.UdpDefaultWriterFactory&gt;`)
     * and raw UDP will use kernel sendmsg.
     * [#extension-category: envoy.udp_packet_writer]
     * </pre>
     *
     * <code>.envoy.config.core.v3.TypedExtensionConfig udp_packet_packet_writer_config = 8;</code>
     */
    public Builder setUdpPacketPacketWriterConfig(
        io.envoyproxy.envoy.config.core.v3.TypedExtensionConfig.Builder builderForValue) {
      if (udpPacketPacketWriterConfigBuilder_ == null) {
        udpPacketPacketWriterConfig_ = builderForValue.build();
      } else {
        udpPacketPacketWriterConfigBuilder_.setMessage(builderForValue.build());
      }
      bitField0_ |= 0x00000004;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * Configuration for the UDP packet writer. If empty, HTTP/3 will use GSO if available
     * (:ref:`UdpDefaultWriterFactory &lt;envoy_v3_api_msg_extensions.udp_packet_writer.v3.UdpGsoBatchWriterFactory&gt;`)
     * or the default kernel sendmsg if not,
     * (:ref:`UdpDefaultWriterFactory &lt;envoy_v3_api_msg_extensions.udp_packet_writer.v3.UdpDefaultWriterFactory&gt;`)
     * and raw UDP will use kernel sendmsg.
     * [#extension-category: envoy.udp_packet_writer]
     * </pre>
     *
     * <code>.envoy.config.core.v3.TypedExtensionConfig udp_packet_packet_writer_config = 8;</code>
     */
    public Builder mergeUdpPacketPacketWriterConfig(io.envoyproxy.envoy.config.core.v3.TypedExtensionConfig value) {
      if (udpPacketPacketWriterConfigBuilder_ == null) {
        if (((bitField0_ & 0x00000004) != 0) &&
          udpPacketPacketWriterConfig_ != null &&
          udpPacketPacketWriterConfig_ != io.envoyproxy.envoy.config.core.v3.TypedExtensionConfig.getDefaultInstance()) {
          getUdpPacketPacketWriterConfigBuilder().mergeFrom(value);
        } else {
          udpPacketPacketWriterConfig_ = value;
        }
      } else {
        udpPacketPacketWriterConfigBuilder_.mergeFrom(value);
      }
      bitField0_ |= 0x00000004;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * Configuration for the UDP packet writer. If empty, HTTP/3 will use GSO if available
     * (:ref:`UdpDefaultWriterFactory &lt;envoy_v3_api_msg_extensions.udp_packet_writer.v3.UdpGsoBatchWriterFactory&gt;`)
     * or the default kernel sendmsg if not,
     * (:ref:`UdpDefaultWriterFactory &lt;envoy_v3_api_msg_extensions.udp_packet_writer.v3.UdpDefaultWriterFactory&gt;`)
     * and raw UDP will use kernel sendmsg.
     * [#extension-category: envoy.udp_packet_writer]
     * </pre>
     *
     * <code>.envoy.config.core.v3.TypedExtensionConfig udp_packet_packet_writer_config = 8;</code>
     */
    public Builder clearUdpPacketPacketWriterConfig() {
      bitField0_ = (bitField0_ & ~0x00000004);
      udpPacketPacketWriterConfig_ = null;
      if (udpPacketPacketWriterConfigBuilder_ != null) {
        udpPacketPacketWriterConfigBuilder_.dispose();
        udpPacketPacketWriterConfigBuilder_ = null;
      }
      onChanged();
      return this;
    }
    /**
     * <pre>
     * Configuration for the UDP packet writer. If empty, HTTP/3 will use GSO if available
     * (:ref:`UdpDefaultWriterFactory &lt;envoy_v3_api_msg_extensions.udp_packet_writer.v3.UdpGsoBatchWriterFactory&gt;`)
     * or the default kernel sendmsg if not,
     * (:ref:`UdpDefaultWriterFactory &lt;envoy_v3_api_msg_extensions.udp_packet_writer.v3.UdpDefaultWriterFactory&gt;`)
     * and raw UDP will use kernel sendmsg.
     * [#extension-category: envoy.udp_packet_writer]
     * </pre>
     *
     * <code>.envoy.config.core.v3.TypedExtensionConfig udp_packet_packet_writer_config = 8;</code>
     */
    public io.envoyproxy.envoy.config.core.v3.TypedExtensionConfig.Builder getUdpPacketPacketWriterConfigBuilder() {
      bitField0_ |= 0x00000004;
      onChanged();
      return getUdpPacketPacketWriterConfigFieldBuilder().getBuilder();
    }
    /**
     * <pre>
     * Configuration for the UDP packet writer. If empty, HTTP/3 will use GSO if available
     * (:ref:`UdpDefaultWriterFactory &lt;envoy_v3_api_msg_extensions.udp_packet_writer.v3.UdpGsoBatchWriterFactory&gt;`)
     * or the default kernel sendmsg if not,
     * (:ref:`UdpDefaultWriterFactory &lt;envoy_v3_api_msg_extensions.udp_packet_writer.v3.UdpDefaultWriterFactory&gt;`)
     * and raw UDP will use kernel sendmsg.
     * [#extension-category: envoy.udp_packet_writer]
     * </pre>
     *
     * <code>.envoy.config.core.v3.TypedExtensionConfig udp_packet_packet_writer_config = 8;</code>
     */
    public io.envoyproxy.envoy.config.core.v3.TypedExtensionConfigOrBuilder getUdpPacketPacketWriterConfigOrBuilder() {
      if (udpPacketPacketWriterConfigBuilder_ != null) {
        return udpPacketPacketWriterConfigBuilder_.getMessageOrBuilder();
      } else {
        return udpPacketPacketWriterConfig_ == null ?
            io.envoyproxy.envoy.config.core.v3.TypedExtensionConfig.getDefaultInstance() : udpPacketPacketWriterConfig_;
      }
    }
    /**
     * <pre>
     * Configuration for the UDP packet writer. If empty, HTTP/3 will use GSO if available
     * (:ref:`UdpDefaultWriterFactory &lt;envoy_v3_api_msg_extensions.udp_packet_writer.v3.UdpGsoBatchWriterFactory&gt;`)
     * or the default kernel sendmsg if not,
     * (:ref:`UdpDefaultWriterFactory &lt;envoy_v3_api_msg_extensions.udp_packet_writer.v3.UdpDefaultWriterFactory&gt;`)
     * and raw UDP will use kernel sendmsg.
     * [#extension-category: envoy.udp_packet_writer]
     * </pre>
     *
     * <code>.envoy.config.core.v3.TypedExtensionConfig udp_packet_packet_writer_config = 8;</code>
     */
    private com.google.protobuf.SingleFieldBuilderV3<
        io.envoyproxy.envoy.config.core.v3.TypedExtensionConfig, io.envoyproxy.envoy.config.core.v3.TypedExtensionConfig.Builder, io.envoyproxy.envoy.config.core.v3.TypedExtensionConfigOrBuilder> 
        getUdpPacketPacketWriterConfigFieldBuilder() {
      if (udpPacketPacketWriterConfigBuilder_ == null) {
        udpPacketPacketWriterConfigBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
            io.envoyproxy.envoy.config.core.v3.TypedExtensionConfig, io.envoyproxy.envoy.config.core.v3.TypedExtensionConfig.Builder, io.envoyproxy.envoy.config.core.v3.TypedExtensionConfigOrBuilder>(
                getUdpPacketPacketWriterConfig(),
                getParentForChildren(),
                isClean());
        udpPacketPacketWriterConfig_ = null;
      }
      return udpPacketPacketWriterConfigBuilder_;
    }
    @java.lang.Override
    public final Builder setUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return super.setUnknownFields(unknownFields);
    }

    @java.lang.Override
    public final Builder mergeUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return super.mergeUnknownFields(unknownFields);
    }


    // @@protoc_insertion_point(builder_scope:envoy.config.listener.v3.UdpListenerConfig)
  }

  // @@protoc_insertion_point(class_scope:envoy.config.listener.v3.UdpListenerConfig)
  private static final io.envoyproxy.envoy.config.listener.v3.UdpListenerConfig DEFAULT_INSTANCE;
  static {
    DEFAULT_INSTANCE = new io.envoyproxy.envoy.config.listener.v3.UdpListenerConfig();
  }

  public static io.envoyproxy.envoy.config.listener.v3.UdpListenerConfig getDefaultInstance() {
    return DEFAULT_INSTANCE;
  }

  private static final com.google.protobuf.Parser<UdpListenerConfig>
      PARSER = new com.google.protobuf.AbstractParser<UdpListenerConfig>() {
    @java.lang.Override
    public UdpListenerConfig parsePartialFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      Builder builder = newBuilder();
      try {
        builder.mergeFrom(input, extensionRegistry);
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(builder.buildPartial());
      } catch (com.google.protobuf.UninitializedMessageException e) {
        throw e.asInvalidProtocolBufferException().setUnfinishedMessage(builder.buildPartial());
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(e)
            .setUnfinishedMessage(builder.buildPartial());
      }
      return builder.buildPartial();
    }
  };

  public static com.google.protobuf.Parser<UdpListenerConfig> parser() {
    return PARSER;
  }

  @java.lang.Override
  public com.google.protobuf.Parser<UdpListenerConfig> getParserForType() {
    return PARSER;
  }

  @java.lang.Override
  public io.envoyproxy.envoy.config.listener.v3.UdpListenerConfig getDefaultInstanceForType() {
    return DEFAULT_INSTANCE;
  }

}

