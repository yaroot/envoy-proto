// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: envoy/config/listener/v3/listener_components.proto

package io.envoyproxy.envoy.config.listener.v3;

/**
 * <pre>
 * A filter chain wraps a set of match criteria, an option TLS context, a set of filters, and
 * various other parameters.
 * [#next-free-field: 10]
 * </pre>
 *
 * Protobuf type {@code envoy.config.listener.v3.FilterChain}
 */
public final class FilterChain extends
    com.google.protobuf.GeneratedMessageV3 implements
    // @@protoc_insertion_point(message_implements:envoy.config.listener.v3.FilterChain)
    FilterChainOrBuilder {
private static final long serialVersionUID = 0L;
  // Use FilterChain.newBuilder() to construct.
  private FilterChain(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
    super(builder);
  }
  private FilterChain() {
    filters_ = java.util.Collections.emptyList();
    name_ = "";
  }

  @java.lang.Override
  @SuppressWarnings({"unused"})
  protected java.lang.Object newInstance(
      UnusedPrivateParameter unused) {
    return new FilterChain();
  }

  @java.lang.Override
  public final com.google.protobuf.UnknownFieldSet
  getUnknownFields() {
    return this.unknownFields;
  }
  public static final com.google.protobuf.Descriptors.Descriptor
      getDescriptor() {
    return io.envoyproxy.envoy.config.listener.v3.ListenerComponentsProto.internal_static_envoy_config_listener_v3_FilterChain_descriptor;
  }

  @java.lang.Override
  protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internalGetFieldAccessorTable() {
    return io.envoyproxy.envoy.config.listener.v3.ListenerComponentsProto.internal_static_envoy_config_listener_v3_FilterChain_fieldAccessorTable
        .ensureFieldAccessorsInitialized(
            io.envoyproxy.envoy.config.listener.v3.FilterChain.class, io.envoyproxy.envoy.config.listener.v3.FilterChain.Builder.class);
  }

  public interface OnDemandConfigurationOrBuilder extends
      // @@protoc_insertion_point(interface_extends:envoy.config.listener.v3.FilterChain.OnDemandConfiguration)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <pre>
     * The timeout to wait for filter chain placeholders to complete rebuilding.
     * 1. If this field is set to 0, timeout is disabled.
     * 2. If not specified, a default timeout of 15s is used.
     * Rebuilding will wait until dependencies are ready, have failed, or this timeout is reached.
     * Upon failure or timeout, all connections related to this filter chain will be closed.
     * Rebuilding will start again on the next new connection.
     * </pre>
     *
     * <code>.google.protobuf.Duration rebuild_timeout = 1;</code>
     * @return Whether the rebuildTimeout field is set.
     */
    boolean hasRebuildTimeout();
    /**
     * <pre>
     * The timeout to wait for filter chain placeholders to complete rebuilding.
     * 1. If this field is set to 0, timeout is disabled.
     * 2. If not specified, a default timeout of 15s is used.
     * Rebuilding will wait until dependencies are ready, have failed, or this timeout is reached.
     * Upon failure or timeout, all connections related to this filter chain will be closed.
     * Rebuilding will start again on the next new connection.
     * </pre>
     *
     * <code>.google.protobuf.Duration rebuild_timeout = 1;</code>
     * @return The rebuildTimeout.
     */
    com.google.protobuf.Duration getRebuildTimeout();
    /**
     * <pre>
     * The timeout to wait for filter chain placeholders to complete rebuilding.
     * 1. If this field is set to 0, timeout is disabled.
     * 2. If not specified, a default timeout of 15s is used.
     * Rebuilding will wait until dependencies are ready, have failed, or this timeout is reached.
     * Upon failure or timeout, all connections related to this filter chain will be closed.
     * Rebuilding will start again on the next new connection.
     * </pre>
     *
     * <code>.google.protobuf.Duration rebuild_timeout = 1;</code>
     */
    com.google.protobuf.DurationOrBuilder getRebuildTimeoutOrBuilder();
  }
  /**
   * <pre>
   * The configuration for on-demand filter chain. If this field is not empty in FilterChain message,
   * a filter chain will be built on-demand.
   * On-demand filter chains help speedup the warming up of listeners since the building and initialization of
   * an on-demand filter chain will be postponed to the arrival of new connection requests that require this filter chain.
   * Filter chains that are not often used can be set as on-demand.
   * </pre>
   *
   * Protobuf type {@code envoy.config.listener.v3.FilterChain.OnDemandConfiguration}
   */
  public static final class OnDemandConfiguration extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:envoy.config.listener.v3.FilterChain.OnDemandConfiguration)
      OnDemandConfigurationOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use OnDemandConfiguration.newBuilder() to construct.
    private OnDemandConfiguration(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private OnDemandConfiguration() {
    }

    @java.lang.Override
    @SuppressWarnings({"unused"})
    protected java.lang.Object newInstance(
        UnusedPrivateParameter unused) {
      return new OnDemandConfiguration();
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return io.envoyproxy.envoy.config.listener.v3.ListenerComponentsProto.internal_static_envoy_config_listener_v3_FilterChain_OnDemandConfiguration_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return io.envoyproxy.envoy.config.listener.v3.ListenerComponentsProto.internal_static_envoy_config_listener_v3_FilterChain_OnDemandConfiguration_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              io.envoyproxy.envoy.config.listener.v3.FilterChain.OnDemandConfiguration.class, io.envoyproxy.envoy.config.listener.v3.FilterChain.OnDemandConfiguration.Builder.class);
    }

    public static final int REBUILD_TIMEOUT_FIELD_NUMBER = 1;
    private com.google.protobuf.Duration rebuildTimeout_;
    /**
     * <pre>
     * The timeout to wait for filter chain placeholders to complete rebuilding.
     * 1. If this field is set to 0, timeout is disabled.
     * 2. If not specified, a default timeout of 15s is used.
     * Rebuilding will wait until dependencies are ready, have failed, or this timeout is reached.
     * Upon failure or timeout, all connections related to this filter chain will be closed.
     * Rebuilding will start again on the next new connection.
     * </pre>
     *
     * <code>.google.protobuf.Duration rebuild_timeout = 1;</code>
     * @return Whether the rebuildTimeout field is set.
     */
    @java.lang.Override
    public boolean hasRebuildTimeout() {
      return rebuildTimeout_ != null;
    }
    /**
     * <pre>
     * The timeout to wait for filter chain placeholders to complete rebuilding.
     * 1. If this field is set to 0, timeout is disabled.
     * 2. If not specified, a default timeout of 15s is used.
     * Rebuilding will wait until dependencies are ready, have failed, or this timeout is reached.
     * Upon failure or timeout, all connections related to this filter chain will be closed.
     * Rebuilding will start again on the next new connection.
     * </pre>
     *
     * <code>.google.protobuf.Duration rebuild_timeout = 1;</code>
     * @return The rebuildTimeout.
     */
    @java.lang.Override
    public com.google.protobuf.Duration getRebuildTimeout() {
      return rebuildTimeout_ == null ? com.google.protobuf.Duration.getDefaultInstance() : rebuildTimeout_;
    }
    /**
     * <pre>
     * The timeout to wait for filter chain placeholders to complete rebuilding.
     * 1. If this field is set to 0, timeout is disabled.
     * 2. If not specified, a default timeout of 15s is used.
     * Rebuilding will wait until dependencies are ready, have failed, or this timeout is reached.
     * Upon failure or timeout, all connections related to this filter chain will be closed.
     * Rebuilding will start again on the next new connection.
     * </pre>
     *
     * <code>.google.protobuf.Duration rebuild_timeout = 1;</code>
     */
    @java.lang.Override
    public com.google.protobuf.DurationOrBuilder getRebuildTimeoutOrBuilder() {
      return rebuildTimeout_ == null ? com.google.protobuf.Duration.getDefaultInstance() : rebuildTimeout_;
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (rebuildTimeout_ != null) {
        output.writeMessage(1, getRebuildTimeout());
      }
      getUnknownFields().writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (rebuildTimeout_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, getRebuildTimeout());
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof io.envoyproxy.envoy.config.listener.v3.FilterChain.OnDemandConfiguration)) {
        return super.equals(obj);
      }
      io.envoyproxy.envoy.config.listener.v3.FilterChain.OnDemandConfiguration other = (io.envoyproxy.envoy.config.listener.v3.FilterChain.OnDemandConfiguration) obj;

      if (hasRebuildTimeout() != other.hasRebuildTimeout()) return false;
      if (hasRebuildTimeout()) {
        if (!getRebuildTimeout()
            .equals(other.getRebuildTimeout())) return false;
      }
      if (!getUnknownFields().equals(other.getUnknownFields())) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      if (hasRebuildTimeout()) {
        hash = (37 * hash) + REBUILD_TIMEOUT_FIELD_NUMBER;
        hash = (53 * hash) + getRebuildTimeout().hashCode();
      }
      hash = (29 * hash) + getUnknownFields().hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static io.envoyproxy.envoy.config.listener.v3.FilterChain.OnDemandConfiguration parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static io.envoyproxy.envoy.config.listener.v3.FilterChain.OnDemandConfiguration parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static io.envoyproxy.envoy.config.listener.v3.FilterChain.OnDemandConfiguration parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static io.envoyproxy.envoy.config.listener.v3.FilterChain.OnDemandConfiguration parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static io.envoyproxy.envoy.config.listener.v3.FilterChain.OnDemandConfiguration parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static io.envoyproxy.envoy.config.listener.v3.FilterChain.OnDemandConfiguration parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static io.envoyproxy.envoy.config.listener.v3.FilterChain.OnDemandConfiguration parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static io.envoyproxy.envoy.config.listener.v3.FilterChain.OnDemandConfiguration parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static io.envoyproxy.envoy.config.listener.v3.FilterChain.OnDemandConfiguration parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static io.envoyproxy.envoy.config.listener.v3.FilterChain.OnDemandConfiguration parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static io.envoyproxy.envoy.config.listener.v3.FilterChain.OnDemandConfiguration parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static io.envoyproxy.envoy.config.listener.v3.FilterChain.OnDemandConfiguration parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(io.envoyproxy.envoy.config.listener.v3.FilterChain.OnDemandConfiguration prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * <pre>
     * The configuration for on-demand filter chain. If this field is not empty in FilterChain message,
     * a filter chain will be built on-demand.
     * On-demand filter chains help speedup the warming up of listeners since the building and initialization of
     * an on-demand filter chain will be postponed to the arrival of new connection requests that require this filter chain.
     * Filter chains that are not often used can be set as on-demand.
     * </pre>
     *
     * Protobuf type {@code envoy.config.listener.v3.FilterChain.OnDemandConfiguration}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:envoy.config.listener.v3.FilterChain.OnDemandConfiguration)
        io.envoyproxy.envoy.config.listener.v3.FilterChain.OnDemandConfigurationOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return io.envoyproxy.envoy.config.listener.v3.ListenerComponentsProto.internal_static_envoy_config_listener_v3_FilterChain_OnDemandConfiguration_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return io.envoyproxy.envoy.config.listener.v3.ListenerComponentsProto.internal_static_envoy_config_listener_v3_FilterChain_OnDemandConfiguration_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                io.envoyproxy.envoy.config.listener.v3.FilterChain.OnDemandConfiguration.class, io.envoyproxy.envoy.config.listener.v3.FilterChain.OnDemandConfiguration.Builder.class);
      }

      // Construct using io.envoyproxy.envoy.config.listener.v3.FilterChain.OnDemandConfiguration.newBuilder()
      private Builder() {

      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);

      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        bitField0_ = 0;
        rebuildTimeout_ = null;
        if (rebuildTimeoutBuilder_ != null) {
          rebuildTimeoutBuilder_.dispose();
          rebuildTimeoutBuilder_ = null;
        }
        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return io.envoyproxy.envoy.config.listener.v3.ListenerComponentsProto.internal_static_envoy_config_listener_v3_FilterChain_OnDemandConfiguration_descriptor;
      }

      @java.lang.Override
      public io.envoyproxy.envoy.config.listener.v3.FilterChain.OnDemandConfiguration getDefaultInstanceForType() {
        return io.envoyproxy.envoy.config.listener.v3.FilterChain.OnDemandConfiguration.getDefaultInstance();
      }

      @java.lang.Override
      public io.envoyproxy.envoy.config.listener.v3.FilterChain.OnDemandConfiguration build() {
        io.envoyproxy.envoy.config.listener.v3.FilterChain.OnDemandConfiguration result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public io.envoyproxy.envoy.config.listener.v3.FilterChain.OnDemandConfiguration buildPartial() {
        io.envoyproxy.envoy.config.listener.v3.FilterChain.OnDemandConfiguration result = new io.envoyproxy.envoy.config.listener.v3.FilterChain.OnDemandConfiguration(this);
        if (bitField0_ != 0) { buildPartial0(result); }
        onBuilt();
        return result;
      }

      private void buildPartial0(io.envoyproxy.envoy.config.listener.v3.FilterChain.OnDemandConfiguration result) {
        int from_bitField0_ = bitField0_;
        if (((from_bitField0_ & 0x00000001) != 0)) {
          result.rebuildTimeout_ = rebuildTimeoutBuilder_ == null
              ? rebuildTimeout_
              : rebuildTimeoutBuilder_.build();
        }
      }

      @java.lang.Override
      public Builder clone() {
        return super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof io.envoyproxy.envoy.config.listener.v3.FilterChain.OnDemandConfiguration) {
          return mergeFrom((io.envoyproxy.envoy.config.listener.v3.FilterChain.OnDemandConfiguration)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(io.envoyproxy.envoy.config.listener.v3.FilterChain.OnDemandConfiguration other) {
        if (other == io.envoyproxy.envoy.config.listener.v3.FilterChain.OnDemandConfiguration.getDefaultInstance()) return this;
        if (other.hasRebuildTimeout()) {
          mergeRebuildTimeout(other.getRebuildTimeout());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        if (extensionRegistry == null) {
          throw new java.lang.NullPointerException();
        }
        try {
          boolean done = false;
          while (!done) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                done = true;
                break;
              case 10: {
                input.readMessage(
                    getRebuildTimeoutFieldBuilder().getBuilder(),
                    extensionRegistry);
                bitField0_ |= 0x00000001;
                break;
              } // case 10
              default: {
                if (!super.parseUnknownField(input, extensionRegistry, tag)) {
                  done = true; // was an endgroup tag
                }
                break;
              } // default:
            } // switch (tag)
          } // while (!done)
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.unwrapIOException();
        } finally {
          onChanged();
        } // finally
        return this;
      }
      private int bitField0_;

      private com.google.protobuf.Duration rebuildTimeout_;
      private com.google.protobuf.SingleFieldBuilderV3<
          com.google.protobuf.Duration, com.google.protobuf.Duration.Builder, com.google.protobuf.DurationOrBuilder> rebuildTimeoutBuilder_;
      /**
       * <pre>
       * The timeout to wait for filter chain placeholders to complete rebuilding.
       * 1. If this field is set to 0, timeout is disabled.
       * 2. If not specified, a default timeout of 15s is used.
       * Rebuilding will wait until dependencies are ready, have failed, or this timeout is reached.
       * Upon failure or timeout, all connections related to this filter chain will be closed.
       * Rebuilding will start again on the next new connection.
       * </pre>
       *
       * <code>.google.protobuf.Duration rebuild_timeout = 1;</code>
       * @return Whether the rebuildTimeout field is set.
       */
      public boolean hasRebuildTimeout() {
        return ((bitField0_ & 0x00000001) != 0);
      }
      /**
       * <pre>
       * The timeout to wait for filter chain placeholders to complete rebuilding.
       * 1. If this field is set to 0, timeout is disabled.
       * 2. If not specified, a default timeout of 15s is used.
       * Rebuilding will wait until dependencies are ready, have failed, or this timeout is reached.
       * Upon failure or timeout, all connections related to this filter chain will be closed.
       * Rebuilding will start again on the next new connection.
       * </pre>
       *
       * <code>.google.protobuf.Duration rebuild_timeout = 1;</code>
       * @return The rebuildTimeout.
       */
      public com.google.protobuf.Duration getRebuildTimeout() {
        if (rebuildTimeoutBuilder_ == null) {
          return rebuildTimeout_ == null ? com.google.protobuf.Duration.getDefaultInstance() : rebuildTimeout_;
        } else {
          return rebuildTimeoutBuilder_.getMessage();
        }
      }
      /**
       * <pre>
       * The timeout to wait for filter chain placeholders to complete rebuilding.
       * 1. If this field is set to 0, timeout is disabled.
       * 2. If not specified, a default timeout of 15s is used.
       * Rebuilding will wait until dependencies are ready, have failed, or this timeout is reached.
       * Upon failure or timeout, all connections related to this filter chain will be closed.
       * Rebuilding will start again on the next new connection.
       * </pre>
       *
       * <code>.google.protobuf.Duration rebuild_timeout = 1;</code>
       */
      public Builder setRebuildTimeout(com.google.protobuf.Duration value) {
        if (rebuildTimeoutBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          rebuildTimeout_ = value;
        } else {
          rebuildTimeoutBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000001;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * The timeout to wait for filter chain placeholders to complete rebuilding.
       * 1. If this field is set to 0, timeout is disabled.
       * 2. If not specified, a default timeout of 15s is used.
       * Rebuilding will wait until dependencies are ready, have failed, or this timeout is reached.
       * Upon failure or timeout, all connections related to this filter chain will be closed.
       * Rebuilding will start again on the next new connection.
       * </pre>
       *
       * <code>.google.protobuf.Duration rebuild_timeout = 1;</code>
       */
      public Builder setRebuildTimeout(
          com.google.protobuf.Duration.Builder builderForValue) {
        if (rebuildTimeoutBuilder_ == null) {
          rebuildTimeout_ = builderForValue.build();
        } else {
          rebuildTimeoutBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000001;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * The timeout to wait for filter chain placeholders to complete rebuilding.
       * 1. If this field is set to 0, timeout is disabled.
       * 2. If not specified, a default timeout of 15s is used.
       * Rebuilding will wait until dependencies are ready, have failed, or this timeout is reached.
       * Upon failure or timeout, all connections related to this filter chain will be closed.
       * Rebuilding will start again on the next new connection.
       * </pre>
       *
       * <code>.google.protobuf.Duration rebuild_timeout = 1;</code>
       */
      public Builder mergeRebuildTimeout(com.google.protobuf.Duration value) {
        if (rebuildTimeoutBuilder_ == null) {
          if (((bitField0_ & 0x00000001) != 0) &&
            rebuildTimeout_ != null &&
            rebuildTimeout_ != com.google.protobuf.Duration.getDefaultInstance()) {
            getRebuildTimeoutBuilder().mergeFrom(value);
          } else {
            rebuildTimeout_ = value;
          }
        } else {
          rebuildTimeoutBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x00000001;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * The timeout to wait for filter chain placeholders to complete rebuilding.
       * 1. If this field is set to 0, timeout is disabled.
       * 2. If not specified, a default timeout of 15s is used.
       * Rebuilding will wait until dependencies are ready, have failed, or this timeout is reached.
       * Upon failure or timeout, all connections related to this filter chain will be closed.
       * Rebuilding will start again on the next new connection.
       * </pre>
       *
       * <code>.google.protobuf.Duration rebuild_timeout = 1;</code>
       */
      public Builder clearRebuildTimeout() {
        bitField0_ = (bitField0_ & ~0x00000001);
        rebuildTimeout_ = null;
        if (rebuildTimeoutBuilder_ != null) {
          rebuildTimeoutBuilder_.dispose();
          rebuildTimeoutBuilder_ = null;
        }
        onChanged();
        return this;
      }
      /**
       * <pre>
       * The timeout to wait for filter chain placeholders to complete rebuilding.
       * 1. If this field is set to 0, timeout is disabled.
       * 2. If not specified, a default timeout of 15s is used.
       * Rebuilding will wait until dependencies are ready, have failed, or this timeout is reached.
       * Upon failure or timeout, all connections related to this filter chain will be closed.
       * Rebuilding will start again on the next new connection.
       * </pre>
       *
       * <code>.google.protobuf.Duration rebuild_timeout = 1;</code>
       */
      public com.google.protobuf.Duration.Builder getRebuildTimeoutBuilder() {
        bitField0_ |= 0x00000001;
        onChanged();
        return getRebuildTimeoutFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       * The timeout to wait for filter chain placeholders to complete rebuilding.
       * 1. If this field is set to 0, timeout is disabled.
       * 2. If not specified, a default timeout of 15s is used.
       * Rebuilding will wait until dependencies are ready, have failed, or this timeout is reached.
       * Upon failure or timeout, all connections related to this filter chain will be closed.
       * Rebuilding will start again on the next new connection.
       * </pre>
       *
       * <code>.google.protobuf.Duration rebuild_timeout = 1;</code>
       */
      public com.google.protobuf.DurationOrBuilder getRebuildTimeoutOrBuilder() {
        if (rebuildTimeoutBuilder_ != null) {
          return rebuildTimeoutBuilder_.getMessageOrBuilder();
        } else {
          return rebuildTimeout_ == null ?
              com.google.protobuf.Duration.getDefaultInstance() : rebuildTimeout_;
        }
      }
      /**
       * <pre>
       * The timeout to wait for filter chain placeholders to complete rebuilding.
       * 1. If this field is set to 0, timeout is disabled.
       * 2. If not specified, a default timeout of 15s is used.
       * Rebuilding will wait until dependencies are ready, have failed, or this timeout is reached.
       * Upon failure or timeout, all connections related to this filter chain will be closed.
       * Rebuilding will start again on the next new connection.
       * </pre>
       *
       * <code>.google.protobuf.Duration rebuild_timeout = 1;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          com.google.protobuf.Duration, com.google.protobuf.Duration.Builder, com.google.protobuf.DurationOrBuilder> 
          getRebuildTimeoutFieldBuilder() {
        if (rebuildTimeoutBuilder_ == null) {
          rebuildTimeoutBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              com.google.protobuf.Duration, com.google.protobuf.Duration.Builder, com.google.protobuf.DurationOrBuilder>(
                  getRebuildTimeout(),
                  getParentForChildren(),
                  isClean());
          rebuildTimeout_ = null;
        }
        return rebuildTimeoutBuilder_;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:envoy.config.listener.v3.FilterChain.OnDemandConfiguration)
    }

    // @@protoc_insertion_point(class_scope:envoy.config.listener.v3.FilterChain.OnDemandConfiguration)
    private static final io.envoyproxy.envoy.config.listener.v3.FilterChain.OnDemandConfiguration DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new io.envoyproxy.envoy.config.listener.v3.FilterChain.OnDemandConfiguration();
    }

    public static io.envoyproxy.envoy.config.listener.v3.FilterChain.OnDemandConfiguration getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<OnDemandConfiguration>
        PARSER = new com.google.protobuf.AbstractParser<OnDemandConfiguration>() {
      @java.lang.Override
      public OnDemandConfiguration parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        Builder builder = newBuilder();
        try {
          builder.mergeFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.setUnfinishedMessage(builder.buildPartial());
        } catch (com.google.protobuf.UninitializedMessageException e) {
          throw e.asInvalidProtocolBufferException().setUnfinishedMessage(builder.buildPartial());
        } catch (java.io.IOException e) {
          throw new com.google.protobuf.InvalidProtocolBufferException(e)
              .setUnfinishedMessage(builder.buildPartial());
        }
        return builder.buildPartial();
      }
    };

    public static com.google.protobuf.Parser<OnDemandConfiguration> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<OnDemandConfiguration> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public io.envoyproxy.envoy.config.listener.v3.FilterChain.OnDemandConfiguration getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public static final int FILTER_CHAIN_MATCH_FIELD_NUMBER = 1;
  private io.envoyproxy.envoy.config.listener.v3.FilterChainMatch filterChainMatch_;
  /**
   * <pre>
   * The criteria to use when matching a connection to this filter chain.
   * </pre>
   *
   * <code>.envoy.config.listener.v3.FilterChainMatch filter_chain_match = 1;</code>
   * @return Whether the filterChainMatch field is set.
   */
  @java.lang.Override
  public boolean hasFilterChainMatch() {
    return filterChainMatch_ != null;
  }
  /**
   * <pre>
   * The criteria to use when matching a connection to this filter chain.
   * </pre>
   *
   * <code>.envoy.config.listener.v3.FilterChainMatch filter_chain_match = 1;</code>
   * @return The filterChainMatch.
   */
  @java.lang.Override
  public io.envoyproxy.envoy.config.listener.v3.FilterChainMatch getFilterChainMatch() {
    return filterChainMatch_ == null ? io.envoyproxy.envoy.config.listener.v3.FilterChainMatch.getDefaultInstance() : filterChainMatch_;
  }
  /**
   * <pre>
   * The criteria to use when matching a connection to this filter chain.
   * </pre>
   *
   * <code>.envoy.config.listener.v3.FilterChainMatch filter_chain_match = 1;</code>
   */
  @java.lang.Override
  public io.envoyproxy.envoy.config.listener.v3.FilterChainMatchOrBuilder getFilterChainMatchOrBuilder() {
    return filterChainMatch_ == null ? io.envoyproxy.envoy.config.listener.v3.FilterChainMatch.getDefaultInstance() : filterChainMatch_;
  }

  public static final int FILTERS_FIELD_NUMBER = 3;
  @SuppressWarnings("serial")
  private java.util.List<io.envoyproxy.envoy.config.listener.v3.Filter> filters_;
  /**
   * <pre>
   * A list of individual network filters that make up the filter chain for
   * connections established with the listener. Order matters as the filters are
   * processed sequentially as connection events happen. Note: If the filter
   * list is empty, the connection will close by default.
   * For QUIC listeners, network filters other than HTTP Connection Manager (HCM)
   * can be created, but due to differences in the connection implementation compared
   * to TCP, the onData() method will never be called. Therefore, network filters
   * for QUIC listeners should only expect to do work at the start of a new connection
   * (i.e. in onNewConnection()). HCM must be the last (or only) filter in the chain.
   * </pre>
   *
   * <code>repeated .envoy.config.listener.v3.Filter filters = 3;</code>
   */
  @java.lang.Override
  public java.util.List<io.envoyproxy.envoy.config.listener.v3.Filter> getFiltersList() {
    return filters_;
  }
  /**
   * <pre>
   * A list of individual network filters that make up the filter chain for
   * connections established with the listener. Order matters as the filters are
   * processed sequentially as connection events happen. Note: If the filter
   * list is empty, the connection will close by default.
   * For QUIC listeners, network filters other than HTTP Connection Manager (HCM)
   * can be created, but due to differences in the connection implementation compared
   * to TCP, the onData() method will never be called. Therefore, network filters
   * for QUIC listeners should only expect to do work at the start of a new connection
   * (i.e. in onNewConnection()). HCM must be the last (or only) filter in the chain.
   * </pre>
   *
   * <code>repeated .envoy.config.listener.v3.Filter filters = 3;</code>
   */
  @java.lang.Override
  public java.util.List<? extends io.envoyproxy.envoy.config.listener.v3.FilterOrBuilder> 
      getFiltersOrBuilderList() {
    return filters_;
  }
  /**
   * <pre>
   * A list of individual network filters that make up the filter chain for
   * connections established with the listener. Order matters as the filters are
   * processed sequentially as connection events happen. Note: If the filter
   * list is empty, the connection will close by default.
   * For QUIC listeners, network filters other than HTTP Connection Manager (HCM)
   * can be created, but due to differences in the connection implementation compared
   * to TCP, the onData() method will never be called. Therefore, network filters
   * for QUIC listeners should only expect to do work at the start of a new connection
   * (i.e. in onNewConnection()). HCM must be the last (or only) filter in the chain.
   * </pre>
   *
   * <code>repeated .envoy.config.listener.v3.Filter filters = 3;</code>
   */
  @java.lang.Override
  public int getFiltersCount() {
    return filters_.size();
  }
  /**
   * <pre>
   * A list of individual network filters that make up the filter chain for
   * connections established with the listener. Order matters as the filters are
   * processed sequentially as connection events happen. Note: If the filter
   * list is empty, the connection will close by default.
   * For QUIC listeners, network filters other than HTTP Connection Manager (HCM)
   * can be created, but due to differences in the connection implementation compared
   * to TCP, the onData() method will never be called. Therefore, network filters
   * for QUIC listeners should only expect to do work at the start of a new connection
   * (i.e. in onNewConnection()). HCM must be the last (or only) filter in the chain.
   * </pre>
   *
   * <code>repeated .envoy.config.listener.v3.Filter filters = 3;</code>
   */
  @java.lang.Override
  public io.envoyproxy.envoy.config.listener.v3.Filter getFilters(int index) {
    return filters_.get(index);
  }
  /**
   * <pre>
   * A list of individual network filters that make up the filter chain for
   * connections established with the listener. Order matters as the filters are
   * processed sequentially as connection events happen. Note: If the filter
   * list is empty, the connection will close by default.
   * For QUIC listeners, network filters other than HTTP Connection Manager (HCM)
   * can be created, but due to differences in the connection implementation compared
   * to TCP, the onData() method will never be called. Therefore, network filters
   * for QUIC listeners should only expect to do work at the start of a new connection
   * (i.e. in onNewConnection()). HCM must be the last (or only) filter in the chain.
   * </pre>
   *
   * <code>repeated .envoy.config.listener.v3.Filter filters = 3;</code>
   */
  @java.lang.Override
  public io.envoyproxy.envoy.config.listener.v3.FilterOrBuilder getFiltersOrBuilder(
      int index) {
    return filters_.get(index);
  }

  public static final int USE_PROXY_PROTO_FIELD_NUMBER = 4;
  private com.google.protobuf.BoolValue useProxyProto_;
  /**
   * <pre>
   * Whether the listener should expect a PROXY protocol V1 header on new
   * connections. If this option is enabled, the listener will assume that that
   * remote address of the connection is the one specified in the header. Some
   * load balancers including the AWS ELB support this option. If the option is
   * absent or set to false, Envoy will use the physical peer address of the
   * connection as the remote address.
   * This field is deprecated. Add a
   * :ref:`PROXY protocol listener filter &lt;config_listener_filters_proxy_protocol&gt;`
   * explicitly instead.
   * </pre>
   *
   * <code>.google.protobuf.BoolValue use_proxy_proto = 4 [deprecated = true, (.envoy.annotations.deprecated_at_minor_version) = "3.0"];</code>
   * @deprecated envoy.config.listener.v3.FilterChain.use_proxy_proto is deprecated.
   *     See envoy/config/listener/v3/listener_components.proto;l=248
   * @return Whether the useProxyProto field is set.
   */
  @java.lang.Override
  @java.lang.Deprecated public boolean hasUseProxyProto() {
    return useProxyProto_ != null;
  }
  /**
   * <pre>
   * Whether the listener should expect a PROXY protocol V1 header on new
   * connections. If this option is enabled, the listener will assume that that
   * remote address of the connection is the one specified in the header. Some
   * load balancers including the AWS ELB support this option. If the option is
   * absent or set to false, Envoy will use the physical peer address of the
   * connection as the remote address.
   * This field is deprecated. Add a
   * :ref:`PROXY protocol listener filter &lt;config_listener_filters_proxy_protocol&gt;`
   * explicitly instead.
   * </pre>
   *
   * <code>.google.protobuf.BoolValue use_proxy_proto = 4 [deprecated = true, (.envoy.annotations.deprecated_at_minor_version) = "3.0"];</code>
   * @deprecated envoy.config.listener.v3.FilterChain.use_proxy_proto is deprecated.
   *     See envoy/config/listener/v3/listener_components.proto;l=248
   * @return The useProxyProto.
   */
  @java.lang.Override
  @java.lang.Deprecated public com.google.protobuf.BoolValue getUseProxyProto() {
    return useProxyProto_ == null ? com.google.protobuf.BoolValue.getDefaultInstance() : useProxyProto_;
  }
  /**
   * <pre>
   * Whether the listener should expect a PROXY protocol V1 header on new
   * connections. If this option is enabled, the listener will assume that that
   * remote address of the connection is the one specified in the header. Some
   * load balancers including the AWS ELB support this option. If the option is
   * absent or set to false, Envoy will use the physical peer address of the
   * connection as the remote address.
   * This field is deprecated. Add a
   * :ref:`PROXY protocol listener filter &lt;config_listener_filters_proxy_protocol&gt;`
   * explicitly instead.
   * </pre>
   *
   * <code>.google.protobuf.BoolValue use_proxy_proto = 4 [deprecated = true, (.envoy.annotations.deprecated_at_minor_version) = "3.0"];</code>
   */
  @java.lang.Override
  @java.lang.Deprecated public com.google.protobuf.BoolValueOrBuilder getUseProxyProtoOrBuilder() {
    return useProxyProto_ == null ? com.google.protobuf.BoolValue.getDefaultInstance() : useProxyProto_;
  }

  public static final int METADATA_FIELD_NUMBER = 5;
  private io.envoyproxy.envoy.config.core.v3.Metadata metadata_;
  /**
   * <pre>
   * [#not-implemented-hide:] filter chain metadata.
   * </pre>
   *
   * <code>.envoy.config.core.v3.Metadata metadata = 5;</code>
   * @return Whether the metadata field is set.
   */
  @java.lang.Override
  public boolean hasMetadata() {
    return metadata_ != null;
  }
  /**
   * <pre>
   * [#not-implemented-hide:] filter chain metadata.
   * </pre>
   *
   * <code>.envoy.config.core.v3.Metadata metadata = 5;</code>
   * @return The metadata.
   */
  @java.lang.Override
  public io.envoyproxy.envoy.config.core.v3.Metadata getMetadata() {
    return metadata_ == null ? io.envoyproxy.envoy.config.core.v3.Metadata.getDefaultInstance() : metadata_;
  }
  /**
   * <pre>
   * [#not-implemented-hide:] filter chain metadata.
   * </pre>
   *
   * <code>.envoy.config.core.v3.Metadata metadata = 5;</code>
   */
  @java.lang.Override
  public io.envoyproxy.envoy.config.core.v3.MetadataOrBuilder getMetadataOrBuilder() {
    return metadata_ == null ? io.envoyproxy.envoy.config.core.v3.Metadata.getDefaultInstance() : metadata_;
  }

  public static final int TRANSPORT_SOCKET_FIELD_NUMBER = 6;
  private io.envoyproxy.envoy.config.core.v3.TransportSocket transportSocket_;
  /**
   * <pre>
   * Optional custom transport socket implementation to use for downstream connections.
   * To setup TLS, set a transport socket with name ``envoy.transport_sockets.tls`` and
   * :ref:`DownstreamTlsContext &lt;envoy_v3_api_msg_extensions.transport_sockets.tls.v3.DownstreamTlsContext&gt;` in the ``typed_config``.
   * If no transport socket configuration is specified, new connections
   * will be set up with plaintext.
   * [#extension-category: envoy.transport_sockets.downstream]
   * </pre>
   *
   * <code>.envoy.config.core.v3.TransportSocket transport_socket = 6;</code>
   * @return Whether the transportSocket field is set.
   */
  @java.lang.Override
  public boolean hasTransportSocket() {
    return transportSocket_ != null;
  }
  /**
   * <pre>
   * Optional custom transport socket implementation to use for downstream connections.
   * To setup TLS, set a transport socket with name ``envoy.transport_sockets.tls`` and
   * :ref:`DownstreamTlsContext &lt;envoy_v3_api_msg_extensions.transport_sockets.tls.v3.DownstreamTlsContext&gt;` in the ``typed_config``.
   * If no transport socket configuration is specified, new connections
   * will be set up with plaintext.
   * [#extension-category: envoy.transport_sockets.downstream]
   * </pre>
   *
   * <code>.envoy.config.core.v3.TransportSocket transport_socket = 6;</code>
   * @return The transportSocket.
   */
  @java.lang.Override
  public io.envoyproxy.envoy.config.core.v3.TransportSocket getTransportSocket() {
    return transportSocket_ == null ? io.envoyproxy.envoy.config.core.v3.TransportSocket.getDefaultInstance() : transportSocket_;
  }
  /**
   * <pre>
   * Optional custom transport socket implementation to use for downstream connections.
   * To setup TLS, set a transport socket with name ``envoy.transport_sockets.tls`` and
   * :ref:`DownstreamTlsContext &lt;envoy_v3_api_msg_extensions.transport_sockets.tls.v3.DownstreamTlsContext&gt;` in the ``typed_config``.
   * If no transport socket configuration is specified, new connections
   * will be set up with plaintext.
   * [#extension-category: envoy.transport_sockets.downstream]
   * </pre>
   *
   * <code>.envoy.config.core.v3.TransportSocket transport_socket = 6;</code>
   */
  @java.lang.Override
  public io.envoyproxy.envoy.config.core.v3.TransportSocketOrBuilder getTransportSocketOrBuilder() {
    return transportSocket_ == null ? io.envoyproxy.envoy.config.core.v3.TransportSocket.getDefaultInstance() : transportSocket_;
  }

  public static final int TRANSPORT_SOCKET_CONNECT_TIMEOUT_FIELD_NUMBER = 9;
  private com.google.protobuf.Duration transportSocketConnectTimeout_;
  /**
   * <pre>
   * If present and nonzero, the amount of time to allow incoming connections to complete any
   * transport socket negotiations. If this expires before the transport reports connection
   * establishment, the connection is summarily closed.
   * </pre>
   *
   * <code>.google.protobuf.Duration transport_socket_connect_timeout = 9;</code>
   * @return Whether the transportSocketConnectTimeout field is set.
   */
  @java.lang.Override
  public boolean hasTransportSocketConnectTimeout() {
    return transportSocketConnectTimeout_ != null;
  }
  /**
   * <pre>
   * If present and nonzero, the amount of time to allow incoming connections to complete any
   * transport socket negotiations. If this expires before the transport reports connection
   * establishment, the connection is summarily closed.
   * </pre>
   *
   * <code>.google.protobuf.Duration transport_socket_connect_timeout = 9;</code>
   * @return The transportSocketConnectTimeout.
   */
  @java.lang.Override
  public com.google.protobuf.Duration getTransportSocketConnectTimeout() {
    return transportSocketConnectTimeout_ == null ? com.google.protobuf.Duration.getDefaultInstance() : transportSocketConnectTimeout_;
  }
  /**
   * <pre>
   * If present and nonzero, the amount of time to allow incoming connections to complete any
   * transport socket negotiations. If this expires before the transport reports connection
   * establishment, the connection is summarily closed.
   * </pre>
   *
   * <code>.google.protobuf.Duration transport_socket_connect_timeout = 9;</code>
   */
  @java.lang.Override
  public com.google.protobuf.DurationOrBuilder getTransportSocketConnectTimeoutOrBuilder() {
    return transportSocketConnectTimeout_ == null ? com.google.protobuf.Duration.getDefaultInstance() : transportSocketConnectTimeout_;
  }

  public static final int NAME_FIELD_NUMBER = 7;
  @SuppressWarnings("serial")
  private volatile java.lang.Object name_ = "";
  /**
   * <pre>
   * The unique name (or empty) by which this filter chain is known.
   * Note: :ref:`filter_chain_matcher
   * &lt;envoy_v3_api_field_config.listener.v3.Listener.filter_chain_matcher&gt;`
   * requires that filter chains are uniquely named within a listener.
   * </pre>
   *
   * <code>string name = 7;</code>
   * @return The name.
   */
  @java.lang.Override
  public java.lang.String getName() {
    java.lang.Object ref = name_;
    if (ref instanceof java.lang.String) {
      return (java.lang.String) ref;
    } else {
      com.google.protobuf.ByteString bs = 
          (com.google.protobuf.ByteString) ref;
      java.lang.String s = bs.toStringUtf8();
      name_ = s;
      return s;
    }
  }
  /**
   * <pre>
   * The unique name (or empty) by which this filter chain is known.
   * Note: :ref:`filter_chain_matcher
   * &lt;envoy_v3_api_field_config.listener.v3.Listener.filter_chain_matcher&gt;`
   * requires that filter chains are uniquely named within a listener.
   * </pre>
   *
   * <code>string name = 7;</code>
   * @return The bytes for name.
   */
  @java.lang.Override
  public com.google.protobuf.ByteString
      getNameBytes() {
    java.lang.Object ref = name_;
    if (ref instanceof java.lang.String) {
      com.google.protobuf.ByteString b = 
          com.google.protobuf.ByteString.copyFromUtf8(
              (java.lang.String) ref);
      name_ = b;
      return b;
    } else {
      return (com.google.protobuf.ByteString) ref;
    }
  }

  public static final int ON_DEMAND_CONFIGURATION_FIELD_NUMBER = 8;
  private io.envoyproxy.envoy.config.listener.v3.FilterChain.OnDemandConfiguration onDemandConfiguration_;
  /**
   * <pre>
   * [#not-implemented-hide:] The configuration to specify whether the filter chain will be built on-demand.
   * If this field is not empty, the filter chain will be built on-demand.
   * Otherwise, the filter chain will be built normally and block listener warming.
   * </pre>
   *
   * <code>.envoy.config.listener.v3.FilterChain.OnDemandConfiguration on_demand_configuration = 8;</code>
   * @return Whether the onDemandConfiguration field is set.
   */
  @java.lang.Override
  public boolean hasOnDemandConfiguration() {
    return onDemandConfiguration_ != null;
  }
  /**
   * <pre>
   * [#not-implemented-hide:] The configuration to specify whether the filter chain will be built on-demand.
   * If this field is not empty, the filter chain will be built on-demand.
   * Otherwise, the filter chain will be built normally and block listener warming.
   * </pre>
   *
   * <code>.envoy.config.listener.v3.FilterChain.OnDemandConfiguration on_demand_configuration = 8;</code>
   * @return The onDemandConfiguration.
   */
  @java.lang.Override
  public io.envoyproxy.envoy.config.listener.v3.FilterChain.OnDemandConfiguration getOnDemandConfiguration() {
    return onDemandConfiguration_ == null ? io.envoyproxy.envoy.config.listener.v3.FilterChain.OnDemandConfiguration.getDefaultInstance() : onDemandConfiguration_;
  }
  /**
   * <pre>
   * [#not-implemented-hide:] The configuration to specify whether the filter chain will be built on-demand.
   * If this field is not empty, the filter chain will be built on-demand.
   * Otherwise, the filter chain will be built normally and block listener warming.
   * </pre>
   *
   * <code>.envoy.config.listener.v3.FilterChain.OnDemandConfiguration on_demand_configuration = 8;</code>
   */
  @java.lang.Override
  public io.envoyproxy.envoy.config.listener.v3.FilterChain.OnDemandConfigurationOrBuilder getOnDemandConfigurationOrBuilder() {
    return onDemandConfiguration_ == null ? io.envoyproxy.envoy.config.listener.v3.FilterChain.OnDemandConfiguration.getDefaultInstance() : onDemandConfiguration_;
  }

  private byte memoizedIsInitialized = -1;
  @java.lang.Override
  public final boolean isInitialized() {
    byte isInitialized = memoizedIsInitialized;
    if (isInitialized == 1) return true;
    if (isInitialized == 0) return false;

    memoizedIsInitialized = 1;
    return true;
  }

  @java.lang.Override
  public void writeTo(com.google.protobuf.CodedOutputStream output)
                      throws java.io.IOException {
    if (filterChainMatch_ != null) {
      output.writeMessage(1, getFilterChainMatch());
    }
    for (int i = 0; i < filters_.size(); i++) {
      output.writeMessage(3, filters_.get(i));
    }
    if (useProxyProto_ != null) {
      output.writeMessage(4, getUseProxyProto());
    }
    if (metadata_ != null) {
      output.writeMessage(5, getMetadata());
    }
    if (transportSocket_ != null) {
      output.writeMessage(6, getTransportSocket());
    }
    if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(name_)) {
      com.google.protobuf.GeneratedMessageV3.writeString(output, 7, name_);
    }
    if (onDemandConfiguration_ != null) {
      output.writeMessage(8, getOnDemandConfiguration());
    }
    if (transportSocketConnectTimeout_ != null) {
      output.writeMessage(9, getTransportSocketConnectTimeout());
    }
    getUnknownFields().writeTo(output);
  }

  @java.lang.Override
  public int getSerializedSize() {
    int size = memoizedSize;
    if (size != -1) return size;

    size = 0;
    if (filterChainMatch_ != null) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(1, getFilterChainMatch());
    }
    for (int i = 0; i < filters_.size(); i++) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(3, filters_.get(i));
    }
    if (useProxyProto_ != null) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(4, getUseProxyProto());
    }
    if (metadata_ != null) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(5, getMetadata());
    }
    if (transportSocket_ != null) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(6, getTransportSocket());
    }
    if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(name_)) {
      size += com.google.protobuf.GeneratedMessageV3.computeStringSize(7, name_);
    }
    if (onDemandConfiguration_ != null) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(8, getOnDemandConfiguration());
    }
    if (transportSocketConnectTimeout_ != null) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(9, getTransportSocketConnectTimeout());
    }
    size += getUnknownFields().getSerializedSize();
    memoizedSize = size;
    return size;
  }

  @java.lang.Override
  public boolean equals(final java.lang.Object obj) {
    if (obj == this) {
     return true;
    }
    if (!(obj instanceof io.envoyproxy.envoy.config.listener.v3.FilterChain)) {
      return super.equals(obj);
    }
    io.envoyproxy.envoy.config.listener.v3.FilterChain other = (io.envoyproxy.envoy.config.listener.v3.FilterChain) obj;

    if (hasFilterChainMatch() != other.hasFilterChainMatch()) return false;
    if (hasFilterChainMatch()) {
      if (!getFilterChainMatch()
          .equals(other.getFilterChainMatch())) return false;
    }
    if (!getFiltersList()
        .equals(other.getFiltersList())) return false;
    if (hasUseProxyProto() != other.hasUseProxyProto()) return false;
    if (hasUseProxyProto()) {
      if (!getUseProxyProto()
          .equals(other.getUseProxyProto())) return false;
    }
    if (hasMetadata() != other.hasMetadata()) return false;
    if (hasMetadata()) {
      if (!getMetadata()
          .equals(other.getMetadata())) return false;
    }
    if (hasTransportSocket() != other.hasTransportSocket()) return false;
    if (hasTransportSocket()) {
      if (!getTransportSocket()
          .equals(other.getTransportSocket())) return false;
    }
    if (hasTransportSocketConnectTimeout() != other.hasTransportSocketConnectTimeout()) return false;
    if (hasTransportSocketConnectTimeout()) {
      if (!getTransportSocketConnectTimeout()
          .equals(other.getTransportSocketConnectTimeout())) return false;
    }
    if (!getName()
        .equals(other.getName())) return false;
    if (hasOnDemandConfiguration() != other.hasOnDemandConfiguration()) return false;
    if (hasOnDemandConfiguration()) {
      if (!getOnDemandConfiguration()
          .equals(other.getOnDemandConfiguration())) return false;
    }
    if (!getUnknownFields().equals(other.getUnknownFields())) return false;
    return true;
  }

  @java.lang.Override
  public int hashCode() {
    if (memoizedHashCode != 0) {
      return memoizedHashCode;
    }
    int hash = 41;
    hash = (19 * hash) + getDescriptor().hashCode();
    if (hasFilterChainMatch()) {
      hash = (37 * hash) + FILTER_CHAIN_MATCH_FIELD_NUMBER;
      hash = (53 * hash) + getFilterChainMatch().hashCode();
    }
    if (getFiltersCount() > 0) {
      hash = (37 * hash) + FILTERS_FIELD_NUMBER;
      hash = (53 * hash) + getFiltersList().hashCode();
    }
    if (hasUseProxyProto()) {
      hash = (37 * hash) + USE_PROXY_PROTO_FIELD_NUMBER;
      hash = (53 * hash) + getUseProxyProto().hashCode();
    }
    if (hasMetadata()) {
      hash = (37 * hash) + METADATA_FIELD_NUMBER;
      hash = (53 * hash) + getMetadata().hashCode();
    }
    if (hasTransportSocket()) {
      hash = (37 * hash) + TRANSPORT_SOCKET_FIELD_NUMBER;
      hash = (53 * hash) + getTransportSocket().hashCode();
    }
    if (hasTransportSocketConnectTimeout()) {
      hash = (37 * hash) + TRANSPORT_SOCKET_CONNECT_TIMEOUT_FIELD_NUMBER;
      hash = (53 * hash) + getTransportSocketConnectTimeout().hashCode();
    }
    hash = (37 * hash) + NAME_FIELD_NUMBER;
    hash = (53 * hash) + getName().hashCode();
    if (hasOnDemandConfiguration()) {
      hash = (37 * hash) + ON_DEMAND_CONFIGURATION_FIELD_NUMBER;
      hash = (53 * hash) + getOnDemandConfiguration().hashCode();
    }
    hash = (29 * hash) + getUnknownFields().hashCode();
    memoizedHashCode = hash;
    return hash;
  }

  public static io.envoyproxy.envoy.config.listener.v3.FilterChain parseFrom(
      java.nio.ByteBuffer data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static io.envoyproxy.envoy.config.listener.v3.FilterChain parseFrom(
      java.nio.ByteBuffer data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static io.envoyproxy.envoy.config.listener.v3.FilterChain parseFrom(
      com.google.protobuf.ByteString data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static io.envoyproxy.envoy.config.listener.v3.FilterChain parseFrom(
      com.google.protobuf.ByteString data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static io.envoyproxy.envoy.config.listener.v3.FilterChain parseFrom(byte[] data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static io.envoyproxy.envoy.config.listener.v3.FilterChain parseFrom(
      byte[] data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static io.envoyproxy.envoy.config.listener.v3.FilterChain parseFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input);
  }
  public static io.envoyproxy.envoy.config.listener.v3.FilterChain parseFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input, extensionRegistry);
  }
  public static io.envoyproxy.envoy.config.listener.v3.FilterChain parseDelimitedFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseDelimitedWithIOException(PARSER, input);
  }
  public static io.envoyproxy.envoy.config.listener.v3.FilterChain parseDelimitedFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
  }
  public static io.envoyproxy.envoy.config.listener.v3.FilterChain parseFrom(
      com.google.protobuf.CodedInputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input);
  }
  public static io.envoyproxy.envoy.config.listener.v3.FilterChain parseFrom(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input, extensionRegistry);
  }

  @java.lang.Override
  public Builder newBuilderForType() { return newBuilder(); }
  public static Builder newBuilder() {
    return DEFAULT_INSTANCE.toBuilder();
  }
  public static Builder newBuilder(io.envoyproxy.envoy.config.listener.v3.FilterChain prototype) {
    return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
  }
  @java.lang.Override
  public Builder toBuilder() {
    return this == DEFAULT_INSTANCE
        ? new Builder() : new Builder().mergeFrom(this);
  }

  @java.lang.Override
  protected Builder newBuilderForType(
      com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
    Builder builder = new Builder(parent);
    return builder;
  }
  /**
   * <pre>
   * A filter chain wraps a set of match criteria, an option TLS context, a set of filters, and
   * various other parameters.
   * [#next-free-field: 10]
   * </pre>
   *
   * Protobuf type {@code envoy.config.listener.v3.FilterChain}
   */
  public static final class Builder extends
      com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
      // @@protoc_insertion_point(builder_implements:envoy.config.listener.v3.FilterChain)
      io.envoyproxy.envoy.config.listener.v3.FilterChainOrBuilder {
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return io.envoyproxy.envoy.config.listener.v3.ListenerComponentsProto.internal_static_envoy_config_listener_v3_FilterChain_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return io.envoyproxy.envoy.config.listener.v3.ListenerComponentsProto.internal_static_envoy_config_listener_v3_FilterChain_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              io.envoyproxy.envoy.config.listener.v3.FilterChain.class, io.envoyproxy.envoy.config.listener.v3.FilterChain.Builder.class);
    }

    // Construct using io.envoyproxy.envoy.config.listener.v3.FilterChain.newBuilder()
    private Builder() {

    }

    private Builder(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      super(parent);

    }
    @java.lang.Override
    public Builder clear() {
      super.clear();
      bitField0_ = 0;
      filterChainMatch_ = null;
      if (filterChainMatchBuilder_ != null) {
        filterChainMatchBuilder_.dispose();
        filterChainMatchBuilder_ = null;
      }
      if (filtersBuilder_ == null) {
        filters_ = java.util.Collections.emptyList();
      } else {
        filters_ = null;
        filtersBuilder_.clear();
      }
      bitField0_ = (bitField0_ & ~0x00000002);
      useProxyProto_ = null;
      if (useProxyProtoBuilder_ != null) {
        useProxyProtoBuilder_.dispose();
        useProxyProtoBuilder_ = null;
      }
      metadata_ = null;
      if (metadataBuilder_ != null) {
        metadataBuilder_.dispose();
        metadataBuilder_ = null;
      }
      transportSocket_ = null;
      if (transportSocketBuilder_ != null) {
        transportSocketBuilder_.dispose();
        transportSocketBuilder_ = null;
      }
      transportSocketConnectTimeout_ = null;
      if (transportSocketConnectTimeoutBuilder_ != null) {
        transportSocketConnectTimeoutBuilder_.dispose();
        transportSocketConnectTimeoutBuilder_ = null;
      }
      name_ = "";
      onDemandConfiguration_ = null;
      if (onDemandConfigurationBuilder_ != null) {
        onDemandConfigurationBuilder_.dispose();
        onDemandConfigurationBuilder_ = null;
      }
      return this;
    }

    @java.lang.Override
    public com.google.protobuf.Descriptors.Descriptor
        getDescriptorForType() {
      return io.envoyproxy.envoy.config.listener.v3.ListenerComponentsProto.internal_static_envoy_config_listener_v3_FilterChain_descriptor;
    }

    @java.lang.Override
    public io.envoyproxy.envoy.config.listener.v3.FilterChain getDefaultInstanceForType() {
      return io.envoyproxy.envoy.config.listener.v3.FilterChain.getDefaultInstance();
    }

    @java.lang.Override
    public io.envoyproxy.envoy.config.listener.v3.FilterChain build() {
      io.envoyproxy.envoy.config.listener.v3.FilterChain result = buildPartial();
      if (!result.isInitialized()) {
        throw newUninitializedMessageException(result);
      }
      return result;
    }

    @java.lang.Override
    public io.envoyproxy.envoy.config.listener.v3.FilterChain buildPartial() {
      io.envoyproxy.envoy.config.listener.v3.FilterChain result = new io.envoyproxy.envoy.config.listener.v3.FilterChain(this);
      buildPartialRepeatedFields(result);
      if (bitField0_ != 0) { buildPartial0(result); }
      onBuilt();
      return result;
    }

    private void buildPartialRepeatedFields(io.envoyproxy.envoy.config.listener.v3.FilterChain result) {
      if (filtersBuilder_ == null) {
        if (((bitField0_ & 0x00000002) != 0)) {
          filters_ = java.util.Collections.unmodifiableList(filters_);
          bitField0_ = (bitField0_ & ~0x00000002);
        }
        result.filters_ = filters_;
      } else {
        result.filters_ = filtersBuilder_.build();
      }
    }

    private void buildPartial0(io.envoyproxy.envoy.config.listener.v3.FilterChain result) {
      int from_bitField0_ = bitField0_;
      if (((from_bitField0_ & 0x00000001) != 0)) {
        result.filterChainMatch_ = filterChainMatchBuilder_ == null
            ? filterChainMatch_
            : filterChainMatchBuilder_.build();
      }
      if (((from_bitField0_ & 0x00000004) != 0)) {
        result.useProxyProto_ = useProxyProtoBuilder_ == null
            ? useProxyProto_
            : useProxyProtoBuilder_.build();
      }
      if (((from_bitField0_ & 0x00000008) != 0)) {
        result.metadata_ = metadataBuilder_ == null
            ? metadata_
            : metadataBuilder_.build();
      }
      if (((from_bitField0_ & 0x00000010) != 0)) {
        result.transportSocket_ = transportSocketBuilder_ == null
            ? transportSocket_
            : transportSocketBuilder_.build();
      }
      if (((from_bitField0_ & 0x00000020) != 0)) {
        result.transportSocketConnectTimeout_ = transportSocketConnectTimeoutBuilder_ == null
            ? transportSocketConnectTimeout_
            : transportSocketConnectTimeoutBuilder_.build();
      }
      if (((from_bitField0_ & 0x00000040) != 0)) {
        result.name_ = name_;
      }
      if (((from_bitField0_ & 0x00000080) != 0)) {
        result.onDemandConfiguration_ = onDemandConfigurationBuilder_ == null
            ? onDemandConfiguration_
            : onDemandConfigurationBuilder_.build();
      }
    }

    @java.lang.Override
    public Builder clone() {
      return super.clone();
    }
    @java.lang.Override
    public Builder setField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        java.lang.Object value) {
      return super.setField(field, value);
    }
    @java.lang.Override
    public Builder clearField(
        com.google.protobuf.Descriptors.FieldDescriptor field) {
      return super.clearField(field);
    }
    @java.lang.Override
    public Builder clearOneof(
        com.google.protobuf.Descriptors.OneofDescriptor oneof) {
      return super.clearOneof(oneof);
    }
    @java.lang.Override
    public Builder setRepeatedField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        int index, java.lang.Object value) {
      return super.setRepeatedField(field, index, value);
    }
    @java.lang.Override
    public Builder addRepeatedField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        java.lang.Object value) {
      return super.addRepeatedField(field, value);
    }
    @java.lang.Override
    public Builder mergeFrom(com.google.protobuf.Message other) {
      if (other instanceof io.envoyproxy.envoy.config.listener.v3.FilterChain) {
        return mergeFrom((io.envoyproxy.envoy.config.listener.v3.FilterChain)other);
      } else {
        super.mergeFrom(other);
        return this;
      }
    }

    public Builder mergeFrom(io.envoyproxy.envoy.config.listener.v3.FilterChain other) {
      if (other == io.envoyproxy.envoy.config.listener.v3.FilterChain.getDefaultInstance()) return this;
      if (other.hasFilterChainMatch()) {
        mergeFilterChainMatch(other.getFilterChainMatch());
      }
      if (filtersBuilder_ == null) {
        if (!other.filters_.isEmpty()) {
          if (filters_.isEmpty()) {
            filters_ = other.filters_;
            bitField0_ = (bitField0_ & ~0x00000002);
          } else {
            ensureFiltersIsMutable();
            filters_.addAll(other.filters_);
          }
          onChanged();
        }
      } else {
        if (!other.filters_.isEmpty()) {
          if (filtersBuilder_.isEmpty()) {
            filtersBuilder_.dispose();
            filtersBuilder_ = null;
            filters_ = other.filters_;
            bitField0_ = (bitField0_ & ~0x00000002);
            filtersBuilder_ = 
              com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?
                 getFiltersFieldBuilder() : null;
          } else {
            filtersBuilder_.addAllMessages(other.filters_);
          }
        }
      }
      if (other.hasUseProxyProto()) {
        mergeUseProxyProto(other.getUseProxyProto());
      }
      if (other.hasMetadata()) {
        mergeMetadata(other.getMetadata());
      }
      if (other.hasTransportSocket()) {
        mergeTransportSocket(other.getTransportSocket());
      }
      if (other.hasTransportSocketConnectTimeout()) {
        mergeTransportSocketConnectTimeout(other.getTransportSocketConnectTimeout());
      }
      if (!other.getName().isEmpty()) {
        name_ = other.name_;
        bitField0_ |= 0x00000040;
        onChanged();
      }
      if (other.hasOnDemandConfiguration()) {
        mergeOnDemandConfiguration(other.getOnDemandConfiguration());
      }
      this.mergeUnknownFields(other.getUnknownFields());
      onChanged();
      return this;
    }

    @java.lang.Override
    public final boolean isInitialized() {
      return true;
    }

    @java.lang.Override
    public Builder mergeFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 10: {
              input.readMessage(
                  getFilterChainMatchFieldBuilder().getBuilder(),
                  extensionRegistry);
              bitField0_ |= 0x00000001;
              break;
            } // case 10
            case 26: {
              io.envoyproxy.envoy.config.listener.v3.Filter m =
                  input.readMessage(
                      io.envoyproxy.envoy.config.listener.v3.Filter.parser(),
                      extensionRegistry);
              if (filtersBuilder_ == null) {
                ensureFiltersIsMutable();
                filters_.add(m);
              } else {
                filtersBuilder_.addMessage(m);
              }
              break;
            } // case 26
            case 34: {
              input.readMessage(
                  getUseProxyProtoFieldBuilder().getBuilder(),
                  extensionRegistry);
              bitField0_ |= 0x00000004;
              break;
            } // case 34
            case 42: {
              input.readMessage(
                  getMetadataFieldBuilder().getBuilder(),
                  extensionRegistry);
              bitField0_ |= 0x00000008;
              break;
            } // case 42
            case 50: {
              input.readMessage(
                  getTransportSocketFieldBuilder().getBuilder(),
                  extensionRegistry);
              bitField0_ |= 0x00000010;
              break;
            } // case 50
            case 58: {
              name_ = input.readStringRequireUtf8();
              bitField0_ |= 0x00000040;
              break;
            } // case 58
            case 66: {
              input.readMessage(
                  getOnDemandConfigurationFieldBuilder().getBuilder(),
                  extensionRegistry);
              bitField0_ |= 0x00000080;
              break;
            } // case 66
            case 74: {
              input.readMessage(
                  getTransportSocketConnectTimeoutFieldBuilder().getBuilder(),
                  extensionRegistry);
              bitField0_ |= 0x00000020;
              break;
            } // case 74
            default: {
              if (!super.parseUnknownField(input, extensionRegistry, tag)) {
                done = true; // was an endgroup tag
              }
              break;
            } // default:
          } // switch (tag)
        } // while (!done)
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.unwrapIOException();
      } finally {
        onChanged();
      } // finally
      return this;
    }
    private int bitField0_;

    private io.envoyproxy.envoy.config.listener.v3.FilterChainMatch filterChainMatch_;
    private com.google.protobuf.SingleFieldBuilderV3<
        io.envoyproxy.envoy.config.listener.v3.FilterChainMatch, io.envoyproxy.envoy.config.listener.v3.FilterChainMatch.Builder, io.envoyproxy.envoy.config.listener.v3.FilterChainMatchOrBuilder> filterChainMatchBuilder_;
    /**
     * <pre>
     * The criteria to use when matching a connection to this filter chain.
     * </pre>
     *
     * <code>.envoy.config.listener.v3.FilterChainMatch filter_chain_match = 1;</code>
     * @return Whether the filterChainMatch field is set.
     */
    public boolean hasFilterChainMatch() {
      return ((bitField0_ & 0x00000001) != 0);
    }
    /**
     * <pre>
     * The criteria to use when matching a connection to this filter chain.
     * </pre>
     *
     * <code>.envoy.config.listener.v3.FilterChainMatch filter_chain_match = 1;</code>
     * @return The filterChainMatch.
     */
    public io.envoyproxy.envoy.config.listener.v3.FilterChainMatch getFilterChainMatch() {
      if (filterChainMatchBuilder_ == null) {
        return filterChainMatch_ == null ? io.envoyproxy.envoy.config.listener.v3.FilterChainMatch.getDefaultInstance() : filterChainMatch_;
      } else {
        return filterChainMatchBuilder_.getMessage();
      }
    }
    /**
     * <pre>
     * The criteria to use when matching a connection to this filter chain.
     * </pre>
     *
     * <code>.envoy.config.listener.v3.FilterChainMatch filter_chain_match = 1;</code>
     */
    public Builder setFilterChainMatch(io.envoyproxy.envoy.config.listener.v3.FilterChainMatch value) {
      if (filterChainMatchBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        filterChainMatch_ = value;
      } else {
        filterChainMatchBuilder_.setMessage(value);
      }
      bitField0_ |= 0x00000001;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * The criteria to use when matching a connection to this filter chain.
     * </pre>
     *
     * <code>.envoy.config.listener.v3.FilterChainMatch filter_chain_match = 1;</code>
     */
    public Builder setFilterChainMatch(
        io.envoyproxy.envoy.config.listener.v3.FilterChainMatch.Builder builderForValue) {
      if (filterChainMatchBuilder_ == null) {
        filterChainMatch_ = builderForValue.build();
      } else {
        filterChainMatchBuilder_.setMessage(builderForValue.build());
      }
      bitField0_ |= 0x00000001;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * The criteria to use when matching a connection to this filter chain.
     * </pre>
     *
     * <code>.envoy.config.listener.v3.FilterChainMatch filter_chain_match = 1;</code>
     */
    public Builder mergeFilterChainMatch(io.envoyproxy.envoy.config.listener.v3.FilterChainMatch value) {
      if (filterChainMatchBuilder_ == null) {
        if (((bitField0_ & 0x00000001) != 0) &&
          filterChainMatch_ != null &&
          filterChainMatch_ != io.envoyproxy.envoy.config.listener.v3.FilterChainMatch.getDefaultInstance()) {
          getFilterChainMatchBuilder().mergeFrom(value);
        } else {
          filterChainMatch_ = value;
        }
      } else {
        filterChainMatchBuilder_.mergeFrom(value);
      }
      bitField0_ |= 0x00000001;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * The criteria to use when matching a connection to this filter chain.
     * </pre>
     *
     * <code>.envoy.config.listener.v3.FilterChainMatch filter_chain_match = 1;</code>
     */
    public Builder clearFilterChainMatch() {
      bitField0_ = (bitField0_ & ~0x00000001);
      filterChainMatch_ = null;
      if (filterChainMatchBuilder_ != null) {
        filterChainMatchBuilder_.dispose();
        filterChainMatchBuilder_ = null;
      }
      onChanged();
      return this;
    }
    /**
     * <pre>
     * The criteria to use when matching a connection to this filter chain.
     * </pre>
     *
     * <code>.envoy.config.listener.v3.FilterChainMatch filter_chain_match = 1;</code>
     */
    public io.envoyproxy.envoy.config.listener.v3.FilterChainMatch.Builder getFilterChainMatchBuilder() {
      bitField0_ |= 0x00000001;
      onChanged();
      return getFilterChainMatchFieldBuilder().getBuilder();
    }
    /**
     * <pre>
     * The criteria to use when matching a connection to this filter chain.
     * </pre>
     *
     * <code>.envoy.config.listener.v3.FilterChainMatch filter_chain_match = 1;</code>
     */
    public io.envoyproxy.envoy.config.listener.v3.FilterChainMatchOrBuilder getFilterChainMatchOrBuilder() {
      if (filterChainMatchBuilder_ != null) {
        return filterChainMatchBuilder_.getMessageOrBuilder();
      } else {
        return filterChainMatch_ == null ?
            io.envoyproxy.envoy.config.listener.v3.FilterChainMatch.getDefaultInstance() : filterChainMatch_;
      }
    }
    /**
     * <pre>
     * The criteria to use when matching a connection to this filter chain.
     * </pre>
     *
     * <code>.envoy.config.listener.v3.FilterChainMatch filter_chain_match = 1;</code>
     */
    private com.google.protobuf.SingleFieldBuilderV3<
        io.envoyproxy.envoy.config.listener.v3.FilterChainMatch, io.envoyproxy.envoy.config.listener.v3.FilterChainMatch.Builder, io.envoyproxy.envoy.config.listener.v3.FilterChainMatchOrBuilder> 
        getFilterChainMatchFieldBuilder() {
      if (filterChainMatchBuilder_ == null) {
        filterChainMatchBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
            io.envoyproxy.envoy.config.listener.v3.FilterChainMatch, io.envoyproxy.envoy.config.listener.v3.FilterChainMatch.Builder, io.envoyproxy.envoy.config.listener.v3.FilterChainMatchOrBuilder>(
                getFilterChainMatch(),
                getParentForChildren(),
                isClean());
        filterChainMatch_ = null;
      }
      return filterChainMatchBuilder_;
    }

    private java.util.List<io.envoyproxy.envoy.config.listener.v3.Filter> filters_ =
      java.util.Collections.emptyList();
    private void ensureFiltersIsMutable() {
      if (!((bitField0_ & 0x00000002) != 0)) {
        filters_ = new java.util.ArrayList<io.envoyproxy.envoy.config.listener.v3.Filter>(filters_);
        bitField0_ |= 0x00000002;
       }
    }

    private com.google.protobuf.RepeatedFieldBuilderV3<
        io.envoyproxy.envoy.config.listener.v3.Filter, io.envoyproxy.envoy.config.listener.v3.Filter.Builder, io.envoyproxy.envoy.config.listener.v3.FilterOrBuilder> filtersBuilder_;

    /**
     * <pre>
     * A list of individual network filters that make up the filter chain for
     * connections established with the listener. Order matters as the filters are
     * processed sequentially as connection events happen. Note: If the filter
     * list is empty, the connection will close by default.
     * For QUIC listeners, network filters other than HTTP Connection Manager (HCM)
     * can be created, but due to differences in the connection implementation compared
     * to TCP, the onData() method will never be called. Therefore, network filters
     * for QUIC listeners should only expect to do work at the start of a new connection
     * (i.e. in onNewConnection()). HCM must be the last (or only) filter in the chain.
     * </pre>
     *
     * <code>repeated .envoy.config.listener.v3.Filter filters = 3;</code>
     */
    public java.util.List<io.envoyproxy.envoy.config.listener.v3.Filter> getFiltersList() {
      if (filtersBuilder_ == null) {
        return java.util.Collections.unmodifiableList(filters_);
      } else {
        return filtersBuilder_.getMessageList();
      }
    }
    /**
     * <pre>
     * A list of individual network filters that make up the filter chain for
     * connections established with the listener. Order matters as the filters are
     * processed sequentially as connection events happen. Note: If the filter
     * list is empty, the connection will close by default.
     * For QUIC listeners, network filters other than HTTP Connection Manager (HCM)
     * can be created, but due to differences in the connection implementation compared
     * to TCP, the onData() method will never be called. Therefore, network filters
     * for QUIC listeners should only expect to do work at the start of a new connection
     * (i.e. in onNewConnection()). HCM must be the last (or only) filter in the chain.
     * </pre>
     *
     * <code>repeated .envoy.config.listener.v3.Filter filters = 3;</code>
     */
    public int getFiltersCount() {
      if (filtersBuilder_ == null) {
        return filters_.size();
      } else {
        return filtersBuilder_.getCount();
      }
    }
    /**
     * <pre>
     * A list of individual network filters that make up the filter chain for
     * connections established with the listener. Order matters as the filters are
     * processed sequentially as connection events happen. Note: If the filter
     * list is empty, the connection will close by default.
     * For QUIC listeners, network filters other than HTTP Connection Manager (HCM)
     * can be created, but due to differences in the connection implementation compared
     * to TCP, the onData() method will never be called. Therefore, network filters
     * for QUIC listeners should only expect to do work at the start of a new connection
     * (i.e. in onNewConnection()). HCM must be the last (or only) filter in the chain.
     * </pre>
     *
     * <code>repeated .envoy.config.listener.v3.Filter filters = 3;</code>
     */
    public io.envoyproxy.envoy.config.listener.v3.Filter getFilters(int index) {
      if (filtersBuilder_ == null) {
        return filters_.get(index);
      } else {
        return filtersBuilder_.getMessage(index);
      }
    }
    /**
     * <pre>
     * A list of individual network filters that make up the filter chain for
     * connections established with the listener. Order matters as the filters are
     * processed sequentially as connection events happen. Note: If the filter
     * list is empty, the connection will close by default.
     * For QUIC listeners, network filters other than HTTP Connection Manager (HCM)
     * can be created, but due to differences in the connection implementation compared
     * to TCP, the onData() method will never be called. Therefore, network filters
     * for QUIC listeners should only expect to do work at the start of a new connection
     * (i.e. in onNewConnection()). HCM must be the last (or only) filter in the chain.
     * </pre>
     *
     * <code>repeated .envoy.config.listener.v3.Filter filters = 3;</code>
     */
    public Builder setFilters(
        int index, io.envoyproxy.envoy.config.listener.v3.Filter value) {
      if (filtersBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureFiltersIsMutable();
        filters_.set(index, value);
        onChanged();
      } else {
        filtersBuilder_.setMessage(index, value);
      }
      return this;
    }
    /**
     * <pre>
     * A list of individual network filters that make up the filter chain for
     * connections established with the listener. Order matters as the filters are
     * processed sequentially as connection events happen. Note: If the filter
     * list is empty, the connection will close by default.
     * For QUIC listeners, network filters other than HTTP Connection Manager (HCM)
     * can be created, but due to differences in the connection implementation compared
     * to TCP, the onData() method will never be called. Therefore, network filters
     * for QUIC listeners should only expect to do work at the start of a new connection
     * (i.e. in onNewConnection()). HCM must be the last (or only) filter in the chain.
     * </pre>
     *
     * <code>repeated .envoy.config.listener.v3.Filter filters = 3;</code>
     */
    public Builder setFilters(
        int index, io.envoyproxy.envoy.config.listener.v3.Filter.Builder builderForValue) {
      if (filtersBuilder_ == null) {
        ensureFiltersIsMutable();
        filters_.set(index, builderForValue.build());
        onChanged();
      } else {
        filtersBuilder_.setMessage(index, builderForValue.build());
      }
      return this;
    }
    /**
     * <pre>
     * A list of individual network filters that make up the filter chain for
     * connections established with the listener. Order matters as the filters are
     * processed sequentially as connection events happen. Note: If the filter
     * list is empty, the connection will close by default.
     * For QUIC listeners, network filters other than HTTP Connection Manager (HCM)
     * can be created, but due to differences in the connection implementation compared
     * to TCP, the onData() method will never be called. Therefore, network filters
     * for QUIC listeners should only expect to do work at the start of a new connection
     * (i.e. in onNewConnection()). HCM must be the last (or only) filter in the chain.
     * </pre>
     *
     * <code>repeated .envoy.config.listener.v3.Filter filters = 3;</code>
     */
    public Builder addFilters(io.envoyproxy.envoy.config.listener.v3.Filter value) {
      if (filtersBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureFiltersIsMutable();
        filters_.add(value);
        onChanged();
      } else {
        filtersBuilder_.addMessage(value);
      }
      return this;
    }
    /**
     * <pre>
     * A list of individual network filters that make up the filter chain for
     * connections established with the listener. Order matters as the filters are
     * processed sequentially as connection events happen. Note: If the filter
     * list is empty, the connection will close by default.
     * For QUIC listeners, network filters other than HTTP Connection Manager (HCM)
     * can be created, but due to differences in the connection implementation compared
     * to TCP, the onData() method will never be called. Therefore, network filters
     * for QUIC listeners should only expect to do work at the start of a new connection
     * (i.e. in onNewConnection()). HCM must be the last (or only) filter in the chain.
     * </pre>
     *
     * <code>repeated .envoy.config.listener.v3.Filter filters = 3;</code>
     */
    public Builder addFilters(
        int index, io.envoyproxy.envoy.config.listener.v3.Filter value) {
      if (filtersBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureFiltersIsMutable();
        filters_.add(index, value);
        onChanged();
      } else {
        filtersBuilder_.addMessage(index, value);
      }
      return this;
    }
    /**
     * <pre>
     * A list of individual network filters that make up the filter chain for
     * connections established with the listener. Order matters as the filters are
     * processed sequentially as connection events happen. Note: If the filter
     * list is empty, the connection will close by default.
     * For QUIC listeners, network filters other than HTTP Connection Manager (HCM)
     * can be created, but due to differences in the connection implementation compared
     * to TCP, the onData() method will never be called. Therefore, network filters
     * for QUIC listeners should only expect to do work at the start of a new connection
     * (i.e. in onNewConnection()). HCM must be the last (or only) filter in the chain.
     * </pre>
     *
     * <code>repeated .envoy.config.listener.v3.Filter filters = 3;</code>
     */
    public Builder addFilters(
        io.envoyproxy.envoy.config.listener.v3.Filter.Builder builderForValue) {
      if (filtersBuilder_ == null) {
        ensureFiltersIsMutable();
        filters_.add(builderForValue.build());
        onChanged();
      } else {
        filtersBuilder_.addMessage(builderForValue.build());
      }
      return this;
    }
    /**
     * <pre>
     * A list of individual network filters that make up the filter chain for
     * connections established with the listener. Order matters as the filters are
     * processed sequentially as connection events happen. Note: If the filter
     * list is empty, the connection will close by default.
     * For QUIC listeners, network filters other than HTTP Connection Manager (HCM)
     * can be created, but due to differences in the connection implementation compared
     * to TCP, the onData() method will never be called. Therefore, network filters
     * for QUIC listeners should only expect to do work at the start of a new connection
     * (i.e. in onNewConnection()). HCM must be the last (or only) filter in the chain.
     * </pre>
     *
     * <code>repeated .envoy.config.listener.v3.Filter filters = 3;</code>
     */
    public Builder addFilters(
        int index, io.envoyproxy.envoy.config.listener.v3.Filter.Builder builderForValue) {
      if (filtersBuilder_ == null) {
        ensureFiltersIsMutable();
        filters_.add(index, builderForValue.build());
        onChanged();
      } else {
        filtersBuilder_.addMessage(index, builderForValue.build());
      }
      return this;
    }
    /**
     * <pre>
     * A list of individual network filters that make up the filter chain for
     * connections established with the listener. Order matters as the filters are
     * processed sequentially as connection events happen. Note: If the filter
     * list is empty, the connection will close by default.
     * For QUIC listeners, network filters other than HTTP Connection Manager (HCM)
     * can be created, but due to differences in the connection implementation compared
     * to TCP, the onData() method will never be called. Therefore, network filters
     * for QUIC listeners should only expect to do work at the start of a new connection
     * (i.e. in onNewConnection()). HCM must be the last (or only) filter in the chain.
     * </pre>
     *
     * <code>repeated .envoy.config.listener.v3.Filter filters = 3;</code>
     */
    public Builder addAllFilters(
        java.lang.Iterable<? extends io.envoyproxy.envoy.config.listener.v3.Filter> values) {
      if (filtersBuilder_ == null) {
        ensureFiltersIsMutable();
        com.google.protobuf.AbstractMessageLite.Builder.addAll(
            values, filters_);
        onChanged();
      } else {
        filtersBuilder_.addAllMessages(values);
      }
      return this;
    }
    /**
     * <pre>
     * A list of individual network filters that make up the filter chain for
     * connections established with the listener. Order matters as the filters are
     * processed sequentially as connection events happen. Note: If the filter
     * list is empty, the connection will close by default.
     * For QUIC listeners, network filters other than HTTP Connection Manager (HCM)
     * can be created, but due to differences in the connection implementation compared
     * to TCP, the onData() method will never be called. Therefore, network filters
     * for QUIC listeners should only expect to do work at the start of a new connection
     * (i.e. in onNewConnection()). HCM must be the last (or only) filter in the chain.
     * </pre>
     *
     * <code>repeated .envoy.config.listener.v3.Filter filters = 3;</code>
     */
    public Builder clearFilters() {
      if (filtersBuilder_ == null) {
        filters_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000002);
        onChanged();
      } else {
        filtersBuilder_.clear();
      }
      return this;
    }
    /**
     * <pre>
     * A list of individual network filters that make up the filter chain for
     * connections established with the listener. Order matters as the filters are
     * processed sequentially as connection events happen. Note: If the filter
     * list is empty, the connection will close by default.
     * For QUIC listeners, network filters other than HTTP Connection Manager (HCM)
     * can be created, but due to differences in the connection implementation compared
     * to TCP, the onData() method will never be called. Therefore, network filters
     * for QUIC listeners should only expect to do work at the start of a new connection
     * (i.e. in onNewConnection()). HCM must be the last (or only) filter in the chain.
     * </pre>
     *
     * <code>repeated .envoy.config.listener.v3.Filter filters = 3;</code>
     */
    public Builder removeFilters(int index) {
      if (filtersBuilder_ == null) {
        ensureFiltersIsMutable();
        filters_.remove(index);
        onChanged();
      } else {
        filtersBuilder_.remove(index);
      }
      return this;
    }
    /**
     * <pre>
     * A list of individual network filters that make up the filter chain for
     * connections established with the listener. Order matters as the filters are
     * processed sequentially as connection events happen. Note: If the filter
     * list is empty, the connection will close by default.
     * For QUIC listeners, network filters other than HTTP Connection Manager (HCM)
     * can be created, but due to differences in the connection implementation compared
     * to TCP, the onData() method will never be called. Therefore, network filters
     * for QUIC listeners should only expect to do work at the start of a new connection
     * (i.e. in onNewConnection()). HCM must be the last (or only) filter in the chain.
     * </pre>
     *
     * <code>repeated .envoy.config.listener.v3.Filter filters = 3;</code>
     */
    public io.envoyproxy.envoy.config.listener.v3.Filter.Builder getFiltersBuilder(
        int index) {
      return getFiltersFieldBuilder().getBuilder(index);
    }
    /**
     * <pre>
     * A list of individual network filters that make up the filter chain for
     * connections established with the listener. Order matters as the filters are
     * processed sequentially as connection events happen. Note: If the filter
     * list is empty, the connection will close by default.
     * For QUIC listeners, network filters other than HTTP Connection Manager (HCM)
     * can be created, but due to differences in the connection implementation compared
     * to TCP, the onData() method will never be called. Therefore, network filters
     * for QUIC listeners should only expect to do work at the start of a new connection
     * (i.e. in onNewConnection()). HCM must be the last (or only) filter in the chain.
     * </pre>
     *
     * <code>repeated .envoy.config.listener.v3.Filter filters = 3;</code>
     */
    public io.envoyproxy.envoy.config.listener.v3.FilterOrBuilder getFiltersOrBuilder(
        int index) {
      if (filtersBuilder_ == null) {
        return filters_.get(index);  } else {
        return filtersBuilder_.getMessageOrBuilder(index);
      }
    }
    /**
     * <pre>
     * A list of individual network filters that make up the filter chain for
     * connections established with the listener. Order matters as the filters are
     * processed sequentially as connection events happen. Note: If the filter
     * list is empty, the connection will close by default.
     * For QUIC listeners, network filters other than HTTP Connection Manager (HCM)
     * can be created, but due to differences in the connection implementation compared
     * to TCP, the onData() method will never be called. Therefore, network filters
     * for QUIC listeners should only expect to do work at the start of a new connection
     * (i.e. in onNewConnection()). HCM must be the last (or only) filter in the chain.
     * </pre>
     *
     * <code>repeated .envoy.config.listener.v3.Filter filters = 3;</code>
     */
    public java.util.List<? extends io.envoyproxy.envoy.config.listener.v3.FilterOrBuilder> 
         getFiltersOrBuilderList() {
      if (filtersBuilder_ != null) {
        return filtersBuilder_.getMessageOrBuilderList();
      } else {
        return java.util.Collections.unmodifiableList(filters_);
      }
    }
    /**
     * <pre>
     * A list of individual network filters that make up the filter chain for
     * connections established with the listener. Order matters as the filters are
     * processed sequentially as connection events happen. Note: If the filter
     * list is empty, the connection will close by default.
     * For QUIC listeners, network filters other than HTTP Connection Manager (HCM)
     * can be created, but due to differences in the connection implementation compared
     * to TCP, the onData() method will never be called. Therefore, network filters
     * for QUIC listeners should only expect to do work at the start of a new connection
     * (i.e. in onNewConnection()). HCM must be the last (or only) filter in the chain.
     * </pre>
     *
     * <code>repeated .envoy.config.listener.v3.Filter filters = 3;</code>
     */
    public io.envoyproxy.envoy.config.listener.v3.Filter.Builder addFiltersBuilder() {
      return getFiltersFieldBuilder().addBuilder(
          io.envoyproxy.envoy.config.listener.v3.Filter.getDefaultInstance());
    }
    /**
     * <pre>
     * A list of individual network filters that make up the filter chain for
     * connections established with the listener. Order matters as the filters are
     * processed sequentially as connection events happen. Note: If the filter
     * list is empty, the connection will close by default.
     * For QUIC listeners, network filters other than HTTP Connection Manager (HCM)
     * can be created, but due to differences in the connection implementation compared
     * to TCP, the onData() method will never be called. Therefore, network filters
     * for QUIC listeners should only expect to do work at the start of a new connection
     * (i.e. in onNewConnection()). HCM must be the last (or only) filter in the chain.
     * </pre>
     *
     * <code>repeated .envoy.config.listener.v3.Filter filters = 3;</code>
     */
    public io.envoyproxy.envoy.config.listener.v3.Filter.Builder addFiltersBuilder(
        int index) {
      return getFiltersFieldBuilder().addBuilder(
          index, io.envoyproxy.envoy.config.listener.v3.Filter.getDefaultInstance());
    }
    /**
     * <pre>
     * A list of individual network filters that make up the filter chain for
     * connections established with the listener. Order matters as the filters are
     * processed sequentially as connection events happen. Note: If the filter
     * list is empty, the connection will close by default.
     * For QUIC listeners, network filters other than HTTP Connection Manager (HCM)
     * can be created, but due to differences in the connection implementation compared
     * to TCP, the onData() method will never be called. Therefore, network filters
     * for QUIC listeners should only expect to do work at the start of a new connection
     * (i.e. in onNewConnection()). HCM must be the last (or only) filter in the chain.
     * </pre>
     *
     * <code>repeated .envoy.config.listener.v3.Filter filters = 3;</code>
     */
    public java.util.List<io.envoyproxy.envoy.config.listener.v3.Filter.Builder> 
         getFiltersBuilderList() {
      return getFiltersFieldBuilder().getBuilderList();
    }
    private com.google.protobuf.RepeatedFieldBuilderV3<
        io.envoyproxy.envoy.config.listener.v3.Filter, io.envoyproxy.envoy.config.listener.v3.Filter.Builder, io.envoyproxy.envoy.config.listener.v3.FilterOrBuilder> 
        getFiltersFieldBuilder() {
      if (filtersBuilder_ == null) {
        filtersBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<
            io.envoyproxy.envoy.config.listener.v3.Filter, io.envoyproxy.envoy.config.listener.v3.Filter.Builder, io.envoyproxy.envoy.config.listener.v3.FilterOrBuilder>(
                filters_,
                ((bitField0_ & 0x00000002) != 0),
                getParentForChildren(),
                isClean());
        filters_ = null;
      }
      return filtersBuilder_;
    }

    private com.google.protobuf.BoolValue useProxyProto_;
    private com.google.protobuf.SingleFieldBuilderV3<
        com.google.protobuf.BoolValue, com.google.protobuf.BoolValue.Builder, com.google.protobuf.BoolValueOrBuilder> useProxyProtoBuilder_;
    /**
     * <pre>
     * Whether the listener should expect a PROXY protocol V1 header on new
     * connections. If this option is enabled, the listener will assume that that
     * remote address of the connection is the one specified in the header. Some
     * load balancers including the AWS ELB support this option. If the option is
     * absent or set to false, Envoy will use the physical peer address of the
     * connection as the remote address.
     * This field is deprecated. Add a
     * :ref:`PROXY protocol listener filter &lt;config_listener_filters_proxy_protocol&gt;`
     * explicitly instead.
     * </pre>
     *
     * <code>.google.protobuf.BoolValue use_proxy_proto = 4 [deprecated = true, (.envoy.annotations.deprecated_at_minor_version) = "3.0"];</code>
     * @deprecated envoy.config.listener.v3.FilterChain.use_proxy_proto is deprecated.
     *     See envoy/config/listener/v3/listener_components.proto;l=248
     * @return Whether the useProxyProto field is set.
     */
    @java.lang.Deprecated public boolean hasUseProxyProto() {
      return ((bitField0_ & 0x00000004) != 0);
    }
    /**
     * <pre>
     * Whether the listener should expect a PROXY protocol V1 header on new
     * connections. If this option is enabled, the listener will assume that that
     * remote address of the connection is the one specified in the header. Some
     * load balancers including the AWS ELB support this option. If the option is
     * absent or set to false, Envoy will use the physical peer address of the
     * connection as the remote address.
     * This field is deprecated. Add a
     * :ref:`PROXY protocol listener filter &lt;config_listener_filters_proxy_protocol&gt;`
     * explicitly instead.
     * </pre>
     *
     * <code>.google.protobuf.BoolValue use_proxy_proto = 4 [deprecated = true, (.envoy.annotations.deprecated_at_minor_version) = "3.0"];</code>
     * @deprecated envoy.config.listener.v3.FilterChain.use_proxy_proto is deprecated.
     *     See envoy/config/listener/v3/listener_components.proto;l=248
     * @return The useProxyProto.
     */
    @java.lang.Deprecated public com.google.protobuf.BoolValue getUseProxyProto() {
      if (useProxyProtoBuilder_ == null) {
        return useProxyProto_ == null ? com.google.protobuf.BoolValue.getDefaultInstance() : useProxyProto_;
      } else {
        return useProxyProtoBuilder_.getMessage();
      }
    }
    /**
     * <pre>
     * Whether the listener should expect a PROXY protocol V1 header on new
     * connections. If this option is enabled, the listener will assume that that
     * remote address of the connection is the one specified in the header. Some
     * load balancers including the AWS ELB support this option. If the option is
     * absent or set to false, Envoy will use the physical peer address of the
     * connection as the remote address.
     * This field is deprecated. Add a
     * :ref:`PROXY protocol listener filter &lt;config_listener_filters_proxy_protocol&gt;`
     * explicitly instead.
     * </pre>
     *
     * <code>.google.protobuf.BoolValue use_proxy_proto = 4 [deprecated = true, (.envoy.annotations.deprecated_at_minor_version) = "3.0"];</code>
     */
    @java.lang.Deprecated public Builder setUseProxyProto(com.google.protobuf.BoolValue value) {
      if (useProxyProtoBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        useProxyProto_ = value;
      } else {
        useProxyProtoBuilder_.setMessage(value);
      }
      bitField0_ |= 0x00000004;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * Whether the listener should expect a PROXY protocol V1 header on new
     * connections. If this option is enabled, the listener will assume that that
     * remote address of the connection is the one specified in the header. Some
     * load balancers including the AWS ELB support this option. If the option is
     * absent or set to false, Envoy will use the physical peer address of the
     * connection as the remote address.
     * This field is deprecated. Add a
     * :ref:`PROXY protocol listener filter &lt;config_listener_filters_proxy_protocol&gt;`
     * explicitly instead.
     * </pre>
     *
     * <code>.google.protobuf.BoolValue use_proxy_proto = 4 [deprecated = true, (.envoy.annotations.deprecated_at_minor_version) = "3.0"];</code>
     */
    @java.lang.Deprecated public Builder setUseProxyProto(
        com.google.protobuf.BoolValue.Builder builderForValue) {
      if (useProxyProtoBuilder_ == null) {
        useProxyProto_ = builderForValue.build();
      } else {
        useProxyProtoBuilder_.setMessage(builderForValue.build());
      }
      bitField0_ |= 0x00000004;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * Whether the listener should expect a PROXY protocol V1 header on new
     * connections. If this option is enabled, the listener will assume that that
     * remote address of the connection is the one specified in the header. Some
     * load balancers including the AWS ELB support this option. If the option is
     * absent or set to false, Envoy will use the physical peer address of the
     * connection as the remote address.
     * This field is deprecated. Add a
     * :ref:`PROXY protocol listener filter &lt;config_listener_filters_proxy_protocol&gt;`
     * explicitly instead.
     * </pre>
     *
     * <code>.google.protobuf.BoolValue use_proxy_proto = 4 [deprecated = true, (.envoy.annotations.deprecated_at_minor_version) = "3.0"];</code>
     */
    @java.lang.Deprecated public Builder mergeUseProxyProto(com.google.protobuf.BoolValue value) {
      if (useProxyProtoBuilder_ == null) {
        if (((bitField0_ & 0x00000004) != 0) &&
          useProxyProto_ != null &&
          useProxyProto_ != com.google.protobuf.BoolValue.getDefaultInstance()) {
          getUseProxyProtoBuilder().mergeFrom(value);
        } else {
          useProxyProto_ = value;
        }
      } else {
        useProxyProtoBuilder_.mergeFrom(value);
      }
      bitField0_ |= 0x00000004;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * Whether the listener should expect a PROXY protocol V1 header on new
     * connections. If this option is enabled, the listener will assume that that
     * remote address of the connection is the one specified in the header. Some
     * load balancers including the AWS ELB support this option. If the option is
     * absent or set to false, Envoy will use the physical peer address of the
     * connection as the remote address.
     * This field is deprecated. Add a
     * :ref:`PROXY protocol listener filter &lt;config_listener_filters_proxy_protocol&gt;`
     * explicitly instead.
     * </pre>
     *
     * <code>.google.protobuf.BoolValue use_proxy_proto = 4 [deprecated = true, (.envoy.annotations.deprecated_at_minor_version) = "3.0"];</code>
     */
    @java.lang.Deprecated public Builder clearUseProxyProto() {
      bitField0_ = (bitField0_ & ~0x00000004);
      useProxyProto_ = null;
      if (useProxyProtoBuilder_ != null) {
        useProxyProtoBuilder_.dispose();
        useProxyProtoBuilder_ = null;
      }
      onChanged();
      return this;
    }
    /**
     * <pre>
     * Whether the listener should expect a PROXY protocol V1 header on new
     * connections. If this option is enabled, the listener will assume that that
     * remote address of the connection is the one specified in the header. Some
     * load balancers including the AWS ELB support this option. If the option is
     * absent or set to false, Envoy will use the physical peer address of the
     * connection as the remote address.
     * This field is deprecated. Add a
     * :ref:`PROXY protocol listener filter &lt;config_listener_filters_proxy_protocol&gt;`
     * explicitly instead.
     * </pre>
     *
     * <code>.google.protobuf.BoolValue use_proxy_proto = 4 [deprecated = true, (.envoy.annotations.deprecated_at_minor_version) = "3.0"];</code>
     */
    @java.lang.Deprecated public com.google.protobuf.BoolValue.Builder getUseProxyProtoBuilder() {
      bitField0_ |= 0x00000004;
      onChanged();
      return getUseProxyProtoFieldBuilder().getBuilder();
    }
    /**
     * <pre>
     * Whether the listener should expect a PROXY protocol V1 header on new
     * connections. If this option is enabled, the listener will assume that that
     * remote address of the connection is the one specified in the header. Some
     * load balancers including the AWS ELB support this option. If the option is
     * absent or set to false, Envoy will use the physical peer address of the
     * connection as the remote address.
     * This field is deprecated. Add a
     * :ref:`PROXY protocol listener filter &lt;config_listener_filters_proxy_protocol&gt;`
     * explicitly instead.
     * </pre>
     *
     * <code>.google.protobuf.BoolValue use_proxy_proto = 4 [deprecated = true, (.envoy.annotations.deprecated_at_minor_version) = "3.0"];</code>
     */
    @java.lang.Deprecated public com.google.protobuf.BoolValueOrBuilder getUseProxyProtoOrBuilder() {
      if (useProxyProtoBuilder_ != null) {
        return useProxyProtoBuilder_.getMessageOrBuilder();
      } else {
        return useProxyProto_ == null ?
            com.google.protobuf.BoolValue.getDefaultInstance() : useProxyProto_;
      }
    }
    /**
     * <pre>
     * Whether the listener should expect a PROXY protocol V1 header on new
     * connections. If this option is enabled, the listener will assume that that
     * remote address of the connection is the one specified in the header. Some
     * load balancers including the AWS ELB support this option. If the option is
     * absent or set to false, Envoy will use the physical peer address of the
     * connection as the remote address.
     * This field is deprecated. Add a
     * :ref:`PROXY protocol listener filter &lt;config_listener_filters_proxy_protocol&gt;`
     * explicitly instead.
     * </pre>
     *
     * <code>.google.protobuf.BoolValue use_proxy_proto = 4 [deprecated = true, (.envoy.annotations.deprecated_at_minor_version) = "3.0"];</code>
     */
    private com.google.protobuf.SingleFieldBuilderV3<
        com.google.protobuf.BoolValue, com.google.protobuf.BoolValue.Builder, com.google.protobuf.BoolValueOrBuilder> 
        getUseProxyProtoFieldBuilder() {
      if (useProxyProtoBuilder_ == null) {
        useProxyProtoBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
            com.google.protobuf.BoolValue, com.google.protobuf.BoolValue.Builder, com.google.protobuf.BoolValueOrBuilder>(
                getUseProxyProto(),
                getParentForChildren(),
                isClean());
        useProxyProto_ = null;
      }
      return useProxyProtoBuilder_;
    }

    private io.envoyproxy.envoy.config.core.v3.Metadata metadata_;
    private com.google.protobuf.SingleFieldBuilderV3<
        io.envoyproxy.envoy.config.core.v3.Metadata, io.envoyproxy.envoy.config.core.v3.Metadata.Builder, io.envoyproxy.envoy.config.core.v3.MetadataOrBuilder> metadataBuilder_;
    /**
     * <pre>
     * [#not-implemented-hide:] filter chain metadata.
     * </pre>
     *
     * <code>.envoy.config.core.v3.Metadata metadata = 5;</code>
     * @return Whether the metadata field is set.
     */
    public boolean hasMetadata() {
      return ((bitField0_ & 0x00000008) != 0);
    }
    /**
     * <pre>
     * [#not-implemented-hide:] filter chain metadata.
     * </pre>
     *
     * <code>.envoy.config.core.v3.Metadata metadata = 5;</code>
     * @return The metadata.
     */
    public io.envoyproxy.envoy.config.core.v3.Metadata getMetadata() {
      if (metadataBuilder_ == null) {
        return metadata_ == null ? io.envoyproxy.envoy.config.core.v3.Metadata.getDefaultInstance() : metadata_;
      } else {
        return metadataBuilder_.getMessage();
      }
    }
    /**
     * <pre>
     * [#not-implemented-hide:] filter chain metadata.
     * </pre>
     *
     * <code>.envoy.config.core.v3.Metadata metadata = 5;</code>
     */
    public Builder setMetadata(io.envoyproxy.envoy.config.core.v3.Metadata value) {
      if (metadataBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        metadata_ = value;
      } else {
        metadataBuilder_.setMessage(value);
      }
      bitField0_ |= 0x00000008;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * [#not-implemented-hide:] filter chain metadata.
     * </pre>
     *
     * <code>.envoy.config.core.v3.Metadata metadata = 5;</code>
     */
    public Builder setMetadata(
        io.envoyproxy.envoy.config.core.v3.Metadata.Builder builderForValue) {
      if (metadataBuilder_ == null) {
        metadata_ = builderForValue.build();
      } else {
        metadataBuilder_.setMessage(builderForValue.build());
      }
      bitField0_ |= 0x00000008;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * [#not-implemented-hide:] filter chain metadata.
     * </pre>
     *
     * <code>.envoy.config.core.v3.Metadata metadata = 5;</code>
     */
    public Builder mergeMetadata(io.envoyproxy.envoy.config.core.v3.Metadata value) {
      if (metadataBuilder_ == null) {
        if (((bitField0_ & 0x00000008) != 0) &&
          metadata_ != null &&
          metadata_ != io.envoyproxy.envoy.config.core.v3.Metadata.getDefaultInstance()) {
          getMetadataBuilder().mergeFrom(value);
        } else {
          metadata_ = value;
        }
      } else {
        metadataBuilder_.mergeFrom(value);
      }
      bitField0_ |= 0x00000008;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * [#not-implemented-hide:] filter chain metadata.
     * </pre>
     *
     * <code>.envoy.config.core.v3.Metadata metadata = 5;</code>
     */
    public Builder clearMetadata() {
      bitField0_ = (bitField0_ & ~0x00000008);
      metadata_ = null;
      if (metadataBuilder_ != null) {
        metadataBuilder_.dispose();
        metadataBuilder_ = null;
      }
      onChanged();
      return this;
    }
    /**
     * <pre>
     * [#not-implemented-hide:] filter chain metadata.
     * </pre>
     *
     * <code>.envoy.config.core.v3.Metadata metadata = 5;</code>
     */
    public io.envoyproxy.envoy.config.core.v3.Metadata.Builder getMetadataBuilder() {
      bitField0_ |= 0x00000008;
      onChanged();
      return getMetadataFieldBuilder().getBuilder();
    }
    /**
     * <pre>
     * [#not-implemented-hide:] filter chain metadata.
     * </pre>
     *
     * <code>.envoy.config.core.v3.Metadata metadata = 5;</code>
     */
    public io.envoyproxy.envoy.config.core.v3.MetadataOrBuilder getMetadataOrBuilder() {
      if (metadataBuilder_ != null) {
        return metadataBuilder_.getMessageOrBuilder();
      } else {
        return metadata_ == null ?
            io.envoyproxy.envoy.config.core.v3.Metadata.getDefaultInstance() : metadata_;
      }
    }
    /**
     * <pre>
     * [#not-implemented-hide:] filter chain metadata.
     * </pre>
     *
     * <code>.envoy.config.core.v3.Metadata metadata = 5;</code>
     */
    private com.google.protobuf.SingleFieldBuilderV3<
        io.envoyproxy.envoy.config.core.v3.Metadata, io.envoyproxy.envoy.config.core.v3.Metadata.Builder, io.envoyproxy.envoy.config.core.v3.MetadataOrBuilder> 
        getMetadataFieldBuilder() {
      if (metadataBuilder_ == null) {
        metadataBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
            io.envoyproxy.envoy.config.core.v3.Metadata, io.envoyproxy.envoy.config.core.v3.Metadata.Builder, io.envoyproxy.envoy.config.core.v3.MetadataOrBuilder>(
                getMetadata(),
                getParentForChildren(),
                isClean());
        metadata_ = null;
      }
      return metadataBuilder_;
    }

    private io.envoyproxy.envoy.config.core.v3.TransportSocket transportSocket_;
    private com.google.protobuf.SingleFieldBuilderV3<
        io.envoyproxy.envoy.config.core.v3.TransportSocket, io.envoyproxy.envoy.config.core.v3.TransportSocket.Builder, io.envoyproxy.envoy.config.core.v3.TransportSocketOrBuilder> transportSocketBuilder_;
    /**
     * <pre>
     * Optional custom transport socket implementation to use for downstream connections.
     * To setup TLS, set a transport socket with name ``envoy.transport_sockets.tls`` and
     * :ref:`DownstreamTlsContext &lt;envoy_v3_api_msg_extensions.transport_sockets.tls.v3.DownstreamTlsContext&gt;` in the ``typed_config``.
     * If no transport socket configuration is specified, new connections
     * will be set up with plaintext.
     * [#extension-category: envoy.transport_sockets.downstream]
     * </pre>
     *
     * <code>.envoy.config.core.v3.TransportSocket transport_socket = 6;</code>
     * @return Whether the transportSocket field is set.
     */
    public boolean hasTransportSocket() {
      return ((bitField0_ & 0x00000010) != 0);
    }
    /**
     * <pre>
     * Optional custom transport socket implementation to use for downstream connections.
     * To setup TLS, set a transport socket with name ``envoy.transport_sockets.tls`` and
     * :ref:`DownstreamTlsContext &lt;envoy_v3_api_msg_extensions.transport_sockets.tls.v3.DownstreamTlsContext&gt;` in the ``typed_config``.
     * If no transport socket configuration is specified, new connections
     * will be set up with plaintext.
     * [#extension-category: envoy.transport_sockets.downstream]
     * </pre>
     *
     * <code>.envoy.config.core.v3.TransportSocket transport_socket = 6;</code>
     * @return The transportSocket.
     */
    public io.envoyproxy.envoy.config.core.v3.TransportSocket getTransportSocket() {
      if (transportSocketBuilder_ == null) {
        return transportSocket_ == null ? io.envoyproxy.envoy.config.core.v3.TransportSocket.getDefaultInstance() : transportSocket_;
      } else {
        return transportSocketBuilder_.getMessage();
      }
    }
    /**
     * <pre>
     * Optional custom transport socket implementation to use for downstream connections.
     * To setup TLS, set a transport socket with name ``envoy.transport_sockets.tls`` and
     * :ref:`DownstreamTlsContext &lt;envoy_v3_api_msg_extensions.transport_sockets.tls.v3.DownstreamTlsContext&gt;` in the ``typed_config``.
     * If no transport socket configuration is specified, new connections
     * will be set up with plaintext.
     * [#extension-category: envoy.transport_sockets.downstream]
     * </pre>
     *
     * <code>.envoy.config.core.v3.TransportSocket transport_socket = 6;</code>
     */
    public Builder setTransportSocket(io.envoyproxy.envoy.config.core.v3.TransportSocket value) {
      if (transportSocketBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        transportSocket_ = value;
      } else {
        transportSocketBuilder_.setMessage(value);
      }
      bitField0_ |= 0x00000010;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * Optional custom transport socket implementation to use for downstream connections.
     * To setup TLS, set a transport socket with name ``envoy.transport_sockets.tls`` and
     * :ref:`DownstreamTlsContext &lt;envoy_v3_api_msg_extensions.transport_sockets.tls.v3.DownstreamTlsContext&gt;` in the ``typed_config``.
     * If no transport socket configuration is specified, new connections
     * will be set up with plaintext.
     * [#extension-category: envoy.transport_sockets.downstream]
     * </pre>
     *
     * <code>.envoy.config.core.v3.TransportSocket transport_socket = 6;</code>
     */
    public Builder setTransportSocket(
        io.envoyproxy.envoy.config.core.v3.TransportSocket.Builder builderForValue) {
      if (transportSocketBuilder_ == null) {
        transportSocket_ = builderForValue.build();
      } else {
        transportSocketBuilder_.setMessage(builderForValue.build());
      }
      bitField0_ |= 0x00000010;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * Optional custom transport socket implementation to use for downstream connections.
     * To setup TLS, set a transport socket with name ``envoy.transport_sockets.tls`` and
     * :ref:`DownstreamTlsContext &lt;envoy_v3_api_msg_extensions.transport_sockets.tls.v3.DownstreamTlsContext&gt;` in the ``typed_config``.
     * If no transport socket configuration is specified, new connections
     * will be set up with plaintext.
     * [#extension-category: envoy.transport_sockets.downstream]
     * </pre>
     *
     * <code>.envoy.config.core.v3.TransportSocket transport_socket = 6;</code>
     */
    public Builder mergeTransportSocket(io.envoyproxy.envoy.config.core.v3.TransportSocket value) {
      if (transportSocketBuilder_ == null) {
        if (((bitField0_ & 0x00000010) != 0) &&
          transportSocket_ != null &&
          transportSocket_ != io.envoyproxy.envoy.config.core.v3.TransportSocket.getDefaultInstance()) {
          getTransportSocketBuilder().mergeFrom(value);
        } else {
          transportSocket_ = value;
        }
      } else {
        transportSocketBuilder_.mergeFrom(value);
      }
      bitField0_ |= 0x00000010;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * Optional custom transport socket implementation to use for downstream connections.
     * To setup TLS, set a transport socket with name ``envoy.transport_sockets.tls`` and
     * :ref:`DownstreamTlsContext &lt;envoy_v3_api_msg_extensions.transport_sockets.tls.v3.DownstreamTlsContext&gt;` in the ``typed_config``.
     * If no transport socket configuration is specified, new connections
     * will be set up with plaintext.
     * [#extension-category: envoy.transport_sockets.downstream]
     * </pre>
     *
     * <code>.envoy.config.core.v3.TransportSocket transport_socket = 6;</code>
     */
    public Builder clearTransportSocket() {
      bitField0_ = (bitField0_ & ~0x00000010);
      transportSocket_ = null;
      if (transportSocketBuilder_ != null) {
        transportSocketBuilder_.dispose();
        transportSocketBuilder_ = null;
      }
      onChanged();
      return this;
    }
    /**
     * <pre>
     * Optional custom transport socket implementation to use for downstream connections.
     * To setup TLS, set a transport socket with name ``envoy.transport_sockets.tls`` and
     * :ref:`DownstreamTlsContext &lt;envoy_v3_api_msg_extensions.transport_sockets.tls.v3.DownstreamTlsContext&gt;` in the ``typed_config``.
     * If no transport socket configuration is specified, new connections
     * will be set up with plaintext.
     * [#extension-category: envoy.transport_sockets.downstream]
     * </pre>
     *
     * <code>.envoy.config.core.v3.TransportSocket transport_socket = 6;</code>
     */
    public io.envoyproxy.envoy.config.core.v3.TransportSocket.Builder getTransportSocketBuilder() {
      bitField0_ |= 0x00000010;
      onChanged();
      return getTransportSocketFieldBuilder().getBuilder();
    }
    /**
     * <pre>
     * Optional custom transport socket implementation to use for downstream connections.
     * To setup TLS, set a transport socket with name ``envoy.transport_sockets.tls`` and
     * :ref:`DownstreamTlsContext &lt;envoy_v3_api_msg_extensions.transport_sockets.tls.v3.DownstreamTlsContext&gt;` in the ``typed_config``.
     * If no transport socket configuration is specified, new connections
     * will be set up with plaintext.
     * [#extension-category: envoy.transport_sockets.downstream]
     * </pre>
     *
     * <code>.envoy.config.core.v3.TransportSocket transport_socket = 6;</code>
     */
    public io.envoyproxy.envoy.config.core.v3.TransportSocketOrBuilder getTransportSocketOrBuilder() {
      if (transportSocketBuilder_ != null) {
        return transportSocketBuilder_.getMessageOrBuilder();
      } else {
        return transportSocket_ == null ?
            io.envoyproxy.envoy.config.core.v3.TransportSocket.getDefaultInstance() : transportSocket_;
      }
    }
    /**
     * <pre>
     * Optional custom transport socket implementation to use for downstream connections.
     * To setup TLS, set a transport socket with name ``envoy.transport_sockets.tls`` and
     * :ref:`DownstreamTlsContext &lt;envoy_v3_api_msg_extensions.transport_sockets.tls.v3.DownstreamTlsContext&gt;` in the ``typed_config``.
     * If no transport socket configuration is specified, new connections
     * will be set up with plaintext.
     * [#extension-category: envoy.transport_sockets.downstream]
     * </pre>
     *
     * <code>.envoy.config.core.v3.TransportSocket transport_socket = 6;</code>
     */
    private com.google.protobuf.SingleFieldBuilderV3<
        io.envoyproxy.envoy.config.core.v3.TransportSocket, io.envoyproxy.envoy.config.core.v3.TransportSocket.Builder, io.envoyproxy.envoy.config.core.v3.TransportSocketOrBuilder> 
        getTransportSocketFieldBuilder() {
      if (transportSocketBuilder_ == null) {
        transportSocketBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
            io.envoyproxy.envoy.config.core.v3.TransportSocket, io.envoyproxy.envoy.config.core.v3.TransportSocket.Builder, io.envoyproxy.envoy.config.core.v3.TransportSocketOrBuilder>(
                getTransportSocket(),
                getParentForChildren(),
                isClean());
        transportSocket_ = null;
      }
      return transportSocketBuilder_;
    }

    private com.google.protobuf.Duration transportSocketConnectTimeout_;
    private com.google.protobuf.SingleFieldBuilderV3<
        com.google.protobuf.Duration, com.google.protobuf.Duration.Builder, com.google.protobuf.DurationOrBuilder> transportSocketConnectTimeoutBuilder_;
    /**
     * <pre>
     * If present and nonzero, the amount of time to allow incoming connections to complete any
     * transport socket negotiations. If this expires before the transport reports connection
     * establishment, the connection is summarily closed.
     * </pre>
     *
     * <code>.google.protobuf.Duration transport_socket_connect_timeout = 9;</code>
     * @return Whether the transportSocketConnectTimeout field is set.
     */
    public boolean hasTransportSocketConnectTimeout() {
      return ((bitField0_ & 0x00000020) != 0);
    }
    /**
     * <pre>
     * If present and nonzero, the amount of time to allow incoming connections to complete any
     * transport socket negotiations. If this expires before the transport reports connection
     * establishment, the connection is summarily closed.
     * </pre>
     *
     * <code>.google.protobuf.Duration transport_socket_connect_timeout = 9;</code>
     * @return The transportSocketConnectTimeout.
     */
    public com.google.protobuf.Duration getTransportSocketConnectTimeout() {
      if (transportSocketConnectTimeoutBuilder_ == null) {
        return transportSocketConnectTimeout_ == null ? com.google.protobuf.Duration.getDefaultInstance() : transportSocketConnectTimeout_;
      } else {
        return transportSocketConnectTimeoutBuilder_.getMessage();
      }
    }
    /**
     * <pre>
     * If present and nonzero, the amount of time to allow incoming connections to complete any
     * transport socket negotiations. If this expires before the transport reports connection
     * establishment, the connection is summarily closed.
     * </pre>
     *
     * <code>.google.protobuf.Duration transport_socket_connect_timeout = 9;</code>
     */
    public Builder setTransportSocketConnectTimeout(com.google.protobuf.Duration value) {
      if (transportSocketConnectTimeoutBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        transportSocketConnectTimeout_ = value;
      } else {
        transportSocketConnectTimeoutBuilder_.setMessage(value);
      }
      bitField0_ |= 0x00000020;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * If present and nonzero, the amount of time to allow incoming connections to complete any
     * transport socket negotiations. If this expires before the transport reports connection
     * establishment, the connection is summarily closed.
     * </pre>
     *
     * <code>.google.protobuf.Duration transport_socket_connect_timeout = 9;</code>
     */
    public Builder setTransportSocketConnectTimeout(
        com.google.protobuf.Duration.Builder builderForValue) {
      if (transportSocketConnectTimeoutBuilder_ == null) {
        transportSocketConnectTimeout_ = builderForValue.build();
      } else {
        transportSocketConnectTimeoutBuilder_.setMessage(builderForValue.build());
      }
      bitField0_ |= 0x00000020;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * If present and nonzero, the amount of time to allow incoming connections to complete any
     * transport socket negotiations. If this expires before the transport reports connection
     * establishment, the connection is summarily closed.
     * </pre>
     *
     * <code>.google.protobuf.Duration transport_socket_connect_timeout = 9;</code>
     */
    public Builder mergeTransportSocketConnectTimeout(com.google.protobuf.Duration value) {
      if (transportSocketConnectTimeoutBuilder_ == null) {
        if (((bitField0_ & 0x00000020) != 0) &&
          transportSocketConnectTimeout_ != null &&
          transportSocketConnectTimeout_ != com.google.protobuf.Duration.getDefaultInstance()) {
          getTransportSocketConnectTimeoutBuilder().mergeFrom(value);
        } else {
          transportSocketConnectTimeout_ = value;
        }
      } else {
        transportSocketConnectTimeoutBuilder_.mergeFrom(value);
      }
      bitField0_ |= 0x00000020;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * If present and nonzero, the amount of time to allow incoming connections to complete any
     * transport socket negotiations. If this expires before the transport reports connection
     * establishment, the connection is summarily closed.
     * </pre>
     *
     * <code>.google.protobuf.Duration transport_socket_connect_timeout = 9;</code>
     */
    public Builder clearTransportSocketConnectTimeout() {
      bitField0_ = (bitField0_ & ~0x00000020);
      transportSocketConnectTimeout_ = null;
      if (transportSocketConnectTimeoutBuilder_ != null) {
        transportSocketConnectTimeoutBuilder_.dispose();
        transportSocketConnectTimeoutBuilder_ = null;
      }
      onChanged();
      return this;
    }
    /**
     * <pre>
     * If present and nonzero, the amount of time to allow incoming connections to complete any
     * transport socket negotiations. If this expires before the transport reports connection
     * establishment, the connection is summarily closed.
     * </pre>
     *
     * <code>.google.protobuf.Duration transport_socket_connect_timeout = 9;</code>
     */
    public com.google.protobuf.Duration.Builder getTransportSocketConnectTimeoutBuilder() {
      bitField0_ |= 0x00000020;
      onChanged();
      return getTransportSocketConnectTimeoutFieldBuilder().getBuilder();
    }
    /**
     * <pre>
     * If present and nonzero, the amount of time to allow incoming connections to complete any
     * transport socket negotiations. If this expires before the transport reports connection
     * establishment, the connection is summarily closed.
     * </pre>
     *
     * <code>.google.protobuf.Duration transport_socket_connect_timeout = 9;</code>
     */
    public com.google.protobuf.DurationOrBuilder getTransportSocketConnectTimeoutOrBuilder() {
      if (transportSocketConnectTimeoutBuilder_ != null) {
        return transportSocketConnectTimeoutBuilder_.getMessageOrBuilder();
      } else {
        return transportSocketConnectTimeout_ == null ?
            com.google.protobuf.Duration.getDefaultInstance() : transportSocketConnectTimeout_;
      }
    }
    /**
     * <pre>
     * If present and nonzero, the amount of time to allow incoming connections to complete any
     * transport socket negotiations. If this expires before the transport reports connection
     * establishment, the connection is summarily closed.
     * </pre>
     *
     * <code>.google.protobuf.Duration transport_socket_connect_timeout = 9;</code>
     */
    private com.google.protobuf.SingleFieldBuilderV3<
        com.google.protobuf.Duration, com.google.protobuf.Duration.Builder, com.google.protobuf.DurationOrBuilder> 
        getTransportSocketConnectTimeoutFieldBuilder() {
      if (transportSocketConnectTimeoutBuilder_ == null) {
        transportSocketConnectTimeoutBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
            com.google.protobuf.Duration, com.google.protobuf.Duration.Builder, com.google.protobuf.DurationOrBuilder>(
                getTransportSocketConnectTimeout(),
                getParentForChildren(),
                isClean());
        transportSocketConnectTimeout_ = null;
      }
      return transportSocketConnectTimeoutBuilder_;
    }

    private java.lang.Object name_ = "";
    /**
     * <pre>
     * The unique name (or empty) by which this filter chain is known.
     * Note: :ref:`filter_chain_matcher
     * &lt;envoy_v3_api_field_config.listener.v3.Listener.filter_chain_matcher&gt;`
     * requires that filter chains are uniquely named within a listener.
     * </pre>
     *
     * <code>string name = 7;</code>
     * @return The name.
     */
    public java.lang.String getName() {
      java.lang.Object ref = name_;
      if (!(ref instanceof java.lang.String)) {
        com.google.protobuf.ByteString bs =
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        name_ = s;
        return s;
      } else {
        return (java.lang.String) ref;
      }
    }
    /**
     * <pre>
     * The unique name (or empty) by which this filter chain is known.
     * Note: :ref:`filter_chain_matcher
     * &lt;envoy_v3_api_field_config.listener.v3.Listener.filter_chain_matcher&gt;`
     * requires that filter chains are uniquely named within a listener.
     * </pre>
     *
     * <code>string name = 7;</code>
     * @return The bytes for name.
     */
    public com.google.protobuf.ByteString
        getNameBytes() {
      java.lang.Object ref = name_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        name_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }
    /**
     * <pre>
     * The unique name (or empty) by which this filter chain is known.
     * Note: :ref:`filter_chain_matcher
     * &lt;envoy_v3_api_field_config.listener.v3.Listener.filter_chain_matcher&gt;`
     * requires that filter chains are uniquely named within a listener.
     * </pre>
     *
     * <code>string name = 7;</code>
     * @param value The name to set.
     * @return This builder for chaining.
     */
    public Builder setName(
        java.lang.String value) {
      if (value == null) { throw new NullPointerException(); }
      name_ = value;
      bitField0_ |= 0x00000040;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * The unique name (or empty) by which this filter chain is known.
     * Note: :ref:`filter_chain_matcher
     * &lt;envoy_v3_api_field_config.listener.v3.Listener.filter_chain_matcher&gt;`
     * requires that filter chains are uniquely named within a listener.
     * </pre>
     *
     * <code>string name = 7;</code>
     * @return This builder for chaining.
     */
    public Builder clearName() {
      name_ = getDefaultInstance().getName();
      bitField0_ = (bitField0_ & ~0x00000040);
      onChanged();
      return this;
    }
    /**
     * <pre>
     * The unique name (or empty) by which this filter chain is known.
     * Note: :ref:`filter_chain_matcher
     * &lt;envoy_v3_api_field_config.listener.v3.Listener.filter_chain_matcher&gt;`
     * requires that filter chains are uniquely named within a listener.
     * </pre>
     *
     * <code>string name = 7;</code>
     * @param value The bytes for name to set.
     * @return This builder for chaining.
     */
    public Builder setNameBytes(
        com.google.protobuf.ByteString value) {
      if (value == null) { throw new NullPointerException(); }
      checkByteStringIsUtf8(value);
      name_ = value;
      bitField0_ |= 0x00000040;
      onChanged();
      return this;
    }

    private io.envoyproxy.envoy.config.listener.v3.FilterChain.OnDemandConfiguration onDemandConfiguration_;
    private com.google.protobuf.SingleFieldBuilderV3<
        io.envoyproxy.envoy.config.listener.v3.FilterChain.OnDemandConfiguration, io.envoyproxy.envoy.config.listener.v3.FilterChain.OnDemandConfiguration.Builder, io.envoyproxy.envoy.config.listener.v3.FilterChain.OnDemandConfigurationOrBuilder> onDemandConfigurationBuilder_;
    /**
     * <pre>
     * [#not-implemented-hide:] The configuration to specify whether the filter chain will be built on-demand.
     * If this field is not empty, the filter chain will be built on-demand.
     * Otherwise, the filter chain will be built normally and block listener warming.
     * </pre>
     *
     * <code>.envoy.config.listener.v3.FilterChain.OnDemandConfiguration on_demand_configuration = 8;</code>
     * @return Whether the onDemandConfiguration field is set.
     */
    public boolean hasOnDemandConfiguration() {
      return ((bitField0_ & 0x00000080) != 0);
    }
    /**
     * <pre>
     * [#not-implemented-hide:] The configuration to specify whether the filter chain will be built on-demand.
     * If this field is not empty, the filter chain will be built on-demand.
     * Otherwise, the filter chain will be built normally and block listener warming.
     * </pre>
     *
     * <code>.envoy.config.listener.v3.FilterChain.OnDemandConfiguration on_demand_configuration = 8;</code>
     * @return The onDemandConfiguration.
     */
    public io.envoyproxy.envoy.config.listener.v3.FilterChain.OnDemandConfiguration getOnDemandConfiguration() {
      if (onDemandConfigurationBuilder_ == null) {
        return onDemandConfiguration_ == null ? io.envoyproxy.envoy.config.listener.v3.FilterChain.OnDemandConfiguration.getDefaultInstance() : onDemandConfiguration_;
      } else {
        return onDemandConfigurationBuilder_.getMessage();
      }
    }
    /**
     * <pre>
     * [#not-implemented-hide:] The configuration to specify whether the filter chain will be built on-demand.
     * If this field is not empty, the filter chain will be built on-demand.
     * Otherwise, the filter chain will be built normally and block listener warming.
     * </pre>
     *
     * <code>.envoy.config.listener.v3.FilterChain.OnDemandConfiguration on_demand_configuration = 8;</code>
     */
    public Builder setOnDemandConfiguration(io.envoyproxy.envoy.config.listener.v3.FilterChain.OnDemandConfiguration value) {
      if (onDemandConfigurationBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        onDemandConfiguration_ = value;
      } else {
        onDemandConfigurationBuilder_.setMessage(value);
      }
      bitField0_ |= 0x00000080;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * [#not-implemented-hide:] The configuration to specify whether the filter chain will be built on-demand.
     * If this field is not empty, the filter chain will be built on-demand.
     * Otherwise, the filter chain will be built normally and block listener warming.
     * </pre>
     *
     * <code>.envoy.config.listener.v3.FilterChain.OnDemandConfiguration on_demand_configuration = 8;</code>
     */
    public Builder setOnDemandConfiguration(
        io.envoyproxy.envoy.config.listener.v3.FilterChain.OnDemandConfiguration.Builder builderForValue) {
      if (onDemandConfigurationBuilder_ == null) {
        onDemandConfiguration_ = builderForValue.build();
      } else {
        onDemandConfigurationBuilder_.setMessage(builderForValue.build());
      }
      bitField0_ |= 0x00000080;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * [#not-implemented-hide:] The configuration to specify whether the filter chain will be built on-demand.
     * If this field is not empty, the filter chain will be built on-demand.
     * Otherwise, the filter chain will be built normally and block listener warming.
     * </pre>
     *
     * <code>.envoy.config.listener.v3.FilterChain.OnDemandConfiguration on_demand_configuration = 8;</code>
     */
    public Builder mergeOnDemandConfiguration(io.envoyproxy.envoy.config.listener.v3.FilterChain.OnDemandConfiguration value) {
      if (onDemandConfigurationBuilder_ == null) {
        if (((bitField0_ & 0x00000080) != 0) &&
          onDemandConfiguration_ != null &&
          onDemandConfiguration_ != io.envoyproxy.envoy.config.listener.v3.FilterChain.OnDemandConfiguration.getDefaultInstance()) {
          getOnDemandConfigurationBuilder().mergeFrom(value);
        } else {
          onDemandConfiguration_ = value;
        }
      } else {
        onDemandConfigurationBuilder_.mergeFrom(value);
      }
      bitField0_ |= 0x00000080;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * [#not-implemented-hide:] The configuration to specify whether the filter chain will be built on-demand.
     * If this field is not empty, the filter chain will be built on-demand.
     * Otherwise, the filter chain will be built normally and block listener warming.
     * </pre>
     *
     * <code>.envoy.config.listener.v3.FilterChain.OnDemandConfiguration on_demand_configuration = 8;</code>
     */
    public Builder clearOnDemandConfiguration() {
      bitField0_ = (bitField0_ & ~0x00000080);
      onDemandConfiguration_ = null;
      if (onDemandConfigurationBuilder_ != null) {
        onDemandConfigurationBuilder_.dispose();
        onDemandConfigurationBuilder_ = null;
      }
      onChanged();
      return this;
    }
    /**
     * <pre>
     * [#not-implemented-hide:] The configuration to specify whether the filter chain will be built on-demand.
     * If this field is not empty, the filter chain will be built on-demand.
     * Otherwise, the filter chain will be built normally and block listener warming.
     * </pre>
     *
     * <code>.envoy.config.listener.v3.FilterChain.OnDemandConfiguration on_demand_configuration = 8;</code>
     */
    public io.envoyproxy.envoy.config.listener.v3.FilterChain.OnDemandConfiguration.Builder getOnDemandConfigurationBuilder() {
      bitField0_ |= 0x00000080;
      onChanged();
      return getOnDemandConfigurationFieldBuilder().getBuilder();
    }
    /**
     * <pre>
     * [#not-implemented-hide:] The configuration to specify whether the filter chain will be built on-demand.
     * If this field is not empty, the filter chain will be built on-demand.
     * Otherwise, the filter chain will be built normally and block listener warming.
     * </pre>
     *
     * <code>.envoy.config.listener.v3.FilterChain.OnDemandConfiguration on_demand_configuration = 8;</code>
     */
    public io.envoyproxy.envoy.config.listener.v3.FilterChain.OnDemandConfigurationOrBuilder getOnDemandConfigurationOrBuilder() {
      if (onDemandConfigurationBuilder_ != null) {
        return onDemandConfigurationBuilder_.getMessageOrBuilder();
      } else {
        return onDemandConfiguration_ == null ?
            io.envoyproxy.envoy.config.listener.v3.FilterChain.OnDemandConfiguration.getDefaultInstance() : onDemandConfiguration_;
      }
    }
    /**
     * <pre>
     * [#not-implemented-hide:] The configuration to specify whether the filter chain will be built on-demand.
     * If this field is not empty, the filter chain will be built on-demand.
     * Otherwise, the filter chain will be built normally and block listener warming.
     * </pre>
     *
     * <code>.envoy.config.listener.v3.FilterChain.OnDemandConfiguration on_demand_configuration = 8;</code>
     */
    private com.google.protobuf.SingleFieldBuilderV3<
        io.envoyproxy.envoy.config.listener.v3.FilterChain.OnDemandConfiguration, io.envoyproxy.envoy.config.listener.v3.FilterChain.OnDemandConfiguration.Builder, io.envoyproxy.envoy.config.listener.v3.FilterChain.OnDemandConfigurationOrBuilder> 
        getOnDemandConfigurationFieldBuilder() {
      if (onDemandConfigurationBuilder_ == null) {
        onDemandConfigurationBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
            io.envoyproxy.envoy.config.listener.v3.FilterChain.OnDemandConfiguration, io.envoyproxy.envoy.config.listener.v3.FilterChain.OnDemandConfiguration.Builder, io.envoyproxy.envoy.config.listener.v3.FilterChain.OnDemandConfigurationOrBuilder>(
                getOnDemandConfiguration(),
                getParentForChildren(),
                isClean());
        onDemandConfiguration_ = null;
      }
      return onDemandConfigurationBuilder_;
    }
    @java.lang.Override
    public final Builder setUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return super.setUnknownFields(unknownFields);
    }

    @java.lang.Override
    public final Builder mergeUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return super.mergeUnknownFields(unknownFields);
    }


    // @@protoc_insertion_point(builder_scope:envoy.config.listener.v3.FilterChain)
  }

  // @@protoc_insertion_point(class_scope:envoy.config.listener.v3.FilterChain)
  private static final io.envoyproxy.envoy.config.listener.v3.FilterChain DEFAULT_INSTANCE;
  static {
    DEFAULT_INSTANCE = new io.envoyproxy.envoy.config.listener.v3.FilterChain();
  }

  public static io.envoyproxy.envoy.config.listener.v3.FilterChain getDefaultInstance() {
    return DEFAULT_INSTANCE;
  }

  private static final com.google.protobuf.Parser<FilterChain>
      PARSER = new com.google.protobuf.AbstractParser<FilterChain>() {
    @java.lang.Override
    public FilterChain parsePartialFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      Builder builder = newBuilder();
      try {
        builder.mergeFrom(input, extensionRegistry);
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(builder.buildPartial());
      } catch (com.google.protobuf.UninitializedMessageException e) {
        throw e.asInvalidProtocolBufferException().setUnfinishedMessage(builder.buildPartial());
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(e)
            .setUnfinishedMessage(builder.buildPartial());
      }
      return builder.buildPartial();
    }
  };

  public static com.google.protobuf.Parser<FilterChain> parser() {
    return PARSER;
  }

  @java.lang.Override
  public com.google.protobuf.Parser<FilterChain> getParserForType() {
    return PARSER;
  }

  @java.lang.Override
  public io.envoyproxy.envoy.config.listener.v3.FilterChain getDefaultInstanceForType() {
    return DEFAULT_INSTANCE;
  }

}

