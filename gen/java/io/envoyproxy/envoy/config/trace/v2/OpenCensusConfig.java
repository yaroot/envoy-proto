// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: envoy/config/trace/v2/opencensus.proto

package io.envoyproxy.envoy.config.trace.v2;

/**
 * <pre>
 * Configuration for the OpenCensus tracer.
 * [#next-free-field: 15]
 * [#extension: envoy.tracers.opencensus]
 * </pre>
 *
 * Protobuf type {@code envoy.config.trace.v2.OpenCensusConfig}
 */
public final class OpenCensusConfig extends
    com.google.protobuf.GeneratedMessageV3 implements
    // @@protoc_insertion_point(message_implements:envoy.config.trace.v2.OpenCensusConfig)
    OpenCensusConfigOrBuilder {
private static final long serialVersionUID = 0L;
  // Use OpenCensusConfig.newBuilder() to construct.
  private OpenCensusConfig(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
    super(builder);
  }
  private OpenCensusConfig() {
    stackdriverProjectId_ = "";
    stackdriverAddress_ = "";
    zipkinUrl_ = "";
    ocagentAddress_ = "";
    incomingTraceContext_ = java.util.Collections.emptyList();
    outgoingTraceContext_ = java.util.Collections.emptyList();
  }

  @java.lang.Override
  @SuppressWarnings({"unused"})
  protected java.lang.Object newInstance(
      UnusedPrivateParameter unused) {
    return new OpenCensusConfig();
  }

  @java.lang.Override
  public final com.google.protobuf.UnknownFieldSet
  getUnknownFields() {
    return this.unknownFields;
  }
  public static final com.google.protobuf.Descriptors.Descriptor
      getDescriptor() {
    return io.envoyproxy.envoy.config.trace.v2.OpencensusProto.internal_static_envoy_config_trace_v2_OpenCensusConfig_descriptor;
  }

  @java.lang.Override
  protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internalGetFieldAccessorTable() {
    return io.envoyproxy.envoy.config.trace.v2.OpencensusProto.internal_static_envoy_config_trace_v2_OpenCensusConfig_fieldAccessorTable
        .ensureFieldAccessorsInitialized(
            io.envoyproxy.envoy.config.trace.v2.OpenCensusConfig.class, io.envoyproxy.envoy.config.trace.v2.OpenCensusConfig.Builder.class);
  }

  /**
   * Protobuf enum {@code envoy.config.trace.v2.OpenCensusConfig.TraceContext}
   */
  public enum TraceContext
      implements com.google.protobuf.ProtocolMessageEnum {
    /**
     * <pre>
     * No-op default, no trace context is utilized.
     * </pre>
     *
     * <code>NONE = 0;</code>
     */
    NONE(0),
    /**
     * <pre>
     * W3C Trace-Context format "traceparent:" header.
     * </pre>
     *
     * <code>TRACE_CONTEXT = 1;</code>
     */
    TRACE_CONTEXT(1),
    /**
     * <pre>
     * Binary "grpc-trace-bin:" header.
     * </pre>
     *
     * <code>GRPC_TRACE_BIN = 2;</code>
     */
    GRPC_TRACE_BIN(2),
    /**
     * <pre>
     * "X-Cloud-Trace-Context:" header.
     * </pre>
     *
     * <code>CLOUD_TRACE_CONTEXT = 3;</code>
     */
    CLOUD_TRACE_CONTEXT(3),
    /**
     * <pre>
     * X-B3-* headers.
     * </pre>
     *
     * <code>B3 = 4;</code>
     */
    B3(4),
    UNRECOGNIZED(-1),
    ;

    /**
     * <pre>
     * No-op default, no trace context is utilized.
     * </pre>
     *
     * <code>NONE = 0;</code>
     */
    public static final int NONE_VALUE = 0;
    /**
     * <pre>
     * W3C Trace-Context format "traceparent:" header.
     * </pre>
     *
     * <code>TRACE_CONTEXT = 1;</code>
     */
    public static final int TRACE_CONTEXT_VALUE = 1;
    /**
     * <pre>
     * Binary "grpc-trace-bin:" header.
     * </pre>
     *
     * <code>GRPC_TRACE_BIN = 2;</code>
     */
    public static final int GRPC_TRACE_BIN_VALUE = 2;
    /**
     * <pre>
     * "X-Cloud-Trace-Context:" header.
     * </pre>
     *
     * <code>CLOUD_TRACE_CONTEXT = 3;</code>
     */
    public static final int CLOUD_TRACE_CONTEXT_VALUE = 3;
    /**
     * <pre>
     * X-B3-* headers.
     * </pre>
     *
     * <code>B3 = 4;</code>
     */
    public static final int B3_VALUE = 4;


    public final int getNumber() {
      if (this == UNRECOGNIZED) {
        throw new java.lang.IllegalArgumentException(
            "Can't get the number of an unknown enum value.");
      }
      return value;
    }

    /**
     * @param value The numeric wire value of the corresponding enum entry.
     * @return The enum associated with the given numeric wire value.
     * @deprecated Use {@link #forNumber(int)} instead.
     */
    @java.lang.Deprecated
    public static TraceContext valueOf(int value) {
      return forNumber(value);
    }

    /**
     * @param value The numeric wire value of the corresponding enum entry.
     * @return The enum associated with the given numeric wire value.
     */
    public static TraceContext forNumber(int value) {
      switch (value) {
        case 0: return NONE;
        case 1: return TRACE_CONTEXT;
        case 2: return GRPC_TRACE_BIN;
        case 3: return CLOUD_TRACE_CONTEXT;
        case 4: return B3;
        default: return null;
      }
    }

    public static com.google.protobuf.Internal.EnumLiteMap<TraceContext>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static final com.google.protobuf.Internal.EnumLiteMap<
        TraceContext> internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<TraceContext>() {
            public TraceContext findValueByNumber(int number) {
              return TraceContext.forNumber(number);
            }
          };

    public final com.google.protobuf.Descriptors.EnumValueDescriptor
        getValueDescriptor() {
      if (this == UNRECOGNIZED) {
        throw new java.lang.IllegalStateException(
            "Can't get the descriptor of an unrecognized enum value.");
      }
      return getDescriptor().getValues().get(ordinal());
    }
    public final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptorForType() {
      return getDescriptor();
    }
    public static final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptor() {
      return io.envoyproxy.envoy.config.trace.v2.OpenCensusConfig.getDescriptor().getEnumTypes().get(0);
    }

    private static final TraceContext[] VALUES = values();

    public static TraceContext valueOf(
        com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
      if (desc.getType() != getDescriptor()) {
        throw new java.lang.IllegalArgumentException(
          "EnumValueDescriptor is not for this type.");
      }
      if (desc.getIndex() == -1) {
        return UNRECOGNIZED;
      }
      return VALUES[desc.getIndex()];
    }

    private final int value;

    private TraceContext(int value) {
      this.value = value;
    }

    // @@protoc_insertion_point(enum_scope:envoy.config.trace.v2.OpenCensusConfig.TraceContext)
  }

  public static final int TRACE_CONFIG_FIELD_NUMBER = 1;
  private io.opencensus.proto.trace.v1.TraceConfig traceConfig_;
  /**
   * <pre>
   * Configures tracing, e.g. the sampler, max number of annotations, etc.
   * </pre>
   *
   * <code>.opencensus.proto.trace.v1.TraceConfig trace_config = 1;</code>
   * @return Whether the traceConfig field is set.
   */
  @java.lang.Override
  public boolean hasTraceConfig() {
    return traceConfig_ != null;
  }
  /**
   * <pre>
   * Configures tracing, e.g. the sampler, max number of annotations, etc.
   * </pre>
   *
   * <code>.opencensus.proto.trace.v1.TraceConfig trace_config = 1;</code>
   * @return The traceConfig.
   */
  @java.lang.Override
  public io.opencensus.proto.trace.v1.TraceConfig getTraceConfig() {
    return traceConfig_ == null ? io.opencensus.proto.trace.v1.TraceConfig.getDefaultInstance() : traceConfig_;
  }
  /**
   * <pre>
   * Configures tracing, e.g. the sampler, max number of annotations, etc.
   * </pre>
   *
   * <code>.opencensus.proto.trace.v1.TraceConfig trace_config = 1;</code>
   */
  @java.lang.Override
  public io.opencensus.proto.trace.v1.TraceConfigOrBuilder getTraceConfigOrBuilder() {
    return traceConfig_ == null ? io.opencensus.proto.trace.v1.TraceConfig.getDefaultInstance() : traceConfig_;
  }

  public static final int STDOUT_EXPORTER_ENABLED_FIELD_NUMBER = 2;
  private boolean stdoutExporterEnabled_ = false;
  /**
   * <pre>
   * Enables the stdout exporter if set to true. This is intended for debugging
   * purposes.
   * </pre>
   *
   * <code>bool stdout_exporter_enabled = 2;</code>
   * @return The stdoutExporterEnabled.
   */
  @java.lang.Override
  public boolean getStdoutExporterEnabled() {
    return stdoutExporterEnabled_;
  }

  public static final int STACKDRIVER_EXPORTER_ENABLED_FIELD_NUMBER = 3;
  private boolean stackdriverExporterEnabled_ = false;
  /**
   * <pre>
   * Enables the Stackdriver exporter if set to true. The project_id must also
   * be set.
   * </pre>
   *
   * <code>bool stackdriver_exporter_enabled = 3;</code>
   * @return The stackdriverExporterEnabled.
   */
  @java.lang.Override
  public boolean getStackdriverExporterEnabled() {
    return stackdriverExporterEnabled_;
  }

  public static final int STACKDRIVER_PROJECT_ID_FIELD_NUMBER = 4;
  @SuppressWarnings("serial")
  private volatile java.lang.Object stackdriverProjectId_ = "";
  /**
   * <pre>
   * The Cloud project_id to use for Stackdriver tracing.
   * </pre>
   *
   * <code>string stackdriver_project_id = 4;</code>
   * @return The stackdriverProjectId.
   */
  @java.lang.Override
  public java.lang.String getStackdriverProjectId() {
    java.lang.Object ref = stackdriverProjectId_;
    if (ref instanceof java.lang.String) {
      return (java.lang.String) ref;
    } else {
      com.google.protobuf.ByteString bs = 
          (com.google.protobuf.ByteString) ref;
      java.lang.String s = bs.toStringUtf8();
      stackdriverProjectId_ = s;
      return s;
    }
  }
  /**
   * <pre>
   * The Cloud project_id to use for Stackdriver tracing.
   * </pre>
   *
   * <code>string stackdriver_project_id = 4;</code>
   * @return The bytes for stackdriverProjectId.
   */
  @java.lang.Override
  public com.google.protobuf.ByteString
      getStackdriverProjectIdBytes() {
    java.lang.Object ref = stackdriverProjectId_;
    if (ref instanceof java.lang.String) {
      com.google.protobuf.ByteString b = 
          com.google.protobuf.ByteString.copyFromUtf8(
              (java.lang.String) ref);
      stackdriverProjectId_ = b;
      return b;
    } else {
      return (com.google.protobuf.ByteString) ref;
    }
  }

  public static final int STACKDRIVER_ADDRESS_FIELD_NUMBER = 10;
  @SuppressWarnings("serial")
  private volatile java.lang.Object stackdriverAddress_ = "";
  /**
   * <pre>
   * (optional) By default, the Stackdriver exporter will connect to production
   * Stackdriver. If stackdriver_address is non-empty, it will instead connect
   * to this address, which is in the gRPC format:
   * https://github.com/grpc/grpc/blob/master/doc/naming.md
   * </pre>
   *
   * <code>string stackdriver_address = 10;</code>
   * @return The stackdriverAddress.
   */
  @java.lang.Override
  public java.lang.String getStackdriverAddress() {
    java.lang.Object ref = stackdriverAddress_;
    if (ref instanceof java.lang.String) {
      return (java.lang.String) ref;
    } else {
      com.google.protobuf.ByteString bs = 
          (com.google.protobuf.ByteString) ref;
      java.lang.String s = bs.toStringUtf8();
      stackdriverAddress_ = s;
      return s;
    }
  }
  /**
   * <pre>
   * (optional) By default, the Stackdriver exporter will connect to production
   * Stackdriver. If stackdriver_address is non-empty, it will instead connect
   * to this address, which is in the gRPC format:
   * https://github.com/grpc/grpc/blob/master/doc/naming.md
   * </pre>
   *
   * <code>string stackdriver_address = 10;</code>
   * @return The bytes for stackdriverAddress.
   */
  @java.lang.Override
  public com.google.protobuf.ByteString
      getStackdriverAddressBytes() {
    java.lang.Object ref = stackdriverAddress_;
    if (ref instanceof java.lang.String) {
      com.google.protobuf.ByteString b = 
          com.google.protobuf.ByteString.copyFromUtf8(
              (java.lang.String) ref);
      stackdriverAddress_ = b;
      return b;
    } else {
      return (com.google.protobuf.ByteString) ref;
    }
  }

  public static final int STACKDRIVER_GRPC_SERVICE_FIELD_NUMBER = 13;
  private io.envoyproxy.envoy.api.v2.core.GrpcService stackdriverGrpcService_;
  /**
   * <pre>
   * (optional) The gRPC server that hosts Stackdriver tracing service. Only
   * Google gRPC is supported. If :ref:`target_uri &lt;envoy_v3_api_field_config.core.v3.GrpcService.GoogleGrpc.target_uri&gt;`
   * is not provided, the default production Stackdriver address will be used.
   * </pre>
   *
   * <code>.envoy.api.v2.core.GrpcService stackdriver_grpc_service = 13;</code>
   * @return Whether the stackdriverGrpcService field is set.
   */
  @java.lang.Override
  public boolean hasStackdriverGrpcService() {
    return stackdriverGrpcService_ != null;
  }
  /**
   * <pre>
   * (optional) The gRPC server that hosts Stackdriver tracing service. Only
   * Google gRPC is supported. If :ref:`target_uri &lt;envoy_v3_api_field_config.core.v3.GrpcService.GoogleGrpc.target_uri&gt;`
   * is not provided, the default production Stackdriver address will be used.
   * </pre>
   *
   * <code>.envoy.api.v2.core.GrpcService stackdriver_grpc_service = 13;</code>
   * @return The stackdriverGrpcService.
   */
  @java.lang.Override
  public io.envoyproxy.envoy.api.v2.core.GrpcService getStackdriverGrpcService() {
    return stackdriverGrpcService_ == null ? io.envoyproxy.envoy.api.v2.core.GrpcService.getDefaultInstance() : stackdriverGrpcService_;
  }
  /**
   * <pre>
   * (optional) The gRPC server that hosts Stackdriver tracing service. Only
   * Google gRPC is supported. If :ref:`target_uri &lt;envoy_v3_api_field_config.core.v3.GrpcService.GoogleGrpc.target_uri&gt;`
   * is not provided, the default production Stackdriver address will be used.
   * </pre>
   *
   * <code>.envoy.api.v2.core.GrpcService stackdriver_grpc_service = 13;</code>
   */
  @java.lang.Override
  public io.envoyproxy.envoy.api.v2.core.GrpcServiceOrBuilder getStackdriverGrpcServiceOrBuilder() {
    return stackdriverGrpcService_ == null ? io.envoyproxy.envoy.api.v2.core.GrpcService.getDefaultInstance() : stackdriverGrpcService_;
  }

  public static final int ZIPKIN_EXPORTER_ENABLED_FIELD_NUMBER = 5;
  private boolean zipkinExporterEnabled_ = false;
  /**
   * <pre>
   * Enables the Zipkin exporter if set to true. The url and service name must
   * also be set.
   * </pre>
   *
   * <code>bool zipkin_exporter_enabled = 5;</code>
   * @return The zipkinExporterEnabled.
   */
  @java.lang.Override
  public boolean getZipkinExporterEnabled() {
    return zipkinExporterEnabled_;
  }

  public static final int ZIPKIN_URL_FIELD_NUMBER = 6;
  @SuppressWarnings("serial")
  private volatile java.lang.Object zipkinUrl_ = "";
  /**
   * <pre>
   * The URL to Zipkin, e.g. "http://127.0.0.1:9411/api/v2/spans"
   * </pre>
   *
   * <code>string zipkin_url = 6;</code>
   * @return The zipkinUrl.
   */
  @java.lang.Override
  public java.lang.String getZipkinUrl() {
    java.lang.Object ref = zipkinUrl_;
    if (ref instanceof java.lang.String) {
      return (java.lang.String) ref;
    } else {
      com.google.protobuf.ByteString bs = 
          (com.google.protobuf.ByteString) ref;
      java.lang.String s = bs.toStringUtf8();
      zipkinUrl_ = s;
      return s;
    }
  }
  /**
   * <pre>
   * The URL to Zipkin, e.g. "http://127.0.0.1:9411/api/v2/spans"
   * </pre>
   *
   * <code>string zipkin_url = 6;</code>
   * @return The bytes for zipkinUrl.
   */
  @java.lang.Override
  public com.google.protobuf.ByteString
      getZipkinUrlBytes() {
    java.lang.Object ref = zipkinUrl_;
    if (ref instanceof java.lang.String) {
      com.google.protobuf.ByteString b = 
          com.google.protobuf.ByteString.copyFromUtf8(
              (java.lang.String) ref);
      zipkinUrl_ = b;
      return b;
    } else {
      return (com.google.protobuf.ByteString) ref;
    }
  }

  public static final int OCAGENT_EXPORTER_ENABLED_FIELD_NUMBER = 11;
  private boolean ocagentExporterEnabled_ = false;
  /**
   * <pre>
   * Enables the OpenCensus Agent exporter if set to true. The ocagent_address or
   * ocagent_grpc_service must also be set.
   * </pre>
   *
   * <code>bool ocagent_exporter_enabled = 11;</code>
   * @return The ocagentExporterEnabled.
   */
  @java.lang.Override
  public boolean getOcagentExporterEnabled() {
    return ocagentExporterEnabled_;
  }

  public static final int OCAGENT_ADDRESS_FIELD_NUMBER = 12;
  @SuppressWarnings("serial")
  private volatile java.lang.Object ocagentAddress_ = "";
  /**
   * <pre>
   * The address of the OpenCensus Agent, if its exporter is enabled, in gRPC
   * format: https://github.com/grpc/grpc/blob/master/doc/naming.md
   * [#comment:TODO: deprecate this field]
   * </pre>
   *
   * <code>string ocagent_address = 12;</code>
   * @return The ocagentAddress.
   */
  @java.lang.Override
  public java.lang.String getOcagentAddress() {
    java.lang.Object ref = ocagentAddress_;
    if (ref instanceof java.lang.String) {
      return (java.lang.String) ref;
    } else {
      com.google.protobuf.ByteString bs = 
          (com.google.protobuf.ByteString) ref;
      java.lang.String s = bs.toStringUtf8();
      ocagentAddress_ = s;
      return s;
    }
  }
  /**
   * <pre>
   * The address of the OpenCensus Agent, if its exporter is enabled, in gRPC
   * format: https://github.com/grpc/grpc/blob/master/doc/naming.md
   * [#comment:TODO: deprecate this field]
   * </pre>
   *
   * <code>string ocagent_address = 12;</code>
   * @return The bytes for ocagentAddress.
   */
  @java.lang.Override
  public com.google.protobuf.ByteString
      getOcagentAddressBytes() {
    java.lang.Object ref = ocagentAddress_;
    if (ref instanceof java.lang.String) {
      com.google.protobuf.ByteString b = 
          com.google.protobuf.ByteString.copyFromUtf8(
              (java.lang.String) ref);
      ocagentAddress_ = b;
      return b;
    } else {
      return (com.google.protobuf.ByteString) ref;
    }
  }

  public static final int OCAGENT_GRPC_SERVICE_FIELD_NUMBER = 14;
  private io.envoyproxy.envoy.api.v2.core.GrpcService ocagentGrpcService_;
  /**
   * <pre>
   * (optional) The gRPC server hosted by the OpenCensus Agent. Only Google gRPC is supported.
   * This is only used if the ocagent_address is left empty.
   * </pre>
   *
   * <code>.envoy.api.v2.core.GrpcService ocagent_grpc_service = 14;</code>
   * @return Whether the ocagentGrpcService field is set.
   */
  @java.lang.Override
  public boolean hasOcagentGrpcService() {
    return ocagentGrpcService_ != null;
  }
  /**
   * <pre>
   * (optional) The gRPC server hosted by the OpenCensus Agent. Only Google gRPC is supported.
   * This is only used if the ocagent_address is left empty.
   * </pre>
   *
   * <code>.envoy.api.v2.core.GrpcService ocagent_grpc_service = 14;</code>
   * @return The ocagentGrpcService.
   */
  @java.lang.Override
  public io.envoyproxy.envoy.api.v2.core.GrpcService getOcagentGrpcService() {
    return ocagentGrpcService_ == null ? io.envoyproxy.envoy.api.v2.core.GrpcService.getDefaultInstance() : ocagentGrpcService_;
  }
  /**
   * <pre>
   * (optional) The gRPC server hosted by the OpenCensus Agent. Only Google gRPC is supported.
   * This is only used if the ocagent_address is left empty.
   * </pre>
   *
   * <code>.envoy.api.v2.core.GrpcService ocagent_grpc_service = 14;</code>
   */
  @java.lang.Override
  public io.envoyproxy.envoy.api.v2.core.GrpcServiceOrBuilder getOcagentGrpcServiceOrBuilder() {
    return ocagentGrpcService_ == null ? io.envoyproxy.envoy.api.v2.core.GrpcService.getDefaultInstance() : ocagentGrpcService_;
  }

  public static final int INCOMING_TRACE_CONTEXT_FIELD_NUMBER = 8;
  @SuppressWarnings("serial")
  private java.util.List<java.lang.Integer> incomingTraceContext_;
  private static final com.google.protobuf.Internal.ListAdapter.Converter<
      java.lang.Integer, io.envoyproxy.envoy.config.trace.v2.OpenCensusConfig.TraceContext> incomingTraceContext_converter_ =
          new com.google.protobuf.Internal.ListAdapter.Converter<
              java.lang.Integer, io.envoyproxy.envoy.config.trace.v2.OpenCensusConfig.TraceContext>() {
            public io.envoyproxy.envoy.config.trace.v2.OpenCensusConfig.TraceContext convert(java.lang.Integer from) {
              io.envoyproxy.envoy.config.trace.v2.OpenCensusConfig.TraceContext result = io.envoyproxy.envoy.config.trace.v2.OpenCensusConfig.TraceContext.forNumber(from);
              return result == null ? io.envoyproxy.envoy.config.trace.v2.OpenCensusConfig.TraceContext.UNRECOGNIZED : result;
            }
          };
  /**
   * <pre>
   * List of incoming trace context headers we will accept. First one found
   * wins.
   * </pre>
   *
   * <code>repeated .envoy.config.trace.v2.OpenCensusConfig.TraceContext incoming_trace_context = 8;</code>
   * @return A list containing the incomingTraceContext.
   */
  @java.lang.Override
  public java.util.List<io.envoyproxy.envoy.config.trace.v2.OpenCensusConfig.TraceContext> getIncomingTraceContextList() {
    return new com.google.protobuf.Internal.ListAdapter<
        java.lang.Integer, io.envoyproxy.envoy.config.trace.v2.OpenCensusConfig.TraceContext>(incomingTraceContext_, incomingTraceContext_converter_);
  }
  /**
   * <pre>
   * List of incoming trace context headers we will accept. First one found
   * wins.
   * </pre>
   *
   * <code>repeated .envoy.config.trace.v2.OpenCensusConfig.TraceContext incoming_trace_context = 8;</code>
   * @return The count of incomingTraceContext.
   */
  @java.lang.Override
  public int getIncomingTraceContextCount() {
    return incomingTraceContext_.size();
  }
  /**
   * <pre>
   * List of incoming trace context headers we will accept. First one found
   * wins.
   * </pre>
   *
   * <code>repeated .envoy.config.trace.v2.OpenCensusConfig.TraceContext incoming_trace_context = 8;</code>
   * @param index The index of the element to return.
   * @return The incomingTraceContext at the given index.
   */
  @java.lang.Override
  public io.envoyproxy.envoy.config.trace.v2.OpenCensusConfig.TraceContext getIncomingTraceContext(int index) {
    return incomingTraceContext_converter_.convert(incomingTraceContext_.get(index));
  }
  /**
   * <pre>
   * List of incoming trace context headers we will accept. First one found
   * wins.
   * </pre>
   *
   * <code>repeated .envoy.config.trace.v2.OpenCensusConfig.TraceContext incoming_trace_context = 8;</code>
   * @return A list containing the enum numeric values on the wire for incomingTraceContext.
   */
  @java.lang.Override
  public java.util.List<java.lang.Integer>
  getIncomingTraceContextValueList() {
    return incomingTraceContext_;
  }
  /**
   * <pre>
   * List of incoming trace context headers we will accept. First one found
   * wins.
   * </pre>
   *
   * <code>repeated .envoy.config.trace.v2.OpenCensusConfig.TraceContext incoming_trace_context = 8;</code>
   * @param index The index of the value to return.
   * @return The enum numeric value on the wire of incomingTraceContext at the given index.
   */
  @java.lang.Override
  public int getIncomingTraceContextValue(int index) {
    return incomingTraceContext_.get(index);
  }
  private int incomingTraceContextMemoizedSerializedSize;

  public static final int OUTGOING_TRACE_CONTEXT_FIELD_NUMBER = 9;
  @SuppressWarnings("serial")
  private java.util.List<java.lang.Integer> outgoingTraceContext_;
  private static final com.google.protobuf.Internal.ListAdapter.Converter<
      java.lang.Integer, io.envoyproxy.envoy.config.trace.v2.OpenCensusConfig.TraceContext> outgoingTraceContext_converter_ =
          new com.google.protobuf.Internal.ListAdapter.Converter<
              java.lang.Integer, io.envoyproxy.envoy.config.trace.v2.OpenCensusConfig.TraceContext>() {
            public io.envoyproxy.envoy.config.trace.v2.OpenCensusConfig.TraceContext convert(java.lang.Integer from) {
              io.envoyproxy.envoy.config.trace.v2.OpenCensusConfig.TraceContext result = io.envoyproxy.envoy.config.trace.v2.OpenCensusConfig.TraceContext.forNumber(from);
              return result == null ? io.envoyproxy.envoy.config.trace.v2.OpenCensusConfig.TraceContext.UNRECOGNIZED : result;
            }
          };
  /**
   * <pre>
   * List of outgoing trace context headers we will produce.
   * </pre>
   *
   * <code>repeated .envoy.config.trace.v2.OpenCensusConfig.TraceContext outgoing_trace_context = 9;</code>
   * @return A list containing the outgoingTraceContext.
   */
  @java.lang.Override
  public java.util.List<io.envoyproxy.envoy.config.trace.v2.OpenCensusConfig.TraceContext> getOutgoingTraceContextList() {
    return new com.google.protobuf.Internal.ListAdapter<
        java.lang.Integer, io.envoyproxy.envoy.config.trace.v2.OpenCensusConfig.TraceContext>(outgoingTraceContext_, outgoingTraceContext_converter_);
  }
  /**
   * <pre>
   * List of outgoing trace context headers we will produce.
   * </pre>
   *
   * <code>repeated .envoy.config.trace.v2.OpenCensusConfig.TraceContext outgoing_trace_context = 9;</code>
   * @return The count of outgoingTraceContext.
   */
  @java.lang.Override
  public int getOutgoingTraceContextCount() {
    return outgoingTraceContext_.size();
  }
  /**
   * <pre>
   * List of outgoing trace context headers we will produce.
   * </pre>
   *
   * <code>repeated .envoy.config.trace.v2.OpenCensusConfig.TraceContext outgoing_trace_context = 9;</code>
   * @param index The index of the element to return.
   * @return The outgoingTraceContext at the given index.
   */
  @java.lang.Override
  public io.envoyproxy.envoy.config.trace.v2.OpenCensusConfig.TraceContext getOutgoingTraceContext(int index) {
    return outgoingTraceContext_converter_.convert(outgoingTraceContext_.get(index));
  }
  /**
   * <pre>
   * List of outgoing trace context headers we will produce.
   * </pre>
   *
   * <code>repeated .envoy.config.trace.v2.OpenCensusConfig.TraceContext outgoing_trace_context = 9;</code>
   * @return A list containing the enum numeric values on the wire for outgoingTraceContext.
   */
  @java.lang.Override
  public java.util.List<java.lang.Integer>
  getOutgoingTraceContextValueList() {
    return outgoingTraceContext_;
  }
  /**
   * <pre>
   * List of outgoing trace context headers we will produce.
   * </pre>
   *
   * <code>repeated .envoy.config.trace.v2.OpenCensusConfig.TraceContext outgoing_trace_context = 9;</code>
   * @param index The index of the value to return.
   * @return The enum numeric value on the wire of outgoingTraceContext at the given index.
   */
  @java.lang.Override
  public int getOutgoingTraceContextValue(int index) {
    return outgoingTraceContext_.get(index);
  }
  private int outgoingTraceContextMemoizedSerializedSize;

  private byte memoizedIsInitialized = -1;
  @java.lang.Override
  public final boolean isInitialized() {
    byte isInitialized = memoizedIsInitialized;
    if (isInitialized == 1) return true;
    if (isInitialized == 0) return false;

    memoizedIsInitialized = 1;
    return true;
  }

  @java.lang.Override
  public void writeTo(com.google.protobuf.CodedOutputStream output)
                      throws java.io.IOException {
    getSerializedSize();
    if (traceConfig_ != null) {
      output.writeMessage(1, getTraceConfig());
    }
    if (stdoutExporterEnabled_ != false) {
      output.writeBool(2, stdoutExporterEnabled_);
    }
    if (stackdriverExporterEnabled_ != false) {
      output.writeBool(3, stackdriverExporterEnabled_);
    }
    if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(stackdriverProjectId_)) {
      com.google.protobuf.GeneratedMessageV3.writeString(output, 4, stackdriverProjectId_);
    }
    if (zipkinExporterEnabled_ != false) {
      output.writeBool(5, zipkinExporterEnabled_);
    }
    if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(zipkinUrl_)) {
      com.google.protobuf.GeneratedMessageV3.writeString(output, 6, zipkinUrl_);
    }
    if (getIncomingTraceContextList().size() > 0) {
      output.writeUInt32NoTag(66);
      output.writeUInt32NoTag(incomingTraceContextMemoizedSerializedSize);
    }
    for (int i = 0; i < incomingTraceContext_.size(); i++) {
      output.writeEnumNoTag(incomingTraceContext_.get(i));
    }
    if (getOutgoingTraceContextList().size() > 0) {
      output.writeUInt32NoTag(74);
      output.writeUInt32NoTag(outgoingTraceContextMemoizedSerializedSize);
    }
    for (int i = 0; i < outgoingTraceContext_.size(); i++) {
      output.writeEnumNoTag(outgoingTraceContext_.get(i));
    }
    if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(stackdriverAddress_)) {
      com.google.protobuf.GeneratedMessageV3.writeString(output, 10, stackdriverAddress_);
    }
    if (ocagentExporterEnabled_ != false) {
      output.writeBool(11, ocagentExporterEnabled_);
    }
    if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(ocagentAddress_)) {
      com.google.protobuf.GeneratedMessageV3.writeString(output, 12, ocagentAddress_);
    }
    if (stackdriverGrpcService_ != null) {
      output.writeMessage(13, getStackdriverGrpcService());
    }
    if (ocagentGrpcService_ != null) {
      output.writeMessage(14, getOcagentGrpcService());
    }
    getUnknownFields().writeTo(output);
  }

  @java.lang.Override
  public int getSerializedSize() {
    int size = memoizedSize;
    if (size != -1) return size;

    size = 0;
    if (traceConfig_ != null) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(1, getTraceConfig());
    }
    if (stdoutExporterEnabled_ != false) {
      size += com.google.protobuf.CodedOutputStream
        .computeBoolSize(2, stdoutExporterEnabled_);
    }
    if (stackdriverExporterEnabled_ != false) {
      size += com.google.protobuf.CodedOutputStream
        .computeBoolSize(3, stackdriverExporterEnabled_);
    }
    if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(stackdriverProjectId_)) {
      size += com.google.protobuf.GeneratedMessageV3.computeStringSize(4, stackdriverProjectId_);
    }
    if (zipkinExporterEnabled_ != false) {
      size += com.google.protobuf.CodedOutputStream
        .computeBoolSize(5, zipkinExporterEnabled_);
    }
    if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(zipkinUrl_)) {
      size += com.google.protobuf.GeneratedMessageV3.computeStringSize(6, zipkinUrl_);
    }
    {
      int dataSize = 0;
      for (int i = 0; i < incomingTraceContext_.size(); i++) {
        dataSize += com.google.protobuf.CodedOutputStream
          .computeEnumSizeNoTag(incomingTraceContext_.get(i));
      }
      size += dataSize;
      if (!getIncomingTraceContextList().isEmpty()) {  size += 1;
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32SizeNoTag(dataSize);
      }incomingTraceContextMemoizedSerializedSize = dataSize;
    }
    {
      int dataSize = 0;
      for (int i = 0; i < outgoingTraceContext_.size(); i++) {
        dataSize += com.google.protobuf.CodedOutputStream
          .computeEnumSizeNoTag(outgoingTraceContext_.get(i));
      }
      size += dataSize;
      if (!getOutgoingTraceContextList().isEmpty()) {  size += 1;
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32SizeNoTag(dataSize);
      }outgoingTraceContextMemoizedSerializedSize = dataSize;
    }
    if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(stackdriverAddress_)) {
      size += com.google.protobuf.GeneratedMessageV3.computeStringSize(10, stackdriverAddress_);
    }
    if (ocagentExporterEnabled_ != false) {
      size += com.google.protobuf.CodedOutputStream
        .computeBoolSize(11, ocagentExporterEnabled_);
    }
    if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(ocagentAddress_)) {
      size += com.google.protobuf.GeneratedMessageV3.computeStringSize(12, ocagentAddress_);
    }
    if (stackdriverGrpcService_ != null) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(13, getStackdriverGrpcService());
    }
    if (ocagentGrpcService_ != null) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(14, getOcagentGrpcService());
    }
    size += getUnknownFields().getSerializedSize();
    memoizedSize = size;
    return size;
  }

  @java.lang.Override
  public boolean equals(final java.lang.Object obj) {
    if (obj == this) {
     return true;
    }
    if (!(obj instanceof io.envoyproxy.envoy.config.trace.v2.OpenCensusConfig)) {
      return super.equals(obj);
    }
    io.envoyproxy.envoy.config.trace.v2.OpenCensusConfig other = (io.envoyproxy.envoy.config.trace.v2.OpenCensusConfig) obj;

    if (hasTraceConfig() != other.hasTraceConfig()) return false;
    if (hasTraceConfig()) {
      if (!getTraceConfig()
          .equals(other.getTraceConfig())) return false;
    }
    if (getStdoutExporterEnabled()
        != other.getStdoutExporterEnabled()) return false;
    if (getStackdriverExporterEnabled()
        != other.getStackdriverExporterEnabled()) return false;
    if (!getStackdriverProjectId()
        .equals(other.getStackdriverProjectId())) return false;
    if (!getStackdriverAddress()
        .equals(other.getStackdriverAddress())) return false;
    if (hasStackdriverGrpcService() != other.hasStackdriverGrpcService()) return false;
    if (hasStackdriverGrpcService()) {
      if (!getStackdriverGrpcService()
          .equals(other.getStackdriverGrpcService())) return false;
    }
    if (getZipkinExporterEnabled()
        != other.getZipkinExporterEnabled()) return false;
    if (!getZipkinUrl()
        .equals(other.getZipkinUrl())) return false;
    if (getOcagentExporterEnabled()
        != other.getOcagentExporterEnabled()) return false;
    if (!getOcagentAddress()
        .equals(other.getOcagentAddress())) return false;
    if (hasOcagentGrpcService() != other.hasOcagentGrpcService()) return false;
    if (hasOcagentGrpcService()) {
      if (!getOcagentGrpcService()
          .equals(other.getOcagentGrpcService())) return false;
    }
    if (!incomingTraceContext_.equals(other.incomingTraceContext_)) return false;
    if (!outgoingTraceContext_.equals(other.outgoingTraceContext_)) return false;
    if (!getUnknownFields().equals(other.getUnknownFields())) return false;
    return true;
  }

  @java.lang.Override
  public int hashCode() {
    if (memoizedHashCode != 0) {
      return memoizedHashCode;
    }
    int hash = 41;
    hash = (19 * hash) + getDescriptor().hashCode();
    if (hasTraceConfig()) {
      hash = (37 * hash) + TRACE_CONFIG_FIELD_NUMBER;
      hash = (53 * hash) + getTraceConfig().hashCode();
    }
    hash = (37 * hash) + STDOUT_EXPORTER_ENABLED_FIELD_NUMBER;
    hash = (53 * hash) + com.google.protobuf.Internal.hashBoolean(
        getStdoutExporterEnabled());
    hash = (37 * hash) + STACKDRIVER_EXPORTER_ENABLED_FIELD_NUMBER;
    hash = (53 * hash) + com.google.protobuf.Internal.hashBoolean(
        getStackdriverExporterEnabled());
    hash = (37 * hash) + STACKDRIVER_PROJECT_ID_FIELD_NUMBER;
    hash = (53 * hash) + getStackdriverProjectId().hashCode();
    hash = (37 * hash) + STACKDRIVER_ADDRESS_FIELD_NUMBER;
    hash = (53 * hash) + getStackdriverAddress().hashCode();
    if (hasStackdriverGrpcService()) {
      hash = (37 * hash) + STACKDRIVER_GRPC_SERVICE_FIELD_NUMBER;
      hash = (53 * hash) + getStackdriverGrpcService().hashCode();
    }
    hash = (37 * hash) + ZIPKIN_EXPORTER_ENABLED_FIELD_NUMBER;
    hash = (53 * hash) + com.google.protobuf.Internal.hashBoolean(
        getZipkinExporterEnabled());
    hash = (37 * hash) + ZIPKIN_URL_FIELD_NUMBER;
    hash = (53 * hash) + getZipkinUrl().hashCode();
    hash = (37 * hash) + OCAGENT_EXPORTER_ENABLED_FIELD_NUMBER;
    hash = (53 * hash) + com.google.protobuf.Internal.hashBoolean(
        getOcagentExporterEnabled());
    hash = (37 * hash) + OCAGENT_ADDRESS_FIELD_NUMBER;
    hash = (53 * hash) + getOcagentAddress().hashCode();
    if (hasOcagentGrpcService()) {
      hash = (37 * hash) + OCAGENT_GRPC_SERVICE_FIELD_NUMBER;
      hash = (53 * hash) + getOcagentGrpcService().hashCode();
    }
    if (getIncomingTraceContextCount() > 0) {
      hash = (37 * hash) + INCOMING_TRACE_CONTEXT_FIELD_NUMBER;
      hash = (53 * hash) + incomingTraceContext_.hashCode();
    }
    if (getOutgoingTraceContextCount() > 0) {
      hash = (37 * hash) + OUTGOING_TRACE_CONTEXT_FIELD_NUMBER;
      hash = (53 * hash) + outgoingTraceContext_.hashCode();
    }
    hash = (29 * hash) + getUnknownFields().hashCode();
    memoizedHashCode = hash;
    return hash;
  }

  public static io.envoyproxy.envoy.config.trace.v2.OpenCensusConfig parseFrom(
      java.nio.ByteBuffer data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static io.envoyproxy.envoy.config.trace.v2.OpenCensusConfig parseFrom(
      java.nio.ByteBuffer data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static io.envoyproxy.envoy.config.trace.v2.OpenCensusConfig parseFrom(
      com.google.protobuf.ByteString data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static io.envoyproxy.envoy.config.trace.v2.OpenCensusConfig parseFrom(
      com.google.protobuf.ByteString data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static io.envoyproxy.envoy.config.trace.v2.OpenCensusConfig parseFrom(byte[] data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static io.envoyproxy.envoy.config.trace.v2.OpenCensusConfig parseFrom(
      byte[] data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static io.envoyproxy.envoy.config.trace.v2.OpenCensusConfig parseFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input);
  }
  public static io.envoyproxy.envoy.config.trace.v2.OpenCensusConfig parseFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input, extensionRegistry);
  }
  public static io.envoyproxy.envoy.config.trace.v2.OpenCensusConfig parseDelimitedFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseDelimitedWithIOException(PARSER, input);
  }
  public static io.envoyproxy.envoy.config.trace.v2.OpenCensusConfig parseDelimitedFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
  }
  public static io.envoyproxy.envoy.config.trace.v2.OpenCensusConfig parseFrom(
      com.google.protobuf.CodedInputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input);
  }
  public static io.envoyproxy.envoy.config.trace.v2.OpenCensusConfig parseFrom(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input, extensionRegistry);
  }

  @java.lang.Override
  public Builder newBuilderForType() { return newBuilder(); }
  public static Builder newBuilder() {
    return DEFAULT_INSTANCE.toBuilder();
  }
  public static Builder newBuilder(io.envoyproxy.envoy.config.trace.v2.OpenCensusConfig prototype) {
    return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
  }
  @java.lang.Override
  public Builder toBuilder() {
    return this == DEFAULT_INSTANCE
        ? new Builder() : new Builder().mergeFrom(this);
  }

  @java.lang.Override
  protected Builder newBuilderForType(
      com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
    Builder builder = new Builder(parent);
    return builder;
  }
  /**
   * <pre>
   * Configuration for the OpenCensus tracer.
   * [#next-free-field: 15]
   * [#extension: envoy.tracers.opencensus]
   * </pre>
   *
   * Protobuf type {@code envoy.config.trace.v2.OpenCensusConfig}
   */
  public static final class Builder extends
      com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
      // @@protoc_insertion_point(builder_implements:envoy.config.trace.v2.OpenCensusConfig)
      io.envoyproxy.envoy.config.trace.v2.OpenCensusConfigOrBuilder {
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return io.envoyproxy.envoy.config.trace.v2.OpencensusProto.internal_static_envoy_config_trace_v2_OpenCensusConfig_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return io.envoyproxy.envoy.config.trace.v2.OpencensusProto.internal_static_envoy_config_trace_v2_OpenCensusConfig_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              io.envoyproxy.envoy.config.trace.v2.OpenCensusConfig.class, io.envoyproxy.envoy.config.trace.v2.OpenCensusConfig.Builder.class);
    }

    // Construct using io.envoyproxy.envoy.config.trace.v2.OpenCensusConfig.newBuilder()
    private Builder() {

    }

    private Builder(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      super(parent);

    }
    @java.lang.Override
    public Builder clear() {
      super.clear();
      bitField0_ = 0;
      traceConfig_ = null;
      if (traceConfigBuilder_ != null) {
        traceConfigBuilder_.dispose();
        traceConfigBuilder_ = null;
      }
      stdoutExporterEnabled_ = false;
      stackdriverExporterEnabled_ = false;
      stackdriverProjectId_ = "";
      stackdriverAddress_ = "";
      stackdriverGrpcService_ = null;
      if (stackdriverGrpcServiceBuilder_ != null) {
        stackdriverGrpcServiceBuilder_.dispose();
        stackdriverGrpcServiceBuilder_ = null;
      }
      zipkinExporterEnabled_ = false;
      zipkinUrl_ = "";
      ocagentExporterEnabled_ = false;
      ocagentAddress_ = "";
      ocagentGrpcService_ = null;
      if (ocagentGrpcServiceBuilder_ != null) {
        ocagentGrpcServiceBuilder_.dispose();
        ocagentGrpcServiceBuilder_ = null;
      }
      incomingTraceContext_ = java.util.Collections.emptyList();
      bitField0_ = (bitField0_ & ~0x00000800);
      outgoingTraceContext_ = java.util.Collections.emptyList();
      bitField0_ = (bitField0_ & ~0x00001000);
      return this;
    }

    @java.lang.Override
    public com.google.protobuf.Descriptors.Descriptor
        getDescriptorForType() {
      return io.envoyproxy.envoy.config.trace.v2.OpencensusProto.internal_static_envoy_config_trace_v2_OpenCensusConfig_descriptor;
    }

    @java.lang.Override
    public io.envoyproxy.envoy.config.trace.v2.OpenCensusConfig getDefaultInstanceForType() {
      return io.envoyproxy.envoy.config.trace.v2.OpenCensusConfig.getDefaultInstance();
    }

    @java.lang.Override
    public io.envoyproxy.envoy.config.trace.v2.OpenCensusConfig build() {
      io.envoyproxy.envoy.config.trace.v2.OpenCensusConfig result = buildPartial();
      if (!result.isInitialized()) {
        throw newUninitializedMessageException(result);
      }
      return result;
    }

    @java.lang.Override
    public io.envoyproxy.envoy.config.trace.v2.OpenCensusConfig buildPartial() {
      io.envoyproxy.envoy.config.trace.v2.OpenCensusConfig result = new io.envoyproxy.envoy.config.trace.v2.OpenCensusConfig(this);
      buildPartialRepeatedFields(result);
      if (bitField0_ != 0) { buildPartial0(result); }
      onBuilt();
      return result;
    }

    private void buildPartialRepeatedFields(io.envoyproxy.envoy.config.trace.v2.OpenCensusConfig result) {
      if (((bitField0_ & 0x00000800) != 0)) {
        incomingTraceContext_ = java.util.Collections.unmodifiableList(incomingTraceContext_);
        bitField0_ = (bitField0_ & ~0x00000800);
      }
      result.incomingTraceContext_ = incomingTraceContext_;
      if (((bitField0_ & 0x00001000) != 0)) {
        outgoingTraceContext_ = java.util.Collections.unmodifiableList(outgoingTraceContext_);
        bitField0_ = (bitField0_ & ~0x00001000);
      }
      result.outgoingTraceContext_ = outgoingTraceContext_;
    }

    private void buildPartial0(io.envoyproxy.envoy.config.trace.v2.OpenCensusConfig result) {
      int from_bitField0_ = bitField0_;
      if (((from_bitField0_ & 0x00000001) != 0)) {
        result.traceConfig_ = traceConfigBuilder_ == null
            ? traceConfig_
            : traceConfigBuilder_.build();
      }
      if (((from_bitField0_ & 0x00000002) != 0)) {
        result.stdoutExporterEnabled_ = stdoutExporterEnabled_;
      }
      if (((from_bitField0_ & 0x00000004) != 0)) {
        result.stackdriverExporterEnabled_ = stackdriverExporterEnabled_;
      }
      if (((from_bitField0_ & 0x00000008) != 0)) {
        result.stackdriverProjectId_ = stackdriverProjectId_;
      }
      if (((from_bitField0_ & 0x00000010) != 0)) {
        result.stackdriverAddress_ = stackdriverAddress_;
      }
      if (((from_bitField0_ & 0x00000020) != 0)) {
        result.stackdriverGrpcService_ = stackdriverGrpcServiceBuilder_ == null
            ? stackdriverGrpcService_
            : stackdriverGrpcServiceBuilder_.build();
      }
      if (((from_bitField0_ & 0x00000040) != 0)) {
        result.zipkinExporterEnabled_ = zipkinExporterEnabled_;
      }
      if (((from_bitField0_ & 0x00000080) != 0)) {
        result.zipkinUrl_ = zipkinUrl_;
      }
      if (((from_bitField0_ & 0x00000100) != 0)) {
        result.ocagentExporterEnabled_ = ocagentExporterEnabled_;
      }
      if (((from_bitField0_ & 0x00000200) != 0)) {
        result.ocagentAddress_ = ocagentAddress_;
      }
      if (((from_bitField0_ & 0x00000400) != 0)) {
        result.ocagentGrpcService_ = ocagentGrpcServiceBuilder_ == null
            ? ocagentGrpcService_
            : ocagentGrpcServiceBuilder_.build();
      }
    }

    @java.lang.Override
    public Builder clone() {
      return super.clone();
    }
    @java.lang.Override
    public Builder setField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        java.lang.Object value) {
      return super.setField(field, value);
    }
    @java.lang.Override
    public Builder clearField(
        com.google.protobuf.Descriptors.FieldDescriptor field) {
      return super.clearField(field);
    }
    @java.lang.Override
    public Builder clearOneof(
        com.google.protobuf.Descriptors.OneofDescriptor oneof) {
      return super.clearOneof(oneof);
    }
    @java.lang.Override
    public Builder setRepeatedField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        int index, java.lang.Object value) {
      return super.setRepeatedField(field, index, value);
    }
    @java.lang.Override
    public Builder addRepeatedField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        java.lang.Object value) {
      return super.addRepeatedField(field, value);
    }
    @java.lang.Override
    public Builder mergeFrom(com.google.protobuf.Message other) {
      if (other instanceof io.envoyproxy.envoy.config.trace.v2.OpenCensusConfig) {
        return mergeFrom((io.envoyproxy.envoy.config.trace.v2.OpenCensusConfig)other);
      } else {
        super.mergeFrom(other);
        return this;
      }
    }

    public Builder mergeFrom(io.envoyproxy.envoy.config.trace.v2.OpenCensusConfig other) {
      if (other == io.envoyproxy.envoy.config.trace.v2.OpenCensusConfig.getDefaultInstance()) return this;
      if (other.hasTraceConfig()) {
        mergeTraceConfig(other.getTraceConfig());
      }
      if (other.getStdoutExporterEnabled() != false) {
        setStdoutExporterEnabled(other.getStdoutExporterEnabled());
      }
      if (other.getStackdriverExporterEnabled() != false) {
        setStackdriverExporterEnabled(other.getStackdriverExporterEnabled());
      }
      if (!other.getStackdriverProjectId().isEmpty()) {
        stackdriverProjectId_ = other.stackdriverProjectId_;
        bitField0_ |= 0x00000008;
        onChanged();
      }
      if (!other.getStackdriverAddress().isEmpty()) {
        stackdriverAddress_ = other.stackdriverAddress_;
        bitField0_ |= 0x00000010;
        onChanged();
      }
      if (other.hasStackdriverGrpcService()) {
        mergeStackdriverGrpcService(other.getStackdriverGrpcService());
      }
      if (other.getZipkinExporterEnabled() != false) {
        setZipkinExporterEnabled(other.getZipkinExporterEnabled());
      }
      if (!other.getZipkinUrl().isEmpty()) {
        zipkinUrl_ = other.zipkinUrl_;
        bitField0_ |= 0x00000080;
        onChanged();
      }
      if (other.getOcagentExporterEnabled() != false) {
        setOcagentExporterEnabled(other.getOcagentExporterEnabled());
      }
      if (!other.getOcagentAddress().isEmpty()) {
        ocagentAddress_ = other.ocagentAddress_;
        bitField0_ |= 0x00000200;
        onChanged();
      }
      if (other.hasOcagentGrpcService()) {
        mergeOcagentGrpcService(other.getOcagentGrpcService());
      }
      if (!other.incomingTraceContext_.isEmpty()) {
        if (incomingTraceContext_.isEmpty()) {
          incomingTraceContext_ = other.incomingTraceContext_;
          bitField0_ = (bitField0_ & ~0x00000800);
        } else {
          ensureIncomingTraceContextIsMutable();
          incomingTraceContext_.addAll(other.incomingTraceContext_);
        }
        onChanged();
      }
      if (!other.outgoingTraceContext_.isEmpty()) {
        if (outgoingTraceContext_.isEmpty()) {
          outgoingTraceContext_ = other.outgoingTraceContext_;
          bitField0_ = (bitField0_ & ~0x00001000);
        } else {
          ensureOutgoingTraceContextIsMutable();
          outgoingTraceContext_.addAll(other.outgoingTraceContext_);
        }
        onChanged();
      }
      this.mergeUnknownFields(other.getUnknownFields());
      onChanged();
      return this;
    }

    @java.lang.Override
    public final boolean isInitialized() {
      return true;
    }

    @java.lang.Override
    public Builder mergeFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 10: {
              input.readMessage(
                  getTraceConfigFieldBuilder().getBuilder(),
                  extensionRegistry);
              bitField0_ |= 0x00000001;
              break;
            } // case 10
            case 16: {
              stdoutExporterEnabled_ = input.readBool();
              bitField0_ |= 0x00000002;
              break;
            } // case 16
            case 24: {
              stackdriverExporterEnabled_ = input.readBool();
              bitField0_ |= 0x00000004;
              break;
            } // case 24
            case 34: {
              stackdriverProjectId_ = input.readStringRequireUtf8();
              bitField0_ |= 0x00000008;
              break;
            } // case 34
            case 40: {
              zipkinExporterEnabled_ = input.readBool();
              bitField0_ |= 0x00000040;
              break;
            } // case 40
            case 50: {
              zipkinUrl_ = input.readStringRequireUtf8();
              bitField0_ |= 0x00000080;
              break;
            } // case 50
            case 64: {
              int tmpRaw = input.readEnum();
              ensureIncomingTraceContextIsMutable();
              incomingTraceContext_.add(tmpRaw);
              break;
            } // case 64
            case 66: {
              int length = input.readRawVarint32();
              int oldLimit = input.pushLimit(length);
              while(input.getBytesUntilLimit() > 0) {
                int tmpRaw = input.readEnum();
                ensureIncomingTraceContextIsMutable();
                incomingTraceContext_.add(tmpRaw);
              }
              input.popLimit(oldLimit);
              break;
            } // case 66
            case 72: {
              int tmpRaw = input.readEnum();
              ensureOutgoingTraceContextIsMutable();
              outgoingTraceContext_.add(tmpRaw);
              break;
            } // case 72
            case 74: {
              int length = input.readRawVarint32();
              int oldLimit = input.pushLimit(length);
              while(input.getBytesUntilLimit() > 0) {
                int tmpRaw = input.readEnum();
                ensureOutgoingTraceContextIsMutable();
                outgoingTraceContext_.add(tmpRaw);
              }
              input.popLimit(oldLimit);
              break;
            } // case 74
            case 82: {
              stackdriverAddress_ = input.readStringRequireUtf8();
              bitField0_ |= 0x00000010;
              break;
            } // case 82
            case 88: {
              ocagentExporterEnabled_ = input.readBool();
              bitField0_ |= 0x00000100;
              break;
            } // case 88
            case 98: {
              ocagentAddress_ = input.readStringRequireUtf8();
              bitField0_ |= 0x00000200;
              break;
            } // case 98
            case 106: {
              input.readMessage(
                  getStackdriverGrpcServiceFieldBuilder().getBuilder(),
                  extensionRegistry);
              bitField0_ |= 0x00000020;
              break;
            } // case 106
            case 114: {
              input.readMessage(
                  getOcagentGrpcServiceFieldBuilder().getBuilder(),
                  extensionRegistry);
              bitField0_ |= 0x00000400;
              break;
            } // case 114
            default: {
              if (!super.parseUnknownField(input, extensionRegistry, tag)) {
                done = true; // was an endgroup tag
              }
              break;
            } // default:
          } // switch (tag)
        } // while (!done)
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.unwrapIOException();
      } finally {
        onChanged();
      } // finally
      return this;
    }
    private int bitField0_;

    private io.opencensus.proto.trace.v1.TraceConfig traceConfig_;
    private com.google.protobuf.SingleFieldBuilderV3<
        io.opencensus.proto.trace.v1.TraceConfig, io.opencensus.proto.trace.v1.TraceConfig.Builder, io.opencensus.proto.trace.v1.TraceConfigOrBuilder> traceConfigBuilder_;
    /**
     * <pre>
     * Configures tracing, e.g. the sampler, max number of annotations, etc.
     * </pre>
     *
     * <code>.opencensus.proto.trace.v1.TraceConfig trace_config = 1;</code>
     * @return Whether the traceConfig field is set.
     */
    public boolean hasTraceConfig() {
      return ((bitField0_ & 0x00000001) != 0);
    }
    /**
     * <pre>
     * Configures tracing, e.g. the sampler, max number of annotations, etc.
     * </pre>
     *
     * <code>.opencensus.proto.trace.v1.TraceConfig trace_config = 1;</code>
     * @return The traceConfig.
     */
    public io.opencensus.proto.trace.v1.TraceConfig getTraceConfig() {
      if (traceConfigBuilder_ == null) {
        return traceConfig_ == null ? io.opencensus.proto.trace.v1.TraceConfig.getDefaultInstance() : traceConfig_;
      } else {
        return traceConfigBuilder_.getMessage();
      }
    }
    /**
     * <pre>
     * Configures tracing, e.g. the sampler, max number of annotations, etc.
     * </pre>
     *
     * <code>.opencensus.proto.trace.v1.TraceConfig trace_config = 1;</code>
     */
    public Builder setTraceConfig(io.opencensus.proto.trace.v1.TraceConfig value) {
      if (traceConfigBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        traceConfig_ = value;
      } else {
        traceConfigBuilder_.setMessage(value);
      }
      bitField0_ |= 0x00000001;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * Configures tracing, e.g. the sampler, max number of annotations, etc.
     * </pre>
     *
     * <code>.opencensus.proto.trace.v1.TraceConfig trace_config = 1;</code>
     */
    public Builder setTraceConfig(
        io.opencensus.proto.trace.v1.TraceConfig.Builder builderForValue) {
      if (traceConfigBuilder_ == null) {
        traceConfig_ = builderForValue.build();
      } else {
        traceConfigBuilder_.setMessage(builderForValue.build());
      }
      bitField0_ |= 0x00000001;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * Configures tracing, e.g. the sampler, max number of annotations, etc.
     * </pre>
     *
     * <code>.opencensus.proto.trace.v1.TraceConfig trace_config = 1;</code>
     */
    public Builder mergeTraceConfig(io.opencensus.proto.trace.v1.TraceConfig value) {
      if (traceConfigBuilder_ == null) {
        if (((bitField0_ & 0x00000001) != 0) &&
          traceConfig_ != null &&
          traceConfig_ != io.opencensus.proto.trace.v1.TraceConfig.getDefaultInstance()) {
          getTraceConfigBuilder().mergeFrom(value);
        } else {
          traceConfig_ = value;
        }
      } else {
        traceConfigBuilder_.mergeFrom(value);
      }
      bitField0_ |= 0x00000001;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * Configures tracing, e.g. the sampler, max number of annotations, etc.
     * </pre>
     *
     * <code>.opencensus.proto.trace.v1.TraceConfig trace_config = 1;</code>
     */
    public Builder clearTraceConfig() {
      bitField0_ = (bitField0_ & ~0x00000001);
      traceConfig_ = null;
      if (traceConfigBuilder_ != null) {
        traceConfigBuilder_.dispose();
        traceConfigBuilder_ = null;
      }
      onChanged();
      return this;
    }
    /**
     * <pre>
     * Configures tracing, e.g. the sampler, max number of annotations, etc.
     * </pre>
     *
     * <code>.opencensus.proto.trace.v1.TraceConfig trace_config = 1;</code>
     */
    public io.opencensus.proto.trace.v1.TraceConfig.Builder getTraceConfigBuilder() {
      bitField0_ |= 0x00000001;
      onChanged();
      return getTraceConfigFieldBuilder().getBuilder();
    }
    /**
     * <pre>
     * Configures tracing, e.g. the sampler, max number of annotations, etc.
     * </pre>
     *
     * <code>.opencensus.proto.trace.v1.TraceConfig trace_config = 1;</code>
     */
    public io.opencensus.proto.trace.v1.TraceConfigOrBuilder getTraceConfigOrBuilder() {
      if (traceConfigBuilder_ != null) {
        return traceConfigBuilder_.getMessageOrBuilder();
      } else {
        return traceConfig_ == null ?
            io.opencensus.proto.trace.v1.TraceConfig.getDefaultInstance() : traceConfig_;
      }
    }
    /**
     * <pre>
     * Configures tracing, e.g. the sampler, max number of annotations, etc.
     * </pre>
     *
     * <code>.opencensus.proto.trace.v1.TraceConfig trace_config = 1;</code>
     */
    private com.google.protobuf.SingleFieldBuilderV3<
        io.opencensus.proto.trace.v1.TraceConfig, io.opencensus.proto.trace.v1.TraceConfig.Builder, io.opencensus.proto.trace.v1.TraceConfigOrBuilder> 
        getTraceConfigFieldBuilder() {
      if (traceConfigBuilder_ == null) {
        traceConfigBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
            io.opencensus.proto.trace.v1.TraceConfig, io.opencensus.proto.trace.v1.TraceConfig.Builder, io.opencensus.proto.trace.v1.TraceConfigOrBuilder>(
                getTraceConfig(),
                getParentForChildren(),
                isClean());
        traceConfig_ = null;
      }
      return traceConfigBuilder_;
    }

    private boolean stdoutExporterEnabled_ ;
    /**
     * <pre>
     * Enables the stdout exporter if set to true. This is intended for debugging
     * purposes.
     * </pre>
     *
     * <code>bool stdout_exporter_enabled = 2;</code>
     * @return The stdoutExporterEnabled.
     */
    @java.lang.Override
    public boolean getStdoutExporterEnabled() {
      return stdoutExporterEnabled_;
    }
    /**
     * <pre>
     * Enables the stdout exporter if set to true. This is intended for debugging
     * purposes.
     * </pre>
     *
     * <code>bool stdout_exporter_enabled = 2;</code>
     * @param value The stdoutExporterEnabled to set.
     * @return This builder for chaining.
     */
    public Builder setStdoutExporterEnabled(boolean value) {
      
      stdoutExporterEnabled_ = value;
      bitField0_ |= 0x00000002;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * Enables the stdout exporter if set to true. This is intended for debugging
     * purposes.
     * </pre>
     *
     * <code>bool stdout_exporter_enabled = 2;</code>
     * @return This builder for chaining.
     */
    public Builder clearStdoutExporterEnabled() {
      bitField0_ = (bitField0_ & ~0x00000002);
      stdoutExporterEnabled_ = false;
      onChanged();
      return this;
    }

    private boolean stackdriverExporterEnabled_ ;
    /**
     * <pre>
     * Enables the Stackdriver exporter if set to true. The project_id must also
     * be set.
     * </pre>
     *
     * <code>bool stackdriver_exporter_enabled = 3;</code>
     * @return The stackdriverExporterEnabled.
     */
    @java.lang.Override
    public boolean getStackdriverExporterEnabled() {
      return stackdriverExporterEnabled_;
    }
    /**
     * <pre>
     * Enables the Stackdriver exporter if set to true. The project_id must also
     * be set.
     * </pre>
     *
     * <code>bool stackdriver_exporter_enabled = 3;</code>
     * @param value The stackdriverExporterEnabled to set.
     * @return This builder for chaining.
     */
    public Builder setStackdriverExporterEnabled(boolean value) {
      
      stackdriverExporterEnabled_ = value;
      bitField0_ |= 0x00000004;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * Enables the Stackdriver exporter if set to true. The project_id must also
     * be set.
     * </pre>
     *
     * <code>bool stackdriver_exporter_enabled = 3;</code>
     * @return This builder for chaining.
     */
    public Builder clearStackdriverExporterEnabled() {
      bitField0_ = (bitField0_ & ~0x00000004);
      stackdriverExporterEnabled_ = false;
      onChanged();
      return this;
    }

    private java.lang.Object stackdriverProjectId_ = "";
    /**
     * <pre>
     * The Cloud project_id to use for Stackdriver tracing.
     * </pre>
     *
     * <code>string stackdriver_project_id = 4;</code>
     * @return The stackdriverProjectId.
     */
    public java.lang.String getStackdriverProjectId() {
      java.lang.Object ref = stackdriverProjectId_;
      if (!(ref instanceof java.lang.String)) {
        com.google.protobuf.ByteString bs =
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        stackdriverProjectId_ = s;
        return s;
      } else {
        return (java.lang.String) ref;
      }
    }
    /**
     * <pre>
     * The Cloud project_id to use for Stackdriver tracing.
     * </pre>
     *
     * <code>string stackdriver_project_id = 4;</code>
     * @return The bytes for stackdriverProjectId.
     */
    public com.google.protobuf.ByteString
        getStackdriverProjectIdBytes() {
      java.lang.Object ref = stackdriverProjectId_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        stackdriverProjectId_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }
    /**
     * <pre>
     * The Cloud project_id to use for Stackdriver tracing.
     * </pre>
     *
     * <code>string stackdriver_project_id = 4;</code>
     * @param value The stackdriverProjectId to set.
     * @return This builder for chaining.
     */
    public Builder setStackdriverProjectId(
        java.lang.String value) {
      if (value == null) { throw new NullPointerException(); }
      stackdriverProjectId_ = value;
      bitField0_ |= 0x00000008;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * The Cloud project_id to use for Stackdriver tracing.
     * </pre>
     *
     * <code>string stackdriver_project_id = 4;</code>
     * @return This builder for chaining.
     */
    public Builder clearStackdriverProjectId() {
      stackdriverProjectId_ = getDefaultInstance().getStackdriverProjectId();
      bitField0_ = (bitField0_ & ~0x00000008);
      onChanged();
      return this;
    }
    /**
     * <pre>
     * The Cloud project_id to use for Stackdriver tracing.
     * </pre>
     *
     * <code>string stackdriver_project_id = 4;</code>
     * @param value The bytes for stackdriverProjectId to set.
     * @return This builder for chaining.
     */
    public Builder setStackdriverProjectIdBytes(
        com.google.protobuf.ByteString value) {
      if (value == null) { throw new NullPointerException(); }
      checkByteStringIsUtf8(value);
      stackdriverProjectId_ = value;
      bitField0_ |= 0x00000008;
      onChanged();
      return this;
    }

    private java.lang.Object stackdriverAddress_ = "";
    /**
     * <pre>
     * (optional) By default, the Stackdriver exporter will connect to production
     * Stackdriver. If stackdriver_address is non-empty, it will instead connect
     * to this address, which is in the gRPC format:
     * https://github.com/grpc/grpc/blob/master/doc/naming.md
     * </pre>
     *
     * <code>string stackdriver_address = 10;</code>
     * @return The stackdriverAddress.
     */
    public java.lang.String getStackdriverAddress() {
      java.lang.Object ref = stackdriverAddress_;
      if (!(ref instanceof java.lang.String)) {
        com.google.protobuf.ByteString bs =
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        stackdriverAddress_ = s;
        return s;
      } else {
        return (java.lang.String) ref;
      }
    }
    /**
     * <pre>
     * (optional) By default, the Stackdriver exporter will connect to production
     * Stackdriver. If stackdriver_address is non-empty, it will instead connect
     * to this address, which is in the gRPC format:
     * https://github.com/grpc/grpc/blob/master/doc/naming.md
     * </pre>
     *
     * <code>string stackdriver_address = 10;</code>
     * @return The bytes for stackdriverAddress.
     */
    public com.google.protobuf.ByteString
        getStackdriverAddressBytes() {
      java.lang.Object ref = stackdriverAddress_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        stackdriverAddress_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }
    /**
     * <pre>
     * (optional) By default, the Stackdriver exporter will connect to production
     * Stackdriver. If stackdriver_address is non-empty, it will instead connect
     * to this address, which is in the gRPC format:
     * https://github.com/grpc/grpc/blob/master/doc/naming.md
     * </pre>
     *
     * <code>string stackdriver_address = 10;</code>
     * @param value The stackdriverAddress to set.
     * @return This builder for chaining.
     */
    public Builder setStackdriverAddress(
        java.lang.String value) {
      if (value == null) { throw new NullPointerException(); }
      stackdriverAddress_ = value;
      bitField0_ |= 0x00000010;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * (optional) By default, the Stackdriver exporter will connect to production
     * Stackdriver. If stackdriver_address is non-empty, it will instead connect
     * to this address, which is in the gRPC format:
     * https://github.com/grpc/grpc/blob/master/doc/naming.md
     * </pre>
     *
     * <code>string stackdriver_address = 10;</code>
     * @return This builder for chaining.
     */
    public Builder clearStackdriverAddress() {
      stackdriverAddress_ = getDefaultInstance().getStackdriverAddress();
      bitField0_ = (bitField0_ & ~0x00000010);
      onChanged();
      return this;
    }
    /**
     * <pre>
     * (optional) By default, the Stackdriver exporter will connect to production
     * Stackdriver. If stackdriver_address is non-empty, it will instead connect
     * to this address, which is in the gRPC format:
     * https://github.com/grpc/grpc/blob/master/doc/naming.md
     * </pre>
     *
     * <code>string stackdriver_address = 10;</code>
     * @param value The bytes for stackdriverAddress to set.
     * @return This builder for chaining.
     */
    public Builder setStackdriverAddressBytes(
        com.google.protobuf.ByteString value) {
      if (value == null) { throw new NullPointerException(); }
      checkByteStringIsUtf8(value);
      stackdriverAddress_ = value;
      bitField0_ |= 0x00000010;
      onChanged();
      return this;
    }

    private io.envoyproxy.envoy.api.v2.core.GrpcService stackdriverGrpcService_;
    private com.google.protobuf.SingleFieldBuilderV3<
        io.envoyproxy.envoy.api.v2.core.GrpcService, io.envoyproxy.envoy.api.v2.core.GrpcService.Builder, io.envoyproxy.envoy.api.v2.core.GrpcServiceOrBuilder> stackdriverGrpcServiceBuilder_;
    /**
     * <pre>
     * (optional) The gRPC server that hosts Stackdriver tracing service. Only
     * Google gRPC is supported. If :ref:`target_uri &lt;envoy_v3_api_field_config.core.v3.GrpcService.GoogleGrpc.target_uri&gt;`
     * is not provided, the default production Stackdriver address will be used.
     * </pre>
     *
     * <code>.envoy.api.v2.core.GrpcService stackdriver_grpc_service = 13;</code>
     * @return Whether the stackdriverGrpcService field is set.
     */
    public boolean hasStackdriverGrpcService() {
      return ((bitField0_ & 0x00000020) != 0);
    }
    /**
     * <pre>
     * (optional) The gRPC server that hosts Stackdriver tracing service. Only
     * Google gRPC is supported. If :ref:`target_uri &lt;envoy_v3_api_field_config.core.v3.GrpcService.GoogleGrpc.target_uri&gt;`
     * is not provided, the default production Stackdriver address will be used.
     * </pre>
     *
     * <code>.envoy.api.v2.core.GrpcService stackdriver_grpc_service = 13;</code>
     * @return The stackdriverGrpcService.
     */
    public io.envoyproxy.envoy.api.v2.core.GrpcService getStackdriverGrpcService() {
      if (stackdriverGrpcServiceBuilder_ == null) {
        return stackdriverGrpcService_ == null ? io.envoyproxy.envoy.api.v2.core.GrpcService.getDefaultInstance() : stackdriverGrpcService_;
      } else {
        return stackdriverGrpcServiceBuilder_.getMessage();
      }
    }
    /**
     * <pre>
     * (optional) The gRPC server that hosts Stackdriver tracing service. Only
     * Google gRPC is supported. If :ref:`target_uri &lt;envoy_v3_api_field_config.core.v3.GrpcService.GoogleGrpc.target_uri&gt;`
     * is not provided, the default production Stackdriver address will be used.
     * </pre>
     *
     * <code>.envoy.api.v2.core.GrpcService stackdriver_grpc_service = 13;</code>
     */
    public Builder setStackdriverGrpcService(io.envoyproxy.envoy.api.v2.core.GrpcService value) {
      if (stackdriverGrpcServiceBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        stackdriverGrpcService_ = value;
      } else {
        stackdriverGrpcServiceBuilder_.setMessage(value);
      }
      bitField0_ |= 0x00000020;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * (optional) The gRPC server that hosts Stackdriver tracing service. Only
     * Google gRPC is supported. If :ref:`target_uri &lt;envoy_v3_api_field_config.core.v3.GrpcService.GoogleGrpc.target_uri&gt;`
     * is not provided, the default production Stackdriver address will be used.
     * </pre>
     *
     * <code>.envoy.api.v2.core.GrpcService stackdriver_grpc_service = 13;</code>
     */
    public Builder setStackdriverGrpcService(
        io.envoyproxy.envoy.api.v2.core.GrpcService.Builder builderForValue) {
      if (stackdriverGrpcServiceBuilder_ == null) {
        stackdriverGrpcService_ = builderForValue.build();
      } else {
        stackdriverGrpcServiceBuilder_.setMessage(builderForValue.build());
      }
      bitField0_ |= 0x00000020;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * (optional) The gRPC server that hosts Stackdriver tracing service. Only
     * Google gRPC is supported. If :ref:`target_uri &lt;envoy_v3_api_field_config.core.v3.GrpcService.GoogleGrpc.target_uri&gt;`
     * is not provided, the default production Stackdriver address will be used.
     * </pre>
     *
     * <code>.envoy.api.v2.core.GrpcService stackdriver_grpc_service = 13;</code>
     */
    public Builder mergeStackdriverGrpcService(io.envoyproxy.envoy.api.v2.core.GrpcService value) {
      if (stackdriverGrpcServiceBuilder_ == null) {
        if (((bitField0_ & 0x00000020) != 0) &&
          stackdriverGrpcService_ != null &&
          stackdriverGrpcService_ != io.envoyproxy.envoy.api.v2.core.GrpcService.getDefaultInstance()) {
          getStackdriverGrpcServiceBuilder().mergeFrom(value);
        } else {
          stackdriverGrpcService_ = value;
        }
      } else {
        stackdriverGrpcServiceBuilder_.mergeFrom(value);
      }
      bitField0_ |= 0x00000020;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * (optional) The gRPC server that hosts Stackdriver tracing service. Only
     * Google gRPC is supported. If :ref:`target_uri &lt;envoy_v3_api_field_config.core.v3.GrpcService.GoogleGrpc.target_uri&gt;`
     * is not provided, the default production Stackdriver address will be used.
     * </pre>
     *
     * <code>.envoy.api.v2.core.GrpcService stackdriver_grpc_service = 13;</code>
     */
    public Builder clearStackdriverGrpcService() {
      bitField0_ = (bitField0_ & ~0x00000020);
      stackdriverGrpcService_ = null;
      if (stackdriverGrpcServiceBuilder_ != null) {
        stackdriverGrpcServiceBuilder_.dispose();
        stackdriverGrpcServiceBuilder_ = null;
      }
      onChanged();
      return this;
    }
    /**
     * <pre>
     * (optional) The gRPC server that hosts Stackdriver tracing service. Only
     * Google gRPC is supported. If :ref:`target_uri &lt;envoy_v3_api_field_config.core.v3.GrpcService.GoogleGrpc.target_uri&gt;`
     * is not provided, the default production Stackdriver address will be used.
     * </pre>
     *
     * <code>.envoy.api.v2.core.GrpcService stackdriver_grpc_service = 13;</code>
     */
    public io.envoyproxy.envoy.api.v2.core.GrpcService.Builder getStackdriverGrpcServiceBuilder() {
      bitField0_ |= 0x00000020;
      onChanged();
      return getStackdriverGrpcServiceFieldBuilder().getBuilder();
    }
    /**
     * <pre>
     * (optional) The gRPC server that hosts Stackdriver tracing service. Only
     * Google gRPC is supported. If :ref:`target_uri &lt;envoy_v3_api_field_config.core.v3.GrpcService.GoogleGrpc.target_uri&gt;`
     * is not provided, the default production Stackdriver address will be used.
     * </pre>
     *
     * <code>.envoy.api.v2.core.GrpcService stackdriver_grpc_service = 13;</code>
     */
    public io.envoyproxy.envoy.api.v2.core.GrpcServiceOrBuilder getStackdriverGrpcServiceOrBuilder() {
      if (stackdriverGrpcServiceBuilder_ != null) {
        return stackdriverGrpcServiceBuilder_.getMessageOrBuilder();
      } else {
        return stackdriverGrpcService_ == null ?
            io.envoyproxy.envoy.api.v2.core.GrpcService.getDefaultInstance() : stackdriverGrpcService_;
      }
    }
    /**
     * <pre>
     * (optional) The gRPC server that hosts Stackdriver tracing service. Only
     * Google gRPC is supported. If :ref:`target_uri &lt;envoy_v3_api_field_config.core.v3.GrpcService.GoogleGrpc.target_uri&gt;`
     * is not provided, the default production Stackdriver address will be used.
     * </pre>
     *
     * <code>.envoy.api.v2.core.GrpcService stackdriver_grpc_service = 13;</code>
     */
    private com.google.protobuf.SingleFieldBuilderV3<
        io.envoyproxy.envoy.api.v2.core.GrpcService, io.envoyproxy.envoy.api.v2.core.GrpcService.Builder, io.envoyproxy.envoy.api.v2.core.GrpcServiceOrBuilder> 
        getStackdriverGrpcServiceFieldBuilder() {
      if (stackdriverGrpcServiceBuilder_ == null) {
        stackdriverGrpcServiceBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
            io.envoyproxy.envoy.api.v2.core.GrpcService, io.envoyproxy.envoy.api.v2.core.GrpcService.Builder, io.envoyproxy.envoy.api.v2.core.GrpcServiceOrBuilder>(
                getStackdriverGrpcService(),
                getParentForChildren(),
                isClean());
        stackdriverGrpcService_ = null;
      }
      return stackdriverGrpcServiceBuilder_;
    }

    private boolean zipkinExporterEnabled_ ;
    /**
     * <pre>
     * Enables the Zipkin exporter if set to true. The url and service name must
     * also be set.
     * </pre>
     *
     * <code>bool zipkin_exporter_enabled = 5;</code>
     * @return The zipkinExporterEnabled.
     */
    @java.lang.Override
    public boolean getZipkinExporterEnabled() {
      return zipkinExporterEnabled_;
    }
    /**
     * <pre>
     * Enables the Zipkin exporter if set to true. The url and service name must
     * also be set.
     * </pre>
     *
     * <code>bool zipkin_exporter_enabled = 5;</code>
     * @param value The zipkinExporterEnabled to set.
     * @return This builder for chaining.
     */
    public Builder setZipkinExporterEnabled(boolean value) {
      
      zipkinExporterEnabled_ = value;
      bitField0_ |= 0x00000040;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * Enables the Zipkin exporter if set to true. The url and service name must
     * also be set.
     * </pre>
     *
     * <code>bool zipkin_exporter_enabled = 5;</code>
     * @return This builder for chaining.
     */
    public Builder clearZipkinExporterEnabled() {
      bitField0_ = (bitField0_ & ~0x00000040);
      zipkinExporterEnabled_ = false;
      onChanged();
      return this;
    }

    private java.lang.Object zipkinUrl_ = "";
    /**
     * <pre>
     * The URL to Zipkin, e.g. "http://127.0.0.1:9411/api/v2/spans"
     * </pre>
     *
     * <code>string zipkin_url = 6;</code>
     * @return The zipkinUrl.
     */
    public java.lang.String getZipkinUrl() {
      java.lang.Object ref = zipkinUrl_;
      if (!(ref instanceof java.lang.String)) {
        com.google.protobuf.ByteString bs =
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        zipkinUrl_ = s;
        return s;
      } else {
        return (java.lang.String) ref;
      }
    }
    /**
     * <pre>
     * The URL to Zipkin, e.g. "http://127.0.0.1:9411/api/v2/spans"
     * </pre>
     *
     * <code>string zipkin_url = 6;</code>
     * @return The bytes for zipkinUrl.
     */
    public com.google.protobuf.ByteString
        getZipkinUrlBytes() {
      java.lang.Object ref = zipkinUrl_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        zipkinUrl_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }
    /**
     * <pre>
     * The URL to Zipkin, e.g. "http://127.0.0.1:9411/api/v2/spans"
     * </pre>
     *
     * <code>string zipkin_url = 6;</code>
     * @param value The zipkinUrl to set.
     * @return This builder for chaining.
     */
    public Builder setZipkinUrl(
        java.lang.String value) {
      if (value == null) { throw new NullPointerException(); }
      zipkinUrl_ = value;
      bitField0_ |= 0x00000080;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * The URL to Zipkin, e.g. "http://127.0.0.1:9411/api/v2/spans"
     * </pre>
     *
     * <code>string zipkin_url = 6;</code>
     * @return This builder for chaining.
     */
    public Builder clearZipkinUrl() {
      zipkinUrl_ = getDefaultInstance().getZipkinUrl();
      bitField0_ = (bitField0_ & ~0x00000080);
      onChanged();
      return this;
    }
    /**
     * <pre>
     * The URL to Zipkin, e.g. "http://127.0.0.1:9411/api/v2/spans"
     * </pre>
     *
     * <code>string zipkin_url = 6;</code>
     * @param value The bytes for zipkinUrl to set.
     * @return This builder for chaining.
     */
    public Builder setZipkinUrlBytes(
        com.google.protobuf.ByteString value) {
      if (value == null) { throw new NullPointerException(); }
      checkByteStringIsUtf8(value);
      zipkinUrl_ = value;
      bitField0_ |= 0x00000080;
      onChanged();
      return this;
    }

    private boolean ocagentExporterEnabled_ ;
    /**
     * <pre>
     * Enables the OpenCensus Agent exporter if set to true. The ocagent_address or
     * ocagent_grpc_service must also be set.
     * </pre>
     *
     * <code>bool ocagent_exporter_enabled = 11;</code>
     * @return The ocagentExporterEnabled.
     */
    @java.lang.Override
    public boolean getOcagentExporterEnabled() {
      return ocagentExporterEnabled_;
    }
    /**
     * <pre>
     * Enables the OpenCensus Agent exporter if set to true. The ocagent_address or
     * ocagent_grpc_service must also be set.
     * </pre>
     *
     * <code>bool ocagent_exporter_enabled = 11;</code>
     * @param value The ocagentExporterEnabled to set.
     * @return This builder for chaining.
     */
    public Builder setOcagentExporterEnabled(boolean value) {
      
      ocagentExporterEnabled_ = value;
      bitField0_ |= 0x00000100;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * Enables the OpenCensus Agent exporter if set to true. The ocagent_address or
     * ocagent_grpc_service must also be set.
     * </pre>
     *
     * <code>bool ocagent_exporter_enabled = 11;</code>
     * @return This builder for chaining.
     */
    public Builder clearOcagentExporterEnabled() {
      bitField0_ = (bitField0_ & ~0x00000100);
      ocagentExporterEnabled_ = false;
      onChanged();
      return this;
    }

    private java.lang.Object ocagentAddress_ = "";
    /**
     * <pre>
     * The address of the OpenCensus Agent, if its exporter is enabled, in gRPC
     * format: https://github.com/grpc/grpc/blob/master/doc/naming.md
     * [#comment:TODO: deprecate this field]
     * </pre>
     *
     * <code>string ocagent_address = 12;</code>
     * @return The ocagentAddress.
     */
    public java.lang.String getOcagentAddress() {
      java.lang.Object ref = ocagentAddress_;
      if (!(ref instanceof java.lang.String)) {
        com.google.protobuf.ByteString bs =
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        ocagentAddress_ = s;
        return s;
      } else {
        return (java.lang.String) ref;
      }
    }
    /**
     * <pre>
     * The address of the OpenCensus Agent, if its exporter is enabled, in gRPC
     * format: https://github.com/grpc/grpc/blob/master/doc/naming.md
     * [#comment:TODO: deprecate this field]
     * </pre>
     *
     * <code>string ocagent_address = 12;</code>
     * @return The bytes for ocagentAddress.
     */
    public com.google.protobuf.ByteString
        getOcagentAddressBytes() {
      java.lang.Object ref = ocagentAddress_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        ocagentAddress_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }
    /**
     * <pre>
     * The address of the OpenCensus Agent, if its exporter is enabled, in gRPC
     * format: https://github.com/grpc/grpc/blob/master/doc/naming.md
     * [#comment:TODO: deprecate this field]
     * </pre>
     *
     * <code>string ocagent_address = 12;</code>
     * @param value The ocagentAddress to set.
     * @return This builder for chaining.
     */
    public Builder setOcagentAddress(
        java.lang.String value) {
      if (value == null) { throw new NullPointerException(); }
      ocagentAddress_ = value;
      bitField0_ |= 0x00000200;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * The address of the OpenCensus Agent, if its exporter is enabled, in gRPC
     * format: https://github.com/grpc/grpc/blob/master/doc/naming.md
     * [#comment:TODO: deprecate this field]
     * </pre>
     *
     * <code>string ocagent_address = 12;</code>
     * @return This builder for chaining.
     */
    public Builder clearOcagentAddress() {
      ocagentAddress_ = getDefaultInstance().getOcagentAddress();
      bitField0_ = (bitField0_ & ~0x00000200);
      onChanged();
      return this;
    }
    /**
     * <pre>
     * The address of the OpenCensus Agent, if its exporter is enabled, in gRPC
     * format: https://github.com/grpc/grpc/blob/master/doc/naming.md
     * [#comment:TODO: deprecate this field]
     * </pre>
     *
     * <code>string ocagent_address = 12;</code>
     * @param value The bytes for ocagentAddress to set.
     * @return This builder for chaining.
     */
    public Builder setOcagentAddressBytes(
        com.google.protobuf.ByteString value) {
      if (value == null) { throw new NullPointerException(); }
      checkByteStringIsUtf8(value);
      ocagentAddress_ = value;
      bitField0_ |= 0x00000200;
      onChanged();
      return this;
    }

    private io.envoyproxy.envoy.api.v2.core.GrpcService ocagentGrpcService_;
    private com.google.protobuf.SingleFieldBuilderV3<
        io.envoyproxy.envoy.api.v2.core.GrpcService, io.envoyproxy.envoy.api.v2.core.GrpcService.Builder, io.envoyproxy.envoy.api.v2.core.GrpcServiceOrBuilder> ocagentGrpcServiceBuilder_;
    /**
     * <pre>
     * (optional) The gRPC server hosted by the OpenCensus Agent. Only Google gRPC is supported.
     * This is only used if the ocagent_address is left empty.
     * </pre>
     *
     * <code>.envoy.api.v2.core.GrpcService ocagent_grpc_service = 14;</code>
     * @return Whether the ocagentGrpcService field is set.
     */
    public boolean hasOcagentGrpcService() {
      return ((bitField0_ & 0x00000400) != 0);
    }
    /**
     * <pre>
     * (optional) The gRPC server hosted by the OpenCensus Agent. Only Google gRPC is supported.
     * This is only used if the ocagent_address is left empty.
     * </pre>
     *
     * <code>.envoy.api.v2.core.GrpcService ocagent_grpc_service = 14;</code>
     * @return The ocagentGrpcService.
     */
    public io.envoyproxy.envoy.api.v2.core.GrpcService getOcagentGrpcService() {
      if (ocagentGrpcServiceBuilder_ == null) {
        return ocagentGrpcService_ == null ? io.envoyproxy.envoy.api.v2.core.GrpcService.getDefaultInstance() : ocagentGrpcService_;
      } else {
        return ocagentGrpcServiceBuilder_.getMessage();
      }
    }
    /**
     * <pre>
     * (optional) The gRPC server hosted by the OpenCensus Agent. Only Google gRPC is supported.
     * This is only used if the ocagent_address is left empty.
     * </pre>
     *
     * <code>.envoy.api.v2.core.GrpcService ocagent_grpc_service = 14;</code>
     */
    public Builder setOcagentGrpcService(io.envoyproxy.envoy.api.v2.core.GrpcService value) {
      if (ocagentGrpcServiceBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ocagentGrpcService_ = value;
      } else {
        ocagentGrpcServiceBuilder_.setMessage(value);
      }
      bitField0_ |= 0x00000400;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * (optional) The gRPC server hosted by the OpenCensus Agent. Only Google gRPC is supported.
     * This is only used if the ocagent_address is left empty.
     * </pre>
     *
     * <code>.envoy.api.v2.core.GrpcService ocagent_grpc_service = 14;</code>
     */
    public Builder setOcagentGrpcService(
        io.envoyproxy.envoy.api.v2.core.GrpcService.Builder builderForValue) {
      if (ocagentGrpcServiceBuilder_ == null) {
        ocagentGrpcService_ = builderForValue.build();
      } else {
        ocagentGrpcServiceBuilder_.setMessage(builderForValue.build());
      }
      bitField0_ |= 0x00000400;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * (optional) The gRPC server hosted by the OpenCensus Agent. Only Google gRPC is supported.
     * This is only used if the ocagent_address is left empty.
     * </pre>
     *
     * <code>.envoy.api.v2.core.GrpcService ocagent_grpc_service = 14;</code>
     */
    public Builder mergeOcagentGrpcService(io.envoyproxy.envoy.api.v2.core.GrpcService value) {
      if (ocagentGrpcServiceBuilder_ == null) {
        if (((bitField0_ & 0x00000400) != 0) &&
          ocagentGrpcService_ != null &&
          ocagentGrpcService_ != io.envoyproxy.envoy.api.v2.core.GrpcService.getDefaultInstance()) {
          getOcagentGrpcServiceBuilder().mergeFrom(value);
        } else {
          ocagentGrpcService_ = value;
        }
      } else {
        ocagentGrpcServiceBuilder_.mergeFrom(value);
      }
      bitField0_ |= 0x00000400;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * (optional) The gRPC server hosted by the OpenCensus Agent. Only Google gRPC is supported.
     * This is only used if the ocagent_address is left empty.
     * </pre>
     *
     * <code>.envoy.api.v2.core.GrpcService ocagent_grpc_service = 14;</code>
     */
    public Builder clearOcagentGrpcService() {
      bitField0_ = (bitField0_ & ~0x00000400);
      ocagentGrpcService_ = null;
      if (ocagentGrpcServiceBuilder_ != null) {
        ocagentGrpcServiceBuilder_.dispose();
        ocagentGrpcServiceBuilder_ = null;
      }
      onChanged();
      return this;
    }
    /**
     * <pre>
     * (optional) The gRPC server hosted by the OpenCensus Agent. Only Google gRPC is supported.
     * This is only used if the ocagent_address is left empty.
     * </pre>
     *
     * <code>.envoy.api.v2.core.GrpcService ocagent_grpc_service = 14;</code>
     */
    public io.envoyproxy.envoy.api.v2.core.GrpcService.Builder getOcagentGrpcServiceBuilder() {
      bitField0_ |= 0x00000400;
      onChanged();
      return getOcagentGrpcServiceFieldBuilder().getBuilder();
    }
    /**
     * <pre>
     * (optional) The gRPC server hosted by the OpenCensus Agent. Only Google gRPC is supported.
     * This is only used if the ocagent_address is left empty.
     * </pre>
     *
     * <code>.envoy.api.v2.core.GrpcService ocagent_grpc_service = 14;</code>
     */
    public io.envoyproxy.envoy.api.v2.core.GrpcServiceOrBuilder getOcagentGrpcServiceOrBuilder() {
      if (ocagentGrpcServiceBuilder_ != null) {
        return ocagentGrpcServiceBuilder_.getMessageOrBuilder();
      } else {
        return ocagentGrpcService_ == null ?
            io.envoyproxy.envoy.api.v2.core.GrpcService.getDefaultInstance() : ocagentGrpcService_;
      }
    }
    /**
     * <pre>
     * (optional) The gRPC server hosted by the OpenCensus Agent. Only Google gRPC is supported.
     * This is only used if the ocagent_address is left empty.
     * </pre>
     *
     * <code>.envoy.api.v2.core.GrpcService ocagent_grpc_service = 14;</code>
     */
    private com.google.protobuf.SingleFieldBuilderV3<
        io.envoyproxy.envoy.api.v2.core.GrpcService, io.envoyproxy.envoy.api.v2.core.GrpcService.Builder, io.envoyproxy.envoy.api.v2.core.GrpcServiceOrBuilder> 
        getOcagentGrpcServiceFieldBuilder() {
      if (ocagentGrpcServiceBuilder_ == null) {
        ocagentGrpcServiceBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
            io.envoyproxy.envoy.api.v2.core.GrpcService, io.envoyproxy.envoy.api.v2.core.GrpcService.Builder, io.envoyproxy.envoy.api.v2.core.GrpcServiceOrBuilder>(
                getOcagentGrpcService(),
                getParentForChildren(),
                isClean());
        ocagentGrpcService_ = null;
      }
      return ocagentGrpcServiceBuilder_;
    }

    private java.util.List<java.lang.Integer> incomingTraceContext_ =
      java.util.Collections.emptyList();
    private void ensureIncomingTraceContextIsMutable() {
      if (!((bitField0_ & 0x00000800) != 0)) {
        incomingTraceContext_ = new java.util.ArrayList<java.lang.Integer>(incomingTraceContext_);
        bitField0_ |= 0x00000800;
      }
    }
    /**
     * <pre>
     * List of incoming trace context headers we will accept. First one found
     * wins.
     * </pre>
     *
     * <code>repeated .envoy.config.trace.v2.OpenCensusConfig.TraceContext incoming_trace_context = 8;</code>
     * @return A list containing the incomingTraceContext.
     */
    public java.util.List<io.envoyproxy.envoy.config.trace.v2.OpenCensusConfig.TraceContext> getIncomingTraceContextList() {
      return new com.google.protobuf.Internal.ListAdapter<
          java.lang.Integer, io.envoyproxy.envoy.config.trace.v2.OpenCensusConfig.TraceContext>(incomingTraceContext_, incomingTraceContext_converter_);
    }
    /**
     * <pre>
     * List of incoming trace context headers we will accept. First one found
     * wins.
     * </pre>
     *
     * <code>repeated .envoy.config.trace.v2.OpenCensusConfig.TraceContext incoming_trace_context = 8;</code>
     * @return The count of incomingTraceContext.
     */
    public int getIncomingTraceContextCount() {
      return incomingTraceContext_.size();
    }
    /**
     * <pre>
     * List of incoming trace context headers we will accept. First one found
     * wins.
     * </pre>
     *
     * <code>repeated .envoy.config.trace.v2.OpenCensusConfig.TraceContext incoming_trace_context = 8;</code>
     * @param index The index of the element to return.
     * @return The incomingTraceContext at the given index.
     */
    public io.envoyproxy.envoy.config.trace.v2.OpenCensusConfig.TraceContext getIncomingTraceContext(int index) {
      return incomingTraceContext_converter_.convert(incomingTraceContext_.get(index));
    }
    /**
     * <pre>
     * List of incoming trace context headers we will accept. First one found
     * wins.
     * </pre>
     *
     * <code>repeated .envoy.config.trace.v2.OpenCensusConfig.TraceContext incoming_trace_context = 8;</code>
     * @param index The index to set the value at.
     * @param value The incomingTraceContext to set.
     * @return This builder for chaining.
     */
    public Builder setIncomingTraceContext(
        int index, io.envoyproxy.envoy.config.trace.v2.OpenCensusConfig.TraceContext value) {
      if (value == null) {
        throw new NullPointerException();
      }
      ensureIncomingTraceContextIsMutable();
      incomingTraceContext_.set(index, value.getNumber());
      onChanged();
      return this;
    }
    /**
     * <pre>
     * List of incoming trace context headers we will accept. First one found
     * wins.
     * </pre>
     *
     * <code>repeated .envoy.config.trace.v2.OpenCensusConfig.TraceContext incoming_trace_context = 8;</code>
     * @param value The incomingTraceContext to add.
     * @return This builder for chaining.
     */
    public Builder addIncomingTraceContext(io.envoyproxy.envoy.config.trace.v2.OpenCensusConfig.TraceContext value) {
      if (value == null) {
        throw new NullPointerException();
      }
      ensureIncomingTraceContextIsMutable();
      incomingTraceContext_.add(value.getNumber());
      onChanged();
      return this;
    }
    /**
     * <pre>
     * List of incoming trace context headers we will accept. First one found
     * wins.
     * </pre>
     *
     * <code>repeated .envoy.config.trace.v2.OpenCensusConfig.TraceContext incoming_trace_context = 8;</code>
     * @param values The incomingTraceContext to add.
     * @return This builder for chaining.
     */
    public Builder addAllIncomingTraceContext(
        java.lang.Iterable<? extends io.envoyproxy.envoy.config.trace.v2.OpenCensusConfig.TraceContext> values) {
      ensureIncomingTraceContextIsMutable();
      for (io.envoyproxy.envoy.config.trace.v2.OpenCensusConfig.TraceContext value : values) {
        incomingTraceContext_.add(value.getNumber());
      }
      onChanged();
      return this;
    }
    /**
     * <pre>
     * List of incoming trace context headers we will accept. First one found
     * wins.
     * </pre>
     *
     * <code>repeated .envoy.config.trace.v2.OpenCensusConfig.TraceContext incoming_trace_context = 8;</code>
     * @return This builder for chaining.
     */
    public Builder clearIncomingTraceContext() {
      incomingTraceContext_ = java.util.Collections.emptyList();
      bitField0_ = (bitField0_ & ~0x00000800);
      onChanged();
      return this;
    }
    /**
     * <pre>
     * List of incoming trace context headers we will accept. First one found
     * wins.
     * </pre>
     *
     * <code>repeated .envoy.config.trace.v2.OpenCensusConfig.TraceContext incoming_trace_context = 8;</code>
     * @return A list containing the enum numeric values on the wire for incomingTraceContext.
     */
    public java.util.List<java.lang.Integer>
    getIncomingTraceContextValueList() {
      return java.util.Collections.unmodifiableList(incomingTraceContext_);
    }
    /**
     * <pre>
     * List of incoming trace context headers we will accept. First one found
     * wins.
     * </pre>
     *
     * <code>repeated .envoy.config.trace.v2.OpenCensusConfig.TraceContext incoming_trace_context = 8;</code>
     * @param index The index of the value to return.
     * @return The enum numeric value on the wire of incomingTraceContext at the given index.
     */
    public int getIncomingTraceContextValue(int index) {
      return incomingTraceContext_.get(index);
    }
    /**
     * <pre>
     * List of incoming trace context headers we will accept. First one found
     * wins.
     * </pre>
     *
     * <code>repeated .envoy.config.trace.v2.OpenCensusConfig.TraceContext incoming_trace_context = 8;</code>
     * @param index The index to set the value at.
     * @param value The enum numeric value on the wire for incomingTraceContext to set.
     * @return This builder for chaining.
     */
    public Builder setIncomingTraceContextValue(
        int index, int value) {
      ensureIncomingTraceContextIsMutable();
      incomingTraceContext_.set(index, value);
      onChanged();
      return this;
    }
    /**
     * <pre>
     * List of incoming trace context headers we will accept. First one found
     * wins.
     * </pre>
     *
     * <code>repeated .envoy.config.trace.v2.OpenCensusConfig.TraceContext incoming_trace_context = 8;</code>
     * @param value The enum numeric value on the wire for incomingTraceContext to add.
     * @return This builder for chaining.
     */
    public Builder addIncomingTraceContextValue(int value) {
      ensureIncomingTraceContextIsMutable();
      incomingTraceContext_.add(value);
      onChanged();
      return this;
    }
    /**
     * <pre>
     * List of incoming trace context headers we will accept. First one found
     * wins.
     * </pre>
     *
     * <code>repeated .envoy.config.trace.v2.OpenCensusConfig.TraceContext incoming_trace_context = 8;</code>
     * @param values The enum numeric values on the wire for incomingTraceContext to add.
     * @return This builder for chaining.
     */
    public Builder addAllIncomingTraceContextValue(
        java.lang.Iterable<java.lang.Integer> values) {
      ensureIncomingTraceContextIsMutable();
      for (int value : values) {
        incomingTraceContext_.add(value);
      }
      onChanged();
      return this;
    }

    private java.util.List<java.lang.Integer> outgoingTraceContext_ =
      java.util.Collections.emptyList();
    private void ensureOutgoingTraceContextIsMutable() {
      if (!((bitField0_ & 0x00001000) != 0)) {
        outgoingTraceContext_ = new java.util.ArrayList<java.lang.Integer>(outgoingTraceContext_);
        bitField0_ |= 0x00001000;
      }
    }
    /**
     * <pre>
     * List of outgoing trace context headers we will produce.
     * </pre>
     *
     * <code>repeated .envoy.config.trace.v2.OpenCensusConfig.TraceContext outgoing_trace_context = 9;</code>
     * @return A list containing the outgoingTraceContext.
     */
    public java.util.List<io.envoyproxy.envoy.config.trace.v2.OpenCensusConfig.TraceContext> getOutgoingTraceContextList() {
      return new com.google.protobuf.Internal.ListAdapter<
          java.lang.Integer, io.envoyproxy.envoy.config.trace.v2.OpenCensusConfig.TraceContext>(outgoingTraceContext_, outgoingTraceContext_converter_);
    }
    /**
     * <pre>
     * List of outgoing trace context headers we will produce.
     * </pre>
     *
     * <code>repeated .envoy.config.trace.v2.OpenCensusConfig.TraceContext outgoing_trace_context = 9;</code>
     * @return The count of outgoingTraceContext.
     */
    public int getOutgoingTraceContextCount() {
      return outgoingTraceContext_.size();
    }
    /**
     * <pre>
     * List of outgoing trace context headers we will produce.
     * </pre>
     *
     * <code>repeated .envoy.config.trace.v2.OpenCensusConfig.TraceContext outgoing_trace_context = 9;</code>
     * @param index The index of the element to return.
     * @return The outgoingTraceContext at the given index.
     */
    public io.envoyproxy.envoy.config.trace.v2.OpenCensusConfig.TraceContext getOutgoingTraceContext(int index) {
      return outgoingTraceContext_converter_.convert(outgoingTraceContext_.get(index));
    }
    /**
     * <pre>
     * List of outgoing trace context headers we will produce.
     * </pre>
     *
     * <code>repeated .envoy.config.trace.v2.OpenCensusConfig.TraceContext outgoing_trace_context = 9;</code>
     * @param index The index to set the value at.
     * @param value The outgoingTraceContext to set.
     * @return This builder for chaining.
     */
    public Builder setOutgoingTraceContext(
        int index, io.envoyproxy.envoy.config.trace.v2.OpenCensusConfig.TraceContext value) {
      if (value == null) {
        throw new NullPointerException();
      }
      ensureOutgoingTraceContextIsMutable();
      outgoingTraceContext_.set(index, value.getNumber());
      onChanged();
      return this;
    }
    /**
     * <pre>
     * List of outgoing trace context headers we will produce.
     * </pre>
     *
     * <code>repeated .envoy.config.trace.v2.OpenCensusConfig.TraceContext outgoing_trace_context = 9;</code>
     * @param value The outgoingTraceContext to add.
     * @return This builder for chaining.
     */
    public Builder addOutgoingTraceContext(io.envoyproxy.envoy.config.trace.v2.OpenCensusConfig.TraceContext value) {
      if (value == null) {
        throw new NullPointerException();
      }
      ensureOutgoingTraceContextIsMutable();
      outgoingTraceContext_.add(value.getNumber());
      onChanged();
      return this;
    }
    /**
     * <pre>
     * List of outgoing trace context headers we will produce.
     * </pre>
     *
     * <code>repeated .envoy.config.trace.v2.OpenCensusConfig.TraceContext outgoing_trace_context = 9;</code>
     * @param values The outgoingTraceContext to add.
     * @return This builder for chaining.
     */
    public Builder addAllOutgoingTraceContext(
        java.lang.Iterable<? extends io.envoyproxy.envoy.config.trace.v2.OpenCensusConfig.TraceContext> values) {
      ensureOutgoingTraceContextIsMutable();
      for (io.envoyproxy.envoy.config.trace.v2.OpenCensusConfig.TraceContext value : values) {
        outgoingTraceContext_.add(value.getNumber());
      }
      onChanged();
      return this;
    }
    /**
     * <pre>
     * List of outgoing trace context headers we will produce.
     * </pre>
     *
     * <code>repeated .envoy.config.trace.v2.OpenCensusConfig.TraceContext outgoing_trace_context = 9;</code>
     * @return This builder for chaining.
     */
    public Builder clearOutgoingTraceContext() {
      outgoingTraceContext_ = java.util.Collections.emptyList();
      bitField0_ = (bitField0_ & ~0x00001000);
      onChanged();
      return this;
    }
    /**
     * <pre>
     * List of outgoing trace context headers we will produce.
     * </pre>
     *
     * <code>repeated .envoy.config.trace.v2.OpenCensusConfig.TraceContext outgoing_trace_context = 9;</code>
     * @return A list containing the enum numeric values on the wire for outgoingTraceContext.
     */
    public java.util.List<java.lang.Integer>
    getOutgoingTraceContextValueList() {
      return java.util.Collections.unmodifiableList(outgoingTraceContext_);
    }
    /**
     * <pre>
     * List of outgoing trace context headers we will produce.
     * </pre>
     *
     * <code>repeated .envoy.config.trace.v2.OpenCensusConfig.TraceContext outgoing_trace_context = 9;</code>
     * @param index The index of the value to return.
     * @return The enum numeric value on the wire of outgoingTraceContext at the given index.
     */
    public int getOutgoingTraceContextValue(int index) {
      return outgoingTraceContext_.get(index);
    }
    /**
     * <pre>
     * List of outgoing trace context headers we will produce.
     * </pre>
     *
     * <code>repeated .envoy.config.trace.v2.OpenCensusConfig.TraceContext outgoing_trace_context = 9;</code>
     * @param index The index to set the value at.
     * @param value The enum numeric value on the wire for outgoingTraceContext to set.
     * @return This builder for chaining.
     */
    public Builder setOutgoingTraceContextValue(
        int index, int value) {
      ensureOutgoingTraceContextIsMutable();
      outgoingTraceContext_.set(index, value);
      onChanged();
      return this;
    }
    /**
     * <pre>
     * List of outgoing trace context headers we will produce.
     * </pre>
     *
     * <code>repeated .envoy.config.trace.v2.OpenCensusConfig.TraceContext outgoing_trace_context = 9;</code>
     * @param value The enum numeric value on the wire for outgoingTraceContext to add.
     * @return This builder for chaining.
     */
    public Builder addOutgoingTraceContextValue(int value) {
      ensureOutgoingTraceContextIsMutable();
      outgoingTraceContext_.add(value);
      onChanged();
      return this;
    }
    /**
     * <pre>
     * List of outgoing trace context headers we will produce.
     * </pre>
     *
     * <code>repeated .envoy.config.trace.v2.OpenCensusConfig.TraceContext outgoing_trace_context = 9;</code>
     * @param values The enum numeric values on the wire for outgoingTraceContext to add.
     * @return This builder for chaining.
     */
    public Builder addAllOutgoingTraceContextValue(
        java.lang.Iterable<java.lang.Integer> values) {
      ensureOutgoingTraceContextIsMutable();
      for (int value : values) {
        outgoingTraceContext_.add(value);
      }
      onChanged();
      return this;
    }
    @java.lang.Override
    public final Builder setUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return super.setUnknownFields(unknownFields);
    }

    @java.lang.Override
    public final Builder mergeUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return super.mergeUnknownFields(unknownFields);
    }


    // @@protoc_insertion_point(builder_scope:envoy.config.trace.v2.OpenCensusConfig)
  }

  // @@protoc_insertion_point(class_scope:envoy.config.trace.v2.OpenCensusConfig)
  private static final io.envoyproxy.envoy.config.trace.v2.OpenCensusConfig DEFAULT_INSTANCE;
  static {
    DEFAULT_INSTANCE = new io.envoyproxy.envoy.config.trace.v2.OpenCensusConfig();
  }

  public static io.envoyproxy.envoy.config.trace.v2.OpenCensusConfig getDefaultInstance() {
    return DEFAULT_INSTANCE;
  }

  private static final com.google.protobuf.Parser<OpenCensusConfig>
      PARSER = new com.google.protobuf.AbstractParser<OpenCensusConfig>() {
    @java.lang.Override
    public OpenCensusConfig parsePartialFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      Builder builder = newBuilder();
      try {
        builder.mergeFrom(input, extensionRegistry);
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(builder.buildPartial());
      } catch (com.google.protobuf.UninitializedMessageException e) {
        throw e.asInvalidProtocolBufferException().setUnfinishedMessage(builder.buildPartial());
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(e)
            .setUnfinishedMessage(builder.buildPartial());
      }
      return builder.buildPartial();
    }
  };

  public static com.google.protobuf.Parser<OpenCensusConfig> parser() {
    return PARSER;
  }

  @java.lang.Override
  public com.google.protobuf.Parser<OpenCensusConfig> getParserForType() {
    return PARSER;
  }

  @java.lang.Override
  public io.envoyproxy.envoy.config.trace.v2.OpenCensusConfig getDefaultInstanceForType() {
    return DEFAULT_INSTANCE;
  }

}

