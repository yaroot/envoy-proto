// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: envoy/config/core/v3/protocol.proto

package io.envoyproxy.envoy.config.core.v3;

/**
 * <pre>
 * Configures the alternate protocols cache which tracks alternate protocols that can be used to
 * make an HTTP connection to an origin server. See https://tools.ietf.org/html/rfc7838 for
 * HTTP Alternative Services and https://datatracker.ietf.org/doc/html/draft-ietf-dnsop-svcb-https-04
 * for the "HTTPS" DNS resource record.
 * </pre>
 *
 * Protobuf type {@code envoy.config.core.v3.AlternateProtocolsCacheOptions}
 */
public final class AlternateProtocolsCacheOptions extends
    com.google.protobuf.GeneratedMessageV3 implements
    // @@protoc_insertion_point(message_implements:envoy.config.core.v3.AlternateProtocolsCacheOptions)
    AlternateProtocolsCacheOptionsOrBuilder {
private static final long serialVersionUID = 0L;
  // Use AlternateProtocolsCacheOptions.newBuilder() to construct.
  private AlternateProtocolsCacheOptions(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
    super(builder);
  }
  private AlternateProtocolsCacheOptions() {
    name_ = "";
    prepopulatedEntries_ = java.util.Collections.emptyList();
  }

  @java.lang.Override
  @SuppressWarnings({"unused"})
  protected java.lang.Object newInstance(
      UnusedPrivateParameter unused) {
    return new AlternateProtocolsCacheOptions();
  }

  @java.lang.Override
  public final com.google.protobuf.UnknownFieldSet
  getUnknownFields() {
    return this.unknownFields;
  }
  private AlternateProtocolsCacheOptions(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    this();
    if (extensionRegistry == null) {
      throw new java.lang.NullPointerException();
    }
    int mutable_bitField0_ = 0;
    com.google.protobuf.UnknownFieldSet.Builder unknownFields =
        com.google.protobuf.UnknownFieldSet.newBuilder();
    try {
      boolean done = false;
      while (!done) {
        int tag = input.readTag();
        switch (tag) {
          case 0:
            done = true;
            break;
          case 10: {
            java.lang.String s = input.readStringRequireUtf8();

            name_ = s;
            break;
          }
          case 18: {
            com.google.protobuf.UInt32Value.Builder subBuilder = null;
            if (maxEntries_ != null) {
              subBuilder = maxEntries_.toBuilder();
            }
            maxEntries_ = input.readMessage(com.google.protobuf.UInt32Value.parser(), extensionRegistry);
            if (subBuilder != null) {
              subBuilder.mergeFrom(maxEntries_);
              maxEntries_ = subBuilder.buildPartial();
            }

            break;
          }
          case 26: {
            io.envoyproxy.envoy.config.core.v3.TypedExtensionConfig.Builder subBuilder = null;
            if (keyValueStoreConfig_ != null) {
              subBuilder = keyValueStoreConfig_.toBuilder();
            }
            keyValueStoreConfig_ = input.readMessage(io.envoyproxy.envoy.config.core.v3.TypedExtensionConfig.parser(), extensionRegistry);
            if (subBuilder != null) {
              subBuilder.mergeFrom(keyValueStoreConfig_);
              keyValueStoreConfig_ = subBuilder.buildPartial();
            }

            break;
          }
          case 34: {
            if (!((mutable_bitField0_ & 0x00000001) != 0)) {
              prepopulatedEntries_ = new java.util.ArrayList<io.envoyproxy.envoy.config.core.v3.AlternateProtocolsCacheOptions.AlternateProtocolsCacheEntry>();
              mutable_bitField0_ |= 0x00000001;
            }
            prepopulatedEntries_.add(
                input.readMessage(io.envoyproxy.envoy.config.core.v3.AlternateProtocolsCacheOptions.AlternateProtocolsCacheEntry.parser(), extensionRegistry));
            break;
          }
          default: {
            if (!parseUnknownField(
                input, unknownFields, extensionRegistry, tag)) {
              done = true;
            }
            break;
          }
        }
      }
    } catch (com.google.protobuf.InvalidProtocolBufferException e) {
      throw e.setUnfinishedMessage(this);
    } catch (com.google.protobuf.UninitializedMessageException e) {
      throw e.asInvalidProtocolBufferException().setUnfinishedMessage(this);
    } catch (java.io.IOException e) {
      throw new com.google.protobuf.InvalidProtocolBufferException(
          e).setUnfinishedMessage(this);
    } finally {
      if (((mutable_bitField0_ & 0x00000001) != 0)) {
        prepopulatedEntries_ = java.util.Collections.unmodifiableList(prepopulatedEntries_);
      }
      this.unknownFields = unknownFields.build();
      makeExtensionsImmutable();
    }
  }
  public static final com.google.protobuf.Descriptors.Descriptor
      getDescriptor() {
    return io.envoyproxy.envoy.config.core.v3.ProtocolProto.internal_static_envoy_config_core_v3_AlternateProtocolsCacheOptions_descriptor;
  }

  @java.lang.Override
  protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internalGetFieldAccessorTable() {
    return io.envoyproxy.envoy.config.core.v3.ProtocolProto.internal_static_envoy_config_core_v3_AlternateProtocolsCacheOptions_fieldAccessorTable
        .ensureFieldAccessorsInitialized(
            io.envoyproxy.envoy.config.core.v3.AlternateProtocolsCacheOptions.class, io.envoyproxy.envoy.config.core.v3.AlternateProtocolsCacheOptions.Builder.class);
  }

  public interface AlternateProtocolsCacheEntryOrBuilder extends
      // @@protoc_insertion_point(interface_extends:envoy.config.core.v3.AlternateProtocolsCacheOptions.AlternateProtocolsCacheEntry)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <pre>
     * The host name for the alternate protocol entry.
     * </pre>
     *
     * <code>string hostname = 1 [(.validate.rules) = { ... }</code>
     * @return The hostname.
     */
    java.lang.String getHostname();
    /**
     * <pre>
     * The host name for the alternate protocol entry.
     * </pre>
     *
     * <code>string hostname = 1 [(.validate.rules) = { ... }</code>
     * @return The bytes for hostname.
     */
    com.google.protobuf.ByteString
        getHostnameBytes();

    /**
     * <pre>
     * The port for the alternate protocol entry.
     * </pre>
     *
     * <code>uint32 port = 2 [(.validate.rules) = { ... }</code>
     * @return The port.
     */
    int getPort();
  }
  /**
   * <pre>
   * Allows pre-populating the cache with HTTP/3 alternate protocols entries with a 7 day lifetime.
   * This will cause Envoy to attempt HTTP/3 to those upstreams, even if the upstreams have not
   * advertised HTTP/3 support. These entries will be overwritten by alt-svc
   * response headers or cached values.
   * As with regular cached entries, if the origin response would result in clearing an existing
   * alternate protocol cache entry, pre-populated entries will also be cleared.
   * Adding a cache entry with hostname=foo.com port=123 is the equivalent of getting
   * response headers
   * alt-svc: h3=:"123"; ma=86400" in a response to a request to foo.com:123
   * </pre>
   *
   * Protobuf type {@code envoy.config.core.v3.AlternateProtocolsCacheOptions.AlternateProtocolsCacheEntry}
   */
  public static final class AlternateProtocolsCacheEntry extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:envoy.config.core.v3.AlternateProtocolsCacheOptions.AlternateProtocolsCacheEntry)
      AlternateProtocolsCacheEntryOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use AlternateProtocolsCacheEntry.newBuilder() to construct.
    private AlternateProtocolsCacheEntry(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private AlternateProtocolsCacheEntry() {
      hostname_ = "";
    }

    @java.lang.Override
    @SuppressWarnings({"unused"})
    protected java.lang.Object newInstance(
        UnusedPrivateParameter unused) {
      return new AlternateProtocolsCacheEntry();
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private AlternateProtocolsCacheEntry(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 10: {
              java.lang.String s = input.readStringRequireUtf8();

              hostname_ = s;
              break;
            }
            case 16: {

              port_ = input.readUInt32();
              break;
            }
            default: {
              if (!parseUnknownField(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (com.google.protobuf.UninitializedMessageException e) {
        throw e.asInvalidProtocolBufferException().setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return io.envoyproxy.envoy.config.core.v3.ProtocolProto.internal_static_envoy_config_core_v3_AlternateProtocolsCacheOptions_AlternateProtocolsCacheEntry_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return io.envoyproxy.envoy.config.core.v3.ProtocolProto.internal_static_envoy_config_core_v3_AlternateProtocolsCacheOptions_AlternateProtocolsCacheEntry_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              io.envoyproxy.envoy.config.core.v3.AlternateProtocolsCacheOptions.AlternateProtocolsCacheEntry.class, io.envoyproxy.envoy.config.core.v3.AlternateProtocolsCacheOptions.AlternateProtocolsCacheEntry.Builder.class);
    }

    public static final int HOSTNAME_FIELD_NUMBER = 1;
    private volatile java.lang.Object hostname_;
    /**
     * <pre>
     * The host name for the alternate protocol entry.
     * </pre>
     *
     * <code>string hostname = 1 [(.validate.rules) = { ... }</code>
     * @return The hostname.
     */
    @java.lang.Override
    public java.lang.String getHostname() {
      java.lang.Object ref = hostname_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        hostname_ = s;
        return s;
      }
    }
    /**
     * <pre>
     * The host name for the alternate protocol entry.
     * </pre>
     *
     * <code>string hostname = 1 [(.validate.rules) = { ... }</code>
     * @return The bytes for hostname.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString
        getHostnameBytes() {
      java.lang.Object ref = hostname_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        hostname_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int PORT_FIELD_NUMBER = 2;
    private int port_;
    /**
     * <pre>
     * The port for the alternate protocol entry.
     * </pre>
     *
     * <code>uint32 port = 2 [(.validate.rules) = { ... }</code>
     * @return The port.
     */
    @java.lang.Override
    public int getPort() {
      return port_;
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(hostname_)) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 1, hostname_);
      }
      if (port_ != 0) {
        output.writeUInt32(2, port_);
      }
      unknownFields.writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(hostname_)) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(1, hostname_);
      }
      if (port_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(2, port_);
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof io.envoyproxy.envoy.config.core.v3.AlternateProtocolsCacheOptions.AlternateProtocolsCacheEntry)) {
        return super.equals(obj);
      }
      io.envoyproxy.envoy.config.core.v3.AlternateProtocolsCacheOptions.AlternateProtocolsCacheEntry other = (io.envoyproxy.envoy.config.core.v3.AlternateProtocolsCacheOptions.AlternateProtocolsCacheEntry) obj;

      if (!getHostname()
          .equals(other.getHostname())) return false;
      if (getPort()
          != other.getPort()) return false;
      if (!unknownFields.equals(other.unknownFields)) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      hash = (37 * hash) + HOSTNAME_FIELD_NUMBER;
      hash = (53 * hash) + getHostname().hashCode();
      hash = (37 * hash) + PORT_FIELD_NUMBER;
      hash = (53 * hash) + getPort();
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static io.envoyproxy.envoy.config.core.v3.AlternateProtocolsCacheOptions.AlternateProtocolsCacheEntry parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static io.envoyproxy.envoy.config.core.v3.AlternateProtocolsCacheOptions.AlternateProtocolsCacheEntry parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static io.envoyproxy.envoy.config.core.v3.AlternateProtocolsCacheOptions.AlternateProtocolsCacheEntry parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static io.envoyproxy.envoy.config.core.v3.AlternateProtocolsCacheOptions.AlternateProtocolsCacheEntry parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static io.envoyproxy.envoy.config.core.v3.AlternateProtocolsCacheOptions.AlternateProtocolsCacheEntry parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static io.envoyproxy.envoy.config.core.v3.AlternateProtocolsCacheOptions.AlternateProtocolsCacheEntry parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static io.envoyproxy.envoy.config.core.v3.AlternateProtocolsCacheOptions.AlternateProtocolsCacheEntry parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static io.envoyproxy.envoy.config.core.v3.AlternateProtocolsCacheOptions.AlternateProtocolsCacheEntry parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static io.envoyproxy.envoy.config.core.v3.AlternateProtocolsCacheOptions.AlternateProtocolsCacheEntry parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static io.envoyproxy.envoy.config.core.v3.AlternateProtocolsCacheOptions.AlternateProtocolsCacheEntry parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static io.envoyproxy.envoy.config.core.v3.AlternateProtocolsCacheOptions.AlternateProtocolsCacheEntry parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static io.envoyproxy.envoy.config.core.v3.AlternateProtocolsCacheOptions.AlternateProtocolsCacheEntry parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(io.envoyproxy.envoy.config.core.v3.AlternateProtocolsCacheOptions.AlternateProtocolsCacheEntry prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * <pre>
     * Allows pre-populating the cache with HTTP/3 alternate protocols entries with a 7 day lifetime.
     * This will cause Envoy to attempt HTTP/3 to those upstreams, even if the upstreams have not
     * advertised HTTP/3 support. These entries will be overwritten by alt-svc
     * response headers or cached values.
     * As with regular cached entries, if the origin response would result in clearing an existing
     * alternate protocol cache entry, pre-populated entries will also be cleared.
     * Adding a cache entry with hostname=foo.com port=123 is the equivalent of getting
     * response headers
     * alt-svc: h3=:"123"; ma=86400" in a response to a request to foo.com:123
     * </pre>
     *
     * Protobuf type {@code envoy.config.core.v3.AlternateProtocolsCacheOptions.AlternateProtocolsCacheEntry}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:envoy.config.core.v3.AlternateProtocolsCacheOptions.AlternateProtocolsCacheEntry)
        io.envoyproxy.envoy.config.core.v3.AlternateProtocolsCacheOptions.AlternateProtocolsCacheEntryOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return io.envoyproxy.envoy.config.core.v3.ProtocolProto.internal_static_envoy_config_core_v3_AlternateProtocolsCacheOptions_AlternateProtocolsCacheEntry_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return io.envoyproxy.envoy.config.core.v3.ProtocolProto.internal_static_envoy_config_core_v3_AlternateProtocolsCacheOptions_AlternateProtocolsCacheEntry_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                io.envoyproxy.envoy.config.core.v3.AlternateProtocolsCacheOptions.AlternateProtocolsCacheEntry.class, io.envoyproxy.envoy.config.core.v3.AlternateProtocolsCacheOptions.AlternateProtocolsCacheEntry.Builder.class);
      }

      // Construct using io.envoyproxy.envoy.config.core.v3.AlternateProtocolsCacheOptions.AlternateProtocolsCacheEntry.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        hostname_ = "";

        port_ = 0;

        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return io.envoyproxy.envoy.config.core.v3.ProtocolProto.internal_static_envoy_config_core_v3_AlternateProtocolsCacheOptions_AlternateProtocolsCacheEntry_descriptor;
      }

      @java.lang.Override
      public io.envoyproxy.envoy.config.core.v3.AlternateProtocolsCacheOptions.AlternateProtocolsCacheEntry getDefaultInstanceForType() {
        return io.envoyproxy.envoy.config.core.v3.AlternateProtocolsCacheOptions.AlternateProtocolsCacheEntry.getDefaultInstance();
      }

      @java.lang.Override
      public io.envoyproxy.envoy.config.core.v3.AlternateProtocolsCacheOptions.AlternateProtocolsCacheEntry build() {
        io.envoyproxy.envoy.config.core.v3.AlternateProtocolsCacheOptions.AlternateProtocolsCacheEntry result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public io.envoyproxy.envoy.config.core.v3.AlternateProtocolsCacheOptions.AlternateProtocolsCacheEntry buildPartial() {
        io.envoyproxy.envoy.config.core.v3.AlternateProtocolsCacheOptions.AlternateProtocolsCacheEntry result = new io.envoyproxy.envoy.config.core.v3.AlternateProtocolsCacheOptions.AlternateProtocolsCacheEntry(this);
        result.hostname_ = hostname_;
        result.port_ = port_;
        onBuilt();
        return result;
      }

      @java.lang.Override
      public Builder clone() {
        return super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof io.envoyproxy.envoy.config.core.v3.AlternateProtocolsCacheOptions.AlternateProtocolsCacheEntry) {
          return mergeFrom((io.envoyproxy.envoy.config.core.v3.AlternateProtocolsCacheOptions.AlternateProtocolsCacheEntry)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(io.envoyproxy.envoy.config.core.v3.AlternateProtocolsCacheOptions.AlternateProtocolsCacheEntry other) {
        if (other == io.envoyproxy.envoy.config.core.v3.AlternateProtocolsCacheOptions.AlternateProtocolsCacheEntry.getDefaultInstance()) return this;
        if (!other.getHostname().isEmpty()) {
          hostname_ = other.hostname_;
          onChanged();
        }
        if (other.getPort() != 0) {
          setPort(other.getPort());
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        io.envoyproxy.envoy.config.core.v3.AlternateProtocolsCacheOptions.AlternateProtocolsCacheEntry parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (io.envoyproxy.envoy.config.core.v3.AlternateProtocolsCacheOptions.AlternateProtocolsCacheEntry) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }

      private java.lang.Object hostname_ = "";
      /**
       * <pre>
       * The host name for the alternate protocol entry.
       * </pre>
       *
       * <code>string hostname = 1 [(.validate.rules) = { ... }</code>
       * @return The hostname.
       */
      public java.lang.String getHostname() {
        java.lang.Object ref = hostname_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          hostname_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <pre>
       * The host name for the alternate protocol entry.
       * </pre>
       *
       * <code>string hostname = 1 [(.validate.rules) = { ... }</code>
       * @return The bytes for hostname.
       */
      public com.google.protobuf.ByteString
          getHostnameBytes() {
        java.lang.Object ref = hostname_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          hostname_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       * The host name for the alternate protocol entry.
       * </pre>
       *
       * <code>string hostname = 1 [(.validate.rules) = { ... }</code>
       * @param value The hostname to set.
       * @return This builder for chaining.
       */
      public Builder setHostname(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        hostname_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * The host name for the alternate protocol entry.
       * </pre>
       *
       * <code>string hostname = 1 [(.validate.rules) = { ... }</code>
       * @return This builder for chaining.
       */
      public Builder clearHostname() {
        
        hostname_ = getDefaultInstance().getHostname();
        onChanged();
        return this;
      }
      /**
       * <pre>
       * The host name for the alternate protocol entry.
       * </pre>
       *
       * <code>string hostname = 1 [(.validate.rules) = { ... }</code>
       * @param value The bytes for hostname to set.
       * @return This builder for chaining.
       */
      public Builder setHostnameBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        hostname_ = value;
        onChanged();
        return this;
      }

      private int port_ ;
      /**
       * <pre>
       * The port for the alternate protocol entry.
       * </pre>
       *
       * <code>uint32 port = 2 [(.validate.rules) = { ... }</code>
       * @return The port.
       */
      @java.lang.Override
      public int getPort() {
        return port_;
      }
      /**
       * <pre>
       * The port for the alternate protocol entry.
       * </pre>
       *
       * <code>uint32 port = 2 [(.validate.rules) = { ... }</code>
       * @param value The port to set.
       * @return This builder for chaining.
       */
      public Builder setPort(int value) {
        
        port_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * The port for the alternate protocol entry.
       * </pre>
       *
       * <code>uint32 port = 2 [(.validate.rules) = { ... }</code>
       * @return This builder for chaining.
       */
      public Builder clearPort() {
        
        port_ = 0;
        onChanged();
        return this;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:envoy.config.core.v3.AlternateProtocolsCacheOptions.AlternateProtocolsCacheEntry)
    }

    // @@protoc_insertion_point(class_scope:envoy.config.core.v3.AlternateProtocolsCacheOptions.AlternateProtocolsCacheEntry)
    private static final io.envoyproxy.envoy.config.core.v3.AlternateProtocolsCacheOptions.AlternateProtocolsCacheEntry DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new io.envoyproxy.envoy.config.core.v3.AlternateProtocolsCacheOptions.AlternateProtocolsCacheEntry();
    }

    public static io.envoyproxy.envoy.config.core.v3.AlternateProtocolsCacheOptions.AlternateProtocolsCacheEntry getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<AlternateProtocolsCacheEntry>
        PARSER = new com.google.protobuf.AbstractParser<AlternateProtocolsCacheEntry>() {
      @java.lang.Override
      public AlternateProtocolsCacheEntry parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new AlternateProtocolsCacheEntry(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<AlternateProtocolsCacheEntry> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<AlternateProtocolsCacheEntry> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public io.envoyproxy.envoy.config.core.v3.AlternateProtocolsCacheOptions.AlternateProtocolsCacheEntry getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public static final int NAME_FIELD_NUMBER = 1;
  private volatile java.lang.Object name_;
  /**
   * <pre>
   * The name of the cache. Multiple named caches allow independent alternate protocols cache
   * configurations to operate within a single Envoy process using different configurations. All
   * alternate protocols cache options with the same name *must* be equal in all fields when
   * referenced from different configuration components. Configuration will fail to load if this is
   * not the case.
   * </pre>
   *
   * <code>string name = 1 [(.validate.rules) = { ... }</code>
   * @return The name.
   */
  @java.lang.Override
  public java.lang.String getName() {
    java.lang.Object ref = name_;
    if (ref instanceof java.lang.String) {
      return (java.lang.String) ref;
    } else {
      com.google.protobuf.ByteString bs = 
          (com.google.protobuf.ByteString) ref;
      java.lang.String s = bs.toStringUtf8();
      name_ = s;
      return s;
    }
  }
  /**
   * <pre>
   * The name of the cache. Multiple named caches allow independent alternate protocols cache
   * configurations to operate within a single Envoy process using different configurations. All
   * alternate protocols cache options with the same name *must* be equal in all fields when
   * referenced from different configuration components. Configuration will fail to load if this is
   * not the case.
   * </pre>
   *
   * <code>string name = 1 [(.validate.rules) = { ... }</code>
   * @return The bytes for name.
   */
  @java.lang.Override
  public com.google.protobuf.ByteString
      getNameBytes() {
    java.lang.Object ref = name_;
    if (ref instanceof java.lang.String) {
      com.google.protobuf.ByteString b = 
          com.google.protobuf.ByteString.copyFromUtf8(
              (java.lang.String) ref);
      name_ = b;
      return b;
    } else {
      return (com.google.protobuf.ByteString) ref;
    }
  }

  public static final int MAX_ENTRIES_FIELD_NUMBER = 2;
  private com.google.protobuf.UInt32Value maxEntries_;
  /**
   * <pre>
   * The maximum number of entries that the cache will hold. If not specified defaults to 1024.
   * .. note:
   *   The implementation is approximate and enforced independently on each worker thread, thus
   *   it is possible for the maximum entries in the cache to go slightly above the configured
   *   value depending on timing. This is similar to how other circuit breakers work.
   * </pre>
   *
   * <code>.google.protobuf.UInt32Value max_entries = 2 [(.validate.rules) = { ... }</code>
   * @return Whether the maxEntries field is set.
   */
  @java.lang.Override
  public boolean hasMaxEntries() {
    return maxEntries_ != null;
  }
  /**
   * <pre>
   * The maximum number of entries that the cache will hold. If not specified defaults to 1024.
   * .. note:
   *   The implementation is approximate and enforced independently on each worker thread, thus
   *   it is possible for the maximum entries in the cache to go slightly above the configured
   *   value depending on timing. This is similar to how other circuit breakers work.
   * </pre>
   *
   * <code>.google.protobuf.UInt32Value max_entries = 2 [(.validate.rules) = { ... }</code>
   * @return The maxEntries.
   */
  @java.lang.Override
  public com.google.protobuf.UInt32Value getMaxEntries() {
    return maxEntries_ == null ? com.google.protobuf.UInt32Value.getDefaultInstance() : maxEntries_;
  }
  /**
   * <pre>
   * The maximum number of entries that the cache will hold. If not specified defaults to 1024.
   * .. note:
   *   The implementation is approximate and enforced independently on each worker thread, thus
   *   it is possible for the maximum entries in the cache to go slightly above the configured
   *   value depending on timing. This is similar to how other circuit breakers work.
   * </pre>
   *
   * <code>.google.protobuf.UInt32Value max_entries = 2 [(.validate.rules) = { ... }</code>
   */
  @java.lang.Override
  public com.google.protobuf.UInt32ValueOrBuilder getMaxEntriesOrBuilder() {
    return getMaxEntries();
  }

  public static final int KEY_VALUE_STORE_CONFIG_FIELD_NUMBER = 3;
  private io.envoyproxy.envoy.config.core.v3.TypedExtensionConfig keyValueStoreConfig_;
  /**
   * <pre>
   * Allows configuring a persistent
   * :ref:`key value store &lt;envoy_v3_api_msg_config.common.key_value.v3.KeyValueStoreConfig&gt;` to flush
   * alternate protocols entries to disk.
   * This function is currently only supported if concurrency is 1
   * Cached entries will take precedence over pre-populated entries below.
   * </pre>
   *
   * <code>.envoy.config.core.v3.TypedExtensionConfig key_value_store_config = 3;</code>
   * @return Whether the keyValueStoreConfig field is set.
   */
  @java.lang.Override
  public boolean hasKeyValueStoreConfig() {
    return keyValueStoreConfig_ != null;
  }
  /**
   * <pre>
   * Allows configuring a persistent
   * :ref:`key value store &lt;envoy_v3_api_msg_config.common.key_value.v3.KeyValueStoreConfig&gt;` to flush
   * alternate protocols entries to disk.
   * This function is currently only supported if concurrency is 1
   * Cached entries will take precedence over pre-populated entries below.
   * </pre>
   *
   * <code>.envoy.config.core.v3.TypedExtensionConfig key_value_store_config = 3;</code>
   * @return The keyValueStoreConfig.
   */
  @java.lang.Override
  public io.envoyproxy.envoy.config.core.v3.TypedExtensionConfig getKeyValueStoreConfig() {
    return keyValueStoreConfig_ == null ? io.envoyproxy.envoy.config.core.v3.TypedExtensionConfig.getDefaultInstance() : keyValueStoreConfig_;
  }
  /**
   * <pre>
   * Allows configuring a persistent
   * :ref:`key value store &lt;envoy_v3_api_msg_config.common.key_value.v3.KeyValueStoreConfig&gt;` to flush
   * alternate protocols entries to disk.
   * This function is currently only supported if concurrency is 1
   * Cached entries will take precedence over pre-populated entries below.
   * </pre>
   *
   * <code>.envoy.config.core.v3.TypedExtensionConfig key_value_store_config = 3;</code>
   */
  @java.lang.Override
  public io.envoyproxy.envoy.config.core.v3.TypedExtensionConfigOrBuilder getKeyValueStoreConfigOrBuilder() {
    return getKeyValueStoreConfig();
  }

  public static final int PREPOPULATED_ENTRIES_FIELD_NUMBER = 4;
  private java.util.List<io.envoyproxy.envoy.config.core.v3.AlternateProtocolsCacheOptions.AlternateProtocolsCacheEntry> prepopulatedEntries_;
  /**
   * <pre>
   * Allows pre-populating the cache with entries, as described above.
   * </pre>
   *
   * <code>repeated .envoy.config.core.v3.AlternateProtocolsCacheOptions.AlternateProtocolsCacheEntry prepopulated_entries = 4;</code>
   */
  @java.lang.Override
  public java.util.List<io.envoyproxy.envoy.config.core.v3.AlternateProtocolsCacheOptions.AlternateProtocolsCacheEntry> getPrepopulatedEntriesList() {
    return prepopulatedEntries_;
  }
  /**
   * <pre>
   * Allows pre-populating the cache with entries, as described above.
   * </pre>
   *
   * <code>repeated .envoy.config.core.v3.AlternateProtocolsCacheOptions.AlternateProtocolsCacheEntry prepopulated_entries = 4;</code>
   */
  @java.lang.Override
  public java.util.List<? extends io.envoyproxy.envoy.config.core.v3.AlternateProtocolsCacheOptions.AlternateProtocolsCacheEntryOrBuilder> 
      getPrepopulatedEntriesOrBuilderList() {
    return prepopulatedEntries_;
  }
  /**
   * <pre>
   * Allows pre-populating the cache with entries, as described above.
   * </pre>
   *
   * <code>repeated .envoy.config.core.v3.AlternateProtocolsCacheOptions.AlternateProtocolsCacheEntry prepopulated_entries = 4;</code>
   */
  @java.lang.Override
  public int getPrepopulatedEntriesCount() {
    return prepopulatedEntries_.size();
  }
  /**
   * <pre>
   * Allows pre-populating the cache with entries, as described above.
   * </pre>
   *
   * <code>repeated .envoy.config.core.v3.AlternateProtocolsCacheOptions.AlternateProtocolsCacheEntry prepopulated_entries = 4;</code>
   */
  @java.lang.Override
  public io.envoyproxy.envoy.config.core.v3.AlternateProtocolsCacheOptions.AlternateProtocolsCacheEntry getPrepopulatedEntries(int index) {
    return prepopulatedEntries_.get(index);
  }
  /**
   * <pre>
   * Allows pre-populating the cache with entries, as described above.
   * </pre>
   *
   * <code>repeated .envoy.config.core.v3.AlternateProtocolsCacheOptions.AlternateProtocolsCacheEntry prepopulated_entries = 4;</code>
   */
  @java.lang.Override
  public io.envoyproxy.envoy.config.core.v3.AlternateProtocolsCacheOptions.AlternateProtocolsCacheEntryOrBuilder getPrepopulatedEntriesOrBuilder(
      int index) {
    return prepopulatedEntries_.get(index);
  }

  private byte memoizedIsInitialized = -1;
  @java.lang.Override
  public final boolean isInitialized() {
    byte isInitialized = memoizedIsInitialized;
    if (isInitialized == 1) return true;
    if (isInitialized == 0) return false;

    memoizedIsInitialized = 1;
    return true;
  }

  @java.lang.Override
  public void writeTo(com.google.protobuf.CodedOutputStream output)
                      throws java.io.IOException {
    if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(name_)) {
      com.google.protobuf.GeneratedMessageV3.writeString(output, 1, name_);
    }
    if (maxEntries_ != null) {
      output.writeMessage(2, getMaxEntries());
    }
    if (keyValueStoreConfig_ != null) {
      output.writeMessage(3, getKeyValueStoreConfig());
    }
    for (int i = 0; i < prepopulatedEntries_.size(); i++) {
      output.writeMessage(4, prepopulatedEntries_.get(i));
    }
    unknownFields.writeTo(output);
  }

  @java.lang.Override
  public int getSerializedSize() {
    int size = memoizedSize;
    if (size != -1) return size;

    size = 0;
    if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(name_)) {
      size += com.google.protobuf.GeneratedMessageV3.computeStringSize(1, name_);
    }
    if (maxEntries_ != null) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(2, getMaxEntries());
    }
    if (keyValueStoreConfig_ != null) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(3, getKeyValueStoreConfig());
    }
    for (int i = 0; i < prepopulatedEntries_.size(); i++) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(4, prepopulatedEntries_.get(i));
    }
    size += unknownFields.getSerializedSize();
    memoizedSize = size;
    return size;
  }

  @java.lang.Override
  public boolean equals(final java.lang.Object obj) {
    if (obj == this) {
     return true;
    }
    if (!(obj instanceof io.envoyproxy.envoy.config.core.v3.AlternateProtocolsCacheOptions)) {
      return super.equals(obj);
    }
    io.envoyproxy.envoy.config.core.v3.AlternateProtocolsCacheOptions other = (io.envoyproxy.envoy.config.core.v3.AlternateProtocolsCacheOptions) obj;

    if (!getName()
        .equals(other.getName())) return false;
    if (hasMaxEntries() != other.hasMaxEntries()) return false;
    if (hasMaxEntries()) {
      if (!getMaxEntries()
          .equals(other.getMaxEntries())) return false;
    }
    if (hasKeyValueStoreConfig() != other.hasKeyValueStoreConfig()) return false;
    if (hasKeyValueStoreConfig()) {
      if (!getKeyValueStoreConfig()
          .equals(other.getKeyValueStoreConfig())) return false;
    }
    if (!getPrepopulatedEntriesList()
        .equals(other.getPrepopulatedEntriesList())) return false;
    if (!unknownFields.equals(other.unknownFields)) return false;
    return true;
  }

  @java.lang.Override
  public int hashCode() {
    if (memoizedHashCode != 0) {
      return memoizedHashCode;
    }
    int hash = 41;
    hash = (19 * hash) + getDescriptor().hashCode();
    hash = (37 * hash) + NAME_FIELD_NUMBER;
    hash = (53 * hash) + getName().hashCode();
    if (hasMaxEntries()) {
      hash = (37 * hash) + MAX_ENTRIES_FIELD_NUMBER;
      hash = (53 * hash) + getMaxEntries().hashCode();
    }
    if (hasKeyValueStoreConfig()) {
      hash = (37 * hash) + KEY_VALUE_STORE_CONFIG_FIELD_NUMBER;
      hash = (53 * hash) + getKeyValueStoreConfig().hashCode();
    }
    if (getPrepopulatedEntriesCount() > 0) {
      hash = (37 * hash) + PREPOPULATED_ENTRIES_FIELD_NUMBER;
      hash = (53 * hash) + getPrepopulatedEntriesList().hashCode();
    }
    hash = (29 * hash) + unknownFields.hashCode();
    memoizedHashCode = hash;
    return hash;
  }

  public static io.envoyproxy.envoy.config.core.v3.AlternateProtocolsCacheOptions parseFrom(
      java.nio.ByteBuffer data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static io.envoyproxy.envoy.config.core.v3.AlternateProtocolsCacheOptions parseFrom(
      java.nio.ByteBuffer data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static io.envoyproxy.envoy.config.core.v3.AlternateProtocolsCacheOptions parseFrom(
      com.google.protobuf.ByteString data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static io.envoyproxy.envoy.config.core.v3.AlternateProtocolsCacheOptions parseFrom(
      com.google.protobuf.ByteString data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static io.envoyproxy.envoy.config.core.v3.AlternateProtocolsCacheOptions parseFrom(byte[] data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static io.envoyproxy.envoy.config.core.v3.AlternateProtocolsCacheOptions parseFrom(
      byte[] data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static io.envoyproxy.envoy.config.core.v3.AlternateProtocolsCacheOptions parseFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input);
  }
  public static io.envoyproxy.envoy.config.core.v3.AlternateProtocolsCacheOptions parseFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input, extensionRegistry);
  }
  public static io.envoyproxy.envoy.config.core.v3.AlternateProtocolsCacheOptions parseDelimitedFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseDelimitedWithIOException(PARSER, input);
  }
  public static io.envoyproxy.envoy.config.core.v3.AlternateProtocolsCacheOptions parseDelimitedFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
  }
  public static io.envoyproxy.envoy.config.core.v3.AlternateProtocolsCacheOptions parseFrom(
      com.google.protobuf.CodedInputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input);
  }
  public static io.envoyproxy.envoy.config.core.v3.AlternateProtocolsCacheOptions parseFrom(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input, extensionRegistry);
  }

  @java.lang.Override
  public Builder newBuilderForType() { return newBuilder(); }
  public static Builder newBuilder() {
    return DEFAULT_INSTANCE.toBuilder();
  }
  public static Builder newBuilder(io.envoyproxy.envoy.config.core.v3.AlternateProtocolsCacheOptions prototype) {
    return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
  }
  @java.lang.Override
  public Builder toBuilder() {
    return this == DEFAULT_INSTANCE
        ? new Builder() : new Builder().mergeFrom(this);
  }

  @java.lang.Override
  protected Builder newBuilderForType(
      com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
    Builder builder = new Builder(parent);
    return builder;
  }
  /**
   * <pre>
   * Configures the alternate protocols cache which tracks alternate protocols that can be used to
   * make an HTTP connection to an origin server. See https://tools.ietf.org/html/rfc7838 for
   * HTTP Alternative Services and https://datatracker.ietf.org/doc/html/draft-ietf-dnsop-svcb-https-04
   * for the "HTTPS" DNS resource record.
   * </pre>
   *
   * Protobuf type {@code envoy.config.core.v3.AlternateProtocolsCacheOptions}
   */
  public static final class Builder extends
      com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
      // @@protoc_insertion_point(builder_implements:envoy.config.core.v3.AlternateProtocolsCacheOptions)
      io.envoyproxy.envoy.config.core.v3.AlternateProtocolsCacheOptionsOrBuilder {
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return io.envoyproxy.envoy.config.core.v3.ProtocolProto.internal_static_envoy_config_core_v3_AlternateProtocolsCacheOptions_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return io.envoyproxy.envoy.config.core.v3.ProtocolProto.internal_static_envoy_config_core_v3_AlternateProtocolsCacheOptions_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              io.envoyproxy.envoy.config.core.v3.AlternateProtocolsCacheOptions.class, io.envoyproxy.envoy.config.core.v3.AlternateProtocolsCacheOptions.Builder.class);
    }

    // Construct using io.envoyproxy.envoy.config.core.v3.AlternateProtocolsCacheOptions.newBuilder()
    private Builder() {
      maybeForceBuilderInitialization();
    }

    private Builder(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      super(parent);
      maybeForceBuilderInitialization();
    }
    private void maybeForceBuilderInitialization() {
      if (com.google.protobuf.GeneratedMessageV3
              .alwaysUseFieldBuilders) {
        getPrepopulatedEntriesFieldBuilder();
      }
    }
    @java.lang.Override
    public Builder clear() {
      super.clear();
      name_ = "";

      if (maxEntriesBuilder_ == null) {
        maxEntries_ = null;
      } else {
        maxEntries_ = null;
        maxEntriesBuilder_ = null;
      }
      if (keyValueStoreConfigBuilder_ == null) {
        keyValueStoreConfig_ = null;
      } else {
        keyValueStoreConfig_ = null;
        keyValueStoreConfigBuilder_ = null;
      }
      if (prepopulatedEntriesBuilder_ == null) {
        prepopulatedEntries_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000001);
      } else {
        prepopulatedEntriesBuilder_.clear();
      }
      return this;
    }

    @java.lang.Override
    public com.google.protobuf.Descriptors.Descriptor
        getDescriptorForType() {
      return io.envoyproxy.envoy.config.core.v3.ProtocolProto.internal_static_envoy_config_core_v3_AlternateProtocolsCacheOptions_descriptor;
    }

    @java.lang.Override
    public io.envoyproxy.envoy.config.core.v3.AlternateProtocolsCacheOptions getDefaultInstanceForType() {
      return io.envoyproxy.envoy.config.core.v3.AlternateProtocolsCacheOptions.getDefaultInstance();
    }

    @java.lang.Override
    public io.envoyproxy.envoy.config.core.v3.AlternateProtocolsCacheOptions build() {
      io.envoyproxy.envoy.config.core.v3.AlternateProtocolsCacheOptions result = buildPartial();
      if (!result.isInitialized()) {
        throw newUninitializedMessageException(result);
      }
      return result;
    }

    @java.lang.Override
    public io.envoyproxy.envoy.config.core.v3.AlternateProtocolsCacheOptions buildPartial() {
      io.envoyproxy.envoy.config.core.v3.AlternateProtocolsCacheOptions result = new io.envoyproxy.envoy.config.core.v3.AlternateProtocolsCacheOptions(this);
      int from_bitField0_ = bitField0_;
      result.name_ = name_;
      if (maxEntriesBuilder_ == null) {
        result.maxEntries_ = maxEntries_;
      } else {
        result.maxEntries_ = maxEntriesBuilder_.build();
      }
      if (keyValueStoreConfigBuilder_ == null) {
        result.keyValueStoreConfig_ = keyValueStoreConfig_;
      } else {
        result.keyValueStoreConfig_ = keyValueStoreConfigBuilder_.build();
      }
      if (prepopulatedEntriesBuilder_ == null) {
        if (((bitField0_ & 0x00000001) != 0)) {
          prepopulatedEntries_ = java.util.Collections.unmodifiableList(prepopulatedEntries_);
          bitField0_ = (bitField0_ & ~0x00000001);
        }
        result.prepopulatedEntries_ = prepopulatedEntries_;
      } else {
        result.prepopulatedEntries_ = prepopulatedEntriesBuilder_.build();
      }
      onBuilt();
      return result;
    }

    @java.lang.Override
    public Builder clone() {
      return super.clone();
    }
    @java.lang.Override
    public Builder setField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        java.lang.Object value) {
      return super.setField(field, value);
    }
    @java.lang.Override
    public Builder clearField(
        com.google.protobuf.Descriptors.FieldDescriptor field) {
      return super.clearField(field);
    }
    @java.lang.Override
    public Builder clearOneof(
        com.google.protobuf.Descriptors.OneofDescriptor oneof) {
      return super.clearOneof(oneof);
    }
    @java.lang.Override
    public Builder setRepeatedField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        int index, java.lang.Object value) {
      return super.setRepeatedField(field, index, value);
    }
    @java.lang.Override
    public Builder addRepeatedField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        java.lang.Object value) {
      return super.addRepeatedField(field, value);
    }
    @java.lang.Override
    public Builder mergeFrom(com.google.protobuf.Message other) {
      if (other instanceof io.envoyproxy.envoy.config.core.v3.AlternateProtocolsCacheOptions) {
        return mergeFrom((io.envoyproxy.envoy.config.core.v3.AlternateProtocolsCacheOptions)other);
      } else {
        super.mergeFrom(other);
        return this;
      }
    }

    public Builder mergeFrom(io.envoyproxy.envoy.config.core.v3.AlternateProtocolsCacheOptions other) {
      if (other == io.envoyproxy.envoy.config.core.v3.AlternateProtocolsCacheOptions.getDefaultInstance()) return this;
      if (!other.getName().isEmpty()) {
        name_ = other.name_;
        onChanged();
      }
      if (other.hasMaxEntries()) {
        mergeMaxEntries(other.getMaxEntries());
      }
      if (other.hasKeyValueStoreConfig()) {
        mergeKeyValueStoreConfig(other.getKeyValueStoreConfig());
      }
      if (prepopulatedEntriesBuilder_ == null) {
        if (!other.prepopulatedEntries_.isEmpty()) {
          if (prepopulatedEntries_.isEmpty()) {
            prepopulatedEntries_ = other.prepopulatedEntries_;
            bitField0_ = (bitField0_ & ~0x00000001);
          } else {
            ensurePrepopulatedEntriesIsMutable();
            prepopulatedEntries_.addAll(other.prepopulatedEntries_);
          }
          onChanged();
        }
      } else {
        if (!other.prepopulatedEntries_.isEmpty()) {
          if (prepopulatedEntriesBuilder_.isEmpty()) {
            prepopulatedEntriesBuilder_.dispose();
            prepopulatedEntriesBuilder_ = null;
            prepopulatedEntries_ = other.prepopulatedEntries_;
            bitField0_ = (bitField0_ & ~0x00000001);
            prepopulatedEntriesBuilder_ = 
              com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?
                 getPrepopulatedEntriesFieldBuilder() : null;
          } else {
            prepopulatedEntriesBuilder_.addAllMessages(other.prepopulatedEntries_);
          }
        }
      }
      this.mergeUnknownFields(other.unknownFields);
      onChanged();
      return this;
    }

    @java.lang.Override
    public final boolean isInitialized() {
      return true;
    }

    @java.lang.Override
    public Builder mergeFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      io.envoyproxy.envoy.config.core.v3.AlternateProtocolsCacheOptions parsedMessage = null;
      try {
        parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        parsedMessage = (io.envoyproxy.envoy.config.core.v3.AlternateProtocolsCacheOptions) e.getUnfinishedMessage();
        throw e.unwrapIOException();
      } finally {
        if (parsedMessage != null) {
          mergeFrom(parsedMessage);
        }
      }
      return this;
    }
    private int bitField0_;

    private java.lang.Object name_ = "";
    /**
     * <pre>
     * The name of the cache. Multiple named caches allow independent alternate protocols cache
     * configurations to operate within a single Envoy process using different configurations. All
     * alternate protocols cache options with the same name *must* be equal in all fields when
     * referenced from different configuration components. Configuration will fail to load if this is
     * not the case.
     * </pre>
     *
     * <code>string name = 1 [(.validate.rules) = { ... }</code>
     * @return The name.
     */
    public java.lang.String getName() {
      java.lang.Object ref = name_;
      if (!(ref instanceof java.lang.String)) {
        com.google.protobuf.ByteString bs =
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        name_ = s;
        return s;
      } else {
        return (java.lang.String) ref;
      }
    }
    /**
     * <pre>
     * The name of the cache. Multiple named caches allow independent alternate protocols cache
     * configurations to operate within a single Envoy process using different configurations. All
     * alternate protocols cache options with the same name *must* be equal in all fields when
     * referenced from different configuration components. Configuration will fail to load if this is
     * not the case.
     * </pre>
     *
     * <code>string name = 1 [(.validate.rules) = { ... }</code>
     * @return The bytes for name.
     */
    public com.google.protobuf.ByteString
        getNameBytes() {
      java.lang.Object ref = name_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        name_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }
    /**
     * <pre>
     * The name of the cache. Multiple named caches allow independent alternate protocols cache
     * configurations to operate within a single Envoy process using different configurations. All
     * alternate protocols cache options with the same name *must* be equal in all fields when
     * referenced from different configuration components. Configuration will fail to load if this is
     * not the case.
     * </pre>
     *
     * <code>string name = 1 [(.validate.rules) = { ... }</code>
     * @param value The name to set.
     * @return This builder for chaining.
     */
    public Builder setName(
        java.lang.String value) {
      if (value == null) {
    throw new NullPointerException();
  }
  
      name_ = value;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * The name of the cache. Multiple named caches allow independent alternate protocols cache
     * configurations to operate within a single Envoy process using different configurations. All
     * alternate protocols cache options with the same name *must* be equal in all fields when
     * referenced from different configuration components. Configuration will fail to load if this is
     * not the case.
     * </pre>
     *
     * <code>string name = 1 [(.validate.rules) = { ... }</code>
     * @return This builder for chaining.
     */
    public Builder clearName() {
      
      name_ = getDefaultInstance().getName();
      onChanged();
      return this;
    }
    /**
     * <pre>
     * The name of the cache. Multiple named caches allow independent alternate protocols cache
     * configurations to operate within a single Envoy process using different configurations. All
     * alternate protocols cache options with the same name *must* be equal in all fields when
     * referenced from different configuration components. Configuration will fail to load if this is
     * not the case.
     * </pre>
     *
     * <code>string name = 1 [(.validate.rules) = { ... }</code>
     * @param value The bytes for name to set.
     * @return This builder for chaining.
     */
    public Builder setNameBytes(
        com.google.protobuf.ByteString value) {
      if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
      
      name_ = value;
      onChanged();
      return this;
    }

    private com.google.protobuf.UInt32Value maxEntries_;
    private com.google.protobuf.SingleFieldBuilderV3<
        com.google.protobuf.UInt32Value, com.google.protobuf.UInt32Value.Builder, com.google.protobuf.UInt32ValueOrBuilder> maxEntriesBuilder_;
    /**
     * <pre>
     * The maximum number of entries that the cache will hold. If not specified defaults to 1024.
     * .. note:
     *   The implementation is approximate and enforced independently on each worker thread, thus
     *   it is possible for the maximum entries in the cache to go slightly above the configured
     *   value depending on timing. This is similar to how other circuit breakers work.
     * </pre>
     *
     * <code>.google.protobuf.UInt32Value max_entries = 2 [(.validate.rules) = { ... }</code>
     * @return Whether the maxEntries field is set.
     */
    public boolean hasMaxEntries() {
      return maxEntriesBuilder_ != null || maxEntries_ != null;
    }
    /**
     * <pre>
     * The maximum number of entries that the cache will hold. If not specified defaults to 1024.
     * .. note:
     *   The implementation is approximate and enforced independently on each worker thread, thus
     *   it is possible for the maximum entries in the cache to go slightly above the configured
     *   value depending on timing. This is similar to how other circuit breakers work.
     * </pre>
     *
     * <code>.google.protobuf.UInt32Value max_entries = 2 [(.validate.rules) = { ... }</code>
     * @return The maxEntries.
     */
    public com.google.protobuf.UInt32Value getMaxEntries() {
      if (maxEntriesBuilder_ == null) {
        return maxEntries_ == null ? com.google.protobuf.UInt32Value.getDefaultInstance() : maxEntries_;
      } else {
        return maxEntriesBuilder_.getMessage();
      }
    }
    /**
     * <pre>
     * The maximum number of entries that the cache will hold. If not specified defaults to 1024.
     * .. note:
     *   The implementation is approximate and enforced independently on each worker thread, thus
     *   it is possible for the maximum entries in the cache to go slightly above the configured
     *   value depending on timing. This is similar to how other circuit breakers work.
     * </pre>
     *
     * <code>.google.protobuf.UInt32Value max_entries = 2 [(.validate.rules) = { ... }</code>
     */
    public Builder setMaxEntries(com.google.protobuf.UInt32Value value) {
      if (maxEntriesBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        maxEntries_ = value;
        onChanged();
      } else {
        maxEntriesBuilder_.setMessage(value);
      }

      return this;
    }
    /**
     * <pre>
     * The maximum number of entries that the cache will hold. If not specified defaults to 1024.
     * .. note:
     *   The implementation is approximate and enforced independently on each worker thread, thus
     *   it is possible for the maximum entries in the cache to go slightly above the configured
     *   value depending on timing. This is similar to how other circuit breakers work.
     * </pre>
     *
     * <code>.google.protobuf.UInt32Value max_entries = 2 [(.validate.rules) = { ... }</code>
     */
    public Builder setMaxEntries(
        com.google.protobuf.UInt32Value.Builder builderForValue) {
      if (maxEntriesBuilder_ == null) {
        maxEntries_ = builderForValue.build();
        onChanged();
      } else {
        maxEntriesBuilder_.setMessage(builderForValue.build());
      }

      return this;
    }
    /**
     * <pre>
     * The maximum number of entries that the cache will hold. If not specified defaults to 1024.
     * .. note:
     *   The implementation is approximate and enforced independently on each worker thread, thus
     *   it is possible for the maximum entries in the cache to go slightly above the configured
     *   value depending on timing. This is similar to how other circuit breakers work.
     * </pre>
     *
     * <code>.google.protobuf.UInt32Value max_entries = 2 [(.validate.rules) = { ... }</code>
     */
    public Builder mergeMaxEntries(com.google.protobuf.UInt32Value value) {
      if (maxEntriesBuilder_ == null) {
        if (maxEntries_ != null) {
          maxEntries_ =
            com.google.protobuf.UInt32Value.newBuilder(maxEntries_).mergeFrom(value).buildPartial();
        } else {
          maxEntries_ = value;
        }
        onChanged();
      } else {
        maxEntriesBuilder_.mergeFrom(value);
      }

      return this;
    }
    /**
     * <pre>
     * The maximum number of entries that the cache will hold. If not specified defaults to 1024.
     * .. note:
     *   The implementation is approximate and enforced independently on each worker thread, thus
     *   it is possible for the maximum entries in the cache to go slightly above the configured
     *   value depending on timing. This is similar to how other circuit breakers work.
     * </pre>
     *
     * <code>.google.protobuf.UInt32Value max_entries = 2 [(.validate.rules) = { ... }</code>
     */
    public Builder clearMaxEntries() {
      if (maxEntriesBuilder_ == null) {
        maxEntries_ = null;
        onChanged();
      } else {
        maxEntries_ = null;
        maxEntriesBuilder_ = null;
      }

      return this;
    }
    /**
     * <pre>
     * The maximum number of entries that the cache will hold. If not specified defaults to 1024.
     * .. note:
     *   The implementation is approximate and enforced independently on each worker thread, thus
     *   it is possible for the maximum entries in the cache to go slightly above the configured
     *   value depending on timing. This is similar to how other circuit breakers work.
     * </pre>
     *
     * <code>.google.protobuf.UInt32Value max_entries = 2 [(.validate.rules) = { ... }</code>
     */
    public com.google.protobuf.UInt32Value.Builder getMaxEntriesBuilder() {
      
      onChanged();
      return getMaxEntriesFieldBuilder().getBuilder();
    }
    /**
     * <pre>
     * The maximum number of entries that the cache will hold. If not specified defaults to 1024.
     * .. note:
     *   The implementation is approximate and enforced independently on each worker thread, thus
     *   it is possible for the maximum entries in the cache to go slightly above the configured
     *   value depending on timing. This is similar to how other circuit breakers work.
     * </pre>
     *
     * <code>.google.protobuf.UInt32Value max_entries = 2 [(.validate.rules) = { ... }</code>
     */
    public com.google.protobuf.UInt32ValueOrBuilder getMaxEntriesOrBuilder() {
      if (maxEntriesBuilder_ != null) {
        return maxEntriesBuilder_.getMessageOrBuilder();
      } else {
        return maxEntries_ == null ?
            com.google.protobuf.UInt32Value.getDefaultInstance() : maxEntries_;
      }
    }
    /**
     * <pre>
     * The maximum number of entries that the cache will hold. If not specified defaults to 1024.
     * .. note:
     *   The implementation is approximate and enforced independently on each worker thread, thus
     *   it is possible for the maximum entries in the cache to go slightly above the configured
     *   value depending on timing. This is similar to how other circuit breakers work.
     * </pre>
     *
     * <code>.google.protobuf.UInt32Value max_entries = 2 [(.validate.rules) = { ... }</code>
     */
    private com.google.protobuf.SingleFieldBuilderV3<
        com.google.protobuf.UInt32Value, com.google.protobuf.UInt32Value.Builder, com.google.protobuf.UInt32ValueOrBuilder> 
        getMaxEntriesFieldBuilder() {
      if (maxEntriesBuilder_ == null) {
        maxEntriesBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
            com.google.protobuf.UInt32Value, com.google.protobuf.UInt32Value.Builder, com.google.protobuf.UInt32ValueOrBuilder>(
                getMaxEntries(),
                getParentForChildren(),
                isClean());
        maxEntries_ = null;
      }
      return maxEntriesBuilder_;
    }

    private io.envoyproxy.envoy.config.core.v3.TypedExtensionConfig keyValueStoreConfig_;
    private com.google.protobuf.SingleFieldBuilderV3<
        io.envoyproxy.envoy.config.core.v3.TypedExtensionConfig, io.envoyproxy.envoy.config.core.v3.TypedExtensionConfig.Builder, io.envoyproxy.envoy.config.core.v3.TypedExtensionConfigOrBuilder> keyValueStoreConfigBuilder_;
    /**
     * <pre>
     * Allows configuring a persistent
     * :ref:`key value store &lt;envoy_v3_api_msg_config.common.key_value.v3.KeyValueStoreConfig&gt;` to flush
     * alternate protocols entries to disk.
     * This function is currently only supported if concurrency is 1
     * Cached entries will take precedence over pre-populated entries below.
     * </pre>
     *
     * <code>.envoy.config.core.v3.TypedExtensionConfig key_value_store_config = 3;</code>
     * @return Whether the keyValueStoreConfig field is set.
     */
    public boolean hasKeyValueStoreConfig() {
      return keyValueStoreConfigBuilder_ != null || keyValueStoreConfig_ != null;
    }
    /**
     * <pre>
     * Allows configuring a persistent
     * :ref:`key value store &lt;envoy_v3_api_msg_config.common.key_value.v3.KeyValueStoreConfig&gt;` to flush
     * alternate protocols entries to disk.
     * This function is currently only supported if concurrency is 1
     * Cached entries will take precedence over pre-populated entries below.
     * </pre>
     *
     * <code>.envoy.config.core.v3.TypedExtensionConfig key_value_store_config = 3;</code>
     * @return The keyValueStoreConfig.
     */
    public io.envoyproxy.envoy.config.core.v3.TypedExtensionConfig getKeyValueStoreConfig() {
      if (keyValueStoreConfigBuilder_ == null) {
        return keyValueStoreConfig_ == null ? io.envoyproxy.envoy.config.core.v3.TypedExtensionConfig.getDefaultInstance() : keyValueStoreConfig_;
      } else {
        return keyValueStoreConfigBuilder_.getMessage();
      }
    }
    /**
     * <pre>
     * Allows configuring a persistent
     * :ref:`key value store &lt;envoy_v3_api_msg_config.common.key_value.v3.KeyValueStoreConfig&gt;` to flush
     * alternate protocols entries to disk.
     * This function is currently only supported if concurrency is 1
     * Cached entries will take precedence over pre-populated entries below.
     * </pre>
     *
     * <code>.envoy.config.core.v3.TypedExtensionConfig key_value_store_config = 3;</code>
     */
    public Builder setKeyValueStoreConfig(io.envoyproxy.envoy.config.core.v3.TypedExtensionConfig value) {
      if (keyValueStoreConfigBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        keyValueStoreConfig_ = value;
        onChanged();
      } else {
        keyValueStoreConfigBuilder_.setMessage(value);
      }

      return this;
    }
    /**
     * <pre>
     * Allows configuring a persistent
     * :ref:`key value store &lt;envoy_v3_api_msg_config.common.key_value.v3.KeyValueStoreConfig&gt;` to flush
     * alternate protocols entries to disk.
     * This function is currently only supported if concurrency is 1
     * Cached entries will take precedence over pre-populated entries below.
     * </pre>
     *
     * <code>.envoy.config.core.v3.TypedExtensionConfig key_value_store_config = 3;</code>
     */
    public Builder setKeyValueStoreConfig(
        io.envoyproxy.envoy.config.core.v3.TypedExtensionConfig.Builder builderForValue) {
      if (keyValueStoreConfigBuilder_ == null) {
        keyValueStoreConfig_ = builderForValue.build();
        onChanged();
      } else {
        keyValueStoreConfigBuilder_.setMessage(builderForValue.build());
      }

      return this;
    }
    /**
     * <pre>
     * Allows configuring a persistent
     * :ref:`key value store &lt;envoy_v3_api_msg_config.common.key_value.v3.KeyValueStoreConfig&gt;` to flush
     * alternate protocols entries to disk.
     * This function is currently only supported if concurrency is 1
     * Cached entries will take precedence over pre-populated entries below.
     * </pre>
     *
     * <code>.envoy.config.core.v3.TypedExtensionConfig key_value_store_config = 3;</code>
     */
    public Builder mergeKeyValueStoreConfig(io.envoyproxy.envoy.config.core.v3.TypedExtensionConfig value) {
      if (keyValueStoreConfigBuilder_ == null) {
        if (keyValueStoreConfig_ != null) {
          keyValueStoreConfig_ =
            io.envoyproxy.envoy.config.core.v3.TypedExtensionConfig.newBuilder(keyValueStoreConfig_).mergeFrom(value).buildPartial();
        } else {
          keyValueStoreConfig_ = value;
        }
        onChanged();
      } else {
        keyValueStoreConfigBuilder_.mergeFrom(value);
      }

      return this;
    }
    /**
     * <pre>
     * Allows configuring a persistent
     * :ref:`key value store &lt;envoy_v3_api_msg_config.common.key_value.v3.KeyValueStoreConfig&gt;` to flush
     * alternate protocols entries to disk.
     * This function is currently only supported if concurrency is 1
     * Cached entries will take precedence over pre-populated entries below.
     * </pre>
     *
     * <code>.envoy.config.core.v3.TypedExtensionConfig key_value_store_config = 3;</code>
     */
    public Builder clearKeyValueStoreConfig() {
      if (keyValueStoreConfigBuilder_ == null) {
        keyValueStoreConfig_ = null;
        onChanged();
      } else {
        keyValueStoreConfig_ = null;
        keyValueStoreConfigBuilder_ = null;
      }

      return this;
    }
    /**
     * <pre>
     * Allows configuring a persistent
     * :ref:`key value store &lt;envoy_v3_api_msg_config.common.key_value.v3.KeyValueStoreConfig&gt;` to flush
     * alternate protocols entries to disk.
     * This function is currently only supported if concurrency is 1
     * Cached entries will take precedence over pre-populated entries below.
     * </pre>
     *
     * <code>.envoy.config.core.v3.TypedExtensionConfig key_value_store_config = 3;</code>
     */
    public io.envoyproxy.envoy.config.core.v3.TypedExtensionConfig.Builder getKeyValueStoreConfigBuilder() {
      
      onChanged();
      return getKeyValueStoreConfigFieldBuilder().getBuilder();
    }
    /**
     * <pre>
     * Allows configuring a persistent
     * :ref:`key value store &lt;envoy_v3_api_msg_config.common.key_value.v3.KeyValueStoreConfig&gt;` to flush
     * alternate protocols entries to disk.
     * This function is currently only supported if concurrency is 1
     * Cached entries will take precedence over pre-populated entries below.
     * </pre>
     *
     * <code>.envoy.config.core.v3.TypedExtensionConfig key_value_store_config = 3;</code>
     */
    public io.envoyproxy.envoy.config.core.v3.TypedExtensionConfigOrBuilder getKeyValueStoreConfigOrBuilder() {
      if (keyValueStoreConfigBuilder_ != null) {
        return keyValueStoreConfigBuilder_.getMessageOrBuilder();
      } else {
        return keyValueStoreConfig_ == null ?
            io.envoyproxy.envoy.config.core.v3.TypedExtensionConfig.getDefaultInstance() : keyValueStoreConfig_;
      }
    }
    /**
     * <pre>
     * Allows configuring a persistent
     * :ref:`key value store &lt;envoy_v3_api_msg_config.common.key_value.v3.KeyValueStoreConfig&gt;` to flush
     * alternate protocols entries to disk.
     * This function is currently only supported if concurrency is 1
     * Cached entries will take precedence over pre-populated entries below.
     * </pre>
     *
     * <code>.envoy.config.core.v3.TypedExtensionConfig key_value_store_config = 3;</code>
     */
    private com.google.protobuf.SingleFieldBuilderV3<
        io.envoyproxy.envoy.config.core.v3.TypedExtensionConfig, io.envoyproxy.envoy.config.core.v3.TypedExtensionConfig.Builder, io.envoyproxy.envoy.config.core.v3.TypedExtensionConfigOrBuilder> 
        getKeyValueStoreConfigFieldBuilder() {
      if (keyValueStoreConfigBuilder_ == null) {
        keyValueStoreConfigBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
            io.envoyproxy.envoy.config.core.v3.TypedExtensionConfig, io.envoyproxy.envoy.config.core.v3.TypedExtensionConfig.Builder, io.envoyproxy.envoy.config.core.v3.TypedExtensionConfigOrBuilder>(
                getKeyValueStoreConfig(),
                getParentForChildren(),
                isClean());
        keyValueStoreConfig_ = null;
      }
      return keyValueStoreConfigBuilder_;
    }

    private java.util.List<io.envoyproxy.envoy.config.core.v3.AlternateProtocolsCacheOptions.AlternateProtocolsCacheEntry> prepopulatedEntries_ =
      java.util.Collections.emptyList();
    private void ensurePrepopulatedEntriesIsMutable() {
      if (!((bitField0_ & 0x00000001) != 0)) {
        prepopulatedEntries_ = new java.util.ArrayList<io.envoyproxy.envoy.config.core.v3.AlternateProtocolsCacheOptions.AlternateProtocolsCacheEntry>(prepopulatedEntries_);
        bitField0_ |= 0x00000001;
       }
    }

    private com.google.protobuf.RepeatedFieldBuilderV3<
        io.envoyproxy.envoy.config.core.v3.AlternateProtocolsCacheOptions.AlternateProtocolsCacheEntry, io.envoyproxy.envoy.config.core.v3.AlternateProtocolsCacheOptions.AlternateProtocolsCacheEntry.Builder, io.envoyproxy.envoy.config.core.v3.AlternateProtocolsCacheOptions.AlternateProtocolsCacheEntryOrBuilder> prepopulatedEntriesBuilder_;

    /**
     * <pre>
     * Allows pre-populating the cache with entries, as described above.
     * </pre>
     *
     * <code>repeated .envoy.config.core.v3.AlternateProtocolsCacheOptions.AlternateProtocolsCacheEntry prepopulated_entries = 4;</code>
     */
    public java.util.List<io.envoyproxy.envoy.config.core.v3.AlternateProtocolsCacheOptions.AlternateProtocolsCacheEntry> getPrepopulatedEntriesList() {
      if (prepopulatedEntriesBuilder_ == null) {
        return java.util.Collections.unmodifiableList(prepopulatedEntries_);
      } else {
        return prepopulatedEntriesBuilder_.getMessageList();
      }
    }
    /**
     * <pre>
     * Allows pre-populating the cache with entries, as described above.
     * </pre>
     *
     * <code>repeated .envoy.config.core.v3.AlternateProtocolsCacheOptions.AlternateProtocolsCacheEntry prepopulated_entries = 4;</code>
     */
    public int getPrepopulatedEntriesCount() {
      if (prepopulatedEntriesBuilder_ == null) {
        return prepopulatedEntries_.size();
      } else {
        return prepopulatedEntriesBuilder_.getCount();
      }
    }
    /**
     * <pre>
     * Allows pre-populating the cache with entries, as described above.
     * </pre>
     *
     * <code>repeated .envoy.config.core.v3.AlternateProtocolsCacheOptions.AlternateProtocolsCacheEntry prepopulated_entries = 4;</code>
     */
    public io.envoyproxy.envoy.config.core.v3.AlternateProtocolsCacheOptions.AlternateProtocolsCacheEntry getPrepopulatedEntries(int index) {
      if (prepopulatedEntriesBuilder_ == null) {
        return prepopulatedEntries_.get(index);
      } else {
        return prepopulatedEntriesBuilder_.getMessage(index);
      }
    }
    /**
     * <pre>
     * Allows pre-populating the cache with entries, as described above.
     * </pre>
     *
     * <code>repeated .envoy.config.core.v3.AlternateProtocolsCacheOptions.AlternateProtocolsCacheEntry prepopulated_entries = 4;</code>
     */
    public Builder setPrepopulatedEntries(
        int index, io.envoyproxy.envoy.config.core.v3.AlternateProtocolsCacheOptions.AlternateProtocolsCacheEntry value) {
      if (prepopulatedEntriesBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensurePrepopulatedEntriesIsMutable();
        prepopulatedEntries_.set(index, value);
        onChanged();
      } else {
        prepopulatedEntriesBuilder_.setMessage(index, value);
      }
      return this;
    }
    /**
     * <pre>
     * Allows pre-populating the cache with entries, as described above.
     * </pre>
     *
     * <code>repeated .envoy.config.core.v3.AlternateProtocolsCacheOptions.AlternateProtocolsCacheEntry prepopulated_entries = 4;</code>
     */
    public Builder setPrepopulatedEntries(
        int index, io.envoyproxy.envoy.config.core.v3.AlternateProtocolsCacheOptions.AlternateProtocolsCacheEntry.Builder builderForValue) {
      if (prepopulatedEntriesBuilder_ == null) {
        ensurePrepopulatedEntriesIsMutable();
        prepopulatedEntries_.set(index, builderForValue.build());
        onChanged();
      } else {
        prepopulatedEntriesBuilder_.setMessage(index, builderForValue.build());
      }
      return this;
    }
    /**
     * <pre>
     * Allows pre-populating the cache with entries, as described above.
     * </pre>
     *
     * <code>repeated .envoy.config.core.v3.AlternateProtocolsCacheOptions.AlternateProtocolsCacheEntry prepopulated_entries = 4;</code>
     */
    public Builder addPrepopulatedEntries(io.envoyproxy.envoy.config.core.v3.AlternateProtocolsCacheOptions.AlternateProtocolsCacheEntry value) {
      if (prepopulatedEntriesBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensurePrepopulatedEntriesIsMutable();
        prepopulatedEntries_.add(value);
        onChanged();
      } else {
        prepopulatedEntriesBuilder_.addMessage(value);
      }
      return this;
    }
    /**
     * <pre>
     * Allows pre-populating the cache with entries, as described above.
     * </pre>
     *
     * <code>repeated .envoy.config.core.v3.AlternateProtocolsCacheOptions.AlternateProtocolsCacheEntry prepopulated_entries = 4;</code>
     */
    public Builder addPrepopulatedEntries(
        int index, io.envoyproxy.envoy.config.core.v3.AlternateProtocolsCacheOptions.AlternateProtocolsCacheEntry value) {
      if (prepopulatedEntriesBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensurePrepopulatedEntriesIsMutable();
        prepopulatedEntries_.add(index, value);
        onChanged();
      } else {
        prepopulatedEntriesBuilder_.addMessage(index, value);
      }
      return this;
    }
    /**
     * <pre>
     * Allows pre-populating the cache with entries, as described above.
     * </pre>
     *
     * <code>repeated .envoy.config.core.v3.AlternateProtocolsCacheOptions.AlternateProtocolsCacheEntry prepopulated_entries = 4;</code>
     */
    public Builder addPrepopulatedEntries(
        io.envoyproxy.envoy.config.core.v3.AlternateProtocolsCacheOptions.AlternateProtocolsCacheEntry.Builder builderForValue) {
      if (prepopulatedEntriesBuilder_ == null) {
        ensurePrepopulatedEntriesIsMutable();
        prepopulatedEntries_.add(builderForValue.build());
        onChanged();
      } else {
        prepopulatedEntriesBuilder_.addMessage(builderForValue.build());
      }
      return this;
    }
    /**
     * <pre>
     * Allows pre-populating the cache with entries, as described above.
     * </pre>
     *
     * <code>repeated .envoy.config.core.v3.AlternateProtocolsCacheOptions.AlternateProtocolsCacheEntry prepopulated_entries = 4;</code>
     */
    public Builder addPrepopulatedEntries(
        int index, io.envoyproxy.envoy.config.core.v3.AlternateProtocolsCacheOptions.AlternateProtocolsCacheEntry.Builder builderForValue) {
      if (prepopulatedEntriesBuilder_ == null) {
        ensurePrepopulatedEntriesIsMutable();
        prepopulatedEntries_.add(index, builderForValue.build());
        onChanged();
      } else {
        prepopulatedEntriesBuilder_.addMessage(index, builderForValue.build());
      }
      return this;
    }
    /**
     * <pre>
     * Allows pre-populating the cache with entries, as described above.
     * </pre>
     *
     * <code>repeated .envoy.config.core.v3.AlternateProtocolsCacheOptions.AlternateProtocolsCacheEntry prepopulated_entries = 4;</code>
     */
    public Builder addAllPrepopulatedEntries(
        java.lang.Iterable<? extends io.envoyproxy.envoy.config.core.v3.AlternateProtocolsCacheOptions.AlternateProtocolsCacheEntry> values) {
      if (prepopulatedEntriesBuilder_ == null) {
        ensurePrepopulatedEntriesIsMutable();
        com.google.protobuf.AbstractMessageLite.Builder.addAll(
            values, prepopulatedEntries_);
        onChanged();
      } else {
        prepopulatedEntriesBuilder_.addAllMessages(values);
      }
      return this;
    }
    /**
     * <pre>
     * Allows pre-populating the cache with entries, as described above.
     * </pre>
     *
     * <code>repeated .envoy.config.core.v3.AlternateProtocolsCacheOptions.AlternateProtocolsCacheEntry prepopulated_entries = 4;</code>
     */
    public Builder clearPrepopulatedEntries() {
      if (prepopulatedEntriesBuilder_ == null) {
        prepopulatedEntries_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000001);
        onChanged();
      } else {
        prepopulatedEntriesBuilder_.clear();
      }
      return this;
    }
    /**
     * <pre>
     * Allows pre-populating the cache with entries, as described above.
     * </pre>
     *
     * <code>repeated .envoy.config.core.v3.AlternateProtocolsCacheOptions.AlternateProtocolsCacheEntry prepopulated_entries = 4;</code>
     */
    public Builder removePrepopulatedEntries(int index) {
      if (prepopulatedEntriesBuilder_ == null) {
        ensurePrepopulatedEntriesIsMutable();
        prepopulatedEntries_.remove(index);
        onChanged();
      } else {
        prepopulatedEntriesBuilder_.remove(index);
      }
      return this;
    }
    /**
     * <pre>
     * Allows pre-populating the cache with entries, as described above.
     * </pre>
     *
     * <code>repeated .envoy.config.core.v3.AlternateProtocolsCacheOptions.AlternateProtocolsCacheEntry prepopulated_entries = 4;</code>
     */
    public io.envoyproxy.envoy.config.core.v3.AlternateProtocolsCacheOptions.AlternateProtocolsCacheEntry.Builder getPrepopulatedEntriesBuilder(
        int index) {
      return getPrepopulatedEntriesFieldBuilder().getBuilder(index);
    }
    /**
     * <pre>
     * Allows pre-populating the cache with entries, as described above.
     * </pre>
     *
     * <code>repeated .envoy.config.core.v3.AlternateProtocolsCacheOptions.AlternateProtocolsCacheEntry prepopulated_entries = 4;</code>
     */
    public io.envoyproxy.envoy.config.core.v3.AlternateProtocolsCacheOptions.AlternateProtocolsCacheEntryOrBuilder getPrepopulatedEntriesOrBuilder(
        int index) {
      if (prepopulatedEntriesBuilder_ == null) {
        return prepopulatedEntries_.get(index);  } else {
        return prepopulatedEntriesBuilder_.getMessageOrBuilder(index);
      }
    }
    /**
     * <pre>
     * Allows pre-populating the cache with entries, as described above.
     * </pre>
     *
     * <code>repeated .envoy.config.core.v3.AlternateProtocolsCacheOptions.AlternateProtocolsCacheEntry prepopulated_entries = 4;</code>
     */
    public java.util.List<? extends io.envoyproxy.envoy.config.core.v3.AlternateProtocolsCacheOptions.AlternateProtocolsCacheEntryOrBuilder> 
         getPrepopulatedEntriesOrBuilderList() {
      if (prepopulatedEntriesBuilder_ != null) {
        return prepopulatedEntriesBuilder_.getMessageOrBuilderList();
      } else {
        return java.util.Collections.unmodifiableList(prepopulatedEntries_);
      }
    }
    /**
     * <pre>
     * Allows pre-populating the cache with entries, as described above.
     * </pre>
     *
     * <code>repeated .envoy.config.core.v3.AlternateProtocolsCacheOptions.AlternateProtocolsCacheEntry prepopulated_entries = 4;</code>
     */
    public io.envoyproxy.envoy.config.core.v3.AlternateProtocolsCacheOptions.AlternateProtocolsCacheEntry.Builder addPrepopulatedEntriesBuilder() {
      return getPrepopulatedEntriesFieldBuilder().addBuilder(
          io.envoyproxy.envoy.config.core.v3.AlternateProtocolsCacheOptions.AlternateProtocolsCacheEntry.getDefaultInstance());
    }
    /**
     * <pre>
     * Allows pre-populating the cache with entries, as described above.
     * </pre>
     *
     * <code>repeated .envoy.config.core.v3.AlternateProtocolsCacheOptions.AlternateProtocolsCacheEntry prepopulated_entries = 4;</code>
     */
    public io.envoyproxy.envoy.config.core.v3.AlternateProtocolsCacheOptions.AlternateProtocolsCacheEntry.Builder addPrepopulatedEntriesBuilder(
        int index) {
      return getPrepopulatedEntriesFieldBuilder().addBuilder(
          index, io.envoyproxy.envoy.config.core.v3.AlternateProtocolsCacheOptions.AlternateProtocolsCacheEntry.getDefaultInstance());
    }
    /**
     * <pre>
     * Allows pre-populating the cache with entries, as described above.
     * </pre>
     *
     * <code>repeated .envoy.config.core.v3.AlternateProtocolsCacheOptions.AlternateProtocolsCacheEntry prepopulated_entries = 4;</code>
     */
    public java.util.List<io.envoyproxy.envoy.config.core.v3.AlternateProtocolsCacheOptions.AlternateProtocolsCacheEntry.Builder> 
         getPrepopulatedEntriesBuilderList() {
      return getPrepopulatedEntriesFieldBuilder().getBuilderList();
    }
    private com.google.protobuf.RepeatedFieldBuilderV3<
        io.envoyproxy.envoy.config.core.v3.AlternateProtocolsCacheOptions.AlternateProtocolsCacheEntry, io.envoyproxy.envoy.config.core.v3.AlternateProtocolsCacheOptions.AlternateProtocolsCacheEntry.Builder, io.envoyproxy.envoy.config.core.v3.AlternateProtocolsCacheOptions.AlternateProtocolsCacheEntryOrBuilder> 
        getPrepopulatedEntriesFieldBuilder() {
      if (prepopulatedEntriesBuilder_ == null) {
        prepopulatedEntriesBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<
            io.envoyproxy.envoy.config.core.v3.AlternateProtocolsCacheOptions.AlternateProtocolsCacheEntry, io.envoyproxy.envoy.config.core.v3.AlternateProtocolsCacheOptions.AlternateProtocolsCacheEntry.Builder, io.envoyproxy.envoy.config.core.v3.AlternateProtocolsCacheOptions.AlternateProtocolsCacheEntryOrBuilder>(
                prepopulatedEntries_,
                ((bitField0_ & 0x00000001) != 0),
                getParentForChildren(),
                isClean());
        prepopulatedEntries_ = null;
      }
      return prepopulatedEntriesBuilder_;
    }
    @java.lang.Override
    public final Builder setUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return super.setUnknownFields(unknownFields);
    }

    @java.lang.Override
    public final Builder mergeUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return super.mergeUnknownFields(unknownFields);
    }


    // @@protoc_insertion_point(builder_scope:envoy.config.core.v3.AlternateProtocolsCacheOptions)
  }

  // @@protoc_insertion_point(class_scope:envoy.config.core.v3.AlternateProtocolsCacheOptions)
  private static final io.envoyproxy.envoy.config.core.v3.AlternateProtocolsCacheOptions DEFAULT_INSTANCE;
  static {
    DEFAULT_INSTANCE = new io.envoyproxy.envoy.config.core.v3.AlternateProtocolsCacheOptions();
  }

  public static io.envoyproxy.envoy.config.core.v3.AlternateProtocolsCacheOptions getDefaultInstance() {
    return DEFAULT_INSTANCE;
  }

  private static final com.google.protobuf.Parser<AlternateProtocolsCacheOptions>
      PARSER = new com.google.protobuf.AbstractParser<AlternateProtocolsCacheOptions>() {
    @java.lang.Override
    public AlternateProtocolsCacheOptions parsePartialFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return new AlternateProtocolsCacheOptions(input, extensionRegistry);
    }
  };

  public static com.google.protobuf.Parser<AlternateProtocolsCacheOptions> parser() {
    return PARSER;
  }

  @java.lang.Override
  public com.google.protobuf.Parser<AlternateProtocolsCacheOptions> getParserForType() {
    return PARSER;
  }

  @java.lang.Override
  public io.envoyproxy.envoy.config.core.v3.AlternateProtocolsCacheOptions getDefaultInstanceForType() {
    return DEFAULT_INSTANCE;
  }

}

