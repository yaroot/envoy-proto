// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: envoy/config/core/v3/resolver.proto

package io.envoyproxy.envoy.config.core.v3;

public interface DnsResolutionConfigOrBuilder extends
    // @@protoc_insertion_point(interface_extends:envoy.config.core.v3.DnsResolutionConfig)
    com.google.protobuf.MessageOrBuilder {

  /**
   * <pre>
   * A list of dns resolver addresses. If specified, the DNS client library will perform resolution
   * via the underlying DNS resolvers. Otherwise, the default system resolvers
   * (e.g., /etc/resolv.conf) will be used.
   * </pre>
   *
   * <code>repeated .envoy.config.core.v3.Address resolvers = 1 [(.validate.rules) = { ... }</code>
   */
  java.util.List<io.envoyproxy.envoy.config.core.v3.Address> 
      getResolversList();
  /**
   * <pre>
   * A list of dns resolver addresses. If specified, the DNS client library will perform resolution
   * via the underlying DNS resolvers. Otherwise, the default system resolvers
   * (e.g., /etc/resolv.conf) will be used.
   * </pre>
   *
   * <code>repeated .envoy.config.core.v3.Address resolvers = 1 [(.validate.rules) = { ... }</code>
   */
  io.envoyproxy.envoy.config.core.v3.Address getResolvers(int index);
  /**
   * <pre>
   * A list of dns resolver addresses. If specified, the DNS client library will perform resolution
   * via the underlying DNS resolvers. Otherwise, the default system resolvers
   * (e.g., /etc/resolv.conf) will be used.
   * </pre>
   *
   * <code>repeated .envoy.config.core.v3.Address resolvers = 1 [(.validate.rules) = { ... }</code>
   */
  int getResolversCount();
  /**
   * <pre>
   * A list of dns resolver addresses. If specified, the DNS client library will perform resolution
   * via the underlying DNS resolvers. Otherwise, the default system resolvers
   * (e.g., /etc/resolv.conf) will be used.
   * </pre>
   *
   * <code>repeated .envoy.config.core.v3.Address resolvers = 1 [(.validate.rules) = { ... }</code>
   */
  java.util.List<? extends io.envoyproxy.envoy.config.core.v3.AddressOrBuilder> 
      getResolversOrBuilderList();
  /**
   * <pre>
   * A list of dns resolver addresses. If specified, the DNS client library will perform resolution
   * via the underlying DNS resolvers. Otherwise, the default system resolvers
   * (e.g., /etc/resolv.conf) will be used.
   * </pre>
   *
   * <code>repeated .envoy.config.core.v3.Address resolvers = 1 [(.validate.rules) = { ... }</code>
   */
  io.envoyproxy.envoy.config.core.v3.AddressOrBuilder getResolversOrBuilder(
      int index);

  /**
   * <pre>
   * Configuration of DNS resolver option flags which control the behavior of the DNS resolver.
   * </pre>
   *
   * <code>.envoy.config.core.v3.DnsResolverOptions dns_resolver_options = 2;</code>
   * @return Whether the dnsResolverOptions field is set.
   */
  boolean hasDnsResolverOptions();
  /**
   * <pre>
   * Configuration of DNS resolver option flags which control the behavior of the DNS resolver.
   * </pre>
   *
   * <code>.envoy.config.core.v3.DnsResolverOptions dns_resolver_options = 2;</code>
   * @return The dnsResolverOptions.
   */
  io.envoyproxy.envoy.config.core.v3.DnsResolverOptions getDnsResolverOptions();
  /**
   * <pre>
   * Configuration of DNS resolver option flags which control the behavior of the DNS resolver.
   * </pre>
   *
   * <code>.envoy.config.core.v3.DnsResolverOptions dns_resolver_options = 2;</code>
   */
  io.envoyproxy.envoy.config.core.v3.DnsResolverOptionsOrBuilder getDnsResolverOptionsOrBuilder();
}
