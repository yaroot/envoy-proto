// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: envoy/config/core/v3/udp_socket_config.proto

package io.envoyproxy.envoy.config.core.v3;

/**
 * <pre>
 * Generic UDP socket configuration.
 * </pre>
 *
 * Protobuf type {@code envoy.config.core.v3.UdpSocketConfig}
 */
public final class UdpSocketConfig extends
    com.google.protobuf.GeneratedMessageV3 implements
    // @@protoc_insertion_point(message_implements:envoy.config.core.v3.UdpSocketConfig)
    UdpSocketConfigOrBuilder {
private static final long serialVersionUID = 0L;
  // Use UdpSocketConfig.newBuilder() to construct.
  private UdpSocketConfig(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
    super(builder);
  }
  private UdpSocketConfig() {
  }

  @java.lang.Override
  @SuppressWarnings({"unused"})
  protected java.lang.Object newInstance(
      UnusedPrivateParameter unused) {
    return new UdpSocketConfig();
  }

  @java.lang.Override
  public final com.google.protobuf.UnknownFieldSet
  getUnknownFields() {
    return this.unknownFields;
  }
  public static final com.google.protobuf.Descriptors.Descriptor
      getDescriptor() {
    return io.envoyproxy.envoy.config.core.v3.UdpSocketConfigProto.internal_static_envoy_config_core_v3_UdpSocketConfig_descriptor;
  }

  @java.lang.Override
  protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internalGetFieldAccessorTable() {
    return io.envoyproxy.envoy.config.core.v3.UdpSocketConfigProto.internal_static_envoy_config_core_v3_UdpSocketConfig_fieldAccessorTable
        .ensureFieldAccessorsInitialized(
            io.envoyproxy.envoy.config.core.v3.UdpSocketConfig.class, io.envoyproxy.envoy.config.core.v3.UdpSocketConfig.Builder.class);
  }

  public static final int MAX_RX_DATAGRAM_SIZE_FIELD_NUMBER = 1;
  private com.google.protobuf.UInt64Value maxRxDatagramSize_;
  /**
   * <pre>
   * The maximum size of received UDP datagrams. Using a larger size will cause Envoy to allocate
   * more memory per socket. Received datagrams above this size will be dropped. If not set
   * defaults to 1500 bytes.
   * </pre>
   *
   * <code>.google.protobuf.UInt64Value max_rx_datagram_size = 1 [(.validate.rules) = { ... }</code>
   * @return Whether the maxRxDatagramSize field is set.
   */
  @java.lang.Override
  public boolean hasMaxRxDatagramSize() {
    return maxRxDatagramSize_ != null;
  }
  /**
   * <pre>
   * The maximum size of received UDP datagrams. Using a larger size will cause Envoy to allocate
   * more memory per socket. Received datagrams above this size will be dropped. If not set
   * defaults to 1500 bytes.
   * </pre>
   *
   * <code>.google.protobuf.UInt64Value max_rx_datagram_size = 1 [(.validate.rules) = { ... }</code>
   * @return The maxRxDatagramSize.
   */
  @java.lang.Override
  public com.google.protobuf.UInt64Value getMaxRxDatagramSize() {
    return maxRxDatagramSize_ == null ? com.google.protobuf.UInt64Value.getDefaultInstance() : maxRxDatagramSize_;
  }
  /**
   * <pre>
   * The maximum size of received UDP datagrams. Using a larger size will cause Envoy to allocate
   * more memory per socket. Received datagrams above this size will be dropped. If not set
   * defaults to 1500 bytes.
   * </pre>
   *
   * <code>.google.protobuf.UInt64Value max_rx_datagram_size = 1 [(.validate.rules) = { ... }</code>
   */
  @java.lang.Override
  public com.google.protobuf.UInt64ValueOrBuilder getMaxRxDatagramSizeOrBuilder() {
    return maxRxDatagramSize_ == null ? com.google.protobuf.UInt64Value.getDefaultInstance() : maxRxDatagramSize_;
  }

  public static final int PREFER_GRO_FIELD_NUMBER = 2;
  private com.google.protobuf.BoolValue preferGro_;
  /**
   * <pre>
   * Configures whether Generic Receive Offload (GRO)
   * &lt;https://en.wikipedia.org/wiki/Large_receive_offload&gt;_ is preferred when reading from the
   * UDP socket. The default is context dependent and is documented where UdpSocketConfig is used.
   * This option affects performance but not functionality. If GRO is not supported by the operating
   * system, non-GRO receive will be used.
   * </pre>
   *
   * <code>.google.protobuf.BoolValue prefer_gro = 2;</code>
   * @return Whether the preferGro field is set.
   */
  @java.lang.Override
  public boolean hasPreferGro() {
    return preferGro_ != null;
  }
  /**
   * <pre>
   * Configures whether Generic Receive Offload (GRO)
   * &lt;https://en.wikipedia.org/wiki/Large_receive_offload&gt;_ is preferred when reading from the
   * UDP socket. The default is context dependent and is documented where UdpSocketConfig is used.
   * This option affects performance but not functionality. If GRO is not supported by the operating
   * system, non-GRO receive will be used.
   * </pre>
   *
   * <code>.google.protobuf.BoolValue prefer_gro = 2;</code>
   * @return The preferGro.
   */
  @java.lang.Override
  public com.google.protobuf.BoolValue getPreferGro() {
    return preferGro_ == null ? com.google.protobuf.BoolValue.getDefaultInstance() : preferGro_;
  }
  /**
   * <pre>
   * Configures whether Generic Receive Offload (GRO)
   * &lt;https://en.wikipedia.org/wiki/Large_receive_offload&gt;_ is preferred when reading from the
   * UDP socket. The default is context dependent and is documented where UdpSocketConfig is used.
   * This option affects performance but not functionality. If GRO is not supported by the operating
   * system, non-GRO receive will be used.
   * </pre>
   *
   * <code>.google.protobuf.BoolValue prefer_gro = 2;</code>
   */
  @java.lang.Override
  public com.google.protobuf.BoolValueOrBuilder getPreferGroOrBuilder() {
    return preferGro_ == null ? com.google.protobuf.BoolValue.getDefaultInstance() : preferGro_;
  }

  private byte memoizedIsInitialized = -1;
  @java.lang.Override
  public final boolean isInitialized() {
    byte isInitialized = memoizedIsInitialized;
    if (isInitialized == 1) return true;
    if (isInitialized == 0) return false;

    memoizedIsInitialized = 1;
    return true;
  }

  @java.lang.Override
  public void writeTo(com.google.protobuf.CodedOutputStream output)
                      throws java.io.IOException {
    if (maxRxDatagramSize_ != null) {
      output.writeMessage(1, getMaxRxDatagramSize());
    }
    if (preferGro_ != null) {
      output.writeMessage(2, getPreferGro());
    }
    getUnknownFields().writeTo(output);
  }

  @java.lang.Override
  public int getSerializedSize() {
    int size = memoizedSize;
    if (size != -1) return size;

    size = 0;
    if (maxRxDatagramSize_ != null) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(1, getMaxRxDatagramSize());
    }
    if (preferGro_ != null) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(2, getPreferGro());
    }
    size += getUnknownFields().getSerializedSize();
    memoizedSize = size;
    return size;
  }

  @java.lang.Override
  public boolean equals(final java.lang.Object obj) {
    if (obj == this) {
     return true;
    }
    if (!(obj instanceof io.envoyproxy.envoy.config.core.v3.UdpSocketConfig)) {
      return super.equals(obj);
    }
    io.envoyproxy.envoy.config.core.v3.UdpSocketConfig other = (io.envoyproxy.envoy.config.core.v3.UdpSocketConfig) obj;

    if (hasMaxRxDatagramSize() != other.hasMaxRxDatagramSize()) return false;
    if (hasMaxRxDatagramSize()) {
      if (!getMaxRxDatagramSize()
          .equals(other.getMaxRxDatagramSize())) return false;
    }
    if (hasPreferGro() != other.hasPreferGro()) return false;
    if (hasPreferGro()) {
      if (!getPreferGro()
          .equals(other.getPreferGro())) return false;
    }
    if (!getUnknownFields().equals(other.getUnknownFields())) return false;
    return true;
  }

  @java.lang.Override
  public int hashCode() {
    if (memoizedHashCode != 0) {
      return memoizedHashCode;
    }
    int hash = 41;
    hash = (19 * hash) + getDescriptor().hashCode();
    if (hasMaxRxDatagramSize()) {
      hash = (37 * hash) + MAX_RX_DATAGRAM_SIZE_FIELD_NUMBER;
      hash = (53 * hash) + getMaxRxDatagramSize().hashCode();
    }
    if (hasPreferGro()) {
      hash = (37 * hash) + PREFER_GRO_FIELD_NUMBER;
      hash = (53 * hash) + getPreferGro().hashCode();
    }
    hash = (29 * hash) + getUnknownFields().hashCode();
    memoizedHashCode = hash;
    return hash;
  }

  public static io.envoyproxy.envoy.config.core.v3.UdpSocketConfig parseFrom(
      java.nio.ByteBuffer data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static io.envoyproxy.envoy.config.core.v3.UdpSocketConfig parseFrom(
      java.nio.ByteBuffer data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static io.envoyproxy.envoy.config.core.v3.UdpSocketConfig parseFrom(
      com.google.protobuf.ByteString data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static io.envoyproxy.envoy.config.core.v3.UdpSocketConfig parseFrom(
      com.google.protobuf.ByteString data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static io.envoyproxy.envoy.config.core.v3.UdpSocketConfig parseFrom(byte[] data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static io.envoyproxy.envoy.config.core.v3.UdpSocketConfig parseFrom(
      byte[] data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static io.envoyproxy.envoy.config.core.v3.UdpSocketConfig parseFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input);
  }
  public static io.envoyproxy.envoy.config.core.v3.UdpSocketConfig parseFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input, extensionRegistry);
  }
  public static io.envoyproxy.envoy.config.core.v3.UdpSocketConfig parseDelimitedFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseDelimitedWithIOException(PARSER, input);
  }
  public static io.envoyproxy.envoy.config.core.v3.UdpSocketConfig parseDelimitedFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
  }
  public static io.envoyproxy.envoy.config.core.v3.UdpSocketConfig parseFrom(
      com.google.protobuf.CodedInputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input);
  }
  public static io.envoyproxy.envoy.config.core.v3.UdpSocketConfig parseFrom(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input, extensionRegistry);
  }

  @java.lang.Override
  public Builder newBuilderForType() { return newBuilder(); }
  public static Builder newBuilder() {
    return DEFAULT_INSTANCE.toBuilder();
  }
  public static Builder newBuilder(io.envoyproxy.envoy.config.core.v3.UdpSocketConfig prototype) {
    return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
  }
  @java.lang.Override
  public Builder toBuilder() {
    return this == DEFAULT_INSTANCE
        ? new Builder() : new Builder().mergeFrom(this);
  }

  @java.lang.Override
  protected Builder newBuilderForType(
      com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
    Builder builder = new Builder(parent);
    return builder;
  }
  /**
   * <pre>
   * Generic UDP socket configuration.
   * </pre>
   *
   * Protobuf type {@code envoy.config.core.v3.UdpSocketConfig}
   */
  public static final class Builder extends
      com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
      // @@protoc_insertion_point(builder_implements:envoy.config.core.v3.UdpSocketConfig)
      io.envoyproxy.envoy.config.core.v3.UdpSocketConfigOrBuilder {
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return io.envoyproxy.envoy.config.core.v3.UdpSocketConfigProto.internal_static_envoy_config_core_v3_UdpSocketConfig_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return io.envoyproxy.envoy.config.core.v3.UdpSocketConfigProto.internal_static_envoy_config_core_v3_UdpSocketConfig_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              io.envoyproxy.envoy.config.core.v3.UdpSocketConfig.class, io.envoyproxy.envoy.config.core.v3.UdpSocketConfig.Builder.class);
    }

    // Construct using io.envoyproxy.envoy.config.core.v3.UdpSocketConfig.newBuilder()
    private Builder() {

    }

    private Builder(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      super(parent);

    }
    @java.lang.Override
    public Builder clear() {
      super.clear();
      bitField0_ = 0;
      maxRxDatagramSize_ = null;
      if (maxRxDatagramSizeBuilder_ != null) {
        maxRxDatagramSizeBuilder_.dispose();
        maxRxDatagramSizeBuilder_ = null;
      }
      preferGro_ = null;
      if (preferGroBuilder_ != null) {
        preferGroBuilder_.dispose();
        preferGroBuilder_ = null;
      }
      return this;
    }

    @java.lang.Override
    public com.google.protobuf.Descriptors.Descriptor
        getDescriptorForType() {
      return io.envoyproxy.envoy.config.core.v3.UdpSocketConfigProto.internal_static_envoy_config_core_v3_UdpSocketConfig_descriptor;
    }

    @java.lang.Override
    public io.envoyproxy.envoy.config.core.v3.UdpSocketConfig getDefaultInstanceForType() {
      return io.envoyproxy.envoy.config.core.v3.UdpSocketConfig.getDefaultInstance();
    }

    @java.lang.Override
    public io.envoyproxy.envoy.config.core.v3.UdpSocketConfig build() {
      io.envoyproxy.envoy.config.core.v3.UdpSocketConfig result = buildPartial();
      if (!result.isInitialized()) {
        throw newUninitializedMessageException(result);
      }
      return result;
    }

    @java.lang.Override
    public io.envoyproxy.envoy.config.core.v3.UdpSocketConfig buildPartial() {
      io.envoyproxy.envoy.config.core.v3.UdpSocketConfig result = new io.envoyproxy.envoy.config.core.v3.UdpSocketConfig(this);
      if (bitField0_ != 0) { buildPartial0(result); }
      onBuilt();
      return result;
    }

    private void buildPartial0(io.envoyproxy.envoy.config.core.v3.UdpSocketConfig result) {
      int from_bitField0_ = bitField0_;
      if (((from_bitField0_ & 0x00000001) != 0)) {
        result.maxRxDatagramSize_ = maxRxDatagramSizeBuilder_ == null
            ? maxRxDatagramSize_
            : maxRxDatagramSizeBuilder_.build();
      }
      if (((from_bitField0_ & 0x00000002) != 0)) {
        result.preferGro_ = preferGroBuilder_ == null
            ? preferGro_
            : preferGroBuilder_.build();
      }
    }

    @java.lang.Override
    public Builder clone() {
      return super.clone();
    }
    @java.lang.Override
    public Builder setField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        java.lang.Object value) {
      return super.setField(field, value);
    }
    @java.lang.Override
    public Builder clearField(
        com.google.protobuf.Descriptors.FieldDescriptor field) {
      return super.clearField(field);
    }
    @java.lang.Override
    public Builder clearOneof(
        com.google.protobuf.Descriptors.OneofDescriptor oneof) {
      return super.clearOneof(oneof);
    }
    @java.lang.Override
    public Builder setRepeatedField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        int index, java.lang.Object value) {
      return super.setRepeatedField(field, index, value);
    }
    @java.lang.Override
    public Builder addRepeatedField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        java.lang.Object value) {
      return super.addRepeatedField(field, value);
    }
    @java.lang.Override
    public Builder mergeFrom(com.google.protobuf.Message other) {
      if (other instanceof io.envoyproxy.envoy.config.core.v3.UdpSocketConfig) {
        return mergeFrom((io.envoyproxy.envoy.config.core.v3.UdpSocketConfig)other);
      } else {
        super.mergeFrom(other);
        return this;
      }
    }

    public Builder mergeFrom(io.envoyproxy.envoy.config.core.v3.UdpSocketConfig other) {
      if (other == io.envoyproxy.envoy.config.core.v3.UdpSocketConfig.getDefaultInstance()) return this;
      if (other.hasMaxRxDatagramSize()) {
        mergeMaxRxDatagramSize(other.getMaxRxDatagramSize());
      }
      if (other.hasPreferGro()) {
        mergePreferGro(other.getPreferGro());
      }
      this.mergeUnknownFields(other.getUnknownFields());
      onChanged();
      return this;
    }

    @java.lang.Override
    public final boolean isInitialized() {
      return true;
    }

    @java.lang.Override
    public Builder mergeFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 10: {
              input.readMessage(
                  getMaxRxDatagramSizeFieldBuilder().getBuilder(),
                  extensionRegistry);
              bitField0_ |= 0x00000001;
              break;
            } // case 10
            case 18: {
              input.readMessage(
                  getPreferGroFieldBuilder().getBuilder(),
                  extensionRegistry);
              bitField0_ |= 0x00000002;
              break;
            } // case 18
            default: {
              if (!super.parseUnknownField(input, extensionRegistry, tag)) {
                done = true; // was an endgroup tag
              }
              break;
            } // default:
          } // switch (tag)
        } // while (!done)
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.unwrapIOException();
      } finally {
        onChanged();
      } // finally
      return this;
    }
    private int bitField0_;

    private com.google.protobuf.UInt64Value maxRxDatagramSize_;
    private com.google.protobuf.SingleFieldBuilderV3<
        com.google.protobuf.UInt64Value, com.google.protobuf.UInt64Value.Builder, com.google.protobuf.UInt64ValueOrBuilder> maxRxDatagramSizeBuilder_;
    /**
     * <pre>
     * The maximum size of received UDP datagrams. Using a larger size will cause Envoy to allocate
     * more memory per socket. Received datagrams above this size will be dropped. If not set
     * defaults to 1500 bytes.
     * </pre>
     *
     * <code>.google.protobuf.UInt64Value max_rx_datagram_size = 1 [(.validate.rules) = { ... }</code>
     * @return Whether the maxRxDatagramSize field is set.
     */
    public boolean hasMaxRxDatagramSize() {
      return ((bitField0_ & 0x00000001) != 0);
    }
    /**
     * <pre>
     * The maximum size of received UDP datagrams. Using a larger size will cause Envoy to allocate
     * more memory per socket. Received datagrams above this size will be dropped. If not set
     * defaults to 1500 bytes.
     * </pre>
     *
     * <code>.google.protobuf.UInt64Value max_rx_datagram_size = 1 [(.validate.rules) = { ... }</code>
     * @return The maxRxDatagramSize.
     */
    public com.google.protobuf.UInt64Value getMaxRxDatagramSize() {
      if (maxRxDatagramSizeBuilder_ == null) {
        return maxRxDatagramSize_ == null ? com.google.protobuf.UInt64Value.getDefaultInstance() : maxRxDatagramSize_;
      } else {
        return maxRxDatagramSizeBuilder_.getMessage();
      }
    }
    /**
     * <pre>
     * The maximum size of received UDP datagrams. Using a larger size will cause Envoy to allocate
     * more memory per socket. Received datagrams above this size will be dropped. If not set
     * defaults to 1500 bytes.
     * </pre>
     *
     * <code>.google.protobuf.UInt64Value max_rx_datagram_size = 1 [(.validate.rules) = { ... }</code>
     */
    public Builder setMaxRxDatagramSize(com.google.protobuf.UInt64Value value) {
      if (maxRxDatagramSizeBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        maxRxDatagramSize_ = value;
      } else {
        maxRxDatagramSizeBuilder_.setMessage(value);
      }
      bitField0_ |= 0x00000001;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * The maximum size of received UDP datagrams. Using a larger size will cause Envoy to allocate
     * more memory per socket. Received datagrams above this size will be dropped. If not set
     * defaults to 1500 bytes.
     * </pre>
     *
     * <code>.google.protobuf.UInt64Value max_rx_datagram_size = 1 [(.validate.rules) = { ... }</code>
     */
    public Builder setMaxRxDatagramSize(
        com.google.protobuf.UInt64Value.Builder builderForValue) {
      if (maxRxDatagramSizeBuilder_ == null) {
        maxRxDatagramSize_ = builderForValue.build();
      } else {
        maxRxDatagramSizeBuilder_.setMessage(builderForValue.build());
      }
      bitField0_ |= 0x00000001;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * The maximum size of received UDP datagrams. Using a larger size will cause Envoy to allocate
     * more memory per socket. Received datagrams above this size will be dropped. If not set
     * defaults to 1500 bytes.
     * </pre>
     *
     * <code>.google.protobuf.UInt64Value max_rx_datagram_size = 1 [(.validate.rules) = { ... }</code>
     */
    public Builder mergeMaxRxDatagramSize(com.google.protobuf.UInt64Value value) {
      if (maxRxDatagramSizeBuilder_ == null) {
        if (((bitField0_ & 0x00000001) != 0) &&
          maxRxDatagramSize_ != null &&
          maxRxDatagramSize_ != com.google.protobuf.UInt64Value.getDefaultInstance()) {
          getMaxRxDatagramSizeBuilder().mergeFrom(value);
        } else {
          maxRxDatagramSize_ = value;
        }
      } else {
        maxRxDatagramSizeBuilder_.mergeFrom(value);
      }
      bitField0_ |= 0x00000001;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * The maximum size of received UDP datagrams. Using a larger size will cause Envoy to allocate
     * more memory per socket. Received datagrams above this size will be dropped. If not set
     * defaults to 1500 bytes.
     * </pre>
     *
     * <code>.google.protobuf.UInt64Value max_rx_datagram_size = 1 [(.validate.rules) = { ... }</code>
     */
    public Builder clearMaxRxDatagramSize() {
      bitField0_ = (bitField0_ & ~0x00000001);
      maxRxDatagramSize_ = null;
      if (maxRxDatagramSizeBuilder_ != null) {
        maxRxDatagramSizeBuilder_.dispose();
        maxRxDatagramSizeBuilder_ = null;
      }
      onChanged();
      return this;
    }
    /**
     * <pre>
     * The maximum size of received UDP datagrams. Using a larger size will cause Envoy to allocate
     * more memory per socket. Received datagrams above this size will be dropped. If not set
     * defaults to 1500 bytes.
     * </pre>
     *
     * <code>.google.protobuf.UInt64Value max_rx_datagram_size = 1 [(.validate.rules) = { ... }</code>
     */
    public com.google.protobuf.UInt64Value.Builder getMaxRxDatagramSizeBuilder() {
      bitField0_ |= 0x00000001;
      onChanged();
      return getMaxRxDatagramSizeFieldBuilder().getBuilder();
    }
    /**
     * <pre>
     * The maximum size of received UDP datagrams. Using a larger size will cause Envoy to allocate
     * more memory per socket. Received datagrams above this size will be dropped. If not set
     * defaults to 1500 bytes.
     * </pre>
     *
     * <code>.google.protobuf.UInt64Value max_rx_datagram_size = 1 [(.validate.rules) = { ... }</code>
     */
    public com.google.protobuf.UInt64ValueOrBuilder getMaxRxDatagramSizeOrBuilder() {
      if (maxRxDatagramSizeBuilder_ != null) {
        return maxRxDatagramSizeBuilder_.getMessageOrBuilder();
      } else {
        return maxRxDatagramSize_ == null ?
            com.google.protobuf.UInt64Value.getDefaultInstance() : maxRxDatagramSize_;
      }
    }
    /**
     * <pre>
     * The maximum size of received UDP datagrams. Using a larger size will cause Envoy to allocate
     * more memory per socket. Received datagrams above this size will be dropped. If not set
     * defaults to 1500 bytes.
     * </pre>
     *
     * <code>.google.protobuf.UInt64Value max_rx_datagram_size = 1 [(.validate.rules) = { ... }</code>
     */
    private com.google.protobuf.SingleFieldBuilderV3<
        com.google.protobuf.UInt64Value, com.google.protobuf.UInt64Value.Builder, com.google.protobuf.UInt64ValueOrBuilder> 
        getMaxRxDatagramSizeFieldBuilder() {
      if (maxRxDatagramSizeBuilder_ == null) {
        maxRxDatagramSizeBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
            com.google.protobuf.UInt64Value, com.google.protobuf.UInt64Value.Builder, com.google.protobuf.UInt64ValueOrBuilder>(
                getMaxRxDatagramSize(),
                getParentForChildren(),
                isClean());
        maxRxDatagramSize_ = null;
      }
      return maxRxDatagramSizeBuilder_;
    }

    private com.google.protobuf.BoolValue preferGro_;
    private com.google.protobuf.SingleFieldBuilderV3<
        com.google.protobuf.BoolValue, com.google.protobuf.BoolValue.Builder, com.google.protobuf.BoolValueOrBuilder> preferGroBuilder_;
    /**
     * <pre>
     * Configures whether Generic Receive Offload (GRO)
     * &lt;https://en.wikipedia.org/wiki/Large_receive_offload&gt;_ is preferred when reading from the
     * UDP socket. The default is context dependent and is documented where UdpSocketConfig is used.
     * This option affects performance but not functionality. If GRO is not supported by the operating
     * system, non-GRO receive will be used.
     * </pre>
     *
     * <code>.google.protobuf.BoolValue prefer_gro = 2;</code>
     * @return Whether the preferGro field is set.
     */
    public boolean hasPreferGro() {
      return ((bitField0_ & 0x00000002) != 0);
    }
    /**
     * <pre>
     * Configures whether Generic Receive Offload (GRO)
     * &lt;https://en.wikipedia.org/wiki/Large_receive_offload&gt;_ is preferred when reading from the
     * UDP socket. The default is context dependent and is documented where UdpSocketConfig is used.
     * This option affects performance but not functionality. If GRO is not supported by the operating
     * system, non-GRO receive will be used.
     * </pre>
     *
     * <code>.google.protobuf.BoolValue prefer_gro = 2;</code>
     * @return The preferGro.
     */
    public com.google.protobuf.BoolValue getPreferGro() {
      if (preferGroBuilder_ == null) {
        return preferGro_ == null ? com.google.protobuf.BoolValue.getDefaultInstance() : preferGro_;
      } else {
        return preferGroBuilder_.getMessage();
      }
    }
    /**
     * <pre>
     * Configures whether Generic Receive Offload (GRO)
     * &lt;https://en.wikipedia.org/wiki/Large_receive_offload&gt;_ is preferred when reading from the
     * UDP socket. The default is context dependent and is documented where UdpSocketConfig is used.
     * This option affects performance but not functionality. If GRO is not supported by the operating
     * system, non-GRO receive will be used.
     * </pre>
     *
     * <code>.google.protobuf.BoolValue prefer_gro = 2;</code>
     */
    public Builder setPreferGro(com.google.protobuf.BoolValue value) {
      if (preferGroBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        preferGro_ = value;
      } else {
        preferGroBuilder_.setMessage(value);
      }
      bitField0_ |= 0x00000002;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * Configures whether Generic Receive Offload (GRO)
     * &lt;https://en.wikipedia.org/wiki/Large_receive_offload&gt;_ is preferred when reading from the
     * UDP socket. The default is context dependent and is documented where UdpSocketConfig is used.
     * This option affects performance but not functionality. If GRO is not supported by the operating
     * system, non-GRO receive will be used.
     * </pre>
     *
     * <code>.google.protobuf.BoolValue prefer_gro = 2;</code>
     */
    public Builder setPreferGro(
        com.google.protobuf.BoolValue.Builder builderForValue) {
      if (preferGroBuilder_ == null) {
        preferGro_ = builderForValue.build();
      } else {
        preferGroBuilder_.setMessage(builderForValue.build());
      }
      bitField0_ |= 0x00000002;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * Configures whether Generic Receive Offload (GRO)
     * &lt;https://en.wikipedia.org/wiki/Large_receive_offload&gt;_ is preferred when reading from the
     * UDP socket. The default is context dependent and is documented where UdpSocketConfig is used.
     * This option affects performance but not functionality. If GRO is not supported by the operating
     * system, non-GRO receive will be used.
     * </pre>
     *
     * <code>.google.protobuf.BoolValue prefer_gro = 2;</code>
     */
    public Builder mergePreferGro(com.google.protobuf.BoolValue value) {
      if (preferGroBuilder_ == null) {
        if (((bitField0_ & 0x00000002) != 0) &&
          preferGro_ != null &&
          preferGro_ != com.google.protobuf.BoolValue.getDefaultInstance()) {
          getPreferGroBuilder().mergeFrom(value);
        } else {
          preferGro_ = value;
        }
      } else {
        preferGroBuilder_.mergeFrom(value);
      }
      bitField0_ |= 0x00000002;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * Configures whether Generic Receive Offload (GRO)
     * &lt;https://en.wikipedia.org/wiki/Large_receive_offload&gt;_ is preferred when reading from the
     * UDP socket. The default is context dependent and is documented where UdpSocketConfig is used.
     * This option affects performance but not functionality. If GRO is not supported by the operating
     * system, non-GRO receive will be used.
     * </pre>
     *
     * <code>.google.protobuf.BoolValue prefer_gro = 2;</code>
     */
    public Builder clearPreferGro() {
      bitField0_ = (bitField0_ & ~0x00000002);
      preferGro_ = null;
      if (preferGroBuilder_ != null) {
        preferGroBuilder_.dispose();
        preferGroBuilder_ = null;
      }
      onChanged();
      return this;
    }
    /**
     * <pre>
     * Configures whether Generic Receive Offload (GRO)
     * &lt;https://en.wikipedia.org/wiki/Large_receive_offload&gt;_ is preferred when reading from the
     * UDP socket. The default is context dependent and is documented where UdpSocketConfig is used.
     * This option affects performance but not functionality. If GRO is not supported by the operating
     * system, non-GRO receive will be used.
     * </pre>
     *
     * <code>.google.protobuf.BoolValue prefer_gro = 2;</code>
     */
    public com.google.protobuf.BoolValue.Builder getPreferGroBuilder() {
      bitField0_ |= 0x00000002;
      onChanged();
      return getPreferGroFieldBuilder().getBuilder();
    }
    /**
     * <pre>
     * Configures whether Generic Receive Offload (GRO)
     * &lt;https://en.wikipedia.org/wiki/Large_receive_offload&gt;_ is preferred when reading from the
     * UDP socket. The default is context dependent and is documented where UdpSocketConfig is used.
     * This option affects performance but not functionality. If GRO is not supported by the operating
     * system, non-GRO receive will be used.
     * </pre>
     *
     * <code>.google.protobuf.BoolValue prefer_gro = 2;</code>
     */
    public com.google.protobuf.BoolValueOrBuilder getPreferGroOrBuilder() {
      if (preferGroBuilder_ != null) {
        return preferGroBuilder_.getMessageOrBuilder();
      } else {
        return preferGro_ == null ?
            com.google.protobuf.BoolValue.getDefaultInstance() : preferGro_;
      }
    }
    /**
     * <pre>
     * Configures whether Generic Receive Offload (GRO)
     * &lt;https://en.wikipedia.org/wiki/Large_receive_offload&gt;_ is preferred when reading from the
     * UDP socket. The default is context dependent and is documented where UdpSocketConfig is used.
     * This option affects performance but not functionality. If GRO is not supported by the operating
     * system, non-GRO receive will be used.
     * </pre>
     *
     * <code>.google.protobuf.BoolValue prefer_gro = 2;</code>
     */
    private com.google.protobuf.SingleFieldBuilderV3<
        com.google.protobuf.BoolValue, com.google.protobuf.BoolValue.Builder, com.google.protobuf.BoolValueOrBuilder> 
        getPreferGroFieldBuilder() {
      if (preferGroBuilder_ == null) {
        preferGroBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
            com.google.protobuf.BoolValue, com.google.protobuf.BoolValue.Builder, com.google.protobuf.BoolValueOrBuilder>(
                getPreferGro(),
                getParentForChildren(),
                isClean());
        preferGro_ = null;
      }
      return preferGroBuilder_;
    }
    @java.lang.Override
    public final Builder setUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return super.setUnknownFields(unknownFields);
    }

    @java.lang.Override
    public final Builder mergeUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return super.mergeUnknownFields(unknownFields);
    }


    // @@protoc_insertion_point(builder_scope:envoy.config.core.v3.UdpSocketConfig)
  }

  // @@protoc_insertion_point(class_scope:envoy.config.core.v3.UdpSocketConfig)
  private static final io.envoyproxy.envoy.config.core.v3.UdpSocketConfig DEFAULT_INSTANCE;
  static {
    DEFAULT_INSTANCE = new io.envoyproxy.envoy.config.core.v3.UdpSocketConfig();
  }

  public static io.envoyproxy.envoy.config.core.v3.UdpSocketConfig getDefaultInstance() {
    return DEFAULT_INSTANCE;
  }

  private static final com.google.protobuf.Parser<UdpSocketConfig>
      PARSER = new com.google.protobuf.AbstractParser<UdpSocketConfig>() {
    @java.lang.Override
    public UdpSocketConfig parsePartialFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      Builder builder = newBuilder();
      try {
        builder.mergeFrom(input, extensionRegistry);
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(builder.buildPartial());
      } catch (com.google.protobuf.UninitializedMessageException e) {
        throw e.asInvalidProtocolBufferException().setUnfinishedMessage(builder.buildPartial());
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(e)
            .setUnfinishedMessage(builder.buildPartial());
      }
      return builder.buildPartial();
    }
  };

  public static com.google.protobuf.Parser<UdpSocketConfig> parser() {
    return PARSER;
  }

  @java.lang.Override
  public com.google.protobuf.Parser<UdpSocketConfig> getParserForType() {
    return PARSER;
  }

  @java.lang.Override
  public io.envoyproxy.envoy.config.core.v3.UdpSocketConfig getDefaultInstanceForType() {
    return DEFAULT_INSTANCE;
  }

}

