// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: envoy/config/core/v3/health_check.proto

package io.envoyproxy.envoy.config.core.v3;

public final class HealthCheckProto {
  private HealthCheckProto() {}
  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistryLite registry) {
  }

  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistry registry) {
    registerAllExtensions(
        (com.google.protobuf.ExtensionRegistryLite) registry);
  }
  static final com.google.protobuf.Descriptors.Descriptor
    internal_static_envoy_config_core_v3_HealthStatusSet_descriptor;
  static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_envoy_config_core_v3_HealthStatusSet_fieldAccessorTable;
  static final com.google.protobuf.Descriptors.Descriptor
    internal_static_envoy_config_core_v3_HealthCheck_descriptor;
  static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_envoy_config_core_v3_HealthCheck_fieldAccessorTable;
  static final com.google.protobuf.Descriptors.Descriptor
    internal_static_envoy_config_core_v3_HealthCheck_Payload_descriptor;
  static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_envoy_config_core_v3_HealthCheck_Payload_fieldAccessorTable;
  static final com.google.protobuf.Descriptors.Descriptor
    internal_static_envoy_config_core_v3_HealthCheck_HttpHealthCheck_descriptor;
  static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_envoy_config_core_v3_HealthCheck_HttpHealthCheck_fieldAccessorTable;
  static final com.google.protobuf.Descriptors.Descriptor
    internal_static_envoy_config_core_v3_HealthCheck_TcpHealthCheck_descriptor;
  static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_envoy_config_core_v3_HealthCheck_TcpHealthCheck_fieldAccessorTable;
  static final com.google.protobuf.Descriptors.Descriptor
    internal_static_envoy_config_core_v3_HealthCheck_RedisHealthCheck_descriptor;
  static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_envoy_config_core_v3_HealthCheck_RedisHealthCheck_fieldAccessorTable;
  static final com.google.protobuf.Descriptors.Descriptor
    internal_static_envoy_config_core_v3_HealthCheck_GrpcHealthCheck_descriptor;
  static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_envoy_config_core_v3_HealthCheck_GrpcHealthCheck_fieldAccessorTable;
  static final com.google.protobuf.Descriptors.Descriptor
    internal_static_envoy_config_core_v3_HealthCheck_CustomHealthCheck_descriptor;
  static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_envoy_config_core_v3_HealthCheck_CustomHealthCheck_fieldAccessorTable;
  static final com.google.protobuf.Descriptors.Descriptor
    internal_static_envoy_config_core_v3_HealthCheck_TlsOptions_descriptor;
  static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_envoy_config_core_v3_HealthCheck_TlsOptions_fieldAccessorTable;

  public static com.google.protobuf.Descriptors.FileDescriptor
      getDescriptor() {
    return descriptor;
  }
  private static  com.google.protobuf.Descriptors.FileDescriptor
      descriptor;
  static {
    java.lang.String[] descriptorData = {
      "\n\'envoy/config/core/v3/health_check.prot" +
      "o\022\024envoy.config.core.v3\032\037envoy/config/co" +
      "re/v3/base.proto\032/envoy/config/core/v3/e" +
      "vent_service_config.proto\032\"envoy/type/ma" +
      "tcher/v3/string.proto\032\030envoy/type/v3/htt" +
      "p.proto\032\031envoy/type/v3/range.proto\032\031goog" +
      "le/protobuf/any.proto\032\036google/protobuf/d" +
      "uration.proto\032\034google/protobuf/struct.pr" +
      "oto\032\036google/protobuf/wrappers.proto\032\035udp" +
      "a/annotations/status.proto\032!udpa/annotat" +
      "ions/versioning.proto\032\027validate/validate" +
      ".proto\"V\n\017HealthStatusSet\022C\n\010statuses\030\001 " +
      "\003(\0162\".envoy.config.core.v3.HealthStatusB" +
      "\r\372B\n\222\001\007\"\005\202\001\002\020\001\"\327\030\n\013HealthCheck\0226\n\007timeou" +
      "t\030\001 \001(\0132\031.google.protobuf.DurationB\n\372B\007\252" +
      "\001\004\010\001*\000\0227\n\010interval\030\002 \001(\0132\031.google.protob" +
      "uf.DurationB\n\372B\007\252\001\004\010\001*\000\0221\n\016initial_jitte" +
      "r\030\024 \001(\0132\031.google.protobuf.Duration\0222\n\017in" +
      "terval_jitter\030\003 \001(\0132\031.google.protobuf.Du" +
      "ration\022\037\n\027interval_jitter_percent\030\022 \001(\r\022" +
      "C\n\023unhealthy_threshold\030\004 \001(\0132\034.google.pr" +
      "otobuf.UInt32ValueB\010\372B\005\212\001\002\020\001\022A\n\021healthy_" +
      "threshold\030\005 \001(\0132\034.google.protobuf.UInt32" +
      "ValueB\010\372B\005\212\001\002\020\001\022.\n\010alt_port\030\006 \001(\0132\034.goog" +
      "le.protobuf.UInt32Value\0224\n\020reuse_connect" +
      "ion\030\007 \001(\0132\032.google.protobuf.BoolValue\022N\n" +
      "\021http_health_check\030\010 \001(\01321.envoy.config." +
      "core.v3.HealthCheck.HttpHealthCheckH\000\022L\n" +
      "\020tcp_health_check\030\t \001(\01320.envoy.config.c" +
      "ore.v3.HealthCheck.TcpHealthCheckH\000\022N\n\021g" +
      "rpc_health_check\030\013 \001(\01321.envoy.config.co" +
      "re.v3.HealthCheck.GrpcHealthCheckH\000\022R\n\023c" +
      "ustom_health_check\030\r \001(\01323.envoy.config." +
      "core.v3.HealthCheck.CustomHealthCheckH\000\022" +
      "@\n\023no_traffic_interval\030\014 \001(\0132\031.google.pr" +
      "otobuf.DurationB\010\372B\005\252\001\002*\000\022H\n\033no_traffic_" +
      "healthy_interval\030\030 \001(\0132\031.google.protobuf" +
      ".DurationB\010\372B\005\252\001\002*\000\022?\n\022unhealthy_interva" +
      "l\030\016 \001(\0132\031.google.protobuf.DurationB\010\372B\005\252" +
      "\001\002*\000\022D\n\027unhealthy_edge_interval\030\017 \001(\0132\031." +
      "google.protobuf.DurationB\010\372B\005\252\001\002*\000\022B\n\025he" +
      "althy_edge_interval\030\020 \001(\0132\031.google.proto" +
      "buf.DurationB\010\372B\005\252\001\002*\000\022\026\n\016event_log_path" +
      "\030\021 \001(\t\022?\n\revent_service\030\026 \001(\0132(.envoy.co" +
      "nfig.core.v3.EventServiceConfig\022(\n alway" +
      "s_log_health_check_failures\030\023 \001(\010\022A\n\013tls" +
      "_options\030\025 \001(\0132,.envoy.config.core.v3.He" +
      "althCheck.TlsOptions\022@\n\037transport_socket" +
      "_match_criteria\030\027 \001(\0132\027.google.protobuf." +
      "Struct\032r\n\007Payload\022\027\n\004text\030\001 \001(\tB\007\372B\004r\002\020\001" +
      "H\000\022\020\n\006binary\030\002 \001(\014H\000:,\232\305\210\036\'\n%envoy.api.v" +
      "2.core.HealthCheck.PayloadB\016\n\007payload\022\003\370" +
      "B\001\032\236\006\n\017HttpHealthCheck\022\031\n\004host\030\001 \001(\tB\013\372B" +
      "\010r\006\300\001\002\310\001\000\022\033\n\004path\030\002 \001(\tB\r\372B\nr\010\020\001\300\001\002\310\001\000\0227" +
      "\n\004send\030\003 \001(\0132).envoy.config.core.v3.Heal" +
      "thCheck.Payload\022:\n\007receive\030\004 \003(\0132).envoy" +
      ".config.core.v3.HealthCheck.Payload\022C\n\024r" +
      "esponse_buffer_size\030\016 \001(\0132\034.google.proto" +
      "buf.UInt64ValueB\007\372B\0042\002(\000\022R\n\026request_head" +
      "ers_to_add\030\006 \003(\0132\'.envoy.config.core.v3." +
      "HeaderValueOptionB\t\372B\006\222\001\003\020\350\007\0223\n\031request_" +
      "headers_to_remove\030\010 \003(\tB\020\372B\r\222\001\n\"\010r\006\300\001\001\310\001" +
      "\000\0224\n\021expected_statuses\030\t \003(\0132\031.envoy.typ" +
      "e.v3.Int64Range\0225\n\022retriable_statuses\030\014 " +
      "\003(\0132\031.envoy.type.v3.Int64Range\022C\n\021codec_" +
      "client_type\030\n \001(\0162\036.envoy.type.v3.CodecC" +
      "lientTypeB\010\372B\005\202\001\002\020\001\022B\n\024service_name_matc" +
      "her\030\013 \001(\0132$.envoy.type.matcher.v3.String" +
      "Matcher\022?\n\006method\030\r \001(\0162#.envoy.config.c" +
      "ore.v3.RequestMethodB\n\372B\007\202\001\004\020\001 \006:4\232\305\210\036/\n" +
      "-envoy.api.v2.core.HealthCheck.HttpHealt" +
      "hCheckJ\004\010\005\020\006J\004\010\007\020\010R\014service_nameR\tuse_ht" +
      "tp2\032\272\001\n\016TcpHealthCheck\0227\n\004send\030\001 \001(\0132).e" +
      "nvoy.config.core.v3.HealthCheck.Payload\022" +
      ":\n\007receive\030\002 \003(\0132).envoy.config.core.v3." +
      "HealthCheck.Payload:3\232\305\210\036.\n,envoy.api.v2" +
      ".core.HealthCheck.TcpHealthCheck\032V\n\020Redi" +
      "sHealthCheck\022\013\n\003key\030\001 \001(\t:5\232\305\210\0360\n.envoy." +
      "api.v2.core.HealthCheck.RedisHealthCheck" +
      "\032\313\001\n\017GrpcHealthCheck\022\024\n\014service_name\030\001 \001" +
      "(\t\022\036\n\tauthority\030\002 \001(\tB\013\372B\010r\006\300\001\002\310\001\000\022L\n\020in" +
      "itial_metadata\030\003 \003(\0132\'.envoy.config.core" +
      ".v3.HeaderValueOptionB\t\372B\006\222\001\003\020\350\007:4\232\305\210\036/\n" +
      "-envoy.api.v2.core.HealthCheck.GrpcHealt" +
      "hCheck\032\255\001\n\021CustomHealthCheck\022\025\n\004name\030\001 \001" +
      "(\tB\007\372B\004r\002\020\001\022,\n\014typed_config\030\003 \001(\0132\024.goog" +
      "le.protobuf.AnyH\000:6\232\305\210\0361\n/envoy.api.v2.c" +
      "ore.HealthCheck.CustomHealthCheckB\r\n\013con" +
      "fig_typeJ\004\010\002\020\003R\006config\032U\n\nTlsOptions\022\026\n\016" +
      "alpn_protocols\030\001 \003(\t:/\232\305\210\036*\n(envoy.api.v" +
      "2.core.HealthCheck.TlsOptions:$\232\305\210\036\037\n\035en" +
      "voy.api.v2.core.HealthCheckB\025\n\016health_ch" +
      "ecker\022\003\370B\001J\004\010\n\020\013*`\n\014HealthStatus\022\013\n\007UNKN" +
      "OWN\020\000\022\013\n\007HEALTHY\020\001\022\r\n\tUNHEALTHY\020\002\022\014\n\010DRA" +
      "INING\020\003\022\013\n\007TIMEOUT\020\004\022\014\n\010DEGRADED\020\005B\204\001\n\"i" +
      "o.envoyproxy.envoy.config.core.v3B\020Healt" +
      "hCheckProtoP\001ZBgithub.com/envoyproxy/go-" +
      "control-plane/envoy/config/core/v3;corev" +
      "3\272\200\310\321\006\002\020\002b\006proto3"
    };
    descriptor = com.google.protobuf.Descriptors.FileDescriptor
      .internalBuildGeneratedFileFrom(descriptorData,
        new com.google.protobuf.Descriptors.FileDescriptor[] {
          io.envoyproxy.envoy.config.core.v3.BaseProto.getDescriptor(),
          io.envoyproxy.envoy.config.core.v3.EventServiceConfigProto.getDescriptor(),
          io.envoyproxy.envoy.type.matcher.v3.StringProto.getDescriptor(),
          io.envoyproxy.envoy.type.v3.HttpProto.getDescriptor(),
          io.envoyproxy.envoy.type.v3.RangeProto.getDescriptor(),
          com.google.protobuf.AnyProto.getDescriptor(),
          com.google.protobuf.DurationProto.getDescriptor(),
          com.google.protobuf.StructProto.getDescriptor(),
          com.google.protobuf.WrappersProto.getDescriptor(),
          udpa.annotations.Status.getDescriptor(),
          udpa.annotations.Versioning.getDescriptor(),
          io.envoyproxy.pgv.validate.Validate.getDescriptor(),
        });
    internal_static_envoy_config_core_v3_HealthStatusSet_descriptor =
      getDescriptor().getMessageTypes().get(0);
    internal_static_envoy_config_core_v3_HealthStatusSet_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_envoy_config_core_v3_HealthStatusSet_descriptor,
        new java.lang.String[] { "Statuses", });
    internal_static_envoy_config_core_v3_HealthCheck_descriptor =
      getDescriptor().getMessageTypes().get(1);
    internal_static_envoy_config_core_v3_HealthCheck_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_envoy_config_core_v3_HealthCheck_descriptor,
        new java.lang.String[] { "Timeout", "Interval", "InitialJitter", "IntervalJitter", "IntervalJitterPercent", "UnhealthyThreshold", "HealthyThreshold", "AltPort", "ReuseConnection", "HttpHealthCheck", "TcpHealthCheck", "GrpcHealthCheck", "CustomHealthCheck", "NoTrafficInterval", "NoTrafficHealthyInterval", "UnhealthyInterval", "UnhealthyEdgeInterval", "HealthyEdgeInterval", "EventLogPath", "EventService", "AlwaysLogHealthCheckFailures", "TlsOptions", "TransportSocketMatchCriteria", "HealthChecker", });
    internal_static_envoy_config_core_v3_HealthCheck_Payload_descriptor =
      internal_static_envoy_config_core_v3_HealthCheck_descriptor.getNestedTypes().get(0);
    internal_static_envoy_config_core_v3_HealthCheck_Payload_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_envoy_config_core_v3_HealthCheck_Payload_descriptor,
        new java.lang.String[] { "Text", "Binary", "Payload", });
    internal_static_envoy_config_core_v3_HealthCheck_HttpHealthCheck_descriptor =
      internal_static_envoy_config_core_v3_HealthCheck_descriptor.getNestedTypes().get(1);
    internal_static_envoy_config_core_v3_HealthCheck_HttpHealthCheck_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_envoy_config_core_v3_HealthCheck_HttpHealthCheck_descriptor,
        new java.lang.String[] { "Host", "Path", "Send", "Receive", "ResponseBufferSize", "RequestHeadersToAdd", "RequestHeadersToRemove", "ExpectedStatuses", "RetriableStatuses", "CodecClientType", "ServiceNameMatcher", "Method", });
    internal_static_envoy_config_core_v3_HealthCheck_TcpHealthCheck_descriptor =
      internal_static_envoy_config_core_v3_HealthCheck_descriptor.getNestedTypes().get(2);
    internal_static_envoy_config_core_v3_HealthCheck_TcpHealthCheck_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_envoy_config_core_v3_HealthCheck_TcpHealthCheck_descriptor,
        new java.lang.String[] { "Send", "Receive", });
    internal_static_envoy_config_core_v3_HealthCheck_RedisHealthCheck_descriptor =
      internal_static_envoy_config_core_v3_HealthCheck_descriptor.getNestedTypes().get(3);
    internal_static_envoy_config_core_v3_HealthCheck_RedisHealthCheck_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_envoy_config_core_v3_HealthCheck_RedisHealthCheck_descriptor,
        new java.lang.String[] { "Key", });
    internal_static_envoy_config_core_v3_HealthCheck_GrpcHealthCheck_descriptor =
      internal_static_envoy_config_core_v3_HealthCheck_descriptor.getNestedTypes().get(4);
    internal_static_envoy_config_core_v3_HealthCheck_GrpcHealthCheck_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_envoy_config_core_v3_HealthCheck_GrpcHealthCheck_descriptor,
        new java.lang.String[] { "ServiceName", "Authority", "InitialMetadata", });
    internal_static_envoy_config_core_v3_HealthCheck_CustomHealthCheck_descriptor =
      internal_static_envoy_config_core_v3_HealthCheck_descriptor.getNestedTypes().get(5);
    internal_static_envoy_config_core_v3_HealthCheck_CustomHealthCheck_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_envoy_config_core_v3_HealthCheck_CustomHealthCheck_descriptor,
        new java.lang.String[] { "Name", "TypedConfig", "ConfigType", });
    internal_static_envoy_config_core_v3_HealthCheck_TlsOptions_descriptor =
      internal_static_envoy_config_core_v3_HealthCheck_descriptor.getNestedTypes().get(6);
    internal_static_envoy_config_core_v3_HealthCheck_TlsOptions_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_envoy_config_core_v3_HealthCheck_TlsOptions_descriptor,
        new java.lang.String[] { "AlpnProtocols", });
    com.google.protobuf.ExtensionRegistry registry =
        com.google.protobuf.ExtensionRegistry.newInstance();
    registry.add(udpa.annotations.Status.fileStatus);
    registry.add(udpa.annotations.Versioning.versioning);
    registry.add(io.envoyproxy.pgv.validate.Validate.required);
    registry.add(io.envoyproxy.pgv.validate.Validate.rules);
    com.google.protobuf.Descriptors.FileDescriptor
        .internalUpdateFileDescriptor(descriptor, registry);
    io.envoyproxy.envoy.config.core.v3.BaseProto.getDescriptor();
    io.envoyproxy.envoy.config.core.v3.EventServiceConfigProto.getDescriptor();
    io.envoyproxy.envoy.type.matcher.v3.StringProto.getDescriptor();
    io.envoyproxy.envoy.type.v3.HttpProto.getDescriptor();
    io.envoyproxy.envoy.type.v3.RangeProto.getDescriptor();
    com.google.protobuf.AnyProto.getDescriptor();
    com.google.protobuf.DurationProto.getDescriptor();
    com.google.protobuf.StructProto.getDescriptor();
    com.google.protobuf.WrappersProto.getDescriptor();
    udpa.annotations.Status.getDescriptor();
    udpa.annotations.Versioning.getDescriptor();
    io.envoyproxy.pgv.validate.Validate.getDescriptor();
  }

  // @@protoc_insertion_point(outer_class_scope)
}
