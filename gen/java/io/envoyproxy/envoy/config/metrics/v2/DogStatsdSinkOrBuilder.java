// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: envoy/config/metrics/v2/stats.proto

package io.envoyproxy.envoy.config.metrics.v2;

public interface DogStatsdSinkOrBuilder extends
    // @@protoc_insertion_point(interface_extends:envoy.config.metrics.v2.DogStatsdSink)
    com.google.protobuf.MessageOrBuilder {

  /**
   * <pre>
   * The UDP address of a running DogStatsD compliant listener. If specified,
   * statistics will be flushed to this address.
   * </pre>
   *
   * <code>.envoy.api.v2.core.Address address = 1;</code>
   * @return Whether the address field is set.
   */
  boolean hasAddress();
  /**
   * <pre>
   * The UDP address of a running DogStatsD compliant listener. If specified,
   * statistics will be flushed to this address.
   * </pre>
   *
   * <code>.envoy.api.v2.core.Address address = 1;</code>
   * @return The address.
   */
  io.envoyproxy.envoy.api.v2.core.Address getAddress();
  /**
   * <pre>
   * The UDP address of a running DogStatsD compliant listener. If specified,
   * statistics will be flushed to this address.
   * </pre>
   *
   * <code>.envoy.api.v2.core.Address address = 1;</code>
   */
  io.envoyproxy.envoy.api.v2.core.AddressOrBuilder getAddressOrBuilder();

  /**
   * <pre>
   * Optional custom metric name prefix. See :ref:`StatsdSink's prefix field
   * &lt;envoy_api_field_config.metrics.v2.StatsdSink.prefix&gt;` for more details.
   * </pre>
   *
   * <code>string prefix = 3;</code>
   * @return The prefix.
   */
  java.lang.String getPrefix();
  /**
   * <pre>
   * Optional custom metric name prefix. See :ref:`StatsdSink's prefix field
   * &lt;envoy_api_field_config.metrics.v2.StatsdSink.prefix&gt;` for more details.
   * </pre>
   *
   * <code>string prefix = 3;</code>
   * @return The bytes for prefix.
   */
  com.google.protobuf.ByteString
      getPrefixBytes();

  public io.envoyproxy.envoy.config.metrics.v2.DogStatsdSink.DogStatsdSpecifierCase getDogStatsdSpecifierCase();
}
