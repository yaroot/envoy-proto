// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: envoy/config/metrics/v2/stats.proto

package io.envoyproxy.envoy.config.metrics.v2;

public interface StatsConfigOrBuilder extends
    // @@protoc_insertion_point(interface_extends:envoy.config.metrics.v2.StatsConfig)
    com.google.protobuf.MessageOrBuilder {

  /**
   * <pre>
   * Each stat name is iteratively processed through these tag specifiers.
   * When a tag is matched, the first capture group is removed from the name so
   * later :ref:`TagSpecifiers &lt;envoy_api_msg_config.metrics.v2.TagSpecifier&gt;` cannot match that
   * same portion of the match.
   * </pre>
   *
   * <code>repeated .envoy.config.metrics.v2.TagSpecifier stats_tags = 1;</code>
   */
  java.util.List<io.envoyproxy.envoy.config.metrics.v2.TagSpecifier> 
      getStatsTagsList();
  /**
   * <pre>
   * Each stat name is iteratively processed through these tag specifiers.
   * When a tag is matched, the first capture group is removed from the name so
   * later :ref:`TagSpecifiers &lt;envoy_api_msg_config.metrics.v2.TagSpecifier&gt;` cannot match that
   * same portion of the match.
   * </pre>
   *
   * <code>repeated .envoy.config.metrics.v2.TagSpecifier stats_tags = 1;</code>
   */
  io.envoyproxy.envoy.config.metrics.v2.TagSpecifier getStatsTags(int index);
  /**
   * <pre>
   * Each stat name is iteratively processed through these tag specifiers.
   * When a tag is matched, the first capture group is removed from the name so
   * later :ref:`TagSpecifiers &lt;envoy_api_msg_config.metrics.v2.TagSpecifier&gt;` cannot match that
   * same portion of the match.
   * </pre>
   *
   * <code>repeated .envoy.config.metrics.v2.TagSpecifier stats_tags = 1;</code>
   */
  int getStatsTagsCount();
  /**
   * <pre>
   * Each stat name is iteratively processed through these tag specifiers.
   * When a tag is matched, the first capture group is removed from the name so
   * later :ref:`TagSpecifiers &lt;envoy_api_msg_config.metrics.v2.TagSpecifier&gt;` cannot match that
   * same portion of the match.
   * </pre>
   *
   * <code>repeated .envoy.config.metrics.v2.TagSpecifier stats_tags = 1;</code>
   */
  java.util.List<? extends io.envoyproxy.envoy.config.metrics.v2.TagSpecifierOrBuilder> 
      getStatsTagsOrBuilderList();
  /**
   * <pre>
   * Each stat name is iteratively processed through these tag specifiers.
   * When a tag is matched, the first capture group is removed from the name so
   * later :ref:`TagSpecifiers &lt;envoy_api_msg_config.metrics.v2.TagSpecifier&gt;` cannot match that
   * same portion of the match.
   * </pre>
   *
   * <code>repeated .envoy.config.metrics.v2.TagSpecifier stats_tags = 1;</code>
   */
  io.envoyproxy.envoy.config.metrics.v2.TagSpecifierOrBuilder getStatsTagsOrBuilder(
      int index);

  /**
   * <pre>
   * Use all default tag regexes specified in Envoy. These can be combined with
   * custom tags specified in :ref:`stats_tags
   * &lt;envoy_api_field_config.metrics.v2.StatsConfig.stats_tags&gt;`. They will be processed before
   * the custom tags.
   * .. note::
   *   If any default tags are specified twice, the config will be considered
   *   invalid.
   * See :repo:`well_known_names.h &lt;source/common/config/well_known_names.h&gt;` for a list of the
   * default tags in Envoy.
   * If not provided, the value is assumed to be true.
   * </pre>
   *
   * <code>.google.protobuf.BoolValue use_all_default_tags = 2;</code>
   * @return Whether the useAllDefaultTags field is set.
   */
  boolean hasUseAllDefaultTags();
  /**
   * <pre>
   * Use all default tag regexes specified in Envoy. These can be combined with
   * custom tags specified in :ref:`stats_tags
   * &lt;envoy_api_field_config.metrics.v2.StatsConfig.stats_tags&gt;`. They will be processed before
   * the custom tags.
   * .. note::
   *   If any default tags are specified twice, the config will be considered
   *   invalid.
   * See :repo:`well_known_names.h &lt;source/common/config/well_known_names.h&gt;` for a list of the
   * default tags in Envoy.
   * If not provided, the value is assumed to be true.
   * </pre>
   *
   * <code>.google.protobuf.BoolValue use_all_default_tags = 2;</code>
   * @return The useAllDefaultTags.
   */
  com.google.protobuf.BoolValue getUseAllDefaultTags();
  /**
   * <pre>
   * Use all default tag regexes specified in Envoy. These can be combined with
   * custom tags specified in :ref:`stats_tags
   * &lt;envoy_api_field_config.metrics.v2.StatsConfig.stats_tags&gt;`. They will be processed before
   * the custom tags.
   * .. note::
   *   If any default tags are specified twice, the config will be considered
   *   invalid.
   * See :repo:`well_known_names.h &lt;source/common/config/well_known_names.h&gt;` for a list of the
   * default tags in Envoy.
   * If not provided, the value is assumed to be true.
   * </pre>
   *
   * <code>.google.protobuf.BoolValue use_all_default_tags = 2;</code>
   */
  com.google.protobuf.BoolValueOrBuilder getUseAllDefaultTagsOrBuilder();

  /**
   * <pre>
   * Inclusion/exclusion matcher for stat name creation. If not provided, all stats are instantiated
   * as normal. Preventing the instantiation of certain families of stats can improve memory
   * performance for Envoys running especially large configs.
   * .. warning::
   *   Excluding stats may affect Envoy's behavior in undocumented ways. See
   *   `issue #8771 &lt;https://github.com/envoyproxy/envoy/issues/8771&gt;`_ for more information.
   *   If any unexpected behavior changes are observed, please open a new issue immediately.
   * </pre>
   *
   * <code>.envoy.config.metrics.v2.StatsMatcher stats_matcher = 3;</code>
   * @return Whether the statsMatcher field is set.
   */
  boolean hasStatsMatcher();
  /**
   * <pre>
   * Inclusion/exclusion matcher for stat name creation. If not provided, all stats are instantiated
   * as normal. Preventing the instantiation of certain families of stats can improve memory
   * performance for Envoys running especially large configs.
   * .. warning::
   *   Excluding stats may affect Envoy's behavior in undocumented ways. See
   *   `issue #8771 &lt;https://github.com/envoyproxy/envoy/issues/8771&gt;`_ for more information.
   *   If any unexpected behavior changes are observed, please open a new issue immediately.
   * </pre>
   *
   * <code>.envoy.config.metrics.v2.StatsMatcher stats_matcher = 3;</code>
   * @return The statsMatcher.
   */
  io.envoyproxy.envoy.config.metrics.v2.StatsMatcher getStatsMatcher();
  /**
   * <pre>
   * Inclusion/exclusion matcher for stat name creation. If not provided, all stats are instantiated
   * as normal. Preventing the instantiation of certain families of stats can improve memory
   * performance for Envoys running especially large configs.
   * .. warning::
   *   Excluding stats may affect Envoy's behavior in undocumented ways. See
   *   `issue #8771 &lt;https://github.com/envoyproxy/envoy/issues/8771&gt;`_ for more information.
   *   If any unexpected behavior changes are observed, please open a new issue immediately.
   * </pre>
   *
   * <code>.envoy.config.metrics.v2.StatsMatcher stats_matcher = 3;</code>
   */
  io.envoyproxy.envoy.config.metrics.v2.StatsMatcherOrBuilder getStatsMatcherOrBuilder();
}
