// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: envoy/config/tap/v3/common.proto

package io.envoyproxy.envoy.config.tap.v3;

/**
 * <pre>
 * BufferedAdminSink configures a tap output to collect traces without returning them until
 * one of multiple criteria are satisfied.
 * Similar to StreamingAdminSink, it is only allowed to specify the buffered admin output
 * sink if the tap is being configured from the ``/tap`` admin endpoint.
 * </pre>
 *
 * Protobuf type {@code envoy.config.tap.v3.BufferedAdminSink}
 */
public final class BufferedAdminSink extends
    com.google.protobuf.GeneratedMessageV3 implements
    // @@protoc_insertion_point(message_implements:envoy.config.tap.v3.BufferedAdminSink)
    BufferedAdminSinkOrBuilder {
private static final long serialVersionUID = 0L;
  // Use BufferedAdminSink.newBuilder() to construct.
  private BufferedAdminSink(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
    super(builder);
  }
  private BufferedAdminSink() {
  }

  @java.lang.Override
  @SuppressWarnings({"unused"})
  protected java.lang.Object newInstance(
      UnusedPrivateParameter unused) {
    return new BufferedAdminSink();
  }

  @java.lang.Override
  public final com.google.protobuf.UnknownFieldSet
  getUnknownFields() {
    return this.unknownFields;
  }
  private BufferedAdminSink(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    this();
    if (extensionRegistry == null) {
      throw new java.lang.NullPointerException();
    }
    com.google.protobuf.UnknownFieldSet.Builder unknownFields =
        com.google.protobuf.UnknownFieldSet.newBuilder();
    try {
      boolean done = false;
      while (!done) {
        int tag = input.readTag();
        switch (tag) {
          case 0:
            done = true;
            break;
          case 8: {

            maxTraces_ = input.readUInt64();
            break;
          }
          case 18: {
            com.google.protobuf.Duration.Builder subBuilder = null;
            if (timeout_ != null) {
              subBuilder = timeout_.toBuilder();
            }
            timeout_ = input.readMessage(com.google.protobuf.Duration.parser(), extensionRegistry);
            if (subBuilder != null) {
              subBuilder.mergeFrom(timeout_);
              timeout_ = subBuilder.buildPartial();
            }

            break;
          }
          default: {
            if (!parseUnknownField(
                input, unknownFields, extensionRegistry, tag)) {
              done = true;
            }
            break;
          }
        }
      }
    } catch (com.google.protobuf.InvalidProtocolBufferException e) {
      throw e.setUnfinishedMessage(this);
    } catch (com.google.protobuf.UninitializedMessageException e) {
      throw e.asInvalidProtocolBufferException().setUnfinishedMessage(this);
    } catch (java.io.IOException e) {
      throw new com.google.protobuf.InvalidProtocolBufferException(
          e).setUnfinishedMessage(this);
    } finally {
      this.unknownFields = unknownFields.build();
      makeExtensionsImmutable();
    }
  }
  public static final com.google.protobuf.Descriptors.Descriptor
      getDescriptor() {
    return io.envoyproxy.envoy.config.tap.v3.CommonProto.internal_static_envoy_config_tap_v3_BufferedAdminSink_descriptor;
  }

  @java.lang.Override
  protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internalGetFieldAccessorTable() {
    return io.envoyproxy.envoy.config.tap.v3.CommonProto.internal_static_envoy_config_tap_v3_BufferedAdminSink_fieldAccessorTable
        .ensureFieldAccessorsInitialized(
            io.envoyproxy.envoy.config.tap.v3.BufferedAdminSink.class, io.envoyproxy.envoy.config.tap.v3.BufferedAdminSink.Builder.class);
  }

  public static final int MAX_TRACES_FIELD_NUMBER = 1;
  private long maxTraces_;
  /**
   * <pre>
   * Stop collecting traces when the specified number are collected.
   * If other criteria for ending collection are reached first, this value will not be used.
   * </pre>
   *
   * <code>uint64 max_traces = 1 [(.validate.rules) = { ... }</code>
   * @return The maxTraces.
   */
  @java.lang.Override
  public long getMaxTraces() {
    return maxTraces_;
  }

  public static final int TIMEOUT_FIELD_NUMBER = 2;
  private com.google.protobuf.Duration timeout_;
  /**
   * <pre>
   * Acts as a fallback to prevent the client from waiting for long periods of time.
   * After timeout has occurred, a buffer flush will be triggered, returning the traces buffered so far.
   * This may result in returning fewer traces than were requested, and in the case that no traces are
   * buffered during this time, no traces will be returned.
   * Specifying 0 for the timeout value (or not specifying a value at all) indicates an infinite timeout.
   * </pre>
   *
   * <code>.google.protobuf.Duration timeout = 2;</code>
   * @return Whether the timeout field is set.
   */
  @java.lang.Override
  public boolean hasTimeout() {
    return timeout_ != null;
  }
  /**
   * <pre>
   * Acts as a fallback to prevent the client from waiting for long periods of time.
   * After timeout has occurred, a buffer flush will be triggered, returning the traces buffered so far.
   * This may result in returning fewer traces than were requested, and in the case that no traces are
   * buffered during this time, no traces will be returned.
   * Specifying 0 for the timeout value (or not specifying a value at all) indicates an infinite timeout.
   * </pre>
   *
   * <code>.google.protobuf.Duration timeout = 2;</code>
   * @return The timeout.
   */
  @java.lang.Override
  public com.google.protobuf.Duration getTimeout() {
    return timeout_ == null ? com.google.protobuf.Duration.getDefaultInstance() : timeout_;
  }
  /**
   * <pre>
   * Acts as a fallback to prevent the client from waiting for long periods of time.
   * After timeout has occurred, a buffer flush will be triggered, returning the traces buffered so far.
   * This may result in returning fewer traces than were requested, and in the case that no traces are
   * buffered during this time, no traces will be returned.
   * Specifying 0 for the timeout value (or not specifying a value at all) indicates an infinite timeout.
   * </pre>
   *
   * <code>.google.protobuf.Duration timeout = 2;</code>
   */
  @java.lang.Override
  public com.google.protobuf.DurationOrBuilder getTimeoutOrBuilder() {
    return getTimeout();
  }

  private byte memoizedIsInitialized = -1;
  @java.lang.Override
  public final boolean isInitialized() {
    byte isInitialized = memoizedIsInitialized;
    if (isInitialized == 1) return true;
    if (isInitialized == 0) return false;

    memoizedIsInitialized = 1;
    return true;
  }

  @java.lang.Override
  public void writeTo(com.google.protobuf.CodedOutputStream output)
                      throws java.io.IOException {
    if (maxTraces_ != 0L) {
      output.writeUInt64(1, maxTraces_);
    }
    if (timeout_ != null) {
      output.writeMessage(2, getTimeout());
    }
    unknownFields.writeTo(output);
  }

  @java.lang.Override
  public int getSerializedSize() {
    int size = memoizedSize;
    if (size != -1) return size;

    size = 0;
    if (maxTraces_ != 0L) {
      size += com.google.protobuf.CodedOutputStream
        .computeUInt64Size(1, maxTraces_);
    }
    if (timeout_ != null) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(2, getTimeout());
    }
    size += unknownFields.getSerializedSize();
    memoizedSize = size;
    return size;
  }

  @java.lang.Override
  public boolean equals(final java.lang.Object obj) {
    if (obj == this) {
     return true;
    }
    if (!(obj instanceof io.envoyproxy.envoy.config.tap.v3.BufferedAdminSink)) {
      return super.equals(obj);
    }
    io.envoyproxy.envoy.config.tap.v3.BufferedAdminSink other = (io.envoyproxy.envoy.config.tap.v3.BufferedAdminSink) obj;

    if (getMaxTraces()
        != other.getMaxTraces()) return false;
    if (hasTimeout() != other.hasTimeout()) return false;
    if (hasTimeout()) {
      if (!getTimeout()
          .equals(other.getTimeout())) return false;
    }
    if (!unknownFields.equals(other.unknownFields)) return false;
    return true;
  }

  @java.lang.Override
  public int hashCode() {
    if (memoizedHashCode != 0) {
      return memoizedHashCode;
    }
    int hash = 41;
    hash = (19 * hash) + getDescriptor().hashCode();
    hash = (37 * hash) + MAX_TRACES_FIELD_NUMBER;
    hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
        getMaxTraces());
    if (hasTimeout()) {
      hash = (37 * hash) + TIMEOUT_FIELD_NUMBER;
      hash = (53 * hash) + getTimeout().hashCode();
    }
    hash = (29 * hash) + unknownFields.hashCode();
    memoizedHashCode = hash;
    return hash;
  }

  public static io.envoyproxy.envoy.config.tap.v3.BufferedAdminSink parseFrom(
      java.nio.ByteBuffer data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static io.envoyproxy.envoy.config.tap.v3.BufferedAdminSink parseFrom(
      java.nio.ByteBuffer data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static io.envoyproxy.envoy.config.tap.v3.BufferedAdminSink parseFrom(
      com.google.protobuf.ByteString data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static io.envoyproxy.envoy.config.tap.v3.BufferedAdminSink parseFrom(
      com.google.protobuf.ByteString data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static io.envoyproxy.envoy.config.tap.v3.BufferedAdminSink parseFrom(byte[] data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static io.envoyproxy.envoy.config.tap.v3.BufferedAdminSink parseFrom(
      byte[] data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static io.envoyproxy.envoy.config.tap.v3.BufferedAdminSink parseFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input);
  }
  public static io.envoyproxy.envoy.config.tap.v3.BufferedAdminSink parseFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input, extensionRegistry);
  }
  public static io.envoyproxy.envoy.config.tap.v3.BufferedAdminSink parseDelimitedFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseDelimitedWithIOException(PARSER, input);
  }
  public static io.envoyproxy.envoy.config.tap.v3.BufferedAdminSink parseDelimitedFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
  }
  public static io.envoyproxy.envoy.config.tap.v3.BufferedAdminSink parseFrom(
      com.google.protobuf.CodedInputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input);
  }
  public static io.envoyproxy.envoy.config.tap.v3.BufferedAdminSink parseFrom(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input, extensionRegistry);
  }

  @java.lang.Override
  public Builder newBuilderForType() { return newBuilder(); }
  public static Builder newBuilder() {
    return DEFAULT_INSTANCE.toBuilder();
  }
  public static Builder newBuilder(io.envoyproxy.envoy.config.tap.v3.BufferedAdminSink prototype) {
    return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
  }
  @java.lang.Override
  public Builder toBuilder() {
    return this == DEFAULT_INSTANCE
        ? new Builder() : new Builder().mergeFrom(this);
  }

  @java.lang.Override
  protected Builder newBuilderForType(
      com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
    Builder builder = new Builder(parent);
    return builder;
  }
  /**
   * <pre>
   * BufferedAdminSink configures a tap output to collect traces without returning them until
   * one of multiple criteria are satisfied.
   * Similar to StreamingAdminSink, it is only allowed to specify the buffered admin output
   * sink if the tap is being configured from the ``/tap`` admin endpoint.
   * </pre>
   *
   * Protobuf type {@code envoy.config.tap.v3.BufferedAdminSink}
   */
  public static final class Builder extends
      com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
      // @@protoc_insertion_point(builder_implements:envoy.config.tap.v3.BufferedAdminSink)
      io.envoyproxy.envoy.config.tap.v3.BufferedAdminSinkOrBuilder {
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return io.envoyproxy.envoy.config.tap.v3.CommonProto.internal_static_envoy_config_tap_v3_BufferedAdminSink_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return io.envoyproxy.envoy.config.tap.v3.CommonProto.internal_static_envoy_config_tap_v3_BufferedAdminSink_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              io.envoyproxy.envoy.config.tap.v3.BufferedAdminSink.class, io.envoyproxy.envoy.config.tap.v3.BufferedAdminSink.Builder.class);
    }

    // Construct using io.envoyproxy.envoy.config.tap.v3.BufferedAdminSink.newBuilder()
    private Builder() {
      maybeForceBuilderInitialization();
    }

    private Builder(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      super(parent);
      maybeForceBuilderInitialization();
    }
    private void maybeForceBuilderInitialization() {
      if (com.google.protobuf.GeneratedMessageV3
              .alwaysUseFieldBuilders) {
      }
    }
    @java.lang.Override
    public Builder clear() {
      super.clear();
      maxTraces_ = 0L;

      if (timeoutBuilder_ == null) {
        timeout_ = null;
      } else {
        timeout_ = null;
        timeoutBuilder_ = null;
      }
      return this;
    }

    @java.lang.Override
    public com.google.protobuf.Descriptors.Descriptor
        getDescriptorForType() {
      return io.envoyproxy.envoy.config.tap.v3.CommonProto.internal_static_envoy_config_tap_v3_BufferedAdminSink_descriptor;
    }

    @java.lang.Override
    public io.envoyproxy.envoy.config.tap.v3.BufferedAdminSink getDefaultInstanceForType() {
      return io.envoyproxy.envoy.config.tap.v3.BufferedAdminSink.getDefaultInstance();
    }

    @java.lang.Override
    public io.envoyproxy.envoy.config.tap.v3.BufferedAdminSink build() {
      io.envoyproxy.envoy.config.tap.v3.BufferedAdminSink result = buildPartial();
      if (!result.isInitialized()) {
        throw newUninitializedMessageException(result);
      }
      return result;
    }

    @java.lang.Override
    public io.envoyproxy.envoy.config.tap.v3.BufferedAdminSink buildPartial() {
      io.envoyproxy.envoy.config.tap.v3.BufferedAdminSink result = new io.envoyproxy.envoy.config.tap.v3.BufferedAdminSink(this);
      result.maxTraces_ = maxTraces_;
      if (timeoutBuilder_ == null) {
        result.timeout_ = timeout_;
      } else {
        result.timeout_ = timeoutBuilder_.build();
      }
      onBuilt();
      return result;
    }

    @java.lang.Override
    public Builder clone() {
      return super.clone();
    }
    @java.lang.Override
    public Builder setField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        java.lang.Object value) {
      return super.setField(field, value);
    }
    @java.lang.Override
    public Builder clearField(
        com.google.protobuf.Descriptors.FieldDescriptor field) {
      return super.clearField(field);
    }
    @java.lang.Override
    public Builder clearOneof(
        com.google.protobuf.Descriptors.OneofDescriptor oneof) {
      return super.clearOneof(oneof);
    }
    @java.lang.Override
    public Builder setRepeatedField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        int index, java.lang.Object value) {
      return super.setRepeatedField(field, index, value);
    }
    @java.lang.Override
    public Builder addRepeatedField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        java.lang.Object value) {
      return super.addRepeatedField(field, value);
    }
    @java.lang.Override
    public Builder mergeFrom(com.google.protobuf.Message other) {
      if (other instanceof io.envoyproxy.envoy.config.tap.v3.BufferedAdminSink) {
        return mergeFrom((io.envoyproxy.envoy.config.tap.v3.BufferedAdminSink)other);
      } else {
        super.mergeFrom(other);
        return this;
      }
    }

    public Builder mergeFrom(io.envoyproxy.envoy.config.tap.v3.BufferedAdminSink other) {
      if (other == io.envoyproxy.envoy.config.tap.v3.BufferedAdminSink.getDefaultInstance()) return this;
      if (other.getMaxTraces() != 0L) {
        setMaxTraces(other.getMaxTraces());
      }
      if (other.hasTimeout()) {
        mergeTimeout(other.getTimeout());
      }
      this.mergeUnknownFields(other.unknownFields);
      onChanged();
      return this;
    }

    @java.lang.Override
    public final boolean isInitialized() {
      return true;
    }

    @java.lang.Override
    public Builder mergeFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      io.envoyproxy.envoy.config.tap.v3.BufferedAdminSink parsedMessage = null;
      try {
        parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        parsedMessage = (io.envoyproxy.envoy.config.tap.v3.BufferedAdminSink) e.getUnfinishedMessage();
        throw e.unwrapIOException();
      } finally {
        if (parsedMessage != null) {
          mergeFrom(parsedMessage);
        }
      }
      return this;
    }

    private long maxTraces_ ;
    /**
     * <pre>
     * Stop collecting traces when the specified number are collected.
     * If other criteria for ending collection are reached first, this value will not be used.
     * </pre>
     *
     * <code>uint64 max_traces = 1 [(.validate.rules) = { ... }</code>
     * @return The maxTraces.
     */
    @java.lang.Override
    public long getMaxTraces() {
      return maxTraces_;
    }
    /**
     * <pre>
     * Stop collecting traces when the specified number are collected.
     * If other criteria for ending collection are reached first, this value will not be used.
     * </pre>
     *
     * <code>uint64 max_traces = 1 [(.validate.rules) = { ... }</code>
     * @param value The maxTraces to set.
     * @return This builder for chaining.
     */
    public Builder setMaxTraces(long value) {
      
      maxTraces_ = value;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * Stop collecting traces when the specified number are collected.
     * If other criteria for ending collection are reached first, this value will not be used.
     * </pre>
     *
     * <code>uint64 max_traces = 1 [(.validate.rules) = { ... }</code>
     * @return This builder for chaining.
     */
    public Builder clearMaxTraces() {
      
      maxTraces_ = 0L;
      onChanged();
      return this;
    }

    private com.google.protobuf.Duration timeout_;
    private com.google.protobuf.SingleFieldBuilderV3<
        com.google.protobuf.Duration, com.google.protobuf.Duration.Builder, com.google.protobuf.DurationOrBuilder> timeoutBuilder_;
    /**
     * <pre>
     * Acts as a fallback to prevent the client from waiting for long periods of time.
     * After timeout has occurred, a buffer flush will be triggered, returning the traces buffered so far.
     * This may result in returning fewer traces than were requested, and in the case that no traces are
     * buffered during this time, no traces will be returned.
     * Specifying 0 for the timeout value (or not specifying a value at all) indicates an infinite timeout.
     * </pre>
     *
     * <code>.google.protobuf.Duration timeout = 2;</code>
     * @return Whether the timeout field is set.
     */
    public boolean hasTimeout() {
      return timeoutBuilder_ != null || timeout_ != null;
    }
    /**
     * <pre>
     * Acts as a fallback to prevent the client from waiting for long periods of time.
     * After timeout has occurred, a buffer flush will be triggered, returning the traces buffered so far.
     * This may result in returning fewer traces than were requested, and in the case that no traces are
     * buffered during this time, no traces will be returned.
     * Specifying 0 for the timeout value (or not specifying a value at all) indicates an infinite timeout.
     * </pre>
     *
     * <code>.google.protobuf.Duration timeout = 2;</code>
     * @return The timeout.
     */
    public com.google.protobuf.Duration getTimeout() {
      if (timeoutBuilder_ == null) {
        return timeout_ == null ? com.google.protobuf.Duration.getDefaultInstance() : timeout_;
      } else {
        return timeoutBuilder_.getMessage();
      }
    }
    /**
     * <pre>
     * Acts as a fallback to prevent the client from waiting for long periods of time.
     * After timeout has occurred, a buffer flush will be triggered, returning the traces buffered so far.
     * This may result in returning fewer traces than were requested, and in the case that no traces are
     * buffered during this time, no traces will be returned.
     * Specifying 0 for the timeout value (or not specifying a value at all) indicates an infinite timeout.
     * </pre>
     *
     * <code>.google.protobuf.Duration timeout = 2;</code>
     */
    public Builder setTimeout(com.google.protobuf.Duration value) {
      if (timeoutBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        timeout_ = value;
        onChanged();
      } else {
        timeoutBuilder_.setMessage(value);
      }

      return this;
    }
    /**
     * <pre>
     * Acts as a fallback to prevent the client from waiting for long periods of time.
     * After timeout has occurred, a buffer flush will be triggered, returning the traces buffered so far.
     * This may result in returning fewer traces than were requested, and in the case that no traces are
     * buffered during this time, no traces will be returned.
     * Specifying 0 for the timeout value (or not specifying a value at all) indicates an infinite timeout.
     * </pre>
     *
     * <code>.google.protobuf.Duration timeout = 2;</code>
     */
    public Builder setTimeout(
        com.google.protobuf.Duration.Builder builderForValue) {
      if (timeoutBuilder_ == null) {
        timeout_ = builderForValue.build();
        onChanged();
      } else {
        timeoutBuilder_.setMessage(builderForValue.build());
      }

      return this;
    }
    /**
     * <pre>
     * Acts as a fallback to prevent the client from waiting for long periods of time.
     * After timeout has occurred, a buffer flush will be triggered, returning the traces buffered so far.
     * This may result in returning fewer traces than were requested, and in the case that no traces are
     * buffered during this time, no traces will be returned.
     * Specifying 0 for the timeout value (or not specifying a value at all) indicates an infinite timeout.
     * </pre>
     *
     * <code>.google.protobuf.Duration timeout = 2;</code>
     */
    public Builder mergeTimeout(com.google.protobuf.Duration value) {
      if (timeoutBuilder_ == null) {
        if (timeout_ != null) {
          timeout_ =
            com.google.protobuf.Duration.newBuilder(timeout_).mergeFrom(value).buildPartial();
        } else {
          timeout_ = value;
        }
        onChanged();
      } else {
        timeoutBuilder_.mergeFrom(value);
      }

      return this;
    }
    /**
     * <pre>
     * Acts as a fallback to prevent the client from waiting for long periods of time.
     * After timeout has occurred, a buffer flush will be triggered, returning the traces buffered so far.
     * This may result in returning fewer traces than were requested, and in the case that no traces are
     * buffered during this time, no traces will be returned.
     * Specifying 0 for the timeout value (or not specifying a value at all) indicates an infinite timeout.
     * </pre>
     *
     * <code>.google.protobuf.Duration timeout = 2;</code>
     */
    public Builder clearTimeout() {
      if (timeoutBuilder_ == null) {
        timeout_ = null;
        onChanged();
      } else {
        timeout_ = null;
        timeoutBuilder_ = null;
      }

      return this;
    }
    /**
     * <pre>
     * Acts as a fallback to prevent the client from waiting for long periods of time.
     * After timeout has occurred, a buffer flush will be triggered, returning the traces buffered so far.
     * This may result in returning fewer traces than were requested, and in the case that no traces are
     * buffered during this time, no traces will be returned.
     * Specifying 0 for the timeout value (or not specifying a value at all) indicates an infinite timeout.
     * </pre>
     *
     * <code>.google.protobuf.Duration timeout = 2;</code>
     */
    public com.google.protobuf.Duration.Builder getTimeoutBuilder() {
      
      onChanged();
      return getTimeoutFieldBuilder().getBuilder();
    }
    /**
     * <pre>
     * Acts as a fallback to prevent the client from waiting for long periods of time.
     * After timeout has occurred, a buffer flush will be triggered, returning the traces buffered so far.
     * This may result in returning fewer traces than were requested, and in the case that no traces are
     * buffered during this time, no traces will be returned.
     * Specifying 0 for the timeout value (or not specifying a value at all) indicates an infinite timeout.
     * </pre>
     *
     * <code>.google.protobuf.Duration timeout = 2;</code>
     */
    public com.google.protobuf.DurationOrBuilder getTimeoutOrBuilder() {
      if (timeoutBuilder_ != null) {
        return timeoutBuilder_.getMessageOrBuilder();
      } else {
        return timeout_ == null ?
            com.google.protobuf.Duration.getDefaultInstance() : timeout_;
      }
    }
    /**
     * <pre>
     * Acts as a fallback to prevent the client from waiting for long periods of time.
     * After timeout has occurred, a buffer flush will be triggered, returning the traces buffered so far.
     * This may result in returning fewer traces than were requested, and in the case that no traces are
     * buffered during this time, no traces will be returned.
     * Specifying 0 for the timeout value (or not specifying a value at all) indicates an infinite timeout.
     * </pre>
     *
     * <code>.google.protobuf.Duration timeout = 2;</code>
     */
    private com.google.protobuf.SingleFieldBuilderV3<
        com.google.protobuf.Duration, com.google.protobuf.Duration.Builder, com.google.protobuf.DurationOrBuilder> 
        getTimeoutFieldBuilder() {
      if (timeoutBuilder_ == null) {
        timeoutBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
            com.google.protobuf.Duration, com.google.protobuf.Duration.Builder, com.google.protobuf.DurationOrBuilder>(
                getTimeout(),
                getParentForChildren(),
                isClean());
        timeout_ = null;
      }
      return timeoutBuilder_;
    }
    @java.lang.Override
    public final Builder setUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return super.setUnknownFields(unknownFields);
    }

    @java.lang.Override
    public final Builder mergeUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return super.mergeUnknownFields(unknownFields);
    }


    // @@protoc_insertion_point(builder_scope:envoy.config.tap.v3.BufferedAdminSink)
  }

  // @@protoc_insertion_point(class_scope:envoy.config.tap.v3.BufferedAdminSink)
  private static final io.envoyproxy.envoy.config.tap.v3.BufferedAdminSink DEFAULT_INSTANCE;
  static {
    DEFAULT_INSTANCE = new io.envoyproxy.envoy.config.tap.v3.BufferedAdminSink();
  }

  public static io.envoyproxy.envoy.config.tap.v3.BufferedAdminSink getDefaultInstance() {
    return DEFAULT_INSTANCE;
  }

  private static final com.google.protobuf.Parser<BufferedAdminSink>
      PARSER = new com.google.protobuf.AbstractParser<BufferedAdminSink>() {
    @java.lang.Override
    public BufferedAdminSink parsePartialFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return new BufferedAdminSink(input, extensionRegistry);
    }
  };

  public static com.google.protobuf.Parser<BufferedAdminSink> parser() {
    return PARSER;
  }

  @java.lang.Override
  public com.google.protobuf.Parser<BufferedAdminSink> getParserForType() {
    return PARSER;
  }

  @java.lang.Override
  public io.envoyproxy.envoy.config.tap.v3.BufferedAdminSink getDefaultInstanceForType() {
    return DEFAULT_INSTANCE;
  }

}

