// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: envoy/config/tap/v3/common.proto

package io.envoyproxy.envoy.config.tap.v3;

public interface BufferedAdminSinkOrBuilder extends
    // @@protoc_insertion_point(interface_extends:envoy.config.tap.v3.BufferedAdminSink)
    com.google.protobuf.MessageOrBuilder {

  /**
   * <pre>
   * Stop collecting traces when the specified number are collected.
   * If other criteria for ending collection are reached first, this value will not be used.
   * </pre>
   *
   * <code>uint64 max_traces = 1 [(.validate.rules) = { ... }</code>
   * @return The maxTraces.
   */
  long getMaxTraces();

  /**
   * <pre>
   * Acts as a fallback to prevent the client from waiting for long periods of time.
   * After timeout has occurred, a buffer flush will be triggered, returning the traces buffered so far.
   * This may result in returning fewer traces than were requested, and in the case that no traces are
   * buffered during this time, no traces will be returned.
   * Specifying 0 for the timeout value (or not specifying a value at all) indicates an infinite timeout.
   * </pre>
   *
   * <code>.google.protobuf.Duration timeout = 2;</code>
   * @return Whether the timeout field is set.
   */
  boolean hasTimeout();
  /**
   * <pre>
   * Acts as a fallback to prevent the client from waiting for long periods of time.
   * After timeout has occurred, a buffer flush will be triggered, returning the traces buffered so far.
   * This may result in returning fewer traces than were requested, and in the case that no traces are
   * buffered during this time, no traces will be returned.
   * Specifying 0 for the timeout value (or not specifying a value at all) indicates an infinite timeout.
   * </pre>
   *
   * <code>.google.protobuf.Duration timeout = 2;</code>
   * @return The timeout.
   */
  com.google.protobuf.Duration getTimeout();
  /**
   * <pre>
   * Acts as a fallback to prevent the client from waiting for long periods of time.
   * After timeout has occurred, a buffer flush will be triggered, returning the traces buffered so far.
   * This may result in returning fewer traces than were requested, and in the case that no traces are
   * buffered during this time, no traces will be returned.
   * Specifying 0 for the timeout value (or not specifying a value at all) indicates an infinite timeout.
   * </pre>
   *
   * <code>.google.protobuf.Duration timeout = 2;</code>
   */
  com.google.protobuf.DurationOrBuilder getTimeoutOrBuilder();
}
