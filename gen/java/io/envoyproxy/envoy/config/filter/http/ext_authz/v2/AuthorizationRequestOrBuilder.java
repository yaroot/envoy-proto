// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: envoy/config/filter/http/ext_authz/v2/ext_authz.proto

package io.envoyproxy.envoy.config.filter.http.ext_authz.v2;

public interface AuthorizationRequestOrBuilder extends
    // @@protoc_insertion_point(interface_extends:envoy.config.filter.http.ext_authz.v2.AuthorizationRequest)
    com.google.protobuf.MessageOrBuilder {

  /**
   * <pre>
   * Authorization request will include the client request headers that have a correspondent match
   * in the :ref:`list &lt;envoy_api_msg_type.matcher.ListStringMatcher&gt;`. Note that in addition to the
   * user's supplied matchers:
   * 1. *Host*, *Method*, *Path* and *Content-Length* are automatically included to the list.
   * 2. *Content-Length* will be set to 0 and the request to the authorization service will not have
   * a message body. However, the authorization request can include the buffered client request body
   * (controlled by :ref:`with_request_body
   * &lt;envoy_api_field_config.filter.http.ext_authz.v2.ExtAuthz.with_request_body&gt;` setting),
   * consequently the value of *Content-Length* of the authorization request reflects the size of
   * its payload size.
   * </pre>
   *
   * <code>.envoy.type.matcher.ListStringMatcher allowed_headers = 1;</code>
   * @return Whether the allowedHeaders field is set.
   */
  boolean hasAllowedHeaders();
  /**
   * <pre>
   * Authorization request will include the client request headers that have a correspondent match
   * in the :ref:`list &lt;envoy_api_msg_type.matcher.ListStringMatcher&gt;`. Note that in addition to the
   * user's supplied matchers:
   * 1. *Host*, *Method*, *Path* and *Content-Length* are automatically included to the list.
   * 2. *Content-Length* will be set to 0 and the request to the authorization service will not have
   * a message body. However, the authorization request can include the buffered client request body
   * (controlled by :ref:`with_request_body
   * &lt;envoy_api_field_config.filter.http.ext_authz.v2.ExtAuthz.with_request_body&gt;` setting),
   * consequently the value of *Content-Length* of the authorization request reflects the size of
   * its payload size.
   * </pre>
   *
   * <code>.envoy.type.matcher.ListStringMatcher allowed_headers = 1;</code>
   * @return The allowedHeaders.
   */
  io.envoyproxy.envoy.type.matcher.ListStringMatcher getAllowedHeaders();
  /**
   * <pre>
   * Authorization request will include the client request headers that have a correspondent match
   * in the :ref:`list &lt;envoy_api_msg_type.matcher.ListStringMatcher&gt;`. Note that in addition to the
   * user's supplied matchers:
   * 1. *Host*, *Method*, *Path* and *Content-Length* are automatically included to the list.
   * 2. *Content-Length* will be set to 0 and the request to the authorization service will not have
   * a message body. However, the authorization request can include the buffered client request body
   * (controlled by :ref:`with_request_body
   * &lt;envoy_api_field_config.filter.http.ext_authz.v2.ExtAuthz.with_request_body&gt;` setting),
   * consequently the value of *Content-Length* of the authorization request reflects the size of
   * its payload size.
   * </pre>
   *
   * <code>.envoy.type.matcher.ListStringMatcher allowed_headers = 1;</code>
   */
  io.envoyproxy.envoy.type.matcher.ListStringMatcherOrBuilder getAllowedHeadersOrBuilder();

  /**
   * <pre>
   * Sets a list of headers that will be included to the request to authorization service. Note that
   * client request of the same key will be overridden.
   * </pre>
   *
   * <code>repeated .envoy.api.v2.core.HeaderValue headers_to_add = 2;</code>
   */
  java.util.List<io.envoyproxy.envoy.api.v2.core.HeaderValue> 
      getHeadersToAddList();
  /**
   * <pre>
   * Sets a list of headers that will be included to the request to authorization service. Note that
   * client request of the same key will be overridden.
   * </pre>
   *
   * <code>repeated .envoy.api.v2.core.HeaderValue headers_to_add = 2;</code>
   */
  io.envoyproxy.envoy.api.v2.core.HeaderValue getHeadersToAdd(int index);
  /**
   * <pre>
   * Sets a list of headers that will be included to the request to authorization service. Note that
   * client request of the same key will be overridden.
   * </pre>
   *
   * <code>repeated .envoy.api.v2.core.HeaderValue headers_to_add = 2;</code>
   */
  int getHeadersToAddCount();
  /**
   * <pre>
   * Sets a list of headers that will be included to the request to authorization service. Note that
   * client request of the same key will be overridden.
   * </pre>
   *
   * <code>repeated .envoy.api.v2.core.HeaderValue headers_to_add = 2;</code>
   */
  java.util.List<? extends io.envoyproxy.envoy.api.v2.core.HeaderValueOrBuilder> 
      getHeadersToAddOrBuilderList();
  /**
   * <pre>
   * Sets a list of headers that will be included to the request to authorization service. Note that
   * client request of the same key will be overridden.
   * </pre>
   *
   * <code>repeated .envoy.api.v2.core.HeaderValue headers_to_add = 2;</code>
   */
  io.envoyproxy.envoy.api.v2.core.HeaderValueOrBuilder getHeadersToAddOrBuilder(
      int index);
}
