// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: envoy/config/filter/http/ext_authz/v2/ext_authz.proto

package io.envoyproxy.envoy.config.filter.http.ext_authz.v2;

/**
 * Protobuf type {@code envoy.config.filter.http.ext_authz.v2.AuthorizationRequest}
 */
public final class AuthorizationRequest extends
    com.google.protobuf.GeneratedMessageV3 implements
    // @@protoc_insertion_point(message_implements:envoy.config.filter.http.ext_authz.v2.AuthorizationRequest)
    AuthorizationRequestOrBuilder {
private static final long serialVersionUID = 0L;
  // Use AuthorizationRequest.newBuilder() to construct.
  private AuthorizationRequest(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
    super(builder);
  }
  private AuthorizationRequest() {
    headersToAdd_ = java.util.Collections.emptyList();
  }

  @java.lang.Override
  @SuppressWarnings({"unused"})
  protected java.lang.Object newInstance(
      UnusedPrivateParameter unused) {
    return new AuthorizationRequest();
  }

  @java.lang.Override
  public final com.google.protobuf.UnknownFieldSet
  getUnknownFields() {
    return this.unknownFields;
  }
  public static final com.google.protobuf.Descriptors.Descriptor
      getDescriptor() {
    return io.envoyproxy.envoy.config.filter.http.ext_authz.v2.ExtAuthzProto.internal_static_envoy_config_filter_http_ext_authz_v2_AuthorizationRequest_descriptor;
  }

  @java.lang.Override
  protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internalGetFieldAccessorTable() {
    return io.envoyproxy.envoy.config.filter.http.ext_authz.v2.ExtAuthzProto.internal_static_envoy_config_filter_http_ext_authz_v2_AuthorizationRequest_fieldAccessorTable
        .ensureFieldAccessorsInitialized(
            io.envoyproxy.envoy.config.filter.http.ext_authz.v2.AuthorizationRequest.class, io.envoyproxy.envoy.config.filter.http.ext_authz.v2.AuthorizationRequest.Builder.class);
  }

  public static final int ALLOWED_HEADERS_FIELD_NUMBER = 1;
  private io.envoyproxy.envoy.type.matcher.ListStringMatcher allowedHeaders_;
  /**
   * <pre>
   * Authorization request will include the client request headers that have a correspondent match
   * in the :ref:`list &lt;envoy_api_msg_type.matcher.ListStringMatcher&gt;`. Note that in addition to the
   * user's supplied matchers:
   * 1. *Host*, *Method*, *Path* and *Content-Length* are automatically included to the list.
   * 2. *Content-Length* will be set to 0 and the request to the authorization service will not have
   * a message body. However, the authorization request can include the buffered client request body
   * (controlled by :ref:`with_request_body
   * &lt;envoy_api_field_config.filter.http.ext_authz.v2.ExtAuthz.with_request_body&gt;` setting),
   * consequently the value of *Content-Length* of the authorization request reflects the size of
   * its payload size.
   * </pre>
   *
   * <code>.envoy.type.matcher.ListStringMatcher allowed_headers = 1;</code>
   * @return Whether the allowedHeaders field is set.
   */
  @java.lang.Override
  public boolean hasAllowedHeaders() {
    return allowedHeaders_ != null;
  }
  /**
   * <pre>
   * Authorization request will include the client request headers that have a correspondent match
   * in the :ref:`list &lt;envoy_api_msg_type.matcher.ListStringMatcher&gt;`. Note that in addition to the
   * user's supplied matchers:
   * 1. *Host*, *Method*, *Path* and *Content-Length* are automatically included to the list.
   * 2. *Content-Length* will be set to 0 and the request to the authorization service will not have
   * a message body. However, the authorization request can include the buffered client request body
   * (controlled by :ref:`with_request_body
   * &lt;envoy_api_field_config.filter.http.ext_authz.v2.ExtAuthz.with_request_body&gt;` setting),
   * consequently the value of *Content-Length* of the authorization request reflects the size of
   * its payload size.
   * </pre>
   *
   * <code>.envoy.type.matcher.ListStringMatcher allowed_headers = 1;</code>
   * @return The allowedHeaders.
   */
  @java.lang.Override
  public io.envoyproxy.envoy.type.matcher.ListStringMatcher getAllowedHeaders() {
    return allowedHeaders_ == null ? io.envoyproxy.envoy.type.matcher.ListStringMatcher.getDefaultInstance() : allowedHeaders_;
  }
  /**
   * <pre>
   * Authorization request will include the client request headers that have a correspondent match
   * in the :ref:`list &lt;envoy_api_msg_type.matcher.ListStringMatcher&gt;`. Note that in addition to the
   * user's supplied matchers:
   * 1. *Host*, *Method*, *Path* and *Content-Length* are automatically included to the list.
   * 2. *Content-Length* will be set to 0 and the request to the authorization service will not have
   * a message body. However, the authorization request can include the buffered client request body
   * (controlled by :ref:`with_request_body
   * &lt;envoy_api_field_config.filter.http.ext_authz.v2.ExtAuthz.with_request_body&gt;` setting),
   * consequently the value of *Content-Length* of the authorization request reflects the size of
   * its payload size.
   * </pre>
   *
   * <code>.envoy.type.matcher.ListStringMatcher allowed_headers = 1;</code>
   */
  @java.lang.Override
  public io.envoyproxy.envoy.type.matcher.ListStringMatcherOrBuilder getAllowedHeadersOrBuilder() {
    return allowedHeaders_ == null ? io.envoyproxy.envoy.type.matcher.ListStringMatcher.getDefaultInstance() : allowedHeaders_;
  }

  public static final int HEADERS_TO_ADD_FIELD_NUMBER = 2;
  @SuppressWarnings("serial")
  private java.util.List<io.envoyproxy.envoy.api.v2.core.HeaderValue> headersToAdd_;
  /**
   * <pre>
   * Sets a list of headers that will be included to the request to authorization service. Note that
   * client request of the same key will be overridden.
   * </pre>
   *
   * <code>repeated .envoy.api.v2.core.HeaderValue headers_to_add = 2;</code>
   */
  @java.lang.Override
  public java.util.List<io.envoyproxy.envoy.api.v2.core.HeaderValue> getHeadersToAddList() {
    return headersToAdd_;
  }
  /**
   * <pre>
   * Sets a list of headers that will be included to the request to authorization service. Note that
   * client request of the same key will be overridden.
   * </pre>
   *
   * <code>repeated .envoy.api.v2.core.HeaderValue headers_to_add = 2;</code>
   */
  @java.lang.Override
  public java.util.List<? extends io.envoyproxy.envoy.api.v2.core.HeaderValueOrBuilder> 
      getHeadersToAddOrBuilderList() {
    return headersToAdd_;
  }
  /**
   * <pre>
   * Sets a list of headers that will be included to the request to authorization service. Note that
   * client request of the same key will be overridden.
   * </pre>
   *
   * <code>repeated .envoy.api.v2.core.HeaderValue headers_to_add = 2;</code>
   */
  @java.lang.Override
  public int getHeadersToAddCount() {
    return headersToAdd_.size();
  }
  /**
   * <pre>
   * Sets a list of headers that will be included to the request to authorization service. Note that
   * client request of the same key will be overridden.
   * </pre>
   *
   * <code>repeated .envoy.api.v2.core.HeaderValue headers_to_add = 2;</code>
   */
  @java.lang.Override
  public io.envoyproxy.envoy.api.v2.core.HeaderValue getHeadersToAdd(int index) {
    return headersToAdd_.get(index);
  }
  /**
   * <pre>
   * Sets a list of headers that will be included to the request to authorization service. Note that
   * client request of the same key will be overridden.
   * </pre>
   *
   * <code>repeated .envoy.api.v2.core.HeaderValue headers_to_add = 2;</code>
   */
  @java.lang.Override
  public io.envoyproxy.envoy.api.v2.core.HeaderValueOrBuilder getHeadersToAddOrBuilder(
      int index) {
    return headersToAdd_.get(index);
  }

  private byte memoizedIsInitialized = -1;
  @java.lang.Override
  public final boolean isInitialized() {
    byte isInitialized = memoizedIsInitialized;
    if (isInitialized == 1) return true;
    if (isInitialized == 0) return false;

    memoizedIsInitialized = 1;
    return true;
  }

  @java.lang.Override
  public void writeTo(com.google.protobuf.CodedOutputStream output)
                      throws java.io.IOException {
    if (allowedHeaders_ != null) {
      output.writeMessage(1, getAllowedHeaders());
    }
    for (int i = 0; i < headersToAdd_.size(); i++) {
      output.writeMessage(2, headersToAdd_.get(i));
    }
    getUnknownFields().writeTo(output);
  }

  @java.lang.Override
  public int getSerializedSize() {
    int size = memoizedSize;
    if (size != -1) return size;

    size = 0;
    if (allowedHeaders_ != null) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(1, getAllowedHeaders());
    }
    for (int i = 0; i < headersToAdd_.size(); i++) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(2, headersToAdd_.get(i));
    }
    size += getUnknownFields().getSerializedSize();
    memoizedSize = size;
    return size;
  }

  @java.lang.Override
  public boolean equals(final java.lang.Object obj) {
    if (obj == this) {
     return true;
    }
    if (!(obj instanceof io.envoyproxy.envoy.config.filter.http.ext_authz.v2.AuthorizationRequest)) {
      return super.equals(obj);
    }
    io.envoyproxy.envoy.config.filter.http.ext_authz.v2.AuthorizationRequest other = (io.envoyproxy.envoy.config.filter.http.ext_authz.v2.AuthorizationRequest) obj;

    if (hasAllowedHeaders() != other.hasAllowedHeaders()) return false;
    if (hasAllowedHeaders()) {
      if (!getAllowedHeaders()
          .equals(other.getAllowedHeaders())) return false;
    }
    if (!getHeadersToAddList()
        .equals(other.getHeadersToAddList())) return false;
    if (!getUnknownFields().equals(other.getUnknownFields())) return false;
    return true;
  }

  @java.lang.Override
  public int hashCode() {
    if (memoizedHashCode != 0) {
      return memoizedHashCode;
    }
    int hash = 41;
    hash = (19 * hash) + getDescriptor().hashCode();
    if (hasAllowedHeaders()) {
      hash = (37 * hash) + ALLOWED_HEADERS_FIELD_NUMBER;
      hash = (53 * hash) + getAllowedHeaders().hashCode();
    }
    if (getHeadersToAddCount() > 0) {
      hash = (37 * hash) + HEADERS_TO_ADD_FIELD_NUMBER;
      hash = (53 * hash) + getHeadersToAddList().hashCode();
    }
    hash = (29 * hash) + getUnknownFields().hashCode();
    memoizedHashCode = hash;
    return hash;
  }

  public static io.envoyproxy.envoy.config.filter.http.ext_authz.v2.AuthorizationRequest parseFrom(
      java.nio.ByteBuffer data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static io.envoyproxy.envoy.config.filter.http.ext_authz.v2.AuthorizationRequest parseFrom(
      java.nio.ByteBuffer data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static io.envoyproxy.envoy.config.filter.http.ext_authz.v2.AuthorizationRequest parseFrom(
      com.google.protobuf.ByteString data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static io.envoyproxy.envoy.config.filter.http.ext_authz.v2.AuthorizationRequest parseFrom(
      com.google.protobuf.ByteString data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static io.envoyproxy.envoy.config.filter.http.ext_authz.v2.AuthorizationRequest parseFrom(byte[] data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static io.envoyproxy.envoy.config.filter.http.ext_authz.v2.AuthorizationRequest parseFrom(
      byte[] data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static io.envoyproxy.envoy.config.filter.http.ext_authz.v2.AuthorizationRequest parseFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input);
  }
  public static io.envoyproxy.envoy.config.filter.http.ext_authz.v2.AuthorizationRequest parseFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input, extensionRegistry);
  }
  public static io.envoyproxy.envoy.config.filter.http.ext_authz.v2.AuthorizationRequest parseDelimitedFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseDelimitedWithIOException(PARSER, input);
  }
  public static io.envoyproxy.envoy.config.filter.http.ext_authz.v2.AuthorizationRequest parseDelimitedFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
  }
  public static io.envoyproxy.envoy.config.filter.http.ext_authz.v2.AuthorizationRequest parseFrom(
      com.google.protobuf.CodedInputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input);
  }
  public static io.envoyproxy.envoy.config.filter.http.ext_authz.v2.AuthorizationRequest parseFrom(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input, extensionRegistry);
  }

  @java.lang.Override
  public Builder newBuilderForType() { return newBuilder(); }
  public static Builder newBuilder() {
    return DEFAULT_INSTANCE.toBuilder();
  }
  public static Builder newBuilder(io.envoyproxy.envoy.config.filter.http.ext_authz.v2.AuthorizationRequest prototype) {
    return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
  }
  @java.lang.Override
  public Builder toBuilder() {
    return this == DEFAULT_INSTANCE
        ? new Builder() : new Builder().mergeFrom(this);
  }

  @java.lang.Override
  protected Builder newBuilderForType(
      com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
    Builder builder = new Builder(parent);
    return builder;
  }
  /**
   * Protobuf type {@code envoy.config.filter.http.ext_authz.v2.AuthorizationRequest}
   */
  public static final class Builder extends
      com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
      // @@protoc_insertion_point(builder_implements:envoy.config.filter.http.ext_authz.v2.AuthorizationRequest)
      io.envoyproxy.envoy.config.filter.http.ext_authz.v2.AuthorizationRequestOrBuilder {
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return io.envoyproxy.envoy.config.filter.http.ext_authz.v2.ExtAuthzProto.internal_static_envoy_config_filter_http_ext_authz_v2_AuthorizationRequest_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return io.envoyproxy.envoy.config.filter.http.ext_authz.v2.ExtAuthzProto.internal_static_envoy_config_filter_http_ext_authz_v2_AuthorizationRequest_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              io.envoyproxy.envoy.config.filter.http.ext_authz.v2.AuthorizationRequest.class, io.envoyproxy.envoy.config.filter.http.ext_authz.v2.AuthorizationRequest.Builder.class);
    }

    // Construct using io.envoyproxy.envoy.config.filter.http.ext_authz.v2.AuthorizationRequest.newBuilder()
    private Builder() {

    }

    private Builder(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      super(parent);

    }
    @java.lang.Override
    public Builder clear() {
      super.clear();
      bitField0_ = 0;
      allowedHeaders_ = null;
      if (allowedHeadersBuilder_ != null) {
        allowedHeadersBuilder_.dispose();
        allowedHeadersBuilder_ = null;
      }
      if (headersToAddBuilder_ == null) {
        headersToAdd_ = java.util.Collections.emptyList();
      } else {
        headersToAdd_ = null;
        headersToAddBuilder_.clear();
      }
      bitField0_ = (bitField0_ & ~0x00000002);
      return this;
    }

    @java.lang.Override
    public com.google.protobuf.Descriptors.Descriptor
        getDescriptorForType() {
      return io.envoyproxy.envoy.config.filter.http.ext_authz.v2.ExtAuthzProto.internal_static_envoy_config_filter_http_ext_authz_v2_AuthorizationRequest_descriptor;
    }

    @java.lang.Override
    public io.envoyproxy.envoy.config.filter.http.ext_authz.v2.AuthorizationRequest getDefaultInstanceForType() {
      return io.envoyproxy.envoy.config.filter.http.ext_authz.v2.AuthorizationRequest.getDefaultInstance();
    }

    @java.lang.Override
    public io.envoyproxy.envoy.config.filter.http.ext_authz.v2.AuthorizationRequest build() {
      io.envoyproxy.envoy.config.filter.http.ext_authz.v2.AuthorizationRequest result = buildPartial();
      if (!result.isInitialized()) {
        throw newUninitializedMessageException(result);
      }
      return result;
    }

    @java.lang.Override
    public io.envoyproxy.envoy.config.filter.http.ext_authz.v2.AuthorizationRequest buildPartial() {
      io.envoyproxy.envoy.config.filter.http.ext_authz.v2.AuthorizationRequest result = new io.envoyproxy.envoy.config.filter.http.ext_authz.v2.AuthorizationRequest(this);
      buildPartialRepeatedFields(result);
      if (bitField0_ != 0) { buildPartial0(result); }
      onBuilt();
      return result;
    }

    private void buildPartialRepeatedFields(io.envoyproxy.envoy.config.filter.http.ext_authz.v2.AuthorizationRequest result) {
      if (headersToAddBuilder_ == null) {
        if (((bitField0_ & 0x00000002) != 0)) {
          headersToAdd_ = java.util.Collections.unmodifiableList(headersToAdd_);
          bitField0_ = (bitField0_ & ~0x00000002);
        }
        result.headersToAdd_ = headersToAdd_;
      } else {
        result.headersToAdd_ = headersToAddBuilder_.build();
      }
    }

    private void buildPartial0(io.envoyproxy.envoy.config.filter.http.ext_authz.v2.AuthorizationRequest result) {
      int from_bitField0_ = bitField0_;
      if (((from_bitField0_ & 0x00000001) != 0)) {
        result.allowedHeaders_ = allowedHeadersBuilder_ == null
            ? allowedHeaders_
            : allowedHeadersBuilder_.build();
      }
    }

    @java.lang.Override
    public Builder clone() {
      return super.clone();
    }
    @java.lang.Override
    public Builder setField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        java.lang.Object value) {
      return super.setField(field, value);
    }
    @java.lang.Override
    public Builder clearField(
        com.google.protobuf.Descriptors.FieldDescriptor field) {
      return super.clearField(field);
    }
    @java.lang.Override
    public Builder clearOneof(
        com.google.protobuf.Descriptors.OneofDescriptor oneof) {
      return super.clearOneof(oneof);
    }
    @java.lang.Override
    public Builder setRepeatedField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        int index, java.lang.Object value) {
      return super.setRepeatedField(field, index, value);
    }
    @java.lang.Override
    public Builder addRepeatedField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        java.lang.Object value) {
      return super.addRepeatedField(field, value);
    }
    @java.lang.Override
    public Builder mergeFrom(com.google.protobuf.Message other) {
      if (other instanceof io.envoyproxy.envoy.config.filter.http.ext_authz.v2.AuthorizationRequest) {
        return mergeFrom((io.envoyproxy.envoy.config.filter.http.ext_authz.v2.AuthorizationRequest)other);
      } else {
        super.mergeFrom(other);
        return this;
      }
    }

    public Builder mergeFrom(io.envoyproxy.envoy.config.filter.http.ext_authz.v2.AuthorizationRequest other) {
      if (other == io.envoyproxy.envoy.config.filter.http.ext_authz.v2.AuthorizationRequest.getDefaultInstance()) return this;
      if (other.hasAllowedHeaders()) {
        mergeAllowedHeaders(other.getAllowedHeaders());
      }
      if (headersToAddBuilder_ == null) {
        if (!other.headersToAdd_.isEmpty()) {
          if (headersToAdd_.isEmpty()) {
            headersToAdd_ = other.headersToAdd_;
            bitField0_ = (bitField0_ & ~0x00000002);
          } else {
            ensureHeadersToAddIsMutable();
            headersToAdd_.addAll(other.headersToAdd_);
          }
          onChanged();
        }
      } else {
        if (!other.headersToAdd_.isEmpty()) {
          if (headersToAddBuilder_.isEmpty()) {
            headersToAddBuilder_.dispose();
            headersToAddBuilder_ = null;
            headersToAdd_ = other.headersToAdd_;
            bitField0_ = (bitField0_ & ~0x00000002);
            headersToAddBuilder_ = 
              com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?
                 getHeadersToAddFieldBuilder() : null;
          } else {
            headersToAddBuilder_.addAllMessages(other.headersToAdd_);
          }
        }
      }
      this.mergeUnknownFields(other.getUnknownFields());
      onChanged();
      return this;
    }

    @java.lang.Override
    public final boolean isInitialized() {
      return true;
    }

    @java.lang.Override
    public Builder mergeFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 10: {
              input.readMessage(
                  getAllowedHeadersFieldBuilder().getBuilder(),
                  extensionRegistry);
              bitField0_ |= 0x00000001;
              break;
            } // case 10
            case 18: {
              io.envoyproxy.envoy.api.v2.core.HeaderValue m =
                  input.readMessage(
                      io.envoyproxy.envoy.api.v2.core.HeaderValue.parser(),
                      extensionRegistry);
              if (headersToAddBuilder_ == null) {
                ensureHeadersToAddIsMutable();
                headersToAdd_.add(m);
              } else {
                headersToAddBuilder_.addMessage(m);
              }
              break;
            } // case 18
            default: {
              if (!super.parseUnknownField(input, extensionRegistry, tag)) {
                done = true; // was an endgroup tag
              }
              break;
            } // default:
          } // switch (tag)
        } // while (!done)
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.unwrapIOException();
      } finally {
        onChanged();
      } // finally
      return this;
    }
    private int bitField0_;

    private io.envoyproxy.envoy.type.matcher.ListStringMatcher allowedHeaders_;
    private com.google.protobuf.SingleFieldBuilderV3<
        io.envoyproxy.envoy.type.matcher.ListStringMatcher, io.envoyproxy.envoy.type.matcher.ListStringMatcher.Builder, io.envoyproxy.envoy.type.matcher.ListStringMatcherOrBuilder> allowedHeadersBuilder_;
    /**
     * <pre>
     * Authorization request will include the client request headers that have a correspondent match
     * in the :ref:`list &lt;envoy_api_msg_type.matcher.ListStringMatcher&gt;`. Note that in addition to the
     * user's supplied matchers:
     * 1. *Host*, *Method*, *Path* and *Content-Length* are automatically included to the list.
     * 2. *Content-Length* will be set to 0 and the request to the authorization service will not have
     * a message body. However, the authorization request can include the buffered client request body
     * (controlled by :ref:`with_request_body
     * &lt;envoy_api_field_config.filter.http.ext_authz.v2.ExtAuthz.with_request_body&gt;` setting),
     * consequently the value of *Content-Length* of the authorization request reflects the size of
     * its payload size.
     * </pre>
     *
     * <code>.envoy.type.matcher.ListStringMatcher allowed_headers = 1;</code>
     * @return Whether the allowedHeaders field is set.
     */
    public boolean hasAllowedHeaders() {
      return ((bitField0_ & 0x00000001) != 0);
    }
    /**
     * <pre>
     * Authorization request will include the client request headers that have a correspondent match
     * in the :ref:`list &lt;envoy_api_msg_type.matcher.ListStringMatcher&gt;`. Note that in addition to the
     * user's supplied matchers:
     * 1. *Host*, *Method*, *Path* and *Content-Length* are automatically included to the list.
     * 2. *Content-Length* will be set to 0 and the request to the authorization service will not have
     * a message body. However, the authorization request can include the buffered client request body
     * (controlled by :ref:`with_request_body
     * &lt;envoy_api_field_config.filter.http.ext_authz.v2.ExtAuthz.with_request_body&gt;` setting),
     * consequently the value of *Content-Length* of the authorization request reflects the size of
     * its payload size.
     * </pre>
     *
     * <code>.envoy.type.matcher.ListStringMatcher allowed_headers = 1;</code>
     * @return The allowedHeaders.
     */
    public io.envoyproxy.envoy.type.matcher.ListStringMatcher getAllowedHeaders() {
      if (allowedHeadersBuilder_ == null) {
        return allowedHeaders_ == null ? io.envoyproxy.envoy.type.matcher.ListStringMatcher.getDefaultInstance() : allowedHeaders_;
      } else {
        return allowedHeadersBuilder_.getMessage();
      }
    }
    /**
     * <pre>
     * Authorization request will include the client request headers that have a correspondent match
     * in the :ref:`list &lt;envoy_api_msg_type.matcher.ListStringMatcher&gt;`. Note that in addition to the
     * user's supplied matchers:
     * 1. *Host*, *Method*, *Path* and *Content-Length* are automatically included to the list.
     * 2. *Content-Length* will be set to 0 and the request to the authorization service will not have
     * a message body. However, the authorization request can include the buffered client request body
     * (controlled by :ref:`with_request_body
     * &lt;envoy_api_field_config.filter.http.ext_authz.v2.ExtAuthz.with_request_body&gt;` setting),
     * consequently the value of *Content-Length* of the authorization request reflects the size of
     * its payload size.
     * </pre>
     *
     * <code>.envoy.type.matcher.ListStringMatcher allowed_headers = 1;</code>
     */
    public Builder setAllowedHeaders(io.envoyproxy.envoy.type.matcher.ListStringMatcher value) {
      if (allowedHeadersBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        allowedHeaders_ = value;
      } else {
        allowedHeadersBuilder_.setMessage(value);
      }
      bitField0_ |= 0x00000001;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * Authorization request will include the client request headers that have a correspondent match
     * in the :ref:`list &lt;envoy_api_msg_type.matcher.ListStringMatcher&gt;`. Note that in addition to the
     * user's supplied matchers:
     * 1. *Host*, *Method*, *Path* and *Content-Length* are automatically included to the list.
     * 2. *Content-Length* will be set to 0 and the request to the authorization service will not have
     * a message body. However, the authorization request can include the buffered client request body
     * (controlled by :ref:`with_request_body
     * &lt;envoy_api_field_config.filter.http.ext_authz.v2.ExtAuthz.with_request_body&gt;` setting),
     * consequently the value of *Content-Length* of the authorization request reflects the size of
     * its payload size.
     * </pre>
     *
     * <code>.envoy.type.matcher.ListStringMatcher allowed_headers = 1;</code>
     */
    public Builder setAllowedHeaders(
        io.envoyproxy.envoy.type.matcher.ListStringMatcher.Builder builderForValue) {
      if (allowedHeadersBuilder_ == null) {
        allowedHeaders_ = builderForValue.build();
      } else {
        allowedHeadersBuilder_.setMessage(builderForValue.build());
      }
      bitField0_ |= 0x00000001;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * Authorization request will include the client request headers that have a correspondent match
     * in the :ref:`list &lt;envoy_api_msg_type.matcher.ListStringMatcher&gt;`. Note that in addition to the
     * user's supplied matchers:
     * 1. *Host*, *Method*, *Path* and *Content-Length* are automatically included to the list.
     * 2. *Content-Length* will be set to 0 and the request to the authorization service will not have
     * a message body. However, the authorization request can include the buffered client request body
     * (controlled by :ref:`with_request_body
     * &lt;envoy_api_field_config.filter.http.ext_authz.v2.ExtAuthz.with_request_body&gt;` setting),
     * consequently the value of *Content-Length* of the authorization request reflects the size of
     * its payload size.
     * </pre>
     *
     * <code>.envoy.type.matcher.ListStringMatcher allowed_headers = 1;</code>
     */
    public Builder mergeAllowedHeaders(io.envoyproxy.envoy.type.matcher.ListStringMatcher value) {
      if (allowedHeadersBuilder_ == null) {
        if (((bitField0_ & 0x00000001) != 0) &&
          allowedHeaders_ != null &&
          allowedHeaders_ != io.envoyproxy.envoy.type.matcher.ListStringMatcher.getDefaultInstance()) {
          getAllowedHeadersBuilder().mergeFrom(value);
        } else {
          allowedHeaders_ = value;
        }
      } else {
        allowedHeadersBuilder_.mergeFrom(value);
      }
      bitField0_ |= 0x00000001;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * Authorization request will include the client request headers that have a correspondent match
     * in the :ref:`list &lt;envoy_api_msg_type.matcher.ListStringMatcher&gt;`. Note that in addition to the
     * user's supplied matchers:
     * 1. *Host*, *Method*, *Path* and *Content-Length* are automatically included to the list.
     * 2. *Content-Length* will be set to 0 and the request to the authorization service will not have
     * a message body. However, the authorization request can include the buffered client request body
     * (controlled by :ref:`with_request_body
     * &lt;envoy_api_field_config.filter.http.ext_authz.v2.ExtAuthz.with_request_body&gt;` setting),
     * consequently the value of *Content-Length* of the authorization request reflects the size of
     * its payload size.
     * </pre>
     *
     * <code>.envoy.type.matcher.ListStringMatcher allowed_headers = 1;</code>
     */
    public Builder clearAllowedHeaders() {
      bitField0_ = (bitField0_ & ~0x00000001);
      allowedHeaders_ = null;
      if (allowedHeadersBuilder_ != null) {
        allowedHeadersBuilder_.dispose();
        allowedHeadersBuilder_ = null;
      }
      onChanged();
      return this;
    }
    /**
     * <pre>
     * Authorization request will include the client request headers that have a correspondent match
     * in the :ref:`list &lt;envoy_api_msg_type.matcher.ListStringMatcher&gt;`. Note that in addition to the
     * user's supplied matchers:
     * 1. *Host*, *Method*, *Path* and *Content-Length* are automatically included to the list.
     * 2. *Content-Length* will be set to 0 and the request to the authorization service will not have
     * a message body. However, the authorization request can include the buffered client request body
     * (controlled by :ref:`with_request_body
     * &lt;envoy_api_field_config.filter.http.ext_authz.v2.ExtAuthz.with_request_body&gt;` setting),
     * consequently the value of *Content-Length* of the authorization request reflects the size of
     * its payload size.
     * </pre>
     *
     * <code>.envoy.type.matcher.ListStringMatcher allowed_headers = 1;</code>
     */
    public io.envoyproxy.envoy.type.matcher.ListStringMatcher.Builder getAllowedHeadersBuilder() {
      bitField0_ |= 0x00000001;
      onChanged();
      return getAllowedHeadersFieldBuilder().getBuilder();
    }
    /**
     * <pre>
     * Authorization request will include the client request headers that have a correspondent match
     * in the :ref:`list &lt;envoy_api_msg_type.matcher.ListStringMatcher&gt;`. Note that in addition to the
     * user's supplied matchers:
     * 1. *Host*, *Method*, *Path* and *Content-Length* are automatically included to the list.
     * 2. *Content-Length* will be set to 0 and the request to the authorization service will not have
     * a message body. However, the authorization request can include the buffered client request body
     * (controlled by :ref:`with_request_body
     * &lt;envoy_api_field_config.filter.http.ext_authz.v2.ExtAuthz.with_request_body&gt;` setting),
     * consequently the value of *Content-Length* of the authorization request reflects the size of
     * its payload size.
     * </pre>
     *
     * <code>.envoy.type.matcher.ListStringMatcher allowed_headers = 1;</code>
     */
    public io.envoyproxy.envoy.type.matcher.ListStringMatcherOrBuilder getAllowedHeadersOrBuilder() {
      if (allowedHeadersBuilder_ != null) {
        return allowedHeadersBuilder_.getMessageOrBuilder();
      } else {
        return allowedHeaders_ == null ?
            io.envoyproxy.envoy.type.matcher.ListStringMatcher.getDefaultInstance() : allowedHeaders_;
      }
    }
    /**
     * <pre>
     * Authorization request will include the client request headers that have a correspondent match
     * in the :ref:`list &lt;envoy_api_msg_type.matcher.ListStringMatcher&gt;`. Note that in addition to the
     * user's supplied matchers:
     * 1. *Host*, *Method*, *Path* and *Content-Length* are automatically included to the list.
     * 2. *Content-Length* will be set to 0 and the request to the authorization service will not have
     * a message body. However, the authorization request can include the buffered client request body
     * (controlled by :ref:`with_request_body
     * &lt;envoy_api_field_config.filter.http.ext_authz.v2.ExtAuthz.with_request_body&gt;` setting),
     * consequently the value of *Content-Length* of the authorization request reflects the size of
     * its payload size.
     * </pre>
     *
     * <code>.envoy.type.matcher.ListStringMatcher allowed_headers = 1;</code>
     */
    private com.google.protobuf.SingleFieldBuilderV3<
        io.envoyproxy.envoy.type.matcher.ListStringMatcher, io.envoyproxy.envoy.type.matcher.ListStringMatcher.Builder, io.envoyproxy.envoy.type.matcher.ListStringMatcherOrBuilder> 
        getAllowedHeadersFieldBuilder() {
      if (allowedHeadersBuilder_ == null) {
        allowedHeadersBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
            io.envoyproxy.envoy.type.matcher.ListStringMatcher, io.envoyproxy.envoy.type.matcher.ListStringMatcher.Builder, io.envoyproxy.envoy.type.matcher.ListStringMatcherOrBuilder>(
                getAllowedHeaders(),
                getParentForChildren(),
                isClean());
        allowedHeaders_ = null;
      }
      return allowedHeadersBuilder_;
    }

    private java.util.List<io.envoyproxy.envoy.api.v2.core.HeaderValue> headersToAdd_ =
      java.util.Collections.emptyList();
    private void ensureHeadersToAddIsMutable() {
      if (!((bitField0_ & 0x00000002) != 0)) {
        headersToAdd_ = new java.util.ArrayList<io.envoyproxy.envoy.api.v2.core.HeaderValue>(headersToAdd_);
        bitField0_ |= 0x00000002;
       }
    }

    private com.google.protobuf.RepeatedFieldBuilderV3<
        io.envoyproxy.envoy.api.v2.core.HeaderValue, io.envoyproxy.envoy.api.v2.core.HeaderValue.Builder, io.envoyproxy.envoy.api.v2.core.HeaderValueOrBuilder> headersToAddBuilder_;

    /**
     * <pre>
     * Sets a list of headers that will be included to the request to authorization service. Note that
     * client request of the same key will be overridden.
     * </pre>
     *
     * <code>repeated .envoy.api.v2.core.HeaderValue headers_to_add = 2;</code>
     */
    public java.util.List<io.envoyproxy.envoy.api.v2.core.HeaderValue> getHeadersToAddList() {
      if (headersToAddBuilder_ == null) {
        return java.util.Collections.unmodifiableList(headersToAdd_);
      } else {
        return headersToAddBuilder_.getMessageList();
      }
    }
    /**
     * <pre>
     * Sets a list of headers that will be included to the request to authorization service. Note that
     * client request of the same key will be overridden.
     * </pre>
     *
     * <code>repeated .envoy.api.v2.core.HeaderValue headers_to_add = 2;</code>
     */
    public int getHeadersToAddCount() {
      if (headersToAddBuilder_ == null) {
        return headersToAdd_.size();
      } else {
        return headersToAddBuilder_.getCount();
      }
    }
    /**
     * <pre>
     * Sets a list of headers that will be included to the request to authorization service. Note that
     * client request of the same key will be overridden.
     * </pre>
     *
     * <code>repeated .envoy.api.v2.core.HeaderValue headers_to_add = 2;</code>
     */
    public io.envoyproxy.envoy.api.v2.core.HeaderValue getHeadersToAdd(int index) {
      if (headersToAddBuilder_ == null) {
        return headersToAdd_.get(index);
      } else {
        return headersToAddBuilder_.getMessage(index);
      }
    }
    /**
     * <pre>
     * Sets a list of headers that will be included to the request to authorization service. Note that
     * client request of the same key will be overridden.
     * </pre>
     *
     * <code>repeated .envoy.api.v2.core.HeaderValue headers_to_add = 2;</code>
     */
    public Builder setHeadersToAdd(
        int index, io.envoyproxy.envoy.api.v2.core.HeaderValue value) {
      if (headersToAddBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureHeadersToAddIsMutable();
        headersToAdd_.set(index, value);
        onChanged();
      } else {
        headersToAddBuilder_.setMessage(index, value);
      }
      return this;
    }
    /**
     * <pre>
     * Sets a list of headers that will be included to the request to authorization service. Note that
     * client request of the same key will be overridden.
     * </pre>
     *
     * <code>repeated .envoy.api.v2.core.HeaderValue headers_to_add = 2;</code>
     */
    public Builder setHeadersToAdd(
        int index, io.envoyproxy.envoy.api.v2.core.HeaderValue.Builder builderForValue) {
      if (headersToAddBuilder_ == null) {
        ensureHeadersToAddIsMutable();
        headersToAdd_.set(index, builderForValue.build());
        onChanged();
      } else {
        headersToAddBuilder_.setMessage(index, builderForValue.build());
      }
      return this;
    }
    /**
     * <pre>
     * Sets a list of headers that will be included to the request to authorization service. Note that
     * client request of the same key will be overridden.
     * </pre>
     *
     * <code>repeated .envoy.api.v2.core.HeaderValue headers_to_add = 2;</code>
     */
    public Builder addHeadersToAdd(io.envoyproxy.envoy.api.v2.core.HeaderValue value) {
      if (headersToAddBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureHeadersToAddIsMutable();
        headersToAdd_.add(value);
        onChanged();
      } else {
        headersToAddBuilder_.addMessage(value);
      }
      return this;
    }
    /**
     * <pre>
     * Sets a list of headers that will be included to the request to authorization service. Note that
     * client request of the same key will be overridden.
     * </pre>
     *
     * <code>repeated .envoy.api.v2.core.HeaderValue headers_to_add = 2;</code>
     */
    public Builder addHeadersToAdd(
        int index, io.envoyproxy.envoy.api.v2.core.HeaderValue value) {
      if (headersToAddBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureHeadersToAddIsMutable();
        headersToAdd_.add(index, value);
        onChanged();
      } else {
        headersToAddBuilder_.addMessage(index, value);
      }
      return this;
    }
    /**
     * <pre>
     * Sets a list of headers that will be included to the request to authorization service. Note that
     * client request of the same key will be overridden.
     * </pre>
     *
     * <code>repeated .envoy.api.v2.core.HeaderValue headers_to_add = 2;</code>
     */
    public Builder addHeadersToAdd(
        io.envoyproxy.envoy.api.v2.core.HeaderValue.Builder builderForValue) {
      if (headersToAddBuilder_ == null) {
        ensureHeadersToAddIsMutable();
        headersToAdd_.add(builderForValue.build());
        onChanged();
      } else {
        headersToAddBuilder_.addMessage(builderForValue.build());
      }
      return this;
    }
    /**
     * <pre>
     * Sets a list of headers that will be included to the request to authorization service. Note that
     * client request of the same key will be overridden.
     * </pre>
     *
     * <code>repeated .envoy.api.v2.core.HeaderValue headers_to_add = 2;</code>
     */
    public Builder addHeadersToAdd(
        int index, io.envoyproxy.envoy.api.v2.core.HeaderValue.Builder builderForValue) {
      if (headersToAddBuilder_ == null) {
        ensureHeadersToAddIsMutable();
        headersToAdd_.add(index, builderForValue.build());
        onChanged();
      } else {
        headersToAddBuilder_.addMessage(index, builderForValue.build());
      }
      return this;
    }
    /**
     * <pre>
     * Sets a list of headers that will be included to the request to authorization service. Note that
     * client request of the same key will be overridden.
     * </pre>
     *
     * <code>repeated .envoy.api.v2.core.HeaderValue headers_to_add = 2;</code>
     */
    public Builder addAllHeadersToAdd(
        java.lang.Iterable<? extends io.envoyproxy.envoy.api.v2.core.HeaderValue> values) {
      if (headersToAddBuilder_ == null) {
        ensureHeadersToAddIsMutable();
        com.google.protobuf.AbstractMessageLite.Builder.addAll(
            values, headersToAdd_);
        onChanged();
      } else {
        headersToAddBuilder_.addAllMessages(values);
      }
      return this;
    }
    /**
     * <pre>
     * Sets a list of headers that will be included to the request to authorization service. Note that
     * client request of the same key will be overridden.
     * </pre>
     *
     * <code>repeated .envoy.api.v2.core.HeaderValue headers_to_add = 2;</code>
     */
    public Builder clearHeadersToAdd() {
      if (headersToAddBuilder_ == null) {
        headersToAdd_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000002);
        onChanged();
      } else {
        headersToAddBuilder_.clear();
      }
      return this;
    }
    /**
     * <pre>
     * Sets a list of headers that will be included to the request to authorization service. Note that
     * client request of the same key will be overridden.
     * </pre>
     *
     * <code>repeated .envoy.api.v2.core.HeaderValue headers_to_add = 2;</code>
     */
    public Builder removeHeadersToAdd(int index) {
      if (headersToAddBuilder_ == null) {
        ensureHeadersToAddIsMutable();
        headersToAdd_.remove(index);
        onChanged();
      } else {
        headersToAddBuilder_.remove(index);
      }
      return this;
    }
    /**
     * <pre>
     * Sets a list of headers that will be included to the request to authorization service. Note that
     * client request of the same key will be overridden.
     * </pre>
     *
     * <code>repeated .envoy.api.v2.core.HeaderValue headers_to_add = 2;</code>
     */
    public io.envoyproxy.envoy.api.v2.core.HeaderValue.Builder getHeadersToAddBuilder(
        int index) {
      return getHeadersToAddFieldBuilder().getBuilder(index);
    }
    /**
     * <pre>
     * Sets a list of headers that will be included to the request to authorization service. Note that
     * client request of the same key will be overridden.
     * </pre>
     *
     * <code>repeated .envoy.api.v2.core.HeaderValue headers_to_add = 2;</code>
     */
    public io.envoyproxy.envoy.api.v2.core.HeaderValueOrBuilder getHeadersToAddOrBuilder(
        int index) {
      if (headersToAddBuilder_ == null) {
        return headersToAdd_.get(index);  } else {
        return headersToAddBuilder_.getMessageOrBuilder(index);
      }
    }
    /**
     * <pre>
     * Sets a list of headers that will be included to the request to authorization service. Note that
     * client request of the same key will be overridden.
     * </pre>
     *
     * <code>repeated .envoy.api.v2.core.HeaderValue headers_to_add = 2;</code>
     */
    public java.util.List<? extends io.envoyproxy.envoy.api.v2.core.HeaderValueOrBuilder> 
         getHeadersToAddOrBuilderList() {
      if (headersToAddBuilder_ != null) {
        return headersToAddBuilder_.getMessageOrBuilderList();
      } else {
        return java.util.Collections.unmodifiableList(headersToAdd_);
      }
    }
    /**
     * <pre>
     * Sets a list of headers that will be included to the request to authorization service. Note that
     * client request of the same key will be overridden.
     * </pre>
     *
     * <code>repeated .envoy.api.v2.core.HeaderValue headers_to_add = 2;</code>
     */
    public io.envoyproxy.envoy.api.v2.core.HeaderValue.Builder addHeadersToAddBuilder() {
      return getHeadersToAddFieldBuilder().addBuilder(
          io.envoyproxy.envoy.api.v2.core.HeaderValue.getDefaultInstance());
    }
    /**
     * <pre>
     * Sets a list of headers that will be included to the request to authorization service. Note that
     * client request of the same key will be overridden.
     * </pre>
     *
     * <code>repeated .envoy.api.v2.core.HeaderValue headers_to_add = 2;</code>
     */
    public io.envoyproxy.envoy.api.v2.core.HeaderValue.Builder addHeadersToAddBuilder(
        int index) {
      return getHeadersToAddFieldBuilder().addBuilder(
          index, io.envoyproxy.envoy.api.v2.core.HeaderValue.getDefaultInstance());
    }
    /**
     * <pre>
     * Sets a list of headers that will be included to the request to authorization service. Note that
     * client request of the same key will be overridden.
     * </pre>
     *
     * <code>repeated .envoy.api.v2.core.HeaderValue headers_to_add = 2;</code>
     */
    public java.util.List<io.envoyproxy.envoy.api.v2.core.HeaderValue.Builder> 
         getHeadersToAddBuilderList() {
      return getHeadersToAddFieldBuilder().getBuilderList();
    }
    private com.google.protobuf.RepeatedFieldBuilderV3<
        io.envoyproxy.envoy.api.v2.core.HeaderValue, io.envoyproxy.envoy.api.v2.core.HeaderValue.Builder, io.envoyproxy.envoy.api.v2.core.HeaderValueOrBuilder> 
        getHeadersToAddFieldBuilder() {
      if (headersToAddBuilder_ == null) {
        headersToAddBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<
            io.envoyproxy.envoy.api.v2.core.HeaderValue, io.envoyproxy.envoy.api.v2.core.HeaderValue.Builder, io.envoyproxy.envoy.api.v2.core.HeaderValueOrBuilder>(
                headersToAdd_,
                ((bitField0_ & 0x00000002) != 0),
                getParentForChildren(),
                isClean());
        headersToAdd_ = null;
      }
      return headersToAddBuilder_;
    }
    @java.lang.Override
    public final Builder setUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return super.setUnknownFields(unknownFields);
    }

    @java.lang.Override
    public final Builder mergeUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return super.mergeUnknownFields(unknownFields);
    }


    // @@protoc_insertion_point(builder_scope:envoy.config.filter.http.ext_authz.v2.AuthorizationRequest)
  }

  // @@protoc_insertion_point(class_scope:envoy.config.filter.http.ext_authz.v2.AuthorizationRequest)
  private static final io.envoyproxy.envoy.config.filter.http.ext_authz.v2.AuthorizationRequest DEFAULT_INSTANCE;
  static {
    DEFAULT_INSTANCE = new io.envoyproxy.envoy.config.filter.http.ext_authz.v2.AuthorizationRequest();
  }

  public static io.envoyproxy.envoy.config.filter.http.ext_authz.v2.AuthorizationRequest getDefaultInstance() {
    return DEFAULT_INSTANCE;
  }

  private static final com.google.protobuf.Parser<AuthorizationRequest>
      PARSER = new com.google.protobuf.AbstractParser<AuthorizationRequest>() {
    @java.lang.Override
    public AuthorizationRequest parsePartialFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      Builder builder = newBuilder();
      try {
        builder.mergeFrom(input, extensionRegistry);
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(builder.buildPartial());
      } catch (com.google.protobuf.UninitializedMessageException e) {
        throw e.asInvalidProtocolBufferException().setUnfinishedMessage(builder.buildPartial());
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(e)
            .setUnfinishedMessage(builder.buildPartial());
      }
      return builder.buildPartial();
    }
  };

  public static com.google.protobuf.Parser<AuthorizationRequest> parser() {
    return PARSER;
  }

  @java.lang.Override
  public com.google.protobuf.Parser<AuthorizationRequest> getParserForType() {
    return PARSER;
  }

  @java.lang.Override
  public io.envoyproxy.envoy.config.filter.http.ext_authz.v2.AuthorizationRequest getDefaultInstanceForType() {
    return DEFAULT_INSTANCE;
  }

}

