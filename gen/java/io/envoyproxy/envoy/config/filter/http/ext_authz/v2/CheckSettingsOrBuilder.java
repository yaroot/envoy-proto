// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: envoy/config/filter/http/ext_authz/v2/ext_authz.proto

package io.envoyproxy.envoy.config.filter.http.ext_authz.v2;

public interface CheckSettingsOrBuilder extends
    // @@protoc_insertion_point(interface_extends:envoy.config.filter.http.ext_authz.v2.CheckSettings)
    com.google.protobuf.MessageOrBuilder {

  /**
   * <pre>
   * Context extensions to set on the CheckRequest's
   * :ref:`AttributeContext.context_extensions&lt;envoy_api_field_service.auth.v2.AttributeContext.context_extensions&gt;`
   * Merge semantics for this field are such that keys from more specific configs override.
   * .. note::
   *   These settings are only applied to a filter configured with a
   *   :ref:`grpc_service&lt;envoy_api_field_config.filter.http.ext_authz.v2.ExtAuthz.grpc_service&gt;`.
   * </pre>
   *
   * <code>map&lt;string, string&gt; context_extensions = 1;</code>
   */
  int getContextExtensionsCount();
  /**
   * <pre>
   * Context extensions to set on the CheckRequest's
   * :ref:`AttributeContext.context_extensions&lt;envoy_api_field_service.auth.v2.AttributeContext.context_extensions&gt;`
   * Merge semantics for this field are such that keys from more specific configs override.
   * .. note::
   *   These settings are only applied to a filter configured with a
   *   :ref:`grpc_service&lt;envoy_api_field_config.filter.http.ext_authz.v2.ExtAuthz.grpc_service&gt;`.
   * </pre>
   *
   * <code>map&lt;string, string&gt; context_extensions = 1;</code>
   */
  boolean containsContextExtensions(
      java.lang.String key);
  /**
   * Use {@link #getContextExtensionsMap()} instead.
   */
  @java.lang.Deprecated
  java.util.Map<java.lang.String, java.lang.String>
  getContextExtensions();
  /**
   * <pre>
   * Context extensions to set on the CheckRequest's
   * :ref:`AttributeContext.context_extensions&lt;envoy_api_field_service.auth.v2.AttributeContext.context_extensions&gt;`
   * Merge semantics for this field are such that keys from more specific configs override.
   * .. note::
   *   These settings are only applied to a filter configured with a
   *   :ref:`grpc_service&lt;envoy_api_field_config.filter.http.ext_authz.v2.ExtAuthz.grpc_service&gt;`.
   * </pre>
   *
   * <code>map&lt;string, string&gt; context_extensions = 1;</code>
   */
  java.util.Map<java.lang.String, java.lang.String>
  getContextExtensionsMap();
  /**
   * <pre>
   * Context extensions to set on the CheckRequest's
   * :ref:`AttributeContext.context_extensions&lt;envoy_api_field_service.auth.v2.AttributeContext.context_extensions&gt;`
   * Merge semantics for this field are such that keys from more specific configs override.
   * .. note::
   *   These settings are only applied to a filter configured with a
   *   :ref:`grpc_service&lt;envoy_api_field_config.filter.http.ext_authz.v2.ExtAuthz.grpc_service&gt;`.
   * </pre>
   *
   * <code>map&lt;string, string&gt; context_extensions = 1;</code>
   */

  /* nullable */
java.lang.String getContextExtensionsOrDefault(
      java.lang.String key,
      /* nullable */
java.lang.String defaultValue);
  /**
   * <pre>
   * Context extensions to set on the CheckRequest's
   * :ref:`AttributeContext.context_extensions&lt;envoy_api_field_service.auth.v2.AttributeContext.context_extensions&gt;`
   * Merge semantics for this field are such that keys from more specific configs override.
   * .. note::
   *   These settings are only applied to a filter configured with a
   *   :ref:`grpc_service&lt;envoy_api_field_config.filter.http.ext_authz.v2.ExtAuthz.grpc_service&gt;`.
   * </pre>
   *
   * <code>map&lt;string, string&gt; context_extensions = 1;</code>
   */

  java.lang.String getContextExtensionsOrThrow(
      java.lang.String key);
}
