// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: envoy/config/filter/http/health_check/v2/health_check.proto

package io.envoyproxy.envoy.config.filter.http.health_check.v2;

/**
 * <pre>
 * [#next-free-field: 6]
 * </pre>
 *
 * Protobuf type {@code envoy.config.filter.http.health_check.v2.HealthCheck}
 */
public final class HealthCheck extends
    com.google.protobuf.GeneratedMessageV3 implements
    // @@protoc_insertion_point(message_implements:envoy.config.filter.http.health_check.v2.HealthCheck)
    HealthCheckOrBuilder {
private static final long serialVersionUID = 0L;
  // Use HealthCheck.newBuilder() to construct.
  private HealthCheck(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
    super(builder);
  }
  private HealthCheck() {
    headers_ = java.util.Collections.emptyList();
  }

  @java.lang.Override
  @SuppressWarnings({"unused"})
  protected java.lang.Object newInstance(
      UnusedPrivateParameter unused) {
    return new HealthCheck();
  }

  @java.lang.Override
  public final com.google.protobuf.UnknownFieldSet
  getUnknownFields() {
    return this.unknownFields;
  }
  public static final com.google.protobuf.Descriptors.Descriptor
      getDescriptor() {
    return io.envoyproxy.envoy.config.filter.http.health_check.v2.HealthCheckProto.internal_static_envoy_config_filter_http_health_check_v2_HealthCheck_descriptor;
  }

  @SuppressWarnings({"rawtypes"})
  @java.lang.Override
  protected com.google.protobuf.MapField internalGetMapField(
      int number) {
    switch (number) {
      case 4:
        return internalGetClusterMinHealthyPercentages();
      default:
        throw new RuntimeException(
            "Invalid map field number: " + number);
    }
  }
  @java.lang.Override
  protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internalGetFieldAccessorTable() {
    return io.envoyproxy.envoy.config.filter.http.health_check.v2.HealthCheckProto.internal_static_envoy_config_filter_http_health_check_v2_HealthCheck_fieldAccessorTable
        .ensureFieldAccessorsInitialized(
            io.envoyproxy.envoy.config.filter.http.health_check.v2.HealthCheck.class, io.envoyproxy.envoy.config.filter.http.health_check.v2.HealthCheck.Builder.class);
  }

  public static final int PASS_THROUGH_MODE_FIELD_NUMBER = 1;
  private com.google.protobuf.BoolValue passThroughMode_;
  /**
   * <pre>
   * Specifies whether the filter operates in pass through mode or not.
   * </pre>
   *
   * <code>.google.protobuf.BoolValue pass_through_mode = 1 [(.validate.rules) = { ... }</code>
   * @return Whether the passThroughMode field is set.
   */
  @java.lang.Override
  public boolean hasPassThroughMode() {
    return passThroughMode_ != null;
  }
  /**
   * <pre>
   * Specifies whether the filter operates in pass through mode or not.
   * </pre>
   *
   * <code>.google.protobuf.BoolValue pass_through_mode = 1 [(.validate.rules) = { ... }</code>
   * @return The passThroughMode.
   */
  @java.lang.Override
  public com.google.protobuf.BoolValue getPassThroughMode() {
    return passThroughMode_ == null ? com.google.protobuf.BoolValue.getDefaultInstance() : passThroughMode_;
  }
  /**
   * <pre>
   * Specifies whether the filter operates in pass through mode or not.
   * </pre>
   *
   * <code>.google.protobuf.BoolValue pass_through_mode = 1 [(.validate.rules) = { ... }</code>
   */
  @java.lang.Override
  public com.google.protobuf.BoolValueOrBuilder getPassThroughModeOrBuilder() {
    return passThroughMode_ == null ? com.google.protobuf.BoolValue.getDefaultInstance() : passThroughMode_;
  }

  public static final int CACHE_TIME_FIELD_NUMBER = 3;
  private com.google.protobuf.Duration cacheTime_;
  /**
   * <pre>
   * If operating in pass through mode, the amount of time in milliseconds
   * that the filter should cache the upstream response.
   * </pre>
   *
   * <code>.google.protobuf.Duration cache_time = 3;</code>
   * @return Whether the cacheTime field is set.
   */
  @java.lang.Override
  public boolean hasCacheTime() {
    return cacheTime_ != null;
  }
  /**
   * <pre>
   * If operating in pass through mode, the amount of time in milliseconds
   * that the filter should cache the upstream response.
   * </pre>
   *
   * <code>.google.protobuf.Duration cache_time = 3;</code>
   * @return The cacheTime.
   */
  @java.lang.Override
  public com.google.protobuf.Duration getCacheTime() {
    return cacheTime_ == null ? com.google.protobuf.Duration.getDefaultInstance() : cacheTime_;
  }
  /**
   * <pre>
   * If operating in pass through mode, the amount of time in milliseconds
   * that the filter should cache the upstream response.
   * </pre>
   *
   * <code>.google.protobuf.Duration cache_time = 3;</code>
   */
  @java.lang.Override
  public com.google.protobuf.DurationOrBuilder getCacheTimeOrBuilder() {
    return cacheTime_ == null ? com.google.protobuf.Duration.getDefaultInstance() : cacheTime_;
  }

  public static final int CLUSTER_MIN_HEALTHY_PERCENTAGES_FIELD_NUMBER = 4;
  private static final class ClusterMinHealthyPercentagesDefaultEntryHolder {
    static final com.google.protobuf.MapEntry<
        java.lang.String, io.envoyproxy.envoy.type.Percent> defaultEntry =
            com.google.protobuf.MapEntry
            .<java.lang.String, io.envoyproxy.envoy.type.Percent>newDefaultInstance(
                io.envoyproxy.envoy.config.filter.http.health_check.v2.HealthCheckProto.internal_static_envoy_config_filter_http_health_check_v2_HealthCheck_ClusterMinHealthyPercentagesEntry_descriptor, 
                com.google.protobuf.WireFormat.FieldType.STRING,
                "",
                com.google.protobuf.WireFormat.FieldType.MESSAGE,
                io.envoyproxy.envoy.type.Percent.getDefaultInstance());
  }
  @SuppressWarnings("serial")
  private com.google.protobuf.MapField<
      java.lang.String, io.envoyproxy.envoy.type.Percent> clusterMinHealthyPercentages_;
  private com.google.protobuf.MapField<java.lang.String, io.envoyproxy.envoy.type.Percent>
  internalGetClusterMinHealthyPercentages() {
    if (clusterMinHealthyPercentages_ == null) {
      return com.google.protobuf.MapField.emptyMapField(
          ClusterMinHealthyPercentagesDefaultEntryHolder.defaultEntry);
    }
    return clusterMinHealthyPercentages_;
  }
  public int getClusterMinHealthyPercentagesCount() {
    return internalGetClusterMinHealthyPercentages().getMap().size();
  }
  /**
   * <pre>
   * If operating in non-pass-through mode, specifies a set of upstream cluster
   * names and the minimum percentage of servers in each of those clusters that
   * must be healthy or degraded in order for the filter to return a 200.
   * .. note::
   *    This value is interpreted as an integer by truncating, so 12.50% will be calculated
   *    as if it were 12%.
   * </pre>
   *
   * <code>map&lt;string, .envoy.type.Percent&gt; cluster_min_healthy_percentages = 4;</code>
   */
  @java.lang.Override
  public boolean containsClusterMinHealthyPercentages(
      java.lang.String key) {
    if (key == null) { throw new NullPointerException("map key"); }
    return internalGetClusterMinHealthyPercentages().getMap().containsKey(key);
  }
  /**
   * Use {@link #getClusterMinHealthyPercentagesMap()} instead.
   */
  @java.lang.Override
  @java.lang.Deprecated
  public java.util.Map<java.lang.String, io.envoyproxy.envoy.type.Percent> getClusterMinHealthyPercentages() {
    return getClusterMinHealthyPercentagesMap();
  }
  /**
   * <pre>
   * If operating in non-pass-through mode, specifies a set of upstream cluster
   * names and the minimum percentage of servers in each of those clusters that
   * must be healthy or degraded in order for the filter to return a 200.
   * .. note::
   *    This value is interpreted as an integer by truncating, so 12.50% will be calculated
   *    as if it were 12%.
   * </pre>
   *
   * <code>map&lt;string, .envoy.type.Percent&gt; cluster_min_healthy_percentages = 4;</code>
   */
  @java.lang.Override
  public java.util.Map<java.lang.String, io.envoyproxy.envoy.type.Percent> getClusterMinHealthyPercentagesMap() {
    return internalGetClusterMinHealthyPercentages().getMap();
  }
  /**
   * <pre>
   * If operating in non-pass-through mode, specifies a set of upstream cluster
   * names and the minimum percentage of servers in each of those clusters that
   * must be healthy or degraded in order for the filter to return a 200.
   * .. note::
   *    This value is interpreted as an integer by truncating, so 12.50% will be calculated
   *    as if it were 12%.
   * </pre>
   *
   * <code>map&lt;string, .envoy.type.Percent&gt; cluster_min_healthy_percentages = 4;</code>
   */
  @java.lang.Override
  public /* nullable */
io.envoyproxy.envoy.type.Percent getClusterMinHealthyPercentagesOrDefault(
      java.lang.String key,
      /* nullable */
io.envoyproxy.envoy.type.Percent defaultValue) {
    if (key == null) { throw new NullPointerException("map key"); }
    java.util.Map<java.lang.String, io.envoyproxy.envoy.type.Percent> map =
        internalGetClusterMinHealthyPercentages().getMap();
    return map.containsKey(key) ? map.get(key) : defaultValue;
  }
  /**
   * <pre>
   * If operating in non-pass-through mode, specifies a set of upstream cluster
   * names and the minimum percentage of servers in each of those clusters that
   * must be healthy or degraded in order for the filter to return a 200.
   * .. note::
   *    This value is interpreted as an integer by truncating, so 12.50% will be calculated
   *    as if it were 12%.
   * </pre>
   *
   * <code>map&lt;string, .envoy.type.Percent&gt; cluster_min_healthy_percentages = 4;</code>
   */
  @java.lang.Override
  public io.envoyproxy.envoy.type.Percent getClusterMinHealthyPercentagesOrThrow(
      java.lang.String key) {
    if (key == null) { throw new NullPointerException("map key"); }
    java.util.Map<java.lang.String, io.envoyproxy.envoy.type.Percent> map =
        internalGetClusterMinHealthyPercentages().getMap();
    if (!map.containsKey(key)) {
      throw new java.lang.IllegalArgumentException();
    }
    return map.get(key);
  }

  public static final int HEADERS_FIELD_NUMBER = 5;
  @SuppressWarnings("serial")
  private java.util.List<io.envoyproxy.envoy.api.v2.route.HeaderMatcher> headers_;
  /**
   * <pre>
   * Specifies a set of health check request headers to match on. The health check filter will
   * check a request’s headers against all the specified headers. To specify the health check
   * endpoint, set the ``:path`` header to match on.
   * </pre>
   *
   * <code>repeated .envoy.api.v2.route.HeaderMatcher headers = 5;</code>
   */
  @java.lang.Override
  public java.util.List<io.envoyproxy.envoy.api.v2.route.HeaderMatcher> getHeadersList() {
    return headers_;
  }
  /**
   * <pre>
   * Specifies a set of health check request headers to match on. The health check filter will
   * check a request’s headers against all the specified headers. To specify the health check
   * endpoint, set the ``:path`` header to match on.
   * </pre>
   *
   * <code>repeated .envoy.api.v2.route.HeaderMatcher headers = 5;</code>
   */
  @java.lang.Override
  public java.util.List<? extends io.envoyproxy.envoy.api.v2.route.HeaderMatcherOrBuilder> 
      getHeadersOrBuilderList() {
    return headers_;
  }
  /**
   * <pre>
   * Specifies a set of health check request headers to match on. The health check filter will
   * check a request’s headers against all the specified headers. To specify the health check
   * endpoint, set the ``:path`` header to match on.
   * </pre>
   *
   * <code>repeated .envoy.api.v2.route.HeaderMatcher headers = 5;</code>
   */
  @java.lang.Override
  public int getHeadersCount() {
    return headers_.size();
  }
  /**
   * <pre>
   * Specifies a set of health check request headers to match on. The health check filter will
   * check a request’s headers against all the specified headers. To specify the health check
   * endpoint, set the ``:path`` header to match on.
   * </pre>
   *
   * <code>repeated .envoy.api.v2.route.HeaderMatcher headers = 5;</code>
   */
  @java.lang.Override
  public io.envoyproxy.envoy.api.v2.route.HeaderMatcher getHeaders(int index) {
    return headers_.get(index);
  }
  /**
   * <pre>
   * Specifies a set of health check request headers to match on. The health check filter will
   * check a request’s headers against all the specified headers. To specify the health check
   * endpoint, set the ``:path`` header to match on.
   * </pre>
   *
   * <code>repeated .envoy.api.v2.route.HeaderMatcher headers = 5;</code>
   */
  @java.lang.Override
  public io.envoyproxy.envoy.api.v2.route.HeaderMatcherOrBuilder getHeadersOrBuilder(
      int index) {
    return headers_.get(index);
  }

  private byte memoizedIsInitialized = -1;
  @java.lang.Override
  public final boolean isInitialized() {
    byte isInitialized = memoizedIsInitialized;
    if (isInitialized == 1) return true;
    if (isInitialized == 0) return false;

    memoizedIsInitialized = 1;
    return true;
  }

  @java.lang.Override
  public void writeTo(com.google.protobuf.CodedOutputStream output)
                      throws java.io.IOException {
    if (passThroughMode_ != null) {
      output.writeMessage(1, getPassThroughMode());
    }
    if (cacheTime_ != null) {
      output.writeMessage(3, getCacheTime());
    }
    com.google.protobuf.GeneratedMessageV3
      .serializeStringMapTo(
        output,
        internalGetClusterMinHealthyPercentages(),
        ClusterMinHealthyPercentagesDefaultEntryHolder.defaultEntry,
        4);
    for (int i = 0; i < headers_.size(); i++) {
      output.writeMessage(5, headers_.get(i));
    }
    getUnknownFields().writeTo(output);
  }

  @java.lang.Override
  public int getSerializedSize() {
    int size = memoizedSize;
    if (size != -1) return size;

    size = 0;
    if (passThroughMode_ != null) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(1, getPassThroughMode());
    }
    if (cacheTime_ != null) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(3, getCacheTime());
    }
    for (java.util.Map.Entry<java.lang.String, io.envoyproxy.envoy.type.Percent> entry
         : internalGetClusterMinHealthyPercentages().getMap().entrySet()) {
      com.google.protobuf.MapEntry<java.lang.String, io.envoyproxy.envoy.type.Percent>
      clusterMinHealthyPercentages__ = ClusterMinHealthyPercentagesDefaultEntryHolder.defaultEntry.newBuilderForType()
          .setKey(entry.getKey())
          .setValue(entry.getValue())
          .build();
      size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(4, clusterMinHealthyPercentages__);
    }
    for (int i = 0; i < headers_.size(); i++) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(5, headers_.get(i));
    }
    size += getUnknownFields().getSerializedSize();
    memoizedSize = size;
    return size;
  }

  @java.lang.Override
  public boolean equals(final java.lang.Object obj) {
    if (obj == this) {
     return true;
    }
    if (!(obj instanceof io.envoyproxy.envoy.config.filter.http.health_check.v2.HealthCheck)) {
      return super.equals(obj);
    }
    io.envoyproxy.envoy.config.filter.http.health_check.v2.HealthCheck other = (io.envoyproxy.envoy.config.filter.http.health_check.v2.HealthCheck) obj;

    if (hasPassThroughMode() != other.hasPassThroughMode()) return false;
    if (hasPassThroughMode()) {
      if (!getPassThroughMode()
          .equals(other.getPassThroughMode())) return false;
    }
    if (hasCacheTime() != other.hasCacheTime()) return false;
    if (hasCacheTime()) {
      if (!getCacheTime()
          .equals(other.getCacheTime())) return false;
    }
    if (!internalGetClusterMinHealthyPercentages().equals(
        other.internalGetClusterMinHealthyPercentages())) return false;
    if (!getHeadersList()
        .equals(other.getHeadersList())) return false;
    if (!getUnknownFields().equals(other.getUnknownFields())) return false;
    return true;
  }

  @java.lang.Override
  public int hashCode() {
    if (memoizedHashCode != 0) {
      return memoizedHashCode;
    }
    int hash = 41;
    hash = (19 * hash) + getDescriptor().hashCode();
    if (hasPassThroughMode()) {
      hash = (37 * hash) + PASS_THROUGH_MODE_FIELD_NUMBER;
      hash = (53 * hash) + getPassThroughMode().hashCode();
    }
    if (hasCacheTime()) {
      hash = (37 * hash) + CACHE_TIME_FIELD_NUMBER;
      hash = (53 * hash) + getCacheTime().hashCode();
    }
    if (!internalGetClusterMinHealthyPercentages().getMap().isEmpty()) {
      hash = (37 * hash) + CLUSTER_MIN_HEALTHY_PERCENTAGES_FIELD_NUMBER;
      hash = (53 * hash) + internalGetClusterMinHealthyPercentages().hashCode();
    }
    if (getHeadersCount() > 0) {
      hash = (37 * hash) + HEADERS_FIELD_NUMBER;
      hash = (53 * hash) + getHeadersList().hashCode();
    }
    hash = (29 * hash) + getUnknownFields().hashCode();
    memoizedHashCode = hash;
    return hash;
  }

  public static io.envoyproxy.envoy.config.filter.http.health_check.v2.HealthCheck parseFrom(
      java.nio.ByteBuffer data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static io.envoyproxy.envoy.config.filter.http.health_check.v2.HealthCheck parseFrom(
      java.nio.ByteBuffer data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static io.envoyproxy.envoy.config.filter.http.health_check.v2.HealthCheck parseFrom(
      com.google.protobuf.ByteString data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static io.envoyproxy.envoy.config.filter.http.health_check.v2.HealthCheck parseFrom(
      com.google.protobuf.ByteString data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static io.envoyproxy.envoy.config.filter.http.health_check.v2.HealthCheck parseFrom(byte[] data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static io.envoyproxy.envoy.config.filter.http.health_check.v2.HealthCheck parseFrom(
      byte[] data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static io.envoyproxy.envoy.config.filter.http.health_check.v2.HealthCheck parseFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input);
  }
  public static io.envoyproxy.envoy.config.filter.http.health_check.v2.HealthCheck parseFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input, extensionRegistry);
  }
  public static io.envoyproxy.envoy.config.filter.http.health_check.v2.HealthCheck parseDelimitedFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseDelimitedWithIOException(PARSER, input);
  }
  public static io.envoyproxy.envoy.config.filter.http.health_check.v2.HealthCheck parseDelimitedFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
  }
  public static io.envoyproxy.envoy.config.filter.http.health_check.v2.HealthCheck parseFrom(
      com.google.protobuf.CodedInputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input);
  }
  public static io.envoyproxy.envoy.config.filter.http.health_check.v2.HealthCheck parseFrom(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input, extensionRegistry);
  }

  @java.lang.Override
  public Builder newBuilderForType() { return newBuilder(); }
  public static Builder newBuilder() {
    return DEFAULT_INSTANCE.toBuilder();
  }
  public static Builder newBuilder(io.envoyproxy.envoy.config.filter.http.health_check.v2.HealthCheck prototype) {
    return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
  }
  @java.lang.Override
  public Builder toBuilder() {
    return this == DEFAULT_INSTANCE
        ? new Builder() : new Builder().mergeFrom(this);
  }

  @java.lang.Override
  protected Builder newBuilderForType(
      com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
    Builder builder = new Builder(parent);
    return builder;
  }
  /**
   * <pre>
   * [#next-free-field: 6]
   * </pre>
   *
   * Protobuf type {@code envoy.config.filter.http.health_check.v2.HealthCheck}
   */
  public static final class Builder extends
      com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
      // @@protoc_insertion_point(builder_implements:envoy.config.filter.http.health_check.v2.HealthCheck)
      io.envoyproxy.envoy.config.filter.http.health_check.v2.HealthCheckOrBuilder {
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return io.envoyproxy.envoy.config.filter.http.health_check.v2.HealthCheckProto.internal_static_envoy_config_filter_http_health_check_v2_HealthCheck_descriptor;
    }

    @SuppressWarnings({"rawtypes"})
    protected com.google.protobuf.MapField internalGetMapField(
        int number) {
      switch (number) {
        case 4:
          return internalGetClusterMinHealthyPercentages();
        default:
          throw new RuntimeException(
              "Invalid map field number: " + number);
      }
    }
    @SuppressWarnings({"rawtypes"})
    protected com.google.protobuf.MapField internalGetMutableMapField(
        int number) {
      switch (number) {
        case 4:
          return internalGetMutableClusterMinHealthyPercentages();
        default:
          throw new RuntimeException(
              "Invalid map field number: " + number);
      }
    }
    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return io.envoyproxy.envoy.config.filter.http.health_check.v2.HealthCheckProto.internal_static_envoy_config_filter_http_health_check_v2_HealthCheck_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              io.envoyproxy.envoy.config.filter.http.health_check.v2.HealthCheck.class, io.envoyproxy.envoy.config.filter.http.health_check.v2.HealthCheck.Builder.class);
    }

    // Construct using io.envoyproxy.envoy.config.filter.http.health_check.v2.HealthCheck.newBuilder()
    private Builder() {

    }

    private Builder(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      super(parent);

    }
    @java.lang.Override
    public Builder clear() {
      super.clear();
      bitField0_ = 0;
      passThroughMode_ = null;
      if (passThroughModeBuilder_ != null) {
        passThroughModeBuilder_.dispose();
        passThroughModeBuilder_ = null;
      }
      cacheTime_ = null;
      if (cacheTimeBuilder_ != null) {
        cacheTimeBuilder_.dispose();
        cacheTimeBuilder_ = null;
      }
      internalGetMutableClusterMinHealthyPercentages().clear();
      if (headersBuilder_ == null) {
        headers_ = java.util.Collections.emptyList();
      } else {
        headers_ = null;
        headersBuilder_.clear();
      }
      bitField0_ = (bitField0_ & ~0x00000008);
      return this;
    }

    @java.lang.Override
    public com.google.protobuf.Descriptors.Descriptor
        getDescriptorForType() {
      return io.envoyproxy.envoy.config.filter.http.health_check.v2.HealthCheckProto.internal_static_envoy_config_filter_http_health_check_v2_HealthCheck_descriptor;
    }

    @java.lang.Override
    public io.envoyproxy.envoy.config.filter.http.health_check.v2.HealthCheck getDefaultInstanceForType() {
      return io.envoyproxy.envoy.config.filter.http.health_check.v2.HealthCheck.getDefaultInstance();
    }

    @java.lang.Override
    public io.envoyproxy.envoy.config.filter.http.health_check.v2.HealthCheck build() {
      io.envoyproxy.envoy.config.filter.http.health_check.v2.HealthCheck result = buildPartial();
      if (!result.isInitialized()) {
        throw newUninitializedMessageException(result);
      }
      return result;
    }

    @java.lang.Override
    public io.envoyproxy.envoy.config.filter.http.health_check.v2.HealthCheck buildPartial() {
      io.envoyproxy.envoy.config.filter.http.health_check.v2.HealthCheck result = new io.envoyproxy.envoy.config.filter.http.health_check.v2.HealthCheck(this);
      buildPartialRepeatedFields(result);
      if (bitField0_ != 0) { buildPartial0(result); }
      onBuilt();
      return result;
    }

    private void buildPartialRepeatedFields(io.envoyproxy.envoy.config.filter.http.health_check.v2.HealthCheck result) {
      if (headersBuilder_ == null) {
        if (((bitField0_ & 0x00000008) != 0)) {
          headers_ = java.util.Collections.unmodifiableList(headers_);
          bitField0_ = (bitField0_ & ~0x00000008);
        }
        result.headers_ = headers_;
      } else {
        result.headers_ = headersBuilder_.build();
      }
    }

    private void buildPartial0(io.envoyproxy.envoy.config.filter.http.health_check.v2.HealthCheck result) {
      int from_bitField0_ = bitField0_;
      if (((from_bitField0_ & 0x00000001) != 0)) {
        result.passThroughMode_ = passThroughModeBuilder_ == null
            ? passThroughMode_
            : passThroughModeBuilder_.build();
      }
      if (((from_bitField0_ & 0x00000002) != 0)) {
        result.cacheTime_ = cacheTimeBuilder_ == null
            ? cacheTime_
            : cacheTimeBuilder_.build();
      }
      if (((from_bitField0_ & 0x00000004) != 0)) {
        result.clusterMinHealthyPercentages_ = internalGetClusterMinHealthyPercentages();
        result.clusterMinHealthyPercentages_.makeImmutable();
      }
    }

    @java.lang.Override
    public Builder clone() {
      return super.clone();
    }
    @java.lang.Override
    public Builder setField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        java.lang.Object value) {
      return super.setField(field, value);
    }
    @java.lang.Override
    public Builder clearField(
        com.google.protobuf.Descriptors.FieldDescriptor field) {
      return super.clearField(field);
    }
    @java.lang.Override
    public Builder clearOneof(
        com.google.protobuf.Descriptors.OneofDescriptor oneof) {
      return super.clearOneof(oneof);
    }
    @java.lang.Override
    public Builder setRepeatedField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        int index, java.lang.Object value) {
      return super.setRepeatedField(field, index, value);
    }
    @java.lang.Override
    public Builder addRepeatedField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        java.lang.Object value) {
      return super.addRepeatedField(field, value);
    }
    @java.lang.Override
    public Builder mergeFrom(com.google.protobuf.Message other) {
      if (other instanceof io.envoyproxy.envoy.config.filter.http.health_check.v2.HealthCheck) {
        return mergeFrom((io.envoyproxy.envoy.config.filter.http.health_check.v2.HealthCheck)other);
      } else {
        super.mergeFrom(other);
        return this;
      }
    }

    public Builder mergeFrom(io.envoyproxy.envoy.config.filter.http.health_check.v2.HealthCheck other) {
      if (other == io.envoyproxy.envoy.config.filter.http.health_check.v2.HealthCheck.getDefaultInstance()) return this;
      if (other.hasPassThroughMode()) {
        mergePassThroughMode(other.getPassThroughMode());
      }
      if (other.hasCacheTime()) {
        mergeCacheTime(other.getCacheTime());
      }
      internalGetMutableClusterMinHealthyPercentages().mergeFrom(
          other.internalGetClusterMinHealthyPercentages());
      bitField0_ |= 0x00000004;
      if (headersBuilder_ == null) {
        if (!other.headers_.isEmpty()) {
          if (headers_.isEmpty()) {
            headers_ = other.headers_;
            bitField0_ = (bitField0_ & ~0x00000008);
          } else {
            ensureHeadersIsMutable();
            headers_.addAll(other.headers_);
          }
          onChanged();
        }
      } else {
        if (!other.headers_.isEmpty()) {
          if (headersBuilder_.isEmpty()) {
            headersBuilder_.dispose();
            headersBuilder_ = null;
            headers_ = other.headers_;
            bitField0_ = (bitField0_ & ~0x00000008);
            headersBuilder_ = 
              com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?
                 getHeadersFieldBuilder() : null;
          } else {
            headersBuilder_.addAllMessages(other.headers_);
          }
        }
      }
      this.mergeUnknownFields(other.getUnknownFields());
      onChanged();
      return this;
    }

    @java.lang.Override
    public final boolean isInitialized() {
      return true;
    }

    @java.lang.Override
    public Builder mergeFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 10: {
              input.readMessage(
                  getPassThroughModeFieldBuilder().getBuilder(),
                  extensionRegistry);
              bitField0_ |= 0x00000001;
              break;
            } // case 10
            case 26: {
              input.readMessage(
                  getCacheTimeFieldBuilder().getBuilder(),
                  extensionRegistry);
              bitField0_ |= 0x00000002;
              break;
            } // case 26
            case 34: {
              com.google.protobuf.MapEntry<java.lang.String, io.envoyproxy.envoy.type.Percent>
              clusterMinHealthyPercentages__ = input.readMessage(
                  ClusterMinHealthyPercentagesDefaultEntryHolder.defaultEntry.getParserForType(), extensionRegistry);
              internalGetMutableClusterMinHealthyPercentages().getMutableMap().put(
                  clusterMinHealthyPercentages__.getKey(), clusterMinHealthyPercentages__.getValue());
              bitField0_ |= 0x00000004;
              break;
            } // case 34
            case 42: {
              io.envoyproxy.envoy.api.v2.route.HeaderMatcher m =
                  input.readMessage(
                      io.envoyproxy.envoy.api.v2.route.HeaderMatcher.parser(),
                      extensionRegistry);
              if (headersBuilder_ == null) {
                ensureHeadersIsMutable();
                headers_.add(m);
              } else {
                headersBuilder_.addMessage(m);
              }
              break;
            } // case 42
            default: {
              if (!super.parseUnknownField(input, extensionRegistry, tag)) {
                done = true; // was an endgroup tag
              }
              break;
            } // default:
          } // switch (tag)
        } // while (!done)
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.unwrapIOException();
      } finally {
        onChanged();
      } // finally
      return this;
    }
    private int bitField0_;

    private com.google.protobuf.BoolValue passThroughMode_;
    private com.google.protobuf.SingleFieldBuilderV3<
        com.google.protobuf.BoolValue, com.google.protobuf.BoolValue.Builder, com.google.protobuf.BoolValueOrBuilder> passThroughModeBuilder_;
    /**
     * <pre>
     * Specifies whether the filter operates in pass through mode or not.
     * </pre>
     *
     * <code>.google.protobuf.BoolValue pass_through_mode = 1 [(.validate.rules) = { ... }</code>
     * @return Whether the passThroughMode field is set.
     */
    public boolean hasPassThroughMode() {
      return ((bitField0_ & 0x00000001) != 0);
    }
    /**
     * <pre>
     * Specifies whether the filter operates in pass through mode or not.
     * </pre>
     *
     * <code>.google.protobuf.BoolValue pass_through_mode = 1 [(.validate.rules) = { ... }</code>
     * @return The passThroughMode.
     */
    public com.google.protobuf.BoolValue getPassThroughMode() {
      if (passThroughModeBuilder_ == null) {
        return passThroughMode_ == null ? com.google.protobuf.BoolValue.getDefaultInstance() : passThroughMode_;
      } else {
        return passThroughModeBuilder_.getMessage();
      }
    }
    /**
     * <pre>
     * Specifies whether the filter operates in pass through mode or not.
     * </pre>
     *
     * <code>.google.protobuf.BoolValue pass_through_mode = 1 [(.validate.rules) = { ... }</code>
     */
    public Builder setPassThroughMode(com.google.protobuf.BoolValue value) {
      if (passThroughModeBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        passThroughMode_ = value;
      } else {
        passThroughModeBuilder_.setMessage(value);
      }
      bitField0_ |= 0x00000001;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * Specifies whether the filter operates in pass through mode or not.
     * </pre>
     *
     * <code>.google.protobuf.BoolValue pass_through_mode = 1 [(.validate.rules) = { ... }</code>
     */
    public Builder setPassThroughMode(
        com.google.protobuf.BoolValue.Builder builderForValue) {
      if (passThroughModeBuilder_ == null) {
        passThroughMode_ = builderForValue.build();
      } else {
        passThroughModeBuilder_.setMessage(builderForValue.build());
      }
      bitField0_ |= 0x00000001;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * Specifies whether the filter operates in pass through mode or not.
     * </pre>
     *
     * <code>.google.protobuf.BoolValue pass_through_mode = 1 [(.validate.rules) = { ... }</code>
     */
    public Builder mergePassThroughMode(com.google.protobuf.BoolValue value) {
      if (passThroughModeBuilder_ == null) {
        if (((bitField0_ & 0x00000001) != 0) &&
          passThroughMode_ != null &&
          passThroughMode_ != com.google.protobuf.BoolValue.getDefaultInstance()) {
          getPassThroughModeBuilder().mergeFrom(value);
        } else {
          passThroughMode_ = value;
        }
      } else {
        passThroughModeBuilder_.mergeFrom(value);
      }
      bitField0_ |= 0x00000001;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * Specifies whether the filter operates in pass through mode or not.
     * </pre>
     *
     * <code>.google.protobuf.BoolValue pass_through_mode = 1 [(.validate.rules) = { ... }</code>
     */
    public Builder clearPassThroughMode() {
      bitField0_ = (bitField0_ & ~0x00000001);
      passThroughMode_ = null;
      if (passThroughModeBuilder_ != null) {
        passThroughModeBuilder_.dispose();
        passThroughModeBuilder_ = null;
      }
      onChanged();
      return this;
    }
    /**
     * <pre>
     * Specifies whether the filter operates in pass through mode or not.
     * </pre>
     *
     * <code>.google.protobuf.BoolValue pass_through_mode = 1 [(.validate.rules) = { ... }</code>
     */
    public com.google.protobuf.BoolValue.Builder getPassThroughModeBuilder() {
      bitField0_ |= 0x00000001;
      onChanged();
      return getPassThroughModeFieldBuilder().getBuilder();
    }
    /**
     * <pre>
     * Specifies whether the filter operates in pass through mode or not.
     * </pre>
     *
     * <code>.google.protobuf.BoolValue pass_through_mode = 1 [(.validate.rules) = { ... }</code>
     */
    public com.google.protobuf.BoolValueOrBuilder getPassThroughModeOrBuilder() {
      if (passThroughModeBuilder_ != null) {
        return passThroughModeBuilder_.getMessageOrBuilder();
      } else {
        return passThroughMode_ == null ?
            com.google.protobuf.BoolValue.getDefaultInstance() : passThroughMode_;
      }
    }
    /**
     * <pre>
     * Specifies whether the filter operates in pass through mode or not.
     * </pre>
     *
     * <code>.google.protobuf.BoolValue pass_through_mode = 1 [(.validate.rules) = { ... }</code>
     */
    private com.google.protobuf.SingleFieldBuilderV3<
        com.google.protobuf.BoolValue, com.google.protobuf.BoolValue.Builder, com.google.protobuf.BoolValueOrBuilder> 
        getPassThroughModeFieldBuilder() {
      if (passThroughModeBuilder_ == null) {
        passThroughModeBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
            com.google.protobuf.BoolValue, com.google.protobuf.BoolValue.Builder, com.google.protobuf.BoolValueOrBuilder>(
                getPassThroughMode(),
                getParentForChildren(),
                isClean());
        passThroughMode_ = null;
      }
      return passThroughModeBuilder_;
    }

    private com.google.protobuf.Duration cacheTime_;
    private com.google.protobuf.SingleFieldBuilderV3<
        com.google.protobuf.Duration, com.google.protobuf.Duration.Builder, com.google.protobuf.DurationOrBuilder> cacheTimeBuilder_;
    /**
     * <pre>
     * If operating in pass through mode, the amount of time in milliseconds
     * that the filter should cache the upstream response.
     * </pre>
     *
     * <code>.google.protobuf.Duration cache_time = 3;</code>
     * @return Whether the cacheTime field is set.
     */
    public boolean hasCacheTime() {
      return ((bitField0_ & 0x00000002) != 0);
    }
    /**
     * <pre>
     * If operating in pass through mode, the amount of time in milliseconds
     * that the filter should cache the upstream response.
     * </pre>
     *
     * <code>.google.protobuf.Duration cache_time = 3;</code>
     * @return The cacheTime.
     */
    public com.google.protobuf.Duration getCacheTime() {
      if (cacheTimeBuilder_ == null) {
        return cacheTime_ == null ? com.google.protobuf.Duration.getDefaultInstance() : cacheTime_;
      } else {
        return cacheTimeBuilder_.getMessage();
      }
    }
    /**
     * <pre>
     * If operating in pass through mode, the amount of time in milliseconds
     * that the filter should cache the upstream response.
     * </pre>
     *
     * <code>.google.protobuf.Duration cache_time = 3;</code>
     */
    public Builder setCacheTime(com.google.protobuf.Duration value) {
      if (cacheTimeBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        cacheTime_ = value;
      } else {
        cacheTimeBuilder_.setMessage(value);
      }
      bitField0_ |= 0x00000002;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * If operating in pass through mode, the amount of time in milliseconds
     * that the filter should cache the upstream response.
     * </pre>
     *
     * <code>.google.protobuf.Duration cache_time = 3;</code>
     */
    public Builder setCacheTime(
        com.google.protobuf.Duration.Builder builderForValue) {
      if (cacheTimeBuilder_ == null) {
        cacheTime_ = builderForValue.build();
      } else {
        cacheTimeBuilder_.setMessage(builderForValue.build());
      }
      bitField0_ |= 0x00000002;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * If operating in pass through mode, the amount of time in milliseconds
     * that the filter should cache the upstream response.
     * </pre>
     *
     * <code>.google.protobuf.Duration cache_time = 3;</code>
     */
    public Builder mergeCacheTime(com.google.protobuf.Duration value) {
      if (cacheTimeBuilder_ == null) {
        if (((bitField0_ & 0x00000002) != 0) &&
          cacheTime_ != null &&
          cacheTime_ != com.google.protobuf.Duration.getDefaultInstance()) {
          getCacheTimeBuilder().mergeFrom(value);
        } else {
          cacheTime_ = value;
        }
      } else {
        cacheTimeBuilder_.mergeFrom(value);
      }
      bitField0_ |= 0x00000002;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * If operating in pass through mode, the amount of time in milliseconds
     * that the filter should cache the upstream response.
     * </pre>
     *
     * <code>.google.protobuf.Duration cache_time = 3;</code>
     */
    public Builder clearCacheTime() {
      bitField0_ = (bitField0_ & ~0x00000002);
      cacheTime_ = null;
      if (cacheTimeBuilder_ != null) {
        cacheTimeBuilder_.dispose();
        cacheTimeBuilder_ = null;
      }
      onChanged();
      return this;
    }
    /**
     * <pre>
     * If operating in pass through mode, the amount of time in milliseconds
     * that the filter should cache the upstream response.
     * </pre>
     *
     * <code>.google.protobuf.Duration cache_time = 3;</code>
     */
    public com.google.protobuf.Duration.Builder getCacheTimeBuilder() {
      bitField0_ |= 0x00000002;
      onChanged();
      return getCacheTimeFieldBuilder().getBuilder();
    }
    /**
     * <pre>
     * If operating in pass through mode, the amount of time in milliseconds
     * that the filter should cache the upstream response.
     * </pre>
     *
     * <code>.google.protobuf.Duration cache_time = 3;</code>
     */
    public com.google.protobuf.DurationOrBuilder getCacheTimeOrBuilder() {
      if (cacheTimeBuilder_ != null) {
        return cacheTimeBuilder_.getMessageOrBuilder();
      } else {
        return cacheTime_ == null ?
            com.google.protobuf.Duration.getDefaultInstance() : cacheTime_;
      }
    }
    /**
     * <pre>
     * If operating in pass through mode, the amount of time in milliseconds
     * that the filter should cache the upstream response.
     * </pre>
     *
     * <code>.google.protobuf.Duration cache_time = 3;</code>
     */
    private com.google.protobuf.SingleFieldBuilderV3<
        com.google.protobuf.Duration, com.google.protobuf.Duration.Builder, com.google.protobuf.DurationOrBuilder> 
        getCacheTimeFieldBuilder() {
      if (cacheTimeBuilder_ == null) {
        cacheTimeBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
            com.google.protobuf.Duration, com.google.protobuf.Duration.Builder, com.google.protobuf.DurationOrBuilder>(
                getCacheTime(),
                getParentForChildren(),
                isClean());
        cacheTime_ = null;
      }
      return cacheTimeBuilder_;
    }

    private com.google.protobuf.MapField<
        java.lang.String, io.envoyproxy.envoy.type.Percent> clusterMinHealthyPercentages_;
    private com.google.protobuf.MapField<java.lang.String, io.envoyproxy.envoy.type.Percent>
        internalGetClusterMinHealthyPercentages() {
      if (clusterMinHealthyPercentages_ == null) {
        return com.google.protobuf.MapField.emptyMapField(
            ClusterMinHealthyPercentagesDefaultEntryHolder.defaultEntry);
      }
      return clusterMinHealthyPercentages_;
    }
    private com.google.protobuf.MapField<java.lang.String, io.envoyproxy.envoy.type.Percent>
        internalGetMutableClusterMinHealthyPercentages() {
      if (clusterMinHealthyPercentages_ == null) {
        clusterMinHealthyPercentages_ = com.google.protobuf.MapField.newMapField(
            ClusterMinHealthyPercentagesDefaultEntryHolder.defaultEntry);
      }
      if (!clusterMinHealthyPercentages_.isMutable()) {
        clusterMinHealthyPercentages_ = clusterMinHealthyPercentages_.copy();
      }
      bitField0_ |= 0x00000004;
      onChanged();
      return clusterMinHealthyPercentages_;
    }
    public int getClusterMinHealthyPercentagesCount() {
      return internalGetClusterMinHealthyPercentages().getMap().size();
    }
    /**
     * <pre>
     * If operating in non-pass-through mode, specifies a set of upstream cluster
     * names and the minimum percentage of servers in each of those clusters that
     * must be healthy or degraded in order for the filter to return a 200.
     * .. note::
     *    This value is interpreted as an integer by truncating, so 12.50% will be calculated
     *    as if it were 12%.
     * </pre>
     *
     * <code>map&lt;string, .envoy.type.Percent&gt; cluster_min_healthy_percentages = 4;</code>
     */
    @java.lang.Override
    public boolean containsClusterMinHealthyPercentages(
        java.lang.String key) {
      if (key == null) { throw new NullPointerException("map key"); }
      return internalGetClusterMinHealthyPercentages().getMap().containsKey(key);
    }
    /**
     * Use {@link #getClusterMinHealthyPercentagesMap()} instead.
     */
    @java.lang.Override
    @java.lang.Deprecated
    public java.util.Map<java.lang.String, io.envoyproxy.envoy.type.Percent> getClusterMinHealthyPercentages() {
      return getClusterMinHealthyPercentagesMap();
    }
    /**
     * <pre>
     * If operating in non-pass-through mode, specifies a set of upstream cluster
     * names and the minimum percentage of servers in each of those clusters that
     * must be healthy or degraded in order for the filter to return a 200.
     * .. note::
     *    This value is interpreted as an integer by truncating, so 12.50% will be calculated
     *    as if it were 12%.
     * </pre>
     *
     * <code>map&lt;string, .envoy.type.Percent&gt; cluster_min_healthy_percentages = 4;</code>
     */
    @java.lang.Override
    public java.util.Map<java.lang.String, io.envoyproxy.envoy.type.Percent> getClusterMinHealthyPercentagesMap() {
      return internalGetClusterMinHealthyPercentages().getMap();
    }
    /**
     * <pre>
     * If operating in non-pass-through mode, specifies a set of upstream cluster
     * names and the minimum percentage of servers in each of those clusters that
     * must be healthy or degraded in order for the filter to return a 200.
     * .. note::
     *    This value is interpreted as an integer by truncating, so 12.50% will be calculated
     *    as if it were 12%.
     * </pre>
     *
     * <code>map&lt;string, .envoy.type.Percent&gt; cluster_min_healthy_percentages = 4;</code>
     */
    @java.lang.Override
    public /* nullable */
io.envoyproxy.envoy.type.Percent getClusterMinHealthyPercentagesOrDefault(
        java.lang.String key,
        /* nullable */
io.envoyproxy.envoy.type.Percent defaultValue) {
      if (key == null) { throw new NullPointerException("map key"); }
      java.util.Map<java.lang.String, io.envoyproxy.envoy.type.Percent> map =
          internalGetClusterMinHealthyPercentages().getMap();
      return map.containsKey(key) ? map.get(key) : defaultValue;
    }
    /**
     * <pre>
     * If operating in non-pass-through mode, specifies a set of upstream cluster
     * names and the minimum percentage of servers in each of those clusters that
     * must be healthy or degraded in order for the filter to return a 200.
     * .. note::
     *    This value is interpreted as an integer by truncating, so 12.50% will be calculated
     *    as if it were 12%.
     * </pre>
     *
     * <code>map&lt;string, .envoy.type.Percent&gt; cluster_min_healthy_percentages = 4;</code>
     */
    @java.lang.Override
    public io.envoyproxy.envoy.type.Percent getClusterMinHealthyPercentagesOrThrow(
        java.lang.String key) {
      if (key == null) { throw new NullPointerException("map key"); }
      java.util.Map<java.lang.String, io.envoyproxy.envoy.type.Percent> map =
          internalGetClusterMinHealthyPercentages().getMap();
      if (!map.containsKey(key)) {
        throw new java.lang.IllegalArgumentException();
      }
      return map.get(key);
    }
    public Builder clearClusterMinHealthyPercentages() {
      bitField0_ = (bitField0_ & ~0x00000004);
      internalGetMutableClusterMinHealthyPercentages().getMutableMap()
          .clear();
      return this;
    }
    /**
     * <pre>
     * If operating in non-pass-through mode, specifies a set of upstream cluster
     * names and the minimum percentage of servers in each of those clusters that
     * must be healthy or degraded in order for the filter to return a 200.
     * .. note::
     *    This value is interpreted as an integer by truncating, so 12.50% will be calculated
     *    as if it were 12%.
     * </pre>
     *
     * <code>map&lt;string, .envoy.type.Percent&gt; cluster_min_healthy_percentages = 4;</code>
     */
    public Builder removeClusterMinHealthyPercentages(
        java.lang.String key) {
      if (key == null) { throw new NullPointerException("map key"); }
      internalGetMutableClusterMinHealthyPercentages().getMutableMap()
          .remove(key);
      return this;
    }
    /**
     * Use alternate mutation accessors instead.
     */
    @java.lang.Deprecated
    public java.util.Map<java.lang.String, io.envoyproxy.envoy.type.Percent>
        getMutableClusterMinHealthyPercentages() {
      bitField0_ |= 0x00000004;
      return internalGetMutableClusterMinHealthyPercentages().getMutableMap();
    }
    /**
     * <pre>
     * If operating in non-pass-through mode, specifies a set of upstream cluster
     * names and the minimum percentage of servers in each of those clusters that
     * must be healthy or degraded in order for the filter to return a 200.
     * .. note::
     *    This value is interpreted as an integer by truncating, so 12.50% will be calculated
     *    as if it were 12%.
     * </pre>
     *
     * <code>map&lt;string, .envoy.type.Percent&gt; cluster_min_healthy_percentages = 4;</code>
     */
    public Builder putClusterMinHealthyPercentages(
        java.lang.String key,
        io.envoyproxy.envoy.type.Percent value) {
      if (key == null) { throw new NullPointerException("map key"); }
      if (value == null) { throw new NullPointerException("map value"); }
      internalGetMutableClusterMinHealthyPercentages().getMutableMap()
          .put(key, value);
      bitField0_ |= 0x00000004;
      return this;
    }
    /**
     * <pre>
     * If operating in non-pass-through mode, specifies a set of upstream cluster
     * names and the minimum percentage of servers in each of those clusters that
     * must be healthy or degraded in order for the filter to return a 200.
     * .. note::
     *    This value is interpreted as an integer by truncating, so 12.50% will be calculated
     *    as if it were 12%.
     * </pre>
     *
     * <code>map&lt;string, .envoy.type.Percent&gt; cluster_min_healthy_percentages = 4;</code>
     */
    public Builder putAllClusterMinHealthyPercentages(
        java.util.Map<java.lang.String, io.envoyproxy.envoy.type.Percent> values) {
      internalGetMutableClusterMinHealthyPercentages().getMutableMap()
          .putAll(values);
      bitField0_ |= 0x00000004;
      return this;
    }

    private java.util.List<io.envoyproxy.envoy.api.v2.route.HeaderMatcher> headers_ =
      java.util.Collections.emptyList();
    private void ensureHeadersIsMutable() {
      if (!((bitField0_ & 0x00000008) != 0)) {
        headers_ = new java.util.ArrayList<io.envoyproxy.envoy.api.v2.route.HeaderMatcher>(headers_);
        bitField0_ |= 0x00000008;
       }
    }

    private com.google.protobuf.RepeatedFieldBuilderV3<
        io.envoyproxy.envoy.api.v2.route.HeaderMatcher, io.envoyproxy.envoy.api.v2.route.HeaderMatcher.Builder, io.envoyproxy.envoy.api.v2.route.HeaderMatcherOrBuilder> headersBuilder_;

    /**
     * <pre>
     * Specifies a set of health check request headers to match on. The health check filter will
     * check a request’s headers against all the specified headers. To specify the health check
     * endpoint, set the ``:path`` header to match on.
     * </pre>
     *
     * <code>repeated .envoy.api.v2.route.HeaderMatcher headers = 5;</code>
     */
    public java.util.List<io.envoyproxy.envoy.api.v2.route.HeaderMatcher> getHeadersList() {
      if (headersBuilder_ == null) {
        return java.util.Collections.unmodifiableList(headers_);
      } else {
        return headersBuilder_.getMessageList();
      }
    }
    /**
     * <pre>
     * Specifies a set of health check request headers to match on. The health check filter will
     * check a request’s headers against all the specified headers. To specify the health check
     * endpoint, set the ``:path`` header to match on.
     * </pre>
     *
     * <code>repeated .envoy.api.v2.route.HeaderMatcher headers = 5;</code>
     */
    public int getHeadersCount() {
      if (headersBuilder_ == null) {
        return headers_.size();
      } else {
        return headersBuilder_.getCount();
      }
    }
    /**
     * <pre>
     * Specifies a set of health check request headers to match on. The health check filter will
     * check a request’s headers against all the specified headers. To specify the health check
     * endpoint, set the ``:path`` header to match on.
     * </pre>
     *
     * <code>repeated .envoy.api.v2.route.HeaderMatcher headers = 5;</code>
     */
    public io.envoyproxy.envoy.api.v2.route.HeaderMatcher getHeaders(int index) {
      if (headersBuilder_ == null) {
        return headers_.get(index);
      } else {
        return headersBuilder_.getMessage(index);
      }
    }
    /**
     * <pre>
     * Specifies a set of health check request headers to match on. The health check filter will
     * check a request’s headers against all the specified headers. To specify the health check
     * endpoint, set the ``:path`` header to match on.
     * </pre>
     *
     * <code>repeated .envoy.api.v2.route.HeaderMatcher headers = 5;</code>
     */
    public Builder setHeaders(
        int index, io.envoyproxy.envoy.api.v2.route.HeaderMatcher value) {
      if (headersBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureHeadersIsMutable();
        headers_.set(index, value);
        onChanged();
      } else {
        headersBuilder_.setMessage(index, value);
      }
      return this;
    }
    /**
     * <pre>
     * Specifies a set of health check request headers to match on. The health check filter will
     * check a request’s headers against all the specified headers. To specify the health check
     * endpoint, set the ``:path`` header to match on.
     * </pre>
     *
     * <code>repeated .envoy.api.v2.route.HeaderMatcher headers = 5;</code>
     */
    public Builder setHeaders(
        int index, io.envoyproxy.envoy.api.v2.route.HeaderMatcher.Builder builderForValue) {
      if (headersBuilder_ == null) {
        ensureHeadersIsMutable();
        headers_.set(index, builderForValue.build());
        onChanged();
      } else {
        headersBuilder_.setMessage(index, builderForValue.build());
      }
      return this;
    }
    /**
     * <pre>
     * Specifies a set of health check request headers to match on. The health check filter will
     * check a request’s headers against all the specified headers. To specify the health check
     * endpoint, set the ``:path`` header to match on.
     * </pre>
     *
     * <code>repeated .envoy.api.v2.route.HeaderMatcher headers = 5;</code>
     */
    public Builder addHeaders(io.envoyproxy.envoy.api.v2.route.HeaderMatcher value) {
      if (headersBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureHeadersIsMutable();
        headers_.add(value);
        onChanged();
      } else {
        headersBuilder_.addMessage(value);
      }
      return this;
    }
    /**
     * <pre>
     * Specifies a set of health check request headers to match on. The health check filter will
     * check a request’s headers against all the specified headers. To specify the health check
     * endpoint, set the ``:path`` header to match on.
     * </pre>
     *
     * <code>repeated .envoy.api.v2.route.HeaderMatcher headers = 5;</code>
     */
    public Builder addHeaders(
        int index, io.envoyproxy.envoy.api.v2.route.HeaderMatcher value) {
      if (headersBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureHeadersIsMutable();
        headers_.add(index, value);
        onChanged();
      } else {
        headersBuilder_.addMessage(index, value);
      }
      return this;
    }
    /**
     * <pre>
     * Specifies a set of health check request headers to match on. The health check filter will
     * check a request’s headers against all the specified headers. To specify the health check
     * endpoint, set the ``:path`` header to match on.
     * </pre>
     *
     * <code>repeated .envoy.api.v2.route.HeaderMatcher headers = 5;</code>
     */
    public Builder addHeaders(
        io.envoyproxy.envoy.api.v2.route.HeaderMatcher.Builder builderForValue) {
      if (headersBuilder_ == null) {
        ensureHeadersIsMutable();
        headers_.add(builderForValue.build());
        onChanged();
      } else {
        headersBuilder_.addMessage(builderForValue.build());
      }
      return this;
    }
    /**
     * <pre>
     * Specifies a set of health check request headers to match on. The health check filter will
     * check a request’s headers against all the specified headers. To specify the health check
     * endpoint, set the ``:path`` header to match on.
     * </pre>
     *
     * <code>repeated .envoy.api.v2.route.HeaderMatcher headers = 5;</code>
     */
    public Builder addHeaders(
        int index, io.envoyproxy.envoy.api.v2.route.HeaderMatcher.Builder builderForValue) {
      if (headersBuilder_ == null) {
        ensureHeadersIsMutable();
        headers_.add(index, builderForValue.build());
        onChanged();
      } else {
        headersBuilder_.addMessage(index, builderForValue.build());
      }
      return this;
    }
    /**
     * <pre>
     * Specifies a set of health check request headers to match on. The health check filter will
     * check a request’s headers against all the specified headers. To specify the health check
     * endpoint, set the ``:path`` header to match on.
     * </pre>
     *
     * <code>repeated .envoy.api.v2.route.HeaderMatcher headers = 5;</code>
     */
    public Builder addAllHeaders(
        java.lang.Iterable<? extends io.envoyproxy.envoy.api.v2.route.HeaderMatcher> values) {
      if (headersBuilder_ == null) {
        ensureHeadersIsMutable();
        com.google.protobuf.AbstractMessageLite.Builder.addAll(
            values, headers_);
        onChanged();
      } else {
        headersBuilder_.addAllMessages(values);
      }
      return this;
    }
    /**
     * <pre>
     * Specifies a set of health check request headers to match on. The health check filter will
     * check a request’s headers against all the specified headers. To specify the health check
     * endpoint, set the ``:path`` header to match on.
     * </pre>
     *
     * <code>repeated .envoy.api.v2.route.HeaderMatcher headers = 5;</code>
     */
    public Builder clearHeaders() {
      if (headersBuilder_ == null) {
        headers_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000008);
        onChanged();
      } else {
        headersBuilder_.clear();
      }
      return this;
    }
    /**
     * <pre>
     * Specifies a set of health check request headers to match on. The health check filter will
     * check a request’s headers against all the specified headers. To specify the health check
     * endpoint, set the ``:path`` header to match on.
     * </pre>
     *
     * <code>repeated .envoy.api.v2.route.HeaderMatcher headers = 5;</code>
     */
    public Builder removeHeaders(int index) {
      if (headersBuilder_ == null) {
        ensureHeadersIsMutable();
        headers_.remove(index);
        onChanged();
      } else {
        headersBuilder_.remove(index);
      }
      return this;
    }
    /**
     * <pre>
     * Specifies a set of health check request headers to match on. The health check filter will
     * check a request’s headers against all the specified headers. To specify the health check
     * endpoint, set the ``:path`` header to match on.
     * </pre>
     *
     * <code>repeated .envoy.api.v2.route.HeaderMatcher headers = 5;</code>
     */
    public io.envoyproxy.envoy.api.v2.route.HeaderMatcher.Builder getHeadersBuilder(
        int index) {
      return getHeadersFieldBuilder().getBuilder(index);
    }
    /**
     * <pre>
     * Specifies a set of health check request headers to match on. The health check filter will
     * check a request’s headers against all the specified headers. To specify the health check
     * endpoint, set the ``:path`` header to match on.
     * </pre>
     *
     * <code>repeated .envoy.api.v2.route.HeaderMatcher headers = 5;</code>
     */
    public io.envoyproxy.envoy.api.v2.route.HeaderMatcherOrBuilder getHeadersOrBuilder(
        int index) {
      if (headersBuilder_ == null) {
        return headers_.get(index);  } else {
        return headersBuilder_.getMessageOrBuilder(index);
      }
    }
    /**
     * <pre>
     * Specifies a set of health check request headers to match on. The health check filter will
     * check a request’s headers against all the specified headers. To specify the health check
     * endpoint, set the ``:path`` header to match on.
     * </pre>
     *
     * <code>repeated .envoy.api.v2.route.HeaderMatcher headers = 5;</code>
     */
    public java.util.List<? extends io.envoyproxy.envoy.api.v2.route.HeaderMatcherOrBuilder> 
         getHeadersOrBuilderList() {
      if (headersBuilder_ != null) {
        return headersBuilder_.getMessageOrBuilderList();
      } else {
        return java.util.Collections.unmodifiableList(headers_);
      }
    }
    /**
     * <pre>
     * Specifies a set of health check request headers to match on. The health check filter will
     * check a request’s headers against all the specified headers. To specify the health check
     * endpoint, set the ``:path`` header to match on.
     * </pre>
     *
     * <code>repeated .envoy.api.v2.route.HeaderMatcher headers = 5;</code>
     */
    public io.envoyproxy.envoy.api.v2.route.HeaderMatcher.Builder addHeadersBuilder() {
      return getHeadersFieldBuilder().addBuilder(
          io.envoyproxy.envoy.api.v2.route.HeaderMatcher.getDefaultInstance());
    }
    /**
     * <pre>
     * Specifies a set of health check request headers to match on. The health check filter will
     * check a request’s headers against all the specified headers. To specify the health check
     * endpoint, set the ``:path`` header to match on.
     * </pre>
     *
     * <code>repeated .envoy.api.v2.route.HeaderMatcher headers = 5;</code>
     */
    public io.envoyproxy.envoy.api.v2.route.HeaderMatcher.Builder addHeadersBuilder(
        int index) {
      return getHeadersFieldBuilder().addBuilder(
          index, io.envoyproxy.envoy.api.v2.route.HeaderMatcher.getDefaultInstance());
    }
    /**
     * <pre>
     * Specifies a set of health check request headers to match on. The health check filter will
     * check a request’s headers against all the specified headers. To specify the health check
     * endpoint, set the ``:path`` header to match on.
     * </pre>
     *
     * <code>repeated .envoy.api.v2.route.HeaderMatcher headers = 5;</code>
     */
    public java.util.List<io.envoyproxy.envoy.api.v2.route.HeaderMatcher.Builder> 
         getHeadersBuilderList() {
      return getHeadersFieldBuilder().getBuilderList();
    }
    private com.google.protobuf.RepeatedFieldBuilderV3<
        io.envoyproxy.envoy.api.v2.route.HeaderMatcher, io.envoyproxy.envoy.api.v2.route.HeaderMatcher.Builder, io.envoyproxy.envoy.api.v2.route.HeaderMatcherOrBuilder> 
        getHeadersFieldBuilder() {
      if (headersBuilder_ == null) {
        headersBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<
            io.envoyproxy.envoy.api.v2.route.HeaderMatcher, io.envoyproxy.envoy.api.v2.route.HeaderMatcher.Builder, io.envoyproxy.envoy.api.v2.route.HeaderMatcherOrBuilder>(
                headers_,
                ((bitField0_ & 0x00000008) != 0),
                getParentForChildren(),
                isClean());
        headers_ = null;
      }
      return headersBuilder_;
    }
    @java.lang.Override
    public final Builder setUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return super.setUnknownFields(unknownFields);
    }

    @java.lang.Override
    public final Builder mergeUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return super.mergeUnknownFields(unknownFields);
    }


    // @@protoc_insertion_point(builder_scope:envoy.config.filter.http.health_check.v2.HealthCheck)
  }

  // @@protoc_insertion_point(class_scope:envoy.config.filter.http.health_check.v2.HealthCheck)
  private static final io.envoyproxy.envoy.config.filter.http.health_check.v2.HealthCheck DEFAULT_INSTANCE;
  static {
    DEFAULT_INSTANCE = new io.envoyproxy.envoy.config.filter.http.health_check.v2.HealthCheck();
  }

  public static io.envoyproxy.envoy.config.filter.http.health_check.v2.HealthCheck getDefaultInstance() {
    return DEFAULT_INSTANCE;
  }

  private static final com.google.protobuf.Parser<HealthCheck>
      PARSER = new com.google.protobuf.AbstractParser<HealthCheck>() {
    @java.lang.Override
    public HealthCheck parsePartialFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      Builder builder = newBuilder();
      try {
        builder.mergeFrom(input, extensionRegistry);
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(builder.buildPartial());
      } catch (com.google.protobuf.UninitializedMessageException e) {
        throw e.asInvalidProtocolBufferException().setUnfinishedMessage(builder.buildPartial());
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(e)
            .setUnfinishedMessage(builder.buildPartial());
      }
      return builder.buildPartial();
    }
  };

  public static com.google.protobuf.Parser<HealthCheck> parser() {
    return PARSER;
  }

  @java.lang.Override
  public com.google.protobuf.Parser<HealthCheck> getParserForType() {
    return PARSER;
  }

  @java.lang.Override
  public io.envoyproxy.envoy.config.filter.http.health_check.v2.HealthCheck getDefaultInstanceForType() {
    return DEFAULT_INSTANCE;
  }

}

