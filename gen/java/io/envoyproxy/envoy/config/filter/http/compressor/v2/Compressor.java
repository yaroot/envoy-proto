// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: envoy/config/filter/http/compressor/v2/compressor.proto

package io.envoyproxy.envoy.config.filter.http.compressor.v2;

/**
 * <pre>
 * [#next-free-field: 6]
 * </pre>
 *
 * Protobuf type {@code envoy.config.filter.http.compressor.v2.Compressor}
 */
public final class Compressor extends
    com.google.protobuf.GeneratedMessageV3 implements
    // @@protoc_insertion_point(message_implements:envoy.config.filter.http.compressor.v2.Compressor)
    CompressorOrBuilder {
private static final long serialVersionUID = 0L;
  // Use Compressor.newBuilder() to construct.
  private Compressor(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
    super(builder);
  }
  private Compressor() {
    contentType_ = com.google.protobuf.LazyStringArrayList.EMPTY;
  }

  @java.lang.Override
  @SuppressWarnings({"unused"})
  protected java.lang.Object newInstance(
      UnusedPrivateParameter unused) {
    return new Compressor();
  }

  @java.lang.Override
  public final com.google.protobuf.UnknownFieldSet
  getUnknownFields() {
    return this.unknownFields;
  }
  public static final com.google.protobuf.Descriptors.Descriptor
      getDescriptor() {
    return io.envoyproxy.envoy.config.filter.http.compressor.v2.CompressorProto.internal_static_envoy_config_filter_http_compressor_v2_Compressor_descriptor;
  }

  @java.lang.Override
  protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internalGetFieldAccessorTable() {
    return io.envoyproxy.envoy.config.filter.http.compressor.v2.CompressorProto.internal_static_envoy_config_filter_http_compressor_v2_Compressor_fieldAccessorTable
        .ensureFieldAccessorsInitialized(
            io.envoyproxy.envoy.config.filter.http.compressor.v2.Compressor.class, io.envoyproxy.envoy.config.filter.http.compressor.v2.Compressor.Builder.class);
  }

  public static final int CONTENT_LENGTH_FIELD_NUMBER = 1;
  private com.google.protobuf.UInt32Value contentLength_;
  /**
   * <pre>
   * Minimum response length, in bytes, which will trigger compression. The default value is 30.
   * </pre>
   *
   * <code>.google.protobuf.UInt32Value content_length = 1;</code>
   * @return Whether the contentLength field is set.
   */
  @java.lang.Override
  public boolean hasContentLength() {
    return contentLength_ != null;
  }
  /**
   * <pre>
   * Minimum response length, in bytes, which will trigger compression. The default value is 30.
   * </pre>
   *
   * <code>.google.protobuf.UInt32Value content_length = 1;</code>
   * @return The contentLength.
   */
  @java.lang.Override
  public com.google.protobuf.UInt32Value getContentLength() {
    return contentLength_ == null ? com.google.protobuf.UInt32Value.getDefaultInstance() : contentLength_;
  }
  /**
   * <pre>
   * Minimum response length, in bytes, which will trigger compression. The default value is 30.
   * </pre>
   *
   * <code>.google.protobuf.UInt32Value content_length = 1;</code>
   */
  @java.lang.Override
  public com.google.protobuf.UInt32ValueOrBuilder getContentLengthOrBuilder() {
    return contentLength_ == null ? com.google.protobuf.UInt32Value.getDefaultInstance() : contentLength_;
  }

  public static final int CONTENT_TYPE_FIELD_NUMBER = 2;
  @SuppressWarnings("serial")
  private com.google.protobuf.LazyStringList contentType_;
  /**
   * <pre>
   * Set of strings that allows specifying which mime-types yield compression; e.g.,
   * application/json, text/html, etc. When this field is not defined, compression will be applied
   * to the following mime-types: "application/javascript", "application/json",
   * "application/xhtml+xml", "image/svg+xml", "text/css", "text/html", "text/plain", "text/xml"
   * and their synonyms.
   * </pre>
   *
   * <code>repeated string content_type = 2;</code>
   * @return A list containing the contentType.
   */
  public com.google.protobuf.ProtocolStringList
      getContentTypeList() {
    return contentType_;
  }
  /**
   * <pre>
   * Set of strings that allows specifying which mime-types yield compression; e.g.,
   * application/json, text/html, etc. When this field is not defined, compression will be applied
   * to the following mime-types: "application/javascript", "application/json",
   * "application/xhtml+xml", "image/svg+xml", "text/css", "text/html", "text/plain", "text/xml"
   * and their synonyms.
   * </pre>
   *
   * <code>repeated string content_type = 2;</code>
   * @return The count of contentType.
   */
  public int getContentTypeCount() {
    return contentType_.size();
  }
  /**
   * <pre>
   * Set of strings that allows specifying which mime-types yield compression; e.g.,
   * application/json, text/html, etc. When this field is not defined, compression will be applied
   * to the following mime-types: "application/javascript", "application/json",
   * "application/xhtml+xml", "image/svg+xml", "text/css", "text/html", "text/plain", "text/xml"
   * and their synonyms.
   * </pre>
   *
   * <code>repeated string content_type = 2;</code>
   * @param index The index of the element to return.
   * @return The contentType at the given index.
   */
  public java.lang.String getContentType(int index) {
    return contentType_.get(index);
  }
  /**
   * <pre>
   * Set of strings that allows specifying which mime-types yield compression; e.g.,
   * application/json, text/html, etc. When this field is not defined, compression will be applied
   * to the following mime-types: "application/javascript", "application/json",
   * "application/xhtml+xml", "image/svg+xml", "text/css", "text/html", "text/plain", "text/xml"
   * and their synonyms.
   * </pre>
   *
   * <code>repeated string content_type = 2;</code>
   * @param index The index of the value to return.
   * @return The bytes of the contentType at the given index.
   */
  public com.google.protobuf.ByteString
      getContentTypeBytes(int index) {
    return contentType_.getByteString(index);
  }

  public static final int DISABLE_ON_ETAG_HEADER_FIELD_NUMBER = 3;
  private boolean disableOnEtagHeader_ = false;
  /**
   * <pre>
   * If true, disables compression when the response contains an etag header. When it is false, the
   * filter will preserve weak etags and remove the ones that require strong validation.
   * </pre>
   *
   * <code>bool disable_on_etag_header = 3;</code>
   * @return The disableOnEtagHeader.
   */
  @java.lang.Override
  public boolean getDisableOnEtagHeader() {
    return disableOnEtagHeader_;
  }

  public static final int REMOVE_ACCEPT_ENCODING_HEADER_FIELD_NUMBER = 4;
  private boolean removeAcceptEncodingHeader_ = false;
  /**
   * <pre>
   * If true, removes accept-encoding from the request headers before dispatching it to the upstream
   * so that responses do not get compressed before reaching the filter.
   * .. attention:
   *    To avoid interfering with other compression filters in the same chain use this option in
   *    the filter closest to the upstream.
   * </pre>
   *
   * <code>bool remove_accept_encoding_header = 4;</code>
   * @return The removeAcceptEncodingHeader.
   */
  @java.lang.Override
  public boolean getRemoveAcceptEncodingHeader() {
    return removeAcceptEncodingHeader_;
  }

  public static final int RUNTIME_ENABLED_FIELD_NUMBER = 5;
  private io.envoyproxy.envoy.api.v2.core.RuntimeFeatureFlag runtimeEnabled_;
  /**
   * <pre>
   * Runtime flag that controls whether the filter is enabled or not. If set to false, the
   * filter will operate as a pass-through filter. If not specified, defaults to enabled.
   * </pre>
   *
   * <code>.envoy.api.v2.core.RuntimeFeatureFlag runtime_enabled = 5;</code>
   * @return Whether the runtimeEnabled field is set.
   */
  @java.lang.Override
  public boolean hasRuntimeEnabled() {
    return runtimeEnabled_ != null;
  }
  /**
   * <pre>
   * Runtime flag that controls whether the filter is enabled or not. If set to false, the
   * filter will operate as a pass-through filter. If not specified, defaults to enabled.
   * </pre>
   *
   * <code>.envoy.api.v2.core.RuntimeFeatureFlag runtime_enabled = 5;</code>
   * @return The runtimeEnabled.
   */
  @java.lang.Override
  public io.envoyproxy.envoy.api.v2.core.RuntimeFeatureFlag getRuntimeEnabled() {
    return runtimeEnabled_ == null ? io.envoyproxy.envoy.api.v2.core.RuntimeFeatureFlag.getDefaultInstance() : runtimeEnabled_;
  }
  /**
   * <pre>
   * Runtime flag that controls whether the filter is enabled or not. If set to false, the
   * filter will operate as a pass-through filter. If not specified, defaults to enabled.
   * </pre>
   *
   * <code>.envoy.api.v2.core.RuntimeFeatureFlag runtime_enabled = 5;</code>
   */
  @java.lang.Override
  public io.envoyproxy.envoy.api.v2.core.RuntimeFeatureFlagOrBuilder getRuntimeEnabledOrBuilder() {
    return runtimeEnabled_ == null ? io.envoyproxy.envoy.api.v2.core.RuntimeFeatureFlag.getDefaultInstance() : runtimeEnabled_;
  }

  private byte memoizedIsInitialized = -1;
  @java.lang.Override
  public final boolean isInitialized() {
    byte isInitialized = memoizedIsInitialized;
    if (isInitialized == 1) return true;
    if (isInitialized == 0) return false;

    memoizedIsInitialized = 1;
    return true;
  }

  @java.lang.Override
  public void writeTo(com.google.protobuf.CodedOutputStream output)
                      throws java.io.IOException {
    if (contentLength_ != null) {
      output.writeMessage(1, getContentLength());
    }
    for (int i = 0; i < contentType_.size(); i++) {
      com.google.protobuf.GeneratedMessageV3.writeString(output, 2, contentType_.getRaw(i));
    }
    if (disableOnEtagHeader_ != false) {
      output.writeBool(3, disableOnEtagHeader_);
    }
    if (removeAcceptEncodingHeader_ != false) {
      output.writeBool(4, removeAcceptEncodingHeader_);
    }
    if (runtimeEnabled_ != null) {
      output.writeMessage(5, getRuntimeEnabled());
    }
    getUnknownFields().writeTo(output);
  }

  @java.lang.Override
  public int getSerializedSize() {
    int size = memoizedSize;
    if (size != -1) return size;

    size = 0;
    if (contentLength_ != null) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(1, getContentLength());
    }
    {
      int dataSize = 0;
      for (int i = 0; i < contentType_.size(); i++) {
        dataSize += computeStringSizeNoTag(contentType_.getRaw(i));
      }
      size += dataSize;
      size += 1 * getContentTypeList().size();
    }
    if (disableOnEtagHeader_ != false) {
      size += com.google.protobuf.CodedOutputStream
        .computeBoolSize(3, disableOnEtagHeader_);
    }
    if (removeAcceptEncodingHeader_ != false) {
      size += com.google.protobuf.CodedOutputStream
        .computeBoolSize(4, removeAcceptEncodingHeader_);
    }
    if (runtimeEnabled_ != null) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(5, getRuntimeEnabled());
    }
    size += getUnknownFields().getSerializedSize();
    memoizedSize = size;
    return size;
  }

  @java.lang.Override
  public boolean equals(final java.lang.Object obj) {
    if (obj == this) {
     return true;
    }
    if (!(obj instanceof io.envoyproxy.envoy.config.filter.http.compressor.v2.Compressor)) {
      return super.equals(obj);
    }
    io.envoyproxy.envoy.config.filter.http.compressor.v2.Compressor other = (io.envoyproxy.envoy.config.filter.http.compressor.v2.Compressor) obj;

    if (hasContentLength() != other.hasContentLength()) return false;
    if (hasContentLength()) {
      if (!getContentLength()
          .equals(other.getContentLength())) return false;
    }
    if (!getContentTypeList()
        .equals(other.getContentTypeList())) return false;
    if (getDisableOnEtagHeader()
        != other.getDisableOnEtagHeader()) return false;
    if (getRemoveAcceptEncodingHeader()
        != other.getRemoveAcceptEncodingHeader()) return false;
    if (hasRuntimeEnabled() != other.hasRuntimeEnabled()) return false;
    if (hasRuntimeEnabled()) {
      if (!getRuntimeEnabled()
          .equals(other.getRuntimeEnabled())) return false;
    }
    if (!getUnknownFields().equals(other.getUnknownFields())) return false;
    return true;
  }

  @java.lang.Override
  public int hashCode() {
    if (memoizedHashCode != 0) {
      return memoizedHashCode;
    }
    int hash = 41;
    hash = (19 * hash) + getDescriptor().hashCode();
    if (hasContentLength()) {
      hash = (37 * hash) + CONTENT_LENGTH_FIELD_NUMBER;
      hash = (53 * hash) + getContentLength().hashCode();
    }
    if (getContentTypeCount() > 0) {
      hash = (37 * hash) + CONTENT_TYPE_FIELD_NUMBER;
      hash = (53 * hash) + getContentTypeList().hashCode();
    }
    hash = (37 * hash) + DISABLE_ON_ETAG_HEADER_FIELD_NUMBER;
    hash = (53 * hash) + com.google.protobuf.Internal.hashBoolean(
        getDisableOnEtagHeader());
    hash = (37 * hash) + REMOVE_ACCEPT_ENCODING_HEADER_FIELD_NUMBER;
    hash = (53 * hash) + com.google.protobuf.Internal.hashBoolean(
        getRemoveAcceptEncodingHeader());
    if (hasRuntimeEnabled()) {
      hash = (37 * hash) + RUNTIME_ENABLED_FIELD_NUMBER;
      hash = (53 * hash) + getRuntimeEnabled().hashCode();
    }
    hash = (29 * hash) + getUnknownFields().hashCode();
    memoizedHashCode = hash;
    return hash;
  }

  public static io.envoyproxy.envoy.config.filter.http.compressor.v2.Compressor parseFrom(
      java.nio.ByteBuffer data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static io.envoyproxy.envoy.config.filter.http.compressor.v2.Compressor parseFrom(
      java.nio.ByteBuffer data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static io.envoyproxy.envoy.config.filter.http.compressor.v2.Compressor parseFrom(
      com.google.protobuf.ByteString data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static io.envoyproxy.envoy.config.filter.http.compressor.v2.Compressor parseFrom(
      com.google.protobuf.ByteString data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static io.envoyproxy.envoy.config.filter.http.compressor.v2.Compressor parseFrom(byte[] data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static io.envoyproxy.envoy.config.filter.http.compressor.v2.Compressor parseFrom(
      byte[] data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static io.envoyproxy.envoy.config.filter.http.compressor.v2.Compressor parseFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input);
  }
  public static io.envoyproxy.envoy.config.filter.http.compressor.v2.Compressor parseFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input, extensionRegistry);
  }
  public static io.envoyproxy.envoy.config.filter.http.compressor.v2.Compressor parseDelimitedFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseDelimitedWithIOException(PARSER, input);
  }
  public static io.envoyproxy.envoy.config.filter.http.compressor.v2.Compressor parseDelimitedFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
  }
  public static io.envoyproxy.envoy.config.filter.http.compressor.v2.Compressor parseFrom(
      com.google.protobuf.CodedInputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input);
  }
  public static io.envoyproxy.envoy.config.filter.http.compressor.v2.Compressor parseFrom(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input, extensionRegistry);
  }

  @java.lang.Override
  public Builder newBuilderForType() { return newBuilder(); }
  public static Builder newBuilder() {
    return DEFAULT_INSTANCE.toBuilder();
  }
  public static Builder newBuilder(io.envoyproxy.envoy.config.filter.http.compressor.v2.Compressor prototype) {
    return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
  }
  @java.lang.Override
  public Builder toBuilder() {
    return this == DEFAULT_INSTANCE
        ? new Builder() : new Builder().mergeFrom(this);
  }

  @java.lang.Override
  protected Builder newBuilderForType(
      com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
    Builder builder = new Builder(parent);
    return builder;
  }
  /**
   * <pre>
   * [#next-free-field: 6]
   * </pre>
   *
   * Protobuf type {@code envoy.config.filter.http.compressor.v2.Compressor}
   */
  public static final class Builder extends
      com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
      // @@protoc_insertion_point(builder_implements:envoy.config.filter.http.compressor.v2.Compressor)
      io.envoyproxy.envoy.config.filter.http.compressor.v2.CompressorOrBuilder {
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return io.envoyproxy.envoy.config.filter.http.compressor.v2.CompressorProto.internal_static_envoy_config_filter_http_compressor_v2_Compressor_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return io.envoyproxy.envoy.config.filter.http.compressor.v2.CompressorProto.internal_static_envoy_config_filter_http_compressor_v2_Compressor_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              io.envoyproxy.envoy.config.filter.http.compressor.v2.Compressor.class, io.envoyproxy.envoy.config.filter.http.compressor.v2.Compressor.Builder.class);
    }

    // Construct using io.envoyproxy.envoy.config.filter.http.compressor.v2.Compressor.newBuilder()
    private Builder() {

    }

    private Builder(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      super(parent);

    }
    @java.lang.Override
    public Builder clear() {
      super.clear();
      bitField0_ = 0;
      contentLength_ = null;
      if (contentLengthBuilder_ != null) {
        contentLengthBuilder_.dispose();
        contentLengthBuilder_ = null;
      }
      contentType_ = com.google.protobuf.LazyStringArrayList.EMPTY;
      bitField0_ = (bitField0_ & ~0x00000002);
      disableOnEtagHeader_ = false;
      removeAcceptEncodingHeader_ = false;
      runtimeEnabled_ = null;
      if (runtimeEnabledBuilder_ != null) {
        runtimeEnabledBuilder_.dispose();
        runtimeEnabledBuilder_ = null;
      }
      return this;
    }

    @java.lang.Override
    public com.google.protobuf.Descriptors.Descriptor
        getDescriptorForType() {
      return io.envoyproxy.envoy.config.filter.http.compressor.v2.CompressorProto.internal_static_envoy_config_filter_http_compressor_v2_Compressor_descriptor;
    }

    @java.lang.Override
    public io.envoyproxy.envoy.config.filter.http.compressor.v2.Compressor getDefaultInstanceForType() {
      return io.envoyproxy.envoy.config.filter.http.compressor.v2.Compressor.getDefaultInstance();
    }

    @java.lang.Override
    public io.envoyproxy.envoy.config.filter.http.compressor.v2.Compressor build() {
      io.envoyproxy.envoy.config.filter.http.compressor.v2.Compressor result = buildPartial();
      if (!result.isInitialized()) {
        throw newUninitializedMessageException(result);
      }
      return result;
    }

    @java.lang.Override
    public io.envoyproxy.envoy.config.filter.http.compressor.v2.Compressor buildPartial() {
      io.envoyproxy.envoy.config.filter.http.compressor.v2.Compressor result = new io.envoyproxy.envoy.config.filter.http.compressor.v2.Compressor(this);
      buildPartialRepeatedFields(result);
      if (bitField0_ != 0) { buildPartial0(result); }
      onBuilt();
      return result;
    }

    private void buildPartialRepeatedFields(io.envoyproxy.envoy.config.filter.http.compressor.v2.Compressor result) {
      if (((bitField0_ & 0x00000002) != 0)) {
        contentType_ = contentType_.getUnmodifiableView();
        bitField0_ = (bitField0_ & ~0x00000002);
      }
      result.contentType_ = contentType_;
    }

    private void buildPartial0(io.envoyproxy.envoy.config.filter.http.compressor.v2.Compressor result) {
      int from_bitField0_ = bitField0_;
      if (((from_bitField0_ & 0x00000001) != 0)) {
        result.contentLength_ = contentLengthBuilder_ == null
            ? contentLength_
            : contentLengthBuilder_.build();
      }
      if (((from_bitField0_ & 0x00000004) != 0)) {
        result.disableOnEtagHeader_ = disableOnEtagHeader_;
      }
      if (((from_bitField0_ & 0x00000008) != 0)) {
        result.removeAcceptEncodingHeader_ = removeAcceptEncodingHeader_;
      }
      if (((from_bitField0_ & 0x00000010) != 0)) {
        result.runtimeEnabled_ = runtimeEnabledBuilder_ == null
            ? runtimeEnabled_
            : runtimeEnabledBuilder_.build();
      }
    }

    @java.lang.Override
    public Builder clone() {
      return super.clone();
    }
    @java.lang.Override
    public Builder setField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        java.lang.Object value) {
      return super.setField(field, value);
    }
    @java.lang.Override
    public Builder clearField(
        com.google.protobuf.Descriptors.FieldDescriptor field) {
      return super.clearField(field);
    }
    @java.lang.Override
    public Builder clearOneof(
        com.google.protobuf.Descriptors.OneofDescriptor oneof) {
      return super.clearOneof(oneof);
    }
    @java.lang.Override
    public Builder setRepeatedField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        int index, java.lang.Object value) {
      return super.setRepeatedField(field, index, value);
    }
    @java.lang.Override
    public Builder addRepeatedField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        java.lang.Object value) {
      return super.addRepeatedField(field, value);
    }
    @java.lang.Override
    public Builder mergeFrom(com.google.protobuf.Message other) {
      if (other instanceof io.envoyproxy.envoy.config.filter.http.compressor.v2.Compressor) {
        return mergeFrom((io.envoyproxy.envoy.config.filter.http.compressor.v2.Compressor)other);
      } else {
        super.mergeFrom(other);
        return this;
      }
    }

    public Builder mergeFrom(io.envoyproxy.envoy.config.filter.http.compressor.v2.Compressor other) {
      if (other == io.envoyproxy.envoy.config.filter.http.compressor.v2.Compressor.getDefaultInstance()) return this;
      if (other.hasContentLength()) {
        mergeContentLength(other.getContentLength());
      }
      if (!other.contentType_.isEmpty()) {
        if (contentType_.isEmpty()) {
          contentType_ = other.contentType_;
          bitField0_ = (bitField0_ & ~0x00000002);
        } else {
          ensureContentTypeIsMutable();
          contentType_.addAll(other.contentType_);
        }
        onChanged();
      }
      if (other.getDisableOnEtagHeader() != false) {
        setDisableOnEtagHeader(other.getDisableOnEtagHeader());
      }
      if (other.getRemoveAcceptEncodingHeader() != false) {
        setRemoveAcceptEncodingHeader(other.getRemoveAcceptEncodingHeader());
      }
      if (other.hasRuntimeEnabled()) {
        mergeRuntimeEnabled(other.getRuntimeEnabled());
      }
      this.mergeUnknownFields(other.getUnknownFields());
      onChanged();
      return this;
    }

    @java.lang.Override
    public final boolean isInitialized() {
      return true;
    }

    @java.lang.Override
    public Builder mergeFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 10: {
              input.readMessage(
                  getContentLengthFieldBuilder().getBuilder(),
                  extensionRegistry);
              bitField0_ |= 0x00000001;
              break;
            } // case 10
            case 18: {
              java.lang.String s = input.readStringRequireUtf8();
              ensureContentTypeIsMutable();
              contentType_.add(s);
              break;
            } // case 18
            case 24: {
              disableOnEtagHeader_ = input.readBool();
              bitField0_ |= 0x00000004;
              break;
            } // case 24
            case 32: {
              removeAcceptEncodingHeader_ = input.readBool();
              bitField0_ |= 0x00000008;
              break;
            } // case 32
            case 42: {
              input.readMessage(
                  getRuntimeEnabledFieldBuilder().getBuilder(),
                  extensionRegistry);
              bitField0_ |= 0x00000010;
              break;
            } // case 42
            default: {
              if (!super.parseUnknownField(input, extensionRegistry, tag)) {
                done = true; // was an endgroup tag
              }
              break;
            } // default:
          } // switch (tag)
        } // while (!done)
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.unwrapIOException();
      } finally {
        onChanged();
      } // finally
      return this;
    }
    private int bitField0_;

    private com.google.protobuf.UInt32Value contentLength_;
    private com.google.protobuf.SingleFieldBuilderV3<
        com.google.protobuf.UInt32Value, com.google.protobuf.UInt32Value.Builder, com.google.protobuf.UInt32ValueOrBuilder> contentLengthBuilder_;
    /**
     * <pre>
     * Minimum response length, in bytes, which will trigger compression. The default value is 30.
     * </pre>
     *
     * <code>.google.protobuf.UInt32Value content_length = 1;</code>
     * @return Whether the contentLength field is set.
     */
    public boolean hasContentLength() {
      return ((bitField0_ & 0x00000001) != 0);
    }
    /**
     * <pre>
     * Minimum response length, in bytes, which will trigger compression. The default value is 30.
     * </pre>
     *
     * <code>.google.protobuf.UInt32Value content_length = 1;</code>
     * @return The contentLength.
     */
    public com.google.protobuf.UInt32Value getContentLength() {
      if (contentLengthBuilder_ == null) {
        return contentLength_ == null ? com.google.protobuf.UInt32Value.getDefaultInstance() : contentLength_;
      } else {
        return contentLengthBuilder_.getMessage();
      }
    }
    /**
     * <pre>
     * Minimum response length, in bytes, which will trigger compression. The default value is 30.
     * </pre>
     *
     * <code>.google.protobuf.UInt32Value content_length = 1;</code>
     */
    public Builder setContentLength(com.google.protobuf.UInt32Value value) {
      if (contentLengthBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        contentLength_ = value;
      } else {
        contentLengthBuilder_.setMessage(value);
      }
      bitField0_ |= 0x00000001;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * Minimum response length, in bytes, which will trigger compression. The default value is 30.
     * </pre>
     *
     * <code>.google.protobuf.UInt32Value content_length = 1;</code>
     */
    public Builder setContentLength(
        com.google.protobuf.UInt32Value.Builder builderForValue) {
      if (contentLengthBuilder_ == null) {
        contentLength_ = builderForValue.build();
      } else {
        contentLengthBuilder_.setMessage(builderForValue.build());
      }
      bitField0_ |= 0x00000001;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * Minimum response length, in bytes, which will trigger compression. The default value is 30.
     * </pre>
     *
     * <code>.google.protobuf.UInt32Value content_length = 1;</code>
     */
    public Builder mergeContentLength(com.google.protobuf.UInt32Value value) {
      if (contentLengthBuilder_ == null) {
        if (((bitField0_ & 0x00000001) != 0) &&
          contentLength_ != null &&
          contentLength_ != com.google.protobuf.UInt32Value.getDefaultInstance()) {
          getContentLengthBuilder().mergeFrom(value);
        } else {
          contentLength_ = value;
        }
      } else {
        contentLengthBuilder_.mergeFrom(value);
      }
      bitField0_ |= 0x00000001;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * Minimum response length, in bytes, which will trigger compression. The default value is 30.
     * </pre>
     *
     * <code>.google.protobuf.UInt32Value content_length = 1;</code>
     */
    public Builder clearContentLength() {
      bitField0_ = (bitField0_ & ~0x00000001);
      contentLength_ = null;
      if (contentLengthBuilder_ != null) {
        contentLengthBuilder_.dispose();
        contentLengthBuilder_ = null;
      }
      onChanged();
      return this;
    }
    /**
     * <pre>
     * Minimum response length, in bytes, which will trigger compression. The default value is 30.
     * </pre>
     *
     * <code>.google.protobuf.UInt32Value content_length = 1;</code>
     */
    public com.google.protobuf.UInt32Value.Builder getContentLengthBuilder() {
      bitField0_ |= 0x00000001;
      onChanged();
      return getContentLengthFieldBuilder().getBuilder();
    }
    /**
     * <pre>
     * Minimum response length, in bytes, which will trigger compression. The default value is 30.
     * </pre>
     *
     * <code>.google.protobuf.UInt32Value content_length = 1;</code>
     */
    public com.google.protobuf.UInt32ValueOrBuilder getContentLengthOrBuilder() {
      if (contentLengthBuilder_ != null) {
        return contentLengthBuilder_.getMessageOrBuilder();
      } else {
        return contentLength_ == null ?
            com.google.protobuf.UInt32Value.getDefaultInstance() : contentLength_;
      }
    }
    /**
     * <pre>
     * Minimum response length, in bytes, which will trigger compression. The default value is 30.
     * </pre>
     *
     * <code>.google.protobuf.UInt32Value content_length = 1;</code>
     */
    private com.google.protobuf.SingleFieldBuilderV3<
        com.google.protobuf.UInt32Value, com.google.protobuf.UInt32Value.Builder, com.google.protobuf.UInt32ValueOrBuilder> 
        getContentLengthFieldBuilder() {
      if (contentLengthBuilder_ == null) {
        contentLengthBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
            com.google.protobuf.UInt32Value, com.google.protobuf.UInt32Value.Builder, com.google.protobuf.UInt32ValueOrBuilder>(
                getContentLength(),
                getParentForChildren(),
                isClean());
        contentLength_ = null;
      }
      return contentLengthBuilder_;
    }

    private com.google.protobuf.LazyStringList contentType_ = com.google.protobuf.LazyStringArrayList.EMPTY;
    private void ensureContentTypeIsMutable() {
      if (!((bitField0_ & 0x00000002) != 0)) {
        contentType_ = new com.google.protobuf.LazyStringArrayList(contentType_);
        bitField0_ |= 0x00000002;
       }
    }
    /**
     * <pre>
     * Set of strings that allows specifying which mime-types yield compression; e.g.,
     * application/json, text/html, etc. When this field is not defined, compression will be applied
     * to the following mime-types: "application/javascript", "application/json",
     * "application/xhtml+xml", "image/svg+xml", "text/css", "text/html", "text/plain", "text/xml"
     * and their synonyms.
     * </pre>
     *
     * <code>repeated string content_type = 2;</code>
     * @return A list containing the contentType.
     */
    public com.google.protobuf.ProtocolStringList
        getContentTypeList() {
      return contentType_.getUnmodifiableView();
    }
    /**
     * <pre>
     * Set of strings that allows specifying which mime-types yield compression; e.g.,
     * application/json, text/html, etc. When this field is not defined, compression will be applied
     * to the following mime-types: "application/javascript", "application/json",
     * "application/xhtml+xml", "image/svg+xml", "text/css", "text/html", "text/plain", "text/xml"
     * and their synonyms.
     * </pre>
     *
     * <code>repeated string content_type = 2;</code>
     * @return The count of contentType.
     */
    public int getContentTypeCount() {
      return contentType_.size();
    }
    /**
     * <pre>
     * Set of strings that allows specifying which mime-types yield compression; e.g.,
     * application/json, text/html, etc. When this field is not defined, compression will be applied
     * to the following mime-types: "application/javascript", "application/json",
     * "application/xhtml+xml", "image/svg+xml", "text/css", "text/html", "text/plain", "text/xml"
     * and their synonyms.
     * </pre>
     *
     * <code>repeated string content_type = 2;</code>
     * @param index The index of the element to return.
     * @return The contentType at the given index.
     */
    public java.lang.String getContentType(int index) {
      return contentType_.get(index);
    }
    /**
     * <pre>
     * Set of strings that allows specifying which mime-types yield compression; e.g.,
     * application/json, text/html, etc. When this field is not defined, compression will be applied
     * to the following mime-types: "application/javascript", "application/json",
     * "application/xhtml+xml", "image/svg+xml", "text/css", "text/html", "text/plain", "text/xml"
     * and their synonyms.
     * </pre>
     *
     * <code>repeated string content_type = 2;</code>
     * @param index The index of the value to return.
     * @return The bytes of the contentType at the given index.
     */
    public com.google.protobuf.ByteString
        getContentTypeBytes(int index) {
      return contentType_.getByteString(index);
    }
    /**
     * <pre>
     * Set of strings that allows specifying which mime-types yield compression; e.g.,
     * application/json, text/html, etc. When this field is not defined, compression will be applied
     * to the following mime-types: "application/javascript", "application/json",
     * "application/xhtml+xml", "image/svg+xml", "text/css", "text/html", "text/plain", "text/xml"
     * and their synonyms.
     * </pre>
     *
     * <code>repeated string content_type = 2;</code>
     * @param index The index to set the value at.
     * @param value The contentType to set.
     * @return This builder for chaining.
     */
    public Builder setContentType(
        int index, java.lang.String value) {
      if (value == null) { throw new NullPointerException(); }
      ensureContentTypeIsMutable();
      contentType_.set(index, value);
      onChanged();
      return this;
    }
    /**
     * <pre>
     * Set of strings that allows specifying which mime-types yield compression; e.g.,
     * application/json, text/html, etc. When this field is not defined, compression will be applied
     * to the following mime-types: "application/javascript", "application/json",
     * "application/xhtml+xml", "image/svg+xml", "text/css", "text/html", "text/plain", "text/xml"
     * and their synonyms.
     * </pre>
     *
     * <code>repeated string content_type = 2;</code>
     * @param value The contentType to add.
     * @return This builder for chaining.
     */
    public Builder addContentType(
        java.lang.String value) {
      if (value == null) { throw new NullPointerException(); }
      ensureContentTypeIsMutable();
      contentType_.add(value);
      onChanged();
      return this;
    }
    /**
     * <pre>
     * Set of strings that allows specifying which mime-types yield compression; e.g.,
     * application/json, text/html, etc. When this field is not defined, compression will be applied
     * to the following mime-types: "application/javascript", "application/json",
     * "application/xhtml+xml", "image/svg+xml", "text/css", "text/html", "text/plain", "text/xml"
     * and their synonyms.
     * </pre>
     *
     * <code>repeated string content_type = 2;</code>
     * @param values The contentType to add.
     * @return This builder for chaining.
     */
    public Builder addAllContentType(
        java.lang.Iterable<java.lang.String> values) {
      ensureContentTypeIsMutable();
      com.google.protobuf.AbstractMessageLite.Builder.addAll(
          values, contentType_);
      onChanged();
      return this;
    }
    /**
     * <pre>
     * Set of strings that allows specifying which mime-types yield compression; e.g.,
     * application/json, text/html, etc. When this field is not defined, compression will be applied
     * to the following mime-types: "application/javascript", "application/json",
     * "application/xhtml+xml", "image/svg+xml", "text/css", "text/html", "text/plain", "text/xml"
     * and their synonyms.
     * </pre>
     *
     * <code>repeated string content_type = 2;</code>
     * @return This builder for chaining.
     */
    public Builder clearContentType() {
      contentType_ = com.google.protobuf.LazyStringArrayList.EMPTY;
      bitField0_ = (bitField0_ & ~0x00000002);
      onChanged();
      return this;
    }
    /**
     * <pre>
     * Set of strings that allows specifying which mime-types yield compression; e.g.,
     * application/json, text/html, etc. When this field is not defined, compression will be applied
     * to the following mime-types: "application/javascript", "application/json",
     * "application/xhtml+xml", "image/svg+xml", "text/css", "text/html", "text/plain", "text/xml"
     * and their synonyms.
     * </pre>
     *
     * <code>repeated string content_type = 2;</code>
     * @param value The bytes of the contentType to add.
     * @return This builder for chaining.
     */
    public Builder addContentTypeBytes(
        com.google.protobuf.ByteString value) {
      if (value == null) { throw new NullPointerException(); }
      checkByteStringIsUtf8(value);
      ensureContentTypeIsMutable();
      contentType_.add(value);
      onChanged();
      return this;
    }

    private boolean disableOnEtagHeader_ ;
    /**
     * <pre>
     * If true, disables compression when the response contains an etag header. When it is false, the
     * filter will preserve weak etags and remove the ones that require strong validation.
     * </pre>
     *
     * <code>bool disable_on_etag_header = 3;</code>
     * @return The disableOnEtagHeader.
     */
    @java.lang.Override
    public boolean getDisableOnEtagHeader() {
      return disableOnEtagHeader_;
    }
    /**
     * <pre>
     * If true, disables compression when the response contains an etag header. When it is false, the
     * filter will preserve weak etags and remove the ones that require strong validation.
     * </pre>
     *
     * <code>bool disable_on_etag_header = 3;</code>
     * @param value The disableOnEtagHeader to set.
     * @return This builder for chaining.
     */
    public Builder setDisableOnEtagHeader(boolean value) {
      
      disableOnEtagHeader_ = value;
      bitField0_ |= 0x00000004;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * If true, disables compression when the response contains an etag header. When it is false, the
     * filter will preserve weak etags and remove the ones that require strong validation.
     * </pre>
     *
     * <code>bool disable_on_etag_header = 3;</code>
     * @return This builder for chaining.
     */
    public Builder clearDisableOnEtagHeader() {
      bitField0_ = (bitField0_ & ~0x00000004);
      disableOnEtagHeader_ = false;
      onChanged();
      return this;
    }

    private boolean removeAcceptEncodingHeader_ ;
    /**
     * <pre>
     * If true, removes accept-encoding from the request headers before dispatching it to the upstream
     * so that responses do not get compressed before reaching the filter.
     * .. attention:
     *    To avoid interfering with other compression filters in the same chain use this option in
     *    the filter closest to the upstream.
     * </pre>
     *
     * <code>bool remove_accept_encoding_header = 4;</code>
     * @return The removeAcceptEncodingHeader.
     */
    @java.lang.Override
    public boolean getRemoveAcceptEncodingHeader() {
      return removeAcceptEncodingHeader_;
    }
    /**
     * <pre>
     * If true, removes accept-encoding from the request headers before dispatching it to the upstream
     * so that responses do not get compressed before reaching the filter.
     * .. attention:
     *    To avoid interfering with other compression filters in the same chain use this option in
     *    the filter closest to the upstream.
     * </pre>
     *
     * <code>bool remove_accept_encoding_header = 4;</code>
     * @param value The removeAcceptEncodingHeader to set.
     * @return This builder for chaining.
     */
    public Builder setRemoveAcceptEncodingHeader(boolean value) {
      
      removeAcceptEncodingHeader_ = value;
      bitField0_ |= 0x00000008;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * If true, removes accept-encoding from the request headers before dispatching it to the upstream
     * so that responses do not get compressed before reaching the filter.
     * .. attention:
     *    To avoid interfering with other compression filters in the same chain use this option in
     *    the filter closest to the upstream.
     * </pre>
     *
     * <code>bool remove_accept_encoding_header = 4;</code>
     * @return This builder for chaining.
     */
    public Builder clearRemoveAcceptEncodingHeader() {
      bitField0_ = (bitField0_ & ~0x00000008);
      removeAcceptEncodingHeader_ = false;
      onChanged();
      return this;
    }

    private io.envoyproxy.envoy.api.v2.core.RuntimeFeatureFlag runtimeEnabled_;
    private com.google.protobuf.SingleFieldBuilderV3<
        io.envoyproxy.envoy.api.v2.core.RuntimeFeatureFlag, io.envoyproxy.envoy.api.v2.core.RuntimeFeatureFlag.Builder, io.envoyproxy.envoy.api.v2.core.RuntimeFeatureFlagOrBuilder> runtimeEnabledBuilder_;
    /**
     * <pre>
     * Runtime flag that controls whether the filter is enabled or not. If set to false, the
     * filter will operate as a pass-through filter. If not specified, defaults to enabled.
     * </pre>
     *
     * <code>.envoy.api.v2.core.RuntimeFeatureFlag runtime_enabled = 5;</code>
     * @return Whether the runtimeEnabled field is set.
     */
    public boolean hasRuntimeEnabled() {
      return ((bitField0_ & 0x00000010) != 0);
    }
    /**
     * <pre>
     * Runtime flag that controls whether the filter is enabled or not. If set to false, the
     * filter will operate as a pass-through filter. If not specified, defaults to enabled.
     * </pre>
     *
     * <code>.envoy.api.v2.core.RuntimeFeatureFlag runtime_enabled = 5;</code>
     * @return The runtimeEnabled.
     */
    public io.envoyproxy.envoy.api.v2.core.RuntimeFeatureFlag getRuntimeEnabled() {
      if (runtimeEnabledBuilder_ == null) {
        return runtimeEnabled_ == null ? io.envoyproxy.envoy.api.v2.core.RuntimeFeatureFlag.getDefaultInstance() : runtimeEnabled_;
      } else {
        return runtimeEnabledBuilder_.getMessage();
      }
    }
    /**
     * <pre>
     * Runtime flag that controls whether the filter is enabled or not. If set to false, the
     * filter will operate as a pass-through filter. If not specified, defaults to enabled.
     * </pre>
     *
     * <code>.envoy.api.v2.core.RuntimeFeatureFlag runtime_enabled = 5;</code>
     */
    public Builder setRuntimeEnabled(io.envoyproxy.envoy.api.v2.core.RuntimeFeatureFlag value) {
      if (runtimeEnabledBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        runtimeEnabled_ = value;
      } else {
        runtimeEnabledBuilder_.setMessage(value);
      }
      bitField0_ |= 0x00000010;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * Runtime flag that controls whether the filter is enabled or not. If set to false, the
     * filter will operate as a pass-through filter. If not specified, defaults to enabled.
     * </pre>
     *
     * <code>.envoy.api.v2.core.RuntimeFeatureFlag runtime_enabled = 5;</code>
     */
    public Builder setRuntimeEnabled(
        io.envoyproxy.envoy.api.v2.core.RuntimeFeatureFlag.Builder builderForValue) {
      if (runtimeEnabledBuilder_ == null) {
        runtimeEnabled_ = builderForValue.build();
      } else {
        runtimeEnabledBuilder_.setMessage(builderForValue.build());
      }
      bitField0_ |= 0x00000010;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * Runtime flag that controls whether the filter is enabled or not. If set to false, the
     * filter will operate as a pass-through filter. If not specified, defaults to enabled.
     * </pre>
     *
     * <code>.envoy.api.v2.core.RuntimeFeatureFlag runtime_enabled = 5;</code>
     */
    public Builder mergeRuntimeEnabled(io.envoyproxy.envoy.api.v2.core.RuntimeFeatureFlag value) {
      if (runtimeEnabledBuilder_ == null) {
        if (((bitField0_ & 0x00000010) != 0) &&
          runtimeEnabled_ != null &&
          runtimeEnabled_ != io.envoyproxy.envoy.api.v2.core.RuntimeFeatureFlag.getDefaultInstance()) {
          getRuntimeEnabledBuilder().mergeFrom(value);
        } else {
          runtimeEnabled_ = value;
        }
      } else {
        runtimeEnabledBuilder_.mergeFrom(value);
      }
      bitField0_ |= 0x00000010;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * Runtime flag that controls whether the filter is enabled or not. If set to false, the
     * filter will operate as a pass-through filter. If not specified, defaults to enabled.
     * </pre>
     *
     * <code>.envoy.api.v2.core.RuntimeFeatureFlag runtime_enabled = 5;</code>
     */
    public Builder clearRuntimeEnabled() {
      bitField0_ = (bitField0_ & ~0x00000010);
      runtimeEnabled_ = null;
      if (runtimeEnabledBuilder_ != null) {
        runtimeEnabledBuilder_.dispose();
        runtimeEnabledBuilder_ = null;
      }
      onChanged();
      return this;
    }
    /**
     * <pre>
     * Runtime flag that controls whether the filter is enabled or not. If set to false, the
     * filter will operate as a pass-through filter. If not specified, defaults to enabled.
     * </pre>
     *
     * <code>.envoy.api.v2.core.RuntimeFeatureFlag runtime_enabled = 5;</code>
     */
    public io.envoyproxy.envoy.api.v2.core.RuntimeFeatureFlag.Builder getRuntimeEnabledBuilder() {
      bitField0_ |= 0x00000010;
      onChanged();
      return getRuntimeEnabledFieldBuilder().getBuilder();
    }
    /**
     * <pre>
     * Runtime flag that controls whether the filter is enabled or not. If set to false, the
     * filter will operate as a pass-through filter. If not specified, defaults to enabled.
     * </pre>
     *
     * <code>.envoy.api.v2.core.RuntimeFeatureFlag runtime_enabled = 5;</code>
     */
    public io.envoyproxy.envoy.api.v2.core.RuntimeFeatureFlagOrBuilder getRuntimeEnabledOrBuilder() {
      if (runtimeEnabledBuilder_ != null) {
        return runtimeEnabledBuilder_.getMessageOrBuilder();
      } else {
        return runtimeEnabled_ == null ?
            io.envoyproxy.envoy.api.v2.core.RuntimeFeatureFlag.getDefaultInstance() : runtimeEnabled_;
      }
    }
    /**
     * <pre>
     * Runtime flag that controls whether the filter is enabled or not. If set to false, the
     * filter will operate as a pass-through filter. If not specified, defaults to enabled.
     * </pre>
     *
     * <code>.envoy.api.v2.core.RuntimeFeatureFlag runtime_enabled = 5;</code>
     */
    private com.google.protobuf.SingleFieldBuilderV3<
        io.envoyproxy.envoy.api.v2.core.RuntimeFeatureFlag, io.envoyproxy.envoy.api.v2.core.RuntimeFeatureFlag.Builder, io.envoyproxy.envoy.api.v2.core.RuntimeFeatureFlagOrBuilder> 
        getRuntimeEnabledFieldBuilder() {
      if (runtimeEnabledBuilder_ == null) {
        runtimeEnabledBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
            io.envoyproxy.envoy.api.v2.core.RuntimeFeatureFlag, io.envoyproxy.envoy.api.v2.core.RuntimeFeatureFlag.Builder, io.envoyproxy.envoy.api.v2.core.RuntimeFeatureFlagOrBuilder>(
                getRuntimeEnabled(),
                getParentForChildren(),
                isClean());
        runtimeEnabled_ = null;
      }
      return runtimeEnabledBuilder_;
    }
    @java.lang.Override
    public final Builder setUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return super.setUnknownFields(unknownFields);
    }

    @java.lang.Override
    public final Builder mergeUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return super.mergeUnknownFields(unknownFields);
    }


    // @@protoc_insertion_point(builder_scope:envoy.config.filter.http.compressor.v2.Compressor)
  }

  // @@protoc_insertion_point(class_scope:envoy.config.filter.http.compressor.v2.Compressor)
  private static final io.envoyproxy.envoy.config.filter.http.compressor.v2.Compressor DEFAULT_INSTANCE;
  static {
    DEFAULT_INSTANCE = new io.envoyproxy.envoy.config.filter.http.compressor.v2.Compressor();
  }

  public static io.envoyproxy.envoy.config.filter.http.compressor.v2.Compressor getDefaultInstance() {
    return DEFAULT_INSTANCE;
  }

  private static final com.google.protobuf.Parser<Compressor>
      PARSER = new com.google.protobuf.AbstractParser<Compressor>() {
    @java.lang.Override
    public Compressor parsePartialFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      Builder builder = newBuilder();
      try {
        builder.mergeFrom(input, extensionRegistry);
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(builder.buildPartial());
      } catch (com.google.protobuf.UninitializedMessageException e) {
        throw e.asInvalidProtocolBufferException().setUnfinishedMessage(builder.buildPartial());
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(e)
            .setUnfinishedMessage(builder.buildPartial());
      }
      return builder.buildPartial();
    }
  };

  public static com.google.protobuf.Parser<Compressor> parser() {
    return PARSER;
  }

  @java.lang.Override
  public com.google.protobuf.Parser<Compressor> getParserForType() {
    return PARSER;
  }

  @java.lang.Override
  public io.envoyproxy.envoy.config.filter.http.compressor.v2.Compressor getDefaultInstanceForType() {
    return DEFAULT_INSTANCE;
  }

}

