// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: envoy/config/filter/http/squash/v2/squash.proto

package io.envoyproxy.envoy.config.filter.http.squash.v2;

/**
 * <pre>
 * [#next-free-field: 6]
 * </pre>
 *
 * Protobuf type {@code envoy.config.filter.http.squash.v2.Squash}
 */
public final class Squash extends
    com.google.protobuf.GeneratedMessageV3 implements
    // @@protoc_insertion_point(message_implements:envoy.config.filter.http.squash.v2.Squash)
    SquashOrBuilder {
private static final long serialVersionUID = 0L;
  // Use Squash.newBuilder() to construct.
  private Squash(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
    super(builder);
  }
  private Squash() {
    cluster_ = "";
  }

  @java.lang.Override
  @SuppressWarnings({"unused"})
  protected java.lang.Object newInstance(
      UnusedPrivateParameter unused) {
    return new Squash();
  }

  @java.lang.Override
  public final com.google.protobuf.UnknownFieldSet
  getUnknownFields() {
    return this.unknownFields;
  }
  public static final com.google.protobuf.Descriptors.Descriptor
      getDescriptor() {
    return io.envoyproxy.envoy.config.filter.http.squash.v2.SquashProto.internal_static_envoy_config_filter_http_squash_v2_Squash_descriptor;
  }

  @java.lang.Override
  protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internalGetFieldAccessorTable() {
    return io.envoyproxy.envoy.config.filter.http.squash.v2.SquashProto.internal_static_envoy_config_filter_http_squash_v2_Squash_fieldAccessorTable
        .ensureFieldAccessorsInitialized(
            io.envoyproxy.envoy.config.filter.http.squash.v2.Squash.class, io.envoyproxy.envoy.config.filter.http.squash.v2.Squash.Builder.class);
  }

  public static final int CLUSTER_FIELD_NUMBER = 1;
  @SuppressWarnings("serial")
  private volatile java.lang.Object cluster_ = "";
  /**
   * <pre>
   * The name of the cluster that hosts the Squash server.
   * </pre>
   *
   * <code>string cluster = 1 [(.validate.rules) = { ... }</code>
   * @return The cluster.
   */
  @java.lang.Override
  public java.lang.String getCluster() {
    java.lang.Object ref = cluster_;
    if (ref instanceof java.lang.String) {
      return (java.lang.String) ref;
    } else {
      com.google.protobuf.ByteString bs = 
          (com.google.protobuf.ByteString) ref;
      java.lang.String s = bs.toStringUtf8();
      cluster_ = s;
      return s;
    }
  }
  /**
   * <pre>
   * The name of the cluster that hosts the Squash server.
   * </pre>
   *
   * <code>string cluster = 1 [(.validate.rules) = { ... }</code>
   * @return The bytes for cluster.
   */
  @java.lang.Override
  public com.google.protobuf.ByteString
      getClusterBytes() {
    java.lang.Object ref = cluster_;
    if (ref instanceof java.lang.String) {
      com.google.protobuf.ByteString b = 
          com.google.protobuf.ByteString.copyFromUtf8(
              (java.lang.String) ref);
      cluster_ = b;
      return b;
    } else {
      return (com.google.protobuf.ByteString) ref;
    }
  }

  public static final int ATTACHMENT_TEMPLATE_FIELD_NUMBER = 2;
  private com.google.protobuf.Struct attachmentTemplate_;
  /**
   * <pre>
   * When the filter requests the Squash server to create a DebugAttachment, it will use this
   * structure as template for the body of the request. It can contain reference to environment
   * variables in the form of '{{ ENV_VAR_NAME }}'. These can be used to provide the Squash server
   * with more information to find the process to attach the debugger to. For example, in a
   * Istio/k8s environment, this will contain information on the pod:
   * .. code-block:: json
   *  {
   *    "spec": {
   *      "attachment": {
   *        "pod": "{{ POD_NAME }}",
   *        "namespace": "{{ POD_NAMESPACE }}"
   *      },
   *      "match_request": true
   *    }
   *  }
   * (where POD_NAME, POD_NAMESPACE are configured in the pod via the Downward API)
   * </pre>
   *
   * <code>.google.protobuf.Struct attachment_template = 2;</code>
   * @return Whether the attachmentTemplate field is set.
   */
  @java.lang.Override
  public boolean hasAttachmentTemplate() {
    return attachmentTemplate_ != null;
  }
  /**
   * <pre>
   * When the filter requests the Squash server to create a DebugAttachment, it will use this
   * structure as template for the body of the request. It can contain reference to environment
   * variables in the form of '{{ ENV_VAR_NAME }}'. These can be used to provide the Squash server
   * with more information to find the process to attach the debugger to. For example, in a
   * Istio/k8s environment, this will contain information on the pod:
   * .. code-block:: json
   *  {
   *    "spec": {
   *      "attachment": {
   *        "pod": "{{ POD_NAME }}",
   *        "namespace": "{{ POD_NAMESPACE }}"
   *      },
   *      "match_request": true
   *    }
   *  }
   * (where POD_NAME, POD_NAMESPACE are configured in the pod via the Downward API)
   * </pre>
   *
   * <code>.google.protobuf.Struct attachment_template = 2;</code>
   * @return The attachmentTemplate.
   */
  @java.lang.Override
  public com.google.protobuf.Struct getAttachmentTemplate() {
    return attachmentTemplate_ == null ? com.google.protobuf.Struct.getDefaultInstance() : attachmentTemplate_;
  }
  /**
   * <pre>
   * When the filter requests the Squash server to create a DebugAttachment, it will use this
   * structure as template for the body of the request. It can contain reference to environment
   * variables in the form of '{{ ENV_VAR_NAME }}'. These can be used to provide the Squash server
   * with more information to find the process to attach the debugger to. For example, in a
   * Istio/k8s environment, this will contain information on the pod:
   * .. code-block:: json
   *  {
   *    "spec": {
   *      "attachment": {
   *        "pod": "{{ POD_NAME }}",
   *        "namespace": "{{ POD_NAMESPACE }}"
   *      },
   *      "match_request": true
   *    }
   *  }
   * (where POD_NAME, POD_NAMESPACE are configured in the pod via the Downward API)
   * </pre>
   *
   * <code>.google.protobuf.Struct attachment_template = 2;</code>
   */
  @java.lang.Override
  public com.google.protobuf.StructOrBuilder getAttachmentTemplateOrBuilder() {
    return attachmentTemplate_ == null ? com.google.protobuf.Struct.getDefaultInstance() : attachmentTemplate_;
  }

  public static final int REQUEST_TIMEOUT_FIELD_NUMBER = 3;
  private com.google.protobuf.Duration requestTimeout_;
  /**
   * <pre>
   * The timeout for individual requests sent to the Squash cluster. Defaults to 1 second.
   * </pre>
   *
   * <code>.google.protobuf.Duration request_timeout = 3;</code>
   * @return Whether the requestTimeout field is set.
   */
  @java.lang.Override
  public boolean hasRequestTimeout() {
    return requestTimeout_ != null;
  }
  /**
   * <pre>
   * The timeout for individual requests sent to the Squash cluster. Defaults to 1 second.
   * </pre>
   *
   * <code>.google.protobuf.Duration request_timeout = 3;</code>
   * @return The requestTimeout.
   */
  @java.lang.Override
  public com.google.protobuf.Duration getRequestTimeout() {
    return requestTimeout_ == null ? com.google.protobuf.Duration.getDefaultInstance() : requestTimeout_;
  }
  /**
   * <pre>
   * The timeout for individual requests sent to the Squash cluster. Defaults to 1 second.
   * </pre>
   *
   * <code>.google.protobuf.Duration request_timeout = 3;</code>
   */
  @java.lang.Override
  public com.google.protobuf.DurationOrBuilder getRequestTimeoutOrBuilder() {
    return requestTimeout_ == null ? com.google.protobuf.Duration.getDefaultInstance() : requestTimeout_;
  }

  public static final int ATTACHMENT_TIMEOUT_FIELD_NUMBER = 4;
  private com.google.protobuf.Duration attachmentTimeout_;
  /**
   * <pre>
   * The total timeout Squash will delay a request and wait for it to be attached. Defaults to 60
   * seconds.
   * </pre>
   *
   * <code>.google.protobuf.Duration attachment_timeout = 4;</code>
   * @return Whether the attachmentTimeout field is set.
   */
  @java.lang.Override
  public boolean hasAttachmentTimeout() {
    return attachmentTimeout_ != null;
  }
  /**
   * <pre>
   * The total timeout Squash will delay a request and wait for it to be attached. Defaults to 60
   * seconds.
   * </pre>
   *
   * <code>.google.protobuf.Duration attachment_timeout = 4;</code>
   * @return The attachmentTimeout.
   */
  @java.lang.Override
  public com.google.protobuf.Duration getAttachmentTimeout() {
    return attachmentTimeout_ == null ? com.google.protobuf.Duration.getDefaultInstance() : attachmentTimeout_;
  }
  /**
   * <pre>
   * The total timeout Squash will delay a request and wait for it to be attached. Defaults to 60
   * seconds.
   * </pre>
   *
   * <code>.google.protobuf.Duration attachment_timeout = 4;</code>
   */
  @java.lang.Override
  public com.google.protobuf.DurationOrBuilder getAttachmentTimeoutOrBuilder() {
    return attachmentTimeout_ == null ? com.google.protobuf.Duration.getDefaultInstance() : attachmentTimeout_;
  }

  public static final int ATTACHMENT_POLL_PERIOD_FIELD_NUMBER = 5;
  private com.google.protobuf.Duration attachmentPollPeriod_;
  /**
   * <pre>
   * Amount of time to poll for the status of the attachment object in the Squash server
   * (to check if has been attached). Defaults to 1 second.
   * </pre>
   *
   * <code>.google.protobuf.Duration attachment_poll_period = 5;</code>
   * @return Whether the attachmentPollPeriod field is set.
   */
  @java.lang.Override
  public boolean hasAttachmentPollPeriod() {
    return attachmentPollPeriod_ != null;
  }
  /**
   * <pre>
   * Amount of time to poll for the status of the attachment object in the Squash server
   * (to check if has been attached). Defaults to 1 second.
   * </pre>
   *
   * <code>.google.protobuf.Duration attachment_poll_period = 5;</code>
   * @return The attachmentPollPeriod.
   */
  @java.lang.Override
  public com.google.protobuf.Duration getAttachmentPollPeriod() {
    return attachmentPollPeriod_ == null ? com.google.protobuf.Duration.getDefaultInstance() : attachmentPollPeriod_;
  }
  /**
   * <pre>
   * Amount of time to poll for the status of the attachment object in the Squash server
   * (to check if has been attached). Defaults to 1 second.
   * </pre>
   *
   * <code>.google.protobuf.Duration attachment_poll_period = 5;</code>
   */
  @java.lang.Override
  public com.google.protobuf.DurationOrBuilder getAttachmentPollPeriodOrBuilder() {
    return attachmentPollPeriod_ == null ? com.google.protobuf.Duration.getDefaultInstance() : attachmentPollPeriod_;
  }

  private byte memoizedIsInitialized = -1;
  @java.lang.Override
  public final boolean isInitialized() {
    byte isInitialized = memoizedIsInitialized;
    if (isInitialized == 1) return true;
    if (isInitialized == 0) return false;

    memoizedIsInitialized = 1;
    return true;
  }

  @java.lang.Override
  public void writeTo(com.google.protobuf.CodedOutputStream output)
                      throws java.io.IOException {
    if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(cluster_)) {
      com.google.protobuf.GeneratedMessageV3.writeString(output, 1, cluster_);
    }
    if (attachmentTemplate_ != null) {
      output.writeMessage(2, getAttachmentTemplate());
    }
    if (requestTimeout_ != null) {
      output.writeMessage(3, getRequestTimeout());
    }
    if (attachmentTimeout_ != null) {
      output.writeMessage(4, getAttachmentTimeout());
    }
    if (attachmentPollPeriod_ != null) {
      output.writeMessage(5, getAttachmentPollPeriod());
    }
    getUnknownFields().writeTo(output);
  }

  @java.lang.Override
  public int getSerializedSize() {
    int size = memoizedSize;
    if (size != -1) return size;

    size = 0;
    if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(cluster_)) {
      size += com.google.protobuf.GeneratedMessageV3.computeStringSize(1, cluster_);
    }
    if (attachmentTemplate_ != null) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(2, getAttachmentTemplate());
    }
    if (requestTimeout_ != null) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(3, getRequestTimeout());
    }
    if (attachmentTimeout_ != null) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(4, getAttachmentTimeout());
    }
    if (attachmentPollPeriod_ != null) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(5, getAttachmentPollPeriod());
    }
    size += getUnknownFields().getSerializedSize();
    memoizedSize = size;
    return size;
  }

  @java.lang.Override
  public boolean equals(final java.lang.Object obj) {
    if (obj == this) {
     return true;
    }
    if (!(obj instanceof io.envoyproxy.envoy.config.filter.http.squash.v2.Squash)) {
      return super.equals(obj);
    }
    io.envoyproxy.envoy.config.filter.http.squash.v2.Squash other = (io.envoyproxy.envoy.config.filter.http.squash.v2.Squash) obj;

    if (!getCluster()
        .equals(other.getCluster())) return false;
    if (hasAttachmentTemplate() != other.hasAttachmentTemplate()) return false;
    if (hasAttachmentTemplate()) {
      if (!getAttachmentTemplate()
          .equals(other.getAttachmentTemplate())) return false;
    }
    if (hasRequestTimeout() != other.hasRequestTimeout()) return false;
    if (hasRequestTimeout()) {
      if (!getRequestTimeout()
          .equals(other.getRequestTimeout())) return false;
    }
    if (hasAttachmentTimeout() != other.hasAttachmentTimeout()) return false;
    if (hasAttachmentTimeout()) {
      if (!getAttachmentTimeout()
          .equals(other.getAttachmentTimeout())) return false;
    }
    if (hasAttachmentPollPeriod() != other.hasAttachmentPollPeriod()) return false;
    if (hasAttachmentPollPeriod()) {
      if (!getAttachmentPollPeriod()
          .equals(other.getAttachmentPollPeriod())) return false;
    }
    if (!getUnknownFields().equals(other.getUnknownFields())) return false;
    return true;
  }

  @java.lang.Override
  public int hashCode() {
    if (memoizedHashCode != 0) {
      return memoizedHashCode;
    }
    int hash = 41;
    hash = (19 * hash) + getDescriptor().hashCode();
    hash = (37 * hash) + CLUSTER_FIELD_NUMBER;
    hash = (53 * hash) + getCluster().hashCode();
    if (hasAttachmentTemplate()) {
      hash = (37 * hash) + ATTACHMENT_TEMPLATE_FIELD_NUMBER;
      hash = (53 * hash) + getAttachmentTemplate().hashCode();
    }
    if (hasRequestTimeout()) {
      hash = (37 * hash) + REQUEST_TIMEOUT_FIELD_NUMBER;
      hash = (53 * hash) + getRequestTimeout().hashCode();
    }
    if (hasAttachmentTimeout()) {
      hash = (37 * hash) + ATTACHMENT_TIMEOUT_FIELD_NUMBER;
      hash = (53 * hash) + getAttachmentTimeout().hashCode();
    }
    if (hasAttachmentPollPeriod()) {
      hash = (37 * hash) + ATTACHMENT_POLL_PERIOD_FIELD_NUMBER;
      hash = (53 * hash) + getAttachmentPollPeriod().hashCode();
    }
    hash = (29 * hash) + getUnknownFields().hashCode();
    memoizedHashCode = hash;
    return hash;
  }

  public static io.envoyproxy.envoy.config.filter.http.squash.v2.Squash parseFrom(
      java.nio.ByteBuffer data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static io.envoyproxy.envoy.config.filter.http.squash.v2.Squash parseFrom(
      java.nio.ByteBuffer data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static io.envoyproxy.envoy.config.filter.http.squash.v2.Squash parseFrom(
      com.google.protobuf.ByteString data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static io.envoyproxy.envoy.config.filter.http.squash.v2.Squash parseFrom(
      com.google.protobuf.ByteString data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static io.envoyproxy.envoy.config.filter.http.squash.v2.Squash parseFrom(byte[] data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static io.envoyproxy.envoy.config.filter.http.squash.v2.Squash parseFrom(
      byte[] data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static io.envoyproxy.envoy.config.filter.http.squash.v2.Squash parseFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input);
  }
  public static io.envoyproxy.envoy.config.filter.http.squash.v2.Squash parseFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input, extensionRegistry);
  }
  public static io.envoyproxy.envoy.config.filter.http.squash.v2.Squash parseDelimitedFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseDelimitedWithIOException(PARSER, input);
  }
  public static io.envoyproxy.envoy.config.filter.http.squash.v2.Squash parseDelimitedFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
  }
  public static io.envoyproxy.envoy.config.filter.http.squash.v2.Squash parseFrom(
      com.google.protobuf.CodedInputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input);
  }
  public static io.envoyproxy.envoy.config.filter.http.squash.v2.Squash parseFrom(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input, extensionRegistry);
  }

  @java.lang.Override
  public Builder newBuilderForType() { return newBuilder(); }
  public static Builder newBuilder() {
    return DEFAULT_INSTANCE.toBuilder();
  }
  public static Builder newBuilder(io.envoyproxy.envoy.config.filter.http.squash.v2.Squash prototype) {
    return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
  }
  @java.lang.Override
  public Builder toBuilder() {
    return this == DEFAULT_INSTANCE
        ? new Builder() : new Builder().mergeFrom(this);
  }

  @java.lang.Override
  protected Builder newBuilderForType(
      com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
    Builder builder = new Builder(parent);
    return builder;
  }
  /**
   * <pre>
   * [#next-free-field: 6]
   * </pre>
   *
   * Protobuf type {@code envoy.config.filter.http.squash.v2.Squash}
   */
  public static final class Builder extends
      com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
      // @@protoc_insertion_point(builder_implements:envoy.config.filter.http.squash.v2.Squash)
      io.envoyproxy.envoy.config.filter.http.squash.v2.SquashOrBuilder {
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return io.envoyproxy.envoy.config.filter.http.squash.v2.SquashProto.internal_static_envoy_config_filter_http_squash_v2_Squash_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return io.envoyproxy.envoy.config.filter.http.squash.v2.SquashProto.internal_static_envoy_config_filter_http_squash_v2_Squash_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              io.envoyproxy.envoy.config.filter.http.squash.v2.Squash.class, io.envoyproxy.envoy.config.filter.http.squash.v2.Squash.Builder.class);
    }

    // Construct using io.envoyproxy.envoy.config.filter.http.squash.v2.Squash.newBuilder()
    private Builder() {

    }

    private Builder(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      super(parent);

    }
    @java.lang.Override
    public Builder clear() {
      super.clear();
      bitField0_ = 0;
      cluster_ = "";
      attachmentTemplate_ = null;
      if (attachmentTemplateBuilder_ != null) {
        attachmentTemplateBuilder_.dispose();
        attachmentTemplateBuilder_ = null;
      }
      requestTimeout_ = null;
      if (requestTimeoutBuilder_ != null) {
        requestTimeoutBuilder_.dispose();
        requestTimeoutBuilder_ = null;
      }
      attachmentTimeout_ = null;
      if (attachmentTimeoutBuilder_ != null) {
        attachmentTimeoutBuilder_.dispose();
        attachmentTimeoutBuilder_ = null;
      }
      attachmentPollPeriod_ = null;
      if (attachmentPollPeriodBuilder_ != null) {
        attachmentPollPeriodBuilder_.dispose();
        attachmentPollPeriodBuilder_ = null;
      }
      return this;
    }

    @java.lang.Override
    public com.google.protobuf.Descriptors.Descriptor
        getDescriptorForType() {
      return io.envoyproxy.envoy.config.filter.http.squash.v2.SquashProto.internal_static_envoy_config_filter_http_squash_v2_Squash_descriptor;
    }

    @java.lang.Override
    public io.envoyproxy.envoy.config.filter.http.squash.v2.Squash getDefaultInstanceForType() {
      return io.envoyproxy.envoy.config.filter.http.squash.v2.Squash.getDefaultInstance();
    }

    @java.lang.Override
    public io.envoyproxy.envoy.config.filter.http.squash.v2.Squash build() {
      io.envoyproxy.envoy.config.filter.http.squash.v2.Squash result = buildPartial();
      if (!result.isInitialized()) {
        throw newUninitializedMessageException(result);
      }
      return result;
    }

    @java.lang.Override
    public io.envoyproxy.envoy.config.filter.http.squash.v2.Squash buildPartial() {
      io.envoyproxy.envoy.config.filter.http.squash.v2.Squash result = new io.envoyproxy.envoy.config.filter.http.squash.v2.Squash(this);
      if (bitField0_ != 0) { buildPartial0(result); }
      onBuilt();
      return result;
    }

    private void buildPartial0(io.envoyproxy.envoy.config.filter.http.squash.v2.Squash result) {
      int from_bitField0_ = bitField0_;
      if (((from_bitField0_ & 0x00000001) != 0)) {
        result.cluster_ = cluster_;
      }
      if (((from_bitField0_ & 0x00000002) != 0)) {
        result.attachmentTemplate_ = attachmentTemplateBuilder_ == null
            ? attachmentTemplate_
            : attachmentTemplateBuilder_.build();
      }
      if (((from_bitField0_ & 0x00000004) != 0)) {
        result.requestTimeout_ = requestTimeoutBuilder_ == null
            ? requestTimeout_
            : requestTimeoutBuilder_.build();
      }
      if (((from_bitField0_ & 0x00000008) != 0)) {
        result.attachmentTimeout_ = attachmentTimeoutBuilder_ == null
            ? attachmentTimeout_
            : attachmentTimeoutBuilder_.build();
      }
      if (((from_bitField0_ & 0x00000010) != 0)) {
        result.attachmentPollPeriod_ = attachmentPollPeriodBuilder_ == null
            ? attachmentPollPeriod_
            : attachmentPollPeriodBuilder_.build();
      }
    }

    @java.lang.Override
    public Builder clone() {
      return super.clone();
    }
    @java.lang.Override
    public Builder setField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        java.lang.Object value) {
      return super.setField(field, value);
    }
    @java.lang.Override
    public Builder clearField(
        com.google.protobuf.Descriptors.FieldDescriptor field) {
      return super.clearField(field);
    }
    @java.lang.Override
    public Builder clearOneof(
        com.google.protobuf.Descriptors.OneofDescriptor oneof) {
      return super.clearOneof(oneof);
    }
    @java.lang.Override
    public Builder setRepeatedField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        int index, java.lang.Object value) {
      return super.setRepeatedField(field, index, value);
    }
    @java.lang.Override
    public Builder addRepeatedField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        java.lang.Object value) {
      return super.addRepeatedField(field, value);
    }
    @java.lang.Override
    public Builder mergeFrom(com.google.protobuf.Message other) {
      if (other instanceof io.envoyproxy.envoy.config.filter.http.squash.v2.Squash) {
        return mergeFrom((io.envoyproxy.envoy.config.filter.http.squash.v2.Squash)other);
      } else {
        super.mergeFrom(other);
        return this;
      }
    }

    public Builder mergeFrom(io.envoyproxy.envoy.config.filter.http.squash.v2.Squash other) {
      if (other == io.envoyproxy.envoy.config.filter.http.squash.v2.Squash.getDefaultInstance()) return this;
      if (!other.getCluster().isEmpty()) {
        cluster_ = other.cluster_;
        bitField0_ |= 0x00000001;
        onChanged();
      }
      if (other.hasAttachmentTemplate()) {
        mergeAttachmentTemplate(other.getAttachmentTemplate());
      }
      if (other.hasRequestTimeout()) {
        mergeRequestTimeout(other.getRequestTimeout());
      }
      if (other.hasAttachmentTimeout()) {
        mergeAttachmentTimeout(other.getAttachmentTimeout());
      }
      if (other.hasAttachmentPollPeriod()) {
        mergeAttachmentPollPeriod(other.getAttachmentPollPeriod());
      }
      this.mergeUnknownFields(other.getUnknownFields());
      onChanged();
      return this;
    }

    @java.lang.Override
    public final boolean isInitialized() {
      return true;
    }

    @java.lang.Override
    public Builder mergeFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 10: {
              cluster_ = input.readStringRequireUtf8();
              bitField0_ |= 0x00000001;
              break;
            } // case 10
            case 18: {
              input.readMessage(
                  getAttachmentTemplateFieldBuilder().getBuilder(),
                  extensionRegistry);
              bitField0_ |= 0x00000002;
              break;
            } // case 18
            case 26: {
              input.readMessage(
                  getRequestTimeoutFieldBuilder().getBuilder(),
                  extensionRegistry);
              bitField0_ |= 0x00000004;
              break;
            } // case 26
            case 34: {
              input.readMessage(
                  getAttachmentTimeoutFieldBuilder().getBuilder(),
                  extensionRegistry);
              bitField0_ |= 0x00000008;
              break;
            } // case 34
            case 42: {
              input.readMessage(
                  getAttachmentPollPeriodFieldBuilder().getBuilder(),
                  extensionRegistry);
              bitField0_ |= 0x00000010;
              break;
            } // case 42
            default: {
              if (!super.parseUnknownField(input, extensionRegistry, tag)) {
                done = true; // was an endgroup tag
              }
              break;
            } // default:
          } // switch (tag)
        } // while (!done)
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.unwrapIOException();
      } finally {
        onChanged();
      } // finally
      return this;
    }
    private int bitField0_;

    private java.lang.Object cluster_ = "";
    /**
     * <pre>
     * The name of the cluster that hosts the Squash server.
     * </pre>
     *
     * <code>string cluster = 1 [(.validate.rules) = { ... }</code>
     * @return The cluster.
     */
    public java.lang.String getCluster() {
      java.lang.Object ref = cluster_;
      if (!(ref instanceof java.lang.String)) {
        com.google.protobuf.ByteString bs =
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        cluster_ = s;
        return s;
      } else {
        return (java.lang.String) ref;
      }
    }
    /**
     * <pre>
     * The name of the cluster that hosts the Squash server.
     * </pre>
     *
     * <code>string cluster = 1 [(.validate.rules) = { ... }</code>
     * @return The bytes for cluster.
     */
    public com.google.protobuf.ByteString
        getClusterBytes() {
      java.lang.Object ref = cluster_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        cluster_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }
    /**
     * <pre>
     * The name of the cluster that hosts the Squash server.
     * </pre>
     *
     * <code>string cluster = 1 [(.validate.rules) = { ... }</code>
     * @param value The cluster to set.
     * @return This builder for chaining.
     */
    public Builder setCluster(
        java.lang.String value) {
      if (value == null) { throw new NullPointerException(); }
      cluster_ = value;
      bitField0_ |= 0x00000001;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * The name of the cluster that hosts the Squash server.
     * </pre>
     *
     * <code>string cluster = 1 [(.validate.rules) = { ... }</code>
     * @return This builder for chaining.
     */
    public Builder clearCluster() {
      cluster_ = getDefaultInstance().getCluster();
      bitField0_ = (bitField0_ & ~0x00000001);
      onChanged();
      return this;
    }
    /**
     * <pre>
     * The name of the cluster that hosts the Squash server.
     * </pre>
     *
     * <code>string cluster = 1 [(.validate.rules) = { ... }</code>
     * @param value The bytes for cluster to set.
     * @return This builder for chaining.
     */
    public Builder setClusterBytes(
        com.google.protobuf.ByteString value) {
      if (value == null) { throw new NullPointerException(); }
      checkByteStringIsUtf8(value);
      cluster_ = value;
      bitField0_ |= 0x00000001;
      onChanged();
      return this;
    }

    private com.google.protobuf.Struct attachmentTemplate_;
    private com.google.protobuf.SingleFieldBuilderV3<
        com.google.protobuf.Struct, com.google.protobuf.Struct.Builder, com.google.protobuf.StructOrBuilder> attachmentTemplateBuilder_;
    /**
     * <pre>
     * When the filter requests the Squash server to create a DebugAttachment, it will use this
     * structure as template for the body of the request. It can contain reference to environment
     * variables in the form of '{{ ENV_VAR_NAME }}'. These can be used to provide the Squash server
     * with more information to find the process to attach the debugger to. For example, in a
     * Istio/k8s environment, this will contain information on the pod:
     * .. code-block:: json
     *  {
     *    "spec": {
     *      "attachment": {
     *        "pod": "{{ POD_NAME }}",
     *        "namespace": "{{ POD_NAMESPACE }}"
     *      },
     *      "match_request": true
     *    }
     *  }
     * (where POD_NAME, POD_NAMESPACE are configured in the pod via the Downward API)
     * </pre>
     *
     * <code>.google.protobuf.Struct attachment_template = 2;</code>
     * @return Whether the attachmentTemplate field is set.
     */
    public boolean hasAttachmentTemplate() {
      return ((bitField0_ & 0x00000002) != 0);
    }
    /**
     * <pre>
     * When the filter requests the Squash server to create a DebugAttachment, it will use this
     * structure as template for the body of the request. It can contain reference to environment
     * variables in the form of '{{ ENV_VAR_NAME }}'. These can be used to provide the Squash server
     * with more information to find the process to attach the debugger to. For example, in a
     * Istio/k8s environment, this will contain information on the pod:
     * .. code-block:: json
     *  {
     *    "spec": {
     *      "attachment": {
     *        "pod": "{{ POD_NAME }}",
     *        "namespace": "{{ POD_NAMESPACE }}"
     *      },
     *      "match_request": true
     *    }
     *  }
     * (where POD_NAME, POD_NAMESPACE are configured in the pod via the Downward API)
     * </pre>
     *
     * <code>.google.protobuf.Struct attachment_template = 2;</code>
     * @return The attachmentTemplate.
     */
    public com.google.protobuf.Struct getAttachmentTemplate() {
      if (attachmentTemplateBuilder_ == null) {
        return attachmentTemplate_ == null ? com.google.protobuf.Struct.getDefaultInstance() : attachmentTemplate_;
      } else {
        return attachmentTemplateBuilder_.getMessage();
      }
    }
    /**
     * <pre>
     * When the filter requests the Squash server to create a DebugAttachment, it will use this
     * structure as template for the body of the request. It can contain reference to environment
     * variables in the form of '{{ ENV_VAR_NAME }}'. These can be used to provide the Squash server
     * with more information to find the process to attach the debugger to. For example, in a
     * Istio/k8s environment, this will contain information on the pod:
     * .. code-block:: json
     *  {
     *    "spec": {
     *      "attachment": {
     *        "pod": "{{ POD_NAME }}",
     *        "namespace": "{{ POD_NAMESPACE }}"
     *      },
     *      "match_request": true
     *    }
     *  }
     * (where POD_NAME, POD_NAMESPACE are configured in the pod via the Downward API)
     * </pre>
     *
     * <code>.google.protobuf.Struct attachment_template = 2;</code>
     */
    public Builder setAttachmentTemplate(com.google.protobuf.Struct value) {
      if (attachmentTemplateBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        attachmentTemplate_ = value;
      } else {
        attachmentTemplateBuilder_.setMessage(value);
      }
      bitField0_ |= 0x00000002;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * When the filter requests the Squash server to create a DebugAttachment, it will use this
     * structure as template for the body of the request. It can contain reference to environment
     * variables in the form of '{{ ENV_VAR_NAME }}'. These can be used to provide the Squash server
     * with more information to find the process to attach the debugger to. For example, in a
     * Istio/k8s environment, this will contain information on the pod:
     * .. code-block:: json
     *  {
     *    "spec": {
     *      "attachment": {
     *        "pod": "{{ POD_NAME }}",
     *        "namespace": "{{ POD_NAMESPACE }}"
     *      },
     *      "match_request": true
     *    }
     *  }
     * (where POD_NAME, POD_NAMESPACE are configured in the pod via the Downward API)
     * </pre>
     *
     * <code>.google.protobuf.Struct attachment_template = 2;</code>
     */
    public Builder setAttachmentTemplate(
        com.google.protobuf.Struct.Builder builderForValue) {
      if (attachmentTemplateBuilder_ == null) {
        attachmentTemplate_ = builderForValue.build();
      } else {
        attachmentTemplateBuilder_.setMessage(builderForValue.build());
      }
      bitField0_ |= 0x00000002;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * When the filter requests the Squash server to create a DebugAttachment, it will use this
     * structure as template for the body of the request. It can contain reference to environment
     * variables in the form of '{{ ENV_VAR_NAME }}'. These can be used to provide the Squash server
     * with more information to find the process to attach the debugger to. For example, in a
     * Istio/k8s environment, this will contain information on the pod:
     * .. code-block:: json
     *  {
     *    "spec": {
     *      "attachment": {
     *        "pod": "{{ POD_NAME }}",
     *        "namespace": "{{ POD_NAMESPACE }}"
     *      },
     *      "match_request": true
     *    }
     *  }
     * (where POD_NAME, POD_NAMESPACE are configured in the pod via the Downward API)
     * </pre>
     *
     * <code>.google.protobuf.Struct attachment_template = 2;</code>
     */
    public Builder mergeAttachmentTemplate(com.google.protobuf.Struct value) {
      if (attachmentTemplateBuilder_ == null) {
        if (((bitField0_ & 0x00000002) != 0) &&
          attachmentTemplate_ != null &&
          attachmentTemplate_ != com.google.protobuf.Struct.getDefaultInstance()) {
          getAttachmentTemplateBuilder().mergeFrom(value);
        } else {
          attachmentTemplate_ = value;
        }
      } else {
        attachmentTemplateBuilder_.mergeFrom(value);
      }
      bitField0_ |= 0x00000002;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * When the filter requests the Squash server to create a DebugAttachment, it will use this
     * structure as template for the body of the request. It can contain reference to environment
     * variables in the form of '{{ ENV_VAR_NAME }}'. These can be used to provide the Squash server
     * with more information to find the process to attach the debugger to. For example, in a
     * Istio/k8s environment, this will contain information on the pod:
     * .. code-block:: json
     *  {
     *    "spec": {
     *      "attachment": {
     *        "pod": "{{ POD_NAME }}",
     *        "namespace": "{{ POD_NAMESPACE }}"
     *      },
     *      "match_request": true
     *    }
     *  }
     * (where POD_NAME, POD_NAMESPACE are configured in the pod via the Downward API)
     * </pre>
     *
     * <code>.google.protobuf.Struct attachment_template = 2;</code>
     */
    public Builder clearAttachmentTemplate() {
      bitField0_ = (bitField0_ & ~0x00000002);
      attachmentTemplate_ = null;
      if (attachmentTemplateBuilder_ != null) {
        attachmentTemplateBuilder_.dispose();
        attachmentTemplateBuilder_ = null;
      }
      onChanged();
      return this;
    }
    /**
     * <pre>
     * When the filter requests the Squash server to create a DebugAttachment, it will use this
     * structure as template for the body of the request. It can contain reference to environment
     * variables in the form of '{{ ENV_VAR_NAME }}'. These can be used to provide the Squash server
     * with more information to find the process to attach the debugger to. For example, in a
     * Istio/k8s environment, this will contain information on the pod:
     * .. code-block:: json
     *  {
     *    "spec": {
     *      "attachment": {
     *        "pod": "{{ POD_NAME }}",
     *        "namespace": "{{ POD_NAMESPACE }}"
     *      },
     *      "match_request": true
     *    }
     *  }
     * (where POD_NAME, POD_NAMESPACE are configured in the pod via the Downward API)
     * </pre>
     *
     * <code>.google.protobuf.Struct attachment_template = 2;</code>
     */
    public com.google.protobuf.Struct.Builder getAttachmentTemplateBuilder() {
      bitField0_ |= 0x00000002;
      onChanged();
      return getAttachmentTemplateFieldBuilder().getBuilder();
    }
    /**
     * <pre>
     * When the filter requests the Squash server to create a DebugAttachment, it will use this
     * structure as template for the body of the request. It can contain reference to environment
     * variables in the form of '{{ ENV_VAR_NAME }}'. These can be used to provide the Squash server
     * with more information to find the process to attach the debugger to. For example, in a
     * Istio/k8s environment, this will contain information on the pod:
     * .. code-block:: json
     *  {
     *    "spec": {
     *      "attachment": {
     *        "pod": "{{ POD_NAME }}",
     *        "namespace": "{{ POD_NAMESPACE }}"
     *      },
     *      "match_request": true
     *    }
     *  }
     * (where POD_NAME, POD_NAMESPACE are configured in the pod via the Downward API)
     * </pre>
     *
     * <code>.google.protobuf.Struct attachment_template = 2;</code>
     */
    public com.google.protobuf.StructOrBuilder getAttachmentTemplateOrBuilder() {
      if (attachmentTemplateBuilder_ != null) {
        return attachmentTemplateBuilder_.getMessageOrBuilder();
      } else {
        return attachmentTemplate_ == null ?
            com.google.protobuf.Struct.getDefaultInstance() : attachmentTemplate_;
      }
    }
    /**
     * <pre>
     * When the filter requests the Squash server to create a DebugAttachment, it will use this
     * structure as template for the body of the request. It can contain reference to environment
     * variables in the form of '{{ ENV_VAR_NAME }}'. These can be used to provide the Squash server
     * with more information to find the process to attach the debugger to. For example, in a
     * Istio/k8s environment, this will contain information on the pod:
     * .. code-block:: json
     *  {
     *    "spec": {
     *      "attachment": {
     *        "pod": "{{ POD_NAME }}",
     *        "namespace": "{{ POD_NAMESPACE }}"
     *      },
     *      "match_request": true
     *    }
     *  }
     * (where POD_NAME, POD_NAMESPACE are configured in the pod via the Downward API)
     * </pre>
     *
     * <code>.google.protobuf.Struct attachment_template = 2;</code>
     */
    private com.google.protobuf.SingleFieldBuilderV3<
        com.google.protobuf.Struct, com.google.protobuf.Struct.Builder, com.google.protobuf.StructOrBuilder> 
        getAttachmentTemplateFieldBuilder() {
      if (attachmentTemplateBuilder_ == null) {
        attachmentTemplateBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
            com.google.protobuf.Struct, com.google.protobuf.Struct.Builder, com.google.protobuf.StructOrBuilder>(
                getAttachmentTemplate(),
                getParentForChildren(),
                isClean());
        attachmentTemplate_ = null;
      }
      return attachmentTemplateBuilder_;
    }

    private com.google.protobuf.Duration requestTimeout_;
    private com.google.protobuf.SingleFieldBuilderV3<
        com.google.protobuf.Duration, com.google.protobuf.Duration.Builder, com.google.protobuf.DurationOrBuilder> requestTimeoutBuilder_;
    /**
     * <pre>
     * The timeout for individual requests sent to the Squash cluster. Defaults to 1 second.
     * </pre>
     *
     * <code>.google.protobuf.Duration request_timeout = 3;</code>
     * @return Whether the requestTimeout field is set.
     */
    public boolean hasRequestTimeout() {
      return ((bitField0_ & 0x00000004) != 0);
    }
    /**
     * <pre>
     * The timeout for individual requests sent to the Squash cluster. Defaults to 1 second.
     * </pre>
     *
     * <code>.google.protobuf.Duration request_timeout = 3;</code>
     * @return The requestTimeout.
     */
    public com.google.protobuf.Duration getRequestTimeout() {
      if (requestTimeoutBuilder_ == null) {
        return requestTimeout_ == null ? com.google.protobuf.Duration.getDefaultInstance() : requestTimeout_;
      } else {
        return requestTimeoutBuilder_.getMessage();
      }
    }
    /**
     * <pre>
     * The timeout for individual requests sent to the Squash cluster. Defaults to 1 second.
     * </pre>
     *
     * <code>.google.protobuf.Duration request_timeout = 3;</code>
     */
    public Builder setRequestTimeout(com.google.protobuf.Duration value) {
      if (requestTimeoutBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        requestTimeout_ = value;
      } else {
        requestTimeoutBuilder_.setMessage(value);
      }
      bitField0_ |= 0x00000004;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * The timeout for individual requests sent to the Squash cluster. Defaults to 1 second.
     * </pre>
     *
     * <code>.google.protobuf.Duration request_timeout = 3;</code>
     */
    public Builder setRequestTimeout(
        com.google.protobuf.Duration.Builder builderForValue) {
      if (requestTimeoutBuilder_ == null) {
        requestTimeout_ = builderForValue.build();
      } else {
        requestTimeoutBuilder_.setMessage(builderForValue.build());
      }
      bitField0_ |= 0x00000004;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * The timeout for individual requests sent to the Squash cluster. Defaults to 1 second.
     * </pre>
     *
     * <code>.google.protobuf.Duration request_timeout = 3;</code>
     */
    public Builder mergeRequestTimeout(com.google.protobuf.Duration value) {
      if (requestTimeoutBuilder_ == null) {
        if (((bitField0_ & 0x00000004) != 0) &&
          requestTimeout_ != null &&
          requestTimeout_ != com.google.protobuf.Duration.getDefaultInstance()) {
          getRequestTimeoutBuilder().mergeFrom(value);
        } else {
          requestTimeout_ = value;
        }
      } else {
        requestTimeoutBuilder_.mergeFrom(value);
      }
      bitField0_ |= 0x00000004;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * The timeout for individual requests sent to the Squash cluster. Defaults to 1 second.
     * </pre>
     *
     * <code>.google.protobuf.Duration request_timeout = 3;</code>
     */
    public Builder clearRequestTimeout() {
      bitField0_ = (bitField0_ & ~0x00000004);
      requestTimeout_ = null;
      if (requestTimeoutBuilder_ != null) {
        requestTimeoutBuilder_.dispose();
        requestTimeoutBuilder_ = null;
      }
      onChanged();
      return this;
    }
    /**
     * <pre>
     * The timeout for individual requests sent to the Squash cluster. Defaults to 1 second.
     * </pre>
     *
     * <code>.google.protobuf.Duration request_timeout = 3;</code>
     */
    public com.google.protobuf.Duration.Builder getRequestTimeoutBuilder() {
      bitField0_ |= 0x00000004;
      onChanged();
      return getRequestTimeoutFieldBuilder().getBuilder();
    }
    /**
     * <pre>
     * The timeout for individual requests sent to the Squash cluster. Defaults to 1 second.
     * </pre>
     *
     * <code>.google.protobuf.Duration request_timeout = 3;</code>
     */
    public com.google.protobuf.DurationOrBuilder getRequestTimeoutOrBuilder() {
      if (requestTimeoutBuilder_ != null) {
        return requestTimeoutBuilder_.getMessageOrBuilder();
      } else {
        return requestTimeout_ == null ?
            com.google.protobuf.Duration.getDefaultInstance() : requestTimeout_;
      }
    }
    /**
     * <pre>
     * The timeout for individual requests sent to the Squash cluster. Defaults to 1 second.
     * </pre>
     *
     * <code>.google.protobuf.Duration request_timeout = 3;</code>
     */
    private com.google.protobuf.SingleFieldBuilderV3<
        com.google.protobuf.Duration, com.google.protobuf.Duration.Builder, com.google.protobuf.DurationOrBuilder> 
        getRequestTimeoutFieldBuilder() {
      if (requestTimeoutBuilder_ == null) {
        requestTimeoutBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
            com.google.protobuf.Duration, com.google.protobuf.Duration.Builder, com.google.protobuf.DurationOrBuilder>(
                getRequestTimeout(),
                getParentForChildren(),
                isClean());
        requestTimeout_ = null;
      }
      return requestTimeoutBuilder_;
    }

    private com.google.protobuf.Duration attachmentTimeout_;
    private com.google.protobuf.SingleFieldBuilderV3<
        com.google.protobuf.Duration, com.google.protobuf.Duration.Builder, com.google.protobuf.DurationOrBuilder> attachmentTimeoutBuilder_;
    /**
     * <pre>
     * The total timeout Squash will delay a request and wait for it to be attached. Defaults to 60
     * seconds.
     * </pre>
     *
     * <code>.google.protobuf.Duration attachment_timeout = 4;</code>
     * @return Whether the attachmentTimeout field is set.
     */
    public boolean hasAttachmentTimeout() {
      return ((bitField0_ & 0x00000008) != 0);
    }
    /**
     * <pre>
     * The total timeout Squash will delay a request and wait for it to be attached. Defaults to 60
     * seconds.
     * </pre>
     *
     * <code>.google.protobuf.Duration attachment_timeout = 4;</code>
     * @return The attachmentTimeout.
     */
    public com.google.protobuf.Duration getAttachmentTimeout() {
      if (attachmentTimeoutBuilder_ == null) {
        return attachmentTimeout_ == null ? com.google.protobuf.Duration.getDefaultInstance() : attachmentTimeout_;
      } else {
        return attachmentTimeoutBuilder_.getMessage();
      }
    }
    /**
     * <pre>
     * The total timeout Squash will delay a request and wait for it to be attached. Defaults to 60
     * seconds.
     * </pre>
     *
     * <code>.google.protobuf.Duration attachment_timeout = 4;</code>
     */
    public Builder setAttachmentTimeout(com.google.protobuf.Duration value) {
      if (attachmentTimeoutBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        attachmentTimeout_ = value;
      } else {
        attachmentTimeoutBuilder_.setMessage(value);
      }
      bitField0_ |= 0x00000008;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * The total timeout Squash will delay a request and wait for it to be attached. Defaults to 60
     * seconds.
     * </pre>
     *
     * <code>.google.protobuf.Duration attachment_timeout = 4;</code>
     */
    public Builder setAttachmentTimeout(
        com.google.protobuf.Duration.Builder builderForValue) {
      if (attachmentTimeoutBuilder_ == null) {
        attachmentTimeout_ = builderForValue.build();
      } else {
        attachmentTimeoutBuilder_.setMessage(builderForValue.build());
      }
      bitField0_ |= 0x00000008;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * The total timeout Squash will delay a request and wait for it to be attached. Defaults to 60
     * seconds.
     * </pre>
     *
     * <code>.google.protobuf.Duration attachment_timeout = 4;</code>
     */
    public Builder mergeAttachmentTimeout(com.google.protobuf.Duration value) {
      if (attachmentTimeoutBuilder_ == null) {
        if (((bitField0_ & 0x00000008) != 0) &&
          attachmentTimeout_ != null &&
          attachmentTimeout_ != com.google.protobuf.Duration.getDefaultInstance()) {
          getAttachmentTimeoutBuilder().mergeFrom(value);
        } else {
          attachmentTimeout_ = value;
        }
      } else {
        attachmentTimeoutBuilder_.mergeFrom(value);
      }
      bitField0_ |= 0x00000008;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * The total timeout Squash will delay a request and wait for it to be attached. Defaults to 60
     * seconds.
     * </pre>
     *
     * <code>.google.protobuf.Duration attachment_timeout = 4;</code>
     */
    public Builder clearAttachmentTimeout() {
      bitField0_ = (bitField0_ & ~0x00000008);
      attachmentTimeout_ = null;
      if (attachmentTimeoutBuilder_ != null) {
        attachmentTimeoutBuilder_.dispose();
        attachmentTimeoutBuilder_ = null;
      }
      onChanged();
      return this;
    }
    /**
     * <pre>
     * The total timeout Squash will delay a request and wait for it to be attached. Defaults to 60
     * seconds.
     * </pre>
     *
     * <code>.google.protobuf.Duration attachment_timeout = 4;</code>
     */
    public com.google.protobuf.Duration.Builder getAttachmentTimeoutBuilder() {
      bitField0_ |= 0x00000008;
      onChanged();
      return getAttachmentTimeoutFieldBuilder().getBuilder();
    }
    /**
     * <pre>
     * The total timeout Squash will delay a request and wait for it to be attached. Defaults to 60
     * seconds.
     * </pre>
     *
     * <code>.google.protobuf.Duration attachment_timeout = 4;</code>
     */
    public com.google.protobuf.DurationOrBuilder getAttachmentTimeoutOrBuilder() {
      if (attachmentTimeoutBuilder_ != null) {
        return attachmentTimeoutBuilder_.getMessageOrBuilder();
      } else {
        return attachmentTimeout_ == null ?
            com.google.protobuf.Duration.getDefaultInstance() : attachmentTimeout_;
      }
    }
    /**
     * <pre>
     * The total timeout Squash will delay a request and wait for it to be attached. Defaults to 60
     * seconds.
     * </pre>
     *
     * <code>.google.protobuf.Duration attachment_timeout = 4;</code>
     */
    private com.google.protobuf.SingleFieldBuilderV3<
        com.google.protobuf.Duration, com.google.protobuf.Duration.Builder, com.google.protobuf.DurationOrBuilder> 
        getAttachmentTimeoutFieldBuilder() {
      if (attachmentTimeoutBuilder_ == null) {
        attachmentTimeoutBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
            com.google.protobuf.Duration, com.google.protobuf.Duration.Builder, com.google.protobuf.DurationOrBuilder>(
                getAttachmentTimeout(),
                getParentForChildren(),
                isClean());
        attachmentTimeout_ = null;
      }
      return attachmentTimeoutBuilder_;
    }

    private com.google.protobuf.Duration attachmentPollPeriod_;
    private com.google.protobuf.SingleFieldBuilderV3<
        com.google.protobuf.Duration, com.google.protobuf.Duration.Builder, com.google.protobuf.DurationOrBuilder> attachmentPollPeriodBuilder_;
    /**
     * <pre>
     * Amount of time to poll for the status of the attachment object in the Squash server
     * (to check if has been attached). Defaults to 1 second.
     * </pre>
     *
     * <code>.google.protobuf.Duration attachment_poll_period = 5;</code>
     * @return Whether the attachmentPollPeriod field is set.
     */
    public boolean hasAttachmentPollPeriod() {
      return ((bitField0_ & 0x00000010) != 0);
    }
    /**
     * <pre>
     * Amount of time to poll for the status of the attachment object in the Squash server
     * (to check if has been attached). Defaults to 1 second.
     * </pre>
     *
     * <code>.google.protobuf.Duration attachment_poll_period = 5;</code>
     * @return The attachmentPollPeriod.
     */
    public com.google.protobuf.Duration getAttachmentPollPeriod() {
      if (attachmentPollPeriodBuilder_ == null) {
        return attachmentPollPeriod_ == null ? com.google.protobuf.Duration.getDefaultInstance() : attachmentPollPeriod_;
      } else {
        return attachmentPollPeriodBuilder_.getMessage();
      }
    }
    /**
     * <pre>
     * Amount of time to poll for the status of the attachment object in the Squash server
     * (to check if has been attached). Defaults to 1 second.
     * </pre>
     *
     * <code>.google.protobuf.Duration attachment_poll_period = 5;</code>
     */
    public Builder setAttachmentPollPeriod(com.google.protobuf.Duration value) {
      if (attachmentPollPeriodBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        attachmentPollPeriod_ = value;
      } else {
        attachmentPollPeriodBuilder_.setMessage(value);
      }
      bitField0_ |= 0x00000010;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * Amount of time to poll for the status of the attachment object in the Squash server
     * (to check if has been attached). Defaults to 1 second.
     * </pre>
     *
     * <code>.google.protobuf.Duration attachment_poll_period = 5;</code>
     */
    public Builder setAttachmentPollPeriod(
        com.google.protobuf.Duration.Builder builderForValue) {
      if (attachmentPollPeriodBuilder_ == null) {
        attachmentPollPeriod_ = builderForValue.build();
      } else {
        attachmentPollPeriodBuilder_.setMessage(builderForValue.build());
      }
      bitField0_ |= 0x00000010;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * Amount of time to poll for the status of the attachment object in the Squash server
     * (to check if has been attached). Defaults to 1 second.
     * </pre>
     *
     * <code>.google.protobuf.Duration attachment_poll_period = 5;</code>
     */
    public Builder mergeAttachmentPollPeriod(com.google.protobuf.Duration value) {
      if (attachmentPollPeriodBuilder_ == null) {
        if (((bitField0_ & 0x00000010) != 0) &&
          attachmentPollPeriod_ != null &&
          attachmentPollPeriod_ != com.google.protobuf.Duration.getDefaultInstance()) {
          getAttachmentPollPeriodBuilder().mergeFrom(value);
        } else {
          attachmentPollPeriod_ = value;
        }
      } else {
        attachmentPollPeriodBuilder_.mergeFrom(value);
      }
      bitField0_ |= 0x00000010;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * Amount of time to poll for the status of the attachment object in the Squash server
     * (to check if has been attached). Defaults to 1 second.
     * </pre>
     *
     * <code>.google.protobuf.Duration attachment_poll_period = 5;</code>
     */
    public Builder clearAttachmentPollPeriod() {
      bitField0_ = (bitField0_ & ~0x00000010);
      attachmentPollPeriod_ = null;
      if (attachmentPollPeriodBuilder_ != null) {
        attachmentPollPeriodBuilder_.dispose();
        attachmentPollPeriodBuilder_ = null;
      }
      onChanged();
      return this;
    }
    /**
     * <pre>
     * Amount of time to poll for the status of the attachment object in the Squash server
     * (to check if has been attached). Defaults to 1 second.
     * </pre>
     *
     * <code>.google.protobuf.Duration attachment_poll_period = 5;</code>
     */
    public com.google.protobuf.Duration.Builder getAttachmentPollPeriodBuilder() {
      bitField0_ |= 0x00000010;
      onChanged();
      return getAttachmentPollPeriodFieldBuilder().getBuilder();
    }
    /**
     * <pre>
     * Amount of time to poll for the status of the attachment object in the Squash server
     * (to check if has been attached). Defaults to 1 second.
     * </pre>
     *
     * <code>.google.protobuf.Duration attachment_poll_period = 5;</code>
     */
    public com.google.protobuf.DurationOrBuilder getAttachmentPollPeriodOrBuilder() {
      if (attachmentPollPeriodBuilder_ != null) {
        return attachmentPollPeriodBuilder_.getMessageOrBuilder();
      } else {
        return attachmentPollPeriod_ == null ?
            com.google.protobuf.Duration.getDefaultInstance() : attachmentPollPeriod_;
      }
    }
    /**
     * <pre>
     * Amount of time to poll for the status of the attachment object in the Squash server
     * (to check if has been attached). Defaults to 1 second.
     * </pre>
     *
     * <code>.google.protobuf.Duration attachment_poll_period = 5;</code>
     */
    private com.google.protobuf.SingleFieldBuilderV3<
        com.google.protobuf.Duration, com.google.protobuf.Duration.Builder, com.google.protobuf.DurationOrBuilder> 
        getAttachmentPollPeriodFieldBuilder() {
      if (attachmentPollPeriodBuilder_ == null) {
        attachmentPollPeriodBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
            com.google.protobuf.Duration, com.google.protobuf.Duration.Builder, com.google.protobuf.DurationOrBuilder>(
                getAttachmentPollPeriod(),
                getParentForChildren(),
                isClean());
        attachmentPollPeriod_ = null;
      }
      return attachmentPollPeriodBuilder_;
    }
    @java.lang.Override
    public final Builder setUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return super.setUnknownFields(unknownFields);
    }

    @java.lang.Override
    public final Builder mergeUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return super.mergeUnknownFields(unknownFields);
    }


    // @@protoc_insertion_point(builder_scope:envoy.config.filter.http.squash.v2.Squash)
  }

  // @@protoc_insertion_point(class_scope:envoy.config.filter.http.squash.v2.Squash)
  private static final io.envoyproxy.envoy.config.filter.http.squash.v2.Squash DEFAULT_INSTANCE;
  static {
    DEFAULT_INSTANCE = new io.envoyproxy.envoy.config.filter.http.squash.v2.Squash();
  }

  public static io.envoyproxy.envoy.config.filter.http.squash.v2.Squash getDefaultInstance() {
    return DEFAULT_INSTANCE;
  }

  private static final com.google.protobuf.Parser<Squash>
      PARSER = new com.google.protobuf.AbstractParser<Squash>() {
    @java.lang.Override
    public Squash parsePartialFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      Builder builder = newBuilder();
      try {
        builder.mergeFrom(input, extensionRegistry);
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(builder.buildPartial());
      } catch (com.google.protobuf.UninitializedMessageException e) {
        throw e.asInvalidProtocolBufferException().setUnfinishedMessage(builder.buildPartial());
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(e)
            .setUnfinishedMessage(builder.buildPartial());
      }
      return builder.buildPartial();
    }
  };

  public static com.google.protobuf.Parser<Squash> parser() {
    return PARSER;
  }

  @java.lang.Override
  public com.google.protobuf.Parser<Squash> getParserForType() {
    return PARSER;
  }

  @java.lang.Override
  public io.envoyproxy.envoy.config.filter.http.squash.v2.Squash getDefaultInstanceForType() {
    return DEFAULT_INSTANCE;
  }

}

