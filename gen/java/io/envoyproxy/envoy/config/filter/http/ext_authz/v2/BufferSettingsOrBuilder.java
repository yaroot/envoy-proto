// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: envoy/config/filter/http/ext_authz/v2/ext_authz.proto

package io.envoyproxy.envoy.config.filter.http.ext_authz.v2;

public interface BufferSettingsOrBuilder extends
    // @@protoc_insertion_point(interface_extends:envoy.config.filter.http.ext_authz.v2.BufferSettings)
    com.google.protobuf.MessageOrBuilder {

  /**
   * <pre>
   * Sets the maximum size of a message body that the filter will hold in memory. Envoy will return
   * *HTTP 413* and will *not* initiate the authorization process when buffer reaches the number
   * set in this field. Note that this setting will have precedence over :ref:`failure_mode_allow
   * &lt;envoy_api_field_config.filter.http.ext_authz.v2.ExtAuthz.failure_mode_allow&gt;`.
   * </pre>
   *
   * <code>uint32 max_request_bytes = 1 [(.validate.rules) = { ... }</code>
   * @return The maxRequestBytes.
   */
  int getMaxRequestBytes();

  /**
   * <pre>
   * When this field is true, Envoy will buffer the message until *max_request_bytes* is reached.
   * The authorization request will be dispatched and no 413 HTTP error will be returned by the
   * filter.
   * </pre>
   *
   * <code>bool allow_partial_message = 2;</code>
   * @return The allowPartialMessage.
   */
  boolean getAllowPartialMessage();
}
