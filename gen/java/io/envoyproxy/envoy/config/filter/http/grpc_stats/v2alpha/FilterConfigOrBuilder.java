// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: envoy/config/filter/http/grpc_stats/v2alpha/config.proto

package io.envoyproxy.envoy.config.filter.http.grpc_stats.v2alpha;

public interface FilterConfigOrBuilder extends
    // @@protoc_insertion_point(interface_extends:envoy.config.filter.http.grpc_stats.v2alpha.FilterConfig)
    com.google.protobuf.MessageOrBuilder {

  /**
   * <pre>
   * If true, the filter maintains a filter state object with the request and response message
   * counts.
   * </pre>
   *
   * <code>bool emit_filter_state = 1;</code>
   * @return The emitFilterState.
   */
  boolean getEmitFilterState();

  /**
   * <pre>
   * If set, specifies an allowlist of service/methods that will have individual stats
   * emitted for them. Any call that does not match the allowlist will be counted
   * in a stat with no method specifier: `cluster.&lt;name&gt;.grpc.*`.
   * </pre>
   *
   * <code>.envoy.api.v2.core.GrpcMethodList individual_method_stats_allowlist = 2;</code>
   * @return Whether the individualMethodStatsAllowlist field is set.
   */
  boolean hasIndividualMethodStatsAllowlist();
  /**
   * <pre>
   * If set, specifies an allowlist of service/methods that will have individual stats
   * emitted for them. Any call that does not match the allowlist will be counted
   * in a stat with no method specifier: `cluster.&lt;name&gt;.grpc.*`.
   * </pre>
   *
   * <code>.envoy.api.v2.core.GrpcMethodList individual_method_stats_allowlist = 2;</code>
   * @return The individualMethodStatsAllowlist.
   */
  io.envoyproxy.envoy.api.v2.core.GrpcMethodList getIndividualMethodStatsAllowlist();
  /**
   * <pre>
   * If set, specifies an allowlist of service/methods that will have individual stats
   * emitted for them. Any call that does not match the allowlist will be counted
   * in a stat with no method specifier: `cluster.&lt;name&gt;.grpc.*`.
   * </pre>
   *
   * <code>.envoy.api.v2.core.GrpcMethodList individual_method_stats_allowlist = 2;</code>
   */
  io.envoyproxy.envoy.api.v2.core.GrpcMethodListOrBuilder getIndividualMethodStatsAllowlistOrBuilder();

  /**
   * <pre>
   * If set to true, emit stats for all service/method names.
   * If set to false, emit stats for all service/message types to the same stats without including
   * the service/method in the name, with prefix `cluster.&lt;name&gt;.grpc`. This can be useful if
   * service/method granularity is not needed, or if each cluster only receives a single method.
   * .. attention::
   *   This option is only safe if all clients are trusted. If this option is enabled
   *   with untrusted clients, the clients could cause unbounded growth in the number of stats in
   *   Envoy, using unbounded memory and potentially slowing down stats pipelines.
   * .. attention::
   *   If neither `individual_method_stats_allowlist` nor `stats_for_all_methods` is set, the
   *   behavior will default to `stats_for_all_methods=false`. This default value is changed due
   *   to the previous value being deprecated. This behavior can be changed with runtime override
   *   `envoy.deprecated_features.grpc_stats_filter_enable_stats_for_all_methods_by_default`.
   * </pre>
   *
   * <code>.google.protobuf.BoolValue stats_for_all_methods = 3;</code>
   * @return Whether the statsForAllMethods field is set.
   */
  boolean hasStatsForAllMethods();
  /**
   * <pre>
   * If set to true, emit stats for all service/method names.
   * If set to false, emit stats for all service/message types to the same stats without including
   * the service/method in the name, with prefix `cluster.&lt;name&gt;.grpc`. This can be useful if
   * service/method granularity is not needed, or if each cluster only receives a single method.
   * .. attention::
   *   This option is only safe if all clients are trusted. If this option is enabled
   *   with untrusted clients, the clients could cause unbounded growth in the number of stats in
   *   Envoy, using unbounded memory and potentially slowing down stats pipelines.
   * .. attention::
   *   If neither `individual_method_stats_allowlist` nor `stats_for_all_methods` is set, the
   *   behavior will default to `stats_for_all_methods=false`. This default value is changed due
   *   to the previous value being deprecated. This behavior can be changed with runtime override
   *   `envoy.deprecated_features.grpc_stats_filter_enable_stats_for_all_methods_by_default`.
   * </pre>
   *
   * <code>.google.protobuf.BoolValue stats_for_all_methods = 3;</code>
   * @return The statsForAllMethods.
   */
  com.google.protobuf.BoolValue getStatsForAllMethods();
  /**
   * <pre>
   * If set to true, emit stats for all service/method names.
   * If set to false, emit stats for all service/message types to the same stats without including
   * the service/method in the name, with prefix `cluster.&lt;name&gt;.grpc`. This can be useful if
   * service/method granularity is not needed, or if each cluster only receives a single method.
   * .. attention::
   *   This option is only safe if all clients are trusted. If this option is enabled
   *   with untrusted clients, the clients could cause unbounded growth in the number of stats in
   *   Envoy, using unbounded memory and potentially slowing down stats pipelines.
   * .. attention::
   *   If neither `individual_method_stats_allowlist` nor `stats_for_all_methods` is set, the
   *   behavior will default to `stats_for_all_methods=false`. This default value is changed due
   *   to the previous value being deprecated. This behavior can be changed with runtime override
   *   `envoy.deprecated_features.grpc_stats_filter_enable_stats_for_all_methods_by_default`.
   * </pre>
   *
   * <code>.google.protobuf.BoolValue stats_for_all_methods = 3;</code>
   */
  com.google.protobuf.BoolValueOrBuilder getStatsForAllMethodsOrBuilder();

  public io.envoyproxy.envoy.config.filter.http.grpc_stats.v2alpha.FilterConfig.PerMethodStatSpecifierCase getPerMethodStatSpecifierCase();
}
