// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: envoy/config/filter/http/lua/v2/lua.proto

package io.envoyproxy.envoy.config.filter.http.lua.v2;

public final class LuaProto {
  private LuaProto() {}
  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistryLite registry) {
  }

  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistry registry) {
    registerAllExtensions(
        (com.google.protobuf.ExtensionRegistryLite) registry);
  }
  static final com.google.protobuf.Descriptors.Descriptor
    internal_static_envoy_config_filter_http_lua_v2_Lua_descriptor;
  static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_envoy_config_filter_http_lua_v2_Lua_fieldAccessorTable;

  public static com.google.protobuf.Descriptors.FileDescriptor
      getDescriptor() {
    return descriptor;
  }
  private static  com.google.protobuf.Descriptors.FileDescriptor
      descriptor;
  static {
    java.lang.String[] descriptorData = {
      "\n)envoy/config/filter/http/lua/v2/lua.pr" +
      "oto\022\037envoy.config.filter.http.lua.v2\032\036ud" +
      "pa/annotations/migrate.proto\032\035udpa/annot" +
      "ations/status.proto\032\027validate/validate.p" +
      "roto\"#\n\003Lua\022\034\n\013inline_code\030\001 \001(\tB\007\372B\004r\002 " +
      "\001B\275\001\n-io.envoyproxy.envoy.config.filter." +
      "http.lua.v2B\010LuaProtoP\001ZLgithub.com/envo" +
      "yproxy/go-control-plane/envoy/config/fil" +
      "ter/http/lua/v2;luav2\362\230\376\217\005&\022$envoy.exten" +
      "sions.filters.http.lua.v3\272\200\310\321\006\002\020\001b\006proto" +
      "3"
    };
    descriptor = com.google.protobuf.Descriptors.FileDescriptor
      .internalBuildGeneratedFileFrom(descriptorData,
        new com.google.protobuf.Descriptors.FileDescriptor[] {
          udpa.annotations.Migrate.getDescriptor(),
          udpa.annotations.Status.getDescriptor(),
          io.envoyproxy.pgv.validate.Validate.getDescriptor(),
        });
    internal_static_envoy_config_filter_http_lua_v2_Lua_descriptor =
      getDescriptor().getMessageTypes().get(0);
    internal_static_envoy_config_filter_http_lua_v2_Lua_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_envoy_config_filter_http_lua_v2_Lua_descriptor,
        new java.lang.String[] { "InlineCode", });
    com.google.protobuf.ExtensionRegistry registry =
        com.google.protobuf.ExtensionRegistry.newInstance();
    registry.add(udpa.annotations.Migrate.fileMigrate);
    registry.add(udpa.annotations.Status.fileStatus);
    registry.add(io.envoyproxy.pgv.validate.Validate.rules);
    com.google.protobuf.Descriptors.FileDescriptor
        .internalUpdateFileDescriptor(descriptor, registry);
    udpa.annotations.Migrate.getDescriptor();
    udpa.annotations.Status.getDescriptor();
    io.envoyproxy.pgv.validate.Validate.getDescriptor();
  }

  // @@protoc_insertion_point(outer_class_scope)
}
