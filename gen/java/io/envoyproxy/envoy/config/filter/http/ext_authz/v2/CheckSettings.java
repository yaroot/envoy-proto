// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: envoy/config/filter/http/ext_authz/v2/ext_authz.proto

package io.envoyproxy.envoy.config.filter.http.ext_authz.v2;

/**
 * <pre>
 * Extra settings for the check request. You can use this to provide extra context for the
 * external authorization server on specific virtual hosts &#92; routes. For example, adding a context
 * extension on the virtual host level can give the ext-authz server information on what virtual
 * host is used without needing to parse the host header. If CheckSettings is specified in multiple
 * per-filter-configs, they will be merged in order, and the result will be used.
 * </pre>
 *
 * Protobuf type {@code envoy.config.filter.http.ext_authz.v2.CheckSettings}
 */
public final class CheckSettings extends
    com.google.protobuf.GeneratedMessageV3 implements
    // @@protoc_insertion_point(message_implements:envoy.config.filter.http.ext_authz.v2.CheckSettings)
    CheckSettingsOrBuilder {
private static final long serialVersionUID = 0L;
  // Use CheckSettings.newBuilder() to construct.
  private CheckSettings(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
    super(builder);
  }
  private CheckSettings() {
  }

  @java.lang.Override
  @SuppressWarnings({"unused"})
  protected java.lang.Object newInstance(
      UnusedPrivateParameter unused) {
    return new CheckSettings();
  }

  @java.lang.Override
  public final com.google.protobuf.UnknownFieldSet
  getUnknownFields() {
    return this.unknownFields;
  }
  public static final com.google.protobuf.Descriptors.Descriptor
      getDescriptor() {
    return io.envoyproxy.envoy.config.filter.http.ext_authz.v2.ExtAuthzProto.internal_static_envoy_config_filter_http_ext_authz_v2_CheckSettings_descriptor;
  }

  @SuppressWarnings({"rawtypes"})
  @java.lang.Override
  protected com.google.protobuf.MapField internalGetMapField(
      int number) {
    switch (number) {
      case 1:
        return internalGetContextExtensions();
      default:
        throw new RuntimeException(
            "Invalid map field number: " + number);
    }
  }
  @java.lang.Override
  protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internalGetFieldAccessorTable() {
    return io.envoyproxy.envoy.config.filter.http.ext_authz.v2.ExtAuthzProto.internal_static_envoy_config_filter_http_ext_authz_v2_CheckSettings_fieldAccessorTable
        .ensureFieldAccessorsInitialized(
            io.envoyproxy.envoy.config.filter.http.ext_authz.v2.CheckSettings.class, io.envoyproxy.envoy.config.filter.http.ext_authz.v2.CheckSettings.Builder.class);
  }

  public static final int CONTEXT_EXTENSIONS_FIELD_NUMBER = 1;
  private static final class ContextExtensionsDefaultEntryHolder {
    static final com.google.protobuf.MapEntry<
        java.lang.String, java.lang.String> defaultEntry =
            com.google.protobuf.MapEntry
            .<java.lang.String, java.lang.String>newDefaultInstance(
                io.envoyproxy.envoy.config.filter.http.ext_authz.v2.ExtAuthzProto.internal_static_envoy_config_filter_http_ext_authz_v2_CheckSettings_ContextExtensionsEntry_descriptor, 
                com.google.protobuf.WireFormat.FieldType.STRING,
                "",
                com.google.protobuf.WireFormat.FieldType.STRING,
                "");
  }
  @SuppressWarnings("serial")
  private com.google.protobuf.MapField<
      java.lang.String, java.lang.String> contextExtensions_;
  private com.google.protobuf.MapField<java.lang.String, java.lang.String>
  internalGetContextExtensions() {
    if (contextExtensions_ == null) {
      return com.google.protobuf.MapField.emptyMapField(
          ContextExtensionsDefaultEntryHolder.defaultEntry);
    }
    return contextExtensions_;
  }
  public int getContextExtensionsCount() {
    return internalGetContextExtensions().getMap().size();
  }
  /**
   * <pre>
   * Context extensions to set on the CheckRequest's
   * :ref:`AttributeContext.context_extensions&lt;envoy_api_field_service.auth.v2.AttributeContext.context_extensions&gt;`
   * Merge semantics for this field are such that keys from more specific configs override.
   * .. note::
   *   These settings are only applied to a filter configured with a
   *   :ref:`grpc_service&lt;envoy_api_field_config.filter.http.ext_authz.v2.ExtAuthz.grpc_service&gt;`.
   * </pre>
   *
   * <code>map&lt;string, string&gt; context_extensions = 1;</code>
   */
  @java.lang.Override
  public boolean containsContextExtensions(
      java.lang.String key) {
    if (key == null) { throw new NullPointerException("map key"); }
    return internalGetContextExtensions().getMap().containsKey(key);
  }
  /**
   * Use {@link #getContextExtensionsMap()} instead.
   */
  @java.lang.Override
  @java.lang.Deprecated
  public java.util.Map<java.lang.String, java.lang.String> getContextExtensions() {
    return getContextExtensionsMap();
  }
  /**
   * <pre>
   * Context extensions to set on the CheckRequest's
   * :ref:`AttributeContext.context_extensions&lt;envoy_api_field_service.auth.v2.AttributeContext.context_extensions&gt;`
   * Merge semantics for this field are such that keys from more specific configs override.
   * .. note::
   *   These settings are only applied to a filter configured with a
   *   :ref:`grpc_service&lt;envoy_api_field_config.filter.http.ext_authz.v2.ExtAuthz.grpc_service&gt;`.
   * </pre>
   *
   * <code>map&lt;string, string&gt; context_extensions = 1;</code>
   */
  @java.lang.Override
  public java.util.Map<java.lang.String, java.lang.String> getContextExtensionsMap() {
    return internalGetContextExtensions().getMap();
  }
  /**
   * <pre>
   * Context extensions to set on the CheckRequest's
   * :ref:`AttributeContext.context_extensions&lt;envoy_api_field_service.auth.v2.AttributeContext.context_extensions&gt;`
   * Merge semantics for this field are such that keys from more specific configs override.
   * .. note::
   *   These settings are only applied to a filter configured with a
   *   :ref:`grpc_service&lt;envoy_api_field_config.filter.http.ext_authz.v2.ExtAuthz.grpc_service&gt;`.
   * </pre>
   *
   * <code>map&lt;string, string&gt; context_extensions = 1;</code>
   */
  @java.lang.Override
  public /* nullable */
java.lang.String getContextExtensionsOrDefault(
      java.lang.String key,
      /* nullable */
java.lang.String defaultValue) {
    if (key == null) { throw new NullPointerException("map key"); }
    java.util.Map<java.lang.String, java.lang.String> map =
        internalGetContextExtensions().getMap();
    return map.containsKey(key) ? map.get(key) : defaultValue;
  }
  /**
   * <pre>
   * Context extensions to set on the CheckRequest's
   * :ref:`AttributeContext.context_extensions&lt;envoy_api_field_service.auth.v2.AttributeContext.context_extensions&gt;`
   * Merge semantics for this field are such that keys from more specific configs override.
   * .. note::
   *   These settings are only applied to a filter configured with a
   *   :ref:`grpc_service&lt;envoy_api_field_config.filter.http.ext_authz.v2.ExtAuthz.grpc_service&gt;`.
   * </pre>
   *
   * <code>map&lt;string, string&gt; context_extensions = 1;</code>
   */
  @java.lang.Override
  public java.lang.String getContextExtensionsOrThrow(
      java.lang.String key) {
    if (key == null) { throw new NullPointerException("map key"); }
    java.util.Map<java.lang.String, java.lang.String> map =
        internalGetContextExtensions().getMap();
    if (!map.containsKey(key)) {
      throw new java.lang.IllegalArgumentException();
    }
    return map.get(key);
  }

  private byte memoizedIsInitialized = -1;
  @java.lang.Override
  public final boolean isInitialized() {
    byte isInitialized = memoizedIsInitialized;
    if (isInitialized == 1) return true;
    if (isInitialized == 0) return false;

    memoizedIsInitialized = 1;
    return true;
  }

  @java.lang.Override
  public void writeTo(com.google.protobuf.CodedOutputStream output)
                      throws java.io.IOException {
    com.google.protobuf.GeneratedMessageV3
      .serializeStringMapTo(
        output,
        internalGetContextExtensions(),
        ContextExtensionsDefaultEntryHolder.defaultEntry,
        1);
    getUnknownFields().writeTo(output);
  }

  @java.lang.Override
  public int getSerializedSize() {
    int size = memoizedSize;
    if (size != -1) return size;

    size = 0;
    for (java.util.Map.Entry<java.lang.String, java.lang.String> entry
         : internalGetContextExtensions().getMap().entrySet()) {
      com.google.protobuf.MapEntry<java.lang.String, java.lang.String>
      contextExtensions__ = ContextExtensionsDefaultEntryHolder.defaultEntry.newBuilderForType()
          .setKey(entry.getKey())
          .setValue(entry.getValue())
          .build();
      size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, contextExtensions__);
    }
    size += getUnknownFields().getSerializedSize();
    memoizedSize = size;
    return size;
  }

  @java.lang.Override
  public boolean equals(final java.lang.Object obj) {
    if (obj == this) {
     return true;
    }
    if (!(obj instanceof io.envoyproxy.envoy.config.filter.http.ext_authz.v2.CheckSettings)) {
      return super.equals(obj);
    }
    io.envoyproxy.envoy.config.filter.http.ext_authz.v2.CheckSettings other = (io.envoyproxy.envoy.config.filter.http.ext_authz.v2.CheckSettings) obj;

    if (!internalGetContextExtensions().equals(
        other.internalGetContextExtensions())) return false;
    if (!getUnknownFields().equals(other.getUnknownFields())) return false;
    return true;
  }

  @java.lang.Override
  public int hashCode() {
    if (memoizedHashCode != 0) {
      return memoizedHashCode;
    }
    int hash = 41;
    hash = (19 * hash) + getDescriptor().hashCode();
    if (!internalGetContextExtensions().getMap().isEmpty()) {
      hash = (37 * hash) + CONTEXT_EXTENSIONS_FIELD_NUMBER;
      hash = (53 * hash) + internalGetContextExtensions().hashCode();
    }
    hash = (29 * hash) + getUnknownFields().hashCode();
    memoizedHashCode = hash;
    return hash;
  }

  public static io.envoyproxy.envoy.config.filter.http.ext_authz.v2.CheckSettings parseFrom(
      java.nio.ByteBuffer data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static io.envoyproxy.envoy.config.filter.http.ext_authz.v2.CheckSettings parseFrom(
      java.nio.ByteBuffer data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static io.envoyproxy.envoy.config.filter.http.ext_authz.v2.CheckSettings parseFrom(
      com.google.protobuf.ByteString data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static io.envoyproxy.envoy.config.filter.http.ext_authz.v2.CheckSettings parseFrom(
      com.google.protobuf.ByteString data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static io.envoyproxy.envoy.config.filter.http.ext_authz.v2.CheckSettings parseFrom(byte[] data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static io.envoyproxy.envoy.config.filter.http.ext_authz.v2.CheckSettings parseFrom(
      byte[] data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static io.envoyproxy.envoy.config.filter.http.ext_authz.v2.CheckSettings parseFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input);
  }
  public static io.envoyproxy.envoy.config.filter.http.ext_authz.v2.CheckSettings parseFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input, extensionRegistry);
  }
  public static io.envoyproxy.envoy.config.filter.http.ext_authz.v2.CheckSettings parseDelimitedFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseDelimitedWithIOException(PARSER, input);
  }
  public static io.envoyproxy.envoy.config.filter.http.ext_authz.v2.CheckSettings parseDelimitedFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
  }
  public static io.envoyproxy.envoy.config.filter.http.ext_authz.v2.CheckSettings parseFrom(
      com.google.protobuf.CodedInputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input);
  }
  public static io.envoyproxy.envoy.config.filter.http.ext_authz.v2.CheckSettings parseFrom(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input, extensionRegistry);
  }

  @java.lang.Override
  public Builder newBuilderForType() { return newBuilder(); }
  public static Builder newBuilder() {
    return DEFAULT_INSTANCE.toBuilder();
  }
  public static Builder newBuilder(io.envoyproxy.envoy.config.filter.http.ext_authz.v2.CheckSettings prototype) {
    return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
  }
  @java.lang.Override
  public Builder toBuilder() {
    return this == DEFAULT_INSTANCE
        ? new Builder() : new Builder().mergeFrom(this);
  }

  @java.lang.Override
  protected Builder newBuilderForType(
      com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
    Builder builder = new Builder(parent);
    return builder;
  }
  /**
   * <pre>
   * Extra settings for the check request. You can use this to provide extra context for the
   * external authorization server on specific virtual hosts &#92; routes. For example, adding a context
   * extension on the virtual host level can give the ext-authz server information on what virtual
   * host is used without needing to parse the host header. If CheckSettings is specified in multiple
   * per-filter-configs, they will be merged in order, and the result will be used.
   * </pre>
   *
   * Protobuf type {@code envoy.config.filter.http.ext_authz.v2.CheckSettings}
   */
  public static final class Builder extends
      com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
      // @@protoc_insertion_point(builder_implements:envoy.config.filter.http.ext_authz.v2.CheckSettings)
      io.envoyproxy.envoy.config.filter.http.ext_authz.v2.CheckSettingsOrBuilder {
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return io.envoyproxy.envoy.config.filter.http.ext_authz.v2.ExtAuthzProto.internal_static_envoy_config_filter_http_ext_authz_v2_CheckSettings_descriptor;
    }

    @SuppressWarnings({"rawtypes"})
    protected com.google.protobuf.MapField internalGetMapField(
        int number) {
      switch (number) {
        case 1:
          return internalGetContextExtensions();
        default:
          throw new RuntimeException(
              "Invalid map field number: " + number);
      }
    }
    @SuppressWarnings({"rawtypes"})
    protected com.google.protobuf.MapField internalGetMutableMapField(
        int number) {
      switch (number) {
        case 1:
          return internalGetMutableContextExtensions();
        default:
          throw new RuntimeException(
              "Invalid map field number: " + number);
      }
    }
    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return io.envoyproxy.envoy.config.filter.http.ext_authz.v2.ExtAuthzProto.internal_static_envoy_config_filter_http_ext_authz_v2_CheckSettings_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              io.envoyproxy.envoy.config.filter.http.ext_authz.v2.CheckSettings.class, io.envoyproxy.envoy.config.filter.http.ext_authz.v2.CheckSettings.Builder.class);
    }

    // Construct using io.envoyproxy.envoy.config.filter.http.ext_authz.v2.CheckSettings.newBuilder()
    private Builder() {

    }

    private Builder(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      super(parent);

    }
    @java.lang.Override
    public Builder clear() {
      super.clear();
      bitField0_ = 0;
      internalGetMutableContextExtensions().clear();
      return this;
    }

    @java.lang.Override
    public com.google.protobuf.Descriptors.Descriptor
        getDescriptorForType() {
      return io.envoyproxy.envoy.config.filter.http.ext_authz.v2.ExtAuthzProto.internal_static_envoy_config_filter_http_ext_authz_v2_CheckSettings_descriptor;
    }

    @java.lang.Override
    public io.envoyproxy.envoy.config.filter.http.ext_authz.v2.CheckSettings getDefaultInstanceForType() {
      return io.envoyproxy.envoy.config.filter.http.ext_authz.v2.CheckSettings.getDefaultInstance();
    }

    @java.lang.Override
    public io.envoyproxy.envoy.config.filter.http.ext_authz.v2.CheckSettings build() {
      io.envoyproxy.envoy.config.filter.http.ext_authz.v2.CheckSettings result = buildPartial();
      if (!result.isInitialized()) {
        throw newUninitializedMessageException(result);
      }
      return result;
    }

    @java.lang.Override
    public io.envoyproxy.envoy.config.filter.http.ext_authz.v2.CheckSettings buildPartial() {
      io.envoyproxy.envoy.config.filter.http.ext_authz.v2.CheckSettings result = new io.envoyproxy.envoy.config.filter.http.ext_authz.v2.CheckSettings(this);
      if (bitField0_ != 0) { buildPartial0(result); }
      onBuilt();
      return result;
    }

    private void buildPartial0(io.envoyproxy.envoy.config.filter.http.ext_authz.v2.CheckSettings result) {
      int from_bitField0_ = bitField0_;
      if (((from_bitField0_ & 0x00000001) != 0)) {
        result.contextExtensions_ = internalGetContextExtensions();
        result.contextExtensions_.makeImmutable();
      }
    }

    @java.lang.Override
    public Builder clone() {
      return super.clone();
    }
    @java.lang.Override
    public Builder setField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        java.lang.Object value) {
      return super.setField(field, value);
    }
    @java.lang.Override
    public Builder clearField(
        com.google.protobuf.Descriptors.FieldDescriptor field) {
      return super.clearField(field);
    }
    @java.lang.Override
    public Builder clearOneof(
        com.google.protobuf.Descriptors.OneofDescriptor oneof) {
      return super.clearOneof(oneof);
    }
    @java.lang.Override
    public Builder setRepeatedField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        int index, java.lang.Object value) {
      return super.setRepeatedField(field, index, value);
    }
    @java.lang.Override
    public Builder addRepeatedField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        java.lang.Object value) {
      return super.addRepeatedField(field, value);
    }
    @java.lang.Override
    public Builder mergeFrom(com.google.protobuf.Message other) {
      if (other instanceof io.envoyproxy.envoy.config.filter.http.ext_authz.v2.CheckSettings) {
        return mergeFrom((io.envoyproxy.envoy.config.filter.http.ext_authz.v2.CheckSettings)other);
      } else {
        super.mergeFrom(other);
        return this;
      }
    }

    public Builder mergeFrom(io.envoyproxy.envoy.config.filter.http.ext_authz.v2.CheckSettings other) {
      if (other == io.envoyproxy.envoy.config.filter.http.ext_authz.v2.CheckSettings.getDefaultInstance()) return this;
      internalGetMutableContextExtensions().mergeFrom(
          other.internalGetContextExtensions());
      bitField0_ |= 0x00000001;
      this.mergeUnknownFields(other.getUnknownFields());
      onChanged();
      return this;
    }

    @java.lang.Override
    public final boolean isInitialized() {
      return true;
    }

    @java.lang.Override
    public Builder mergeFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 10: {
              com.google.protobuf.MapEntry<java.lang.String, java.lang.String>
              contextExtensions__ = input.readMessage(
                  ContextExtensionsDefaultEntryHolder.defaultEntry.getParserForType(), extensionRegistry);
              internalGetMutableContextExtensions().getMutableMap().put(
                  contextExtensions__.getKey(), contextExtensions__.getValue());
              bitField0_ |= 0x00000001;
              break;
            } // case 10
            default: {
              if (!super.parseUnknownField(input, extensionRegistry, tag)) {
                done = true; // was an endgroup tag
              }
              break;
            } // default:
          } // switch (tag)
        } // while (!done)
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.unwrapIOException();
      } finally {
        onChanged();
      } // finally
      return this;
    }
    private int bitField0_;

    private com.google.protobuf.MapField<
        java.lang.String, java.lang.String> contextExtensions_;
    private com.google.protobuf.MapField<java.lang.String, java.lang.String>
        internalGetContextExtensions() {
      if (contextExtensions_ == null) {
        return com.google.protobuf.MapField.emptyMapField(
            ContextExtensionsDefaultEntryHolder.defaultEntry);
      }
      return contextExtensions_;
    }
    private com.google.protobuf.MapField<java.lang.String, java.lang.String>
        internalGetMutableContextExtensions() {
      if (contextExtensions_ == null) {
        contextExtensions_ = com.google.protobuf.MapField.newMapField(
            ContextExtensionsDefaultEntryHolder.defaultEntry);
      }
      if (!contextExtensions_.isMutable()) {
        contextExtensions_ = contextExtensions_.copy();
      }
      bitField0_ |= 0x00000001;
      onChanged();
      return contextExtensions_;
    }
    public int getContextExtensionsCount() {
      return internalGetContextExtensions().getMap().size();
    }
    /**
     * <pre>
     * Context extensions to set on the CheckRequest's
     * :ref:`AttributeContext.context_extensions&lt;envoy_api_field_service.auth.v2.AttributeContext.context_extensions&gt;`
     * Merge semantics for this field are such that keys from more specific configs override.
     * .. note::
     *   These settings are only applied to a filter configured with a
     *   :ref:`grpc_service&lt;envoy_api_field_config.filter.http.ext_authz.v2.ExtAuthz.grpc_service&gt;`.
     * </pre>
     *
     * <code>map&lt;string, string&gt; context_extensions = 1;</code>
     */
    @java.lang.Override
    public boolean containsContextExtensions(
        java.lang.String key) {
      if (key == null) { throw new NullPointerException("map key"); }
      return internalGetContextExtensions().getMap().containsKey(key);
    }
    /**
     * Use {@link #getContextExtensionsMap()} instead.
     */
    @java.lang.Override
    @java.lang.Deprecated
    public java.util.Map<java.lang.String, java.lang.String> getContextExtensions() {
      return getContextExtensionsMap();
    }
    /**
     * <pre>
     * Context extensions to set on the CheckRequest's
     * :ref:`AttributeContext.context_extensions&lt;envoy_api_field_service.auth.v2.AttributeContext.context_extensions&gt;`
     * Merge semantics for this field are such that keys from more specific configs override.
     * .. note::
     *   These settings are only applied to a filter configured with a
     *   :ref:`grpc_service&lt;envoy_api_field_config.filter.http.ext_authz.v2.ExtAuthz.grpc_service&gt;`.
     * </pre>
     *
     * <code>map&lt;string, string&gt; context_extensions = 1;</code>
     */
    @java.lang.Override
    public java.util.Map<java.lang.String, java.lang.String> getContextExtensionsMap() {
      return internalGetContextExtensions().getMap();
    }
    /**
     * <pre>
     * Context extensions to set on the CheckRequest's
     * :ref:`AttributeContext.context_extensions&lt;envoy_api_field_service.auth.v2.AttributeContext.context_extensions&gt;`
     * Merge semantics for this field are such that keys from more specific configs override.
     * .. note::
     *   These settings are only applied to a filter configured with a
     *   :ref:`grpc_service&lt;envoy_api_field_config.filter.http.ext_authz.v2.ExtAuthz.grpc_service&gt;`.
     * </pre>
     *
     * <code>map&lt;string, string&gt; context_extensions = 1;</code>
     */
    @java.lang.Override
    public /* nullable */
java.lang.String getContextExtensionsOrDefault(
        java.lang.String key,
        /* nullable */
java.lang.String defaultValue) {
      if (key == null) { throw new NullPointerException("map key"); }
      java.util.Map<java.lang.String, java.lang.String> map =
          internalGetContextExtensions().getMap();
      return map.containsKey(key) ? map.get(key) : defaultValue;
    }
    /**
     * <pre>
     * Context extensions to set on the CheckRequest's
     * :ref:`AttributeContext.context_extensions&lt;envoy_api_field_service.auth.v2.AttributeContext.context_extensions&gt;`
     * Merge semantics for this field are such that keys from more specific configs override.
     * .. note::
     *   These settings are only applied to a filter configured with a
     *   :ref:`grpc_service&lt;envoy_api_field_config.filter.http.ext_authz.v2.ExtAuthz.grpc_service&gt;`.
     * </pre>
     *
     * <code>map&lt;string, string&gt; context_extensions = 1;</code>
     */
    @java.lang.Override
    public java.lang.String getContextExtensionsOrThrow(
        java.lang.String key) {
      if (key == null) { throw new NullPointerException("map key"); }
      java.util.Map<java.lang.String, java.lang.String> map =
          internalGetContextExtensions().getMap();
      if (!map.containsKey(key)) {
        throw new java.lang.IllegalArgumentException();
      }
      return map.get(key);
    }
    public Builder clearContextExtensions() {
      bitField0_ = (bitField0_ & ~0x00000001);
      internalGetMutableContextExtensions().getMutableMap()
          .clear();
      return this;
    }
    /**
     * <pre>
     * Context extensions to set on the CheckRequest's
     * :ref:`AttributeContext.context_extensions&lt;envoy_api_field_service.auth.v2.AttributeContext.context_extensions&gt;`
     * Merge semantics for this field are such that keys from more specific configs override.
     * .. note::
     *   These settings are only applied to a filter configured with a
     *   :ref:`grpc_service&lt;envoy_api_field_config.filter.http.ext_authz.v2.ExtAuthz.grpc_service&gt;`.
     * </pre>
     *
     * <code>map&lt;string, string&gt; context_extensions = 1;</code>
     */
    public Builder removeContextExtensions(
        java.lang.String key) {
      if (key == null) { throw new NullPointerException("map key"); }
      internalGetMutableContextExtensions().getMutableMap()
          .remove(key);
      return this;
    }
    /**
     * Use alternate mutation accessors instead.
     */
    @java.lang.Deprecated
    public java.util.Map<java.lang.String, java.lang.String>
        getMutableContextExtensions() {
      bitField0_ |= 0x00000001;
      return internalGetMutableContextExtensions().getMutableMap();
    }
    /**
     * <pre>
     * Context extensions to set on the CheckRequest's
     * :ref:`AttributeContext.context_extensions&lt;envoy_api_field_service.auth.v2.AttributeContext.context_extensions&gt;`
     * Merge semantics for this field are such that keys from more specific configs override.
     * .. note::
     *   These settings are only applied to a filter configured with a
     *   :ref:`grpc_service&lt;envoy_api_field_config.filter.http.ext_authz.v2.ExtAuthz.grpc_service&gt;`.
     * </pre>
     *
     * <code>map&lt;string, string&gt; context_extensions = 1;</code>
     */
    public Builder putContextExtensions(
        java.lang.String key,
        java.lang.String value) {
      if (key == null) { throw new NullPointerException("map key"); }
      if (value == null) { throw new NullPointerException("map value"); }
      internalGetMutableContextExtensions().getMutableMap()
          .put(key, value);
      bitField0_ |= 0x00000001;
      return this;
    }
    /**
     * <pre>
     * Context extensions to set on the CheckRequest's
     * :ref:`AttributeContext.context_extensions&lt;envoy_api_field_service.auth.v2.AttributeContext.context_extensions&gt;`
     * Merge semantics for this field are such that keys from more specific configs override.
     * .. note::
     *   These settings are only applied to a filter configured with a
     *   :ref:`grpc_service&lt;envoy_api_field_config.filter.http.ext_authz.v2.ExtAuthz.grpc_service&gt;`.
     * </pre>
     *
     * <code>map&lt;string, string&gt; context_extensions = 1;</code>
     */
    public Builder putAllContextExtensions(
        java.util.Map<java.lang.String, java.lang.String> values) {
      internalGetMutableContextExtensions().getMutableMap()
          .putAll(values);
      bitField0_ |= 0x00000001;
      return this;
    }
    @java.lang.Override
    public final Builder setUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return super.setUnknownFields(unknownFields);
    }

    @java.lang.Override
    public final Builder mergeUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return super.mergeUnknownFields(unknownFields);
    }


    // @@protoc_insertion_point(builder_scope:envoy.config.filter.http.ext_authz.v2.CheckSettings)
  }

  // @@protoc_insertion_point(class_scope:envoy.config.filter.http.ext_authz.v2.CheckSettings)
  private static final io.envoyproxy.envoy.config.filter.http.ext_authz.v2.CheckSettings DEFAULT_INSTANCE;
  static {
    DEFAULT_INSTANCE = new io.envoyproxy.envoy.config.filter.http.ext_authz.v2.CheckSettings();
  }

  public static io.envoyproxy.envoy.config.filter.http.ext_authz.v2.CheckSettings getDefaultInstance() {
    return DEFAULT_INSTANCE;
  }

  private static final com.google.protobuf.Parser<CheckSettings>
      PARSER = new com.google.protobuf.AbstractParser<CheckSettings>() {
    @java.lang.Override
    public CheckSettings parsePartialFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      Builder builder = newBuilder();
      try {
        builder.mergeFrom(input, extensionRegistry);
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(builder.buildPartial());
      } catch (com.google.protobuf.UninitializedMessageException e) {
        throw e.asInvalidProtocolBufferException().setUnfinishedMessage(builder.buildPartial());
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(e)
            .setUnfinishedMessage(builder.buildPartial());
      }
      return builder.buildPartial();
    }
  };

  public static com.google.protobuf.Parser<CheckSettings> parser() {
    return PARSER;
  }

  @java.lang.Override
  public com.google.protobuf.Parser<CheckSettings> getParserForType() {
    return PARSER;
  }

  @java.lang.Override
  public io.envoyproxy.envoy.config.filter.http.ext_authz.v2.CheckSettings getDefaultInstanceForType() {
    return DEFAULT_INSTANCE;
  }

}

