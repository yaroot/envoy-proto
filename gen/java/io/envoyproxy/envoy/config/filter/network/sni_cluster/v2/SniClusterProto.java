// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: envoy/config/filter/network/sni_cluster/v2/sni_cluster.proto

package io.envoyproxy.envoy.config.filter.network.sni_cluster.v2;

public final class SniClusterProto {
  private SniClusterProto() {}
  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistryLite registry) {
  }

  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistry registry) {
    registerAllExtensions(
        (com.google.protobuf.ExtensionRegistryLite) registry);
  }
  static final com.google.protobuf.Descriptors.Descriptor
    internal_static_envoy_config_filter_network_sni_cluster_v2_SniCluster_descriptor;
  static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_envoy_config_filter_network_sni_cluster_v2_SniCluster_fieldAccessorTable;

  public static com.google.protobuf.Descriptors.FileDescriptor
      getDescriptor() {
    return descriptor;
  }
  private static  com.google.protobuf.Descriptors.FileDescriptor
      descriptor;
  static {
    java.lang.String[] descriptorData = {
      "\n<envoy/config/filter/network/sni_cluste" +
      "r/v2/sni_cluster.proto\022*envoy.config.fil" +
      "ter.network.sni_cluster.v2\032\036udpa/annotat" +
      "ions/migrate.proto\032\035udpa/annotations/sta" +
      "tus.proto\"\014\n\nSniClusterB\355\001\n8io.envoyprox" +
      "y.envoy.config.filter.network.sni_cluste" +
      "r.v2B\017SniClusterProtoP\001Z_github.com/envo" +
      "yproxy/go-control-plane/envoy/config/fil" +
      "ter/network/sni_cluster/v2;sni_clusterv2" +
      "\362\230\376\217\0051\022/envoy.extensions.filters.network" +
      ".sni_cluster.v3\272\200\310\321\006\002\020\001b\006proto3"
    };
    descriptor = com.google.protobuf.Descriptors.FileDescriptor
      .internalBuildGeneratedFileFrom(descriptorData,
        new com.google.protobuf.Descriptors.FileDescriptor[] {
          udpa.annotations.Migrate.getDescriptor(),
          udpa.annotations.Status.getDescriptor(),
        });
    internal_static_envoy_config_filter_network_sni_cluster_v2_SniCluster_descriptor =
      getDescriptor().getMessageTypes().get(0);
    internal_static_envoy_config_filter_network_sni_cluster_v2_SniCluster_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_envoy_config_filter_network_sni_cluster_v2_SniCluster_descriptor,
        new java.lang.String[] { });
    com.google.protobuf.ExtensionRegistry registry =
        com.google.protobuf.ExtensionRegistry.newInstance();
    registry.add(udpa.annotations.Migrate.fileMigrate);
    registry.add(udpa.annotations.Status.fileStatus);
    com.google.protobuf.Descriptors.FileDescriptor
        .internalUpdateFileDescriptor(descriptor, registry);
    udpa.annotations.Migrate.getDescriptor();
    udpa.annotations.Status.getDescriptor();
  }

  // @@protoc_insertion_point(outer_class_scope)
}
