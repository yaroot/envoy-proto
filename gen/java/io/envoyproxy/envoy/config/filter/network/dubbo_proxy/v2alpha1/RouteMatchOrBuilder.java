// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: envoy/config/filter/network/dubbo_proxy/v2alpha1/route.proto

package io.envoyproxy.envoy.config.filter.network.dubbo_proxy.v2alpha1;

public interface RouteMatchOrBuilder extends
    // @@protoc_insertion_point(interface_extends:envoy.config.filter.network.dubbo_proxy.v2alpha1.RouteMatch)
    com.google.protobuf.MessageOrBuilder {

  /**
   * <pre>
   * Method level routing matching.
   * </pre>
   *
   * <code>.envoy.config.filter.network.dubbo_proxy.v2alpha1.MethodMatch method = 1;</code>
   * @return Whether the method field is set.
   */
  boolean hasMethod();
  /**
   * <pre>
   * Method level routing matching.
   * </pre>
   *
   * <code>.envoy.config.filter.network.dubbo_proxy.v2alpha1.MethodMatch method = 1;</code>
   * @return The method.
   */
  io.envoyproxy.envoy.config.filter.network.dubbo_proxy.v2alpha1.MethodMatch getMethod();
  /**
   * <pre>
   * Method level routing matching.
   * </pre>
   *
   * <code>.envoy.config.filter.network.dubbo_proxy.v2alpha1.MethodMatch method = 1;</code>
   */
  io.envoyproxy.envoy.config.filter.network.dubbo_proxy.v2alpha1.MethodMatchOrBuilder getMethodOrBuilder();

  /**
   * <pre>
   * Specifies a set of headers that the route should match on. The router will check the request’s
   * headers against all the specified headers in the route config. A match will happen if all the
   * headers in the route are present in the request with the same values (or based on presence if
   * the value field is not in the config).
   * </pre>
   *
   * <code>repeated .envoy.api.v2.route.HeaderMatcher headers = 2;</code>
   */
  java.util.List<io.envoyproxy.envoy.api.v2.route.HeaderMatcher> 
      getHeadersList();
  /**
   * <pre>
   * Specifies a set of headers that the route should match on. The router will check the request’s
   * headers against all the specified headers in the route config. A match will happen if all the
   * headers in the route are present in the request with the same values (or based on presence if
   * the value field is not in the config).
   * </pre>
   *
   * <code>repeated .envoy.api.v2.route.HeaderMatcher headers = 2;</code>
   */
  io.envoyproxy.envoy.api.v2.route.HeaderMatcher getHeaders(int index);
  /**
   * <pre>
   * Specifies a set of headers that the route should match on. The router will check the request’s
   * headers against all the specified headers in the route config. A match will happen if all the
   * headers in the route are present in the request with the same values (or based on presence if
   * the value field is not in the config).
   * </pre>
   *
   * <code>repeated .envoy.api.v2.route.HeaderMatcher headers = 2;</code>
   */
  int getHeadersCount();
  /**
   * <pre>
   * Specifies a set of headers that the route should match on. The router will check the request’s
   * headers against all the specified headers in the route config. A match will happen if all the
   * headers in the route are present in the request with the same values (or based on presence if
   * the value field is not in the config).
   * </pre>
   *
   * <code>repeated .envoy.api.v2.route.HeaderMatcher headers = 2;</code>
   */
  java.util.List<? extends io.envoyproxy.envoy.api.v2.route.HeaderMatcherOrBuilder> 
      getHeadersOrBuilderList();
  /**
   * <pre>
   * Specifies a set of headers that the route should match on. The router will check the request’s
   * headers against all the specified headers in the route config. A match will happen if all the
   * headers in the route are present in the request with the same values (or based on presence if
   * the value field is not in the config).
   * </pre>
   *
   * <code>repeated .envoy.api.v2.route.HeaderMatcher headers = 2;</code>
   */
  io.envoyproxy.envoy.api.v2.route.HeaderMatcherOrBuilder getHeadersOrBuilder(
      int index);
}
