// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: envoy/config/filter/network/dubbo_proxy/v2alpha1/route.proto

package io.envoyproxy.envoy.config.filter.network.dubbo_proxy.v2alpha1;

public interface RouteOrBuilder extends
    // @@protoc_insertion_point(interface_extends:envoy.config.filter.network.dubbo_proxy.v2alpha1.Route)
    com.google.protobuf.MessageOrBuilder {

  /**
   * <pre>
   * Route matching parameters.
   * </pre>
   *
   * <code>.envoy.config.filter.network.dubbo_proxy.v2alpha1.RouteMatch match = 1 [(.validate.rules) = { ... }</code>
   * @return Whether the match field is set.
   */
  boolean hasMatch();
  /**
   * <pre>
   * Route matching parameters.
   * </pre>
   *
   * <code>.envoy.config.filter.network.dubbo_proxy.v2alpha1.RouteMatch match = 1 [(.validate.rules) = { ... }</code>
   * @return The match.
   */
  io.envoyproxy.envoy.config.filter.network.dubbo_proxy.v2alpha1.RouteMatch getMatch();
  /**
   * <pre>
   * Route matching parameters.
   * </pre>
   *
   * <code>.envoy.config.filter.network.dubbo_proxy.v2alpha1.RouteMatch match = 1 [(.validate.rules) = { ... }</code>
   */
  io.envoyproxy.envoy.config.filter.network.dubbo_proxy.v2alpha1.RouteMatchOrBuilder getMatchOrBuilder();

  /**
   * <pre>
   * Route request to some upstream cluster.
   * </pre>
   *
   * <code>.envoy.config.filter.network.dubbo_proxy.v2alpha1.RouteAction route = 2 [(.validate.rules) = { ... }</code>
   * @return Whether the route field is set.
   */
  boolean hasRoute();
  /**
   * <pre>
   * Route request to some upstream cluster.
   * </pre>
   *
   * <code>.envoy.config.filter.network.dubbo_proxy.v2alpha1.RouteAction route = 2 [(.validate.rules) = { ... }</code>
   * @return The route.
   */
  io.envoyproxy.envoy.config.filter.network.dubbo_proxy.v2alpha1.RouteAction getRoute();
  /**
   * <pre>
   * Route request to some upstream cluster.
   * </pre>
   *
   * <code>.envoy.config.filter.network.dubbo_proxy.v2alpha1.RouteAction route = 2 [(.validate.rules) = { ... }</code>
   */
  io.envoyproxy.envoy.config.filter.network.dubbo_proxy.v2alpha1.RouteActionOrBuilder getRouteOrBuilder();
}
