// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: envoy/config/filter/network/local_rate_limit/v2alpha/local_rate_limit.proto

package io.envoyproxy.envoy.config.filter.network.local_rate_limit.v2alpha;

/**
 * Protobuf type {@code envoy.config.filter.network.local_rate_limit.v2alpha.LocalRateLimit}
 */
public final class LocalRateLimit extends
    com.google.protobuf.GeneratedMessageV3 implements
    // @@protoc_insertion_point(message_implements:envoy.config.filter.network.local_rate_limit.v2alpha.LocalRateLimit)
    LocalRateLimitOrBuilder {
private static final long serialVersionUID = 0L;
  // Use LocalRateLimit.newBuilder() to construct.
  private LocalRateLimit(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
    super(builder);
  }
  private LocalRateLimit() {
    statPrefix_ = "";
  }

  @java.lang.Override
  @SuppressWarnings({"unused"})
  protected java.lang.Object newInstance(
      UnusedPrivateParameter unused) {
    return new LocalRateLimit();
  }

  @java.lang.Override
  public final com.google.protobuf.UnknownFieldSet
  getUnknownFields() {
    return this.unknownFields;
  }
  private LocalRateLimit(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    this();
    if (extensionRegistry == null) {
      throw new java.lang.NullPointerException();
    }
    com.google.protobuf.UnknownFieldSet.Builder unknownFields =
        com.google.protobuf.UnknownFieldSet.newBuilder();
    try {
      boolean done = false;
      while (!done) {
        int tag = input.readTag();
        switch (tag) {
          case 0:
            done = true;
            break;
          case 10: {
            java.lang.String s = input.readStringRequireUtf8();

            statPrefix_ = s;
            break;
          }
          case 18: {
            io.envoyproxy.envoy.type.TokenBucket.Builder subBuilder = null;
            if (tokenBucket_ != null) {
              subBuilder = tokenBucket_.toBuilder();
            }
            tokenBucket_ = input.readMessage(io.envoyproxy.envoy.type.TokenBucket.parser(), extensionRegistry);
            if (subBuilder != null) {
              subBuilder.mergeFrom(tokenBucket_);
              tokenBucket_ = subBuilder.buildPartial();
            }

            break;
          }
          case 26: {
            io.envoyproxy.envoy.api.v2.core.RuntimeFeatureFlag.Builder subBuilder = null;
            if (runtimeEnabled_ != null) {
              subBuilder = runtimeEnabled_.toBuilder();
            }
            runtimeEnabled_ = input.readMessage(io.envoyproxy.envoy.api.v2.core.RuntimeFeatureFlag.parser(), extensionRegistry);
            if (subBuilder != null) {
              subBuilder.mergeFrom(runtimeEnabled_);
              runtimeEnabled_ = subBuilder.buildPartial();
            }

            break;
          }
          default: {
            if (!parseUnknownField(
                input, unknownFields, extensionRegistry, tag)) {
              done = true;
            }
            break;
          }
        }
      }
    } catch (com.google.protobuf.InvalidProtocolBufferException e) {
      throw e.setUnfinishedMessage(this);
    } catch (com.google.protobuf.UninitializedMessageException e) {
      throw e.asInvalidProtocolBufferException().setUnfinishedMessage(this);
    } catch (java.io.IOException e) {
      throw new com.google.protobuf.InvalidProtocolBufferException(
          e).setUnfinishedMessage(this);
    } finally {
      this.unknownFields = unknownFields.build();
      makeExtensionsImmutable();
    }
  }
  public static final com.google.protobuf.Descriptors.Descriptor
      getDescriptor() {
    return io.envoyproxy.envoy.config.filter.network.local_rate_limit.v2alpha.LocalRateLimitProto.internal_static_envoy_config_filter_network_local_rate_limit_v2alpha_LocalRateLimit_descriptor;
  }

  @java.lang.Override
  protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internalGetFieldAccessorTable() {
    return io.envoyproxy.envoy.config.filter.network.local_rate_limit.v2alpha.LocalRateLimitProto.internal_static_envoy_config_filter_network_local_rate_limit_v2alpha_LocalRateLimit_fieldAccessorTable
        .ensureFieldAccessorsInitialized(
            io.envoyproxy.envoy.config.filter.network.local_rate_limit.v2alpha.LocalRateLimit.class, io.envoyproxy.envoy.config.filter.network.local_rate_limit.v2alpha.LocalRateLimit.Builder.class);
  }

  public static final int STAT_PREFIX_FIELD_NUMBER = 1;
  private volatile java.lang.Object statPrefix_;
  /**
   * <pre>
   * The prefix to use when emitting :ref:`statistics
   * &lt;config_network_filters_local_rate_limit_stats&gt;`.
   * </pre>
   *
   * <code>string stat_prefix = 1 [(.validate.rules) = { ... }</code>
   * @return The statPrefix.
   */
  @java.lang.Override
  public java.lang.String getStatPrefix() {
    java.lang.Object ref = statPrefix_;
    if (ref instanceof java.lang.String) {
      return (java.lang.String) ref;
    } else {
      com.google.protobuf.ByteString bs = 
          (com.google.protobuf.ByteString) ref;
      java.lang.String s = bs.toStringUtf8();
      statPrefix_ = s;
      return s;
    }
  }
  /**
   * <pre>
   * The prefix to use when emitting :ref:`statistics
   * &lt;config_network_filters_local_rate_limit_stats&gt;`.
   * </pre>
   *
   * <code>string stat_prefix = 1 [(.validate.rules) = { ... }</code>
   * @return The bytes for statPrefix.
   */
  @java.lang.Override
  public com.google.protobuf.ByteString
      getStatPrefixBytes() {
    java.lang.Object ref = statPrefix_;
    if (ref instanceof java.lang.String) {
      com.google.protobuf.ByteString b = 
          com.google.protobuf.ByteString.copyFromUtf8(
              (java.lang.String) ref);
      statPrefix_ = b;
      return b;
    } else {
      return (com.google.protobuf.ByteString) ref;
    }
  }

  public static final int TOKEN_BUCKET_FIELD_NUMBER = 2;
  private io.envoyproxy.envoy.type.TokenBucket tokenBucket_;
  /**
   * <pre>
   * The token bucket configuration to use for rate limiting connections that are processed by the
   * filter's filter chain. Each incoming connection processed by the filter consumes a single
   * token. If the token is available, the connection will be allowed. If no tokens are available,
   * the connection will be immediately closed.
   * .. note::
   *   In the current implementation each filter and filter chain has an independent rate limit.
   * .. note::
   *   In the current implementation the token bucket's :ref:`fill_interval
   *   &lt;envoy_api_field_type.TokenBucket.fill_interval&gt;` must be &gt;= 50ms to avoid too aggressive
   *   refills.
   * </pre>
   *
   * <code>.envoy.type.TokenBucket token_bucket = 2 [(.validate.rules) = { ... }</code>
   * @return Whether the tokenBucket field is set.
   */
  @java.lang.Override
  public boolean hasTokenBucket() {
    return tokenBucket_ != null;
  }
  /**
   * <pre>
   * The token bucket configuration to use for rate limiting connections that are processed by the
   * filter's filter chain. Each incoming connection processed by the filter consumes a single
   * token. If the token is available, the connection will be allowed. If no tokens are available,
   * the connection will be immediately closed.
   * .. note::
   *   In the current implementation each filter and filter chain has an independent rate limit.
   * .. note::
   *   In the current implementation the token bucket's :ref:`fill_interval
   *   &lt;envoy_api_field_type.TokenBucket.fill_interval&gt;` must be &gt;= 50ms to avoid too aggressive
   *   refills.
   * </pre>
   *
   * <code>.envoy.type.TokenBucket token_bucket = 2 [(.validate.rules) = { ... }</code>
   * @return The tokenBucket.
   */
  @java.lang.Override
  public io.envoyproxy.envoy.type.TokenBucket getTokenBucket() {
    return tokenBucket_ == null ? io.envoyproxy.envoy.type.TokenBucket.getDefaultInstance() : tokenBucket_;
  }
  /**
   * <pre>
   * The token bucket configuration to use for rate limiting connections that are processed by the
   * filter's filter chain. Each incoming connection processed by the filter consumes a single
   * token. If the token is available, the connection will be allowed. If no tokens are available,
   * the connection will be immediately closed.
   * .. note::
   *   In the current implementation each filter and filter chain has an independent rate limit.
   * .. note::
   *   In the current implementation the token bucket's :ref:`fill_interval
   *   &lt;envoy_api_field_type.TokenBucket.fill_interval&gt;` must be &gt;= 50ms to avoid too aggressive
   *   refills.
   * </pre>
   *
   * <code>.envoy.type.TokenBucket token_bucket = 2 [(.validate.rules) = { ... }</code>
   */
  @java.lang.Override
  public io.envoyproxy.envoy.type.TokenBucketOrBuilder getTokenBucketOrBuilder() {
    return getTokenBucket();
  }

  public static final int RUNTIME_ENABLED_FIELD_NUMBER = 3;
  private io.envoyproxy.envoy.api.v2.core.RuntimeFeatureFlag runtimeEnabled_;
  /**
   * <pre>
   * Runtime flag that controls whether the filter is enabled or not. If not specified, defaults
   * to enabled.
   * </pre>
   *
   * <code>.envoy.api.v2.core.RuntimeFeatureFlag runtime_enabled = 3;</code>
   * @return Whether the runtimeEnabled field is set.
   */
  @java.lang.Override
  public boolean hasRuntimeEnabled() {
    return runtimeEnabled_ != null;
  }
  /**
   * <pre>
   * Runtime flag that controls whether the filter is enabled or not. If not specified, defaults
   * to enabled.
   * </pre>
   *
   * <code>.envoy.api.v2.core.RuntimeFeatureFlag runtime_enabled = 3;</code>
   * @return The runtimeEnabled.
   */
  @java.lang.Override
  public io.envoyproxy.envoy.api.v2.core.RuntimeFeatureFlag getRuntimeEnabled() {
    return runtimeEnabled_ == null ? io.envoyproxy.envoy.api.v2.core.RuntimeFeatureFlag.getDefaultInstance() : runtimeEnabled_;
  }
  /**
   * <pre>
   * Runtime flag that controls whether the filter is enabled or not. If not specified, defaults
   * to enabled.
   * </pre>
   *
   * <code>.envoy.api.v2.core.RuntimeFeatureFlag runtime_enabled = 3;</code>
   */
  @java.lang.Override
  public io.envoyproxy.envoy.api.v2.core.RuntimeFeatureFlagOrBuilder getRuntimeEnabledOrBuilder() {
    return getRuntimeEnabled();
  }

  private byte memoizedIsInitialized = -1;
  @java.lang.Override
  public final boolean isInitialized() {
    byte isInitialized = memoizedIsInitialized;
    if (isInitialized == 1) return true;
    if (isInitialized == 0) return false;

    memoizedIsInitialized = 1;
    return true;
  }

  @java.lang.Override
  public void writeTo(com.google.protobuf.CodedOutputStream output)
                      throws java.io.IOException {
    if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(statPrefix_)) {
      com.google.protobuf.GeneratedMessageV3.writeString(output, 1, statPrefix_);
    }
    if (tokenBucket_ != null) {
      output.writeMessage(2, getTokenBucket());
    }
    if (runtimeEnabled_ != null) {
      output.writeMessage(3, getRuntimeEnabled());
    }
    unknownFields.writeTo(output);
  }

  @java.lang.Override
  public int getSerializedSize() {
    int size = memoizedSize;
    if (size != -1) return size;

    size = 0;
    if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(statPrefix_)) {
      size += com.google.protobuf.GeneratedMessageV3.computeStringSize(1, statPrefix_);
    }
    if (tokenBucket_ != null) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(2, getTokenBucket());
    }
    if (runtimeEnabled_ != null) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(3, getRuntimeEnabled());
    }
    size += unknownFields.getSerializedSize();
    memoizedSize = size;
    return size;
  }

  @java.lang.Override
  public boolean equals(final java.lang.Object obj) {
    if (obj == this) {
     return true;
    }
    if (!(obj instanceof io.envoyproxy.envoy.config.filter.network.local_rate_limit.v2alpha.LocalRateLimit)) {
      return super.equals(obj);
    }
    io.envoyproxy.envoy.config.filter.network.local_rate_limit.v2alpha.LocalRateLimit other = (io.envoyproxy.envoy.config.filter.network.local_rate_limit.v2alpha.LocalRateLimit) obj;

    if (!getStatPrefix()
        .equals(other.getStatPrefix())) return false;
    if (hasTokenBucket() != other.hasTokenBucket()) return false;
    if (hasTokenBucket()) {
      if (!getTokenBucket()
          .equals(other.getTokenBucket())) return false;
    }
    if (hasRuntimeEnabled() != other.hasRuntimeEnabled()) return false;
    if (hasRuntimeEnabled()) {
      if (!getRuntimeEnabled()
          .equals(other.getRuntimeEnabled())) return false;
    }
    if (!unknownFields.equals(other.unknownFields)) return false;
    return true;
  }

  @java.lang.Override
  public int hashCode() {
    if (memoizedHashCode != 0) {
      return memoizedHashCode;
    }
    int hash = 41;
    hash = (19 * hash) + getDescriptor().hashCode();
    hash = (37 * hash) + STAT_PREFIX_FIELD_NUMBER;
    hash = (53 * hash) + getStatPrefix().hashCode();
    if (hasTokenBucket()) {
      hash = (37 * hash) + TOKEN_BUCKET_FIELD_NUMBER;
      hash = (53 * hash) + getTokenBucket().hashCode();
    }
    if (hasRuntimeEnabled()) {
      hash = (37 * hash) + RUNTIME_ENABLED_FIELD_NUMBER;
      hash = (53 * hash) + getRuntimeEnabled().hashCode();
    }
    hash = (29 * hash) + unknownFields.hashCode();
    memoizedHashCode = hash;
    return hash;
  }

  public static io.envoyproxy.envoy.config.filter.network.local_rate_limit.v2alpha.LocalRateLimit parseFrom(
      java.nio.ByteBuffer data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static io.envoyproxy.envoy.config.filter.network.local_rate_limit.v2alpha.LocalRateLimit parseFrom(
      java.nio.ByteBuffer data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static io.envoyproxy.envoy.config.filter.network.local_rate_limit.v2alpha.LocalRateLimit parseFrom(
      com.google.protobuf.ByteString data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static io.envoyproxy.envoy.config.filter.network.local_rate_limit.v2alpha.LocalRateLimit parseFrom(
      com.google.protobuf.ByteString data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static io.envoyproxy.envoy.config.filter.network.local_rate_limit.v2alpha.LocalRateLimit parseFrom(byte[] data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static io.envoyproxy.envoy.config.filter.network.local_rate_limit.v2alpha.LocalRateLimit parseFrom(
      byte[] data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static io.envoyproxy.envoy.config.filter.network.local_rate_limit.v2alpha.LocalRateLimit parseFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input);
  }
  public static io.envoyproxy.envoy.config.filter.network.local_rate_limit.v2alpha.LocalRateLimit parseFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input, extensionRegistry);
  }
  public static io.envoyproxy.envoy.config.filter.network.local_rate_limit.v2alpha.LocalRateLimit parseDelimitedFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseDelimitedWithIOException(PARSER, input);
  }
  public static io.envoyproxy.envoy.config.filter.network.local_rate_limit.v2alpha.LocalRateLimit parseDelimitedFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
  }
  public static io.envoyproxy.envoy.config.filter.network.local_rate_limit.v2alpha.LocalRateLimit parseFrom(
      com.google.protobuf.CodedInputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input);
  }
  public static io.envoyproxy.envoy.config.filter.network.local_rate_limit.v2alpha.LocalRateLimit parseFrom(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input, extensionRegistry);
  }

  @java.lang.Override
  public Builder newBuilderForType() { return newBuilder(); }
  public static Builder newBuilder() {
    return DEFAULT_INSTANCE.toBuilder();
  }
  public static Builder newBuilder(io.envoyproxy.envoy.config.filter.network.local_rate_limit.v2alpha.LocalRateLimit prototype) {
    return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
  }
  @java.lang.Override
  public Builder toBuilder() {
    return this == DEFAULT_INSTANCE
        ? new Builder() : new Builder().mergeFrom(this);
  }

  @java.lang.Override
  protected Builder newBuilderForType(
      com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
    Builder builder = new Builder(parent);
    return builder;
  }
  /**
   * Protobuf type {@code envoy.config.filter.network.local_rate_limit.v2alpha.LocalRateLimit}
   */
  public static final class Builder extends
      com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
      // @@protoc_insertion_point(builder_implements:envoy.config.filter.network.local_rate_limit.v2alpha.LocalRateLimit)
      io.envoyproxy.envoy.config.filter.network.local_rate_limit.v2alpha.LocalRateLimitOrBuilder {
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return io.envoyproxy.envoy.config.filter.network.local_rate_limit.v2alpha.LocalRateLimitProto.internal_static_envoy_config_filter_network_local_rate_limit_v2alpha_LocalRateLimit_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return io.envoyproxy.envoy.config.filter.network.local_rate_limit.v2alpha.LocalRateLimitProto.internal_static_envoy_config_filter_network_local_rate_limit_v2alpha_LocalRateLimit_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              io.envoyproxy.envoy.config.filter.network.local_rate_limit.v2alpha.LocalRateLimit.class, io.envoyproxy.envoy.config.filter.network.local_rate_limit.v2alpha.LocalRateLimit.Builder.class);
    }

    // Construct using io.envoyproxy.envoy.config.filter.network.local_rate_limit.v2alpha.LocalRateLimit.newBuilder()
    private Builder() {
      maybeForceBuilderInitialization();
    }

    private Builder(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      super(parent);
      maybeForceBuilderInitialization();
    }
    private void maybeForceBuilderInitialization() {
      if (com.google.protobuf.GeneratedMessageV3
              .alwaysUseFieldBuilders) {
      }
    }
    @java.lang.Override
    public Builder clear() {
      super.clear();
      statPrefix_ = "";

      if (tokenBucketBuilder_ == null) {
        tokenBucket_ = null;
      } else {
        tokenBucket_ = null;
        tokenBucketBuilder_ = null;
      }
      if (runtimeEnabledBuilder_ == null) {
        runtimeEnabled_ = null;
      } else {
        runtimeEnabled_ = null;
        runtimeEnabledBuilder_ = null;
      }
      return this;
    }

    @java.lang.Override
    public com.google.protobuf.Descriptors.Descriptor
        getDescriptorForType() {
      return io.envoyproxy.envoy.config.filter.network.local_rate_limit.v2alpha.LocalRateLimitProto.internal_static_envoy_config_filter_network_local_rate_limit_v2alpha_LocalRateLimit_descriptor;
    }

    @java.lang.Override
    public io.envoyproxy.envoy.config.filter.network.local_rate_limit.v2alpha.LocalRateLimit getDefaultInstanceForType() {
      return io.envoyproxy.envoy.config.filter.network.local_rate_limit.v2alpha.LocalRateLimit.getDefaultInstance();
    }

    @java.lang.Override
    public io.envoyproxy.envoy.config.filter.network.local_rate_limit.v2alpha.LocalRateLimit build() {
      io.envoyproxy.envoy.config.filter.network.local_rate_limit.v2alpha.LocalRateLimit result = buildPartial();
      if (!result.isInitialized()) {
        throw newUninitializedMessageException(result);
      }
      return result;
    }

    @java.lang.Override
    public io.envoyproxy.envoy.config.filter.network.local_rate_limit.v2alpha.LocalRateLimit buildPartial() {
      io.envoyproxy.envoy.config.filter.network.local_rate_limit.v2alpha.LocalRateLimit result = new io.envoyproxy.envoy.config.filter.network.local_rate_limit.v2alpha.LocalRateLimit(this);
      result.statPrefix_ = statPrefix_;
      if (tokenBucketBuilder_ == null) {
        result.tokenBucket_ = tokenBucket_;
      } else {
        result.tokenBucket_ = tokenBucketBuilder_.build();
      }
      if (runtimeEnabledBuilder_ == null) {
        result.runtimeEnabled_ = runtimeEnabled_;
      } else {
        result.runtimeEnabled_ = runtimeEnabledBuilder_.build();
      }
      onBuilt();
      return result;
    }

    @java.lang.Override
    public Builder clone() {
      return super.clone();
    }
    @java.lang.Override
    public Builder setField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        java.lang.Object value) {
      return super.setField(field, value);
    }
    @java.lang.Override
    public Builder clearField(
        com.google.protobuf.Descriptors.FieldDescriptor field) {
      return super.clearField(field);
    }
    @java.lang.Override
    public Builder clearOneof(
        com.google.protobuf.Descriptors.OneofDescriptor oneof) {
      return super.clearOneof(oneof);
    }
    @java.lang.Override
    public Builder setRepeatedField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        int index, java.lang.Object value) {
      return super.setRepeatedField(field, index, value);
    }
    @java.lang.Override
    public Builder addRepeatedField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        java.lang.Object value) {
      return super.addRepeatedField(field, value);
    }
    @java.lang.Override
    public Builder mergeFrom(com.google.protobuf.Message other) {
      if (other instanceof io.envoyproxy.envoy.config.filter.network.local_rate_limit.v2alpha.LocalRateLimit) {
        return mergeFrom((io.envoyproxy.envoy.config.filter.network.local_rate_limit.v2alpha.LocalRateLimit)other);
      } else {
        super.mergeFrom(other);
        return this;
      }
    }

    public Builder mergeFrom(io.envoyproxy.envoy.config.filter.network.local_rate_limit.v2alpha.LocalRateLimit other) {
      if (other == io.envoyproxy.envoy.config.filter.network.local_rate_limit.v2alpha.LocalRateLimit.getDefaultInstance()) return this;
      if (!other.getStatPrefix().isEmpty()) {
        statPrefix_ = other.statPrefix_;
        onChanged();
      }
      if (other.hasTokenBucket()) {
        mergeTokenBucket(other.getTokenBucket());
      }
      if (other.hasRuntimeEnabled()) {
        mergeRuntimeEnabled(other.getRuntimeEnabled());
      }
      this.mergeUnknownFields(other.unknownFields);
      onChanged();
      return this;
    }

    @java.lang.Override
    public final boolean isInitialized() {
      return true;
    }

    @java.lang.Override
    public Builder mergeFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      io.envoyproxy.envoy.config.filter.network.local_rate_limit.v2alpha.LocalRateLimit parsedMessage = null;
      try {
        parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        parsedMessage = (io.envoyproxy.envoy.config.filter.network.local_rate_limit.v2alpha.LocalRateLimit) e.getUnfinishedMessage();
        throw e.unwrapIOException();
      } finally {
        if (parsedMessage != null) {
          mergeFrom(parsedMessage);
        }
      }
      return this;
    }

    private java.lang.Object statPrefix_ = "";
    /**
     * <pre>
     * The prefix to use when emitting :ref:`statistics
     * &lt;config_network_filters_local_rate_limit_stats&gt;`.
     * </pre>
     *
     * <code>string stat_prefix = 1 [(.validate.rules) = { ... }</code>
     * @return The statPrefix.
     */
    public java.lang.String getStatPrefix() {
      java.lang.Object ref = statPrefix_;
      if (!(ref instanceof java.lang.String)) {
        com.google.protobuf.ByteString bs =
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        statPrefix_ = s;
        return s;
      } else {
        return (java.lang.String) ref;
      }
    }
    /**
     * <pre>
     * The prefix to use when emitting :ref:`statistics
     * &lt;config_network_filters_local_rate_limit_stats&gt;`.
     * </pre>
     *
     * <code>string stat_prefix = 1 [(.validate.rules) = { ... }</code>
     * @return The bytes for statPrefix.
     */
    public com.google.protobuf.ByteString
        getStatPrefixBytes() {
      java.lang.Object ref = statPrefix_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        statPrefix_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }
    /**
     * <pre>
     * The prefix to use when emitting :ref:`statistics
     * &lt;config_network_filters_local_rate_limit_stats&gt;`.
     * </pre>
     *
     * <code>string stat_prefix = 1 [(.validate.rules) = { ... }</code>
     * @param value The statPrefix to set.
     * @return This builder for chaining.
     */
    public Builder setStatPrefix(
        java.lang.String value) {
      if (value == null) {
    throw new NullPointerException();
  }
  
      statPrefix_ = value;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * The prefix to use when emitting :ref:`statistics
     * &lt;config_network_filters_local_rate_limit_stats&gt;`.
     * </pre>
     *
     * <code>string stat_prefix = 1 [(.validate.rules) = { ... }</code>
     * @return This builder for chaining.
     */
    public Builder clearStatPrefix() {
      
      statPrefix_ = getDefaultInstance().getStatPrefix();
      onChanged();
      return this;
    }
    /**
     * <pre>
     * The prefix to use when emitting :ref:`statistics
     * &lt;config_network_filters_local_rate_limit_stats&gt;`.
     * </pre>
     *
     * <code>string stat_prefix = 1 [(.validate.rules) = { ... }</code>
     * @param value The bytes for statPrefix to set.
     * @return This builder for chaining.
     */
    public Builder setStatPrefixBytes(
        com.google.protobuf.ByteString value) {
      if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
      
      statPrefix_ = value;
      onChanged();
      return this;
    }

    private io.envoyproxy.envoy.type.TokenBucket tokenBucket_;
    private com.google.protobuf.SingleFieldBuilderV3<
        io.envoyproxy.envoy.type.TokenBucket, io.envoyproxy.envoy.type.TokenBucket.Builder, io.envoyproxy.envoy.type.TokenBucketOrBuilder> tokenBucketBuilder_;
    /**
     * <pre>
     * The token bucket configuration to use for rate limiting connections that are processed by the
     * filter's filter chain. Each incoming connection processed by the filter consumes a single
     * token. If the token is available, the connection will be allowed. If no tokens are available,
     * the connection will be immediately closed.
     * .. note::
     *   In the current implementation each filter and filter chain has an independent rate limit.
     * .. note::
     *   In the current implementation the token bucket's :ref:`fill_interval
     *   &lt;envoy_api_field_type.TokenBucket.fill_interval&gt;` must be &gt;= 50ms to avoid too aggressive
     *   refills.
     * </pre>
     *
     * <code>.envoy.type.TokenBucket token_bucket = 2 [(.validate.rules) = { ... }</code>
     * @return Whether the tokenBucket field is set.
     */
    public boolean hasTokenBucket() {
      return tokenBucketBuilder_ != null || tokenBucket_ != null;
    }
    /**
     * <pre>
     * The token bucket configuration to use for rate limiting connections that are processed by the
     * filter's filter chain. Each incoming connection processed by the filter consumes a single
     * token. If the token is available, the connection will be allowed. If no tokens are available,
     * the connection will be immediately closed.
     * .. note::
     *   In the current implementation each filter and filter chain has an independent rate limit.
     * .. note::
     *   In the current implementation the token bucket's :ref:`fill_interval
     *   &lt;envoy_api_field_type.TokenBucket.fill_interval&gt;` must be &gt;= 50ms to avoid too aggressive
     *   refills.
     * </pre>
     *
     * <code>.envoy.type.TokenBucket token_bucket = 2 [(.validate.rules) = { ... }</code>
     * @return The tokenBucket.
     */
    public io.envoyproxy.envoy.type.TokenBucket getTokenBucket() {
      if (tokenBucketBuilder_ == null) {
        return tokenBucket_ == null ? io.envoyproxy.envoy.type.TokenBucket.getDefaultInstance() : tokenBucket_;
      } else {
        return tokenBucketBuilder_.getMessage();
      }
    }
    /**
     * <pre>
     * The token bucket configuration to use for rate limiting connections that are processed by the
     * filter's filter chain. Each incoming connection processed by the filter consumes a single
     * token. If the token is available, the connection will be allowed. If no tokens are available,
     * the connection will be immediately closed.
     * .. note::
     *   In the current implementation each filter and filter chain has an independent rate limit.
     * .. note::
     *   In the current implementation the token bucket's :ref:`fill_interval
     *   &lt;envoy_api_field_type.TokenBucket.fill_interval&gt;` must be &gt;= 50ms to avoid too aggressive
     *   refills.
     * </pre>
     *
     * <code>.envoy.type.TokenBucket token_bucket = 2 [(.validate.rules) = { ... }</code>
     */
    public Builder setTokenBucket(io.envoyproxy.envoy.type.TokenBucket value) {
      if (tokenBucketBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        tokenBucket_ = value;
        onChanged();
      } else {
        tokenBucketBuilder_.setMessage(value);
      }

      return this;
    }
    /**
     * <pre>
     * The token bucket configuration to use for rate limiting connections that are processed by the
     * filter's filter chain. Each incoming connection processed by the filter consumes a single
     * token. If the token is available, the connection will be allowed. If no tokens are available,
     * the connection will be immediately closed.
     * .. note::
     *   In the current implementation each filter and filter chain has an independent rate limit.
     * .. note::
     *   In the current implementation the token bucket's :ref:`fill_interval
     *   &lt;envoy_api_field_type.TokenBucket.fill_interval&gt;` must be &gt;= 50ms to avoid too aggressive
     *   refills.
     * </pre>
     *
     * <code>.envoy.type.TokenBucket token_bucket = 2 [(.validate.rules) = { ... }</code>
     */
    public Builder setTokenBucket(
        io.envoyproxy.envoy.type.TokenBucket.Builder builderForValue) {
      if (tokenBucketBuilder_ == null) {
        tokenBucket_ = builderForValue.build();
        onChanged();
      } else {
        tokenBucketBuilder_.setMessage(builderForValue.build());
      }

      return this;
    }
    /**
     * <pre>
     * The token bucket configuration to use for rate limiting connections that are processed by the
     * filter's filter chain. Each incoming connection processed by the filter consumes a single
     * token. If the token is available, the connection will be allowed. If no tokens are available,
     * the connection will be immediately closed.
     * .. note::
     *   In the current implementation each filter and filter chain has an independent rate limit.
     * .. note::
     *   In the current implementation the token bucket's :ref:`fill_interval
     *   &lt;envoy_api_field_type.TokenBucket.fill_interval&gt;` must be &gt;= 50ms to avoid too aggressive
     *   refills.
     * </pre>
     *
     * <code>.envoy.type.TokenBucket token_bucket = 2 [(.validate.rules) = { ... }</code>
     */
    public Builder mergeTokenBucket(io.envoyproxy.envoy.type.TokenBucket value) {
      if (tokenBucketBuilder_ == null) {
        if (tokenBucket_ != null) {
          tokenBucket_ =
            io.envoyproxy.envoy.type.TokenBucket.newBuilder(tokenBucket_).mergeFrom(value).buildPartial();
        } else {
          tokenBucket_ = value;
        }
        onChanged();
      } else {
        tokenBucketBuilder_.mergeFrom(value);
      }

      return this;
    }
    /**
     * <pre>
     * The token bucket configuration to use for rate limiting connections that are processed by the
     * filter's filter chain. Each incoming connection processed by the filter consumes a single
     * token. If the token is available, the connection will be allowed. If no tokens are available,
     * the connection will be immediately closed.
     * .. note::
     *   In the current implementation each filter and filter chain has an independent rate limit.
     * .. note::
     *   In the current implementation the token bucket's :ref:`fill_interval
     *   &lt;envoy_api_field_type.TokenBucket.fill_interval&gt;` must be &gt;= 50ms to avoid too aggressive
     *   refills.
     * </pre>
     *
     * <code>.envoy.type.TokenBucket token_bucket = 2 [(.validate.rules) = { ... }</code>
     */
    public Builder clearTokenBucket() {
      if (tokenBucketBuilder_ == null) {
        tokenBucket_ = null;
        onChanged();
      } else {
        tokenBucket_ = null;
        tokenBucketBuilder_ = null;
      }

      return this;
    }
    /**
     * <pre>
     * The token bucket configuration to use for rate limiting connections that are processed by the
     * filter's filter chain. Each incoming connection processed by the filter consumes a single
     * token. If the token is available, the connection will be allowed. If no tokens are available,
     * the connection will be immediately closed.
     * .. note::
     *   In the current implementation each filter and filter chain has an independent rate limit.
     * .. note::
     *   In the current implementation the token bucket's :ref:`fill_interval
     *   &lt;envoy_api_field_type.TokenBucket.fill_interval&gt;` must be &gt;= 50ms to avoid too aggressive
     *   refills.
     * </pre>
     *
     * <code>.envoy.type.TokenBucket token_bucket = 2 [(.validate.rules) = { ... }</code>
     */
    public io.envoyproxy.envoy.type.TokenBucket.Builder getTokenBucketBuilder() {
      
      onChanged();
      return getTokenBucketFieldBuilder().getBuilder();
    }
    /**
     * <pre>
     * The token bucket configuration to use for rate limiting connections that are processed by the
     * filter's filter chain. Each incoming connection processed by the filter consumes a single
     * token. If the token is available, the connection will be allowed. If no tokens are available,
     * the connection will be immediately closed.
     * .. note::
     *   In the current implementation each filter and filter chain has an independent rate limit.
     * .. note::
     *   In the current implementation the token bucket's :ref:`fill_interval
     *   &lt;envoy_api_field_type.TokenBucket.fill_interval&gt;` must be &gt;= 50ms to avoid too aggressive
     *   refills.
     * </pre>
     *
     * <code>.envoy.type.TokenBucket token_bucket = 2 [(.validate.rules) = { ... }</code>
     */
    public io.envoyproxy.envoy.type.TokenBucketOrBuilder getTokenBucketOrBuilder() {
      if (tokenBucketBuilder_ != null) {
        return tokenBucketBuilder_.getMessageOrBuilder();
      } else {
        return tokenBucket_ == null ?
            io.envoyproxy.envoy.type.TokenBucket.getDefaultInstance() : tokenBucket_;
      }
    }
    /**
     * <pre>
     * The token bucket configuration to use for rate limiting connections that are processed by the
     * filter's filter chain. Each incoming connection processed by the filter consumes a single
     * token. If the token is available, the connection will be allowed. If no tokens are available,
     * the connection will be immediately closed.
     * .. note::
     *   In the current implementation each filter and filter chain has an independent rate limit.
     * .. note::
     *   In the current implementation the token bucket's :ref:`fill_interval
     *   &lt;envoy_api_field_type.TokenBucket.fill_interval&gt;` must be &gt;= 50ms to avoid too aggressive
     *   refills.
     * </pre>
     *
     * <code>.envoy.type.TokenBucket token_bucket = 2 [(.validate.rules) = { ... }</code>
     */
    private com.google.protobuf.SingleFieldBuilderV3<
        io.envoyproxy.envoy.type.TokenBucket, io.envoyproxy.envoy.type.TokenBucket.Builder, io.envoyproxy.envoy.type.TokenBucketOrBuilder> 
        getTokenBucketFieldBuilder() {
      if (tokenBucketBuilder_ == null) {
        tokenBucketBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
            io.envoyproxy.envoy.type.TokenBucket, io.envoyproxy.envoy.type.TokenBucket.Builder, io.envoyproxy.envoy.type.TokenBucketOrBuilder>(
                getTokenBucket(),
                getParentForChildren(),
                isClean());
        tokenBucket_ = null;
      }
      return tokenBucketBuilder_;
    }

    private io.envoyproxy.envoy.api.v2.core.RuntimeFeatureFlag runtimeEnabled_;
    private com.google.protobuf.SingleFieldBuilderV3<
        io.envoyproxy.envoy.api.v2.core.RuntimeFeatureFlag, io.envoyproxy.envoy.api.v2.core.RuntimeFeatureFlag.Builder, io.envoyproxy.envoy.api.v2.core.RuntimeFeatureFlagOrBuilder> runtimeEnabledBuilder_;
    /**
     * <pre>
     * Runtime flag that controls whether the filter is enabled or not. If not specified, defaults
     * to enabled.
     * </pre>
     *
     * <code>.envoy.api.v2.core.RuntimeFeatureFlag runtime_enabled = 3;</code>
     * @return Whether the runtimeEnabled field is set.
     */
    public boolean hasRuntimeEnabled() {
      return runtimeEnabledBuilder_ != null || runtimeEnabled_ != null;
    }
    /**
     * <pre>
     * Runtime flag that controls whether the filter is enabled or not. If not specified, defaults
     * to enabled.
     * </pre>
     *
     * <code>.envoy.api.v2.core.RuntimeFeatureFlag runtime_enabled = 3;</code>
     * @return The runtimeEnabled.
     */
    public io.envoyproxy.envoy.api.v2.core.RuntimeFeatureFlag getRuntimeEnabled() {
      if (runtimeEnabledBuilder_ == null) {
        return runtimeEnabled_ == null ? io.envoyproxy.envoy.api.v2.core.RuntimeFeatureFlag.getDefaultInstance() : runtimeEnabled_;
      } else {
        return runtimeEnabledBuilder_.getMessage();
      }
    }
    /**
     * <pre>
     * Runtime flag that controls whether the filter is enabled or not. If not specified, defaults
     * to enabled.
     * </pre>
     *
     * <code>.envoy.api.v2.core.RuntimeFeatureFlag runtime_enabled = 3;</code>
     */
    public Builder setRuntimeEnabled(io.envoyproxy.envoy.api.v2.core.RuntimeFeatureFlag value) {
      if (runtimeEnabledBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        runtimeEnabled_ = value;
        onChanged();
      } else {
        runtimeEnabledBuilder_.setMessage(value);
      }

      return this;
    }
    /**
     * <pre>
     * Runtime flag that controls whether the filter is enabled or not. If not specified, defaults
     * to enabled.
     * </pre>
     *
     * <code>.envoy.api.v2.core.RuntimeFeatureFlag runtime_enabled = 3;</code>
     */
    public Builder setRuntimeEnabled(
        io.envoyproxy.envoy.api.v2.core.RuntimeFeatureFlag.Builder builderForValue) {
      if (runtimeEnabledBuilder_ == null) {
        runtimeEnabled_ = builderForValue.build();
        onChanged();
      } else {
        runtimeEnabledBuilder_.setMessage(builderForValue.build());
      }

      return this;
    }
    /**
     * <pre>
     * Runtime flag that controls whether the filter is enabled or not. If not specified, defaults
     * to enabled.
     * </pre>
     *
     * <code>.envoy.api.v2.core.RuntimeFeatureFlag runtime_enabled = 3;</code>
     */
    public Builder mergeRuntimeEnabled(io.envoyproxy.envoy.api.v2.core.RuntimeFeatureFlag value) {
      if (runtimeEnabledBuilder_ == null) {
        if (runtimeEnabled_ != null) {
          runtimeEnabled_ =
            io.envoyproxy.envoy.api.v2.core.RuntimeFeatureFlag.newBuilder(runtimeEnabled_).mergeFrom(value).buildPartial();
        } else {
          runtimeEnabled_ = value;
        }
        onChanged();
      } else {
        runtimeEnabledBuilder_.mergeFrom(value);
      }

      return this;
    }
    /**
     * <pre>
     * Runtime flag that controls whether the filter is enabled or not. If not specified, defaults
     * to enabled.
     * </pre>
     *
     * <code>.envoy.api.v2.core.RuntimeFeatureFlag runtime_enabled = 3;</code>
     */
    public Builder clearRuntimeEnabled() {
      if (runtimeEnabledBuilder_ == null) {
        runtimeEnabled_ = null;
        onChanged();
      } else {
        runtimeEnabled_ = null;
        runtimeEnabledBuilder_ = null;
      }

      return this;
    }
    /**
     * <pre>
     * Runtime flag that controls whether the filter is enabled or not. If not specified, defaults
     * to enabled.
     * </pre>
     *
     * <code>.envoy.api.v2.core.RuntimeFeatureFlag runtime_enabled = 3;</code>
     */
    public io.envoyproxy.envoy.api.v2.core.RuntimeFeatureFlag.Builder getRuntimeEnabledBuilder() {
      
      onChanged();
      return getRuntimeEnabledFieldBuilder().getBuilder();
    }
    /**
     * <pre>
     * Runtime flag that controls whether the filter is enabled or not. If not specified, defaults
     * to enabled.
     * </pre>
     *
     * <code>.envoy.api.v2.core.RuntimeFeatureFlag runtime_enabled = 3;</code>
     */
    public io.envoyproxy.envoy.api.v2.core.RuntimeFeatureFlagOrBuilder getRuntimeEnabledOrBuilder() {
      if (runtimeEnabledBuilder_ != null) {
        return runtimeEnabledBuilder_.getMessageOrBuilder();
      } else {
        return runtimeEnabled_ == null ?
            io.envoyproxy.envoy.api.v2.core.RuntimeFeatureFlag.getDefaultInstance() : runtimeEnabled_;
      }
    }
    /**
     * <pre>
     * Runtime flag that controls whether the filter is enabled or not. If not specified, defaults
     * to enabled.
     * </pre>
     *
     * <code>.envoy.api.v2.core.RuntimeFeatureFlag runtime_enabled = 3;</code>
     */
    private com.google.protobuf.SingleFieldBuilderV3<
        io.envoyproxy.envoy.api.v2.core.RuntimeFeatureFlag, io.envoyproxy.envoy.api.v2.core.RuntimeFeatureFlag.Builder, io.envoyproxy.envoy.api.v2.core.RuntimeFeatureFlagOrBuilder> 
        getRuntimeEnabledFieldBuilder() {
      if (runtimeEnabledBuilder_ == null) {
        runtimeEnabledBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
            io.envoyproxy.envoy.api.v2.core.RuntimeFeatureFlag, io.envoyproxy.envoy.api.v2.core.RuntimeFeatureFlag.Builder, io.envoyproxy.envoy.api.v2.core.RuntimeFeatureFlagOrBuilder>(
                getRuntimeEnabled(),
                getParentForChildren(),
                isClean());
        runtimeEnabled_ = null;
      }
      return runtimeEnabledBuilder_;
    }
    @java.lang.Override
    public final Builder setUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return super.setUnknownFields(unknownFields);
    }

    @java.lang.Override
    public final Builder mergeUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return super.mergeUnknownFields(unknownFields);
    }


    // @@protoc_insertion_point(builder_scope:envoy.config.filter.network.local_rate_limit.v2alpha.LocalRateLimit)
  }

  // @@protoc_insertion_point(class_scope:envoy.config.filter.network.local_rate_limit.v2alpha.LocalRateLimit)
  private static final io.envoyproxy.envoy.config.filter.network.local_rate_limit.v2alpha.LocalRateLimit DEFAULT_INSTANCE;
  static {
    DEFAULT_INSTANCE = new io.envoyproxy.envoy.config.filter.network.local_rate_limit.v2alpha.LocalRateLimit();
  }

  public static io.envoyproxy.envoy.config.filter.network.local_rate_limit.v2alpha.LocalRateLimit getDefaultInstance() {
    return DEFAULT_INSTANCE;
  }

  private static final com.google.protobuf.Parser<LocalRateLimit>
      PARSER = new com.google.protobuf.AbstractParser<LocalRateLimit>() {
    @java.lang.Override
    public LocalRateLimit parsePartialFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return new LocalRateLimit(input, extensionRegistry);
    }
  };

  public static com.google.protobuf.Parser<LocalRateLimit> parser() {
    return PARSER;
  }

  @java.lang.Override
  public com.google.protobuf.Parser<LocalRateLimit> getParserForType() {
    return PARSER;
  }

  @java.lang.Override
  public io.envoyproxy.envoy.config.filter.network.local_rate_limit.v2alpha.LocalRateLimit getDefaultInstanceForType() {
    return DEFAULT_INSTANCE;
  }

}

