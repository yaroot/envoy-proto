// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: envoy/config/filter/network/dubbo_proxy/v2alpha1/route.proto

package io.envoyproxy.envoy.config.filter.network.dubbo_proxy.v2alpha1;

public interface MethodMatchOrBuilder extends
    // @@protoc_insertion_point(interface_extends:envoy.config.filter.network.dubbo_proxy.v2alpha1.MethodMatch)
    com.google.protobuf.MessageOrBuilder {

  /**
   * <pre>
   * The name of the method.
   * </pre>
   *
   * <code>.envoy.type.matcher.StringMatcher name = 1;</code>
   * @return Whether the name field is set.
   */
  boolean hasName();
  /**
   * <pre>
   * The name of the method.
   * </pre>
   *
   * <code>.envoy.type.matcher.StringMatcher name = 1;</code>
   * @return The name.
   */
  io.envoyproxy.envoy.type.matcher.StringMatcher getName();
  /**
   * <pre>
   * The name of the method.
   * </pre>
   *
   * <code>.envoy.type.matcher.StringMatcher name = 1;</code>
   */
  io.envoyproxy.envoy.type.matcher.StringMatcherOrBuilder getNameOrBuilder();

  /**
   * <pre>
   * Method parameter definition.
   * The key is the parameter index, starting from 0.
   * The value is the parameter matching type.
   * </pre>
   *
   * <code>map&lt;uint32, .envoy.config.filter.network.dubbo_proxy.v2alpha1.MethodMatch.ParameterMatchSpecifier&gt; params_match = 2;</code>
   */
  int getParamsMatchCount();
  /**
   * <pre>
   * Method parameter definition.
   * The key is the parameter index, starting from 0.
   * The value is the parameter matching type.
   * </pre>
   *
   * <code>map&lt;uint32, .envoy.config.filter.network.dubbo_proxy.v2alpha1.MethodMatch.ParameterMatchSpecifier&gt; params_match = 2;</code>
   */
  boolean containsParamsMatch(
      int key);
  /**
   * Use {@link #getParamsMatchMap()} instead.
   */
  @java.lang.Deprecated
  java.util.Map<java.lang.Integer, io.envoyproxy.envoy.config.filter.network.dubbo_proxy.v2alpha1.MethodMatch.ParameterMatchSpecifier>
  getParamsMatch();
  /**
   * <pre>
   * Method parameter definition.
   * The key is the parameter index, starting from 0.
   * The value is the parameter matching type.
   * </pre>
   *
   * <code>map&lt;uint32, .envoy.config.filter.network.dubbo_proxy.v2alpha1.MethodMatch.ParameterMatchSpecifier&gt; params_match = 2;</code>
   */
  java.util.Map<java.lang.Integer, io.envoyproxy.envoy.config.filter.network.dubbo_proxy.v2alpha1.MethodMatch.ParameterMatchSpecifier>
  getParamsMatchMap();
  /**
   * <pre>
   * Method parameter definition.
   * The key is the parameter index, starting from 0.
   * The value is the parameter matching type.
   * </pre>
   *
   * <code>map&lt;uint32, .envoy.config.filter.network.dubbo_proxy.v2alpha1.MethodMatch.ParameterMatchSpecifier&gt; params_match = 2;</code>
   */

  /* nullable */
io.envoyproxy.envoy.config.filter.network.dubbo_proxy.v2alpha1.MethodMatch.ParameterMatchSpecifier getParamsMatchOrDefault(
      int key,
      /* nullable */
io.envoyproxy.envoy.config.filter.network.dubbo_proxy.v2alpha1.MethodMatch.ParameterMatchSpecifier defaultValue);
  /**
   * <pre>
   * Method parameter definition.
   * The key is the parameter index, starting from 0.
   * The value is the parameter matching type.
   * </pre>
   *
   * <code>map&lt;uint32, .envoy.config.filter.network.dubbo_proxy.v2alpha1.MethodMatch.ParameterMatchSpecifier&gt; params_match = 2;</code>
   */

  io.envoyproxy.envoy.config.filter.network.dubbo_proxy.v2alpha1.MethodMatch.ParameterMatchSpecifier getParamsMatchOrThrow(
      int key);
}
