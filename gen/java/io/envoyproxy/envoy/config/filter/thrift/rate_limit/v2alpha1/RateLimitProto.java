// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: envoy/config/filter/thrift/rate_limit/v2alpha1/rate_limit.proto

package io.envoyproxy.envoy.config.filter.thrift.rate_limit.v2alpha1;

public final class RateLimitProto {
  private RateLimitProto() {}
  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistryLite registry) {
  }

  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistry registry) {
    registerAllExtensions(
        (com.google.protobuf.ExtensionRegistryLite) registry);
  }
  static final com.google.protobuf.Descriptors.Descriptor
    internal_static_envoy_config_filter_thrift_rate_limit_v2alpha1_RateLimit_descriptor;
  static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_envoy_config_filter_thrift_rate_limit_v2alpha1_RateLimit_fieldAccessorTable;

  public static com.google.protobuf.Descriptors.FileDescriptor
      getDescriptor() {
    return descriptor;
  }
  private static  com.google.protobuf.Descriptors.FileDescriptor
      descriptor;
  static {
    java.lang.String[] descriptorData = {
      "\n?envoy/config/filter/thrift/rate_limit/" +
      "v2alpha1/rate_limit.proto\022.envoy.config." +
      "filter.thrift.rate_limit.v2alpha1\032#envoy" +
      "/config/ratelimit/v2/rls.proto\032\036google/p" +
      "rotobuf/duration.proto\032\036udpa/annotations" +
      "/migrate.proto\032\035udpa/annotations/status." +
      "proto\032\027validate/validate.proto\"\334\001\n\tRateL" +
      "imit\022\027\n\006domain\030\001 \001(\tB\007\372B\004r\002 \001\022\026\n\005stage\030\002" +
      " \001(\rB\007\372B\004*\002\030\n\022*\n\007timeout\030\003 \001(\0132\031.google." +
      "protobuf.Duration\022\031\n\021failure_mode_deny\030\004" +
      " \001(\010\022W\n\022rate_limit_service\030\005 \001(\01321.envoy" +
      ".config.ratelimit.v2.RateLimitServiceCon" +
      "figB\010\372B\005\212\001\002\020\001B\371\001\n<io.envoyproxy.envoy.co" +
      "nfig.filter.thrift.rate_limit.v2alpha1B\016" +
      "RateLimitProtoP\001ZUgithub.com/envoyproxy/" +
      "go-control-plane/envoy/config/filter/thr" +
      "ift/rate_limit/v2alpha1\362\230\376\217\005D\022Benvoy.ext" +
      "ensions.filters.network.thrift_proxy.fil" +
      "ters.ratelimit.v3\272\200\310\321\006\002\020\001b\006proto3"
    };
    descriptor = com.google.protobuf.Descriptors.FileDescriptor
      .internalBuildGeneratedFileFrom(descriptorData,
        new com.google.protobuf.Descriptors.FileDescriptor[] {
          io.envoyproxy.envoy.config.ratelimit.v2.RlsProto.getDescriptor(),
          com.google.protobuf.DurationProto.getDescriptor(),
          udpa.annotations.Migrate.getDescriptor(),
          udpa.annotations.Status.getDescriptor(),
          io.envoyproxy.pgv.validate.Validate.getDescriptor(),
        });
    internal_static_envoy_config_filter_thrift_rate_limit_v2alpha1_RateLimit_descriptor =
      getDescriptor().getMessageTypes().get(0);
    internal_static_envoy_config_filter_thrift_rate_limit_v2alpha1_RateLimit_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_envoy_config_filter_thrift_rate_limit_v2alpha1_RateLimit_descriptor,
        new java.lang.String[] { "Domain", "Stage", "Timeout", "FailureModeDeny", "RateLimitService", });
    com.google.protobuf.ExtensionRegistry registry =
        com.google.protobuf.ExtensionRegistry.newInstance();
    registry.add(udpa.annotations.Migrate.fileMigrate);
    registry.add(udpa.annotations.Status.fileStatus);
    registry.add(io.envoyproxy.pgv.validate.Validate.rules);
    com.google.protobuf.Descriptors.FileDescriptor
        .internalUpdateFileDescriptor(descriptor, registry);
    io.envoyproxy.envoy.config.ratelimit.v2.RlsProto.getDescriptor();
    com.google.protobuf.DurationProto.getDescriptor();
    udpa.annotations.Migrate.getDescriptor();
    udpa.annotations.Status.getDescriptor();
    io.envoyproxy.pgv.validate.Validate.getDescriptor();
  }

  // @@protoc_insertion_point(outer_class_scope)
}
